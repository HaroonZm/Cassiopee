================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def shredder(target, number):
    if int(number) == target:
        # Special case: no cut needed
        print(f"{target} {number}")
        return

    digits = number
    n = len(digits)

    best_sum = -1
    best_partitions = []
    memo = {}

    # dfs(pos, current_sum) returns all partitions from pos with sum <= target - current_sum
    # For performance, store only sets of partitions leading to max sum<=target
    def dfs(pos, current_sum):
        if pos == n:
            return { ((), 0) }  # set of tuples (partition tuple, sum)

        if (pos, current_sum) in memo:
            return memo[(pos, current_sum)]

        res = set()
        max_sum_found = -1

        for end in range(pos+1, n+1):
            part_str = digits[pos:end]
            if part_str[0] == '0':
                # Leading zero not allowed
                continue
            part_val = int(part_str)
            new_sum = current_sum + part_val
            if new_sum <= target:
                # Continue dfs
                next_partitions = dfs(end, new_sum)
                for partition, s in next_partitions:
                    total_sum = part_val + s
                    if total_sum > max_sum_found:
                        max_sum_found = total_sum
                        res = set()
                        res.add(((part_str,) + partition, total_sum))
                    elif total_sum == max_sum_found:
                        res.add(((part_str,) + partition, total_sum))
            else:
                # sum exceeded target
                continue

        memo[(pos, current_sum)] = res
        return res

    partitions = dfs(0,0)
    if not partitions:
        print('error')
        return

    # Get max sum from the found partitions
    max_sum = max(s for _, s in partitions)

    # Filter partitions with max_sum only
    max_partitions = [p for p,s in partitions if s == max_sum]

    if len(max_partitions) == 0:
        print('error')
        return
    if len(max_partitions) > 1:
        # Check if partitions are identical (only differing by representation?), consider order matters, if exactly the same partitions repeated, only one result. Else rejected.
        unique = set(max_partitions)
        if len(unique) > 1:
            print('rejected')
            return

    # else print the unique one
    parts = max_partitions[0]
    # compute the sum
    sum_parts = sum(int(p) for p in parts)
    print(str(sum_parts) + ' ' + ' '.join(parts))


while True:
    line = input().strip()
    if line == '0 0':
        break
    t, num = line.split()
    t = int(t)
    shredder(t,num)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' shred' (ID: 126433)
  → Token d'amorce (pas de prédiction)

Token 2: 'der' (ID: 761)
  → Token d'amorce (pas de prédiction)

Token 3: '(target' (ID: 16247)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0061403075233101845
    2. '.' → logprob: -5.881140232086182
    3. '_' → logprob: -6.631140232086182
    4. ' (' → logprob: -6.881140232086182
    5. ':' → logprob: -8.13114070892334
    6. ''' → logprob: -8.63114070892334
    7. '():' → logprob: -9.25614070892334
    8. ' ' → logprob: -9.50614070892334
    9. '```' → logprob: -9.63114070892334
    10. '"' → logprob: -9.88114070892334

Token 4: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.027685070410370827
    2. ')' → logprob: -3.9026851654052734
    3. ':' → logprob: -5.277685165405273
    4. ',' → logprob: -6.777685165405273
    5. '.' → logprob: -7.277685165405273
    6. '[' → logprob: -10.277685165405273
    7. '):
' → logprob: -10.277685165405273
    8. '(' → logprob: -10.402685165405273
    9. 's' → logprob: -10.902685165405273
    10. '=' → logprob: -11.027685165405273

Token 5: ' number' (ID: 2086)
  Prédit: ' source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' source' → logprob: -0.4911784529685974
    2. ' shred' → logprob: -2.491178512573242
    3. ' depth' → logprob: -2.616178512573242
    4. ' code' → logprob: -3.616178512573242
    5. ' shredd' → logprob: -4.116178512573242
    6. ' items' → logprob: -4.366178512573242
    7. ' delimiter' → logprob: -4.366178512573242
    8. ' data' → logprob: -4.366178512573242
    9. 'source' → logprob: -4.616178512573242
    10. ' input' → logprob: -4.616178512573242

Token 6: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021018963307142258
    2. ')' → logprob: -4.021018981933594
    3. ',' → logprob: -6.521018981933594
    4. ':' → logprob: -7.396018981933594
    5. '=' → logprob: -8.021018981933594
    6. 's' → logprob: -8.771018981933594
    7. '```' → logprob: -9.521018981933594
    8. '):
' → logprob: -9.771018981933594
    9. '_' → logprob: -9.896018981933594
    10. ''):' → logprob: -10.146018981933594

Token 7: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01032777689397335
    2. '   ' → logprob: -5.3853278160095215
    3. '```' → logprob: -6.3853278160095215
    4. ''' → logprob: -7.0103278160095215
    5. '():' → logprob: -7.2603278160095215
    6. '\' → logprob: -7.3853278160095215
    7. ':
' → logprob: -7.7603278160095215
    8. ':return' → logprob: -8.510327339172363
    9. '(' → logprob: -8.635327339172363
    10. '':' → logprob: -8.885327339172363

Token 8: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14278189837932587
    2. '\' → logprob: -2.892781972885132
    3. '```' → logprob: -3.892781972885132
    4. ' ' → logprob: -4.017781734466553
    5. ''' → logprob: -4.642781734466553
    6. '    ' → logprob: -5.392781734466553
    7. ' return' → logprob: -5.392781734466553
    8. '\n' → logprob: -5.517781734466553
    9. '\t' → logprob: -5.517781734466553
    10. 'return' → logprob: -6.017781734466553

Token 9: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5689533948898315
    2. ' not' → logprob: -1.3189533948898315
    3. ' target' → logprob: -2.318953514099121
    4. ' number' → logprob: -2.818953514099121
    5. 'target' → logprob: -4.943953514099121
    6. 'number' → logprob: -7.818953514099121
    7. ' ' → logprob: -8.068953514099121
    8. 'not' → logprob: -8.318953514099121
    9. ' isinstance' → logprob: -9.318953514099121
    10. '  ' → logprob: -9.693953514099121

Token 10: '(number' (ID: 32955)
  Prédit: '(target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.3802565038204193
    2. '(' → logprob: -1.6302565336227417
    3. '(number' → logprob: -2.130256414413452
    4. 'target' → logprob: -6.630256652832031
    5. 'number' → logprob: -9.630256652832031
    6. ' (' → logprob: -10.005256652832031
    7. ' target' → logprob: -10.130256652832031
    8. ')' → logprob: -10.880256652832031
    9. '_target' → logprob: -11.005256652832031
    10. '()' → logprob: -11.130256652832031

Token 11: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0027354476042091846
    2. ' >' → logprob: -6.752735614776611
    3. ' )' → logprob: -7.377735614776611
    4. '>' → logprob: -8.002735137939453
    5. ' <' → logprob: -8.752735137939453
    6. ')>' → logprob: -9.002735137939453
    7. ' >=' → logprob: -9.627735137939453
    8. ' ==' → logprob: -9.877735137939453
    9. ' ' → logprob: -10.002735137939453
    10. ' <=' → logprob: -10.127735137939453

Token 12: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.17550522089004517
    2. ' <' → logprob: -2.3005051612854004
    3. '>' → logprob: -3.5505051612854004
    4. ' <=' → logprob: -4.4255051612854
    5. ' >=' → logprob: -4.8005051612854
    6. ' ' → logprob: -5.6755051612854
    7. ' ==' → logprob: -5.6755051612854
    8. '<' → logprob: -6.0505051612854
    9. ' %' → logprob: -7.3005051612854
    10. ' *' → logprob: -7.5505051612854

Token 13: ' target' (ID: 3783)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28245607018470764
    2. '0' → logprob: -1.4074560403823853
    3. 'target' → logprob: -7.407455921173096
    4. '1' → logprob: -7.782455921173096
    5. ' target' → logprob: -9.032456398010254
    6. ' number' → logprob: -10.532456398010254
    7. 'number' → logprob: -10.532456398010254
    8. '    ' → logprob: -11.032456398010254
    9. '   ' → logprob: -11.157456398010254
    10. '  ' → logprob: -11.407456398010254

Token 14: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00024631983251310885
    2. '.' → logprob: -9.625246047973633
    3. ':
' → logprob: -10.375246047973633
    4. ' :' → logprob: -10.500246047973633
    5. ':return' → logprob: -10.500246047973633
    6. '>' → logprob: -10.625246047973633
    7. '>:' → logprob: -11.250246047973633
    8. '):' → logprob: -11.375246047973633
    9. ':**' → logprob: -11.500246047973633
    10. '+:' → logprob: -11.875246047973633

Token 15: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13607819378376007
    2. ':
' → logprob: -2.761078119277954
    3. '       ' → logprob: -3.011078119277954
    4. ':return' → logprob: -5.011078357696533
    5. '.' → logprob: -5.511078357696533
    6. ' :' → logprob: -7.136078357696533
    7. ' return' → logprob: -7.261078357696533
    8. '\n' → logprob: -7.386078357696533
    9. '    ' → logprob: -8.011077880859375
    10. ' :
' → logprob: -8.136077880859375

Token 16: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15602874755859375
    2. ' return' → logprob: -2.4060287475585938
    3. '\n' → logprob: -3.5310287475585938
    4. 'return' → logprob: -4.156028747558594
    5. '           ' → logprob: -5.781028747558594
    6. '   ' → logprob: -6.156028747558594
    7. '\' → logprob: -6.656028747558594
    8. '    ' → logprob: -7.531028747558594
    9. ' \' → logprob: -7.531028747558594
    10. ':return' → logprob: -8.031028747558594

Token 17: ' Special' (ID: 12586)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9992265701293945
    2. 'return' → logprob: -1.3742265701293945
    3. '    ' → logprob: -1.6242265701293945
    4. ' ' → logprob: -1.9992265701293945
    5. '   ' → logprob: -4.4992265701293945
    6. '       ' → logprob: -4.6242265701293945
    7. '        ' → logprob: -5.4992265701293945
    8. '#' → logprob: -5.7492265701293945
    9. ' pass' → logprob: -5.9992265701293945
    10. ' \' → logprob: -6.3742265701293945

Token 18: ' case' (ID: 1890)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32046350836753845
    2. '    ' → logprob: -2.8204634189605713
    3. '   ' → logprob: -3.1954634189605713
    4. ' :' → logprob: -3.1954634189605713
    5. ' ' → logprob: -3.5704634189605713
    6. ' return' → logprob: -3.5704634189605713
    7. '\n' → logprob: -3.9454634189605713
    8. '.' → logprob: -4.69546365737915
    9. 'return' → logprob: -4.69546365737915
    10. '\' → logprob: -4.82046365737915

Token 19: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05265847593545914
    2. '\n' → logprob: -4.302658557891846
    3. ':return' → logprob: -4.677658557891846
    4. ':
' → logprob: -4.802658557891846
    5. ' :' → logprob: -4.802658557891846
    6. '   ' → logprob: -6.052658557891846
    7. '    ' → logprob: -6.177658557891846
    8. ' return' → logprob: -6.427658557891846
    9. '       ' → logprob: -6.552658557891846
    10. '\' → logprob: -7.052658557891846

Token 20: ' no' (ID: 860)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.34790918231010437
    2. '       ' → logprob: -2.0979092121124268
    3. 'return' → logprob: -2.3479092121124268
    4. '           ' → logprob: -3.4729092121124268
    5. '   ' → logprob: -4.472908973693848
    6. ' ' → logprob: -4.597908973693848
    7. '    ' → logprob: -4.847908973693848
    8. '        ' → logprob: -5.847908973693848
    9. '\n' → logprob: -5.972908973693848
    10. ' 
' → logprob: -6.472908973693848

Token 21: ' cut' (ID: 6092)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5122098922729492
    2. ' action' → logprob: -1.5122098922729492
    3. ' shredd' → logprob: -2.887209892272949
    4. 'return' → logprob: -3.262209892272949
    5. '   ' → logprob: -4.012209892272949
    6. ' shred' → logprob: -4.137209892272949
    7. ' operation' → logprob: -4.887209892272949
    8. ' output' → logprob: -5.262209892272949
    9. ' shredded' → logprob: -5.512209892272949
    10. ' ' → logprob: -5.637209892272949

Token 22: ' needed' (ID: 6118)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.283792495727539
    2. ':' → logprob: -1.408792495727539
    3. '\n' → logprob: -1.783792495727539
    4. ' return' → logprob: -2.283792495727539
    5. '   ' → logprob: -3.033792495727539
    6. ',' → logprob: -3.283792495727539
    7. ':return' → logprob: -3.783792495727539
    8. '    ' → logprob: -3.783792495727539
    9. 'return' → logprob: -4.033792495727539
    10. ' :' → logprob: -4.033792495727539

Token 23: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1202876567840576
    2. ':' → logprob: -1.2452876567840576
    3. '       ' → logprob: -1.2452876567840576
    4. ':return' → logprob: -3.2452876567840576
    5. '   ' → logprob: -4.370287895202637
    6. ' return' → logprob: -4.495287895202637
    7. 'return' → logprob: -4.995287895202637
    8. '\' → logprob: -5.245287895202637
    9. '           ' → logprob: -5.245287895202637
    10. ':
' → logprob: -5.370287895202637

Token 24: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13422328233718872
    2. ':' → logprob: -2.884223222732544
    3. '\n' → logprob: -3.259223222732544
    4. '   ' → logprob: -4.509223461151123
    5. '           ' → logprob: -5.384223461151123
    6. ':return' → logprob: -5.759223461151123
    7. ':
' → logprob: -6.009223461151123
    8. ' return' → logprob: -6.009223461151123
    9. 'return' → logprob: -6.134223461151123
    10. ' :' → logprob: -6.384223461151123

Token 25: ' print' (ID: 2123)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4716024398803711
    2. '       ' → logprob: -1.721602439880371
    3. 'return' → logprob: -1.846602439880371
    4. '   ' → logprob: -3.721602439880371
    5. '    ' → logprob: -4.346602439880371
    6. ' ' → logprob: -6.721602439880371
    7. ' pass' → logprob: -8.721602439880371
    8. '        ' → logprob: -8.971602439880371
    9. '     ' → logprob: -8.971602439880371
    10. ' \' → logprob: -9.346602439880371

Token 26: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06919028609991074
    2. '("' → logprob: -3.444190263748169
    3. '()' → logprob: -3.569190263748169
    4. '("")' → logprob: -5.694190502166748
    5. '('' → logprob: -5.819190502166748
    6. '("("' → logprob: -8.19419002532959
    7. '(f' → logprob: -9.31919002532959
    8. '(""' → logprob: -11.56919002532959
    9. '("""' → logprob: -11.69419002532959
    10. '(None' → logprob: -12.56919002532959

Token 27: '"{' (ID: 27510)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.4051527678966522
    2. '"{' → logprob: -1.5301527976989746
    3. '"' → logprob: -2.4051527976989746
    4. ''{' → logprob: -4.780152797698975
    5. ')' → logprob: -4.905152797698975
    6. '")' → logprob: -5.155152797698975
    7. '(' → logprob: -6.155152797698975
    8. '("{' → logprob: -7.405152797698975
    9. '('{' → logprob: -7.780152797698975
    10. '{})' → logprob: -7.780152797698975

Token 28: 'target' (ID: 10857)
  Prédit: 'target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.3524286448955536
    2. 'number' → logprob: -1.227428674697876
    3. 'int' → logprob: -5.602428436279297
    4. ' target' → logprob: -9.727428436279297
    5. ' number' → logprob: -9.727428436279297
    6. ''' → logprob: -10.227428436279297
    7. 'num' → logprob: -10.977428436279297
    8. 't' → logprob: -10.977428436279297
    9. 'tar' → logprob: -11.102428436279297
    10. '   ' → logprob: -11.852428436279297

Token 29: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.482198566198349
    2. '}")' → logprob: -0.9821985960006714
    3. ' is' → logprob: -6.232198715209961
    4. ' }' → logprob: -6.357198715209961
    5. ' has' → logprob: -7.732198715209961
    6. ':' → logprob: -7.857198715209961
    7. ' can' → logprob: -7.982198715209961
    8. ' cut' → logprob: -8.107198715209961
    9. '")' → logprob: -8.232198715209961
    10. ' ==' → logprob: -8.857198715209961

Token 30: ' {' (ID: 354)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -1.1205838918685913
    2. ' is' → logprob: -1.4955838918685913
    3. ' can' → logprob: -2.370584011077881
    4. ' has' → logprob: -3.495584011077881
    5. ' was' → logprob: -3.620584011077881
    6. ')' → logprob: -3.745584011077881
    7. ':' → logprob: -3.870584011077881
    8. ' remains' → logprob: -4.120584011077881
    9. ' cut' → logprob: -4.495584011077881
    10. ' no' → logprob: -4.495584011077881

Token 31: 'number' (ID: 8096)
  Prédit: 'number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.20821654796600342
    2. 'target' → logprob: -1.9582165479660034
    3. '0' → logprob: -3.583216667175293
    4. 'int' → logprob: -4.333216667175293
    5. ''' → logprob: -5.708216667175293
    6. '-' → logprob: -7.583216667175293
    7. '1' → logprob: -7.833216667175293
    8. '}' → logprob: -8.458216667175293
    9. ''-' → logprob: -9.083216667175293
    10. '"' → logprob: -9.145716667175293

Token 32: '}")
' (ID: 23577)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.004399259574711323
    2. '")' → logprob: -5.754399299621582
    3. '}' → logprob: -7.379399299621582
    4. ')")' → logprob: -8.504399299621582
    5. '}")
' → logprob: -8.754399299621582
    6. '}")
' → logprob: -9.129399299621582
    7. ')' → logprob: -10.254399299621582
    8. ' }' → logprob: -10.629399299621582
    9. '}\' → logprob: -11.629399299621582
    10. '}"' → logprob: -11.629399299621582

Token 33: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37156328558921814
    2. '\n' → logprob: -1.4965633153915405
    3. '
' → logprob: -3.996563196182251
    4. ':' → logprob: -3.996563196182251
    5. '       ' → logprob: -4.24656343460083
    6. 'else' → logprob: -4.87156343460083
    7. ')' → logprob: -4.99656343460083
    8. ':return' → logprob: -5.49656343460083
    9. ':
' → logprob: -5.62156343460083
    10. 'return' → logprob: -5.99656343460083

Token 34: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1799032837152481
    2. '\n' → logprob: -2.929903268814087
    3. 'else' → logprob: -3.304903268814087
    4. 'return' (adapté à ' return') → logprob: -3.804903268814087
    5. '       ' → logprob: -3.929903268814087
    6. '
' → logprob: -4.554903507232666
    7. ')' → logprob: -4.679903507232666
    8. ' else' → logprob: -5.304903507232666
    9. ' ' → logprob: -6.304903507232666
    10. ' return' → logprob: -6.304903507232666

Token 35: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.22543546557426453
    2. '   ' → logprob: -2.350435495376587
    3. '
' → logprob: -2.975435495376587
    4. '    
' → logprob: -3.350435495376587
    5. '  
' → logprob: -4.975435256958008
    6. '\' → logprob: -5.600435256958008
    7. ' 
' → logprob: -5.850435256958008
    8. ' ' → logprob: -6.350435256958008
    9. '   
' → logprob: -7.225435256958008
    10. '```' → logprob: -7.225435256958008

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7153419852256775
    2. '\n' → logprob: -1.5903420448303223
    3. '    
' → logprob: -1.7153420448303223
    4. ' 
' → logprob: -3.2153420448303223
    5. '
' → logprob: -3.3403420448303223
    6. '```' → logprob: -3.8403420448303223
    7. '  
' → logprob: -4.840342044830322
    8. 'n' → logprob: -5.215342044830322
    9. '\' → logprob: -5.465342044830322
    10. '   
' → logprob: -5.965342044830322

Token 37: ' digits' (ID: 37806)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.2354063987731934
    2. '   ' → logprob: -1.9854063987731934
    3. ' else' → logprob: -2.3604063987731934
    4. ' 
' → logprob: -2.6104063987731934
    5. '```' → logprob: -2.8604063987731934
    6. ':' → logprob: -2.9854063987731934
    7. ' ' → logprob: -2.9854063987731934
    8. ' for' → logprob: -3.2354063987731934
    9. 'n' → logprob: -3.2354063987731934
    10. 'else' → logprob: -3.6104063987731934

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.060197971761226654
    2. '=' → logprob: -3.4351980686187744
    3. '[' → logprob: -4.435197830200195
    4. '.' → logprob: -5.435197830200195
    5. ')' → logprob: -5.935197830200195
    6. 's' → logprob: -6.935197830200195
    7. '_count' → logprob: -6.935197830200195
    8. '   ' → logprob: -7.060197830200195
    9. '[]' → logprob: -7.310197830200195
    10. '<|end|>' → logprob: -7.560197830200195

Token 39: ' number' (ID: 2086)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.5253209471702576
    2. 'list' → logprob: -2.1503210067749023
    3. ' str' → logprob: -2.5253210067749023
    4. ' list' → logprob: -2.7753210067749023
    5. '[str' → logprob: -2.9003210067749023
    6. 'len' → logprob: -3.6503210067749023
    7. '[len' → logprob: -3.7753210067749023
    8. ' [' → logprob: -4.150321006774902
    9. '[' → logprob: -4.525321006774902
    10. '[int' → logprob: -4.650321006774902

Token 40: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6616076231002808
    2. '[' → logprob: -1.6616076231002808
    3. '[:]' → logprob: -2.0366077423095703
    4. '.split' → logprob: -2.2866077423095703
    5. '[::-' → logprob: -3.1616077423095703
    6. '.strip' → logprob: -5.41160774230957
    7. '[:' → logprob: -6.41160774230957
    8. '.replace' → logprob: -6.53660774230957
    9. '<|end|>' → logprob: -6.53660774230957
    10. '[len' → logprob: -6.91160774230957

Token 41: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23860229551792145
    2. '.' → logprob: -2.23860239982605
    3. '[:]' → logprob: -2.73860239982605
    4. '   ' → logprob: -4.488602161407471
    5. '[len' → logprob: -5.738602161407471
    6. '[::-' → logprob: -5.863602161407471
    7. '[:' → logprob: -6.113602161407471
    8. '[i' → logprob: -6.238602161407471
    9. '.split' → logprob: -6.238602161407471
    10. '<|end|>' → logprob: -6.363602161407471

Token 42: ' n' (ID: 297)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8145741820335388
    2. '[' → logprob: -0.8145741820335388
    3. '[:]' → logprob: -2.5645742416381836
    4. '.split' → logprob: -4.439574241638184
    5. '[::-' → logprob: -5.064574241638184
    6. '[:' → logprob: -5.939574241638184
    7. '[:-' → logprob: -6.064574241638184
    8. '=' → logprob: -6.564574241638184
    9. '.replace' → logprob: -6.689574241638184
    10. '[len' → logprob: -6.814574241638184

Token 43: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.8258135914802551
    2. 'umber' → logprob: -0.9508135914802551
    3. 'ew' → logprob: -3.2008135318756104
    4. ' =' → logprob: -3.2008135318756104
    5. '=' → logprob: -3.7008135318756104
    6. '_digits' → logprob: -3.9508135318756104
    7. '-' → logprob: -4.3258137702941895
    8. 'u' → logprob: -5.3258137702941895
    9. 'o' → logprob: -5.4508137702941895
    10. '_' → logprob: -5.5758137702941895

Token 44: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.034069448709487915
    2. 'len' → logprob: -3.409069538116455
    3. ' int' → logprob: -8.284069061279297
    4. ' ' → logprob: -9.159069061279297
    5. 'int' → logprob: -9.784069061279297
    6. '=len' → logprob: -13.409069061279297
    7. '(len' → logprob: -13.784069061279297
    8. '[len' → logprob: -13.909069061279297
    9. '   ' → logprob: -14.034069061279297
    10. '  ' → logprob: -14.034069061279297

Token 45: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.027104657143354416
    2. '(' → logprob: -4.15210485458374
    3. '(number' → logprob: -4.52710485458374
    4. '(target' → logprob: -8.902104377746582
    5. '(numbers' → logprob: -10.652104377746582
    6. 'digits' → logprob: -11.027104377746582
    7. '(n' → logprob: -12.277104377746582
    8. '(num' → logprob: -13.152104377746582
    9. ' (' → logprob: -13.152104377746582
    10. '(str' → logprob: -13.277104377746582

Token 46: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.0007662679417990148
    2. 'digits' → logprob: -8.000765800476074
    3. 'igit' → logprob: -8.125765800476074
    4. 'ig' → logprob: -10.000765800476074
    5. 'igts' → logprob: -10.500765800476074
    6. ')' → logprob: -11.000765800476074
    7. '```' → logprob: -11.500765800476074
    8. 'i' → logprob: -12.375765800476074
    9. 'igi' → logprob: -12.500765800476074
    10. 'number' → logprob: -12.500765800476074

Token 47: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.204720582696609e-05
    2. ' )' → logprob: -10.250052452087402
    3. '   ' → logprob: -11.875052452087402
    4. ')
' → logprob: -12.125052452087402
    5. ' ' → logprob: -13.250052452087402
    6. '[' → logprob: -14.125052452087402
    7. '<|end|>' → logprob: -15.250052452087402
    8. ')))' → logprob: -15.875052452087402
    9. 'def' → logprob: -15.875052452087402
    10. '```' → logprob: -16.000051498413086

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8299897313117981
    2. '<|end|>' → logprob: -0.9549897313117981
    3. '
' → logprob: -2.2049896717071533
    4. ')' → logprob: -4.079989910125732
    5. '\n' → logprob: -4.579989910125732
    6. '<|end|>' → logprob: -4.704989910125732
    7. '    
' → logprob: -5.329989910125732
    8. ' 
' → logprob: -5.454989910125732
    9. ' ' → logprob: -5.454989910125732
    10. '  
' → logprob: -5.954989910125732

Token 49: ' best' (ID: 1636)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6802465915679932
    2. ' 
' → logprob: -1.6802465915679932
    3. ' for' → logprob: -1.9302465915679932
    4. ' ' → logprob: -1.9302465915679932
    5. 'for' → logprob: -2.430246591567993
    6. '\n' → logprob: -3.055246591567993
    7. 'n' → logprob: -3.555246591567993
    8. '_' → logprob: -3.680246591567993
    9. '
' → logprob: -3.930246591567993
    10. 'i' → logprob: -4.180246353149414

Token 50: '_sum' (ID: 29859)
  Prédit: '_cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cut' → logprob: -0.24113404750823975
    2. '_' → logprob: -2.2411341667175293
    3. '_split' → logprob: -3.2411341667175293
    4. '_length' → logprob: -3.7411341667175293
    5. '_score' → logprob: -4.741134166717529
    6. '_size' → logprob: -4.866134166717529
    7. '_result' → logprob: -4.991134166717529
    8. '_len' → logprob: -5.741134166717529
    9. ' =' → logprob: -6.116134166717529
    10. '_index' → logprob: -6.116134166717529

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006888708099722862
    2. '=' → logprob: -5.0068888664245605
    3. '_' → logprob: -8.881888389587402
    4. 's' → logprob: -11.256888389587402
    5. ',' → logprob: -11.631888389587402
    6. '_sum' → logprob: -13.006888389587402
    7. '_value' → logprob: -13.381888389587402
    8. ' ' → logprob: -13.506888389587402
    9. ')' → logprob: -13.881888389587402
    10. '_val' → logprob: -13.881888389587402

Token 52: ' -' (ID: 533)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.6655729413032532
    2. 'float' → logprob: -0.7905729413032532
    3. ' None' → logprob: -3.9155728816986084
    4. 'None' → logprob: -5.4155731201171875
    5. ' ' → logprob: -5.6655731201171875
    6. '0' → logprob: -6.4155731201171875
    7. '10' → logprob: -7.0405731201171875
    8. 'int' → logprob: -7.4155731201171875
    9. '999' → logprob: -8.415573120117188
    10. '-' → logprob: -8.665573120117188

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06354940682649612
    2. 'float' → logprob: -2.813549518585205
    3. '10' → logprob: -7.188549518585205
    4. '100' → logprob: -7.938549518585205
    5. '999' → logprob: -8.188549041748047
    6. 'inf' → logprob: -10.063549041748047
    7. ' float' → logprob: -10.938549041748047
    8. 'math' → logprob: -11.063549041748047
    9. '2' → logprob: -11.188549041748047
    10. '101' → logprob: -11.438549041748047

Token 54: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ' best' (ID: 1636)
  Prédit: ' best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.34195297956466675
    2. 'best' (adapté à ' best') → logprob: -1.4669530391693115
    3. ' cut' → logprob: -3.7169530391693115
    4. ' ' → logprob: -3.8419530391693115
    5. 'b' → logprob: -5.841952800750732
    6. 'cut' → logprob: -6.341952800750732
    7. '_' → logprob: -6.966952800750732
    8. ' b' → logprob: -7.341952800750732
    9. ' for' → logprob: -7.466952800750732
    10. ' split' → logprob: -7.591952800750732

Token 57: '_part' (ID: 24053)
  Prédit: '_cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cut' → logprob: -0.817089319229126
    2. '_' → logprob: -0.942089319229126
    3. '_split' → logprob: -1.942089319229126
    4. '_parts' → logprob: -5.317089080810547
    5. '_partition' → logprob: -5.567089080810547
    6. '_index' → logprob: -6.067089080810547
    7. '_s' → logprob: -6.442089080810547
    8. '_indices' → logprob: -6.692089080810547
    9. '_token' → logprob: -6.817089080810547
    10. '_part' → logprob: -6.817089080810547

Token 58: 'itions' (ID: 5500)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.30733543634414673
    2. 'ition' → logprob: -2.057335376739502
    3. '=' → logprob: -2.432335376739502
    4. 'itions' → logprob: -3.182335376739502
    5. '1' → logprob: -5.807335376739502
    6. ' =' → logprob: -6.057335376739502
    7. 'itioner' → logprob: -8.05733585357666
    8. 'ation' → logprob: -8.43233585357666
    9. '=[]' → logprob: -8.43233585357666
    10. '_' → logprob: -8.55733585357666

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011088501662015915
    2. '=' → logprob: -4.5110883712768555
    3. ' ' → logprob: -11.511088371276855
    4. ',' → logprob: -12.011088371276855
    5. '<|end|>' → logprob: -12.136088371276855
    6. '=[]' → logprob: -12.261088371276855
    7. '  ' → logprob: -12.386088371276855
    8. 's' → logprob: -12.886088371276855
    9. ':' → logprob: -12.886088371276855
    10. ')' → logprob: -13.011088371276855

Token 60: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.48313280940055847
    2. '[]' → logprob: -1.3581328392028809
    3. ' None' → logprob: -2.358132839202881
    4. 'None' → logprob: -3.483132839202881
    5. ' ' → logprob: -7.608132839202881
    6. ' []
' → logprob: -10.108132362365723
    7. '[' → logprob: -10.108132362365723
    8. '[]
' → logprob: -10.233132362365723
    9. '[]}' → logprob: -11.483132362365723
    10. '   ' → logprob: -11.608132362365723

Token 61: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.41779476404190063
    2. '
' → logprob: -2.167794704437256
    3. '   ' → logprob: -2.167794704437256
    4. '    
' → logprob: -2.917794704437256
    5. ' for' → logprob: -3.917794704437256
    6. 'for' → logprob: -4.792794704437256
    7. '  
' → logprob: -5.167794704437256
    8. ' ' → logprob: -5.292794704437256
    9. '<|end|>' → logprob: -5.292794704437256
    10. '   
' → logprob: -5.417794704437256

Token 62: ' memo' (ID: 46393)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41774576902389526
    2. ' for' → logprob: -1.91774582862854
    3. ' 
' → logprob: -2.66774582862854
    4. '
' → logprob: -3.16774582862854
    5. '\n' → logprob: -3.91774582862854
    6. '   ' → logprob: -4.042745590209961
    7. ' ' → logprob: -4.292745590209961
    8. '\' → logprob: -4.292745590209961
    9. '    
' → logprob: -5.042745590209961
    10. '   
' → logprob: -5.917745590209961

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05489571392536163
    2. '=' → logprob: -2.9298956394195557
    3. '={}' → logprob: -12.679895401000977
    4. ' ' → logprob: -13.054895401000977
    5. ':' → logprob: -13.054895401000977
    6. '[' → logprob: -13.179895401000977
    7. '   ' → logprob: -14.179895401000977
    8. '  ' → logprob: -14.179895401000977
    9. '.setdefault' → logprob: -14.429895401000977
    10. ',' → logprob: -14.554895401000977

Token 64: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -7.505351095460355e-05
    2. ' {}' → logprob: -9.500075340270996
    3. '{' → logprob: -17.12507438659668
    4. '{},' → logprob: -17.37507438659668
    5. '={}' → logprob: -17.37507438659668
    6. '{})' → logprob: -17.87507438659668
    7. 'dict' → logprob: -18.12507438659668
    8. '{}
' → logprob: -18.25007438659668
    9. '{}\' → logprob: -19.37507438659668
    10. '{}

' → logprob: -20.00007438659668

Token 65: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38228848576545715
    2. 'def' → logprob: -2.0072884559631348
    3. ' ' → logprob: -3.0072884559631348
    4. '   ' → logprob: -3.2572884559631348
    5. ':' → logprob: -3.8822884559631348
    6. ' 
' → logprob: -4.257288455963135
    7. '\' → logprob: -4.382288455963135
    8. ')' → logprob: -4.507288455963135
    9. '<|end|>' → logprob: -4.757288455963135
    10. '[' → logprob: -5.257288455963135

Token 66: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5714849829673767
    2. '   ' → logprob: -1.8214850425720215
    3. ' ' → logprob: -1.9464850425720215
    4. 'for' → logprob: -3.0714850425720215
    5. ' for' → logprob: -3.6964850425720215
    6. ' 
' → logprob: -4.3214850425720215
    7. '    
' → logprob: -4.6964850425720215
    8. '
' → logprob: -4.6964850425720215
    9. '    ' → logprob: -4.8214850425720215
    10. ' def' → logprob: -5.3214850425720215

Token 67: ' dfs' (ID: 51252)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6532489657402039
    2. ' def' → logprob: -0.7782489657402039
    3. ' for' → logprob: -4.0282487869262695
    4. 'for' → logprob: -6.1532487869262695
    5. '   ' → logprob: -8.40324878692627
    6. ' ' → logprob: -9.40324878692627
    7. '    ' → logprob: -9.65324878692627
    8. '
' → logprob: -10.40324878692627
    9. '```' → logprob: -10.65324878692627
    10. 'from' → logprob: -11.02824878692627

Token 68: '(pos' (ID: 24566)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09343224763870239
    2. 'def' → logprob: -3.0934321880340576
    3. ' (' → logprob: -3.4684321880340576
    4. '   ' → logprob: -5.343432426452637
    5. '(
' → logprob: -6.468432426452637
    6. ' def' → logprob: -6.718432426452637
    7. '(depth' → logprob: -7.093432426452637
    8. '<|end|>' → logprob: -7.093432426452637
    9. '(target' → logprob: -7.843432426452637
    10. '(n' → logprob: -7.843432426452637

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022413700353354216
    2. ' ,' → logprob: -6.752241134643555
    3. ')' → logprob: -7.627241134643555
    4. '=' → logprob: -8.627241134643555
    5. '<|end|>' → logprob: -8.752241134643555
    6. '):' → logprob: -9.627241134643555
    7. 'def' → logprob: -10.002241134643555
    8. '   ' → logprob: -10.252241134643555
    9. '<|end|>' → logprob: -10.502241134643555
    10. ':' → logprob: -11.502241134643555

Token 70: ' current' (ID: 2208)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.8115984201431274
    2. ' current' → logprob: -1.3115984201431274
    3. 'parts' → logprob: -2.811598300933838
    4. 'current' → logprob: -3.186598300933838
    5. ' cuts' → logprob: -3.436598300933838
    6. ' partitions' → logprob: -3.811598300933838
    7. 'part' → logprob: -4.311598300933838
    8. ' total' → logprob: -4.561598300933838
    9. ')' → logprob: -4.561598300933838
    10. 'cuts' → logprob: -4.686598300933838

Token 71: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.027902109548449516
    2. ')' → logprob: -5.027902126312256
    3. ',' → logprob: -5.027902126312256
    4. '_' → logprob: -5.402902126312256
    5. '_s' → logprob: -5.777902126312256
    6. '_split' → logprob: -6.777902126312256
    7. 'sum' → logprob: -7.027902126312256
    8. '_,' → logprob: -7.277902126312256
    9. '_part' → logprob: -7.402902126312256
    10. ' _' → logprob: -7.402902126312256

Token 72: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03390328958630562
    2. ')' → logprob: -3.5339033603668213
    3. '):' → logprob: -5.533903121948242
    4. ' ,' → logprob: -9.533903121948242
    5. '   ' → logprob: -10.658903121948242
    6. '=' → logprob: -10.908903121948242
    7. '<|end|>' → logprob: -11.783903121948242
    8. ' ' → logprob: -11.908903121948242
    9. ',
' → logprob: -11.908903121948242
    10. ' )' → logprob: -12.033903121948242

Token 73: ' returns' (ID: 7377)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3906797170639038
    2. '(' → logprob: -1.8906797170639038
    3. 'def' → logprob: -1.8906797170639038
    4. ')' → logprob: -2.0156798362731934
    5. '<|end|>' → logprob: -2.0156798362731934
    6. ' ' → logprob: -2.7656798362731934
    7. ',' → logprob: -3.5156798362731934
    8. '_' → logprob: -3.6406798362731934
    9. ' def' → logprob: -4.015679836273193
    10. ':' → logprob: -4.390679836273193

Token 74: ' all' (ID: 722)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.294617235660553
    2. ' None' → logprob: -2.419617176055908
    3. 'True' → logprob: -2.669617176055908
    4. ' the' → logprob: -3.919617176055908
    5. 'None' → logprob: -3.919617176055908
    6. ' ' → logprob: -4.294617176055908
    7. '<|end|>' → logprob: -4.794617176055908
    8. '[' → logprob: -4.919617176055908
    9. ' (' → logprob: -5.169617176055908
    10. ')' → logprob: -6.044617176055908

Token 75: ' partitions' (ID: 89097)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ' from' (ID: 591)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.42924511432647705
    2. 'pos' → logprob: -1.054245114326477
    3. ' the' → logprob: -8.804244995117188
    4. '(pos' → logprob: -9.679244995117188
    5. 'position' → logprob: -9.929244995117188
    6. 'the' → logprob: -10.304244995117188
    7. 'positions' → logprob: -10.554244995117188
    8. ' positions' → logprob: -10.554244995117188
    9. '<|end|>' → logprob: -10.554244995117188
    10. '	pos' → logprob: -10.679244995117188

Token 78: ' with' (ID: 483)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.6596198081970215
    2. ' with' → logprob: -1.1596198081970215
    3. ' to' → logprob: -2.6596198081970215
    4. ',' → logprob: -2.7846198081970215
    5. '<|end|>' → logprob: -5.1596198081970215
    6. ' onwards' → logprob: -5.4096198081970215
    7. ' ,' → logprob: -5.5346198081970215
    8. '```' → logprob: -5.5346198081970215
    9. '+' → logprob: -5.7846198081970215
    10. ' ' → logprob: -5.9096198081970215

Token 79: ' sum' (ID: 4215)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.6851552128791809
    2. ' the' → logprob: -1.6851551532745361
    3. ' their' → logprob: -2.310155153274536
    4. ' best' → logprob: -2.560155153274536
    5. ' all' → logprob: -3.310155153274536
    6. 'current' → logprob: -3.310155153274536
    7. 'the' → logprob: -4.685155391693115
    8. 'best' → logprob: -4.810155391693115
    9. ' def' → logprob: -5.185155391693115
    10. ' a' → logprob: -5.435155391693115

Token 80: ' <=' (ID: 5017)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.5053328275680542
    2. ',' → logprob: -1.6303328275680542
    3. '<|end|>' → logprob: -1.7553328275680542
    4. ' of' → logprob: -2.0053329467773438
    5. ' ' → logprob: -2.6303329467773438
    6. ' =' → logprob: -3.8803329467773438
    7. ' that' → logprob: -3.8803329467773438
    8. ')' → logprob: -3.8803329467773438
    9. '```' → logprob: -4.005332946777344
    10. '<|end|>' → logprob: -4.505332946777344

Token 81: ' target' (ID: 3783)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.19274306297302246
    2. 'current' → logprob: -1.8177430629730225
    3. ' target' → logprob: -4.942743301391602
    4. 'target' → logprob: -5.692743301391602
    5. ' number' → logprob: -6.817743301391602
    6. ' ' → logprob: -7.567743301391602
    7. 'number' → logprob: -8.067743301391602
    8. ' best' → logprob: -8.317743301391602
    9. ' int' → logprob: -9.942743301391602
    10. 'best' → logprob: -10.192743301391602

Token 82: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49167224764823914
    2. ')' → logprob: -1.9916722774505615
    3. '   ' → logprob: -2.3666722774505615
    4. '_' → logprob: -2.6166722774505615
    5. 'def' → logprob: -3.4916722774505615
    6. ' ' → logprob: -4.241672039031982
    7. ',' → logprob: -4.491672039031982
    8. '(' → logprob: -4.991672039031982
    9. '):' → logprob: -4.991672039031982
    10. ' def' → logprob: -5.491672039031982

Token 83: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.06160683557391167
    2. 'current' → logprob: -2.9366068840026855
    3. '1' → logprob: -6.0616068840026855
    4. ' ' → logprob: -6.0616068840026855
    5. ' int' → logprob: -7.3116068840026855
    6. ' digits' → logprob: -7.9366068840026855
    7. ' number' → logprob: -8.436606407165527
    8. 'int' → logprob: -8.436606407165527
    9. 'digits' → logprob: -9.936606407165527
    10. '   ' → logprob: -9.936606407165527

Token 84: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.058767903596162796
    2. '_' → logprob: -3.058767795562744
    3. '_s' → logprob: -5.933767795562744
    4. '_pos' → logprob: -6.183767795562744
    5. '_token' → logprob: -6.558767795562744
    6. '_val' → logprob: -6.933767795562744
    7. ')' → logprob: -7.308767795562744
    8. '_cut' → logprob: -8.058768272399902
    9. '_value' → logprob: -8.183768272399902
    10. 's' → logprob: -8.183768272399902

Token 85: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0869235023856163
    2. ')' → logprob: -3.461923599243164
    3. '):' → logprob: -3.836923599243164
    4. '   ' → logprob: -4.461923599243164
    5. 'def' → logprob: -4.461923599243164
    6. '(' → logprob: -5.836923599243164
    7. '```' → logprob: -6.836923599243164
    8. ' def' → logprob: -7.336923599243164
    9. ',' → logprob: -7.461923599243164
    10. ':def' → logprob: -8.086923599243164

Token 86: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.14092218875885
    2. ':' → logprob: -1.26592218875885
    3. '_' → logprob: -2.0159220695495605
    4. ')' → logprob: -2.2659220695495605
    5. '   ' → logprob: -2.6409220695495605
    6. 'd' → logprob: -3.5159220695495605
    7. '(' → logprob: -3.7659220695495605
    8. ' def' → logprob: -4.6409220695495605
    9. '```' → logprob: -4.6409220695495605
    10. '):' → logprob: -5.0159220695495605

Token 87: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0847465991973877
    2. 'def' → logprob: -3.2097465991973877
    3. '\' → logprob: -3.8347465991973877
    4. '_' → logprob: -4.584746360778809
    5. '   ' → logprob: -5.584746360778809
    6. ':' → logprob: -6.459746360778809
    7. '(' → logprob: -7.209746360778809
    8. ')' → logprob: -7.209746360778809
    9. ' d' → logprob: -7.834746360778809
    10. '_d' → logprob: -7.959746360778809

Token 88: ' For' (ID: 2214)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3346973955631256
    2. 'def' → logprob: -1.3346973657608032
    3. '\' → logprob: -4.709697246551514
    4. ' def' → logprob: -5.334697246551514
    5. ' 
' → logprob: -5.459697246551514
    6. '_' → logprob: -7.084697246551514
    7. ' d' → logprob: -7.459697246551514
    8. ' ' → logprob: -7.584697246551514
    9. '   ' → logprob: -7.834697246551514
    10. ')' → logprob: -8.334697723388672

Token 89: ' performance' (ID: 6198)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.3133075535297394
    2. 'pos' → logprob: -1.563307523727417
    3. ' dfs' → logprob: -3.688307523727417
    4. ' i' → logprob: -4.313307762145996
    5. ' the' → logprob: -5.563307762145996
    6. ' ' → logprob: -5.813307762145996
    7. 'dfs' → logprob: -5.938307762145996
    8. 'i' → logprob: -6.188307762145996
    9. ' d' → logprob: -6.938307762145996
    10. ' def' → logprob: -7.188307762145996

Token 90: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19211603701114655
    2. '_' → logprob: -2.3171160221099854
    3. ')' → logprob: -3.1921160221099854
    4. ' def' → logprob: -3.8171160221099854
    5. ' ' → logprob: -5.5671162605285645
    6. ',' → logprob: -6.3171162605285645
    7. 'dfs' → logprob: -6.9421162605285645
    8. '<|end|>' → logprob: -7.0671162605285645
    9. '
' → logprob: -7.1921162605285645
    10. '<|end|>' → logprob: -7.3171162605285645

Token 91: ' store' (ID: 4897)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.9148695468902588
    2. 'def' → logprob: -1.7898695468902588
    3. ' use' → logprob: -2.414869546890259
    4. ' the' → logprob: -2.664869546890259
    5. ' we' → logprob: -2.664869546890259
    6. ' memo' → logprob: -3.164869546890259
    7. ' cache' → logprob: -3.664869546890259
    8. ' you' → logprob: -3.914869546890259
    9. ' dfs' → logprob: -4.53986930847168
    10. 'dfs' → logprob: -4.78986930847168

Token 92: ' only' (ID: 1606)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5186998844146729
    2. ' all' → logprob: -2.518699884414673
    3. 'dfs' → logprob: -3.018699884414673
    4. 'memo' → logprob: -3.018699884414673
    5. ' memo' → logprob: -3.268699884414673
    6. ' None' → logprob: -3.518699884414673
    7. 'def' → logprob: -3.518699884414673
    8. 'the' → logprob: -3.768699884414673
    9. ')' → logprob: -3.768699884414673
    10. 'all' → logprob: -4.393699645996094

Token 93: ' sets' (ID: 11982)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9311061501502991
    2. 'the' → logprob: -1.4311060905456543
    3. 'part' → logprob: -2.5561060905456543
    4. ' True' → logprob: -2.8061060905456543
    5. 'True' → logprob: -2.9311060905456543
    6. 'None' → logprob: -3.3061060905456543
    7. ' None' → logprob: -3.5561060905456543
    8. ' partitions' → logprob: -3.5561060905456543
    9. 'one' → logprob: -4.056106090545654
    10. ' one' → logprob: -4.556106090545654

Token 94: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.3509489893913269
    2. ')' → logprob: -1.9759490489959717
    3. 'def' → logprob: -2.6009490489959717
    4. 'of' → logprob: -3.9759490489959717
    5. '<|end|>' → logprob: -4.350948810577393
    6. '<|end|>' → logprob: -4.350948810577393
    7. '   ' → logprob: -4.600948810577393
    8. ' ' → logprob: -5.600948810577393
    9. '{' → logprob: -5.725948810577393
    10. 'dfs' → logprob: -5.850948810577393

Token 95: ' partitions' (ID: 89097)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -1.1221550703048706
    2. ' partitions' → logprob: -1.6221550703048706
    3. 'positions' → logprob: -2.87215518951416
    4. ' digits' → logprob: -2.99715518951416
    5. '(part' → logprob: -3.12215518951416
    6. ' (' → logprob: -3.24715518951416
    7. ' tokens' → logprob: -3.24715518951416
    8. 'digits' → logprob: -3.37215518951416
    9. ' tuples' → logprob: -3.37215518951416
    10. 'tokens' → logprob: -3.49715518951416

Token 96: ' leading' (ID: 8117)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6018615365028381
    2. '_' → logprob: -2.2268614768981934
    3. '\' → logprob: -2.4768614768981934
    4. ':' → logprob: -2.6018614768981934
    5. ')' → logprob: -2.8518614768981934
    6. '   ' → logprob: -3.1018614768981934
    7. '
' → logprob: -3.6018614768981934
    8. 'd' → logprob: -4.101861476898193
    9. ' def' → logprob: -4.226861476898193
    10. ' 
' → logprob: -5.226861476898193

Token 97: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5364724397659302
    2. 'to' → logprob: -1.1614724397659302
    3. 'from' → logprob: -3.0364723205566406
    4. '<|end|>' → logprob: -3.1614723205566406
    5. ' from' → logprob: -4.536472320556641
    6. '<|end|>' → logprob: -7.036472320556641
    7. ' ' → logprob: -10.16147232055664
    8. ' at' → logprob: -10.28647232055664
    9. '_to' → logprob: -10.91147232055664
    10. '_token' → logprob: -11.03647232055664

Token 98: ' max' (ID: 2999)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.8169393539428711
    2. 'the' → logprob: -1.691939353942871
    3. 'valid' → logprob: -2.316939353942871
    4. 'max' → logprob: -2.316939353942871
    5. ' best' → logprob: -3.191939353942871
    6. 'maximum' → logprob: -3.441939353942871
    7. ' the' → logprob: -3.691939353942871
    8. 'optimal' → logprob: -4.441939353942871
    9. ' valid' → logprob: -4.816939353942871
    10. 'target' → logprob: -4.816939353942871

Token 99: ' sum' (ID: 4215)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.3948051333427429
    2. ' sum' → logprob: -2.0198051929473877
    3. 'sum' → logprob: -2.1448051929473877
    4. ' _' → logprob: -3.6448051929473877
    5. '_' → logprob: -3.8948051929473877
    6. '_s' → logprob: -5.269804954528809
    7. '_part' → logprob: -5.644804954528809
    8. ' sums' → logprob: -6.144804954528809
    9. ' possible' → logprob: -6.394804954528809
    10. 's' → logprob: -6.394804954528809

Token 100: '<=' (ID: 16672)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.052888598293066025
    2. '   ' → logprob: -3.4278886318206787
    3. ':' → logprob: -4.4278883934021
    4. ')' → logprob: -5.8028883934021
    5. ' def' → logprob: -6.1778883934021
    6. '```' → logprob: -7.5528883934021
    7. '):' → logprob: -7.8028883934021
    8. '(' → logprob: -8.052888870239258
    9. ':def' → logprob: -8.427888870239258
    10. '(def' → logprob: -9.427888870239258

Token 101: 'target' (ID: 10857)
  Prédit: 'target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.048665717244148254
    2. ' target' → logprob: -3.048665761947632
    3. '(target' → logprob: -9.923666000366211
    4. 'pos' → logprob: -11.298666000366211
    5. 't' → logprob: -12.298666000366211
    6. '	target' → logprob: -12.798666000366211
    7. ' ' → logprob: -13.298666000366211
    8. 'int' → logprob: -13.423666000366211
    9. '[target' → logprob: -13.923666000366211
    10. ' (' → logprob: -14.423666000366211

Token 102: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0148142576217651
    2. ':' → logprob: -1.5148142576217651
    3. ')' → logprob: -1.7648142576217651
    4. '
' → logprob: -1.8898142576217651
    5. '   ' → logprob: -3.3898143768310547
    6. '_' → logprob: -4.139814376831055
    7. '\' → logprob: -4.389814376831055
    8. ' def' → logprob: -4.889814376831055
    9. ' ' → logprob: -5.014814376831055
    10. ' 
' → logprob: -5.389814376831055

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16107240319252014
    2. '\' → logprob: -2.9110724925994873
    3. 'def' → logprob: -3.2860724925994873
    4. ':' → logprob: -3.7860724925994873
    5. ')' → logprob: -4.161072254180908
    6. '\n' → logprob: -5.161072254180908
    7. '```' → logprob: -5.911072254180908
    8. '_' → logprob: -6.036072254180908
    9. '
' → logprob: -6.786072254180908
    10. '    
' → logprob: -6.786072254180908

Token 104: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.196588397026062
    2. 'd' → logprob: -2.6965885162353516
    3. '_' → logprob: -3.1965885162353516
    4. '   ' → logprob: -3.5715885162353516
    5. '\' → logprob: -3.8215885162353516
    6. ')' → logprob: -4.696588516235352
    7. '
' → logprob: -5.821588516235352
    8. ':' → logprob: -5.946588516235352
    9. ' ' → logprob: -6.571588516235352
    10. ' 
' → logprob: -7.571588516235352

Token 105: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.00023405285901390016
    2. 'dfs' → logprob: -8.75023365020752
    3. ' shred' → logprob: -10.12523365020752
    4. ' ' → logprob: -11.00023365020752
    5. ' ' → logprob: -11.75023365020752
    6. ' df' → logprob: -11.87523365020752
    7. ' def' → logprob: -14.25023365020752
    8. ' DFS' → logprob: -14.50023365020752
    9. ' shredd' → logprob: -15.06273365020752
    10. '   ' → logprob: -15.12523365020752

Token 106: '(pos' (ID: 24566)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.699401319026947
    2. '(pos' → logprob: -0.699401319026947
    3. ' (' → logprob: -5.324401378631592
    4. '(position' → logprob: -8.074400901794434
    5. '(token' → logprob: -8.199400901794434
    6. '<|end|>' → logprob: -8.699400901794434
    7. '(next' → logprob: -8.824400901794434
    8. '(target' → logprob: -9.949400901794434
    9. '(depth' → logprob: -10.199400901794434
    10. '(`' → logprob: -10.324400901794434

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016158436483237892
    2. ' ,' → logprob: -8.750161170959473
    3. '<|end|>' → logprob: -14.250161170959473
    4. '):' → logprob: -14.500161170959473
    5. ',int' → logprob: -14.625161170959473
    6. '   ' → logprob: -15.375161170959473
    7. '‌,' → logprob: -16.00016212463379
    8. ' ' → logprob: -16.12516212463379
    9. ',p' → logprob: -16.25016212463379
    10. ',
' → logprob: -16.25016212463379

Token 108: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.2814050018787384
    2. ' current' → logprob: -1.406404972076416
    3. 'curr' → logprob: -8.906405448913574
    4. 'cur' → logprob: -10.031405448913574
    5. ' curr' → logprob: -10.906405448913574
    6. ' ' → logprob: -11.031405448913574
    7. '   ' → logprob: -11.031405448913574
    8. 'total' → logprob: -11.531405448913574
    9. 'sum' → logprob: -12.531405448913574
    10. '  ' → logprob: -13.156405448913574

Token 109: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -5.8126592193730175e-05
    2. '_s' → logprob: -10.0000581741333
    3. ' _' → logprob: -11.7500581741333
    4. '_' → logprob: -13.3750581741333
    5. '_token' → logprob: -14.2500581741333
    6. ')_' → logprob: -14.6250581741333
    7. '_score' → logprob: -15.1250581741333
    8. '_max' → logprob: -15.2500581741333
    9. ')' → logprob: -15.6250581741333
    10. '_total' → logprob: -15.6250581741333

Token 110: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022410124074667692
    2. ',' → logprob: -6.127241134643555
    3. ':' → logprob: -10.752241134643555
    4. '):
' → logprob: -10.877241134643555
    5. ' ):' → logprob: -11.627241134643555
    6. ')' → logprob: -12.627241134643555
    7. '   ' → logprob: -13.002241134643555
    8. ' ' → logprob: -14.752241134643555
    9. '):
' → logprob: -15.252241134643555
    10. '=' → logprob: -16.002241134643555

Token 111: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8239914774894714
    2. ' if' → logprob: -1.5739915370941162
    3. '<|end|>' → logprob: -1.5739915370941162
    4. '    ' → logprob: -2.948991537094116
    5. '   ' → logprob: -3.073991537094116
    6. '       ' → logprob: -3.573991537094116
    7. 'if' (adapté à ' if') → logprob: -5.198991298675537
    8. '  ' → logprob: -5.573991298675537
    9. '        ' → logprob: -5.823991298675537
    10. ')' → logprob: -5.948991298675537

Token 113: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.0013271415373310447
    2. 'pos' → logprob: -6.626327037811279
    3. '(pos' → logprob: -14.001327514648438
    4. '	pos' → logprob: -15.376327514648438
    5. ' ' → logprob: -16.751327514648438
    6. '_pos' → logprob: -17.501327514648438
    7. ' (' → logprob: -17.501327514648438
    8. ' ' → logprob: -17.876327514648438
    9. ' current' → logprob: -18.501327514648438
    10. ',pos' → logprob: -18.501327514648438

Token 114: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3894839286804199
    2. ' ==' → logprob: -1.13948392868042
    3. '>=' → logprob: -6.38948392868042
    4. ' >=' → logprob: -7.01448392868042
    5. ')' → logprob: -11.639484405517578
    6. '=' → logprob: -12.014484405517578
    7. ')==' → logprob: -12.389484405517578
    8. '<|end|>' → logprob: -12.764484405517578
    9. ' ' → logprob: -12.889484405517578
    10. ']==' → logprob: -13.264484405517578

Token 115: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12693892419338226
    2. ' n' → logprob: -2.126938819885254
    3. '   ' → logprob: -12.751938819885254
    4. '	n' → logprob: -13.376938819885254
    5. ' ' → logprob: -13.501938819885254
    6. 'len' → logprob: -13.501938819885254
    7. ')' → logprob: -14.376938819885254
    8. '<|end|>' → logprob: -14.501938819885254
    9. '
' → logprob: -14.626938819885254
    10. ' len' → logprob: -14.751938819885254

Token 116: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00030507624614983797
    2. ':
' → logprob: -8.87530517578125
    3. '):' → logprob: -9.00030517578125
    4. ' or' → logprob: -10.37530517578125
    5. ':return' → logprob: -12.12530517578125
    6. ' and' → logprob: -13.87530517578125
    7. '<|end|>' → logprob: -13.87530517578125
    8. '):
' → logprob: -14.12530517578125
    9. ')' → logprob: -14.50030517578125
    10. '       ' → logprob: -14.62530517578125

Token 117: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.058056581765413284
    2. '       ' → logprob: -3.433056592941284
    3. '           ' → logprob: -4.308056354522705
    4. '<|end|>' → logprob: -5.058056354522705
    5. ':return' → logprob: -6.433056354522705
    6. ':
' → logprob: -6.433056354522705
    7. '):' → logprob: -8.308056831359863
    8. '<|end|>' → logprob: -8.308056831359863
    9. ' :' → logprob: -8.433056831359863
    10. ' ' → logprob: -9.683056831359863

Token 118: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7059285640716553
    2. '       ' → logprob: -0.8309285640716553
    3. 'return' (adapté à ' return') → logprob: -3.9559285640716553
    4. ' return' → logprob: -4.080928802490234
    5. '<|end|>' → logprob: -4.080928802490234
    6. ' if' → logprob: -4.455928802490234
    7. ' ' → logprob: -6.205928802490234
    8. 'if' → logprob: -6.705928802490234
    9. ':return' → logprob: -7.455928802490234
    10. '{' → logprob: -7.580928802490234

Token 119: ' {' (ID: 354)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.35276973247528076
    2. ' [[]' → logprob: -1.3527697324752808
    3. '[[' → logprob: -4.47776985168457
    4. ' [' → logprob: -4.60276985168457
    5. '[(' → logprob: -5.60276985168457
    6. '[]' → logprob: -5.60276985168457
    7. '{' → logprob: -5.72776985168457
    8. '([' → logprob: -6.72776985168457
    9. ' [[' → logprob: -6.72776985168457
    10. '[{' → logprob: -6.85276985168457

Token 120: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2310527563095093
    2. '()' → logprob: -1.3560527563095093
    3. '()}' → logprob: -1.3560527563095093
    4. 'fro' → logprob: -2.981052875518799
    5. '():' → logprob: -3.106052875518799
    6. 'tuple' → logprob: -3.231052875518799
    7. '[]}' → logprob: -4.106052875518799
    8. '(tuple' → logprob: -4.856052875518799
    9. '("")' → logprob: -5.356052875518799
    10. '""' → logprob: -5.606052875518799

Token 121: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.27949094772338867
    2. '())' → logprob: -2.0294909477233887
    3. ')' → logprob: -2.5294909477233887
    4. '()' → logprob: -4.654490947723389
    5. 'tuple' → logprob: -4.779490947723389
    6. '):' → logprob: -5.279490947723389
    7. '():' → logprob: -5.779490947723389
    8. '[],' → logprob: -6.654490947723389
    9. ' (),' → logprob: -6.654490947723389
    10. ')}' → logprob: -6.904490947723389

Token 122: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25722354650497437
    2. '0' → logprob: -2.132223606109619
    3. ')}' → logprob: -2.882223606109619
    4. '):' → logprob: -3.132223606109619
    5. '())' → logprob: -5.757223606109619
    6. ' ' → logprob: -6.257223606109619
    7. ' )' → logprob: -6.382223606109619
    8. '),' → logprob: -7.507223606109619
    9. ' ())' → logprob: -7.882223606109619
    10. '()' → logprob: -8.382223129272461

Token 123: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11693649739027023
    2. 'current' → logprob: -2.366936445236206
    3. ')' → logprob: -4.991936683654785
    4. ')}' → logprob: -5.241936683654785
    5. ' ' → logprob: -5.741936683654785
    6. ' current' → logprob: -7.116936683654785
    7. '):' → logprob: -9.616936683654785
    8. ' )' → logprob: -9.991936683654785
    9. '())' → logprob: -9.991936683654785
    10. '(current' → logprob: -10.116936683654785

Token 124: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007599649950861931
    2. ')}' → logprob: -5.257599830627441
    3. '):' → logprob: -6.132599830627441
    4. '}' → logprob: -9.382599830627441
    5. ' )' → logprob: -9.507599830627441
    6. '),' → logprob: -10.882599830627441
    7. ',)' → logprob: -12.132599830627441
    8. ',' → logprob: -13.132599830627441
    9. '   ' → logprob: -13.132599830627441
    10. '       ' → logprob: -13.382599830627441

Token 125: ' }' (ID: 388)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.07566901296377182
    2. ' }' → logprob: -2.825669050216675
    3. '       ' → logprob: -4.325668811798096
    4. ',' → logprob: -9.075669288635254
    5. '}
' → logprob: -9.575669288635254
    6. '
' → logprob: -9.950669288635254
    7. '<|end|>' → logprob: -10.075669288635254
    8. '   ' → logprob: -10.700669288635254
    9. ')' → logprob: -10.825669288635254
    10. ' }
' → logprob: -11.325669288635254

Token 126: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 128: ' set' (ID: 920)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -1.153612494468689
    2. '{' → logprob: -1.278612494468689
    3. '(' → logprob: -2.4036126136779785
    4. 'set' → logprob: -2.4036126136779785
    5. '<|end|>' → logprob: -2.5286126136779785
    6. ' (' → logprob: -2.9036126136779785
    7. 'fro' → logprob: -4.1536126136779785
    8. ' set' → logprob: -4.4036126136779785
    9. ' }' → logprob: -4.5286126136779785
    10. '0' → logprob: -4.6536126136779785

Token 129: ' of' (ID: 328)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4354875981807709
    2. ' of' → logprob: -1.8104876279830933
    3. '<|end|>' → logprob: -2.3104875087738037
    4. 'of' → logprob: -2.5604875087738037
    5. '{' → logprob: -5.310487747192383
    6. '(' → logprob: -5.935487747192383
    7. '}' → logprob: -6.685487747192383
    8. '   ' → logprob: -6.935487747192383
    9. '<|end|>' → logprob: -7.310487747192383
    10. ')' → logprob: -7.810487747192383

Token 130: ' tuples' (ID: 112464)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6879762411117554
    2. ' tuples' → logprob: -1.3129762411117554
    3. '<|end|>' → logprob: -2.062976360321045
    4. ' (' → logprob: -2.437976360321045
    5. 'tuple' → logprob: -5.687976360321045
    6. 'tu' → logprob: -5.812976360321045
    7. 'pairs' → logprob: -5.812976360321045
    8. '(tuple' → logprob: -6.187976360321045
    9. ' pairs' → logprob: -7.562976360321045
    10. '(s' → logprob: -8.062975883483887

Token 131: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 132: 'partition' (ID: 67655)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4260043799877167
    2. '(),' → logprob: -2.426004409790039
    3. '(' → logprob: -2.551004409790039
    4. '())' → logprob: -2.801004409790039
    5. ' (' → logprob: -3.801004409790039
    6. ' ()' → logprob: -4.051004409790039
    7. '([],' → logprob: -4.426004409790039
    8. ' ())' → logprob: -4.426004409790039
    9. '(()' → logprob: -4.801004409790039
    10. ')' → logprob: -4.801004409790039

Token 133: ' tuple' (ID: 31311)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1074749156832695
    2. 's' → logprob: -2.9824748039245605
    3. ')' → logprob: -3.1074748039245605
    4. ' ,' → logprob: -5.7324748039245605
    5. '(),' → logprob: -6.2324748039245605
    6. '),' → logprob: -7.9824748039245605
    7. '<|end|>' → logprob: -8.232475280761719
    8. ',)' → logprob: -9.357475280761719
    9. 'ed' → logprob: -9.482475280761719
    10. '()' → logprob: -9.607475280761719

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001573663903400302
    2. ' ,' → logprob: -7.00157356262207
    3. ')' → logprob: -7.50157356262207
    4. '(),' → logprob: -10.25157356262207
    5. '<|end|>' → logprob: -10.25157356262207
    6. 's' → logprob: -10.75157356262207
    7. ',)' → logprob: -12.37657356262207
    8. '),' → logprob: -12.87657356262207
    9. ',
' → logprob: -12.87657356262207
    10. '()' → logprob: -13.50157356262207

Token 135: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.5061922669410706
    2. 'sum' → logprob: -1.0061922073364258
    3. ' total' → logprob: -4.131192207336426
    4. ' current' → logprob: -5.256192207336426
    5. 'total' → logprob: -5.381192207336426
    6. 'current' → logprob: -6.006192207336426
    7. 'partition' → logprob: -7.006192207336426
    8. ' partition' → logprob: -7.756192207336426
    9. ' max' → logprob: -8.256192207336426
    10. ')' → logprob: -8.256192207336426

Token 136: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05589691549539566
    2. ')}' → logprob: -2.9308969974517822
    3. '}' → logprob: -7.055896759033203
    4. ' )' → logprob: -9.805896759033203
    5. '})' → logprob: -10.055896759033203
    6. ')}}' → logprob: -11.430896759033203
    7. ')
' → logprob: -11.680896759033203
    8. '())' → logprob: -11.680896759033203
    9. '))' → logprob: -12.055896759033203
    10. '   ' → logprob: -12.680896759033203

Token 137: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0224146842956543
    2. ')' → logprob: -1.3974146842956543
    3. '<|end|>' → logprob: -2.0224146842956543
    4. '   ' → logprob: -2.2724146842956543
    5. '
' → logprob: -2.6474146842956543
    6. '\n' → logprob: -4.147414684295654
    7. '<|end|>' → logprob: -4.147414684295654
    8. ':' → logprob: -4.647414684295654
    9. ' ' → logprob: -5.022414684295654
    10. ',' → logprob: -5.147414684295654

Token 138: ' if' (ID: 538)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8187708258628845
    2. 'res' → logprob: -1.1937708854675293
    3. ' result' → logprob: -1.8187708854675293
    4. ' res' → logprob: -2.6937708854675293
    5. ' next' → logprob: -4.693770885467529
    6. 'results' → logprob: -5.193770885467529
    7. 'next' → logprob: -5.943770885467529
    8. ' results' → logprob: -6.318770885467529
    9. 's' → logprob: -6.943770885467529
    10. ' {' → logprob: -7.318770885467529

Token 139: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.02091039903461933
    2. '(pos' → logprob: -3.8959105014801025
    3. '(' → logprob: -8.645910263061523
    4. ' pos' → logprob: -9.270910263061523
    5. 'pos' → logprob: -9.895910263061523
    6. '(n' → logprob: -11.520910263061523
    7. ' ' → logprob: -11.645910263061523
    8. '_pos' → logprob: -11.895910263061523
    9. '(f' → logprob: -12.770910263061523
    10. '(current' → logprob: -12.895910263061523

Token 140: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.173704271830502e-06
    2. ' pos' → logprob: -12.75000286102295
    3. '(pos' → logprob: -15.37500286102295
    4. ' (' → logprob: -20.250003814697266
    5. '	pos' → logprob: -20.875003814697266
    6. '   ' → logprob: -21.250003814697266
    7. ' ' → logprob: -21.625003814697266
    8. '_pos' → logprob: -22.375003814697266
    9. '(' → logprob: -22.625003814697266
    10. ',pos' → logprob: -22.875003814697266

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.248469718324486e-05
    2. ' ,' → logprob: -11.000022888183594
    3. '<|end|>' → logprob: -13.625022888183594
    4. ',)' → logprob: -14.750022888183594
    5. ',last' → logprob: -14.875022888183594
    6. ')' → logprob: -15.375022888183594
    7. '==' → logprob: -15.375022888183594
    8. ',
' → logprob: -15.375022888183594
    9. '‌,' → logprob: -15.375022888183594
    10. ',current' → logprob: -15.500022888183594

Token 142: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0005530327325686812
    2. ' current' → logprob: -7.500553131103516
    3. '$current' → logprob: -18.125553131103516
    4. 'Current' → logprob: -18.250553131103516
    5. '(current' → logprob: -18.375553131103516
    6. ' ' → logprob: -18.750553131103516
    7. '_current' → logprob: -19.000553131103516
    8. '[current' → logprob: -19.000553131103516
    9. '.current' → logprob: -19.500553131103516
    10. ')' → logprob: -19.500553131103516

Token 143: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.816093228830141e-06
    2. 'sum' → logprob: -14.00000286102295
    3. '_s' → logprob: -14.25000286102295
    4. '_' → logprob: -14.25000286102295
    5. ')_' → logprob: -15.25000286102295
    6. ')' → logprob: -15.37500286102295
    7. ' _' → logprob: -16.375001907348633
    8. '_SUM' → logprob: -17.000001907348633
    9. '_token' → logprob: -17.125001907348633
    10. '_tokens' → logprob: -17.750001907348633

Token 144: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.464347173576243e-05
    2. ' )' → logprob: -10.37503433227539
    3. 'in' → logprob: -12.87503433227539
    4. ' in' → logprob: -15.00003433227539
    5. ',)' → logprob: -16.62503433227539
    6. '   ' → logprob: -16.75003433227539
    7. ')
' → logprob: -16.75003433227539
    8. '')' → logprob: -16.87503433227539
    9. '))' → logprob: -17.37503433227539
    10. '")' → logprob: -17.50003433227539

Token 145: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17236587405204773
    2. 'in' → logprob: -1.9223659038543701
    3. ')' → logprob: -4.422365665435791
    4. ' ' → logprob: -10.54736614227295
    5. ']' → logprob: -11.04736614227295
    6. ' )' → logprob: -11.29736614227295
    7. ',' → logprob: -13.79736614227295
    8. '  ' → logprob: -14.29736614227295
    9. '   ' → logprob: -14.29736614227295
    10. 'not' → logprob: -14.29736614227295

Token 146: ' memo' (ID: 46393)
  Prédit: ' memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' memo' → logprob: -0.16022726893424988
    2. 'memo' → logprob: -1.9102272987365723
    3. 'm' → logprob: -12.910226821899414
    4. '.memo' → logprob: -15.160226821899414
    5. 'mem' → logprob: -16.035226821899414
    6. ' meme' → logprob: -16.910226821899414
    7. ' mem' → logprob: -17.035226821899414
    8. '	m' → logprob: -17.035226821899414
    9. '```' → logprob: -17.035226821899414
    10. ' ' → logprob: -17.285226821899414

Token 147: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00024168188974726945
    2. ':
' → logprob: -9.12524127960205
    3. ' :' → logprob: -9.50024127960205
    4. ':return' → logprob: -10.50024127960205
    5. '):' → logprob: -10.62524127960205
    6. '<|end|>' → logprob: -12.62524127960205
    7. ']:' → logprob: -13.75024127960205
    8. '):
' → logprob: -15.12524127960205
    9. ':**' → logprob: -15.50024127960205
    10. '}:' → logprob: -15.50024127960205

Token 148: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03114250861108303
    2. ' return' → logprob: -3.906142473220825
    3. ':' → logprob: -5.156142711639404
    4. 'return' → logprob: -6.281142711639404
    5. ':return' → logprob: -6.906142711639404
    6. '           ' → logprob: -7.031142711639404
    7. '   ' → logprob: -7.281142711639404
    8. ':
' → logprob: -8.656142234802246
    9. ' :' → logprob: -9.281142234802246
    10. '	return' → logprob: -11.656142234802246

Token 149: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6935876607894897
    2. 'return' (adapté à ' return') → logprob: -0.6935876607894897
    3. '           ' → logprob: -8.068587303161621
    4. '       ' → logprob: -9.568587303161621
    5. '   ' → logprob: -10.068587303161621
    6. '	return' → logprob: -12.443587303161621
    7. ':return' → logprob: -12.568587303161621
    8. '
' → logprob: -12.943587303161621
    9. '    ' → logprob: -13.443587303161621
    10. '               ' → logprob: -14.443587303161621

Token 150: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.0619937963783741
    2. ' memo' → logprob: -2.8119938373565674
    3. ' ' → logprob: -11.686993598937988
    4. '   ' → logprob: -12.061993598937988
    5. 'm' → logprob: -12.436993598937988
    6. 'mem' → logprob: -12.811993598937988
    7. '  ' → logprob: -13.561993598937988
    8. 'mime' → logprob: -13.936993598937988
    9. '    ' → logprob: -14.436993598937988
    10. '     ' → logprob: -14.811993598937988

Token 151: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.005537777207791805
    2. '[pos' → logprob: -5.505537986755371
    3. '(pos' → logprob: -6.630537986755371
    4. '[' → logprob: -10.130537986755371
    5. ' (' → logprob: -10.130537986755371
    6. '(' → logprob: -10.380537986755371
    7. '((' → logprob: -10.880537986755371
    8. '[
' → logprob: -12.505537986755371
    9. '   ' → logprob: -12.630537986755371
    10. ' [(' → logprob: -14.505537986755371

Token 152: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -4.320199877838604e-07
    2. ' pos' → logprob: -15.0
    3. '	pos' → logprob: -20.75
    4. '(pos' → logprob: -21.5
    5. '   ' → logprob: -21.75
    6. '_pos' → logprob: -21.875
    7. 'position' → logprob: -21.875
    8. 'po' → logprob: -22.375
    9. ' ' → logprob: -22.875
    10. '.pos' → logprob: -23.125

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.531315314830863e-06
    2. ',current' → logprob: -13.000003814697266
    3. ' ,' → logprob: -13.875003814697266
    4. ')' → logprob: -15.875003814697266
    5. ',pos' → logprob: -16.250003814697266
    6. '[' → logprob: -16.875003814697266
    7. '```' → logprob: -17.250003814697266
    8. ' ' → logprob: -17.375003814697266
    9. '<|end|>' → logprob: -18.000003814697266
    10. '   ' → logprob: -18.375003814697266

Token 154: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -4.596781946020201e-05
    2. ' current' → logprob: -10.000045776367188
    3. '_current' → logprob: -15.250045776367188
    4. ' ' → logprob: -16.625045776367188
    5. '   ' → logprob: -17.125045776367188
    6. '$current' → logprob: -17.250045776367188
    7. '(current' → logprob: -17.375045776367188
    8. '[current' → logprob: -17.750045776367188
    9. 'number' → logprob: -18.000045776367188
    10. '	current' → logprob: -18.125045776367188

Token 155: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.0339031834737398e-05
    2. 'sum' → logprob: -11.500020027160645
    3. '_s' → logprob: -12.375020027160645
    4. ',' → logprob: -12.875020027160645
    5. '_pos' → logprob: -13.500020027160645
    6. '_' → logprob: -14.250020027160645
    7. ')' → logprob: -14.625020027160645
    8. ',_' → logprob: -15.750020027160645
    9. ')]' → logprob: -16.00002098083496
    10. '_,' → logprob: -16.25002098083496

Token 156: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00045617512660101056
    2. ']' → logprob: -7.7504563331604
    3. ')' → logprob: -10.750455856323242
    4. '])' → logprob: -13.125455856323242
    5. ')]

' → logprob: -14.875455856323242
    6. ')]
' → logprob: -15.125455856323242
    7. ' ]' → logprob: -15.125455856323242
    8. ' )' → logprob: -15.375455856323242
    9. ')][' → logprob: -15.500455856323242
    10. ')])' → logprob: -15.750455856323242

Token 157: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.182717427611351
    2. ' :' → logprob: -2.5577173233032227
    3. '   ' → logprob: -3.4327173233032227
    4. '{' → logprob: -3.5577173233032227
    5. ' {' → logprob: -5.057717323303223
    6. ' ' → logprob: -5.557717323303223
    7. '<|end|>' → logprob: -5.557717323303223
    8. '       ' → logprob: -5.807717323303223
    9. ')' → logprob: -5.932717323303223
    10. '):' → logprob: -6.557717323303223

Token 158: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.6847668886184692
    2. ' result' → logprob: -1.9347668886184692
    3. 'result' → logprob: -2.1847667694091797
    4. ' res' → logprob: -2.4347667694091797
    5. 'results' → logprob: -2.5597667694091797
    6. ' results' → logprob: -2.8097667694091797
    7. 'part' → logprob: -5.30976676940918
    8. ' next' → logprob: -6.18476676940918
    9. '       ' → logprob: -6.30976676940918
    10. ' partitions' → logprob: -6.43476676940918

Token 159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193464756011963
    2. '=' → logprob: -1.5019346475601196
    3. ' ' → logprob: -12.876935005187988
    4. '=set' → logprob: -13.876935005187988
    5. 's' → logprob: -14.626935005187988
    6. '=[]' → logprob: -15.126935005187988
    7. 'ult' → logprob: -15.251935005187988
    8. '   ' → logprob: -15.751935005187988
    9. '_' → logprob: -16.501934051513672
    10. '}' → logprob: -16.501934051513672

Token 160: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0019307781476527452
    2. ' set' → logprob: -6.2519307136535645
    3. '{}' → logprob: -13.251931190490723
    4. '{' → logprob: -15.626931190490723
    5. ' ' → logprob: -16.251930236816406
    6. '[]' → logprob: -16.376930236816406
    7. '	set' → logprob: -16.751930236816406
    8. '   ' → logprob: -17.126930236816406
    9. '(set' → logprob: -18.126930236816406
    10. '=set' → logprob: -19.876930236816406

Token 161: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00038086410495452583
    2. '()
' → logprob: -8.250380516052246
    3. '(' → logprob: -9.375380516052246
    4. '()

' → logprob: -11.375380516052246
    5. '(),' → logprob: -12.000380516052246
    6. '([(' → logprob: -12.125380516052246
    7. '()\' → logprob: -13.000380516052246
    8. '([]' → logprob: -13.250380516052246
    9. '()]' → logprob: -13.875380516052246
    10. '([' → logprob: -13.875380516052246

Token 162: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 163: ' max' (ID: 2999)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06246671453118324
    2. 'for' → logprob: -3.312466621398926
    3. '       ' → logprob: -3.937466621398926
    4. ' ' → logprob: -6.062466621398926
    5. '   ' → logprob: -6.437466621398926
    6. '    ' → logprob: -8.312466621398926
    7. '<|end|>' → logprob: -9.187466621398926
    8. ' 
' → logprob: -9.312466621398926
    9. '        
' → logprob: -9.812466621398926
    10. '  ' → logprob: -9.937466621398926

Token 164: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.02580319158732891
    2. 'sum' → logprob: -4.775803089141846
    3. '_' → logprob: -4.900803089141846
    4. '<|end|>' → logprob: -5.025803089141846
    5. '_s' → logprob: -6.525803089141846
    6. ' sum' → logprob: -7.775803089141846
    7. '<|end|>' → logprob: -8.275803565979004
    8. ' _' → logprob: -8.775803565979004
    9. '_total' → logprob: -9.525803565979004
    10. '_token' → logprob: -9.650803565979004

Token 165: '_found' (ID: 50825)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1451851725578308
    2. ' =' → logprob: -2.0201852321624756
    3. '_' → logprob: -6.3951849937438965
    4. '<|end|>' → logprob: -7.8951849937438965
    5. '_=' → logprob: -8.520185470581055
    6. '_found' → logprob: -9.645185470581055
    7. '_seen' → logprob: -10.645185470581055
    8. 'found' → logprob: -10.645185470581055
    9. '_val' → logprob: -10.895185470581055
    10. '<|end|>' → logprob: -11.020185470581055

Token 166: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11291047185659409
    2. '=' → logprob: -2.237910509109497
    3. ' ' → logprob: -9.487910270690918
    4. '<|end|>' → logprob: -12.112910270690918
    5. '  ' → logprob: -13.362910270690918
    6. '   ' → logprob: -13.862910270690918
    7. ',' → logprob: -13.862910270690918
    8. ')' → logprob: -14.862910270690918
    9. '=None' → logprob: -15.112910270690918
    10. 'token' → logprob: -15.237910270690918

Token 167: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.010149132460355759
    2. '-current' → logprob: -5.260149002075195
    3. ' -' → logprob: -5.885149002075195
    4. 'current' → logprob: -6.385149002075195
    5. '0' → logprob: -8.510149002075195
    6. ' current' → logprob: -8.885149002075195
    7. '-target' → logprob: -9.760149002075195
    8. '-s' → logprob: -12.510149002075195
    9. '-best' → logprob: -12.635149002075195
    10. ' ' → logprob: -12.635149002075195

Token 168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.282920129597187e-05
    2. 'float' → logprob: -11.500012397766113
    3. '2' → logprob: -13.750012397766113
    4. ' ' → logprob: -14.875012397766113
    5. 'inf' → logprob: -15.000012397766113
    6. '   ' → logprob: -15.250012397766113
    7. '100' → logprob: -15.750012397766113
    8. '-' → logprob: -15.875012397766113
    9. '999' → logprob: -16.12501335144043
    10. '10' → logprob: -16.75001335144043

Token 169: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3628515303134918
    2. '<|end|>' → logprob: -1.2378515005111694
    3. ' ' → logprob: -4.862851619720459
    4. '   ' → logprob: -6.362851619720459
    5. ' for' → logprob: -6.737851619720459
    6. '<|end|>' → logprob: -6.862851619720459
    7. '        
' → logprob: -6.987851619720459
    8. ' 
' → logprob: -7.487851619720459
    9. '    ' → logprob: -8.7378511428833
    10. 'for' → logprob: -8.8628511428833

Token 171: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06302618235349655
    2. 'for' (adapté à ' for') → logprob: -3.438026189804077
    3. '   ' → logprob: -4.313025951385498
    4. '       ' → logprob: -4.938025951385498
    5. ' ' → logprob: -5.438025951385498
    6. ' 
' → logprob: -6.313025951385498
    7. '    
' → logprob: -7.188025951385498
    8. '    ' → logprob: -7.438025951385498
    9. ' ' → logprob: -7.938025951385498
    10. '        
' → logprob: -8.813026428222656

Token 172: ' end' (ID: 1268)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.715949535369873
    2. ' length' → logprob: -1.340949535369873
    3. 'end' → logprob: -1.715949535369873
    4. 'i' → logprob: -3.215949535369873
    5. ' end' → logprob: -4.215949535369873
    6. ' i' → logprob: -4.965949535369873
    7. 'l' → logprob: -5.090949535369873
    8. 'cut' → logprob: -6.965949535369873
    9. ' cut' → logprob: -7.965949535369873
    10. ' l' → logprob: -8.840950012207031

Token 173: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11295700818300247
    2. 'in' → logprob: -2.237957000732422
    3. ')' → logprob: -10.362957000732422
    4. ' ' → logprob: -10.612957000732422
    5. 's' → logprob: -11.112957000732422
    6. '_in' → logprob: -11.362957000732422
    7. 'i' → logprob: -11.612957000732422
    8. 'range' → logprob: -11.612957000732422
    9. '=' → logprob: -11.987957000732422
    10. 'In' → logprob: -12.487957000732422

Token 174: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931498050689697
    2. 'range' → logprob: -0.6931498050689697
    3. '(range' → logprob: -13.19314956665039
    4. '   ' → logprob: -14.56814956665039
    5. ' ' → logprob: -15.94314956665039
    6. '	range' → logprob: -15.94314956665039
    7. ')' → logprob: -17.56814956665039
    8. '  ' → logprob: -17.81814956665039
    9. '_range' → logprob: -19.31814956665039
    10. '.range' → logprob: -19.94314956665039

Token 175: '(pos' (ID: 24566)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6101851463317871
    2. '(pos' → logprob: -1.360185146331787
    3. ' pos' → logprob: -1.610185146331787
    4. ',pos' → logprob: -8.610185623168945
    5. '[pos' → logprob: -9.985185623168945
    6. ' (' → logprob: -10.860185623168945
    7. '(' → logprob: -10.985185623168945
    8. '	pos' → logprob: -11.360185623168945
    9. ',' → logprob: -12.485185623168945
    10. '   ' → logprob: -12.735185623168945

Token 176: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6797319650650024
    2. ',' → logprob: -0.8047319650650024
    3. ' +' → logprob: -3.429731845855713
    4. ' ,' → logprob: -4.304731845855713
    5. '+,' → logprob: -9.304732322692871
    6. '   ' → logprob: -10.804732322692871
    7. ',pos' → logprob: -11.304732322692871
    8. ',
' → logprob: -12.179732322692871
    9. ',+' → logprob: -12.554732322692871
    10. ' ' → logprob: -14.054732322692871

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.2524021157296374e-05
    2. ' ' → logprob: -9.875052452087402
    3. '6' → logprob: -15.437552452087402
    4. '   ' → logprob: -15.562552452087402
    5. '2' → logprob: -16.18755340576172
    6. '
' → logprob: -16.68755340576172
    7. '```' → logprob: -16.75005340576172
    8. 'len' → logprob: -17.12505340576172
    9. '0' → logprob: -17.43755340576172
    10. '10' → logprob: -17.50005340576172

Token 178: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006035494152456522
    2. ' ,' → logprob: -7.750603675842285
    3. ',len' → logprob: -9.375603675842285
    4. '1' → logprob: -10.125603675842285
    5. ',n' → logprob: -11.250603675842285
    6. ')' → logprob: -11.500603675842285
    7. ',length' → logprob: -11.750603675842285
    8. '<|end|>' → logprob: -12.375603675842285
    9. ' ' → logprob: -13.000603675842285
    10. '```' → logprob: -13.625603675842285

Token 179: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006544163916260004
    2. 'min' → logprob: -8.000654220581055
    3. ' n' → logprob: -8.125654220581055
    4. ' min' → logprob: -11.500654220581055
    5. 'pos' → logprob: -11.500654220581055
    6. '   ' → logprob: -13.875654220581055
    7. 'npos' → logprob: -14.625654220581055
    8. '```' → logprob: -14.625654220581055
    9. 'len' → logprob: -16.000654220581055
    10. ' ' → logprob: -16.125654220581055

Token 180: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05497267097234726
    2. '):' → logprob: -3.3049726486206055
    3. ' +' → logprob: -4.1799726486206055
    4. '):
' → logprob: -6.8049726486206055
    5. ')' → logprob: -8.929972648620605
    6. '   ' → logprob: -9.054972648620605
    7. ' ' → logprob: -9.929972648620605
    8. '1' → logprob: -10.304972648620605
    9. '```' → logprob: -11.179972648620605
    10. '       ' → logprob: -11.804972648620605

Token 181: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -16.0000057220459
    4. '```' → logprob: -16.5000057220459
    5. '
' → logprob: -17.1250057220459
    6. ')' → logprob: -17.5000057220459
    7. '       ' → logprob: -18.6250057220459
    8. '2' → logprob: -18.8750057220459
    9. '``' → logprob: -19.0000057220459
    10. '           ' → logprob: -19.3750057220459

Token 182: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16301991045475006
    2. ':' → logprob: -1.9130198955535889
    3. '):
' → logprob: -6.663020133972168
    4. ',' → logprob: -6.913020133972168
    5. ' ):' → logprob: -8.663020133972168
    6. ')' → logprob: -9.163020133972168
    7. ' :' → logprob: -9.538020133972168
    8. '<|end|>' → logprob: -10.163020133972168
    9. '       ' → logprob: -10.413020133972168
    10. '():' → logprob: -10.538020133972168

Token 183: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.985718846321106
    2. '       ' → logprob: -1.235718846321106
    3. '<|end|>' → logprob: -1.360718846321106
    4. ' ' → logprob: -3.1107187271118164
    5. '        ' → logprob: -4.110718727111816
    6. '<|end|>' → logprob: -5.485718727111816
    7. ',' → logprob: -5.985718727111816
    8. '        
' → logprob: -6.735718727111816
    9. '            
' → logprob: -6.735718727111816
    10. '   ' → logprob: -6.860718727111816

Token 184: ' part' (ID: 997)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.910903811454773
    2. 'token' → logprob: -1.660903811454773
    3. 'num' → logprob: -2.2859039306640625
    4. 'segment' → logprob: -2.7859039306640625
    5. 'part' (adapté à ' part') → logprob: -3.4109039306640625
    6. ' part' → logprob: -3.4109039306640625
    7. ' token' → logprob: -3.5359039306640625
    8. ' segment' → logprob: -3.6609039306640625
    9. ' substring' → logprob: -3.7859039306640625
    10. 'chunk' → logprob: -3.9109039306640625

Token 185: '_str' (ID: 6182)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16293929517269135
    2. '=' → logprob: -1.9129393100738525
    3. '_str' → logprob: -6.662939071655273
    4. 's' → logprob: -7.037939071655273
    5. '_' → logprob: -8.912939071655273
    6. '_len' → logprob: -9.162939071655273
    7. '_digits' → logprob: -9.162939071655273
    8. '=int' → logprob: -9.537939071655273
    9. '_length' → logprob: -9.912939071655273
    10. '_s' → logprob: -10.662939071655273

Token 186: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132754862308502
    2. ' =' → logprob: -1.3132754564285278
    3. '=d' → logprob: -11.563275337219238
    4. 'digits' → logprob: -13.313275337219238
    5. '=int' → logprob: -13.813275337219238
    6. ' ' → logprob: -14.063275337219238
    7. 's' → logprob: -15.688275337219238
    8. 'd' → logprob: -15.688275337219238
    9. ')' → logprob: -16.438276290893555
    10. '   ' → logprob: -16.813276290893555

Token 187: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.0892447903752327
    2. ' digits' → logprob: -2.464244842529297
    3. 'int' → logprob: -8.464244842529297
    4. 'number' → logprob: -10.464244842529297
    5. ' int' → logprob: -10.839244842529297
    6. '   ' → logprob: -10.839244842529297
    7. ' number' → logprob: -11.964244842529297
    8. ' ' → logprob: -11.964244842529297
    9. 'digit' → logprob: -12.089244842529297
    10. '  ' → logprob: -13.339244842529297

Token 188: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -3.214019307051785e-05
    2. '[' → logprob: -10.375032424926758
    3. '[:' → logprob: -14.750032424926758
    4. 'pos' → logprob: -15.375032424926758
    5. '[position' → logprob: -16.250032424926758
    6. '[param' → logprob: -17.625032424926758
    7. '[
' → logprob: -17.750032424926758
    8. ' [' → logprob: -18.125032424926758
    9. '[prop' → logprob: -18.375032424926758
    10. '[p' → logprob: -18.375032424926758

Token 189: ':end' (ID: 63990)
  Prédit: ':end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':end' → logprob: -3.5716304410016164e-05
    2. ':' → logprob: -11.250035285949707
    3. 'end' → logprob: -11.500035285949707
    4. ' :' → logprob: -11.750035285949707
    5. ',end' → logprob: -12.625035285949707
    6. '@end' → logprob: -14.375035285949707
    7. '[end' → logprob: -14.875035285949707
    8. '	end' → logprob: -15.625035285949707
    9. ' ' → logprob: -15.875035285949707
    10. '   ' → logprob: -17.250036239624023

Token 190: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01185899693518877
    2. ']
' → logprob: -4.636858940124512
    3. ')' → logprob: -6.261858940124512
    4. '           ' → logprob: -9.636858940124512
    5. '])' → logprob: -9.886858940124512
    6. ')
' → logprob: -10.636858940124512
    7. ')]' → logprob: -11.011858940124512
    8. ']

' → logprob: -11.511858940124512
    9. ' ]' → logprob: -11.636858940124512
    10. ']
' → logprob: -12.261858940124512

Token 191: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4628422260284424
    2. '<|end|>' → logprob: -1.0878422260284424
    3. ' ' → logprob: -3.9628422260284424
    4. '<|end|>' → logprob: -4.712841987609863
    5. '            
' → logprob: -6.712841987609863
    6. '            ' → logprob: -6.837841987609863
    7. ')' → logprob: -6.837841987609863
    8. ',' → logprob: -7.837841987609863
    9. '               ' → logprob: -8.087841987609863
    10. ' 
' → logprob: -8.212841987609863

Token 192: ' if' (ID: 538)
  Prédit: ' part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' part' → logprob: -0.7282659411430359
    2. 'part' → logprob: -0.8532659411430359
    3. '           ' → logprob: -2.4782660007476807
    4. ' if' → logprob: -5.603265762329102
    5. 'num' → logprob: -6.603265762329102
    6. 'if' (adapté à ' if') → logprob: -6.978265762329102
    7. ' val' → logprob: -8.353265762329102
    8. ' num' → logprob: -8.478265762329102
    9. 'val' → logprob: -9.103265762329102
    10. 'value' → logprob: -9.103265762329102

Token 193: ' part' (ID: 997)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6329807043075562
    2. ' int' → logprob: -1.2579807043075562
    3. 'part' → logprob: -2.3829808235168457
    4. ' part' → logprob: -3.1329808235168457
    5. ' not' → logprob: -3.5079808235168457
    6. 'len' → logprob: -4.757980823516846
    7. ' len' → logprob: -5.257980823516846
    8. 'not' → logprob: -6.007980823516846
    9. ' ' → logprob: -7.257980823516846
    10. ''' → logprob: -7.882980823516846

Token 194: '_str' (ID: 6182)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.3737573623657227
    2. '[' → logprob: -1.4987573623657227
    3. '_str' → logprob: -1.6237573623657227
    4. ' ==' → logprob: -2.1237573623657227
    5. '.startswith' → logprob: -2.4987573623657227
    6. 'isdigit' → logprob: -3.9987573623657227
    7. '>' → logprob: -4.623757362365723
    8. '_len' → logprob: -4.748757362365723
    9. 'str' → logprob: -4.873757362365723
    10. 't' → logprob: -4.998757362365723

Token 195: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12797166407108307
    2. '.startswith' → logprob: -2.502971649169922
    3. '==' → logprob: -3.627971649169922
    4. '.' → logprob: -4.877971649169922
    5. 'and' → logprob: -6.502971649169922
    6. 'startswith' → logprob: -6.877971649169922
    7. ' ==' → logprob: -7.127971649169922
    8. ' and' → logprob: -7.752971649169922
    9. '>' → logprob: -9.127971649169922
    10. 'leading' → logprob: -10.002971649169922

Token 196: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '
' → logprob: -18.0
    4. '```' → logprob: -18.375
    5. '   ' → logprob: -18.5
    6. '==' → logprob: -18.875
    7. 'startswith' → logprob: -18.875
    8. '۰' → logprob: -19.0
    9. ''' → logprob: -19.125
    10. ']' → logprob: -19.5

Token 197: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4115164875984192
    2. '!=' → logprob: -1.1615164279937744
    3. '!='' → logprob: -5.0365166664123535
    4. ' !=' → logprob: -5.1615166664123535
    5. ' ==' → logprob: -5.6615166664123535
    6. ']' → logprob: -6.1615166664123535
    7. '=='' → logprob: -6.2865166664123535
    8. ']==' → logprob: -6.4115166664123535
    9. '=' → logprob: -6.5365166664123535
    10. '0' → logprob: -7.4115166664123535

Token 198: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.37099266052246094
    2. '!=' → logprob: -1.245992660522461
    3. '=' → logprob: -4.995992660522461
    4. ' ==' → logprob: -5.370992660522461
    5. ' !=' → logprob: -5.745992660522461
    6. '0' → logprob: -5.995992660522461
    7. '!='' → logprob: -5.995992660522461
    8. '=='' → logprob: -5.995992660522461
    9. ''' → logprob: -10.120992660522461
    10. '==
' → logprob: -10.245992660522461

Token 199: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0025267915334552526
    2. '"' → logprob: -6.377526760101318
    3. '0' → logprob: -7.627526760101318
    4. ' '' → logprob: -8.002527236938477
    5. ' ' → logprob: -14.252527236938477
    6. ''a' → logprob: -14.877527236938477
    7. ''o' → logprob: -15.627527236938477
    8. ''b' → logprob: -15.627527236938477
    9. ''l' → logprob: -15.877527236938477
    10. ''w' → logprob: -16.127527236938477

Token 200: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.700132997939363e-05
    2. ''' → logprob: -11.000017166137695
    3. ' ' → logprob: -15.375017166137695
    4. '"' → logprob: -17.000017166137695
    5. '1' → logprob: -19.000017166137695
    6. ''s' → logprob: -19.625017166137695
    7. ' '' → logprob: -19.625017166137695
    8. '00' → logprob: -19.875017166137695
    9. '-' → logprob: -20.125017166137695
    10. '')' → logprob: -20.250017166137695

Token 201: '':
' (ID: 7669)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2403745800256729
    2. ''' → logprob: -1.9903745651245117
    3. '':' → logprob: -3.1153745651245117
    4. 'and' → logprob: -3.7403745651245117
    5. ':' → logprob: -5.115374565124512
    6. '':
' → logprob: -6.490374565124512
    7. ':
' → logprob: -6.990374565124512
    8. 'continue' → logprob: -9.115374565124512
    9. '<|end|>' → logprob: -9.990374565124512
    10. ' continue' → logprob: -10.115374565124512

Token 202: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005707867676392198
    2. ' continue' → logprob: -7.875570774078369
    3. 'continue' → logprob: -8.750571250915527
    4. '           ' → logprob: -10.875571250915527
    5. '                   ' → logprob: -11.875571250915527
    6. '              ' → logprob: -13.375571250915527
    7. '   ' → logprob: -14.250571250915527
    8. '             ' → logprob: -14.250571250915527
    9. '                ' → logprob: -14.500571250915527
    10. '	continue' → logprob: -14.750571250915527

Token 203: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.2153904438018799
    2. 'break' → logprob: -1.2153904438018799
    3. 'continue' → logprob: -1.4653904438018799
    4. ' break' → logprob: -2.21539044380188
    5. ' continue' → logprob: -2.71539044380188
    6. '                   ' → logprob: -7.590390205383301
    7. '           ' → logprob: -11.3403902053833
    8. '   ' → logprob: -12.4653902053833
    9. '```' → logprob: -12.7153902053833
    10. '	break' → logprob: -13.2153902053833

Token 204: ' Leading' (ID: 78087)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.0688636302947998
    2. 'break' → logprob: -3.3188636302948
    3. ' continue' → logprob: -3.5688636302948
    4. '               ' → logprob: -6.818863868713379
    5. ' break' → logprob: -6.943863868713379
    6. '           ' → logprob: -9.318863868713379
    7. '                   ' → logprob: -11.318863868713379
    8. '   ' → logprob: -13.193863868713379
    9. 'continu' → logprob: -14.568863868713379
    10. '	continue' → logprob: -14.693863868713379

Token 205: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.41641202569007874
    2. 'continue' → logprob: -1.4164119958877563
    3. ' continue' → logprob: -2.916412115097046
    4. 'zero' → logprob: -4.291411876678467
    5. ' ' → logprob: -4.541411876678467
    6. ' zero' → logprob: -4.666411876678467
    7. 'break' → logprob: -5.291411876678467
    8. ' break' → logprob: -6.666411876678467
    9. '<|end|>' → logprob: -6.916411876678467
    10. ' zeros' → logprob: -7.041411876678467

Token 206: ' not' (ID: 625)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8250093460083008
    2. 'continue' → logprob: -1.3250093460083008
    3. ' continue' → logprob: -1.4500093460083008
    4. '           ' → logprob: -2.825009346008301
    5. '                   ' → logprob: -6.700009346008301
    6. 'break' → logprob: -8.0750093460083
    7. '
' → logprob: -8.9500093460083
    8. ' break' → logprob: -9.0750093460083
    9. '	continue' → logprob: -9.3250093460083
    10. '   ' → logprob: -9.4500093460083

Token 207: ' allowed' (ID: 9279)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.012788510881364346
    2. ' allowed' → logprob: -4.38778829574585
    3. 'valid' → logprob: -9.137788772583008
    4. 'allow' → logprob: -9.387788772583008
    5. 'acceptable' → logprob: -10.012788772583008
    6. ' valid' → logprob: -10.887788772583008
    7. '_allowed' → logprob: -11.762788772583008
    8. 'accepted' → logprob: -12.262788772583008
    9. ')' → logprob: -12.762788772583008
    10. ' acceptable' → logprob: -13.512788772583008

Token 208: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03161223232746124
    2. ' continue' → logprob: -3.7816121578216553
    3. 'continue' → logprob: -5.281612396240234
    4. '           ' → logprob: -6.031612396240234
    5. '                   ' → logprob: -7.156612396240234
    6. 'Continue' → logprob: -11.406612396240234
    7. '	continue' → logprob: -11.531612396240234
    8. '_continue' → logprob: -12.031612396240234
    9. '   ' → logprob: -12.406612396240234
    10. ' continues' → logprob: -12.406612396240234

Token 209: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015591430477797985
    2. ' continue' → logprob: -4.390591621398926
    3. 'continue' → logprob: -5.890591621398926
    4. '           ' → logprob: -8.390591621398926
    5. '                   ' → logprob: -9.515591621398926
    6. '	continue' → logprob: -12.765591621398926
    7. ' continues' → logprob: -13.515591621398926
    8. '_continue' → logprob: -13.765591621398926
    9. 'Continue' → logprob: -13.890591621398926
    10. '<|end|>' → logprob: -14.515591621398926

Token 210: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.04377321898937225
    2. ' continue' → logprob: -3.5437731742858887
    3. 'break' → logprob: -4.293773174285889
    4. ' break' → logprob: -8.543773651123047
    5. '               ' → logprob: -9.793773651123047
    6. '           ' → logprob: -11.293773651123047
    7. '                   ' → logprob: -11.918773651123047
    8. '	continue' → logprob: -14.543773651123047
    9. '   ' → logprob: -14.793773651123047
    10. '```' → logprob: -15.043773651123047

Token 211: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2028132975101471
    2. '<|end|>' → logprob: -1.8278132677078247
    3. '            
' → logprob: -5.202813148498535
    4. ' ' → logprob: -5.202813148498535
    5. '       ' → logprob: -5.702813148498535
    6. ')' → logprob: -6.202813148498535
    7. '<|end|>' → logprob: -6.452813148498535
    8. '            ' → logprob: -6.952813148498535
    9. ' if' → logprob: -7.327813148498535
    10. ' 
' → logprob: -7.577813148498535

Token 212: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016103114932775497
    2. '<|end|>' → logprob: -4.516103267669678
    3. '            
' → logprob: -6.641103267669678
    4. ')' → logprob: -6.891103267669678
    5. ' if' → logprob: -7.391103267669678
    6. '       ' → logprob: -7.516103267669678
    7. '<|end|>' → logprob: -8.39110279083252
    8. ' ' → logprob: -8.51610279083252
    9. '               ' → logprob: -8.64110279083252
    10. 'token' → logprob: -8.76610279083252

Token 213: ' part' (ID: 997)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1405976265668869
    2. 'token' → logprob: -3.0155975818634033
    3. ' if' → logprob: -3.7655975818634033
    4. ' part' → logprob: -4.140597820281982
    5. 'part' (adapté à ' part') → logprob: -4.140597820281982
    6. ' token' → logprob: -4.640597820281982
    7. '            
' → logprob: -5.265597820281982
    8. ' try' → logprob: -6.390597820281982
    9. 'if' → logprob: -6.890597820281982
    10. 'value' → logprob: -7.015597820281982

Token 214: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.5065147280693054
    2. '_value' → logprob: -1.2565147876739502
    3. '_int' → logprob: -2.75651478767395
    4. '_num' → logprob: -3.25651478767395
    5. ' =' → logprob: -5.006514549255371
    6. '_' → logprob: -6.006514549255371
    7. '_len' → logprob: -7.506514549255371
    8. '=' → logprob: -7.881514549255371
    9. '=int' → logprob: -8.631514549255371
    10. 'int' → logprob: -9.006514549255371

Token 215: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06225021556019783
    2. '=' → logprob: -2.8122501373291016
    3. '=int' → logprob: -8.187250137329102
    4. 'int' → logprob: -12.437250137329102
    5. ' ' → logprob: -15.312250137329102
    6. '   ' → logprob: -16.0622501373291
    7. ' int' → logprob: -17.4372501373291
    8. '  ' → logprob: -17.4372501373291
    9. ',' → logprob: -18.0622501373291
    10. '_int' → logprob: -19.0622501373291

Token 216: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011047935113310814
    2. ' int' → logprob: -4.511047840118408
    3. ' ' → logprob: -16.26104736328125
    4. '(int' → logprob: -17.88604736328125
    5. '   ' → logprob: -18.51104736328125
    6. '  ' → logprob: -19.01104736328125
    7. '	int' → logprob: -19.38604736328125
    8. '<int' → logprob: -19.63604736328125
    9. 'part' → logprob: -19.76104736328125
    10. '[int' → logprob: -20.01104736328125

Token 217: '(part' (ID: 51033)
  Prédit: '(part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(part' → logprob: -0.005559705663472414
    2. 'part' → logprob: -5.255559921264648
    3. '(' → logprob: -8.130559921264648
    4. ' (' → logprob: -11.505559921264648
    5. '(d' → logprob: -11.505559921264648
    6. '(parts' → logprob: -12.380559921264648
    7. ' part' → logprob: -12.755559921264648
    8. ')' → logprob: -13.505559921264648
    9. 'digits' → logprob: -14.005559921264648
    10. '	part' → logprob: -14.255559921264648

Token 218: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -9.162282367469743e-05
    2. 'str' → logprob: -9.750091552734375
    3. '_val' → logprob: -10.875091552734375
    4. ')' → logprob: -11.375091552734375
    5. '))' → logprob: -14.625091552734375
    6. '_)' → logprob: -15.000091552734375
    7. '_' → logprob: -15.125091552734375
    8. 'Str' → logprob: -15.375091552734375
    9. '[' → logprob: -15.500091552734375
    10. '_digits' → logprob: -15.625091552734375

Token 219: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002902585780248046
    2. ')
' → logprob: -5.877902507781982
    3. ' )' → logprob: -9.37790298461914
    4. '           ' → logprob: -12.62790298461914
    5. ')

' → logprob: -13.00290298461914
    6. ')
' → logprob: -13.12790298461914
    7. ' )
' → logprob: -13.50290298461914
    8. '       ' → logprob: -14.12790298461914
    9. '   ' → logprob: -14.37790298461914
    10. ',' → logprob: -14.50290298461914

Token 220: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5378459095954895
    2. '<|end|>' → logprob: -0.9128459095954895
    3. '<|end|>' → logprob: -5.537846088409424
    4. '            
' → logprob: -5.537846088409424
    5. ' if' → logprob: -5.912846088409424
    6. '            ' → logprob: -6.912846088409424
    7. ' 
' → logprob: -7.287846088409424
    8. ' ' → logprob: -7.662846088409424
    9. '       ' → logprob: -8.037845611572266
    10. '               ' → logprob: -8.162845611572266

Token 221: ' new' (ID: 620)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.056610334664583206
    2. 'if' → logprob: -2.931610345840454
    3. '           ' → logprob: -6.431610107421875
    4. ' ' → logprob: -10.181610107421875
    5. '            ' → logprob: -10.806610107421875
    6. ')' → logprob: -11.056610107421875
    7. '+' → logprob: -11.556610107421875
    8. '               ' → logprob: -12.056610107421875
    9. '            
' → logprob: -12.306610107421875
    10. ' 
' → logprob: -12.431610107421875

Token 222: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.010776021517813206
    2. '_current' → logprob: -4.885776042938232
    3. '_val' → logprob: -6.510776042938232
    4. '_s' → logprob: -7.885776042938232
    5. '_' → logprob: -8.135775566101074
    6. '_total' → logprob: -8.260775566101074
    7. '_space' → logprob: -8.760775566101074
    8. '_value' → logprob: -9.010775566101074
    9. ' _' → logprob: -9.135775566101074
    10. '_token' → logprob: -9.635775566101074

Token 223: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888978719711304
    2. ' =' → logprob: -2.578889846801758
    3. ')' → logprob: -17.453889846801758
    4. '=current' → logprob: -17.578889846801758
    5. ' ' → logprob: -18.703889846801758
    6. '=}' → logprob: -18.953889846801758
    7. '=
' → logprob: -19.328889846801758
    8. '＝' → logprob: -19.578889846801758
    9. ',' → logprob: -19.578889846801758
    10. '=

' → logprob: -19.578889846801758

Token 224: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.014164566993713379
    2. ' current' → logprob: -4.264164447784424
    3. 'part' → logprob: -14.014164924621582
    4. ' part' → logprob: -17.014163970947266
    5. ' ' → logprob: -17.139163970947266
    6. 'cur' → logprob: -17.264163970947266
    7. '(current' → logprob: -17.764163970947266
    8. 'curr' → logprob: -18.389163970947266
    9. '$current' → logprob: -18.639163970947266
    10. '	current' → logprob: -19.139163970947266

Token 225: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0006886058254167438
    2. '_' → logprob: -7.500688552856445
    3. ' _' → logprob: -9.250688552856445
    4. '_val' → logprob: -10.250688552856445
    5. '_s' → logprob: -13.125688552856445
    6. '_value' → logprob: -14.625688552856445
    7. ')_' → logprob: -15.250688552856445
    8. '_str' → logprob: -15.375688552856445
    9. '_space' → logprob: -15.875688552856445
    10. '_token' → logprob: -16.125688552856445

Token 226: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759735703468323
    2. ' +' → logprob: -0.8259735703468323
    3. '<|end|>' → logprob: -11.200973510742188
    4. ' +
' → logprob: -11.700973510742188
    5. '+
' → logprob: -11.825973510742188
    6. '<|end|>' → logprob: -13.450973510742188
    7. ')' → logprob: -14.075973510742188
    8. '+

' → logprob: -15.075973510742188
    9. ')+' → logprob: -15.200973510742188
    10. ' plus' → logprob: -15.575973510742188

Token 227: ' part' (ID: 997)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.0004896456957794726
    2. ' part' → logprob: -7.625489711761475
    3. '   ' → logprob: -14.250489234924316
    4. '(part' → logprob: -15.375489234924316
    5. '           ' → logprob: -15.625489234924316
    6. ' ' → logprob: -15.625489234924316
    7. '	part' → logprob: -15.875489234924316
    8. '  ' → logprob: -16.625490188598633
    9. 'int' → logprob: -17.000490188598633
    10. '    ' → logprob: -17.000490188598633

Token 228: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -1.9981420336989686e-05
    2. 'val' → logprob: -10.875020027160645
    3. 'Val' → logprob: -15.500020027160645
    4. '_str' → logprob: -16.000019073486328
    5. '_part' → logprob: -16.250019073486328
    6. ' _' → logprob: -16.250019073486328
    7. ')' → logprob: -17.125019073486328
    8. '\' → logprob: -17.250019073486328
    9. '_VAL' → logprob: -17.250019073486328
    10. '	val' → logprob: -17.375019073486328

Token 229: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04998131841421127
    2. '<|end|>' → logprob: -3.1749813556671143
    3. '            
' → logprob: -6.549981117248535
    4. '<|end|>' → logprob: -6.549981117248535
    5. '
' → logprob: -6.799981117248535
    6. '       ' → logprob: -7.049981117248535
    7. ' if' → logprob: -7.299981117248535
    8. '               ' → logprob: -7.549981117248535
    9. ')' → logprob: -8.674981117248535
    10. '            ' → logprob: -8.924981117248535

Token 230: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011588606983423233
    2. '<|end|>' → logprob: -4.8865885734558105
    3. '            
' → logprob: -6.7615885734558105
    4. ' if' → logprob: -7.1365885734558105
    5. '            ' → logprob: -7.6365885734558105
    6. '<|end|>' → logprob: -7.7615885734558105
    7. '               ' → logprob: -8.136589050292969
    8. ',' → logprob: -8.761589050292969
    9. 'if' → logprob: -9.386589050292969
    10. ' 
' → logprob: -9.386589050292969

Token 231: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11168187856674194
    2. ' if' → logprob: -2.3616819381713867
    3. 'if' (adapté à ' if') → logprob: -4.611681938171387
    4. '<|end|>' → logprob: -7.236681938171387
    5. '            
' → logprob: -7.986681938171387
    6. ')' → logprob: -9.361681938171387
    7. '            ' → logprob: -9.361681938171387
    8. '       ' → logprob: -9.611681938171387
    9. '               ' → logprob: -9.736681938171387
    10. ' 
' → logprob: -10.361681938171387

Token 232: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.048589304089546204
    2. ' new' → logprob: -3.0485892295837402
    3. '   ' → logprob: -13.673589706420898
    4. '           ' → logprob: -15.673589706420898
    5. '
' → logprob: -16.0485897064209
    6. '>' → logprob: -16.1735897064209
    7. '	new' → logprob: -16.4235897064209
    8. ' ' → logprob: -16.6735897064209
    9. '    ' → logprob: -16.6735897064209
    10. '(new' → logprob: -17.4235897064209

Token 233: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.5332478142227046e-05
    2. 'sum' → logprob: -11.500015258789062
    3. '_val' → logprob: -13.000015258789062
    4. '_' → logprob: -13.375015258789062
    5. ' sum' → logprob: -15.000015258789062
    6. '_SUM' → logprob: -16.000015258789062
    7. '_token' → logprob: -16.250015258789062
    8. '_s' → logprob: -16.250015258789062
    9. ' _' → logprob: -16.375015258789062
    10. 'Sum' → logprob: -16.625015258789062

Token 234: ' <=' (ID: 5017)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1105906292796135
    2. '<=' → logprob: -2.610590696334839
    3. ' >' → logprob: -3.610590696334839
    4. ' <=' → logprob: -5.48559045791626
    5. '">' → logprob: -12.735590934753418
    6. ')' → logprob: -13.235590934753418
    7. '#' → logprob: -13.485590934753418
    8. ' ' → logprob: -13.485590934753418
    9. '>#' → logprob: -13.485590934753418
    10. '&gt' → logprob: -13.735590934753418

Token 235: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.0031837786082178354
    2. ' target' → logprob: -5.753183841705322
    3. '   ' → logprob: -12.753183364868164
    4. '
' → logprob: -14.003183364868164
    5. '	target' → logprob: -14.253183364868164
    6. 'int' → logprob: -14.628183364868164
    7. ' ' → logprob: -14.878183364868164
    8. '(target' → logprob: -15.503183364868164
    9. '  ' → logprob: -15.628183364868164
    10. '```' → logprob: -16.128183364868164

Token 236: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018307270482182503
    2. ':
' → logprob: -4.143307209014893
    3. '):' → logprob: -6.893307209014893
    4. ' and' → logprob: -7.768307209014893
    5. '           ' → logprob: -8.14330768585205
    6. '):
' → logprob: -8.76830768585205
    7. '               ' → logprob: -9.01830768585205
    8. '       ' → logprob: -9.51830768585205
    9. ',' → logprob: -9.76830768585205
    10. ':

' → logprob: -10.26830768585205

Token 237: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003953967243432999
    2. ':' → logprob: -6.62895393371582
    3. '           ' → logprob: -7.00395393371582
    4. ' continue' → logprob: -8.25395393371582
    5. ')' → logprob: -8.37895393371582
    6. '                
' → logprob: -8.62895393371582
    7. ':
' → logprob: -8.62895393371582
    8. '<|end|>' → logprob: -8.62895393371582
    9. 'continue' → logprob: -8.87895393371582
    10. '{' → logprob: -9.50395393371582

Token 238: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.304992437362671
    2. 'sub' → logprob: -1.304992437362671
    3. 'next' → logprob: -1.804992437362671
    4. ' next' → logprob: -2.554992437362671
    5. 'part' → logprob: -2.554992437362671
    6. ' subsets' → logprob: -3.429992437362671
    7. ' sub' → logprob: -3.679992437362671
    8. 'child' → logprob: -4.30499267578125
    9. 'subset' → logprob: -4.42999267578125
    10. ' partitions' → logprob: -4.55499267578125

Token 239: ' Continue' (ID: 16958)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.6206730008125305
    2. 'sub' → logprob: -0.9956730008125305
    3. 'child' → logprob: -2.7456729412078857
    4. 'for' → logprob: -4.620673179626465
    5. 'part' → logprob: -4.870673179626465
    6. ' next' → logprob: -5.995673179626465
    7. 'results' → logprob: -6.745673179626465
    8. 'dfs' → logprob: -6.995673179626465
    9. 'subset' → logprob: -6.995673179626465
    10. 'children' → logprob: -7.120673179626465

Token 240: ' dfs' (ID: 51252)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.112425684928894
    2. '               ' → logprob: -1.362425684928894
    3. ' with' → logprob: -2.6124258041381836
    4. 'tokens' → logprob: -2.9874258041381836
    5. '           ' → logprob: -3.1124258041381836
    6. ',' → logprob: -3.3624258041381836
    7. 'res' → logprob: -3.7374258041381836
    8. ' to' → logprob: -3.7374258041381836
    9. '                    
' → logprob: -3.8624258041381836
    10. '
' → logprob: -3.8624258041381836

Token 241: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010695825330913067
    2. ',' → logprob: -5.510695934295654
    3. ' with' → logprob: -5.760695934295654
    4. '                   ' → logprob: -6.635695934295654
    5. '           ' → logprob: -7.385695934295654
    6. '                
' → logprob: -8.260695457458496
    7. 'tokens' → logprob: -8.385695457458496
    8. ' and' → logprob: -8.635695457458496
    9. ' for' → logprob: -9.135695457458496
    10. '                ' → logprob: -9.385695457458496

Token 242: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.28896597027778625
    2. '<|end|>' → logprob: -2.538965940475464
    3. ' with' → logprob: -3.038965940475464
    4. '           ' → logprob: -3.163965940475464
    5. '                   ' → logprob: -3.538965940475464
    6. '       ' → logprob: -4.163966178894043
    7. '<|end|>' → logprob: -4.663966178894043
    8. ',' → logprob: -5.163966178894043
    9. '                
' → logprob: -5.663966178894043
    10. '                ' → logprob: -5.663966178894043

Token 243: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.5808579325675964
    2. ' next' → logprob: -1.7058579921722412
    3. 'sub' → logprob: -1.8308579921722412
    4. 'child' → logprob: -3.205857992172241
    5. ' sub' → logprob: -3.830857992172241
    6. ' child' → logprob: -4.705857753753662
    7. '           ' → logprob: -4.955857753753662
    8. 'for' → logprob: -5.455857753753662
    9. ' for' → logprob: -5.455857753753662
    10. '       ' → logprob: -6.330857753753662

Token 244: '_part' (ID: 24053)
  Prédit: '_res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_res' → logprob: -0.6330592632293701
    2. '_part' → logprob: -1.3830592632293701
    3. '_results' → logprob: -1.7580592632293701
    4. '_parts' → logprob: -4.383059501647949
    5. '_sets' → logprob: -4.508059501647949
    6. '_result' → logprob: -5.008059501647949
    7. '_set' → logprob: -5.133059501647949
    8. 'res' → logprob: -5.633059501647949
    9. '_pos' → logprob: -5.758059501647949
    10. '(' → logprob: -7.133059501647949

Token 245: 'itions' (ID: 5500)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6951404809951782
    2. 'itions' → logprob: -0.6951404809951782
    3. ' =' → logprob: -7.695140361785889
    4. '_set' → logprob: -8.195140838623047
    5. '=' → logprob: -8.695140838623047
    6. 'results' → logprob: -8.820140838623047
    7. 't' → logprob: -8.945140838623047
    8. '_results' → logprob: -8.945140838623047
    9. '_sets' → logprob: -9.195140838623047
    10. '_s' → logprob: -9.320140838623047

Token 246: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3873806595802307
    2. '=' → logprob: -1.137380599975586
    3. 's' → logprob: -7.762380599975586
    4. 'sets' → logprob: -10.387380599975586
    5. '_sets' → logprob: -10.512380599975586
    6. '=set' → logprob: -11.262380599975586
    7. ' ' → logprob: -12.762380599975586
    8. ' sets' → logprob: -13.012380599975586
    9. 'set' → logprob: -13.137380599975586
    10. '_set' → logprob: -13.262380599975586

Token 247: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.1128392368555069
    2. ' dfs' → logprob: -2.2378392219543457
    3. 'df' → logprob: -11.612839698791504
    4. '   ' → logprob: -13.112839698791504
    5. ' ' → logprob: -13.737839698791504
    6. '
' → logprob: -13.862839698791504
    7. '{' → logprob: -14.237839698791504
    8. '       ' → logprob: -14.737839698791504
    9. '           ' → logprob: -14.862839698791504
    10. 'DFS' → logprob: -15.237839698791504

Token 248: '(end' (ID: 29409)
  Prédit: '(end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(end' → logprob: -0.0005079957190901041
    2. 'end' → logprob: -7.625507831573486
    3. '(' → logprob: -11.625508308410645
    4. ' (' → logprob: -12.250508308410645
    5. '(pos' → logprob: -13.000508308410645
    6. '[end' → logprob: -13.625508308410645
    7. ' end' → logprob: -14.000508308410645
    8. '(
' → logprob: -14.250508308410645
    9. ',end' → logprob: -14.375508308410645
    10. '=end' → logprob: -15.125508308410645

Token 249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036834515631198883
    2. ',new' → logprob: -5.753683567047119
    3. 'new' → logprob: -8.003683090209961
    4. ' ,' → logprob: -8.878683090209961
    5. ' new' → logprob: -11.378683090209961
    6. '(new' → logprob: -11.503683090209961
    7. ',
' → logprob: -12.753683090209961
    8. '(' → logprob: -13.128683090209961
    9. ',n' → logprob: -13.628683090209961
    10. ',int' → logprob: -14.378683090209961

Token 250: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.002517277142032981
    2. ' new' → logprob: -6.002517223358154
    3. '   ' → logprob: -11.252517700195312
    4. 'current' → logprob: -12.127517700195312
    5. '0' → logprob: -12.252517700195312
    6. '```' → logprob: -13.002517700195312
    7. '
' → logprob: -13.252517700195312
    8. '                   ' → logprob: -13.252517700195312
    9. '               ' → logprob: -13.502517700195312
    10. '           ' → logprob: -13.627517700195312

Token 251: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0006733550690114498
    2. 'sum' → logprob: -7.500673294067383
    3. 'new' → logprob: -9.500673294067383
    4. '_new' → logprob: -10.500673294067383
    5. '_val' → logprob: -11.500673294067383
    6. 'val' → logprob: -12.750673294067383
    7. '_' → logprob: -13.250673294067383
    8. ')' → logprob: -14.500673294067383
    9. 'Sum' → logprob: -14.625673294067383
    10. ' sum' → logprob: -14.750673294067383

Token 252: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12710805237293243
    2. ')' → logprob: -2.127108097076416
    3. ')
' → logprob: -9.627107620239258
    4. '               ' → logprob: -10.002107620239258
    5. '       ' → logprob: -10.502107620239258
    6. '           ' → logprob: -11.002107620239258
    7. ' )
' → logprob: -11.252107620239258
    8. ')

' → logprob: -12.002107620239258
    9. ' )' → logprob: -13.127107620239258
    10. ')`
' → logprob: -13.752107620239258

Token 253: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013790630735456944
    2. ')' → logprob: -5.388790607452393
    3. '<|end|>' → logprob: -5.638790607452393
    4. ' for' → logprob: -6.013790607452393
    5. '{' → logprob: -7.013790607452393
    6. '           ' → logprob: -7.138790607452393
    7. '<|end|>' → logprob: -7.763790607452393
    8. '               ' → logprob: -8.26379108428955
    9. '{
' → logprob: -9.01379108428955
    10. '        
' → logprob: -9.13879108428955

Token 254: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6411823034286499
    2. ' for' → logprob: -0.8911823034286499
    3. '       ' → logprob: -3.0161824226379395
    4. '               ' → logprob: -4.5161824226379395
    5. '           ' → logprob: -5.7661824226379395
    6. ')' → logprob: -10.766181945800781
    7. '   ' → logprob: -11.016181945800781
    8. '
' → logprob: -11.391181945800781
    9. '<|end|>' → logprob: -11.766181945800781
    10. ',' → logprob: -11.891181945800781

Token 255: ' partition' (ID: 31512)
  Prédit: '(part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(part' → logprob: -0.13578622043132782
    2. 'partition' → logprob: -2.135786294937134
    3. 'part' → logprob: -5.260786056518555
    4. '(p' → logprob: -7.010786056518555
    5. ' partition' → logprob: -7.260786056518555
    6. '(' → logprob: -7.510786056518555
    7. '(next' → logprob: -7.635786056518555
    8. ' (' → logprob: -8.260786056518555
    9. '(parts' → logprob: -8.260786056518555
    10. 'parts' → logprob: -9.010786056518555

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07813245058059692
    2. '_tuple' → logprob: -3.078132390975952
    3. 's' → logprob: -4.703132629394531
    4. ' in' → logprob: -5.078132629394531
    5. '_,' → logprob: -5.203132629394531
    6. '_part' → logprob: -6.078132629394531
    7. ' ,' → logprob: -6.453132629394531
    8. '_partition' → logprob: -6.578132629394531
    9. 'tuple' → logprob: -6.703132629394531
    10. 'partition' → logprob: -8.078132629394531

Token 257: ' s' (ID: 265)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.13986074924469
    2. 'psum' → logprob: -1.76486074924469
    3. 'partition' → logprob: -1.76486074924469
    4. 'part' → logprob: -1.76486074924469
    5. 's' → logprob: -2.6398606300354004
    6. 'partial' → logprob: -4.0148606300354
    7. 'total' → logprob: -4.2648606300354
    8. ' sum' → logprob: -4.5148606300354
    9. 'sub' → logprob: -4.5148606300354
    10. ' part' → logprob: -4.7648606300354

Token 258: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03652745485305786
    2. 'in' → logprob: -3.411527395248413
    3. 'um' → logprob: -5.911527633666992
    4. ' ' → logprob: -8.911527633666992
    5. 'ums' → logprob: -11.786527633666992
    6. '_in' → logprob: -12.161527633666992
    7. '	in' → logprob: -12.661527633666992
    8. 'umm' → logprob: -12.661527633666992
    9. ',' → logprob: -13.411527633666992
    10. 's' → logprob: -13.661527633666992

Token 259: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.5759840607643127
    2. ' next' → logprob: -0.8259840607643127
    3. '(next' → logprob: -10.450984001159668
    4. '[next' → logprob: -11.200984001159668
    5. '_next' → logprob: -13.950984001159668
    6. '	next' → logprob: -14.575984001159668
    7. 'Next' → logprob: -14.950984001159668
    8. '.next' → logprob: -15.450984001159668
    9. ' ' → logprob: -16.700984954833984
    10. '
' → logprob: -17.950984954833984

Token 260: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.00455437321215868
    2. 'part' → logprob: -5.629554271697998
    3. '(next' → logprob: -8.379554748535156
    4. '_partition' → logprob: -8.629554748535156
    5. '(part' → logprob: -9.129554748535156
    6. 'partition' → logprob: -9.129554748535156
    7. 'next' → logprob: -9.379554748535156
    8. '(' → logprob: -9.504554748535156
    9. '((' → logprob: -10.254554748535156
    10. '   ' → logprob: -10.504554748535156

Token 261: 'itions' (ID: 5500)
  Prédit: 'ations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -1.126058578491211
    2. 'itions' → logprob: -1.126058578491211
    3. 's' → logprob: -2.001058578491211
    4. 'utations' → logprob: -2.251058578491211
    5. '(' → logprob: -2.751058578491211
    6. 'utions' → logprob: -3.876058578491211
    7. 'in' → logprob: -5.876058578491211
    8. '(s' → logprob: -6.001058578491211
    9. '_part' → logprob: -6.126058578491211
    10. '   ' → logprob: -6.126058578491211

Token 262: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.043356433510780334
    2. ':
' → logprob: -3.168356418609619
    3. '):
' → logprob: -9.168356895446777
    4. '):' → logprob: -9.668356895446777
    5. ' :' → logprob: -10.293356895446777
    6. ' in' → logprob: -10.543356895446777
    7. ':

' → logprob: -10.543356895446777
    8. ',' → logprob: -10.793356895446777
    9. '():
' → logprob: -10.793356895446777
    10. '<|end|>' → logprob: -10.918356895446777

Token 263: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.034819673746824265
    2. ':' → logprob: -4.159819602966309
    3. '                    ' → logprob: -5.409819602966309
    4. '                           ' → logprob: -5.659819602966309
    5. '                       ' → logprob: -6.284819602966309
    6. '                    
' → logprob: -6.409819602966309
    7. ',' → logprob: -6.534819602966309
    8. '               ' → logprob: -7.159819602966309
    9. '                ' → logprob: -7.409819602966309
    10. ':
' → logprob: -7.659819602966309

Token 264: ' total' (ID: 3609)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7409374117851257
    2. '                       ' → logprob: -1.1159374713897705
    3. ' (' → logprob: -1.9909374713897705
    4. '                           ' → logprob: -3.4909374713897705
    5. '                   ' → logprob: -4.490937232971191
    6. '                               ' → logprob: -5.740937232971191
    7. ' new' → logprob: -6.240937232971191
    8. ' partition' → logprob: -6.240937232971191
    9. 'if' → logprob: -6.490937232971191
    10. '(' → logprob: -6.740937232971191

Token 265: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.08715013414621353
    2. ' =' → logprob: -2.5871500968933105
    3. '=' → logprob: -5.0871500968933105
    4. 'sum' → logprob: -6.3371500968933105
    5. '=sum' → logprob: -9.087150573730469
    6. '_val' → logprob: -9.337150573730469
    7. '_s' → logprob: -9.587150573730469
    8. ' sum' → logprob: -12.712150573730469
    9. 's' → logprob: -13.087150573730469
    10. 'Sum' → logprob: -13.837150573730469

Token 266: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868723213672638
    2. ' =' → logprob: -1.1368722915649414
    3. '    ' → logprob: -14.511872291564941
    4. '   ' → logprob: -15.011872291564941
    5. ' ' → logprob: -15.761872291564941
    6. '=
' → logprob: -16.511873245239258
    7. '            ' → logprob: -16.761873245239258
    8. '        ' → logprob: -16.886873245239258
    9. '           ' → logprob: -17.261873245239258
    10. ',' → logprob: -17.511873245239258

Token 267: ' part' (ID: 997)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.32921040058135986
    2. 's' → logprob: -1.4542104005813599
    3. ' new' → logprob: -3.3292102813720703
    4. ' s' → logprob: -4.70421028137207
    5. 'part' → logprob: -6.32921028137207
    6. 'current' → logprob: -10.07921028137207
    7. 'max' → logprob: -10.20421028137207
    8. ' part' → logprob: -10.20421028137207
    9. 'total' → logprob: -10.32921028137207
    10. 'partition' → logprob: -10.70421028137207

Token 268: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.3166360557079315
    2. 'ition' → logprob: -1.316636085510254
    3. 'ion' → logprob: -6.566636085510254
    4. 'tion' → logprob: -7.191636085510254
    5. '+' → logprob: -7.816636085510254
    6. 'val' → logprob: -7.941636085510254
    7. 'itions' → logprob: -9.191636085510254
    8. '_sum' → logprob: -9.316636085510254
    9. 'iton' → logprob: -9.566636085510254
    10. 'sum' → logprob: -10.191636085510254

Token 269: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38687729835510254
    2. '+' → logprob: -1.1368772983551025
    3. '+s' → logprob: -12.136877059936523
    4. ' plus' → logprob: -15.011877059936523
    5. ' ' → logprob: -15.886877059936523
    6. ' +
' → logprob: -16.386877059936523
    7. '+
' → logprob: -16.386877059936523
    8. ' ' → logprob: -16.511877059936523
    9. '＋' → logprob: -16.761877059936523
    10. 's' → logprob: -17.136877059936523

Token 270: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0007099286303855479
    2. ' s' → logprob: -7.2507100105285645
    3. '_s' → logprob: -21.500709533691406
    4. '(s' → logprob: -21.500709533691406
    5. ' ' → logprob: -21.625709533691406
    6. '<s' → logprob: -22.750709533691406
    7. '`s' → logprob: -22.875709533691406
    8. '	s' → logprob: -22.875709533691406
    9. '   ' → logprob: -23.250709533691406
    10. '{s' → logprob: -24.250709533691406

Token 271: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.038164395838975906
    2. '
' → logprob: -3.6631643772125244
    3. '                    
' → logprob: -4.6631646156311035
    4. '                        
' → logprob: -7.9131646156311035
    5. '                       ' → logprob: -8.163164138793945
    6. '               ' → logprob: -8.538164138793945
    7. ',' → logprob: -8.663164138793945
    8. '                    ' → logprob: -8.663164138793945
    9. ' if' → logprob: -8.913164138793945
    10. ' 
' → logprob: -9.038164138793945

Token 272: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.020466791465878487
    2. '                       ' → logprob: -4.7704668045043945
    3. ',' → logprob: -5.3954668045043945
    4. '                    
' → logprob: -5.8954668045043945
    5. '                    ' → logprob: -7.1454668045043945
    6. '                        
' → logprob: -7.2704668045043945
    7. ' (' → logprob: -7.5204668045043945
    8. '
' → logprob: -8.145466804504395
    9. ')' → logprob: -8.145466804504395
    10. '               ' → logprob: -8.395466804504395

Token 273: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4138665795326233
    2. 'if' (adapté à ' if') → logprob: -1.1638665199279785
    3. '                   ' → logprob: -3.9138665199279785
    4. 'res' → logprob: -5.5388665199279785
    5. ' res' → logprob: -6.6638665199279785
    6. '                       ' → logprob: -7.0388665199279785
    7. '                           ' → logprob: -8.288866996765137
    8. '           ' → logprob: -9.038866996765137
    9. '       ' → logprob: -10.413866996765137
    10. '   ' → logprob: -10.413866996765137

Token 274: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.018154039978981018
    2. ' total' → logprob: -4.018154144287109
    3. '   ' → logprob: -13.26815414428711
    4. ' ' → logprob: -13.89315414428711
    5. '(total' → logprob: -14.01815414428711
    6. '	total' → logprob: -14.89315414428711
    7. '  ' → logprob: -16.01815414428711
    8. '                   ' → logprob: -16.14315414428711
    9. '           ' → logprob: -17.39315414428711
    10. '$total' → logprob: -17.76815414428711

Token 275: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.9385402993066236e-05
    2. 'sum' → logprob: -11.375019073486328
    3. '_' → logprob: -12.000019073486328
    4. '_s' → logprob: -13.750019073486328
    5. '>' → logprob: -15.500019073486328
    6. ' sum' → logprob: -16.000019073486328
    7. '=' → logprob: -17.000019073486328
    8. '_max' → logprob: -17.375019073486328
    9. '_val' → logprob: -17.375019073486328
    10. '_SUM' → logprob: -17.500019073486328

Token 276: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.028683384880423546
    2. ' >' → logprob: -4.153683185577393
    3. '>=' → logprob: -4.403683185577393
    4. ' >=' → logprob: -8.02868366241455
    5. '==' → logprob: -12.02868366241455
    6. '<=' → logprob: -13.15368366241455
    7. ' ' → logprob: -14.27868366241455
    8. '   ' → logprob: -14.65368366241455
    9. '≥' → logprob: -14.90368366241455
    10. '>`' → logprob: -15.65368366241455

Token 277: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00408528558909893
    2. ' max' → logprob: -5.504085063934326
    3. 'best' → logprob: -12.004085540771484
    4. '=max' → logprob: -15.254085540771484
    5. '
' → logprob: -16.004085540771484
    6. ' best' → logprob: -16.254085540771484
    7. '	max' → logprob: -16.379085540771484
    8. '           ' → logprob: -16.629085540771484
    9. '(max' → logprob: -17.129085540771484
    10. '[max' → logprob: -17.254085540771484

Token 278: '_sum' (ID: 29859)
  Prédit: '_found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_found' → logprob: -0.4906127452850342
    2. '_sum' → logprob: -1.1156127452850342
    3. 'found' → logprob: -3.490612745285034
    4. 'max' → logprob: -3.865612745285034
    5. 'sum' → logprob: -5.615612983703613
    6. '=max' → logprob: -6.365612983703613
    7. '=' → logprob: -6.490612983703613
    8. '_max' → logprob: -6.990612983703613
    9. '_best' → logprob: -8.115612983703613
    10. 'best' → logprob: -8.865612983703613

Token 279: '_found' (ID: 50825)
  Prédit: '_found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_found' → logprob: -0.014500296674668789
    2. 'found' → logprob: -4.389500141143799
    3. '               ' → logprob: -8.139500617980957
    4. ':' → logprob: -8.264500617980957
    5. '=' → logprob: -8.264500617980957
    6. '           ' → logprob: -8.889500617980957
    7. '                   ' → logprob: -9.014500617980957
    8. ' or' → logprob: -9.139500617980957
    9. ' found' → logprob: -9.139500617980957
    10. 'max' → logprob: -9.264500617980957

Token 280: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14337630569934845
    2. '                       ' → logprob: -2.518376350402832
    3. ':
' → logprob: -3.518376350402832
    4. ' and' → logprob: -4.018376350402832
    5. ' or' → logprob: -6.143376350402832
    6. ' :' → logprob: -6.893376350402832
    7. '                        ' → logprob: -7.768376350402832
    8. '                   ' → logprob: -7.893376350402832
    9. '                           ' → logprob: -7.893376350402832
    10. ':

' → logprob: -8.268376350402832

Token 281: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00136368942912668
    2. '                           ' → logprob: -7.626363754272461
    3. ':' → logprob: -8.626363754272461
    4. '                               ' → logprob: -8.876363754272461
    5. '                   ' → logprob: -9.001363754272461
    6. ':
' → logprob: -9.126363754272461
    7. '                        ' → logprob: -9.751363754272461
    8. '                        
' → logprob: -10.126363754272461
    9. ' :' → logprob: -10.376363754272461
    10. '               ' → logprob: -10.626363754272461

Token 282: ' max' (ID: 2999)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.01088168378919363
    2. ' res' → logprob: -4.6358819007873535
    3. '                           ' → logprob: -7.0108819007873535
    4. '                       ' → logprob: -8.885881423950195
    5. '           ' → logprob: -10.135881423950195
    6. 'max' (adapté à ' max') → logprob: -11.010881423950195
    7. '                               ' → logprob: -11.260881423950195
    8. '               ' → logprob: -12.260881423950195
    9. '       ' → logprob: -12.635881423950195
    10. '                   ' → logprob: -12.885881423950195

Token 283: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.04332868754863739
    2. '_found' → logprob: -3.1683287620544434
    3. '_val' → logprob: -9.168328285217285
    4. '_s' → logprob: -9.793328285217285
    5. 'found' → logprob: -10.168328285217285
    6. '_part' → logprob: -10.168328285217285
    7. '_' → logprob: -10.293328285217285
    8. 'sum' → logprob: -10.543328285217285
    9. '_find' → logprob: -12.168328285217285
    10. '```' → logprob: -12.543328285217285

Token 284: '_found' (ID: 50825)
  Prédit: '_found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_found' → logprob: -0.0020885197445750237
    2. '=' → logprob: -7.12708854675293
    3. 'found' → logprob: -7.12708854675293
    4. ' =' → logprob: -8.00208854675293
    5. 'Found' → logprob: -9.12708854675293
    6. '           ' → logprob: -12.00208854675293
    7. '_FOUND' → logprob: -12.37708854675293
    8. '                   ' → logprob: -12.50208854675293
    9. '                       ' → logprob: -12.75208854675293
    10. '               ' → logprob: -13.50208854675293

Token 285: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804963827133179
    2. ' =' → logprob: -3.2880496978759766
    3. '.clear' → logprob: -13.163049697875977
    4. '=
' → logprob: -13.413049697875977
    5. '                           ' → logprob: -13.413049697875977
    6. '           ' → logprob: -14.163049697875977
    7. '=

' → logprob: -14.413049697875977
    8. ',' → logprob: -15.038049697875977
    9. ' =
' → logprob: -15.413049697875977
    10. '                   ' → logprob: -15.413049697875977

Token 286: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.038047801703214645
    2. ' total' → logprob: -3.2880477905273438
    3. '	total' → logprob: -13.663047790527344
    4. 'new' → logprob: -14.038047790527344
    5. 'token' → logprob: -14.163047790527344
    6. '   ' → logprob: -14.288047790527344
    7. 'part' → logprob: -14.288047790527344
    8. '(total' → logprob: -14.788047790527344
    9. '                   ' → logprob: -14.913047790527344
    10. ' ' → logprob: -14.913047790527344

Token 287: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.000344640837283805
    2. '_val' → logprob: -8.375344276428223
    3. 'sum' → logprob: -9.125344276428223
    4. 'val' → logprob: -12.375344276428223
    5. 'Sum' → logprob: -15.250344276428223
    6. ' sum' → logprob: -16.12534523010254
    7. '_' → logprob: -16.25034523010254
    8. '_part' → logprob: -16.25034523010254
    9. '_str' → logprob: -16.37534523010254
    10. ')' → logprob: -16.87534523010254

Token 288: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -9.794061770662665e-05
    2. '                           ' → logprob: -9.75009822845459
    3. '                   ' → logprob: -11.25009822845459
    4. '               ' → logprob: -11.75009822845459
    5. '                               ' → logprob: -12.50009822845459
    6. '       ' → logprob: -12.87509822845459
    7. '           ' → logprob: -12.87509822845459
    8. '```' → logprob: -13.12509822845459
    9. '                        ' → logprob: -13.25009822845459
    10. ',' → logprob: -13.50009822845459

Token 289: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00044675805838778615
    2. '                           ' → logprob: -8.000446319580078
    3. '                   ' → logprob: -10.250446319580078
    4. '                               ' → logprob: -10.375446319580078
    5. '               ' → logprob: -10.625446319580078
    6. '           ' → logprob: -11.750446319580078
    7. '       ' → logprob: -12.625446319580078
    8. '                        ' → logprob: -12.750446319580078
    9. '                      ' → logprob: -13.250446319580078
    10. '```' → logprob: -13.500446319580078

Token 290: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.001935661886818707
    2. '{' → logprob: -6.2519354820251465
    3. 'set' → logprob: -12.501935958862305
    4. ' res' → logprob: -13.001935958862305
    5. '                           ' → logprob: -14.251935958862305
    6. '                       ' → logprob: -15.126935958862305
    7. '                   ' → logprob: -16.376935958862305
    8. '                               ' → logprob: -17.251935958862305
    9. '{
' → logprob: -17.626935958862305
    10. 'next' → logprob: -17.876935958862305

Token 291: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014174560084939003
    2. '.clear' → logprob: -4.264174461364746
    3. ' =' → logprob: -11.514174461364746
    4. '.=' → logprob: -14.639174461364746
    5. '.' → logprob: -14.764174461364746
    6. 'clear' → logprob: -15.264174461364746
    7. '=

' → logprob: -17.514175415039062
    8. '   ' → logprob: -17.889175415039062
    9. '=}' → logprob: -18.514175415039062
    10. '}=' → logprob: -19.139175415039062

Token 292: ' set' (ID: 920)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.001182012027129531
    2. 'set' → logprob: -6.7511820793151855
    3. ' {' → logprob: -11.876181602478027
    4. ' {(' → logprob: -12.626181602478027
    5. '{
' → logprob: -13.751181602478027
    6. ' set' → logprob: -15.626181602478027
    7. '{s' → logprob: -16.376182556152344
    8. '{'' → logprob: -16.501182556152344
    9. '{{' → logprob: -17.126182556152344
    10. '{"' → logprob: -17.751182556152344

Token 293: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5234928131103516
    2. '([(' → logprob: -1.1484928131103516
    3. '()
' → logprob: -2.8984928131103516
    4. '{' → logprob: -4.273492813110352
    5. '({' → logprob: -4.648492813110352
    6. '([' → logprob: -4.648492813110352
    7. '([
' → logprob: -7.148492813110352
    8. '(' → logprob: -7.648492813110352
    9. '(((' → logprob: -7.773492813110352
    10. '()

' → logprob: -8.773492813110352

Token 294: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.021124958992004395
    2. '                           ' → logprob: -4.271124839782715
    3. 'res' → logprob: -6.021124839782715
    4. '                   ' → logprob: -6.146124839782715
    5. '{' → logprob: -6.771124839782715
    6. '(res' → logprob: -7.771124839782715
    7. ' res' → logprob: -9.146124839782715
    8. '```' → logprob: -9.396124839782715
    9. '                        
' → logprob: -9.396124839782715
    10. '           ' → logprob: -9.521124839782715

Token 295: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.005124292336404324
    2. '{' → logprob: -6.255124092102051
    3. ' res' → logprob: -6.380124092102051
    4. '(res' → logprob: -6.755124092102051
    5. '                       ' → logprob: -8.25512409210205
    6. '                           ' → logprob: -10.25512409210205
    7. '                   ' → logprob: -11.38012409210205
    8. '   ' → logprob: -12.25512409210205
    9. '	res' → logprob: -12.25512409210205
    10. '{
' → logprob: -12.75512409210205

Token 296: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0011920140823349357
    2. '.' → logprob: -6.751192092895508
    3. ' .' → logprob: -11.126192092895508
    4. 'add' → logprob: -12.001192092895508
    5. '{' → logprob: -14.251192092895508
    6. '.update' → logprob: -16.001192092895508
    7. '.clear' → logprob: -17.001192092895508
    8. '=' → logprob: -17.126192092895508
    9. '.append' → logprob: -17.876192092895508
    10. '.=' → logprob: -18.001192092895508

Token 297: '(((' (ID: 13163)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.13384827971458435
    2. '(((' → logprob: -2.133848190307617
    3. '(' → logprob: -5.008848190307617
    4. '(part' → logprob: -8.758848190307617
    5. '((((' → logprob: -10.258848190307617
    6. '   ' → logprob: -11.383848190307617
    7. '(tuple' → logprob: -12.508848190307617
    8. ' ((' → logprob: -12.633848190307617
    9. '((*' → logprob: -13.383848190307617
    10. '(
' → logprob: -13.633848190307617

Token 298: 'part' (ID: 5815)
  Prédit: 'part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.01618768274784088
    2. '(part' → logprob: -4.14118766784668
    3. ' part' → logprob: -9.64118766784668
    4. 'partition' → logprob: -10.01618766784668
    5. '(' → logprob: -10.26618766784668
    6. ')' → logprob: -13.01618766784668
    7. 'str' → logprob: -13.14118766784668
    8. ' (' → logprob: -13.76618766784668
    9. '(str' → logprob: -14.39118766784668
    10. '   ' → logprob: -14.76618766784668

Token 299: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.3884050250053406
    2. '_val' → logprob: -1.1384050846099854
    3. 'str' → logprob: -7.263404846191406
    4. 'val' → logprob: -7.388404846191406
    5. ',' → logprob: -9.763404846191406
    6. '[' → logprob: -11.138404846191406
    7. '_vals' → logprob: -11.263404846191406
    8. ',)' → logprob: -11.263404846191406
    9. ')' → logprob: -11.388404846191406
    10. '(' → logprob: -11.513404846191406

Token 300: ',)' (ID: 83132)
  Prédit: ',)'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',)' → logprob: -0.08978670835494995
    2. ',' → logprob: -2.7147867679595947
    3. ',),' → logprob: -3.9647867679595947
    4. '),' → logprob: -7.714786529541016
    5. ')' → logprob: -8.839786529541016
    6. ' ,' → logprob: -9.339786529541016
    7. ',),
' → logprob: -13.589786529541016
    8. ',)
' → logprob: -14.339786529541016
    9. ')+' → logprob: -14.714786529541016
    10. ' ),' → logprob: -14.964786529541016

Token 301: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6967441439628601
    2. '+' → logprob: -1.3217442035675049
    3. ' +' → logprob: -1.5717442035675049
    4. ')' → logprob: -3.696744203567505
    5. ' ,' → logprob: -7.071743965148926
    6. ',)' → logprob: -7.196743965148926
    7. ')+' → logprob: -7.571743965148926
    8. '),' → logprob: -8.321743965148926
    9. '+,' → logprob: -9.571743965148926
    10. ' )' → logprob: -9.696743965148926

Token 302: ' partition' (ID: 31512)
  Prédit: 'partition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partition' → logprob: -0.00020354038861114532
    2. ' partition' → logprob: -8.500203132629395
    3. '.partition' → logprob: -17.12520408630371
    4. '
' → logprob: -17.37520408630371
    5. '   ' → logprob: -17.50020408630371
    6. ' ' → logprob: -17.50020408630371
    7. 'tuple' → logprob: -18.75020408630371
    8. '(part' → logprob: -19.37520408630371
    9. '  ' → logprob: -19.50020408630371
    10. 'part' → logprob: -20.25020408630371

Token 303: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012264199322089553
    2. '))' → logprob: -7.376226425170898
    3. '),' → logprob: -7.501226425170898
    4. ' ,' → logprob: -10.251226425170898
    5. ')' → logprob: -12.251226425170898
    6. ',),' → logprob: -12.251226425170898
    7. ',)' → logprob: -14.001226425170898
    8. '   ' → logprob: -14.751226425170898
    9. ',s' → logprob: -15.001226425170898
    10. ',))
' → logprob: -16.1262264251709

Token 304: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.4834846556186676
    2. 'max' → logprob: -1.4834846258163452
    3. ' total' → logprob: -2.1084847450256348
    4. ' max' → logprob: -3.3584847450256348
    5. 'new' → logprob: -8.483484268188477
    6. ' new' → logprob: -9.983484268188477
    7. ')' → logprob: -10.108484268188477
    8. ' ' → logprob: -11.358484268188477
    9. ' maximum' → logprob: -14.108484268188477
    10. ' )' → logprob: -14.233484268188477

Token 305: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -7.135819760151207e-05
    2. 'sum' → logprob: -9.62507152557373
    3. ')' → logprob: -12.75007152557373
    4. '_val' → logprob: -13.50007152557373
    5. 'Sum' → logprob: -14.37507152557373
    6. '))' → logprob: -16.000070571899414
    7. ' sum' → logprob: -16.375070571899414
    8. '_SUM' → logprob: -16.375070571899414
    9. 'val' → logprob: -17.125070571899414
    10. '_str' → logprob: -17.875070571899414

Token 306: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009514793055132031
    2. '))' → logprob: -7.375951290130615
    3. ')
' → logprob: -8.125951766967773
    4. ')}' → logprob: -10.875951766967773
    5. ' )' → logprob: -11.875951766967773
    6. '                       ' → logprob: -13.875951766967773
    7. '                   ' → logprob: -14.375951766967773
    8. ')))' → logprob: -14.500951766967773
    9. '))
' → logprob: -15.000951766967773
    10. ')}}' → logprob: -15.250951766967773

Token 307: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007211300544440746
    2. '           ' → logprob: -7.750720977783203
    3. 'elif' → logprob: -8.875720977783203
    4. '               ' → logprob: -9.000720977783203
    5. '                       ' → logprob: -11.250720977783203
    6. '       ' → logprob: -12.375720977783203
    7. ' elif' → logprob: -13.000720977783203
    8. '```' → logprob: -13.250720977783203
    9. '                           ' → logprob: -13.375720977783203
    10. 'else' → logprob: -13.750720977783203

Token 308: ' elif' (ID: 9497)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10182028263807297
    2. 'elif' (adapté à ' elif') → logprob: -2.601820230484009
    3. ' elif' → logprob: -3.851820230484009
    4. '               ' → logprob: -6.851820468902588
    5. '           ' → logprob: -8.10181999206543
    6. '   ' → logprob: -11.22681999206543
    7. '                  ' → logprob: -11.47681999206543
    8. '	elif' → logprob: -11.72681999206543
    9. '                ' → logprob: -12.10181999206543
    10. '                       ' → logprob: -12.10181999206543

Token 309: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.474077433347702
    2. ' total' → logprob: -0.9740774631500244
    3. ' ' → logprob: -15.474077224731445
    4. '	total' → logprob: -15.849077224731445
    5. '(total' → logprob: -16.349077224731445
    6. '   ' → logprob: -16.599077224731445
    7. ' ' → logprob: -18.724077224731445
    8. '    ' → logprob: -19.099077224731445
    9. '$total' → logprob: -19.224077224731445
    10. 'Total' → logprob: -19.224077224731445

Token 310: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00023154958034865558
    2. 'token' → logprob: -9.125231742858887
    3. 'sum' → logprob: -9.375231742858887
    4. '_token' → logprob: -10.875231742858887
    5. '_part' → logprob: -11.375231742858887
    6. '_val' → logprob: -12.500231742858887
    7. ' token' → logprob: -14.750231742858887
    8. '_s' → logprob: -14.875231742858887
    9. 'tokens' → logprob: -15.125231742858887
    10. 'elif' → logprob: -15.250231742858887

Token 311: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931493282318115
    2. ' ==' → logprob: -0.6931493282318115
    3. ']==' → logprob: -14.44314956665039
    4. '=' → logprob: -14.56814956665039
    5. ')==' → logprob: -14.56814956665039
    6. '===' → logprob: -15.44314956665039
    7. '==(' → logprob: -16.06814956665039
    8. '>=' → logprob: -16.31814956665039
    9. '==
' → logprob: -16.31814956665039
    10. ' ' → logprob: -16.94314956665039

Token 312: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.20141352713108063
    2. ' max' → logprob: -1.7014135122299194
    3. ' ' → logprob: -16.326414108276367
    4. '                       ' → logprob: -16.701414108276367
    5. '	max' → logprob: -16.826414108276367
    6. '_max' → logprob: -17.951414108276367
    7. '(max' → logprob: -18.201414108276367
    8. '[max' → logprob: -18.326414108276367
    9. '                           ' → logprob: -18.451414108276367
    10. '                   ' → logprob: -18.576414108276367

Token 313: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.236549335066229e-05
    2. 'sum' → logprob: -10.750021934509277
    3. '_s' → logprob: -14.500021934509277
    4. '_set' → logprob: -16.500022888183594
    5. 'res' → logprob: -16.625022888183594
    6. 's' → logprob: -16.625022888183594
    7. 'Sum' → logprob: -17.375022888183594
    8. '\' → logprob: -17.750022888183594
    9. ' sum' → logprob: -17.750022888183594
    10. 'max' → logprob: -17.875022888183594

Token 314: '_found' (ID: 50825)
  Prédit: '_found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_found' → logprob: -6.153795766294934e-06
    2. 'Found' → logprob: -12.500005722045898
    3. 'found' → logprob: -13.875005722045898
    4. '_FOUND' → logprob: -14.500005722045898
    5. '   ' → logprob: -15.125005722045898
    6. '       ' → logprob: -15.375005722045898
    7. 'res' → logprob: -16.3750057220459
    8. '_res' → logprob: -16.7500057220459
    9. '
' → logprob: -16.8750057220459
    10. 'FOUND' → logprob: -16.8750057220459

Token 315: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.011714203283190727
    2. ':
' → logprob: -4.761713981628418
    3. ':' → logprob: -5.886713981628418
    4. '       ' → logprob: -9.261713981628418
    5. '           ' → logprob: -10.136713981628418
    6. '                   ' → logprob: -10.261713981628418
    7. ',' → logprob: -10.386713981628418
    8. '                           ' → logprob: -10.511713981628418
    9. '):
' → logprob: -11.011713981628418
    10. '               ' → logprob: -11.011713981628418

Token 316: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0001749351795297116
    2. 'res' → logprob: -9.625174522399902
    3. ' res' → logprob: -9.625174522399902
    4. '       ' → logprob: -11.750174522399902
    5. '                   ' → logprob: -12.125174522399902
    6. '               ' → logprob: -12.125174522399902
    7. '           ' → logprob: -12.125174522399902
    8. '                        ' → logprob: -12.750174522399902
    9. '                        
' → logprob: -12.750174522399902
    10. '                           ' → logprob: -12.875174522399902

Token 317: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -9.686778503237292e-05
    2. ' res' → logprob: -9.250097274780273
    3. '                       ' → logprob: -14.625097274780273
    4. '                           ' → logprob: -15.875097274780273
    5. '	res' → logprob: -17.500097274780273
    6. '(res' → logprob: -17.875097274780273
    7. '_res' → logprob: -18.250097274780273
    8. '
' → logprob: -18.250097274780273
    9. ',res' → logprob: -18.750097274780273
    10. '$res' → logprob: -18.875097274780273

Token 318: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -9.627176768844947e-05
    2. '.' → logprob: -9.250096321105957
    3. 'add' → logprob: -15.875096321105957
    4. ' .' → logprob: -17.62509536743164
    5. '.setdefault' → logprob: -18.00009536743164
    6. '.Add' → logprob: -18.25009536743164
    7. '.update' → logprob: -19.50009536743164
    8. '           ' → logprob: -19.87509536743164
    9. '.append' → logprob: -20.12509536743164
    10. '   ' → logprob: -20.25009536743164

Token 319: '(((' (ID: 13163)
  Prédit: '((('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(((' → logprob: -1.5332478142227046e-05
    2. '(' → logprob: -11.125015258789062
    3. '((' → logprob: -14.750015258789062
    4. '((((' → logprob: -15.750015258789062
    5. ' (((' → logprob: -17.375015258789062
    6. '   ' → logprob: -17.750015258789062
    7. ')(((' → logprob: -18.125015258789062
    8. ' ' → logprob: -18.625015258789062
    9. '[((' → logprob: -18.625015258789062
    10. '(
' → logprob: -19.250015258789062

Token 320: 'part' (ID: 5815)
  Prédit: 'part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.07895126193761826
    2. '(part' → logprob: -2.578951358795166
    3. '(' → logprob: -9.828950881958008
    4. ' part' → logprob: -12.203950881958008
    5. 'partition' → logprob: -13.203950881958008
    6. ' (' → logprob: -14.578950881958008
    7. '   ' → logprob: -16.453950881958008
    8. '-part' → logprob: -16.703950881958008
    9. '	part' → logprob: -16.703950881958008
    10. '(
' → logprob: -17.953950881958008

Token 321: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.02247973158955574
    2. 'str' → logprob: -4.02247953414917
    3. '(part' → logprob: -6.02247953414917
    4. 'part' → logprob: -6.27247953414917
    5. '(str' → logprob: -12.522480010986328
    6. '(' → logprob: -12.897480010986328
    7. ' part' → logprob: -14.022480010986328
    8. 'Str' → logprob: -14.272480010986328
    9. ' str' → logprob: -14.522480010986328
    10. ' (' → logprob: -14.772480010986328

Token 322: ',)' (ID: 83132)
  Prédit: ',)'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',)' → logprob: -0.1606927067041397
    2. ',' → logprob: -1.9106926918029785
    3. ',),' → logprob: -7.9106926918029785
    4. ')' → logprob: -9.785693168640137
    5. ' ,' → logprob: -11.285693168640137
    6. ',),
' → logprob: -11.410693168640137
    7. ',)
' → logprob: -11.785693168640137
    8. ',:)' → logprob: -12.785693168640137
    9. '+' → logprob: -12.910693168640137
    10. '),' → logprob: -13.035693168640137

Token 323: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10028333216905594
    2. ' +' → logprob: -2.35028338432312
    3. ')' → logprob: -9.6002836227417
    4. ')+' → logprob: -11.7252836227417
    5. '+)' → logprob: -14.8502836227417
    6. ',' → logprob: -15.2252836227417
    7. '),' → logprob: -15.9752836227417
    8. '+
' → logprob: -16.225282669067383
    9. ' )' → logprob: -17.975282669067383
    10. ' ' → logprob: -17.975282669067383

Token 324: ' partition' (ID: 31512)
  Prédit: 'partition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partition' → logprob: -0.00015860427811276168
    2. ' partition' → logprob: -8.750158309936523
    3. '.partition' → logprob: -17.000158309936523
    4. '(part' → logprob: -17.375158309936523
    5. ' ' → logprob: -20.375158309936523
    6. '_partition' → logprob: -20.500158309936523
    7. '(' → logprob: -20.875158309936523
    8. 'tuple' → logprob: -21.375158309936523
    9. '           ' → logprob: -21.875158309936523
    10. '   ' → logprob: -22.000158309936523

Token 325: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2246291337069124e-05
    2. ' ,' → logprob: -10.750021934509277
    3. '),' → logprob: -14.250021934509277
    4. ',
' → logprob: -16.875022888183594
    5. ',total' → logprob: -17.375022888183594
    6. 's' → logprob: -17.750022888183594
    7. ')' → logprob: -17.875022888183594
    8. ',s' → logprob: -18.375022888183594
    9. '`,' → logprob: -19.250022888183594
    10. '‌,' → logprob: -19.875022888183594

Token 326: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.10020796209573746
    2. ' total' → logprob: -2.350208044052124
    3. '(total' → logprob: -13.600208282470703
    4. '_total' → logprob: -18.975208282470703
    5. '	total' → logprob: -18.975208282470703
    6. ',total' → logprob: -19.850208282470703
    7. '                           ' → logprob: -20.100208282470703
    8. 'Total' → logprob: -20.725208282470703
    9. ' ' → logprob: -20.725208282470703
    10. '$total' → logprob: -20.850208282470703

Token 327: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.2415248453617096
    2. 'total' → logprob: -2.2415249347686768
    3. 'sum' → logprob: -2.2415249347686768
    4. '_total' → logprob: -6.991524696350098
    5. 's' → logprob: -7.366524696350098
    6. 'max' → logprob: -8.116524696350098
    7. ' total' → logprob: -10.241524696350098
    8. '(total' → logprob: -10.491524696350098
    9. '_s' → logprob: -10.741524696350098
    10. ' sum' → logprob: -10.866524696350098

Token 328: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0069379559718072414
    2. '))' → logprob: -5.0069379806518555
    3. ')
' → logprob: -8.756937980651855
    4. ')}' → logprob: -9.756937980651855
    5. '))
' → logprob: -13.006937980651855
    6. ' )' → logprob: -13.131937980651855
    7. '                       ' → logprob: -14.256937980651855
    8. '                   ' → logprob: -14.881937980651855
    9. ')`' → logprob: -15.006937980651855
    10. '       ' → logprob: -15.006937980651855

Token 329: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007416110602207482
    2. '           ' → logprob: -8.125741958618164
    3. 'return' → logprob: -8.875741958618164
    4. '               ' → logprob: -9.500741958618164
    5. ' return' → logprob: -9.500741958618164
    6. '
' → logprob: -10.125741958618164
    7. '   ' → logprob: -10.250741958618164
    8. ')' → logprob: -10.500741958618164
    9. '```' → logprob: -10.625741958618164
    10. '	' → logprob: -11.750741958618164

Token 330: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04445929080247879
    2. '<|end|>' → logprob: -3.669459342956543
    3. 'return' → logprob: -4.794459342956543
    4. ' return' → logprob: -5.669459342956543
    5. '
' → logprob: -6.669459342956543
    6. '<|end|>' → logprob: -7.044459342956543
    7. ' ' → logprob: -7.169459342956543
    8. '	return' → logprob: -7.419459342956543
    9. ')' → logprob: -7.794459342956543
    10. '   ' → logprob: -7.919459342956543

Token 331: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6340209245681763
    2. '               ' → logprob: -0.7590209245681763
    3. ':
' → logprob: -7.134020805358887
    4. '           ' → logprob: -7.509020805358887
    5. '                   ' → logprob: -10.759020805358887
    6. ' :' → logprob: -11.009020805358887
    7. '                       ' → logprob: -11.759020805358887
    8. '              ' → logprob: -12.134020805358887
    9. ' continue' → logprob: -12.884020805358887
    10. ':return' → logprob: -13.009020805358887

Token 332: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009782671695575118
    2. 'break' → logprob: -7.750978469848633
    3. ' break' → logprob: -8.000978469848633
    4. '           ' → logprob: -9.375978469848633
    5. '                   ' → logprob: -9.750978469848633
    6. 'continue' → logprob: -10.000978469848633
    7. ' continue' → logprob: -10.750978469848633
    8. '```' → logprob: -13.875978469848633
    9. '                       ' → logprob: -14.875978469848633
    10. '   ' → logprob: -15.125978469848633

Token 333: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0771993026137352
    2. 'break' → logprob: -2.8271992206573486
    3. ' break' → logprob: -4.327199459075928
    4. 'continue' → logprob: -6.827199459075928
    5. ' continue' → logprob: -7.327199459075928
    6. '           ' → logprob: -9.20219898223877
    7. '                   ' → logprob: -9.95219898223877
    8. '```' → logprob: -11.57719898223877
    9. 'pass' → logprob: -12.20219898223877
    10. ' pass' → logprob: -13.20219898223877

Token 334: ' sum' (ID: 4215)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.010622353293001652
    2. 'continue' → logprob: -4.760622501373291
    3. '               ' → logprob: -6.260622501373291
    4. ' break' → logprob: -9.510622024536133
    5. '                   ' → logprob: -11.885622024536133
    6. '           ' → logprob: -11.885622024536133
    7. ' continue' → logprob: -12.635622024536133
    8. 'pass' → logprob: -13.260622024536133
    9. 'return' → logprob: -14.135622024536133
    10. '#' → logprob: -14.385622024536133

Token 335: ' exceeded' (ID: 60210)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7214345932006836
    2. ' >' → logprob: -1.0964345932006836
    3. '               ' → logprob: -2.4714345932006836
    4. '=' → logprob: -3.7214345932006836
    5. ' +=' → logprob: -4.346434593200684
    6. '                   ' → logprob: -4.596434593200684
    7. ' <=' → logprob: -4.721434593200684
    8. '_ex' → logprob: -5.346434593200684
    9. ' not' → logprob: -5.471434593200684
    10. ' =' → logprob: -5.596434593200684

Token 336: ' target' (ID: 3783)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011897491058334708
    2. ' break' → logprob: -8.126190185546875
    3. ' continue' → logprob: -8.251190185546875
    4. '                   ' → logprob: -8.626190185546875
    5. 'break' → logprob: -8.626190185546875
    6. '           ' → logprob: -8.876190185546875
    7. 'continue' → logprob: -9.001190185546875
    8. '```' → logprob: -12.126190185546875
    9. '                       ' → logprob: -13.876190185546875
    10. '   ' → logprob: -14.126190185546875

Token 337: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004243654664605856
    2. '           ' → logprob: -5.629243850708008
    3. '                   ' → logprob: -8.504243850708008
    4. 'continue' → logprob: -8.504243850708008
    5. 'break' → logprob: -9.129243850708008
    6. ' continue' → logprob: -9.254243850708008
    7. ' break' → logprob: -10.754243850708008
    8. '```' → logprob: -12.379243850708008
    9. '   ' → logprob: -13.004243850708008
    10. '                       ' → logprob: -13.504243850708008

Token 338: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00026872646412812173
    2. 'break' → logprob: -8.750268936157227
    3. 'continue' → logprob: -10.000268936157227
    4. '           ' → logprob: -10.375268936157227
    5. ' break' → logprob: -11.250268936157227
    6. '                   ' → logprob: -11.375268936157227
    7. ' continue' → logprob: -12.125268936157227
    8. '```' → logprob: -12.625268936157227
    9. '   ' → logprob: -16.500268936157227
    10. '       ' → logprob: -16.875268936157227

Token 339: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.03872419521212578
    2. '               ' → logprob: -3.288724184036255
    3. 'continue' (adapté à ' continue') → logprob: -7.788724422454834
    4. ' break' → logprob: -8.288723945617676
    5. '                   ' → logprob: -11.413723945617676
    6. '           ' → logprob: -12.413723945617676
    7. '```' → logprob: -14.288723945617676
    8. '	break' → logprob: -14.913723945617676
    9. ' continue' → logprob: -15.038723945617676
    10. '   ' → logprob: -15.913723945617676

Token 340: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24877874553203583
    2. '<|end|>' → logprob: -1.6237787008285522
    3. ')' → logprob: -4.498778820037842
    4. '
' → logprob: -5.248778820037842
    5. '<|end|>' → logprob: -5.623778820037842
    6. '   ' → logprob: -7.123778820037842
    7. '        
' → logprob: -7.623778820037842
    8. 'return' → logprob: -7.998778820037842
    9. '           ' → logprob: -8.623778343200684
    10. '	return' → logprob: -8.748778343200684

Token 341: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004944138927385211
    2. '   ' → logprob: -8.125494003295898
    3. ')' → logprob: -9.250494003295898
    4. '           ' → logprob: -10.125494003295898
    5. '<|end|>' → logprob: -10.625494003295898
    6. 'return' → logprob: -11.000494003295898
    7. '        
' → logprob: -11.625494003295898
    8. '
' → logprob: -13.125494003295898
    9. '               ' → logprob: -13.250494003295898
    10. '```' → logprob: -13.375494003295898

Token 342: ' memo' (ID: 46393)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012411937117576599
    2. 'memo' (adapté à ' memo') → logprob: -4.637412071228027
    3. '   ' → logprob: -6.012412071228027
    4. '
' → logprob: -9.387412071228027
    5. ' memo' → logprob: -9.387412071228027
    6. '           ' → logprob: -11.387412071228027
    7. '        
' → logprob: -11.887412071228027
    8. '```' → logprob: -12.387412071228027
    9. 'return' → logprob: -12.762412071228027
    10. '    
' → logprob: -12.887412071228027

Token 343: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -2.093505099765025e-05
    2. '[' → logprob: -11.125020980834961
    3. ' [(' → logprob: -13.375020980834961
    4. '[
' → logprob: -14.000020980834961
    5. '[...]' → logprob: -14.125020980834961
    6. '.setdefault' → logprob: -14.125020980834961
    7. '[((' → logprob: -14.375020980834961
    8. '   ' → logprob: -15.000020980834961
    9. '```' → logprob: -15.000020980834961
    10. ',' → logprob: -15.375020980834961

Token 344: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -6.704273118884885e-07
    2. ' pos' → logprob: -14.625000953674316
    3. '(pos' → logprob: -16.625
    4. 'position' → logprob: -18.125
    5. ')' → logprob: -18.75
    6. '	pos' → logprob: -19.125
    7. '<|end|>' → logprob: -19.5
    8. '(' → logprob: -19.625
    9. ',pos' → logprob: -20.25
    10. '_pos' → logprob: -20.625

Token 345: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.893480243277736e-05
    2. ',current' → logprob: -10.750039100646973
    3. ' ,' → logprob: -11.125039100646973
    4. ',
' → logprob: -13.750039100646973
    5. ',new' → logprob: -14.875039100646973
    6. ',user' → logprob: -15.125039100646973
    7. ',last' → logprob: -16.125038146972656
    8. ',n' → logprob: -16.125038146972656
    9. '‌,' → logprob: -16.375038146972656
    10. ',next' → logprob: -16.625038146972656

Token 346: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -9.615255839889869e-05
    2. ' current' → logprob: -9.250096321105957
    3. 'Current' → logprob: -18.87509536743164
    4. 'curr' → logprob: -19.12509536743164
    5. '[current' → logprob: -19.25009536743164
    6. '(current' → logprob: -19.37509536743164
    7. '_current' → logprob: -19.62509536743164
    8. ',current' → logprob: -19.62509536743164
    9. '$current' → logprob: -20.00009536743164
    10. '	current' → logprob: -20.25009536743164

Token 347: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.003480454906821251
    2. 'current' → logprob: -6.753480434417725
    3. 'sum' → logprob: -6.753480434417725
    4. '_current' → logprob: -7.003480434417725
    5. ',' → logprob: -8.753480911254883
    6. '_s' → logprob: -9.878480911254883
    7. '_count' → logprob: -12.628480911254883
    8. '_' → logprob: -12.753480911254883
    9. '_,' → logprob: -12.878480911254883
    10. ')' → logprob: -13.003480911254883

Token 348: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00020497082732617855
    2. ']' → logprob: -9.000205039978027
    3. ')' → logprob: -9.500205039978027
    4. '])' → logprob: -12.625205039978027
    5. ' )' → logprob: -13.125205039978027
    6. ')]
' → logprob: -15.500205039978027
    7. ')])' → logprob: -15.625205039978027
    8. '])]' → logprob: -15.625205039978027
    9. ' ]' → logprob: -15.750205039978027
    10. '   ' → logprob: -15.875205039978027

Token 349: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023245595395565033
    2. ' =' → logprob: -3.7732455730438232
    3. '=
' → logprob: -17.398244857788086
    4. '＝' → logprob: -18.273244857788086
    5. '=}' → logprob: -18.648244857788086
    6. '=

' → logprob: -19.398244857788086
    7. '=None' → logprob: -19.523244857788086
    8. ')=' → logprob: -19.773244857788086
    9. '=m' → logprob: -20.148244857788086
    10. '=k' → logprob: -20.148244857788086

Token 350: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -2.339278580620885e-06
    2. ' res' → logprob: -13.000001907348633
    3. '(res' → logprob: -18.375001907348633
    4. 're' → logprob: -22.375001907348633
    5. '   ' → logprob: -23.250001907348633
    6. '$res' → logprob: -23.875001907348633
    7. '	res' → logprob: -24.125001907348633
    8. 'r' → logprob: -25.125001907348633
    9. '_res' → logprob: -25.625001907348633
    10. ' ' → logprob: -26.250001907348633

Token 351: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11332939565181732
    2. '   ' → logprob: -2.2383294105529785
    3. 'return' → logprob: -8.36332893371582
    4. '
' → logprob: -9.36332893371582
    5. '    
' → logprob: -9.73832893371582
    6. ' return' → logprob: -10.36332893371582
    7. '	return' → logprob: -10.48832893371582
    8. '        
' → logprob: -10.86332893371582
    9. '<|end|>' → logprob: -10.86332893371582
    10. '           ' → logprob: -11.36332893371582

Token 352: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004449347034096718
    2. '
' → logprob: -5.754449367523193
    3. '   ' → logprob: -7.004449367523193
    4. 'return' → logprob: -8.129448890686035
    5. '        
' → logprob: -10.379448890686035
    6. ' return' → logprob: -11.254448890686035
    7. '
' → logprob: -11.879448890686035
    8. '           ' → logprob: -12.004448890686035
    9. '    
' → logprob: -12.254448890686035
    10. '	return' → logprob: -12.629448890686035

Token 353: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08134625107049942
    2. 'return' (adapté à ' return') → logprob: -2.581346273422241
    3. ' return' → logprob: -6.081346035003662
    4. '   ' → logprob: -8.95634651184082
    5. '
' → logprob: -10.33134651184082
    6. '           ' → logprob: -12.95634651184082
    7. '	return' → logprob: -13.45634651184082
    8. ' ' → logprob: -14.20634651184082
    9. '        
' → logprob: -14.20634651184082
    10. '
' → logprob: -14.58134651184082

Token 354: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -7.941850526549388e-06
    2. ' res' → logprob: -11.750007629394531
    3. '(res' → logprob: -22.62500762939453
    4. '	res' → logprob: -23.25000762939453
    5. '$res' → logprob: -23.75000762939453
    6. '   ' → logprob: -24.25000762939453
    7. 'r' → logprob: -24.50000762939453
    8. 're' → logprob: -24.87500762939453
    9. '_res' → logprob: -25.62500762939453
    10. 'ret' → logprob: -25.87500762939453

Token 355: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 356: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09054235368967056
    2. '
' → logprob: -2.9655423164367676
    3. '    
' → logprob: -4.090542316436768
    4. 'result' → logprob: -4.840542316436768
    5. ')' → logprob: -5.965542316436768
    6. '<|end|>' → logprob: -6.215542316436768
    7. 'results' → logprob: -6.715542316436768
    8. '       ' → logprob: -6.965542316436768
    9. 'tokens' → logprob: -7.465542316436768
    10. ' result' → logprob: -7.590542316436768

Token 357: ' partitions' (ID: 89097)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.49365663528442383
    2. '   ' → logprob: -1.6186566352844238
    3. 'result' → logprob: -2.118656635284424
    4. 'part' → logprob: -3.868656635284424
    5. 'best' → logprob: -4.118656635284424
    6. 'max' → logprob: -4.368656635284424
    7. 'c' → logprob: -5.368656635284424
    8. 'return' → logprob: -5.618656635284424
    9. ' results' → logprob: -5.618656635284424
    10. 'possible' → logprob: -5.743656635284424

Token 358: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05495619773864746
    2. ' =' → logprob: -2.9299561977386475
    3. ',' → logprob: -9.804956436157227
    4. '   ' → logprob: -11.679956436157227
    5. 's' → logprob: -12.054956436157227
    6. '(' → logprob: -14.304956436157227
    7. '=}' → logprob: -14.304956436157227
    8. ')' → logprob: -14.679956436157227
    9. '.' → logprob: -15.054956436157227
    10. '_' → logprob: -15.179956436157227

Token 359: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0005599428550340235
    2. ' dfs' → logprob: -7.5005598068237305
    3. 'df' → logprob: -12.25055980682373
    4. 'sorted' → logprob: -14.00055980682373
    5. '{' → logprob: -14.62555980682373
    6. 'dfa' → logprob: -15.12555980682373
    7. 'list' → logprob: -15.62555980682373
    8. 'max' → logprob: -15.87555980682373
    9. 'DFS' → logprob: -16.125560760498047
    10. '   ' → logprob: -16.375560760498047

Token 360: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005886562867090106
    2. '(n' → logprob: -7.500588893890381
    3. '0' → logprob: -10.500588417053223
    4. '(len' → logprob: -12.500588417053223
    5. ' (' → logprob: -12.875588417053223
    6. '<|end|>' → logprob: -13.750588417053223
    7. '(
' → logprob: -14.625588417053223
    8. 'def' → logprob: -16.62558937072754
    9. '```' → logprob: -16.87558937072754
    10. ' ' → logprob: -17.25058937072754

Token 361: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.875001907348633
    4. 'digits' → logprob: -17.000001907348633
    5. '1' → logprob: -17.125001907348633
    6. ')' → logprob: -17.125001907348633
    7. '
' → logprob: -17.750001907348633
    8. '```' → logprob: -18.250001907348633
    9. '2' → logprob: -19.000001907348633
    10. '(' → logprob: -19.000001907348633

Token 362: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.465036105713807e-06
    2. ' ,' → logprob: -12.500007629394531
    3. '0' → logprob: -13.000007629394531
    4. '   ' → logprob: -13.750007629394531
    5. ')' → logprob: -16.12500762939453
    6. ',
' → logprob: -16.37500762939453
    7. ',)' → logprob: -16.75000762939453
    8. '```' → logprob: -16.87500762939453
    9. '(' → logprob: -17.50000762939453
    10. '1' → logprob: -17.87500762939453

Token 363: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.50001335144043
    4. ')' → logprob: -19.75001335144043
    5. '۰' → logprob: -20.87501335144043
    6. '00' → logprob: -21.25001335144043
    7. '  ' → logprob: -21.25001335144043
    8. '000' → logprob: -21.50001335144043
    9. '    ' → logprob: -21.87501335144043
    10. '```' → logprob: -22.87501335144043

Token 364: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -15.375000953674316
    3. ' )' → logprob: -15.375000953674316
    4. '))' → logprob: -16.5
    5. '   ' → logprob: -16.625
    6. ')}' → logprob: -17.875
    7. ')[' → logprob: -18.0
    8. ')#' → logprob: -19.0
    9. ')`' → logprob: -19.125
    10. ',)' → logprob: -19.25

Token 365: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011168777011334896
    2. '
' → logprob: -4.761168956756592
    3. '    
' → logprob: -7.011168956756592
    4. '<|end|>' → logprob: -7.511168956756592
    5. 'if' → logprob: -8.386168479919434
    6. ')' → logprob: -8.886168479919434
    7. 'for' → logprob: -9.011168479919434
    8. ' if' → logprob: -9.136168479919434
    9. 'max' → logprob: -9.136168479919434
    10. 'best' → logprob: -9.511168479919434

Token 366: ' if' (ID: 538)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7145327925682068
    2. 'best' → logprob: -0.9645327925682068
    3. 'for' → logprob: -3.0895328521728516
    4. 'if' (adapté à ' if') → logprob: -3.2145328521728516
    5. '   ' → logprob: -3.4645328521728516
    6. '
' → logprob: -5.214532852172852
    7. 'valid' → logprob: -6.214532852172852
    8. ' best' → logprob: -7.089532852172852
    9. 'result' → logprob: -7.214532852172852
    10. ' max' → logprob: -7.214532852172852

Token 367: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3858283460140228
    2. 'not' → logprob: -1.7608283758163452
    3. 'part' → logprob: -2.0108282566070557
    4. ' partitions' → logprob: -4.885828495025635
    5. 'len' → logprob: -5.510828495025635
    6. ' len' → logprob: -6.135828495025635
    7. 'best' → logprob: -8.385828018188477
    8. ' part' → logprob: -8.885828018188477
    9. ' best' → logprob: -9.635828018188477
    10. '   ' → logprob: -9.885828018188477

Token 368: ' partitions' (ID: 89097)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.062032103538513184
    2. ' partitions' → logprob: -2.8120322227478027
    3. ' part' → logprob: -10.562031745910645
    4. 'parts' → logprob: -11.812031745910645
    5. 'best' → logprob: -11.937031745910645
    6. 'any' → logprob: -11.937031745910645
    7. '(part' → logprob: -12.312031745910645
    8. 'len' → logprob: -12.437031745910645
    9. 'par' → logprob: -13.437031745910645
    10. '_part' → logprob: -13.812031745910645

Token 369: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009277798235416412
    2. ':
' → logprob: -7.000927925109863
    3. ':return' → logprob: -11.250927925109863
    4. '   ' → logprob: -13.750927925109863
    5. '.' → logprob: -14.375927925109863
    6. ' or' → logprob: -14.500927925109863
    7. '==' → logprob: -15.125927925109863
    8. ' :' → logprob: -15.500927925109863
    9. ':

' → logprob: -15.625927925109863
    10. '       ' → logprob: -16.250926971435547

Token 370: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012384448200464249
    2. '   ' → logprob: -7.1262383460998535
    3. ':
' → logprob: -8.501238822937012
    4. ':' → logprob: -8.751238822937012
    5. '
' → logprob: -10.751238822937012
    6. ',' → logprob: -11.751238822937012
    7. '    
' → logprob: -11.751238822937012
    8. '        
' → logprob: -11.751238822937012
    9. '```' → logprob: -12.251238822937012
    10. '[' → logprob: -12.501238822937012

Token 371: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2826908826828003
    2. 'print' (adapté à ' print') → logprob: -1.6576908826828003
    3. '   ' → logprob: -3.53269100189209
    4. ' print' → logprob: -4.28269100189209
    5. 'return' → logprob: -4.65769100189209
    6. ' return' → logprob: -6.15769100189209
    7. ' best' → logprob: -7.78269100189209
    8. 'best' → logprob: -8.28269100189209
    9. 'for' → logprob: -9.40769100189209
    10. ' for' → logprob: -9.53269100189209

Token 372: '('' (ID: 706)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18988575041294098
    2. '("' → logprob: -2.4398858547210693
    3. '("")' → logprob: -3.1898858547210693
    4. '(-' → logprob: -3.8148858547210693
    5. '(' → logprob: -4.31488561630249
    6. '(f' → logprob: -5.31488561630249
    7. '('' → logprob: -6.18988561630249
    8. '("-' → logprob: -7.06488561630249
    9. '(None' → logprob: -7.18988561630249
    10. '("("' → logprob: -8.439886093139648

Token 373: 'error' (ID: 1544)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6303426623344421
    2. '0' → logprob: -1.630342721939087
    3. 'No' → logprob: -2.505342721939087
    4. '')' → logprob: -2.630342721939087
    5. 'None' → logprob: -3.130342721939087
    6. 'NO' → logprob: -4.255342483520508
    7. '"' → logprob: -4.380342483520508
    8. 'Impossible' → logprob: -4.505342483520508
    9. 'f' → logprob: -5.505342483520508
    10. ''' → logprob: -5.630342483520508

Token 374: '')
' (ID: 2515)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.5956364274024963
    2. '')' → logprob: -0.8456364274024963
    3. '')
' → logprob: -4.220636367797852
    4. '"' → logprob: -5.595636367797852
    5. ')')
' → logprob: -7.970636367797852
    6. '")
' → logprob: -8.095636367797852
    7. ')' → logprob: -8.095636367797852
    8. '')
' → logprob: -10.220636367797852
    9. '')")
' → logprob: -10.345636367797852
    10. '')"' → logprob: -11.095636367797852

Token 375: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009855014272034168
    2. '       ' → logprob: -4.634854793548584
    3. '```' → logprob: -10.134855270385742
    4. 'else' → logprob: -10.759855270385742
    5. '<|end|>' → logprob: -10.759855270385742
    6. ' else' → logprob: -12.134855270385742
    7. '
' → logprob: -12.384855270385742
    8. '    
' → logprob: -13.009855270385742
    9. ')' → logprob: -13.884855270385742
    10. '[' → logprob: -14.134855270385742

Token 376: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31461578607559204
    2. '   ' → logprob: -1.3146157264709473
    3. 'return' (adapté à ' return') → logprob: -6.814615726470947
    4. ' return' → logprob: -9.314616203308105
    5. '
' → logprob: -9.689616203308105
    6. 'else' → logprob: -10.314616203308105
    7. '           ' → logprob: -11.314616203308105
    8. '	return' → logprob: -11.564616203308105
    9. '```' → logprob: -11.814616203308105
    10. '<|end|>' → logprob: -11.939616203308105

Token 377: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4542100727558136
    2. '   ' → logprob: -1.0792100429534912
    3. '    
' → logprob: -3.829210042953491
    4. '  
' → logprob: -7.45421028137207
    5. 'for' → logprob: -7.82921028137207
    6. '```' → logprob: -7.82921028137207
    7. '<|end|>' → logprob: -8.07921028137207
    8. '        
' → logprob: -8.07921028137207
    9. 'best' → logprob: -8.20421028137207
    10. 'max' → logprob: -8.32921028137207

Token 378: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29485613107681274
    2. '
' → logprob: -1.544856071472168
    3. 'max' → logprob: -3.544856071472168
    4. 'best' → logprob: -4.919856071472168
    5. 'for' → logprob: -5.544856071472168
    6. '    
' → logprob: -6.794856071472168
    7. ' for' → logprob: -8.294856071472168
    8. ' max' → logprob: -9.169856071472168
    9. 'result' → logprob: -9.294856071472168
    10. ' best' → logprob: -9.544856071472168

Token 379: ' #' (ID: 1069)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.38235047459602356
    2. 'max' → logprob: -1.2573504447937012
    3. '   ' → logprob: -4.007350444793701
    4. 'for' → logprob: -4.632350444793701
    5. ' best' → logprob: -6.257350444793701
    6. 'result' → logprob: -6.507350444793701
    7. ' max' → logprob: -7.507350444793701
    8. 'sorted' → logprob: -8.00735092163086
    9. 'results' → logprob: -8.25735092163086
    10. '
' → logprob: -8.63235092163086

Token 380: ' Get' (ID: 2942)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.2500779628753662
    2. 'max' → logprob: -1.6250779628753662
    3. '   ' → logprob: -5.000078201293945
    4. ' best' → logprob: -5.375078201293945
    5. '#' → logprob: -5.750078201293945
    6. ' max' → logprob: -5.750078201293945
    7. 'for' → logprob: -6.625078201293945
    8. 'sorted' → logprob: -6.625078201293945
    9. 'part' → logprob: -7.125078201293945
    10. 'result' → logprob: -7.125078201293945

Token 381: ' max' (ID: 2999)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.8539459109306335
    2. 'max' → logprob: -0.9789459109306335
    3. ' best' → logprob: -2.2289459705352783
    4. ' max' → logprob: -3.1039459705352783
    5. '   ' → logprob: -3.2289459705352783
    6. 'the' → logprob: -5.728945732116699
    7. ' the' → logprob: -6.353945732116699
    8. 'min' → logprob: -6.978945732116699
    9. '(max' → logprob: -9.6039457321167
    10. '(best' → logprob: -9.8539457321167

Token 382: ' sum' (ID: 4215)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0013244071742519736
    2. '_total' → logprob: -7.37632417678833
    3. 'sum' → logprob: -8.501324653625488
    4. '_found' → logprob: -8.876324653625488
    5. '_val' → logprob: -9.126324653625488
    6. '_part' → logprob: -9.251324653625488
    7. '_s' → logprob: -9.751324653625488
    8. '_partition' → logprob: -10.376324653625488
    9. '_value' → logprob: -10.626324653625488
    10. '_' → logprob: -10.751324653625488

Token 383: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4840451776981354
    2. '
' → logprob: -1.984045147895813
    3. 'max' → logprob: -2.2340452671051025
    4. ' =' → logprob: -3.2340452671051025
    5. '=max' → logprob: -3.4840452671051025
    6. '_found' → logprob: -4.234045028686523
    7. '_max' → logprob: -4.609045028686523
    8. ',' → logprob: -4.734045028686523
    9. '=' → logprob: -4.859045028686523
    10. 'found' → logprob: -5.109045028686523

Token 384: ' the' (ID: 290)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5367143750190735
    2. 'part' → logprob: -0.9117143750190735
    3. ' max' → logprob: -5.161714553833008
    4. 'partition' → logprob: -5.536714553833008
    5. '   ' → logprob: -6.786714553833008
    6. ' partitions' → logprob: -7.036714553833008
    7. '(part' → logprob: -7.661714553833008
    8. '(max' → logprob: -8.036714553833008
    9. 'sorted' → logprob: -8.786714553833008
    10. ' part' → logprob: -8.911714553833008

Token 385: ' found' (ID: 2491)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.0039872159250080585
    2. 'max' → logprob: -6.1289873123168945
    3. 'partition' → logprob: -7.1289873123168945
    4. '(part' → logprob: -8.253987312316895
    5. 'best' → logprob: -8.628987312316895
    6. 'set' → logprob: -9.128987312316895
    7. ' partitions' → logprob: -9.128987312316895
    8. '{' → logprob: -9.503987312316895
    9. 'next' → logprob: -9.753987312316895
    10. 'parts' → logprob: -10.128987312316895

Token 386: ' partitions' (ID: 89097)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.014392548240721226
    2. ' partitions' → logprob: -4.889392375946045
    3. '_part' → logprob: -6.639392375946045
    4. '(part' → logprob: -6.639392375946045
    5. 'partition' → logprob: -7.014392375946045
    6. 'sum' → logprob: -7.139392375946045
    7. '   ' → logprob: -7.389392375946045
    8. ' part' → logprob: -7.639392375946045
    9. '_sum' → logprob: -7.764392375946045
    10. 'max' → logprob: -7.889392375946045

Token 387: '
' (ID: 198)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.14202366769313812
    2. '   ' → logprob: -2.2670235633850098
    3. '
' → logprob: -3.8920235633850098
    4. 'best' → logprob: -5.14202356338501
    5. ' max' → logprob: -7.01702356338501
    6. ',' → logprob: -7.51702356338501
    7. '```' → logprob: -7.76702356338501
    8. '(max' → logprob: -8.267024040222168
    9. ',max' → logprob: -9.392024040222168
    10. 'for' → logprob: -9.517024040222168

Token 388: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31662964820861816
    2. 'max' → logprob: -1.5666296482086182
    3. '
' → logprob: -2.941629648208618
    4. ' max' → logprob: -5.066629409790039
    5. ',' → logprob: -6.316629409790039
    6. '```' → logprob: -7.441629409790039
    7. 'best' → logprob: -7.691629409790039
    8. '    
' → logprob: -8.191629409790039
    9. '(max' → logprob: -8.941629409790039
    10. ',max' → logprob: -9.816629409790039

Token 389: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.02580041065812111
    2. 'best' → logprob: -3.7758004665374756
    3. ' max' → logprob: -6.1508002281188965
    4. '   ' → logprob: -8.150800704956055
    5. ' best' → logprob: -9.025800704956055
    6. 'for' → logprob: -12.150800704956055
    7. '```' → logprob: -13.025800704956055
    8. '_,' → logprob: -14.400800704956055
    9. '
' → logprob: -14.400800704956055
    10. '`' → logprob: -14.650800704956055

Token 390: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00010783452307805419
    2. 'sum' → logprob: -9.625107765197754
    3. '_total' → logprob: -10.625107765197754
    4. '_val' → logprob: -12.375107765197754
    5. '_' → logprob: -12.500107765197754
    6. '_part' → logprob: -12.750107765197754
    7. '(sum' → logprob: -12.750107765197754
    8. '_s' → logprob: -13.500107765197754
    9. '_found' → logprob: -15.000107765197754
    10. '_partition' → logprob: -15.000107765197754

Token 391: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8233838081359863
    2. '_found' → logprob: -1.1983838081359863
    3. ' =' → logprob: -1.4483838081359863
    4. '_' → logprob: -3.9483838081359863
    5. ',' → logprob: -6.073383808135986
    6. '_val' → logprob: -7.573383808135986
    7. '=max' → logprob: -7.573383808135986
    8. 'found' → logprob: -7.948383808135986
    9. '_set' → logprob: -8.448383331298828
    10. '_value' → logprob: -8.573383331298828

Token 392: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0019299437990412116
    2. ' max' → logprob: -6.251929759979248
    3. '-' → logprob: -14.126930236816406
    4. '-max' → logprob: -14.626930236816406
    5. '   ' → logprob: -16.001930236816406
    6. '(max' → logprob: -17.251930236816406
    7. '=max' → logprob: -18.126930236816406
    8. ' -' → logprob: -18.376930236816406
    9. '	max' → logprob: -19.376930236816406
    10. ' ' → logprob: -19.376930236816406

Token 393: '(s' (ID: 1858)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.7485658526420593
    2. '(part' → logprob: -0.9985658526420593
    3. '(s' → logprob: -2.248565912246704
    4. '([' → logprob: -3.373565912246704
    5. '((' → logprob: -4.998565673828125
    6. '(x' → logprob: -5.498565673828125
    7. '(t' → logprob: -5.748565673828125
    8. '(sum' → logprob: -6.498565673828125
    9. '(' → logprob: -6.873565673828125
    10. '(item' → logprob: -6.998565673828125

Token 394: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3143061697483063
    2. 'for' → logprob: -1.3143061399459839
    3. '[' → logprob: -6.939306259155273
    4. 's' → logprob: -10.564306259155273
    5. '	for' → logprob: -10.564306259155273
    6. '   ' → logprob: -11.564306259155273
    7. ' ' → logprob: -12.314306259155273
    8. '       ' → logprob: -13.814306259155273
    9. '
' → logprob: -13.939306259155273
    10. '_s' → logprob: -14.064306259155273

Token 395: ' _,' (ID: 18042)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.26937544345855713
    2. '(_,' → logprob: -1.5193754434585571
    3. 'partition' → logprob: -4.394375324249268
    4. '(part' → logprob: -6.144375324249268
    5. '_' → logprob: -6.894375324249268
    6. 'part' → logprob: -7.519375324249268
    7. ' _,' → logprob: -7.769375324249268
    8. 'p' → logprob: -8.519375801086426
    9. '__,' → logprob: -8.894375801086426
    10. '(p' → logprob: -9.019375801086426

Token 396: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0009115827269852161
    2. ' s' → logprob: -7.000911712646484
    3. '_s' → logprob: -16.750911712646484
    4. '(s' → logprob: -17.625911712646484
    5. '(_,' → logprob: -19.750911712646484
    6. '	s' → logprob: -20.625911712646484
    7. ' ' → logprob: -21.375911712646484
    8. '(' → logprob: -22.125911712646484
    9. '   ' → logprob: -22.250911712646484
    10. '`s' → logprob: -22.500911712646484

Token 397: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4743538498878479
    2. ' in' → logprob: -0.9743538498878479
    3. ')' → logprob: -8.224353790283203
    4. '),' → logprob: -12.849353790283203
    5. '
' → logprob: -13.224353790283203
    6. '   ' → logprob: -13.599353790283203
    7. ' )' → logprob: -14.099353790283203
    8. '	in' → logprob: -14.599353790283203
    9. ' ' → logprob: -14.849353790283203
    10. ')
' → logprob: -15.599353790283203

Token 398: ' partitions' (ID: 89097)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.011434225365519524
    2. ' partitions' → logprob: -4.886434078216553
    3. '_part' → logprob: -6.511434078216553
    4. '_' → logprob: -7.011434078216553
    5. ' part' → logprob: -8.011434555053711
    6. '[' → logprob: -8.136434555053711
    7. 'partition' → logprob: -8.511434555053711
    8. 's' → logprob: -9.636434555053711
    9. ')' → logprob: -9.761434555053711
    10. '_,' → logprob: -9.886434555053711

Token 399: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005265804938971996
    2. '   ' → logprob: -7.625526428222656
    3. ')
' → logprob: -10.625526428222656
    4. ' )' → logprob: -11.250526428222656
    5. '))' → logprob: -14.875526428222656
    6. ')}' → logprob: -15.875526428222656
    7. '       ' → logprob: -15.875526428222656
    8. '  ' → logprob: -16.250526428222656
    9. ')

' → logprob: -16.500526428222656
    10. '())' → logprob: -16.500526428222656

Token 400: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0200481116771698
    2. '
' → logprob: -4.145048141479492
    3. 'max' → logprob: -6.145048141479492
    4. 'best' → logprob: -7.270048141479492
    5. '    
' → logprob: -7.770048141479492
    6. 'for' → logprob: -8.770048141479492
    7. ',' → logprob: -9.020048141479492
    8. ')' → logprob: -9.520048141479492
    9. '```' → logprob: -9.895048141479492
    10. ' for' → logprob: -10.145048141479492

Token 401: ' #' (ID: 1069)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.46159714460372925
    2. '   ' → logprob: -1.336597204208374
    3. 'for' → logprob: -3.586597204208374
    4. 'c' → logprob: -3.836597204208374
    5. 'max' → logprob: -3.836597204208374
    6. 'valid' → logprob: -3.961597204208374
    7. '#' (adapté à ' #') → logprob: -4.961596965789795
    8. 'results' → logprob: -5.961596965789795
    9. 'result' → logprob: -6.086596965789795
    10. ' best' → logprob: -6.961596965789795

Token 402: ' Filter' (ID: 20308)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.46202436089515686
    2. 'valid' → logprob: -1.3370243310928345
    3. 'max' → logprob: -3.087024450302124
    4. 'c' → logprob: -3.212024450302124
    5. '#' → logprob: -5.212024211883545
    6. 'results' → logprob: -5.462024211883545
    7. 'filtered' → logprob: -5.462024211883545
    8. '   ' → logprob: -6.462024211883545
    9. 'possible' → logprob: -6.462024211883545
    10. 'for' → logprob: -6.962024211883545

Token 403: ' partitions' (ID: 89097)
  Prédit: 'filtered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'filtered' → logprob: -1.2098417282104492
    2. 'part' → logprob: -1.5848417282104492
    3. '_part' → logprob: -1.7098417282104492
    4. 'valid' → logprob: -2.334841728210449
    5. '   ' → logprob: -2.834841728210449
    6. 'best' → logprob: -2.834841728210449
    7. '(part' → logprob: -4.209841728210449
    8. 'for' → logprob: -4.584841728210449
    9. 'partition' → logprob: -4.584841728210449
    10. 'possible' → logprob: -4.709841728210449

Token 404: ' with' (ID: 483)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1853347271680832
    2. ' =' → logprob: -1.8103346824645996
    3. '   ' → logprob: -6.0603346824646
    4. 'with' → logprob: -6.1853346824646
    5. 'filtered' → logprob: -8.060335159301758
    6. 'for' → logprob: -8.310335159301758
    7. '_filtered' → logprob: -8.435335159301758
    8. '_with' → logprob: -8.685335159301758
    9. 'def' → logprob: -10.060335159301758
    10. '_' → logprob: -10.810335159301758

Token 405: ' max' (ID: 2999)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8784555196762085
    2. 's' → logprob: -1.0034555196762085
    3. '_,' → logprob: -1.7534555196762085
    4. 'lambda' → logprob: -3.628455638885498
    5. '(_,' → logprob: -4.753455638885498
    6. 'max' → logprob: -6.628455638885498
    7. '_s' → logprob: -6.753455638885498
    8. '(s' → logprob: -6.878455638885498
    9. ' s' → logprob: -7.128455638885498
    10. '(lambda' → logprob: -7.378455638885498

Token 406: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.39099520444869995
    2. 'sum' → logprob: -2.0159952640533447
    3. 's' → logprob: -2.2659952640533447
    4. '(s' → logprob: -2.5159952640533447
    5. '_s' → logprob: -6.015995025634766
    6. '(sum' → logprob: -7.015995025634766
    7. ' s' → logprob: -7.515995025634766
    8. ' sum' → logprob: -7.640995025634766
    9. 'for' → logprob: -8.265995025634766
    10. '(' → logprob: -8.765995025634766

Token 407: ' only' (ID: 1606)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20561093091964722
    2. ' =' → logprob: -2.330610990524292
    3. 'filtered' → logprob: -3.205610990524292
    4. '=' → logprob: -3.830610990524292
    5. 'max' → logprob: -4.205610752105713
    6. 'best' → logprob: -5.830610752105713
    7. '
' → logprob: -5.955610752105713
    8. '```' → logprob: -6.330610752105713
    9. 'valid' → logprob: -7.205610752105713
    10. '_filtered' → logprob: -7.705610752105713

Token 408: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021184127777814865
    2. '
' → logprob: -4.021183967590332
    3. 'filtered' → logprob: -6.521183967590332
    4. '    
' → logprob: -7.021183967590332
    5. 'best' → logprob: -8.771183967590332
    6. 'valid' → logprob: -8.896183967590332
    7. 'max' → logprob: -9.146183967590332
    8. '```' → logprob: -9.521183967590332
    9. 'for' → logprob: -10.021183967590332
    10. 'selected' → logprob: -10.396183967590332

Token 409: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020548582542687654
    2. '
' → logprob: -6.877054691314697
    3. 'for' → logprob: -8.252055168151855
    4. '    
' → logprob: -8.252055168151855
    5. 'filtered' → logprob: -8.502055168151855
    6. '```' → logprob: -8.752055168151855
    7. 'best' → logprob: -10.127055168151855
    8. 'valid' → logprob: -10.377055168151855
    9. ' for' → logprob: -11.252055168151855
    10. 'max' → logprob: -11.252055168151855

Token 410: ' max' (ID: 2999)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.2596122920513153
    2. 'max' (adapté à ' max') → logprob: -2.0096123218536377
    3. 'valid' → logprob: -3.1346123218536377
    4. 'filtered' → logprob: -3.2596123218536377
    5. '   ' → logprob: -5.509612083435059
    6. 'c' → logprob: -5.509612083435059
    7. 'part' → logprob: -6.759612083435059
    8. ' best' → logprob: -6.759612083435059
    9. 'top' → logprob: -7.634612083435059
    10. 'final' → logprob: -8.009612083435059

Token 411: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.14577244222164154
    2. '_sum' → logprob: -2.2707724571228027
    3. '_s' → logprob: -4.145772457122803
    4. 'part' → logprob: -4.895772457122803
    5. '_parts' → logprob: -5.645772457122803
    6. 'sum' → logprob: -6.270772457122803
    7. 's' → logprob: -6.895772457122803
    8. '_partition' → logprob: -7.020772457122803
    9. '_' → logprob: -7.770772457122803
    10. 'for' → logprob: -8.270771980285645

Token 412: 'itions' (ID: 5500)
  Prédit: 'itions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itions' → logprob: -0.00012094692647224292
    2. 'ions' → logprob: -9.250121116638184
    3. '_' → logprob: -11.375121116638184
    4. 'ations' → logprob: -11.750121116638184
    5. 's' → logprob: -13.625121116638184
    6. '```' → logprob: -14.250121116638184
    7. '_part' → logprob: -14.500121116638184
    8. '=' → logprob: -14.625121116638184
    9. '[' → logprob: -15.125121116638184
    10. '
' → logprob: -15.250121116638184

Token 413: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326186656951904
    2. '=' → logprob: -1.313261866569519
    3. ' =[' → logprob: -16.313261032104492
    4. '   ' → logprob: -17.188261032104492
    5. '=set' → logprob: -18.313261032104492
    6. '＝' → logprob: -18.438261032104492
    7. '=[' → logprob: -18.563261032104492
    8. '=

' → logprob: -18.813261032104492
    9. ' ' → logprob: -18.938261032104492
    10. '=[]' → logprob: -18.938261032104492

Token 414: ' [' (ID: 723)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.09689850360155106
    2. '[' → logprob: -2.5968985557556152
    3. '[p' → logprob: -5.096898555755615
    4. ' {' → logprob: -6.096898555755615
    5. '[(' → logprob: -6.471898555755615
    6. ' [' → logprob: -6.721898555755615
    7. '{k' → logprob: -6.846898555755615
    8. 'set' → logprob: -6.971898555755615
    9. '[x' → logprob: -7.096898555755615
    10. '[s' → logprob: -7.221898555755615

Token 415: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.024721607565879822
    2. 'partition' → logprob: -4.149721622467041
    3. 'parts' → logprob: -5.399721622467041
    4. 'part' → logprob: -5.524721622467041
    5. 'pt' → logprob: -9.899721145629883
    6. ' p' → logprob: -10.274721145629883
    7. '(p' → logprob: -11.524721145629883
    8. '(part' → logprob: -11.649721145629883
    9. 'prt' → logprob: -12.024721145629883
    10. 'pat' → logprob: -12.274721145629883

Token 416: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5978171825408936
    2. 'for' → logprob: -0.8478171825408936
    3. '[' → logprob: -3.8478171825408936
    4. 'r' → logprob: -8.722817420959473
    5. 'art' → logprob: -9.597817420959473
    6. ',' → logprob: -10.347817420959473
    7. '```' → logprob: -10.597817420959473
    8. '	for' → logprob: -11.847817420959473
    9. ' ' → logprob: -12.972817420959473
    10. 'ar' → logprob: -13.222817420959473

Token 417: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.839121826691553e-05
    2. '(p' → logprob: -10.250078201293945
    3. ' p' → logprob: -10.250078201293945
    4. '_,' → logprob: -12.125078201293945
    5. ',' → logprob: -14.125078201293945
    6. ',p' → logprob: -15.125078201293945
    7. '   ' → logprob: -15.250078201293945
    8. '[p' → logprob: -15.750078201293945
    9. '(' → logprob: -15.875078201293945
    10. ' (' → logprob: -16.000078201293945

Token 418: ',s' (ID: 20379)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0016318554989993572
    2. '(p' → logprob: -7.001631736755371
    3. ',' → logprob: -7.501631736755371
    4. '_,' → logprob: -9.251631736755371
    5. ',p' → logprob: -10.001631736755371
    6. ' p' → logprob: -11.126631736755371
    7. '(' → logprob: -12.126631736755371
    8. ' (' → logprob: -13.126631736755371
    9. '(_,' → logprob: -13.251631736755371
    10. 'in' → logprob: -13.751631736755371

Token 419: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4752101004123688
    2. 'in' → logprob: -0.9752100706100464
    3. ',' → logprob: -7.100210189819336
    4. ',p' → logprob: -8.225210189819336
    5. 'p' → logprob: -10.350210189819336
    6. ' p' → logprob: -12.975210189819336
    7. ' ' → logprob: -13.225210189819336
    8. '
' → logprob: -13.725210189819336
    9. '   ' → logprob: -14.225210189819336
    10. '  ' → logprob: -14.975210189819336

Token 420: ' partitions' (ID: 89097)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.001514384988695383
    2. ' partitions' → logprob: -6.501514434814453
    3. 'p' → logprob: -12.001514434814453
    4. '_part' → logprob: -12.376514434814453
    5. '(part' → logprob: -14.626514434814453
    6. '.part' → logprob: -15.126514434814453
    7. 'par' → logprob: -15.876514434814453
    8. '[' → logprob: -15.876514434814453
    9. 'partition' → logprob: -16.001514434814453
    10. 'max' → logprob: -16.126514434814453

Token 421: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.474123477935791
    2. 'if' → logprob: -0.974123477935791
    3. 'in' → logprob: -10.974123001098633
    4. ' in' → logprob: -11.224123001098633
    5. '   ' → logprob: -11.349123001098633
    6. ']' → logprob: -13.849123001098633
    7. '	if' → logprob: -14.224123001098633
    8. '  ' → logprob: -14.349123001098633
    9. ' ' → logprob: -14.599123001098633
    10. '    ' → logprob: -14.724123001098633

Token 422: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01814994215965271
    2. ' s' → logprob: -4.0181498527526855
    3. '_s' → logprob: -18.143150329589844
    4. '(s' → logprob: -18.143150329589844
    5. ' ' → logprob: -18.268150329589844
    6. '   ' → logprob: -18.518150329589844
    7. 'p' → logprob: -18.893150329589844
    8. ' ' → logprob: -19.143150329589844
    9. '	s' → logprob: -19.643150329589844
    10. '    ' → logprob: -20.018150329589844

Token 423: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.048591118305921555
    2. ' ==' → logprob: -3.048591136932373
    3. ']==' → logprob: -12.923590660095215
    4. ')==' → logprob: -14.173590660095215
    5. '=' → logprob: -15.548590660095215
    6. '==
' → logprob: -15.548590660095215
    7. '===' → logprob: -16.67359161376953
    8. '   ' → logprob: -17.04859161376953
    9. '()==' → logprob: -17.42359161376953
    10. ' ' → logprob: -17.54859161376953

Token 424: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -9.615255839889869e-05
    2. ' max' → logprob: -9.250096321105957
    3. '   ' → logprob: -18.75009536743164
    4. '
' → logprob: -21.12509536743164
    5. '(max' → logprob: -21.12509536743164
    6. '           ' → logprob: -21.25009536743164
    7. 'target' → logprob: -21.50009536743164
    8. ' ' → logprob: -22.00009536743164
    9. '	max' → logprob: -22.12509536743164
    10. '[max' → logprob: -22.12509536743164

Token 425: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0002446509897708893
    2. 'sum' → logprob: -8.750245094299316
    3. 'max' → logprob: -9.625245094299316
    4. '_max' → logprob: -10.875245094299316
    5. '_' → logprob: -14.875245094299316
    6. ' sum' → logprob: -15.250245094299316
    7. 'target' → logprob: -15.875245094299316
    8. '_s' → logprob: -16.250244140625
    9. ' _' → logprob: -16.750244140625
    10. '   ' → logprob: -17.000244140625

Token 426: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00035453110467642546
    2. ' ]' → logprob: -8.250354766845703
    3. '   ' → logprob: -9.375354766845703
    4. ']
' → logprob: -12.750354766845703
    5. ')]' → logprob: -13.000354766845703
    6. ')' → logprob: -13.625354766845703
    7. '()]' → logprob: -14.625354766845703
    8. ']

' → logprob: -15.250354766845703
    9. '])' → logprob: -15.500354766845703
    10. '       ' → logprob: -15.500354766845703

Token 427: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036227770149707794
    2. 'max' → logprob: -3.5362277030944824
    3. '
' → logprob: -5.786227703094482
    4. '    
' → logprob: -6.036227703094482
    5. 'for' → logprob: -8.28622817993164
    6. 'return' → logprob: -8.41122817993164
    7. 'if' → logprob: -8.66122817993164
    8. 'sorted' → logprob: -9.53622817993164
    9. '```' → logprob: -9.91122817993164
    10. 'best' → logprob: -10.53622817993164

Token 428: ' if' (ID: 538)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.18613308668136597
    2. '   ' → logprob: -2.5611331462860107
    3. 'for' → logprob: -2.6861331462860107
    4. 'if' (adapté à ' if') → logprob: -4.436132907867432
    5. 'best' → logprob: -5.686132907867432
    6. ' for' → logprob: -6.061132907867432
    7. ' max' → logprob: -6.186132907867432
    8. '
' → logprob: -6.311132907867432
    9. 'sorted' → logprob: -6.436132907867432
    10. ' if' → logprob: -7.936132907867432

Token 429: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.5409267544746399
    2. ' max' → logprob: -1.9159266948699951
    3. 'len' → logprob: -2.290926694869995
    4. ' int' → logprob: -2.790926694869995
    5. ' best' → logprob: -3.415926694869995
    6. 'max' → logprob: -3.665926694869995
    7. ' number' → logprob: -3.915926694869995
    8. 'int' → logprob: -4.665926933288574
    9. ' target' → logprob: -4.665926933288574
    10. 'number' → logprob: -5.915926933288574

Token 430: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0007379194721579552
    2. '(' → logprob: -7.250738143920898
    3. 'max' → logprob: -10.875738143920898
    4. ' (' → logprob: -11.875738143920898
    5. '(best' → logprob: -14.250738143920898
    6. '(p' → logprob: -14.750738143920898
    7. ' max' → logprob: -15.375738143920898
    8. '(min' → logprob: -15.750738143920898
    9. '(m' → logprob: -15.875738143920898
    10. '(s' → logprob: -16.2507381439209

Token 431: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -5.085517113911919e-05
    2. '_parts' → logprob: -10.25005054473877
    3. '(part' → logprob: -12.62505054473877
    4. '(_' → logprob: -12.75005054473877
    5. '(max' → logprob: -12.75005054473877
    6. '_par' → logprob: -13.25005054473877
    7. '_max' → logprob: -13.37505054473877
    8. '(' → logprob: -14.37505054473877
    9. '_partition' → logprob: -14.62505054473877
    10. '_' → logprob: -14.87505054473877

Token 432: 'itions' (ID: 5500)
  Prédit: 'art'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.12872061133384705
    2. 'r' → logprob: -3.12872052192688
    3. 'arts' → logprob: -3.25372052192688
    4. '_part' → logprob: -4.128720760345459
    5. 'ations' → logprob: -4.378720760345459
    6. 'a' → logprob: -6.128720760345459
    7. 'ar' → logprob: -7.003720760345459
    8. 'lications' → logprob: -7.003720760345459
    9. 'lations' → logprob: -7.128720760345459
    10. 'ractions' → logprob: -7.128720760345459

Token 433: ')' (ID: 8)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.44548752903938293
    2. ')' → logprob: -1.3204874992370605
    3. ' >' → logprob: -3.0704874992370605
    4. '==' → logprob: -3.3204874992370605
    5. '>' → logprob: -5.0704874992370605
    6. ' )' → logprob: -6.6954874992370605
    7. ')==' → logprob: -6.8204874992370605
    8. '[' → logprob: -7.6954874992370605
    9. ')>' → logprob: -7.8204874992370605
    10. ' <' → logprob: -8.195487976074219

Token 434: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.34718096256256104
    2. '==' → logprob: -1.847180962562561
    3. ' >' → logprob: -2.2221808433532715
    4. '>' → logprob: -3.8471808433532715
    5. ' <' → logprob: -5.5971808433532715
    6. ' <=' → logprob: -6.7221808433532715
    7. '<' → logprob: -7.7221808433532715
    8. '<=' → logprob: -8.72218132019043
    9. '[' → logprob: -9.09718132019043
    10. '1' → logprob: -9.22218132019043

Token 435: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005723327049054205
    2. '0' → logprob: -7.875572204589844
    3. ' ' → logprob: -8.625572204589844
    4. '2' → logprob: -12.000572204589844
    5. '   ' → logprob: -12.875572204589844
    6. '=' → logprob: -13.250572204589844
    7. '>' → logprob: -13.625572204589844
    8. '```' → logprob: -14.813072204589844
    9. '  ' → logprob: -16.063072204589844
    10. '3' → logprob: -16.438072204589844

Token 436: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004377022560220212
    2. '0' → logprob: -7.7504377365112305
    3. ' ' → logprob: -12.12543773651123
    4. '2' → logprob: -13.75043773651123
    5. '   ' → logprob: -15.37543773651123
    6. '```' → logprob: -16.187936782836914
    7. '>' → logprob: -16.375436782836914
    8. '=' → logprob: -17.312936782836914
    9. 'one' → logprob: -18.000436782836914
    10. '۱' → logprob: -18.187936782836914

Token 437: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008915906772017479
    2. ':
' → logprob: -4.758915901184082
    3. '       ' → logprob: -8.383915901184082
    4. '   ' → logprob: -10.258915901184082
    5. ':return' → logprob: -10.633915901184082
    6. '<|end|>' → logprob: -12.258915901184082
    7. ':

' → logprob: -13.258915901184082
    8. '.' → logprob: -13.758915901184082
    9. ' or' → logprob: -13.758915901184082
    10. '):' → logprob: -14.133915901184082

Token 438: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022632593754678965
    2. '   ' → logprob: -6.127263069152832
    3. '    
' → logprob: -11.252263069152832
    4. '        
' → logprob: -11.252263069152832
    5. '           ' → logprob: -11.377263069152832
    6. ' return' → logprob: -11.377263069152832
    7. '
' → logprob: -11.502263069152832
    8. 'return' → logprob: -12.002263069152832
    9. '```' → logprob: -12.877263069152832
    10. 'newline' → logprob: -13.377263069152832

Token 439: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07589676231145859
    2. '   ' → logprob: -3.200896739959717
    3. 'print' (adapté à ' print') → logprob: -3.825896739959717
    4. ' print' → logprob: -4.575896739959717
    5. '```' → logprob: -9.075897216796875
    6. ' return' → logprob: -9.325897216796875
    7. 'return' → logprob: -10.075897216796875
    8. '           ' → logprob: -12.325897216796875
    9. '    ' → logprob: -13.075897216796875
    10. '
' → logprob: -13.075897216796875

Token 440: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.10080640763044357
    2. '("' → logprob: -2.350806474685669
    3. '(' → logprob: -7.60080623626709
    4. '(f' → logprob: -9.47580623626709
    5. '()' → logprob: -11.22580623626709
    6. '('"' → logprob: -12.22580623626709
    7. '("'' → logprob: -12.60080623626709
    8. '("")' → logprob: -14.35080623626709
    9. '('(' → logprob: -15.97580623626709
    10. ''' → logprob: -16.225807189941406

Token 441: 'error' (ID: 1544)
  Prédit: 'error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'error' → logprob: -0.0008174888207577169
    2. ''' → logprob: -7.12581729888916
    3. '"' → logprob: -11.87581729888916
    4. ' error' → logprob: -12.62581729888916
    5. '(error' → logprob: -14.50081729888916
    6. 'max' → logprob: -14.50081729888916
    7. 'rror' → logprob: -15.37581729888916
    8. 'return' → logprob: -16.125818252563477
    9. ''s' → logprob: -16.250818252563477
    10. 'ERROR' → logprob: -16.375818252563477

Token 442: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03310946375131607
    2. '')' → logprob: -3.908109426498413
    3. '   ' → logprob: -5.033109664916992
    4. ')
' → logprob: -5.408109664916992
    5. '       ' → logprob: -7.033109664916992
    6. '')
' → logprob: -7.658109664916992
    7. '")' → logprob: -9.158109664916992
    8. ')')
' → logprob: -12.158109664916992
    9. '<|end|>' → logprob: -12.533109664916992
    10. '```' → logprob: -12.533109664916992

Token 443: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014778443146497011
    2. '       ' → logprob: -7.0014777183532715
    3. '
' → logprob: -8.50147819519043
    4. '    
' → logprob: -8.75147819519043
    5. '```' → logprob: -8.87647819519043
    6. '<|end|>' → logprob: -10.50147819519043
    7. 'else' → logprob: -10.75147819519043
    8. ' else' → logprob: -12.25147819519043
    9. '        
' → logprob: -12.37647819519043
    10. 'return' → logprob: -13.75147819519043

Token 444: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008084236644208431
    2. '   ' → logprob: -4.883084297180176
    3. 'return' (adapté à ' return') → logprob: -7.758084297180176
    4. ' return' → logprob: -10.383084297180176
    5. '           ' → logprob: -11.633084297180176
    6. 'else' → logprob: -12.633084297180176
    7. ' ' → logprob: -13.258084297180176
    8. '
' → logprob: -13.883084297180176
    9. ' else' → logprob: -14.008084297180176
    10. '	return' → logprob: -14.008084297180176

Token 445: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7080680727958679
    2. '   ' → logprob: -0.7080680727958679
    3. '    
' → logprob: -4.458067893981934
    4. '  
' → logprob: -7.083067893981934
    5. 'for' → logprob: -7.333067893981934
    6. 'print' → logprob: -7.458067893981934
    7. ' for' → logprob: -7.958067893981934
    8. '

' → logprob: -8.458067893981934
    9. '```' → logprob: -9.083067893981934
    10. ' 
' → logprob: -9.208067893981934

Token 446: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027417639270424843
    2. '
' → logprob: -4.0274176597595215
    3. '    
' → logprob: -5.2774176597595215
    4. ' for' → logprob: -6.4024176597595215
    5. 'for' → logprob: -6.7774176597595215
    6. 'else' → logprob: -7.6524176597595215
    7. '  
' → logprob: -8.277417182922363
    8. '```' → logprob: -8.902417182922363
    9. '\n' → logprob: -9.652417182922363
    10. 'print' → logprob: -9.777417182922363

Token 447: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2422802448272705
    2. '
' → logprob: -2.1172802448272705
    3. ' for' → logprob: -3.2422802448272705
    4. 'for' → logprob: -3.6172802448272705
    5. 'result' → logprob: -4.992280006408691
    6. '    
' → logprob: -4.992280006408691
    7. 'max' → logprob: -5.867280006408691
    8. 'best' → logprob: -6.242280006408691
    9. '#' → logprob: -6.867280006408691
    10. ' if' → logprob: -6.992280006408691

Token 448: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.24312996864318848
    2. ' max' → logprob: -2.3681299686431885
    3. 'len' → logprob: -2.7431299686431885
    4. ' int' → logprob: -3.1181299686431885
    5. 'max' → logprob: -5.368129730224609
    6. 'int' → logprob: -5.868129730224609
    7. ' number' → logprob: -5.868129730224609
    8. ' best' → logprob: -6.743129730224609
    9. ' target' → logprob: -7.243129730224609
    10. ' type' → logprob: -7.868129730224609

Token 449: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -7.064297824399546e-05
    2. ' (' → logprob: -10.250070571899414
    3. '(' → logprob: -10.375070571899414
    4. 'max' → logprob: -13.125070571899414
    5. '(best' → logprob: -13.375070571899414
    6. ' max' → logprob: -15.625070571899414
    7. '(min' → logprob: -15.750070571899414
    8. '==' → logprob: -16.875070571899414
    9. '=max' → logprob: -17.000070571899414
    10. '[max' → logprob: -17.625070571899414

Token 450: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -4.008129963040119e-06
    2. '_parts' → logprob: -13.375003814697266
    3. '(max' → logprob: -13.500003814697266
    4. 'Part' → logprob: -15.250003814697266
    5. '(_' → logprob: -15.625003814697266
    6. '```' → logprob: -15.875003814697266
    7. 'max' → logprob: -16.125003814697266
    8. '_par' → logprob: -16.125003814697266
    9. 'part' → logprob: -16.625003814697266
    10. '_pat' → logprob: -16.750003814697266

Token 451: 'itions' (ID: 5500)
  Prédit: 'art'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.033726274967193604
    2. 'ations' → logprob: -4.033726215362549
    3. '_part' → logprob: -4.783726215362549
    4. 'itions' → logprob: -6.158726215362549
    5. 't' → logprob: -6.658726215362549
    6. 'r' → logprob: -6.783726215362549
    7. 'arts' → logprob: -6.908726215362549
    8. 'utations' → logprob: -7.658726215362549
    9. 'urations' → logprob: -8.658726692199707
    10. 'lations' → logprob: -8.783726692199707

Token 452: ')' (ID: 8)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.47445252537727356
    2. ' >' → logprob: -1.4744524955749512
    3. '==' → logprob: -2.224452495574951
    4. '>' → logprob: -3.224452495574951
    5. ')' → logprob: -7.349452495574951
    6. '   ' → logprob: -8.97445297241211
    7. ')>' → logprob: -10.47445297241211
    8. '[' → logprob: -10.47445297241211
    9. ')==' → logprob: -10.47445297241211
    10. ' <' → logprob: -10.59945297241211

Token 453: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.2090487480163574
    2. '>' → logprob: -1.3340487480163574
    3. '==' → logprob: -1.4590487480163574
    4. ' >' → logprob: -1.5840487480163574
    5. '   ' → logprob: -8.959049224853516
    6. ' <' → logprob: -9.084049224853516
    7. '<' → logprob: -9.459049224853516
    8. '[' → logprob: -9.709049224853516
    9. ' <=' → logprob: -10.584049224853516
    10. '1' → logprob: -10.709049224853516

Token 454: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014483489096164703
    2. ' ' → logprob: -4.264483451843262
    3. '=' → logprob: -8.639483451843262
    4. '0' → logprob: -9.389483451843262
    5. '   ' → logprob: -10.764483451843262
    6. '100' → logprob: -11.514483451843262
    7. '10' → logprob: -11.764483451843262
    8. '  ' → logprob: -12.264483451843262
    9. '```' → logprob: -12.389483451843262
    10. '>' → logprob: -12.889483451843262

Token 455: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.7159857786027715e-05
    2. '10' → logprob: -11.250046730041504
    3. ' ' → logprob: -11.250046730041504
    4. '100' → logprob: -11.750046730041504
    5. '0' → logprob: -12.750046730041504
    6. '50' → logprob: -13.250046730041504
    7. '   ' → logprob: -13.375046730041504
    8. '5' → logprob: -13.625046730041504
    9. '20' → logprob: -13.625046730041504
    10. '2' → logprob: -14.250046730041504

Token 456: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05166420713067055
    2. ':
' → logprob: -3.051664113998413
    3. '       ' → logprob: -5.926664352416992
    4. ' and' → logprob: -8.301664352416992
    5. '   ' → logprob: -9.176664352416992
    6. 'and' → logprob: -11.051664352416992
    7. ',' → logprob: -11.801664352416992
    8. '):
' → logprob: -12.051664352416992
    9. '[' → logprob: -12.301664352416992
    10. ':

' → logprob: -12.301664352416992

Token 457: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.946405094116926e-05
    2. '
' → logprob: -10.625079154968262
    3. '   ' → logprob: -10.875079154968262
    4. '           ' → logprob: -11.375079154968262
    5. '```' → logprob: -12.000079154968262
    6. '        
' → logprob: -12.500079154968262
    7. '[' → logprob: -12.625079154968262
    8. '#' → logprob: -13.375079154968262
    9. 'print' → logprob: -13.500079154968262
    10. ',' → logprob: -14.000079154968262

Token 458: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5776194334030151
    2. ' print' → logprob: -1.0776194334030151
    3. 'print' → logprob: -2.4526195526123047
    4. '   ' → logprob: -5.202619552612305
    5. ' return' → logprob: -6.452619552612305
    6. ' for' → logprob: -6.577619552612305
    7. ' #' → logprob: -6.702619552612305
    8. '#' (adapté à ' #') → logprob: -7.327619552612305
    9. 'return' → logprob: -7.577619552612305
    10. '           ' → logprob: -8.577619552612305

Token 459: ' Check' (ID: 6208)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07131128013134003
    2. ' print' → logprob: -3.1963112354278564
    3. '       ' → logprob: -4.3213114738464355
    4. '#' → logprob: -4.5713114738464355
    5. '   ' → logprob: -5.9463114738464355
    6. ' #' → logprob: -6.8213114738464355
    7. 'for' → logprob: -9.071310997009277
    8. 'possible' → logprob: -9.696310997009277
    9. 'return' → logprob: -9.821310997009277
    10. ' for' → logprob: -9.946310997009277

Token 460: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6691941618919373
    2. ' for' → logprob: -1.169194221496582
    3. 'if' → logprob: -2.794194221496582
    4. 'for' → logprob: -2.919194221496582
    5. ' all' → logprob: -3.294194221496582
    6. '   ' → logprob: -4.419194221496582
    7. 'all' → logprob: -5.044194221496582
    8. '       ' → logprob: -6.544194221496582
    9. ' the' → logprob: -7.044194221496582
    10. ' duplicates' → logprob: -7.794194221496582

Token 461: ' partitions' (ID: 89097)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.6337817311286926
    2. 'any' → logprob: -1.0087816715240479
    3. ' all' → logprob: -3.133781671524048
    4. 'len' → logprob: -3.758781671524048
    5. ' any' → logprob: -4.008781909942627
    6. 'max' → logprob: -4.383781909942627
    7. 'the' → logprob: -6.258781909942627
    8. 'set' → logprob: -7.008781909942627
    9. 'not' → logprob: -7.258781909942627
    10. '#' → logprob: -7.508781909942627

Token 462: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -1.1082477569580078
    2. '[' → logprob: -1.4832477569580078
    3. 'are' → logprob: -2.233247756958008
    4. '   ' → logprob: -2.983247756958008
    5. ' differ' → logprob: -2.983247756958008
    6. 'd' → logprob: -2.983247756958008
    7. ' have' → logprob: -3.233247756958008
    8. ' all' → logprob: -3.608247756958008
    9. '[-' → logprob: -4.233247756958008
    10. 'have' → logprob: -4.233247756958008

Token 463: ' identical' (ID: 32820)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.0355813205242157
    2. 'ident' → logprob: -4.160581111907959
    3. ' all' → logprob: -4.785581111907959
    4. 'not' → logprob: -5.785581111907959
    5. 'equal' → logprob: -6.285581111907959
    6. 'len' → logprob: -6.410581111907959
    7. 'any' → logprob: -6.910581111907959
    8. 'different' → logprob: -6.910581111907959
    9. 'sorted' → logprob: -7.035581111907959
    10. 'exact' → logprob: -7.535581111907959

Token 464: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.0119916200637817
    2. ':
' → logprob: -1.0119916200637817
    3. ':' → logprob: -1.5119916200637817
    4. 'and' → logprob: -3.886991500854492
    5. ' or' → logprob: -3.886991500854492
    6. '   ' → logprob: -5.136991500854492
    7. '       ' → logprob: -5.761991500854492
    8. '
' → logprob: -7.886991500854492
    9. 'or' → logprob: -8.261991500854492
    10. ',' → logprob: -8.386991500854492

Token 465: 'only' (ID: 7393)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.3920564651489258
    2. 'len' → logprob: -1.7670564651489258
    3. ' all' → logprob: -2.517056465148926
    4. 'any' → logprob: -3.392056465148926
    5. 'max' → logprob: -3.642056465148926
    6. ' len' → logprob: -5.392056465148926
    7. ' any' → logprob: -5.392056465148926
    8. 'set' → logprob: -6.017056465148926
    9. ' max' → logprob: -7.392056465148926
    10. 'not' → logprob: -8.267056465148926

Token 466: ' differing' (ID: 108739)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.303310751914978
    2. ' one' → logprob: -2.1783108711242676
    3. 'if' → logprob: -2.6783108711242676
    4. 'in' → logprob: -3.8033108711242676
    5. 'dif' → logprob: -4.428310871124268
    6. 'd' → logprob: -4.678310871124268
    7. ' in' → logprob: -5.053310871124268
    8. 'different' → logprob: -5.428310871124268
    9. 'spaces' → logprob: -5.678310871124268
    10. 'difference' → logprob: -6.053310871124268

Token 467: ' by' (ID: 656)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6016380786895752
    2. 'in' → logprob: -1.1016380786895752
    3. ' by' → logprob: -2.351638078689575
    4. 'by' → logprob: -3.726638078689575
    5. ' at' → logprob: -8.476637840270996
    6. ')' → logprob: -8.851637840270996
    7. 'at' → logprob: -9.726637840270996
    8. ' ' → logprob: -11.101637840270996
    9. ',' → logprob: -11.976637840270996
    10. '_in' → logprob: -12.101637840270996

Token 468: ' representation' (ID: 22311)
  Prédit: 'spaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spaces' → logprob: -0.9022878408432007
    2. 'order' → logprob: -1.0272878408432007
    3. 'spacing' → logprob: -2.5272879600524902
    4. 'ordering' → logprob: -3.1522879600524902
    5. 'format' → logprob: -3.4022879600524902
    6. 'wh' → logprob: -4.02728796005249
    7. ' order' → logprob: -4.52728796005249
    8. 'digits' → logprob: -5.02728796005249
    9. 'string' → logprob: -5.52728796005249
    10. ' spaces' → logprob: -5.65228796005249

Token 469: '?),' (ID: 95807)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8811556100845337
    2. ',' → logprob: -1.7561556100845337
    3. ' or' → logprob: -1.7561556100845337
    4. ' of' → logprob: -2.256155490875244
    5. 's' → logprob: -3.631155490875244
    6. ' but' → logprob: -3.881155490875244
    7. ' in' → logprob: -4.131155490875244
    8. '):' → logprob: -4.256155490875244
    9. '):
' → logprob: -4.506155490875244
    10. ' )' → logprob: -4.756155490875244

Token 470: ' consider' (ID: 3331)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11927194148302078
    2. '           ' → logprob: -2.494271993637085
    3. ' continue' → logprob: -4.619271755218506
    4. ' else' → logprob: -4.994271755218506
    5. '```' → logprob: -5.744271755218506
    6. 'continue' → logprob: -5.994271755218506
    7. 'else' → logprob: -6.619271755218506
    8. '   ' → logprob: -6.619271755218506
    9. ' if' → logprob: -6.869271755218506
    10. ' for' → logprob: -6.994271755218506

Token 471: ' order' (ID: 2569)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.1277143955230713
    2. 'all' → logprob: -1.3777143955230713
    3. ' p' → logprob: -2.2527143955230713
    4. 'part' → logprob: -2.6277143955230713
    5. ' the' → logprob: -3.3777143955230713
    6. 'p' → logprob: -3.8777143955230713
    7. '
' → logprob: -4.002714157104492
    8. ' leading' → logprob: -4.127714157104492
    9. 'the' → logprob: -4.377714157104492
    10. 'set' → logprob: -4.627714157104492

Token 472: ' matters' (ID: 19854)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9089131951332092
    2. ':' → logprob: -1.2839131355285645
    3. '   ' → logprob: -1.9089131355285645
    4. '       ' → logprob: -2.2839131355285645
    5. ' and' → logprob: -4.1589131355285645
    6. ' or' → logprob: -4.6589131355285645
    7. ',' → logprob: -5.0339131355285645
    8. '
' → logprob: -5.1589131355285645
    9. ' of' → logprob: -5.1589131355285645
    10. 'and' → logprob: -5.6589131355285645

Token 473: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4612268805503845
    2. ':' → logprob: -1.3362269401550293
    3. ':
' → logprob: -2.7112269401550293
    4. '
' → logprob: -4.336226940155029
    5. ' and' → logprob: -4.836226940155029
    6. ' or' → logprob: -4.961226940155029
    7. '   ' → logprob: -5.211226940155029
    8. ',' → logprob: -6.336226940155029
    9. '        
' → logprob: -6.836226940155029
    10. '\n' → logprob: -7.461226940155029

Token 474: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012913133949041367
    2. '           ' → logprob: -5.137913227081299
    3. ' continue' → logprob: -5.762913227081299
    4. ' return' → logprob: -7.137913227081299
    5. ' for' → logprob: -7.387913227081299
    6. '```' → logprob: -7.512913227081299
    7. '   ' → logprob: -7.637913227081299
    8. 'continue' → logprob: -7.887913227081299
    9. ' if' → logprob: -8.13791275024414
    10. '#' → logprob: -9.01291275024414

Token 475: ' exactly' (ID: 9707)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.6540578603744507
    2. 'max' → logprob: -1.7790578603744507
    3. 'len' → logprob: -1.9040578603744507
    4. 'all' → logprob: -2.0290579795837402
    5. 'set' → logprob: -2.6540579795837402
    6. ' max' → logprob: -3.0290579795837402
    7. ' set' → logprob: -3.0290579795837402
    8. ' any' → logprob: -3.0290579795837402
    9. 'any' → logprob: -3.2790579795837402
    10. ' True' → logprob: -3.5290579795837402

Token 476: ' the' (ID: 290)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.9681737422943115
    2. ' equal' → logprob: -1.9681737422943115
    3. ' all' → logprob: -2.2181737422943115
    4. 'all' → logprob: -2.2181737422943115
    5. 'len' → logprob: -2.4681737422943115
    6. ' the' → logprob: -3.2181737422943115
    7. ' set' → logprob: -3.5931737422943115
    8. 'the' → logprob: -3.8431737422943115
    9. ' True' → logprob: -3.8431737422943115
    10. 'set' → logprob: -4.343173980712891

Token 477: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.5232996940612793
    2. ' same' → logprob: -0.8982996940612793
    3. 'len' → logprob: -9.898300170898438
    4. 'set' → logprob: -10.148300170898438
    5. 's' → logprob: -10.523300170898438
    6. '```' → logprob: -11.273300170898438
    7. 'length' → logprob: -11.523300170898438
    8. 'last' → logprob: -11.898300170898438
    9. '#' → logprob: -12.023300170898438
    10. ' set' → logprob: -12.523300170898438

Token 478: ' partitions' (ID: 89097)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4006990194320679
    2. ':
' → logprob: -1.5256990194320679
    3. '(part' → logprob: -1.6506990194320679
    4. 'part' → logprob: -2.2756991386413574
    5. '   ' → logprob: -2.7756991386413574
    6. '(p' → logprob: -3.6506991386413574
    7. ' in' → logprob: -3.7756991386413574
    8. '_part' → logprob: -3.7756991386413574
    9. ' and' → logprob: -4.150699138641357
    10. 'in' → logprob: -4.275699138641357

Token 479: ' repeated' (ID: 24161)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3881159722805023
    2. ',' → logprob: -2.263115882873535
    3. ':
' → logprob: -2.513115882873535
    4. ' and' → logprob: -3.513115882873535
    5. 'and' → logprob: -3.763115882873535
    6. '   ' → logprob: -3.888115882873535
    7. '[' → logprob: -4.388115882873535
    8. '_are' → logprob: -4.513115882873535
    9. ' are' → logprob: -5.513115882873535
    10. ' =' → logprob: -6.013115882873535

Token 480: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.125744342803955
    2. ',' → logprob: -1.375744342803955
    3. '   ' → logprob: -1.875744342803955
    4. ':
' → logprob: -2.000744342803955
    5. ':' → logprob: -2.125744342803955
    6. ' in' → logprob: -6.000744342803955
    7. ':

' → logprob: -6.625744342803955
    8. 'else' → logprob: -6.750744342803955
    9. '):
' → logprob: -6.875744342803955
    10. ',
' → logprob: -6.875744342803955

Token 481: ' only' (ID: 1606)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2972230017185211
    2. ' return' → logprob: -2.1722230911254883
    3. 'return' → logprob: -3.0472230911254883
    4. 'print' → logprob: -3.6722230911254883
    5. '#' → logprob: -4.047223091125488
    6. ' print' → logprob: -4.297223091125488
    7. ' continue' → logprob: -4.297223091125488
    8. '           ' → logprob: -4.547223091125488
    9. 'continue' → logprob: -4.797223091125488
    10. '   ' → logprob: -6.172223091125488

Token 482: ' one' (ID: 1001)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.026120416820049286
    2. ' print' → logprob: -3.90112042427063
    3. 'one' → logprob: -6.401120185852051
    4. ' one' → logprob: -6.776120185852051
    5. 'keep' → logprob: -7.151120185852051
    6. 'consider' → logprob: -7.401120185852051
    7. 'count' → logprob: -8.40112018585205
    8. 'then' → logprob: -8.52612018585205
    9. ' keep' → logprob: -8.52612018585205
    10. ' then' → logprob: -8.90112018585205

Token 483: ' result' (ID: 1534)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5503706336021423
    2. ':' → logprob: -1.050370693206787
    3. '   ' → logprob: -3.550370693206787
    4. ' else' → logprob: -4.300370693206787
    5. 'else' → logprob: -4.300370693206787
    6. '_part' → logprob: -4.925370693206787
    7. 'continue' → logprob: -7.175370693206787
    8. 'part' → logprob: -7.175370693206787
    9. '       ' → logprob: -7.300370693206787
    10. 'print' → logprob: -7.550370693206787

Token 484: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15066587924957275
    2. ':
' → logprob: -2.275665760040283
    3. ':' → logprob: -4.150665760040283
    4. '
' → logprob: -4.650665760040283
    5. '   ' → logprob: -5.275665760040283
    6. '        
' → logprob: -6.525665760040283
    7. '           ' → logprob: -6.650665760040283
    8. 'else' → logprob: -6.900665760040283
    9. ' else' → logprob: -7.025665760040283
    10. ',' → logprob: -8.275666236877441

Token 485: ' Else' (ID: 42978)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04005603492259979
    2. '   ' → logprob: -3.790055990219116
    3. '
' → logprob: -4.540056228637695
    4. ' else' → logprob: -6.290056228637695
    5. 'else' → logprob: -6.790056228637695
    6. '        
' → logprob: -7.540056228637695
    7. ' for' → logprob: -7.665056228637695
    8. '           ' → logprob: -8.040056228637695
    9. ' if' → logprob: -8.165056228637695
    10. '```' → logprob: -8.415056228637695

Token 486: ' rejected' (ID: 36420)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4650065302848816
    2. 'print' → logprob: -1.7150065898895264
    3. ' print' → logprob: -1.8400065898895264
    4. '   ' → logprob: -4.340006351470947
    5. '
' → logprob: -4.465006351470947
    6. '           ' → logprob: -5.840006351470947
    7. ' if' → logprob: -6.715006351470947
    8. ' for' → logprob: -6.965006351470947
    9. 'if' → logprob: -7.340006351470947
    10. '        
' → logprob: -7.465006351470947

Token 487: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5202866196632385
    2. ':
' → logprob: -1.1452865600585938
    3. ':' → logprob: -2.5202865600585938
    4. '   ' → logprob: -5.395286560058594
    5. '
' → logprob: -6.770286560058594
    6. ',' → logprob: -7.895286560058594
    7. '        
' → logprob: -8.770286560058594
    8. ':

' → logprob: -8.895286560058594
    9. '```' → logprob: -8.895286560058594
    10. '           ' → logprob: -9.520286560058594

Token 488: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011334276758134365
    2. ':' → logprob: -4.636334419250488
    3. ':
' → logprob: -7.886334419250488
    4. '           ' → logprob: -8.136334419250488
    5. '   ' → logprob: -8.261334419250488
    6. '[' → logprob: -8.386334419250488
    7. '```' → logprob: -9.011334419250488
    8. '(' → logprob: -9.761334419250488
    9. ',' → logprob: -10.136334419250488
    10. ' if' → logprob: -10.261334419250488

Token 489: ' unique' (ID: 5746)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022244950756430626
    2. ' if' → logprob: -4.772244930267334
    3. ' for' → logprob: -4.897244930267334
    4. '   ' → logprob: -6.397244930267334
    5. 'for' → logprob: -6.772244930267334
    6. 'if' → logprob: -6.897244930267334
    7. '
' → logprob: -7.522244930267334
    8. ' return' → logprob: -7.772244930267334
    9. '```' → logprob: -8.147245407104492
    10. '        
' → logprob: -8.397245407104492

Token 490: ' =' (ID: 314)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.07360616326332092
    2. '_parts' → logprob: -2.698606252670288
    3. 's' → logprob: -6.698606014251709
    4. '_partition' → logprob: -6.698606014251709
    5. '_' → logprob: -7.823606014251709
    6. ' =' → logprob: -8.198606491088867
    7. '_sets' → logprob: -8.698606491088867
    8. '_set' → logprob: -9.073606491088867
    9. '=' → logprob: -9.573606491088867
    10. '_p' → logprob: -9.823606491088867

Token 491: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.22933022677898407
    2. '{' → logprob: -1.7293301820755005
    3. 'len' → logprob: -3.85433030128479
    4. ' set' → logprob: -5.104330062866211
    5. ' {' → logprob: -8.479330062866211
    6. ' len' → logprob: -9.979330062866211
    7. 'True' → logprob: -12.354330062866211
    8. '{}
' → logprob: -12.479330062866211
    9. '{
' → logprob: -13.479330062866211
    10. '(set' → logprob: -13.604330062866211

Token 492: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.13598695397377014
    2. '()' → logprob: -2.1359870433807373
    3. '()
' → logprob: -5.260986804962158
    4. '(tuple' → logprob: -5.885986804962158
    5. 'max' → logprob: -8.010987281799316
    6. '(' → logprob: -8.010987281799316
    7. '(p' → logprob: -8.635987281799316
    8. '([' → logprob: -10.260987281799316
    9. 'tuple' → logprob: -10.510987281799316
    10. '((' → logprob: -10.510987281799316

Token 493: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.37218305468559265
    2. '(max' → logprob: -1.247183084487915
    3. 'max' → logprob: -3.997183084487915
    4. '(' → logprob: -5.622182846069336
    5. '_partition' → logprob: -7.122182846069336
    6. '(_' → logprob: -8.872182846069336
    7. '_max' → logprob: -9.372182846069336
    8. '()' → logprob: -9.747182846069336
    9. '_' → logprob: -10.247182846069336
    10. '([' → logprob: -10.247182846069336

Token 494: 'itions' (ID: 5500)
  Prédit: 'ations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.23009167611598969
    2. 'art' → logprob: -1.8550916910171509
    3. 'itions' → logprob: -3.3550915718078613
    4. '_part' → logprob: -4.730091571807861
    5. 'r' → logprob: -5.980091571807861
    6. 'lations' → logprob: -7.980091571807861
    7. 't' → logprob: -7.980091571807861
    8. 'utations' → logprob: -8.10509204864502
    9. 'arts' → logprob: -8.35509204864502
    10. 'ar' → logprob: -8.35509204864502

Token 495: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02993411011993885
    2. ')
' → logprob: -4.154933929443359
    3. '())' → logprob: -4.529933929443359
    4. '(max' → logprob: -6.404933929443359
    5. '())
' → logprob: -7.279933929443359
    6. ' )' → logprob: -8.15493392944336
    7. '()' → logprob: -8.40493392944336
    8. '(unique' → logprob: -9.52993392944336
    9. '()
' → logprob: -10.15493392944336
    10. ' )
' → logprob: -11.52993392944336

Token 496: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7865312695503235
    2. ':
' → logprob: -1.2865312099456787
    3. '       ' → logprob: -2.0365312099456787
    4. '
' → logprob: -3.1615312099456787
    5. '()
' → logprob: -3.2865312099456787
    6. '()' → logprob: -3.9115312099456787
    7. '   ' → logprob: -4.286531448364258
    8. '():
' → logprob: -5.411531448364258
    9. '():' → logprob: -6.161531448364258
    10. ')' → logprob: -6.286531448364258

Token 497: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.01955327019095421
    2. ' if' → logprob: -4.019553184509277
    3. '       ' → logprob: -6.644553184509277
    4. '   ' → logprob: -9.519553184509277
    5. '           ' → logprob: -10.644553184509277
    6. '	if' → logprob: -13.394553184509277
    7. 'print' → logprob: -14.269553184509277
    8. '```' → logprob: -14.519553184509277
    9. ' ' → logprob: -14.769553184509277
    10. '               ' → logprob: -15.019553184509277

Token 498: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.014163863845169544
    2. ' len' → logprob: -4.264163970947266
    3. '(len' → logprob: -15.514163970947266
    4. '   ' → logprob: -15.889163970947266
    5. '	len' → logprob: -18.639163970947266
    6. ' ' → logprob: -20.514163970947266
    7. '
' → logprob: -20.639163970947266
    8. '=len' → logprob: -20.764163970947266
    9. '  ' → logprob: -21.139163970947266
    10. '       ' → logprob: -21.764163970947266

Token 499: '(unique' (ID: 110064)
  Prédit: '(unique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(unique' → logprob: -0.0001858982432167977
    2. 'unique' → logprob: -8.6251859664917
    3. '(' → logprob: -12.5001859664917
    4. ' (' → logprob: -13.1251859664917
    5. ' unique' → logprob: -14.7501859664917
    6. '(max' → logprob: -16.500185012817383
    7. '_unique' → logprob: -17.125185012817383
    8. '(
' → logprob: -18.500185012817383
    9. '```' → logprob: -19.500185012817383
    10. '.unique' → logprob: -19.500185012817383

Token 500: ')' (ID: 8)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6209396123886108
    2. ' >' → logprob: -1.4959396123886108
    3. ' <' → logprob: -2.3709397315979004
    4. '<' → logprob: -2.4959397315979004
    5. ')' → logprob: -3.7459397315979004
    6. '==' → logprob: -3.8709397315979004
    7. ' ==' → logprob: -4.2459397315979
    8. '()>' → logprob: -6.8709397315979
    9. '()' → logprob: -7.1209397315979
    10. ' !=' → logprob: -7.3709397315979

Token 501: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7345381379127502
    2. ' >' → logprob: -0.9845381379127502
    3. '==' → logprob: -3.2345380783081055
    4. ' <' → logprob: -3.2345380783081055
    5. ' ==' → logprob: -3.2345380783081055
    6. '<' → logprob: -3.6095380783081055
    7. ' ' → logprob: -7.8595380783081055
    8. ' !=' → logprob: -7.8595380783081055
    9. '1' → logprob: -8.359538078308105
    10. '!=' → logprob: -8.859538078308105

Token 502: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.2020991056924686e-05
    2. ' ' → logprob: -10.375032424926758
    3. '   ' → logprob: -14.750032424926758
    4. '```' → logprob: -16.437532424926758
    5. '
' → logprob: -16.750032424926758
    6. '  ' → logprob: -17.062532424926758
    7. '>' → logprob: -17.500032424926758
    8. '۱' → logprob: -17.937532424926758
    9. '2' → logprob: -18.250032424926758
    10. ' ' → logprob: -18.250032424926758

Token 503: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.500004768371582
    3. '
' → logprob: -15.125004768371582
    4. '   ' → logprob: -16.625003814697266
    5. '

' → logprob: -16.812503814697266
    6. '```' → logprob: -16.812503814697266
    7. '۱' → logprob: -18.062503814697266
    8. '2' → logprob: -18.125003814697266
    9. '  ' → logprob: -18.187503814697266
    10. '１' → logprob: -18.187503814697266

Token 504: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4767296016216278
    2. ':' → logprob: -0.9767296314239502
    3. '           ' → logprob: -6.476729393005371
    4. '       ' → logprob: -7.476729393005371
    5. '):
' → logprob: -7.726729393005371
    6. '):' → logprob: -10.351729393005371
    7. ')' → logprob: -10.976729393005371
    8. ':

' → logprob: -11.101729393005371
    9. ' and' → logprob: -11.726729393005371
    10. ':
' → logprob: -11.851729393005371

Token 505: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018695902079343796
    2. '       ' → logprob: -4.768695831298828
    3. ':
' → logprob: -5.018695831298828
    4. ':' → logprob: -6.018695831298828
    5. 'print' → logprob: -7.643695831298828
    6. '
' → logprob: -9.268695831298828
    7. '):
' → logprob: -9.518695831298828
    8. 'return' → logprob: -9.643695831298828
    9. '               ' → logprob: -9.643695831298828
    10. '```' → logprob: -9.768695831298828

Token 506: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7233971357345581
    2. '           ' → logprob: -1.348397135734558
    3. 'print' (adapté à ' print') → logprob: -1.473397135734558
    4. ' print' → logprob: -3.8483972549438477
    5. 'return' → logprob: -6.098397254943848
    6. '   ' → logprob: -6.973397254943848
    7. '               ' → logprob: -7.098397254943848
    8. ' return' → logprob: -7.348397254943848
    9. '```' → logprob: -9.598397254943848
    10. 'raise' → logprob: -11.223397254943848

Token 507: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.10122060775756836
    2. '("' → logprob: -2.3512206077575684
    3. '(' → logprob: -6.976220607757568
    4. '('"' → logprob: -10.101221084594727
    5. '(f' → logprob: -11.351221084594727
    6. '("'' → logprob: -11.726221084594727
    7. '('(' → logprob: -11.976221084594727
    8. '('?' → logprob: -13.226221084594727
    9. ' ('' → logprob: -13.476221084594727
    10. '"' → logprob: -13.726221084594727

Token 508: 're' (ID: 264)
  Prédit: 'error'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'error' → logprob: -0.16600912809371948
    2. 're' → logprob: -2.0410091876983643
    3. 'amb' → logprob: -3.9160091876983643
    4. 'reject' → logprob: -7.166008949279785
    5. 'none' → logprob: -7.416008949279785
    6. 'not' → logprob: -7.916008949279785
    7. 'Error' → logprob: -8.291008949279785
    8. 'Amb' → logprob: -8.666008949279785
    9. 'invalid' → logprob: -9.166008949279785
    10. 'fail' → logprob: -9.416008949279785

Token 509: 'jected' (ID: 49522)
  Prédit: 'jected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jected' → logprob: -0.23100557923316956
    2. 'ject' → logprob: -1.6060055494308472
    3. 'jection' → logprob: -6.231005668640137
    4. 'f' → logprob: -6.856005668640137
    5. 'peated' → logprob: -6.856005668640137
    6. 'j' → logprob: -7.856005668640137
    7. 'stricted' → logprob: -8.606005668640137
    8. 'jec' → logprob: -8.731005668640137
    9. 'JECT' → logprob: -8.731005668640137
    10. 'je' → logprob: -8.856005668640137

Token 510: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.039100054651498795
    2. ')' → logprob: -3.789100170135498
    3. '')
' → logprob: -4.164100170135498
    4. ')')
' → logprob: -9.16409969329834
    5. ')
' → logprob: -10.16409969329834
    6. '")' → logprob: -10.78909969329834
    7. '')
' → logprob: -11.41409969329834
    8. '}')' → logprob: -12.41409969329834
    9. '()' → logprob: -13.66409969329834
    10. '')")
' → logprob: -13.78909969329834

Token 511: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023636873811483383
    2. '       ' → logprob: -3.773636817932129
    3. '
' → logprob: -9.023636817932129
    4. '               ' → logprob: -9.523636817932129
    5. 'return' → logprob: -9.773636817932129
    6. '   ' → logprob: -10.023636817932129
    7. 'else' → logprob: -10.273636817932129
    8. '		' → logprob: -11.023636817932129
    9. '                   ' → logprob: -12.148636817932129
    10. '<|end|>' → logprob: -12.273636817932129

Token 512: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011960066854953766
    2. 'return' (adapté à ' return') → logprob: -4.886960029602051
    3. '       ' → logprob: -5.636960029602051
    4. '
' → logprob: -7.511960029602051
    5. ' return' → logprob: -8.88696002960205
    6. '               ' → logprob: -10.01196002960205
    7. '   ' → logprob: -10.51196002960205
    8. '<|end|>' → logprob: -12.38696002960205
    9. ')' → logprob: -12.76196002960205
    10. ')
' → logprob: -12.76196002960205

Token 513: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6002746224403381
    2. '   ' → logprob: -0.9752746224403381
    3. '    
' → logprob: -3.3502745628356934
    4. '\n' → logprob: -3.7252745628356934
    5. 'else' → logprob: -5.100274562835693
    6. '<|end|>' → logprob: -5.975274562835693
    7. 'newline' → logprob: -6.600274562835693
    8. '  
' → logprob: -6.725274562835693
    9. ' else' → logprob: -7.600274562835693
    10. ')' → logprob: -7.725274562835693

Token 514: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00532957399263978
    2. '    
' → logprob: -6.005329608917236
    3. '
' → logprob: -6.130329608917236
    4. '       ' → logprob: -8.255329132080078
    5. 'else' → logprob: -8.755329132080078
    6. 'print' → logprob: -8.880329132080078
    7. '```' → logprob: -10.005329132080078
    8. '        
' → logprob: -10.255329132080078
    9. '  
' → logprob: -11.505329132080078
    10. 'return' → logprob: -11.755329132080078

Token 515: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08004190772771835
    2. 'for' → logprob: -3.0800418853759766
    3. '   ' → logprob: -4.205041885375977
    4. 'return' → logprob: -4.580041885375977
    5. 'result' → logprob: -5.580041885375977
    6. ' print' → logprob: -7.205041885375977
    7. ' for' → logprob: -7.205041885375977
    8. 'partition' → logprob: -8.830041885375977
    9. 'part' → logprob: -9.330041885375977
    10. '       ' → logprob: -9.455041885375977

Token 516: ' else' (ID: 1203)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6116182804107666
    2. 'print' → logprob: -1.1116182804107666
    3. 'best' → logprob: -2.6116182804107666
    4. '#' → logprob: -3.7366182804107666
    5. 'for' → logprob: -4.1116180419921875
    6. '   ' → logprob: -5.2366180419921875
    7. 'partition' → logprob: -5.3616180419921875
    8. 'res' → logprob: -6.9866180419921875
    9. 'output' → logprob: -7.2366180419921875
    10. 'parts' → logprob: -7.6116180419921875

Token 517: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060857828706502914
    2. '
' → logprob: -3.3108577728271484
    3. 'print' → logprob: -3.9358577728271484
    4. ' print' → logprob: -6.435857772827148
    5. '       ' → logprob: -7.435857772827148
    6. '    
' → logprob: -7.435857772827148
    7. ':' → logprob: -9.685857772827148
    8. ' for' → logprob: -10.560857772827148
    9. '```' → logprob: -10.560857772827148
    10. ':
' → logprob: -10.685857772827148

Token 518: ' the' (ID: 290)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -1.1948124170303345
    2. '(' → logprob: -1.3198124170303345
    3. '("' → logprob: -1.4448124170303345
    4. '('' → logprob: -2.194812297821045
    5. '   ' → logprob: -3.194812297821045
    6. 'f' → logprob: -4.194812297821045
    7. '       ' → logprob: -4.569812297821045
    8. 'for' → logprob: -5.569812297821045
    9. 'print' → logprob: -5.694812297821045
    10. '(*' → logprob: -5.944812297821045

Token 519: ' unique' (ID: 5746)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.8867704272270203
    2. 'max' → logprob: -0.8867704272270203
    3. ''' → logprob: -3.011770486831665
    4. '"' → logprob: -3.011770486831665
    5. ' f' → logprob: -3.886770486831665
    6. 'best' → logprob: -3.886770486831665
    7. 'print' → logprob: -4.636770248413086
    8. ' max' → logprob: -4.761770248413086
    9. 'result' → logprob: -4.886770248413086
    10. 'final' → logprob: -6.136770248413086

Token 520: ' one' (ID: 1001)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -1.5871998071670532
    2. '(max' → logprob: -1.7121998071670532
    3. '(' → logprob: -2.0871996879577637
    4. 'max' → logprob: -2.0871996879577637
    5. 'partition' → logprob: -2.3371996879577637
    6. '("' → logprob: -3.3371996879577637
    7. 'result' → logprob: -3.5871996879577637
    8. '   ' → logprob: -3.7121996879577637
    9. 'print' → logprob: -3.7121996879577637
    10. ' max' → logprob: -3.7121996879577637

Token 521: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030563151463866234
    2. 'print' → logprob: -3.5305631160736084
    3. ' print' → logprob: -7.5305633544921875
    4. 'for' → logprob: -9.030563354492188
    5. '```' → logprob: -9.405563354492188
    6. ' for' → logprob: -9.905563354492188
    7. '    
' → logprob: -11.655563354492188
    8. '       ' → logprob: -12.155563354492188
    9. '
' → logprob: -12.405563354492188
    10. '`' → logprob: -13.780563354492188

Token 522: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04398256167769432
    2. 'print' → logprob: -3.16898250579834
    3. ' print' → logprob: -7.79398250579834
    4. 'for' → logprob: -8.29398250579834
    5. '```' → logprob: -8.54398250579834
    6. ' for' → logprob: -10.16898250579834
    7. '(' → logprob: -10.66898250579834
    8. '    
' → logprob: -11.41898250579834
    9. '('' → logprob: -11.54398250579834
    10. '("' → logprob: -11.54398250579834

Token 523: ' parts' (ID: 7881)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04043206945061684
    2. '   ' → logprob: -4.040431976318359
    3. ' print' → logprob: -4.415431976318359
    4. 'for' → logprob: -4.790431976318359
    5. ' for' → logprob: -7.040431976318359
    6. 'result' → logprob: -7.790431976318359
    7. 'partition' → logprob: -8.66543197631836
    8. 'part' → logprob: -9.29043197631836
    9. '```' → logprob: -10.04043197631836
    10. ' result' → logprob: -11.79043197631836

Token 524: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5232774615287781
    2. '=' → logprob: -0.8982774615287781
    3. ')' → logprob: -10.023277282714844
    4. '_' → logprob: -10.398277282714844
    5. '   ' → logprob: -10.523277282714844
    6. '_str' → logprob: -11.023277282714844
    7. ',' → logprob: -11.648277282714844
    8. ' ' → logprob: -12.773277282714844
    9. '_tokens' → logprob: -12.898277282714844
    10. '=[]' → logprob: -13.023277282714844

Token 525: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0017205192707479
    2. ' max' → logprob: -6.376720428466797
    3. 'list' → logprob: -11.126720428466797
    4. '[max' → logprob: -12.751720428466797
    5. ' list' → logprob: -15.501720428466797
    6. '(max' → logprob: -16.251720428466797
    7. 'best' → logprob: -16.376720428466797
    8. ' ' → logprob: -16.376720428466797
    9. 'next' → logprob: -17.001720428466797
    10. '[' → logprob: -17.001720428466797

Token 526: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -4.127333340875339e-06
    2. '_parts' → logprob: -12.750003814697266
    3. 'part' → logprob: -14.375003814697266
    4. '_partition' → logprob: -14.750003814697266
    5. '(part' → logprob: -17.375003814697266
    6. ''_' → logprob: -18.375003814697266
    7. '_PART' → logprob: -18.500003814697266
    8. '(_' → logprob: -18.625003814697266
    9. '\' → logprob: -18.625003814697266
    10. '(' → logprob: -18.625003814697266

Token 527: 'itions' (ID: 5500)
  Prédit: 'ations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.017206314951181412
    2. 'itions' → logprob: -4.392206192016602
    3. 'ions' → logprob: -5.892206192016602
    4. 't' → logprob: -6.392206192016602
    5. 'art' → logprob: -9.017206192016602
    6. 'arts' → logprob: -9.767206192016602
    7. 's' → logprob: -10.392206192016602
    8. 'a' → logprob: -12.017206192016602
    9. 'ons' → logprob: -12.142206192016602
    10. '_' → logprob: -12.142206192016602

Token 528: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.015305552864447e-05
    2. '0' → logprob: -9.750060081481934
    3. '   ' → logprob: -13.875060081481934
    4. ' [' → logprob: -15.375060081481934
    5. '```' → logprob: -15.375060081481934
    6. '
' → logprob: -16.25006103515625
    7. 's' → logprob: -16.37506103515625
    8. ' ' → logprob: -16.75006103515625
    9. '=' → logprob: -17.37506103515625
    10. ')[' → logprob: -17.87506103515625

Token 529: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.250000953674316
    3. '[' → logprob: -14.750000953674316
    4. '```' → logprob: -16.250001907348633
    5. '-' → logprob: -16.500001907348633
    6. '   ' → logprob: -17.250001907348633
    7. '
' → logprob: -17.500001907348633
    8. '۰' → logprob: -17.687501907348633
    9. '#' → logprob: -17.937501907348633
    10. '000' → logprob: -18.125001907348633

Token 530: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5081586241722107
    2. ')' → logprob: -1.5081586837768555
    3. ']' → logprob: -2.3831586837768555
    4. ']
' → logprob: -3.0081586837768555
    5. '
' → logprob: -3.5081586837768555
    6. 'print' → logprob: -6.1331586837768555
    7. '   ' → logprob: -6.5081586837768555
    8. ' )
' → logprob: -7.6331586837768555
    9. ' )' → logprob: -8.008158683776855
    10. 'def' → logprob: -9.258158683776855

Token 531: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013290932402014732
    2. 'print' → logprob: -4.513290882110596
    3. ' for' → logprob: -7.138290882110596
    4. ' print' → logprob: -7.388290882110596
    5. 'for' → logprob: -7.888290882110596
    6. '
' → logprob: -8.888291358947754
    7. '    
' → logprob: -9.013291358947754
    8. '       ' → logprob: -9.263291358947754
    9. '<|end|>' → logprob: -10.013291358947754
    10. '	print' → logprob: -11.388291358947754

Token 532: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12754982709884644
    2. '   ' → logprob: -2.127549886703491
    3. ' print' → logprob: -7.752549648284912
    4. 'for' → logprob: -8.62755012512207
    5. '       ' → logprob: -12.50255012512207
    6. ' for' → logprob: -13.12755012512207
    7. '```' → logprob: -13.25255012512207
    8. '    
' → logprob: -13.37755012512207
    9. 'result' → logprob: -13.87755012512207
    10. '
' → logprob: -14.37755012512207

Token 533: ' compute' (ID: 23864)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0014207109343260527
    2. ' print' → logprob: -6.626420497894287
    3. 'for' → logprob: -10.626420974731445
    4. 'result' → logprob: -10.626420974731445
    5. '   ' → logprob: -10.751420974731445
    6. 'if' → logprob: -11.001420974731445
    7. 'cut' → logprob: -12.376420974731445
    8. 'output' → logprob: -13.626420974731445
    9. 'parts' → logprob: -14.126420974731445
    10. ' for' → logprob: -14.376420974731445

Token 534: ' the' (ID: 290)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.7754239439964294
    2. 'result' → logprob: -1.4004240036010742
    3. ' total' → logprob: -1.7754240036010742
    4. ' result' → logprob: -3.525424003601074
    5. 'sum' → logprob: -3.525424003601074
    6. 'cut' → logprob: -4.150424003601074
    7. 'parts' → logprob: -4.650424003601074
    8. ' cuts' → logprob: -5.025424003601074
    9. ' cut' → logprob: -5.400424003601074
    10. ' sum' → logprob: -5.525424003601074

Token 535: ' sum' (ID: 4215)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.77657151222229
    2. ' total' → logprob: -1.90157151222229
    3. 'sum' → logprob: -2.27657151222229
    4. 'result' → logprob: -2.65157151222229
    5. 'parts' → logprob: -2.90157151222229
    6. 'print' → logprob: -3.52657151222229
    7. ' sum' → logprob: -3.65157151222229
    8. 'cut' → logprob: -3.90157151222229
    9. 'remaining' → logprob: -3.90157151222229
    10. ' cuts' → logprob: -4.651571273803711

Token 536: '
' (ID: 198)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5932724475860596
    2. ' =' → logprob: -1.7182724475860596
    3. '   ' → logprob: -2.4682724475860596
    4. '=' → logprob: -2.8432724475860596
    5. ' total' → logprob: -3.0932724475860596
    6. 'sum' → logprob: -3.5932724475860596
    7. '_' → logprob: -4.2182722091674805
    8. 'result' → logprob: -4.3432722091674805
    9. '_total' → logprob: -5.3432722091674805
    10. '_sum' → logprob: -5.5932722091674805

Token 537: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5938084721565247
    2. 'total' → logprob: -1.5938084125518799
    3. '=' → logprob: -2.09380841255188
    4. '   ' → logprob: -2.59380841255188
    5. 'result' → logprob: -4.343808650970459
    6. ' total' → logprob: -4.593808650970459
    7. 'sum' → logprob: -5.218808650970459
    8. 'parts' → logprob: -5.343808650970459
    9. '_' → logprob: -5.468808650970459
    10. '_parts' → logprob: -6.093808650970459

Token 538: ' sum' (ID: 4215)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.021972686052322388
    2. ' total' → logprob: -4.52197265625
    3. 'sum' (adapté à ' sum') → logprob: -5.14697265625
    4. 'result' → logprob: -6.02197265625
    5. 'part' → logprob: -7.14697265625
    6. 'parts' → logprob: -7.39697265625
    7. 's' → logprob: -7.64697265625
    8. 'print' → logprob: -7.64697265625
    9. '   ' → logprob: -9.39697265625
    10. 'res' → logprob: -10.27197265625

Token 539: '_parts' (ID: 81867)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.9642245173454285
    2. '_' → logprob: -1.2142245769500732
    3. '_parts' → logprob: -1.4642245769500732
    4. '_value' → logprob: -2.8392245769500732
    5. '_=' → logprob: -4.339224338531494
    6. '_of' → logprob: -5.089224338531494
    7. '=' → logprob: -5.214224338531494
    8. ' =' → logprob: -5.714224338531494
    9. 's' → logprob: -6.839224338531494
    10. '(parts' → logprob: -6.839224338531494

Token 540: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1526808738708496
    2. ' =' → logprob: -2.0276808738708496
    3. '_' → logprob: -4.77768087387085
    4. '_parts' → logprob: -7.02768087387085
    5. '_=' → logprob: -7.90268087387085
    6. '_val' → logprob: -9.027681350708008
    7. 's' → logprob: -10.277681350708008
    8. '_value' → logprob: -10.277681350708008
    9. '(parts' → logprob: -10.402681350708008
    10. '   ' → logprob: -10.777681350708008

Token 541: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.041408274322748184
    2. ' sum' → logprob: -3.4164083003997803
    3. '0' → logprob: -5.166408061981201
    4. 'str' → logprob: -6.416408061981201
    5. 'int' → logprob: -8.16640853881836
    6. 'target' → logprob: -9.79140853881836
    7. ' str' → logprob: -10.79140853881836
    8. ' ' → logprob: -11.54140853881836
    9. ' int' → logprob: -11.91640853881836
    10. '(sum' → logprob: -12.04140853881836

Token 542: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004269646480679512
    2. '(map' → logprob: -5.754269599914551
    3. 'int' → logprob: -7.504269599914551
    4. '([' → logprob: -7.754269599914551
    5. '[int' → logprob: -9.87926959991455
    6. '(' → logprob: -10.25426959991455
    7. 'map' → logprob: -10.62926959991455
    8. '(part' → logprob: -14.37926959991455
    9. ' int' → logprob: -16.004270553588867
    10. ' (' → logprob: -16.504270553588867

Token 543: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.19875465333461761
    2. '(part' → logprob: -2.1987545490264893
    3. 'part' → logprob: -3.4487545490264893
    4. 'p' → logprob: -3.4487545490264893
    5. '(x' → logprob: -5.198754787445068
    6. 'x' → logprob: -8.57375431060791
    7. '(' → logprob: -11.44875431060791
    8. '(token' → logprob: -12.57375431060791
    9. '(s' → logprob: -12.82375431060791
    10. ' part' → logprob: -13.19875431060791

Token 544: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4440249800682068
    2. 'p' → logprob: -1.4440250396728516
    3. 'for' → logprob: -2.6940250396728516
    4. 'part' → logprob: -3.4440250396728516
    5. '(p' → logprob: -3.8190250396728516
    6. '(part' → logprob: -7.569025039672852
    7. ' for' → logprob: -8.694025039672852
    8. ')p' → logprob: -9.069025039672852
    9. 'x' → logprob: -9.569025039672852
    10. 's' → logprob: -10.069025039672852

Token 545: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.061652567237615585
    2. '(p' → logprob: -3.311652660369873
    3. ')' → logprob: -4.561652660369873
    4. ' for' → logprob: -4.561652660369873
    5. '(part' → logprob: -6.186652660369873
    6. '(' → logprob: -8.561652183532715
    7. 'part' → logprob: -9.061652183532715
    8. 'p' → logprob: -9.936652183532715
    9. '   ' → logprob: -11.436652183532715
    10. ' ' → logprob: -11.811652183532715

Token 546: ' p' (ID: 275)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.005234952084720135
    2. ' parts' → logprob: -5.255234718322754
    3. 'p' → logprob: -14.380234718322754
    4. '(parts' → logprob: -14.630234718322754
    5. 'part' → logprob: -16.50523567199707
    6. 'points' → logprob: -17.63023567199707
    7. 'pieces' → logprob: -18.25523567199707
    8. ' ' → logprob: -18.38023567199707
    9. '.parts' → logprob: -18.75523567199707
    10. '_parts' → logprob: -18.75523567199707

Token 547: ' in' (ID: 306)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.16026678681373596
    2. ' parts' → logprob: -1.9102667570114136
    3. 'p' → logprob: -10.410266876220703
    4. '(parts' → logprob: -11.785266876220703
    5. ' p' → logprob: -12.535266876220703
    6. '.parts' → logprob: -15.160266876220703
    7. ' in' → logprob: -15.285266876220703
    8. '_parts' → logprob: -15.535266876220703
    9. ' ' → logprob: -15.660266876220703
    10. 'pieces' → logprob: -16.035266876220703

Token 548: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.0002614550176076591
    2. ' parts' → logprob: -8.250261306762695
    3. '(parts' → logprob: -16.000261306762695
    4. 'pieces' → logprob: -17.750261306762695
    5. '   ' → logprob: -18.375261306762695
    6. 'points' → logprob: -18.625261306762695
    7. '.parts' → logprob: -19.250261306762695
    8. ' ' → logprob: -19.250261306762695
    9. 'part' → logprob: -19.625261306762695
    10. '```' → logprob: -20.375261306762695

Token 549: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3696741461753845
    2. '   ' → logprob: -1.4946742057800293
    3. ')' → logprob: -2.4946742057800293
    4. '
' → logprob: -6.244674205780029
    5. 'print' → logprob: -9.369673728942871
    6. ')

' → logprob: -9.994673728942871
    7. '    
' → logprob: -10.244673728942871
    8. ')
' → logprob: -10.244673728942871
    9. ' )
' → logprob: -10.994673728942871
    10. '```' → logprob: -12.119673728942871

Token 550: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009748060256242752
    2. 'print' → logprob: -4.7597479820251465
    3. '
' → logprob: -7.8847479820251465
    4. '    
' → logprob: -8.509748458862305
    5. 'if' → logprob: -9.134748458862305
    6. ' print' → logprob: -9.134748458862305
    7. 'for' → logprob: -9.259748458862305
    8. ' if' → logprob: -9.509748458862305
    9. '<|end|>' → logprob: -9.759748458862305
    10. ')' → logprob: -10.134748458862305

Token 551: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28486594557762146
    2. 'print' (adapté à ' print') → logprob: -1.4098659753799438
    3. 'for' → logprob: -6.284865856170654
    4. 'if' → logprob: -7.034865856170654
    5. ' print' → logprob: -7.534865856170654
    6. '
' → logprob: -8.909866333007812
    7. ' if' → logprob: -9.284866333007812
    8. ' for' → logprob: -9.534866333007812
    9. '	print' → logprob: -9.784866333007812
    10. '    
' → logprob: -10.534866333007812

Token 552: '(str' (ID: 7946)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0017213537357747555
    2. '(sum' → logprob: -6.376721382141113
    3. '(' → logprob: -11.751721382141113
    4. '(parts' → logprob: -12.501721382141113
    5. '(target' → logprob: -12.876721382141113
    6. 'f' → logprob: -13.001721382141113
    7. 'sum' → logprob: -13.626721382141113
    8. '('' → logprob: -14.626721382141113
    9. '("' → logprob: -15.501721382141113
    10. '((' → logprob: -15.626721382141113

Token 553: '(sum' (ID: 45528)
  Prédit: '(sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.45620644092559814
    2. '(target' → logprob: -1.2062064409255981
    3. 'sum' → logprob: -2.9562063217163086
    4. 'target' → logprob: -4.206206321716309
    5. '(parts' → logprob: -10.706206321716309
    6. 'parts' → logprob: -11.206206321716309
    7. '(' → logprob: -11.331206321716309
    8. ' sum' → logprob: -12.956206321716309
    9. '=sum' → logprob: -13.706206321716309
    10. '(s' → logprob: -13.831206321716309

Token 554: '_parts' (ID: 81867)
  Prédit: '_parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parts' → logprob: -0.0008589350618422031
    2. '(parts' → logprob: -7.750858783721924
    3. 'parts' → logprob: -8.250859260559082
    4. '(target' → logprob: -9.750859260559082
    5. '_' → logprob: -9.875859260559082
    6. 'sum' → logprob: -11.250859260559082
    7. 'target' → logprob: -11.625859260559082
    8. '_)' → logprob: -11.750859260559082
    9. '(sum' → logprob: -12.000859260559082
    10. '_(' → logprob: -12.375859260559082

Token 555: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08248402178287506
    2. ',' → logprob: -2.582484006881714
    3. ')+' → logprob: -6.457484245300293
    4. '+' → logprob: -6.832484245300293
    5. '   ' → logprob: -8.457484245300293
    6. ')+"' → logprob: -8.582484245300293
    7. ')+'' → logprob: -8.707484245300293
    8. ' ,' → logprob: -8.832484245300293
    9. ' +' → logprob: -9.707484245300293
    10. '),' → logprob: -10.082484245300293

Token 556: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11941676586866379
    2. '+' → logprob: -2.3694167137145996
    3. ' +' → logprob: -4.4944167137146
    4. ')' → logprob: -5.2444167137146
    5. ' ,' → logprob: -6.9944167137146
    6. ',end' → logprob: -7.7444167137146
    7. '+'' → logprob: -7.7444167137146
    8. '+"' → logprob: -8.369417190551758
    9. ''' → logprob: -8.619417190551758
    10. '"' → logprob: -8.869417190551758

Token 557: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.35140833258628845
    2. '"' → logprob: -1.2264083623886108
    3. ' '' → logprob: -6.9764084815979
    4. ''\' → logprob: -7.3514084815979
    5. '''' → logprob: -7.3514084815979
    6. ' "' → logprob: -8.226408004760742
    7. '""' → logprob: -9.101408004760742
    8. '"\' → logprob: -9.226408004760742
    9. '('' → logprob: -10.351408004760742
    10. ')' → logprob: -10.476408004760742

Token 558: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02914384938776493
    2. ' '' → logprob: -4.029143810272217
    3. '"' → logprob: -5.154143810272217
    4. ')' → logprob: -5.779143810272217
    5. ',' → logprob: -7.154143810272217
    6. ' +' → logprob: -7.404143810272217
    7. ' ' → logprob: -8.279144287109375
    8. '+' → logprob: -8.779144287109375
    9. ' "' → logprob: -9.404144287109375
    10. ' )' → logprob: -9.904144287109375

Token 559: ' +' (ID: 659)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.010982506908476353
    2. '"' → logprob: -5.260982513427734
    3. '''.' → logprob: -5.385982513427734
    4. ''+' → logprob: -7.510982513427734
    5. ' '' → logprob: -8.885982513427734
    6. 'number' → logprob: -9.135982513427734
    7. ''-' → logprob: -9.260982513427734
    8. '','.' → logprob: -9.885982513427734
    9. ''.' → logprob: -10.510982513427734
    10. '('' → logprob: -10.885982513427734

Token 560: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09107021242380142
    2. ''+' → logprob: -2.9660701751708984
    3. '''.' → logprob: -3.8410701751708984
    4. ''-' → logprob: -4.716070175170898
    5. '','.' → logprob: -6.216070175170898
    6. '"' → logprob: -6.591070175170898
    7. ''_' → logprob: -7.841070175170898
    8. ''.' → logprob: -8.216070175170898
    9. 'number' → logprob: -8.466070175170898
    10. ''/' → logprob: -8.716070175170898

Token 561: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.005705281160771847
    2. '''.' → logprob: -6.0057053565979
    3. ''+' → logprob: -6.5057053565979
    4. ''-' → logprob: -6.8807053565979
    5. '','.' → logprob: -8.130704879760742
    6. '"' → logprob: -9.005704879760742
    7. ''.' → logprob: -9.005704879760742
    8. ''_' → logprob: -10.005704879760742
    9. 'number' → logprob: -11.005704879760742
    10. ''#' → logprob: -11.255704879760742

Token 562: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.08716379106044769
    2. ''' → logprob: -2.5871636867523193
    3. '.join' → logprob: -5.462163925170898
    4. ''.' → logprob: -5.962163925170898
    5. 'print' → logprob: -7.337163925170898
    6. '.' → logprob: -7.462163925170898
    7. ' join' → logprob: -8.962163925170898
    8. '''.' → logprob: -10.587163925170898
    9. '```' → logprob: -10.962163925170898
    10. ').' → logprob: -11.712163925170898

Token 563: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.02359180897474289
    2. 'parts' → logprob: -3.7735917568206787
    3. '(str' → logprob: -8.023591995239258
    4. '(map' → logprob: -11.523591995239258
    5. '(p' → logprob: -12.523591995239258
    6. 'str' → logprob: -13.023591995239258
    7. 'map' → logprob: -13.523591995239258
    8. '(part' → logprob: -14.398591995239258
    9. ' parts' → logprob: -14.773591995239258
    10. '([' → logprob: -15.273591995239258

Token 564: '))


' (ID: 49252)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000719818810466677
    2. '))' → logprob: -7.250720024108887
    3. ')")' → logprob: -11.875720024108887
    4. ')
' → logprob: -14.000720024108887
    5. '")' → logprob: -14.625720024108887
    6. ' )' → logprob: -15.000720024108887
    7. '())' → logprob: -15.250720024108887
    8. '   ' → logprob: -15.375720024108887
    9. ')))' → logprob: -15.500720024108887
    10. ')}' → logprob: -15.625720024108887

Token 565: 'while' (ID: 7032)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 566: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.1270279586315155
    2. 'True' → logprob: -2.127027988433838
    3. '(True' → logprob: -9.37702751159668
    4. ' target' → logprob: -12.37702751159668
    5. 'target' → logprob: -12.62702751159668
    6. '1' → logprob: -12.87702751159668
    7. ' not' → logprob: -13.37702751159668
    8. '=True' → logprob: -13.87702751159668
    9. '(' → logprob: -14.00202751159668
    10. ' ' → logprob: -14.25202751159668

Token 567: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2245551496744156
    2. ':' → logprob: -1.8495551347732544
    3. '():
' → logprob: -3.599555253982544
    4. '(' → logprob: -5.349555015563965
    5. '   ' → logprob: -5.349555015563965
    6. ':
' → logprob: -6.349555015563965
    7. ' :' → logprob: -6.724555015563965
    8. '(":' → logprob: -7.349555015563965
    9. 'input' → logprob: -7.599555015563965
    10. '(True' → logprob: -7.724555015563965

Token 568: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029200470075011253
    2. 'try' → logprob: -3.904200553894043
    3. ' try' → logprob: -5.529200553894043
    4. ' line' → logprob: -5.529200553894043
    5. 'line' → logprob: -7.654200553894043
    6. 'inp' → logprob: -9.904200553894043
    7. ' inp' → logprob: -10.154200553894043
    8. ' s' → logprob: -10.654200553894043
    9. 's' → logprob: -11.029200553894043
    10. 'user' → logprob: -11.154200553894043

Token 569: ' line' (ID: 2543)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.20813359320163727
    2. 'line' (adapté à ' line') → logprob: -1.708133578300476
    3. ' try' → logprob: -5.708133697509766
    4. ' line' → logprob: -5.833133697509766
    5. 's' → logprob: -8.333133697509766
    6. '   ' → logprob: -8.958133697509766
    7. 'inp' → logprob: -9.833133697509766
    8. 'input' → logprob: -11.583133697509766
    9. ' inp' → logprob: -12.208133697509766
    10. 'l' → logprob: -13.083133697509766

Token 570: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02324652671813965
    2. '=' → logprob: -3.7732465267181396
    3. 's' → logprob: -15.148246765136719
    4. '=input' → logprob: -15.273246765136719
    5. '_' → logprob: -15.523246765136719
    6. '   ' → logprob: -16.02324676513672
    7. '=line' → logprob: -16.02324676513672
    8. ' ' → logprob: -16.89824676513672
    9. '  ' → logprob: -17.89824676513672
    10. 'input' → logprob: -18.02324676513672

Token 571: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011047814972698689
    2. ' input' → logprob: -4.511047840118408
    3. '(input' → logprob: -18.51104736328125
    4. '=input' → logprob: -20.38604736328125
    5. '	input' → logprob: -21.13604736328125
    6. '<input' → logprob: -21.26104736328125
    7. '_input' → logprob: -21.63604736328125
    8. '   ' → logprob: -22.01104736328125
    9. 'sys' → logprob: -22.51104736328125
    10. '```' → logprob: -22.76104736328125

Token 572: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0014032063772901893
    2. '().' → logprob: -6.626403331756592
    3. '()
' → logprob: -9.626402854919434
    4. '()>' → logprob: -12.501402854919434
    5. '(' → logprob: -12.626402854919434
    6. '("")' → logprob: -14.251402854919434
    7. '()

' → logprob: -14.251402854919434
    8. '())' → logprob: -14.501402854919434
    9. '();' → logprob: -15.001402854919434
    10. '()">' → logprob: -15.126402854919434

Token 573: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.5928495486150496e-05
    2. 'rstrip' → logprob: -11.250016212463379
    3. 'split' → logprob: -12.750016212463379
    4. ' strip' → logprob: -16.875015258789062
    5. '.strip' → logprob: -21.875015258789062
    6. 'replace' → logprob: -22.000015258789062
    7. '_strip' → logprob: -22.125015258789062
    8. '(strip' → logprob: -22.625015258789062
    9. 'decode' → logprob: -23.375015258789062
    10. '
' → logprob: -24.000015258789062

Token 574: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12706732749938965
    2. '()
' → logprob: -2.1270673274993896
    3. '<|end|>' → logprob: -9.877067565917969
    4. 'if' → logprob: -10.877067565917969
    5. 'def' → logprob: -11.502067565917969
    6. '()

' → logprob: -11.627067565917969
    7. '();' → logprob: -11.877067565917969
    8. '<|end|>' → logprob: -12.127067565917969
    9. 'try' → logprob: -12.627067565917969
    10. '()\' → logprob: -12.752067565917969

Token 575: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4707455337047577
    2. ' if' → logprob: -1.09574556350708
    3. 'if' → logprob: -3.47074556350708
    4. '<|end|>' → logprob: -4.72074556350708
    5. '<|end|>' → logprob: -7.97074556350708
    6. '	if' → logprob: -8.845745086669922
    7. '    
' → logprob: -8.845745086669922
    8. '
' → logprob: -8.845745086669922
    9. ',' → logprob: -9.720745086669922
    10. 'tokens' → logprob: -9.720745086669922

Token 576: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -4.008129963040119e-06
    2. ' if' → logprob: -12.500003814697266
    3. '   ' → logprob: -15.500003814697266
    4. '	if' → logprob: -19.500003814697266
    5. 'If' → logprob: -21.375003814697266
    6. '
' → logprob: -22.375003814697266
    7. '```' → logprob: -22.750003814697266
    8. ';if' → logprob: -23.125003814697266
    9. '    
' → logprob: -23.375003814697266
    10. 'import' → logprob: -23.625003814697266

Token 577: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.33853673934936523
    2. ' not' → logprob: -1.5885367393493652
    3. 'not' → logprob: -2.9635367393493652
    4. ' line' → logprob: -3.4635367393493652
    5. ' ' → logprob: -12.588537216186523
    6. '	line' → logprob: -13.338537216186523
    7. '#line' → logprob: -13.463537216186523
    8. '(line' → logprob: -14.088537216186523
    9. '   ' → logprob: -15.463537216186523
    10. '[line' → logprob: -15.713537216186523

Token 578: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.38688167929649353
    2. '==' → logprob: -1.136881709098816
    3. '()==' → logprob: -12.011881828308105
    4. '=='' → logprob: -13.136881828308105
    5. '=="' → logprob: -13.761881828308105
    6. '==
' → logprob: -14.761881828308105
    7. '===' → logprob: -15.011881828308105
    8. '.startswith' → logprob: -15.136881828308105
    9. '=' → logprob: -15.761881828308105
    10. '()' → logprob: -16.63688087463379

Token 579: ' '' (ID: 461)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.18657417595386505
    2. '"' → logprob: -2.6865742206573486
    3. '""' → logprob: -2.6865742206573486
    4. ''' → logprob: -3.8115742206573486
    5. '"":' → logprob: -4.8115739822387695
    6. ''ex' → logprob: -5.6865739822387695
    7. ''end' → logprob: -8.18657398223877
    8. '''
' → logprob: -11.31157398223877
    9. ''q' → logprob: -11.56157398223877
    10. ''e' → logprob: -11.68657398223877

Token 580: '0' (ID: 15)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '':' → logprob: -0.31865331530570984
    2. ''' → logprob: -2.1936533451080322
    3. '''' → logprob: -2.4436533451080322
    4. 'END' → logprob: -4.443653106689453
    5. '""' → logprob: -4.693653106689453
    6. '"":' → logprob: -4.818653106689453
    7. '":' → logprob: -4.818653106689453
    8. 'end' → logprob: -4.943653106689453
    9. 'exit' → logprob: -4.943653106689453
    10. '':
' → logprob: -4.943653106689453

Token 581: ' ' (ID: 220)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8142606019973755
    2. ':' → logprob: -1.0642606019973755
    3. '':' → logprob: -2.564260482788086
    4. '0' → logprob: -2.689260482788086
    5. '':
' → logprob: -3.689260482788086
    6. ''' → logprob: -4.564260482788086
    7. '   ' → logprob: -4.814260482788086
    8. ' or' → logprob: -5.189260482788086
    9. '<|end|>' → logprob: -5.564260482788086
    10. ':return' → logprob: -5.939260482788086

Token 582: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011105302110081539
    2. ' ' → logprob: -9.125110626220703
    3. '':' → logprob: -14.375110626220703
    4. ''' → logprob: -14.500110626220703
    5. '00' → logprob: -15.125110626220703
    6. '':
' → logprob: -15.750110626220703
    7. '
' → logprob: -16.000110626220703
    8. ''):
' → logprob: -16.000110626220703
    9. 'end' → logprob: -16.750110626220703
    10. '000' → logprob: -17.375110626220703

Token 583: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.14359110593795776
    2. '':' → logprob: -2.0185911655426025
    3. ''' → logprob: -7.393590927124023
    4. '':
' → logprob: -9.268590927124023
    5. ':' → logprob: -9.643590927124023
    6. ':
' → logprob: -9.768590927124023
    7. '":
' → logprob: -10.268590927124023
    8. ''):
' → logprob: -11.393590927124023
    9. '   ' → logprob: -11.518590927124023
    10. '":' → logprob: -12.268590927124023

Token 584: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05132294446229935
    2. ':' → logprob: -3.5513229370117188
    3. '   ' → logprob: -4.051322937011719
    4. ':
' → logprob: -5.551322937011719
    5. '<|end|>' → logprob: -11.301322937011719
    6. '      ' → logprob: -11.676322937011719
    7. '	' → logprob: -11.926322937011719
    8. '	break' → logprob: -12.051322937011719
    9. '     ' → logprob: -12.176322937011719
    10. ',' → logprob: -12.426322937011719

Token 585: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7004537582397461
    2. 'break' (adapté à ' break') → logprob: -0.7004537582397461
    3. '   ' → logprob: -5.575453758239746
    4. ' break' → logprob: -6.325453758239746
    5. '	break' → logprob: -6.450453758239746
    6. '
' → logprob: -9.325453758239746
    7. '           ' → logprob: -11.200453758239746
    8. '```' → logprob: -11.825453758239746
    9. '        
' → logprob: -12.575453758239746
    10. '_break' → logprob: -12.950453758239746

Token 586: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05563150718808174
    2. '    
' → logprob: -3.305631399154663
    3. '
' → logprob: -4.180631637573242
    4. '  
' → logprob: -6.555631637573242
    5. '	
' → logprob: -9.055631637573242
    6. '```' → logprob: -9.305631637573242
    7. 'def' → logprob: -9.555631637573242
    8. '   
' → logprob: -9.930631637573242
    9. '<|end|>' → logprob: -9.930631637573242
    10. '        
' → logprob: -9.930631637573242

Token 587: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3343192934989929
    2. '
' → logprob: -1.9593193531036377
    3. '    
' → logprob: -2.9593193531036377
    4. 'tokens' → logprob: -3.4593193531036377
    5. 'line' → logprob: -3.9593193531036377
    6. 'try' → logprob: -4.459319114685059
    7. 'token' → logprob: -4.459319114685059
    8. 'parts' → logprob: -4.709319114685059
    9. ' parts' → logprob: -6.584319114685059
    10. '  
' → logprob: -6.709319114685059

Token 588: ' t' (ID: 260)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.008697538636624813
    2. ' target' → logprob: -5.008697509765625
    3. 't' (adapté à ' t') → logprob: -6.383697509765625
    4. 'parts' → logprob: -8.883697509765625
    5. '   ' → logprob: -9.883697509765625
    6. ' parts' → logprob: -10.008697509765625
    7. 'try' → logprob: -10.383697509765625
    8. 'number' → logprob: -11.633697509765625
    9. ' t' → logprob: -11.758697509765625
    10. ' tgt' → logprob: -13.258697509765625

Token 589: ',' (ID: 11)
  Prédit: 'arget'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arget' → logprob: -0.00512275006622076
    2. ',' → logprob: -5.380122661590576
    3. 'okens' → logprob: -8.005123138427734
    4. 'arge' → logprob: -9.630123138427734
    5. 'arg' → logprob: -10.630123138427734
    6. ' ,' → logprob: -11.130123138427734
    7. 'arger' → logprob: -11.255123138427734
    8. 'oken' → logprob: -11.755123138427734
    9. 'ARGET' → logprob: -11.880123138427734
    10. 'ar' → logprob: -11.880123138427734

Token 590: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.8036574125289917
    2. 'n' → logprob: -1.0536574125289917
    3. ' n' → logprob: -2.5536575317382812
    4. ' num' → logprob: -2.9286575317382812
    5. 'number' → logprob: -3.1786575317382812
    6. ' number' → logprob: -3.8036575317382812
    7. 's' → logprob: -5.928657531738281
    8. ' rest' → logprob: -6.428657531738281
    9. 'rest' → logprob: -6.553657531738281
    10. ' s' → logprob: -6.803657531738281

Token 591: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20422109961509705
    2. ' =' → logprob: -2.07922101020813
    3. 'ber' → logprob: -2.82922101020813
    4. 'er' → logprob: -7.454221248626709
    5. 'or' → logprob: -11.07922077178955
    6. 'bers' → logprob: -11.45422077178955
    7. 's' → logprob: -11.95422077178955
    8. 'r' → logprob: -12.20422077178955
    9. 'ebr' → logprob: -12.82922077178955
    10. 'umber' → logprob: -13.20422077178955

Token 592: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.07888978719711304
    2. ' line' → logprob: -2.578889846801758
    3. 'map' → logprob: -16.953889846801758
    4. '	line' → logprob: -17.203889846801758
    5. '[line' → logprob: -18.328889846801758
    6. '   ' → logprob: -18.328889846801758
    7. '(line' → logprob: -18.703889846801758
    8. '=line' → logprob: -19.828889846801758
    9. '_line' → logprob: -19.953889846801758
    10. ' map' → logprob: -19.953889846801758

Token 593: '.split' (ID: 10347)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023335624486207962
    2. ' =' → logprob: -3.7733356952667236
    3. '.split' → logprob: -9.398335456848145
    4. '.' → logprob: -12.898335456848145
    5. 'split' → logprob: -13.148335456848145
    6. '.strip' → logprob: -14.023335456848145
    7. '.=' → logprob: -14.023335456848145
    8. '=input' → logprob: -15.523335456848145
    9. '=line' → logprob: -15.523335456848145
    10. '   ' → logprob: -15.648335456848145

Token 594: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04839418828487396
    2. '('' → logprob: -3.173394203186035
    3. '()
' → logprob: -5.548394203186035
    4. '(' → logprob: -6.923394203186035
    5. '();' → logprob: -8.673394203186035
    6. 'def' → logprob: -9.298394203186035
    7. ')' → logprob: -10.048394203186035
    8. '("' → logprob: -10.423394203186035
    9. '<|end|>' → logprob: -10.673394203186035
    10. ''' → logprob: -10.923394203186035

Token 595: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016893647611141205
    2. 'sh' → logprob: -4.1418938636779785
    3. ' shred' → logprob: -7.8918938636779785
    4. 'def' → logprob: -8.51689338684082
    5. '```' → logprob: -9.26689338684082
    6. '    
' → logprob: -9.89189338684082
    7. ' shredded' → logprob: -10.01689338684082
    8. '
' → logprob: -10.14189338684082
    9. '	sh' → logprob: -10.39189338684082
    10. ' shredd' → logprob: -11.14189338684082

Token 596: ' t' (ID: 260)
  Prédit: 'sh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sh' → logprob: -0.0374460443854332
    2. '   ' → logprob: -3.6624460220336914
    3. ' shred' → logprob: -4.537446022033691
    4. ' shredded' → logprob: -8.537446022033691
    5. ' shredd' → logprob: -9.787446022033691
    6. 'def' → logprob: -10.162446022033691
    7. '
' → logprob: -10.287446022033691
    8. '```' → logprob: -10.912446022033691
    9. ' sh' → logprob: -11.412446022033691
    10. '	sh' → logprob: -11.412446022033691

Token 597: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27762651443481445
    2. '=' → logprob: -1.9026265144348145
    3. ')' → logprob: -3.4026265144348145
    4. ',' → logprob: -3.6526265144348145
    5. '<|end|>' → logprob: -4.1526265144348145
    6. 'def' → logprob: -4.5276265144348145
    7. '.' → logprob: -6.0276265144348145
    8. ' ' → logprob: -6.7776265144348145
    9. '<|end|>' → logprob: -7.0276265144348145
    10. '=int' → logprob: -7.6526265144348145

Token 598: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.339278580620885e-06
    2. ' int' → logprob: -13.000001907348633
    3. '   ' → logprob: -19.750001907348633
    4. '  ' → logprob: -21.875001907348633
    5. '[int' → logprob: -22.000001907348633
    6. '=int' → logprob: -22.750001907348633
    7. '<int' → logprob: -23.250001907348633
    8. ' ' → logprob: -23.750001907348633
    9. '	int' → logprob: -24.125001907348633
    10. '(int' → logprob: -24.250001907348633

Token 599: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0006313055637292564
    2. 't' → logprob: -7.375631332397461
    3. '(' → logprob: -12.375631332397461
    4. '	t' → logprob: -15.250631332397461
    5. ' t' → logprob: -17.00063133239746
    6. '(token' → logprob: -17.00063133239746
    7. '(
' → logprob: -17.12563133239746
    8. ')t' → logprob: -17.50063133239746
    9. '`t' → logprob: -17.50063133239746
    10. ')' → logprob: -17.75063133239746

Token 600: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002958446741104126
    2. ')
' → logprob: -6.127958297729492
    3. '   ' → logprob: -8.127958297729492
    4. '<|end|>' → logprob: -8.377958297729492
    5. ',' → logprob: -8.627958297729492
    6. '<|end|>' → logprob: -10.127958297729492
    7. ' )' → logprob: -11.377958297729492
    8. 'def' → logprob: -12.377958297729492
    9. '),' → logprob: -12.627958297729492
    10. ')t' → logprob: -13.127958297729492

Token 601: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18735818564891815
    2. 'sh' → logprob: -1.8123581409454346
    3. ' shred' → logprob: -4.937358379364014
    4. ' shredded' → logprob: -8.437357902526855
    5. '
' → logprob: -9.437357902526855
    6. ' shredd' → logprob: -9.687357902526855
    7. '    
' → logprob: -11.187357902526855
    8. '	sh' → logprob: -11.312357902526855
    9. ' sh' → logprob: -11.312357902526855
    10. '  ' → logprob: -12.812357902526855

Token 602: ' shred' (ID: 126433)
  Prédit: 'sh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sh' → logprob: -0.008036458864808083
    2. '   ' → logprob: -5.0080366134643555
    3. ' shred' → logprob: -6.7580366134643555
    4. '
' → logprob: -9.758036613464355
    5. 'print' → logprob: -9.883036613464355
    6. ' shredded' → logprob: -11.258036613464355
    7. ' sh' → logprob: -11.883036613464355
    8. ' ' → logprob: -12.008036613464355
    9. '  ' → logprob: -12.008036613464355
    10. '    
' → logprob: -12.508036613464355

Token 603: 'der' (ID: 761)
  Prédit: 'sh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sh' → logprob: -0.38106924295425415
    2. 'er' → logprob: -2.0060691833496094
    3. 'der' → logprob: -2.0060691833496094
    4. 'r' → logprob: -3.8810691833496094
    5. ' shred' → logprob: -5.131069183349609
    6. 'target' → logprob: -5.256069183349609
    7. '_sh' → logprob: -5.256069183349609
    8. '(sh' → logprob: -6.006069183349609
    9. 'mer' → logprob: -6.506069183349609
    10. '   ' → logprob: -6.756069183349609

Token 604: '(t' (ID: 2025)
  Prédit: '(target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.20761001110076904
    2. '(t' → logprob: -1.707610011100769
    3. '(num' → logprob: -5.582610130310059
    4. '(' → logprob: -6.082610130310059
    5. ' (' → logprob: -9.082610130310059
    6. 'target' → logprob: -11.332610130310059
    7. '(number' → logprob: -13.082610130310059
    8. 'num' → logprob: -14.082610130310059
    9. '(token' → logprob: -14.707610130310059
    10. '```' → logprob: -14.832610130310059

Token 605: ',num' (ID: 78576)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18016283214092255
    2. ',num' → logprob: -1.805162787437439
    3. '(num' → logprob: -8.43016242980957
    4. ' ,' → logprob: -9.18016242980957
    5. 'num' → logprob: -9.43016242980957
    6. ' num' → logprob: -12.30516242980957
    7. '(' → logprob: -13.05516242980957
    8. ')' → logprob: -13.18016242980957
    9. '   ' → logprob: -13.43016242980957
    10. ',
' → logprob: -13.43016242980957

Token 606: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ')
' → logprob: -13.750001907348633
    3. '())' → logprob: -14.625001907348633
    4. ' )' → logprob: -15.250001907348633
    5. '))' → logprob: -16.875001907348633
    6. '()' → logprob: -17.625001907348633
    7. ')`' → logprob: -18.625001907348633
    8. '(' → logprob: -18.750001907348633
    9. ')

' → logprob: -20.375001907348633
    10. ')}' → logprob: -20.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 604
Tokens correctement prédits (1ère position, stricte): 214
Tokens correctement prédits (1ère position, avec adaptation): 225
Tokens correctement prédits (top 10): 465
Précision stricte (1ère position): 35.43%
Précision adaptée (1ère position): 37.25%
Précision (top 10): 76.99%
================================================================================
