================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
case_num = 1

while True:
    N = input()
    if N == '':
        continue
    N = int(N)
    if N == 0:
        break

    box = []
    # lire 5 couches z=0..4
    for z in range(5):
        grid = []
        for y in range(5):
            while True:
                line = input()
                if line.strip() != '':
                    break
            row = list(line.strip())
            grid.append(row)
        box.append(grid)
        # lire ligne vide
        while True:
            try:
                blank = input()
                if blank.strip() == '':
                    break
            except:
                break

    # lire M1 et a_i
    while True:
        line = input()
        if line.strip() != '':
            break
    M1 = int(line)
    a_list = []
    if M1 > 0:
        while True:
            line = input()
            if line.strip() != '':
                a_list = list(map(int, line.strip().split()))
                if len(a_list) < M1:
                    while len(a_list) < M1:
                        a_list += list(map(int, input().strip().split()))
                break
    else:
        a_list = []

    # lire M2 et b_j
    while True:
        line = input()
        if line.strip() != '':
            break
    M2 = int(line)
    b_list = []
    if M2 > 0:
        while True:
            line = input()
            if line.strip() != '':
                b_list = list(map(int, line.strip().split()))
                if len(b_list) < M2:
                    while len(b_list) < M2:
                        b_list += list(map(int, input().strip().split()))
                break
    else:
        b_list = []

    # voisins relatifs en 3D (face, edge, corner)
    neighbors = []
    for dz in [-1,0,1]:
        for dy in [-1,0,1]:
            for dx in [-1,0,1]:
                if dz==0 and dy==0 and dx==0:
                    continue
                neighbors.append( (dz, dy, dx) )

    # simuler N jours
    for day in range(N):
        new_box = []
        for z in range(5):
            new_grid = []
            for y in range(5):
                new_row = []
                for x in range(5):
                    # compter voisins vivants
                    count = 0
                    for dz,dy,dx in neighbors:
                        nz = z + dz
                        ny = y + dy
                        nx = x + dx
                        if 0 <= nz < 5 and 0 <= ny <5 and 0 <= nx <5:
                            if box[nz][ny][nx] == '1':
                                count += 1
                    if box[z][y][x] == '0':
                        # naissance si count dans a_list
                        if count in a_list:
                            new_row.append('1')
                        else:
                            new_row.append('0')
                    else:
                        # mort si count pas dans b_list
                        if count in b_list:
                            new_row.append('1')
                        else:
                            new_row.append('0')
                new_grid.append(new_row)
            new_box.append(new_grid)
        box = new_box

    print("Case {}:".format(case_num))
    for z in range(5):
        for y in range(5):
            print(''.join(box[z][y]))
        if z != 4:
            print()
    print()
    case_num += 1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'case' (ID: 9994)
  → Token d'amorce (pas de prédiction)

Token 1: '_num' (ID: 9834)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16396814584732056
    2. '0' → logprob: -2.288968086242676
    3. '1' → logprob: -3.038968086242676
    4. '10' → logprob: -6.913968086242676
    5. '"' → logprob: -7.663968086242676
    6. '42' → logprob: -8.413968086242676
    7. ''' → logprob: -9.413968086242676
    8. '5' → logprob: -9.663968086242676
    9. '32' → logprob: -9.663968086242676
    10. ' "' → logprob: -10.663968086242676

Token 4: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.32075297832489014
    2. '1' → logprob: -1.6957529783248901
    3. '42' → logprob: -2.4457530975341797
    4. '10' → logprob: -6.32075309753418
    5. ' ' → logprob: -6.57075309753418
    6. '5' → logprob: -7.44575309753418
    7. '123' → logprob: -8.19575309753418
    8. '100' → logprob: -9.07075309753418
    9. '"' → logprob: -9.82075309753418
    10. ''' → logprob: -10.57075309753418

Token 5: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.21316421031951904
    2. '=' → logprob: -2.0881643295288086
    3. '.' → logprob: -3.7131643295288086
    4. ',' → logprob: -4.838164329528809
    5. ':' → logprob: -4.838164329528809
    6. ' =' → logprob: -5.088164329528809
    7. '#' → logprob: -5.713164329528809
    8. '_' → logprob: -5.838164329528809
    9. ' +' → logprob: -5.963164329528809
    10. '\' → logprob: -6.088164329528809

Token 6: 'while' (ID: 7032)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07621791213750839
    2. '=' → logprob: -3.2012178897857666
    3. '.' → logprob: -4.076218128204346
    4. ':' → logprob: -5.576218128204346
    5. ' =' → logprob: -5.826218128204346
    6. ' +' → logprob: -6.201218128204346
    7. '```' → logprob: -6.451218128204346
    8. ',' → logprob: -6.701218128204346
    9. '#' → logprob: -7.076218128204346
    10. '0' → logprob: -7.201218128204346

Token 7: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00011307948443572968
    2. ' case' → logprob: -10.000113487243652
    3. '  ' → logprob: -10.250113487243652
    4. ' ' → logprob: -11.000113487243652
    5. 'case' → logprob: -12.625113487243652
    6. ' (' → logprob: -12.875113487243652
    7. ' True' → logprob: -13.250113487243652
    8. ' )' → logprob: -13.500113487243652
    9. ' ‌' → logprob: -14.000113487243652
    10. ' not' → logprob: -14.125113487243652

Token 8: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010425841173855588
    2. ' :' → logprob: -10.375103950500488
    3. '():' → logprob: -11.125103950500488
    4. ':
' → logprob: -11.375103950500488
    5. '):' → logprob: -11.375103950500488
    6. '   ' → logprob: -11.750103950500488
    7. '':' → logprob: -12.125103950500488
    8. ':**' → logprob: -12.125103950500488
    9. '':'' → logprob: -12.250103950500488
    10. '`:' → logprob: -12.500103950500488

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012522541219368577
    2. '```' → logprob: -7.501252174377441
    3. '    
' → logprob: -8.251252174377441
    4. ':' → logprob: -8.251252174377441
    5. '    ' → logprob: -10.251252174377441
    6. '<|end|>' → logprob: -11.126252174377441
    7. ' :' → logprob: -11.251252174377441
    8. '\' → logprob: -11.376252174377441
    9. 'print' → logprob: -11.626252174377441
    10. '   ' → logprob: -11.751252174377441

Token 10: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06401479244232178
    2. ' input' → logprob: -3.6890149116516113
    3. ' if' → logprob: -3.9390149116516113
    4. '```' → logprob: -4.939014911651611
    5. ' user' → logprob: -6.064014911651611
    6. 'input' → logprob: -6.064014911651611
    7. ' print' → logprob: -6.314014911651611
    8. ' try' → logprob: -7.064014911651611
    9. ' pass' → logprob: -7.814014911651611
    10. 'print' → logprob: -8.064014434814453

Token 11: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.00418221950531
    2. 'o' → logprob: -1.12918221950531
    3. '   ' → logprob: -2.3791823387145996
    4. 'u' → logprob: -2.6291823387145996
    5. ' =' → logprob: -2.8791823387145996
    6. '.' → logprob: -4.1291823387146
    7. 'umber' → logprob: -4.2541823387146
    8. 'a' → logprob: -4.5041823387146
    9. '_' → logprob: -4.8791823387146
    10. 'um' → logprob: -5.1291823387146

Token 12: ' input' (ID: 3422)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.004013341851532459
    2. ' input' → logprob: -6.004013538360596
    3. 'int' → logprob: -6.504013538360596
    4. ' ' → logprob: -10.629013061523438
    5. 'input' → logprob: -11.504013061523438
    6. '   ' → logprob: -13.254013061523438
    7. '=int' → logprob: -13.504013061523438
    8. ' eval' → logprob: -14.879013061523438
    9. ' len' → logprob: -15.629013061523438
    10. '  ' → logprob: -15.629013061523438

Token 13: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0031188949942588806
    2. '('' → logprob: -6.753118991851807
    3. ''' → logprob: -7.503118991851807
    4. '("("' → logprob: -7.753118991851807
    5. '```' → logprob: -7.878118991851807
    6. '()' → logprob: -7.878118991851807
    7. '"' → logprob: -10.003118515014648
    8. '`' → logprob: -10.128118515014648
    9. '(
' → logprob: -10.628118515014648
    10. ')' → logprob: -11.503118515014648

Token 14: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9590827822685242
    2. '.' → logprob: -1.834082841873169
    3. ' if' → logprob: -2.084082841873169
    4. '   ' → logprob: -2.209082841873169
    5. '```' → logprob: -2.584082841873169
    6. '<|end|>' → logprob: -2.959082841873169
    7. 'if' → logprob: -3.334082841873169
    8. ' ' → logprob: -4.58408260345459
    9. '\n' → logprob: -4.95908260345459
    10. '.strip' → logprob: -5.20908260345459

Token 15: ' if' (ID: 538)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0469083786010742
    2. '\n' → logprob: -1.1719083786010742
    3. ' if' → logprob: -1.5469083786010742
    4. 'if' (adapté à ' if') → logprob: -3.171908378601074
    5. '```' → logprob: -3.546908378601074
    6. '.strip' → logprob: -4.046908378601074
    7. '   ' → logprob: -5.046908378601074
    8. ' ==' → logprob: -5.171908378601074
    9. ')' → logprob: -5.421908378601074
    10. '==' → logprob: -5.671908378601074

Token 16: ' N' (ID: 478)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.023629648610949516
    2. ' ' → logprob: -4.148629665374756
    3. ' N' → logprob: -4.898629665374756
    4. 'not' → logprob: -9.523629188537598
    5. ' ' → logprob: -11.398629188537598
    6. ' case' → logprob: -11.523629188537598
    7. ' len' → logprob: -12.148629188537598
    8. '  ' → logprob: -12.148629188537598
    9. 'N' → logprob: -12.898629188537598
    10. ')' → logprob: -15.148629188537598

Token 17: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.009289671666920185
    2. '==' → logprob: -5.134289741516113
    3. '.' → logprob: -6.259289741516113
    4. ' .' → logprob: -7.759289741516113
    5. '.strip' → logprob: -8.259289741516113
    6. ')' → logprob: -8.759289741516113
    7. ' ' → logprob: -8.884289741516113
    8. '.is' → logprob: -9.009289741516113
    9. '<|end|>' → logprob: -9.384289741516113
    10. '.startswith' → logprob: -9.884289741516113

Token 18: ' '':
' (ID: 125614)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.30012068152427673
    2. '"' → logprob: -1.4251207113265991
    3. '''' → logprob: -4.425120830535889
    4. '""' → logprob: -5.675120830535889
    5. ' '' → logprob: -6.050120830535889
    6. ' ' → logprob: -7.675120830535889
    7. ' "' → logprob: -8.55012035369873
    8. ' ''' → logprob: -9.17512035369873
    9. ''t' → logprob: -9.80012035369873
    10. ''ex' → logprob: -10.42512035369873

Token 19: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0284137986600399
    2. ':' → logprob: -3.778413772583008
    3. '   ' → logprob: -5.778413772583008
    4. ' break' → logprob: -6.403413772583008
    5. ' :' → logprob: -9.278413772583008
    6. '	break' → logprob: -9.903413772583008
    7. ':
' → logprob: -10.028413772583008
    8. ' or' → logprob: -10.153413772583008
    9. ' ' → logprob: -10.153413772583008
    10. '    ' → logprob: -10.653413772583008

Token 20: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.052257247269153595
    2. '       ' → logprob: -3.1772572994232178
    3. 'break' → logprob: -4.927257061004639
    4. '	break' → logprob: -6.677257061004639
    5. '   ' → logprob: -7.427257061004639
    6. ' ' → logprob: -9.927257537841797
    7. '_break' → logprob: -10.427257537841797
    8. '           ' → logprob: -11.927257537841797
    9. ' ' → logprob: -12.177257537841797
    10. '    ' → logprob: -12.177257537841797

Token 21: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14333756268024445
    2. '    
' → logprob: -2.6433374881744385
    3. '<|end|>' → logprob: -3.3933374881744385
    4. '
' → logprob: -3.7683374881744385
    5. '  
' → logprob: -6.518337726593018
    6. '<|end|>' → logprob: -6.893337726593018
    7. '\n' → logprob: -7.018337726593018
    8. '   
' → logprob: -7.268337726593018
    9. '        
' → logprob: -7.893337726593018
    10. '  ' → logprob: -8.14333724975586

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015971258282661438
    2. '    
' → logprob: -4.3909711837768555
    3. '<|end|>' → logprob: -6.3909711837768555
    4. '
' → logprob: -7.8909711837768555
    5. ')' → logprob: -8.140971183776855
    6. '  
' → logprob: -8.265971183776855
    7. '```' → logprob: -8.265971183776855
    8. '\n' → logprob: -8.515971183776855
    9. '   
' → logprob: -9.140971183776855
    10. '  ' → logprob: -9.515971183776855

Token 23: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3394531011581421
    2. '<|end|>' → logprob: -2.4644532203674316
    3. 'n' → logprob: -2.7144532203674316
    4. ')' → logprob: -3.3394532203674316
    5. '\n' → logprob: -3.5894532203674316
    6. ' ' → logprob: -4.339453220367432
    7. '    
' → logprob: -4.464453220367432
    8. '  ' → logprob: -4.714453220367432
    9. ':' → logprob: -5.214453220367432
    10. '<|end|>' → logprob: -5.464453220367432

Token 24: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07036419212818146
    2. ' =' → logprob: -2.695364236831665
    3. '=int' → logprob: -7.820363998413086
    4. '.' → logprob: -12.070363998413086
    5. '==' → logprob: -12.695363998413086
    6. ',' → logprob: -12.820363998413086
    7. ')' → logprob: -12.820363998413086
    8. 'int' → logprob: -12.945363998413086
    9. ' ==' → logprob: -13.070363998413086
    10. ' ' → logprob: -13.320363998413086

Token 25: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0036086246836930513
    2. 'int' → logprob: -5.628608703613281
    3. ' N' → logprob: -12.003608703613281
    4. ' str' → logprob: -14.003608703613281
    5. ' input' → logprob: -14.503608703613281
    6. ' ' → logprob: -15.128608703613281
    7. '=int' → logprob: -15.128608703613281
    8. ' in' → logprob: -16.50360870361328
    9. ' n' → logprob: -16.62860870361328
    10. ' '' → logprob: -16.87860870361328

Token 26: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.2812270224094391
    2. '(' → logprob: -1.4062269926071167
    3. '()' → logprob: -9.906227111816406
    4. ' (' → logprob: -11.531227111816406
    5. ')' → logprob: -12.531227111816406
    6. '(
' → logprob: -13.031227111816406
    7. '(n' → logprob: -13.156227111816406
    8. '(`' → logprob: -13.406227111816406
    9. '(

' → logprob: -13.656227111816406
    10. '((' → logprob: -14.031227111816406

Token 27: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.676292231422849e-05
    2. '   ' → logprob: -12.000017166137695
    3. ')
' → logprob: -12.125017166137695
    4. ' )' → logprob: -12.750017166137695
    5. '):' → logprob: -15.000017166137695
    6. '))' → logprob: -15.000017166137695
    7. '`)' → logprob: -15.625017166137695
    8. ')`' → logprob: -15.625017166137695
    9. '')' → logprob: -16.125017166137695
    10. ')**' → logprob: -16.125017166137695

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05616246536374092
    2. '<|end|>' → logprob: -3.0561623573303223
    3. ' if' → logprob: -5.306162357330322
    4. '```' → logprob: -7.306162357330322
    5. '<|end|>' → logprob: -7.306162357330322
    6. ' ' → logprob: -8.05616283416748
    7. 'if' → logprob: -8.18116283416748
    8. '  ' → logprob: -8.55616283416748
    9. '    
' → logprob: -8.68116283416748
    10. '    ' → logprob: -9.43116283416748

Token 29: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46036019921302795
    2. ' if' → logprob: -1.3353601694107056
    3. 'if' (adapté à ' if') → logprob: -2.335360288619995
    4. '```' → logprob: -5.585360050201416
    5. '<|end|>' → logprob: -5.835360050201416
    6. '    ' → logprob: -6.960360050201416
    7. ' ' → logprob: -7.460360050201416
    8. '  ' → logprob: -8.460360527038574
    9. ' ```' → logprob: -9.085360527038574
    10. '<|end|>' → logprob: -9.210360527038574

Token 30: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.002029634779319167
    2. ' ' → logprob: -6.6270294189453125
    3. ' not' → logprob: -7.7520294189453125
    4. 'N' → logprob: -8.252029418945312
    5. ' ' → logprob: -11.377029418945312
    6. 'not' → logprob: -15.002029418945312
    7. ' case' → logprob: -15.252029418945312
    8. ' n' → logprob: -15.377029418945312
    9. ' (' → logprob: -15.877029418945312
    10. '<|end|>' → logprob: -16.502029418945312

Token 31: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07429410517215729
    2. '==' → logprob: -3.074294090270996
    3. ' <=' → logprob: -4.324294090270996
    4. ' <' → logprob: -5.074294090270996
    5. ' >' → logprob: -5.824294090270996
    6. '>' → logprob: -7.199294090270996
    7. ' >=' → logprob: -7.324294090270996
    8. '<=' → logprob: -7.324294090270996
    9. '<' → logprob: -7.949294090270996
    10. ')' → logprob: -8.949294090270996

Token 32: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06994321197271347
    2. '0' → logprob: -2.6949431896209717
    3. ' -' → logprob: -12.69494342803955
    4. '  ' → logprob: -13.81994342803955
    5. ' ' → logprob: -14.31994342803955
    6. '-' → logprob: -15.00744342803955
    7. '=' → logprob: -15.00744342803955
    8. '   ' → logprob: -15.06994342803955
    9. '1' → logprob: -15.44494342803955
    10. ')' → logprob: -15.69494342803955

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020595496520400047
    2. ' ' → logprob: -3.8955955505371094
    3. '-' → logprob: -10.27059555053711
    4. ' -' → logprob: -12.39559555053711
    5. '   ' → logprob: -12.89559555053711
    6. '1' → logprob: -13.02059555053711
    7. '```' → logprob: -13.02059555053711
    8. '  ' → logprob: -13.52059555053711
    9. '=' → logprob: -13.77059555053711
    10. '9' → logprob: -14.52059555053711

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.578184497309849e-05
    2. ' :' → logprob: -9.500085830688477
    3. ':
' → logprob: -12.250085830688477
    4. '   ' → logprob: -12.375085830688477
    5. '       ' → logprob: -13.625085830688477
    6. '    ' → logprob: -15.500085830688477
    7. ':return' → logprob: -15.625085830688477
    8. ' break' → logprob: -16.375085830688477
    9. '  ' → logprob: -16.750085830688477
    10. '：' → logprob: -16.875085830688477

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014389235293492675
    2. '   ' → logprob: -6.626439094543457
    3. '    ' → logprob: -9.626439094543457
    4. '      ' → logprob: -11.126439094543457
    5. '     ' → logprob: -11.626439094543457
    6. '```' → logprob: -11.626439094543457
    7. '    ' → logprob: -12.751439094543457
    8. ':' → logprob: -13.251439094543457
    9. ' break' → logprob: -13.501439094543457
    10. '  ' → logprob: -13.626439094543457

Token 36: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.8464552164077759
    2. ' break' → logprob: -1.2214552164077759
    3. '       ' → logprob: -1.7214552164077759
    4. '   ' → logprob: -2.3464550971984863
    5. '	break' → logprob: -6.721455097198486
    6. '```' → logprob: -7.721455097198486
    7. ' ' → logprob: -10.846455574035645
    8. '           ' → logprob: -11.471455574035645
    9. '_break' → logprob: -11.471455574035645
    10. '  ' → logprob: -11.471455574035645

Token 37: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4349677562713623
    2. '
' → logprob: -1.9349677562713623
    3. '    
' → logprob: -2.3099677562713623
    4. '```' → logprob: -2.4349677562713623
    5. '\n' → logprob: -4.684967994689941
    6. '<|end|>' → logprob: -5.059967994689941
    7. '  
' → logprob: -5.809967994689941
    8. 'print' → logprob: -7.809967994689941
    9. ':' → logprob: -8.059967994689941
    10. '   
' → logprob: -8.059967994689941

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06690189987421036
    2. '    
' → logprob: -3.316901922225952
    3. '```' → logprob: -3.941901922225952
    4. '<|end|>' → logprob: -5.191901683807373
    5. '
' → logprob: -6.691901683807373
    6. 'print' → logprob: -7.191901683807373
    7. '  
' → logprob: -8.316902160644531
    8. '#' → logprob: -8.566902160644531
    9. '<|end|>' → logprob: -8.566902160644531
    10. '    ' → logprob: -8.691902160644531

Token 39: ' box' (ID: 5506)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011656234040856361
    2. '    ' → logprob: -5.761656284332275
    3. 'print' → logprob: -5.886656284332275
    4. 'result' → logprob: -6.511656284332275
    5. 'n' → logprob: -6.761656284332275
    6. '  ' → logprob: -8.261655807495117
    7. 's' → logprob: -8.386655807495117
    8. 'p' → logprob: -8.386655807495117
    9. '    
' → logprob: -8.511655807495117
    10. 'sum' → logprob: -8.511655807495117

Token 40: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8738803267478943
    2. 's' → logprob: -1.248880386352539
    3. 'es' → logprob: -1.498880386352539
    4. ' =' → logprob: -2.998880386352539
    5. '_size' → logprob: -4.748880386352539
    6. '_s' → logprob: -4.998880386352539
    7. '_count' → logprob: -6.248880386352539
    8. '_sizes' → logprob: -6.748880386352539
    9. '[' → logprob: -7.373880386352539
    10. ' s' → logprob: -7.748880386352539

Token 41: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.06457550823688507
    2. ' []' → logprob: -2.814575433731079
    3. '[' → logprob: -6.064575672149658
    4. ' [' → logprob: -8.9395751953125
    5. '{}' → logprob: -9.5645751953125
    6. 'list' → logprob: -10.3145751953125
    7. '[]
' → logprob: -11.0645751953125
    8. '[]}' → logprob: -11.8145751953125
    9. 'set' → logprob: -12.3145751953125
    10. '[][]' → logprob: -12.4395751953125

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18090853095054626
    2. 'for' → logprob: -1.9309085607528687
    3. '<|end|>' → logprob: -4.555908679962158
    4. ' for' → logprob: -4.680908679962158
    5. '	for' → logprob: -8.430908203125
    6. '    ' → logprob: -9.055908203125
    7. '<|end|>' → logprob: -9.430908203125
    8. ' ' → logprob: -9.430908203125
    9. '[' → logprob: -9.930908203125
    10. '  ' → logprob: -10.180908203125

Token 43: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01930331066250801
    2. ' for' → logprob: -4.519303321838379
    3. '   ' → logprob: -4.894303321838379
    4. '	for' → logprob: -7.269303321838379
    5. '[' → logprob: -11.144303321838379
    6. '    ' → logprob: -11.769303321838379
    7. ' ' → logprob: -12.144303321838379
    8. '  ' → logprob: -13.269303321838379
    9. '<|end|>' → logprob: -13.519303321838379
    10. 'while' → logprob: -13.769303321838379

Token 44: ' lire' (ID: 46082)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05575858801603317
    2. ' for' → logprob: -2.930758476257324
    3. '   ' → logprob: -7.055758476257324
    4. '	for' → logprob: -11.805758476257324
    5. ' ' → logprob: -13.305758476257324
    6. '```' → logprob: -13.555758476257324
    7. '  ' → logprob: -13.805758476257324
    8. '    ' → logprob: -14.555758476257324
    9. ' ' → logprob: -14.555758476257324
    10. 'For' → logprob: -15.555758476257324

Token 45: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32744652032852173
    2. ' for' → logprob: -1.952446460723877
    3. 'for' → logprob: -2.827446460723877
    4. '_' → logprob: -3.827446460723877
    5. '  ' → logprob: -4.202446460723877
    6. '(' → logprob: -4.577446460723877
    7. '()' → logprob: -4.952446460723877
    8. ' ' → logprob: -4.952446460723877
    9. 'r' → logprob: -5.452446460723877
    10. '    ' → logprob: -5.827446460723877

Token 46: '5' (ID: 20)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.436560869216919
    2. 'for' → logprob: -1.686560869216919
    3. ' N' → logprob: -2.311560869216919
    4. '_' → logprob: -2.436560869216919
    5. ' les' → logprob: -2.561560869216919
    6. ' ' → logprob: -2.686560869216919
    7. ' for' → logprob: -2.936560869216919
    8. 'le' → logprob: -3.186560869216919
    9. '   ' → logprob: -3.311560869216919
    10. 'N' → logprob: -3.561560869216919

Token 47: ' couches' (ID: 103376)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.8417675495147705
    2. ' times' → logprob: -1.3417675495147705
    3. 'times' → logprob: -1.7167675495147705
    4. ' for' → logprob: -3.4667675495147705
    5. '<|end|>' → logprob: -3.4667675495147705
    6. 'lines' → logprob: -3.7167675495147705
    7. 'for' → logprob: -3.8417675495147705
    8. ' lignes' → logprob: -5.466767311096191
    9. '    ' → logprob: -5.841767311096191
    10. '<|end|>' → logprob: -5.966767311096191

Token 48: ' z' (ID: 579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9807969331741333
    2. '   ' → logprob: -1.1057969331741333
    3. 'for' → logprob: -1.2307969331741333
    4. '	for' → logprob: -6.855796813964844
    5. '    ' → logprob: -8.105796813964844
    6. '<|end|>' → logprob: -8.230796813964844
    7. '  ' → logprob: -9.230796813964844
    8. ' ' → logprob: -9.730796813964844
    9. '<|end|>' → logprob: -9.730796813964844
    10. '       ' → logprob: -10.855796813964844

Token 49: '=' (ID: 28)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8647472858428955
    2. '   ' → logprob: -1.3647472858428955
    3. ' =' → logprob: -2.7397472858428955
    4. ' for' → logprob: -2.9897472858428955
    5. '<|end|>' → logprob: -3.2397472858428955
    6. '    ' → logprob: -3.4897472858428955
    7. '  ' → logprob: -3.7397472858428955
    8. 'for' → logprob: -3.8647472858428955
    9. '[' → logprob: -3.8647472858428955
    10. ',' → logprob: -4.114747047424316

Token 50: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014757560566067696
    2. ' ' → logprob: -4.2647576332092285
    3. '1' → logprob: -8.51475715637207
    4. 'z' → logprob: -9.51475715637207
    5. '4' → logprob: -9.76475715637207
    6. '5' → logprob: -9.76475715637207
    7. 'i' → logprob: -9.88975715637207
    8. ' z' → logprob: -10.76475715637207
    9. '=' → logprob: -10.88975715637207
    10. '  ' → logprob: -11.38975715637207

Token 51: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6934582591056824
    2. '<|end|>' → logprob: -1.0684583187103271
    3. '<|end|>' → logprob: -3.568458318710327
    4. ' ' → logprob: -3.568458318710327
    5. ' to' → logprob: -4.068458080291748
    6. ' for' → logprob: -4.318458080291748
    7. '   ' → logprob: -4.318458080291748
    8. '...' → logprob: -4.693458080291748
    9. '.' → logprob: -5.193458080291748
    10. '  ' → logprob: -5.318458080291748

Token 52: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00044401636114344
    2. ' ' → logprob: -7.875443935394287
    3. '```' → logprob: -10.875444412231445
    4. '...' → logprob: -11.375444412231445
    5. '1' → logprob: -12.125444412231445
    6. '' → logprob: -12.625444412231445
    7. '5' → logprob: -12.750444412231445
    8. '   ' → logprob: -12.750444412231445
    9. ' to' → logprob: -12.875444412231445
    10. '..' → logprob: -12.875444412231445

Token 53: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7677244544029236
    2. 'for' → logprob: -1.2677245140075684
    3. ' for' → logprob: -1.3927245140075684
    4. '	for' → logprob: -6.017724514007568
    5. '<|end|>' → logprob: -6.142724514007568
    6. '    ' → logprob: -7.142724514007568
    7. '    
' → logprob: -8.64272403717041
    8. '<|end|>' → logprob: -8.89272403717041
    9. '  ' → logprob: -9.26772403717041
    10. ' ' → logprob: -9.51772403717041

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35357338190078735
    2. ' for' → logprob: -1.3535733222961426
    3. 'for' → logprob: -3.4785733222961426
    4. '	for' → logprob: -5.478573322296143
    5. '<|end|>' → logprob: -5.603573322296143
    6. '
' → logprob: -8.2285737991333
    7. ' ' → logprob: -9.1035737991333
    8. '    ' → logprob: -9.1035737991333
    9. '<|end|>' → logprob: -9.3535737991333
    10. '  ' → logprob: -9.6035737991333

Token 55: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5476489067077637
    2. 'for' (adapté à ' for') → logprob: -1.0476489067077637
    3. ' for' → logprob: -2.6726489067077637
    4. '	for' → logprob: -6.422648906707764
    5. '<|end|>' → logprob: -9.672649383544922
    6. '    
' → logprob: -10.297649383544922
    7. '  ' → logprob: -10.297649383544922
    8. '    ' → logprob: -10.297649383544922
    9. ' ' → logprob: -11.047649383544922
    10. '\t' → logprob: -11.297649383544922

Token 56: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.05876452848315239
    2. ' i' → logprob: -3.9337644577026367
    3. ' _' → logprob: -4.058764457702637
    4. ' layer' → logprob: -4.183764457702637
    5. 'z' → logprob: -5.433764457702637
    6. '_' → logprob: -8.933764457702637
    7. ' ' → logprob: -8.933764457702637
    8. ' k' → logprob: -9.183764457702637
    9. 'i' → logprob: -9.558764457702637
    10. 'layer' → logprob: -9.683764457702637

Token 57: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029802558943629265
    2. 'in' → logprob: -3.5298025608062744
    3. ' ' → logprob: -10.154802322387695
    4. '	in' → logprob: -11.904802322387695
    5. '  ' → logprob: -14.279802322387695
    6. '    ' → logprob: -14.279802322387695
    7. '<|end|>' → logprob: -14.279802322387695
    8. ',' → logprob: -14.404802322387695
    9. '   ' → logprob: -14.529802322387695
    10. 'import' → logprob: -14.654802322387695

Token 58: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.011057492345571518
    2. 'range' → logprob: -4.511057376861572
    3. '	range' → logprob: -11.88605785369873
    4. ' ' → logprob: -13.63605785369873
    5. ' xrange' → logprob: -14.01105785369873
    6. '(range' → logprob: -14.51105785369873
    7. '```' → logprob: -16.761056900024414
    8. '_range' → logprob: -17.136056900024414
    9. '[' → logprob: -17.261056900024414
    10. '  ' → logprob: -17.386056900024414

Token 59: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.45848218582978e-06
    2. '5' → logprob: -13.62500286102295
    3. ' (' → logprob: -13.62500286102295
    4. '(
' → logprob: -17.125001907348633
    5. ' ' → logprob: -17.375001907348633
    6. '   ' → logprob: -18.375001907348633
    7. '6' → logprob: -19.625001907348633
    8. ')' → logprob: -19.625001907348633
    9. '```' → logprob: -20.125001907348633
    10. '4' → logprob: -20.250001907348633

Token 60: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00536561431363225
    2. ' ' → logprob: -5.25536584854126
    3. '   ' → logprob: -9.005365371704102
    4. '(' → logprob: -13.005365371704102
    5. ')' → logprob: -13.130365371704102
    6. '    ' → logprob: -13.255365371704102
    7. '0' → logprob: -13.380365371704102
    8. '  ' → logprob: -14.380365371704102
    9. '```' → logprob: -15.317865371704102
    10. '	' → logprob: -15.442865371704102

Token 61: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002286886883666739
    2. ' ):' → logprob: -9.375228881835938
    3. '   ' → logprob: -9.875228881835938
    4. ':' → logprob: -10.375228881835938
    5. ')' → logprob: -10.500228881835938
    6. '):
' → logprob: -10.750228881835938
    7. '+' → logprob: -12.625228881835938
    8. ',' → logprob: -12.625228881835938
    9. ' ' → logprob: -13.250228881835938
    10. '():' → logprob: -13.875228881835938

Token 62: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011542410589754581
    2. '       ' → logprob: -5.136542320251465
    3. '   ' → logprob: -6.011542320251465
    4. '<|end|>' → logprob: -6.136542320251465
    5. '):' → logprob: -7.761542320251465
    6. ':
' → logprob: -8.136542320251465
    7. ' :' → logprob: -9.386542320251465
    8. ',' → logprob: -9.636542320251465
    9. '<|end|>' → logprob: -10.136542320251465
    10. '    ' → logprob: -10.761542320251465

Token 63: ' grid' (ID: 10586)
  Prédit: ' layer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' layer' → logprob: -0.22555877268314362
    2. 'layer' → logprob: -2.1005587577819824
    3. '   ' → logprob: -2.9755587577819824
    4. ' row' → logprob: -4.475558757781982
    5. 'row' → logprob: -4.975558757781982
    6. '    ' → logprob: -5.725558757781982
    7. 'line' → logprob: -5.975558757781982
    8. ' line' → logprob: -6.475558757781982
    9. '       ' → logprob: -7.725558757781982
    10. 'layers' → logprob: -7.975558757781982

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11307241767644882
    2. '=' → logprob: -2.238072395324707
    3. '=[]' → logprob: -8.738072395324707
    4. '.append' → logprob: -10.113072395324707
    5. ' ' → logprob: -11.363072395324707
    6. '[' → logprob: -11.738072395324707
    7. '   ' → logprob: -12.238072395324707
    8. ',' → logprob: -12.613072395324707
    9. '[]' → logprob: -12.613072395324707
    10. '[:]' → logprob: -12.738072395324707

Token 65: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4743271768093109
    2. ' []' → logprob: -0.9743272066116333
    3. ' [' → logprob: -8.599327087402344
    4. '[' → logprob: -9.849327087402344
    5. '[]>' → logprob: -12.599327087402344
    6. '[]
' → logprob: -13.474327087402344
    7. '[]}' → logprob: -13.724327087402344
    8. '[][]' → logprob: -13.849327087402344
    9. '[input' → logprob: -13.849327087402344
    10. '   ' → logprob: -14.099327087402344

Token 66: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056231316179037094
    2. '<|end|>' → logprob: -2.9312312602996826
    3. '   ' → logprob: -7.181231498718262
    4. '<|end|>' → logprob: -8.556231498718262
    5. ' for' → logprob: -8.806231498718262
    6. '	' → logprob: -8.931231498718262
    7. ' ' → logprob: -10.431231498718262
    8. 'for' → logprob: -10.681231498718262
    9. '	   ' → logprob: -11.056231498718262
    10. '	for' → logprob: -11.556231498718262

Token 67: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.19139498472213745
    2. '   ' → logprob: -2.1913950443267822
    3. ' for' → logprob: -2.8163950443267822
    4. '       ' → logprob: -6.566394805908203
    5. '	for' → logprob: -7.191394805908203
    6. '    ' → logprob: -7.941394805908203
    7. '  ' → logprob: -10.191394805908203
    8. '	   ' → logprob: -10.941394805908203
    9. '<|end|>' → logprob: -11.191394805908203
    10. ' ' → logprob: -11.316394805908203

Token 68: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.32980677485466003
    2. 'y' → logprob: -2.0798068046569824
    3. '_' → logprob: -2.9548068046569824
    4. ' x' → logprob: -3.2048068046569824
    5. ' _' → logprob: -3.4548068046569824
    6. 'x' → logprob: -3.5798068046569824
    7. ' ' → logprob: -5.954806804656982
    8. '_y' → logprob: -7.829806804656982
    9. '_x' → logprob: -8.454806327819824
    10. ' i' → logprob: -8.829806327819824

Token 69: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005358502268791199
    2. 'in' → logprob: -5.255358695983887
    3. '<|end|>' → logprob: -9.380358695983887
    4. ' ' → logprob: -10.255358695983887
    5. '<|end|>' → logprob: -13.505358695983887
    6. '    ' → logprob: -14.380358695983887
    7. '	in' → logprob: -14.630358695983887
    8. '  ' → logprob: -14.630358695983887
    9. '=' → logprob: -15.005358695983887
    10. 's' → logprob: -15.380358695983887

Token 70: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31326746940612793
    2. 'range' → logprob: -1.313267469406128
    3. '	range' → logprob: -12.938267707824707
    4. '(range' → logprob: -13.563267707824707
    5. ' ' → logprob: -13.813267707824707
    6. '5' → logprob: -15.063267707824707
    7. ')' → logprob: -16.18826675415039
    8. '   ' → logprob: -16.18826675415039
    9. ' xrange' → logprob: -16.18826675415039
    10. '  ' → logprob: -16.31326675415039

Token 71: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2664456789934775e-06
    2. ' (' → logprob: -14.125000953674316
    3. '<|end|>' → logprob: -15.000000953674316
    4. '(
' → logprob: -15.750000953674316
    5. '(range' → logprob: -17.375001907348633
    6. ' ' → logprob: -18.125001907348633
    7. '6' → logprob: -18.625001907348633
    8. '((' → logprob: -19.000001907348633
    9. '5' → logprob: -19.125001907348633
    10. ' range' → logprob: -19.250001907348633

Token 72: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0008195152622647583
    2. '6' → logprob: -8.500819206237793
    3. ' ' → logprob: -8.750819206237793
    4. '```' → logprob: -9.125819206237793
    5. '   ' → logprob: -9.125819206237793
    6. ')' → logprob: -9.375819206237793
    7. '0' → logprob: -11.000819206237793
    8. '	' → logprob: -11.063319206237793
    9. '  ' → logprob: -11.125819206237793
    10. '>' → logprob: -11.375819206237793

Token 73: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004307395778596401
    2. '):
' → logprob: -5.504307270050049
    3. ')' → logprob: -9.129307746887207
    4. '   ' → logprob: -9.879307746887207
    5. '+' → logprob: -11.004307746887207
    6. '       ' → logprob: -11.254307746887207
    7. ':' → logprob: -11.629307746887207
    8. ' ):' → logprob: -11.754307746887207
    9. '):
' → logprob: -12.379307746887207
    10. '):

' → logprob: -12.504307746887207

Token 74: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07122014462947845
    2. ':' → logprob: -2.8212201595306396
    3. '<|end|>' → logprob: -5.0712199211120605
    4. '<|end|>' → logprob: -6.6962199211120605
    5. '       ' → logprob: -7.8212199211120605
    6. ',' → logprob: -8.196220397949219
    7. '               ' → logprob: -8.821220397949219
    8. '		' → logprob: -8.946220397949219
    9. '	       ' → logprob: -9.071220397949219
    10. '            ' → logprob: -9.321220397949219

Token 75: ' while' (ID: 2049)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.32682424783706665
    2. ' row' → logprob: -1.4518241882324219
    3. ' grid' → logprob: -4.701824188232422
    4. 'row' → logprob: -4.701824188232422
    5. ' s' → logprob: -5.076824188232422
    6. 'line' → logprob: -5.201824188232422
    7. '               ' → logprob: -5.451824188232422
    8. '            ' → logprob: -5.951824188232422
    9. '           ' → logprob: -6.201824188232422
    10. ' ' → logprob: -6.576824188232422

Token 76: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.048608485609292984
    2. 'True' → logprob: -3.0486085414886475
    3. '(True' → logprob: -11.298608779907227
    4. ' len' → logprob: -12.298608779907227
    5. ' ' → logprob: -12.923608779907227
    6. 'len' → logprob: -14.173608779907227
    7. ' ' → logprob: -15.548608779907227
    8. '   ' → logprob: -15.673608779907227
    9. '  ' → logprob: -15.673608779907227
    10. '1' → logprob: -15.923608779907227

Token 77: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.399263858795166
    2. ':' → logprob: -1.524263858795166
    3. '           ' → logprob: -3.024263858795166
    4. '<|end|>' → logprob: -3.024263858795166
    5. ':
' → logprob: -5.149263858795166
    6. '<|end|>' → logprob: -6.024263858795166
    7. ' :' → logprob: -6.399263858795166
    8. ',' → logprob: -6.524263858795166
    9. '   ' → logprob: -7.524263858795166
    10. '       ' → logprob: -7.899263858795166

Token 78: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022675657644867897
    2. '<|end|>' → logprob: -4.272675514221191
    3. ' line' → logprob: -5.022675514221191
    4. 's' → logprob: -7.522675514221191
    5. '           ' → logprob: -8.022675514221191
    6. '<|end|>' → logprob: -8.522675514221191
    7. 'line' → logprob: -8.772675514221191
    8. ' ' → logprob: -9.397675514221191
    9. ' s' → logprob: -9.522675514221191
    10. '                ' → logprob: -9.647675514221191

Token 79: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.030453531071543694
    2. 'line' (adapté à ' line') → logprob: -3.7804534435272217
    3. ' try' → logprob: -5.905453681945801
    4. ' row' → logprob: -6.155453681945801
    5. '	line' → logprob: -7.530453681945801
    6. ' s' → logprob: -7.780453681945801
    7. '   ' → logprob: -7.905453681945801
    8. 's' → logprob: -8.0304536819458
    9. 'try' → logprob: -8.9054536819458
    10. '                   ' → logprob: -8.9054536819458

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020548192784190178
    2. '=' → logprob: -3.895548105239868
    3. 's' → logprob: -13.145547866821289
    4. '=input' → logprob: -13.270547866821289
    5. '   ' → logprob: -14.395547866821289
    6. '    ' → logprob: -14.520547866821289
    7. '=line' → logprob: -14.520547866821289
    8. ' ' → logprob: -14.645547866821289
    9. '           ' → logprob: -15.395547866821289
    10. '_input' → logprob: -16.77054786682129

Token 81: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.12693022191524506
    2. 'input' → logprob: -2.1269302368164062
    3. ' ' → logprob: -14.501930236816406
    4. '=input' → logprob: -15.001930236816406
    5. '                   ' → logprob: -15.251930236816406
    6. '(input' → logprob: -15.376930236816406
    7. '	input' → logprob: -15.501930236816406
    8. '   ' → logprob: -15.501930236816406
    9. '_input' → logprob: -15.876930236816406
    10. '<input' → logprob: -16.501930236816406

Token 82: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01609959453344345
    2. '().' → logprob: -4.141099452972412
    3. '())' → logprob: -10.39109992980957
    4. '()
' → logprob: -11.01609992980957
    5. '()>' → logprob: -12.39109992980957
    6. '()

' → logprob: -12.89109992980957
    7. '(' → logprob: -13.14109992980957
    8. '()?>' → logprob: -13.76609992980957
    9. '>()' → logprob: -13.76609992980957
    10. '()`' → logprob: -13.89109992980957

Token 83: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.209479808807373
    2. '<|end|>' → logprob: -1.209479808807373
    3. ' if' → logprob: -1.334479808807373
    4. ' ' → logprob: -2.459479808807373
    5. '<|end|>' → logprob: -3.334479808807373
    6. '                
' → logprob: -5.459479808807373
    7. '.strip' → logprob: -5.709479808807373
    8. '           ' → logprob: -6.084479808807373
    9. '                ' → logprob: -6.834479808807373
    10. '  
' → logprob: -7.334479808807373

Token 85: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.4853828251361847
    2. 'line' → logprob: -1.3603827953338623
    3. ' len' → logprob: -2.4853827953338623
    4. 'len' → logprob: -3.1103827953338623
    5. ' ' → logprob: -9.610383033752441
    6. '	line' → logprob: -11.610383033752441
    7. ' not' → logprob: -12.485383033752441
    8. '  ' → logprob: -12.735383033752441
    9. ' l' → logprob: -12.985383033752441
    10. '(line' → logprob: -13.235383033752441

Token 86: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.43155527114868164
    2. ' !=' → logprob: -1.4315552711486816
    3. '<|end|>' → logprob: -2.8065552711486816
    4. '!=' → logprob: -3.8065552711486816
    5. '!='' → logprob: -4.681555271148682
    6. '.' → logprob: -5.181555271148682
    7. '<|end|>' → logprob: -5.681555271148682
    8. ':' → logprob: -5.681555271148682
    9. '.startswith' → logprob: -5.931555271148682
    10. ' ' → logprob: -7.306555271148682

Token 87: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.161714792251587
    2. ':' → logprob: -1.286714792251587
    3. '():' → logprob: -1.536714792251587
    4. '<|end|>' → logprob: -2.286714792251587
    5. '()!=' → logprob: -3.161714792251587
    6. ' !=' → logprob: -3.911714792251587
    7. '!=' → logprob: -4.286714553833008
    8. '<|end|>' → logprob: -4.786714553833008
    9. '()==' → logprob: -6.286714553833008
    10. ')' → logprob: -6.661714553833008

Token 88: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -1.0140784978866577
    2. '!=' → logprob: -1.1390784978866577
    3. ':' → logprob: -1.2640784978866577
    4. '==' → logprob: -4.514078617095947
    5. '!='' → logprob: -4.639078617095947
    6. '<|end|>' → logprob: -4.889078617095947
    7. '<|end|>' → logprob: -7.014078617095947
    8. '!==' → logprob: -7.139078617095947
    9. '!="' → logprob: -7.264078617095947
    10. '):' → logprob: -7.389078617095947

Token 89: ' '':
' (ID: 125614)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.693621039390564
    2. '''' → logprob: -0.693621039390564
    3. '"":' → logprob: -8.443620681762695
    4. ' '' → logprob: -9.193620681762695
    5. '"' → logprob: -9.568620681762695
    6. '""' → logprob: -10.318620681762695
    7. ' '':
' → logprob: -11.443620681762695
    8. ''''' → logprob: -11.568620681762695
    9. ''',' → logprob: -11.943620681762695
    10. '':' → logprob: -12.443620681762695

Token 90: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4154807925224304
    2. ':' → logprob: -1.2904808521270752
    3. ':
' → logprob: -2.790480852127075
    4. '               ' → logprob: -6.415480613708496
    5. '                       ' → logprob: -7.540480613708496
    6. ' :' → logprob: -8.290480613708496
    7. ' and' → logprob: -8.290480613708496
    8. ',' → logprob: -8.790480613708496
    9. ' :
' → logprob: -9.165480613708496
    10. '<|end|>' → logprob: -9.165480613708496

Token 91: ' break' (ID: 2338)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.45015233755111694
    2. ' break' → logprob: -1.3251523971557617
    3. '                   ' → logprob: -2.4501523971557617
    4. 'break' (adapté à ' break') → logprob: -4.700152397155762
    5. ' ' → logprob: -7.325152397155762
    6. '                    ' → logprob: -8.825152397155762
    7. '	break' → logprob: -9.075152397155762
    8. '               ' → logprob: -9.325152397155762
    9. '                     ' → logprob: -9.950152397155762
    10. '<|end|>' → logprob: -10.075152397155762

Token 92: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0019659854006022215
    2. '
' → logprob: -7.0019659996032715
    3. '               ' → logprob: -7.2519659996032715
    4. '<|end|>' → logprob: -8.626965522766113
    5. '		' → logprob: -9.876965522766113
    6. '	       ' → logprob: -10.126965522766113
    7. '       ' → logprob: -11.376965522766113
    8. '		   ' → logprob: -11.626965522766113
    9. '                   ' → logprob: -11.751965522766113
    10. '<|end|>' → logprob: -12.001965522766113

Token 93: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002514455991331488
    2. '               ' → logprob: -8.375251770019531
    3. '       ' → logprob: -11.875251770019531
    4. '          ' → logprob: -12.625251770019531
    5. '<|end|>' → logprob: -13.125251770019531
    6. '```' → logprob: -13.375251770019531
    7. '	       ' → logprob: -13.500251770019531
    8. '                   ' → logprob: -13.875251770019531
    9. '		' → logprob: -14.125251770019531
    10. ',' → logprob: -14.125251770019531

Token 94: ' row' (ID: 5225)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010026277042925358
    2. '       ' → logprob: -4.635026454925537
    3. ' grid' → logprob: -8.510025978088379
    4. '               ' → logprob: -11.135025978088379
    5. 'grid' → logprob: -11.385025978088379
    6. '   ' → logprob: -11.760025978088379
    7. '	       ' → logprob: -11.760025978088379
    8. '```' → logprob: -12.510025978088379
    9. '          ' → logprob: -12.760025978088379
    10. '<|end|>' → logprob: -12.760025978088379

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07891324907541275
    2. '=' → logprob: -2.5789132118225098
    3. '.append' → logprob: -10.828913688659668
    4. '=line' → logprob: -13.203913688659668
    5. 's' → logprob: -14.578913688659668
    6. ' ' → logprob: -14.703913688659668
    7. '.extend' → logprob: -15.578913688659668
    8. '=list' → logprob: -15.828913688659668
    9. ')' → logprob: -16.20391273498535
    10. ' =
' → logprob: -16.32891273498535

Token 96: ' list' (ID: 1562)
  Prédit: '[line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[line' → logprob: -0.7361887097358704
    2. 'list' → logprob: -1.4861886501312256
    3. ' list' → logprob: -1.6111886501312256
    4. '[list' → logprob: -2.9861886501312256
    5. ' [' → logprob: -3.4861886501312256
    6. '[' → logprob: -4.861188888549805
    7. ' line' → logprob: -5.611188888549805
    8. 'line' → logprob: -6.111188888549805
    9. '[input' → logprob: -9.111188888549805
    10. '[len' → logprob: -9.736188888549805

Token 97: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0399041473865509
    2. '(map' → logprob: -3.2899041175842285
    3. '(' → logprob: -6.2899041175842285
    4. '(row' → logprob: -12.789904594421387
    5. '(int' → logprob: -14.164904594421387
    6. '()' → logprob: -14.414904594421387
    7. '(range' → logprob: -14.789904594421387
    8. '(filter' → logprob: -15.039904594421387
    9. '(
' → logprob: -15.164904594421387
    10. ' (' → logprob: -15.539904594421387

Token 98: '.strip' (ID: 40613)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3425907492637634
    2. ')' → logprob: -1.9675908088684082
    3. '.strip' → logprob: -1.9675908088684082
    4. '().' → logprob: -5.342590808868408
    5. '()' → logprob: -5.717590808868408
    6. '(strip' → logprob: -6.967590808868408
    7. ' )' → logprob: -7.342590808868408
    8. ' ())' → logprob: -8.21759033203125
    9. '.rstrip' → logprob: -9.09259033203125
    10. 'strip' → logprob: -9.34259033203125

Token 99: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005267076659947634
    2. '()' → logprob: -5.380267143249512
    3. ')' → logprob: -7.630267143249512
    4. ' ())' → logprob: -9.255267143249512
    5. '().' → logprob: -10.880267143249512
    6. '())
' → logprob: -11.255267143249512
    7. ' )' → logprob: -11.255267143249512
    8. '()))' → logprob: -11.380267143249512
    9. '(' → logprob: -13.005267143249512
    10. '')' → logprob: -13.380267143249512

Token 100: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00030281138606369495
    2. 'grid' → logprob: -8.500303268432617
    3. '       ' → logprob: -9.750303268432617
    4. ' grid' → logprob: -10.625303268432617
    5. '               ' → logprob: -12.125303268432617
    6. '```' → logprob: -13.125303268432617
    7. '          ' → logprob: -13.250303268432617
    8. '(grid' → logprob: -13.625303268432617
    9. '.grid' → logprob: -14.125303268432617
    10. '		' → logprob: -14.250303268432617

Token 101: ' grid' (ID: 10586)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010869307443499565
    2. ' grid' → logprob: -5.26086950302124
    3. 'grid' (adapté à ' grid') → logprob: -5.76086950302124
    4. '       ' → logprob: -6.13586950302124
    5. '   ' → logprob: -9.260869026184082
    6. '<|end|>' → logprob: -9.885869026184082
    7. ' row' → logprob: -10.510869026184082
    8. ' ' → logprob: -10.635869026184082
    9. '          ' → logprob: -11.010869026184082
    10. '    ' → logprob: -11.635869026184082

Token 102: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.009786547161638737
    2. '.' → logprob: -4.634786605834961
    3. ' .' → logprob: -10.759786605834961
    4. '.app' → logprob: -12.884786605834961
    5. '<|end|>' → logprob: -12.884786605834961
    6. '.ap' → logprob: -13.634786605834961
    7. '.extend' → logprob: -13.759786605834961
    8. ').' → logprob: -14.509786605834961
    9. '.setdefault' → logprob: -14.884786605834961
    10. '.Append' → logprob: -15.009786605834961

Token 103: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -13.125003814697266
    3. 'row' → logprob: -14.500003814697266
    4. ' (' → logprob: -14.750003814697266
    5. ' row' → logprob: -14.750003814697266
    6. '(rows' → logprob: -18.250003814697266
    7. '(
' → logprob: -19.125003814697266
    8. ',row' → logprob: -19.625003814697266
    9. '=row' → logprob: -20.250003814697266
    10. '(Row' → logprob: -20.375003814697266

Token 104: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009243228123523295
    2. ')
' → logprob: -7.125924110412598
    3. '       ' → logprob: -9.125924110412598
    4. '   ' → logprob: -12.250924110412598
    5. '<|end|>' → logprob: -12.750924110412598
    6. ' )' → logprob: -13.625924110412598
    7. ')return' → logprob: -14.375924110412598
    8. ')
' → logprob: -15.125924110412598
    9. ')n' → logprob: -15.375924110412598
    10. '<|end|>' → logprob: -16.000925064086914

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032771718688309193
    2. '   ' → logprob: -5.75327730178833
    3. '<|end|>' → logprob: -9.503276824951172
    4. '```' → logprob: -11.628276824951172
    5. ' ' → logprob: -13.003276824951172
    6. '           ' → logprob: -13.253276824951172
    7. '      ' → logprob: -13.253276824951172
    8. '	' → logprob: -13.753276824951172
    9. '
' → logprob: -13.753276824951172
    10. '	   ' → logprob: -13.753276824951172

Token 106: ' box' (ID: 5506)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32091525197029114
    2. 'box' (adapté à ' box') → logprob: -1.3209152221679688
    3. ' box' → logprob: -5.070915222167969
    4. '       ' → logprob: -7.070915222167969
    5. ' ' → logprob: -8.695915222167969
    6. '	box' → logprob: -8.820915222167969
    7. '  ' → logprob: -9.195915222167969
    8. '
' → logprob: -10.820915222167969
    9. '    
' → logprob: -11.070915222167969
    10. '```' → logprob: -11.570915222167969

Token 107: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0004921489744447172
    2. '.' → logprob: -7.625492095947266
    3. 'append' → logprob: -13.625492095947266
    4. '.app' → logprob: -14.125492095947266
    5. '.add' → logprob: -14.250492095947266
    6. '.ap' → logprob: -14.625492095947266
    7. '.extend' → logprob: -14.750492095947266
    8. '.push' → logprob: -15.375492095947266
    9. '.Append' → logprob: -16.375492095947266
    10. ').' → logprob: -16.375492095947266

Token 108: '(grid' (ID: 51818)
  Prédit: '(grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -3.128163257315464e-07
    2. 'grid' → logprob: -16.25
    3. '(' → logprob: -16.625
    4. '(Grid' → logprob: -19.25
    5. '(gr' → logprob: -20.25
    6. '(g' → logprob: -20.25
    7. ' grid' → logprob: -20.625
    8. '(
' → logprob: -21.25
    9. '/grid' → logprob: -21.75
    10. ' (' → logprob: -21.75

Token 109: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.2617008400848135e-05
    2. '   ' → logprob: -10.875032424926758
    3. ')
' → logprob: -11.875032424926758
    4. '<|end|>' → logprob: -12.500032424926758
    5. ' )' → logprob: -14.000032424926758
    6. ')return' → logprob: -14.750032424926758
    7. '[' → logprob: -15.875032424926758
    8. ']' → logprob: -15.875032424926758
    9. '#' → logprob: -15.875032424926758
    10. '```' → logprob: -16.000032424926758

Token 110: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6404992938041687
    2. '<|end|>' → logprob: -0.7654992938041687
    3. '
' → logprob: -6.390499114990234
    4. '#' → logprob: -6.390499114990234
    5. '<|end|>' → logprob: -6.640499114990234
    6. '    
' → logprob: -7.265499114990234
    7. '```' → logprob: -7.390499114990234
    8. 'for' → logprob: -7.890499114990234
    9. ' for' → logprob: -8.515499114990234
    10. 'print' → logprob: -8.515499114990234

Token 111: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09952487796545029
    2. '    
' → logprob: -3.349524974822998
    3. '        
' → logprob: -4.349524974822998
    4. 'input' → logprob: -4.474524974822998
    5. '#' (adapté à ' #') → logprob: -4.849524974822998
    6. '
' → logprob: -5.099524974822998
    7. '<|end|>' → logprob: -5.349524974822998
    8. 'while' → logprob: -5.724524974822998
    9. '       ' → logprob: -5.849524974822998
    10. 'for' → logprob: -6.849524974822998

Token 112: ' lire' (ID: 46082)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.4439904689788818
    2. '   ' → logprob: -1.6939904689788818
    3. '<|end|>' → logprob: -1.8189904689788818
    4. 'input' → logprob: -2.443990468978882
    5. '#' → logprob: -2.818990468978882
    6. ' while' → logprob: -3.068990468978882
    7. '
' → logprob: -3.193990468978882
    8. '<|end|>' → logprob: -3.318990468978882
    9. 'line' → logprob: -3.568990468978882
    10. 'continue' → logprob: -3.943990468978882

Token 113: ' ligne' (ID: 19583)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.1594959497451782
    2. 'input' → logprob: -1.2844959497451782
    3. ' une' → logprob: -1.6594959497451782
    4. '#' → logprob: -2.4094958305358887
    5. 'le' → logprob: -4.409495830535889
    6. 'blank' → logprob: -4.409495830535889
    7. 'l' → logprob: -4.534495830535889
    8. 'un' → logprob: -4.909495830535889
    9. 'les' → logprob: -4.909495830535889
    10. 'empty' → logprob: -4.909495830535889

Token 114: ' vide' (ID: 21835)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.06429876387119293
    2. 'input' → logprob: -3.0642988681793213
    3. 'blank' → logprob: -5.564298629760742
    4. 'vid' → logprob: -5.814298629760742
    5. 'supp' → logprob: -6.064298629760742
    6. 'empty' → logprob: -6.314298629760742
    7. 'inter' → logprob: -6.814298629760742
    8. 'sup' → logprob: -6.814298629760742
    9. ' vide' → logprob: -7.564298629760742
    10. 'vider' → logprob: -8.314298629760742

Token 115: '
' (ID: 198)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.11574842780828476
    2. '_' → logprob: -2.615748405456543
    3. 'try' → logprob: -3.490748405456543
    4. 'line' → logprob: -5.740748405456543
    5. 'if' → logprob: -7.115748405456543
    6. 'while' → logprob: -7.365748405456543
    7. '(input' → logprob: -7.740748405456543
    8. '=input' → logprob: -8.365748405456543
    9. '   ' → logprob: -8.740748405456543
    10. '
' → logprob: -9.865748405456543

Token 116: '       ' (ID: 309)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06506096571683884
    2. '_' → logprob: -2.94006085395813
    3. 'try' → logprob: -4.815061092376709
    4. 'if' → logprob: -6.815061092376709
    5. 'line' → logprob: -7.690061092376709
    6. '(input' → logprob: -8.69006061553955
    7. 'while' → logprob: -8.94006061553955
    8. '
' → logprob: -9.81506061553955
    9. '   ' → logprob: -10.44006061553955
    10. '=input' → logprob: -10.56506061553955

Token 117: ' while' (ID: 2049)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0392824225127697
    2. '_' → logprob: -3.6642823219299316
    3. 'if' → logprob: -4.664282321929932
    4. 'line' → logprob: -6.289282321929932
    5. 'try' → logprob: -6.664282321929932
    6. 'blank' → logprob: -9.78928279876709
    7. ' input' → logprob: -9.91428279876709
    8. 'empty' → logprob: -9.91428279876709
    9. 'while' (adapté à ' while') → logprob: -10.03928279876709
    10. 'dummy' → logprob: -10.53928279876709

Token 118: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.16039249300956726
    2. 'True' → logprob: -1.9103925228118896
    3. '(True' → logprob: -8.910392761230469
    4. ' ' → logprob: -10.910392761230469
    5. ' input' → logprob: -11.910392761230469
    6. 'input' → logprob: -12.035392761230469
    7. '   ' → logprob: -14.660392761230469
    8. '=True' → logprob: -15.035392761230469
    9. '```' → logprob: -15.285392761230469
    10. ' (' → logprob: -15.285392761230469

Token 119: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08114621043205261
    2. ':
' → logprob: -3.206146240234375
    3. '           ' → logprob: -3.831146240234375
    4. ' line' → logprob: -4.331146240234375
    5. 'line' → logprob: -7.206146240234375
    6. '       ' → logprob: -7.456146240234375
    7. '(line' → logprob: -7.831146240234375
    8. '   ' → logprob: -7.831146240234375
    9. ':
' → logprob: -9.706146240234375
    10. '	line' → logprob: -9.831146240234375

Token 120: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1515023410320282
    2. '   ' → logprob: -2.5265023708343506
    3. '       ' → logprob: -3.4015023708343506
    4. ' line' → logprob: -3.9015023708343506
    5. 'line' → logprob: -5.5265021324157715
    6. '	line' → logprob: -7.0265021324157715
    7. 'empty' → logprob: -7.0265021324157715
    8. '```' → logprob: -8.65150260925293
    9. 'blank' → logprob: -9.27650260925293
    10. '_line' → logprob: -9.27650260925293

Token 121: ' try' (ID: 2075)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.15368925034999847
    2. 'empty' → logprob: -2.27868914604187
    3. 'blank' → logprob: -3.52868914604187
    4. 'tmp' → logprob: -5.528689384460449
    5. 'skip' → logprob: -6.028689384460449
    6. 'try' (adapté à ' try') → logprob: -6.653689384460449
    7. 'temp' → logprob: -6.778689384460449
    8. 'newline' → logprob: -7.778689384460449
    9. 'next' → logprob: -8.02868938446045
    10. 'l' → logprob: -8.02868938446045

Token 122: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06527763605117798
    2. ':
' → logprob: -3.190277576446533
    3. '               ' → logprob: -4.190277576446533
    4. '   ' → logprob: -5.065277576446533
    5. '           ' → logprob: -8.315278053283691
    6. '       ' → logprob: -9.315278053283691
    7. '```' → logprob: -9.815278053283691
    8. ' line' → logprob: -9.940278053283691
    9. 'line' → logprob: -9.940278053283691
    10. 'input' → logprob: -10.815278053283691

Token 123: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.054314740002155304
    2. '   ' → logprob: -3.1793148517608643
    3. ' line' → logprob: -4.929314613342285
    4. ':' → logprob: -5.929314613342285
    5. '       ' → logprob: -7.554314613342285
    6. ':
' → logprob: -8.554314613342285
    7. '           ' → logprob: -8.804314613342285
    8. '#line' → logprob: -9.054314613342285
    9. 'line' → logprob: -9.054314613342285
    10. '	line' → logprob: -10.304314613342285

Token 124: ' blank' (ID: 16953)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.437407910823822
    2. 'line' → logprob: -1.5624079704284668
    3. 'empty' → logprob: -2.937407970428467
    4. ' line' → logprob: -3.187407970428467
    5. '                   ' → logprob: -3.812407970428467
    6. 'blank' (adapté à ' blank') → logprob: -4.562407970428467
    7. '   ' → logprob: -4.812407970428467
    8. 'newline' → logprob: -5.437407970428467
    9. 'next' → logprob: -6.937407970428467
    10. '           ' → logprob: -6.937407970428467

Token 125: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6021938920021057
    2. ' =' → logprob: -0.8521938920021057
    3. '_line' → logprob: -3.977193832397461
    4. 'line' → logprob: -5.602193832397461
    5. '=line' → logprob: -5.727193832397461
    6. ' line' → logprob: -8.727193832397461
    7. '_' → logprob: -9.977193832397461
    8. '	line' → logprob: -11.977193832397461
    9. '=input' → logprob: -12.977193832397461
    10. 'Line' → logprob: -12.977193832397461

Token 126: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00672804145142436
    2. ' input' → logprob: -5.006728172302246
    3. '   ' → logprob: -11.881728172302246
    4. '                   ' → logprob: -12.131728172302246
    5. '               ' → logprob: -15.256728172302246
    6. '	input' → logprob: -17.00672721862793
    7. '=input' → logprob: -17.38172721862793
    8. '(input' → logprob: -17.88172721862793
    9. '           ' → logprob: -18.00672721862793
    10. ' ' → logprob: -18.50672721862793

Token 127: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10022522509098053
    2. '()
' → logprob: -2.3502252101898193
    3. '()

' → logprob: -11.850225448608398
    4. '()
' → logprob: -12.100225448608398
    5. ')' → logprob: -12.850225448608398
    6. '())' → logprob: -13.350225448608398
    7. '()`' → logprob: -14.850225448608398
    8. '().' → logprob: -14.850225448608398
    9. '())
' → logprob: -15.100225448608398
    10. ')
' → logprob: -16.2252254486084

Token 128: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02214701659977436
    2. '           ' → logprob: -3.8971469402313232
    3. 'except' → logprob: -7.022147178649902
    4. ' except' → logprob: -7.897147178649902
    5. '                   ' → logprob: -9.022147178649902
    6. '<|end|>' → logprob: -9.522147178649902
    7. '<|end|>' → logprob: -9.522147178649902
    8. '       ' → logprob: -11.022147178649902
    9. '	except' → logprob: -11.147147178649902
    10. '	           ' → logprob: -11.647147178649902

Token 129: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.050021909177303314
    2. 'if' (adapté à ' if') → logprob: -3.3000218868255615
    3. ' if' → logprob: -4.550022125244141
    4. '           ' → logprob: -6.675022125244141
    5. 'except' → logprob: -9.92502212524414
    6. 'break' → logprob: -11.30002212524414
    7. '                   ' → logprob: -11.92502212524414
    8. '   ' → logprob: -12.55002212524414
    9. '       ' → logprob: -12.92502212524414
    10. ' except' → logprob: -13.67502212524414

Token 130: ' blank' (ID: 16953)
  Prédit: ' blank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blank' → logprob: -0.4777762293815613
    2. 'blank' → logprob: -0.9777762293815613
    3. '(blank' → logprob: -5.602776050567627
    4. ' not' → logprob: -12.852776527404785
    5. 'not' → logprob: -14.352776527404785
    6. 'bl' → logprob: -14.477776527404785
    7. ' ' → logprob: -14.852776527404785
    8. '_blank' → logprob: -15.227776527404785
    9. '.blank' → logprob: -15.227776527404785
    10. '   ' → logprob: -16.35277557373047

Token 131: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.43822959065437317
    2. '==' → logprob: -1.0632295608520508
    3. ' ==' → logprob: -5.063229560852051
    4. 'strip' → logprob: -5.938229560852051
    5. '.' → logprob: -7.688229560852051
    6. '=' → logprob: -11.18822956085205
    7. '.trim' → logprob: -11.68822956085205
    8. ' strip' → logprob: -11.81322956085205
    9. ' .' → logprob: -12.06322956085205
    10. '()==' → logprob: -12.18822956085205

Token 132: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.042824577540159225
    2. '()==' → logprob: -3.2928245067596436
    3. '==' → logprob: -5.667824745178223
    4. '()!=' → logprob: -6.917824745178223
    5. ' ==' → logprob: -8.542824745178223
    6. '():' → logprob: -9.417824745178223
    7. ' ()' → logprob: -10.917824745178223
    8. '!=' → logprob: -11.167824745178223
    9. ' !=' → logprob: -11.292824745178223
    10. '():
' → logprob: -13.167824745178223

Token 133: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0024059813003987074
    2. ' ==' → logprob: -6.252406120300293
    3. '!=' → logprob: -8.127406120300293
    4. '()==' → logprob: -8.877406120300293
    5. ' !=' → logprob: -11.002406120300293
    6. '()' → logprob: -11.127406120300293
    7. ':' → logprob: -12.252406120300293
    8. '=' → logprob: -13.127406120300293
    9. ')==' → logprob: -13.752406120300293
    10. '===' → logprob: -14.127406120300293

Token 134: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.20148758590221405
    2. ''' → logprob: -1.7014875411987305
    3. ' '':
' → logprob: -10.07648754119873
    4. '''
' → logprob: -10.95148754119873
    5. '"":' → logprob: -12.45148754119873
    6. '""' → logprob: -13.07648754119873
    7. ' '' → logprob: -13.07648754119873
    8. ''',' → logprob: -13.20148754119873
    9. '':' → logprob: -13.70148754119873
    10. '   ' → logprob: -14.20148754119873

Token 135: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0013723729643970728
    2. ':
' → logprob: -7.376372337341309
    3. '               ' → logprob: -7.876372337341309
    4. ':' → logprob: -8.876372337341309
    5. 'break' → logprob: -9.751372337341309
    6. '                       ' → logprob: -9.876372337341309
    7. '           ' → logprob: -9.876372337341309
    8. '   ' → logprob: -10.751372337341309
    9. ',' → logprob: -11.126372337341309
    10. '                  ' → logprob: -11.751372337341309

Token 136: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1363178789615631
    2. ' break' → logprob: -2.3863179683685303
    3. 'break' (adapté à ' break') → logprob: -3.8863179683685303
    4. '                       ' → logprob: -4.511317729949951
    5. '   ' → logprob: -6.011317729949951
    6. '               ' → logprob: -7.261317729949951
    7. '           ' → logprob: -8.38631820678711
    8. '	break' → logprob: -8.51131820678711
    9. '       ' → logprob: -8.51131820678711
    10. '
' → logprob: -10.01131820678711

Token 137: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005557574797421694
    2. 'except' → logprob: -6.005557537078857
    3. '               ' → logprob: -6.380557537078857
    4. ' except' → logprob: -6.630557537078857
    5. '       ' → logprob: -10.505558013916016
    6. '	except' → logprob: -11.380558013916016
    7. ')' → logprob: -12.005558013916016
    8. ',' → logprob: -12.130558013916016
    9. '	       ' → logprob: -12.630558013916016
    10. '   ' → logprob: -12.755558013916016

Token 138: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004019514657557011
    2. 'except' → logprob: -5.879019737243652
    3. ' except' → logprob: -7.379019737243652
    4. '               ' → logprob: -7.504019737243652
    5. '       ' → logprob: -10.629019737243652
    6. ',' → logprob: -12.379019737243652
    7. ')' → logprob: -12.879019737243652
    8. '   ' → logprob: -13.129019737243652
    9. '	except' → logprob: -13.129019737243652
    10. '	       ' → logprob: -14.379019737243652

Token 139: ' except' (ID: 6384)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16921460628509521
    2. 'except' (adapté à ' except') → logprob: -2.5442147254943848
    3. ' except' → logprob: -3.0442147254943848
    4. '       ' → logprob: -3.5442147254943848
    5. '               ' → logprob: -7.669214725494385
    6. '   ' → logprob: -9.169214248657227
    7. '	except' → logprob: -10.544214248657227
    8. '          ' → logprob: -13.169214248657227
    9. ',' → logprob: -13.544214248657227
    10. '         ' → logprob: -13.669214248657227

Token 140: ':
' (ID: 734)
  Prédit: 'EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EOF' → logprob: -0.00317783304490149
    2. ' EOF' → logprob: -5.753177642822266
    3. 'Exception' → logprob: -16.753177642822266
    4. ':
' → logprob: -17.128177642822266
    5. 'End' → logprob: -18.253177642822266
    6. 'Stop' → logprob: -18.878177642822266
    7. '(' → logprob: -19.253177642822266
    8. ':' → logprob: -19.628177642822266
    9. 'EO' → logprob: -19.878177642822266
    10. 'Keyboard' → logprob: -20.753177642822266

Token 141: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015272959135472775
    2. ' break' → logprob: -4.765273094177246
    3. '           ' → logprob: -5.265273094177246
    4. 'break' → logprob: -8.015273094177246
    5. '   ' → logprob: -8.265273094177246
    6. '       ' → logprob: -8.390273094177246
    7. '	break' → logprob: -8.515273094177246
    8. ':' → logprob: -9.515273094177246
    9. ' ' → logprob: -9.640273094177246
    10. '                   ' → logprob: -9.765273094177246

Token 142: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.31477051973342896
    2. 'break' (adapté à ' break') → logprob: -1.3147704601287842
    3. '               ' → logprob: -6.689770698547363
    4. ' pass' → logprob: -9.064770698547363
    5. 'pass' → logprob: -9.564770698547363
    6. '           ' → logprob: -10.314770698547363
    7. '   ' → logprob: -10.564770698547363
    8. '                   ' → logprob: -11.814770698547363
    9. '	break' → logprob: -11.814770698547363
    10. ' ' → logprob: -13.439770698547363

Token 143: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038257911801338196
    2. '
' → logprob: -4.413258075714111
    3. '    
' → logprob: -4.538258075714111
    4. ')' → logprob: -5.663258075714111
    5. 'import' → logprob: -6.038258075714111
    6. 'from' → logprob: -6.163258075714111
    7. '        
' → logprob: -7.163258075714111
    8. '#' → logprob: -7.288258075714111
    9. '            
' → logprob: -7.413258075714111
    10. 'visited' → logprob: -7.663258075714111

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07309272140264511
    2. '#' → logprob: -4.073092937469482
    3. '    
' → logprob: -4.323092937469482
    4. '
' → logprob: -4.698092937469482
    5. 'print' → logprob: -5.323092937469482
    6. 'import' → logprob: -5.448092937469482
    7. 'for' → logprob: -5.698092937469482
    8. 'from' → logprob: -5.823092937469482
    9. '```' → logprob: -6.573092937469482
    10. '<|end|>' → logprob: -7.073092937469482

Token 145: ' #' (ID: 1069)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.083687424659729
    2. '   ' → logprob: -1.958687424659729
    3. 'dist' → logprob: -2.8336873054504395
    4. 'visited' → logprob: -2.8336873054504395
    5. 'moves' → logprob: -3.0836873054504395
    6. 'result' → logprob: -3.0836873054504395
    7. 'path' → logprob: -3.2086873054504395
    8. '#' (adapté à ' #') → logprob: -3.3336873054504395
    9. 'steps' → logprob: -3.3336873054504395
    10. 'found' → logprob: -4.2086873054504395

Token 146: ' lire' (ID: 46082)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6674439311027527
    2. 'dist' → logprob: -1.6674439907073975
    3. 'start' → logprob: -2.7924439907073975
    4. 'dp' → logprob: -3.4174439907073975
    5. '#' → logprob: -3.6674439907073975
    6. 'result' → logprob: -3.9174439907073975
    7. 'distance' → logprob: -3.9174439907073975
    8. 'from' → logprob: -4.042443752288818
    9. 'path' → logprob: -4.417443752288818
    10. 'for' → logprob: -4.542443752288818

Token 147: ' M' (ID: 391)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.9864389300346375
    2. 'moves' → logprob: -2.3614389896392822
    3. 'positions' → logprob: -2.8614389896392822
    4. ' start' → logprob: -2.8614389896392822
    5. 'cases' → logprob: -2.9864389896392822
    6. '#' → logprob: -3.2364389896392822
    7. 'entr' → logprob: -3.3614389896392822
    8. 'steps' → logprob: -4.111438751220703
    9. 'pos' → logprob: -4.236438751220703
    10. 'S' → logprob: -4.236438751220703

Token 148: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6236088275909424
    2. '   ' → logprob: -1.2486088275909424
    3. '=' → logprob: -1.7486088275909424
    4. 'M' → logprob: -6.248608589172363
    5. ' M' → logprob: -7.498608589172363
    6. '    ' → logprob: -8.998608589172363
    7. ' ' → logprob: -9.248608589172363
    8. '  ' → logprob: -9.498608589172363
    9. ',' → logprob: -9.873608589172363
    10. 'while' → logprob: -10.248608589172363

Token 149: ' et' (ID: 859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6396676301956177
    2. '=' → logprob: -0.7646676301956177
    3. 'M' → logprob: -5.639667510986328
    4. '   ' → logprob: -6.014667510986328
    5. 'while' → logprob: -7.639667510986328
    6. ' M' → logprob: -8.764667510986328
    7. '<|end|>' → logprob: -9.389667510986328
    8. ',' → logprob: -9.514667510986328
    9. '=M' → logprob: -9.639667510986328
    10. '<|end|>' → logprob: -10.264667510986328

Token 150: ' a' (ID: 261)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.05551885813474655
    2. ' M' → logprob: -3.055518865585327
    3. 'S' → logprob: -7.618018627166748
    4. 'positions' → logprob: -7.618018627166748
    5. 'Q' → logprob: -7.993018627166748
    6. 'N' → logprob: -8.055519104003906
    7. 'm' → logprob: -8.118019104003906
    8. 'points' → logprob: -8.243019104003906
    9. 'C' → logprob: -8.305519104003906
    10. 'K' → logprob: -8.430519104003906

Token 151: '_i' (ID: 10853)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9504799246788025
    2. ' =' → logprob: -1.4504799842834473
    3. '2' → logprob: -1.8254799842834473
    4. 'ctions' → logprob: -2.8254799842834473
    5. 'nd' → logprob: -4.075479984283447
    6. 'M' → logprob: -4.075479984283447
    7. 'fter' → logprob: -4.075479984283447
    8. 'rray' → logprob: -4.575479984283447
    9. 'ction' → logprob: -4.700479984283447
    10. '=' → logprob: -4.950479984283447

Token 152: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08653033524751663
    2. 'M' → logprob: -2.9615304470062256
    3. ' M' → logprob: -3.9615304470062256
    4. 'while' → logprob: -6.2115302085876465
    5. '    
' → logprob: -6.7115302085876465
    6. 'm' → logprob: -6.8365302085876465
    7. ' =' → logprob: -6.8365302085876465
    8. '
' → logprob: -6.9615302085876465
    9. ' while' → logprob: -7.0865302085876465
    10. ' line' → logprob: -7.3365302085876465

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03677154332399368
    2. 'M' → logprob: -3.411771535873413
    3. ' M' → logprob: -6.286771774291992
    4. '    
' → logprob: -7.661771774291992
    5. '
' → logprob: -8.161771774291992
    6. '    ' → logprob: -9.286771774291992
    7. 'while' → logprob: -9.411771774291992
    8. 'm' → logprob: -9.786771774291992
    9. '  ' → logprob: -10.161771774291992
    10. ' =' → logprob: -10.661771774291992

Token 154: ' while' (ID: 2049)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.3870869576931
    2. ' M' → logprob: -1.6370869874954224
    3. '   ' → logprob: -2.137086868286133
    4. ' line' → logprob: -5.637086868286133
    5. 'line' → logprob: -5.762086868286133
    6. 'm' → logprob: -7.387086868286133
    7. 'while' (adapté à ' while') → logprob: -7.762086868286133
    8. ' while' → logprob: -8.512086868286133
    9. ' parts' → logprob: -8.887086868286133
    10. '  ' → logprob: -9.887086868286133

Token 155: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3868761360645294
    2. ' True' → logprob: -1.136876106262207
    3. '(True' → logprob: -13.636876106262207
    4. 'true' → logprob: -13.636876106262207
    5. 'len' → logprob: -14.636876106262207
    6. 'N' → logprob: -14.761876106262207
    7. ' ' → logprob: -14.886876106262207
    8. 'line' → logprob: -15.011876106262207
    9. ' line' → logprob: -15.136876106262207
    10. ' not' → logprob: -15.136876106262207

Token 156: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003659810870885849
    2. '       ' → logprob: -6.128659725189209
    3. ':
' → logprob: -6.628659725189209
    4. '   ' → logprob: -9.003660202026367
    5. ',' → logprob: -11.503660202026367
    6. ' :' → logprob: -12.253660202026367
    7. '):' → logprob: -12.628660202026367
    8. '=' → logprob: -12.878660202026367
    9. 's' → logprob: -13.378660202026367
    10. ':

' → logprob: -13.878660202026367

Token 157: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026554908603429794
    2. '   ' → logprob: -3.651554822921753
    3. ' try' → logprob: -8.776555061340332
    4. '    ' → logprob: -10.526555061340332
    5. 'try' → logprob: -10.526555061340332
    6. '           ' → logprob: -11.651555061340332
    7. '	   ' → logprob: -12.026555061340332
    8. '     ' → logprob: -12.151555061340332
    9. '      ' → logprob: -12.276555061340332
    10. ' ' → logprob: -12.526555061340332

Token 158: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.2581416070461273
    2. '   ' → logprob: -1.7581416368484497
    3. 'try' → logprob: -3.25814151763916
    4. '       ' → logprob: -4.63314151763916
    5. ' line' → logprob: -5.25814151763916
    6. 'M' → logprob: -6.75814151763916
    7. ' try' → logprob: -8.00814151763916
    8. 'm' → logprob: -8.75814151763916
    9. '           ' → logprob: -10.25814151763916
    10. '	line' → logprob: -11.00814151763916

Token 159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04300697147846222
    2. '=' → logprob: -3.1680068969726562
    3. '   ' → logprob: -12.418006896972656
    4. 's' → logprob: -12.918006896972656
    5. '=line' → logprob: -14.668006896972656
    6. ' ' → logprob: -15.043006896972656
    7. '    ' → logprob: -16.043006896972656
    8. ' =
' → logprob: -16.418006896972656
    9. '       ' → logprob: -16.543006896972656
    10. '=input' → logprob: -16.793006896972656

Token 160: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5231387615203857
    2. ' input' → logprob: -0.8981387615203857
    3. '   ' → logprob: -11.773138999938965
    4. ' ' → logprob: -12.773138999938965
    5. '(input' → logprob: -13.273138999938965
    6. '	input' → logprob: -14.023138999938965
    7. '=input' → logprob: -15.148138999938965
    8. '<input' → logprob: -15.335638999938965
    9. '_input' → logprob: -15.710638999938965
    10. '  ' → logprob: -15.898138999938965

Token 161: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02563205547630787
    2. '().' → logprob: -4.025631904602051
    3. '()
' → logprob: -4.900631904602051
    4. '()

' → logprob: -12.65063190460205
    5. '()
' → logprob: -12.77563190460205
    6. '(' → logprob: -13.27563190460205
    7. '())' → logprob: -13.52563190460205
    8. ')' → logprob: -14.15063190460205
    9. '()`' → logprob: -14.65063190460205
    10. ' ()' → logprob: -14.90063190460205

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05247693881392479
    2. '.strip' → logprob: -3.1774768829345703
    3. '<|end|>' → logprob: -5.67747688293457
    4. '   ' → logprob: -6.05247688293457
    5. '<|end|>' → logprob: -7.17747688293457
    6. ' =' → logprob: -8.05247688293457
    7. '        
' → logprob: -8.17747688293457
    8. '.rstrip' → logprob: -8.30247688293457
    9. ' ' → logprob: -8.67747688293457
    10. '=' → logprob: -8.67747688293457

Token 163: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5789198279380798
    2. 'if' (adapté à ' if') → logprob: -1.0789198875427246
    3. '       ' → logprob: -2.3289198875427246
    4. '   ' → logprob: -6.203919887542725
    5. '	if' → logprob: -10.203919410705566
    6. '<|end|>' → logprob: -10.953919410705566
    7. '<|end|>' → logprob: -11.203919410705566
    8. '    ' → logprob: -11.453919410705566
    9. ' ' → logprob: -12.078919410705566
    10. '.strip' → logprob: -12.453919410705566

Token 164: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.2254316359758377
    2. 'line' → logprob: -1.6004316806793213
    3. ' ' → logprob: -12.350431442260742
    4. '   ' → logprob: -12.475431442260742
    5. '	line' → logprob: -13.225431442260742
    6. 'strip' → logprob: -13.475431442260742
    7. '[line' → logprob: -13.725431442260742
    8. '#line' → logprob: -13.725431442260742
    9. 'len' → logprob: -13.850431442260742
    10. ' len' → logprob: -13.975431442260742

Token 165: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0002783783129416406
    2. '.' → logprob: -8.87527847290039
    3. 'strip' → logprob: -9.50027847290039
    4. ' .' → logprob: -10.87527847290039
    5. ' !=' → logprob: -11.50027847290039
    6. '.startswith' → logprob: -11.62527847290039
    7. '.trim' → logprob: -11.75027847290039
    8. '!=' → logprob: -12.37527847290039
    9. ' strip' → logprob: -12.75027847290039
    10. '!='' → logprob: -13.00027847290039

Token 166: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06632450968027115
    2. '()!=' → logprob: -3.066324472427368
    3. ' !=' → logprob: -4.441324710845947
    4. '!=' → logprob: -5.191324710845947
    5. '():' → logprob: -9.441324234008789
    6. '!='' → logprob: -9.691324234008789
    7. '()==' → logprob: -10.441324234008789
    8. '():
' → logprob: -10.941324234008789
    9. '==' → logprob: -11.316324234008789
    10. '   ' → logprob: -11.441324234008789

Token 167: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.2674141228199005
    2. ' !=' → logprob: -1.5174140930175781
    3. '!='' → logprob: -4.892414093017578
    4. ':' → logprob: -5.517414093017578
    5. '==' → logprob: -5.642414093017578
    6. '()!=' → logprob: -9.267414093017578
    7. '=' → logprob: -10.017414093017578
    8. '!==' → logprob: -10.017414093017578
    9. '   ' → logprob: -10.267414093017578
    10. ' ==' → logprob: -10.767414093017578

Token 168: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.02324792370200157
    2. ''' → logprob: -3.7732479572296143
    3. '':' → logprob: -14.523247718811035
    4. '''
' → logprob: -14.523247718811035
    5. ' '':
' → logprob: -14.773247718811035
    6. ''',' → logprob: -14.773247718811035
    7. '''.' → logprob: -14.898247718811035
    8. '""' → logprob: -16.14824867248535
    9. '"":' → logprob: -16.77324867248535
    10. ''s' → logprob: -17.14824867248535

Token 169: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.240736722946167
    2. '           ' → logprob: -1.615736722946167
    3. '       ' → logprob: -4.240736961364746
    4. ':
' → logprob: -7.615736961364746
    5. '   ' → logprob: -9.365736961364746
    6. '=' → logprob: -9.990736961364746
    7. ',' → logprob: -9.990736961364746
    8. '):' → logprob: -10.115736961364746
    9. 'break' → logprob: -10.740736961364746
    10. ' :' → logprob: -11.115736961364746

Token 170: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18284651637077332
    2. 'break' (adapté à ' break') → logprob: -2.3078465461730957
    3. ' break' → logprob: -2.8078465461730957
    4. '       ' → logprob: -5.057846546173096
    5. '               ' → logprob: -8.057846069335938
    6. '   ' → logprob: -8.057846069335938
    7. '	break' → logprob: -8.557846069335938
    8. ':' → logprob: -10.557846069335938
    9. ' M' → logprob: -10.557846069335938
    10. 'M' → logprob: -11.057846069335938

Token 171: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18331703543663025
    2. 'M' → logprob: -1.9333170652389526
    3. '
' → logprob: -4.183317184448242
    4. '    
' → logprob: -5.558317184448242
    5. ' M' → logprob: -6.058317184448242
    6. 'm' → logprob: -7.183317184448242
    7. '   
' → logprob: -8.558317184448242
    8. 'a' → logprob: -9.308317184448242
    9. 'tokens' → logprob: -9.808317184448242
    10. '  
' → logprob: -9.933317184448242

Token 172: '   ' (ID: 271)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.3617732524871826
    2. '   ' → logprob: -1.2367732524871826
    3. ' M' → logprob: -5.111773490905762
    4. '
' → logprob: -5.736773490905762
    5. 'parts' → logprob: -6.236773490905762
    6. 'm' → logprob: -6.861773490905762
    7. ' parts' → logprob: -7.361773490905762
    8. 'tokens' → logprob: -8.861773490905762
    9. '    
' → logprob: -9.111773490905762
    10. '  ' → logprob: -11.236773490905762

Token 173: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' (adapté à ' M') → logprob: -0.4147609770298004
    2. '   ' → logprob: -1.414760947227478
    3. ' M' → logprob: -2.4147610664367676
    4. ' parts' → logprob: -5.289761066436768
    5. 'parts' → logprob: -6.789761066436768
    6. 'm' → logprob: -8.53976058959961
    7. ' tokens' → logprob: -8.78976058959961
    8. 'tokens' → logprob: -8.78976058959961
    9. '    
' → logprob: -9.03976058959961
    10. 'a' → logprob: -9.41476058959961

Token 174: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05489109084010124
    2. '1' → logprob: -3.3048911094665527
    3. '=' → logprob: -4.429891109466553
    4. '_line' → logprob: -6.179891109466553
    5. 's' → logprob: -6.804891109466553
    6. '_parts' → logprob: -7.554891109466553
    7. '_' → logprob: -8.429890632629395
    8. 'line' → logprob: -8.804890632629395
    9. '   ' → logprob: -8.804890632629395
    10. '_lines' → logprob: -9.054890632629395

Token 175: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.486205518245697
    2. ' =' → logprob: -1.2362055778503418
    3. ',' → logprob: -2.361205577850342
    4. ' ,' → logprob: -8.611205101013184
    5. ' ' → logprob: -10.986205101013184
    6. '   ' → logprob: -11.361205101013184
    7. '=int' → logprob: -11.486205101013184
    8. '=line' → logprob: -11.611205101013184
    9. '_' → logprob: -12.236205101013184
    10. 's' → logprob: -12.486205101013184

Token 176: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03743777424097061
    2. ' int' → logprob: -3.537437677383423
    3. 'line' → logprob: -5.537437915802002
    4. 'list' → logprob: -5.787437915802002
    5. ' line' → logprob: -7.662437915802002
    6. ' list' → logprob: -8.662437438964844
    7. 'float' → logprob: -11.537437438964844
    8. '[int' → logprob: -13.412437438964844
    9. ' float' → logprob: -15.162437438964844
    10. 'input' → logprob: -15.162437438964844

Token 177: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -2.7729658540920354e-05
    2. '(' → logprob: -10.500027656555176
    3. 'line' → logprob: -16.375028610229492
    4. '(Line' → logprob: -18.125028610229492
    5. '=line' → logprob: -18.500028610229492
    6. '[line' → logprob: -18.875028610229492
    7. '(lines' → logprob: -19.250028610229492
    8. '(
' → logprob: -20.000028610229492
    9. ' line' → logprob: -20.375028610229492
    10. ' (' → logprob: -20.500028610229492

Token 178: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.2994620242971e-06
    2. ')
' → logprob: -12.750008583068848
    3. '[' → logprob: -13.250008583068848
    4. '())' → logprob: -13.750008583068848
    5. ' )' → logprob: -13.875008583068848
    6. '.strip' → logprob: -14.250008583068848
    7. '()' → logprob: -15.125008583068848
    8. ')#' → logprob: -15.625008583068848
    9. '))' → logprob: -16.12500762939453
    10. '   ' → logprob: -16.75000762939453

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7151573896408081
    2. '<|end|>' → logprob: -0.9651573896408081
    3. ')' → logprob: -3.3401575088500977
    4. 'a' → logprob: -3.4651575088500977
    5. '    
' → logprob: -4.215157508850098
    6. 'for' → logprob: -4.590157508850098
    7. '
' → logprob: -4.840157508850098
    8. '#' → logprob: -4.965157508850098
    9. ',' → logprob: -5.715157508850098
    10. '<|end|>' → logprob: -5.965157508850098

Token 180: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.05799100175499916
    2. 'moves' → logprob: -3.5579910278320312
    3. 'steps' → logprob: -4.932991027832031
    4. 'actions' → logprob: -5.807991027832031
    5. ' a' → logprob: -6.057991027832031
    6. 'positions' → logprob: -6.432991027832031
    7. ' moves' → logprob: -6.682991027832031
    8. '   ' → logprob: -6.807991027832031
    9. 'ai' → logprob: -6.932991027832031
    10. 'M' → logprob: -6.932991027832031

Token 181: '_list' (ID: 4162)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.179220512509346
    2. '_' → logprob: -1.9292205572128296
    3. ' =' → logprob: -4.304220676422119
    4. 's' → logprob: -6.054220676422119
    5. 'i' → logprob: -7.554220676422119
    6. '=' → logprob: -7.929220676422119
    7. '_list' → logprob: -8.179220199584961
    8. '_idx' → logprob: -8.304220199584961
    9. '_s' → logprob: -8.304220199584961
    10. 'r' → logprob: -8.679220199584961

Token 182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28117257356643677
    2. '=' → logprob: -1.406172513961792
    3. '=[]' → logprob: -11.406172752380371
    4. '[' → logprob: -12.156172752380371
    5. '_' → logprob: -13.031172752380371
    6. ' =[' → logprob: -14.531172752380371
    7. '[]' → logprob: -14.656172752380371
    8. 'space' → logprob: -15.156172752380371
    9. ' ' → logprob: -15.156172752380371
    10. ' ' → logprob: -15.406172752380371

Token 183: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.016917677596211433
    2. ' []' → logprob: -4.266917705535889
    3. 'list' → logprob: -6.516917705535889
    4. '[' → logprob: -6.766917705535889
    5. '[list' → logprob: -9.39191722869873
    6. '[]
' → logprob: -11.39191722869873
    7. ' [' → logprob: -11.51691722869873
    8. ' list' → logprob: -11.89191722869873
    9. '[int' → logprob: -12.51691722869873
    10. '[input' → logprob: -12.76691722869873

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21882645785808563
    2. '<|end|>' → logprob: -2.7188265323638916
    3. ' for' → logprob: -2.8438265323638916
    4. 'for' → logprob: -3.2188265323638916
    5. '[' → logprob: -4.4688262939453125
    6. '[]' → logprob: -5.2188262939453125
    7. ' ' → logprob: -5.2188262939453125
    8. '  ' → logprob: -6.0938262939453125
    9. ' =' → logprob: -6.3438262939453125
    10. '<|end|>' → logprob: -6.8438262939453125

Token 185: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07900303602218628
    2. ' for' → logprob: -2.579003095626831
    3. 'while' → logprob: -10.07900333404541
    4. '[' → logprob: -10.32900333404541
    5. '   ' → logprob: -10.70400333404541
    6. '[]' → logprob: -12.57900333404541
    7. ' while' → logprob: -12.70400333404541
    8. ' 
' → logprob: -13.07900333404541
    9. ' ' → logprob: -13.57900333404541
    10. '_' → logprob: -13.70400333404541

Token 186: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.005613999906927347
    2. 'M' → logprob: -5.755613803863525
    3. ' len' → logprob: -6.630613803863525
    4. ' ' → logprob: -7.130613803863525
    5. ' a' → logprob: -8.630614280700684
    6. 'len' → logprob: -10.255614280700684
    7. ' not' → logprob: -10.630614280700684
    8. ' True' → logprob: -11.005614280700684
    9. ' case' → logprob: -11.130614280700684
    10. 'a' → logprob: -11.130614280700684

Token 187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00025430647656321526
    2. '>' → logprob: -9.12525463104248
    3. '_' → logprob: -9.75025463104248
    4. '==' → logprob: -10.25025463104248
    5. '_list' → logprob: -10.62525463104248
    6. '_num' → logprob: -12.50025463104248
    7. '<' → logprob: -12.50025463104248
    8. '=' → logprob: -12.50025463104248
    9. '```' → logprob: -13.00025463104248
    10. ' >' → logprob: -13.37525463104248

Token 188: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0700155720114708
    2. '>' → logprob: -2.6950156688690186
    3. ' ==' → logprob: -10.070015907287598
    4. ' <' → logprob: -11.320015907287598
    5. ':' → logprob: -11.570015907287598
    6. ' !=' → logprob: -12.070015907287598
    7. '==' → logprob: -12.695015907287598
    8. ' >=' → logprob: -13.445015907287598
    9. ' ' → logprob: -13.570015907287598
    10. '=' → logprob: -13.945015907287598

Token 189: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02054515667259693
    2. ' ' → logprob: -3.895545244216919
    3. '1' → logprob: -13.77054500579834
    4. '=' → logprob: -14.39554500579834
    5. '   ' → logprob: -14.39554500579834
    6. '  ' → logprob: -14.39554500579834
    7. '>' → logprob: -14.77054500579834
    8. 'len' → logprob: -17.395545959472656
    9. '    ' → logprob: -17.395545959472656
    10. '```' → logprob: -17.520545959472656

Token 190: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019295861711725593
    2. ' ' → logprob: -6.251929759979248
    3. '1' → logprob: -14.87692928314209
    4. '  ' → logprob: -15.37692928314209
    5. '   ' → logprob: -15.68942928314209
    6. 'len' → logprob: -16.001930236816406
    7. '    ' → logprob: -17.189430236816406
    8. '5' → logprob: -18.126930236816406
    9. ' ' → logprob: -18.126930236816406
    10. '```' → logprob: -18.126930236816406

Token 191: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16051556169986725
    2. ':
' → logprob: -1.910515546798706
    3. '   ' → logprob: -8.285515785217285
    4. ' :
' → logprob: -11.160515785217285
    5. ',' → logprob: -11.285515785217285
    6. ' :' → logprob: -12.035515785217285
    7. ':
' → logprob: -13.785515785217285
    8. ' for' → logprob: -13.785515785217285
    9. '       ' → logprob: -13.910515785217285
    10. ':

' → logprob: -14.035515785217285

Token 192: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7058084011077881
    2. '       ' → logprob: -0.8308084011077881
    3. '   ' → logprob: -3.080808401107788
    4. ':
' → logprob: -3.955808401107788
    5. ' for' → logprob: -6.080808639526367
    6. '<|end|>' → logprob: -6.955808639526367
    7. '    ' → logprob: -7.455808639526367
    8. '	   ' → logprob: -8.330808639526367
    9. ',' → logprob: -8.455808639526367
    10. ' :' → logprob: -8.705808639526367

Token 193: ' while' (ID: 2049)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03983806073665619
    2. 'for' → logprob: -4.039837837219238
    3. ' while' → logprob: -4.414837837219238
    4. ' line' → logprob: -5.039837837219238
    5. '   ' → logprob: -6.789837837219238
    6. '       ' → logprob: -7.414837837219238
    7. 'while' (adapté à ' while') → logprob: -7.414837837219238
    8. '    ' → logprob: -8.289837837219238
    9. ' a' → logprob: -8.664837837219238
    10. 'line' → logprob: -9.664837837219238

Token 194: ' True' (ID: 6432)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.20446822047233582
    2. 'len' → logprob: -1.7044682502746582
    3. 'True' → logprob: -6.454468250274658
    4. ' True' → logprob: -6.579468250274658
    5. '(len' → logprob: -10.2044677734375
    6. '	len' → logprob: -10.8294677734375
    7. ' ' → logprob: -10.9544677734375
    8. '   ' → logprob: -12.3294677734375
    9. 'a' → logprob: -12.9544677734375
    10. '  ' → logprob: -13.2044677734375

Token 195: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012313034385442734
    2. ':
' → logprob: -5.262312889099121
    3. '           ' → logprob: -5.387312889099121
    4. ' :' → logprob: -6.762312889099121
    5. '   ' → logprob: -7.012312889099121
    6. '       ' → logprob: -8.012312889099121
    7. ' :
' → logprob: -10.387312889099121
    8. '<|end|>' → logprob: -11.512312889099121
    9. ',' → logprob: -12.137312889099121
    10. '<|end|>' → logprob: -12.137312889099121

Token 196: '           ' (ID: 352)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.2490483671426773
    2. '       ' → logprob: -2.7490484714508057
    3. ' len' → logprob: -2.9990484714508057
    4. '   ' → logprob: -2.9990484714508057
    5. '           ' → logprob: -3.2490484714508057
    6. 'True' → logprob: -4.374048233032227
    7. 'len' → logprob: -5.999048233032227
    8. ' a' → logprob: -7.124048233032227
    9. '    ' → logprob: -7.499048233032227
    10. ' not' → logprob: -7.749048233032227

Token 197: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.009211841970682144
    2. 'line' (adapté à ' line') → logprob: -5.384212017059326
    3. ' try' → logprob: -6.259212017059326
    4. '   ' → logprob: -6.509212017059326
    5. '           ' → logprob: -7.259212017059326
    6. 'try' → logprob: -8.759211540222168
    7. '	line' → logprob: -9.509211540222168
    8. ' if' → logprob: -9.759211540222168
    9. '    ' → logprob: -10.009211540222168
    10. ' break' → logprob: -10.384211540222168

Token 198: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004106542561203241
    2. '=' → logprob: -5.504106521606445
    3. '           ' → logprob: -10.879106521606445
    4. ' ' → logprob: -12.879106521606445
    5. '               ' → logprob: -13.129106521606445
    6. '   ' → logprob: -13.254106521606445
    7. '=line' → logprob: -13.754106521606445
    8. '       ' → logprob: -14.129106521606445
    9. 's' → logprob: -14.879106521606445
    10. ' =
' → logprob: -15.629106521606445

Token 199: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10026274621486664
    2. 'input' → logprob: -2.3502626419067383
    3. '<|end|>' → logprob: -10.850262641906738
    4. ' ' → logprob: -11.225262641906738
    5. '   ' → logprob: -11.975262641906738
    6. '	input' → logprob: -12.350262641906738
    7. '_input' → logprob: -12.350262641906738
    8. 'Input' → logprob: -13.350262641906738
    9. '(input' → logprob: -13.600262641906738
    10. '<|end|>' → logprob: -14.100262641906738

Token 200: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1115456074476242
    2. '()
' → logprob: -2.3615455627441406
    3. '().' → logprob: -4.486545562744141
    4. '())' → logprob: -12.73654556274414
    5. '()

' → logprob: -13.11154556274414
    6. '()
' → logprob: -13.23654556274414
    7. ')' → logprob: -13.23654556274414
    8. '(' → logprob: -13.86154556274414
    9. '():
' → logprob: -13.86154556274414
    10. '().
' → logprob: -13.98654556274414

Token 201: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04733486846089363
    2. '.strip' → logprob: -4.172334671020508
    3. ' =' → logprob: -4.672334671020508
    4. '       ' → logprob: -5.047334671020508
    5. '().' → logprob: -5.797334671020508
    6. '<|end|>' → logprob: -6.047334671020508
    7. '            
' → logprob: -6.422334671020508
    8. '=' → logprob: -6.422334671020508
    9. '               ' → logprob: -6.672334671020508
    10. '()' → logprob: -6.672334671020508

Token 202: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06936214119195938
    2. '.strip' → logprob: -3.569362163543701
    3. ' if' → logprob: -4.069362163543701
    4. 'strip' → logprob: -5.069362163543701
    5. '       ' → logprob: -5.444362163543701
    6. '   ' → logprob: -5.569362163543701
    7. '               ' → logprob: -6.069362163543701
    8. 'if' (adapté à ' if') → logprob: -6.194362163543701
    9. ' strip' → logprob: -6.944362163543701
    10. '	       ' → logprob: -7.944362163543701

Token 203: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.07889176905155182
    2. 'line' → logprob: -2.5788917541503906
    3. '	line' → logprob: -14.57889175415039
    4. ' ' → logprob: -14.95389175415039
    5. 'len' → logprob: -15.32889175415039
    6. ' not' → logprob: -15.45389175415039
    7. '[line' → logprob: -15.45389175415039
    8. '   ' → logprob: -15.70389175415039
    9. '(line' → logprob: -16.07889175415039
    10. '=line' → logprob: -16.07889175415039

Token 204: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.00020509003661572933
    2. '.' → logprob: -9.125205039978027
    3. '.trim' → logprob: -10.000205039978027
    4. ' .' → logprob: -10.875205039978027
    5. '==' → logprob: -11.500205039978027
    6. 'strip' → logprob: -11.750205039978027
    7. ' ==' → logprob: -12.125205039978027
    8. '().' → logprob: -12.375205039978027
    9. '   ' → logprob: -13.375205039978027
    10. '('').' → logprob: -14.250205039978027

Token 205: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0032101573888212442
    2. '()!=' → logprob: -5.753210067749023
    3. ' !=' → logprob: -10.878210067749023
    4. '!=' → logprob: -12.128210067749023
    5. '()==' → logprob: -12.628210067749023
    6. ' ()' → logprob: -13.003210067749023
    7. '```' → logprob: -13.753210067749023
    8. ')' → logprob: -14.878210067749023
    9. '   ' → logprob: -15.628210067749023
    10. '())' → logprob: -15.878210067749023

Token 206: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.4461057186126709
    2. ' !=' → logprob: -1.071105718612671
    3. '()!=' → logprob: -5.07110595703125
    4. '==' → logprob: -5.32110595703125
    5. '!='' → logprob: -5.44610595703125
    6. '=' → logprob: -7.07110595703125
    7. '()' → logprob: -7.44610595703125
    8. ' ==' → logprob: -8.44610595703125
    9. ':' → logprob: -10.19610595703125
    10. '()==' → logprob: -10.57110595703125

Token 207: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.10026911646127701
    2. ''' → logprob: -2.350269079208374
    3. '':' → logprob: -10.475269317626953
    4. ' '':
' → logprob: -10.600269317626953
    5. '''
' → logprob: -12.225269317626953
    6. '''.' → logprob: -14.100269317626953
    7. ':' → logprob: -14.600269317626953
    8. ' '' → logprob: -14.975269317626953
    9. ''>' → logprob: -14.975269317626953
    10. '':''' → logprob: -15.100269317626953

Token 208: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07582968473434448
    2. ':' → logprob: -3.0758297443389893
    3. ':
' → logprob: -3.7008297443389893
    4. '           ' → logprob: -7.20082950592041
    5. ' =' → logprob: -8.32582950592041
    6. '=' → logprob: -8.57582950592041
    7. ' ==' → logprob: -8.57582950592041
    8. 'break' → logprob: -8.57582950592041
    9. ' break' → logprob: -8.82582950592041
    10. '==' → logprob: -8.82582950592041

Token 209: ' a' (ID: 261)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.2957920432090759
    2. ' a' → logprob: -2.1707921028137207
    3. '               ' → logprob: -2.6707921028137207
    4. 'a' (adapté à ' a') → logprob: -3.4207921028137207
    5. 'break' → logprob: -3.5457921028137207
    6. '           ' → logprob: -4.920792102813721
    7. '   ' → logprob: -5.920792102813721
    8. '                   ' → logprob: -6.920792102813721
    9. '       ' → logprob: -9.670791625976562
    10. '	break' → logprob: -9.670791625976562

Token 210: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.016745248809456825
    2. 's' → logprob: -5.016745090484619
    3. '_' → logprob: -5.641745090484619
    4. ' =' → logprob: -6.016745090484619
    5. '_tokens' → logprob: -6.141745090484619
    6. '=' → logprob: -6.891745090484619
    7. '_lst' → logprob: -8.891745567321777
    8. '=_' → logprob: -9.266745567321777
    9. '_line' → logprob: -9.266745567321777
    10. '_s' → logprob: -9.516745567321777

Token 211: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.052941735833883286
    2. '.' → logprob: -3.5529417991638184
    3. '.extend' → logprob: -3.8029417991638184
    4. ' .' → logprob: -8.30294132232666
    5. '+=' → logprob: -8.55294132232666
    6. ' +=' → logprob: -8.92794132232666
    7. '=' → logprob: -10.80294132232666
    8. '.=' → logprob: -11.17794132232666
    9. ' =' → logprob: -12.80294132232666
    10. '.app' → logprob: -13.05294132232666

Token 212: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.345253586769104
    2. ' list' → logprob: -1.345253586769104
    3. '[line' → logprob: -3.8452534675598145
    4. '[list' → logprob: -5.0952534675598145
    5. 'line' → logprob: -5.7202534675598145
    6. ' line' → logprob: -7.7202534675598145
    7. ' [' → logprob: -8.470253944396973
    8. '[' → logprob: -10.220253944396973
    9. '(list' → logprob: -13.345253944396973
    10. '=list' → logprob: -13.470253944396973

Token 213: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -3.833878508885391e-05
    2. '(' → logprob: -10.250038146972656
    3. '(line' → logprob: -13.000038146972656
    4. 'map' → logprob: -14.500038146972656
    5. '(
' → logprob: -15.875038146972656
    6. '(range' → logprob: -17.750038146972656
    7. '(list' → logprob: -18.250038146972656
    8. '(m' → logprob: -19.000038146972656
    9. ' map' → logprob: -19.000038146972656
    10. '	map' → logprob: -19.375038146972656

Token 214: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -9.555654105497524e-05
    2. 'int' → logprob: -9.87509536743164
    3. '(str' → logprob: -10.37509536743164
    4. '(' → logprob: -11.37509536743164
    5. '(lambda' → logprob: -14.12509536743164
    6. ' int' → logprob: -15.37509536743164
    7. '(
' → logprob: -15.87509536743164
    8. 'str' → logprob: -16.75009536743164
    9. '[int' → logprob: -16.75009536743164
    10. '```' → logprob: -17.12509536743164

Token 215: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0008697715820744634
    2. ',line' → logprob: -7.2508697509765625
    3. ',' → logprob: -9.125869750976562
    4. '(' → logprob: -10.375869750976562
    5. ' (' → logprob: -11.250869750976562
    6. '=line' → logprob: -13.250869750976562
    7. ' line' → logprob: -13.375869750976562
    8. 'line' → logprob: -13.750869750976562
    9. '[line' → logprob: -13.875869750976562
    10. '(input' → logprob: -14.875869750976562

Token 216: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.06358251720666885
    2. ' line' → logprob: -2.813582420349121
    3. '(line' → logprob: -6.438582420349121
    4. '[line' → logprob: -11.938582420349121
    5. ',line' → logprob: -12.563582420349121
    6. '=line' → logprob: -13.188582420349121
    7. '#line' → logprob: -13.313582420349121
    8. '	line' → logprob: -13.938582420349121
    9. ')' → logprob: -15.063582420349121
    10. '               ' → logprob: -16.938583374023438

Token 217: '.strip' (ID: 40613)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01426646113395691
    2. '.strip' → logprob: -4.264266490936279
    3. '.split' → logprob: -9.264266014099121
    4. ' .' → logprob: -12.514266014099121
    5. '.' → logprob: -13.139266014099121
    6. 'strip' → logprob: -13.389266014099121
    7. ' ().' → logprob: -14.264266014099121
    8. '(strip' → logprob: -16.014266967773438
    9. 'split' → logprob: -16.639266967773438
    10. '()' → logprob: -16.889266967773438

Token 218: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.816093228830141e-06
    2. '.split' → logprob: -12.87500286102295
    3. '()' → logprob: -16.000001907348633
    4. ' ().' → logprob: -17.250001907348633
    5. '.' → logprob: -18.500001907348633
    6. '   ' → logprob: -18.875001907348633
    7. 'split' → logprob: -19.625001907348633
    8. ' .' → logprob: -20.250001907348633
    9. '           ' → logprob: -20.500001907348633
    10. '('').' → logprob: -20.875001907348633

Token 219: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.128163257315464e-07
    2. ' split' → logprob: -15.625
    3. '(split' → logprob: -16.125
    4. '.split' → logprob: -17.875
    5. 'strip' → logprob: -19.875
    6. 'rstrip' → logprob: -20.5
    7. '   ' → logprob: -20.75
    8. ')' → logprob: -22.375
    9. ' ' → logprob: -22.625
    10. '```' → logprob: -22.875

Token 220: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.00913966540247202
    2. '()' → logprob: -4.759139537811279
    3. '()))
' → logprob: -7.759139537811279
    4. '())' → logprob: -10.259140014648438
    5. '('' → logprob: -11.009140014648438
    6. '))' → logprob: -11.134140014648438
    7. '(' → logprob: -11.134140014648438
    8. '())))' → logprob: -11.384140014648438
    9. '()));' → logprob: -13.384140014648438
    10. '()
' → logprob: -13.384140014648438

Token 221: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007593614282086492
    2. '           ' → logprob: -7.375759124755859
    3. '       ' → logprob: -9.75075912475586
    4. '                   ' → logprob: -10.12575912475586
    5. '<|end|>' → logprob: -11.50075912475586
    6. '   ' → logprob: -11.75075912475586
    7. '              ' → logprob: -12.50075912475586
    8. '                
' → logprob: -12.62575912475586
    9. '
' → logprob: -13.62575912475586
    10. '	           ' → logprob: -13.75075912475586

Token 222: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5655106902122498
    2. ' break' → logprob: -1.0655107498168945
    3. 'break' → logprob: -2.4405107498168945
    4. '           ' → logprob: -9.065510749816895
    5. '	break' → logprob: -9.315510749816895
    6. '       ' → logprob: -11.065510749816895
    7. '
' → logprob: -11.315510749816895
    8. '                   ' → logprob: -11.815510749816895
    9. '   ' → logprob: -11.940510749816895
    10. '                
' → logprob: -12.815510749816895

Token 223: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.029752686619758606
    2. ' len' → logprob: -3.529752731323242
    3. 'sum' → logprob: -13.279752731323242
    4. '(len' → logprob: -15.904752731323242
    5. ' sum' → logprob: -16.404752731323242
    6. ' ' → logprob: -16.529752731323242
    7. '   ' → logprob: -16.654752731323242
    8. 'a' → logprob: -16.654752731323242
    9. '	len' → logprob: -16.654752731323242
    10. '  ' → logprob: -19.529752731323242

Token 224: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -8.101369894575328e-05
    2. '(' → logprob: -9.500081062316895
    3. ' (' → logprob: -12.625081062316895
    4. 'a' → logprob: -12.875081062316895
    5. ' a' → logprob: -15.250081062316895
    6. '(
' → logprob: -17.125080108642578
    7. '<|end|>' → logprob: -17.375080108642578
    8. '(ai' → logprob: -18.500080108642578
    9. '()' → logprob: -18.750080108642578
    10. '	a' → logprob: -19.375080108642578

Token 225: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00925565604120493
    2. 'a' → logprob: -5.134255886077881
    3. '(a' → logprob: -5.759255886077881
    4. '_a' → logprob: -9.634255409240723
    5. '[a' → logprob: -10.134255409240723
    6. ' a' → logprob: -10.884255409240723
    7. 'List' → logprob: -11.759255409240723
    8. ')' → logprob: -11.884255409240723
    9. 's' → logprob: -12.384255409240723
    10. '=' → logprob: -12.509255409240723

Token 226: ')' (ID: 8)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.35426846146583557
    2. ' ==' → logprob: -1.4792684316635132
    3. '>=' → logprob: -2.9792685508728027
    4. '==' → logprob: -4.104268550872803
    5. ')' → logprob: -5.854268550872803
    6. ')>=' → logprob: -8.479268074035645
    7. ')==' → logprob: -10.354268074035645
    8. ' )' → logprob: -10.729268074035645
    9. ' <' → logprob: -11.104268074035645
    10. '()' → logprob: -11.479268074035645

Token 227: ' <' (ID: 464)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5221320986747742
    2. ' ==' → logprob: -1.522132158279419
    3. '>=' → logprob: -2.022132158279419
    4. '==' → logprob: -2.897132158279419
    5. ' <=' → logprob: -7.77213191986084
    6. '<=' → logprob: -8.39713191986084
    7. ' <' → logprob: -9.52213191986084
    8. '<' → logprob: -10.02213191986084
    9. ')' → logprob: -10.14713191986084
    10. ')>=' → logprob: -10.27213191986084

Token 228: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.08895833045244217
    2. 'M' → logprob: -2.463958263397217
    3. ' ' → logprob: -11.213958740234375
    4. '>M' → logprob: -13.713958740234375
    5. '	M' → logprob: -13.838958740234375
    6. '   ' → logprob: -13.838958740234375
    7. '=M' → logprob: -14.338958740234375
    8. '<M' → logprob: -14.963958740234375
    9. ' a' → logprob: -15.213958740234375
    10. 'a' → logprob: -15.838958740234375

Token 229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9862216504407115e-05
    2. '_list' → logprob: -11.625020027160645
    3. '_' → logprob: -13.312520027160645
    4. 'List' → logprob: -13.562520027160645
    5. 'list' → logprob: -13.937520027160645
    6. '2' → logprob: -14.500020027160645
    7. 'a' → logprob: -14.500020027160645
    8. '>' → logprob: -14.562520027160645
    9. '```' → logprob: -14.625020027160645
    10. ')' → logprob: -14.687520027160645

Token 230: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5246649384498596
    2. ':
' → logprob: -0.8996649384498596
    3. '           ' → logprob: -7.399664878845215
    4. ' :
' → logprob: -8.399664878845215
    5. ' :' → logprob: -8.774664878845215
    6. '   ' → logprob: -9.024664878845215
    7. ':return' → logprob: -9.149664878845215
    8. ' or' → logprob: -9.149664878845215
    9. '               ' → logprob: -9.649664878845215
    10. '):
' → logprob: -10.024664878845215

Token 231: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05318739265203476
    2. ':' → logprob: -4.053187370300293
    3. ':
' → logprob: -4.053187370300293
    4. '               ' → logprob: -4.178187370300293
    5. ',' → logprob: -8.053187370300293
    6. '           ' → logprob: -8.553187370300293
    7. ' continue' → logprob: -8.553187370300293
    8. '                ' → logprob: -8.553187370300293
    9. ' :
' → logprob: -8.928187370300293
    10. '                    ' → logprob: -8.928187370300293

Token 232: ' while' (ID: 2049)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.39024659991264343
    2. ' continue' → logprob: -1.3902466297149658
    3. 'a' → logprob: -2.765246629714966
    4. 'continue' → logprob: -5.390246391296387
    5. ' line' → logprob: -5.890246391296387
    6. ' break' → logprob: -6.015246391296387
    7. ' while' → logprob: -7.765246391296387
    8. '    ' → logprob: -8.015246391296387
    9. 'line' → logprob: -8.640246391296387
    10. ' ' → logprob: -9.390246391296387

Token 233: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.9397589564323425
    2. ' len' → logprob: -1.1897590160369873
    3. 'True' → logprob: -1.4397590160369873
    4. ' True' → logprob: -2.6897590160369873
    5. '(len' → logprob: -10.064759254455566
    6. '	len' → logprob: -10.564759254455566
    7. ' ' → logprob: -11.439759254455566
    8. '  ' → logprob: -11.689759254455566
    9. '   ' → logprob: -11.814759254455566
    10. '(True' → logprob: -12.939759254455566

Token 234: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -13.25000286102295
    3. 'a' → logprob: -14.00000286102295
    4. ' (' → logprob: -15.50000286102295
    5. '(
' → logprob: -16.125003814697266
    6. ' a' → logprob: -16.625003814697266
    7. '<a' → logprob: -19.750003814697266
    8. '[a' → logprob: -20.375003814697266
    9. '(ai' → logprob: -20.500003814697266
    10. 's' → logprob: -21.000003814697266

Token 235: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.054500666621607e-06
    2. '_' → logprob: -13.75000286102295
    3. 'a' → logprob: -14.00000286102295
    4. 'list' → logprob: -14.87500286102295
    5. '_a' → logprob: -15.50000286102295
    6. 'List' → logprob: -16.000003814697266
    7. '(a' → logprob: -16.500003814697266
    8. ')' → logprob: -16.875003814697266
    9. '_LIST' → logprob: -16.875003814697266
    10. ' _' → logprob: -17.250003814697266

Token 236: ')' (ID: 8)
  Prédit: '()<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()<' → logprob: -0.6807880401611328
    2. ' <' → logprob: -1.0557880401611328
    3. '()' → logprob: -2.805788040161133
    4. ')' → logprob: -3.305788040161133
    5. '<' → logprob: -3.555788040161133
    6. ')<' → logprob: -4.305788040161133
    7. ' +=' → logprob: -5.680788040161133
    8. '.extend' → logprob: -7.180788040161133
    9. '```' → logprob: -7.305788040161133
    10. '   ' → logprob: -7.805788040161133

Token 237: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6941630244255066
    2. ' <' → logprob: -0.6941630244255066
    3. '<a' → logprob: -7.444162845611572
    4. '()<' → logprob: -8.19416332244873
    5. 'a' → logprob: -10.69416332244873
    6. '<n' → logprob: -10.81916332244873
    7. '<class' → logprob: -10.81916332244873
    8. '<m' → logprob: -11.31916332244873
    9. '<M' → logprob: -11.31916332244873
    10. '<len' → logprob: -11.44416332244873

Token 238: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.008614926598966122
    2. ' M' → logprob: -4.758615016937256
    3. '>M' → logprob: -15.258614540100098
    4. '<M' → logprob: -17.133615493774414
    5. '	M' → logprob: -17.133615493774414
    6. '=M' → logprob: -17.133615493774414
    7. '[M' → logprob: -17.383615493774414
    8. '   ' → logprob: -17.758615493774414
    9. '_M' → logprob: -18.758615493774414
    10. ',M' → logprob: -19.008615493774414

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. 'M' → logprob: -13.000004768371582
    3. 'S' → logprob: -13.375004768371582
    4. 'I' → logprob: -15.250004768371582
    5. ' ' → logprob: -15.375004768371582
    6. '   ' → logprob: -16.2500057220459
    7. 'list' → logprob: -16.2500057220459
    8. 'L' → logprob: -16.5000057220459
    9. '_list' → logprob: -17.1250057220459
    10. 'List' → logprob: -17.2500057220459

Token 240: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4359443783760071
    2. ':
' → logprob: -1.0609443187713623
    3. ' or' → logprob: -5.560944557189941
    4. ' and' → logprob: -6.685944557189941
    5. '   ' → logprob: -7.060944557189941
    6. ' :
' → logprob: -8.185944557189941
    7. '):
' → logprob: -8.810944557189941
    8. ',' → logprob: -8.810944557189941
    9. '():
' → logprob: -8.935944557189941
    10. ' :' → logprob: -8.935944557189941

Token 241: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.33919021487236023
    2. '               ' → logprob: -1.9641902446746826
    3. '                       ' → logprob: -2.0891902446746826
    4. ' line' → logprob: -4.4641900062561035
    5. '   ' → logprob: -6.3391900062561035
    6. ':
' → logprob: -6.5891900062561035
    7. '<|end|>' → logprob: -6.5891900062561035
    8. ' and' → logprob: -6.9641900062561035
    9. '       ' → logprob: -7.2141900062561035
    10. 'line' → logprob: -7.4641900062561035

Token 242: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.005886248778551817
    2. 'a' (adapté à ' a') → logprob: -5.880886077880859
    3. ' line' → logprob: -6.130886077880859
    4. ' ' → logprob: -7.505886077880859
    5. '   ' → logprob: -9.00588607788086
    6. ' more' → logprob: -9.50588607788086
    7. 'line' → logprob: -10.50588607788086
    8. '    ' → logprob: -10.63088607788086
    9. '	a' → logprob: -11.00588607788086
    10. ' additional' → logprob: -11.50588607788086

Token 243: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.3226136767771095e-05
    2. '_' → logprob: -10.125042915344238
    3. '_line' → logprob: -14.500042915344238
    4. 'list' → logprob: -14.500042915344238
    5. 'List' → logprob: -14.750042915344238
    6. '_LIST' → logprob: -14.875042915344238
    7. '(_' → logprob: -15.625042915344238
    8. 'a' → logprob: -15.750042915344238
    9. ')' → logprob: -15.875042915344238
    10. '_=' → logprob: -16.125043869018555

Token 244: ' +=' (ID: 2757)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.6805102229118347
    2. '+=' → logprob: -1.1805102825164795
    3. ' +=' → logprob: -1.6805102825164795
    4. '+' → logprob: -8.930510520935059
    5. 'extend' → logprob: -9.555510520935059
    6. '.' → logprob: -10.805510520935059
    7. ' +' → logprob: -12.055510520935059
    8. '+=(' → logprob: -13.055510520935059
    9. '()' → logprob: -13.680510520935059
    10. ' .' → logprob: -13.680510520935059

Token 245: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0019287518225610256
    2. ' list' → logprob: -6.251928806304932
    3. 'map' → logprob: -15.626928329467773
    4. '(list' → logprob: -19.626928329467773
    5. '[' → logprob: -20.251928329467773
    6. '[list' → logprob: -20.626928329467773
    7. '
' → logprob: -21.001928329467773
    8. '	list' → logprob: -21.126928329467773
    9. '=list' → logprob: -21.626928329467773
    10. 'List' → logprob: -21.626928329467773

Token 246: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -6.392202976712724e-06
    2. '(' → logprob: -12.000006675720215
    3. 'map' → logprob: -16.8750057220459
    4. '(
' → logprob: -17.6250057220459
    5. ' map' → logprob: -20.0000057220459
    6. '.map' → logprob: -20.6250057220459
    7. ',map' → logprob: -20.6250057220459
    8. ' (' → logprob: -20.7500057220459
    9. '	map' → logprob: -21.1250057220459
    10. '()' → logprob: -22.1250057220459

Token 247: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -7.088138227118179e-05
    2. '(' → logprob: -10.000070571899414
    3. 'int' → logprob: -10.875070571899414
    4. '(lambda' → logprob: -12.625070571899414
    5. '[int' → logprob: -14.250070571899414
    6. '=int' → logprob: -14.375070571899414
    7. ',int' → logprob: -14.375070571899414
    8. ' (' → logprob: -14.625070571899414
    9. '<int' → logprob: -15.000070571899414
    10. '(
' → logprob: -15.125070571899414

Token 248: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.25912973284721375
    2. ',' → logprob: -1.7591297626495361
    3. ',input' → logprob: -3.009129762649536
    4. '(' → logprob: -5.009129524230957
    5. '(),' → logprob: -10.384129524230957
    6. 'input' → logprob: -10.384129524230957
    7. '(line' → logprob: -12.884129524230957
    8. ' (' → logprob: -13.009129524230957
    9. ' ,' → logprob: -13.634129524230957
    10. '(
' → logprob: -14.384129524230957

Token 249: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.024173911660909653
    2. ' input' → logprob: -3.7741739749908447
    3. '(input' → logprob: -7.024173736572266
    4. ',input' → logprob: -10.274173736572266
    5. ' ' → logprob: -14.024173736572266
    6. '(' → logprob: -14.149173736572266
    7. 'line' → logprob: -14.274173736572266
    8. ',' → logprob: -14.524173736572266
    9. ' (' → logprob: -15.524173736572266
    10. '	input' → logprob: -15.774173736572266

Token 250: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.704273118884885e-07
    2. '()' → logprob: -14.375000953674316
    3. ' ().' → logprob: -17.0
    4. '()
' → logprob: -20.75
    5. '(' → logprob: -21.0
    6. '.strip' → logprob: -22.125
    7. '().'' → logprob: -22.375
    8. '()[' → logprob: -23.375
    9. '(strip' → logprob: -24.0
    10. '()?.' → logprob: -24.25

Token 251: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.00020616286201402545
    2. 'split' → logprob: -8.500205993652344
    3. '().' → logprob: -13.375205993652344
    4. ' strip' → logprob: -14.000205993652344
    5. '(strip' → logprob: -16.250205993652344
    6. '.strip' → logprob: -16.500205993652344
    7. 'rstrip' → logprob: -16.500205993652344
    8. 'read' → logprob: -18.625205993652344
    9. '-strip' → logprob: -18.875205993652344
    10. '_strip' → logprob: -19.500205993652344

Token 252: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9361264946837764e-07
    2. '()' → logprob: -16.0
    3. ' ().' → logprob: -16.75
    4. '(' → logprob: -19.5
    5. '   ' → logprob: -21.625
    6. '.split' → logprob: -22.125
    7. '()
' → logprob: -22.75
    8. '()[' → logprob: -24.125
    9. '().'' → logprob: -24.125
    10. '    ' → logprob: -24.375

Token 253: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0280383548888494e-06
    2. ' split' → logprob: -14.000000953674316
    3. '.split' → logprob: -16.500001907348633
    4. '(split' → logprob: -19.625001907348633
    5. 'spl' → logprob: -21.000001907348633
    6. '   ' → logprob: -21.375001907348633
    7. '```' → logprob: -21.750001907348633
    8. '().' → logprob: -22.125001907348633
    9. ' ' → logprob: -22.250001907348633
    10. ')' → logprob: -22.875001907348633

Token 254: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0013774950057268143
    2. '()))
' → logprob: -6.876377582550049
    3. '()' → logprob: -8.12637710571289
    4. '())' → logprob: -10.62637710571289
    5. '))' → logprob: -11.37637710571289
    6. '())))' → logprob: -11.75137710571289
    7. '()));' → logprob: -12.75137710571289
    8. '()))

' → logprob: -14.00137710571289
    9. '(' → logprob: -14.12637710571289
    10. '()))
' → logprob: -14.37637710571289

Token 255: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.045968446880578995
    2. '           ' → logprob: -3.920968532562256
    3. '                   ' → logprob: -3.920968532562256
    4. '       ' → logprob: -6.545968532562256
    5. '                       ' → logprob: -6.545968532562256
    6. ')' → logprob: -7.170968532562256
    7. '.' → logprob: -7.670968532562256
    8. '<|end|>' → logprob: -7.795968532562256
    9. '   ' → logprob: -8.045968055725098
    10. ',' → logprob: -8.295968055725098

Token 256: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0071485526859760284
    2. '           ' → logprob: -5.007148742675781
    3. '                   ' → logprob: -9.007148742675781
    4. ' break' → logprob: -9.007148742675781
    5. '       ' → logprob: -9.132148742675781
    6. '   ' → logprob: -10.757148742675781
    7. 'break' (adapté à ' break') → logprob: -11.007148742675781
    8. ' ' → logprob: -11.507148742675781
    9. '                       ' → logprob: -12.132148742675781
    10. ' ' → logprob: -12.257148742675781

Token 257: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 258: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 259: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5396241545677185
    2. 'M' → logprob: -1.4146242141723633
    3. '#' → logprob: -1.9146242141723633
    4. '    
' → logprob: -5.414624214172363
    5. '
' → logprob: -5.789624214172363
    6. 'print' → logprob: -5.914624214172363
    7. '```' → logprob: -6.414624214172363
    8. 'dp' → logprob: -6.914624214172363
    9. 'distance' → logprob: -7.039624214172363
    10. 'a' → logprob: -7.039624214172363

Token 260: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03373295068740845
    2. ':
' → logprob: -3.4087328910827637
    3. '   ' → logprob: -10.033733367919922
    4. '       ' → logprob: -10.158733367919922
    5. ' :' → logprob: -13.658733367919922
    6. ',' → logprob: -14.158733367919922
    7. ':

' → logprob: -14.408733367919922
    8. '.' → logprob: -14.533733367919922
    9. ':
' → logprob: -14.908733367919922
    10. ':return' → logprob: -15.033733367919922

Token 261: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05845525488257408
    2. '       ' → logprob: -3.433455228805542
    3. 'a' → logprob: -3.808455228805542
    4. ' a' → logprob: -6.308455467224121
    5. ' pass' → logprob: -8.433455467224121
    6. 'pass' → logprob: -8.808455467224121
    7. 'continue' → logprob: -9.933455467224121
    8. ' continue' → logprob: -9.933455467224121
    9. '   ' → logprob: -12.183455467224121
    10. '
' → logprob: -12.433455467224121

Token 262: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.01834413781762123
    2. '   ' → logprob: -4.893343925476074
    3. ' a' → logprob: -5.143343925476074
    4. 'pass' → logprob: -5.518343925476074
    5. ' pass' → logprob: -7.393343925476074
    6. 'continue' → logprob: -9.268343925476074
    7. 'M' → logprob: -10.518343925476074
    8. '       ' → logprob: -10.893343925476074
    9. ' continue' → logprob: -11.393343925476074
    10. 'print' → logprob: -11.393343925476074

Token 263: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00030817187507636845
    2. '_' → logprob: -8.1253080368042
    3. '_num' → logprob: -12.5003080368042
    4. '_lst' → logprob: -13.3753080368042
    5. '_l' → logprob: -13.5003080368042
    6. ' _' → logprob: -13.7503080368042
    7. '_li' → logprob: -14.2503080368042
    8. 'list' → logprob: -14.6253080368042
    9. 'a' → logprob: -15.0003080368042
    10. '_a' → logprob: -15.0003080368042

Token 264: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016140175983309746
    2. ' =' → logprob: -4.141139984130859
    3. '=[]' → logprob: -9.39113998413086
    4. '.append' → logprob: -10.89113998413086
    5. '[:]' → logprob: -13.26613998413086
    6. '+=' → logprob: -14.14113998413086
    7. '.' → logprob: -14.51613998413086
    8. '.=' → logprob: -15.64113998413086
    9. ',' → logprob: -16.14113998413086
    10. '.extend' → logprob: -16.14113998413086

Token 265: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00020461321400944144
    2. ' []' → logprob: -8.500205039978027
    3. '[]
' → logprob: -14.125205039978027
    4. '[' → logprob: -15.500205039978027
    5. '[]}' → logprob: -17.12520408630371
    6. '[]>' → logprob: -17.37520408630371
    7. '[],' → logprob: -17.87520408630371
    8. '[])' → logprob: -18.25020408630371
    9. '[]

' → logprob: -18.62520408630371
    10. '[]"' → logprob: -19.62520408630371

Token 266: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013520407490432262
    2. 'M' → logprob: -5.513520240783691
    3. '#' → logprob: -5.888520240783691
    4. '    
' → logprob: -6.138520240783691
    5. '<|end|>' → logprob: -6.513520240783691
    6. '
' → logprob: -6.638520240783691
    7. 'while' → logprob: -6.763520240783691
    8. ' while' → logprob: -9.388520240783691
    9. '```' → logprob: -9.388520240783691
    10. '#line' → logprob: -10.138520240783691

Token 267: ' #' (ID: 1069)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.24450422823429108
    2. '#' (adapté à ' #') → logprob: -2.11950421333313
    3. '   ' → logprob: -2.99450421333313
    4. 'while' → logprob: -3.49450421333313
    5. 'line' → logprob: -5.244504451751709
    6. 'print' → logprob: -6.119504451751709
    7. 'a' → logprob: -6.119504451751709
    8. 'for' → logprob: -6.494504451751709
    9. 'm' → logprob: -7.619504451751709
    10. 'b' → logprob: -8.24450397491455

Token 268: ' lire' (ID: 46082)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.680523157119751
    2. 'M' → logprob: -1.305523157119751
    3. 'while' → logprob: -2.055523157119751
    4. 'line' → logprob: -2.555523157119751
    5. '   ' → logprob: -5.305522918701172
    6. 'for' → logprob: -5.805522918701172
    7. 'm' → logprob: -6.555522918701172
    8. 'a' → logprob: -6.930522918701172
    9. ' while' → logprob: -7.180522918701172
    10. '```' → logprob: -7.555522918701172

Token 269: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.1641301065683365
    2. 'line' → logprob: -2.664130210876465
    3. ' M' → logprob: -2.914130210876465
    4. 'while' → logprob: -4.039130210876465
    5. ' line' → logprob: -4.914130210876465
    6. ' while' → logprob: -6.914130210876465
    7. '#' → logprob: -7.289130210876465
    8. 'm' → logprob: -8.414130210876465
    9. '   ' → logprob: -8.914130210876465
    10. 'L' → logprob: -10.101630210876465

Token 270: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002096197713399306
    2. 'line' → logprob: -9.75020980834961
    3. 'while' → logprob: -9.75020980834961
    4. '1' → logprob: -10.25020980834961
    5. ' =' → logprob: -10.62520980834961
    6. '```' → logprob: -11.87520980834961
    7. '=' → logprob: -12.50020980834961
    8. ' ' → logprob: -12.62520980834961
    9. ' while' → logprob: -12.87520980834961
    10. '_' → logprob: -13.00020980834961

Token 271: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7391481995582581
    2. 'while' → logprob: -0.8641481995582581
    3. ' while' → logprob: -2.3641481399536133
    4. '
' → logprob: -5.114148139953613
    5. '    
' → logprob: -7.489148139953613
    6. '	while' → logprob: -8.864148139953613
    7. '<|end|>' → logprob: -9.364148139953613
    8. 'line' → logprob: -9.739148139953613
    9. ' line' → logprob: -10.364148139953613
    10. ' 
' → logprob: -10.864148139953613

Token 272: ' b' (ID: 287)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.3160988986492157
    2. 'while' → logprob: -1.441098928451538
    3. ' line' → logprob: -3.566098928451538
    4. 'line' → logprob: -5.441098690032959
    5. '   ' → logprob: -6.441098690032959
    6. 'a' → logprob: -10.816099166870117
    7. ' ' → logprob: -10.816099166870117
    8. '	while' → logprob: -11.066099166870117
    9. 'b' → logprob: -11.191099166870117
    10. '```' → logprob: -11.191099166870117

Token 273: '_j' (ID: 12021)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0015837816754356027
    2. '_line' → logprob: -6.626583576202393
    3. '_' → logprob: -8.50158405303955
    4. 'list' → logprob: -10.87658405303955
    5. '1' → logprob: -11.00158405303955
    6. '_lines' → logprob: -12.12658405303955
    7. '_lst' → logprob: -12.75158405303955
    8. 'List' → logprob: -12.87658405303955
    9. '_num' → logprob: -13.25158405303955
    10. 'while' → logprob: -13.37658405303955

Token 274: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.05748128890991211
    2. ' while' → logprob: -3.057481288909912
    3. '
' → logprob: -4.932481288909912
    4. '   ' → logprob: -6.557481288909912
    5. '    
' → logprob: -8.55748176574707
    6. '	while' → logprob: -11.55748176574707
    7. '   
' → logprob: -12.05748176574707
    8. '  
' → logprob: -12.30748176574707
    9. 'While' → logprob: -12.43248176574707
    10. ' 
' → logprob: -12.55748176574707

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14099517464637756
    2. 'while' → logprob: -2.1409952640533447
    3. '
' → logprob: -4.515995025634766
    4. ' while' → logprob: -6.140995025634766
    5. '    
' → logprob: -7.140995025634766
    6. '```' → logprob: -9.765995025634766
    7. '	while' → logprob: -10.890995025634766
    8. '  
' → logprob: -12.265995025634766
    9. '   
' → logprob: -12.390995025634766
    10. '``' → logprob: -13.765995025634766

Token 276: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.02333294413983822
    2. ' while' → logprob: -3.7733328342437744
    3. '
' → logprob: -9.398332595825195
    4. 'line' → logprob: -12.898332595825195
    5. '    
' → logprob: -13.898332595825195
    6. '   ' → logprob: -14.773332595825195
    7. ' 
' → logprob: -15.148332595825195
    8. 'While' → logprob: -15.523332595825195
    9. ' line' → logprob: -15.898332595825195
    10. '	while' → logprob: -16.273332595825195

Token 277: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.01814994215965271
    2. ' True' → logprob: -4.0181498527526855
    3. '(True' → logprob: -17.393150329589844
    4. ' ' → logprob: -20.143150329589844
    5. 'Tr' → logprob: -20.268150329589844
    6. '1' → logprob: -20.643150329589844
    7. 'true' → logprob: -20.893150329589844
    8. '  ' → logprob: -21.268150329589844
    9. ' ' → logprob: -21.643150329589844
    10. 'line' → logprob: -22.018150329589844

Token 278: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4229333698749542
    2. '       ' → logprob: -1.2979333400726318
    3. ':
' → logprob: -2.922933340072632
    4. '   ' → logprob: -4.172933578491211
    5. ' line' → logprob: -6.547933578491211
    6. '(line' → logprob: -8.297933578491211
    7. '[line' → logprob: -9.172933578491211
    8. '	line' → logprob: -9.547933578491211
    9. '      ' → logprob: -9.547933578491211
    10. '<|end|>' → logprob: -9.797933578491211

Token 279: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015210263431072235
    2. ' line' → logprob: -4.515210151672363
    3. 'line' → logprob: -5.640210151672363
    4. '       ' → logprob: -7.765210151672363
    5. ' True' → logprob: -9.265210151672363
    6. 'True' → logprob: -10.390210151672363
    7. '(line' → logprob: -10.640210151672363
    8. '	line' → logprob: -11.140210151672363
    9. '    ' → logprob: -12.640210151672363
    10. ' ' → logprob: -12.765210151672363

Token 280: ' line' (ID: 2543)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0628056451678276
    2. 'line' (adapté à ' line') → logprob: -3.437805652618408
    3. ' True' → logprob: -3.562805652618408
    4. ' line' → logprob: -7.937805652618408
    5. '1' → logprob: -11.81280517578125
    6. '(True' → logprob: -12.31280517578125
    7. 'true' → logprob: -12.68780517578125
    8. '   ' → logprob: -12.93780517578125
    9. 'len' → logprob: -13.93780517578125
    10. ' ' → logprob: -14.43780517578125

Token 281: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11282507330179214
    2. '=' → logprob: -2.2378251552581787
    3. '   ' → logprob: -13.737825393676758
    4. '=line' → logprob: -14.237825393676758
    5. ' ' → logprob: -14.487825393676758
    6. '(' → logprob: -16.612825393676758
    7. '  ' → logprob: -16.862825393676758
    8. '=input' → logprob: -17.112825393676758
    9. '()' → logprob: -17.362825393676758
    10. '    ' → logprob: -17.362825393676758

Token 282: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.25193020701408386
    2. 'input' → logprob: -1.5019302368164062
    3. '(input' → logprob: -14.376930236816406
    4. '=input' → logprob: -15.751930236816406
    5. '<input' → logprob: -16.126930236816406
    6. '   ' → logprob: -16.626930236816406
    7. '	input' → logprob: -16.751930236816406
    8. ' ' → logprob: -17.001930236816406
    9. '_input' → logprob: -17.626930236816406
    10. 'Input' → logprob: -18.001930236816406

Token 283: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.4953603744506836
    2. '()' → logprob: -0.9953603744506836
    3. '():
' → logprob: -4.120360374450684
    4. '().' → logprob: -5.370360374450684
    5. '().
' → logprob: -10.245360374450684
    6. '()
' → logprob: -10.370360374450684
    7. '()!=' → logprob: -10.745360374450684
    8. '()>' → logprob: -11.370360374450684
    9. '   ' → logprob: -11.620360374450684
    10. '       ' → logprob: -11.995360374450684

Token 284: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007363118231296539
    2. '   ' → logprob: -5.132363319396973
    3. 'if' → logprob: -6.632363319396973
    4. ' if' → logprob: -9.507363319396973
    5. '           ' → logprob: -12.132363319396973
    6. '<|end|>' → logprob: -12.382363319396973
    7. '()' → logprob: -12.632363319396973
    8. '      ' → logprob: -12.757363319396973
    9. '    ' → logprob: -12.757363319396973
    10. ' ' → logprob: -12.882363319396973

Token 285: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1400722712278366
    2. '       ' → logprob: -2.5150723457336426
    3. ' if' → logprob: -3.0150723457336426
    4. '   ' → logprob: -7.640072345733643
    5. 'line' → logprob: -9.015071868896484
    6. ' line' → logprob: -9.015071868896484
    7. '.strip' → logprob: -11.140071868896484
    8. ' ' → logprob: -11.390071868896484
    9. '           ' → logprob: -11.390071868896484
    10. 'If' → logprob: -11.765071868896484

Token 286: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3868717551231384
    2. 'line' → logprob: -1.1368718147277832
    3. '(line' → logprob: -15.261871337890625
    4. ' ' → logprob: -15.886871337890625
    5. '[line' → logprob: -16.136871337890625
    6. '#line' → logprob: -16.386871337890625
    7. 'len' → logprob: -16.386871337890625
    8. '	line' → logprob: -16.511871337890625
    9. '=line' → logprob: -16.886871337890625
    10. ' len' → logprob: -17.636871337890625

Token 287: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.000249061529757455
    2. 'strip' → logprob: -9.000248908996582
    3. '.' → logprob: -9.500248908996582
    4. ' .' → logprob: -10.250248908996582
    5. '.trim' → logprob: -11.875248908996582
    6. '   ' → logprob: -12.750248908996582
    7. '().' → logprob: -12.875248908996582
    8. '       ' → logprob: -13.500248908996582
    9. ' strip' → logprob: -13.875248908996582
    10. '(strip' → logprob: -16.1252498626709

Token 288: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00030412263004109263
    2. '()!=' → logprob: -8.125304222106934
    3. '!=' → logprob: -12.125304222106934
    4. ' !=' → logprob: -13.375304222106934
    5. '   ' → logprob: -14.875304222106934
    6. '```' → logprob: -15.375304222106934
    7. ')' → logprob: -15.875304222106934
    8. '():
' → logprob: -16.500303268432617
    9. ' ()' → logprob: -16.625303268432617
    10. '()==' → logprob: -17.375303268432617

Token 289: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.47651857137680054
    2. ' !=' → logprob: -0.9765185713768005
    3. '!='' → logprob: -6.476518630981445
    4. '()!=' → logprob: -7.101518630981445
    5. '()' → logprob: -9.976518630981445
    6. ')!=' → logprob: -12.101518630981445
    7. '!="' → logprob: -12.226518630981445
    8. '==' → logprob: -12.351518630981445
    9. '```' → logprob: -12.726518630981445
    10. '   ' → logprob: -13.101518630981445

Token 290: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.00046677692444063723
    2. ''' → logprob: -7.750466823577881
    3. ' '':
' → logprob: -10.750466346740723
    4. '''
' → logprob: -11.250466346740723
    5. '!='' → logprob: -15.000466346740723
    6. ''>' → logprob: -15.000466346740723
    7. ''''' → logprob: -15.375466346740723
    8. ''*' → logprob: -16.00046730041504
    9. '''.' → logprob: -16.00046730041504
    10. ''',' → logprob: -16.12546730041504

Token 291: '           ' (ID: 352)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.16857102513313293
    2. ''' → logprob: -2.4185709953308105
    3. ''t' → logprob: -4.2935709953308105
    4. '       ' → logprob: -4.6685709953308105
    5. '   ' → logprob: -4.7935709953308105
    6. '!='' → logprob: -5.0435709953308105
    7. ''>' → logprob: -5.5435709953308105
    8. '':' → logprob: -5.5435709953308105
    9. '!=' → logprob: -5.7935709953308105
    10. '```' → logprob: -5.9185709953308105

Token 292: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.38089457154273987
    2. 'M' → logprob: -1.3808945417404175
    3. '       ' → logprob: -3.505894660949707
    4. '           ' → logprob: -4.005894660949707
    5. ' break' → logprob: -4.380894660949707
    6. '   ' → logprob: -6.130894660949707
    7. ' M' → logprob: -6.630894660949707
    8. 'b' → logprob: -7.130894660949707
    9. 'B' → logprob: -9.380894660949707
    10. 'line' → logprob: -9.630894660949707

Token 293: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005569078493863344
    2. 'M' → logprob: -5.255568981170654
    3. '
' → logprob: -8.130569458007812
    4. ' M' → logprob: -10.880569458007812
    5. '```' → logprob: -11.380569458007812
    6. '  ' → logprob: -12.505569458007812
    7. '    
' → logprob: -12.880569458007812
    8. ' ' → logprob: -14.130569458007812
    9. '<|end|>' → logprob: -14.255569458007812
    10. 'b' → logprob: -14.505569458007812

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11288779973983765
    2. 'M' → logprob: -2.2378878593444824
    3. '
' → logprob: -10.487887382507324
    4. ' M' → logprob: -10.737887382507324
    5. '  ' → logprob: -12.112887382507324
    6. '```' → logprob: -12.487887382507324
    7. ' ' → logprob: -13.362887382507324
    8. '    
' → logprob: -13.487887382507324
    9. '<|end|>' → logprob: -13.987887382507324
    10. '>' → logprob: -14.487887382507324

Token 295: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' (adapté à ' M') → logprob: -6.704273118884885e-07
    2. '   ' → logprob: -14.750000953674316
    3. ' M' → logprob: -15.625000953674316
    4. '```' → logprob: -20.625
    5. '
' → logprob: -20.75
    6. '    
' → logprob: -23.0
    7. '`' → logprob: -23.125
    8. 'B' → logprob: -23.875
    9. 'Ｍ' → logprob: -24.0
    10. 'm' → logprob: -24.0

Token 296: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '_' → logprob: -17.0
    4. '   ' → logprob: -17.625
    5. ' =' → logprob: -18.0
    6. '=' → logprob: -18.25
    7. '
' → logprob: -18.5
    8. '```' → logprob: -18.75
    9. '₂' → logprob: -18.875
    10. '۲' → logprob: -19.125

Token 297: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07888989895582199
    2. '=' → logprob: -2.578889846801758
    3. '=int' → logprob: -16.078889846801758
    4. ' ' → logprob: -16.578889846801758
    5. ',' → logprob: -18.828889846801758
    6. ')' → logprob: -19.578889846801758
    7. ' ' → logprob: -19.703889846801758
    8. ' =
' → logprob: -20.078889846801758
    9. '＝' → logprob: -20.953889846801758
    10. '=
' → logprob: -21.078889846801758

Token 298: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0619683600962162
    2. ' int' → logprob: -2.8119683265686035
    3. '   ' → logprob: -14.936968803405762
    4. '=int' → logprob: -15.561968803405762
    5. '[int' → logprob: -16.186967849731445
    6. '(int' → logprob: -17.061967849731445
    7. '	int' → logprob: -18.436967849731445
    8. '<int' → logprob: -19.811967849731445
    9. '    ' → logprob: -19.936967849731445
    10. ' ' → logprob: -20.186967849731445

Token 299: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -9.088346359931165e-07
    2. 'line' → logprob: -14.000000953674316
    3. '(' → logprob: -19.0
    4. '=line' → logprob: -19.0
    5. '[line' → logprob: -19.5
    6. ' line' → logprob: -19.75
    7. '#line' → logprob: -21.0
    8. ',line' → logprob: -21.75
    9. '	line' → logprob: -22.625
    10. '(Line' → logprob: -22.875

Token 300: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007106438861228526
    2. ')
' → logprob: -7.250710487365723
    3. '   ' → logprob: -14.375710487365723
    4. ' )' → logprob: -16.25071144104004
    5. ')

' → logprob: -17.50071144104004
    6. ')
' → logprob: -17.87571144104004
    7. '),' → logprob: -18.62571144104004
    8. ')`' → logprob: -19.25071144104004
    9. '))' → logprob: -19.50071144104004
    10. ')#' → logprob: -19.50071144104004

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47432875633239746
    2. 'b' → logprob: -0.9743287563323975
    3. 'while' → logprob: -9.099328994750977
    4. ' b' → logprob: -9.349328994750977
    5. '
' → logprob: -10.599328994750977
    6. '    
' → logprob: -11.849328994750977
    7. '<|end|>' → logprob: -12.099328994750977
    8. '  ' → logprob: -12.474328994750977
    9. '       ' → logprob: -12.974328994750977
    10. '```' → logprob: -13.349328994750977

Token 302: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -5.512236498361744e-07
    2. ' b' → logprob: -14.875000953674316
    3. '   ' → logprob: -16.5
    4. 'if' → logprob: -18.75
    5. '    
' → logprob: -21.25
    6. 'a' → logprob: -21.5
    7. 'B' → logprob: -22.875
    8. 'while' → logprob: -23.125
    9. '```' → logprob: -23.375
    10. '	b' → logprob: -23.5

Token 303: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00018649426056072116
    2. '_' → logprob: -8.625186920166016
    3. '_j' → logprob: -12.375186920166016
    4. ' _' → logprob: -13.875186920166016
    5. '_lst' → logprob: -14.375186920166016
    6. '_line' → logprob: -15.375186920166016
    7. '2' → logprob: -15.375186920166016
    8. 'list' → logprob: -15.875186920166016
    9. '_lists' → logprob: -16.000186920166016
    10. '_l' → logprob: -16.500186920166016

Token 304: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868989646434784
    2. '=' → logprob: -1.1368989944458008
    3. '=[]' → logprob: -10.5118989944458
    4. '=[]
' → logprob: -14.6368989944458
    5. '[]' → logprob: -16.261898040771484
    6. ' ' → logprob: -17.136898040771484
    7. ')' → logprob: -17.636898040771484
    8. ' =
' → logprob: -17.886898040771484
    9. '=[]
' → logprob: -17.886898040771484
    10. '   ' → logprob: -18.011898040771484

Token 305: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5820608735084534
    2. '[]
' → logprob: -1.5820608139038086
    3. ' []' → logprob: -1.8320608139038086
    4. ' []
' → logprob: -2.5820608139038086
    5. ' []
' → logprob: -13.582060813903809
    6. '[]

' → logprob: -15.707060813903809
    7. '([])
' → logprob: -15.832060813903809
    8. '[' → logprob: -16.207061767578125
    9. ' ' → logprob: -17.082061767578125
    10. '=[]
' → logprob: -17.207061767578125

Token 306: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5771813988685608
    2. 'if' → logprob: -0.8271813988685608
    3. ' if' → logprob: -6.702181339263916
    4. '<|end|>' → logprob: -12.077181816101074
    5. 'If' → logprob: -13.327181816101074
    6. '  ' → logprob: -13.702181816101074
    7. ' ' → logprob: -13.827181816101074
    8. '
' → logprob: -14.077181816101074
    9. '[' → logprob: -14.577181816101074
    10. '    ' → logprob: -14.827181816101074

Token 307: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -6.749814019713085e-06
    2. '   ' → logprob: -12.375006675720215
    3. ' if' → logprob: -13.000006675720215
    4. 'b' → logprob: -15.500006675720215
    5. 'for' → logprob: -19.12500762939453
    6. 'If' → logprob: -19.12500762939453
    7. '```' → logprob: -19.25000762939453
    8. '    
' → logprob: -19.50000762939453
    9. 'while' → logprob: -20.25000762939453
    10. '	if' → logprob: -20.87500762939453

Token 308: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.3868745267391205
    2. ' M' → logprob: -1.1368745565414429
    3. ' ' → logprob: -13.011874198913574
    4. '   ' → logprob: -13.886874198913574
    5. '  ' → logprob: -15.761874198913574
    6. '>M' → logprob: -17.01187515258789
    7. '	M' → logprob: -17.38687515258789
    8. '(M' → logprob: -18.01187515258789
    9. '    ' → logprob: -18.01187515258789
    10. '<M' → logprob: -18.38687515258789

Token 309: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.746380237629637e-05
    2. '1' → logprob: -9.250097274780273
    3. ' ' → logprob: -14.000097274780273
    4. '>' → logprob: -14.875097274780273
    5. ' >' → logprob: -17.000097274780273
    6. '   ' → logprob: -17.125097274780273
    7. '_' → logprob: -17.375097274780273
    8. '  ' → logprob: -18.000097274780273
    9. '```' → logprob: -18.562597274780273
    10. '[' → logprob: -18.687597274780273

Token 310: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.03804229199886322
    2. '>' → logprob: -3.2880423069000244
    3. ' ' → logprob: -14.163042068481445
    4. ' ' → logprob: -16.288042068481445
    5. '   ' → logprob: -18.038042068481445
    6. ' >
' → logprob: -18.913042068481445
    7. ':' → logprob: -19.913042068481445
    8. '  ' → logprob: -20.288042068481445
    9. '[' → logprob: -20.288042068481445
    10. '&gt' → logprob: -20.413042068481445

Token 311: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6931533813476562
    2. ' ' → logprob: -0.6931533813476562
    3. '   ' → logprob: -12.318153381347656
    4. '  ' → logprob: -13.943153381347656
    5. '=' → logprob: -14.568153381347656
    6. '    ' → logprob: -16.193153381347656
    7. '>' → logprob: -16.505653381347656
    8. '     ' → logprob: -16.755653381347656
    9. ' ' → logprob: -16.818153381347656
    10. '       ' → logprob: -17.068153381347656

Token 312: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006716674659401178
    2. ' ' → logprob: -5.006716728210449
    3. '   ' → logprob: -14.00671672821045
    4. '  ' → logprob: -16.319215774536133
    5. '=' → logprob: -16.631715774536133
    6. '[' → logprob: -17.381715774536133
    7. '1' → logprob: -17.506715774536133
    8. '۰' → logprob: -17.756715774536133
    9. '>' → logprob: -17.819215774536133
    10. '    ' → logprob: -17.881715774536133

Token 313: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2417673021554947
    2. '       ' → logprob: -1.7417672872543335
    3. ':
' → logprob: -3.241767406463623
    4. '   ' → logprob: -7.866767406463623
    5. 'while' → logprob: -10.116766929626465
    6. ' while' → logprob: -11.491766929626465
    7. ':

' → logprob: -12.866766929626465
    8. ' :' → logprob: -12.991766929626465
    9. '           ' → logprob: -13.116766929626465
    10. '      ' → logprob: -13.241766929626465

Token 314: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003771458752453327
    2. ' while' → logprob: -6.1287713050842285
    3. '   ' → logprob: -6.7537713050842285
    4. 'while' → logprob: -7.8787713050842285
    5. '	while' → logprob: -11.128771781921387
    6. '    ' → logprob: -11.878771781921387
    7. '      ' → logprob: -12.503771781921387
    8. '<|end|>' → logprob: -12.753771781921387
    9. '           ' → logprob: -13.128771781921387
    10. ':
' → logprob: -13.128771781921387

Token 315: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.12728136777877808
    2. 'while' (adapté à ' while') → logprob: -2.127281427383423
    3. '   ' → logprob: -8.127281188964844
    4. '       ' → logprob: -10.502281188964844
    5. '	while' → logprob: -10.502281188964844
    6. 'While' → logprob: -13.252281188964844
    7. ' ' → logprob: -14.627281188964844
    8. '    ' → logprob: -15.002281188964844
    9. '  ' → logprob: -15.877281188964844
    10. '           ' → logprob: -16.627281188964844

Token 316: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5759425163269043
    2. 'True' → logprob: -0.8259425163269043
    3. 'len' → logprob: -13.950942993164062
    4. ' ' → logprob: -14.450942993164062
    5. '(True' → logprob: -14.575942993164062
    6. '   ' → logprob: -14.950942993164062
    7. 'b' → logprob: -15.075942993164062
    8. ' len' → logprob: -15.075942993164062
    9. '    ' → logprob: -16.450942993164062
    10. '1' → logprob: -16.950942993164062

Token 317: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01626426912844181
    2. ':' → logprob: -4.89126443862915
    3. '       ' → logprob: -5.01626443862915
    4. ':
' → logprob: -6.51626443862915
    5. '   ' → logprob: -8.016263961791992
    6. '               ' → logprob: -10.141263961791992
    7. '<|end|>' → logprob: -10.891263961791992
    8. '```' → logprob: -11.016263961791992
    9. '[' → logprob: -11.391263961791992
    10. '          ' → logprob: -11.516263961791992

Token 318: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.147105872631073
    2. '           ' → logprob: -2.0221059322357178
    3. '   ' → logprob: -5.522105693817139
    4. ' line' → logprob: -7.897105693817139
    5. 'line' → logprob: -10.397106170654297
    6. '	line' → logprob: -12.397106170654297
    7. ' ' → logprob: -12.772106170654297
    8. '#line' → logprob: -12.897106170654297
    9. '               ' → logprob: -13.147106170654297
    10. '(line' → logprob: -13.397106170654297

Token 319: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.008784979581832886
    2. ' line' → logprob: -4.758784770965576
    3. '           ' → logprob: -8.883785247802734
    4. '	line' → logprob: -11.133785247802734
    5. '   ' → logprob: -11.883785247802734
    6. '       ' → logprob: -12.258785247802734
    7. '               ' → logprob: -13.383785247802734
    8. '#line' → logprob: -13.633785247802734
    9. '[line' → logprob: -13.883785247802734
    10. '(line' → logprob: -14.133785247802734

Token 320: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1270129382610321
    2. '=' → logprob: -2.1270129680633545
    3. '           ' → logprob: -10.002013206481934
    4. '               ' → logprob: -11.252013206481934
    5. '=line' → logprob: -11.252013206481934
    6. '       ' → logprob: -11.877013206481934
    7. '   ' → logprob: -12.377013206481934
    8. ' ' → logprob: -13.752013206481934
    9. '=input' → logprob: -14.877013206481934
    10. '                   ' → logprob: -16.002012252807617

Token 321: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2014167606830597
    2. 'input' → logprob: -1.7014167308807373
    3. '(input' → logprob: -13.701416969299316
    4. '=input' → logprob: -14.076416969299316
    5. '<input' → logprob: -14.826416969299316
    6. '	input' → logprob: -15.076416969299316
    7. '_input' → logprob: -15.701416969299316
    8. ' ' → logprob: -15.826416969299316
    9. ',input' → logprob: -16.076416015625
    10. 'import' → logprob: -16.451416015625

Token 322: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.3135571777820587
    2. '()' → logprob: -1.3135571479797363
    3. '().' → logprob: -8.313557624816895
    4. '():
' → logprob: -10.688557624816895
    5. '()
' → logprob: -11.313557624816895
    6. '       ' → logprob: -12.438557624816895
    7. '().
' → logprob: -13.313557624816895
    8. '|()
' → logprob: -13.438557624816895
    9. '(' → logprob: -13.688557624816895
    10. '           ' → logprob: -14.188557624816895

Token 323: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0052090901881456375
    2. '       ' → logprob: -5.630208969116211
    3. 'if' → logprob: -6.505208969116211
    4. ' if' → logprob: -9.755208969116211
    5. '               ' → logprob: -10.880208969116211
    6. '   ' → logprob: -11.130208969116211
    7. '	       ' → logprob: -11.255208969116211
    8. 'and' → logprob: -13.255208969116211
    9. '		' → logprob: -14.255208969116211
    10. ' ' → logprob: -14.505208969116211

Token 324: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3158934414386749
    2. 'if' (adapté à ' if') → logprob: -1.9408934116363525
    3. '           ' → logprob: -2.0658934116363525
    4. '       ' → logprob: -7.940893650054932
    5. '               ' → logprob: -8.565893173217773
    6. '   ' → logprob: -10.690893173217773
    7. ' ' → logprob: -13.065893173217773
    8. '          ' → logprob: -13.565893173217773
    9. 'If' → logprob: -13.940893173217773
    10. '
' → logprob: -13.940893173217773

Token 325: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.1602250337600708
    2. 'line' → logprob: -1.9102250337600708
    3. '(line' → logprob: -14.910224914550781
    4. 'len' → logprob: -15.410224914550781
    5. '	line' → logprob: -15.910224914550781
    6. '[line' → logprob: -16.41022491455078
    7. '#line' → logprob: -16.91022491455078
    8. ' ' → logprob: -17.16022491455078
    9. ' len' → logprob: -17.41022491455078
    10. '=line' → logprob: -17.78522491455078

Token 326: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -3.333223139634356e-05
    2. ' .' → logprob: -11.250033378601074
    3. '.' → logprob: -11.375033378601074
    4. 'strip' → logprob: -11.750033378601074
    5. '.trim' → logprob: -14.250033378601074
    6. ' strip' → logprob: -15.250033378601074
    7. '   ' → logprob: -17.375032424926758
    8. '.str' → logprob: -18.750032424926758
    9. '               ' → logprob: -18.875032424926758
    10. '_strip' → logprob: -18.875032424926758

Token 327: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002906158333644271
    2. '().' → logprob: -5.877906322479248
    3. '()!=' → logprob: -9.25290584564209
    4. '   ' → logprob: -13.62790584564209
    5. '.strip' → logprob: -13.62790584564209
    6. '!=' → logprob: -14.00290584564209
    7. ' !=' → logprob: -14.25290584564209
    8. '()
' → logprob: -14.75290584564209
    9. '():
' → logprob: -15.37790584564209
    10. '=' → logprob: -15.37790584564209

Token 328: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.3449530303478241
    2. '()' → logprob: -1.4699530601501465
    3. '.strip' → logprob: -3.2199530601501465
    4. '().' → logprob: -4.8449530601501465
    5. '!=' → logprob: -4.8449530601501465
    6. '()!=' → logprob: -5.5949530601501465
    7. '():
' → logprob: -6.8449530601501465
    8. '!='' → logprob: -7.0949530601501465
    9. '               ' → logprob: -8.719952583312988
    10. '   ' → logprob: -9.719952583312988

Token 329: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.0185089111328125
    2. ' '':
' → logprob: -4.0185089111328125
    3. ''' → logprob: -8.018508911132812
    4. '''
' → logprob: -11.018508911132812
    5. ' '' → logprob: -11.893508911132812
    6. ' ''' → logprob: -12.143508911132812
    7. '''.' → logprob: -14.893508911132812
    8. ''''' → logprob: -16.018508911132812
    9. ''t' → logprob: -16.143508911132812
    10. ''',' → logprob: -16.143508911132812

Token 330: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03141678869724274
    2. '''' → logprob: -4.656416893005371
    3. ''' → logprob: -5.281416893005371
    4. '!='' → logprob: -5.406416893005371
    5. ' '':
' → logprob: -5.781416893005371
    6. '!=' → logprob: -5.906416893005371
    7. ' !=' → logprob: -6.406416893005371
    8. '           ' → logprob: -6.781416893005371
    9. 'not' → logprob: -7.531416893005371
    10. '``' → logprob: -7.781416893005371

Token 331: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.16338151693344116
    2. ' b' → logprob: -1.913381576538086
    3. '               ' → logprob: -5.788381576538086
    4. '                   ' → logprob: -9.913381576538086
    5. '           ' → logprob: -10.913381576538086
    6. ' ' → logprob: -12.038381576538086
    7. '                ' → logprob: -12.413381576538086
    8. '   ' → logprob: -12.538381576538086
    9. '              ' → logprob: -12.538381576538086
    10. '       ' → logprob: -13.788381576538086

Token 332: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -7.584239938296378e-06
    2. '_' → logprob: -12.125007629394531
    3. '_lst' → logprob: -13.750007629394531
    4. '_j' → logprob: -14.625007629394531
    5. 'list' → logprob: -15.750007629394531
    6. ' _' → logprob: -16.12500762939453
    7. '=_' → logprob: -16.75000762939453
    8. '_l' → logprob: -17.00000762939453
    9. '=' → logprob: -17.37500762939453
    10. '_li' → logprob: -17.62500762939453

Token 333: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889275997877121
    2. '=' → logprob: -2.578892707824707
    3. '   ' → logprob: -13.328892707824707
    4. ' ' → logprob: -13.828892707824707
    5. '    ' → logprob: -17.078893661499023
    6. '=list' → logprob: -17.078893661499023
    7. '               ' → logprob: -17.453893661499023
    8. ' +=' → logprob: -17.578893661499023
    9. '           ' → logprob: -17.578893661499023
    10. '  ' → logprob: -17.703893661499023

Token 334: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.07888978719711304
    2. ' list' → logprob: -2.578889846801758
    3. '(list' → logprob: -18.078889846801758
    4. '               ' → logprob: -18.078889846801758
    5. '	list' → logprob: -18.328889846801758
    6. '[list' → logprob: -18.953889846801758
    7. '=list' → logprob: -19.203889846801758
    8. '   ' → logprob: -19.578889846801758
    9. ' ' → logprob: -19.953889846801758
    10. 'List' → logprob: -20.078889846801758

Token 335: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -4.4849443838757e-06
    2. 'map' → logprob: -12.750004768371582
    3. '	map' → logprob: -14.875004768371582
    4. '.map' → logprob: -15.125004768371582
    5. ' map' → logprob: -15.250004768371582
    6. ',map' → logprob: -15.375004768371582
    7. ' (' → logprob: -15.875004768371582
    8. '   ' → logprob: -16.250003814697266
    9. '(' → logprob: -16.500003814697266
    10. '               ' → logprob: -16.625003814697266

Token 336: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002111694193445146
    2. 'int' → logprob: -9.500210762023926
    3. '<int' → logprob: -10.000210762023926
    4. ',int' → logprob: -10.500210762023926
    5. '=int' → logprob: -10.625210762023926
    6. '(' → logprob: -10.625210762023926
    7. '[int' → logprob: -11.625210762023926
    8. ']int' → logprob: -12.625210762023926
    9. ' (' → logprob: -13.875210762023926
    10. '	int' → logprob: -15.000210762023926

Token 337: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.12953130900859833
    2. ',' → logprob: -2.1295313835144043
    3. '(' → logprob: -6.504531383514404
    4. ',line' → logprob: -6.879531383514404
    5. ' (' → logprob: -10.129530906677246
    6. '[line' → logprob: -11.754530906677246
    7. ' ,' → logprob: -11.879530906677246
    8. '               ' → logprob: -12.254530906677246
    9. '=line' → logprob: -12.254530906677246
    10. ' line' → logprob: -12.629530906677246

Token 338: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.12715886533260345
    2. 'line' → logprob: -2.1271588802337646
    3. '(line' → logprob: -8.377159118652344
    4. '[line' → logprob: -14.877159118652344
    5. '	line' → logprob: -16.002159118652344
    6. '=line' → logprob: -16.127159118652344
    7. '#line' → logprob: -16.502159118652344
    8. ',line' → logprob: -16.877159118652344
    9. 'input' → logprob: -17.752159118652344
    10. ' ' → logprob: -18.002159118652344

Token 339: '.strip' (ID: 40613)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.2056664526462555
    2. '.strip' → logprob: -1.705666422843933
    3. '(line' → logprob: -5.580666542053223
    4. '(strip' → logprob: -8.080666542053223
    5. '=line' → logprob: -9.580666542053223
    6. 'strip' → logprob: -9.705666542053223
    7. '()' → logprob: -11.580666542053223
    8. '.' → logprob: -11.705666542053223
    9. ' .' → logprob: -11.955666542053223
    10. '[line' → logprob: -12.705666542053223

Token 340: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.6240566083070007e-06
    2. '.split' → logprob: -13.750001907348633
    3. '()' → logprob: -15.000001907348633
    4. ' ().' → logprob: -16.750001907348633
    5. '   ' → logprob: -18.625001907348633
    6. 'split' → logprob: -18.750001907348633
    7. '(' → logprob: -18.875001907348633
    8. 'spl' → logprob: -19.750001907348633
    9. '               ' → logprob: -20.500001907348633
    10. ' splitting' → logprob: -20.500001907348633

Token 341: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.246537173457909e-06
    2. '.split' → logprob: -12.750003814697266
    3. ' split' → logprob: -13.750003814697266
    4. '(split' → logprob: -16.250003814697266
    5. '().' → logprob: -16.875003814697266
    6. '   ' → logprob: -17.250003814697266
    7. 'spl' → logprob: -18.000003814697266
    8. ')' → logprob: -18.000003814697266
    9. '.' → logprob: -18.125003814697266
    10. '```' → logprob: -18.125003814697266

Token 342: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.5775638222694397
    2. '()))
' → logprob: -0.8275638222694397
    3. '()' → logprob: -6.577563762664795
    4. '))' → logprob: -8.577564239501953
    5. '))
' → logprob: -10.952564239501953
    6. '()
' → logprob: -11.577564239501953
    7. '()))
' → logprob: -12.202564239501953
    8. '()))

' → logprob: -12.327564239501953
    9. '()));' → logprob: -12.577564239501953
    10. '())' → logprob: -13.202564239501953

Token 343: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.2729995988775045e-06
    2. '           ' → logprob: -12.750006675720215
    3. '                   ' → logprob: -12.875006675720215
    4. '		       ' → logprob: -15.500006675720215
    5. 'if' → logprob: -15.625006675720215
    6. '              ' → logprob: -15.750006675720215
    7. ' if' → logprob: -16.5000057220459
    8. '                ' → logprob: -16.5000057220459
    9. '	           ' → logprob: -17.0000057220459
    10. '			' → logprob: -17.2500057220459

Token 344: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001867326645879075
    2. 'if' (adapté à ' if') → logprob: -9.125186920166016
    3. '           ' → logprob: -10.375186920166016
    4. '                   ' → logprob: -10.500186920166016
    5. ' if' → logprob: -11.375186920166016
    6. '                ' → logprob: -13.000186920166016
    7. '              ' → logprob: -13.000186920166016
    8. '       ' → logprob: -13.875186920166016
    9. '             ' → logprob: -14.250186920166016
    10. '		       ' → logprob: -15.375186920166016

Token 345: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.1269499510526657
    2. 'len' → logprob: -2.1269500255584717
    3. '(len' → logprob: -10.75195026397705
    4. '	len' → logprob: -16.126949310302734
    5. ',len' → logprob: -16.376949310302734
    6. '               ' → logprob: -16.501949310302734
    7. '[len' → logprob: -16.751949310302734
    8. ' ' → logprob: -17.126949310302734
    9. '=len' → logprob: -17.751949310302734
    10. '                   ' → logprob: -18.501949310302734

Token 346: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0003209229907952249
    2. '(' → logprob: -8.500321388244629
    3. ' (' → logprob: -9.500321388244629
    4. 'b' → logprob: -10.625321388244629
    5. ' b' → logprob: -11.000321388244629
    6. '(a' → logprob: -14.500321388244629
    7. ' ' → logprob: -15.125321388244629
    8. '(
' → logprob: -15.125321388244629
    9. ')b' → logprob: -16.125320434570312
    10. '<|end|>' → logprob: -16.375320434570312

Token 347: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.05503246933221817
    2. '(b' → logprob: -2.93003249168396
    3. '[b' → logprob: -9.555032730102539
    4. 'b' → logprob: -10.305032730102539
    5. ' b' → logprob: -11.430032730102539
    6. ')b' → logprob: -11.555032730102539
    7. 'List' → logprob: -12.055032730102539
    8. '(a' → logprob: -12.055032730102539
    9. 'list' → logprob: -12.555032730102539
    10. ')' → logprob: -12.555032730102539

Token 348: ')' (ID: 8)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03556716814637184
    2. ')' → logprob: -3.535567283630371
    3. '<' → logprob: -5.160567283630371
    4. ')<' → logprob: -11.035567283630371
    5. ' )' → logprob: -11.285567283630371
    6. '[' → logprob: -11.535567283630371
    7. '()' → logprob: -11.910567283630371
    8. ' ' → logprob: -12.410567283630371
    9. '<|end|>' → logprob: -12.410567283630371
    10. '()<' → logprob: -13.285567283630371

Token 349: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.05489424243569374
    2. '<' → logprob: -2.929894208908081
    3. '<|end|>' → logprob: -11.92989444732666
    4. ' ' → logprob: -13.05489444732666
    5. ')' → logprob: -14.30489444732666
    6. '<class' → logprob: -14.80489444732666
    7. '[' → logprob: -14.92989444732666
    8. '<len' → logprob: -15.30489444732666
    9. '<M' → logprob: -15.67989444732666
    10. '<int' → logprob: -16.054893493652344

Token 350: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.22541433572769165
    2. 'M' → logprob: -1.6004142761230469
    3. ' ' → logprob: -14.225414276123047
    4. ' b' → logprob: -15.225414276123047
    5. 'b' → logprob: -15.475414276123047
    6. '   ' → logprob: -16.350414276123047
    7. '```' → logprob: -16.350414276123047
    8. '	M' → logprob: -16.475414276123047
    9. '>M' → logprob: -16.475414276123047
    10. '[M' → logprob: -16.600414276123047

Token 351: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. '1' → logprob: -15.875000953674316
    3. ' ' → logprob: -16.375
    4. '
' → logprob: -16.6875
    5. '   ' → logprob: -17.0
    6. '```' → logprob: -17.0
    7. '₂' → logprob: -18.8125
    8. '۲' → logprob: -19.0
    9. '  ' → logprob: -19.1875
    10. '_' → logprob: -19.5

Token 352: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5016492605209351
    2. ':' → logprob: -1.626649260520935
    3. '               ' → logprob: -1.876649260520935
    4. '                   ' → logprob: -3.6266493797302246
    5. '):
' → logprob: -4.251649379730225
    6. '):' → logprob: -6.001649379730225
    7. '                       ' → logprob: -7.626649379730225
    8. '           ' → logprob: -7.626649379730225
    9. '                ' → logprob: -9.626648902893066
    10. '():
' → logprob: -9.751648902893066

Token 353: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0001227276516146958
    2. '                       ' → logprob: -9.750123023986816
    3. '                  ' → logprob: -10.500123023986816
    4. '               ' → logprob: -10.625123023986816
    5. '                    ' → logprob: -12.250123023986816
    6. '           ' → logprob: -12.750123023986816
    7. ':
' → logprob: -13.500123023986816
    8. '                 ' → logprob: -14.125123023986816
    9. '                           ' → logprob: -14.375123023986816
    10. '   ' → logprob: -14.375123023986816

Token 354: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.046984508633613586
    2. 'while' (adapté à ' while') → logprob: -3.1719844341278076
    3. '                       ' → logprob: -5.796984672546387
    4. '                   ' → logprob: -7.171984672546387
    5. '               ' → logprob: -9.671984672546387
    6. ' ' → logprob: -10.421984672546387
    7. '	while' → logprob: -10.421984672546387
    8. 'While' → logprob: -11.171984672546387
    9. '   ' → logprob: -11.671984672546387
    10. '                    ' → logprob: -12.171984672546387

Token 355: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.20141908526420593
    2. 'len' → logprob: -1.7014191150665283
    3. '(len' → logprob: -12.20141887664795
    4. ' ' → logprob: -15.07641887664795
    5. '   ' → logprob: -15.57641887664795
    6. '	len' → logprob: -15.82641887664795
    7. '    ' → logprob: -17.326419830322266
    8. '[len' → logprob: -17.951419830322266
    9. '=len' → logprob: -18.201419830322266
    10. '  ' → logprob: -18.326419830322266

Token 356: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -9.968312951968983e-06
    2. 'b' → logprob: -11.875009536743164
    3. '(' → logprob: -13.375009536743164
    4. ' (' → logprob: -14.000009536743164
    5. ' b' → logprob: -14.625009536743164
    6. '(a' → logprob: -17.500009536743164
    7. '(
' → logprob: -19.125009536743164
    8. '	b' → logprob: -19.750009536743164
    9. '<b' → logprob: -19.875009536743164
    10. '(B' → logprob: -20.000009536743164

Token 357: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.008173985406756401
    2. '(b' → logprob: -5.008173942565918
    3. 'b' → logprob: -6.633173942565918
    4. 'list' → logprob: -9.633173942565918
    5. ' b' → logprob: -10.633173942565918
    6. 'List' → logprob: -10.883173942565918
    7. '[b' → logprob: -11.383173942565918
    8. '_b' → logprob: -12.008173942565918
    9. ')b' → logprob: -12.133173942565918
    10. 'a' → logprob: -12.258173942565918

Token 358: ')' (ID: 8)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.052983127534389496
    2. ')' → logprob: -3.427983045578003
    3. '<b' → logprob: -4.052983283996582
    4. '[b' → logprob: -7.677983283996582
    5. ')<' → logprob: -8.052983283996582
    6. 'b' → logprob: -8.052983283996582
    7. '<' → logprob: -8.552983283996582
    8. '<a' → logprob: -9.052983283996582
    9. '(b' → logprob: -9.052983283996582
    10. '()' → logprob: -9.427983283996582

Token 359: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.20780245959758759
    2. '<' → logprob: -1.832802414894104
    3. '<b' → logprob: -3.7078025341033936
    4. 'b' → logprob: -5.8328022956848145
    5. ' b' → logprob: -9.207802772521973
    6. '(b' → logprob: -9.832802772521973
    7. '[b' → logprob: -10.207802772521973
    8. '()<' → logprob: -12.082802772521973
    9. '<a' → logprob: -12.957802772521973
    10. ')<' → logprob: -13.457802772521973

Token 360: ' M' (ID: 391)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1779971569776535
    2. ' b' → logprob: -1.92799711227417
    3. 'M' → logprob: -4.42799711227417
    4. ' M' → logprob: -5.17799711227417
    5. '   ' → logprob: -10.677997589111328
    6. ' ' → logprob: -12.052997589111328
    7. 'm' → logprob: -12.177997589111328
    8. '    ' → logprob: -13.177997589111328
    9. 'len' → logprob: -14.052997589111328
    10. '  ' → logprob: -15.177997589111328

Token 361: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.014684110297821e-06
    2. '_list' → logprob: -12.625008583068848
    3. 'List' → logprob: -12.875008583068848
    4. 'list' → logprob: -13.750008583068848
    5. ' ' → logprob: -13.875008583068848
    6. 'b' → logprob: -15.000008583068848
    7. '   ' → logprob: -15.625008583068848
    8. '
' → logprob: -16.125009536743164
    9. '1' → logprob: -16.437509536743164
    10. '  ' → logprob: -17.000009536743164

Token 362: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03778542950749397
    2. ':' → logprob: -4.162785530090332
    3. '                       ' → logprob: -4.162785530090332
    4. '                   ' → logprob: -5.787785530090332
    5. '               ' → logprob: -6.287785530090332
    6. '):
' → logprob: -7.662785530090332
    7. '():
' → logprob: -9.162785530090332
    8. 'b' → logprob: -9.287785530090332
    9. '       ' → logprob: -9.412785530090332
    10. '                           ' → logprob: -9.912785530090332

Token 363: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.020675132051110268
    2. 'b' → logprob: -4.145675182342529
    3. ' b' → logprob: -6.270675182342529
    4. '                   ' → logprob: -6.270675182342529
    5. '               ' → logprob: -7.395675182342529
    6. '                      ' → logprob: -9.520674705505371
    7. '                        ' → logprob: -10.020674705505371
    8. ':
' → logprob: -10.270674705505371
    9. '                           ' → logprob: -11.270674705505371
    10. '       ' → logprob: -11.520674705505371

Token 364: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.47407835721969604
    2. ' b' → logprob: -0.974078357219696
    3. '                           ' → logprob: -15.349078178405762
    4. '	b' → logprob: -15.349078178405762
    5. '                   ' → logprob: -15.474078178405762
    6. '   ' → logprob: -15.849078178405762
    7. ' ' → logprob: -15.974078178405762
    8. '               ' → logprob: -16.224079132080078
    9. '                       ' → logprob: -16.349079132080078
    10. '                               ' → logprob: -16.974079132080078

Token 365: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.320199877838604e-07
    2. 'b' → logprob: -14.875
    3. 'list' → logprob: -17.25
    4. '_' → logprob: -18.375
    5. '_lists' → logprob: -18.5
    6. '_b' → logprob: -18.75
    7. '_LIST' → logprob: -19.25
    8. 'List' → logprob: -20.375
    9. '_List' → logprob: -20.375
    10. 's' → logprob: -20.75

Token 366: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.38687729835510254
    2. '+=' → logprob: -1.1368772983551025
    3. '+' → logprob: -12.761877059936523
    4. '.extend' → logprob: -13.636877059936523
    5. '   ' → logprob: -14.011877059936523
    6. ']+=' → logprob: -14.511877059936523
    7. '+=(' → logprob: -15.386877059936523
    8. '+="' → logprob: -15.511877059936523
    9. '.append' → logprob: -16.136877059936523
    10. ' +' → logprob: -16.136877059936523

Token 367: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2014150768518448
    2. ' list' → logprob: -1.7014150619506836
    3. '(list' → logprob: -14.451415061950684
    4. 'map' → logprob: -14.576415061950684
    5. ' ' → logprob: -15.326415061950684
    6. '   ' → logprob: -15.951415061950684
    7. '	list' → logprob: -16.701416015625
    8. 'List' → logprob: -16.701416015625
    9. '[list' → logprob: -16.701416015625
    10. ' map' → logprob: -17.076416015625

Token 368: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0020202361047267914
    2. '(list' → logprob: -6.252020359039307
    3. '(int' → logprob: -9.752019882202148
    4. 'map' → logprob: -10.877019882202148
    5. '.map' → logprob: -12.002019882202148
    6. ' (' → logprob: -12.877019882202148
    7. 'int' → logprob: -13.002019882202148
    8. ',map' → logprob: -13.377019882202148
    9. '_map' → logprob: -14.877019882202148
    10. '(' → logprob: -14.877019882202148

Token 369: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00010068230039905757
    2. 'int' → logprob: -9.750101089477539
    3. ',int' → logprob: -11.125101089477539
    4. '=int' → logprob: -11.125101089477539
    5. '<int' → logprob: -12.125101089477539
    6. '(' → logprob: -12.375101089477539
    7. '[int' → logprob: -14.000101089477539
    8. ' (' → logprob: -14.250101089477539
    9. '```' → logprob: -14.250101089477539
    10. ']int' → logprob: -14.625101089477539

Token 370: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0008477445808239281
    2. ',int' → logprob: -7.375847816467285
    3. 'int' → logprob: -8.625847816467285
    4. '=int' → logprob: -11.375847816467285
    5. ',' → logprob: -11.625847816467285
    6. '(input' → logprob: -11.875847816467285
    7. ' (' → logprob: -12.250847816467285
    8. '<int' → logprob: -12.250847816467285
    9. ' int' → logprob: -13.250847816467285
    10. '[int' → logprob: -13.625847816467285

Token 371: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.435855895280838
    2. ' input' → logprob: -1.4358558654785156
    3. 'int' → logprob: -2.1858558654785156
    4. ' int' → logprob: -6.060855865478516
    5. '(input' → logprob: -7.435855865478516
    6. '(int' → logprob: -9.935855865478516
    7. 'str' → logprob: -11.685855865478516
    8. ' ' → logprob: -13.310855865478516
    9. '=input' → logprob: -13.310855865478516
    10. ',input' → logprob: -13.310855865478516

Token 372: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.4849443838757e-06
    2. '()' → logprob: -12.375004768371582
    3. ' ().' → logprob: -15.750004768371582
    4. '()
' → logprob: -16.750003814697266
    5. '(' → logprob: -17.250003814697266
    6. '().
' → logprob: -17.750003814697266
    7. '()).' → logprob: -18.625003814697266
    8. '.strip' → logprob: -20.000003814697266
    9. '()].' → logprob: -20.000003814697266
    10. '('').' → logprob: -20.000003814697266

Token 373: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.00014716439181938767
    2. '.strip' → logprob: -9.000146865844727
    3. '().' → logprob: -11.125146865844727
    4. '-strip' → logprob: -12.625146865844727
    5. 'str' → logprob: -13.375146865844727
    6. '(strip' → logprob: -13.375146865844727
    7. ' strip' → logprob: -14.000146865844727
    8. '('').' → logprob: -14.375146865844727
    9. '_strip' → logprob: -14.625146865844727
    10. 'rstrip' → logprob: -15.500146865844727

Token 374: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.704273118884885e-07
    2. '()' → logprob: -15.375000953674316
    3. '.split' → logprob: -15.375000953674316
    4. '   ' → logprob: -16.0
    5. '               ' → logprob: -17.375
    6. '                       ' → logprob: -17.75
    7. ' ().' → logprob: -17.75
    8. '       ' → logprob: -18.0
    9. '           ' → logprob: -18.25
    10. '```' → logprob: -18.375

Token 375: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -14.875
    3. 'spl' → logprob: -18.25
    4. '(split' → logprob: -19.625
    5. '.split' → logprob: -20.0
    6. '```' → logprob: -21.25
    7. ')' → logprob: -22.0
    8. 's' → logprob: -22.875
    9. '   ' → logprob: -23.5
    10. '
' → logprob: -23.5

Token 376: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.5764103531837463
    2. '()))
' → logprob: -0.8264103531837463
    3. '()' → logprob: -8.076410293579102
    4. '()))
' → logprob: -9.326410293579102
    5. '))' → logprob: -10.451410293579102
    6. '()))

' → logprob: -10.951410293579102
    7. '())' → logprob: -11.701410293579102
    8. '().' → logprob: -12.326410293579102
    9. '()
' → logprob: -12.826410293579102
    10. '())))
' → logprob: -12.951410293579102

Token 377: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06322885304689407
    2. ')' → logprob: -2.8132288455963135
    3. ')
' → logprob: -7.688229084014893
    4. '           ' → logprob: -7.938229084014893
    5. '()' → logprob: -8.563228607177734
    6. '                       ' → logprob: -9.313228607177734
    7. '                   ' → logprob: -9.688228607177734
    8. '())' → logprob: -10.313228607177734
    9. '       ' → logprob: -10.688228607177734
    10. '```' → logprob: -11.688228607177734

Token 378: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003640692448243499
    2. '           ' → logprob: -6.503640651702881
    3. 'break' (adapté à ' break') → logprob: -6.503640651702881
    4. ' break' → logprob: -7.628640651702881
    5. '                   ' → logprob: -9.878641128540039
    6. '       ' → logprob: -10.128641128540039
    7. '<|end|>' → logprob: -10.753641128540039
    8. '                       ' → logprob: -11.503641128540039
    9. '   ' → logprob: -12.003641128540039
    10. '	break' → logprob: -12.253641128540039

Token 379: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5788471102714539
    2. '<|end|>' → logprob: -0.8288471102714539
    3. '<|end|>' → logprob: -6.5788469314575195
    4. '#' → logprob: -7.4538469314575195
    5. '       ' → logprob: -8.20384693145752
    6. '}' → logprob: -8.95384693145752
    7. '    
' → logprob: -8.95384693145752
    8. '           ' → logprob: -9.32884693145752
    9. '    ' → logprob: -9.95384693145752
    10. '```' → logprob: -10.07884693145752

Token 380: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36530548334121704
    2. '<|end|>' → logprob: -1.2403054237365723
    3. '#' → logprob: -4.740305423736572
    4. '    
' → logprob: -5.615305423736572
    5. '<|end|>' → logprob: -6.240305423736572
    6. ')' → logprob: -7.990305423736572
    7. '```' → logprob: -8.36530590057373
    8. '
' → logprob: -8.74030590057373
    9. 'case' → logprob: -8.74030590057373
    10. '  ' → logprob: -8.86530590057373

Token 381: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 382: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29240483045578003
    2. '       ' → logprob: -1.4174048900604248
    3. ':
' → logprob: -4.792404651641846
    4. '   ' → logprob: -5.917404651641846
    5. ' :' → logprob: -9.292405128479004
    6. '[' → logprob: -10.792405128479004
    7. '=' → logprob: -10.917405128479004
    8. '    ' → logprob: -11.167405128479004
    9. ' :
' → logprob: -11.167405128479004
    10. '      ' → logprob: -12.042405128479004

Token 383: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007023199461400509
    2. '   ' → logprob: -5.757023334503174
    3. 'b' → logprob: -6.257023334503174
    4. ' b' → logprob: -6.257023334503174
    5. '	b' → logprob: -13.132022857666016
    6. '      ' → logprob: -14.257022857666016
    7. '    ' → logprob: -14.757022857666016
    8. ' ' → logprob: -14.882022857666016
    9. '     ' → logprob: -15.507022857666016
    10. '           ' → logprob: -16.132022857666016

Token 384: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.10056183487176895
    2. ' b' → logprob: -2.3505618572235107
    3. '       ' → logprob: -7.975561618804932
    4. '   ' → logprob: -11.47556209564209
    5. '	b' → logprob: -15.22556209564209
    6. '
' → logprob: -15.35056209564209
    7. '        
' → logprob: -15.60056209564209
    8. '           ' → logprob: -16.225561141967773
    9. '        ' → logprob: -16.850561141967773
    10. ' 
' → logprob: -17.100561141967773

Token 385: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00016659092216286808
    2. '_' → logprob: -8.750166893005371
    3. '[]' → logprob: -12.250166893005371
    4. '=[]' → logprob: -12.875166893005371
    5. 'list' → logprob: -14.375166893005371
    6. 'List' → logprob: -16.625165939331055
    7. '_l' → logprob: -16.875165939331055
    8. '[' → logprob: -18.000165939331055
    9. '=' → logprob: -18.000165939331055
    10. '_lst' → logprob: -18.125165939331055

Token 386: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519603967666626
    2. ' =' → logprob: -1.5019603967666626
    3. '=[]' → logprob: -10.376960754394531
    4. '=[]
' → logprob: -17.00196075439453
    5. '[:]' → logprob: -17.25196075439453
    6. '[]' → logprob: -18.00196075439453
    7. '==' → logprob: -18.87696075439453
    8. ' ' → logprob: -19.12696075439453
    9. ' =[' → logprob: -19.25196075439453
    10. '＝' → logprob: -19.25196075439453

Token 387: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00020985817536711693
    2. ' []' → logprob: -8.50020980834961
    3. '[]
' → logprob: -12.12520980834961
    4. '[]

' → logprob: -14.25020980834961
    5. '[]}' → logprob: -15.87520980834961
    6. '[' → logprob: -17.50020980834961
    7. '[]>' → logprob: -17.50020980834961
    8. '[])' → logprob: -18.12520980834961
    9. '[]"' → logprob: -19.25020980834961
    10. '[],' → logprob: -20.00020980834961

Token 388: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1560228317975998
    2. '   ' → logprob: -2.281022787094116
    3. 'print' → logprob: -3.781022787094116
    4. ' #' → logprob: -5.781023025512695
    5. 'def' → logprob: -6.156023025512695
    6. '<|end|>' → logprob: -6.156023025512695
    7. '    
' → logprob: -6.406023025512695
    8. '```' → logprob: -6.781023025512695
    9. '
' → logprob: -7.156023025512695
    10. 'import' → logprob: -7.281023025512695

Token 389: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.04765430837869644
    2. 'result' → logprob: -3.797654390335083
    3. 'def' → logprob: -5.172654151916504
    4. 'visited' → logprob: -6.047654151916504
    5. '   ' → logprob: -6.172654151916504
    6. 'answer' → logprob: -6.297654151916504
    7. 'score' → logprob: -6.672654151916504
    8. 'pass' → logprob: -6.797654151916504
    9. 'total' → logprob: -6.922654151916504
    10. 'res' → logprob: -6.922654151916504

Token 390: ' voisins' (ID: 166720)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.023619987070560455
    2. 'def' → logprob: -5.023620128631592
    3. 'print' → logprob: -5.148620128631592
    4. 'result' → logprob: -5.398620128631592
    5. 'pass' → logprob: -6.523620128631592
    6. 'for' → logprob: -7.773620128631592
    7. 'from' → logprob: -7.773620128631592
    8. 'total' → logprob: -7.773620128631592
    9. 'visited' → logprob: -8.023619651794434
    10. 'import' → logprob: -8.148619651794434

Token 391: ' relat' (ID: 37575)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006618977058678865
    2. '_offsets' → logprob: -6.256618976593018
    3. '=' → logprob: -6.631618976593018
    4. 'def' → logprob: -7.631618976593018
    5. 'neighbors' → logprob: -7.631618976593018
    6. 'dire' → logprob: -7.631618976593018
    7. ' offsets' → logprob: -7.881618976593018
    8. 's' → logprob: -7.881618976593018
    9. 'd' → logprob: -8.256619453430176
    10. 'offset' → logprob: -8.631619453430176

Token 392: 'ifs' (ID: 14119)
  Prédit: 'fs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.3031150698661804
    2. 'f' → logprob: -1.9281151294708252
    3. 'ifs' → logprob: -2.303115129470825
    4. 'ves' → logprob: -4.678114891052246
    5. 'if' → logprob: -6.178114891052246
    6. 've' → logprob: -6.553114891052246
    7. 'es' → logprob: -6.803114891052246
    8. '```' → logprob: -7.303114891052246
    9. 'efs' → logprob: -7.928114891052246
    10. 's' → logprob: -8.803114891052246

Token 393: ' en' (ID: 469)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.19257749617099762
    2. '   ' → logprob: -2.442577600479126
    3. 'dx' → logprob: -3.567577600479126
    4. 'dire' → logprob: -3.567577600479126
    5. ' neighbors' → logprob: -4.567577362060547
    6. ' directions' → logprob: -5.567577362060547
    7. 'neighbor' → logprob: -5.817577362060547
    8. 'd' → logprob: -5.817577362060547
    9. 'dirs' → logprob: -6.067577362060547
    10. 'offset' → logprob: -6.317577362060547

Token 394: ' ' (ID: 220)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.6032474637031555
    2. '[' → logprob: -0.9782474637031555
    3. '[
' → logprob: -3.1032474040985107
    4. '3' → logprob: -3.8532474040985107
    5. 'x' → logprob: -5.35324764251709
    6. 'dx' → logprob: -6.47824764251709
    7. 'z' → logprob: -6.72824764251709
    8. '6' → logprob: -7.60324764251709
    9. '(' → logprob: -7.60324764251709
    10. 'xyz' → logprob: -7.72824764251709

Token 395: '3' (ID: 18)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.16502271592617035
    2. '[
' → logprob: -2.290022611618042
    3. '[' → logprob: -3.040022611618042
    4. '3' → logprob: -7.040022850036621
    5. '(' → logprob: -7.540022850036621
    6. '6' → logprob: -8.165022850036621
    7. 'x' → logprob: -8.290022850036621
    8. '[-' → logprob: -8.415022850036621
    9. 'dire' → logprob: -8.415022850036621
    10. 'z' → logprob: -8.790022850036621

Token 396: 'D' (ID: 35)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.13187913596630096
    2. 'D' → logprob: -2.1318790912628174
    3. 'd' → logprob: -5.3818793296813965
    4. 'dx' → logprob: -8.381878852844238
    5. '-d' → logprob: -10.006878852844238
    6. ' x' → logprob: -11.006878852844238
    7. '-D' → logprob: -11.631878852844238
    8. '[' → logprob: -12.131878852844238
    9. '```' → logprob: -12.381878852844238
    10. ' ' → logprob: -12.506878852844238

Token 397: ' (' (ID: 350)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.7894444465637207
    2. '   ' → logprob: -0.9144444465637207
    3. 'dx' → logprob: -3.0394444465637207
    4. 'dire' → logprob: -3.2894444465637207
    5. ' neighbors' → logprob: -3.6644444465637207
    6. 'dirs' → logprob: -4.289444446563721
    7. ' directions' → logprob: -5.039444446563721
    8. ' dx' → logprob: -5.664444446563721
    9. 'd' → logprob: -5.789444446563721
    10. '
' → logprob: -6.664444446563721

Token 398: 'face' (ID: 2300)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -1.23529851436615
    2. 'dx' → logprob: -1.23529851436615
    3. '(-' → logprob: -2.2352986335754395
    4. 'dz' → logprob: -2.4852986335754395
    5. '[' → logprob: -2.7352986335754395
    6. '(' → logprob: -3.2352986335754395
    7. '[(' → logprob: -3.3602986335754395
    8. ')' → logprob: -3.7352986335754395
    9. '(dx' → logprob: -3.9852986335754395
    10. 'dire' → logprob: -4.4852986335754395

Token 399: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2985517382621765
    2. ',' → logprob: -2.7985517978668213
    3. '6' → logprob: -3.0485517978668213
    4. ' =' → logprob: -3.0485517978668213
    5. '   ' → logprob: -3.0485517978668213
    6. '=' → logprob: -3.7985517978668213
    7. 's' → logprob: -5.298551559448242
    8. '):' → logprob: -5.548551559448242
    9. 'd' → logprob: -6.298551559448242
    10. '```' → logprob: -6.423551559448242

Token 400: ' edge' (ID: 11165)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.8767977356910706
    2. 'edge' → logprob: -1.1267976760864258
    3. '6' → logprob: -3.376797676086426
    4. ')' → logprob: -3.376797676086426
    5. 'x' → logprob: -3.376797676086426
    6. 'vertex' → logprob: -3.501797676086426
    7. 'adj' → logprob: -4.001797676086426
    8. 'vo' → logprob: -4.126797676086426
    9. ' edges' → logprob: -4.376797676086426
    10. 'z' → logprob: -4.626797676086426

Token 401: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.061283644288778305
    2. ')' → logprob: -3.811283588409424
    3. '=' → logprob: -4.186283588409424
    4. ' ,' → logprob: -4.686283588409424
    5. ' and' → logprob: -5.061283588409424
    6. 's' → logprob: -6.561283588409424
    7. ' =' → logprob: -6.686283588409424
    8. '   ' → logprob: -7.186283588409424
    9. 'and' → logprob: -7.561283588409424
    10. 'd' → logprob: -7.936283588409424

Token 402: ' corner' (ID: 14194)
  Prédit: 'corner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'corner' → logprob: -0.21923811733722687
    2. ' corner' → logprob: -2.344238042831421
    3. 'vertex' → logprob: -2.594238042831421
    4. ' vertex' → logprob: -3.969238042831421
    5. 'face' → logprob: -5.21923828125
    6. 'corn' → logprob: -6.59423828125
    7. ' face' → logprob: -7.71923828125
    8. ')' → logprob: -10.34423828125
    9. '_corner' → logprob: -10.71923828125
    10. 'point' → logprob: -10.96923828125

Token 403: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41525426506996155
    2. ' =' → logprob: -2.6652543544769287
    3. ',' → logprob: -2.7902543544769287
    4. ')
' → logprob: -3.1652543544769287
    5. '_offsets' → logprob: -3.1652543544769287
    6. ' offsets' → logprob: -3.2902543544769287
    7. '   ' → logprob: -3.9152543544769287
    8. 'dire' → logprob: -4.29025411605835
    9. '=' → logprob: -4.66525411605835
    10. '):' → logprob: -4.79025411605835

Token 404: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44581928849220276
    2. 'neighbors' → logprob: -1.4458192586898804
    3. ' neighbors' → logprob: -2.57081937789917
    4. ' directions' → logprob: -4.44581937789917
    5. 'dirs' → logprob: -4.69581937789917
    6. 'dx' → logprob: -5.07081937789917
    7. 'dire' → logprob: -5.07081937789917
    8. ' dx' → logprob: -5.82081937789917
    9. 'd' → logprob: -5.82081937789917
    10. ' neighbours' → logprob: -6.94581937789917

Token 405: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' (adapté à ' neighbors') → logprob: -0.0849960669875145
    2. 'dirs' → logprob: -3.584995985031128
    3. 'dire' → logprob: -3.834995985031128
    4. '   ' → logprob: -4.209996223449707
    5. 'dx' → logprob: -5.084996223449707
    6. 'd' → logprob: -5.959996223449707
    7. ' neighbors' → logprob: -6.209996223449707
    8. 'ne' → logprob: -6.334996223449707
    9. 'neighbor' → logprob: -6.584996223449707
    10. 'adj' → logprob: -6.584996223449707

Token 406: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001986448187381029
    2. '=' → logprob: -6.376986503601074
    3. '_offsets' → logprob: -8.376986503601074
    4. 's' → logprob: -10.001986503601074
    5. '_' → logprob: -12.751986503601074
    6. '6' → logprob: -13.251986503601074
    7. '   ' → logprob: -14.501986503601074
    8. '_coords' → logprob: -14.876986503601074
    9. '_positions' → logprob: -15.001986503601074
    10. ' =[' → logprob: -15.001986503601074

Token 407: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7667362093925476
    2. '[(' → logprob: -1.0167362689971924
    3. '[
' → logprob: -2.2667362689971924
    4. ' [' → logprob: -3.0167362689971924
    5. ' [(' → logprob: -4.141736030578613
    6. ' [
' → logprob: -5.266736030578613
    7. '[((' → logprob: -10.766736030578613
    8. ' ' → logprob: -12.641736030578613
    9. '[-' → logprob: -13.141736030578613
    10. '[[' → logprob: -13.141736030578613

Token 408: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7581819295883179
    2. 'for' → logprob: -0.8831819295883179
    3. ' for' → logprob: -2.2581820487976074
    4. '[' → logprob: -5.383182048797607
    5. '[
' → logprob: -5.758182048797607
    6. '(' → logprob: -6.508182048797607
    7. '(-' → logprob: -6.633182048797607
    8. '
' → logprob: -7.633182048797607
    9. 'dx' → logprob: -7.633182048797607
    10. '[-' → logprob: -8.00818157196045

Token 409: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07898925989866257
    2. ' for' → logprob: -2.578989267349243
    3. '   ' → logprob: -9.328989028930664
    4. '(-' → logprob: -12.703989028930664
    5. '[-' → logprob: -13.453989028930664
    6. '[' → logprob: -13.453989028930664
    7. '-' → logprob: -13.578989028930664
    8. 'from' → logprob: -13.578989028930664
    9. '[
' → logprob: -14.078989028930664
    10. '	for' → logprob: -14.578989028930664

Token 410: ' dz' (ID: 17303)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.6209452748298645
    2. 'dz' → logprob: -1.1209452152252197
    3. ' dz' → logprob: -2.2459452152252197
    4. ' dx' → logprob: -3.4959452152252197
    5. 'z' → logprob: -8.87094497680664
    6. 'x' → logprob: -9.74594497680664
    7. '_dx' → logprob: -9.74594497680664
    8. '	d' → logprob: -9.87094497680664
    9. 'd' → logprob: -10.24594497680664
    10. '-d' → logprob: -11.12094497680664

Token 411: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1269901692867279
    2. 'in' → logprob: -2.1269900798797607
    3. ' ' → logprob: -10.37699031829834
    4. '-' → logprob: -12.12699031829834
    5. '```' → logprob: -12.12699031829834
    6. 'd' → logprob: -12.37699031829834
    7. '1' → logprob: -13.25199031829834
    8. 's' → logprob: -13.25199031829834
    9. '	in' → logprob: -13.25199031829834
    10. 'In' → logprob: -13.37699031829834

Token 412: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.68925940990448
    2. '-' → logprob: -1.56425940990448
    3. ' range' → logprob: -1.93925940990448
    4. 'range' → logprob: -2.4392595291137695
    5. ' [-' → logprob: -3.5642595291137695
    6. ' in' → logprob: -4.1892595291137695
    7. ' -' → logprob: -4.8142595291137695
    8. '(-' → logprob: -5.5642595291137695
    9. ' (-' → logprob: -6.8142595291137695
    10. '[' → logprob: -7.5642595291137695

Token 413: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '
' → logprob: -15.75000286102295
    4. '2' → logprob: -17.312501907348633
    5. '   ' → logprob: -17.687501907348633
    6. '0' → logprob: -19.000001907348633
    7. '```' → logprob: -19.187501907348633
    8. '3' → logprob: -19.375001907348633
    9. '-' → logprob: -19.375001907348633
    10. '  ' → logprob: -19.500001907348633

Token 414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011050531640648842
    2. ' ,' → logprob: -4.511050701141357
    3. '0' → logprob: -14.1360502243042
    4. ' ' → logprob: -14.2610502243042
    5. ',-' → logprob: -14.6360502243042
    6. ',d' → logprob: -15.3860502243042
    7. '   ' → logprob: -15.7610502243042
    8. ',+' → logprob: -16.011051177978516
    9. ',
' → logprob: -16.136051177978516
    10. ',n' → logprob: -16.386051177978516

Token 415: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004620591644197702
    2. ' ' → logprob: -5.379620552062988
    3. '1' → logprob: -14.879620552062988
    4. '   ' → logprob: -17.629621505737305
    5. '  ' → logprob: -18.004621505737305
    6. ',' → logprob: -18.004621505737305
    7. '-' → logprob: -18.754621505737305
    8. '
' → logprob: -18.879621505737305
    9. ' ' → logprob: -19.754621505737305
    10. '۰' → logprob: -20.379621505737305

Token 416: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019869250245392323
    2. ' ,' → logprob: -6.251986980438232
    3. '1' → logprob: -10.001986503601074
    4. ' ' → logprob: -12.001986503601074
    5. ',+' → logprob: -12.126986503601074
    6. ']' → logprob: -13.751986503601074
    7. ',
' → logprob: -16.37698745727539
    8. ' ]' → logprob: -16.50198745727539
    9. ',-' → logprob: -17.00198745727539
    10. '   ' → logprob: -17.12698745727539

Token 417: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017970333283301443
    2. ' ' → logprob: -8.625179290771484
    3. '+' → logprob: -16.125179290771484
    4. '   ' → logprob: -18.875179290771484
    5. '```' → logprob: -19.000179290771484
    6. '
' → logprob: -19.625179290771484
    7. ',' → logprob: -19.750179290771484
    8. '  ' → logprob: -19.750179290771484
    9. '0' → logprob: -20.000179290771484
    10. ']' → logprob: -20.375179290771484

Token 418: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.6340262293815613
    2. ']:' → logprob: -0.7590262293815613
    3. ']' → logprob: -6.884026050567627
    4. ']:
' → logprob: -8.759026527404785
    5. ' ]' → logprob: -9.259026527404785
    6. '   ' → logprob: -9.634026527404785
    7. ']:

' → logprob: -10.384026527404785
    8. ',' → logprob: -11.259026527404785
    9. '       ' → logprob: -12.009026527404785
    10. ' ' → logprob: -12.009026527404785

Token 419: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35776984691619873
    2. ' for' → logprob: -1.4827698469161987
    3. '   ' → logprob: -3.2327699661254883
    4. '<|end|>' → logprob: -3.7327699661254883
    5. 'for' → logprob: -5.482769966125488
    6. '	for' → logprob: -5.482769966125488
    7. ' ' → logprob: -6.857769966125488
    8. '	' → logprob: -8.232769966125488
    9. '<|end|>' → logprob: -8.982769966125488
    10. ',' → logprob: -8.982769966125488

Token 420: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.027779677882790565
    2. 'for' (adapté à ' for') → logprob: -3.7777795791625977
    3. '   ' → logprob: -5.652779579162598
    4. '       ' → logprob: -7.152779579162598
    5. ' ' → logprob: -8.777779579162598
    6. '	for' → logprob: -9.777779579162598
    7. '           ' → logprob: -11.277779579162598
    8. '    ' → logprob: -11.902779579162598
    9. '	   ' → logprob: -13.652779579162598
    10. '        ' → logprob: -14.527779579162598

Token 421: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.3516853451728821
    2. ' dy' → logprob: -1.2266852855682373
    3. 'dx' → logprob: -5.851685523986816
    4. ' dx' → logprob: -8.101685523986816
    5. '   ' → logprob: -10.476685523986816
    6. ' ' → logprob: -10.851685523986816
    7. '  ' → logprob: -12.351685523986816
    8. '.dy' → logprob: -13.226685523986816
    9. '    ' → logprob: -14.101685523986816
    10. '	d' → logprob: -14.726685523986816

Token 422: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02255689539015293
    2. '[-' → logprob: -4.397556781768799
    3. 'in' → logprob: -4.897556781768799
    4. ' [-' → logprob: -6.022556781768799
    5. '   ' → logprob: -10.022557258605957
    6. ' ' → logprob: -10.772557258605957
    7. '][-' → logprob: -11.522557258605957
    8. '[' → logprob: -12.522557258605957
    9. '```' → logprob: -12.835057258605957
    10. '  ' → logprob: -12.897557258605957

Token 423: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0004156568902544677
    2. ' [-' → logprob: -7.875415802001953
    3. '-' → logprob: -10.250415802001953
    4. '   ' → logprob: -16.875415802001953
    5. '][-' → logprob: -17.250415802001953
    6. '[' → logprob: -17.625415802001953
    7. ' ' → logprob: -17.750415802001953
    8. '{-' → logprob: -17.750415802001953
    9. ' -' → logprob: -18.125415802001953
    10. '  ' → logprob: -18.625415802001953

Token 424: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '<|end|>' → logprob: -18.250001907348633
    4. ' -' → logprob: -18.937501907348633
    5. '
' → logprob: -19.000001907348633
    6. '   ' → logprob: -19.187501907348633
    7. '-' → logprob: -19.750001907348633
    8. ',' → logprob: -19.937501907348633
    9. '  ' → logprob: -20.250001907348633
    10. '```' → logprob: -20.312501907348633

Token 425: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014991489006206393
    2. '1' → logprob: -7.251499176025391
    3. ' ,' → logprob: -8.12649917602539
    4. ',-' → logprob: -8.12649917602539
    5. '-' → logprob: -8.62649917602539
    6. ' ' → logprob: -11.75149917602539
    7. ' -' → logprob: -12.00149917602539
    8. '0' → logprob: -12.87649917602539
    9. '   ' → logprob: -14.12649917602539
    10. ',
' → logprob: -14.87649917602539

Token 426: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.314625690924004e-05
    2. '1' → logprob: -9.750073432922363
    3. ' ' → logprob: -11.125073432922363
    4. '-' → logprob: -17.375072479248047
    5. '01' → logprob: -19.375072479248047
    6. '```' → logprob: -19.625072479248047
    7. '۰' → logprob: -20.125072479248047
    8. ' -' → logprob: -20.437572479248047
    9. '   ' → logprob: -20.562572479248047
    10. ',' → logprob: -20.625072479248047

Token 427: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.480199954239652e-05
    2. ' ,' → logprob: -9.750064849853516
    3. '1' → logprob: -12.000064849853516
    4. ' ' → logprob: -16.000064849853516
    5. ',
' → logprob: -16.875064849853516
    6. '   ' → logprob: -18.437564849853516
    7. '```' → logprob: -18.687564849853516
    8. ',-' → logprob: -18.750064849853516
    9. '       ' → logprob: -18.875064849853516
    10. ']' → logprob: -19.187564849853516

Token 428: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -19.125003814697266
    4. '0' → logprob: -19.250003814697266
    5. '<|end|>' → logprob: -20.875003814697266
    6. '   ' → logprob: -21.500003814697266
    7. ',' → logprob: -21.750003814697266
    8. ']' → logprob: -22.000003814697266
    9. '  ' → logprob: -22.062503814697266
    10. '۱' → logprob: -22.125003814697266

Token 429: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.1778634488582611
    2. ',' → logprob: -2.302863359451294
    3. ']:' → logprob: -3.052863359451294
    4. '       ' → logprob: -4.427863597869873
    5. ']:
' → logprob: -6.802863597869873
    6. '   ' → logprob: -7.302863597869873
    7. '           ' → logprob: -7.552863597869873
    8. ']:

' → logprob: -7.927863597869873
    9. ',d' → logprob: -8.302863121032715
    10. ']' → logprob: -8.427863121032715

Token 430: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34274664521217346
    2. ' for' → logprob: -1.967746615409851
    3. '           ' → logprob: -2.2177467346191406
    4. 'for' → logprob: -3.3427467346191406
    5. '               ' → logprob: -5.467746734619141
    6. '	       ' → logprob: -7.217746734619141
    7. '   ' → logprob: -7.592746734619141
    8. '	for' → logprob: -8.09274673461914
    9. '	' → logprob: -9.84274673461914
    10. ',' → logprob: -9.96774673461914

Token 431: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.48780936002731323
    2. ' for' → logprob: -1.112809419631958
    3. 'for' (adapté à ' for') → logprob: -2.862809419631958
    4. '           ' → logprob: -8.612809181213379
    5. '             ' → logprob: -10.237809181213379
    6. '       ' → logprob: -11.112809181213379
    7. '                ' → logprob: -11.612809181213379
    8. '            ' → logprob: -11.612809181213379
    9. '	for' → logprob: -11.862809181213379
    10. '   ' → logprob: -11.862809181213379

Token 432: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.38687655329704285
    2. ' dx' → logprob: -1.1368765830993652
    3. '_dx' → logprob: -12.761876106262207
    4. '.dx' → logprob: -13.761876106262207
    5. '(dx' → logprob: -13.761876106262207
    6. 'DX' → logprob: -15.386876106262207
    7. 'd' → logprob: -15.886876106262207
    8. ' ' → logprob: -16.511877059936523
    9. '
' → logprob: -17.136877059936523
    10. 'adx' → logprob: -17.636877059936523

Token 433: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012541672214865685
    2. 'in' → logprob: -4.512541770935059
    3. '[' → logprob: -7.887541770935059
    4. '[-' → logprob: -7.887541770935059
    5. ' [-' → logprob: -8.137541770935059
    6. '           ' → logprob: -9.387541770935059
    7. ' ' → logprob: -9.637541770935059
    8. ' =' → logprob: -9.887541770935059
    9. '<|end|>' → logprob: -10.137541770935059
    10. '            ' → logprob: -10.637541770935059

Token 434: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.054917603731155396
    2. ' [-' → logprob: -2.929917573928833
    3. '-' → logprob: -11.054917335510254
    4. '[' → logprob: -11.054917335510254
    5. ' [' → logprob: -13.554917335510254
    6. ' -' → logprob: -13.679917335510254
    7. ' ' → logprob: -14.804917335510254
    8. '][-' → logprob: -14.929917335510254
    9. '(-' → logprob: -16.05491828918457
    10. '([-' → logprob: -16.42991828918457

Token 435: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -13.500003814697266
    3. ']' → logprob: -14.562503814697266
    4. '-' → logprob: -14.937503814697266
    5. '```' → logprob: -15.062503814697266
    6. ',' → logprob: -15.562503814697266
    7. '   ' → logprob: -15.687503814697266
    8. '
' → logprob: -16.062503814697266
    9. ' -' → logprob: -16.875003814697266
    10. '...' → logprob: -16.937503814697266

Token 436: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07905546575784683
    2. ',' → logprob: -3.3290555477142334
    3. ',-' → logprob: -3.3290555477142334
    4. ' -' → logprob: -5.954055309295654
    5. 'in' → logprob: -7.704055309295654
    6. '[-' → logprob: -7.954055309295654
    7. '1' → logprob: -7.954055309295654
    8. ' in' → logprob: -8.829055786132812
    9. '-,' → logprob: -9.204055786132812
    10. ' ,' → logprob: -9.454055786132812

Token 437: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009075298439711332
    2. '-' → logprob: -7.2509074211120605
    3. '0' → logprob: -8.625907897949219
    4. ' ' → logprob: -11.125907897949219
    5. '```' → logprob: -13.125907897949219
    6. ' -' → logprob: -13.750907897949219
    7. ',' → logprob: -16.25090789794922
    8. '   ' → logprob: -16.50090789794922
    9. ']' → logprob: -16.50090789794922
    10. '[-' → logprob: -18.00090789794922

Token 438: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1129055768251419
    2. '1' → logprob: -2.237905502319336
    3. ' ' → logprob: -9.987905502319336
    4. ' ,' → logprob: -10.862905502319336
    5. '0' → logprob: -11.737905502319336
    6. '```' → logprob: -12.237905502319336
    7. '   ' → logprob: -13.612905502319336
    8. '           ' → logprob: -13.862905502319336
    9. '               ' → logprob: -14.737905502319336
    10. '-' → logprob: -14.987905502319336

Token 439: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -15.875017166137695
    4. '   ' → logprob: -17.125017166137695
    5. '0' → logprob: -17.625017166137695
    6. '[' → logprob: -18.125017166137695
    7. ',' → logprob: -18.375017166137695
    8. '<|end|>' → logprob: -18.625017166137695
    9. ']' → logprob: -18.875017166137695
    10. '+' → logprob: -19.500017166137695

Token 440: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.02421906404197216
    2. ']:' → logprob: -3.774219036102295
    3. '               ' → logprob: -7.274219036102295
    4. ']' → logprob: -9.149219512939453
    5. ']:
' → logprob: -9.524219512939453
    6. '           ' → logprob: -11.024219512939453
    7. ']:

' → logprob: -11.024219512939453
    8. '                   ' → logprob: -11.149219512939453
    9. '']:
' → logprob: -11.274219512939453
    10. '"]:
' → logprob: -11.774219512939453

Token 441: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00021784115233458579
    2. '       ' → logprob: -9.50021743774414
    3. ' if' → logprob: -9.75021743774414
    4. '           ' → logprob: -10.62521743774414
    5. 'if' → logprob: -11.12521743774414
    6. '   ' → logprob: -11.62521743774414
    7. '		       ' → logprob: -11.62521743774414
    8. '<|end|>' → logprob: -12.00021743774414
    9. '	           ' → logprob: -12.37521743774414
    10. '                
' → logprob: -12.50021743774414

Token 442: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.46685028076171875
    2. '                   ' → logprob: -1.0918502807617188
    3. '               ' → logprob: -3.9668502807617188
    4. 'if' (adapté à ' if') → logprob: -4.091850280761719
    5. '                       ' → logprob: -7.591850280761719
    6. '   ' → logprob: -7.716850280761719
    7. '                ' → logprob: -8.591850280761719
    8. '           ' → logprob: -8.841850280761719
    9. '                           ' → logprob: -8.966850280761719
    10. '    ' → logprob: -9.591850280761719

Token 443: ' dz' (ID: 17303)
  Prédit: ' dz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dz' → logprob: -0.27710166573524475
    2. ' not' → logprob: -1.6521016359329224
    3. ' dx' → logprob: -4.027101516723633
    4. 'dz' → logprob: -4.402101516723633
    5. 'not' → logprob: -5.027101516723633
    6. '(dx' → logprob: -5.152101516723633
    7. ' (' → logprob: -5.652101516723633
    8. 'dx' → logprob: -6.027101516723633
    9. '(d' → logprob: -6.652101516723633
    10. '(' → logprob: -7.777101516723633

Token 444: '==' (ID: 560)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3188953995704651
    2. ' !=' → logprob: -1.4438953399658203
    3. '==' → logprob: -3.4438953399658203
    4. ' ==' → logprob: -5.56889533996582
    5. ' or' → logprob: -7.19389533996582
    6. ',' → logprob: -8.06889533996582
    7. '|' → logprob: -9.94389533996582
    8. ' ,' → logprob: -10.06889533996582
    9. ' ' → logprob: -10.31889533996582
    10. '()!=' → logprob: -10.81889533996582

Token 445: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009646998951211572
    2. 'dy' → logprob: -7.250964641571045
    3. ' ' → logprob: -8.375965118408203
    4. ' dy' → logprob: -11.500965118408203
    5. 'dx' → logprob: -11.500965118408203
    6. '
' → logprob: -13.250965118408203
    7. '  ' → logprob: -15.125965118408203
    8. '   ' → logprob: -15.125965118408203
    9. '

' → logprob: -15.375965118408203
    10. 'or' → logprob: -15.563465118408203

Token 446: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.12692999839782715
    2. ' and' → logprob: -2.126929998397827
    3. '==' → logprob: -14.501930236816406
    4. '   ' → logprob: -14.751930236816406
    5. ' ' → logprob: -15.001930236816406
    6. ' or' → logprob: -15.126930236816406
    7. '	and' → logprob: -15.376930236816406
    8. 'or' → logprob: -16.501930236816406
    9. '0' → logprob: -16.876930236816406
    10. 'a' → logprob: -17.376930236816406

Token 447: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0011705794604495168
    2. ' dy' → logprob: -6.751170635223389
    3. 'dx' → logprob: -14.87617015838623
    4. '.dy' → logprob: -18.126171112060547
    5. 'd' → logprob: -18.501171112060547
    6. 'dym' → logprob: -19.251171112060547
    7. '	d' → logprob: -19.751171112060547
    8. '   ' → logprob: -20.876171112060547
    9. 'Dy' → logprob: -21.001171112060547
    10. '0' → logprob: -21.376171112060547

Token 448: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -7.600714161526412e-05
    2. ' ==' → logprob: -9.500076293945312
    3. '()==' → logprob: -14.500076293945312
    4. ']==' → logprob: -15.500076293945312
    5. '==
' → logprob: -15.875076293945312
    6. '=' → logprob: -16.500076293945312
    7. ')==' → logprob: -16.875076293945312
    8. '===' → logprob: -16.875076293945312
    9. '0' → logprob: -17.750076293945312
    10. '==-' → logprob: -17.875076293945312

Token 449: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '<|end|>' → logprob: -16.875009536743164
    4. '=' → logprob: -18.750009536743164
    5. '   ' → logprob: -19.250009536743164
    6. '۰' → logprob: -19.500009536743164
    7. '```' → logprob: -19.750009536743164
    8. '  ' → logprob: -20.500009536743164
    9. '==' → logprob: -21.250009536743164
    10. '...' → logprob: -21.437509536743164

Token 450: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014165041036903858
    2. 'and' → logprob: -4.264164924621582
    3. ' ' → logprob: -14.014164924621582
    4. '	and' → logprob: -14.639164924621582
    5. '0' → logprob: -15.889164924621582
    6. '<|end|>' → logprob: -16.8891658782959
    7. '   ' → logprob: -17.5141658782959
    8. ' и' → logprob: -18.1391658782959
    9. '==' → logprob: -18.1391658782959
    10. ' ' → logprob: -18.5141658782959

Token 451: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.048589639365673065
    2. ' dx' → logprob: -3.0485897064208984
    3. '_dx' → logprob: -13.548589706420898
    4. '0' → logprob: -14.173589706420898
    5. '(dx' → logprob: -15.673589706420898
    6. '.dx' → logprob: -16.4235897064209
    7. ' ' → logprob: -17.1735897064209
    8. 'Dx' → logprob: -18.2985897064209
    9. 'DX' → logprob: -19.4235897064209
    10. 'xd' → logprob: -19.5485897064209

Token 452: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0003051917883567512
    2. ' ==' → logprob: -8.12530517578125
    3. '0' → logprob: -12.62530517578125
    4. '=' → logprob: -13.25030517578125
    5. '()==' → logprob: -13.50030517578125
    6. ']==' → logprob: -13.62530517578125
    7. ')==' → logprob: -14.12530517578125
    8. '==
' → logprob: -15.12530517578125
    9. '<|end|>' → logprob: -15.50030517578125
    10. '==(' → logprob: -16.00030517578125

Token 453: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.670925358776003e-05
    2. ' ' → logprob: -9.625066757202148
    3. '<|end|>' → logprob: -14.500066757202148
    4. '   ' → logprob: -16.87506675720215
    5. '۰' → logprob: -17.87506675720215
    6. '  ' → logprob: -18.12506675720215
    7. '=' → logprob: -18.75006675720215
    8. '    ' → logprob: -19.31256675720215
    9. '<|end|>' → logprob: -19.31256675720215
    10. ')' → logprob: -19.50006675720215

Token 454: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14287430047988892
    2. ':
' → logprob: -2.017874240875244
    3. 'continue' → logprob: -9.767874717712402
    4. ' continue' → logprob: -10.392874717712402
    5. '   ' → logprob: -10.392874717712402
    6. '       ' → logprob: -11.142874717712402
    7. '           ' → logprob: -11.142874717712402
    8. '                   ' → logprob: -11.142874717712402
    9. '	continue' → logprob: -11.392874717712402
    10. '               ' → logprob: -11.517874717712402

Token 455: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007145775598473847
    2. ' continue' → logprob: -8.875714302062988
    3. '                       ' → logprob: -8.875714302062988
    4. '               ' → logprob: -9.000714302062988
    5. '		           ' → logprob: -9.625714302062988
    6. 'continue' → logprob: -10.250714302062988
    7. ':' → logprob: -10.250714302062988
    8. '	               ' → logprob: -10.250714302062988
    9. ':
' → logprob: -10.375714302062988
    10. '   ' → logprob: -11.125714302062988

Token 456: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8132691979408264
    2. 'continue' (adapté à ' continue') → logprob: -0.8132691979408264
    3. '                   ' → logprob: -2.4382691383361816
    4. '   ' → logprob: -4.188269138336182
    5. '                       ' → logprob: -5.438269138336182
    6. '       ' → logprob: -5.563269138336182
    7. '	continue' → logprob: -6.813269138336182
    8. '               ' → logprob: -7.313269138336182
    9. '           ' → logprob: -7.313269138336182
    10. 'contin' → logprob: -10.56326961517334

Token 457: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006319015519693494
    2. ',' → logprob: -8.125632286071777
    3. '<|end|>' → logprob: -9.750632286071777
    4. 'neighbors' → logprob: -9.875632286071777
    5. ')' → logprob: -10.000632286071777
    6. 'neighbor' → logprob: -10.625632286071777
    7. '                   ' → logprob: -10.625632286071777
    8. '                
' → logprob: -10.625632286071777
    9. ',
' → logprob: -10.750632286071777
    10. '			' → logprob: -11.250632286071777

Token 458: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0038676580879837275
    2. 'neighbors' → logprob: -5.6288676261901855
    3. ' neighbors' → logprob: -8.753868103027344
    4. '   ' → logprob: -10.628868103027344
    5. '_neighbors' → logprob: -10.753868103027344
    6. '       ' → logprob: -11.128868103027344
    7. '                   ' → logprob: -11.628868103027344
    8. '           ' → logprob: -11.878868103027344
    9. '<|end|>' → logprob: -12.003868103027344
    10. '                
' → logprob: -12.253868103027344

Token 459: ' neighbors' (ID: 31655)
  Prédit: ' neighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' neighbors' → logprob: -0.4450445771217346
    2. 'neighbors' (adapté à ' neighbors') → logprob: -1.0700445175170898
    3. '               ' → logprob: -4.19504451751709
    4. '   ' → logprob: -6.94504451751709
    5. 'neighbor' → logprob: -10.07004451751709
    6. ' if' → logprob: -10.57004451751709
    7. '_neighbors' → logprob: -11.07004451751709
    8. '           ' → logprob: -11.07004451751709
    9. '                
' → logprob: -11.44504451751709
    10. '
' → logprob: -11.44504451751709

Token 460: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007166040013544261
    2. '.' → logprob: -7.250716686248779
    3. ' .' → logprob: -12.750716209411621
    4. ').' → logprob: -13.625716209411621
    5. 'append' → logprob: -13.625716209411621
    6. '.app' → logprob: -14.625716209411621
    7. '.ap' → logprob: -15.250716209411621
    8. '].' → logprob: -15.250716209411621
    9. '.extend' → logprob: -15.750716209411621
    10. '.add' → logprob: -17.000717163085938

Token 461: '(' (ID: 7)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0316251702606678
    2. '(' → logprob: -3.531625270843506
    3. '(d' → logprob: -6.406625270843506
    4. '(dx' → logprob: -8.656624794006348
    5. '([' → logprob: -11.156624794006348
    6. '(
' → logprob: -11.281624794006348
    7. ' (' → logprob: -11.656624794006348
    8. '(z' → logprob: -12.031624794006348
    9. ' ((' → logprob: -13.156624794006348
    10. ' ' → logprob: -13.531624794006348

Token 462: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.02335181273519993
    2. '(dx' → logprob: -3.7733519077301025
    3. ' (' → logprob: -9.523351669311523
    4. '(' → logprob: -10.523351669311523
    5. '(z' → logprob: -12.648351669311523
    6. '   ' → logprob: -14.023351669311523
    7. '[' → logprob: -14.023351669311523
    8. '(dl' → logprob: -15.148351669311523
    9. '((' → logprob: -15.773351669311523
    10. '(D' → logprob: -15.773351669311523

Token 463: 'dz' (ID: 27013)
  Prédit: 'dz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dz' → logprob: -3.1782583391759545e-05
    2. ' dz' → logprob: -10.500031471252441
    3. 'dx' → logprob: -13.250031471252441
    4. '-d' → logprob: -13.750031471252441
    5. '   ' → logprob: -14.125031471252441
    6. ' ' → logprob: -15.375031471252441
    7. '0' → logprob: -15.750031471252441
    8. '  ' → logprob: -16.250032424926758
    9. '1' → logprob: -16.750032424926758
    10. ')' → logprob: -17.375032424926758

Token 464: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006022418383508921
    2. ' ,' → logprob: -8.000601768493652
    3. ',d' → logprob: -8.250601768493652
    4. '<|end|>' → logprob: -12.500601768493652
    5. ',
' → logprob: -13.750601768493652
    6. ')' → logprob: -15.375601768493652
    7. ',)' → logprob: -16.50060272216797
    8. ',y' → logprob: -16.50060272216797
    9. ' ' → logprob: -16.50060272216797
    10. '‌,' → logprob: -16.62560272216797

Token 465: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.038062721490859985
    2. ' dy' → logprob: -3.288062810897827
    3. '<|end|>' → logprob: -11.413063049316406
    4. '.dy' → logprob: -12.538063049316406
    5. 'dym' → logprob: -13.038063049316406
    6. 'd' → logprob: -13.413063049316406
    7. ' ' → logprob: -14.038063049316406
    8. 'ddy' → logprob: -14.163063049316406
    9. 'dx' → logprob: -14.913063049316406
    10. ' ddy' → logprob: -15.038063049316406

Token 466: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4974866644479334e-05
    2. ' ,' → logprob: -11.250015258789062
    3. ',x' → logprob: -13.625015258789062
    4. ',d' → logprob: -14.500015258789062
    5. ',
' → logprob: -15.500015258789062
    6. ')' → logprob: -17.125015258789062
    7. ',

' → logprob: -18.125015258789062
    8. 'dx' → logprob: -19.500015258789062
    9. ',int' → logprob: -19.750015258789062
    10. '),' → logprob: -19.875015258789062

Token 467: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.5759410858154297
    2. ' dx' → logprob: -0.8259410858154297
    3. '_dx' → logprob: -14.07594108581543
    4. ' ' → logprob: -14.95094108581543
    5. '(dx' → logprob: -15.07594108581543
    6. '.dx' → logprob: -16.32594108581543
    7. ')' → logprob: -16.82594108581543
    8. 'DX' → logprob: -17.07594108581543
    9. 'Dx' → logprob: -17.32594108581543
    10. '
' → logprob: -17.57594108581543

Token 468: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. '))' → logprob: -12.375005722045898
    3. ' )' → logprob: -14.125005722045898
    4. ')
' → logprob: -14.750005722045898
    5. '),' → logprob: -17.3750057220459
    6. ')}' → logprob: -18.5000057220459
    7. ')`' → logprob: -19.1250057220459
    8. ',)' → logprob: -20.0000057220459
    9. '}' → logprob: -20.1250057220459
    10. ',' → logprob: -20.2500057220459

Token 469: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.881560041918419e-05
    2. ' )' → logprob: -10.500039100646973
    3. ')
' → logprob: -11.500039100646973
    4. '               ' → logprob: -14.000039100646973
    5. ')#' → logprob: -16.625038146972656
    6. '))' → logprob: -17.125038146972656
    7. '           ' → logprob: -17.250038146972656
    8. '   ' → logprob: -17.500038146972656
    9. '                   ' → logprob: -17.750038146972656
    10. '),' → logprob: -18.000038146972656

Token 470: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34339526295661926
    2. 'visited' → logprob: -1.7183952331542969
    3. 'from' → logprob: -3.343395233154297
    4. 'def' → logprob: -3.968395233154297
    5. '#' → logprob: -3.968395233154297
    6. 'distance' → logprob: -4.468395233154297
    7. 'dp' → logprob: -5.343395233154297
    8. 'import' → logprob: -5.343395233154297
    9. '
' → logprob: -5.593395233154297
    10. 'dist' → logprob: -5.593395233154297

Token 471: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6603951454162598
    2. 'dist' → logprob: -1.6603951454162598
    3. 'dp' → logprob: -2.0353951454162598
    4. 'def' → logprob: -3.1603951454162598
    5. 'distance' → logprob: -3.2853951454162598
    6. '#' (adapté à ' #') → logprob: -3.6603951454162598
    7. 'from' → logprob: -3.9103951454162598
    8. 'result' → logprob: -4.66039514541626
    9. 'reachable' → logprob: -5.53539514541626
    10. 'steps' → logprob: -5.78539514541626

Token 472: ' sim' (ID: 1845)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.182227611541748
    2. 'dist' → logprob: -1.307227611541748
    3. 'from' → logprob: -1.557227611541748
    4. 'dp' → logprob: -2.682227611541748
    5. 'def' → logprob: -2.807227611541748
    6. '#' → logprob: -2.932227611541748
    7. 'distance' → logprob: -4.432227611541748
    8. 'valid' → logprob: -5.557227611541748
    9. 'import' → logprob: -6.307227611541748
    10. 'reachable' → logprob: -6.432227611541748

Token 473: 'uler' (ID: 11802)
  Prédit: 'ulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ulate' → logprob: -0.27225643396377563
    2. 'ulation' → logprob: -1.5222563743591309
    3. 'time' → logprob: -4.897256374359131
    4. 'ulated' → logprob: -5.147256374359131
    5. '#' → logprob: -5.772256374359131
    6. 'ulations' → logprob: -7.397256374359131
    7. 'import' → logprob: -7.522256374359131
    8. 'def' → logprob: -7.647256374359131
    9. 'ulating' → logprob: -7.772256374359131
    10. 'from' → logprob: -7.897256374359131

Token 474: ' N' (ID: 478)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.019020438194275
    2. ' for' → logprob: -1.394020438194275
    3. 'def' → logprob: -2.3940205574035645
    4. 'time' → logprob: -2.7690205574035645
    5. 'distance' → logprob: -3.3940205574035645
    6. 'steps' → logprob: -3.5190205574035645
    7. 'result' → logprob: -3.7690205574035645
    8. ' time' → logprob: -3.8940205574035645
    9. 'visited' → logprob: -4.1440205574035645
    10. ' steps' → logprob: -4.5190205574035645

Token 475: ' jours' (ID: 21323)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.651961088180542
    2. ' for' → logprob: -2.276961088180542
    3. 'times' → logprob: -2.401961088180542
    4. 'time' → logprob: -3.026961088180542
    5. 'steps' → logprob: -3.151961088180542
    6. ')' → logprob: -3.651961088180542
    7. '   ' → logprob: -3.901961088180542
    8. ' =' → logprob: -4.026961326599121
    9. '_steps' → logprob: -4.026961326599121
    10. '_time' → logprob: -4.151961326599121

Token 476: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2745291292667389
    2. '
' → logprob: -1.5245290994644165
    3. 'for' → logprob: -4.024528980255127
    4. ' for' → logprob: -5.774528980255127
    5. '    
' → logprob: -6.649528980255127
    6. '<|end|>' → logprob: -10.649529457092285
    7. '	for' → logprob: -11.274529457092285
    8. '```' → logprob: -11.524529457092285
    9. '

' → logprob: -12.399529457092285
    10. 'n' → logprob: -13.024529457092285

Token 477: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052954066544771194
    2. '
' → logprob: -3.4279539585113525
    3. 'for' → logprob: -4.427954196929932
    4. ' for' → logprob: -5.177954196929932
    5. '    
' → logprob: -6.552954196929932
    6. '<|end|>' → logprob: -10.177953720092773
    7. '    ' → logprob: -11.052953720092773
    8. '```' → logprob: -11.302953720092773
    9. '   
' → logprob: -11.802953720092773
    10. ' 
' → logprob: -12.177953720092773

Token 478: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12358922511339188
    2. ' for' → logprob: -2.248589277267456
    3. '   ' → logprob: -4.623589038848877
    4. '
' → logprob: -7.248589038848877
    5. '    
' → logprob: -9.373589515686035
    6. ' 
' → logprob: -10.123589515686035
    7. '    ' → logprob: -10.623589515686035
    8. 'days' → logprob: -12.123589515686035
    9. '   
' → logprob: -12.248589515686035
    10. 'day' → logprob: -12.623589515686035

Token 479: ' day' (ID: 2163)
  Prédit: ' day'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' day' → logprob: -0.009100803174078465
    2. 'day' → logprob: -5.009100914001465
    3. ' _' → logprob: -6.259100914001465
    4. '_day' → logprob: -8.384100914001465
    5. '_' → logprob: -8.509100914001465
    6. 'd' → logprob: -10.509100914001465
    7. ' d' → logprob: -11.884100914001465
    8. ' i' → logprob: -13.134100914001465
    9. '```' → logprob: -13.634100914001465
    10. 'i' → logprob: -14.009100914001465

Token 480: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005923935677856207
    2. 'in' → logprob: -5.255923748016357
    3. ' ' → logprob: -7.505923748016357
    4. '_' → logprob: -9.380924224853516
    5. ' i' → logprob: -10.505924224853516
    6. ' _' → logprob: -11.130924224853516
    7. ' ' → logprob: -12.005924224853516
    8. '_in' → logprob: -13.380924224853516
    9. ',' → logprob: -13.755924224853516
    10. '	in' → logprob: -13.880924224853516

Token 481: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03804539144039154
    2. ' range' → logprob: -3.2880454063415527
    3. ' ' → logprob: -13.288044929504395
    4. '   ' → logprob: -13.538044929504395
    5. '  ' → logprob: -14.913044929504395
    6. '	range' → logprob: -15.413044929504395
    7. '(range' → logprob: -15.663044929504395
    8. '    ' → logprob: -16.66304588317871
    9. 'rang' → logprob: -17.16304588317871
    10. 'ran' → logprob: -17.78804588317871

Token 482: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1271131932735443
    2. '(N' → logprob: -2.127113103866577
    3. ' (' → logprob: -8.627113342285156
    4. '(n' → logprob: -13.002113342285156
    5. '(
' → logprob: -13.127113342285156
    6. ' N' → logprob: -13.877113342285156
    7. '   ' → logprob: -15.252113342285156
    8. '1' → logprob: -15.252113342285156
    9. ' ' → logprob: -16.127113342285156
    10. 'N' → logprob: -16.502113342285156

Token 483: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -9.424530435353518e-05
    2. ':' → logprob: -10.125094413757324
    3. '):
' → logprob: -10.250094413757324
    4. '+' → logprob: -11.250094413757324
    5. ' ):' → logprob: -12.750094413757324
    6. '   ' → logprob: -13.375094413757324
    7. ',' → logprob: -15.000094413757324
    8. '}:' → logprob: -15.750094413757324
    9. '>:' → logprob: -16.000093460083008
    10. '():' → logprob: -16.125093460083008

Token 484: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3327975571155548
    2. '
' → logprob: -1.8327975273132324
    3. '   ' → logprob: -2.7077975273132324
    4. '    ' → logprob: -3.4577975273132324
    5. '    
' → logprob: -4.457797527313232
    6. ' new' → logprob: -5.582797527313232
    7. 'new' → logprob: -5.832797527313232
    8. '        
' → logprob: -6.082797527313232
    9. '     
' → logprob: -6.957797527313232
    10. ' for' → logprob: -7.082797527313232

Token 485: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.39001017808914185
    2. 'new' (adapté à ' new') → logprob: -1.390010118484497
    3. ' next' → logprob: -3.265010118484497
    4. 'next' → logprob: -3.890010118484497
    5. '   ' → logprob: -4.390010356903076
    6. '       ' → logprob: -6.640010356903076
    7. '    ' → logprob: -7.015010356903076
    8. '
' → logprob: -8.640009880065918
    9. '        
' → logprob: -9.390009880065918
    10. '        ' → logprob: -9.640009880065918

Token 486: '_box' (ID: 22630)
  Prédit: '_box'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_box' → logprob: -0.00016706773021724075
    2. 'box' → logprob: -8.750166893005371
    3. '_' → logprob: -13.000166893005371
    4. '_state' → logprob: -13.750166893005371
    5. ' =' → logprob: -13.875166893005371
    6. '_boxes' → logprob: -13.875166893005371
    7. 'Box' → logprob: -14.375166893005371
    8. ' box' → logprob: -14.500166893005371
    9. '```' → logprob: -14.625166893005371
    10. '=' → logprob: -14.875166893005371

Token 487: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038060080260038376
    2. '=' → logprob: -3.288060188293457
    3. '=[]' → logprob: -11.038060188293457
    4. '[:]' → logprob: -14.788060188293457
    5. ' ' → logprob: -14.913060188293457
    6. '[' → logprob: -14.913060188293457
    7. ',' → logprob: -15.413060188293457
    8. 's' → logprob: -15.538060188293457
    9. '<|end|>' → logprob: -15.663060188293457
    10. '=[' → logprob: -15.663060188293457

Token 488: ' []
' (ID: 8911)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.648282527923584
    2. '[]
' → logprob: -1.148282527923584
    3. '[' → logprob: -2.148282527923584
    4. '[]' → logprob: -3.148282527923584
    5. '[
' → logprob: -10.273283004760742
    6. '[][]' → logprob: -10.273283004760742
    7. ' [' → logprob: -10.523283004760742
    8. ' [[[' → logprob: -10.648283004760742
    9. '[array' → logprob: -11.023283004760742
    10. '[s' → logprob: -11.148283004760742

Token 489: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019769940990954638
    2. ' for' → logprob: -10.000197410583496
    3. '	' → logprob: -10.250197410583496
    4. '<|end|>' → logprob: -10.250197410583496
    5. '   ' → logprob: -10.625197410583496
    6. '	   ' → logprob: -11.000197410583496
    7. '        
' → logprob: -11.875197410583496
    8. '
' → logprob: -12.000197410583496
    9. '	       ' → logprob: -12.000197410583496
    10. 'for' → logprob: -12.375197410583496

Token 490: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.024739865213632584
    2. ' for' → logprob: -3.774739980697632
    3. '       ' → logprob: -6.524739742279053
    4. '   ' → logprob: -10.899740219116211
    5. '	for' → logprob: -11.774740219116211
    6. ' ' → logprob: -15.524740219116211
    7. '           ' → logprob: -16.27474021911621
    8. '
' → logprob: -16.77474021911621
    9. '	   ' → logprob: -16.77474021911621
    10. '    ' → logprob: -17.77474021911621

Token 491: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.000804745068307966
    2. ' z' → logprob: -7.125804901123047
    3. '	z' → logprob: -15.375804901123047
    4. '_z' → logprob: -17.750804901123047
    5. '   ' → logprob: -18.250804901123047
    6. '```' → logprob: -18.250804901123047
    7. '[z' → logprob: -19.500804901123047
    8. '(z' → logprob: -20.000804901123047
    9. ')' → logprob: -20.625804901123047
    10. 'dz' → logprob: -20.750804901123047

Token 492: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003624188946560025
    2. 'in' → logprob: -5.628623962402344
    3. ' ' → logprob: -11.878623962402344
    4. ')' → logprob: -12.378623962402344
    5. ',' → logprob: -12.628623962402344
    6. '=' → logprob: -13.003623962402344
    7. '   ' → logprob: -13.253623962402344
    8. '	in' → logprob: -13.628623962402344
    9. '0' → logprob: -14.128623962402344
    10. ' =' → logprob: -14.253623962402344

Token 493: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01416350994259119
    2. ' range' → logprob: -4.264163494110107
    3. '[' → logprob: -18.264163970947266
    4. '0' → logprob: -18.514163970947266
    5. ' ' → logprob: -19.139163970947266
    6. '	range' → logprob: -20.139163970947266
    7. '   ' → logprob: -20.639163970947266
    8. '(range' → logprob: -21.139163970947266
    9. '  ' → logprob: -22.514163970947266
    10. '    ' → logprob: -23.264163970947266

Token 494: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4740777015686035
    2. '5' → logprob: -0.9740777015686035
    3. '   ' → logprob: -14.974077224731445
    4. ' ' → logprob: -15.099077224731445
    5. '       ' → logprob: -17.724077224731445
    6. '(
' → logprob: -18.974077224731445
    7. '(len' → logprob: -19.224077224731445
    8. '[' → logprob: -19.724077224731445
    9. ' (' → logprob: -19.849077224731445
    10. '           ' → logprob: -19.849077224731445

Token 495: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.500004768371582
    3. '   ' → logprob: -14.375004768371582
    4. 'len' → logprob: -15.500004768371582
    5. ')' → logprob: -17.000003814697266
    6. '(' → logprob: -17.125003814697266
    7. '       ' → logprob: -17.500003814697266
    8. '```' → logprob: -17.750003814697266
    9. '           ' → logprob: -18.375003814697266
    10. '0' → logprob: -19.250003814697266

Token 496: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20163202285766602
    2. '):' → logprob: -1.701632022857666
    3. '):
' → logprob: -8.951631546020508
    4. '   ' → logprob: -10.326631546020508
    5. '       ' → logprob: -10.576631546020508
    6. ':' → logprob: -11.076631546020508
    7. ':
' → logprob: -12.076631546020508
    8. ',' → logprob: -12.826631546020508
    9. ')' → logprob: -13.201631546020508
    10. '):

' → logprob: -13.701631546020508

Token 497: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014082410372793674
    2. '[]' → logprob: -5.014082431793213
    3. '		' → logprob: -6.139082431793213
    4. '       ' → logprob: -6.264082431793213
    5. '[' → logprob: -7.139082431793213
    6. '[]
' → logprob: -7.639082431793213
    7. '   ' → logprob: -7.764082431793213
    8. '	   ' → logprob: -7.889082431793213
    9. '	       ' → logprob: -8.139081954956055
    10. '	' → logprob: -8.389081954956055

Token 498: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.5940302610397339
    2. ' new' → logprob: -1.3440302610397339
    3. '           ' → logprob: -1.7190302610397339
    4. 'layer' → logprob: -6.094030380249023
    5. 'row' → logprob: -6.469030380249023
    6. '   ' → logprob: -6.469030380249023
    7. '               ' → logprob: -6.844030380249023
    8. ' layer' → logprob: -7.594030380249023
    9. ' ' → logprob: -7.594030380249023
    10. '	new' → logprob: -9.594030380249023

Token 499: '_grid' (ID: 34614)
  Prédit: '_box'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_box' → logprob: -0.028106119483709335
    2. '           ' → logprob: -3.778106212615967
    3. '.append' → logprob: -6.403106212615967
    4. '       ' → logprob: -7.653106212615967
    5. ' _' → logprob: -7.653106212615967
    6. '               ' → logprob: -7.903106212615967
    7. '   ' → logprob: -8.028105735778809
    8. '_' → logprob: -8.278105735778809
    9. '_grid' → logprob: -8.528105735778809
    10. '_layer' → logprob: -8.653105735778809

Token 500: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20152901113033295
    2. ' =' → logprob: -1.7015290260314941
    3. '=[]' → logprob: -9.076528549194336
    4. '.append' → logprob: -13.951528549194336
    5. ' ' → logprob: -15.576528549194336
    6. '=[]
' → logprob: -15.826528549194336
    7. '[]' → logprob: -16.826528549194336
    8. '   ' → logprob: -16.951528549194336
    9. '=[' → logprob: -17.326528549194336
    10. '  ' → logprob: -17.576528549194336

Token 501: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.014225680381059647
    2. '[]
' → logprob: -4.264225482940674
    3. ' []' → logprob: -9.764225959777832
    4. '[' → logprob: -12.514225959777832
    5. ' []
' → logprob: -14.389225959777832
    6. '   ' → logprob: -15.764225959777832
    7. ' ' → logprob: -16.264225006103516
    8. '[],' → logprob: -16.514225006103516
    9. '       ' → logprob: -16.514225006103516
    10. '[]>' → logprob: -18.014225006103516

Token 502: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.305134654045105
    2. '       ' → logprob: -1.555134654045105
    3. ' for' → logprob: -4.0551347732543945
    4. '	' → logprob: -4.8051347732543945
    5. '	       ' → logprob: -4.8051347732543945
    6. '		' → logprob: -4.9301347732543945
    7. '   ' → logprob: -5.4301347732543945
    8. '	for' → logprob: -6.1801347732543945
    9. 'for' → logprob: -6.4301347732543945
    10. '	   ' → logprob: -6.8051347732543945

Token 503: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.15531344711780548
    2. '           ' → logprob: -2.655313491821289
    3. ' for' → logprob: -2.905313491821289
    4. '       ' → logprob: -4.030313491821289
    5. '   ' → logprob: -7.030313491821289
    6. '	for' → logprob: -9.530313491821289
    7. '	   ' → logprob: -10.155313491821289
    8. '		' → logprob: -10.655313491821289
    9. '	       ' → logprob: -10.905313491821289
    10. '               ' → logprob: -11.030313491821289

Token 504: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0009115827269852161
    2. ' y' → logprob: -7.000911712646484
    3. '   ' → logprob: -18.250911712646484
    4. 'x' → logprob: -18.500911712646484
    5. '	y' → logprob: -19.250911712646484
    6. ' ' → logprob: -20.875911712646484
    7. 'z' → logprob: -21.125911712646484
    8. '```' → logprob: -21.875911712646484
    9. ''y' → logprob: -22.000911712646484
    10. '`' → logprob: -22.000911712646484

Token 505: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003192685777321458
    2. 'in' → logprob: -5.753192901611328
    3. ' ' → logprob: -12.003192901611328
    4. '<|end|>' → logprob: -12.378192901611328
    5. ')' → logprob: -13.878192901611328
    6. '        ' → logprob: -14.253192901611328
    7. '=' → logprob: -14.503192901611328
    8. '	in' → logprob: -14.628192901611328
    9. '           ' → logprob: -15.503192901611328
    10. '            ' → logprob: -15.628192901611328

Token 506: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038042180240154266
    2. ' range' → logprob: -3.2880420684814453
    3. '(range' → logprob: -14.413042068481445
    4. 'in' → logprob: -16.038042068481445
    5. ' in' → logprob: -16.788042068481445
    6. ' ' → logprob: -17.538042068481445
    7. '[' → logprob: -18.413042068481445
    8. '	range' → logprob: -18.913042068481445
    9. '(' → logprob: -19.038042068481445
    10. 'ange' → logprob: -19.288042068481445

Token 507: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4498052223643754e-05
    2. '5' → logprob: -11.375014305114746
    3. 'range' → logprob: -12.750014305114746
    4. ' (' → logprob: -16.875015258789062
    5. '(range' → logprob: -17.125015258789062
    6. ' range' → logprob: -17.125015258789062
    7. '(
' → logprob: -18.250015258789062
    8. 'for' → logprob: -19.000015258789062
    9. '
' → logprob: -19.125015258789062
    10. ' ' → logprob: -19.375015258789062

Token 508: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -17.125
    4. '(' → logprob: -17.5
    5. 'range' → logprob: -17.75
    6. '0' → logprob: -18.0
    7. '
' → logprob: -19.0
    8. '```' → logprob: -19.625
    9. '           ' → logprob: -19.75
    10. '  ' → logprob: -20.25

Token 509: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.14690333604812622
    2. '):' → logprob: -2.1469032764434814
    3. '           ' → logprob: -4.5219035148620605
    4. ')' → logprob: -5.5219035148620605
    5. '               ' → logprob: -5.5219035148620605
    6. '       ' → logprob: -7.7719035148620605
    7. '   ' → logprob: -9.021903038024902
    8. ':' → logprob: -9.396903038024902
    9. '):
' → logprob: -9.771903038024902
    10. ':
' → logprob: -9.771903038024902

Token 510: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001695057493634522
    2. '           ' → logprob: -6.626695156097412
    3. '	           ' → logprob: -9.376694679260254
    4. '<|end|>' → logprob: -10.001694679260254
    5. '		       ' → logprob: -10.251694679260254
    6. '       ' → logprob: -10.376694679260254
    7. '			' → logprob: -10.501694679260254
    8. '[' → logprob: -10.501694679260254
    9. '	       ' → logprob: -10.501694679260254
    10. '            ' → logprob: -11.626694679260254

Token 511: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.04907723516225815
    2. '                   ' → logprob: -3.549077272415161
    3. 'new' (adapté à ' new') → logprob: -4.049077033996582
    4. '               ' → logprob: -7.049077033996582
    5. ' for' → logprob: -7.924077033996582
    6. '                       ' → logprob: -9.299077033996582
    7. 'for' → logprob: -9.549077033996582
    8. ' ' → logprob: -9.674077033996582
    9. '           ' → logprob: -10.049077033996582
    10. '                ' → logprob: -10.174077033996582

Token 512: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.015003969892859459
    2. '_grid' → logprob: -4.7650041580200195
    3. 'row' → logprob: -5.2650041580200195
    4. '_line' → logprob: -7.1400041580200195
    5. '_' → logprob: -8.14000415802002
    6. '   ' → logprob: -10.64000415802002
    7. ' row' → logprob: -11.01500415802002
    8. '_cell' → logprob: -11.14000415802002
    9. '_x' → logprob: -11.76500415802002
    10. ' _' → logprob: -12.01500415802002

Token 513: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38693028688430786
    2. '=' → logprob: -1.136930227279663
    3. '=[]' → logprob: -9.761930465698242
    4. ' ' → logprob: -14.511930465698242
    5. '=[]
' → logprob: -15.636930465698242
    6. '[]' → logprob: -15.761930465698242
    7. '            ' → logprob: -16.011930465698242
    8. '                ' → logprob: -16.261930465698242
    9. '.append' → logprob: -16.761930465698242
    10. '    ' → logprob: -16.761930465698242

Token 514: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -3.7146746763028204e-05
    2. '[]
' → logprob: -10.37503719329834
    3. ' []' → logprob: -12.25003719329834
    4. '[' → logprob: -15.00003719329834
    5. '['' → logprob: -15.00003719329834
    6. '[],' → logprob: -15.87503719329834
    7. '[]>' → logprob: -15.87503719329834
    8. '""' → logprob: -16.875036239624023
    9. '[]}' → logprob: -16.875036239624023
    10. '[]

' → logprob: -16.875036239624023

Token 515: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004261468129698187
    2. ' for' → logprob: -8.375426292419434
    3. '<|end|>' → logprob: -9.250426292419434
    4. 'for' → logprob: -10.125426292419434
    5. '                   ' → logprob: -11.250426292419434
    6. '       ' → logprob: -11.250426292419434
    7. '           ' → logprob: -11.375426292419434
    8. ' ' → logprob: -12.375426292419434
    9. '			' → logprob: -12.750426292419434
    10. '		       ' → logprob: -12.875426292419434

Token 516: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03406022861599922
    2. ' for' → logprob: -3.78406023979187
    3. '               ' → logprob: -4.534060001373291
    4. '           ' → logprob: -11.40906047821045
    5. '                   ' → logprob: -12.53406047821045
    6. '       ' → logprob: -12.78406047821045
    7. '	for' → logprob: -13.65906047821045
    8. '   ' → logprob: -15.03406047821045
    9. '                ' → logprob: -15.78406047821045
    10. '              ' → logprob: -16.159059524536133

Token 517: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9361264946837764e-07
    2. ' x' → logprob: -16.625
    3. '	x' → logprob: -18.125
    4. '(x' → logprob: -18.625
    5. '$x' → logprob: -18.625
    6. '_x' → logprob: -19.125
    7. ''x' → logprob: -19.75
    8. '"x' → logprob: -19.75
    9. '{x' → logprob: -19.875
    10. '```' → logprob: -19.875

Token 518: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17996490001678467
    2. 'in' → logprob: -1.8049649000167847
    3. '0' → logprob: -10.429965019226074
    4. ':' → logprob: -10.554965019226074
    5. '=' → logprob: -10.554965019226074
    6. '(' → logprob: -10.804965019226074
    7. '               ' → logprob: -10.804965019226074
    8. '                   ' → logprob: -11.054965019226074
    9. '<|end|>' → logprob: -11.054965019226074
    10. '<|end|>' → logprob: -11.929965019226074

Token 519: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.7697225252486533e-06
    2. ' range' → logprob: -12.500003814697266
    3. '[' → logprob: -16.750003814697266
    4. '(range' → logprob: -19.250003814697266
    5. '(' → logprob: -21.375003814697266
    6. '	range' → logprob: -23.375003814697266
    7. '   ' → logprob: -23.500003814697266
    8. '0' → logprob: -24.875003814697266
    9. '
' → logprob: -25.500003814697266
    10. ')' → logprob: -25.500003814697266

Token 520: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. '5' → logprob: -17.5
    3. ' (' → logprob: -17.875
    4. '                   ' → logprob: -19.0
    5. '               ' → logprob: -19.0
    6. '(
' → logprob: -19.625
    7. '           ' → logprob: -20.375
    8. '   ' → logprob: -21.25
    9. '[' → logprob: -21.375
    10. 'len' → logprob: -21.625

Token 521: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.3782830137643032e-05
    2. ' ' → logprob: -11.37501335144043
    3. ')' → logprob: -14.00001335144043
    4. '   ' → logprob: -14.75001335144043
    5. '(' → logprob: -15.50001335144043
    6. 'len' → logprob: -16.12501335144043
    7. '           ' → logprob: -16.31251335144043
    8. '```' → logprob: -16.43751335144043
    9. '               ' → logprob: -16.68751335144043
    10. '       ' → logprob: -16.68751335144043

Token 522: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1610071361064911
    2. '):' → logprob: -1.9110071659088135
    3. '               ' → logprob: -8.161006927490234
    4. '                   ' → logprob: -8.786006927490234
    5. ')' → logprob: -8.911006927490234
    6. '):
' → logprob: -9.286006927490234
    7. '           ' → logprob: -9.786006927490234
    8. '):

' → logprob: -10.911006927490234
    9. ':' → logprob: -11.911006927490234
    10. ']:
' → logprob: -12.286006927490234

Token 523: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.021155301481485367
    2. '                    ' → logprob: -5.14615535736084
    3. ' ' → logprob: -5.39615535736084
    4. '                ' → logprob: -5.39615535736084
    5. '               ' → logprob: -6.64615535736084
    6. '<|end|>' → logprob: -7.02115535736084
    7. '                  ' → logprob: -7.27115535736084
    8. '                           ' → logprob: -7.64615535736084
    9. '           ' → logprob: -7.77115535736084
    10. '                       ' → logprob: -7.89615535736084

Token 524: ' #' (ID: 1069)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.6066665053367615
    2. 'count' → logprob: -1.6066665649414062
    3. '                       ' → logprob: -1.8566665649414062
    4. ' cnt' → logprob: -3.6066665649414062
    5. ' live' → logprob: -4.231666564941406
    6. '                   ' → logprob: -4.356666564941406
    7. ' cell' → logprob: -4.981666564941406
    8. ' alive' → logprob: -5.106666564941406
    9. 'cnt' → logprob: -5.606666564941406
    10. 'alive' → logprob: -5.856666564941406

Token 525: ' compter' (ID: 81694)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.1506359577178955
    2. 'cnt' → logprob: -3.2756359577178955
    3. 'cell' → logprob: -3.6506359577178955
    4. ' count' → logprob: -3.7756359577178955
    5. 'alive' → logprob: -3.7756359577178955
    6. '                   ' → logprob: -4.775635719299316
    7. 'live' → logprob: -5.525635719299316
    8. 'pos' → logprob: -5.650635719299316
    9. ' cell' → logprob: -6.025635719299316
    10. 's' → logprob: -6.400635719299316

Token 526: ' voisins' (ID: 166720)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.269906759262085
    2. 'alive' → logprob: -1.269906759262085
    3. ' count' → logprob: -1.769906759262085
    4. ' alive' → logprob: -2.519906759262085
    5. '                   ' → logprob: -3.269906759262085
    6. 'neighbors' → logprob: -3.769906759262085
    7. '=' → logprob: -4.019906997680664
    8. 'cnt' → logprob: -4.269906997680664
    9. ' live' → logprob: -4.269906997680664
    10. ' =' → logprob: -4.269906997680664

Token 527: ' viv' (ID: 10697)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6955054998397827
    2. 'alive' → logprob: -1.6955054998397827
    3. ' =' → logprob: -2.0705056190490723
    4. ' alive' → logprob: -3.0705056190490723
    5. '=' → logprob: -3.4455056190490723
    6. 'active' → logprob: -3.5705056190490723
    7. '_alive' → logprob: -4.195505619049072
    8. ' live' → logprob: -4.820505619049072
    9. 'count' → logprob: -4.820505619049072
    10. 'live' → logprob: -4.820505619049072

Token 528: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.012668210081756115
    2. 'ant' → logprob: -4.387668132781982
    3. 'ents' → logprob: -9.76266860961914
    4. 'nts' → logprob: -11.01266860961914
    5. 'es' → logprob: -11.13766860961914
    6. 'ent' → logprob: -11.51266860961914
    7. 't' → logprob: -11.63766860961914
    8. ' ants' → logprob: -11.88766860961914
    9. 'ves' → logprob: -12.01266860961914
    10. 'ts' → logprob: -12.26266860961914

Token 529: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.012228953652083874
    2. '                    ' → logprob: -5.012228965759277
    3. ',' → logprob: -6.762228965759277
    4. '(' → logprob: -7.137228965759277
    5. '               ' → logprob: -7.137228965759277
    6. '                    
' → logprob: -7.387228965759277
    7. '                       ' → logprob: -7.887228965759277
    8. '                ' → logprob: -8.637228965759277
    9. ' (' → logprob: -8.887228965759277
    10. '    ' → logprob: -9.137228965759277

Token 530: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.015243373811244965
    2. '                    ' → logprob: -4.6402435302734375
    3. '               ' → logprob: -6.3902435302734375
    4. ' ' → logprob: -7.6402435302734375
    5. '                ' → logprob: -7.6402435302734375
    6. '                    
' → logprob: -7.7652435302734375
    7. ' (' → logprob: -7.8902435302734375
    8. '(' → logprob: -8.015243530273438
    9. ',' → logprob: -8.265243530273438
    10. '                  ' → logprob: -8.390243530273438

Token 531: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.6826493144035339
    2. 'alive' → logprob: -1.3076493740081787
    3. 'live' → logprob: -1.8076493740081787
    4. ' count' → logprob: -3.6826493740081787
    5. ' live' → logprob: -4.1826491355896
    6. 'cnt' → logprob: -4.6826491355896
    7. ' alive' → logprob: -5.4326491355896
    8. '                   ' → logprob: -5.5576491355896
    9. ' cnt' → logprob: -6.5576491355896
    10. 'neighbors' → logprob: -8.182649612426758

Token 532: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.055269259959459305
    2. '=' → logprob: -2.930269241333008
    3. '_' → logprob: -7.930269241333008
    4. ' ' → logprob: -11.180269241333008
    5. '_alive' → logprob: -11.805269241333008
    6. '   ' → logprob: -13.555269241333008
    7. '_neighbors' → logprob: -13.680269241333008
    8. ',' → logprob: -14.180269241333008
    9. '_live' → logprob: -14.305269241333008
    10. 's' → logprob: -14.555269241333008

Token 533: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036003058776259422
    2. ' ' → logprob: -5.628600120544434
    3. '   ' → logprob: -16.12860107421875
    4. 'sum' → logprob: -16.62860107421875
    5. ' sum' → logprob: -17.87860107421875
    6. ' ' → logprob: -18.25360107421875
    7. '                   ' → logprob: -19.37860107421875
    8. '1' → logprob: -19.87860107421875
    9. '000' → logprob: -20.00360107421875
    10. '  ' → logprob: -20.44110107421875

Token 534: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.961759259458631e-06
    2. 'sum' → logprob: -12.750004768371582
    3. ' ' → logprob: -13.125004768371582
    4. '   ' → logprob: -17.3750057220459
    5. 'int' → logprob: -18.2500057220459
    6. ' sum' → logprob: -19.2500057220459
    7. '000' → logprob: -19.3750057220459
    8. '```' → logprob: -19.9375057220459
    9. ')' → logprob: -20.4375057220459
    10. '...' → logprob: -20.6250057220459

Token 535: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005106156691908836
    2. '                    ' → logprob: -6.255105972290039
    3. '                    
' → logprob: -6.755105972290039
    4. '<|end|>' → logprob: -7.130105972290039
    5. '               ' → logprob: -8.005105972290039
    6. '                  ' → logprob: -9.005105972290039
    7. ' ' → logprob: -9.380105972290039
    8. '                ' → logprob: -9.380105972290039
    9. '                       ' → logprob: -9.505105972290039
    10. ')' → logprob: -9.755105972290039

Token 536: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02430225908756256
    2. '                    ' → logprob: -4.3993024826049805
    3. '<|end|>' → logprob: -5.2743024826049805
    4. ' ' → logprob: -5.6493024826049805
    5. '                ' → logprob: -7.1493024826049805
    6. '               ' → logprob: -7.5243024826049805
    7. '                  ' → logprob: -7.8993024826049805
    8. '                    
' → logprob: -8.02430248260498
    9. '    ' → logprob: -8.52430248260498
    10. '           ' → logprob: -9.02430248260498

Token 537: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5363382697105408
    2. 'for' (adapté à ' for') → logprob: -1.0363383293151855
    3. '
' → logprob: -3.1613383293151855
    4. ' 
' → logprob: -4.9113383293151855
    5. '                   ' → logprob: -5.0363383293151855
    6. '                    
' → logprob: -6.1613383293151855
    7. '                    ' → logprob: -7.5363383293151855
    8. '                     
' → logprob: -7.9113383293151855
    9. '    
' → logprob: -9.036337852478027
    10. ' ' → logprob: -9.036337852478027

Token 538: ' dz' (ID: 17303)
  Prédit: ' dz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dz' → logprob: -0.3685154914855957
    2. 'dz' → logprob: -1.9935154914855957
    3. ' (' → logprob: -2.2435154914855957
    4. '(d' → logprob: -2.7435154914855957
    5. '(' → logprob: -7.368515491485596
    6. '   ' → logprob: -8.243515014648438
    7. 'nz' → logprob: -8.743515014648438
    8. '(n' → logprob: -9.118515014648438
    9. ' nz' → logprob: -9.118515014648438
    10. '	d' → logprob: -9.243515014648438

Token 539: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003337969828862697
    2. ',d' → logprob: -8.750333786010742
    3. ',y' → logprob: -9.125333786010742
    4. ' in' → logprob: -10.375333786010742
    5. ' ,' → logprob: -10.875333786010742
    6. ',x' → logprob: -12.125333786010742
    7. 'in' → logprob: -12.500333786010742
    8. ',z' → logprob: -13.500333786010742
    9. ',in' → logprob: -13.750333786010742
    10. 'dy' → logprob: -14.250333786010742

Token 540: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.02324768900871277
    2. ' dy' → logprob: -3.773247718811035
    3. 'd' → logprob: -13.898247718811035
    4. 'ddy' → logprob: -14.398247718811035
    5. '.dy' → logprob: -15.398247718811035
    6. 'dym' → logprob: -15.773247718811035
    7. ' ddy' → logprob: -15.773247718811035
    8. 'dx' → logprob: -16.27324676513672
    9. ' ' → logprob: -16.77324676513672
    10. 'dj' → logprob: -17.52324676513672

Token 541: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004109865520149469
    2. ',d' → logprob: -5.504109859466553
    3. ',x' → logprob: -11.004110336303711
    4. ' ,' → logprob: -11.504110336303711
    5. 'dx' → logprob: -13.629110336303711
    6. '_dx' → logprob: -13.754110336303711
    7. ',int' → logprob: -14.129110336303711
    8. ',user' → logprob: -15.379110336303711
    9. '(dx' → logprob: -15.379110336303711
    10. ' dx' → logprob: -15.504110336303711

Token 542: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -2.7610454708337784e-05
    2. ' dx' → logprob: -10.500027656555176
    3. '_dx' → logprob: -17.37502670288086
    4. 'dz' → logprob: -17.50002670288086
    5. '.dx' → logprob: -18.62502670288086
    6. 'd' → logprob: -19.25002670288086
    7. '(dx' → logprob: -19.25002670288086
    8. 'dc' → logprob: -19.62502670288086
    9. 'ds' → logprob: -21.12502670288086
    10. 'DX' → logprob: -22.12502670288086

Token 543: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008637731894850731
    2. 'in' → logprob: -4.75863790512085
    3. '                       ' → logprob: -12.008637428283691
    4. '                   ' → logprob: -12.258637428283691
    5. ',' → logprob: -12.633637428283691
    6. '                    ' → logprob: -13.383637428283691
    7. '	in' → logprob: -13.383637428283691
    8. '<|end|>' → logprob: -13.633637428283691
    9. '                        ' → logprob: -13.883637428283691
    10. '                           ' → logprob: -14.008637428283691

Token 544: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.0019287518225610256
    2. ' neighbors' → logprob: -6.251928806304932
    3. '_neighbors' → logprob: -17.251928329467773
    4. '[' → logprob: -17.251928329467773
    5. '```' → logprob: -17.626928329467773
    6. ')' → logprob: -18.751928329467773
    7. 'ne' → logprob: -18.876928329467773
    8. '   ' → logprob: -18.876928329467773
    9. ' ' → logprob: -19.126928329467773
    10. '
' → logprob: -19.251928329467773

Token 545: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10553672164678574
    2. ':
' → logprob: -2.480536699295044
    3. '                   ' → logprob: -4.605536937713623
    4. '                       ' → logprob: -5.230536937713623
    5. '<|end|>' → logprob: -7.355536937713623
    6. '):
' → logprob: -8.980536460876465
    7. '               ' → logprob: -9.855536460876465
    8. '	                   ' → logprob: -10.605536460876465
    9. '                           ' → logprob: -10.730536460876465
    10. '<|end|>' → logprob: -10.730536460876465

Token 546: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2991389036178589
    2. '                       ' → logprob: -1.4241389036178589
    3. '<|end|>' → logprob: -4.299139022827148
    4. '                    ' → logprob: -6.799139022827148
    5. '                        
' → logprob: -7.049139022827148
    6. '	                   ' → logprob: -7.924139022827148
    7. '                           ' → logprob: -8.049139022827148
    8. '                    
' → logprob: -8.299139022827148
    9. '       ' → logprob: -8.549139022827148
    10. '               ' → logprob: -9.049139022827148

Token 547: ' nz' (ID: 32428)
  Prédit: 'nz'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nz' (adapté à ' nz') → logprob: -0.5915074348449707
    2. ' nz' → logprob: -0.8415074348449707
    3. 'z' → logprob: -5.091507434844971
    4. ' z' → logprob: -5.216507434844971
    5. '                           ' → logprob: -6.091507434844971
    6. ' zz' → logprob: -7.216507434844971
    7. '                       ' → logprob: -8.091506958007812
    8. 'zz' → logprob: -8.466506958007812
    9. '                            ' → logprob: -9.841506958007812
    10. 'Z' → logprob: -10.091506958007812

Token 548: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011383427307009697
    2. ' =' → logprob: -4.511383533477783
    3. '=z' → logprob: -8.011383056640625
    4. ',' → logprob: -12.886383056640625
    5. '=n' → logprob: -14.136383056640625
    6. ',z' → logprob: -14.886383056640625
    7. '=x' → logprob: -16.886383056640625
    8. '=
' → logprob: -17.261383056640625
    9. '=}' → logprob: -17.386383056640625
    10. 'z' → logprob: -17.511383056640625

Token 549: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.020559756085276604
    2. ' z' → logprob: -3.895559787750244
    3. '   ' → logprob: -12.270559310913086
    4. '                       ' → logprob: -12.520559310913086
    5. '                   ' → logprob: -12.645559310913086
    6. '	z' → logprob: -13.395559310913086
    7. '           ' → logprob: -13.395559310913086
    8. ' ' → logprob: -14.770559310913086
    9. '                           ' → logprob: -14.770559310913086
    10. '               ' → logprob: -14.895559310913086

Token 550: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4740850329399109
    2. ' +' → logprob: -0.9740850329399109
    3. '+
' → logprob: -12.599084854125977
    4. ' +
' → logprob: -12.849084854125977
    5. '+d' → logprob: -13.599084854125977
    6. '
' → logprob: -15.224084854125977
    7. ' ' → logprob: -16.099084854125977
    8. '   ' → logprob: -16.349084854125977
    9. '<|end|>' → logprob: -16.849084854125977
    10. '+x' → logprob: -17.224084854125977

Token 551: ' dz' (ID: 17303)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dz' → logprob: -1.9027791495318525e-05
    2. ' dz' → logprob: -10.875019073486328
    3. 'Dz' → logprob: -17.625019073486328
    4. 'd' → logprob: -18.625019073486328
    5. 'z' → logprob: -18.750019073486328
    6. '1' → logprob: -19.125019073486328
    7. '   ' → logprob: -19.250019073486328
    8. 'dzi' → logprob: -19.250019073486328
    9. '           ' → logprob: -19.250019073486328
    10. '	d' → logprob: -19.500019073486328

Token 552: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.11414129287004471
    2. '<|end|>' → logprob: -2.9891412258148193
    3. '
' → logprob: -3.2391412258148193
    4. '                        
' → logprob: -5.364141464233398
    5. '                   ' → logprob: -5.489141464233398
    6. 'if' → logprob: -6.239141464233398
    7. ',' → logprob: -6.989141464233398
    8. ' if' → logprob: -7.239141464233398
    9. ')' → logprob: -7.239141464233398
    10. '                        ' → logprob: -7.364141464233398

Token 553: '                       ' (ID: 968)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6763641834259033
    2. '<|end|>' → logprob: -1.3013641834259033
    3. '                       ' → logprob: -2.1763641834259033
    4. 'if' → logprob: -2.6763641834259033
    5. ' ' → logprob: -4.301363945007324
    6. '                   ' → logprob: -4.426363945007324
    7. '                        ' → logprob: -5.926363945007324
    8. '                               ' → logprob: -6.176363945007324
    9. '               ' → logprob: -6.676363945007324
    10. '                           ' → logprob: -6.801363945007324

Token 554: ' ny' (ID: 4423)
  Prédit: ' ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ny' → logprob: -0.31324470043182373
    2. '0' → logprob: -2.0632448196411133
    3. 'ny' (adapté à ' ny') → logprob: -2.5632448196411133
    4. ' if' → logprob: -3.5632448196411133
    5. ' nz' → logprob: -4.563244819641113
    6. ' ' → logprob: -4.563244819641113
    7. 'n' → logprob: -5.313244819641113
    8. 'if' → logprob: -5.688244819641113
    9. ' n' → logprob: -6.063244819641113
    10. ' nx' → logprob: -6.563244819641113

Token 555: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815006136894226
    2. ' =' → logprob: -4.0181498527526855
    3. '=y' → logprob: -16.143150329589844
    4. ')' → logprob: -16.768150329589844
    5. '=
' → logprob: -17.518150329589844
    6. ',' → logprob: -18.518150329589844
    7. ' ' → logprob: -19.018150329589844
    8. '                       ' → logprob: -19.393150329589844
    9. 'n' → logprob: -19.768150329589844
    10. '   ' → logprob: -19.768150329589844

Token 556: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.313262403011322
    2. ' y' → logprob: -1.3132624626159668
    3. '	y' → logprob: -14.813261985778809
    4. '                       ' → logprob: -16.438262939453125
    5. '   ' → logprob: -16.813262939453125
    6. '           ' → logprob: -17.563262939453125
    7. '(y' → logprob: -17.813262939453125
    8. ' ' → logprob: -17.938262939453125
    9. ')y' → logprob: -17.938262939453125
    10. '                   ' → logprob: -18.313262939453125

Token 557: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20141352713108063
    2. '+' → logprob: -1.7014135122299194
    3. ' +
' → logprob: -16.326414108276367
    4. '+
' → logprob: -16.451414108276367
    5. '                       ' → logprob: -17.701414108276367
    6. '＋' → logprob: -17.701414108276367
    7. '=' → logprob: -18.076414108276367
    8. ' ' → logprob: -18.326414108276367
    9. ' ' → logprob: -18.576414108276367
    10. '()+' → logprob: -19.076414108276367

Token 558: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.002585646929219365
    2. 'dx' → logprob: -6.502585411071777
    3. ' dy' → logprob: -6.877585411071777
    4. '1' → logprob: -9.877585411071777
    5. ' dx' → logprob: -14.252585411071777
    6. 'dym' → logprob: -16.627586364746094
    7. ' ' → logprob: -16.627586364746094
    8. '.dy' → logprob: -17.002586364746094
    9. 'dz' → logprob: -17.377586364746094
    10. 'd' → logprob: -17.877586364746094

Token 559: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.015287747606635094
    2. '<|end|>' → logprob: -4.39028787612915
    3. '                   ' → logprob: -6.76528787612915
    4. '                        ' → logprob: -8.265287399291992
    5. '               ' → logprob: -8.390287399291992
    6. '                           ' → logprob: -8.515287399291992
    7. '                        
' → logprob: -8.640287399291992
    8. 'if' → logprob: -8.765287399291992
    9. ')' → logprob: -8.890287399291992
    10. ' if' → logprob: -9.640287399291992

Token 560: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.011723510921001434
    2. '<|end|>' → logprob: -4.761723518371582
    3. '                   ' → logprob: -7.136723518371582
    4. '                           ' → logprob: -7.636723518371582
    5. '                        ' → logprob: -7.761723518371582
    6. '               ' → logprob: -8.261723518371582
    7. '					' → logprob: -8.636723518371582
    8. ' ' → logprob: -9.011723518371582
    9. 'if' → logprob: -9.261723518371582
    10. '           ' → logprob: -9.386723518371582

Token 561: ' nx' (ID: 50118)
  Prédit: ' nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.014180909842252731
    2. 'nx' (adapté à ' nx') → logprob: -4.264181137084961
    3. ' n' → logprob: -11.889181137084961
    4. '                       ' → logprob: -12.264181137084961
    5. '(nx' → logprob: -12.889181137084961
    6. 'n' → logprob: -13.514181137084961
    7. ' nz' → logprob: -13.764181137084961
    8. ' ' → logprob: -15.389181137084961
    9. ' Nx' → logprob: -15.889181137084961
    10. '                        ' → logprob: -16.01418113708496

Token 562: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029752103611826897
    2. '=' → logprob: -3.529752016067505
    3. ' ' → logprob: -14.654751777648926
    4. '                       ' → logprob: -15.279751777648926
    5. '                           ' → logprob: -15.654751777648926
    6. ' =
' → logprob: -15.779751777648926
    7. ')' → logprob: -16.029752731323242
    8. '                        ' → logprob: -16.154752731323242
    9. '                   ' → logprob: -16.154752731323242
    10. '                               ' → logprob: -16.904752731323242

Token 563: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20141372084617615
    2. ' x' → logprob: -1.7014137506484985
    3. '(x' → logprob: -15.451414108276367
    4. ' ' → logprob: -16.326414108276367
    5. '	x' → logprob: -16.326414108276367
    6. '   ' → logprob: -16.576414108276367
    7. '           ' → logprob: -17.701414108276367
    8. '                   ' → logprob: -18.076414108276367
    9. '                       ' → logprob: -18.201414108276367
    10. '               ' → logprob: -18.576414108276367

Token 564: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3135562241077423
    2. '+' → logprob: -1.31355619430542
    3. ' -' → logprob: -8.938556671142578
    4. '-' → logprob: -8.938556671142578
    5. '+x' → logprob: -10.813556671142578
    6. 'if' → logprob: -12.188556671142578
    7. ' +
' → logprob: -13.438556671142578
    8. ' ' → logprob: -13.813556671142578
    9. ' if' → logprob: -14.188556671142578
    10. '=' → logprob: -14.313556671142578

Token 565: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0010632978519424796
    2. ' dx' → logprob: -6.876063346862793
    3. 'x' → logprob: -10.501063346862793
    4. '1' → logprob: -13.001063346862793
    5. '(dx' → logprob: -14.626063346862793
    6. '```' → logprob: -15.876063346862793
    7. 'xd' → logprob: -16.751062393188477
    8. '_dx' → logprob: -17.376062393188477
    9. '.dx' → logprob: -17.501062393188477
    10. 'nx' → logprob: -17.626062393188477

Token 566: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.054724179208278656
    2. '                       ' → logprob: -3.1797242164611816
    3. '<|end|>' → logprob: -4.804724216461182
    4. '                        
' → logprob: -7.304724216461182
    5. ',' → logprob: -7.929724216461182
    6. '               ' → logprob: -8.179723739624023
    7. '
' → logprob: -8.179723739624023
    8. ')' → logprob: -8.179723739624023
    9. '           ' → logprob: -8.304723739624023
    10. '                    ' → logprob: -8.679723739624023

Token 567: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.018009226769208908
    2. '                       ' → logprob: -4.143009185791016
    3. 'if' → logprob: -8.018009185791016
    4. '```' → logprob: -8.143009185791016
    5. '<|end|>' → logprob: -8.518009185791016
    6. '                    ' → logprob: -8.643009185791016
    7. '               ' → logprob: -8.768009185791016
    8. '                        
' → logprob: -8.768009185791016
    9. '                    
' → logprob: -8.893009185791016
    10. '           ' → logprob: -9.143009185791016

Token 568: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5934286713600159
    2. ' if' → logprob: -0.8434286713600159
    3. '                   ' → logprob: -4.218428611755371
    4. '                       ' → logprob: -5.968428611755371
    5. '```' → logprob: -10.718428611755371
    6. '                        
' → logprob: -11.718428611755371
    7. '   ' → logprob: -12.218428611755371
    8. '                    ' → logprob: -12.468428611755371
    9. ' ' → logprob: -12.468428611755371
    10. '               ' → logprob: -12.593428611755371

Token 569: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07002823799848557
    2. ' ' → logprob: -2.695028305053711
    3. 'nz' → logprob: -10.445028305053711
    4. ' nz' → logprob: -11.070028305053711
    5. '(' → logprob: -11.195028305053711
    6. ' (' → logprob: -11.570028305053711
    7. '   ' → logprob: -11.695028305053711
    8. '  ' → logprob: -12.445028305053711
    9. ' ' → logprob: -13.445028305053711
    10. ' not' → logprob: -13.570028305053711

Token 570: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.865583706414327e-05
    2. ' ' → logprob: -9.25009822845459
    3. '(' → logprob: -13.25009822845459
    4. 'nz' → logprob: -15.25009822845459
    5. '   ' → logprob: -15.62509822845459
    6. '
' → logprob: -16.500099182128906
    7. 'not' → logprob: -16.750099182128906
    8. ' (' → logprob: -16.875099182128906
    9. '```' → logprob: -17.375099182128906
    10. '  ' → logprob: -17.875099182128906

Token 571: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2014147937297821
    2. '<=' → logprob: -1.7014148235321045
    3. '<' → logprob: -15.076415061950684
    4. ' ' → logprob: -15.451415061950684
    5. '```' → logprob: -15.451415061950684
    6. '0' → logprob: -15.576415061950684
    7. '   ' → logprob: -15.951415061950684
    8. '>=' → logprob: -16.201414108276367
    9. ' >=' → logprob: -16.701414108276367
    10. ' <' → logprob: -16.951414108276367

Token 572: ' nz' (ID: 32428)
  Prédit: 'nz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nz' → logprob: -0.0001987722353078425
    2. ' nz' → logprob: -9.000198364257812
    3. 'nx' → logprob: -9.500198364257812
    4. 'n' → logprob: -15.125198364257812
    5. '.nz' → logprob: -16.500198364257812
    6. 'z' → logprob: -17.000198364257812
    7. 'ny' → logprob: -17.125198364257812
    8. 'Nz' → logprob: -17.500198364257812
    9. '```' → logprob: -18.125198364257812
    10. '   ' → logprob: -18.125198364257812

Token 573: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.018158137798309326
    2. ' <' → logprob: -4.018157958984375
    3. 'and' → logprob: -12.518157958984375
    4. ' and' → logprob: -12.893157958984375
    5. '<n' → logprob: -13.768157958984375
    6. '<size' → logprob: -15.643157958984375
    7. '<len' → logprob: -15.643157958984375
    8. '[' → logprob: -15.768157958984375
    9. '<=' → logprob: -16.018157958984375
    10. '                       ' → logprob: -16.643157958984375

Token 574: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -18.25000762939453
    4. '   ' → logprob: -18.75000762939453
    5. '۵' → logprob: -21.31250762939453
    6. '  ' → logprob: -21.31250762939453
    7. '٥' → logprob: -21.50000762939453
    8. 'len' → logprob: -22.25000762939453
    9. '`' → logprob: -22.25000762939453
    10. '[' → logprob: -22.56250762939453

Token 575: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -16.750001907348633
    4. '   ' → logprob: -17.375001907348633
    5. '۵' → logprob: -18.875001907348633
    6. 'len' → logprob: -19.000001907348633
    7. '٥' → logprob: -19.187501907348633
    8. '
' → logprob: -19.375001907348633
    9. '५' → logprob: -19.812501907348633
    10. '৫' → logprob: -19.812501907348633

Token 576: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.3132671117782593
    2. ' and' → logprob: -1.3132671117782593
    3. '                       ' → logprob: -13.06326675415039
    4. '                           ' → logprob: -13.31326675415039
    5. '   ' → logprob: -14.43826675415039
    6. '                   ' → logprob: -14.68826675415039
    7. ' ' → logprob: -15.56326675415039
    8. '           ' → logprob: -16.81326675415039
    9. '               ' → logprob: -16.93826675415039
    10. '                               ' → logprob: -17.06326675415039

Token 577: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008620485663414001
    2. ' ' → logprob: -4.758620262145996
    3. '                           ' → logprob: -13.008620262145996
    4. '                       ' → logprob: -13.383620262145996
    5. '   ' → logprob: -14.633620262145996
    6. '                        ' → logprob: -14.883620262145996
    7. '                         ' → logprob: -15.133620262145996
    8. '  ' → logprob: -15.383620262145996
    9. '                   ' → logprob: -15.758620262145996
    10. '                               ' → logprob: -16.133621215820312

Token 578: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011823068372905254
    2. '5' → logprob: -4.5118231773376465
    3. ' ' → logprob: -7.2618231773376465
    4. 'ny' → logprob: -10.136822700500488
    5. 'nx' → logprob: -10.511822700500488
    6. 'nz' → logprob: -13.261822700500488
    7. '50' → logprob: -13.511822700500488
    8. '   ' → logprob: -13.761822700500488
    9. '25' → logprob: -14.261822700500488
    10. ' nx' → logprob: -14.636822700500488

Token 579: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.10440666228532791
    2. ' <' → logprob: -2.3544065952301025
    3. '<=' → logprob: -6.229406833648682
    4. '<n' → logprob: -6.604406833648682
    5. ' <=' → logprob: -7.479406833648682
    6. 'x' → logprob: -9.604406356811523
    7. '<x' → logprob: -9.729406356811523
    8. '5' → logprob: -10.229406356811523
    9. ' ' → logprob: -10.354406356811523
    10. '                       ' → logprob: -10.604406356811523

Token 580: ' ny' (ID: 4423)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0017581217689439654
    2. 'nx' → logprob: -6.501758098602295
    3. ' ' → logprob: -8.501758575439453
    4. '25' → logprob: -10.626758575439453
    5. ' nx' → logprob: -11.251758575439453
    6. 'ny' → logprob: -11.251758575439453
    7. '50' → logprob: -13.376758575439453
    8. 'nz' → logprob: -14.626758575439453
    9. '(nx' → logprob: -15.751758575439453
    10. '   ' → logprob: -15.751758575439453

Token 581: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5759422183036804
    2. '<' → logprob: -0.8259422183036804
    3. ' ' → logprob: -13.575942039489746
    4. '5' → logprob: -14.950942039489746
    5. '<|end|>' → logprob: -15.200942039489746
    6. '<int' → logprob: -15.450942039489746
    7. '<len' → logprob: -15.700942039489746
    8. '<n' → logprob: -15.950942039489746
    9. '<size' → logprob: -16.200942993164062
    10. '[' → logprob: -16.825942993164062

Token 582: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '   ' → logprob: -18.000123977661133
    4. '```' → logprob: -18.500123977661133
    5. '  ' → logprob: -19.562623977661133
    6. '
' → logprob: -19.875123977661133
    7. '=' → logprob: -19.875123977661133
    8. '<|end|>' → logprob: -19.937623977661133
    9. '٥' → logprob: -20.187623977661133
    10. '۵' → logprob: -20.250123977661133

Token 583: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.029777104035019875
    2. 'and' → logprob: -3.5297770500183105
    3. '                       ' → logprob: -10.904777526855469
    4. '                           ' → logprob: -12.529777526855469
    5. '                        ' → logprob: -12.904777526855469
    6. ' ' → logprob: -14.279777526855469
    7. '                         ' → logprob: -15.404777526855469
    8. '                   ' → logprob: -15.529777526855469
    9. '                            ' → logprob: -15.529777526855469
    10. '	and' → logprob: -15.529777526855469

Token 584: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10021906346082687
    2. ' ' → logprob: -2.3502190113067627
    3. ' nx' → logprob: -11.850218772888184
    4. 'nx' → logprob: -12.725218772888184
    5. '   ' → logprob: -13.850218772888184
    6. '  ' → logprob: -14.850218772888184
    7. '    ' → logprob: -15.475218772888184
    8. '                   ' → logprob: -15.850218772888184
    9. '     ' → logprob: -16.1002197265625
    10. '       ' → logprob: -16.7252197265625

Token 585: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06073163449764252
    2. 'nx' → logprob: -3.0607316493988037
    3. ' nx' → logprob: -4.560731410980225
    4. ' ' → logprob: -6.435731410980225
    5. '   ' → logprob: -12.310731887817383
    6. '(nx' → logprob: -12.810731887817383
    7. '5' → logprob: -13.685731887817383
    8. 'x' → logprob: -13.685731887817383
    9. 'Nx' → logprob: -13.685731887817383
    10. '  ' → logprob: -14.560731887817383

Token 586: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4746779799461365
    2. '<' → logprob: -0.9746779799461365
    3. '<n' → logprob: -7.724678039550781
    4. '<x' → logprob: -9.099678039550781
    5. 'x' → logprob: -10.724678039550781
    6. 'nx' → logprob: -11.849678039550781
    7. ' nx' → logprob: -12.099678039550781
    8. ' ' → logprob: -12.224678039550781
    9. '<len' → logprob: -13.474678039550781
    10. '<num' → logprob: -13.849678039550781

Token 587: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0301588736474514
    2. ' nx' → logprob: -3.530158758163452
    3. 'x' → logprob: -8.405158996582031
    4. '5' → logprob: -8.780158996582031
    5. '(nx' → logprob: -10.655158996582031
    6. ' ' → logprob: -12.030158996582031
    7. 'Nx' → logprob: -14.405158996582031
    8. 'n' → logprob: -15.030158996582031
    9. '
' → logprob: -16.03015899658203
    10. 'xn' → logprob: -16.15515899658203

Token 588: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.16023021936416626
    2. ' <' → logprob: -1.9102301597595215
    3. '<n' → logprob: -12.91023063659668
    4. '<x' → logprob: -14.28523063659668
    5. ' ' → logprob: -14.53523063659668
    6. '5' → logprob: -14.91023063659668
    7. '<len' → logprob: -14.91023063659668
    8. '<size' → logprob: -15.16023063659668
    9. '<int' → logprob: -15.66023063659668
    10. '<num' → logprob: -15.78523063659668

Token 589: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -7.588793960167095e-05
    2. ' ' → logprob: -9.500076293945312
    3. '   ' → logprob: -14.875076293945312
    4. '```' → logprob: -15.000076293945312
    5. '
' → logprob: -17.187576293945312
    6. '  ' → logprob: -17.500076293945312
    7. '۵' → logprob: -17.687576293945312
    8. '       ' → logprob: -18.062576293945312
    9. '    ' → logprob: -18.125076293945312
    10. '=' → logprob: -18.125076293945312

Token 590: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.18353046476840973
    2. '                       ' → logprob: -2.683530569076538
    3. ':
' → logprob: -2.933530569076538
    4. '                           ' → logprob: -3.558530569076538
    5. 'and' → logprob: -4.683530330657959
    6. ':' → logprob: -5.433530330657959
    7. '                   ' → logprob: -5.558530330657959
    8. '                               ' → logprob: -10.433530807495117
    9. '               ' → logprob: -10.683530807495117
    10. '                          ' → logprob: -10.808530807495117

Token 591: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0415940061211586
    2. 'if' → logprob: -3.9165940284729004
    3. ' if' → logprob: -3.9165940284729004
    4. '                       ' → logprob: -7.2915940284729
    5. '                               ' → logprob: -9.541593551635742
    6. '           ' → logprob: -9.791593551635742
    7. '   ' → logprob: -10.041593551635742
    8. '                   ' → logprob: -10.416593551635742
    9. '```' → logprob: -11.166593551635742
    10. '                            ' → logprob: -11.791593551635742

Token 592: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.01888834498822689
    2. ' if' → logprob: -4.018888473510742
    3. '                               ' → logprob: -7.518888473510742
    4. '                           ' → logprob: -8.643888473510742
    5. 'count' → logprob: -11.393888473510742
    6. '
' → logprob: -12.643888473510742
    7. '   ' → logprob: -13.643888473510742
    8. '                             ' → logprob: -13.768888473510742
    9. '                       ' → logprob: -14.393888473510742
    10. '                                   ' → logprob: -14.518888473510742

Token 593: ' box' (ID: 5506)
  Prédit: 'box'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'box' → logprob: -0.07889044284820557
    2. ' box' → logprob: -2.578890323638916
    3. '   ' → logprob: -15.578890800476074
    4. '               ' → logprob: -15.953890800476074
    5. '	box' → logprob: -15.953890800476074
    6. '                   ' → logprob: -16.078889846801758
    7. ' ' → logprob: -16.953889846801758
    8. '           ' → logprob: -17.078889846801758
    9. '                       ' → logprob: -17.453889846801758
    10. '                           ' → logprob: -17.828889846801758

Token 594: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0006285638664849102
    2. '[z' → logprob: -7.375628471374512
    3. 'nz' → logprob: -14.375628471374512
    4. '```' → logprob: -14.750628471374512
    5. '                           ' → logprob: -15.000628471374512
    6. '   ' → logprob: -16.000629425048828
    7. '][' → logprob: -16.000629425048828
    8. '[' → logprob: -16.500629425048828
    9. '                   ' → logprob: -16.750629425048828
    10. '           ' → logprob: -16.875629425048828

Token 595: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.002911146730184555
    2. '[z' → logprob: -6.00291109085083
    3. '][' → logprob: -7.87791109085083
    4. 'nz' → logprob: -10.252911567687988
    5. '[n' → logprob: -12.252911567687988
    6. ']' → logprob: -12.252911567687988
    7. '[' → logprob: -13.002911567687988
    8. ' z' → logprob: -13.502911567687988
    9. '```' → logprob: -13.627911567687988
    10. 'Z' → logprob: -13.752911567687988

Token 596: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -2.6656825866666622e-05
    2. ']' → logprob: -11.37502670288086
    3. '[' → logprob: -12.00002670288086
    4. '[z' → logprob: -12.62502670288086
    5. '[n' → logprob: -13.00002670288086
    6. ' ][' → logprob: -13.37502670288086
    7. '[y' → logprob: -14.87502670288086
    8. '   ' → logprob: -15.00002670288086
    9. ']][' → logprob: -15.62502670288086
    10. '"][' → logprob: -15.62502670288086

Token 597: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.0007846142980270088
    2. 'y' → logprob: -7.250784397125244
    3. 'nx' → logprob: -10.125784873962402
    4. ' ny' → logprob: -11.000784873962402
    5. '][' → logprob: -12.125784873962402
    6. 'nz' → logprob: -12.625784873962402
    7. '
' → logprob: -13.000784873962402
    8. '   ' → logprob: -13.125784873962402
    9. 'dy' → logprob: -13.625784873962402
    10. '0' → logprob: -14.000784873962402

Token 598: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -6.869017852295656e-06
    2. ']' → logprob: -13.125006675720215
    3. ' ][' → logprob: -13.500006675720215
    4. '[n' → logprob: -13.875006675720215
    5. '   ' → logprob: -13.875006675720215
    6. '[x' → logprob: -14.875006675720215
    7. '"][' → logprob: -15.375006675720215
    8. '       ' → logprob: -15.750006675720215
    9. ''][' → logprob: -15.875006675720215
    10. '
' → logprob: -16.12500762939453

Token 599: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.00015395533409900963
    2. 'x' → logprob: -8.875153541564941
    3. ' nx' → logprob: -11.250153541564941
    4. '(nx' → logprob: -14.500153541564941
    5. '
' → logprob: -16.000154495239258
    6. 'xn' → logprob: -16.250154495239258
    7. '   ' → logprob: -16.500154495239258
    8. 'n' → logprob: -17.250154495239258
    9. 'dx' → logprob: -17.375154495239258
    10. 'nz' → logprob: -17.375154495239258

Token 600: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0021388400346040726
    2. ']==' → logprob: -6.377138614654541
    3. '==' → logprob: -8.5021390914917
    4. ' ==' → logprob: -9.2521390914917
    5. ']=='' → logprob: -9.2521390914917
    6. ' ]' → logprob: -10.6271390914917
    7. '']' → logprob: -11.3771390914917
    8. '[' → logprob: -13.1271390914917
    9. '=='' → logprob: -13.5021390914917
    10. '#' → logprob: -14.6271390914917

Token 601: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20766609907150269
    2. ' ==' → logprob: -1.7076661586761475
    3. ']' → logprob: -5.457665920257568
    4. '=='' → logprob: -6.832665920257568
    5. ']==' → logprob: -7.707665920257568
    6. '[' → logprob: -8.957666397094727
    7. '#' → logprob: -9.207666397094727
    8. '==
' → logprob: -9.707666397094727
    9. '   ' → logprob: -10.582666397094727
    10. '=' → logprob: -10.707666397094727

Token 602: ' '' (ID: 461)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.3941974937915802
    2. ''' → logprob: -1.8941974639892578
    3. ''O' → logprob: -2.269197463989258
    4. ''*' → logprob: -2.894197463989258
    5. ''o' → logprob: -4.644197463989258
    6. ''A' → logprob: -5.769197463989258
    7. ''S' → logprob: -7.144197463989258
    8. ''.' → logprob: -7.644197463989258
    9. ''C' → logprob: -7.644197463989258
    10. ''x' → logprob: -7.769197463989258

Token 603: '1' (ID: 16)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08812040835618973
    2. ''#' → logprob: -2.838120460510254
    3. '1' → logprob: -4.338120460510254
    4. '*' → logprob: -5.588120460510254
    5. 'O' → logprob: -6.088120460510254
    6. 'X' → logprob: -6.338120460510254
    7. ''' → logprob: -6.463120460510254
    8. ''*' → logprob: -6.963120460510254
    9. 'o' → logprob: -7.588120460510254
    10. '@' → logprob: -7.713120460510254

Token 604: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.2607184648513794
    2. '':' → logprob: -1.5107184648513794
    3. ''' → logprob: -4.76071834564209
    4. '':
' → logprob: -9.51071834564209
    5. ''):
' → logprob: -9.88571834564209
    6. ':
' → logprob: -11.13571834564209
    7. '':

' → logprob: -11.26071834564209
    8. ':' → logprob: -11.38571834564209
    9. '                   ' → logprob: -12.13571834564209
    10. '                       ' → logprob: -12.38571834564209

Token 605: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.007300279103219509
    2. '                           ' → logprob: -5.00730037689209
    3. '                       ' → logprob: -7.88230037689209
    4. '                                   ' → logprob: -9.88230037689209
    5. '                   ' → logprob: -10.63230037689209
    6. '                             ' → logprob: -10.75730037689209
    7. '                              ' → logprob: -10.75730037689209
    8. ':
' → logprob: -11.00730037689209
    9. '                            ' → logprob: -11.13230037689209
    10. '                                
' → logprob: -11.13230037689209

Token 606: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.3191782832145691
    2. ' count' → logprob: -1.3191783428192139
    3. '                               ' → logprob: -5.194178104400635
    4. '                           ' → logprob: -8.819178581237793
    5. '                                   ' → logprob: -9.319178581237793
    6. '                       ' → logprob: -10.444178581237793
    7. '   ' → logprob: -10.569178581237793
    8. '                                       ' → logprob: -11.444178581237793
    9. '	count' → logprob: -11.444178581237793
    10. '                   ' → logprob: -12.444178581237793

Token 607: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16132360696792603
    2. ' +=' → logprob: -1.9113235473632812
    3. '+' → logprob: -6.911323547363281
    4. '=' → logprob: -10.161323547363281
    5. '                           ' → logprob: -10.661323547363281
    6. ']+=' → logprob: -11.661323547363281
    7. '                   ' → logprob: -11.911323547363281
    8. '                       ' → logprob: -12.411323547363281
    9. '                               ' → logprob: -12.411323547363281
    10. '                            ' → logprob: -12.911323547363281

Token 608: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004879915213678032
    2. ' ' → logprob: -7.625487804412842
    3. '```' → logprob: -18.87548828125
    4. '   ' → logprob: -19.00048828125
    5. '                           ' → logprob: -19.25048828125
    6. '                               ' → logprob: -19.37548828125
    7. '<|end|>' → logprob: -19.62548828125
    8. ' ' → logprob: -19.87548828125
    9. '2' → logprob: -20.12548828125
    10. '                       ' → logprob: -20.43798828125

Token 609: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -20.500003814697266
    4. '```' → logprob: -21.250003814697266
    5. '
' → logprob: -21.875003814697266
    6. '+' → logprob: -22.562503814697266
    7. '１' → logprob: -22.562503814697266
    8. '           ' → logprob: -22.812503814697266
    9. '2' → logprob: -22.937503814697266
    10. '۱' → logprob: -23.062503814697266

Token 610: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5647494792938232
    2. ' 
' → logprob: -1.8147494792938232
    3. '
' → logprob: -2.0647494792938232
    4. '                    
' → logprob: -3.1897494792938232
    5. '                            
' → logprob: -4.064749717712402
    6. '                               ' → logprob: -4.064749717712402
    7. '                           ' → logprob: -4.064749717712402
    8. '  
' → logprob: -4.689749717712402
    9. '                        
' → logprob: -4.814749717712402
    10. '<|end|>' → logprob: -5.064749717712402

Token 611: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.20230531692504883
    2. ' 
' → logprob: -2.202305316925049
    3. '                    
' → logprob: -3.702305316925049
    4. '                               ' → logprob: -4.827305316925049
    5. ' ' → logprob: -4.952305316925049
    6. '
' → logprob: -5.077305316925049
    7. '                           ' → logprob: -5.577305316925049
    8. '<|end|>' → logprob: -5.577305316925049
    9. '                            
' → logprob: -5.577305316925049
    10. '                       ' → logprob: -5.827305316925049

Token 612: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11135333776473999
    2. ' if' → logprob: -2.8613533973693848
    3. 'if' (adapté à ' if') → logprob: -3.2363533973693848
    4. ' cell' → logprob: -5.611353397369385
    5. '                    
' → logprob: -6.361353397369385
    6. 'new' → logprob: -7.486353397369385
    7. ' new' → logprob: -7.611353397369385
    8. 'cell' → logprob: -7.986353397369385
    9. '				' → logprob: -8.111352920532227
    10. '
' → logprob: -8.111352920532227

Token 613: ' box' (ID: 5506)
  Prédit: ' box'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' box' → logprob: -0.0014033254701644182
    2. 'box' → logprob: -7.126403331756592
    3. ' (' → logprob: -8.126402854919434
    4. ' count' → logprob: -8.876402854919434
    5. '(box' → logprob: -9.126402854919434
    6. ' ' → logprob: -10.626402854919434
    7. '    ' → logprob: -11.501402854919434
    8. 'count' → logprob: -12.126402854919434
    9. '   ' → logprob: -12.751402854919434
    10. ' new' → logprob: -12.876402854919434

Token 614: '[z' (ID: 105082)
  Prédit: '[z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[z' → logprob: 0.0
    2. '[' → logprob: -18.25
    3. '```' → logprob: -18.25
    4. 'z' → logprob: -18.375
    5. '   ' → logprob: -19.125
    6. ' [' → logprob: -19.125
    7. '[n' → logprob: -19.25
    8. ' ' → logprob: -21.125
    9. '
' → logprob: -21.625
    10. '

' → logprob: -21.875

Token 615: '][' (ID: 2696)
  Prédit: '[z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[z' → logprob: -0.0005700715119019151
    2. '][' → logprob: -7.500570297241211
    3. '[' → logprob: -12.000570297241211
    4. '[y' → logprob: -12.500570297241211
    5. ' [' → logprob: -13.000570297241211
    6. '[x' → logprob: -13.125570297241211
    7. ']' → logprob: -13.625570297241211
    8. '[
' → logprob: -15.625570297241211
    9. '[q' → logprob: -15.625570297241211
    10. '   ' → logprob: -15.750570297241211

Token 616: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.259079363080673e-05
    2. ' y' → logprob: -11.375012397766113
    3. 'z' → logprob: -14.000012397766113
    4. '   ' → logprob: -16.00001335144043
    5. '][' → logprob: -16.25001335144043
    6. ' ' → logprob: -16.75001335144043
    7. 'x' → logprob: -17.75001335144043
    8. '	y' → logprob: -18.12501335144043
    9. '  ' → logprob: -18.87501335144043
    10. ']' → logprob: -19.25001335144043

Token 617: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.012564864940941334
    2. '[x' → logprob: -4.512564659118652
    3. '[z' → logprob: -7.512564659118652
    4. ']' → logprob: -8.012564659118652
    5. '[y' → logprob: -8.012564659118652
    6. '[' → logprob: -8.512564659118652
    7. '   ' → logprob: -10.512564659118652
    8. ' ][' → logprob: -10.887564659118652
    9. '```' → logprob: -11.387564659118652
    10. ''][' → logprob: -11.637564659118652

Token 618: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.339278580620885e-06
    2. ' x' → logprob: -13.500001907348633
    3. ''x' → logprob: -14.125001907348633
    4. '"x' → logprob: -16.625001907348633
    5. ']' → logprob: -16.875001907348633
    6. '0' → logprob: -18.500001907348633
    7. '   ' → logprob: -18.750001907348633
    8. ' ' → logprob: -18.750001907348633
    9. '
' → logprob: -18.875001907348633
    10. '	x' → logprob: -19.000001907348633

Token 619: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.22869765758514404
    2. ' ==' → logprob: -1.603697657585144
    3. ']' → logprob: -5.978697776794434
    4. ']==' → logprob: -7.603697776794434
    5. '=='' → logprob: -9.478697776794434
    6. ')' → logprob: -9.603697776794434
    7. '=' → logprob: -10.478697776794434
    8. ' ' → logprob: -10.728697776794434
    9. ' ]' → logprob: -11.228697776794434
    10. '==
' → logprob: -11.228697776794434

Token 620: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3485541343688965
    2. ' ==' → logprob: -1.2235541343688965
    3. '=='' → logprob: -9.473554611206055
    4. '=' → logprob: -11.473554611206055
    5. '==
' → logprob: -11.723554611206055
    6. ']==' → logprob: -12.723554611206055
    7. ' ' → logprob: -13.098554611206055
    8. 'in' → logprob: -13.223554611206055
    9. ')==' → logprob: -13.473554611206055
    10. '===' → logprob: -13.723554611206055

Token 621: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04300900548696518
    2. ' '' → logprob: -3.168009042739868
    3. '"' → logprob: -11.668008804321289
    4. ' ' → logprob: -14.793008804321289
    5. '('' → logprob: -15.418008804321289
    6. '`' → logprob: -16.66800880432129
    7. ' ' → logprob: -16.79300880432129
    8. '   ' → logprob: -16.91800880432129
    9. '	' → logprob: -17.04300880432129
    10. '1' → logprob: -17.16800880432129

Token 622: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014217919670045376
    2. ''' → logprob: -4.264217853546143
    3. '0' → logprob: -9.8892183303833
    4. ' ' → logprob: -12.7642183303833
    5. ' '' → logprob: -14.8892183303833
    6. '"' → logprob: -15.1392183303833
    7. ''''' → logprob: -16.764217376708984
    8. '#' → logprob: -17.014217376708984
    9. '')' → logprob: -17.389217376708984
    10. '''' → logprob: -17.514217376708984

Token 623: '':
' (ID: 7669)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.015619011595845222
    2. ' and' → logprob: -4.390618801116943
    3. 'and' → logprob: -6.515618801116943
    4. ' or' → logprob: -7.140618801116943
    5. ' '' → logprob: -8.015619277954102
    6. ''or' → logprob: -8.265619277954102
    7. '':
' → logprob: -9.140619277954102
    8. '':' → logprob: -9.265619277954102
    9. 'or' → logprob: -11.390619277954102
    10. ':' → logprob: -11.890619277954102

Token 624: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.02852768450975418
    2. ' and' → logprob: -3.7785277366638184
    3. '                        
' → logprob: -6.778527736663818
    4. '                           ' → logprob: -6.903527736663818
    5. '                   ' → logprob: -7.403527736663818
    6. ':' → logprob: -7.403527736663818
    7. ' ' → logprob: -7.653527736663818
    8. '                        ' → logprob: -7.778527736663818
    9. ' :' → logprob: -8.15352725982666
    10. 'and' → logprob: -9.02852725982666

Token 625: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.8064000606536865
    2. ' ' → logprob: -1.4314000606536865
    3. ' if' → logprob: -1.8064000606536865
    4. '                           ' → logprob: -2.5564000606536865
    5. 'if' → logprob: -3.3064000606536865
    6. '                   ' → logprob: -4.931400299072266
    7. '                        
' → logprob: -4.931400299072266
    8. '                            ' → logprob: -5.306400299072266
    9. '                        ' → logprob: -5.556400299072266
    10. '                               ' → logprob: -5.806400299072266

Token 626: ' naissance' (ID: 86852)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18203045427799225
    2. ' if' → logprob: -1.807030439376831
    3. '                           ' → logprob: -6.80703067779541
    4. '                       ' → logprob: -7.18203067779541
    5. '   ' → logprob: -9.05703067779541
    6. 'alive' → logprob: -9.55703067779541
    7. 'new' → logprob: -9.68203067779541
    8. ' new' → logprob: -10.30703067779541
    9. '                               ' → logprob: -10.93203067779541
    10. '                   ' → logprob: -10.93203067779541

Token 627: ' si' (ID: 1784)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.220992088317871
    2. '                           ' → logprob: -1.220992088317871
    3. '                       ' → logprob: -1.470992088317871
    4. ' if' → logprob: -2.345992088317871
    5. 'if' → logprob: -3.095992088317871
    6. '                   ' → logprob: -4.845992088317871
    7. 'and' → logprob: -5.220992088317871
    8. ':' → logprob: -5.345992088317871
    9. ':
' → logprob: -5.345992088317871
    10. ' :
' → logprob: -5.470992088317871

Token 628: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.5759572386741638
    2. 'count' → logprob: -0.8259572386741638
    3. '(count' → logprob: -11.325957298278809
    4. ' ' → logprob: -13.075957298278809
    5. ' (' → logprob: -14.325957298278809
    6. '[count' → logprob: -14.450957298278809
    7. '                       ' → logprob: -14.575957298278809
    8. '	count' → logprob: -14.825957298278809
    9. '                   ' → logprob: -15.075957298278809
    10. '   ' → logprob: -15.575957298278809

Token 629: ' dans' (ID: 2671)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14870408177375793
    2. '==' → logprob: -2.0237040519714355
    3. ' in' → logprob: -5.2737040519714355
    4. ' ' → logprob: -7.8987040519714355
    5. ' >=' → logprob: -8.148704528808594
    6. '=' → logprob: -9.523704528808594
    7. 'in' → logprob: -9.898704528808594
    8. '>=' → logprob: -9.898704528808594
    9. ' =' → logprob: -11.398704528808594
    10. '   ' → logprob: -11.523704528808594

Token 630: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11542835086584091
    2. ' a' → logprob: -2.2404284477233887
    3. 'b' → logprob: -6.740428447723389
    4. ' b' → logprob: -7.240428447723389
    5. '[' → logprob: -7.990428447723389
    6. '[a' → logprob: -8.86542797088623
    7. ' [' → logprob: -9.24042797088623
    8. '   ' → logprob: -10.36542797088623
    9. '{' → logprob: -10.99042797088623
    10. ' ' → logprob: -10.99042797088623

Token 631: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.339278580620885e-06
    2. 'list' → logprob: -13.625001907348633
    3. '_' → logprob: -15.000001907348633
    4. '[_' → logprob: -15.500001907348633
    5. '_set' → logprob: -16.250001907348633
    6. 'a' → logprob: -16.375001907348633
    7. '[' → logprob: -16.625001907348633
    8. 'List' → logprob: -16.875001907348633
    9. ' _' → logprob: -16.875001907348633
    10. ''_' → logprob: -17.000001907348633

Token 632: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023225324228405952
    2. 'and' → logprob: -4.5232253074646
    3. '                       ' → logprob: -4.6482253074646
    4. '                           ' → logprob: -6.8982253074646
    5. '                   ' → logprob: -7.0232253074646
    6. '                               ' → logprob: -9.023225784301758
    7. ' if' → logprob: -9.273225784301758
    8. ',' → logprob: -9.773225784301758
    9. '   ' → logprob: -10.023225784301758
    10. '[' → logprob: -10.148225784301758

Token 633: '                       ' (ID: 968)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06444038450717926
    2. '                       ' → logprob: -3.4394404888153076
    3. ' if' → logprob: -3.9394404888153076
    4. '                           ' → logprob: -5.4394402503967285
    5. '                   ' → logprob: -5.8144402503967285
    6. 'and' → logprob: -6.1894402503967285
    7. 'if' → logprob: -7.9394402503967285
    8. '                        ' → logprob: -8.189440727233887
    9. '                            ' → logprob: -9.064440727233887
    10. '                               ' → logprob: -9.314440727233887

Token 634: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10877273976802826
    2. 'if' (adapté à ' if') → logprob: -2.6087727546691895
    3. '                           ' → logprob: -4.7337727546691895
    4. ' new' → logprob: -4.8587727546691895
    5. ' ' → logprob: -5.1087727546691895
    6. '                       ' → logprob: -5.8587727546691895
    7. '                            ' → logprob: -6.7337727546691895
    8. '                   ' → logprob: -7.3587727546691895
    9. ' and' → logprob: -7.8587727546691895
    10. 'new' → logprob: -8.233772277832031

Token 635: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.16022615134716034
    2. ' count' → logprob: -1.9102261066436768
    3. '(count' → logprob: -13.910225868225098
    4. '[count' → logprob: -15.035225868225098
    5. ' ' → logprob: -15.160225868225098
    6. '	count' → logprob: -15.535225868225098
    7. '                           ' → logprob: -16.160226821899414
    8. '                               ' → logprob: -16.410226821899414
    9. '                       ' → logprob: -17.285226821899414
    10. '.count' → logprob: -17.410226821899414

Token 636: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004131353460252285
    2. 'in' → logprob: -5.504131317138672
    3. ' ' → logprob: -10.504131317138672
    4. ' not' → logprob: -11.504131317138672
    5. '	in' → logprob: -11.879131317138672
    6. ')' → logprob: -12.504131317138672
    7. ' ' → logprob: -14.254131317138672
    8. '<|end|>' → logprob: -14.254131317138672
    9. 's' → logprob: -14.754131317138672
    10. ' IN' → logprob: -15.004131317138672

Token 637: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.575940728187561
    2. ' a' → logprob: -0.825940728187561
    3. '	a' → logprob: -14.45094108581543
    4. ' set' → logprob: -15.45094108581543
    5. ' ' → logprob: -15.82594108581543
    6. ' ' → logprob: -16.07594108581543
    7. 'set' → logprob: -16.57594108581543
    8. '_a' → logprob: -17.20094108581543
    9. '[a' → logprob: -17.20094108581543
    10. '(a' → logprob: -17.45094108581543

Token 638: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -14.000000953674316
    3. ' _' → logprob: -15.625000953674316
    4. 'list' → logprob: -16.500001907348633
    5. '[_' → logprob: -18.250001907348633
    6. '_set' → logprob: -18.750001907348633
    7. '_l' → logprob: -18.750001907348633
    8. '_List' → logprob: -19.000001907348633
    9. 'List' → logprob: -19.125001907348633
    10. '_lst' → logprob: -19.375001907348633

Token 639: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7590709924697876
    2. ':
' → logprob: -0.7590709924697876
    3. '                           ' → logprob: -2.884070873260498
    4. '):
' → logprob: -5.884070873260498
    5. '                       ' → logprob: -6.134070873260498
    6. ' and' → logprob: -6.884070873260498
    7. '                               ' → logprob: -7.009070873260498
    8. '):' → logprob: -8.384071350097656
    9. ')' → logprob: -8.509071350097656
    10. '                            ' → logprob: -9.259071350097656

Token 640: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.005572152324020863
    2. ' new' → logprob: -5.755572319030762
    3. '                       ' → logprob: -7.380572319030762
    4. 'new' → logprob: -7.380572319030762
    5. '                               ' → logprob: -7.630572319030762
    6. '                            
' → logprob: -7.755572319030762
    7. ':
' → logprob: -9.630572319030762
    8. '                            ' → logprob: -10.505572319030762
    9. '                        
' → logprob: -10.755572319030762
    10. '
' → logprob: -11.005572319030762

Token 641: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.5467076301574707
    2. 'new' (adapté à ' new') → logprob: -1.0467076301574707
    3. '                           ' → logprob: -3.4217076301574707
    4. '                               ' → logprob: -3.7967076301574707
    5. ''' → logprob: -4.421707630157471
    6. '1' → logprob: -6.296707630157471
    7. '0' → logprob: -8.046707153320312
    8. ' '' → logprob: -8.171707153320312
    9. ' ' → logprob: -8.671707153320312
    10. '                            
' → logprob: -9.546707153320312

Token 642: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.006102270446717739
    2. '_box' → logprob: -5.631102085113525
    3. 'row' → logprob: -6.256102085113525
    4. '_' → logprob: -8.131102561950684
    5. '_grid' → logprob: -8.381102561950684
    6. ''_' → logprob: -11.131102561950684
    7. '_cell' → logprob: -11.506102561950684
    8. 'Row' → logprob: -12.381102561950684
    9. 'box' → logprob: -12.631102561950684
    10. '"_' → logprob: -13.006102561950684

Token 643: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00033581978641450405
    2. '.' → logprob: -8.000335693359375
    3. ' .' → logprob: -15.500335693359375
    4. 'append' → logprob: -16.125335693359375
    5. '.app' → logprob: -17.250335693359375
    6. '.ap' → logprob: -18.375335693359375
    7. '   ' → logprob: -18.500335693359375
    8. '.extend' → logprob: -19.375335693359375
    9. '.Append' → logprob: -19.375335693359375
    10. ' +=' → logprob: -20.125335693359375

Token 644: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.10024204105138779
    2. ''' → logprob: -2.3502421379089355
    3. '(' → logprob: -10.475241661071777
    4. ' '' → logprob: -12.100241661071777
    5. '"' → logprob: -14.350241661071777
    6. '("' → logprob: -14.850241661071777
    7. '   ' → logprob: -14.850241661071777
    8. '(
' → logprob: -15.475241661071777
    9. ' ('' → logprob: -16.850242614746094
    10. '`' → logprob: -17.225242614746094

Token 645: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ''' → logprob: -19.0
    3. ' ' → logprob: -20.375
    4. '' → logprob: -21.5
    5. '0' → logprob: -21.75
    6. '```' → logprob: -22.625
    7. '۱' → logprob: -22.625
    8. '#' → logprob: -22.875
    9. '[' → logprob: -22.875
    10. '১' → logprob: -23.0

Token 646: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.544099748134613
    2. '')' → logprob: -1.7940998077392578
    3. ')' → logprob: -1.9190998077392578
    4. ')
' → logprob: -2.294099807739258
    5. '                       ' → logprob: -5.294099807739258
    6. 'else' → logprob: -7.794099807739258
    7. '                           ' → logprob: -9.169099807739258
    8. '')
' → logprob: -9.544099807739258
    9. ' ')
' → logprob: -10.294099807739258
    10. '                               ' → logprob: -10.794099807739258

Token 647: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0009172935388050973
    2. 'else' → logprob: -7.625917434692383
    3. ' else' → logprob: -8.250917434692383
    4. '                   ' → logprob: -9.750917434692383
    5. '                           ' → logprob: -9.875917434692383
    6. '
' → logprob: -10.500917434692383
    7. '               ' → logprob: -11.250917434692383
    8. '           ' → logprob: -12.000917434692383
    9. ')' → logprob: -12.625917434692383
    10. '       ' → logprob: -12.875917434692383

Token 648: ' else' (ID: 1203)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.9889750480651855
    2. ' else' → logprob: -0.9889750480651855
    3. 'else' (adapté à ' else') → logprob: -1.3639750480651855
    4. '                   ' → logprob: -7.9889750480651855
    5. '       ' → logprob: -11.113975524902344
    6. '               ' → logprob: -11.113975524902344
    7. '                           ' → logprob: -11.113975524902344
    8. '	else' → logprob: -11.238975524902344
    9. '
' → logprob: -11.613975524902344
    10. '           ' → logprob: -11.738975524902344

Token 649: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.014578884467482567
    2. '                       ' → logprob: -5.264578819274902
    3. ' new' → logprob: -5.514578819274902
    4. '                               ' → logprob: -5.889578819274902
    5. ' ' → logprob: -7.389578819274902
    6. '                   ' → logprob: -7.764578819274902
    7. '                            ' → logprob: -8.264578819274902
    8. '           ' → logprob: -8.389578819274902
    9. '                            
' → logprob: -8.389578819274902
    10. '   ' → logprob: -9.014578819274902

Token 650: '                           ' (ID: 1686)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.26009002327919006
    2. '                           ' → logprob: -1.5100899934768677
    3. 'new' → logprob: -5.010089874267578
    4. '                       ' → logprob: -7.385089874267578
    5. ' ' → logprob: -8.260089874267578
    6. '           ' → logprob: -8.635089874267578
    7. '                               ' → logprob: -8.760089874267578
    8. '                   ' → logprob: -9.635089874267578
    9. '   ' → logprob: -9.885089874267578
    10. '                            ' → logprob: -10.260089874267578

Token 651: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.043068043887615204
    2. 'new' (adapté à ' new') → logprob: -3.1680679321289062
    3. '                           ' → logprob: -9.918067932128906
    4. ' ' → logprob: -11.668067932128906
    5. '                               ' → logprob: -12.793067932128906
    6. '                       ' → logprob: -13.043067932128906
    7. ''' → logprob: -13.543067932128906
    8. '                            ' → logprob: -13.543067932128906
    9. ' ' → logprob: -13.918067932128906
    10. '	new' → logprob: -14.793067932128906

Token 652: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.00012689977302215993
    2. 'row' → logprob: -9.000126838684082
    3. '_' → logprob: -13.625126838684082
    4. ' _' → logprob: -13.875126838684082
    5. '_line' → logprob: -14.875126838684082
    6. ' row' → logprob: -15.000126838684082
    7. 'Row' → logprob: -15.375126838684082
    8. '   ' → logprob: -15.875126838684082
    9. '._' → logprob: -16.3751277923584
    10. '_ROW' → logprob: -17.1251277923584

Token 653: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.840432565193623e-05
    2. 'append' → logprob: -9.500088691711426
    3. '.' → logprob: -11.625088691711426
    4. ' .' → logprob: -12.500088691711426
    5. '           ' → logprob: -14.000088691711426
    6. ' append' → logprob: -18.25008773803711
    7. '       ' → logprob: -18.50008773803711
    8. '               ' → logprob: -18.62508773803711
    9. '	append' → logprob: -18.87508773803711
    10. '.Append' → logprob: -19.25008773803711

Token 654: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.250000953674316
    3. ' ('' → logprob: -16.875
    4. ''' → logprob: -19.875
    5. '(
' → logprob: -20.0
    6. '(('' → logprob: -20.0
    7. '("' → logprob: -20.75
    8. '('.')' → logprob: -23.0
    9. '()' → logprob: -23.5
    10. '(',' → logprob: -23.75

Token 655: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ''' → logprob: -15.875
    3. '')' → logprob: -20.75
    4. ' ' → logprob: -22.5
    5. '۰' → logprob: -25.0
    6. '00' → logprob: -27.25
    7. '')
' → logprob: -27.375
    8. '０' → logprob: -27.5
    9. '   ' → logprob: -27.875
    10. '٠' → logprob: -27.875

Token 656: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.10190210491418839
    2. ')' → logprob: -2.3519020080566406
    3. '')
' → logprob: -6.601902008056641
    4. '                   ' → logprob: -8.35190200805664
    5. ')
' → logprob: -10.60190200805664
    6. '               ' → logprob: -10.85190200805664
    7. '")' → logprob: -11.22690200805664
    8. '                       ' → logprob: -11.22690200805664
    9. ' ')' → logprob: -11.72690200805664
    10. ''' → logprob: -12.22690200805664

Token 657: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10035515576601028
    2. '                       ' → logprob: -2.7253551483154297
    3. 'else' → logprob: -3.6003551483154297
    4. ' else' → logprob: -6.72535514831543
    5. '               ' → logprob: -6.97535514831543
    6. '```' → logprob: -8.97535514831543
    7. '                           ' → logprob: -9.10035514831543
    8. '           ' → logprob: -9.22535514831543
    9. 'elif' → logprob: -9.35035514831543
    10. '       ' → logprob: -10.72535514831543

Token 658: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.48397138714790344
    2. '                   ' → logprob: -0.983971357345581
    3. 'elif' → logprob: -5.35897159576416
    4. '               ' → logprob: -5.48397159576416
    5. ' else' → logprob: -6.98397159576416
    6. '   ' → logprob: -10.73397159576416
    7. '
' → logprob: -11.35897159576416
    8. '           ' → logprob: -11.85897159576416
    9. '       ' → logprob: -12.10897159576416
    10. ' elif' → logprob: -12.48397159576416

Token 659: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3988373875617981
    2. '                       ' → logprob: -1.2738373279571533
    3. ':
' → logprob: -3.2738373279571533
    4. '                           ' → logprob: -5.523837566375732
    5. '                   ' → logprob: -5.773837566375732
    6. '{' → logprob: -7.148837566375732
    7. '                        ' → logprob: -7.648837566375732
    8. '[' → logprob: -7.773837566375732
    9. '                               ' → logprob: -7.773837566375732
    10. '<|end|>' → logprob: -7.898837566375732

Token 660: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.024877438321709633
    2. '                   ' → logprob: -4.649877548217773
    3. '                           ' → logprob: -5.024877548217773
    4. ' new' → logprob: -5.149877548217773
    5. ' if' → logprob: -6.774877548217773
    6. '                               ' → logprob: -8.024877548217773
    7. '               ' → logprob: -8.524877548217773
    8. ' ' → logprob: -8.649877548217773
    9. 'if' → logprob: -8.649877548217773
    10. '           ' → logprob: -9.024877548217773

Token 661: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7809967398643494
    2. '                   ' → logprob: -1.1559967994689941
    3. ' if' → logprob: -1.7809967994689941
    4. 'if' → logprob: -3.405996799468994
    5. ' #' → logprob: -3.905996799468994
    6. '#' (adapté à ' #') → logprob: -5.780996799468994
    7. '               ' → logprob: -7.280996799468994
    8. '           ' → logprob: -7.530996799468994
    9. '                    ' → logprob: -8.405996322631836
    10. ' ' → logprob: -8.530996322631836

Token 662: ' mort' (ID: 10146)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008695407770574093
    2. ' if' → logprob: -5.008695602416992
    3. '                       ' → logprob: -7.258695602416992
    4. '#' → logprob: -7.383695602416992
    5. 'sur' → logprob: -7.508695602416992
    6. ' survival' → logprob: -9.758695602416992
    7. '                   ' → logprob: -10.633695602416992
    8. ' survive' → logprob: -12.383695602416992
    9. ' surviv' → logprob: -12.508695602416992
    10. '                           ' → logprob: -12.758695602416992

Token 663: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6559032797813416
    2. '                       ' → logprob: -1.1559033393859863
    3. 'if' → logprob: -1.9059033393859863
    4. '                   ' → logprob: -4.405903339385986
    5. '                           ' → logprob: -5.405903339385986
    6. '               ' → logprob: -8.655902862548828
    7. '           ' → logprob: -9.030902862548828
    8. ' =' → logprob: -9.155902862548828
    9. '                        ' → logprob: -9.155902862548828
    10. '   ' → logprob: -9.405902862548828

Token 664: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00863123033195734
    2. ' count' → logprob: -4.758631229400635
    3. 'not' → logprob: -11.883631706237793
    4. ' not' → logprob: -12.133631706237793
    5. '(count' → logprob: -12.508631706237793
    6. '   ' → logprob: -15.008631706237793
    7. ' ' → logprob: -16.008630752563477
    8. 'if' → logprob: -16.383630752563477
    9. '                   ' → logprob: -16.633630752563477
    10. '               ' → logprob: -17.133630752563477

Token 665: ' pas' (ID: 2173)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.38688740134239197
    2. ' not' → logprob: -1.1368874311447144
    3. 'in' → logprob: -11.886887550354004
    4. ' in' → logprob: -12.511887550354004
    5. '	not' → logprob: -12.511887550354004
    6. ')' → logprob: -13.886887550354004
    7. '_not' → logprob: -15.136887550354004
    8. ' ' → logprob: -15.761887550354004
    9. '=' → logprob: -15.761887550354004
    10. ':not' → logprob: -16.511886596679688

Token 666: ' dans' (ID: 2671)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.07938068360090256
    2. ' in' → logprob: -2.579380750656128
    3. 'dans' → logprob: -8.204380989074707
    4. 'en' → logprob: -9.079380989074707
    5. ' dans' → logprob: -9.829380989074707
    6. 'not' → logprob: -10.829380989074707
    7. ' en' → logprob: -10.954380989074707
    8. ' ' → logprob: -12.454380989074707
    9. 'd' → logprob: -14.079380989074707
    10. ' not' → logprob: -14.204380989074707

Token 667: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1063874289393425
    2. ' b' → logprob: -2.4813873767852783
    3. 'a' → logprob: -4.106387615203857
    4. ' a' → logprob: -7.106387615203857
    5. '   ' → logprob: -11.9813871383667
    6. ' ' → logprob: -14.3563871383667
    7. '(b' → logprob: -14.3563871383667
    8. '	b' → logprob: -14.4813871383667
    9. '[b' → logprob: -14.9813871383667
    10. 'new' → logprob: -15.2313871383667

Token 668: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.1008713702030946e-06
    2. 'list' → logprob: -13.625001907348633
    3. '_' → logprob: -14.375001907348633
    4. '_j' → logprob: -15.250001907348633
    5. 'List' → logprob: -17.875001907348633
    6. ' _' → logprob: -17.875001907348633
    7. '_set' → logprob: -18.500001907348633
    8. '```' → logprob: -18.875001907348633
    9. '_lists' → logprob: -19.000001907348633
    10. '_l' → logprob: -19.000001907348633

Token 669: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.005863851401954889
    2. ' if' → logprob: -5.755863666534424
    3. '                           ' → logprob: -6.630863666534424
    4. 'if' → logprob: -7.630863666534424
    5. '                   ' → logprob: -7.630863666534424
    6. '           ' → logprob: -9.130864143371582
    7. '       ' → logprob: -9.630864143371582
    8. '                        ' → logprob: -9.755864143371582
    9. '               ' → logprob: -10.005864143371582
    10. '                               ' → logprob: -10.630864143371582

Token 670: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0031412355601787567
    2. '                           ' → logprob: -6.628141403198242
    3. ' if' → logprob: -7.128141403198242
    4. '                   ' → logprob: -7.753141403198242
    5. '           ' → logprob: -8.753141403198242
    6. '               ' → logprob: -9.128141403198242
    7. '                        ' → logprob: -9.628141403198242
    8. ' and' → logprob: -10.128141403198242
    9. '       ' → logprob: -10.253141403198242
    10. 'if' → logprob: -10.253141403198242

Token 671: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7650617957115173
    2. 'if' (adapté à ' if') → logprob: -1.015061855316162
    3. '                       ' → logprob: -1.765061855316162
    4. '                   ' → logprob: -7.265061855316162
    5. '                           ' → logprob: -8.765061378479004
    6. '           ' → logprob: -8.890061378479004
    7. '       ' → logprob: -10.140061378479004
    8. '               ' → logprob: -10.140061378479004
    9. '   ' → logprob: -10.265061378479004
    10. ' ' → logprob: -11.265061378479004

Token 672: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.07889033854007721
    2. ' count' → logprob: -2.578890323638916
    3. '(count' → logprob: -14.828890800476074
    4. '   ' → logprob: -16.203889846801758
    5. '	count' → logprob: -16.953889846801758
    6. 'not' → logprob: -17.578889846801758
    7. ' ' → logprob: -17.578889846801758
    8. ' not' → logprob: -17.703889846801758
    9. '                           ' → logprob: -18.328889846801758
    10. '                       ' → logprob: -18.328889846801758

Token 673: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.006409939378499985
    2. ' in' → logprob: -5.256410121917725
    3. 'not' → logprob: -6.756410121917725
    4. 'in' → logprob: -11.506409645080566
    5. '	not' → logprob: -13.256409645080566
    6. ' ' → logprob: -15.881409645080566
    7. ' no' → logprob: -16.381410598754883
    8. ')' → logprob: -19.006410598754883
    9. ' ' → logprob: -19.006410598754883
    10. '	in' → logprob: -19.131410598754883

Token 674: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6931473612785339
    2. ' b' → logprob: -0.6931473612785339
    3. ' ' → logprob: -17.193147659301758
    4. '   ' → logprob: -17.318147659301758
    5. ')b' → logprob: -17.693147659301758
    6. '	b' → logprob: -17.943147659301758
    7. ' ' → logprob: -18.443147659301758
    8. 'a' → logprob: -18.943147659301758
    9. ' б' → logprob: -19.193147659301758
    10. '```' → logprob: -19.318147659301758

Token 675: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -14.875
    3. 'list' → logprob: -17.0
    4. '_l' → logprob: -18.125
    5. ' _' → logprob: -18.25
    6. '[' → logprob: -18.875
    7. '[_' → logprob: -19.5
    8. '_lists' → logprob: -19.5
    9. '_b' → logprob: -19.625
    10. '\' → logprob: -19.75

Token 676: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.04470953345298767
    2. ':' → logprob: -3.4197094440460205
    3. '                           ' → logprob: -4.5447096824646
    4. '):
' → logprob: -8.169709205627441
    5. '           ' → logprob: -10.419709205627441
    6. '                       ' → logprob: -10.919709205627441
    7. ':
' → logprob: -11.544709205627441
    8. '                               ' → logprob: -11.919709205627441
    9. '==' → logprob: -12.044709205627441
    10. ')' → logprob: -12.169709205627441

Token 677: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0036815516650676727
    2. '                       ' → logprob: -6.628681659698486
    3. '           ' → logprob: -6.878681659698486
    4. ' new' → logprob: -7.378681659698486
    5. 'new' → logprob: -7.878681659698486
    6. '                   ' → logprob: -9.003681182861328
    7. '                               ' → logprob: -10.003681182861328
    8. '   ' → logprob: -10.253681182861328
    9. '               ' → logprob: -10.378681182861328
    10. '                            ' → logprob: -10.878681182861328

Token 678: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.042214278131723404
    2. ' new' → logprob: -3.4172143936157227
    3. '                           ' → logprob: -4.917214393615723
    4. '                       ' → logprob: -7.042214393615723
    5. '   ' → logprob: -8.542214393615723
    6. '                   ' → logprob: -9.792214393615723
    7. '                               ' → logprob: -10.667214393615723
    8. ' ' → logprob: -10.792214393615723
    9. '           ' → logprob: -11.042214393615723
    10. '               ' → logprob: -11.792214393615723

Token 679: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -1.0325924449716695e-05
    2. 'row' → logprob: -11.62501049041748
    3. 'Row' → logprob: -14.00001049041748
    4. '_rows' → logprob: -16.125009536743164
    5. '_' → logprob: -16.500009536743164
    6. '_line' → logprob: -16.750009536743164
    7. '   ' → logprob: -16.875009536743164
    8. 'rown' → logprob: -17.500009536743164
    9. '_r' → logprob: -17.750009536743164
    10. '_ROW' → logprob: -18.125009536743164

Token 680: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.5649528298527e-05
    2. '                           ' → logprob: -9.875075340270996
    3. '                       ' → logprob: -11.000075340270996
    4. 'append' → logprob: -12.500075340270996
    5. '.' → logprob: -13.750075340270996
    6. '                               ' → logprob: -14.250075340270996
    7. ' .' → logprob: -14.250075340270996
    8. '           ' → logprob: -14.375075340270996
    9. '                   ' → logprob: -15.000075340270996
    10. '   ' → logprob: -16.750076293945312

Token 681: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.875000953674316
    3. ''' → logprob: -15.875000953674316
    4. ' ('' → logprob: -20.375001907348633
    5. '(
' → logprob: -21.250001907348633
    6. '("' → logprob: -21.625001907348633
    7. ''s' → logprob: -22.250001907348633
    8. '(('' → logprob: -23.375001907348633
    9. ' '' → logprob: -23.750001907348633
    10. '   ' → logprob: -23.875001907348633

Token 682: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0008079635445028543
    2. '1' → logprob: -7.125807762145996
    3. '('' → logprob: -13.250807762145996
    4. '"' → logprob: -13.500807762145996
    5. ' '' → logprob: -15.750807762145996
    6. '0' → logprob: -16.250808715820312
    7. '`' → logprob: -16.750808715820312
    8. '['' → logprob: -16.875808715820312
    9. '   ' → logprob: -18.000808715820312
    10. '#' → logprob: -18.000808715820312

Token 683: '')
' (ID: 2515)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.2514002323150635
    2. '')' → logprob: -2.2514002323150635
    3. '')
' → logprob: -2.5014002323150635
    4. ')' → logprob: -4.126399993896484
    5. 'else' → logprob: -4.626399993896484
    6. ')
' → logprob: -4.751399993896484
    7. ' else' → logprob: -9.001399993896484
    8. '       ' → logprob: -9.501399993896484
    9. '                           ' → logprob: -9.501399993896484
    10. '                   ' → logprob: -9.751399993896484

Token 684: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.026933280751109123
    2. 'else' → logprob: -3.651933193206787
    3. ' else' → logprob: -7.526933193206787
    4. '                   ' → logprob: -9.651933670043945
    5. '               ' → logprob: -11.276933670043945
    6. '                           ' → logprob: -12.026933670043945
    7. '           ' → logprob: -12.526933670043945
    8. '```' → logprob: -12.651933670043945
    9. '       ' → logprob: -12.901933670043945
    10. '                               ' → logprob: -14.026933670043945

Token 685: ' else' (ID: 1203)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.4803300201892853
    2. 'else' (adapté à ' else') → logprob: -0.9803299903869629
    3. ' else' → logprob: -5.105329990386963
    4. '                   ' → logprob: -8.855330467224121
    5. '               ' → logprob: -11.355330467224121
    6. '           ' → logprob: -12.355330467224121
    7. '                           ' → logprob: -12.355330467224121
    8. '       ' → logprob: -12.480330467224121
    9. '                               ' → logprob: -14.480330467224121
    10. '					' → logprob: -15.230330467224121

Token 686: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.005284626968204975
    2. '                               ' → logprob: -6.005284786224365
    3. ':
' → logprob: -7.380284786224365
    4. '           ' → logprob: -8.005284309387207
    5. ' new' → logprob: -8.005284309387207
    6. '                       ' → logprob: -8.005284309387207
    7. '('' → logprob: -8.255284309387207
    8. '   ' → logprob: -8.755284309387207
    9. 'new' → logprob: -8.755284309387207
    10. '                            ' → logprob: -8.755284309387207

Token 687: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.08328603208065033
    2. ' new' → logprob: -2.5832860469818115
    3. 'new' → logprob: -6.458285808563232
    4. '                               ' → logprob: -6.708285808563232
    5. '                       ' → logprob: -7.208285808563232
    6. ' ' → logprob: -8.33328628540039
    7. '           ' → logprob: -8.58328628540039
    8. '                            ' → logprob: -9.08328628540039
    9. '                   ' → logprob: -9.70828628540039
    10. '   ' → logprob: -9.70828628540039

Token 688: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.4767792522907257
    2. 'new' (adapté à ' new') → logprob: -0.9767792224884033
    3. '                           ' → logprob: -5.976779460906982
    4. '                               ' → logprob: -9.351778984069824
    5. '                       ' → logprob: -10.601778984069824
    6. ' ' → logprob: -10.601778984069824
    7. '   ' → logprob: -11.476778984069824
    8. '           ' → logprob: -12.601778984069824
    9. '                   ' → logprob: -12.851778984069824
    10. '                            ' → logprob: -13.226778984069824

Token 689: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.0004341261519584805
    2. 'row' → logprob: -7.750433921813965
    3. 'Row' → logprob: -13.000433921813965
    4. '_' → logprob: -14.125433921813965
    5. ''' → logprob: -15.250433921813965
    6. '0' → logprob: -16.75043487548828
    7. ' row' → logprob: -17.37543487548828
    8. ''_' → logprob: -17.37543487548828
    9. '_line' → logprob: -17.87543487548828
    10. '_Row' → logprob: -18.00043487548828

Token 690: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00018077615823131055
    2. 'append' → logprob: -9.250181198120117
    3. '_row' → logprob: -9.625181198120117
    4. 'row' → logprob: -11.875181198120117
    5. '           ' → logprob: -12.250181198120117
    6. '.' → logprob: -12.250181198120117
    7. ' .' → logprob: -14.125181198120117
    8. 'app' → logprob: -14.750181198120117
    9. '       ' → logprob: -15.625181198120117
    10. '   ' → logprob: -15.875181198120117

Token 691: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.125
    3. ''' → logprob: -16.375
    4. '(
' → logprob: -18.25
    5. ' ('' → logprob: -18.75
    6. '("' → logprob: -18.875
    7. ''s' → logprob: -21.125
    8. '(('' → logprob: -22.125
    9. '(',' → logprob: -22.75
    10. '   ' → logprob: -23.25

Token 692: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.029751762747764587
    2. '0' → logprob: -3.529751777648926
    3. '"' → logprob: -14.529751777648926
    4. ' '' → logprob: -14.904751777648926
    5. ' ' → logprob: -15.779751777648926
    6. '   ' → logprob: -15.779751777648926
    7. '('' → logprob: -16.40475082397461
    8. '')' → logprob: -17.02975082397461
    9. ')' → logprob: -17.15475082397461
    10. '`' → logprob: -17.27975082397461

Token 693: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.015649404376745224
    2. ')' → logprob: -4.265649318695068
    3. '')
' → logprob: -6.640649318695068
    4. '                   ' → logprob: -8.765649795532227
    5. ')
' → logprob: -11.640649795532227
    6. '                       ' → logprob: -12.265649795532227
    7. '")' → logprob: -12.390649795532227
    8. '               ' → logprob: -13.015649795532227
    9. '           ' → logprob: -14.515649795532227
    10. ''' → logprob: -14.515649795532227

Token 694: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.058540038764476776
    2. '               ' → logprob: -2.933540105819702
    3. '           ' → logprob: -6.433539867401123
    4. '                       ' → logprob: -7.808539867401123
    5. '       ' → logprob: -8.183540344238281
    6. '```' → logprob: -8.683540344238281
    7. 'new' → logprob: -8.933540344238281
    8. '                  ' → logprob: -8.933540344238281
    9. '                    
' → logprob: -8.933540344238281
    10. '                 ' → logprob: -9.308540344238281

Token 695: ' new' (ID: 620)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10341320931911469
    2. '           ' → logprob: -2.6034131050109863
    3. 'new' (adapté à ' new') → logprob: -3.8534131050109863
    4. ' new' → logprob: -6.228413105010986
    5. '                   ' → logprob: -7.978413105010986
    6. '             ' → logprob: -8.728413581848145
    7. '              ' → logprob: -9.103413581848145
    8. '          ' → logprob: -9.478413581848145
    9. '       ' → logprob: -9.603413581848145
    10. '			' → logprob: -10.103413581848145

Token 696: '_grid' (ID: 34614)
  Prédit: '_row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.009839783422648907
    2. '_grid' → logprob: -4.63484001159668
    3. 'row' → logprob: -9.50984001159668
    4. '_' → logprob: -12.38484001159668
    5. '_line' → logprob: -13.50984001159668
    6. 'grid' → logprob: -13.63484001159668
    7. '_rows' → logprob: -13.75984001159668
    8. 'Row' → logprob: -14.88484001159668
    9. '_box' → logprob: -15.13484001159668
    10. '   ' → logprob: -15.38484001159668

Token 697: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00033593899570405483
    2. '.' → logprob: -8.000335693359375
    3. 'append' → logprob: -14.750335693359375
    4. ' .' → logprob: -16.750335693359375
    5. '.extend' → logprob: -17.750335693359375
    6. '.app' → logprob: -17.875335693359375
    7. '.Append' → logprob: -19.250335693359375
    8. '.ap' → logprob: -19.750335693359375
    9. '.push' → logprob: -20.250335693359375
    10. ' append' → logprob: -20.500335693359375

Token 698: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -2.093505099765025e-05
    2. 'new' → logprob: -11.250020980834961
    3. '(' → logprob: -11.750020980834961
    4. ' new' → logprob: -19.87502098083496
    5. ' (' → logprob: -20.12502098083496
    6. '(
' → logprob: -21.25002098083496
    7. '(n' → logprob: -21.37502098083496
    8. '('' → logprob: -22.12502098083496
    9. '((' → logprob: -22.12502098083496
    10. ',new' → logprob: -22.50002098083496

Token 699: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.02325223572552204
    2. 'row' → logprob: -3.773252248764038
    3. 'Row' → logprob: -12.898252487182617
    4. ' row' → logprob: -13.148252487182617
    5. '(row' → logprob: -14.398252487182617
    6. '[row' → logprob: -14.648252487182617
    7. 'w' → logprob: -14.773252487182617
    8. '
' → logprob: -15.273252487182617
    9. 'ow' → logprob: -16.023252487182617
    10. '_' → logprob: -16.148252487182617

Token 700: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01383189670741558
    2. '       ' → logprob: -4.763832092285156
    3. ')
' → logprob: -5.263832092285156
    4. '   ' → logprob: -11.388832092285156
    5. '           ' → logprob: -12.013832092285156
    6. ')new' → logprob: -12.263832092285156
    7. ')
' → logprob: -13.138832092285156
    8. '<|end|>' → logprob: -14.263832092285156
    9. ')return' → logprob: -14.513832092285156
    10. ')add' → logprob: -14.763832092285156

Token 701: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013019033940508962
    2. 'new' → logprob: -7.0013017654418945
    3. '           ' → logprob: -8.376301765441895
    4. '   ' → logprob: -9.001301765441895
    5. ' new' → logprob: -10.501301765441895
    6. '<|end|>' → logprob: -13.001301765441895
    7. '	   ' → logprob: -13.626301765441895
    8. ' ' → logprob: -14.001301765441895
    9. '```' → logprob: -14.251301765441895
    10. '	' → logprob: -14.376301765441895

Token 702: ' new' (ID: 620)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004977479111403227
    2. 'new' (adapté à ' new') → logprob: -7.875497817993164
    3. '   ' → logprob: -9.125497817993164
    4. ' new' → logprob: -12.500497817993164
    5. '           ' → logprob: -13.250497817993164
    6. '<|end|>' → logprob: -13.875497817993164
    7. '      ' → logprob: -14.250497817993164
    8. '	   ' → logprob: -15.250497817993164
    9. '     ' → logprob: -15.250497817993164
    10. ' ' → logprob: -15.375497817993164

Token 703: '_box' (ID: 22630)
  Prédit: '_box'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_box' → logprob: -0.011108653619885445
    2. '_grid' → logprob: -4.511108875274658
    3. 'box' → logprob: -10.5111083984375
    4. '.append' → logprob: -11.1361083984375
    5. 'new' → logprob: -11.3861083984375
    6. 'append' → logprob: -13.1361083984375
    7. 'grid' → logprob: -13.2611083984375
    8. '_row' → logprob: -13.6361083984375
    9. '_block' → logprob: -15.0111083984375
    10. '_' → logprob: -15.3861083984375

Token 704: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00012451570364646614
    2. '.' → logprob: -9.00012493133545
    3. 'append' → logprob: -14.12512493133545
    4. '           ' → logprob: -15.75012493133545
    5. '.app' → logprob: -15.75012493133545
    6. ' .' → logprob: -16.625123977661133
    7. '       ' → logprob: -18.250123977661133
    8. '.extend' → logprob: -18.500123977661133
    9. '   ' → logprob: -19.125123977661133
    10. '.Append' → logprob: -19.375123977661133

Token 705: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -7.493430894101039e-05
    2. 'new' → logprob: -9.500075340270996
    3. '[new' → logprob: -17.00007438659668
    4. ' new' → logprob: -17.37507438659668
    5. '(' → logprob: -18.37507438659668
    6. '   ' → logprob: -20.00007438659668
    7. ')new' → logprob: -20.00007438659668
    8. ' (' → logprob: -20.62507438659668
    9. '       ' → logprob: -21.00007438659668
    10. '	new' → logprob: -21.00007438659668

Token 706: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -0.16030049324035645
    2. 'grid' → logprob: -1.9103004932403564
    3. 'new' → logprob: -9.535300254821777
    4. '_box' → logprob: -13.285300254821777
    5. 'Grid' → logprob: -13.410300254821777
    6. ' grid' → logprob: -15.660300254821777
    7. 'box' → logprob: -15.910300254821777
    8. 'GRID' → logprob: -16.035301208496094
    9. 'row' → logprob: -16.285301208496094
    10. '_row' → logprob: -16.410301208496094

Token 707: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01572650671005249
    2. ')' → logprob: -4.390726566314697
    3. '<|end|>' → logprob: -6.390726566314697
    4. '
' → logprob: -6.765726566314697
    5. ')
' → logprob: -9.015726089477539
    6. '        
' → logprob: -9.015726089477539
    7. 'new' → logprob: -10.265726089477539
    8. '   ' → logprob: -10.390726089477539
    9. '<|end|>' → logprob: -11.765726089477539
    10. '```' → logprob: -12.015726089477539

Token 708: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03818585351109505
    2. 'box' → logprob: -3.2881858348846436
    3. ' box' → logprob: -9.288186073303223
    4. '       ' → logprob: -10.038186073303223
    5. '	box' → logprob: -12.663186073303223
    6. '```' → logprob: -13.288186073303223
    7. '  ' → logprob: -13.788186073303223
    8. '    
' → logprob: -13.788186073303223
    9. '
' → logprob: -14.538186073303223
    10. '           ' → logprob: -15.538186073303223

Token 709: ' box' (ID: 5506)
  Prédit: 'box'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'box' (adapté à ' box') → logprob: -0.02567179501056671
    2. '   ' → logprob: -3.7756717205047607
    3. ' box' → logprob: -6.02567195892334
    4. '	box' → logprob: -12.27567195892334
    5. '
' → logprob: -13.65067195892334
    6. '    
' → logprob: -14.40067195892334
    7. '       ' → logprob: -14.90067195892334
    8. '  ' → logprob: -15.65067195892334
    9. '_box' → logprob: -15.77567195892334
    10. '.box' → logprob: -16.650671005249023

Token 710: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07888989895582199
    2. '=' → logprob: -2.578889846801758
    3. '[:]' → logprob: -17.078889846801758
    4. '   ' → logprob: -17.953889846801758
    5. '＝' → logprob: -18.078889846801758
    6. ',' → logprob: -18.078889846801758
    7. '    ' → logprob: -18.578889846801758
    8. ' ' → logprob: -18.953889846801758
    9. '[' → logprob: -19.328889846801758
    10. '=new' → logprob: -19.703889846801758

Token 711: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0024756586644798517
    2. ' new' → logprob: -6.002475738525391
    3. '[new' → logprob: -17.00247573852539
    4. 'New' → logprob: -18.12747573852539
    5. 'copy' → logprob: -18.37747573852539
    6. 'deep' → logprob: -19.00247573852539
    7. '   ' → logprob: -19.12747573852539
    8. '[' → logprob: -19.25247573852539
    9. '	new' → logprob: -19.25247573852539
    10. '新' → logprob: -19.50247573852539

Token 712: '_box' (ID: 22630)
  Prédit: '_box'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_box' → logprob: -0.02442755736410618
    2. 'box' → logprob: -3.774427652359009
    3. 'ox' → logprob: -6.77442741394043
    4. 'obox' → logprob: -11.27442741394043
    5. 'x' → logprob: -11.77442741394043
    6. '```' → logprob: -12.89942741394043
    7. '_' → logprob: -13.02442741394043
    8. 'o' → logprob: -13.39942741394043
    9. 'w' → logprob: -13.39942741394043
    10. '[' → logprob: -13.39942741394043

Token 713: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6355984210968018
    2. '
' → logprob: -1.1355984210968018
    3. 'print' → logprob: -2.0105984210968018
    4. '    
' → logprob: -4.260598182678223
    5. ' print' → logprob: -7.885598182678223
    6. '```' → logprob: -8.135598182678223
    7. '

' → logprob: -8.635598182678223
    8. '        
' → logprob: -9.510598182678223
    9. '  
' → logprob: -9.760598182678223
    10. '   
' → logprob: -10.010598182678223

Token 714: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011426322162151337
    2. '   ' → logprob: -4.5114264488220215
    3. '#' → logprob: -8.511425971984863
    4. 'count' → logprob: -10.136425971984863
    5. 'alive' → logprob: -10.136425971984863
    6. 'output' → logprob: -10.636425971984863
    7. '```' → logprob: -10.761425971984863
    8. ' print' → logprob: -11.011425971984863
    9. '    
' → logprob: -11.761425971984863
    10. '#print' → logprob: -11.761425971984863

Token 715: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00037359268753789365
    2. 'alive' → logprob: -8.750373840332031
    3. ' print' → logprob: -9.250373840332031
    4. '   ' → logprob: -9.750373840332031
    5. 'count' → logprob: -10.250373840332031
    6. '#' → logprob: -12.125373840332031
    7. 'result' → logprob: -12.250373840332031
    8. 'output' → logprob: -12.625373840332031
    9. 'total' → logprob: -12.750373840332031
    10. '```' → logprob: -13.000373840332031

Token 716: '("' (ID: 568)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.12963224947452545
    2. '(case' → logprob: -2.1296322345733643
    3. '("' → logprob: -6.879632472991943
    4. '(' → logprob: -6.879632472991943
    5. '('' → logprob: -7.379632472991943
    6. '()' → logprob: -11.504631996154785
    7. 'case' → logprob: -12.379631996154785
    8. 'f' → logprob: -13.754631996154785
    9. '(F' → logprob: -14.129631996154785
    10. '(len' → logprob: -14.629631996154785

Token 717: 'Case' (ID: 6187)
  Prédit: 'Case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Case' → logprob: -0.2080933302640915
    2. 'f' → logprob: -1.958093285560608
    3. '"' → logprob: -3.2080934047698975
    4. 'Cas' → logprob: -6.458093166351318
    5. 'Day' → logprob: -6.833093166351318
    6. '---' → logprob: -7.083093166351318
    7. ''' → logprob: -7.708093166351318
    8. 'case' → logprob: -8.208093643188477
    9. '")' → logprob: -8.208093643188477
    10. 'Cube' → logprob: -8.333093643188477

Token 718: ' {}' (ID: 9902)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0591503381729126
    2. ' #' → logprob: -1.3091503381729126
    3. '_num' → logprob: -1.8091503381729126
    4. ' f' → logprob: -2.809150218963623
    5. ' _' → logprob: -2.809150218963623
    6. ' ' → logprob: -3.559150218963623
    7. '#' → logprob: -4.184150218963623
    8. '_f' → logprob: -4.434150218963623
    9. '"' → logprob: -5.434150218963623
    10. 'f' → logprob: -5.434150218963623

Token 719: ':' (ID: 25)
  Prédit: '{}".'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}".' → logprob: -0.3093971014022827
    2. '{}' → logprob: -1.6843971014022827
    3. ':' → logprob: -3.0593972206115723
    4. '{},' → logprob: -4.684397220611572
    5. '{}.' → logprob: -4.684397220611572
    6. '.format' → logprob: -5.059397220611572
    7. ':{}' → logprob: -5.684397220611572
    8. ',' → logprob: -6.309397220611572
    9. 'format' → logprob: -7.184397220611572
    10. ' {}".' → logprob: -7.434397220611572

Token 720: '".' (ID: 4050)
  Prédit: '{}".'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}".' → logprob: -0.23283155262470245
    2. '{}' → logprob: -2.3578314781188965
    3. '{' → logprob: -3.8578314781188965
    4. '"' → logprob: -3.9828314781188965
    5. '",' → logprob: -4.3578314781188965
    6. '#' → logprob: -4.6078314781188965
    7. 'alive' → logprob: -4.6078314781188965
    8. '{}\' → logprob: -5.3578314781188965
    9. 'box' → logprob: -5.4828314781188965
    10. 'Alive' → logprob: -5.6078314781188965

Token 721: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -1.318681188422488e-05
    2. 'print' → logprob: -12.00001335144043
    3. 'case' → logprob: -12.12501335144043
    4. ' format' → logprob: -13.62501335144043
    5. '(format' → logprob: -15.62501335144043
    6. 'form' → logprob: -16.50001335144043
    7. 'f' → logprob: -17.62501335144043
    8. ')' → logprob: -19.25001335144043
    9. '(case' → logprob: -19.75001335144043
    10. '	format' → logprob: -19.75001335144043

Token 722: '(case' (ID: 131636)
  Prédit: '(case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(case' → logprob: -0.08515306562185287
    2. 'case' → logprob: -2.585153102874756
    3. ' case' → logprob: -5.085153102874756
    4. ' (' → logprob: -10.335152626037598
    5. '(' → logprob: -10.710152626037598
    6. 'Case' → logprob: -15.335152626037598
    7. '.case' → logprob: -15.460152626037598
    8. '(c' → logprob: -15.710152626037598
    9. ')' → logprob: -15.710152626037598
    10. '_case' → logprob: -16.085153579711914

Token 723: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -3.128163257315464e-07
    2. 'num' → logprob: -16.5
    3. '_case' → logprob: -16.5
    4. '_' → logprob: -17.625
    5. '_NUM' → logprob: -18.75
    6. 'case' → logprob: -19.0
    7. 'Num' → logprob: -19.75
    8. '_Num' → logprob: -20.0
    9. ')' → logprob: -20.125
    10. '_number' → logprob: -20.75

Token 724: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003862245939671993
    2. ',' → logprob: -8.375386238098145
    3. ' )' → logprob: -9.250386238098145
    4. '))' → logprob: -10.500386238098145
    5. '   ' → logprob: -11.250386238098145
    6. ')}' → logprob: -11.750386238098145
    7. ',)' → logprob: -12.500386238098145
    8. ')
' → logprob: -13.000386238098145
    9. '),' → logprob: -13.375386238098145
    10. ')`' → logprob: -13.750386238098145

Token 725: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6996049284934998
    2. 'print' → logprob: -1.5746049880981445
    3. 'alive' → logprob: -2.0746049880981445
    4. ' print' → logprob: -2.1996049880981445
    5. ' alive' → logprob: -3.4496049880981445
    6. 'live' → logprob: -4.5746049880981445
    7. ' live' → logprob: -4.8246049880981445
    8. 'count' → logprob: -5.1996049880981445
    9. ' count' → logprob: -6.9496049880981445
    10. 'total' → logprob: -7.4496049880981445

Token 726: ' for' (ID: 395)
  Prédit: 'alive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alive' → logprob: -0.14735454320907593
    2. 'print' → logprob: -2.5223546028137207
    3. 'for' (adapté à ' for') → logprob: -4.022354602813721
    4. 'live' → logprob: -4.397354602813721
    5. 'case' → logprob: -4.772354602813721
    6. 'count' → logprob: -5.272354602813721
    7. '   ' → logprob: -5.522354602813721
    8. 'total' → logprob: -5.772354602813721
    9. 'living' → logprob: -6.272354602813721
    10. 'num' → logprob: -7.147354602813721

Token 727: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0005687602679245174
    2. ' z' → logprob: -7.500568866729736
    3. 'layer' → logprob: -11.375568389892578
    4. 'grid' → logprob: -12.875568389892578
    5. '   ' → logprob: -14.125568389892578
    6. ' layer' → logprob: -14.625568389892578
    7. '	z' → logprob: -15.250568389892578
    8. ' ' → logprob: -16.250568389892578
    9. 'plane' → logprob: -16.875568389892578
    10. '_z' → logprob: -17.125568389892578

Token 728: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008668226189911366
    2. 'in' → logprob: -4.758668422698975
    3. '   ' → logprob: -9.883667945861816
    4. '	in' → logprob: -13.508667945861816
    5. ' ' → logprob: -14.883667945861816
    6. ',' → logprob: -14.883667945861816
    7. '    ' → logprob: -16.008668899536133
    8. '0' → logprob: -16.633668899536133
    9. '<|end|>' → logprob: -16.758668899536133
    10. '  ' → logprob: -17.008668899536133

Token 729: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002692032721824944
    2. ' range' → logprob: -8.250268936157227
    3. 'box' → logprob: -11.750268936157227
    4. 'new' → logprob: -16.500268936157227
    5. '   ' → logprob: -18.000268936157227
    6. '(range' → logprob: -18.500268936157227
    7. ' box' → logprob: -20.000268936157227
    8. '5' → logprob: -20.125268936157227
    9. '```' → logprob: -20.500268936157227
    10. '	range' → logprob: -20.500268936157227

Token 730: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019287518225610256
    2. '5' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.751928329467773
    4. ' (' → logprob: -18.876928329467773
    5. ' ' → logprob: -19.126928329467773
    6. '```' → logprob: -20.001928329467773
    7. '(
' → logprob: -20.126928329467773
    8. '(len' → logprob: -20.126928329467773
    9. 'range' → logprob: -21.376928329467773
    10. '0' → logprob: -22.126928329467773

Token 731: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. 'len' → logprob: -17.25
    4. '   ' → logprob: -17.75
    5. '(' → logprob: -21.125
    6. '  ' → logprob: -21.125
    7. '0' → logprob: -21.25
    8. '```' → logprob: -21.25
    9. ')' → logprob: -22.0
    10. '۵' → logprob: -22.25

Token 732: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03210516273975372
    2. '):
' → logprob: -3.5321052074432373
    3. ':' → logprob: -6.407104969024658
    4. '   ' → logprob: -7.407104969024658
    5. ')' → logprob: -9.657105445861816
    6. ':
' → logprob: -11.407105445861816
    7. ' ' → logprob: -12.157105445861816
    8. '       ' → logprob: -12.532105445861816
    9. ',' → logprob: -12.907105445861816
    10. '):
' → logprob: -13.032105445861816

Token 733: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10023200511932373
    2. '   ' → logprob: -2.3502321243286133
    3. ' for' → logprob: -10.850232124328613
    4. 'for' → logprob: -12.600232124328613
    5. '```' → logprob: -13.350232124328613
    6. '	   ' → logprob: -15.475232124328613
    7. '   ' → logprob: -15.475232124328613
    8. '<|end|>' → logprob: -15.975232124328613
    9. 'print' → logprob: -16.475231170654297
    10. '>' → logprob: -16.600231170654297

Token 734: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.20401854813098907
    2. '   ' → logprob: -1.7040185928344727
    3. ' for' → logprob: -5.954018592834473
    4. 'print' → logprob: -12.329018592834473
    5. '       ' → logprob: -13.704018592834473
    6. '	for' → logprob: -14.204018592834473
    7. '   ' → logprob: -16.079017639160156
    8. ' ' → logprob: -16.954017639160156
    9. '  ' → logprob: -17.579017639160156
    10. '    
' → logprob: -18.829017639160156

Token 735: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.004081128165125847
    2. ' y' → logprob: -5.5040812492370605
    3. '   ' → logprob: -13.254080772399902
    4. 'row' → logprob: -14.004080772399902
    5. ' ' → logprob: -16.12908172607422
    6. 'x' → logprob: -16.75408172607422
    7. '	y' → logprob: -17.12908172607422
    8. ' row' → logprob: -18.25408172607422
    9. 'line' → logprob: -18.62908172607422
    10. 'print' → logprob: -20.00408172607422

Token 736: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.061992332339286804
    2. 'in' → logprob: -2.8119924068450928
    3. '   ' → logprob: -11.061992645263672
    4. '(' → logprob: -12.561992645263672
    5. '       ' → logprob: -12.936992645263672
    6. ' ' → logprob: -14.186992645263672
    7. 'range' → logprob: -14.561992645263672
    8. '(range' → logprob: -14.561992645263672
    9. '[' → logprob: -14.936992645263672
    10. ',' → logprob: -15.186992645263672

Token 737: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011048762127757072
    2. ' range' → logprob: -4.511048793792725
    3. '(range' → logprob: -13.886048316955566
    4. '(' → logprob: -17.136049270629883
    5. '   ' → logprob: -17.761049270629883
    6. 'in' → logprob: -18.511049270629883
    7. ' in' → logprob: -19.261049270629883
    8. ' ' → logprob: -19.511049270629883
    9. '[' → logprob: -19.511049270629883
    10. '	range' → logprob: -19.761049270629883

Token 738: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.047787733376026154
    2. 'range' → logprob: -3.297787666320801
    3. ' range' → logprob: -4.797787666320801
    4. '(range' → logprob: -6.547787666320801
    5. ' in' → logprob: -11.2977876663208
    6. 'in' → logprob: -12.2977876663208
    7. ' (' → logprob: -14.6727876663208
    8. '   ' → logprob: -16.297788619995117
    9. '	range' → logprob: -17.047788619995117
    10. '5' → logprob: -17.172788619995117

Token 739: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0028476715087890625
    2. 'range' → logprob: -5.877847671508789
    3. ' range' → logprob: -10.252847671508789
    4. '(' → logprob: -12.252847671508789
    5. ' ' → logprob: -13.752847671508789
    6. '   ' → logprob: -14.002847671508789
    7. '(range' → logprob: -14.627847671508789
    8. ')' → logprob: -15.752847671508789
    9. 'len' → logprob: -16.12784767150879
    10. '       ' → logprob: -17.25284767150879

Token 740: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05934670940041542
    2. '):' → logprob: -2.9343466758728027
    3. '       ' → logprob: -6.434346675872803
    4. ':' → logprob: -6.809346675872803
    5. ':
' → logprob: -7.184346675872803
    6. '   ' → logprob: -7.309346675872803
    7. '           ' → logprob: -8.434347152709961
    8. ',' → logprob: -10.684347152709961
    9. ')' → logprob: -10.809347152709961
    10. '():
' → logprob: -11.559347152709961

Token 741: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0034598950296640396
    2. '       ' → logprob: -6.503459930419922
    3. 'print' → logprob: -6.503459930419922
    4. ' print' → logprob: -7.753459930419922
    5. '               ' → logprob: -11.753459930419922
    6. '   ' → logprob: -11.753459930419922
    7. '	       ' → logprob: -12.128459930419922
    8. '```' → logprob: -12.753459930419922
    9. '		' → logprob: -13.878459930419922
    10. '         ' → logprob: -14.003459930419922

Token 742: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.05021023750305176
    2. ' print' → logprob: -3.0502102375030518
    3. '   ' → logprob: -6.550209999084473
    4. '           ' → logprob: -9.050209999084473
    5. '       ' → logprob: -9.800209999084473
    6. '               ' → logprob: -11.050209999084473
    7. '	print' → logprob: -12.800209999084473
    8. ' ' → logprob: -16.05021095275879
    9. '```' → logprob: -16.05021095275879
    10. '                   ' → logprob: -16.80021095275879

Token 743: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.062109749764204025
    2. '("' → logprob: -2.8121097087860107
    3. '''.' → logprob: -9.18710994720459
    4. '(' → logprob: -10.68710994720459
    5. '   ' → logprob: -11.81210994720459
    6. '"' → logprob: -11.81210994720459
    7. '       ' → logprob: -14.68710994720459
    8. '(""' → logprob: -14.93710994720459
    9. '('').' → logprob: -15.06210994720459
    10. ' ''.' → logprob: -15.31210994720459

Token 744: ''.' (ID: 6120)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.0003124632057733834
    2. '"' → logprob: -8.250312805175781
    3. '''' → logprob: -10.375312805175781
    4. ' ''.' → logprob: -11.000312805175781
    5. ''' → logprob: -12.875312805175781
    6. '''
' → logprob: -15.375312805175781
    7. '""' → logprob: -15.500312805175781
    8. ''.' → logprob: -15.625312805175781
    9. '('' → logprob: -16.50031280517578
    10. ' "".' → logprob: -16.87531280517578

Token 745: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.128163257315464e-07
    2. ' join' → logprob: -16.25
    3. 'jo' → logprob: -16.5
    4. 'j' → logprob: -18.5
    5. 'print' → logprob: -19.0
    6. '.join' → logprob: -19.75
    7. '(join' → logprob: -20.375
    8. '''.' → logprob: -20.875
    9. '.' → logprob: -21.375
    10. '```' → logprob: -22.125

Token 746: '(box' (ID: 68248)
  Prédit: '(box'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(box' → logprob: -1.9361264946837764e-07
    2. 'box' → logprob: -16.25
    3. '(' → logprob: -17.875
    4. ' box' → logprob: -19.0
    5. '(Box' → logprob: -19.25
    6. '	box' → logprob: -20.375
    7. '.box' → logprob: -22.0
    8. '(new' → logprob: -22.0
    9. '(board' → logprob: -22.125
    10. ' (' → logprob: -23.25

Token 747: '[z' (ID: 105082)
  Prédit: '[z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[z' → logprob: 0.0
    2. '[y' → logprob: -19.5
    3. '[x' → logprob: -20.625
    4. '   ' → logprob: -20.625
    5. '[' → logprob: -21.0
    6. 'z' → logprob: -21.125
    7. ' [' → logprob: -21.375
    8. ')[' → logprob: -22.0
    9. '```' → logprob: -22.125
    10. '(z' → logprob: -22.125

Token 748: '][' (ID: 2696)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.16030709445476532
    2. '][' → logprob: -1.9103070497512817
    3. '[z' → logprob: -10.160306930541992
    4. '[' → logprob: -10.410306930541992
    5. ' ][' → logprob: -12.410306930541992
    6. ']' → logprob: -12.910306930541992
    7. 'y' → logprob: -13.035306930541992
    8. ' [' → logprob: -13.160306930541992
    9. '   ' → logprob: -14.285306930541992
    10. '[u' → logprob: -14.660306930541992

Token 749: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.5577775128767826e-06
    2. ' y' → logprob: -12.375005722045898
    3. '[y' → logprob: -13.625005722045898
    4. 'x' → logprob: -18.0000057220459
    5. ' ' → logprob: -18.3750057220459
    6. '	y' → logprob: -18.8750057220459
    7. '][' → logprob: -19.1250057220459
    8. '[' → logprob: -19.6250057220459
    9. '   ' → logprob: -19.7500057220459
    10. ''y' → logprob: -20.5000057220459

Token 750: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00033951509976759553
    2. ')))' → logprob: -8.62533950805664
    3. '))
' → logprob: -9.00033950805664
    4. ']))' → logprob: -10.87533950805664
    5. ')' → logprob: -12.00033950805664
    6. ' ))' → logprob: -12.25033950805664
    7. '       ' → logprob: -13.25033950805664
    8. '   ' → logprob: -13.37533950805664
    9. '           ' → logprob: -13.75033950805664
    10. ''))' → logprob: -14.75033950805664

Token 751: '       ' (ID: 309)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.03062119334936142
    2. '   ' → logprob: -3.780621290206909
    3. 'print' → logprob: -5.15562105178833
    4. '
' → logprob: -6.90562105178833
    5. ' case' → logprob: -7.53062105178833
    6. '(case' → logprob: -10.780621528625488
    7. '```' → logprob: -12.030621528625488
    8. '    
' → logprob: -12.030621528625488
    9. 'Case' → logprob: -12.530621528625488
    10. '_case' → logprob: -13.655621528625488

Token 752: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04877721518278122
    2. '   ' → logprob: -3.0487771034240723
    3. 'if' (adapté à ' if') → logprob: -8.79877758026123
    4. ' print' → logprob: -10.17377758026123
    5. '```' → logprob: -14.79877758026123
    6. '	print' → logprob: -15.92377758026123
    7. '    
' → logprob: -15.92377758026123
    8. ' if' → logprob: -17.173776626586914
    9. 'case' → logprob: -17.423776626586914
    10. '       ' → logprob: -17.798776626586914

Token 753: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.2014138251543045
    2. ' z' → logprob: -1.701413869857788
    3. 'case' → logprob: -15.076414108276367
    4. '	z' → logprob: -15.951414108276367
    5. '(z' → logprob: -16.076414108276367
    6. ' case' → logprob: -16.701414108276367
    7. ' ' → logprob: -17.076414108276367
    8. ' ' → logprob: -17.326414108276367
    9. '   ' → logprob: -18.951414108276367
    10. '_z' → logprob: -19.826414108276367

Token 754: ' !=' (ID: 1666)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1276380717754364
    2. '!=' → logprob: -2.627638101577759
    3. ' !=' → logprob: -3.127638101577759
    4. ' <' → logprob: -5.62763786315918
    5. '<n' → logprob: -9.87763786315918
    6. '<len' → logprob: -10.25263786315918
    7. '<num' → logprob: -11.00263786315918
    8. '   ' → logprob: -11.25263786315918
    9. '<int' → logprob: -11.25263786315918
    10. '!=(' → logprob: -12.25263786315918

Token 755: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.87500762939453
    4. '' → logprob: -21.25000762939453
    5. '４' → logprob: -21.62500762939453
    6. ' four' → logprob: -22.12500762939453
    7. ' ' → logprob: -22.75000762939453
    8. '	' → logprob: -22.75000762939453
    9. '۴' → logprob: -22.87500762939453
    10. '  ' → logprob: -23.00000762939453

Token 756: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -18.875
    4. '5' → logprob: -21.75
    5. '４' → logprob: -22.125
    6. '0' → logprob: -22.875
    7. '```' → logprob: -23.0
    8. '' → logprob: -23.125
    9. '44' → logprob: -23.375
    10. '۴' → logprob: -23.625

Token 757: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4852099120616913
    2. ':
' → logprob: -0.9852099418640137
    3. '           ' → logprob: -5.235209941864014
    4. '   ' → logprob: -5.735209941864014
    5. 'print' → logprob: -6.485209941864014
    6. '       ' → logprob: -7.360209941864014
    7. ' print' → logprob: -8.235209465026855
    8. ':
' → logprob: -10.860209465026855
    9. ' :
' → logprob: -11.860209465026855
    10. '	print' → logprob: -11.860209465026855

Token 758: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7510316967964172
    2. '       ' → logprob: -0.7510316967964172
    3. ' print' → logprob: -3.2510316371917725
    4. 'print' → logprob: -4.126031875610352
    5. '           ' → logprob: -6.751031875610352
    6. '	print' → logprob: -9.376031875610352
    7. ' ' → logprob: -10.001031875610352
    8. '    
' → logprob: -11.001031875610352
    9. '        
' → logprob: -12.001031875610352
    10. '
' → logprob: -12.001031875610352

Token 759: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0012057077838107944
    2. '   ' → logprob: -7.251205921173096
    3. ' print' → logprob: -7.751205921173096
    4. '       ' → logprob: -9.751205444335938
    5. '	print' → logprob: -12.251205444335938
    6. '           ' → logprob: -13.251205444335938
    7. '
' → logprob: -15.626205444335938
    8. ' ' → logprob: -16.126205444335938
    9. '    
' → logprob: -16.251205444335938
    10. '        
' → logprob: -17.001205444335938

Token 760: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00018518301658332348
    2. '('' → logprob: -9.000185012817383
    3. '("")' → logprob: -9.750185012817383
    4. '(' → logprob: -12.625185012817383
    5. '()
' → logprob: -16.000185012817383
    6. ' ()' → logprob: -17.000185012817383
    7. '""' → logprob: -18.000185012817383
    8. '().' → logprob: -19.000185012817383
    9. '''' → logprob: -19.125185012817383
    10. '()

' → logprob: -19.125185012817383

Token 761: '   ' (ID: 271)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.47681987285614014
    2. '
' → logprob: -0.9768198728561401
    3. '   ' → logprob: -6.85181999206543
    4. ' case' → logprob: -7.22681999206543
    5. '    
' → logprob: -7.72681999206543
    6. '
' → logprob: -8.47681999206543
    7. '

' → logprob: -9.10181999206543
    8. '  
' → logprob: -9.72681999206543
    9. '```' → logprob: -9.97681999206543
    10. '(case' → logprob: -10.10181999206543

Token 762: ' print' (ID: 2123)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.1700568050146103
    2. '
' → logprob: -2.1700568199157715
    3. '   ' → logprob: -3.1700568199157715
    4. '    
' → logprob: -8.670056343078613
    5. ' case' → logprob: -11.045056343078613
    6. '
' → logprob: -11.420056343078613
    7. '(case' → logprob: -12.045056343078613
    8. '```' → logprob: -12.795056343078613
    9. '

' → logprob: -13.545056343078613
    10. '        
' → logprob: -14.545056343078613

Token 763: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023253746330738068
    2. '()
' → logprob: -3.7732536792755127
    3. '("")' → logprob: -12.398253440856934
    4. '(' → logprob: -12.523253440856934
    5. '()

' → logprob: -15.023253440856934
    6. '()
' → logprob: -16.52325439453125
    7. '(
' → logprob: -17.27325439453125
    8. '("")
' → logprob: -17.52325439453125
    9. '()"' → logprob: -17.52325439453125
    10. '   ' → logprob: -17.64825439453125

Token 764: '   ' (ID: 271)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.0006326167494989932
    2. '   ' → logprob: -7.8756327629089355
    3. ' case' → logprob: -8.750632286071777
    4. '
' → logprob: -9.375632286071777
    5. '```' → logprob: -12.250632286071777
    6. '    
' → logprob: -13.375632286071777
    7. '(case' → logprob: -13.500632286071777
    8. '	case' → logprob: -13.625632286071777
    9. '_case' → logprob: -15.875632286071777
    10. 'Case' → logprob: -16.000633239746094

Token 765: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' (adapté à ' case') → logprob: -6.2729995988775045e-06
    2. '   ' → logprob: -12.000006675720215
    3. ' case' → logprob: -18.7500057220459
    4. '(case' → logprob: -22.3750057220459
    5. '
' → logprob: -22.7500057220459
    6. '	case' → logprob: -24.3750057220459
    7. '```' → logprob: -24.5000057220459
    8. '  ' → logprob: -25.0000057220459
    9. '    
' → logprob: -25.1250057220459
    10. '.case' → logprob: -25.1250057220459

Token 766: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -4.320199877838604e-07
    2. 'num' → logprob: -14.875
    3. '_case' → logprob: -17.0
    4. '_' → logprob: -17.375
    5. 'case' → logprob: -19.125
    6. 'Num' → logprob: -19.375
    7. '_NUM' → logprob: -19.5
    8. '\' → logprob: -19.75
    9. '_number' → logprob: -20.375
    10. '_nums' → logprob: -20.375

Token 767: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3133258521556854
    2. ' +=' → logprob: -1.3133258819580078
    3. '=' → logprob: -10.063325881958008
    4. '+' → logprob: -11.313325881958008
    5. ']+=' → logprob: -12.563325881958008
    6. '   ' → logprob: -13.313325881958008
    7. ' ' → logprob: -13.938325881958008
    8. ' ' → logprob: -14.063325881958008
    9. '+="' → logprob: -14.063325881958008
    10. '+='' → logprob: -14.438325881958008

Token 768: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -20.375001907348633
    4. '```' → logprob: -21.625001907348633
    5. '
' → logprob: -22.875001907348633
    6. '１' → logprob: -23.125001907348633
    7. '  ' → logprob: -23.500001907348633
    8. '+' → logprob: -23.625001907348633
    9. '`' → logprob: -24.750001907348633
    10. '۱' → logprob: -24.875001907348633

Token 769: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.75
    3. '```' → logprob: -21.0
    4. '   ' → logprob: -22.5
    5. '
' → logprob: -23.125
    6. '１' → logprob: -23.625
    7. '`' → logprob: -24.375
    8. '۱' → logprob: -24.875
    9. '2' → logprob: -25.125
    10. '...' → logprob: -25.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 767
Tokens correctement prédits (1ère position, stricte): 363
Tokens correctement prédits (1ère position, avec adaptation): 400
Tokens correctement prédits (top 10): 675
Précision stricte (1ère position): 47.33%
Précision adaptée (1ère position): 52.15%
Précision (top 10): 88.01%
================================================================================
