================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:32:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Solution au problème "Bange Hills Tower"
# L'objectif est de déterminer la hauteur minimale de la tour pour que la ligne de vue depuis le sommet de la tour jusqu'au bas du donjon (au sol, position 0 hauteur 0)
# ne soit obstruée par aucun bâtiment.

# Approche :
# - Le donjon est à la position 0, et la tour est à la position t sur l'axe horizontal.
# - On cherche la hauteur H de la tour pour que la droite entre (t, H) et (0, 0) ne coupe aucun bâtiment.
# 
# Modélisation :
# - Pour chaque bâtiment situé en x_i (0 < x_i < t) avec hauteur h_i,
#   la hauteur de la vue à x_i est donnée par l'équation de la droite entre (t,H) et (0,0):
#   y = H * (t - x) / t
# - Pour que le bâtiment ne cache pas la vue, il faut h_i < y (le bâtiment doit être strictement en-dessous de la ligne de vue),
#   ou h_i <= y si l'intersection en hauteur sur le sommet est acceptée, mais ici on exclue les intersections sauf au sommet de la tour.
# - Comme la hauteur du donjon en 0 est 0, la droite passe par (0,0).
# 
# Calcul de H minimal :
# - Pour chaque bâtiment, on a : h_i < H * (t - x_i)/t  <=>  H > h_i * t / (t - x_i)
# - Le minimum H doit satisfaire toutes ces inégalité, donc :
#   H >= max_i (h_i * t / (t - x_i))
# 
# Remarque : on doit prendre la plus grande valeur de h_i * t/(t - x_i) parmi tous les bâtiments pour que la vue ne soit pas obstruée.
# 
# Implémentation :
# - Lire N, t
# - Pour chaque bâtiment, calculer h_i * t / (t - x_i)
# - Prendre le maximum de ces valeurs
# - Afficher le résultat avec une précision suffisante (double précision par défaut)
# 
# Cette méthode est efficace en O(N), suffisante pour N ≤ 1000.


N, t = map(int, input().split())

max_height = 0.0  # stockera la hauteur minimale requise

for _ in range(N):
    x_i, h_i = map(int, input().split())
    # Calcul de la hauteur limite pour cette building
    # attention division par (t - x_i), t > x_i toujours selon les contraintes
    needed_height = h_i * t / (t - x_i)
    if needed_height > max_height:
        max_height = needed_height

# Affichage du résultat, valeur minimale de la hauteur pour la tour
print(max_height)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Solution' (ID: 20858)
  → Token d'amorce (pas de prédiction)

Token 2: ' au' (ID: 2791)
  → Token d'amorce (pas de prédiction)

Token 3: ' problème' (ID: 35630)
  Prédit: ' problème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problème' → logprob: -0.5361919403076172
    2. '#' → logprob: -1.9111919403076172
    3. 'x' → logprob: -2.161191940307617
    4. 'pro' → logprob: -3.286191940307617
    5. 'r' → logprob: -3.786191940307617
    6. ' #' → logprob: -3.911191940307617
    7. ' code' → logprob: -4.286191940307617
    8. ' probleme' → logprob: -4.661191940307617
    9. '-pro' → logprob: -5.036191940307617
    10. '```' → logprob: -5.036191940307617

Token 4: ' "' (ID: 392)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027428077533841133
    2. ' :' → logprob: -3.902428150177002
    3. '```' → logprob: -5.652428150177002
    4. '\n' → logprob: -6.402428150177002
    5. '\' → logprob: -7.777428150177002
    6. '#' → logprob: -8.027427673339844
    7. '.' → logprob: -8.027427673339844
    8. 's' → logprob: -8.402427673339844
    9. ':
' → logprob: -9.777427673339844
    10. 'def' → logprob: -10.027427673339844

Token 5: 'B' (ID: 33)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -1.392661690711975
    2. ':' → logprob: -1.517661690711975
    3. ' "' → logprob: -1.767661690711975
    4. ' des' → logprob: -2.6426615715026855
    5. ' du' → logprob: -3.0176615715026855
    6. ' de' → logprob: -3.0176615715026855
    7. '"' → logprob: -3.1426615715026855
    8. ' ' → logprob: -3.7676615715026855
    9. ' ":' → logprob: -4.1426615715026855
    10. ' #' → logprob: -4.3926615715026855

Token 6: 'ange' (ID: 1052)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.4299516677856445
    2. '"' → logprob: -1.5549516677856445
    3. 'e' → logprob: -1.6799516677856445
    4. 'A' → logprob: -2.8049516677856445
    5. 'o' → logprob: -3.8049516677856445
    6. 'a' → logprob: -3.8049516677856445
    7. '#' → logprob: -3.9299516677856445
    8. 'O' → logprob: -4.1799516677856445
    9. 'R' → logprob: -4.1799516677856445
    10. ')"' → logprob: -4.3049516677856445

Token 7: ' Hills' (ID: 30270)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5551575422286987
    2. 'ur' → logprob: -1.8051575422286987
    3. '"' → logprob: -2.3051576614379883
    4. 's' → logprob: -3.0551576614379883
    5. ' "' → logprob: -4.555157661437988
    6. '```' → logprob: -4.555157661437988
    7. 'm' → logprob: -5.055157661437988
    8. 'l' → logprob: -5.180157661437988
    9. '")' → logprob: -5.180157661437988
    10. ' ")' → logprob: -5.367657661437988

Token 8: ' Tower' (ID: 37994)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6583382487297058
    2. '#' → logprob: -1.7833383083343506
    3. ':' → logprob: -1.7833383083343506
    4. '\n' → logprob: -2.9083383083343506
    5. '"' → logprob: -3.4083383083343506
    6. '"""' → logprob: -4.0333380699157715
    7. ' :' → logprob: -5.0333380699157715
    8. '\' → logprob: -5.5333380699157715
    9. 's' → logprob: -5.6583380699157715
    10. '``' → logprob: -5.7833380699157715

Token 9: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.21538209915161133
    2. 's' → logprob: -2.9653820991516113
    3. '#' → logprob: -3.3403820991516113
    4. '\n' → logprob: -3.4653820991516113
    5. '```' → logprob: -3.4653820991516113
    6. '"""' → logprob: -4.340382099151611
    7. ':' → logprob: -4.715382099151611
    8. '"#' → logprob: -5.215382099151611
    9. '\' → logprob: -5.465382099151611
    10. 'def' → logprob: -6.215382099151611

Token 10: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6973392963409424
    2. 's' → logprob: -1.0723392963409424
    3. 'def' → logprob: -2.4473392963409424
    4. '#' → logprob: -3.3223392963409424
    5. 'n' → logprob: -4.822339057922363
    6. '.' → logprob: -4.947339057922363
    7. '```' → logprob: -4.947339057922363
    8. '_' → logprob: -5.697339057922363
    9. '\n' → logprob: -5.697339057922363
    10. ' :' → logprob: -6.197339057922363

Token 11: ' L' (ID: 451)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.011917189694941044
    2. ' #' → logprob: -5.1369171142578125
    3. ' ```' → logprob: -6.6369171142578125
    4. ' 
' → logprob: -6.7619171142578125
    5. '#' → logprob: -7.1369171142578125
    6. ' \' → logprob: -7.6369171142578125
    7. ' 

' → logprob: -7.7619171142578125
    8. 'def' → logprob: -8.136917114257812
    9. ' def' → logprob: -8.136917114257812
    10. '\n' → logprob: -8.261917114257812

Token 12: ''objectif' (ID: 194227)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8205111622810364
    2. 'a' → logprob: -0.9455111622810364
    3. '#' → logprob: -2.1955111026763916
    4. 'i' → logprob: -3.1955111026763916
    5. ''' → logprob: -4.695511341094971
    6. ''#' → logprob: -6.570511341094971
    7. ''i' → logprob: -7.070511341094971
    8. ''é' → logprob: -7.195511341094971
    9. '```' → logprob: -7.320511341094971
    10. 'u' → logprob: -7.320511341094971

Token 13: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.11507418006658554
    2. ' ' → logprob: -3.1150741577148438
    3. 'est' → logprob: -3.3650741577148438
    4. ':' → logprob: -4.490074157714844
    5. ' :' → logprob: -4.740074157714844
    6. ' ' → logprob: -5.615074157714844
    7. ' de' → logprob: -5.740074157714844
    8. 's' → logprob: -6.490074157714844
    9. ' is' → logprob: -7.740074157714844
    10. '#' → logprob: -8.365074157714844

Token 14: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.19662374258041382
    2. ' d' → logprob: -1.9466238021850586
    3. 'de' → logprob: -3.5716238021850586
    4. 'd' → logprob: -5.321623802185059
    5. ' ' → logprob: -6.321623802185059
    6. '  ' → logprob: -7.446623802185059
    7. '#' → logprob: -9.446623802185059
    8. ' to' → logprob: -9.946623802185059
    9. ' ' → logprob: -10.071623802185059
    10. '   ' → logprob: -10.321623802185059

Token 15: ' déterminer' (ID: 122024)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.6968351602554321
    2. ' résoudre' → logprob: -1.6968351602554321
    3. 'tr' → logprob: -2.0718350410461426
    4. ' trouver' → logprob: -3.1968350410461426
    5. ' rés' → logprob: -3.8218350410461426
    6. 'r' → logprob: -3.8218350410461426
    7. '#' → logprob: -4.071835041046143
    8. ' calcul' → logprob: -4.196835041046143
    9. 'res' → logprob: -4.321835041046143
    10. ' déterminer' → logprob: -4.571835041046143

Token 16: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.540287971496582
    2. ' le' → logprob: -1.540287971496582
    3. ' ' → logprob: -2.040287971496582
    4. ' l' → logprob: -2.915287971496582
    5. 'le' → logprob: -5.415287971496582
    6. ' si' → logprob: -5.540287971496582
    7. ' ' → logprob: -5.540287971496582
    8. ' les' → logprob: -6.165287971496582
    9. ' the' → logprob: -7.040287971496582
    10. 'l' → logprob: -7.540287971496582

Token 17: ' hauteur' (ID: 72987)
  Prédit: ' hauteur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hauteur' → logprob: -0.056815005838871
    2. 'ha' → logprob: -3.6818149089813232
    3. ' plus' → logprob: -5.056815147399902
    4. ' ' → logprob: -5.306815147399902
    5. 's' → logprob: -6.619315147399902
    6. ' meilleure' → logprob: -6.681815147399902
    7. ' position' → logprob: -6.869315147399902
    8. ' distance' → logprob: -6.869315147399902
    9. '   ' → logprob: -7.056815147399902
    10. 'plus' → logprob: -7.056815147399902

Token 18: ' minimale' (ID: 143217)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22849580645561218
    2. ' d' → logprob: -2.2284958362579346
    3. '_' → logprob: -3.2284958362579346
    4. ' de' → logprob: -3.4784958362579346
    5. ' maximale' → logprob: -4.7284955978393555
    6. 's' → logprob: -4.8534955978393555
    7. ' du' → logprob: -6.1034955978393555
    8. 'd' → logprob: -6.4784955978393555
    9. '  ' → logprob: -7.8534955978393555
    10. ' #' → logprob: -7.9784955978393555

Token 19: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.794707715511322
    2. ' ' → logprob: -1.2947077751159668
    3. ' de' → logprob: -1.9197077751159668
    4. ' du' → logprob: -2.544707775115967
    5. ' à' → logprob: -4.544707775115967
    6. ' nécessaire' → logprob: -4.669707775115967
    7. ' minimale' → logprob: -5.044707775115967
    8. ' pour' → logprob: -5.544707775115967
    9. ' optimale' → logprob: -5.669707775115967
    10. ' possible' → logprob: -6.169707775115967

Token 20: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.051336076110601425
    2. ' l' → logprob: -3.5513360500335693
    3. ' ' → logprob: -4.551336288452148
    4. ' tour' → logprob: -6.176336288452148
    5. 's' → logprob: -6.676336288452148
    6. ' ' → logprob: -6.801336288452148
    7. ' tours' → logprob: -6.801336288452148
    8. 'la' → logprob: -6.926336288452148
    9. '#' → logprob: -7.301336288452148
    10. ' a' → logprob: -7.426336288452148

Token 21: ' tour' (ID: 6970)
  Prédit: 'tour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tour' → logprob: -0.5046817064285278
    2. ' tour' → logprob: -1.1296817064285278
    3. '#' → logprob: -2.8796815872192383
    4. ' tours' → logprob: -6.192181587219238
    5. 'pile' → logprob: -6.192181587219238
    6. ' #' → logprob: -6.879681587219238
    7. 'tower' → logprob: -7.004681587219238
    8. 't' → logprob: -7.004681587219238
    9. 'tor' → logprob: -7.192181587219238
    10. 'gr' → logprob: -7.379681587219238

Token 22: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20437000691890717
    2. '\' → logprob: -3.3293700218200684
    3. 's' → logprob: -3.4543700218200684
    4. '
' → logprob: -3.8293700218200684
    5. ':' → logprob: -4.204370021820068
    6. ' 
' → logprob: -4.454370021820068
    7. ',' → logprob: -4.704370021820068
    8. '_' → logprob: -5.079370021820068
    9. ' :' → logprob: -5.204370021820068
    10. '.' → logprob: -5.204370021820068

Token 23: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.23639482259750366
    2. ' accueillir' → logprob: -2.6113948822021484
    3. ' pouvoir' → logprob: -3.3613948822021484
    4. 'que' → logprob: -4.236394882202148
    5. '#' → logprob: -4.486394882202148
    6. ' satisfaire' → logprob: -4.486394882202148
    7. ' ' → logprob: -4.611394882202148
    8. ' stock' → logprob: -4.986394882202148
    9. ' chaque' → logprob: -5.236394882202148
    10. '_' → logprob: -5.236394882202148

Token 24: ' la' (ID: 557)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.4158813953399658
    2. ' chaque' → logprob: -1.4158813953399658
    3. ' garantir' → logprob: -4.165881156921387
    4. 't' → logprob: -4.290881156921387
    5. 'tout' → logprob: -4.290881156921387
    6. 'que' → logprob: -4.415881156921387
    7. ' toutes' → logprob: -4.790881156921387
    8. '#' → logprob: -5.540881156921387
    9. ' ' → logprob: -5.665881156921387
    10. ' accueillir' → logprob: -5.790881156921387

Token 25: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3938796818256378
    2. ' ville' → logprob: -3.1438796520233154
    3. 's' → logprob: -3.3938796520233154
    4. ' montagne' → logprob: -3.8938796520233154
    5. ' hauteur' → logprob: -4.1438798904418945
    6. ' construction' → logprob: -4.2688798904418945
    7. ' rivière' → logprob: -4.3313798904418945
    8. ' personne' → logprob: -4.6438798904418945
    9. ' n' → logprob: -4.8313798904418945
    10. ' chaîne' → logprob: -4.8313798904418945

Token 26: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7810318470001221
    2. ' d' → logprob: -1.031031847000122
    3. ' ' → logprob: -2.781031847000122
    4. 's' → logprob: -3.031031847000122
    5. ' suivante' → logprob: -3.156031847000122
    6. ' des' → logprob: -4.781031608581543
    7. ' s' → logprob: -5.656031608581543
    8. ' continue' → logprob: -5.656031608581543
    9. 'd' → logprob: -5.906031608581543
    10. ' soit' → logprob: -6.531031608581543

Token 27: ' vue' (ID: 30721)
  Prédit: 'vue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vue' → logprob: -0.06262203305959702
    2. ' vue' → logprob: -3.1876220703125
    3. 'd' → logprob: -5.9376220703125
    4. ' code' → logprob: -5.9376220703125
    5. 'code' → logprob: -6.4376220703125
    6. 'vision' → logprob: -6.4376220703125
    7. 'vis' → logprob: -7.0626220703125
    8. 's' → logprob: -7.1876220703125
    9. ' base' → logprob: -7.1876220703125
    10. ' sight' → logprob: -7.1876220703125

Token 28: ' depuis' (ID: 16277)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4458934962749481
    2. ' soit' → logprob: -1.5708935260772705
    3. ' entre' → logprob: -2.0708935260772705
    4. ' puisse' → logprob: -4.945893287658691
    5. ' passe' → logprob: -6.195893287658691
    6. ' continue' → logprob: -6.445893287658691
    7. 's' → logprob: -6.445893287658691
    8. ' reste' → logprob: -6.695893287658691
    9. ' ' → logprob: -6.695893287658691
    10. ' ne' → logprob: -6.820893287658691

Token 29: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5370833873748779
    2. ' la' → logprob: -1.287083387374878
    3. ' l' → logprob: -2.662083387374878
    4. 'l' → logprob: -3.412083387374878
    5. '#' → logprob: -4.162083625793457
    6. ' chaque' → logprob: -5.287083625793457
    7. ' ' → logprob: -5.662083625793457
    8. ' n' → logprob: -5.787083625793457
    9. 'la' → logprob: -6.037083625793457
    10. ' #' → logprob: -6.037083625793457

Token 30: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.008770561777055264
    2. ' point' → logprob: -5.63377046585083
    3. '#' → logprob: -6.63377046585083
    4. ' som' → logprob: -6.88377046585083
    5. ' #' → logprob: -7.00877046585083
    6. ' ' → logprob: -7.88377046585083
    7. 'som' → logprob: -8.383770942687988
    8. ' bâtiment' → logprob: -9.071270942687988
    9. 's' → logprob: -9.321270942687988
    10. ' prochain' → logprob: -9.446270942687988

Token 31: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.08942314237356186
    2. ' jusqu' → logprob: -3.714423179626465
    3. 'de' → logprob: -4.089423179626465
    4. '#' → logprob: -4.339423179626465
    5. ' soit' → logprob: -4.964423179626465
    6. ' du' → logprob: -5.214423179626465
    7. ' d' → logprob: -5.464423179626465
    8. ' ' → logprob: -5.714423179626465
    9. ' #' → logprob: -5.714423179626465
    10. ' vers' → logprob: -5.964423179626465

Token 32: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.008282046765089035
    2. 'la' → logprob: -5.25828218460083
    3. ' l' → logprob: -6.75828218460083
    4. ' ' → logprob: -6.88328218460083
    5. 'l' → logprob: -7.75828218460083
    6. ' ' → logprob: -9.133281707763672
    7. 'a' → logprob: -9.508281707763672
    8. '#' → logprob: -9.633281707763672
    9. ' #' → logprob: -10.133281707763672
    10. 't' → logprob: -10.758281707763672

Token 33: ' tour' (ID: 6970)
  Prédit: ' tour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tour' → logprob: -0.4480139911174774
    2. 'tour' → logprob: -1.3230140209197998
    3. ' col' → logprob: -3.0730140209198
    4. ' montagne' → logprob: -4.760513782501221
    5. ' plus' → logprob: -5.135513782501221
    6. 'col' → logprob: -5.260513782501221
    7. '#' → logprob: -6.198013782501221
    8. 't' → logprob: -6.198013782501221
    9. ' dernière' → logprob: -6.510513782501221
    10. 'prem' → logprob: -6.573013782501221

Token 34: ' jusqu' (ID: 21961)
  Prédit: ' soit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.29035764932632446
    2. ' ' → logprob: -1.7903575897216797
    3. ' puisse' → logprob: -3.4153575897216797
    4. ' jusqu' → logprob: -3.9153575897216797
    5. ' vers' → logprob: -4.16535758972168
    6. ' continue' → logprob: -5.41535758972168
    7. ' so' → logprob: -6.16535758972168
    8. ' à' → logprob: -6.66535758972168
    9. ' ne' → logprob: -6.79035758972168
    10. ' reste' → logprob: -6.91535758972168

Token 35: ''au' (ID: 63689)
  Prédit: ''à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.2840198278427124
    2. ''au' → logprob: -1.6590198278427124
    3. 'à' → logprob: -3.659019947052002
    4. 'au' → logprob: -4.034019947052002
    5. ''' → logprob: -4.909019947052002
    6. '’à' → logprob: -5.534019947052002
    7. '’au' → logprob: -6.909019947052002
    8. ''a' → logprob: -8.159019470214844
    9. 'a' → logprob: -8.409019470214844
    10. '#' → logprob: -8.534019470214844

Token 36: ' bas' (ID: 3222)
  Prédit: ' sommet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.10072191059589386
    2. ' point' → logprob: -2.725721836090088
    3. 's' → logprob: -5.100721836090088
    4. 'point' → logprob: -5.663221836090088
    5. 'som' → logprob: -5.725721836090088
    6. ' prochain' → logprob: -6.163221836090088
    7. ' bâtiment' → logprob: -6.350721836090088
    8. ' pied' → logprob: -6.475721836090088
    9. ' pic' → logprob: -6.475721836090088
    10. ' plus' → logprob: -6.725721836090088

Token 37: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.17908208072185516
    2. 'de' → logprob: -2.304082155227661
    3. '#' → logprob: -3.929082155227661
    4. ' du' → logprob: -4.179081916809082
    5. ' d' → logprob: -4.929081916809082
    6. 'd' → logprob: -4.929081916809082
    7. 'du' → logprob: -5.554081916809082
    8. '-' → logprob: -5.679081916809082
    9. ' #' → logprob: -6.179081916809082
    10. ' des' → logprob: -6.554081916809082

Token 38: ' don' (ID: 1700)
  Prédit: 'vall'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vall' → logprob: -1.795662522315979
    2. ' sommet' → logprob: -1.920662522315979
    3. 'val' → logprob: -2.2956624031066895
    4. 'c' → logprob: -2.4206624031066895
    5. ' col' → logprob: -2.6706624031066895
    6. ' la' → logprob: -3.0456624031066895
    7. ' vall' → logprob: -3.1081624031066895
    8. 'la' → logprob: -3.7331624031066895
    9. ' bâtiment' → logprob: -3.7331624031066895
    10. 'col' → logprob: -3.8581624031066895

Token 39: 'jon' (ID: 11016)
  Prédit: 'jon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jon' → logprob: -0.011552656069397926
    2. 'j' → logprob: -4.511552810668945
    3. '#' → logprob: -7.886552810668945
    4. 'g' → logprob: -10.136552810668945
    5. '```' → logprob: -10.261552810668945
    6. 'jons' → logprob: -11.011552810668945
    7. ' jon' → logprob: -11.761552810668945
    8. 'ge' → logprob: -12.261552810668945
    9. '``' → logprob: -12.511552810668945
    10. 'e' → logprob: -12.636552810668945

Token 40: ' (' (ID: 350)
  Prédit: ' soit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.9471360445022583
    2. ' ' → logprob: -1.0721360445022583
    3. '.' → logprob: -1.8221360445022583
    4. ',' → logprob: -3.3221359252929688
    5. ' puisse' → logprob: -3.9471359252929688
    6. ' continue' → logprob: -4.822135925292969
    7. ' ,' → logprob: -5.447135925292969
    8. '#' → logprob: -5.572135925292969
    9. 's' → logprob: -5.572135925292969
    10. ''' → logprob: -5.947135925292969

Token 41: 'au' (ID: 753)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.6660987734794617
    2. ')' → logprob: -1.1660988330841064
    3. ' ' → logprob: -3.0410988330841064
    4. ' la' → logprob: -3.6660988330841064
    5. 'l' → logprob: -3.6660988330841064
    6. ''' → logprob: -4.166098594665527
    7. ' l' → logprob: -4.416098594665527
    8. 'a' → logprob: -4.916098594665527
    9. '"' → logprob: -5.166098594665527
    10. ' ' → logprob: -5.666098594665527

Token 42: ' sol' (ID: 1887)
  Prédit: ' sommet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.7026669979095459
    2. ' pied' → logprob: -1.077666997909546
    3. 'niveau' → logprob: -3.827666997909546
    4. 'd' → logprob: -4.077667236328125
    5. ' ' → logprob: -4.327667236328125
    6. 'som' → logprob: -4.640167236328125
    7. '-' → logprob: -4.827667236328125
    8. ' niveau' → logprob: -4.890167236328125
    9. '#' → logprob: -5.015167236328125
    10. ' pieds' → logprob: -5.327667236328125

Token 43: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09989064186811447
    2. ' )' → logprob: -2.59989070892334
    3. '"' → logprob: -4.84989070892334
    4. ',' → logprob: -5.84989070892334
    5. 'e' → logprob: -6.47489070892334
    6. ' soit' → logprob: -6.72489070892334
    7. ')"' → logprob: -7.09989070892334
    8. ' de' → logprob: -7.47489070892334
    9. '#' → logprob: -7.72489070892334
    10. '.' → logprob: -7.84989070892334

Token 44: ' position' (ID: 4010)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7745088934898376
    2. ' )' → logprob: -0.8995088934898376
    3. ' ' → logprob: -3.2745089530944824
    4. ' à' → logprob: -4.149508953094482
    5. ' au' → logprob: -4.399508953094482
    6. ' soit' → logprob: -5.149508953094482
    7. ' sur' → logprob: -5.274508953094482
    8. ' '' → logprob: -5.524508953094482
    9. ' en' → logprob: -5.524508953094482
    10. ' c' → logprob: -5.524508953094482

Token 45: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.001560091972351
    2. ' ' → logprob: -1.251560091972351
    3. ' (' → logprob: -1.876560091972351
    4. '(' → logprob: -2.7515602111816406
    5. ' )' → logprob: -3.1265602111816406
    6. ')' → logprob: -3.2515602111816406
    7. ' x' → logprob: -4.376560211181641
    8. 'x' → logprob: -4.626560211181641
    9. ' ,' → logprob: -5.501560211181641
    10. '1' → logprob: -5.751560211181641

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.34053662419319153
    2. '(' → logprob: -1.7155365943908691
    3. ' (' → logprob: -3.340536594390869
    4. ' ' → logprob: -3.465536594390869
    5. 'x' → logprob: -3.840536594390869
    6. '=' → logprob: -5.215536594390869
    7. ')' → logprob: -5.590536594390869
    8. '1' → logprob: -6.215536594390869
    9. ':' → logprob: -6.715536594390869
    10. ' x' → logprob: -6.840536594390869

Token 47: ' hauteur' (ID: 72987)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13237109780311584
    2. ' )' → logprob: -2.132371187210083
    3. '")' → logprob: -6.132370948791504
    4. '0' → logprob: -7.507370948791504
    5. '"' → logprob: -7.882370948791504
    6. '')' → logprob: -8.007370948791504
    7. ' ")' → logprob: -8.382370948791504
    8. ',' → logprob: -8.507370948791504
    9. ')"' → logprob: -8.632370948791504
    10. '.' → logprob: -8.632370948791504

Token 48: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18221387267112732
    2. ' )' → logprob: -2.18221378326416
    3. '0' → logprob: -4.18221378326416
    4. ' ' → logprob: -4.93221378326416
    5. '")' → logprob: -5.18221378326416
    6. ' de' → logprob: -5.30721378326416
    7. '1' → logprob: -5.80721378326416
    8. '.' → logprob: -5.93221378326416
    9. '')' → logprob: -6.30721378326416
    10. '"' → logprob: -6.30721378326416

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7068847417831421
    2. ')' → logprob: -0.8318847417831421
    3. ' )' → logprob: -3.3318848609924316
    4. '1' → logprob: -4.331884860992432
    5. ' ' → logprob: -4.581884860992432
    6. '=' → logprob: -6.456884860992432
    7. 'e' → logprob: -6.456884860992432
    8. '.' → logprob: -6.706884860992432
    9. '2' → logprob: -6.956884860992432
    10. ':' → logprob: -7.206884860992432

Token 50: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18755577504634857
    2. ' )' → logprob: -2.1875557899475098
    3. ')"' → logprob: -3.1875557899475098
    4. '"' → logprob: -4.93755578994751
    5. '.' → logprob: -5.43755578994751
    6. ')."' → logprob: -7.18755578994751
    7. 'e' → logprob: -7.31255578994751
    8. ' ")' → logprob: -7.43755578994751
    9. ').' → logprob: -7.56255578994751
    10. ' "' → logprob: -7.81255578994751

Token 51: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5245994925498962
    2. ':' → logprob: -1.899599552154541
    3. ',' → logprob: -2.399599552154541
    4. '\' → logprob: -3.149599552154541
    5. '.' → logprob: -3.274599552154541
    6. '#' → logprob: -3.899599552154541
    7. ' :' → logprob: -4.399599552154541
    8. '```' → logprob: -4.774599552154541
    9. '_' → logprob: -5.149599552154541
    10. ''' → logprob: -5.399599552154541

Token 52: ' ne' (ID: 453)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.047443095594644547
    2. 'd' → logprob: -4.67244291305542
    3. ':' → logprob: -4.92244291305542
    4. 'def' → logprob: -5.42244291305542
    5. '#' → logprob: -5.67244291305542
    6. '_' → logprob: -5.79744291305542
    7. ' :' → logprob: -5.92244291305542
    8. '\' → logprob: -6.42244291305542
    9. ' 
' → logprob: -6.54744291305542
    10. ' d' → logprob: -6.54744291305542

Token 53: ' soit' (ID: 17293)
  Prédit: ' soit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.3487577736377716
    2. ' puisse' → logprob: -1.9737577438354492
    3. ' ' → logprob: -2.848757743835449
    4. ' so' → logprob: -3.848757743835449
    5. ' pas' → logprob: -4.223757743835449
    6. 's' → logprob: -4.723757743835449
    7. ' s' → logprob: -5.098757743835449
    8. ' ' → logprob: -5.223757743835449
    9. ' dépasse' → logprob: -5.223757743835449
    10. ' passe' → logprob: -5.348757743835449

Token 54: ' ob' (ID: 1067)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.060969315469264984
    2. 'pas' → logprob: -3.310969352722168
    3. ' jamais' → logprob: -4.560969352722168
    4. ' plus' → logprob: -6.310969352722168
    5. 's' → logprob: -6.435969352722168
    6. ' toujours' → logprob: -6.560969352722168
    7. 't' → logprob: -6.685969352722168
    8. ' respect' → logprob: -6.810969352722168
    9. ' visible' → logprob: -7.310969352722168
    10. 'maint' → logprob: -7.810969352722168

Token 55: 'stru' (ID: 3409)
  Prédit: 'stru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stru' → logprob: -0.062166206538677216
    2. 'struct' → logprob: -3.562166213989258
    3. 'struction' → logprob: -3.812166213989258
    4. 'str' → logprob: -4.687166213989258
    5. 'structions' → logprob: -8.062166213989258
    6. 'stacle' → logprob: -9.312166213989258
    7. 'sc' → logprob: -10.687166213989258
    8. 'st' → logprob: -10.687166213989258
    9. 's' → logprob: -10.812166213989258
    10. 'stur' → logprob: -10.937166213989258

Token 56: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.6350337266921997
    2. 'ite' → logprob: -1.5100337266921997
    3. 'e' → logprob: -2.26003360748291
    4. 'é' → logprob: -3.01003360748291
    5. 'ct' → logprob: -3.26003360748291
    6. 'te' → logprob: -3.38503360748291
    7. 'ction' → logprob: -5.38503360748291
    8. 'it' → logprob: -5.88503360748291
    9. 'cte' → logprob: -6.01003360748291
    10. 'rée' → logprob: -6.38503360748291

Token 57: ' par' (ID: 686)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6017770767211914
    2. ' par' → logprob: -2.1017770767211914
    3. '.' → logprob: -2.2267770767211914
    4. ',' → logprob: -2.6017770767211914
    5. ':' → logprob: -3.2267770767211914
    6. ' by' → logprob: -3.3517770767211914
    7. '#' → logprob: -4.101777076721191
    8. ' ' → logprob: -4.476777076721191
    9. ' :' → logprob: -4.726777076721191
    10. ' ,' → logprob: -4.851777076721191

Token 58: ' aucun' (ID: 41678)
  Prédit: ' aucun'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aucun' → logprob: -0.37260901927948
    2. ' aucune' → logprob: -1.87260901927948
    3. ' les' → logprob: -2.6226091384887695
    4. 'auc' → logprob: -3.3726091384887695
    5. ' un' → logprob: -4.2476091384887695
    6. 'un' → logprob: -5.1226091384887695
    7. ' une' → logprob: -5.2476091384887695
    8. 'les' → logprob: -5.4976091384887695
    9. ' des' → logprob: -5.7476091384887695
    10. ' ' → logprob: -5.8726091384887695

Token 59: ' bâtiment' (ID: 92976)
  Prédit: ' obstacle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' obstacle' → logprob: -1.1812385320663452
    2. ' point' → logprob: -1.5562385320663452
    3. ' sommet' → logprob: -1.6812385320663452
    4. ' des' → logprob: -2.1812386512756348
    5. ' élément' → logprob: -2.4312386512756348
    6. '#' → logprob: -3.6812386512756348
    7. 'élé' → logprob: -3.9312386512756348
    8. ' relief' → logprob: -5.056238651275635
    9. 'point' → logprob: -5.431238651275635
    10. 'é' → logprob: -5.556238651275635

Token 60: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9287320375442505
    2. '#' → logprob: -1.9287320375442505
    3. '_' → logprob: -2.303731918334961
    4. ' ' → logprob: -2.428731918334961
    5. 'def' → logprob: -2.803731918334961
    6. ',' → logprob: -2.928731918334961
    7. ' :' → logprob: -3.178731918334961
    8. '\' → logprob: -3.428731918334961
    9. '```' → logprob: -4.303731918334961
    10. ' 
' → logprob: -4.553731918334961

Token 61: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2816848754882812
    2. ' ' → logprob: -1.7816848754882812
    3. '\' → logprob: -2.0316848754882812
    4. 'def' → logprob: -2.2816848754882812
    5. '```' → logprob: -2.9066848754882812
    6. ':' → logprob: -2.9066848754882812
    7. 'd' → logprob: -3.5316848754882812
    8. ',' → logprob: -3.5316848754882812
    9. ' 

' → logprob: -3.5316848754882812
    10. '.' → logprob: -3.7816848754882812

Token 62: ' Appro' (ID: 24145)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0397957563400269
    2. ' ' → logprob: -1.7897957563400269
    3. 'def' → logprob: -1.9147957563400269
    4. 'i' → logprob: -2.1647958755493164
    5. '#' → logprob: -2.2897958755493164
    6. ' #' → logprob: -3.4147958755493164
    7. 'import' → logprob: -4.164795875549316
    8. ' def' → logprob: -4.289795875549316
    9. 'a' → logprob: -4.914795875549316
    10. 'n' → logprob: -4.914795875549316

Token 63: 'che' (ID: 926)
  Prédit: 'che'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.7646811604499817
    2. 'x' → logprob: -0.8896811604499817
    3. 'xi' → logprob: -3.264681100845337
    4. 'ch' → logprob: -3.639681100845337
    5. 'ches' → logprob: -3.639681100845337
    6. '#' → logprob: -4.139681339263916
    7. 'xim' → logprob: -4.389681339263916
    8. 'visionnement' → logprob: -6.764681339263916
    9. 'fond' → logprob: -6.764681339263916
    10. 'xima' → logprob: -7.514681339263916

Token 64: ' :
' (ID: 10039)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.022916048765182495
    2. ':' → logprob: -4.397915840148926
    3. ' ' → logprob: -4.647915840148926
    4. ' ' → logprob: -7.772915840148926
    5. ' def' → logprob: -9.522915840148926
    6. ' =' → logprob: -9.522915840148926
    7. ' #' → logprob: -10.397915840148926
    8. ' :
' → logprob: -10.397915840148926
    9. 'def' → logprob: -10.522915840148926
    10. 's' → logprob: -10.897915840148926

Token 65: '#' (ID: 2)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.9961945414543152
    2. 'def' → logprob: -0.9961945414543152
    3. '#' → logprob: -2.12119460105896
    4. ' #' → logprob: -2.87119460105896
    5. ' on' → logprob: -3.74619460105896
    6. ' On' → logprob: -3.87119460105896
    7. 'On' → logprob: -5.121194362640381
    8. ' 
' → logprob: -5.871194362640381
    9. ' ' → logprob: -6.246194362640381
    10. ' É' → logprob: -6.371194362640381

Token 66: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7115032076835632
    2. 'def' → logprob: -1.961503267288208
    3. ' #' → logprob: -2.211503267288208
    4. ' def' → logprob: -2.211503267288208
    5. ' On' → logprob: -3.336503267288208
    6. ' on' → logprob: -3.961503267288208
    7. ' Calcul' → logprob: -4.086503028869629
    8. ' calcul' → logprob: -4.336503028869629
    9. 'from' → logprob: -4.961503028869629
    10. 'On' → logprob: -5.336503028869629

Token 67: ' Le' (ID: 2018)
  Prédit: ' Calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Calcul' → logprob: -0.2702888250350952
    2. ' On' → logprob: -2.1452889442443848
    3. ' calcul' → logprob: -3.3952889442443848
    4. ' Parc' → logprob: -4.895288944244385
    5. ' Il' → logprob: -5.270288944244385
    6. ' on' → logprob: -5.520288944244385
    7. ' def' → logprob: -5.770288944244385
    8. ' Sim' → logprob: -5.770288944244385
    9. ' Trier' → logprob: -5.895288944244385
    10. 'Calcul' → logprob: -5.895288944244385

Token 68: ' don' (ID: 1700)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.5391907691955566
    2. ' problème' → logprob: -1.2891907691955566
    3. ' plus' → logprob: -2.9141907691955566
    4. 'pro' → logprob: -3.9141907691955566
    5. ' probl' → logprob: -4.664190769195557
    6. ' but' → logprob: -4.914190769195557
    7. ' principe' → logprob: -5.164190769195557
    8. ' programme' → logprob: -5.289190769195557
    9. ' ' → logprob: -5.664190769195557
    10. 's' → logprob: -5.664190769195557

Token 69: 'jon' (ID: 11016)
  Prédit: 'jon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jon' → logprob: -0.14048151671886444
    2. 'j' → logprob: -2.390481472015381
    3. 'g' → logprob: -3.515481472015381
    4. '#' → logprob: -6.140481472015381
    5. 'jons' → logprob: -6.765481472015381
    6. 'jug' → logprob: -7.140481472015381
    7. 'jn' → logprob: -7.140481472015381
    8. 'ge' → logprob: -7.265481472015381
    9. 'gn' → logprob: -7.765481472015381
    10. '   ' → logprob: -7.890481472015381

Token 70: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.4748850166797638
    2. ' ' → logprob: -2.0998849868774414
    3. ' se' → logprob: -2.0998849868774414
    4. ',' → logprob: -3.7248849868774414
    5. ' étant' → logprob: -4.224884986877441
    6. 's' → logprob: -4.349884986877441
    7. ':' → logprob: -4.724884986877441
    8. ' et' → logprob: -4.724884986877441
    9. ' a' → logprob: -4.974884986877441
    10. ' :' → logprob: -5.349884986877441

Token 71: ' à' (ID: 1221)
  Prédit: ' représent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' représent' → logprob: -0.5127931237220764
    2. ' constitué' → logprob: -1.7627930641174316
    3. ' mod' → logprob: -2.8877930641174316
    4. ' composé' → logprob: -3.2627930641174316
    5. ' situé' → logprob: -3.2627930641174316
    6. ' une' → logprob: -3.3877930641174316
    7. ' un' → logprob: -4.262793064117432
    8. ' ' → logprob: -4.512793064117432
    9. ' placé' → logprob: -4.637793064117432
    10. ' décrit' → logprob: -5.762793064117432

Token 72: ' la' (ID: 557)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.965334415435791
    2. ' la' → logprob: -1.590334415435791
    3. ' l' → logprob: -1.715334415435791
    4. 'position' → logprob: -2.340334415435791
    5. ' ' → logprob: -3.090334415435791
    6. 'l' → logprob: -3.465334415435791
    7. '0' → logprob: -3.715334415435791
    8. 'la' → logprob: -4.715334415435791
    9. ' une' → logprob: -5.215334415435791
    10. ' droite' → logprob: -5.215334415435791

Token 73: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.48680561780929565
    2. ' position' → logprob: -0.9868056178092957
    3. '0' → logprob: -5.986805438995361
    4. ' droite' → logprob: -6.236805438995361
    5. ' gauche' → logprob: -6.236805438995361
    6. ' ' → logprob: -6.611805438995361
    7. 'dro' → logprob: -6.611805438995361
    8. '	position' → logprob: -7.111805438995361
    9. 'pos' → logprob: -7.361805438995361
    10. '_position' → logprob: -8.54930591583252

Token 74: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31347501277923584
    2. '0' → logprob: -1.3134750127792358
    3. ' ' → logprob: -8.938474655151367
    4. '  ' → logprob: -11.313474655151367
    5. '1' → logprob: -11.438474655151367
    6. '`' → logprob: -12.063474655151367
    7. ',' → logprob: -12.188474655151367
    8. '```' → logprob: -12.313474655151367
    9. ' (' → logprob: -12.563474655151367
    10. ' `' → logprob: -12.688474655151367

Token 75: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020695336163043976
    2. ' ' → logprob: -3.895695447921753
    3. '1' → logprob: -10.770695686340332
    4. '-' → logprob: -10.833195686340332
    5. '`' → logprob: -11.270695686340332
    6. '100' → logprob: -11.520695686340332
    7. 'n' → logprob: -11.895695686340332
    8. 'd' → logprob: -12.020695686340332
    9. '```' → logprob: -12.145695686340332
    10. ' ' → logprob: -12.333195686340332

Token 76: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4813600480556488
    2. ',' → logprob: -1.6063600778579712
    3. ' .' → logprob: -3.2313599586486816
    4. ' ,' → logprob: -3.3563599586486816
    5. '#' → logprob: -3.6063599586486816
    6. ' ' → logprob: -3.6063599586486816
    7. ' (' → logprob: -3.7313599586486816
    8. ' #' → logprob: -4.356359958648682
    9. '0' → logprob: -6.606359958648682
    10. ' et' → logprob: -6.606359958648682

Token 77: ' et' (ID: 859)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7818518280982971
    2. ' #' → logprob: -1.6568517684936523
    3. '#' → logprob: -2.4068517684936523
    4. ' et' → logprob: -2.5318517684936523
    5. ' la' → logprob: -2.7818517684936523
    6. ' les' → logprob: -4.031851768493652
    7. ',' → logprob: -4.156851768493652
    8. ' l' → logprob: -4.406851768493652
    9. ' -' → logprob: -4.781851768493652
    10. ' le' → logprob: -4.781851768493652

Token 78: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7137007117271423
    2. ' la' → logprob: -1.088700771331787
    3. ' le' → logprob: -2.963700771331787
    4. ' chaque' → logprob: -3.713700771331787
    5. ' ' → logprob: -3.838700771331787
    6. ' l' → logprob: -3.838700771331787
    7. 'les' → logprob: -4.213700771331787
    8. ' on' → logprob: -5.338700771331787
    9. ' à' → logprob: -5.338700771331787
    10. ' toutes' → logprob: -5.338700771331787

Token 79: ' tour' (ID: 6970)
  Prédit: ' tour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tour' → logprob: -0.43211743235588074
    2. ' hauteur' → logprob: -1.9321174621582031
    3. ' position' → logprob: -2.807117462158203
    4. ' ' → logprob: -3.182117462158203
    5. ' droite' → logprob: -4.057117462158203
    6. 'tour' → logprob: -4.244617462158203
    7. ' don' → logprob: -4.869617462158203
    8. ' t' → logprob: -5.494617462158203
    9. 'don' → logprob: -5.494617462158203
    10. ' code' → logprob: -5.682117462158203

Token 80: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.8089665770530701
    2. ' ' → logprob: -1.1839666366577148
    3. ' à' → logprob: -1.9339666366577148
    4. ' située' → logprob: -3.058966636657715
    5. ' se' → logprob: -4.183966636657715
    6. ' s' → logprob: -4.933966636657715
    7. ' au' → logprob: -4.933966636657715
    8. ' de' → logprob: -5.308966636657715
    9. 's' → logprob: -6.058966636657715
    10. ' a' → logprob: -6.183966636657715

Token 81: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.3810402452945709
    2. ' située' → logprob: -1.5060402154922485
    3. ' ' → logprob: -3.256040334701538
    4. ' plac' → logprob: -4.381040096282959
    5. ' au' → logprob: -4.631040096282959
    6. 'à' → logprob: -4.756040096282959
    7. 'situ' → logprob: -5.131040096282959
    8. ' position' → logprob: -5.381040096282959
    9. 'position' → logprob: -5.756040096282959
    10. ' constru' → logprob: -5.881040096282959

Token 82: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.007769227027893
    2. ' la' → logprob: -1.007769227027893
    3. ' position' → logprob: -1.632769227027893
    4. ' l' → logprob: -3.3827691078186035
    5. 'position' → logprob: -4.1327691078186035
    6. 'la' → logprob: -5.1327691078186035
    7. 'l' → logprob: -5.2577691078186035
    8. ' une' → logprob: -5.6327691078186035
    9. ' droite' → logprob: -6.2577691078186035
    10. ' ' → logprob: -6.5077691078186035

Token 83: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.48878347873687744
    2. 'position' → logprob: -1.2387834787368774
    3. ' droite' → logprob: -2.738783359527588
    4. 'dro' → logprob: -4.613783359527588
    5. ' ' → logprob: -4.738783359527588
    6. ' gauche' → logprob: -6.363783359527588
    7. '	position' → logprob: -6.426283359527588
    8. ' positions' → logprob: -6.488783359527588
    9. 'positions' → logprob: -7.113783359527588
    10. 'd' → logprob: -7.551283359527588

Token 84: ' t' (ID: 260)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2479461133480072
    2. '1' → logprob: -2.12294602394104
    3. ' -' → logprob: -2.99794602394104
    4. ' n' → logprob: -4.497946262359619
    5. ' N' → logprob: -4.622946262359619
    6. '-' → logprob: -4.997946262359619
    7. '0' → logprob: -5.247946262359619
    8. ' len' → logprob: -5.247946262359619
    9. '2' → logprob: -6.247946262359619
    10. '10' → logprob: -6.372946262359619

Token 85: ' sur' (ID: 1512)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6396742463111877
    2. '-' → logprob: -2.889674186706543
    3. '.' → logprob: -3.014674186706543
    4. ' ' → logprob: -3.014674186706543
    5. ' +' → logprob: -3.139674186706543
    6. ',' → logprob: -3.389674186706543
    7. '1' → logprob: -3.389674186706543
    8. ' >' → logprob: -3.639674186706543
    9. 'e' → logprob: -3.764674186706543
    10. 'o' → logprob: -4.014674186706543

Token 86: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3750659227371216
    2. 'l' → logprob: -2.250065803527832
    3. 'la' → logprob: -2.375065803527832
    4. ' l' → logprob: -2.500065803527832
    5. ' ' → logprob: -4.125065803527832
    6. 'une' → logprob: -5.500065803527832
    7. ' une' → logprob: -5.750065803527832
    8. 'x' → logprob: -6.750065803527832
    9. 'a' → logprob: -6.750065803527832
    10. ' le' → logprob: -7.250065803527832

Token 87: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05143866688013077
    2. 'e' → logprob: -4.426438808441162
    3. ''' → logprob: -4.676438808441162
    4. ''a' → logprob: -5.051438808441162
    5. '')' → logprob: -5.051438808441162
    6. ' a' → logprob: -6.051438808441162
    7. 'ine' → logprob: -6.176438808441162
    8. 'iné' → logprob: -6.551438808441162
    9. 'à' → logprob: -6.676438808441162
    10. 'igne' → logprob: -7.051438808441162

Token 88: 'axe' (ID: 53537)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.058990478515625
    2. ''' → logprob: -1.433990478515625
    3. 'axe' → logprob: -1.433990478515625
    4. 'e' → logprob: -1.933990478515625
    5. 'é' → logprob: -4.683990478515625
    6. '#' → logprob: -6.183990478515625
    7. '')' → logprob: -6.308990478515625
    8. 'x' → logprob: -6.433990478515625
    9. 'h' → logprob: -6.683990478515625
    10. '_' → logprob: -6.808990478515625

Token 89: ' horizontal' (ID: 25511)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04611826688051224
    2. ' x' → logprob: -3.2961182594299316
    3. ' des' → logprob: -5.046118259429932
    4. 'des' → logprob: -7.921118259429932
    5. 't' → logprob: -8.42111873626709
    6. 'Ox' → logprob: -8.54611873626709
    7. ' horizontal' → logprob: -9.29611873626709
    8. '```' → logprob: -9.29611873626709
    9. '$x' → logprob: -9.54611873626709
    10. ' ' → logprob: -9.67111873626709

Token 90: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.17644448578357697
    2. ',' → logprob: -2.1764445304870605
    3. '#' → logprob: -3.6764445304870605
    4. ' ' → logprob: -5.3014445304870605
    5. 't' → logprob: -5.6764445304870605
    6. ' t' → logprob: -6.0514445304870605
    7. '\' → logprob: -6.5514445304870605
    8. '```' → logprob: -6.5514445304870605
    9. ' ,' → logprob: -6.6764445304870605
    10. ',
' → logprob: -6.8014445304870605

Token 91: '#' (ID: 2)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.38840630650520325
    2. '#' → logprob: -1.6384062767028809
    3. '.' → logprob: -3.513406276702881
    4. ',' → logprob: -3.763406276702881
    5. ' ' → logprob: -3.763406276702881
    6. ' t' → logprob: -4.263406276702881
    7. 'import' → logprob: -5.263406276702881
    8. 'def' → logprob: -5.388406276702881
    9. '```' → logprob: -5.513406276702881
    10. ':' → logprob: -5.763406276702881

Token 92: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0358232259750366
    2. 't' → logprob: -1.1608232259750366
    3. ' ' → logprob: -2.285823345184326
    4. ' t' → logprob: -2.535823345184326
    5. ',' → logprob: -3.035823345184326
    6. '.' → logprob: -3.910823345184326
    7. ' #' → logprob: -4.035823345184326
    8. 'def' → logprob: -4.910823345184326
    9. ' 
' → logprob: -5.035823345184326
    10. ' 

' → logprob: -5.035823345184326

Token 93: ' On' (ID: 2160)
  Prédit: ' On'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' On' → logprob: -1.723262071609497
    2. '#' → logprob: -1.848262071609497
    3. ' La' → logprob: -2.223262071609497
    4. ' #' → logprob: -2.348262071609497
    5. ' Le' → logprob: -2.473262071609497
    6. 'On' → logprob: -2.973262071609497
    7. ' Pour' → logprob: -2.973262071609497
    8. ' Les' → logprob: -3.348262071609497
    9. ' on' → logprob: -3.473262071609497
    10. 'Pour' → logprob: -3.723262071609497

Token 94: ' cherche' (ID: 52345)
  Prédit: ' considère'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' considère' → logprob: -0.9637033939361572
    2. ' suppose' → logprob: -1.2137033939361572
    3. ' calc' → logprob: -2.0887033939361572
    4. ' veut' → logprob: -3.3387033939361572
    5. ' a' → logprob: -3.4637033939361572
    6. ' définit' → logprob: -4.213703155517578
    7. ' va' → logprob: -4.213703155517578
    8. ' cherche' → logprob: -4.588703155517578
    9. ' consid' → logprob: -4.713703155517578
    10. ' doit' → logprob: -4.713703155517578

Token 95: ' la' (ID: 557)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.21766886115074158
    2. ' ' → logprob: -2.3426687717437744
    3. 'à' → logprob: -2.9676687717437744
    4. ' a' → logprob: -3.9676687717437744
    5. ' la' → logprob: -4.9676690101623535
    6. 'a' → logprob: -5.0926690101623535
    7. ' ' → logprob: -5.3426690101623535
    8. '  ' → logprob: -5.7176690101623535
    9. ' une' → logprob: -6.3426690101623535
    10. ' un' → logprob: -7.3426690101623535

Token 96: ' hauteur' (ID: 72987)
  Prédit: ' hauteur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hauteur' → logprob: -0.02046971209347248
    2. 'ha' → logprob: -4.395469665527344
    3. ' plus' → logprob: -6.020469665527344
    4. ' minimal' → logprob: -7.145469665527344
    5. 't' → logprob: -7.770469665527344
    6. ' t' → logprob: -7.770469665527344
    7. '   ' → logprob: -7.770469665527344
    8. ' h' → logprob: -7.770469665527344
    9. ' ' → logprob: -7.895469665527344
    10. '  ' → logprob: -8.145469665527344

Token 97: ' H' (ID: 487)
  Prédit: ' minimale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' minimale' → logprob: -0.044668834656476974
    2. ' ' → logprob: -4.169668674468994
    3. ' de' → logprob: -4.544668674468994
    4. 'min' → logprob: -5.294668674468994
    5. ' minimal' → logprob: -5.669668674468994
    6. ' maximale' → logprob: -6.419668674468994
    7. ' optimale' → logprob: -6.669668674468994
    8. '_min' → logprob: -6.919668674468994
    9. ' minimum' → logprob: -6.919668674468994
    10. 'minimum' → logprob: -7.294668674468994

Token 98: ' de' (ID: 334)
  Prédit: ' minimale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimale' → logprob: -0.5771947503089905
    2. ' ' → logprob: -1.9521946907043457
    3. ' =' → logprob: -2.2021946907043457
    4. ' de' → logprob: -2.4521946907043457
    5. '_min' → logprob: -3.7021946907043457
    6. '=' → logprob: -4.202194690704346
    7. ' à' → logprob: -4.577194690704346
    8. ' maximale' → logprob: -4.577194690704346
    9. '_' → logprob: -5.202194690704346
    10. '_max' → logprob: -5.827194690704346

Token 99: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.011319775134325027
    2. ' t' → logprob: -5.386319637298584
    3. 'la' → logprob: -5.761319637298584
    4. ' l' → logprob: -7.011319637298584
    5. 'l' → logprob: -7.386319637298584
    6. 't' → logprob: -7.636319637298584
    7. ' ' → logprob: -7.636319637298584
    8. ' tour' → logprob: -8.386320114135742
    9. ' a' → logprob: -8.636320114135742
    10. ' the' → logprob: -8.636320114135742

Token 100: ' tour' (ID: 6970)
  Prédit: ' tour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tour' → logprob: -0.1449536681175232
    2. 'tour' → logprob: -2.019953727722168
    3. ' ' → logprob: -7.519953727722168
    4. ' tours' → logprob: -7.644953727722168
    5. ' tower' → logprob: -8.269953727722168
    6. 't' → logprob: -8.644953727722168
    7. ' t' → logprob: -8.894953727722168
    8. 'tower' → logprob: -9.019953727722168
    9. ' torre' → logprob: -9.394953727722168
    10. ' tou' → logprob: -9.519953727722168

Token 101: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11858207732439041
    2. '<|end|>' → logprob: -2.618582010269165
    3. ',' → logprob: -4.493582248687744
    4. '#' → logprob: -5.118582248687744
    5. '<|end|>' → logprob: -5.243582248687744
    6. ' #' → logprob: -5.993582248687744
    7. ' ,' → logprob: -6.118582248687744
    8. ' =' → logprob: -6.368582248687744
    9. ':' → logprob: -6.368582248687744
    10. '.' → logprob: -6.493582248687744

Token 102: ' que' (ID: 661)
  Prédit: ' garantir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' garantir' → logprob: -0.8819167613983154
    2. ' que' → logprob: -1.0069167613983154
    3. ' assurer' → logprob: -2.0069167613983154
    4. 'que' → logprob: -3.1319167613983154
    5. '#' → logprob: -3.7569167613983154
    6. ' pouvoir' → logprob: -6.2569169998168945
    7. ' #' → logprob: -6.3819169998168945
    8. ' permettre' → logprob: -6.6319169998168945
    9. ' couvrir' → logprob: -6.6319169998168945
    10. ' ce' → logprob: -6.6319169998168945

Token 103: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8936250805854797
    2. ' chaque' → logprob: -1.268625020980835
    3. 'auc' → logprob: -2.893625020980835
    4. ' toutes' → logprob: -3.268625020980835
    5. ' aucune' → logprob: -3.393625020980835
    6. ' aucun' → logprob: -3.518625020980835
    7. ' ' → logprob: -3.643625020980835
    8. 'la' → logprob: -3.643625020980835
    9. '#' → logprob: -4.018625259399414
    10. 'tout' → logprob: -4.143625259399414

Token 104: ' droite' (ID: 61428)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.11402036249637604
    2. ' vue' → logprob: -3.239020347595215
    3. 'ligne' → logprob: -3.739020347595215
    4. ' droite' → logprob: -4.489020347595215
    5. 'vue' → logprob: -5.364020347595215
    6. ' hauteur' → logprob: -5.489020347595215
    7. ' ' → logprob: -5.989020347595215
    8. ' visibilité' → logprob: -5.989020347595215
    9. ' vision' → logprob: -6.114020347595215
    10. 'dro' → logprob: -6.489020347595215

Token 105: ' entre' (ID: 3853)
  Prédit: ' passe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' passe' → logprob: -1.364284873008728
    2. ' passant' → logprob: -1.364284873008728
    3. ' reliant' → logprob: -1.739284873008728
    4. ' d' → logprob: -2.4892849922180176
    5. ' de' → logprob: -2.4892849922180176
    6. ' qui' → logprob: -3.1142849922180176
    7. ' jo' → logprob: -4.114284992218018
    8. ' part' → logprob: -4.489284992218018
    9. 'qui' → logprob: -4.489284992218018
    10. 'de' → logprob: -4.739284992218018

Token 106: ' (' (ID: 350)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.932488739490509
    2. ' le' → logprob: -1.3074886798858643
    3. 'le' → logprob: -1.4324886798858643
    4. 'la' → logprob: -2.9324886798858643
    5. '(t' → logprob: -3.9324886798858643
    6. 't' → logprob: -4.932488918304443
    7. ' t' → logprob: -5.307488918304443
    8. ' (' → logprob: -5.807488918304443
    9. '#' → logprob: -6.432488918304443
    10. ' ' → logprob: -6.557488918304443

Token 107: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3530750572681427
    2. ' t' → logprob: -1.2280750274658203
    3. '0' → logprob: -6.10307502746582
    4. ' la' → logprob: -7.10307502746582
    5. '(t' → logprob: -7.60307502746582
    6. ' ' → logprob: -7.85307502746582
    7. ' (' → logprob: -8.97807502746582
    8. 'T' → logprob: -9.60307502746582
    9. ' le' → logprob: -9.60307502746582
    10. 'le' → logprob: -10.10307502746582

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02331104688346386
    2. ' ,' → logprob: -3.898311138153076
    3. ',H' → logprob: -6.898311138153076
    4. ')' → logprob: -7.648311138153076
    5. ',#' → logprob: -7.648311138153076
    6. ',h' → logprob: -8.773310661315918
    7. ',)' → logprob: -9.148310661315918
    8. ',
' → logprob: -9.523310661315918
    9. '#' → logprob: -9.773310661315918
    10. ' )' → logprob: -9.898310661315918

Token 109: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.043925415724515915
    2. ' H' → logprob: -3.2939255237579346
    3. '0' → logprob: -5.5439252853393555
    4. ' ' → logprob: -7.0439252853393555
    5. '#' → logprob: -8.168925285339355
    6. ',' → logprob: -8.543925285339355
    7. ')' → logprob: -8.668925285339355
    8. 'h' → logprob: -8.918925285339355
    9. ' #' → logprob: -9.668925285339355
    10. ',H' → logprob: -9.668925285339355

Token 110: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012154294381616637
    2. ' )' → logprob: -9.250121116638184
    3. 'et' → logprob: -11.625121116638184
    4. 't' → logprob: -12.750121116638184
    5. '),' → logprob: -13.000121116638184
    6. '#' → logprob: -13.375121116638184
    7. '+' → logprob: -13.500121116638184
    8. ')
' → logprob: -13.875121116638184
    9. ')#' → logprob: -14.125121116638184
    10. '-' → logprob: -14.250121116638184

Token 111: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.042430244386196136
    2. 'et' → logprob: -4.042430400848389
    3. '#' → logprob: -4.417430400848389
    4. ')' → logprob: -4.792430400848389
    5. ' #' → logprob: -6.167430400848389
    6. ' and' → logprob: -6.917430400848389
    7. ' )' → logprob: -8.41742992401123
    8. ' ' → logprob: -8.79242992401123
    9. ' (' → logprob: -11.04242992401123
    10. 't' → logprob: -11.04242992401123

Token 112: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.16031359136104584
    2. '(' → logprob: -1.910313606262207
    3. ' ' → logprob: -9.660313606262207
    4. '0' → logprob: -11.160313606262207
    5. ' le' → logprob: -12.410313606262207
    6. ' ' → logprob: -12.785313606262207
    7. ' #' → logprob: -13.785313606262207
    8. 'le' → logprob: -14.160313606262207
    9. ' #(' → logprob: -14.785313606262207
    10. '#' → logprob: -14.785313606262207

Token 113: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1274382770061493
    2. ' ' → logprob: -2.1274383068084717
    3. ',' → logprob: -7.752438068389893
    4. ' ' → logprob: -10.62743854522705
    5. ' ,' → logprob: -10.75243854522705
    6. '1' → logprob: -12.00243854522705
    7. ')' → logprob: -12.31493854522705
    8. 'x' → logprob: -12.81493854522705
    9. 's' → logprob: -12.81493854522705
    10. '(' → logprob: -13.50243854522705

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009650575229898095
    2. ' ,' → logprob: -7.125965118408203
    3. '0' → logprob: -8.875965118408203
    4. ' ' → logprob: -11.250965118408203
    5. ')' → logprob: -12.875965118408203
    6. '<|end|>' → logprob: -14.000965118408203
    7. 't' → logprob: -14.250965118408203
    8. ',
' → logprob: -14.375965118408203
    9. '1' → logprob: -15.063465118408203
    10. ',height' → logprob: -15.500965118408203

Token 115: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06998111307621002
    2. ' ' → logprob: -2.694981098175049
    3. ' ' → logprob: -10.944981575012207
    4. ',' → logprob: -11.444981575012207
    5. '  ' → logprob: -11.944981575012207
    6. '   ' → logprob: -12.194981575012207
    7. '	' → logprob: -13.694981575012207
    8. '1' → logprob: -14.194981575012207
    9. '    ' → logprob: -14.694981575012207
    10. 't' → logprob: -15.007481575012207

Token 116: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020532844064291567
    2. ' ' → logprob: -8.500205039978027
    3. ')' → logprob: -14.250205039978027
    4. '1' → logprob: -14.625205039978027
    5. '2' → logprob: -15.750205039978027
    6. '```' → logprob: -16.312705993652344
    7. ',' → logprob: -16.437705993652344
    8. 't' → logprob: -16.687705993652344
    9. '  ' → logprob: -16.812705993652344
    10. '4' → logprob: -17.562705993652344

Token 117: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016455493168905377
    2. ' )' → logprob: -6.501645565032959
    3. '#' → logprob: -9.2516450881958
    4. ')#' → logprob: -11.2516450881958
    5. ' soit' → logprob: -11.7516450881958
    6. '),' → logprob: -12.3766450881958
    7. '))' → logprob: -12.7516450881958
    8. ')
' → logprob: -13.0016450881958
    9. ' puisse' → logprob: -13.2516450881958
    10. '   ' → logprob: -13.6891450881958

Token 118: ' ne' (ID: 453)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.9231361150741577
    2. '#' → logprob: -1.1731361150741577
    3. ' soit' → logprob: -1.6731361150741577
    4. ' ne' → logprob: -3.0481362342834473
    5. 'n' → logprob: -4.298136234283447
    6. 'ne' → logprob: -4.548136234283447
    7. 'p' → logprob: -5.173136234283447
    8. ' reste' → logprob: -5.298136234283447
    9. ' passe' → logprob: -5.673136234283447
    10. ' #' → logprob: -5.673136234283447

Token 119: ' coupe' (ID: 71780)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9297938346862793
    2. 'so' → logprob: -0.9297938346862793
    3. ' soit' → logprob: -1.9297938346862793
    4. ' intersect' → logprob: -3.9297938346862793
    5. 'inter' → logprob: -4.304793834686279
    6. 's' → logprob: -4.304793834686279
    7. 'ob' → logprob: -5.804793834686279
    8. 'cro' → logprob: -6.304793834686279
    9. 'd' → logprob: -6.804793834686279
    10. 'f' → logprob: -6.804793834686279

Token 120: ' aucun' (ID: 41678)
  Prédit: ' aucun'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aucun' → logprob: -0.08747785538434982
    2. ' pas' → logprob: -3.712477922439575
    3. ' aucune' → logprob: -3.712477922439575
    4. 'auc' → logprob: -3.712477922439575
    5. 'pas' → logprob: -4.712477684020996
    6. '#' → logprob: -8.587477684020996
    7. ' jamais' → logprob: -8.712477684020996
    8. ' auc' → logprob: -9.087477684020996
    9. 'r' → logprob: -9.587477684020996
    10. 'au' → logprob: -9.587477684020996

Token 121: ' bâtiment' (ID: 92976)
  Prédit: ' bâtiment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bâtiment' → logprob: -0.12644341588020325
    2. 'b' → logprob: -2.501443386077881
    3. '#' → logprob: -4.126443386077881
    4. ' des' → logprob: -5.126443386077881
    5. ' building' → logprob: -6.126443386077881
    6. 'imme' → logprob: -6.251443386077881
    7. 'bat' → logprob: -6.376443386077881
    8. ' imme' → logprob: -6.501443386077881
    9. 'building' → logprob: -7.001443386077881
    10. ' bâtiments' → logprob: -7.001443386077881

Token 122: '.
' (ID: 558)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8623828887939453
    2. 'def' → logprob: -1.3623828887939453
    3. '#' → logprob: -2.2373828887939453
    4. '.' → logprob: -2.4873828887939453
    5. ',' → logprob: -2.7373828887939453
    6. '```' → logprob: -3.8623828887939453
    7. 'n' → logprob: -4.362382888793945
    8. ':' → logprob: -4.862382888793945
    9. 's' → logprob: -5.487382888793945
    10. 't' → logprob: -5.612382888793945

Token 123: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07800564914941788
    2. 'import' → logprob: -3.20300555229187
    3. '#' → logprob: -4.453005790710449
    4. '```' → logprob: -5.328005790710449
    5. 'n' → logprob: -5.453005790710449
    6. 't' → logprob: -5.578005790710449
    7. 'from' → logprob: -5.703005790710449
    8. '
' → logprob: -6.703005790710449
    9. ',' → logprob: -6.953005790710449
    10. ':' → logprob: -7.078005790710449

Token 124: ' 
' (ID: 793)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06913577765226364
    2. 'import' → logprob: -3.0691356658935547
    3. '#' → logprob: -5.569135665893555
    4. 'n' → logprob: -5.569135665893555
    5. '
' → logprob: -5.694135665893555
    6. '```' → logprob: -6.069135665893555
    7. ' 
' → logprob: -6.319135665893555
    8. '\' → logprob: -6.569135665893555
    9. 'from' → logprob: -6.694135665893555
    10. 't' → logprob: -7.069135665893555

Token 125: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12188635766506195
    2. '#' → logprob: -2.8718862533569336
    3. 'import' → logprob: -3.2468862533569336
    4. 'n' → logprob: -4.621886253356934
    5. 'from' → logprob: -5.121886253356934
    6. 't' → logprob: -6.871886253356934
    7. '\' → logprob: -7.871886253356934
    8. '```' → logprob: -7.996886253356934
    9. 'for' → logprob: -8.246886253356934
    10. ' def' → logprob: -8.621886253356934

Token 126: ' Mod' (ID: 7191)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.024910926818847656
    2. 'import' → logprob: -4.399910926818848
    3. '#' → logprob: -5.149910926818848
    4. 'from' → logprob: -5.399910926818848
    5. 'n' → logprob: -6.399910926818848
    6. ' def' → logprob: -9.149910926818848
    7. 'for' → logprob: -9.399910926818848
    8. '```' → logprob: -9.774910926818848
    9. 't' → logprob: -10.524910926818848
    10. 'class' → logprob: -11.524910926818848

Token 127: 'él' (ID: 6778)
  Prédit: 'èle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'èle' → logprob: -0.20367008447647095
    2. 'el' → logprob: -2.828670024871826
    3. '#' → logprob: -3.078670024871826
    4. 'ule' → logprob: -3.328670024871826
    5. ' =' → logprob: -4.203670024871826
    6. 'é' → logprob: -4.328670024871826
    7. 'e' → logprob: -5.953670024871826
    8. 'èles' → logprob: -5.953670024871826
    9. 'èl' → logprob: -6.203670024871826
    10. '=' → logprob: -6.328670024871826

Token 128: 'isation' (ID: 6993)
  Prédit: 'él'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'él' → logprob: -0.6936813592910767
    2. 'é' → logprob: -1.6936813592910767
    3. 'isation' → logprob: -1.9436813592910767
    4. 'isé' → logprob: -3.318681240081787
    5. 'e' → logprob: -3.443681240081787
    6. '#' → logprob: -3.443681240081787
    7. 'iser' → logprob: -3.818681240081787
    8. 'èle' → logprob: -4.193681240081787
    9. 'è' → logprob: -4.818681240081787
    10. 'er' → logprob: -5.318681240081787

Token 129: ' :
' (ID: 10039)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.500680685043335
    2. ' :' → logprob: -2.000680685043335
    3. ' des' → logprob: -2.500680685043335
    4. ':' → logprob: -2.875680685043335
    5. 'import' → logprob: -3.000680685043335
    6. ' #' → logprob: -4.500680923461914
    7. ' :
' → logprob: -4.750680923461914
    8. ' :

' → logprob: -4.750680923461914
    9. ' de' → logprob: -5.000680923461914
    10. ' =' → logprob: -5.500680923461914

Token 130: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08533697575330734
    2. 'def' → logprob: -4.085337162017822
    3. 'ha' → logprob: -4.210337162017822
    4. 'he' → logprob: -4.710337162017822
    5. 'build' → logprob: -4.710337162017822
    6. 'b' → logprob: -5.085337162017822
    7. 'x' → logprob: -5.210337162017822
    8. 'n' → logprob: -5.460337162017822
    9. 'import' → logprob: -5.585337162017822
    10. 'positions' → logprob: -6.335337162017822

Token 131: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9058243036270142
    2. '#' → logprob: -1.0308243036270142
    3. 'import' → logprob: -2.7808241844177246
    4. 'n' → logprob: -2.9058241844177246
    5. 'from' → logprob: -3.9058241844177246
    6. ' #' → logprob: -4.155824184417725
    7. ' def' → logprob: -4.155824184417725
    8. ' buildings' → logprob: -4.530824184417725
    9. ' n' → logprob: -4.655824184417725
    10. 'ha' → logprob: -5.030824184417725

Token 132: ' Pour' (ID: 13931)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5698889493942261
    2. 'def' → logprob: -1.569888949394226
    3. 'On' → logprob: -3.0698890686035156
    4. 'import' → logprob: -3.3198890686035156
    5. ' buildings' → logprob: -3.8198890686035156
    6. ' On' → logprob: -4.194889068603516
    7. 't' → logprob: -4.569889068603516
    8. 'from' → logprob: -4.569889068603516
    9. ' on' → logprob: -4.694889068603516
    10. 'positions' → logprob: -4.819889068603516

Token 133: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.15147018432617188
    2. ' i' → logprob: -2.026470184326172
    3. 'i' → logprob: -5.026470184326172
    4. ' each' → logprob: -7.776470184326172
    5. ' ch' → logprob: -8.526470184326172
    6. ' la' → logprob: -8.651470184326172
    7. 'cha' → logprob: -8.901470184326172
    8. ' chacune' → logprob: -8.901470184326172
    9. 'ch' → logprob: -9.151470184326172
    10. ' calcul' → logprob: -9.276470184326172

Token 134: ' bâtiment' (ID: 92976)
  Prédit: ' bâtiment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bâtiment' → logprob: -0.3962644636631012
    2. 'b' → logprob: -1.2712644338607788
    3. ' building' → logprob: -4.896264553070068
    4. 'building' → logprob: -4.896264553070068
    5. ' imme' → logprob: -5.021264553070068
    6. 'bat' → logprob: -5.271264553070068
    7. 'imme' → logprob: -5.396264553070068
    8. '#' → logprob: -5.896264553070068
    9. ' i' → logprob: -6.021264553070068
    10. 'i' → logprob: -6.521264553070068

Token 135: ' situé' (ID: 61343)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11454150825738907
    2. ' ,' → logprob: -2.864541530609131
    3. ' i' → logprob: -3.614541530609131
    4. 'i' → logprob: -4.614541530609131
    5. '#' → logprob: -5.239541530609131
    6. ' on' → logprob: -5.489541530609131
    7. ',i' → logprob: -6.739541530609131
    8. ' #' → logprob: -7.239541530609131
    9. '[i' → logprob: -7.489541530609131
    10. ' (' → logprob: -7.489541530609131

Token 136: ' en' (ID: 469)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.17400749027729034
    2. ' entre' → logprob: -2.2990074157714844
    3. ' sur' → logprob: -3.7990074157714844
    4. 'à' → logprob: -4.549007415771484
    5. ' i' → logprob: -5.549007415771484
    6. ',' → logprob: -5.674007415771484
    7. ' ' → logprob: -5.799007415771484
    8. 'sur' → logprob: -5.924007415771484
    9. ' au' → logprob: -6.424007415771484
    10. ' at' → logprob: -6.924007415771484

Token 137: ' x' (ID: 1215)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.7869861125946045
    2. 'position' → logprob: -1.2869861125946045
    3. ' i' → logprob: -2.5369861125946045
    4. 'i' → logprob: -2.7869861125946045
    5. 'x' → logprob: -2.7869861125946045
    6. ' x' → logprob: -3.4119861125946045
    7. 'positions' → logprob: -5.161986351013184
    8. 'pos' → logprob: -5.536986351013184
    9. ' une' → logprob: -5.661986351013184
    10. '[i' → logprob: -5.786986351013184

Token 138: '_i' (ID: 10853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42293038964271545
    2. '_i' → logprob: -2.0479304790496826
    3. ' donné' → logprob: -2.6729304790496826
    4. ' ,' → logprob: -3.2979304790496826
    5. ' entre' → logprob: -3.5479304790496826
    6. '[i' → logprob: -4.6729302406311035
    7. '>' → logprob: -4.6729302406311035
    8. 'i' → logprob: -4.7979302406311035
    9. ' compris' → logprob: -5.4229302406311035
    10. ' i' → logprob: -5.4229302406311035

Token 139: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09001769870519638
    2. ' ,' → logprob: -3.215017795562744
    3. ' et' → logprob: -4.215017795562744
    4. ' avec' → logprob: -4.840017795562744
    5. ' (' → logprob: -5.465017795562744
    6. ' entre' → logprob: -5.715017795562744
    7. '#' → logprob: -5.840017795562744
    8. ' à' → logprob: -5.840017795562744
    9. ' sur' → logprob: -6.340017795562744
    10. ' on' → logprob: -6.590017795562744

Token 140: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2556477189064026
    2. '),' → logprob: -2.505647659301758
    3. ' ,' → logprob: -2.880647659301758
    4. ')' → logprob: -3.005647659301758
    5. ' ),' → logprob: -4.880647659301758
    6. '#' → logprob: -5.130647659301758
    7. ' )' → logprob: -5.255647659301758
    8. ' la' → logprob: -5.880647659301758
    9. ' #' → logprob: -6.630647659301758
    10. 'x' → logprob: -6.755647659301758

Token 141: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -1.0276353359222412
    2. ' <' → logprob: -1.1526353359222412
    3. ',' → logprob: -2.277635335922241
    4. '<=' → logprob: -2.652635335922241
    5. ' <=' → logprob: -3.402635335922241
    6. ')' → logprob: -3.777635335922241
    7. '+' → logprob: -4.15263557434082
    8. '#' → logprob: -4.52763557434082
    9. '<x' → logprob: -4.52763557434082
    10. '=' → logprob: -4.77763557434082

Token 142: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15451379120349884
    2. ' x' → logprob: -2.4045138359069824
    3. 'i' → logprob: -3.0295138359069824
    4. '=' → logprob: -5.904513835906982
    5. ' i' → logprob: -6.529513835906982
    6. '_i' → logprob: -9.529513359069824
    7. ' ' → logprob: -10.279513359069824
    8. '#' → logprob: -10.404513359069824
    9. 'xi' → logprob: -10.779513359069824
    10. 't' → logprob: -10.904513359069824

Token 143: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.20801307260990143
    2. '[i' → logprob: -2.4580130577087402
    3. 'i' → logprob: -2.5830130577087402
    4. ')' → logprob: -5.33301305770874
    5. '#' → logprob: -5.45801305770874
    6. '<=' → logprob: -6.08301305770874
    7. '[' → logprob: -6.08301305770874
    8. 's' → logprob: -6.20801305770874
    9. ' <' → logprob: -6.33301305770874
    10. '<' → logprob: -6.58301305770874

Token 144: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.7608852386474609
    2. '<' → logprob: -1.010885238647461
    3. ')' → logprob: -2.510885238647461
    4. '<=' → logprob: -3.385885238647461
    5. ' <=' → logprob: -3.635885238647461
    6. '#' → logprob: -5.385885238647461
    7. '),' → logprob: -5.510885238647461
    8. ')<' → logprob: -5.635885238647461
    9. ',' → logprob: -6.010885238647461
    10. ')<=' → logprob: -6.385885238647461

Token 145: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1798233985900879
    2. ' t' → logprob: -1.804823398590088
    3. '=' → logprob: -10.67982292175293
    4. 'T' → logprob: -11.30482292175293
    5. '`t' → logprob: -11.67982292175293
    6. '=t' → logprob: -11.92982292175293
    7. ')t' → logprob: -12.05482292175293
    8. '	t' → logprob: -12.17982292175293
    9. ' ' → logprob: -12.30482292175293
    10. '>' → logprob: -13.67982292175293

Token 146: ')' (ID: 8)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.06454934924840927
    2. ')' → logprob: -2.939549446105957
    3. '#' → logprob: -5.689549446105957
    4. ' ),' → logprob: -5.814549446105957
    5. ',' → logprob: -5.939549446105957
    6. ' )' → logprob: -8.439549446105957
    7. '):
' → logprob: -9.314549446105957
    8. '):' → logprob: -9.814549446105957
    9. ')#' → logprob: -10.189549446105957
    10. ' ,' → logprob: -10.564549446105957

Token 147: ' avec' (ID: 3937)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05863412842154503
    2. '#' → logprob: -3.308634042739868
    3. ' ,' → logprob: -4.433634281158447
    4. ',#' → logprob: -5.808634281158447
    5. ' on' → logprob: -6.433634281158447
    6. ' #' → logprob: -6.558634281158447
    7. ',on' → logprob: -8.308633804321289
    8. ' hauteur' → logprob: -8.433633804321289
    9. '#,' → logprob: -8.558633804321289
    10. ' la' → logprob: -8.683633804321289

Token 148: ' hauteur' (ID: 72987)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.0680174827575684
    2. 'une' → logprob: -1.0680174827575684
    3. 'ha' → logprob: -1.3180174827575684
    4. '#' → logprob: -4.443017482757568
    5. ' hauteur' → logprob: -4.568017482757568
    6. ' sa' → logprob: -5.193017482757568
    7. 'sa' → logprob: -5.443017482757568
    8. ' ' → logprob: -6.193017482757568
    9. 'height' → logprob: -6.943017482757568
    10. 'la' → logprob: -6.943017482757568

Token 149: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.4439874291419983
    2. 'h' → logprob: -1.0689873695373535
    3. ' y' → logprob: -4.4439873695373535
    4. 'y' → logprob: -6.6939873695373535
    5. ' ' → logprob: -7.6939873695373535
    6. ' H' → logprob: -8.193987846374512
    7. 'H' → logprob: -8.318987846374512
    8. '   ' → logprob: -8.318987846374512
    9. ' b' → logprob: -8.443987846374512
    10. 'b' → logprob: -8.568987846374512

Token 150: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0022746773902326822
    2. 'i' → logprob: -6.252274513244629
    3. '[i' → logprob: -9.377274513244629
    4. '   ' → logprob: -9.377274513244629
    5. ',' → logprob: -10.627274513244629
    6. '_' → logprob: -10.877274513244629
    7. ' i' → logprob: -10.877274513244629
    8. 'e' → logprob: -10.877274513244629
    9. '_b' → logprob: -11.127274513244629
    10. ' _' → logprob: -11.377274513244629

Token 151: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020269164815545082
    2. '#' → logprob: -4.520269393920898
    3. ' ,' → logprob: -5.270269393920898
    4. ',
' → logprob: -6.520269393920898
    5. ' #' → logprob: -7.395269393920898
    6. ':' → logprob: -8.020269393920898
    7. ',#' → logprob: -8.020269393920898
    8. ' (' → logprob: -8.145269393920898
    9. ' ' → logprob: -8.395269393920898
    10. ' on' → logprob: -9.145269393920898

Token 152: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.18690401315689087
    2. ' il' → logprob: -2.561903953552246
    3. ' #' → logprob: -2.936903953552246
    4. ' on' → logprob: -3.436903953552246
    5. ' la' → logprob: -5.311903953552246
    6. ' ' → logprob: -6.936903953552246
    7. 'il' → logprob: -7.686903953552246
    8. ' ' → logprob: -7.936903953552246
    9. 'on' → logprob: -8.061903953552246
    10. ' vérifier' → logprob: -8.186903953552246

Token 153: '  ' (ID: 256)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.14692926406860352
    2. ' on' → logprob: -3.1469292640686035
    3. ' #' → logprob: -3.1469292640686035
    4. 'on' → logprob: -3.8969292640686035
    5. ' il' → logprob: -4.1469292640686035
    6. 'il' → logprob: -5.1469292640686035
    7. ' la' → logprob: -5.2719292640686035
    8. 'la' → logprob: -6.1469292640686035
    9. 'le' → logprob: -7.3969292640686035
    10. ' le' → logprob: -8.646928787231445

Token 154: ' la' (ID: 557)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.8914573788642883
    2. '#' → logprob: -1.0164573192596436
    3. ' on' → logprob: -2.5164573192596436
    4. 'la' (adapté à ' la') → logprob: -2.7664573192596436
    5. 'il' → logprob: -3.0164573192596436
    6. ' il' → logprob: -4.391457557678223
    7. ' la' → logprob: -4.641457557678223
    8. 'le' → logprob: -5.391457557678223
    9. ' #' → logprob: -5.391457557678223
    10. 'l' → logprob: -6.391457557678223

Token 155: ' hauteur' (ID: 72987)
  Prédit: ' hauteur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hauteur' → logprob: -0.05947083979845047
    2. ' droite' → logprob: -3.4344708919525146
    3. ' pente' → logprob: -4.5594706535339355
    4. 'ha' → logprob: -5.0594706535339355
    5. 'dro' → logprob: -6.4344706535339355
    6. ' dro' → logprob: -6.5594706535339355
    7. ' ligne' → logprob: -6.9344706535339355
    8. ' distance' → logprob: -7.3094706535339355
    9. ' valeur' → logprob: -7.8094706535339355
    10. ' ' → logprob: -7.9344706535339355

Token 156: ' de' (ID: 334)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.6870419979095459
    2. ' y' → logprob: -2.062041997909546
    3. ' de' → logprob: -2.312041997909546
    4. 'du' → logprob: -3.312041997909546
    5. ' minimale' → logprob: -3.312041997909546
    6. ' maximale' → logprob: -3.437041997909546
    7. 'de' → logprob: -3.562041997909546
    8. 'inter' → logprob: -3.562041997909546
    9. ' à' → logprob: -4.187042236328125
    10. 'y' → logprob: -4.312042236328125

Token 157: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.43222787976264954
    2. 'la' → logprob: -1.0572278499603271
    3. 'l' → logprob: -6.557228088378906
    4. ' ' → logprob: -7.057228088378906
    5. ' l' → logprob: -7.932228088378906
    6. '#' → logprob: -8.432228088378906
    7. 'le' → logprob: -9.307228088378906
    8. ' droite' → logprob: -9.557228088378906
    9. ' #' → logprob: -10.057228088378906
    10. ' ' → logprob: -10.182228088378906

Token 158: ' vue' (ID: 30721)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.6262364387512207
    2. ' droite' → logprob: -0.8762364387512207
    3. 'ligne' → logprob: -3.6262364387512207
    4. 'tour' → logprob: -4.876236438751221
    5. ' ligne' → logprob: -5.376236438751221
    6. ' dro' → logprob: -5.626236438751221
    7. '#' → logprob: -6.876236438751221
    8. 'point' → logprob: -6.876236438751221
    9. ' tour' → logprob: -6.876236438751221
    10. 'd' → logprob: -7.501236438751221

Token 159: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.2399792671203613
    2. ' au' → logprob: -1.9899792671203613
    3. ' du' → logprob: -2.2399792671203613
    4. 'inter' → logprob: -2.2399792671203613
    5. ' entre' → logprob: -2.6149792671203613
    6. ' sur' → logprob: -3.2399792671203613
    7. ' doit' → logprob: -3.2399792671203613
    8. ' en' → logprob: -3.6149792671203613
    9. ' depuis' → logprob: -3.8649792671203613
    10. ' ' → logprob: -4.114979267120361

Token 160: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.17857077717781067
    2. ' x' → logprob: -2.4285707473754883
    3. 'l' → logprob: -3.4285707473754883
    4. ' l' → logprob: -4.178570747375488
    5. ' la' → logprob: -4.303570747375488
    6. ' ce' → logprob: -5.303570747375488
    7. 'position' → logprob: -5.803570747375488
    8. 'la' → logprob: -5.928570747375488
    9. 'distance' → logprob: -6.678570747375488
    10. ' position' → logprob: -7.803570747375488

Token 161: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.006735265254974365
    2. '=' → logprob: -6.256735324859619
    3. ' =' → logprob: -6.506735324859619
    4. 'i' → logprob: -6.631735324859619
    5. '_' → logprob: -6.631735324859619
    6. ' i' → logprob: -8.506734848022461
    7. ' ' → logprob: -8.756734848022461
    8. ' _' → logprob: -8.756734848022461
    9. '   ' → logprob: -11.131734848022461
    10. ' x' → logprob: -11.506734848022461

Token 162: ' est' (ID: 893)
  Prédit: ' doit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.1512179970741272
    2. ' est' → logprob: -2.6512179374694824
    3. '#' → logprob: -3.4012179374694824
    4. 'do' → logprob: -5.151217937469482
    5. ' sur' → logprob: -5.401217937469482
    6. ' must' → logprob: -5.401217937469482
    7. ' ne' → logprob: -6.151217937469482
    8. ' (' → logprob: -6.401217937469482
    9. 'inter' → logprob: -6.401217937469482
    10. 'sur' → logprob: -6.401217937469482

Token 163: ' donnée' (ID: 130126)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strict' → logprob: -0.27551761269569397
    2. ' inf' → logprob: -2.025517702102661
    3. 'inf' → logprob: -4.025517463684082
    4. ' (' → logprob: -4.025517463684082
    5. ' strict' → logprob: -4.025517463684082
    6. '(t' → logprob: -4.525517463684082
    7. ' au' → logprob: -4.775517463684082
    8. '(' → logprob: -5.150517463684082
    9. ' strictly' → logprob: -5.400517463684082
    10. '(h' → logprob: -5.400517463684082

Token 164: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.014134358614683151
    2. 'par' → logprob: -4.514134407043457
    3. ' ' → logprob: -6.139134407043457
    4. ' =' → logprob: -8.014134407043457
    5. '#' → logprob: -8.514134407043457
    6. '_par' → logprob: -8.889134407043457
    7. '=' → logprob: -9.389134407043457
    8. ' by' → logprob: -9.889134407043457
    9. ' #' → logprob: -10.139134407043457
    10. ' ' → logprob: -11.014134407043457

Token 165: ' l' (ID: 305)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.8463258743286133
    2. ' (' → logprob: -1.2213258743286133
    3. 'H' → logprob: -2.3463258743286133
    4. ' h' → logprob: -3.4713258743286133
    5. '"' → logprob: -3.7213258743286133
    6. ' la' → logprob: -3.8463258743286133
    7. '(' → logprob: -3.9713258743286133
    8. ' y' → logprob: -3.9713258743286133
    9. ' ' → logprob: -4.471325874328613
    10. '(H' → logprob: -4.846325874328613

Token 166: ''équ' (ID: 170507)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4203200340270996
    2. ''inter' → logprob: -1.5453200340270996
    3. ''équ' → logprob: -2.4203200340270996
    4. ''' → logprob: -4.1703200340271
    5. 'ha' → logprob: -5.2953200340271
    6. 'e' → logprob: -5.5453200340271
    7. ''h' → logprob: -5.6703200340271
    8. 'inter' → logprob: -5.7953200340271
    9. ''ha' → logprob: -6.7953200340271
    10. ''application' → logprob: -7.0453200340271

Token 167: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.008153525181114674
    2. 'a' → logprob: -4.883153438568115
    3. 'atio' → logprob: -8.633153915405273
    4. 'ati' → logprob: -8.758153915405273
    5. '#' → logprob: -8.883153915405273
    6. '(' → logprob: -11.383153915405273
    7. 'lation' → logprob: -11.758153915405273
    8. 'al' → logprob: -12.133153915405273
    9. 'at' → logprob: -12.383153915405273
    10. 'ale' → logprob: -12.758153915405273

Token 168: ' de' (ID: 334)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3498096466064453
    2. ' de' → logprob: -1.3498096466064453
    3. 'y' → logprob: -3.4748096466064453
    4. ':' → logprob: -6.099809646606445
    5. ' :' → logprob: -7.224809646606445
    6. ' ' → logprob: -7.724809646606445
    7. 'de' → logprob: -8.224809646606445
    8. ' d' → logprob: -8.724809646606445
    9. ' #' → logprob: -8.974809646606445
    10. '   ' → logprob: -8.974809646606445

Token 169: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.14857976138591766
    2. 'la' → logprob: -2.5235798358917236
    3. ' droite' → logprob: -3.6485798358917236
    4. 'dro' → logprob: -4.0235795974731445
    5. ' dro' → logprob: -4.5235795974731445
    6. 'd' → logprob: -6.1485795974731445
    7. ' ' → logprob: -7.3985795974731445
    8. ' droit' → logprob: -9.773579597473145
    9. ' l' → logprob: -10.398579597473145
    10. '   ' → logprob: -10.523579597473145

Token 170: ' droite' (ID: 61428)
  Prédit: ' droite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' droite' → logprob: -0.20898708701133728
    2. 'dro' → logprob: -1.7089871168136597
    3. 'ligne' → logprob: -5.958987236022949
    4. ' dro' → logprob: -6.458987236022949
    5. 'd' → logprob: -6.583987236022949
    6. ' ligne' → logprob: -7.333987236022949
    7. ' ' → logprob: -7.458987236022949
    8. '#' → logprob: -8.33398723602295
    9. '   ' → logprob: -8.45898723602295
    10. ' #' → logprob: -9.83398723602295

Token 171: ' entre' (ID: 3853)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.11489970237016678
    2. ' :' → logprob: -3.1148996353149414
    3. 'y' → logprob: -3.6148996353149414
    4. ':' → logprob: -3.8648996353149414
    5. ' (' → logprob: -5.239899635314941
    6. ',' → logprob: -6.489899635314941
    7. '(y' → logprob: -6.614899635314941
    8. '#' → logprob: -6.739899635314941
    9. ' =' → logprob: -6.864899635314941
    10. '\' → logprob: -7.114899635314941

Token 172: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2747783958911896
    2. '(' → logprob: -1.7747783660888672
    3. '(t' → logprob: -2.649778366088867
    4. ' ' → logprob: -11.149778366088867
    5. 't' → logprob: -11.274778366088867
    6. ' la' → logprob: -11.649778366088867
    7. ' le' → logprob: -11.774778366088867
    8. '0' → logprob: -12.399778366088867
    9. '(T' → logprob: -12.524778366088867
    10. 'le' → logprob: -12.649778366088867

Token 173: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.12974993884563446
    2. ' t' → logprob: -2.3797500133514404
    3. '0' → logprob: -3.7547500133514404
    4. '(t' → logprob: -5.504749774932861
    5. ' (' → logprob: -7.379749774932861
    6. '(' → logprob: -7.504749774932861
    7. ' ' → logprob: -8.00475025177002
    8. ',' → logprob: -10.37975025177002
    9. ')t' → logprob: -10.87975025177002
    10. ')' → logprob: -11.00475025177002

Token 174: ',H' (ID: 94400)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015234333695843816
    2. ',H' → logprob: -6.626523494720459
    3. ' ,' → logprob: -8.6265230178833
    4. 'H' → logprob: -12.1265230178833
    5. '-' → logprob: -12.5015230178833
    6. ' H' → logprob: -13.1265230178833
    7. ',#' → logprob: -13.6265230178833
    8. ',h' → logprob: -14.2515230178833
    9. ' -' → logprob: -14.2515230178833
    10. ',
' → logprob: -14.5015230178833

Token 175: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42943453788757324
    2. ',' → logprob: -1.0544345378875732
    3. ' ,' → logprob: -8.554434776306152
    4. '),' → logprob: -8.679434776306152
    5. ',)' → logprob: -8.804434776306152
    6. ' )' → logprob: -9.179434776306152
    7. ',H' → logprob: -10.679434776306152
    8. 'et' → logprob: -11.179434776306152
    9. '0' → logprob: -11.304434776306152
    10. ' et' → logprob: -11.429434776306152

Token 176: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.08489203453063965
    2. 'et' → logprob: -2.7098920345306396
    3. '#' → logprob: -5.084892272949219
    4. ' and' → logprob: -5.209892272949219
    5. ')' → logprob: -7.209892272949219
    6. ' #' → logprob: -7.334892272949219
    7. ',' → logprob: -7.709892272949219
    8. ' ' → logprob: -7.834892272949219
    9. '```' → logprob: -8.459892272949219
    10. ' (' → logprob: -8.709892272949219

Token 177: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.47408226132392883
    2. '(' → logprob: -0.9740822315216064
    3. ' ' → logprob: -12.474081993103027
    4. ' ' → logprob: -14.224081993103027
    5. '#' → logprob: -15.724081993103027
    6. '0' → logprob: -15.724081993103027
    7. ' #' → logprob: -15.724081993103027
    8. ' #(' → logprob: -15.974081993103027
    9. '（' → logprob: -17.724082946777344
    10. '\' → logprob: -17.849082946777344

Token 178: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02649710699915886
    2. ' ' → logprob: -3.6514971256256104
    3. '(' → logprob: -9.026496887207031
    4. ' (' → logprob: -10.151496887207031
    5. ',' → logprob: -10.651496887207031
    6. ' ' → logprob: -12.151496887207031
    7. ')' → logprob: -13.151496887207031
    8. '  ' → logprob: -13.401496887207031
    9. '```' → logprob: -13.838996887207031
    10. ' ,' → logprob: -14.401496887207031

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017096864758059382
    2. ',H' → logprob: -6.501709461212158
    3. '0' → logprob: -8.876709938049316
    4. ' ,' → logprob: -9.751709938049316
    5. ',h' → logprob: -12.876709938049316
    6. ')' → logprob: -13.376709938049316
    7. ' ' → logprob: -13.501709938049316
    8. 'H' → logprob: -14.251709938049316
    9. ',
' → logprob: -14.751709938049316
    10. ',y' → logprob: -14.876709938049316

Token 180: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017111169872805476
    2. ' ' → logprob: -6.376710891723633
    3. ',' → logprob: -12.001710891723633
    4. ')' → logprob: -13.626710891723633
    5. ' ' → logprob: -14.126710891723633
    6. '```' → logprob: -15.751710891723633
    7. '  ' → logprob: -16.251710891723633
    8. ' ,' → logprob: -16.751710891723633
    9. ' )' → logprob: -16.751710891723633
    10. '   ' → logprob: -16.751710891723633

Token 181: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.034389927983284
    2. '):' → logprob: -3.6593899726867676
    3. ').' → logprob: -5.909389972686768
    4. '),' → logprob: -6.409389972686768
    5. '#' → logprob: -7.034389972686768
    6. '):

' → logprob: -7.284389972686768
    7. '):
' → logprob: -7.659389972686768
    8. ')#' → logprob: -8.03438949584961
    9. ')
' → logprob: -8.15938949584961
    10. ':' → logprob: -8.40938949584961

Token 182: '#' (ID: 2)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6640084981918335
    2. '*' → logprob: -1.9140084981918335
    3. ' H' → logprob: -2.789008617401123
    4. ' (' → logprob: -3.164008617401123
    5. ' /' → logprob: -3.164008617401123
    6. ' h' → logprob: -3.414008617401123
    7. ' ' → logprob: -4.164008617401123
    8. ',' → logprob: -4.164008617401123
    9. ' #' → logprob: -4.164008617401123
    10. ' \' → logprob: -4.539008617401123

Token 183: '  ' (ID: 256)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.2656450867652893
    2. ' y' → logprob: -2.6406450271606445
    3. 'H' → logprob: -3.0156450271606445
    4. ' h' → logprob: -3.0156450271606445
    5. ' (' → logprob: -3.8906450271606445
    6. ' ' → logprob: -4.6406450271606445
    7. ' #' → logprob: -4.7656450271606445
    8. ' hauteur' → logprob: -5.7656450271606445
    9. '   ' → logprob: -6.0156450271606445
    10. '#' → logprob: -6.2656450271606445

Token 184: ' y' (ID: 342)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.8359016180038452
    2. ' H' → logprob: -1.2109016180038452
    3. ' y' → logprob: -1.7109016180038452
    4. 'y' (adapté à ' y') → logprob: -2.9609017372131348
    5. ' h' → logprob: -4.210901737213135
    6. 'h' → logprob: -4.460901737213135
    7. '   ' → logprob: -5.585901737213135
    8. ' (' → logprob: -5.835901737213135
    9. ' ' → logprob: -7.710901737213135
    10. '```' → logprob: -8.085901260375977

Token 185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04315858706831932
    2. '=' → logprob: -3.168158531188965
    3. '(x' → logprob: -9.168158531188965
    4. ' *' → logprob: -10.543158531188965
    5. '*' → logprob: -11.293158531188965
    6. '(t' → logprob: -11.543158531188965
    7. '*(' → logprob: -13.543158531188965
    8. ' <=' → logprob: -13.793158531188965
    9. '=(' → logprob: -14.418158531188965
    10. '=x' → logprob: -14.668158531188965

Token 186: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.3567170202732086
    2. '(H' → logprob: -1.9817169904708862
    3. ' H' → logprob: -2.606717109680176
    4. ' (' → logprob: -2.731717109680176
    5. 'x' → logprob: -4.231717109680176
    6. '(x' → logprob: -5.606717109680176
    7. 'Hx' → logprob: -5.981717109680176
    8. ' x' → logprob: -6.606717109680176
    9. '(t' → logprob: -7.856717109680176
    10. ' ' → logprob: -8.106717109680176

Token 187: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.02745904214680195
    2. '*' → logprob: -3.652459144592285
    3. '*x' → logprob: -7.027459144592285
    4. '*(' → logprob: -8.277459144592285
    5. '*t' → logprob: -11.652459144592285
    6. ' ' → logprob: -13.277459144592285
    7. 'x' → logprob: -14.152459144592285
    8. '(x' → logprob: -14.402459144592285
    9. ' /' → logprob: -14.402459144592285
    10. ' (' → logprob: -14.527459144592285

Token 188: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4428899884223938
    2. 'x' → logprob: -2.067889928817749
    3. '(x' → logprob: -2.067889928817749
    4. ' x' → logprob: -2.692889928817749
    5. '(' → logprob: -3.317889928817749
    6. '(t' → logprob: -7.067890167236328
    7. '((' → logprob: -9.442890167236328
    8. ' ' → logprob: -10.442890167236328
    9. '\' → logprob: -11.442890167236328
    10. ' ((' → logprob: -11.567890167236328

Token 189: 't' (ID: 83)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3352853059768677
    2. '(t' → logprob: -1.5852853059768677
    3. ' (' → logprob: -2.710285186767578
    4. ' x' → logprob: -4.460285186767578
    5. '(x' → logprob: -6.710285186767578
    6. '(' → logprob: -7.585285186767578
    7. '(T' → logprob: -9.210285186767578
    8. 't' → logprob: -10.210285186767578
    9. '\' → logprob: -11.710285186767578
    10. '((' → logprob: -12.085285186767578

Token 190: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4287917912006378
    2. '-' → logprob: -1.0537917613983154
    3. '-x' → logprob: -9.428791999816895
    4. '-t' → logprob: -12.428791999816895
    5. '-i' → logprob: -12.428791999816895
    6. 'x' → logprob: -13.928791999816895
    7. ' ' → logprob: -15.053791999816895
    8. ' x' → logprob: -15.553791999816895
    9. 's' → logprob: -15.678791999816895
    10. '-u' → logprob: -15.678791999816895

Token 191: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011107368394732475
    2. ' x' → logprob: -4.511107444763184
    3. 'xi' → logprob: -9.761107444763184
    4. ')x' → logprob: -14.261107444763184
    5. ' xi' → logprob: -14.636107444763184
    6. '_x' → logprob: -14.886107444763184
    7. 'i' → logprob: -16.011106491088867
    8. ')' → logprob: -16.261106491088867
    9. ' ' → logprob: -16.636106491088867
    10. '	x' → logprob: -17.261106491088867

Token 192: ')' (ID: 8)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.006900074891746044
    2. 'i' → logprob: -5.006900310516357
    3. ')' → logprob: -8.6318998336792
    4. '_' → logprob: -13.1318998336792
    5. '[i' → logprob: -13.5068998336792
    6. ')/' → logprob: -13.8818998336792
    7. '_)' → logprob: -14.0068998336792
    8. ')i' → logprob: -14.6318998336792
    9. 'x' → logprob: -15.8818998336792
    10. ')/(' → logprob: -16.256900787353516

Token 193: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.03666996583342552
    2. '/' → logprob: -3.536669969558716
    3. ')' → logprob: -5.411669731140137
    4. '/t' → logprob: -6.536669731140137
    5. ')/(' → logprob: -8.411669731140137
    6. 's' → logprob: -8.536669731140137
    7. '/x' → logprob: -8.911669731140137
    8. 't' → logprob: -9.161669731140137
    9. '#' → logprob: -9.786669731140137
    10. ')/' → logprob: -9.911669731140137

Token 194: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0001584850688232109
    2. ' t' → logprob: -8.750158309936523
    3. '	t' → logprob: -19.750158309936523
    4. 'x' → logprob: -20.000158309936523
    5. '(t' → logprob: -20.250158309936523
    6. ' ' → logprob: -20.625158309936523
    7. '`t' → logprob: -20.875158309936523
    8. '﻿' → logprob: -21.625158309936523
    9. '  ' → logprob: -22.000158309936523
    10. 'T' → logprob: -22.000158309936523

Token 195: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4270579814910889
    2. 'import' → logprob: -1.5520579814910889
    3. '
' → logprob: -1.5520579814910889
    4. 'def' → logprob: -1.5520579814910889
    5. '

' → logprob: -3.552057981491089
    6. ',' → logprob: -4.052058219909668
    7. '.' → logprob: -5.052058219909668
    8. '' → logprob: -5.177058219909668
    9. 'x' → logprob: -5.177058219909668
    10. 's' → logprob: -5.302058219909668

Token 196: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1894659548997879
    2. 'def' → logprob: -2.5644659996032715
    3. 'import' → logprob: -3.8144659996032715
    4. ')' → logprob: -4.3144659996032715
    5. '
' → logprob: -4.3144659996032715
    6. '.' → logprob: -4.8144659996032715
    7. ',' → logprob: -5.0644659996032715
    8. ' ' → logprob: -5.4394659996032715
    9. '#
' → logprob: -5.8144659996032715
    10. '\' → logprob: -5.9394659996032715

Token 197: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23665979504585266
    2. '#' → logprob: -1.8616597652435303
    3. 'import' → logprob: -3.8616597652435303
    4. 'H' → logprob: -4.736660003662109
    5. '
' → logprob: -5.361660003662109
    6. ' def' → logprob: -5.736660003662109
    7. ')' → logprob: -5.861660003662109
    8. 't' → logprob: -6.236660003662109
    9. ',' → logprob: -6.611660003662109
    10. '\' → logprob: -6.736660003662109

Token 198: ' Pour' (ID: 13931)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3215632140636444
    2. 'On' → logprob: -2.446563243865967
    3. 'Pour' → logprob: -2.946563243865967
    4. 'def' → logprob: -3.321563243865967
    5. ' #' → logprob: -3.821563243865967
    6. ' On' → logprob: -4.321563243865967
    7. 'La' → logprob: -4.446563243865967
    8. 'Le' → logprob: -4.821563243865967
    9. 'Il' → logprob: -4.946563243865967
    10. 'Si' → logprob: -5.196563243865967

Token 199: ' que' (ID: 661)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.9764387607574463
    2. ' que' → logprob: -1.3514387607574463
    3. ' assurer' → logprob: -2.2264387607574463
    4. ' s' → logprob: -2.4764387607574463
    5. ' garantir' → logprob: -2.7264387607574463
    6. 'que' → logprob: -3.7264387607574463
    7. 'tout' → logprob: -3.7264387607574463
    8. ' tout' → logprob: -4.101438522338867
    9. 's' → logprob: -4.851438522338867
    10. '#' → logprob: -5.226438522338867

Token 200: ' le' (ID: 505)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.4516938626766205
    2. ' le' → logprob: -1.8266938924789429
    3. ' aucun' → logprob: -2.9516937732696533
    4. ' tout' → logprob: -3.2016937732696533
    5. ' la' → logprob: -3.5766937732696533
    6. 'tout' → logprob: -3.8266937732696533
    7. ' tous' → logprob: -3.9516937732696533
    8. 'auc' → logprob: -4.701694011688232
    9. ' y' → logprob: -4.826694011688232
    10. 'le' → logprob: -5.076694011688232

Token 201: ' bâtiment' (ID: 92976)
  Prédit: ' bâtiment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bâtiment' → logprob: -0.306343138217926
    2. 'b' → logprob: -2.6813430786132812
    3. ' sommet' → logprob: -3.3063430786132812
    4. 'don' → logprob: -3.8063430786132812
    5. 'ligne' → logprob: -4.181343078613281
    6. 'vue' → logprob: -4.306343078613281
    7. ' code' → logprob: -4.556343078613281
    8. ' point' → logprob: -4.806343078613281
    9. 'point' → logprob: -5.056343078613281
    10. 'y' → logprob: -5.243843078613281

Token 202: ' ne' (ID: 453)
  Prédit: ' ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.410113662481308
    2. ' soit' → logprob: -1.4101136922836304
    3. 'so' → logprob: -2.910113573074341
    4. 's' → logprob: -4.03511381149292
    5. 'ne' → logprob: -5.03511381149292
    6. '#' → logprob: -5.28511381149292
    7. ' n' → logprob: -5.41011381149292
    8. 'n' → logprob: -6.16011381149292
    9. ' so' → logprob: -8.035113334655762
    10. ' #' → logprob: -8.410113334655762

Token 203: ' cache' (ID: 11956)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.28866055607795715
    2. ' soit' → logprob: -1.4136605262756348
    3. 'p' → logprob: -6.413660526275635
    4. 'ob' → logprob: -6.413660526275635
    5. 's' → logprob: -6.663660526275635
    6. ' dépasse' → logprob: -7.038660526275635
    7. 'g' → logprob: -8.163661003112793
    8. 'c' → logprob: -8.538661003112793
    9. ' so' → logprob: -8.538661003112793
    10. 'b' → logprob: -8.538661003112793

Token 204: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.03874586895108223
    2. 'pas' → logprob: -4.038745880126953
    3. 'r' → logprob: -4.163745880126953
    4. ' aucun' → logprob: -6.038745880126953
    5. ' rien' → logprob: -6.788745880126953
    6. 'e' → logprob: -7.038745880126953
    7. ' aucune' → logprob: -8.288745880126953
    8. 's' → logprob: -9.663745880126953
    9. ' ' → logprob: -10.038745880126953
    10. ' r' → logprob: -11.038745880126953

Token 205: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.28184887766838074
    2. ' la' → logprob: -1.4068489074707031
    3. 'le' → logprob: -8.281848907470703
    4. 'l' → logprob: -9.156848907470703
    5. ' cette' → logprob: -9.156848907470703
    6. 'the' → logprob: -9.781848907470703
    7. ' le' → logprob: -10.156848907470703
    8. '#' → logprob: -10.656848907470703
    9. 'c' → logprob: -11.156848907470703
    10. 'vue' → logprob: -11.531848907470703

Token 206: ' vue' (ID: 30721)
  Prédit: ' vue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vue' → logprob: -0.553382396697998
    2. 'vue' → logprob: -0.928382396697998
    3. ' ligne' → logprob: -4.428382396697998
    4. 'ligne' → logprob: -4.428382396697998
    5. 'v' → logprob: -6.053382396697998
    6. ' ' → logprob: -7.303382396697998
    7. ' Vue' → logprob: -7.303382396697998
    8. '_vue' → logprob: -8.303382873535156
    9. '   ' → logprob: -8.553382873535156
    10. 'vie' → logprob: -8.553382873535156

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012147335335612297
    2. ' ,' → logprob: -5.012147426605225
    3. '#' → logprob: -6.012147426605225
    4. ' du' → logprob: -7.137147426605225
    5. ' de' → logprob: -8.262146949768066
    6. 'du' → logprob: -8.387146949768066
    7. ' #' → logprob: -8.512146949768066
    8. ' au' → logprob: -8.637146949768066
    9. ' à' → logprob: -8.762146949768066
    10. '   ' → logprob: -8.762146949768066

Token 208: ' il' (ID: 1793)
  Prédit: ' il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' il' → logprob: -0.07139696180820465
    2. 'il' → logprob: -3.821397066116333
    3. ' on' → logprob: -3.946397066116333
    4. ' H' → logprob: -4.321396827697754
    5. 'H' → logprob: -5.071396827697754
    6. ' y' → logprob: -5.446396827697754
    7. 'y' → logprob: -6.071396827697754
    8. 'on' → logprob: -7.571396827697754
    9. ' la' → logprob: -8.196396827697754
    10. '#' → logprob: -8.571396827697754

Token 209: ' faut' (ID: 17821)
  Prédit: ' faut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faut' → logprob: -0.04549063742160797
    2. 'f' → logprob: -3.1704907417297363
    3. '<' → logprob: -6.545490741729736
    4. ' doit' → logprob: -7.920490741729736
    5. ' f' → logprob: -8.545490264892578
    6. '<f' → logprob: -8.795490264892578
    7. ' <' → logprob: -9.420490264892578
    8. '<=' → logprob: -9.670490264892578
    9. ' faudrait' → logprob: -9.795490264892578
    10. ' faudra' → logprob: -10.420490264892578

Token 210: ' h' (ID: 312)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.17463696002960205
    2. ' y' → logprob: -2.5496368408203125
    3. 'y' → logprob: -3.0496368408203125
    4. ' ' → logprob: -4.6746368408203125
    5. 'que' → logprob: -4.7996368408203125
    6. '#' → logprob: -5.5496368408203125
    7. 'H' → logprob: -5.9246368408203125
    8. ' H' → logprob: -6.0496368408203125
    9. ' avoir' → logprob: -6.0496368408203125
    10. 'avoir' → logprob: -6.1746368408203125

Token 211: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00044556602369993925
    2. 'i' → logprob: -7.750445365905762
    3. '_' → logprob: -11.625445365905762
    4. '[i' → logprob: -12.500445365905762
    5. '<' → logprob: -14.500445365905762
    6. ' i' → logprob: -15.125445365905762
    7. '<i' → logprob: -15.625445365905762
    8. 'e' → logprob: -15.750445365905762
    9. '(i' → logprob: -15.875445365905762
    10. ' <' → logprob: -15.875445365905762

Token 212: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5767492055892944
    2. '<' → logprob: -0.8267492055892944
    3. ' <=' → logprob: -7.451749324798584
    4. '<=' → logprob: -8.451748847961426
    5. '>' → logprob: -12.576748847961426
    6. ' *' → logprob: -12.951748847961426
    7. '*' → logprob: -13.076748847961426
    8. ' >' → logprob: -13.076748847961426
    9. '+' → logprob: -13.701748847961426
    10. ' ' → logprob: -14.826748847961426

Token 213: ' y' (ID: 342)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.3314244747161865
    2. 'y' → logprob: -1.3314244747161865
    3. ' y' → logprob: -1.3314244747161865
    4. ' H' → logprob: -1.5814244747161865
    5. ' ' → logprob: -6.581424713134766
    6. '=' → logprob: -8.081424713134766
    7. ' ' → logprob: -9.081424713134766
    8. '  ' → logprob: -10.206424713134766
    9. 'Y' → logprob: -10.331424713134766
    10. ' (' → logprob: -10.581424713134766

Token 214: ' (' (ID: 350)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.36143022775650024
    2. 'def' → logprob: -1.7364301681518555
    3. 'import' → logprob: -2.8614301681518555
    4. '<|end|>' → logprob: -3.9864301681518555
    5. '
' → logprob: -4.2364301681518555
    6. '<|end|>' → logprob: -4.9864301681518555
    7. ',' → logprob: -5.1114301681518555
    8. '\' → logprob: -5.7364301681518555
    9. '

' → logprob: -6.2364301681518555
    10. '\n' → logprob: -6.2364301681518555

Token 215: 'le' (ID: 282)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06322101503610611
    2. ').' → logprob: -2.938220977783203
    3. ' )' → logprob: -4.938220977783203
    4. '#' → logprob: -8.063220977783203
    5. '.' → logprob: -8.063220977783203
    6. ' ).' → logprob: -8.438220977783203
    7. '),' → logprob: -9.313220977783203
    8. ')
' → logprob: -10.313220977783203
    9. ' ' → logprob: -11.063220977783203
    10. '):' → logprob: -11.063220977783203

Token 216: ' bâtiment' (ID: 92976)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12744519114494324
    2. ' )' → logprob: -3.2524452209472656
    3. 'es' → logprob: -4.252445220947266
    4. ' ' → logprob: -4.502445220947266
    5. '<|end|>' → logprob: -4.627445220947266
    6. 's' → logprob: -4.752445220947266
    7. ' espace' → logprob: -4.752445220947266
    8. '#' → logprob: -5.002445220947266
    9. 'space' → logprob: -5.877445220947266
    10. '=' → logprob: -6.002445220947266

Token 217: ' doit' (ID: 21822)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31055018305778503
    2. ' ne' → logprob: -1.5605502128601074
    3. ' )' → logprob: -4.435550212860107
    4. ' n' → logprob: -4.560550212860107
    5. 's' → logprob: -4.560550212860107
    6. 'n' → logprob: -4.810550212860107
    7. 'ne' → logprob: -5.185550212860107
    8. '#' → logprob: -5.810550212860107
    9. ' doit' → logprob: -6.685550212860107
    10. ')n' → logprob: -7.185550212860107

Token 218: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.5162751078605652
    2. 'être' → logprob: -1.26627516746521
    3. 'pas' → logprob: -2.89127516746521
    4. ')' → logprob: -3.64127516746521
    5. ' pas' → logprob: -4.391274929046631
    6. ' rester' → logprob: -4.391274929046631
    7. 's' → logprob: -6.016274929046631
    8. ' ' → logprob: -6.141274929046631
    9. 'strict' → logprob: -6.641274929046631
    10. 'pass' → logprob: -6.766274929046631

Token 219: ' strict' (ID: 12035)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strict' → logprob: -0.03745856136083603
    2. 'en' → logprob: -3.537458658218384
    3. 'plus' → logprob: -5.662458419799805
    4. 'inf' → logprob: -6.662458419799805
    5. ' strict' → logprob: -6.787458419799805
    6. ' en' → logprob: -7.287458419799805
    7. ' strictly' → logprob: -8.412458419799805
    8. 'visible' → logprob: -8.537458419799805
    9. 's' → logprob: -9.287458419799805
    10. 'au' → logprob: -9.412458419799805

Token 220: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.00027432903880253434
    2. 'ment' → logprob: -9.375274658203125
    3. 'ly' → logprob: -9.750274658203125
    4. '<' → logprob: -9.875274658203125
    5. 'e' → logprob: -10.375274658203125
    6. '>' → logprob: -10.500274658203125
    7. 'lement' → logprob: -11.625274658203125
    8. 'emment' → logprob: -12.875274658203125
    9. 'em' → logprob: -13.250274658203125
    10. 'EMENT' → logprob: -13.875274658203125

Token 221: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.3655400574207306
    2. 'inf' → logprob: -1.6155400276184082
    3. ' en' → logprob: -2.365540027618408
    4. ' inférieur' → logprob: -5.115540027618408
    5. ' inf' → logprob: -5.615540027618408
    6. 'below' → logprob: -6.865540027618408
    7. 'plus' → logprob: -6.990540027618408
    8. 'infer' → logprob: -7.365540027618408
    9. ' sous' → logprob: -8.490540504455566
    10. ' dessous' → logprob: -8.615540504455566

Token 222: '-dessous' (ID: 76632)
  Prédit: 'dess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dess' → logprob: -0.027873706072568893
    2. ' dessous' → logprob: -4.027873516082764
    3. '-dessous' → logprob: -4.652873516082764
    4. 'd' → logprob: -10.027873992919922
    5. 'de' → logprob: -10.027873992919922
    6. '-' → logprob: -11.277873992919922
    7. '-dessus' → logprob: -11.527873992919922
    8. ' ' → logprob: -12.277873992919922
    9. 'bas' → logprob: -12.527873992919922
    10. ' dessus' → logprob: -12.777873992919922

Token 223: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1312635838985443
    2. ' )' → logprob: -2.131263494491577
    3. ' de' → logprob: -5.756263732910156
    4. ' du' → logprob: -7.131263732910156
    5. '<|end|>' → logprob: -9.881263732910156
    6. 'de' → logprob: -10.006263732910156
    7. '.' → logprob: -10.131263732910156
    8. ' ' → logprob: -10.131263732910156
    9. ' ' → logprob: -10.631263732910156
    10. '),' → logprob: -10.631263732910156

Token 224: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.1623440682888031
    2. ')' → logprob: -2.787343978881836
    3. 'la' → logprob: -3.662343978881836
    4. ' )' → logprob: -4.162343978881836
    5. 'the' → logprob: -4.162343978881836
    6. '<|end|>' → logprob: -4.537343978881836
    7. ' y' → logprob: -5.162343978881836
    8. 'l' → logprob: -5.412343978881836
    9. ' l' → logprob: -5.662343978881836
    10. ' the' → logprob: -6.162343978881836

Token 225: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.5690883994102478
    2. 'ligne' → logprob: -0.9440883994102478
    3. ' droite' → logprob: -4.444088459014893
    4. ' vue' → logprob: -4.694088459014893
    5. 'dro' → logprob: -4.819088459014893
    6. 'vue' → logprob: -4.944088459014893
    7. ' hauteur' → logprob: -6.569088459014893
    8. 'ha' → logprob: -6.694088459014893
    9. ' ' → logprob: -7.069088459014893
    10. ')' → logprob: -7.444088459014893

Token 226: ' de' (ID: 334)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.5473946928977966
    2. ')' → logprob: -0.9223946928977966
    3. ' de' → logprob: -4.672394752502441
    4. '\n' → logprob: -4.672394752502441
    5. '\' → logprob: -7.047394752502441
    6. ' \' → logprob: -7.047394752502441
    7. ' ' → logprob: -7.297394752502441
    8. ' y' → logprob: -7.672394752502441
    9. ' ' → logprob: -8.172394752502441
    10. ' ),' → logprob: -8.297394752502441

Token 227: ' vue' (ID: 30721)
  Prédit: 'vue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vue' → logprob: -0.009410256519913673
    2. ' vue' → logprob: -4.759410381317139
    3. 'vision' → logprob: -7.759410381317139
    4. 'vie' → logprob: -9.25940990447998
    5. '```' → logprob: -9.38440990447998
    6. '_vue' → logprob: -10.63440990447998
    7. 'vis' → logprob: -10.75940990447998
    8. 'v' → logprob: -10.88440990447998
    9. '

' → logprob: -11.00940990447998
    10. 'view' → logprob: -11.25940990447998

Token 228: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011609221808612347
    2. ' )' → logprob: -5.636609077453613
    3. '.' → logprob: -6.261609077453613
    4. '#' → logprob: -6.261609077453613
    5. ').' → logprob: -6.261609077453613
    6. ',' → logprob: -7.011609077453613
    7. 's' → logprob: -7.636609077453613
    8. ')
' → logprob: -8.136609077453613
    9. ')

' → logprob: -9.011609077453613
    10. '):' → logprob: -9.511609077453613

Token 229: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.003939363639801741
    2. ' #' → logprob: -7.128939151763916
    3. 'import' → logprob: -7.253939151763916
    4. '.' → logprob: -7.753939151763916
    5. '\' → logprob: -8.253939628601074
    6. 'et' → logprob: -9.003939628601074
    7. 'def' → logprob: -9.128939628601074
    8. ',' → logprob: -9.128939628601074
    9. ' ' → logprob: -9.128939628601074
    10. '#
' → logprob: -9.253939628601074

Token 230: '  ' (ID: 256)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.044872086495161057
    2. 'def' → logprob: -3.9198720455169678
    3. 'import' → logprob: -4.419872283935547
    4. ' #' → logprob: -5.169872283935547
    5. ' ' → logprob: -6.794872283935547
    6. '.' → logprob: -7.294872283935547
    7. ' H' → logprob: -7.294872283935547
    8. 'H' → logprob: -7.419872283935547
    9. 'x' → logprob: -7.794872283935547
    10. ',' → logprob: -7.919872283935547

Token 231: ' ou' (ID: 2031)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.024925345554947853
    2. ' donc' → logprob: -5.024925231933594
    3. 'import' → logprob: -5.399925231933594
    4. ' #' → logprob: -5.524925231933594
    5. ' ' → logprob: -6.524925231933594
    6. ' ce' → logprob: -6.774925231933594
    7. ' H' → logprob: -7.274925231933594
    8. 't' → logprob: -7.524925231933594
    9. ' il' → logprob: -7.524925231933594
    10. '.' → logprob: -7.649925231933594

Token 232: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -1.019521713256836
    2. ' égal' → logprob: -1.519521713256836
    3. ' =' → logprob: -2.644521713256836
    4. '=' → logprob: -2.644521713256836
    5. ' H' → logprob: -3.144521713256836
    6. '#' → logprob: -3.269521713256836
    7. ' au' → logprob: -3.894521713256836
    8. 'h' → logprob: -4.019521713256836
    9. ' alors' → logprob: -4.019521713256836
    10. ' #' → logprob: -4.144521713256836

Token 233: '_i' (ID: 10853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5569024682044983
    2. '_i' → logprob: -1.0569024085998535
    3. ' <=' → logprob: -3.4319024085998535
    4. '=' → logprob: -4.0569024085998535
    5. ' =' → logprob: -4.4319024085998535
    6. ' _' → logprob: -5.6819024085998535
    7. ' <' → logprob: -5.9319024085998535
    8. '<=' → logprob: -6.0569024085998535
    9. 'i' → logprob: -6.1819024085998535
    10. '>' → logprob: -6.9319024085998535

Token 234: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.19581767916679382
    2. ' <' → logprob: -2.320817708969116
    3. '<=' → logprob: -2.945817708969116
    4. '<' → logprob: -5.070817470550537
    5. ' >' → logprob: -5.445817470550537
    6. '>' → logprob: -5.945817470550537
    7. '+' → logprob: -6.070817470550537
    8. '_' → logprob: -6.195817470550537
    9. '=' → logprob: -6.195817470550537
    10. ' ≤' → logprob: -6.320817470550537

Token 235: ' y' (ID: 342)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0578864812850952
    2. ' y' → logprob: -1.4328864812850952
    3. ' H' → logprob: -1.6828864812850952
    4. ' ' → logprob: -2.1828866004943848
    5. 'y' → logprob: -2.8078866004943848
    6. 'H' → logprob: -2.9328866004943848
    7. ' h' → logprob: -7.995386600494385
    8. ' (' → logprob: -8.120386123657227
    9. 'h' → logprob: -8.432886123657227
    10. 'Y' → logprob: -8.870386123657227

Token 236: ' si' (ID: 1784)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7895478010177612
    2. '#' → logprob: -1.7895478010177612
    3. 'import' → logprob: -2.664547920227051
    4. '

' → logprob: -2.914547920227051
    5. 's' → logprob: -3.164547920227051
    6. ',' → logprob: -3.289547920227051
    7. 'strict' → logprob: -3.539547920227051
    8. '
' → logprob: -3.914547920227051
    9. ' =' → logprob: -4.164547920227051
    10. '```' → logprob: -4.539547920227051

Token 237: ' l' (ID: 305)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.40647098422050476
    2. ' l' → logprob: -2.906471014022827
    3. ' le' → logprob: -3.031471014022827
    4. ' h' → logprob: -3.156471014022827
    5. 'on' → logprob: -3.281471014022827
    6. ' la' → logprob: -4.031470775604248
    7. 'h' → logprob: -4.281470775604248
    8. ' strict' → logprob: -4.281470775604248
    9. ' t' → logprob: -4.531470775604248
    10. 'x' → logprob: -4.656470775604248

Token 238: ''inter' (ID: 55731)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9522953033447266
    2. ''on' → logprob: -0.9522953033447266
    3. ''' → logprob: -2.9522953033447266
    4. 'e' → logprob: -2.9522953033447266
    5. ''espace' → logprob: -3.3272953033447266
    6. ' y' → logprob: -4.452295303344727
    7. ''utilisateur' → logprob: -4.952295303344727
    8. '#' → logprob: -5.077295303344727
    9. ' on' → logprob: -5.202295303344727
    10. ''application' → logprob: -5.202295303344727

Token 239: 'section' (ID: 6471)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -1.211403489112854
    2. 'pr' → logprob: -1.711403489112854
    3. 'section' → logprob: -1.711403489112854
    4. 'polation' → logprob: -1.961403489112854
    5. 'pret' → logprob: -2.8364033699035645
    6. 'ruption' → logprob: -3.2114033699035645
    7. 'val' → logprob: -3.3364033699035645
    8. 'd' → logprob: -3.8364033699035645
    9. '#' → logprob: -4.9614033699035645
    10. 'up' → logprob: -5.0864033699035645

Token 240: ' en' (ID: 469)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.8951436877250671
    2. ' se' → logprob: -1.770143747329712
    3. ' n' → logprob: -2.145143747329712
    4. 'n' → logprob: -2.520143747329712
    5. ' strict' → logprob: -2.520143747329712
    6. 'strict' → logprob: -3.520143747329712
    7. ' is' → logprob: -3.895143747329712
    8. 's' → logprob: -4.395143508911133
    9. 'est' → logprob: -4.895143508911133
    10. ' de' → logprob: -5.270143508911133

Token 241: ' hauteur' (ID: 72987)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7271194458007812
    2. ' x' → logprob: -0.7271194458007812
    3. ' t' → logprob: -4.977119445800781
    4. 't' → logprob: -5.352119445800781
    5. ' ' → logprob: -5.477119445800781
    6. ' y' → logprob: -5.727119445800781
    7. 'y' → logprob: -6.352119445800781
    8. ' (' → logprob: -6.352119445800781
    9. 'b' → logprob: -6.477119445800781
    10. '0' → logprob: -6.852119445800781

Token 242: ' sur' (ID: 1512)
  Prédit: ' strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' strict' → logprob: -0.796984076499939
    2. 'strict' → logprob: -1.296984076499939
    3. '<|end|>' → logprob: -2.6719841957092285
    4. ' n' → logprob: -2.7969841957092285
    5. ' est' → logprob: -3.2969841957092285
    6. '#' → logprob: -3.4219841957092285
    7. 'n' → logprob: -3.6719841957092285
    8. ' stric' → logprob: -5.2969841957092285
    9. ' strictly' → logprob: -5.4219841957092285
    10. ' ne' → logprob: -5.5469841957092285

Token 243: ' le' (ID: 505)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.31755751371383667
    2. 'x' → logprob: -1.5675575733184814
    3. ' la' → logprob: -3.3175575733184814
    4. ' l' → logprob: -4.942557334899902
    5. ' cette' → logprob: -5.192557334899902
    6. 'l' → logprob: -5.442557334899902
    7. ' le' → logprob: -5.692557334899902
    8. ' ce' → logprob: -6.192557334899902
    9. 't' → logprob: -7.317557334899902
    10. 'la' → logprob: -7.442557334899902

Token 244: ' sommet' (ID: 130502)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.5365513563156128
    2. 'x' → logprob: -2.2865514755249023
    3. 'bord' → logprob: -2.2865514755249023
    4. ' sommet' → logprob: -2.2865514755249023
    5. ' même' → logprob: -2.4115514755249023
    6. 'point' → logprob: -2.5365514755249023
    7. 'm' → logprob: -2.7865514755249023
    8. 'ligne' → logprob: -2.9115514755249023
    9. 'mur' → logprob: -3.2865514755249023
    10. 'c' → logprob: -3.5365514755249023

Token 245: ' est' (ID: 893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 246: ' accept' (ID: 5923)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strict' → logprob: -0.0751609206199646
    2. ' strict' → logprob: -3.9501609802246094
    3. 'inf' → logprob: -4.575160980224609
    4. 'h' → logprob: -5.075160980224609
    5. '>' → logprob: -5.200160980224609
    6. '<' → logprob: -5.325160980224609
    7. 'ég' → logprob: -6.075160980224609
    8. 'str' → logprob: -6.200160980224609
    9. 'exact' → logprob: -6.450160980224609
    10. 'incl' → logprob: -6.700160980224609

Token 247: 'ée' (ID: 2894)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2336687594652176
    2. ')' → logprob: -2.483668804168701
    3. '

' → logprob: -4.233668804168701
    4. 'import' → logprob: -4.483668804168701
    5. '
' → logprob: -4.483668804168701
    6. '<|end|>' → logprob: -4.608668804168701
    7. ',' → logprob: -4.733668804168701
    8. '.' → logprob: -4.858668804168701
    9. 'H' → logprob: -5.233668804168701
    10. 'def' → logprob: -5.421168804168701

Token 248: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.46853047609329224
    2. '#' → logprob: -1.2185304164886475
    3. 'import' → logprob: -3.0935304164886475
    4. '.' → logprob: -4.968530654907227
    5. '
' → logprob: -5.593530654907227
    6. ' ' → logprob: -5.718530654907227
    7. ')' → logprob: -6.093530654907227
    8. ',' → logprob: -6.343530654907227
    9. ' def' → logprob: -6.343530654907227
    10. ':' → logprob: -6.593530654907227

Token 249: ' mais' (ID: 2899)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04816780611872673
    2. 'def' → logprob: -4.173167705535889
    3. 'import' → logprob: -4.673167705535889
    4. 't' → logprob: -5.173167705535889
    5. 'H' → logprob: -5.423167705535889
    6. ' #' → logprob: -6.048167705535889
    7. ' H' → logprob: -6.173167705535889
    8. ')' → logprob: -6.548167705535889
    9. ' ' → logprob: -6.798167705535889
    10. 'x' → logprob: -7.423167705535889

Token 250: ' ici' (ID: 27994)
  Prédit: ' ici'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ici' → logprob: -0.18913321197032928
    2. 'non' → logprob: -2.6891331672668457
    3. 'ici' → logprob: -3.3141331672668457
    4. ' non' → logprob: -4.314133167266846
    5. ' pas' → logprob: -4.439133167266846
    6. 'strict' → logprob: -4.689133167266846
    7. ' dans' → logprob: -4.814133167266846
    8. '#' → logprob: -5.314133167266846
    9. 'h' → logprob: -5.439133167266846
    10. 'dans' → logprob: -5.439133167266846

Token 251: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.849423348903656
    2. 'strict' → logprob: -1.2244234085083008
    3. ' il' → logprob: -2.599423408508301
    4. 'on' → logprob: -3.099423408508301
    5. ' strict' → logprob: -3.474423408508301
    6. 'h' → logprob: -3.474423408508301
    7. ' le' → logprob: -3.974423408508301
    8. 'le' → logprob: -4.099423408508301
    9. ' h' → logprob: -4.099423408508301
    10. 'il' → logprob: -4.224423408508301

Token 252: ' excl' (ID: 57282)
  Prédit: ' veut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' veut' → logprob: -0.7110396027565002
    2. ' prend' → logprob: -1.9610395431518555
    3. 'ne' → logprob: -2.0860395431518555
    4. ' chois' → logprob: -3.0860395431518555
    5. ' cherche' → logprob: -3.5860395431518555
    6. ' souhaite' → logprob: -3.5860395431518555
    7. ' considère' → logprob: -4.0860395431518555
    8. ' ne' → logprob: -4.4610395431518555
    9. 'pr' → logprob: -4.4610395431518555
    10. 'cherche' → logprob: -4.5860395431518555

Token 253: 'ue' (ID: 466)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5421080589294434
    2. 'ue' → logprob: -1.0421080589294434
    3. 'ué' → logprob: -3.5421080589294434
    4. 'ut' → logprob: -3.6671080589294434
    5. 'uée' → logprob: -5.542108058929443
    6. 'ure' → logprob: -5.917108058929443
    7. 'ude' → logprob: -7.292108058929443
    8. 'ud' → logprob: -7.917108058929443
    9. '#' → logprob: -8.417108535766602
    10. 'uant' → logprob: -8.417108535766602

Token 254: ' les' (ID: 1341)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.4001573324203491
    2. ' l' → logprob: -1.7751573324203491
    3. 'strict' → logprob: -2.0251574516296387
    4. ' la' → logprob: -2.1501574516296387
    5. ' strict' → logprob: -2.1501574516296387
    6. 'l' → logprob: -2.7751574516296387
    7. 'le' → logprob: -3.1501574516296387
    8. ' toute' → logprob: -3.4001574516296387
    9. ' le' → logprob: -4.025157451629639
    10. ' les' → logprob: -4.400157451629639

Token 255: ' intersections' (ID: 143513)
  Prédit: ' égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' égal' → logprob: -0.562153160572052
    2. 'égal' → logprob: -1.4371531009674072
    3. 'égalité' → logprob: -2.1871531009674072
    4. 'ég' → logprob: -2.9371531009674072
    5. 'cas' → logprob: -4.812153339385986
    6. '=' → logprob: -4.937153339385986
    7. 'b' → logprob: -6.062153339385986
    8. ' ég' → logprob: -6.187153339385986
    9. 'egal' → logprob: -6.187153339385986
    10. ' ' → logprob: -6.562153339385986

Token 256: ' sauf' (ID: 87919)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.8756884932518005
    2. '
' → logprob: -1.1256885528564453
    3. 'def' → logprob: -2.2506885528564453
    4. 'import' → logprob: -2.8756885528564453
    5. '


' → logprob: -4.000688552856445
    6. '
' → logprob: -4.250688552856445
    7. '

' → logprob: -4.500688552856445
    8. '
 
' → logprob: -4.625688552856445
    9. '#' → logprob: -4.750688552856445
    10. '\n' → logprob: -5.125688552856445

Token 257: ' au' (ID: 2791)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strict' → logprob: -0.32213133573532104
    2. ' strict' → logprob: -1.5721313953399658
    3. 'cas' → logprob: -4.322131156921387
    4. 'le' → logprob: -4.322131156921387
    5. ' le' → logprob: -4.947131156921387
    6. ' au' → logprob: -5.072131156921387
    7. ' la' → logprob: -5.822131156921387
    8. ' l' → logprob: -5.822131156921387
    9. ' si' → logprob: -6.072131156921387
    10. 'dans' → logprob: -6.322131156921387

Token 258: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -1.2096425294876099
    2. 'sol' → logprob: -1.4596425294876099
    3. 'point' → logprob: -1.8346425294876099
    4. 'som' → logprob: -1.9596425294876099
    5. '0' → logprob: -2.5846424102783203
    6. ' point' → logprob: -3.4596424102783203
    7. 'bas' → logprob: -4.20964241027832
    8. 'don' → logprob: -4.33464241027832
    9. '(' → logprob: -4.58464241027832
    10. 'x' → logprob: -5.45964241027832

Token 259: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18346568942070007
    2. '
' → logprob: -2.3084657192230225
    3. '

' → logprob: -3.0584657192230225
    4. 'import' → logprob: -4.808465480804443
    5. ' 
' → logprob: -6.058465480804443
    6. ' 

' → logprob: -6.558465480804443
    7. '#' → logprob: -6.558465480804443
    8. ' def' → logprob: -6.683465480804443
    9. '
 
' → logprob: -6.808465480804443
    10. '\' → logprob: -7.058465480804443

Token 260: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2626517415046692
    2. 'la' → logprob: -1.5126516819000244
    3. 'tour' → logprob: -5.3876519203186035
    4. ' tour' → logprob: -6.1376519203186035
    5. 'l' → logprob: -6.8876519203186035
    6. 't' → logprob: -7.0126519203186035
    7. 'don' → logprob: -7.5126519203186035
    8. ' l' → logprob: -7.8876519203186035
    9. '#' → logprob: -8.637651443481445
    10. ' ' → logprob: -8.825151443481445

Token 261: ' tour' (ID: 6970)
  Prédit: 'tour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tour' → logprob: -0.37337198853492737
    2. 'don' → logprob: -1.248371958732605
    3. ' tour' → logprob: -3.8733720779418945
    4. 'tower' → logprob: -6.7483720779418945
    5. ' don' → logprob: -6.9983720779418945
    6. 'tor' → logprob: -7.3733720779418945
    7. 'vue' → logprob: -8.935872077941895
    8. 'ligne' → logprob: -8.998372077941895
    9. 'd' → logprob: -9.123372077941895
    10. ' tower' → logprob: -9.185872077941895

Token 262: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9980700016021729
    2. '
' → logprob: -1.4980700016021729
    3. '#' → logprob: -1.6230700016021729
    4. ',
' → logprob: -3.248070001602173
    5. ' 
' → logprob: -3.373070001602173
    6. 'import' → logprob: -3.498070001602173
    7. '

' → logprob: -4.623069763183594
    8. '\' → logprob: -4.748069763183594
    9. '\n' → logprob: -4.873069763183594
    10. 'H' → logprob: -4.873069763183594

Token 263: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.025637522339820862
    2. 'import' → logprob: -3.900637626647949
    3. '
' → logprob: -6.275637626647949
    4. ' 
' → logprob: -7.025637626647949
    5. '#' → logprob: -7.275637626647949
    6. '```' → logprob: -7.775637626647949
    7. '

' → logprob: -8.27563762664795
    8. 'from' → logprob: -8.40063762664795
    9. ' def' → logprob: -8.40063762664795
    10. '  
' → logprob: -9.27563762664795

Token 264: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005232221446931362
    2. ' def' → logprob: -6.380232334136963
    3. 'import' → logprob: -6.630232334136963
    4. '#' → logprob: -7.130232334136963
    5. '
' → logprob: -7.380232334136963
    6. ' 
' → logprob: -7.630232334136963
    7. '\' → logprob: -9.755231857299805
    8. '```' → logprob: -9.880231857299805
    9. '

' → logprob: -10.255231857299805
    10. '  
' → logprob: -10.880231857299805

Token 265: ' Comme' (ID: 53252)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015934066846966743
    2. 'import' → logprob: -4.515933990478516
    3. ' def' → logprob: -5.890933990478516
    4. 'from' → logprob: -6.265933990478516
    5. '#' → logprob: -9.390933990478516
    6. ' import' → logprob: -10.015933990478516
    7. ' from' → logprob: -10.265933990478516
    8. 't' → logprob: -11.015933990478516
    9. '
' → logprob: -11.890933990478516
    10. '```' → logprob: -12.015933990478516

Token 266: ' la' (ID: 557)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.7124606370925903
    2. ' la' → logprob: -1.3374606370925903
    3. 'H' → logprob: -2.462460517883301
    4. ' on' → logprob: -2.462460517883301
    5. ' le' → logprob: -3.587460517883301
    6. ' l' → logprob: -4.462460517883301
    7. 'le' → logprob: -5.087460517883301
    8. ' les' → logprob: -5.212460517883301
    9. 'la' → logprob: -5.337460517883301
    10. ' y' → logprob: -5.462460517883301

Token 267: ' hauteur' (ID: 72987)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.7404509782791138
    2. ' hauteur' → logprob: -0.9904509782791138
    3. '#' → logprob: -3.490450859069824
    4. ' solution' → logprob: -3.990450859069824
    5. 'tour' → logprob: -3.990450859069824
    6. ' ligne' → logprob: -4.615450859069824
    7. ' tour' → logprob: -4.615450859069824
    8. 'ligne' → logprob: -5.115450859069824
    9. 'h' → logprob: -5.365450859069824
    10. ' vue' → logprob: -5.365450859069824

Token 268: ' du' (ID: 1462)
  Prédit: ' minimale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimale' → logprob: -0.6549035310745239
    2. ' H' → logprob: -1.154903531074524
    3. ' de' → logprob: -2.4049034118652344
    4. 'H' → logprob: -3.0299034118652344
    5. ' minimal' → logprob: -5.029903411865234
    6. 'min' → logprob: -5.404903411865234
    7. ' ' → logprob: -5.404903411865234
    8. ' maximale' → logprob: -6.279903411865234
    9. ' du' → logprob: -6.404903411865234
    10. 'minimum' → logprob: -6.904903411865234

Token 269: ' don' (ID: 1700)
  Prédit: ' bâtiment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bâtiment' → logprob: -0.3123488426208496
    2. 'don' → logprob: -2.1873488426208496
    3. 'b' → logprob: -2.6873488426208496
    4. ' sommet' → logprob: -4.18734884262085
    5. '#' → logprob: -4.56234884262085
    6. 't' → logprob: -4.68734884262085
    7. 'tour' → logprob: -5.06234884262085
    8. ' don' → logprob: -5.56234884262085
    9. 'bat' → logprob: -5.56234884262085
    10. 'terrain' → logprob: -5.68734884262085

Token 270: 'jon' (ID: 11016)
  Prédit: 'jon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jon' → logprob: -0.0008539431728422642
    2. 'j' → logprob: -7.875854015350342
    3. 'jou' → logprob: -9.250853538513184
    4. '#' → logprob: -9.500853538513184
    5. 'jun' → logprob: -9.625853538513184
    6. 'jour' → logprob: -10.125853538513184
    7. 'jeu' → logprob: -10.625853538513184
    8. 'g' → logprob: -10.750853538513184
    9. 'jons' → logprob: -10.875853538513184
    10. 'jn' → logprob: -10.875853538513184

Token 271: ' en' (ID: 469)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.6154098510742188
    2. '#' → logprob: -2.2404098510742188
    3. 't' → logprob: -2.4904098510742188
    4. ' (' → logprob: -2.8654098510742188
    5. 'est' → logprob: -2.8654098510742188
    6. ' t' → logprob: -3.7404098510742188
    7. ' et' → logprob: -4.240409851074219
    8. '(t' → logprob: -4.240409851074219
    9. ' n' → logprob: -4.615409851074219
    10. ' tower' → logprob: -4.740409851074219

Token 272: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11951800435781479
    2. 't' → logprob: -2.8695180416107178
    3. ' ' → logprob: -3.7445180416107178
    4. 'x' → logprob: -4.994517803192139
    5. ' t' → logprob: -4.994517803192139
    6. 'position' → logprob: -4.994517803192139
    7. 'bas' → logprob: -5.994517803192139
    8. ' x' → logprob: -6.494517803192139
    9. ' position' → logprob: -6.869517803192139
    10. '#' → logprob: -6.994517803192139

Token 273: '0' (ID: 15)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.47821155190467834
    2. '0' → logprob: -1.103211522102356
    3. 'position' → logprob: -3.6032116413116455
    4. 'x' → logprob: -4.478211402893066
    5. '#' → logprob: -5.353211402893066
    6. ' ' → logprob: -6.603211402893066
    7. ' t' → logprob: -6.853211402893066
    8. 'bas' → logprob: -7.603211402893066
    9. ' position' → logprob: -8.728211402893066
    10. 'pos' → logprob: -8.853211402893066

Token 274: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.1586350053548813
    2. ' n' → logprob: -2.908634901046753
    3. 'est' → logprob: -3.658634901046753
    4. ' et' → logprob: -3.783634901046753
    5. 'n' → logprob: -4.783635139465332
    6. '=' → logprob: -4.908635139465332
    7. '#' → logprob: -5.283635139465332
    8. 't' → logprob: -5.283635139465332
    9. ',' → logprob: -5.533635139465332
    10. 'et' → logprob: -5.533635139465332

Token 275: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0037724121939390898
    2. 'fix' → logprob: -6.753772258758545
    3. 'tou' → logprob: -7.128772258758545
    4. ' ' → logprob: -7.378772258758545
    5. 'n' → logprob: -7.378772258758545
    6. 'strict' → logprob: -8.128772735595703
    7. 'zero' → logprob: -10.003772735595703
    8. 'z' → logprob: -10.753772735595703
    9. 'fixed' → logprob: -11.003772735595703
    10. 'de' → logprob: -11.003772735595703

Token 276: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017414625035598874
    2. 'tou' → logprob: -6.876741409301758
    3. 'fix' → logprob: -8.626741409301758
    4. 'strict' → logprob: -8.751741409301758
    5. 'n' → logprob: -9.001741409301758
    6. ' ' → logprob: -10.001741409301758
    7. 'z' → logprob: -10.251741409301758
    8. 'always' → logprob: -10.251741409301758
    9. 'fixed' → logprob: -11.376741409301758
    10. '#' → logprob: -11.501741409301758

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1566845178604126
    2. '#' → logprob: -2.531684398651123
    3. ',
' → logprob: -3.156684398651123
    4. '
' → logprob: -5.031684398651123
    5. 'H' → logprob: -5.906684398651123
    6. ':' → logprob: -6.156684398651123
    7. ' ,' → logprob: -6.156684398651123
    8. '\n' → logprob: -6.656684398651123
    9. ',

' → logprob: -6.781684398651123
    10. '.' → logprob: -6.906684398651123

Token 278: ' la' (ID: 557)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.05532284453511238
    2. ' la' → logprob: -3.5553228855133057
    3. ' on' → logprob: -4.680322647094727
    4. ' #' → logprob: -5.180322647094727
    5. ' il' → logprob: -5.805322647094727
    6. 'la' → logprob: -5.930322647094727
    7. 'on' → logprob: -6.555322647094727
    8. 'le' → logprob: -7.055322647094727
    9. 'il' → logprob: -7.430322647094727
    10. ' le' → logprob: -7.930322647094727

Token 279: ' droite' (ID: 61428)
  Prédit: ' hauteur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hauteur' → logprob: -0.6818009614944458
    2. 'ha' → logprob: -1.0568009614944458
    3. 'tour' → logprob: -3.3068008422851562
    4. ' solution' → logprob: -3.6818008422851562
    5. '#' → logprob: -3.9318008422851562
    6. ' tour' → logprob: -4.431800842285156
    7. ' droite' → logprob: -4.931800842285156
    8. ' ligne' → logprob: -5.306800842285156
    9. 'ligne' → logprob: -5.681800842285156
    10. 'solution' → logprob: -5.806800842285156

Token 280: ' passe' (ID: 22210)
  Prédit: ' part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' part' → logprob: -0.6895148754119873
    2. ' est' → logprob: -2.3145148754119873
    3. ' passe' → logprob: -2.4395148754119873
    4. 'est' → logprob: -2.8145148754119873
    5. ' doit' → logprob: -2.9395148754119873
    6. '#' → logprob: -3.4395148754119873
    7. ' entre' → logprob: -3.5645148754119873
    8. 'part' → logprob: -3.9395148754119873
    9. ' se' → logprob: -3.9395148754119873
    10. ' de' → logprob: -4.189515113830566

Token 281: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.043960656970739365
    2. 'par' → logprob: -3.1689605712890625
    3. ' through' → logprob: -8.168960571289062
    4. ' ' → logprob: -8.418960571289062
    5. '#' → logprob: -9.418960571289062
    6. ' toujours' → logprob: -9.668960571289062
    7. '<|end|>' → logprob: -9.668960571289062
    8. ' à' → logprob: -9.793960571289062
    9. ' au' → logprob: -10.543960571289062
    10. ' entre' → logprob: -11.168960571289062

Token 282: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.635036826133728
    2. ' (' → logprob: -0.760036826133728
    3. '(t' → logprob: -6.385036945343018
    4. ' l' → logprob: -8.26003646850586
    5. 'l' → logprob: -8.76003646850586
    6. ' ' → logprob: -9.51003646850586
    7. ' le' → logprob: -9.63503646850586
    8. '0' → logprob: -9.88503646850586
    9. 'le' → logprob: -10.88503646850586
    10. 'origin' → logprob: -10.88503646850586

Token 283: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008524383418262005
    2. 't' → logprob: -5.258524417877197
    3. ' ' → logprob: -6.508524417877197
    4. '(' → logprob: -6.508524417877197
    5. ' (' → logprob: -9.008523941040039
    6. ',' → logprob: -9.508523941040039
    7. ' t' → logprob: -9.883523941040039
    8. '(t' → logprob: -10.133523941040039
    9. ',t' → logprob: -12.258523941040039
    10. ')' → logprob: -12.508523941040039

Token 284: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001183204003609717
    2. '0' → logprob: -6.876183032989502
    3. ')' → logprob: -9.37618350982666
    4. ' ,' → logprob: -10.00118350982666
    5. ',
' → logprob: -12.00118350982666
    6. '),' → logprob: -12.00118350982666
    7. ',)' → logprob: -12.25118350982666
    8. '```' → logprob: -14.81368350982666
    9. ' )' → logprob: -14.87618350982666
    10. ' ' → logprob: -14.87618350982666

Token 285: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019288709154352546
    2. ' ' → logprob: -6.251928806304932
    3. ' ' → logprob: -16.001928329467773
    4. ',' → logprob: -16.126928329467773
    5. '۰' → logprob: -19.251928329467773
    6. '  ' → logprob: -19.439428329467773
    7. ')' → logprob: -19.564428329467773
    8. '1' → logprob: -19.939428329467773
    9. '00' → logprob: -20.126928329467773
    10. '	' → logprob: -20.251928329467773

Token 286: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013962512835860252
    2. '),' → logprob: -4.388962745666504
    3. ').' → logprob: -7.013962745666504
    4. ')#' → logprob: -8.263962745666504
    5. '#' → logprob: -8.888962745666504
    6. ')
' → logprob: -9.138962745666504
    7. '):' → logprob: -11.638962745666504
    8. ' )' → logprob: -11.763962745666504
    9. ')

' → logprob: -12.263962745666504
    10. ',' → logprob: -12.513962745666504

Token 287: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.022351503372192383
    2. 'import' → logprob: -4.022351264953613
    3. '#' → logprob: -6.397351264953613
    4. ' def' → logprob: -6.522351264953613
    5. 'H' → logprob: -8.397351264953613
    6. ':' → logprob: -9.147351264953613
    7. '```' → logprob: -9.147351264953613
    8. 't' → logprob: -9.272351264953613
    9. ' H' → logprob: -9.772351264953613
    10. 'from' → logprob: -10.022351264953613

Token 288: ' 
' (ID: 793)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.023305576294660568
    2. '
' → logprob: -4.648305416107178
    3. 'import' → logprob: -4.648305416107178
    4. '

' → logprob: -6.648305416107178
    5. ' 
' → logprob: -7.273305416107178
    6. ' def' → logprob: -7.648305416107178
    7. '\' → logprob: -7.898305416107178
    8. '```' → logprob: -8.148305892944336
    9. '#' → logprob: -8.898305892944336
    10. '  
' → logprob: -9.023305892944336

Token 289: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0072084409184753895
    2. '#' → logprob: -5.507208347320557
    3. 'import' → logprob: -6.132208347320557
    4. 'from' → logprob: -7.382208347320557
    5. 't' → logprob: -8.257208824157715
    6. ' def' → logprob: -9.757208824157715
    7. ' 
' → logprob: -12.757208824157715
    8. ' #' → logprob: -13.007208824157715
    9. '  
' → logprob: -13.382208824157715
    10. 'H' → logprob: -13.882208824157715

Token 290: ' Calcul' (ID: 57243)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013115170411765575
    2. 'import' → logprob: -4.638115406036377
    3. 'from' → logprob: -5.763115406036377
    4. '#' → logprob: -9.138114929199219
    5. ' def' → logprob: -9.388114929199219
    6. 't' → logprob: -11.513114929199219
    7. '```' → logprob: -12.513114929199219
    8. 'class' → logprob: -12.638114929199219
    9. ' from' → logprob: -13.263114929199219
    10. ' import' → logprob: -13.888114929199219

Token 291: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1063282489776611
    2. ':' → logprob: -1.3563282489776611
    3. 'def' → logprob: -1.6063282489776611
    4. ' de' → logprob: -2.981328248977661
    5. 'import' → logprob: -3.106328248977661
    6. ' :' → logprob: -3.231328248977661
    7. '#' → logprob: -3.606328248977661
    8. 's' → logprob: -4.106328010559082
    9. '=' → logprob: -5.106328010559082
    10. ' def' → logprob: -5.231328010559082

Token 292: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.6908704042434692
    2. ' la' → logprob: -0.9408704042434692
    3. 'H' → logprob: -2.3158702850341797
    4. ' l' → logprob: -4.94087028503418
    5. ' ' → logprob: -7.06587028503418
    6. 'l' → logprob: -7.56587028503418
    7. 'la' → logprob: -8.06587028503418
    8. ' minimal' → logprob: -8.44087028503418
    9. 'min' → logprob: -8.81587028503418
    10. ' t' → logprob: -9.06587028503418

Token 293: ' minimal' (ID: 19957)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06859186291694641
    2. ':' → logprob: -3.693591833114624
    3. '=' → logprob: -4.068592071533203
    4. 'def' → logprob: -4.443592071533203
    5. ' :' → logprob: -4.693592071533203
    6. '#' → logprob: -7.068592071533203
    7. 'import' → logprob: -7.943592071533203
    8. ' def' → logprob: -8.193592071533203
    9. ' ' → logprob: -8.193592071533203
    10. ' #' → logprob: -8.318592071533203

Token 294: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6809195876121521
    2. ' =' → logprob: -1.3059196472167969
    3. ' :' → logprob: -1.5559196472167969
    4. '=' → logprob: -5.305919647216797
    5. 'def' → logprob: -6.555919647216797
    6. ',' → logprob: -6.805919647216797
    7. '#' → logprob: -7.430919647216797
    8. '.' → logprob: -7.430919647216797
    9. ' :
' → logprob: -7.680919647216797
    10. ' :

' → logprob: -7.805919647216797

Token 295: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.30335089564323425
    2. 'def' → logprob: -1.6783509254455566
    3. 'H' → logprob: -3.1783509254455566
    4. 'import' → logprob: -3.6783509254455566
    5. 'max' → logprob: -6.553350925445557
    6. ' H' → logprob: -6.678350925445557
    7. 't' → logprob: -6.678350925445557
    8. 'from' → logprob: -6.928350925445557
    9. ' #' → logprob: -6.928350925445557
    10. ' def' → logprob: -6.928350925445557

Token 296: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.806988000869751
    2. '#' → logprob: -1.806988000869751
    3. ' max' → logprob: -2.431988000869751
    4. 'H' → logprob: -2.681988000869751
    5. 'max' → logprob: -2.681988000869751
    6. 'import' → logprob: -2.806988000869751
    7. ' H' → logprob: -3.431988000869751
    8. ' def' → logprob: -3.681988000869751
    9. 'min' → logprob: -4.056987762451172
    10. 't' → logprob: -4.431987762451172

Token 297: ' Pour' (ID: 13931)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.4282019138336182
    2. ' max' → logprob: -1.5532019138336182
    3. 'def' → logprob: -1.6782019138336182
    4. 'H' → logprob: -2.178201913833618
    5. 'On' → logprob: -3.303201913833618
    6. '#' → logprob: -3.303201913833618
    7. 't' → logprob: -3.303201913833618
    8. 'for' → logprob: -3.553201913833618
    9. ' H' → logprob: -3.678201913833618
    10. 'Pour' → logprob: -4.053201675415039

Token 298: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.007888155058026314
    2. ' each' → logprob: -6.757888317108154
    3. ' calcul' → logprob: -7.257888317108154
    4. ' ' → logprob: -7.382888317108154
    5. ' trouver' → logprob: -7.507888317108154
    6. ' que' → logprob: -7.757888317108154
    7. ' x' → logprob: -7.757888317108154
    8. ' i' → logprob: -7.882888317108154
    9. 'x' → logprob: -8.007887840270996
    10. ' déterminer' → logprob: -8.007887840270996

Token 299: ' bâtiment' (ID: 92976)
  Prédit: ' bâtiment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bâtiment' → logprob: -0.0646270215511322
    2. 'b' → logprob: -2.939626932144165
    3. ' building' → logprob: -5.314627170562744
    4. ' imme' → logprob: -6.939627170562744
    5. 'building' → logprob: -7.064627170562744
    6. ' i' → logprob: -7.939627170562744
    7. 'i' → logprob: -8.064626693725586
    8. 'bat' → logprob: -8.064626693725586
    9. ' b' → logprob: -8.314626693725586
    10. ' bâ' → logprob: -8.439626693725586

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04681343585252762
    2. ':' → logprob: -4.046813488006592
    3. ' ,' → logprob: -4.171813488006592
    4. ' i' → logprob: -4.921813488006592
    5. '_i' → logprob: -5.671813488006592
    6. 'i' → logprob: -7.171813488006592
    7. ',i' → logprob: -7.296813488006592
    8. ' :' → logprob: -8.546813011169434
    9. ' on' → logprob: -8.921813011169434
    10. ' x' → logprob: -9.671813011169434

Token 301: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.3284766376018524
    2. 'on' → logprob: -1.8284766674041748
    3. '#' → logprob: -2.703476667404175
    4. 'il' → logprob: -4.203476428985596
    5. ' il' → logprob: -4.203476428985596
    6. ' calcul' → logprob: -4.328476428985596
    7. ' H' → logprob: -5.703476428985596
    8. 'H' → logprob: -6.703476428985596
    9. ' #' → logprob: -6.953476428985596
    10. 'calcul' → logprob: -6.953476428985596

Token 302: ' a' (ID: 261)
  Prédit: ' calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.04659181460738182
    2. 'calc' → logprob: -3.5465917587280273
    3. 'cal' → logprob: -4.296591758728027
    4. ' a' → logprob: -6.921591758728027
    5. ' doit' → logprob: -7.546591758728027
    6. ' calcul' → logprob: -7.796591758728027
    7. 'a' → logprob: -7.921591758728027
    8. 'calcul' → logprob: -8.421591758728027
    9. ' vér' → logprob: -9.296591758728027
    10. 'do' → logprob: -9.546591758728027

Token 303: ' :' (ID: 712)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.07893572747707367
    2. ' H' → logprob: -2.7039356231689453
    3. 'h' → logprob: -5.453935623168945
    4. ' ' → logprob: -6.203935623168945
    5. ':' → logprob: -6.953935623168945
    6. ' h' → logprob: -7.328935623168945
    7. ' une' → logprob: -8.578935623168945
    8. '#' → logprob: -8.828935623168945
    9. 't' → logprob: -9.578935623168945
    10. '  ' → logprob: -9.703935623168945

Token 304: ' h' (ID: 312)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.06498365849256516
    2. ' H' → logprob: -2.814983606338501
    3. '   ' → logprob: -6.68998384475708
    4. 'h' → logprob: -6.68998384475708
    5. ' ' → logprob: -8.689983367919922
    6. '```' → logprob: -9.064983367919922
    7. '  ' → logprob: -9.439983367919922
    8. ' h' → logprob: -9.939983367919922
    9. '#' → logprob: -10.314983367919922
    10. '    ' → logprob: -10.689983367919922

Token 305: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0006124787032604218
    2. '_' → logprob: -7.875612258911133
    3. 'i' → logprob: -9.375612258911133
    4. ' _' → logprob: -9.875612258911133
    5. ' /' → logprob: -10.625612258911133
    6. '*' → logprob: -11.000612258911133
    7. ' *' → logprob: -11.125612258911133
    8. ' i' → logprob: -11.875612258911133
    9. '[i' → logprob: -12.000612258911133
    10. ' <=' → logprob: -13.000612258911133

Token 306: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5213602185249329
    2. '<' → logprob: -1.896360158920288
    3. '*' → logprob: -2.021360158920288
    4. ' *' → logprob: -2.146360158920288
    5. '*t' → logprob: -6.021360397338867
    6. '<t' → logprob: -6.646360397338867
    7. ' /' → logprob: -6.771360397338867
    8. ' <=' → logprob: -7.021360397338867
    9. '/' → logprob: -7.896360397338867
    10. '<=' → logprob: -7.896360397338867

Token 307: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.4909741282463074
    2. ' H' → logprob: -1.1159741878509521
    3. ' (' → logprob: -3.740974187850952
    4. ' y' → logprob: -4.240973949432373
    5. 'y' → logprob: -4.365973949432373
    6. '(' → logprob: -5.115973949432373
    7. ' ' → logprob: -6.490973949432373
    8. '(H' → logprob: -6.740973949432373
    9. '=' → logprob: -8.865974426269531
    10. ' ' → logprob: -9.115974426269531

Token 308: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.006746512372046709
    2. '*' → logprob: -5.006746292114258
    3. ' /' → logprob: -11.256746292114258
    4. ' ' → logprob: -12.256746292114258
    5. ' ' → logprob: -12.756746292114258
    6. ' \' → logprob: -13.256746292114258
    7. '*(' → logprob: -13.631746292114258
    8. '

' → logprob: -14.006746292114258
    9. '  ' → logprob: -14.131746292114258
    10. ',' → logprob: -14.444246292114258

Token 309: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.048686496913433075
    2. '(t' → logprob: -3.0486865043640137
    3. '(' → logprob: -9.423686027526855
    4. ' ' → logprob: -11.673686027526855
    5. ' \' → logprob: -12.923686027526855
    6. '((' → logprob: -13.048686027526855
    7. '\' → logprob: -13.173686027526855
    8. ' ((' → logprob: -13.798686027526855
    9. 'frac' → logprob: -14.423686027526855
    10. '(x' → logprob: -14.798686027526855

Token 310: 't' (ID: 83)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7218195796012878
    2. '(t' → logprob: -0.7218195796012878
    3. 't' → logprob: -4.0968194007873535
    4. ' t' → logprob: -4.9718194007873535
    5. '(' → logprob: -5.5968194007873535
    6. 'x' → logprob: -7.9718194007873535
    7. ' ' → logprob: -8.346819877624512
    8. '(x' → logprob: -8.721819877624512
    9. '\' → logprob: -9.471819877624512
    10. ' x' → logprob: -9.596819877624512

Token 311: ' -' (ID: 533)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.3143059015274048
    2. ')' → logprob: -1.9393059015274048
    3. ' -' → logprob: -2.9393057823181152
    4. '-' → logprob: -3.4393057823181152
    5. '/' → logprob: -4.439305782318115
    6. ' *' → logprob: -4.564305782318115
    7. ' ' → logprob: -4.689305782318115
    8. '*' → logprob: -5.439305782318115
    9. ' )' → logprob: -6.314305782318115
    10. ')/(' → logprob: -6.564305782318115

Token 312: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5759623050689697
    2. ' x' → logprob: -0.8259623050689697
    3. ' ' → logprob: -11.82596206665039
    4. '1' → logprob: -11.82596206665039
    5. 'xi' → logprob: -12.57596206665039
    6. ' xi' → logprob: -13.45096206665039
    7. '_x' → logprob: -13.70096206665039
    8. ')' → logprob: -14.45096206665039
    9. '	x' → logprob: -14.70096206665039
    10. ')x' → logprob: -14.95096206665039

Token 313: '_i' (ID: 10853)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06640059500932693
    2. '_i' → logprob: -2.8164005279541016
    3. 'i' → logprob: -5.566400527954102
    4. '_' → logprob: -7.941400527954102
    5. ')/' → logprob: -8.816400527954102
    6. ')/(' → logprob: -10.691400527954102
    7. ' )' → logprob: -10.941400527954102
    8. '_)' → logprob: -11.191400527954102
    9. '[i' → logprob: -11.566400527954102
    10. '   ' → logprob: -12.066400527954102

Token 314: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00043686782009899616
    2. ')/' → logprob: -8.375436782836914
    3. ' )' → logprob: -9.250436782836914
    4. '_i' → logprob: -9.875436782836914
    5. 'i' → logprob: -11.000436782836914
    6. ')
' → logprob: -11.375436782836914
    7. '_' → logprob: -12.000436782836914
    8. '#' → logprob: -12.375436782836914
    9. ')/(' → logprob: -12.375436782836914
    10. '[' → logprob: -13.125436782836914

Token 315: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.04300319775938988
    2. ' t' → logprob: -3.1680030822753906
    3. ' ' → logprob: -13.79300308227539
    4. '_t' → logprob: -14.04300308227539
    5. 'x' → logprob: -14.16800308227539
    6. ' ' → logprob: -14.41800308227539
    7. '	t' → logprob: -15.04300308227539
    8. '`t' → logprob: -15.66800308227539
    9. ' x' → logprob: -16.41800308227539
    10. '```' → logprob: -16.66800308227539

Token 316: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3055999279022217
    2. '
' → logprob: -2.0555999279022217
    3. ',' → logprob: -3.4305999279022217
    4. '#
' → logprob: -4.305600166320801
    5. '

' → logprob: -4.555600166320801
    6. 'def' → logprob: -4.805600166320801
    7. ' ' → logprob: -4.805600166320801
    8. ' #' → logprob: -4.930600166320801
    9. '\' → logprob: -5.055600166320801
    10. '  
' → logprob: -5.180600166320801

Token 317: ' <' (ID: 464)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5060362219810486
    2. '
' → logprob: -2.5060362815856934
    3. '\' → logprob: -2.7560362815856934
    4. ',' → logprob: -3.1310362815856934
    5. ' ' → logprob: -3.6310362815856934
    6. 'H' → logprob: -3.7560362815856934
    7. ' H' → logprob: -4.006036281585693
    8. '.' → logprob: -4.256036281585693
    9. '\n' → logprob: -4.256036281585693
    10. ',
' → logprob: -4.381036281585693

Token 318: '=>' (ID: 4715)
  Prédit: '=>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=>' → logprob: -0.15857671201229095
    2. ' =>' → logprob: -3.283576726913452
    3. ',' → logprob: -3.783576726913452
    4. '=' → logprob: -4.283576488494873
    5. '
' → logprob: -4.283576488494873
    6. 'H' → logprob: -4.283576488494873
    7. ' H' → logprob: -5.033576488494873
    8. ',
' → logprob: -5.408576488494873
    9. '*' → logprob: -5.783576488494873
    10. ' ' → logprob: -5.783576488494873

Token 319: ' ' (ID: 220)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.25234079360961914
    2. ' H' → logprob: -1.5023407936096191
    3. ' ' → logprob: -8.002340316772461
    4. ' ' → logprob: -10.502340316772461
    5. 'h' → logprob: -11.002340316772461
    6. '  ' → logprob: -11.002340316772461
    7. '   ' → logprob: -12.002340316772461
    8. '#' → logprob: -13.252340316772461
    9. '	H' → logprob: -13.502340316772461
    10. ' h' → logprob: -13.877340316772461

Token 320: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.014181602746248245
    2. ' H' → logprob: -4.264181613922119
    3. ' ' → logprob: -11.764181137084961
    4. 'h' → logprob: -11.889181137084961
    5. '  ' → logprob: -13.264181137084961
    6. '   ' → logprob: -14.014181137084961
    7. ' ' → logprob: -14.889181137084961
    8. '#' → logprob: -16.01418113708496
    9. ' h' → logprob: -16.26418113708496
    10. '
' → logprob: -16.38918113708496

Token 321: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3240087032318115
    2. '>' → logprob: -1.3240087032318115
    3. ' >=' → logprob: -5.324008941650391
    4. '=' → logprob: -6.074008941650391
    5. '>=' → logprob: -6.074008941650391
    6. ' =' → logprob: -7.949008941650391
    7. '≥' → logprob: -8.44900894165039
    8. ' ' → logprob: -8.69900894165039
    9. ' ' → logprob: -8.82400894165039
    10. ' ≥' → logprob: -8.94900894165039

Token 322: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.18530473113059998
    2. ' h' → logprob: -1.9353047609329224
    3. '(h' → logprob: -3.935304641723633
    4. ' (' → logprob: -5.310304641723633
    5. '(' → logprob: -8.935304641723633
    6. '(t' → logprob: -9.310304641723633
    7. ' ' → logprob: -10.435304641723633
    8. 't' → logprob: -11.935304641723633
    9. '(x' → logprob: -12.060304641723633
    10. 'x' → logprob: -12.685304641723633

Token 323: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -3.292907877039397e-06
    2. '_' → logprob: -13.12500286102295
    3. ' _' → logprob: -14.75000286102295
    4. '[i' → logprob: -14.87500286102295
    5. 'i' → logprob: -15.00000286102295
    6. '[' → logprob: -17.125003814697266
    7. '_max' → logprob: -17.500003814697266
    8. '_j' → logprob: -17.625003814697266
    9. 's' → logprob: -18.125003814697266
    10. ' /' → logprob: -18.250003814697266

Token 324: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.020741695538163185
    2. '*' → logprob: -3.8957417011260986
    3. '_i' → logprob: -9.02074146270752
    4. ' /' → logprob: -10.02074146270752
    5. '*(' → logprob: -11.77074146270752
    6. ' ' → logprob: -12.39574146270752
    7. 's' → logprob: -12.39574146270752
    8. ' ' → logprob: -12.52074146270752
    9. '[i' → logprob: -13.02074146270752
    10. '```' → logprob: -13.39574146270752

Token 325: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.029786596074700356
    2. ' t' → logprob: -3.5297865867614746
    3. '`t' → logprob: -10.779787063598633
    4. '```' → logprob: -12.279787063598633
    5. ' ' → logprob: -12.529787063598633
    6. '(t' → logprob: -12.779787063598633
    7. '`' → logprob: -14.029787063598633
    8. '\' → logprob: -14.154787063598633
    9. '	t' → logprob: -14.279787063598633
    10. ' (' → logprob: -14.404787063598633

Token 326: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.051118966192007065
    2. '/' → logprob: -3.676118850708008
    3. '/(' → logprob: -3.801118850708008
    4. ' /(' → logprob: -6.176118850708008
    5. ')/(' → logprob: -10.676118850708008
    6. ' /
' → logprob: -11.176118850708008
    7. ' ' → logprob: -11.551118850708008
    8. '/
' → logprob: -11.801118850708008
    9. ' (' → logprob: -11.801118850708008
    10. '#' → logprob: -11.926118850708008

Token 327: ' (' (ID: 350)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.16115427017211914
    2. ' (' → logprob: -1.9111542701721191
    3. '(' → logprob: -7.411154270172119
    4. '(x' → logprob: -8.036153793334961
    5. ' ' → logprob: -14.161153793334961
    6. 'x' → logprob: -15.411153793334961
    7. '(T' → logprob: -15.536153793334961
    8. 't' → logprob: -15.786153793334961
    9. '((' → logprob: -16.03615379333496
    10. ' t' → logprob: -17.28615379333496

Token 328: 't' (ID: 83)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.21665553748607635
    2. 't' → logprob: -2.0916554927825928
    3. ' (' → logprob: -2.8416554927825928
    4. ' t' → logprob: -4.841655731201172
    5. '(' → logprob: -5.341655731201172
    6. '(x' → logprob: -8.966655731201172
    7. 'x' → logprob: -9.091655731201172
    8. ' ' → logprob: -10.091655731201172
    9. ' x' → logprob: -11.966655731201172
    10. '(
' → logprob: -13.466655731201172

Token 329: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38981881737709045
    2. '-' → logprob: -1.139818787574768
    3. ' ' → logprob: -6.2648186683654785
    4. '-x' → logprob: -8.139819145202637
    5. ' x' → logprob: -8.389819145202637
    6. '_' → logprob: -8.514819145202637
    7. 'x' → logprob: -8.639819145202637
    8. ')' → logprob: -10.889819145202637
    9. '_x' → logprob: -11.014819145202637
    10. '  ' → logprob: -11.014819145202637

Token 330: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10022608190774918
    2. ' x' → logprob: -2.3502261638641357
    3. ' ' → logprob: -11.350226402282715
    4. '	x' → logprob: -12.225226402282715
    5. 'xi' → logprob: -13.725226402282715
    6. '_x' → logprob: -14.975226402282715
    7. '"x' → logprob: -15.350226402282715
    8. '<|end|>' → logprob: -15.350226402282715
    9. '$x' → logprob: -15.850226402282715
    10. ')x' → logprob: -15.850226402282715

Token 331: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0005556552205234766
    2. 'i' → logprob: -7.500555515289307
    3. ')' → logprob: -13.875555992126465
    4. '_' → logprob: -14.125555992126465
    5. 'x' → logprob: -14.875555992126465
    6. '_x' → logprob: -15.500555992126465
    7. ')_' → logprob: -15.750555992126465
    8. '_{' → logprob: -16.00055503845215
    9. '_ix' → logprob: -16.50055503845215
    10. '_)' → logprob: -16.87555503845215

Token 332: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003389190824236721
    2. ' )' → logprob: -8.625338554382324
    3. '#' → logprob: -9.250338554382324
    4. ')
' → logprob: -10.875338554382324
    5. '))' → logprob: -11.625338554382324
    6. ')#' → logprob: -12.000338554382324
    7. '}' → logprob: -12.625338554382324
    8. ')`' → logprob: -13.125338554382324
    9. ' ' → logprob: -13.375338554382324
    10. ')
' → logprob: -13.375338554382324

Token 333: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.35141006112098694
    2. '
' → logprob: -1.3514100313186646
    3. '

' → logprob: -3.976410150527954
    4. 'import' → logprob: -5.226409912109375
    5. ' 
' → logprob: -5.351409912109375
    6. '
 
' → logprob: -6.726409912109375
    7. '```' → logprob: -6.851409912109375
    8. 't' → logprob: -6.976409912109375
    9. '  
' → logprob: -6.976409912109375
    10. '#' → logprob: -7.101409912109375

Token 334: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27821290493011475
    2. '
' → logprob: -1.5282129049301147
    3. '

' → logprob: -4.528213024139404
    4. ' 
' → logprob: -5.278213024139404
    5. '<|end|>' → logprob: -6.278213024139404
    6. 'import' → logprob: -6.528213024139404
    7. '#' → logprob: -6.528213024139404
    8. '  
' → logprob: -7.278213024139404
    9. ' def' → logprob: -7.403213024139404
    10. '\' → logprob: -7.403213024139404

Token 335: ' Le' (ID: 2018)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4074907302856445
    2. 'H' → logprob: -1.4074907302856445
    3. 'def' → logprob: -1.4074907302856445
    4. 'import' → logprob: -1.9074907302856445
    5. ' H' → logprob: -2.6574907302856445
    6. 'from' → logprob: -4.5324907302856445
    7. 'max' → logprob: -4.6574907302856445
    8. ' #' → logprob: -5.0324907302856445
    9. ' max' → logprob: -5.5324907302856445
    10. ' import' → logprob: -5.9074907302856445

Token 336: ' minimum' (ID: 11085)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.73079514503479
    2. ' H' → logprob: -1.10579514503479
    3. ' max' → logprob: -1.98079514503479
    4. 'max' → logprob: -4.105794906616211
    5. ' minimum' → logprob: -4.355794906616211
    6. ' min' → logprob: -4.980794906616211
    7. ' maximum' → logprob: -5.480794906616211
    8. 'min' → logprob: -6.480794906616211
    9. ' minimal' → logprob: -6.730794906616211
    10. ' ' → logprob: -6.855794906616211

Token 337: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.09425025433301926
    2. 'H' → logprob: -3.594250202178955
    3. ' ' → logprob: -3.719250202178955
    4. ' nécessaire' → logprob: -3.719250202178955
    5. ' de' → logprob: -5.469250202178955
    6. '_' → logprob: -6.094250202178955
    7. '   ' → logprob: -6.594250202178955
    8. ' requis' → logprob: -6.969250202178955
    9. ' à' → logprob: -7.094250202178955
    10. ' required' → logprob: -7.344250202178955

Token 338: ' doit' (ID: 21822)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6934526562690735
    2. ' =' → logprob: -0.6934526562690735
    3. ' est' → logprob: -8.693452835083008
    4. ' ' → logprob: -9.568452835083008
    5. ' doit' → logprob: -11.068452835083008
    6. '>' → logprob: -11.693452835083008
    7. '_' → logprob: -11.943452835083008
    8. 's' → logprob: -12.068452835083008
    9. '=min' → logprob: -12.318452835083008
    10. ' ' → logprob: -12.943452835083008

Token 339: ' satisfaire' (ID: 156594)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06527898460626602
    2. ' =' → logprob: -2.815279006958008
    3. ' être' → logprob: -5.940279006958008
    4. 'être' → logprob: -7.940279006958008
    5. ' be' → logprob: -9.190279006958008
    6. 's' → logprob: -9.940279006958008
    7. ' etre' → logprob: -10.065279006958008
    8. ' ' → logprob: -10.815279006958008
    9. '=max' → logprob: -10.815279006958008
    10. '>' → logprob: -10.815279006958008

Token 340: ' toutes' (ID: 17502)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.148547887802124
    2. ' H' → logprob: -1.273547887802124
    3. ' la' → logprob: -2.398547887802124
    4. ' toutes' → logprob: -2.398547887802124
    5. ' aux' → logprob: -2.648547887802124
    6. ':' → logprob: -2.898547887802124
    7. ' les' → logprob: -3.898547887802124
    8. ' au' → logprob: -4.023548126220703
    9. 'au' → logprob: -4.523548126220703
    10. ' l' → logprob: -4.898548126220703

Token 341: ' ces' (ID: 10532)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.16616854071617126
    2. '>' → logprob: -2.916168451309204
    3. 'les' → logprob: -3.291168451309204
    4. '_' → logprob: -3.416168451309204
    5. ' ' → logprob: -4.541168689727783
    6. ' >' → logprob: -5.166168689727783
    7. ' H' → logprob: -5.541168689727783
    8. ' _' → logprob: -6.541168689727783
    9. ' ces' → logprob: -6.541168689727783
    10. ' i' → logprob: -7.041168689727783

Token 342: ' in' (ID: 306)
  Prédit: 'conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conditions' → logprob: -0.9760698080062866
    2. 'ine' → logprob: -1.3510698080062866
    3. 'in' → logprob: -1.9760698080062866
    4. 'contra' → logprob: -2.476069927215576
    5. ' contraintes' → logprob: -2.976069927215576
    6. ' conditions' → logprob: -3.101069927215576
    7. 'iné' → logprob: -3.851069927215576
    8. ' in' → logprob: -3.976069927215576
    9. 'contr' → logprob: -6.976069927215576
    10. 'strict' → logprob: -7.351069927215576

Token 343: 'égalité' (ID: 165530)
  Prédit: 'égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'égal' → logprob: -0.045945677906274796
    2. 'é' → logprob: -3.795945644378662
    3. 'équ' → logprob: -4.545945644378662
    4. '>' → logprob: -5.545945644378662
    5. 'ég' → logprob: -6.295945644378662
    6. 'e' → logprob: -6.545945644378662
    7. 'in' → logprob: -7.545945644378662
    8. 'ine' → logprob: -7.545945644378662
    9. '{' → logprob: -7.545945644378662
    10. 'égalité' → logprob: -7.795945644378662

Token 344: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05916256830096245
    2. 'H' → logprob: -4.434162616729736
    3. ' =' → logprob: -4.684162616729736
    4. '#' → logprob: -4.684162616729736
    5. '.' → logprob: -5.309162616729736
    6. ':' → logprob: -5.559162616729736
    7. ',' → logprob: -5.809162616729736
    8. ' ' → logprob: -5.934162616729736
    9. '=' → logprob: -6.059162616729736
    10. ' H' → logprob: -6.309162616729736

Token 345: ' donc' (ID: 14206)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7138583660125732
    2. ' donc' → logprob: -1.0888583660125732
    3. 'H' → logprob: -2.7138583660125732
    4. ' H' → logprob: -2.9638583660125732
    5. ' c' → logprob: -3.8388583660125732
    6. ' i' → logprob: -5.088858604431152
    7. 'so' → logprob: -5.088858604431152
    8. ' =' → logprob: -5.588858604431152
    9. 'i' → logprob: -5.963858604431152
    10. ' soit' → logprob: -6.088858604431152

Token 346: ' :
' (ID: 10039)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.3419831395149231
    2. 'H' → logprob: -1.3419830799102783
    3. 'max' → logprob: -4.841983318328857
    4. '#' → logprob: -5.091983318328857
    5. ' il' → logprob: -5.466983318328857
    6. 'import' → logprob: -5.966983318328857
    7. ' ' → logprob: -6.091983318328857
    8. ' le' → logprob: -6.841983318328857
    9. 'le' → logprob: -6.966983318328857
    10. '   ' → logprob: -7.216983318328857

Token 347: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16547399759292603
    2. 'H' → logprob: -2.0404739379882812
    3. ' H' → logprob: -4.415473937988281
    4. 'max' → logprob: -5.290473937988281
    5. ' #' → logprob: -5.790473937988281
    6. 'import' → logprob: -7.040473937988281
    7. ' max' → logprob: -7.165473937988281
    8. 'min' → logprob: -8.540473937988281
    9. 't' → logprob: -8.665473937988281
    10. 'def' → logprob: -8.790473937988281

Token 348: '  ' (ID: 256)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.440433531999588
    2. 'H' → logprob: -1.0654335021972656
    3. ' H' → logprob: -4.940433502197266
    4. 'import' → logprob: -6.315433502197266
    5. ' #' → logprob: -7.315433502197266
    6. 'def' → logprob: -7.565433502197266
    7. 'max' → logprob: -7.565433502197266
    8. 'min' → logprob: -7.690433502197266
    9. '
' → logprob: -8.940433502197266
    10. 't' → logprob: -9.315433502197266

Token 349: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' (adapté à ' H') → logprob: -0.01159060001373291
    2. ' H' → logprob: -4.511590480804443
    3. 'import' → logprob: -8.011590957641602
    4. '#' → logprob: -8.761590957641602
    5. 'max' → logprob: -10.761590957641602
    6. '   ' → logprob: -11.011590957641602
    7. ' ' → logprob: -11.886590957641602
    8. '  ' → logprob: -12.636590957641602
    9. 'from' → logprob: -12.761590957641602
    10. ' max' → logprob: -14.511590957641602

Token 350: ' >=' (ID: 5064)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24741534888744354
    2. ' =' → logprob: -1.62241530418396
    3. '>' → logprob: -4.247415542602539
    4. ' >' → logprob: -4.997415542602539
    5. '>=' → logprob: -7.747415542602539
    6. ' >=' → logprob: -8.747415542602539
    7. '≥' → logprob: -9.497415542602539
    8. ' ' → logprob: -11.122415542602539
    9. ' ≥' → logprob: -11.497415542602539
    10. ' ' → logprob: -11.872415542602539

Token 351: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3132631778717041
    2. 'max' → logprob: -1.313263177871704
    3. '	max' → logprob: -14.563262939453125
    4. ' ' → logprob: -15.063262939453125
    5. '(max' → logprob: -15.563262939453125
    6. ' ' → logprob: -16.188262939453125
    7. ' maximum' → logprob: -16.313262939453125
    8. ' maxi' → logprob: -16.438262939453125
    9. '   ' → logprob: -16.688262939453125
    10. '  ' → logprob: -16.813262939453125

Token 352: '_i' (ID: 10853)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.4813278913497925
    2. '(' → logprob: -0.9813278913497925
    3. '([' → logprob: -5.231328010559082
    4. '_i' → logprob: -6.981328010559082
    5. ' (' → logprob: -8.231328010559082
    6. '(
' → logprob: -8.231328010559082
    7. '\' → logprob: -8.856328010559082
    8. '((' → logprob: -8.981328010559082
    9. '[' → logprob: -10.106328010559082
    10. '(i' → logprob: -10.731328010559082

Token 353: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.26718682050704956
    2. '(' → logprob: -1.7671868801116943
    3. ' (' → logprob: -2.7671868801116943
    4. ' h' → logprob: -7.892186641693115
    5. ' ' → logprob: -9.392187118530273
    6. 'h' → logprob: -9.392187118530273
    7. '((' → logprob: -9.642187118530273
    8. '   ' → logprob: -9.767187118530273
    9. '\' → logprob: -9.892187118530273
    10. '(
' → logprob: -10.267187118530273

Token 354: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.27875810861587524
    2. ' h' → logprob: -1.5287580490112305
    3. '(h' → logprob: -3.7787580490112305
    4. ' (' → logprob: -5.9037580490112305
    5. ' ' → logprob: -7.4037580490112305
    6. '(' → logprob: -8.77875804901123
    7. '   ' → logprob: -9.65375804901123
    8. '  ' → logprob: -9.90375804901123
    9. '	h' → logprob: -12.77875804901123
    10. '    ' → logprob: -12.90375804901123

Token 355: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -7.703443770878948e-06
    2. ' _' → logprob: -12.250007629394531
    3. 'i' → logprob: -13.375007629394531
    4. '_' → logprob: -13.875007629394531
    5. ')' → logprob: -16.25000762939453
    6. '_{' → logprob: -17.00000762939453
    7. '_j' → logprob: -17.37500762939453
    8. '_t' → logprob: -17.50000762939453
    9. ')_' → logprob: -17.50000762939453
    10. '*_' → logprob: -17.50000762939453

Token 356: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07041995972394943
    2. '*' → logprob: -2.695420026779175
    3. ')' → logprob: -8.445420265197754
    4. ' ' → logprob: -8.945420265197754
    5. '_i' → logprob: -9.320420265197754
    6. '*)' → logprob: -11.695420265197754
    7. '  ' → logprob: -11.695420265197754
    8. '   ' → logprob: -11.820420265197754
    9. ' ' → logprob: -12.070420265197754
    10. ' *)' → logprob: -12.820420265197754

Token 357: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.2520105540752411
    2. 't' → logprob: -1.5020105838775635
    3. ' ' → logprob: -9.502010345458984
    4. ' ' → logprob: -13.002010345458984
    5. '(t' → logprob: -13.752010345458984
    6. '  ' → logprob: -14.002010345458984
    7. '   ' → logprob: -14.252010345458984
    8. '	t' → logprob: -14.377010345458984
    9. ' /' → logprob: -15.002010345458984
    10. ')' → logprob: -15.252010345458984

Token 358: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.2542814016342163
    2. '/' → logprob: -1.5042814016342163
    3. ')' → logprob: -6.129281520843506
    4. ' )' → logprob: -9.879281044006348
    5. ')/' → logprob: -10.754281044006348
    6. ')/(' → logprob: -10.754281044006348
    7. '/)' → logprob: -10.879281044006348
    8. ' ' → logprob: -11.004281044006348
    9. '  ' → logprob: -11.629281044006348
    10. ' ' → logprob: -12.254281044006348

Token 359: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3486214280128479
    2. '(t' → logprob: -1.2236213684082031
    3. ' ' → logprob: -9.723621368408203
    4. ' /' → logprob: -10.223621368408203
    5. '(' → logprob: -10.473621368408203
    6. '   ' → logprob: -11.223621368408203
    7. '  ' → logprob: -11.348621368408203
    8. '/(' → logprob: -11.348621368408203
    9. '/' → logprob: -12.098621368408203
    10. ')' → logprob: -12.348621368408203

Token 360: 't' (ID: 83)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.04872986674308777
    2. ' (' → logprob: -3.04872989654541
    3. '(' → logprob: -9.54872989654541
    4. ' ' → logprob: -10.04872989654541
    5. '   ' → logprob: -11.29872989654541
    6. 't' → logprob: -11.79872989654541
    7. '  ' → logprob: -12.17372989654541
    8. '    ' → logprob: -14.79872989654541
    9. '     ' → logprob: -14.92372989654541
    10. '{' → logprob: -15.04872989654541

Token 361: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07899708300828934
    2. '-' → logprob: -2.5789971351623535
    3. ' ' → logprob: -9.328996658325195
    4. ')' → logprob: -11.703996658325195
    5. '-x' → logprob: -12.203996658325195
    6. '  ' → logprob: -13.203996658325195
    7. ' ' → logprob: -14.078996658325195
    8. '_' → logprob: -14.203996658325195
    9. '-t' → logprob: -15.203996658325195
    10. '   ' → logprob: -15.453996658325195

Token 362: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.012514949776232243
    2. ' x' → logprob: -4.387515068054199
    3. ' ' → logprob: -12.5125150680542
    4. '   ' → logprob: -14.2625150680542
    5. '	x' → logprob: -14.7625150680542
    6. '_x' → logprob: -15.2625150680542
    7. 'xi' → logprob: -16.762514114379883
    8. 'i' → logprob: -16.887514114379883
    9. ' ' → logprob: -17.012514114379883
    10. '  ' → logprob: -17.137514114379883

Token 363: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00012558852904476225
    2. 'i' → logprob: -9.000125885009766
    3. ')_' → logprob: -13.875125885009766
    4. ')' → logprob: -14.250125885009766
    5. '_' → logprob: -15.125125885009766
    6. 'x' → logprob: -16.250125885009766
    7. '_x' → logprob: -16.750125885009766
    8. '_id' → logprob: -17.000125885009766
    9. '_ix' → logprob: -17.000125885009766
    10. ' _' → logprob: -17.625125885009766

Token 364: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04879163205623627
    2. ')' → logprob: -3.0487916469573975
    3. ')))' → logprob: -8.923791885375977
    4. '))
' → logprob: -10.923791885375977
    5. ' ))' → logprob: -10.923791885375977
    6. ')),' → logprob: -11.798791885375977
    7. ')).' → logprob: -13.048791885375977
    8. ')}' → logprob: -13.048791885375977
    9. '#' → logprob: -13.173791885375977
    10. '})' → logprob: -13.173791885375977

Token 365: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0028569400310516357
    2. '
' → logprob: -6.877856731414795
    3. 'import' → logprob: -7.252856731414795
    4. ' def' → logprob: -8.252857208251953
    5. '```' → logprob: -8.377857208251953
    6. ' 
' → logprob: -8.752857208251953
    7. '#' → logprob: -9.502857208251953
    8. '\' → logprob: -9.752857208251953
    9. '

' → logprob: -9.752857208251953
    10. '<|end|>' → logprob: -9.877857208251953

Token 366: ' 
' (ID: 793)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17681802809238434
    2. '
' → logprob: -1.9268180131912231
    3. '<|end|>' → logprob: -4.926817893981934
    4. ' 
' → logprob: -5.926817893981934
    5. '

' → logprob: -6.551817893981934
    6. 'import' → logprob: -6.676817893981934
    7. '```' → logprob: -6.801817893981934
    8. '  
' → logprob: -7.301817893981934
    9. ' def' → logprob: -7.676817893981934
    10. '<|end|>' → logprob: -7.926817893981934

Token 367: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001264163525775075
    2. '
' → logprob: -7.3762640953063965
    3. 'import' → logprob: -8.751264572143555
    4. ' def' → logprob: -9.126264572143555
    5. '```' → logprob: -9.251264572143555
    6. '#' → logprob: -9.501264572143555
    7. '<|end|>' → logprob: -10.001264572143555
    8. '

' → logprob: -10.001264572143555
    9. '\' → logprob: -10.376264572143555
    10. 't' → logprob: -11.001264572143555

Token 368: ' Rem' (ID: 6890)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.2127087504486553e-05
    2. 'import' → logprob: -10.875021934509277
    3. ' def' → logprob: -13.500021934509277
    4. '```' → logprob: -14.125021934509277
    5. 'from' → logprob: -14.625021934509277
    6. '#' → logprob: -15.250021934509277
    7. 't' → logprob: -15.625021934509277
    8. '
' → logprob: -16.000022888183594
    9. ' 
' → logprob: -17.375022888183594
    10. '  
' → logprob: -18.125022888183594

Token 369: 'arque' (ID: 167524)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.10045359283685684
    2. 'arque' → logprob: -2.8504536151885986
    3. 'p' → logprob: -4.2254533767700195
    4. 'ar' → logprob: -4.9754533767700195
    5. 'placer' → logprob: -5.7254533767700195
    6. 'er' → logprob: -5.7254533767700195
    7. 'a' → logprob: -6.1004533767700195
    8. 'pla' → logprob: -6.1004533767700195
    9. '#' → logprob: -6.3504533767700195
    10. 'placement' → logprob: -7.4754533767700195

Token 370: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42075154185295105
    2. 'def' → logprob: -1.6707515716552734
    3. ' :' → logprob: -2.4207515716552734
    4. 's' → logprob: -3.7957515716552734
    5. '#' → logprob: -4.170751571655273
    6. '

' → logprob: -5.295751571655273
    7. '
' → logprob: -5.420751571655273
    8. 'import' → logprob: -5.670751571655273
    9. '```' → logprob: -5.670751571655273
    10. ':
' → logprob: -5.920751571655273

Token 371: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.046185657382011414
    2. ' #' → logprob: -3.7961857318878174
    3. 'def' → logprob: -4.796185493469238
    4. ' t' → logprob: -5.671185493469238
    5. 't' → logprob: -5.921185493469238
    6. ' on' → logprob: -6.546185493469238
    7. ' Le' → logprob: -6.921185493469238
    8. 'import' → logprob: -7.421185493469238
    9. ' 
' → logprob: -7.546185493469238
    10. 'On' → logprob: -7.671185493469238

Token 372: ' doit' (ID: 21822)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'do' → logprob: -1.5729775428771973
    2. 'def' → logprob: -1.8229775428771973
    3. ' doit' → logprob: -2.0729775428771973
    4. 's' → logprob: -2.5729775428771973
    5. ' ' → logprob: -2.6979775428771973
    6. '_' → logprob: -3.1979775428771973
    7. 'n' → logprob: -3.3229775428771973
    8. 'est' → logprob: -3.5729775428771973
    9. ' peut' → logprob: -3.6979775428771973
    10. '=' → logprob: -3.6979775428771973

Token 373: ' prendre' (ID: 24257)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -1.1816719770431519
    2. ' gérer' → logprob: -1.3066719770431519
    3. ' ajouter' → logprob: -2.4316720962524414
    4. ' calcul' → logprob: -2.6816720962524414
    5. ' ign' → logprob: -2.9316720962524414
    6. ' traiter' → logprob: -3.0566720962524414
    7. ' vérifier' → logprob: -3.3066720962524414
    8. ' compléter' → logprob: -3.5566720962524414
    9. ' excl' → logprob: -3.8066720962524414
    10. ' éviter' → logprob: -4.431672096252441

Token 374: ' la' (ID: 557)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.768665075302124
    2. 'une' → logprob: -2.143665075302124
    3. ' en' → logprob: -2.268665075302124
    4. 'H' → logprob: -2.268665075302124
    5. 'strict' → logprob: -2.518665075302124
    6. ' H' → logprob: -3.268665075302124
    7. ' strict' → logprob: -3.768665075302124
    8. 'la' → logprob: -4.268665313720703
    9. ' au' → logprob: -4.393665313720703
    10. ' la' → logprob: -4.643665313720703

Token 375: ' plus' (ID: 2932)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04627590626478195
    2. 'maximum' → logprob: -4.546276092529297
    3. 'import' → logprob: -4.671276092529297
    4. ' max' → logprob: -5.046276092529297
    5. 'float' → logprob: -5.671276092529297
    6. 'plus' → logprob: -6.171276092529297
    7. 'ma' → logprob: -6.296276092529297
    8. 'H' → logprob: -6.546276092529297
    9. '```' → logprob: -6.671276092529297
    10. 'def' → logprob: -6.796276092529297

Token 376: ' grande' (ID: 10094)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.2638053297996521
    2. ' grande' → logprob: -1.5138053894042969
    3. 'grand' → logprob: -5.138805389404297
    4. 'pet' → logprob: -6.513805389404297
    5. 'import' → logprob: -6.638805389404297
    6. ' ' → logprob: -7.638805389404297
    7. ' haute' → logprob: -7.763805389404297
    8. ' ' → logprob: -7.763805389404297
    9. 'pro' → logprob: -8.013805389404297
    10. ' grand' → logprob: -8.388805389404297

Token 377: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.7406665682792664
    2. '_' → logprob: -1.4906666278839111
    3. 'val' → logprob: -2.115666627883911
    4. ' H' → logprob: -2.990666627883911
    5. ' hauteur' → logprob: -3.615666627883911
    6. 'H' → logprob: -3.740666627883911
    7. '_val' → logprob: -3.990666627883911
    8. ' ' → logprob: -4.365666389465332
    9. ' de' → logprob: -4.490666389465332
    10. ' des' → logprob: -4.490666389465332

Token 378: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3782414197921753
    2. ' possible' → logprob: -1.6282414197921753
    3. ' de' → logprob: -2.128241539001465
    4. 'import' → logprob: -2.253241539001465
    5. 'H' → logprob: -2.628241539001465
    6. ' ' → logprob: -2.878241539001465
    7. ' H' → logprob: -3.128241539001465
    8. ' d' → logprob: -4.128241539001465
    9. 'possible' → logprob: -4.128241539001465
    10. '_possible' → logprob: -4.253241539001465

Token 379: ' h' (ID: 312)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.2329215407371521
    2. ' H' → logprob: -1.6079216003417969
    3. 'h' → logprob: -6.232921600341797
    4. 'l' → logprob: -6.607921600341797
    5. ' l' → logprob: -7.607921600341797
    6. ' h' → logprob: -7.607921600341797
    7. ' (' → logprob: -7.607921600341797
    8. ' cette' → logprob: -7.982921600341797
    9. ' la' → logprob: -8.107921600341797
    10. ' i' → logprob: -8.107921600341797

Token 380: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -8.685467764735222e-05
    2. '_' → logprob: -10.000086784362793
    3. 'i' → logprob: -11.000086784362793
    4. ' _' → logprob: -11.625086784362793
    5. '_e' → logprob: -12.375086784362793
    6. 'e' → logprob: -12.750086784362793
    7. '   ' → logprob: -13.500086784362793
    8. '\' → logprob: -14.250086784362793
    9. '```' → logprob: -14.625086784362793
    10. '_j' → logprob: -15.000086784362793

Token 381: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.017595022916793823
    2. '*' → logprob: -4.517594814300537
    3. '_i' → logprob: -5.767594814300537
    4. ' ' → logprob: -7.892594814300537
    5. 'import' → logprob: -8.017595291137695
    6. ')' → logprob: -8.017595291137695
    7. 'def' → logprob: -8.142595291137695
    8. '#' → logprob: -8.267595291137695
    9. '<|end|>' → logprob: -8.267595291137695
    10. '_t' → logprob: -8.392595291137695

Token 382: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.4287480115890503
    2. 't' → logprob: -1.0537480115890503
    3. ' ' → logprob: -11.05374813079834
    4. ' ' → logprob: -11.42874813079834
    5. '(t' → logprob: -12.30374813079834
    6. '	t' → logprob: -12.55374813079834
    7. '```' → logprob: -13.05374813079834
    8. '   ' → logprob: -13.30374813079834
    9. '`t' → logprob: -13.30374813079834
    10. '"' → logprob: -13.80374813079834

Token 383: '/(' (ID: 27334)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.5264920592308044
    2. '/' → logprob: -0.9014920592308044
    3. '/(' → logprob: -6.276492118835449
    4. '_i' → logprob: -6.901492118835449
    5. '/i' → logprob: -8.77649211883545
    6. ' /(' → logprob: -9.52649211883545
    7. ' ' → logprob: -9.90149211883545
    8. '_' → logprob: -10.02649211883545
    9. '/x' → logprob: -10.27649211883545
    10. '  ' → logprob: -10.90149211883545

Token 384: 't' (ID: 83)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.5817041993141174
    2. ' (' → logprob: -0.8317041993141174
    3. '(' → logprob: -5.456704139709473
    4. ' ' → logprob: -6.581704139709473
    5. '  ' → logprob: -10.331704139709473
    6. '   ' → logprob: -10.706704139709473
    7. 't' → logprob: -11.456704139709473
    8. ')' → logprob: -11.831704139709473
    9. ' t' → logprob: -12.081704139709473
    10. ' -' → logprob: -13.081704139709473

Token 385: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07087938487529755
    2. '-' → logprob: -2.6958794593811035
    3. '-x' → logprob: -7.0708794593811035
    4. ' ' → logprob: -10.320878982543945
    5. '_' → logprob: -10.820878982543945
    6. ')' → logprob: -11.070878982543945
    7. '-i' → logprob: -11.945878982543945
    8. ' ' → logprob: -12.320878982543945
    9. '_x' → logprob: -12.820878982543945
    10. 'x' → logprob: -13.445878982543945

Token 386: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6326112747192383
    2. 'x' → logprob: -0.7576112747192383
    3. ' ' → logprob: -12.007611274719238
    4. '_x' → logprob: -13.507611274719238
    5. ' ' → logprob: -13.632611274719238
    6. 'xi' → logprob: -13.882611274719238
    7. '	x' → logprob: -13.882611274719238
    8. ' xi' → logprob: -14.882611274719238
    9. ')x' → logprob: -15.382611274719238
    10. ')' → logprob: -15.757611274719238

Token 387: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0004883344518020749
    2. 'i' → logprob: -7.62548828125
    3. '_' → logprob: -15.50048828125
    4. 'x' → logprob: -16.87548828125
    5. '[i' → logprob: -17.25048828125
    6. ')' → logprob: -17.25048828125
    7. '_x' → logprob: -18.25048828125
    8. ' _' → logprob: -18.75048828125
    9. '­i' → logprob: -18.87548828125
    10. '#' → logprob: -19.12548828125

Token 388: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00039647609810344875
    2. ' )' → logprob: -8.375396728515625
    3. ').' → logprob: -10.750396728515625
    4. ')
' → logprob: -10.875396728515625
    5. ')#' → logprob: -10.875396728515625
    6. '#' → logprob: -11.250396728515625
    7. '),' → logprob: -11.375396728515625
    8. ')

' → logprob: -11.500396728515625
    9. '))' → logprob: -11.875396728515625
    10. '[' → logprob: -11.875396728515625

Token 389: ' parmi' (ID: 51713)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003227860201150179
    2. '```' → logprob: -6.753227710723877
    3. 'import' → logprob: -7.378227710723877
    4. '
' → logprob: -7.378227710723877
    5. '

' → logprob: -8.128228187561035
    6. ' def' → logprob: -9.003228187561035
    7. 't' → logprob: -9.128228187561035
    8. '#' → logprob: -9.628228187561035
    9. ':' → logprob: -10.003228187561035
    10. '
 
' → logprob: -10.628228187561035

Token 390: ' tous' (ID: 10688)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.02292642556130886
    2. ' tous' → logprob: -4.897926330566406
    3. ' les' → logprob: -4.897926330566406
    4. 't' → logprob: -5.897926330566406
    5. 'l' → logprob: -6.272926330566406
    6. 'all' → logprob: -6.522926330566406
    7. 'i' → logprob: -7.022926330566406
    8. 'la' → logprob: -8.772926330566406
    9. ' toutes' → logprob: -9.147926330566406
    10. '#' → logprob: -9.522926330566406

Token 391: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.6415535807609558
    2. '_i' → logprob: -1.1415536403656006
    3. ' les' → logprob: -2.1415536403656006
    4. 'i' → logprob: -3.5165536403656006
    5. ' i' → logprob: -6.2665534019470215
    6. '_' → logprob: -6.6415534019470215
    7. '#' → logprob: -6.6415534019470215
    8. 'x' → logprob: -6.7665534019470215
    9. '_b' → logprob: -8.39155387878418
    10. 'b' → logprob: -8.76655387878418

Token 392: ' bâtiments' (ID: 136434)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01739378459751606
    2. ' bâtiments' → logprob: -4.142393589019775
    3. 'imme' → logprob: -7.642393589019775
    4. 'bat' → logprob: -8.017394065856934
    5. 'build' → logprob: -8.517394065856934
    6. 'i' → logprob: -9.017394065856934
    7. '#' → logprob: -9.517394065856934
    8. 'building' → logprob: -9.517394065856934
    9. 'im' → logprob: -10.517394065856934
    10. ' imme' → logprob: -11.267394065856934

Token 393: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003457048675045371
    2. '
' → logprob: -6.628457069396973
    3. 'import' → logprob: -7.003457069396973
    4. ' def' → logprob: -8.003457069396973
    5. 't' → logprob: -8.253457069396973
    6. '```' → logprob: -8.753457069396973
    7. 's' → logprob: -9.003457069396973
    8. '#' → logprob: -9.128457069396973
    9. '

' → logprob: -9.753457069396973
    10. 'n' → logprob: -10.503457069396973

Token 394: ' que' (ID: 661)
  Prédit: ' garantir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' garantir' → logprob: -0.682522714138031
    2. ' assurer' → logprob: -2.182522773742676
    3. 'ob' → logprob: -2.557522773742676
    4. ' déterminer' → logprob: -2.557522773742676
    5. ' obtenir' → logprob: -3.432522773742676
    6. 'que' → logprob: -3.557522773742676
    7. 'ass' → logprob: -3.557522773742676
    8. ' trouver' → logprob: -3.682522773742676
    9. 'avoir' → logprob: -4.432522773742676
    10. 'tr' → logprob: -4.432522773742676

Token 395: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6033434867858887
    2. ' la' → logprob: -1.9783434867858887
    3. 'H' → logprob: -2.4783434867858887
    4. 'que' → logprob: -2.8533434867858887
    5. ' H' → logprob: -3.1033434867858887
    6. ' garantir' → logprob: -3.3533434867858887
    7. ' que' → logprob: -3.7283434867858887
    8. 'le' → logprob: -3.9783434867858887
    9. ' assurer' → logprob: -4.353343486785889
    10. 't' → logprob: -4.603343486785889

Token 396: ' vue' (ID: 30721)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -1.3895058631896973
    2. 'tour' → logprob: -1.5145058631896973
    3. 'H' → logprob: -2.1395058631896973
    4. '#' → logprob: -2.1395058631896973
    5. 'vue' → logprob: -2.6395058631896973
    6. 'solution' → logprob: -2.8895058631896973
    7. ' hauteur' → logprob: -3.3895058631896973
    8. ' solution' → logprob: -3.6395058631896973
    9. 'ligne' → logprob: -3.6395058631896973
    10. ' tour' → logprob: -4.389505863189697

Token 397: ' ne' (ID: 453)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.18275399506092072
    2. ' soit' → logprob: -1.8077540397644043
    3. 'ne' → logprob: -6.057754039764404
    4. 's' → logprob: -8.432753562927246
    5. ' ne' → logprob: -8.432753562927246
    6. 'reste' → logprob: -10.057753562927246
    7. ' reste' → logprob: -10.432753562927246
    8. ' so' → logprob: -10.557753562927246
    9. '_so' → logprob: -11.182753562927246
    10. '_' → logprob: -11.432753562927246

Token 398: ' soit' (ID: 17293)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.2026263028383255
    2. ' soit' → logprob: -1.702626347541809
    3. ' so' → logprob: -7.7026262283325195
    4. 's' → logprob: -8.45262622833252
    5. ' sois' → logprob: -8.82762622833252
    6. '_so' → logprob: -9.32762622833252
    7. 'ob' → logprob: -10.20262622833252
    8. '_' → logprob: -10.32762622833252
    9. ' ' → logprob: -10.32762622833252
    10. ' soient' → logprob: -10.57762622833252

Token 399: ' pas' (ID: 2173)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6717934608459473
    2. 'ob' → logprob: -1.1717934608459473
    3. 'b' → logprob: -3.4217934608459473
    4. 'respect' → logprob: -3.4217934608459473
    5. 'dé' → logprob: -4.421793460845947
    6. 'blo' → logprob: -4.796793460845947
    7. 'c' → logprob: -4.921793460845947
    8. 'possible' → logprob: -4.921793460845947
    9. ' garantie' → logprob: -5.171793460845947
    10. '   ' → logprob: -5.421793460845947

Token 400: ' ob' (ID: 1067)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.051913682371377945
    2. 'c' → logprob: -3.8019137382507324
    3. 'blo' → logprob: -4.176913738250732
    4. 'inter' → logprob: -5.301913738250732
    5. 'b' → logprob: -6.426913738250732
    6. ' ob' → logprob: -6.926913738250732
    7. '   ' → logprob: -7.176913738250732
    8. 'g' → logprob: -7.551913738250732
    9. '
' → logprob: -8.176913261413574
    10. ' blo' → logprob: -8.176913261413574

Token 401: 'stru' (ID: 3409)
  Prédit: 'stru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stru' → logprob: -0.1114855706691742
    2. 'struct' → logprob: -2.486485481262207
    3. 'str' → logprob: -4.111485481262207
    4. 'struction' → logprob: -5.236485481262207
    5. 'tr' → logprob: -8.611485481262207
    6. 'sc' → logprob: -9.611485481262207
    7. 'structions' → logprob: -9.736485481262207
    8. 'stur' → logprob: -9.986485481262207
    9. 'tru' → logprob: -10.236485481262207
    10. 'truct' → logprob: -10.486485481262207

Token 402: 'ée' (ID: 2894)
  Prédit: 'ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.01795828714966774
    2. 'ite' → logprob: -5.142958164215088
    3. 'ée' → logprob: -5.517958164215088
    4. 'i' → logprob: -6.267958164215088
    5. 'e' → logprob: -6.642958164215088
    6. 'enue' → logprob: -7.142958164215088
    7. 'ient' → logprob: -7.517958164215088
    8. 'tie' → logprob: -8.080458641052246
    9. 'rie' → logprob: -8.205458641052246
    10. 'nie' → logprob: -8.455458641052246

Token 403: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010089774616062641
    2. '
' → logprob: -5.510089874267578
    3. 'import' → logprob: -5.635089874267578
    4. 't' → logprob: -6.510089874267578
    5. ' def' → logprob: -8.385089874267578
    6. '

' → logprob: -8.760089874267578
    7. '#' → logprob: -8.885089874267578
    8. ':' → logprob: -9.635089874267578
    9. ' 
' → logprob: -9.885089874267578
    10. '```' → logprob: -10.010089874267578

Token 404: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00257328269071877
    2. '```' → logprob: -6.377573490142822
    3. 'import' → logprob: -7.502573490142822
    4. 't' → logprob: -8.877573013305664
    5. ':' → logprob: -9.627573013305664
    6. ' def' → logprob: -9.752573013305664
    7. 'H' → logprob: -11.377573013305664
    8. '#' → logprob: -11.502573013305664
    9. 'from' → logprob: -12.002573013305664
    10. 'n' → logprob: -12.002573013305664

Token 405: ' 
' (ID: 793)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005893715424463153
    2. 'import' → logprob: -8.000589370727539
    3. '```' → logprob: -9.000589370727539
    4. 't' → logprob: -9.625589370727539
    5. ' def' → logprob: -11.125589370727539
    6. 'n' → logprob: -11.125589370727539
    7. '#' → logprob: -11.875589370727539
    8. 'from' → logprob: -11.875589370727539
    9. ' 
' → logprob: -11.875589370727539
    10. 'H' → logprob: -12.625589370727539

Token 406: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.061054359131958e-06
    2. 'import' → logprob: -12.750007629394531
    3. ' def' → logprob: -12.875007629394531
    4. '```' → logprob: -13.125007629394531
    5. 'from' → logprob: -15.000007629394531
    6. '#' → logprob: -16.12500762939453
    7. 't' → logprob: -17.25000762939453
    8. 'class' → logprob: -18.12500762939453
    9. '``' → logprob: -19.50000762939453
    10. '
' → logprob: -20.12500762939453

Token 407: ' Impl' (ID: 144563)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.392202976712724e-06
    2. 'import' → logprob: -13.000006675720215
    3. '```' → logprob: -13.000006675720215
    4. ' def' → logprob: -13.750006675720215
    5. 'from' → logprob: -14.750006675720215
    6. 't' → logprob: -15.250006675720215
    7. '#' → logprob: -15.875006675720215
    8. 'class' → logprob: -18.5000057220459
    9. 'n' → logprob: -19.0000057220459
    10. '``' → logprob: -19.6250057220459

Token 408: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.002392890863120556
    2. 'ement' → logprob: -6.127392768859863
    3. 'é' → logprob: -8.627392768859863
    4. 'mentation' → logprob: -11.752392768859863
    5. 'entation' → logprob: -12.502392768859863
    6. '#' → logprob: -12.627392768859863
    7. 'éments' → logprob: -12.627392768859863
    8. 'ém' → logprob: -13.002392768859863
    9. '```' → logprob: -13.252392768859863
    10. 'er' → logprob: -13.252392768859863

Token 409: 'ation' (ID: 387)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.17066745460033417
    2. 'ation' → logprob: -1.9206674098968506
    3. 'entation' → logprob: -5.79566764831543
    4. 'ent' → logprob: -5.92066764831543
    5. 'ment' → logprob: -6.29566764831543
    6. 'def' → logprob: -6.54566764831543
    7. 'mentation' → logprob: -7.42066764831543
    8. '#' → logprob: -8.42066764831543
    9. 'e' → logprob: -8.67066764831543
    10. 'ter' → logprob: -9.54566764831543

Token 410: ' :
' (ID: 10039)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.126521035796031e-05
    2. ' def' → logprob: -9.750091552734375
    3. 'import' → logprob: -11.125091552734375
    4. 't' → logprob: -11.875091552734375
    5. '```' → logprob: -12.250091552734375
    6. 'n' → logprob: -12.375091552734375
    7. 'from' → logprob: -13.750091552734375
    8. ':def' → logprob: -14.625091552734375
    9. ':' → logprob: -15.125091552734375
    10. '#' → logprob: -15.500091552734375

Token 411: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00018852073117159307
    2. '```' → logprob: -9.375188827514648
    3. ' def' → logprob: -10.000188827514648
    4. 'import' → logprob: -10.125188827514648
    5. 'from' → logprob: -11.000188827514648
    6. 't' → logprob: -14.000188827514648
    7. 'n' → logprob: -15.875188827514648
    8. '``' → logprob: -16.00018882751465
    9. '
' → logprob: -16.12518882751465
    10. '#' → logprob: -16.37518882751465

Token 412: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003122247871942818
    2. ' def' → logprob: -8.875311851501465
    3. 't' → logprob: -9.625311851501465
    4. 'import' → logprob: -10.000311851501465
    5. 'from' → logprob: -10.125311851501465
    6. 'n' → logprob: -11.000311851501465
    7. '```' → logprob: -12.625311851501465
    8. '#' → logprob: -14.750311851501465
    9. ' t' → logprob: -15.250311851501465
    10. '
' → logprob: -16.25031280517578

Token 413: ' Lire' (ID: 57624)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005908019375056028
    2. ' def' → logprob: -8.125591278076172
    3. 't' → logprob: -9.125591278076172
    4. 'import' → logprob: -9.250591278076172
    5. 'from' → logprob: -9.500591278076172
    6. 'n' → logprob: -12.000591278076172
    7. '```' → logprob: -12.000591278076172
    8. '#' → logprob: -13.750591278076172
    9. ' t' → logprob: -14.000591278076172
    10. 'python' → logprob: -14.625591278076172

Token 414: ' N' (ID: 478)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7007754445075989
    2. ' t' → logprob: -1.700775384902954
    3. 'n' → logprob: -2.325775384902954
    4. 't' → logprob: -2.450775384902954
    5. ' la' → logprob: -2.825775384902954
    6. ' le' → logprob: -3.325775384902954
    7. 'le' → logprob: -4.200775623321533
    8. ' les' → logprob: -4.700775623321533
    9. '()' → logprob: -5.450775623321533
    10. ' l' → logprob: -5.575775623321533

Token 415: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01271635852754116
    2. ',t' → logprob: -4.637716293334961
    3. ' =' → logprob: -6.387716293334961
    4. 't' → logprob: -7.262716293334961
    5. ' ,' → logprob: -8.262716293334961
    6. ' t' → logprob: -8.887716293334961
    7. ',n' → logprob: -9.887716293334961
    8. '=' → logprob: -10.262716293334961
    9. ',int' → logprob: -10.762716293334961
    10. '=int' → logprob: -11.012716293334961

Token 416: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10061756521463394
    2. ' t' → logprob: -2.3506176471710205
    3. 'T' → logprob: -7.850617408752441
    4. ' T' → logprob: -11.725617408752441
    5. 'import' → logprob: -12.600617408752441
    6. '`t' → logprob: -13.225617408752441
    7. '	t' → logprob: -13.225617408752441
    8. ' ' → logprob: -13.350617408752441
    9. ' and' → logprob: -14.163117408752441
    10. '  ' → logprob: -14.475617408752441

Token 417: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07485481351613998
    2. ',' → logprob: -2.949854850769043
    3. '=' → logprob: -4.074854850769043
    4. ',N' → logprob: -7.074854850769043
    5. 'n' → logprob: -7.324854850769043
    6. ',n' → logprob: -7.574854850769043
    7. 'N' → logprob: -7.949854850769043
    8. '=input' → logprob: -8.574854850769043
    9. '=N' → logprob: -9.574854850769043
    10. ' ,' → logprob: -10.449854850769043

Token 418: '#' (ID: 2)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.40875110030174255
    2. 'n' → logprob: -1.158751130104065
    3. ',' → logprob: -4.158751010894775
    4. ' N' → logprob: -6.283751010894775
    5. '
' → logprob: -6.408751010894775
    6. ',N' → logprob: -7.033751010894775
    7. ' n' → logprob: -7.658751010894775
    8. ',n' → logprob: -8.158751487731934
    9. '#' → logprob: -8.783751487731934
    10. ' ,' → logprob: -9.158751487731934

Token 419: ' -' (ID: 533)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4844083786010742
    2. 'n' → logprob: -0.9844083786010742
    3. ' N' → logprob: -4.859408378601074
    4. ' n' → logprob: -6.859408378601074
    5. ',' → logprob: -6.859408378601074
    6. '```' → logprob: -9.484408378601074
    7. 'import' → logprob: -9.609408378601074
    8. '#' → logprob: -9.734408378601074
    9. ',N' → logprob: -9.984408378601074
    10. ' line' → logprob: -10.484408378601074

Token 420: ' Pour' (ID: 13931)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.24586641788482666
    2. ' n' → logprob: -2.245866298675537
    3. 'N' → logprob: -2.745866298675537
    4. ' N' → logprob: -3.870866298675537
    5. ' buildings' → logprob: -4.120866298675537
    6. 'import' → logprob: -5.495866298675537
    7. 'def' → logprob: -6.620866298675537
    8. 'for' → logprob: -6.620866298675537
    9. '#' → logprob: -7.120866298675537
    10. '```' → logprob: -7.245866298675537

Token 421: ' chaque' (ID: 21194)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9778158664703369
    2. ' _' → logprob: -1.102815866470337
    3. ' i' → logprob: -1.852815866470337
    4. '_i' → logprob: -2.477815866470337
    5. 'i' → logprob: -2.977815866470337
    6. '_range' → logprob: -9.352815628051758
    7. ' range' → logprob: -10.102815628051758
    8. '_line' → logprob: -10.102815628051758
    9. '_n' → logprob: -10.852815628051758
    10. '_in' → logprob: -11.102815628051758

Token 422: ' bâtiment' (ID: 92976)
  Prédit: ' bâtiment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bâtiment' → logprob: -0.12438315153121948
    2. '_' → logprob: -3.4993832111358643
    3. ' building' → logprob: -3.7493832111358643
    4. ' _' → logprob: -3.8743832111358643
    5. 'b' → logprob: -3.9993832111358643
    6. '_b' → logprob: -4.999382972717285
    7. ' i' → logprob: -5.124382972717285
    8. 'i' → logprob: -5.249382972717285
    9. ' imme' → logprob: -6.624382972717285
    10. 'building' → logprob: -6.874382972717285

Token 423: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.040219902992248535
    2. ':' → logprob: -3.790219783782959
    3. 'n' → logprob: -4.415219783782959
    4. ':
' → logprob: -6.540219783782959
    5. ',n' → logprob: -7.040219783782959
    6. 'N' → logprob: -7.290219783782959
    7. ' ,' → logprob: -7.415219783782959
    8. ',
' → logprob: -8.290220260620117
    9. ' n' → logprob: -8.415220260620117
    10. ',i' → logprob: -8.790220260620117

Token 424: ' calcul' (ID: 7559)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4435141682624817
    2. ' lire' → logprob: -1.818514108657837
    3. 'x' → logprob: -2.443514108657837
    4. ' n' → logprob: -3.693514108657837
    5. 'n' → logprob: -4.068514347076416
    6. ' i' → logprob: -4.693514347076416
    7. ' input' → logprob: -5.068514347076416
    8. ' ' → logprob: -5.318514347076416
    9. 'r' → logprob: -5.318514347076416
    10. 'import' → logprob: -5.443514347076416

Token 425: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -5.796184723294573e-06
    2. '#' → logprob: -12.125005722045898
    3. 'r' → logprob: -15.625005722045898
    4. '=' → logprob: -16.5000057220459
    5. 'e' → logprob: -17.6250057220459
    6. 'import' → logprob: -18.7500057220459
    7. 'ter' → logprob: -18.7500057220459
    8. 'input' → logprob: -18.7500057220459
    9. ' =' → logprob: -19.0000057220459
    10. '_' → logprob: -19.2500057220459

Token 426: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.6886314749717712
    2. 'h' → logprob: -1.063631534576416
    3. 'max' → logprob: -3.438631534576416
    4. ' max' → logprob: -3.563631534576416
    5. ' la' → logprob: -3.688631534576416
    6. 'val' → logprob: -3.813631534576416
    7. ' val' → logprob: -5.188631534576416
    8. ' une' → logprob: -5.438631534576416
    9. ' hi' → logprob: -5.688631534576416
    10. 'hi' → logprob: -5.813631534576416

Token 427: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.009577468037605286
    2. '_' → logprob: -4.75957727432251
    3. 'i' → logprob: -7.63457727432251
    4. '_t' → logprob: -9.384577751159668
    5. ',' → logprob: -9.634577751159668
    6. '_h' → logprob: -10.009577751159668
    7. '_val' → logprob: -10.009577751159668
    8. ' *' → logprob: -10.259577751159668
    9. '[i' → logprob: -10.759577751159668
    10. '_input' → logprob: -11.009577751159668

Token 428: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0005388548015616834
    2. '*' → logprob: -8.37553882598877
    3. ',' → logprob: -8.37553882598877
    4. '_i' → logprob: -10.25053882598877
    5. ' ,' → logprob: -10.50053882598877
    6. ' ' → logprob: -13.00053882598877
    7. ' _' → logprob: -13.12553882598877
    8. '_' → logprob: -13.25053882598877
    9. 'import' → logprob: -13.50053882598877
    10. '   ' → logprob: -13.62553882598877

Token 429: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.34852704405784607
    2. 't' → logprob: -1.2235270738601685
    3. '(t' → logprob: -9.848526954650879
    4. ' ' → logprob: -11.473526954650879
    5. ' (' → logprob: -11.598526954650879
    6. '(' → logprob: -12.598526954650879
    7. '	t' → logprob: -12.973526954650879
    8. '_t' → logprob: -13.973526954650879
    9. '```' → logprob: -14.348526954650879
    10. '   ' → logprob: -14.348526954650879

Token 430: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.5241535305976868
    2. ' /' → logprob: -0.8991535305976868
    3. '/(' → logprob: -6.899153709411621
    4. ' /(' → logprob: -12.024153709411621
    5. ')' → logprob: -13.149153709411621
    6. '   ' → logprob: -13.274153709411621
    7. ' ' → logprob: -13.274153709411621
    8. '  ' → logprob: -13.649153709411621
    9. ' ' → logprob: -13.774153709411621
    10. ' /
' → logprob: -14.024153709411621

Token 431: ' (' (ID: 350)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.02347152680158615
    2. ' (' → logprob: -3.7734715938568115
    3. '(' → logprob: -8.39847183227539
    4. '(T' → logprob: -14.89847183227539
    5. ' ' → logprob: -15.02347183227539
    6. '(tt' → logprob: -17.39847183227539
    7. '  ' → logprob: -17.64847183227539
    8. '```' → logprob: -17.77347183227539
    9. ',' → logprob: -18.14847183227539
    10. '.' → logprob: -18.77347183227539

Token 432: 't' (ID: 83)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.012900309637188911
    2. ' (' → logprob: -4.387900352478027
    3. '(' → logprob: -8.137900352478027
    4. 't' → logprob: -9.387900352478027
    5. ' ' → logprob: -11.387900352478027
    6. ' t' → logprob: -13.762900352478027
    7. '  ' → logprob: -14.012900352478027
    8. '   ' → logprob: -14.512900352478027
    9. ')' → logprob: -15.137900352478027
    10. '```' → logprob: -16.01289939880371

Token 433: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04863562434911728
    2. '-' → logprob: -3.048635721206665
    3. ' ' → logprob: -10.423635482788086
    4. ')' → logprob: -11.923635482788086
    5. '-x' → logprob: -12.048635482788086
    6. '-i' → logprob: -13.048635482788086
    7. ' ' → logprob: -13.423635482788086
    8. '_' → logprob: -14.423635482788086
    9. '  ' → logprob: -14.673635482788086
    10. '_i' → logprob: -15.048635482788086

Token 434: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10020732134580612
    2. ' x' → logprob: -2.3502073287963867
    3. ' ' → logprob: -15.100207328796387
    4. '	x' → logprob: -15.975207328796387
    5. 'xi' → logprob: -16.60020637512207
    6. '_x' → logprob: -17.22520637512207
    7. ')x' → logprob: -17.97520637512207
    8. '(x' → logprob: -18.35020637512207
    9. '"x' → logprob: -18.60020637512207
    10. '   ' → logprob: -18.97520637512207

Token 435: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -1.4021237802808173e-05
    2. 'i' → logprob: -11.250014305114746
    3. ')' → logprob: -14.500014305114746
    4. '_x' → logprob: -15.250014305114746
    5. '_' → logprob: -15.750014305114746
    6. '_)' → logprob: -17.25001335144043
    7. '[i' → logprob: -17.62501335144043
    8. ')_' → logprob: -18.50001335144043
    9. 'x' → logprob: -18.62501335144043
    10. '_ix' → logprob: -19.25001335144043

Token 436: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003013809327967465
    2. ' )' → logprob: -8.250301361083984
    3. ')
' → logprob: -10.875301361083984
    4. '))' → logprob: -11.750301361083984
    5. '),' → logprob: -12.750301361083984
    6. '   ' → logprob: -13.125301361083984
    7. ');' → logprob: -13.875301361083984
    8. ')

' → logprob: -14.125301361083984
    9. ')\' → logprob: -14.125301361083984
    10. ')*' → logprob: -14.250301361083984

Token 437: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2325149774551392
    2. '```' → logprob: -1.4825149774551392
    3. '#' → logprob: -1.9825149774551392
    4. 'n' → logprob: -2.7325148582458496
    5. '.' → logprob: -2.9825148582458496
    6. 'for' → logprob: -3.3575148582458496
    7. ',' → logprob: -3.4825148582458496
    8. 's' → logprob: -3.6075148582458496
    9. 'import' → logprob: -3.7325148582458496
    10. 'N' → logprob: -3.7325148582458496

Token 438: ' -' (ID: 533)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6931156516075134
    2. 'N' → logprob: -1.6931157112121582
    3. '#' → logprob: -1.8181157112121582
    4. '```' → logprob: -3.318115711212158
    5. '
' → logprob: -3.443115711212158
    6. 'for' → logprob: -3.693115711212158
    7. 'import' → logprob: -3.818115711212158
    8. 's' → logprob: -4.943115711212158
    9. '\n' → logprob: -5.443115711212158
    10. ',' → logprob: -5.568115711212158

Token 439: ' Pr' (ID: 2284)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5547047257423401
    2. 'max' → logprob: -2.3047046661376953
    3. 'Calcul' → logprob: -2.9297046661376953
    4. 'from' → logprob: -3.0547046661376953
    5. 'H' → logprob: -3.0547046661376953
    6. '#' → logprob: -3.3047046661376953
    7. ' H' → logprob: -4.054704666137695
    8. 'initial' → logprob: -4.179704666137695
    9. 'print' → logprob: -4.429704666137695
    10. ' max' → logprob: -4.554704666137695

Token 440: 'endre' (ID: 9574)
  Prédit: 'endre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endre' → logprob: -0.012799215503036976
    2. 'int' → logprob: -4.512799263000488
    3. '#' → logprob: -7.137799263000488
    4. 'é' → logprob: -8.137799263000488
    5. 'és' → logprob: -8.262799263000488
    6. 'éc' → logprob: -9.262799263000488
    7. 'endres' → logprob: -9.387799263000488
    8. 'o' → logprob: -9.887799263000488
    9. 'endr' → logprob: -10.012799263000488
    10. 'od' → logprob: -10.512799263000488

Token 441: ' le' (ID: 505)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.10126220434904099
    2. ' max' → logprob: -2.351262092590332
    3. 'le' → logprob: -7.851262092590332
    4. 'la' → logprob: -7.976262092590332
    5. ' la' → logprob: -8.351262092590332
    6. ' le' → logprob: -9.601262092590332
    7. 'l' → logprob: -12.226262092590332
    8. '(max' → logprob: -12.351262092590332
    9. ' ' → logprob: -12.851262092590332
    10. '	max' → logprob: -13.726262092590332

Token 442: ' maximum' (ID: 10562)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.02438904531300068
    2. ' max' → logprob: -3.7743890285491943
    3. 'maximum' → logprob: -7.024389266967773
    4. ' maximum' → logprob: -8.399389266967773
    5. ' maxi' → logprob: -11.649389266967773
    6. ' maximale' → logprob: -12.274389266967773
    7. '_max' → logprob: -12.524389266967773
    8. 'm' → logprob: -12.649389266967773
    9. ' maximal' → logprob: -13.149389266967773
    10. 'import' → logprob: -13.649389266967773

Token 443: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3939703702926636
    2. 'import' → logprob: -2.018970489501953
    3. 'N' → logprob: -2.393970489501953
    4. 'def' → logprob: -3.518970489501953
    5. '```' → logprob: -3.643970489501953
    6. '#' → logprob: -4.268970489501953
    7. '
' → logprob: -4.393970489501953
    8. ',' → logprob: -5.893970489501953
    9. 's' → logprob: -6.268970489501953
    10. '

' → logprob: -6.518970489501953

Token 444: ' ces' (ID: 10532)
  Prédit: 'ces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ces' → logprob: -0.022155171260237694
    2. 'c' → logprob: -4.522155284881592
    3. ' ces' → logprob: -4.897155284881592
    4. ' cette' → logprob: -6.397155284881592
    5. 'val' → logprob: -7.647155284881592
    6. ' ce' → logprob: -7.647155284881592
    7. 'ce' → logprob: -7.772155284881592
    8. 'cela' → logprob: -8.772154808044434
    9. 'cel' → logprob: -9.022154808044434
    10. 'h' → logprob: -9.647154808044434

Token 445: ' valeurs' (ID: 73668)
  Prédit: ' valeurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.3517688810825348
    2. 'val' → logprob: -1.2267688512802124
    3. ' val' → logprob: -6.601768970489502
    4. 'values' → logprob: -7.476768970489502
    5. ' expressions' → logprob: -7.976768970489502
    6. 'calcul' → logprob: -8.601768493652344
    7. 'vals' → logprob: -8.726768493652344
    8. 'express' → logprob: -8.851768493652344
    9. ' calcul' → logprob: -9.226768493652344
    10. '_val' → logprob: -9.476768493652344

Token 446: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14337433874607086
    2. 'N' → logprob: -3.018374443054199
    3. '```' → logprob: -3.143374443054199
    4. 'def' → logprob: -3.393374443054199
    5. 'import' → logprob: -5.393374443054199
    6. '#' → logprob: -6.393374443054199
    7. '
' → logprob: -6.768374443054199
    8. '#!/' → logprob: -9.0183744430542
    9. 't' → logprob: -9.5183744430542
    10. '``' → logprob: -9.5183744430542

Token 447: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3827749192714691
    2. 'N' → logprob: -1.7577749490737915
    3. 'import' → logprob: -2.632774829864502
    4. '```' → logprob: -3.132774829864502
    5. 'def' → logprob: -4.382774829864502
    6. '
' → logprob: -5.007774829864502
    7. 't' → logprob: -6.257774829864502
    8. '#' → logprob: -6.382774829864502
    9. 'H' → logprob: -6.757774829864502
    10. 'from' → logprob: -7.007774829864502

Token 448: ' -' (ID: 533)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4396858811378479
    2. 'N' → logprob: -2.064685821533203
    3. '```' → logprob: -2.064685821533203
    4. 'import' → logprob: -3.189685821533203
    5. 'def' → logprob: -3.939685821533203
    6. '#' → logprob: -4.689685821533203
    7. '
' → logprob: -4.939685821533203
    8. '``' → logprob: -5.814685821533203
    9. 'for' → logprob: -6.189685821533203
    10. '  
' → logprob: -6.189685821533203

Token 449: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5519529581069946
    2. ' print' → logprob: -1.3019529581069946
    3. 'import' → logprob: -2.301952838897705
    4. '#' → logprob: -3.801952838897705
    5. ' H' → logprob: -5.301952838897705
    6. 'H' → logprob: -5.551952838897705
    7. 'if' → logprob: -6.176952838897705
    8. ' if' → logprob: -6.176952838897705
    9. 'Afficher' → logprob: -6.176952838897705
    10. ' import' → logprob: -6.301952838897705

Token 450: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -7.028536492725834e-05
    2. '#' → logprob: -10.875070571899414
    3. 'iche' → logprob: -11.625070571899414
    4. 'cher' → logprob: -11.875070571899414
    5. 'ichage' → logprob: -11.875070571899414
    6. 'ic' → logprob: -12.250070571899414
    7. 'ich' → logprob: -12.250070571899414
    8. '_' → logprob: -12.375070571899414
    9. '

' → logprob: -12.750070571899414
    10. 'ichier' → logprob: -13.250070571899414

Token 451: ' le' (ID: 505)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5640648603439331
    2. ' la' → logprob: -2.3140649795532227
    3. 'int' → logprob: -2.4390649795532227
    4. '```' → logprob: -2.8140649795532227
    5. ' le' → logprob: -3.6890649795532227
    6. '
' → logprob: -3.9390649795532227
    7. ' H' → logprob: -3.9390649795532227
    8. 'H' → logprob: -4.189064979553223
    9. ' int' → logprob: -4.314064979553223
    10. '"' → logprob: -4.314064979553223

Token 452: ' résultat' (ID: 62556)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -1.3778972625732422
    2. 'maximum' → logprob: -1.5028972625732422
    3. 'max' → logprob: -1.8778972625732422
    4. 'rés' → logprob: -2.002897262573242
    5. ' résultat' → logprob: -2.127897262573242
    6. ' maximum' → logprob: -3.002897262573242
    7. 'int' → logprob: -3.252897262573242
    8. ' minimum' → logprob: -4.377897262573242
    9. 'result' → logprob: -5.127897262573242
    10. ' max' → logprob: -6.002897262573242

Token 453: ' avec' (ID: 3937)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0544326305389404
    2. 'n' → logprob: -1.3044326305389404
    3. '```' → logprob: -1.5544326305389404
    4. 'def' → logprob: -3.3044326305389404
    5. 'N' → logprob: -3.4294326305389404
    6. '

' → logprob: -3.6794326305389404
    7. 'import' → logprob: -3.9294326305389404
    8. ':' → logprob: -4.1794328689575195
    9. '\n' → logprob: -4.5544328689575195
    10. ':
' → logprob: -5.6794328689575195

Token 454: ' une' (ID: 2463)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.2252642810344696
    2. '10' → logprob: -2.350264310836792
    3. ' ' → logprob: -3.225264310836792
    4. '7' → logprob: -4.100264072418213
    5. '12' → logprob: -4.475264072418213
    6. '9' → logprob: -4.725264072418213
    7. '8' → logprob: -4.850264072418213
    8. '2' → logprob: -5.225264072418213
    9. '5' → logprob: -5.600264072418213
    10. '4' → logprob: -5.725264072418213

Token 455: ' précision' (ID: 130591)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.068988561630249
    2. '6' → logprob: -1.193988561630249
    3. ' précision' → logprob: -1.943988561630249
    4. 'pr' → logprob: -3.068988561630249
    5. '2' → logprob: -3.943988561630249
    6. '7' → logprob: -3.943988561630249
    7. '10' → logprob: -4.068988800048828
    8. 'f' → logprob: -4.193988800048828
    9. 'float' → logprob: -4.443988800048828
    10. '4' → logprob: -4.443988800048828

Token 456: ' suffis' (ID: 85470)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -1.9140936136245728
    2. '2' → logprob: -2.164093494415283
    3. ' de' → logprob: -2.289093494415283
    4. 'f' → logprob: -2.414093494415283
    5. '6' → logprob: -2.539093494415283
    6. ' =' → logprob: -2.539093494415283
    7. '3' → logprob: -2.789093494415283
    8. '0' → logprob: -3.039093494415283
    9. 'import' → logprob: -3.039093494415283
    10. ' ' → logprob: -3.039093494415283

Token 457: 'ante' (ID: 2116)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.5924062132835388
    2. 'e' → logprob: -1.4674062728881836
    3. 'é' → logprob: -2.8424062728881836
    4. 'à' → logprob: -3.4674062728881836
    5. ' à' → logprob: -3.5924062728881836
    6. 'import' → logprob: -3.5924062728881836
    7. '=' → logprob: -3.8424062728881836
    8. '.' → logprob: -4.967406272888184
    9. 'f' → logprob: -5.342406272888184
    10. 'è' → logprob: -5.342406272888184

Token 458: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3562134802341461
    2. 'N' → logprob: -1.8562134504318237
    3. 'import' → logprob: -2.8562135696411133
    4. '```' → logprob: -2.8562135696411133
    5. 'def' → logprob: -3.7312135696411133
    6. '
' → logprob: -6.356213569641113
    7. '#' → logprob: -7.106213569641113
    8. 'from' → logprob: -7.856213569641113
    9. '

' → logprob: -8.106213569641113
    10. '#!/' → logprob: -8.731213569641113

Token 459: 'double' (ID: 9489)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.171010822057724
    2. '6' → logprob: -2.046010732650757
    3. ' ' → logprob: -4.296010971069336
    4. '0' → logprob: -5.546010971069336
    5. 'f' → logprob: -6.046010971069336
    6. '10' → logprob: -6.171010971069336
    7. ' .' → logprob: -6.421010971069336
    8. '7' → logprob: -6.671010971069336
    9. '.f' → logprob: -7.296010971069336
    10. '8' → logprob: -7.546010971069336

Token 460: ' précision' (ID: 130591)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03084712103009224
    2. ' )' → logprob: -3.9058470726013184
    3. 'float' → logprob: -5.280847072601318
    4. '<|end|>' → logprob: -6.905847072601318
    5. 'precision' → logprob: -6.905847072601318
    6. 'f' → logprob: -7.155847072601318
    7. '_precision' → logprob: -7.655847072601318
    8. '_float' → logprob: -7.780847072601318
    9. ' 
' → logprob: -8.655847549438477
    10. '64' → logprob: -8.780847549438477

Token 461: ' par' (ID: 686)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030940277501940727
    2. 'import' → logprob: -3.780940294265747
    3. 'def' → logprob: -6.155940055847168
    4. ')
' → logprob: -6.405940055847168
    5. '.' → logprob: -7.530940055847168
    6. '```' → logprob: -7.530940055847168
    7. '):' → logprob: -7.780940055847168
    8. ' )' → logprob: -8.030940055847168
    9. '#' → logprob: -8.280940055847168
    10. ',' → logprob: -8.280940055847168

Token 462: ' défaut' (ID: 79375)
  Prédit: ' défaut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' défaut' → logprob: -0.5544112324714661
    2. 'ex' → logprob: -2.0544111728668213
    3. 'import' → logprob: -2.1794111728668213
    4. 'def' → logprob: -2.4294111728668213
    5. 'default' → logprob: -3.0544111728668213
    6. 'print' → logprob: -4.1794114112854
    7. ' default' → logprob: -4.8044114112854
    8. ' def' → logprob: -4.9294114112854
    9. ' exemple' → logprob: -5.3044114112854
    10. 'e' → logprob: -6.4294114112854

Token 463: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012696358608081937
    2. 'import' → logprob: -7.501269817352295
    3. ')
' → logprob: -8.501269340515137
    4. ' )' → logprob: -8.751269340515137
    5. 'def' → logprob: -8.876269340515137
    6. 'print' → logprob: -9.876269340515137
    7. ').' → logprob: -10.251269340515137
    8. ',' → logprob: -10.251269340515137
    9. '#' → logprob: -10.501269340515137
    10. '):' → logprob: -11.251269340515137

Token 464: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.26737111806869507
    2. '```' → logprob: -2.51737117767334
    3. '
' → logprob: -3.14237117767334
    4. 'N' → logprob: -3.14237117767334
    5. 'import' → logprob: -3.39237117767334
    6. 'def' → logprob: -3.76737117767334
    7. ':' → logprob: -6.26737117767334
    8. '

' → logprob: -6.51737117767334
    9. ' 
' → logprob: -6.64237117767334
    10. '\n' → logprob: -6.76737117767334

Token 465: ' 
' (ID: 793)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.7898690700531006
    2. 'n' → logprob: -0.7898690700531006
    3. '```' → logprob: -3.0398690700531006
    4. 'def' → logprob: -3.7898690700531006
    5. 'import' → logprob: -3.9148690700531006
    6. '#' → logprob: -7.16486930847168
    7. '
' → logprob: -7.28986930847168
    8. '``' → logprob: -9.41486930847168
    9. '

' → logprob: -9.91486930847168
    10. '#!/' → logprob: -10.03986930847168

Token 466: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07967419922351837
    2. 'N' → logprob: -2.829674243927002
    3. 'n' → logprob: -4.079674243927002
    4. '```' → logprob: -7.704674243927002
    5. '#' → logprob: -9.079673767089844
    6. 'import' → logprob: -9.579673767089844
    7. ' N' → logprob: -13.579673767089844
    8. '
' → logprob: -14.079673767089844
    9. 'ndef' → logprob: -14.204673767089844
    10. ' def' → logprob: -14.329673767089844

Token 467: ' Cette' (ID: 27383)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.108094722032547
    2. 'N' → logprob: -2.6080946922302246
    3. 'n' → logprob: -3.6080946922302246
    4. '```' → logprob: -6.608094692230225
    5. 'import' → logprob: -8.108095169067383
    6. '#' → logprob: -10.608095169067383
    7. ' N' → logprob: -13.858095169067383
    8. '
' → logprob: -14.108095169067383
    9. ' def' → logprob: -14.233095169067383
    10. 'ndef' → logprob: -14.358095169067383

Token 468: ' méthode' (ID: 71490)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.46653541922569275
    2. ' solution' → logprob: -1.5915354490280151
    3. ' def' → logprob: -2.3415353298187256
    4. ' code' → logprob: -3.7165353298187256
    5. '#' → logprob: -4.341535568237305
    6. 'solution' → logprob: -5.216535568237305
    7. 'n' → logprob: -5.341535568237305
    8. ' #' → logprob: -5.841535568237305
    9. ' n' → logprob: -6.466535568237305
    10. ' part' → logprob: -6.841535568237305

Token 469: ' est' (ID: 893)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.034408584237098694
    2. ' def' → logprob: -4.1594085693359375
    3. 'import' → logprob: -4.2844085693359375
    4. ':' → logprob: -6.6594085693359375
    5. ' est' → logprob: -7.7844085693359375
    6. ' reste' → logprob: -7.9094085693359375
    7. ' permet' → logprob: -7.9094085693359375
    8. ' =' → logprob: -8.034408569335938
    9. '#' → logprob: -8.284408569335938
    10. ' déf' → logprob: -8.784408569335938

Token 470: ' efficace' (ID: 54338)
  Prédit: 'simple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'simple' → logprob: -0.24379093945026398
    2. 'import' → logprob: -2.743790864944458
    3. 'direct' → logprob: -3.868790864944458
    4. 'imple' → logprob: -3.993790864944458
    5. 'optim' → logprob: -4.118791103363037
    6. 'rob' → logprob: -4.243791103363037
    7. ' simple' → logprob: -4.243791103363037
    8. 'exact' → logprob: -4.368791103363037
    9. '```' → logprob: -4.868791103363037
    10. 'eff' → logprob: -4.868791103363037

Token 471: ' en' (ID: 469)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.21635428071022034
    2. 'def' → logprob: -2.3413543701171875
    3. 'n' → logprob: -3.7163543701171875
    4. ',' → logprob: -3.8413543701171875
    5. '.' → logprob: -3.8413543701171875
    6. '#' → logprob: -4.5913543701171875
    7. '<|end|>' → logprob: -4.9663543701171875
    8. 'N' → logprob: -5.9663543701171875
    9. '```' → logprob: -5.9663543701171875
    10. ')' → logprob: -6.7163543701171875

Token 472: ' O' (ID: 532)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -2.451116051815916e-05
    2. 'temps' → logprob: -11.125024795532227
    3. ' O' → logprob: -12.000024795532227
    4. 'complex' → logprob: -13.875024795532227
    5. '#' → logprob: -14.125024795532227
    6. 'python' → logprob: -14.500024795532227
    7. 'linear' → logprob: -14.875024795532227
    8. '```' → logprob: -15.125024795532227
    9. 'o' → logprob: -15.750024795532227
    10. '\' → logprob: -15.875024795532227

Token 473: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.008698835968971252
    2. '(n' → logprob: -5.3836989402771
    3. '(' → logprob: -5.5086989402771
    4. 'N' → logprob: -11.508698463439941
    5. 'n' → logprob: -12.508698463439941
    6. '1' → logprob: -13.133698463439941
    7. '(log' → logprob: -14.383698463439941
    8. '(
' → logprob: -14.508698463439941
    9. ' (' → logprob: -14.883698463439941
    10. 'O' → logprob: -15.008698463439941

Token 474: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003056972986087203
    2. ' )' → logprob: -6.00305700302124
    3. '),' → logprob: -8.253056526184082
    4. ')
' → logprob: -9.003056526184082
    5. ').' → logprob: -9.253056526184082
    6. ')

' → logprob: -10.753056526184082
    7. '(N' → logprob: -10.753056526184082
    8. ')#' → logprob: -11.003056526184082
    9. '):' → logprob: -11.753056526184082
    10. '(n' → logprob: -12.128056526184082

Token 475: ' suffis' (ID: 85470)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0756456851959229
    2. '#' → logprob: -1.2006456851959229
    3. 'N' → logprob: -1.4506456851959229
    4. 'n' → logprob: -2.575645685195923
    5. '```' → logprob: -3.950645685195923
    6. 'def' → logprob: -4.200645446777344
    7. ' N' → logprob: -5.200645446777344
    8. ' #' → logprob: -6.575645446777344
    9. 'car' → logprob: -6.575645446777344
    10. 'et' → logprob: -7.200645446777344

Token 476: 'ante' (ID: 2116)
  Prédit: 'isant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isant' → logprob: -0.4679918885231018
    2. 'is' → logprob: -1.467991828918457
    3. 'ante' → logprob: -2.342991828918457
    4. '#' → logprob: -3.717991828918457
    5. 'iante' → logprob: -4.842991828918457
    6. 'it' → logprob: -5.467991828918457
    7. 'ient' → logprob: -5.467991828918457
    8. 'i' → logprob: -6.467991828918457
    9. 'ait' → logprob: -6.717991828918457
    10. 's' → logprob: -7.217991828918457

Token 477: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5305346250534058
    2. 'import' → logprob: -1.7805346250534058
    3. 'n' → logprob: -2.0305347442626953
    4. 'N' → logprob: -2.9055347442626953
    5. ' for' → logprob: -4.155534744262695
    6. 'pour' → logprob: -4.405534744262695
    7. ' pour' → logprob: -4.905534744262695
    8. '```' → logprob: -4.905534744262695
    9. 'def' → logprob: -5.030534744262695
    10. '.' → logprob: -5.905534744262695

Token 478: ' N' (ID: 478)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.765012264251709
    2. 'N' → logprob: -1.390012264251709
    3. 'le' → logprob: -3.140012264251709
    4. 'la' → logprob: -3.390012264251709
    5. 'rés' → logprob: -3.515012264251709
    6. 'l' → logprob: -3.765012264251709
    7. ' résoudre' → logprob: -3.890012264251709
    8. ' gérer' → logprob: -4.015012264251709
    9. 'ce' → logprob: -4.515012264251709
    10. ' les' → logprob: -4.640012264251709

Token 479: ' ≤' (ID: 72554)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9238535165786743
    2. '=' → logprob: -1.5488535165786743
    3. ' <=' → logprob: -1.6738535165786743
    4. '<=' → logprob: -1.7988535165786743
    5. ' up' → logprob: -3.7988533973693848
    6. 's' → logprob: -5.798853397369385
    7. ' ≤' → logprob: -6.548853397369385
    8. '≤' → logprob: -6.673853397369385
    9. '100' → logprob: -6.923853397369385
    10. 'max' → logprob: -7.298853397369385

Token 480: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.11293985694646835
    2. '100' → logprob: -2.2379398345947266
    3. '1' → logprob: -9.987939834594727
    4. '200' → logprob: -10.112939834594727
    5. ' ' → logprob: -11.737939834594727
    6. '300' → logprob: -11.862939834594727
    7. 'int' → logprob: -11.987939834594727
    8. '2' → logprob: -11.987939834594727
    9. '500' → logprob: -13.112939834594727
    10. '```' → logprob: -14.612939834594727

Token 481: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1432173252105713
    2. '100' → logprob: -2.0182173252105713
    3. '200' → logprob: -7.768217086791992
    4. '300' → logprob: -10.393217086791992
    5. 'int' → logprob: -10.393217086791992
    6. '2' → logprob: -10.643217086791992
    7. '1' → logprob: -10.893217086791992
    8. '500' → logprob: -11.643217086791992
    9. ' ' → logprob: -13.018217086791992
    10. '150' → logprob: -13.893217086791992

Token 482: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.33187586069107056
    2. '
' → logprob: -1.7068758010864258
    3. 'N' → logprob: -2.956875801086426
    4. 'def' → logprob: -3.706875801086426
    5. '```' → logprob: -4.206875801086426
    6. 'import' → logprob: -5.331875801086426
    7. '

' → logprob: -7.331875801086426
    8. 's' → logprob: -7.456875801086426
    9. '\n' → logprob: -7.456875801086426
    10. ',' → logprob: -7.706875801086426

Token 483: '.


' (ID: 8525)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.23367111384868622
    2. 'def' → logprob: -1.8586710691452026
    3. 'N' → logprob: -3.233671188354492
    4. 'import' → logprob: -4.983671188354492
    5. '```' → logprob: -5.358671188354492
    6. '#' → logprob: -7.233671188354492
    7. '
' → logprob: -7.358671188354492
    8. '#!/' → logprob: -10.233671188354492
    9. ' N' → logprob: -10.983671188354492
    10. '\n' → logprob: -11.108671188354492

Token 484: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.577437162399292
    2. 'def' → logprob: -1.077437162399292
    3. 'n' → logprob: -2.577437162399292
    4. '```' → logprob: -3.827437162399292
    5. 'import' → logprob: -7.702437400817871
    6. '``' → logprob: -12.077437400817871
    7. '#' → logprob: -12.577437400817871
    8. ' N' → logprob: -13.702437400817871
    9. 'from' → logprob: -14.327437400817871
    10. 'ndef' → logprob: -14.702437400817871

Token 485: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007621295750141144
    2. ',t' → logprob: -4.8826212882995605
    3. ' ,' → logprob: -11.882621765136719
    4. 't' → logprob: -12.007621765136719
    5. ' t' → logprob: -13.757621765136719
    6. '=' → logprob: -14.132621765136719
    7. ',
' → logprob: -16.00762176513672
    8. ' =' → logprob: -17.13262176513672
    9. ',int' → logprob: -17.13262176513672
    10. ',T' → logprob: -17.38262176513672

Token 486: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.023332247510552406
    2. 't' → logprob: -3.773332357406616
    3. ' ' → logprob: -9.648332595825195
    4. '=' → logprob: -11.523332595825195
    5. ' ' → logprob: -12.398332595825195
    6. '  ' → logprob: -12.898332595825195
    7. '_t' → logprob: -13.398332595825195
    8. '=t' → logprob: -13.898332595825195
    9. '	t' → logprob: -13.898332595825195
    10. ' =' → logprob: -14.648332595825195

Token 487: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16023144125938416
    2. ' =' → logprob: -1.9102314710617065
    3. '=input' → logprob: -11.910231590270996
    4. ' ' → logprob: -15.660231590270996
    5. '=int' → logprob: -15.660231590270996
    6. '=list' → logprob: -16.91023063659668
    7. ' ' → logprob: -18.91023063659668
    8. '=float' → logprob: -19.41023063659668
    9. '=open' → logprob: -19.78523063659668
    10. '＝' → logprob: -19.91023063659668

Token 488: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.011048170737922192
    2. ' map' → logprob: -4.511048316955566
    3. 'list' → logprob: -15.386048316955566
    4. '[' → logprob: -16.26104736328125
    5. '	map' → logprob: -16.88604736328125
    6. '(map' → logprob: -17.01104736328125
    7. '.map' → logprob: -19.26104736328125
    8. '_map' → logprob: -19.76104736328125
    9. ' ' → logprob: -19.76104736328125
    10. ' [' → logprob: -20.01104736328125

Token 489: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00025204161647707224
    2. 'int' → logprob: -8.375251770019531
    3. '(' → logprob: -10.875251770019531
    4. '[int' → logprob: -13.750251770019531
    5. '<int' → logprob: -14.375251770019531
    6. '(input' → logprob: -14.750251770019531
    7. '=int' → logprob: -15.750251770019531
    8. ' int' → logprob: -15.875251770019531
    9. 'input' → logprob: -16.37525177001953
    10. '(
' → logprob: -17.00025177001953

Token 490: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.6741938591003418
    2. ',' → logprob: -0.9241938591003418
    3. 'input' → logprob: -2.424193859100342
    4. '(input' → logprob: -5.424193859100342
    5. ' input' → logprob: -7.799193859100342
    6. '=input' → logprob: -9.0491943359375
    7. '[input' → logprob: -9.9241943359375
    8. '(' → logprob: -11.0491943359375
    9. '.input' → logprob: -11.5491943359375
    10. '<input' → logprob: -11.6741943359375

Token 491: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00861456897109747
    2. ' input' → logprob: -4.758614540100098
    3. '(input' → logprob: -19.883615493774414
    4. '=input' → logprob: -20.508615493774414
    5. '	input' → logprob: -20.633615493774414
    6. ',input' → logprob: -21.883615493774414
    7. '<input' → logprob: -22.258615493774414
    8. ' ' → logprob: -22.508615493774414
    9. '_input' → logprob: -23.758615493774414
    10. '.input' → logprob: -23.883615493774414

Token 492: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9361264946837764e-07
    2. '()' → logprob: -16.125
    3. ' ().' → logprob: -17.25
    4. '(' → logprob: -21.125
    5. '())' → logprob: -21.25
    6. '()
' → logprob: -22.25
    7. '.split' → logprob: -22.625
    8. '()[' → logprob: -23.5
    9. '.' → logprob: -23.625
    10. '().__' → logprob: -23.75

Token 493: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.961759259458631e-06
    2. 'strip' → logprob: -12.250004768371582
    3. ' split' → logprob: -16.2500057220459
    4. 'rstrip' → logprob: -18.0000057220459
    5. 'spl' → logprob: -18.1250057220459
    6. '(split' → logprob: -18.6250057220459
    7. '.split' → logprob: -22.1250057220459
    8. '_split' → logprob: -22.8750057220459
    9. 'read' → logprob: -23.0000057220459
    10. ')' → logprob: -23.1250057220459

Token 494: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.042512279003858566
    2. ')' → logprob: -3.2925121784210205
    3. '()' → logprob: -5.4175124168396
    4. '(' → logprob: -11.417511940002441
    5. '()))' → logprob: -12.292511940002441
    6. '('' → logprob: -13.042511940002441
    7. '())
' → logprob: -13.667511940002441
    8. '))' → logprob: -13.792511940002441
    9. '().' → logprob: -14.292511940002441
    10. ' ())' → logprob: -14.417511940002441

Token 495: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.061849016696214676
    2. 'H' → logprob: -3.0618491172790527
    3. 'result' → logprob: -5.061849117279053
    4. 'ha' → logprob: -6.186849117279053
    5. 'he' → logprob: -6.561849117279053
    6. 'res' → logprob: -6.561849117279053
    7. 'maximum' → logprob: -7.436849117279053
    8. 'height' → logprob: -7.561849117279053
    9. 'h' → logprob: -7.936849117279053
    10. 'build' → logprob: -8.436848640441895

Token 496: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.05767710134387016
    2. '_H' → logprob: -3.1826770305633545
    3. '_h' → logprob: -4.432677268981934
    4. 'H' → logprob: -6.182677268981934
    5. '_value' → logprob: -8.307677268981934
    6. '_val' → logprob: -8.307677268981934
    7. '_' → logprob: -10.307677268981934
    8. '_he' → logprob: -10.682677268981934
    9. '_ht' → logprob: -10.932677268981934
    10. 'Height' → logprob: -11.182677268981934

Token 497: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141392946243286
    2. ' =' → logprob: -1.701413869857788
    3. '=float' → logprob: -15.826414108276367
    4. '_' → logprob: -16.076414108276367
    5. '_height' → logprob: -16.201414108276367
    6. ' ' → logprob: -16.576414108276367
    7. 's' → logprob: -16.826414108276367
    8. '_value' → logprob: -17.201414108276367
    9. '_val' → logprob: -18.076414108276367
    10. '_=' → logprob: -18.201414108276367

Token 498: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '-' → logprob: -16.875
    4. 'float' → logprob: -17.5
    5. '   ' → logprob: -21.125
    6. '```' → logprob: -22.625
    7. ' ' → logprob: -22.875
    8. ' -' → logprob: -23.0
    9. '00' → logprob: -23.625
    10. '  ' → logprob: -23.625

Token 499: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. '-' → logprob: -14.125000953674316
    3. 'float' → logprob: -16.25
    4. ' ' → logprob: -20.875
    5. '-s' → logprob: -23.625
    6. '-f' → logprob: -23.625
    7. '```' → logprob: -23.75
    8. '   ' → logprob: -24.25
    9. ' -' → logprob: -24.75
    10. '00' → logprob: -25.25

Token 500: '.' (ID: 13)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00034023032640106976
    2. ' for' → logprob: -8.000340461730957
    3. '
' → logprob: -12.250340461730957
    4. '<|end|>' → logprob: -17.75033950805664
    5. '	for' → logprob: -19.00033950805664
    6. '```' → logprob: -19.37533950805664
    7. ' 
' → logprob: -20.00033950805664
    8. '

' → logprob: -20.25033950805664
    9. '  
' → logprob: -20.37533950805664
    10. ':' → logprob: -20.87533950805664

Token 501: '0' (ID: 15)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04468684270977974
    2. '0' → logprob: -3.169686794281006
    3. ' for' → logprob: -6.419686794281006
    4. 'rstrip' → logprob: -11.044687271118164
    5. 'print' → logprob: -11.919687271118164
    6. 'py' → logprob: -12.044687271118164
    7. 'from' → logprob: -12.044687271118164
    8. '000' → logprob: -12.919687271118164
    9. 'float' → logprob: -12.919687271118164
    10. 't' → logprob: -13.169687271118164

Token 502: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1756367712223437e-05
    2. ' for' → logprob: -11.375011444091797
    3. '
' → logprob: -15.500011444091797
    4. '	for' → logprob: -18.250011444091797
    5. '<|end|>' → logprob: -18.750011444091797
    6. '```' → logprob: -21.250011444091797
    7. '    
' → logprob: -21.875011444091797
    8. '

' → logprob: -21.875011444091797
    9. '  
' → logprob: -22.000011444091797
    10. 'import' → logprob: -22.000011444091797

Token 503: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.7697225252486533e-06
    2. ' for' → logprob: -12.500003814697266
    3. '
' → logprob: -17.000003814697266
    4. '	for' → logprob: -20.500003814697266
    5. 'import' → logprob: -22.750003814697266
    6. '```' → logprob: -23.000003814697266
    7. '    
' → logprob: -23.750003814697266
    8. '

' → logprob: -24.250003814697266
    9. '<|end|>' → logprob: -24.375003814697266
    10. ' 
' → logprob: -24.625003814697266

Token 504: ' stock' (ID: 6546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.511406809295295e-06
    2. ' for' → logprob: -12.000006675720215
    3. 'float' → logprob: -15.750006675720215
    4. 'max' → logprob: -17.0000057220459
    5. '#' → logprob: -17.1250057220459
    6. '
' → logprob: -17.7500057220459
    7. '0' → logprob: -17.7500057220459
    8. 'For' → logprob: -19.0000057220459
    9. 'fo' → logprob: -19.2500057220459
    10. 'f' → logprob: -19.3750057220459

Token 505: 'era' (ID: 2060)
  Prédit: 'age'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.34746360778808594
    2. '=' → logprob: -1.847463607788086
    3. 'é' → logprob: -2.097463607788086
    4. 'ée' → logprob: -5.597463607788086
    5. 'e' → logprob: -5.722463607788086
    6. 'er' → logprob: -6.097463607788086
    7. '=max' → logprob: -6.222463607788086
    8. '=float' → logprob: -6.722463607788086
    9. ' =' → logprob: -8.097463607788086
    10. 'max' → logprob: -8.847463607788086

Token 506: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.33544155955314636
    2. 'le' → logprob: -1.4604415893554688
    3. '0' → logprob: -3.8354415893554688
    4. 'max' → logprob: -3.9604415893554688
    5. 'the' → logprob: -5.210441589355469
    6. ' la' → logprob: -5.210441589355469
    7. 'float' → logprob: -7.835441589355469
    8. 'l' → logprob: -7.960441589355469
    9. ' le' → logprob: -9.210441589355469
    10. '.' → logprob: -9.335441589355469

Token 507: ' hauteur' (ID: 72987)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.11508513242006302
    2. 'float' → logprob: -3.1150851249694824
    3. 'maximum' → logprob: -3.2400851249694824
    4. 'ha' → logprob: -4.365085124969482
    5. '0' → logprob: -5.240085124969482
    6. 'me' → logprob: -5.365085124969482
    7. 'val' → logprob: -7.490085124969482
    8. ' hauteur' → logprob: -7.615085124969482
    9. 'height' → logprob: -7.740085124969482
    10. 'ma' → logprob: -7.990085124969482

Token 508: ' minimale' (ID: 143217)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006842299364507198
    2. ' for' → logprob: -5.631842136383057
    3. '<|end|>' → logprob: -5.881842136383057
    4. 'max' → logprob: -8.756842613220215
    5. 'pour' → logprob: -9.256842613220215
    6. '<|end|>' → logprob: -10.006842613220215
    7. '
' → logprob: -10.631842613220215
    8. 'import' → logprob: -11.006842613220215
    9. 'de' → logprob: -11.256842613220215
    10. 'des' → logprob: -11.506842613220215

Token 509: ' requ' (ID: 7028)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.251091377227567e-05
    2. ' for' → logprob: -10.500042915344238
    3. 'pour' → logprob: -11.125042915344238
    4. '
' → logprob: -16.750041961669922
    5. '	for' → logprob: -18.125041961669922
    6. '

' → logprob: -18.125041961669922
    7. ' pour' → logprob: -19.000041961669922
    8. 'required' → logprob: -19.000041961669922
    9. '_for' → logprob: -19.250041961669922
    10. ',' → logprob: -19.250041961669922

Token 510: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.1807931363582611
    2. 'u' → logprob: -2.930793046951294
    3. 'ite' → logprob: -3.180793046951294
    4. 'quise' → logprob: -3.555793046951294
    5. 'isée' → logprob: -4.680793285369873
    6. 'uire' → logprob: -4.805793285369873
    7. 'ie' → logprob: -5.180793285369873
    8. 'require' → logprob: -5.680793285369873
    9. 'ue' → logprob: -5.930793285369873
    10. 'requ' → logprob: -6.430793285369873

Token 511: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.56102097814437e-05
    2. ' for' → logprob: -10.000045776367188
    3. '
' → logprob: -16.250045776367188
    4. '<|end|>' → logprob: -17.125045776367188
    5. '```' → logprob: -19.500045776367188
    6. '	for' → logprob: -19.500045776367188
    7. ')' → logprob: -21.250045776367188
    8. ';' → logprob: -22.000045776367188
    9. '<|end|>' → logprob: -22.125045776367188
    10. '.for' → logprob: -22.250045776367188

Token 512: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. ' for' → logprob: -15.75
    3. '
' → logprob: -20.0
    4. '	for' → logprob: -22.5
    5. 'import' → logprob: -23.625
    6. '```' → logprob: -24.0
    7. '

' → logprob: -26.0
    8. 'For' → logprob: -26.375
    9. 'from' → logprob: -26.625
    10. '#' → logprob: -26.875

Token 513: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006826905999332666
    2. ' _' → logprob: -5.006826877593994
    3. '_i' → logprob: -9.131827354431152
    4. ' i' → logprob: -13.006827354431152
    5. 'i' → logprob: -14.006827354431152
    6. ' ' → logprob: -16.506826400756836
    7. '_=' → logprob: -17.381826400756836
    8. ' in' → logprob: -18.006826400756836
    9. ' ' → logprob: -18.131826400756836
    10. '_in' → logprob: -18.256826400756836

Token 514: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3136720061302185
    2. 'in' → logprob: -1.3136720657348633
    3. '_' → logprob: -9.063672065734863
    4. 'i' → logprob: -9.188672065734863
    5. ' ' → logprob: -9.188672065734863
    6. 's' → logprob: -9.688672065734863
    7. ' _' → logprob: -11.063672065734863
    8. '  ' → logprob: -12.938672065734863
    9. ',' → logprob: -13.438672065734863
    10. ' i' → logprob: -13.563672065734863

Token 515: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033558503491804004
    2. ' range' → logprob: -8.000335693359375
    3. '(range' → logprob: -16.875335693359375
    4. 'r' → logprob: -17.875335693359375
    5. 'input' → logprob: -17.875335693359375
    6. 'rang' → logprob: -18.125335693359375
    7. '_' → logprob: -18.875335693359375
    8. '	range' → logprob: -19.125335693359375
    9. 'map' → logprob: -19.625335693359375
    10. '```' → logprob: -20.000335693359375

Token 516: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.013185765594244003
    2. 'N' → logprob: -4.388185977935791
    3. '(' → logprob: -7.513185977935791
    4. ' (' → logprob: -9.513185501098633
    5. ' N' → logprob: -10.263185501098633
    6. '(int' → logprob: -11.138185501098633
    7. '(n' → logprob: -13.763185501098633
    8. ',' → logprob: -13.763185501098633
    9. 'range' → logprob: -13.763185501098633
    10. ' ' → logprob: -14.263185501098633

Token 517: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3869825005531311
    2. '):
' → logprob: -1.1369824409484863
    3. ')' → logprob: -9.761982917785645
    4. '):
' → logprob: -10.386982917785645
    5. ':' → logprob: -11.136982917785645
    6. ' ):' → logprob: -12.386982917785645
    7. ' ):
' → logprob: -13.261982917785645
    8. '):

' → logprob: -13.761982917785645
    9. ':
' → logprob: -14.261982917785645
    10. '}:' → logprob: -15.636982917785645

Token 518: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.48307812213897705
    2. ' x' → logprob: -1.483078122138977
    3. '   ' → logprob: -1.858078122138977
    4. '	x' → logprob: -8.608078002929688
    5. ' ' → logprob: -11.608078002929688
    6. '    
' → logprob: -11.983078002929688
    7. ',x' → logprob: -12.483078002929688
    8. '  ' → logprob: -13.233078002929688
    9. 'xi' → logprob: -13.858078002929688
    10. '   ' → logprob: -14.358078002929688

Token 519: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -1.282920129597187e-05
    2. 'xi' → logprob: -11.375012397766113
    3. ' x' → logprob: -13.625012397766113
    4. '   ' → logprob: -17.12501335144043
    5. '    
' → logprob: -17.62501335144043
    6. '	x' → logprob: -18.25001335144043
    7. '```' → logprob: -18.50001335144043
    8. ' ' → logprob: -19.37501335144043
    9. '  
' → logprob: -19.87501335144043
    10. '_x' → logprob: -20.87501335144043

Token 520: '_i' (ID: 10853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012590413680300117
    2. ',h' → logprob: -6.751258850097656
    3. '_i' → logprob: -10.501258850097656
    4. ' ,' → logprob: -10.876258850097656
    5. ',height' → logprob: -11.376258850097656
    6. '_,' → logprob: -11.501258850097656
    7. 'i' → logprob: -11.501258850097656
    8. 'h' → logprob: -12.001258850097656
    9. ',i' → logprob: -13.501258850097656
    10. ',_' → logprob: -13.876258850097656

Token 521: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011367550177965313
    2. ',h' → logprob: -9.250113487243652
    3. ' ,' → logprob: -11.000113487243652
    4. 'h' → logprob: -14.375113487243652
    5. ',height' → logprob: -15.625113487243652
    6. '_,' → logprob: -18.75011444091797
    7. ' h' → logprob: -19.12511444091797
    8. ',
' → logprob: -19.12511444091797
    9. 'height' → logprob: -19.62511444091797
    10. 's' → logprob: -19.75011444091797

Token 522: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -5.848420551046729e-05
    2. ' h' → logprob: -9.7500581741333
    3. 'hi' → logprob: -16.375059127807617
    4. 'height' → logprob: -20.125059127807617
    5. ' ' → logprob: -20.750059127807617
    6. '	h' → logprob: -20.875059127807617
    7. '   ' → logprob: -21.250059127807617
    8. '_h' → logprob: -21.875059127807617
    9. '"h' → logprob: -22.375059127807617
    10. 'y' → logprob: -22.500059127807617

Token 523: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00016337241686414927
    2. 'i' → logprob: -8.750163078308105
    3. '=' → logprob: -12.750163078308105
    4. ' =' → logprob: -13.375163078308105
    5. '_' → logprob: -15.500163078308105
    6. 'a' → logprob: -16.500164031982422
    7. 't' → logprob: -17.625164031982422
    8. 'int' → logprob: -17.750164031982422
    9. '=_' → logprob: -17.875164031982422
    10. 's' → logprob: -17.875164031982422

Token 524: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750484973192215
    2. ' =' → logprob: -3.5297505855560303
    3. ')' → logprob: -17.77975082397461
    4. ' ' → logprob: -18.40475082397461
    5. ',' → logprob: -18.52975082397461
    6. ')=' → logprob: -19.02975082397461
    7. '=

' → logprob: -19.40475082397461
    8. '＝' → logprob: -20.27975082397461
    9. '=input' → logprob: -20.77975082397461
    10. '=
' → logprob: -20.77975082397461

Token 525: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.47407856583595276
    2. ' map' → logprob: -0.9740785360336304
    3. '	map' → logprob: -13.599078178405762
    4. ' ' → logprob: -15.349078178405762
    5. '   ' → logprob: -17.599079132080078
    6. '.map' → logprob: -17.599079132080078
    7. '_map' → logprob: -17.974079132080078
    8. '(map' → logprob: -18.099079132080078
    9. '  ' → logprob: -18.599079132080078
    10. 'Map' → logprob: -19.099079132080078

Token 526: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003559615579433739
    2. '(float' → logprob: -8.00035572052002
    3. 'int' → logprob: -11.00035572052002
    4. '(' → logprob: -12.62535572052002
    5. '[int' → logprob: -15.62535572052002
    6. 'float' → logprob: -15.87535572052002
    7. '=int' → logprob: -16.625356674194336
    8. '<int' → logprob: -17.000356674194336
    9. ' (' → logprob: -17.125356674194336
    10. ' int' → logprob: -17.250356674194336

Token 527: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005774584715254605
    2. ',input' → logprob: -7.500577449798584
    3. '(),' → logprob: -11.250577926635742
    4. ' ,' → logprob: -12.250577926635742
    5. '(' → logprob: -13.125577926635742
    6. 'input' → logprob: -13.500577926635742
    7. '(input' → logprob: -13.500577926635742
    8. '()' → logprob: -14.375577926635742
    9. ',int' → logprob: -14.375577926635742
    10. '().' → logprob: -14.750577926635742

Token 528: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00033546582562848926
    2. ' input' → logprob: -8.000335693359375
    3. '(input' → logprob: -19.500335693359375
    4. ',input' → logprob: -21.125335693359375
    5. '_input' → logprob: -21.500335693359375
    6. '	input' → logprob: -21.500335693359375
    7. '=input' → logprob: -21.500335693359375
    8. 'output' → logprob: -22.500335693359375
    9. 'Input' → logprob: -22.625335693359375
    10. ' ' → logprob: -23.125335693359375

Token 529: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.128163257315464e-07
    2. '()' → logprob: -15.25
    3. ' ().' → logprob: -18.875
    4. '.split' → logprob: -19.625
    5. ').' → logprob: -20.25
    6. '.' → logprob: -20.25
    7. ')' → logprob: -20.5
    8. '(' → logprob: -20.625
    9. '())' → logprob: -21.5
    10. '()).' → logprob: -21.875

Token 530: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. 'strip' → logprob: -17.25
    3. ' split' → logprob: -17.75
    4. '(split' → logprob: -19.25
    5. '.split' → logprob: -19.75
    6. 'rstrip' → logprob: -20.75
    7. 'spl' → logprob: -21.625
    8. '_split' → logprob: -23.875
    9. '().' → logprob: -24.5
    10. 'plit' → logprob: -24.625

Token 531: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010580805974313989
    2. ')
' → logprob: -9.500105857849121
    3. '())' → logprob: -10.500105857849121
    4. '()' → logprob: -13.000105857849121
    5. '))' → logprob: -14.750105857849121
    6. ')
' → logprob: -15.375105857849121
    7. ' )' → logprob: -15.750105857849121
    8. ')

' → logprob: -15.875105857849121
    9. ')`' → logprob: -16.125104904174805
    10. '   ' → logprob: -16.500104904174805

Token 532: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015328321605920792
    2. '    
' → logprob: -7.001533031463623
    3. 'max' → logprob: -8.751532554626465
    4. 'height' → logprob: -9.376532554626465
    5. '  
' → logprob: -9.501532554626465
    6. '```' → logprob: -9.501532554626465
    7. '   
' → logprob: -10.126532554626465
    8. ' if' → logprob: -10.251532554626465
    9. 'if' → logprob: -10.251532554626465
    10. '  ' → logprob: -10.376532554626465

Token 533: ' #' (ID: 1069)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.557885468006134
    2. 'value' → logprob: -1.6828854084014893
    3. 'val' → logprob: -2.3078854084014893
    4. 'if' → logprob: -2.5578854084014893
    5. '   ' → logprob: -3.6828854084014893
    6. 'required' → logprob: -4.182885646820068
    7. 'current' → logprob: -4.932885646820068
    8. 'candidate' → logprob: -4.932885646820068
    9. ' height' → logprob: -5.682885646820068
    10. ' if' → logprob: -6.307885646820068

Token 534: ' Calcul' (ID: 57243)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.44854700565338135
    2. 'value' → logprob: -1.9485470056533813
    3. 'required' → logprob: -2.448546886444092
    4. 'val' → logprob: -2.698546886444092
    5. 'if' → logprob: -3.448546886444092
    6. 'candidate' → logprob: -4.823546886444092
    7. 'ratio' → logprob: -4.948546886444092
    8. 'current' → logprob: -5.198546886444092
    9. ' height' → logprob: -5.198546886444092
    10. '   ' → logprob: -5.948546886444092

Token 535: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008848085068166256
    2. ':' → logprob: -4.883848190307617
    3. 'height' → logprob: -7.758848190307617
    4. ' height' → logprob: -8.383848190307617
    5. '    
' → logprob: -8.883848190307617
    6. '=' → logprob: -9.508848190307617
    7. ' of' → logprob: -9.633848190307617
    8. ' =' → logprob: -9.758848190307617
    9. 'value' → logprob: -9.758848190307617
    10. ' value' → logprob: -11.133848190307617

Token 536: ' la' (ID: 557)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.19662952423095703
    2. ' h' → logprob: -2.446629524230957
    3. 'height' → logprob: -3.071629524230957
    4. ' height' → logprob: -4.071629524230957
    5. 'val' → logprob: -4.571629524230957
    6. 'value' → logprob: -4.946629524230957
    7. ' value' → logprob: -6.321629524230957
    8. 'max' → logprob: -6.571629524230957
    9. ' val' → logprob: -7.196629524230957
    10. ' hauteur' → logprob: -7.196629524230957

Token 537: ' hauteur' (ID: 72987)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.5699279308319092
    2. 'ha' → logprob: -1.4449279308319092
    3. 'val' → logprob: -2.194927930831909
    4. 'required' → logprob: -2.944927930831909
    5. 'value' → logprob: -4.319928169250488
    6. 'candidate' → logprob: -4.319928169250488
    7. 'h' → logprob: -5.319928169250488
    8. ' hauteur' → logprob: -7.069928169250488
    9. 'possible' → logprob: -7.444928169250488
    10. 'current' → logprob: -7.819928169250488

Token 538: ' limite' (ID: 48939)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011528155766427517
    2. 'required' → logprob: -5.511528015136719
    3. 'candidate' → logprob: -6.136528015136719
    4. ' required' → logprob: -6.511528015136719
    5. 'possible' → logprob: -6.636528015136719
    6. 'needed' → logprob: -7.636528015136719
    7. ' possible' → logprob: -7.886528015136719
    8. ' =' → logprob: -8.136528015136719
    9. ' candidate' → logprob: -8.261528015136719
    10. 'req' → logprob: -8.761528015136719

Token 539: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021688169799745083
    2. '    
' → logprob: -7.002168655395508
    3. ':' → logprob: -7.252168655395508
    4. '  ' → logprob: -9.252168655395508
    5. 'height' → logprob: -9.377168655395508
    6. ' height' → logprob: -10.252168655395508
    7. ' =' → logprob: -10.377168655395508
    8. '    ' → logprob: -10.377168655395508
    9. ' limit' → logprob: -10.502168655395508
    10. ' max' → logprob: -10.752168655395508

Token 540: ' cette' (ID: 7696)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.05612087622284889
    2. 'max' → logprob: -3.0561208724975586
    3. ' h' → logprob: -5.306120872497559
    4. 'le' → logprob: -6.681120872497559
    5. ' max' → logprob: -7.681120872497559
    6. 'l' → logprob: -8.056120872497559
    7. 'la' → logprob: -9.056120872497559
    8. '   ' → logprob: -9.556120872497559
    9. ' la' → logprob: -10.056120872497559
    10. '(h' → logprob: -10.306120872497559

Token 541: ' building' (ID: 6282)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8085017204284668
    2. 'construction' → logprob: -2.308501720428467
    3. 'building' → logprob: -2.308501720428467
    4. ' construction' → logprob: -2.433501720428467
    5. 'bat' → logprob: -2.808501720428467
    6. ' building' → logprob: -2.808501720428467
    7. ' bâtiment' → logprob: -2.933501720428467
    8. 'tour' → logprob: -3.558501720428467
    9. ' bât' → logprob: -3.933501720428467
    10. ' tour' → logprob: -4.933501720428467

Token 542: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005173277575522661
    2. '    
' → logprob: -5.880173206329346
    3. ':' → logprob: -6.755173206329346
    4. 'height' → logprob: -7.880173206329346
    5. '  ' → logprob: -8.380173683166504
    6. 'max' → logprob: -9.130173683166504
    7. 'value' → logprob: -9.505173683166504
    8. '   
' → logprob: -9.505173683166504
    9. ' height' → logprob: -10.005173683166504
    10. ' max' → logprob: -10.255173683166504

Token 543: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002112670335918665
    2. '    
' → logprob: -6.627112865447998
    3. 'height' → logprob: -8.25211238861084
    4. 'max' → logprob: -8.37711238861084
    5. ' max' → logprob: -9.50211238861084
    6. 'value' → logprob: -9.75211238861084
    7. ' height' → logprob: -10.37711238861084
    8. 'possible' → logprob: -10.87711238861084
    9. 'val' → logprob: -11.25211238861084
    10. 'current' → logprob: -11.37711238861084

Token 544: ' #' (ID: 1069)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.22492685914039612
    2. 'required' → logprob: -1.9749268293380737
    3. 'limit' → logprob: -3.5999269485473633
    4. 'candidate' → logprob: -4.724926948547363
    5. 'current' → logprob: -5.099926948547363
    6. 'value' → logprob: -5.099926948547363
    7. 'val' → logprob: -5.099926948547363
    8. '   ' → logprob: -5.349926948547363
    9. 'h' → logprob: -7.099926948547363
    10. ' height' → logprob: -7.599926948547363

Token 545: ' attention' (ID: 8684)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.43195441365242004
    2. 'required' → logprob: -1.3069543838500977
    3. 'limit' → logprob: -3.5569543838500977
    4. 'candidate' → logprob: -3.8069543838500977
    5. 'val' → logprob: -4.806954383850098
    6. 'current' → logprob: -4.931954383850098
    7. 'value' → logprob: -5.181954383850098
    8. '   ' → logprob: -5.931954383850098
    9. 'possible' → logprob: -6.806954383850098
    10. 'h' → logprob: -7.056954383850098

Token 546: ' division' (ID: 21629)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08089589327573776
    2. ' =' → logprob: -3.8308959007263184
    3. ' if' → logprob: -3.9558959007263184
    4. '=' → logprob: -4.205895900726318
    5. 'if' → logprob: -4.205895900726318
    6. ':' → logprob: -5.955895900726318
    7. ',' → logprob: -6.580895900726318
    8. ' à' → logprob: -7.580895900726318
    9. 'max' → logprob: -7.580895900726318
    10. '_height' → logprob: -7.955895900726318

Token 547: ' par' (ID: 686)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48394304513931274
    2. ' =' → logprob: -0.9839430451393127
    3. ',' → logprob: -5.358942985534668
    4. '.' → logprob: -6.858942985534668
    5. ')' → logprob: -6.983942985534668
    6. '/' → logprob: -7.358942985534668
    7. '=float' → logprob: -7.733942985534668
    8. ' /' → logprob: -7.858942985534668
    9. 'max' → logprob: -8.358942985534668
    10. '   ' → logprob: -8.483942985534668

Token 548: ' (' (ID: 350)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.16317252814769745
    2. '0' → logprob: -2.288172483444214
    3. 'zero' → logprob: -3.163172483444214
    4. ' (' → logprob: -5.913172721862793
    5. ' zero' → logprob: -6.038172721862793
    6. 't' → logprob: -7.413172721862793
    7. 'z' → logprob: -7.663172721862793
    8. ' zéro' → logprob: -8.163172721862793
    9. 'float' → logprob: -9.038172721862793
    10. ' ' → logprob: -9.663172721862793

Token 549: 't' (ID: 83)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.6865083575248718
    2. 't' → logprob: -1.3115084171295166
    3. ' (' → logprob: -1.6865084171295166
    4. ' t' → logprob: -3.1865084171295166
    5. '(' → logprob: -7.9365081787109375
    6. '   ' → logprob: -8.311508178710938
    7. ')' → logprob: -9.436508178710938
    8. ' ' → logprob: -10.436508178710938
    9. ')t' → logprob: -12.061508178710938
    10. ',' → logprob: -12.124008178710938

Token 550: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38689905405044556
    2. '-' → logprob: -1.1368989944458008
    3. '-x' → logprob: -10.6368989944458
    4. ' ' → logprob: -12.7618989944458
    5. ')' → logprob: -15.0118989944458
    6. 'x' → logprob: -15.6368989944458
    7. '   ' → logprob: -16.011899948120117
    8. ' ' → logprob: -16.261899948120117
    9. ',' → logprob: -16.636899948120117
    10. '−' → logprob: -16.636899948120117

Token 551: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008614808320999146
    2. ' x' → logprob: -4.758615016937256
    3. '	x' → logprob: -15.508614540100098
    4. ')x' → logprob: -16.258615493774414
    5. ' ' → logprob: -17.258615493774414
    6. '   ' → logprob: -17.508615493774414
    7. '_x' → logprob: -17.633615493774414
    8. ')' → logprob: -18.008615493774414
    9. '"x' → logprob: -18.633615493774414
    10. '(x' → logprob: -18.633615493774414

Token 552: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -1.0280383548888494e-06
    2. 'i' → logprob: -14.375000953674316
    3. ')' → logprob: -15.000000953674316
    4. '[i' → logprob: -18.000001907348633
    5. '[' → logprob: -18.500001907348633
    6. '_' → logprob: -19.375001907348633
    7. '_x' → logprob: -20.000001907348633
    8. ' i' → logprob: -20.125001907348633
    9. '```' → logprob: -20.250001907348633
    10. '_n' → logprob: -20.625001907348633

Token 553: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024063829332590103
    2. ')
' → logprob: -3.7740638256073
    3. '   ' → logprob: -7.399064064025879
    4. 'if' → logprob: -9.899064064025879
    5. ' )' → logprob: -10.274064064025879
    6. '))' → logprob: -10.774064064025879
    7. '),' → logprob: -11.024064064025879
    8. '):' → logprob: -11.149064064025879
    9. ')
' → logprob: -11.399064064025879
    10. '")' → logprob: -11.524064064025879

Token 554: ' t' (ID: 260)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.291322261095047
    2. ' height' → logprob: -2.2913222312927246
    3. ' if' → logprob: -2.6663222312927246
    4. ' value' → logprob: -3.1663222312927246
    5. 'height' → logprob: -4.291322231292725
    6. 'value' → logprob: -4.666322231292725
    7. 'if' → logprob: -5.041322231292725
    8. ' valeur' → logprob: -6.291322231292725
    9. ' hauteur' → logprob: -6.541322231292725
    10. ' limit' → logprob: -6.791322231292725

Token 555: ' >' (ID: 1424)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2779965400695801
    2. '-' → logprob: -1.52799654006958
    3. ' !=' → logprob: -4.40299654006958
    4. '!=' → logprob: -4.52799654006958
    5. '>' → logprob: -6.77799654006958
    6. ' >' → logprob: -7.02799654006958
    7. '_i' → logprob: -8.402996063232422
    8. '-i' → logprob: -8.777996063232422
    9. ' ' → logprob: -9.902996063232422
    10. '   ' → logprob: -9.902996063232422

Token 556: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0008054602658376098
    2. ' x' → logprob: -7.125805377960205
    3. '0' → logprob: -14.250805854797363
    4. '>x' → logprob: -15.500805854797363
    5. '	x' → logprob: -16.250804901123047
    6. '_x' → logprob: -16.875804901123047
    7. '<x' → logprob: -18.125804901123047
    8. ' ' → logprob: -18.750804901123047
    9. '1' → logprob: -19.125804901123047
    10. '(x' → logprob: -19.125804901123047

Token 557: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00017076305812224746
    2. ')' → logprob: -9.250170707702637
    3. '-i' → logprob: -10.625170707702637
    4. ' -' → logprob: -11.250170707702637
    5. '   ' → logprob: -11.625170707702637
    6. 'if' → logprob: -11.875170707702637
    7. 'i' → logprob: -12.250170707702637
    8. '-' → logprob: -12.250170707702637
    9. ' ' → logprob: -12.875170707702637
    10. ' if' → logprob: -13.125170707702637

Token 558: ' toujours' (ID: 16867)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007556661730632186
    2. '    
' → logprob: -7.625755786895752
    3. 'height' → logprob: -9.125755310058594
    4. 'value' → logprob: -10.750755310058594
    5. '  ' → logprob: -11.000755310058594
    6. ',' → logprob: -11.000755310058594
    7. '```' → logprob: -11.000755310058594
    8. ' if' → logprob: -11.250755310058594
    9. 'if' → logprob: -11.500755310058594
    10. ':' → logprob: -11.625755310058594

Token 559: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006998073076829314
    2. 'height' → logprob: -7.875699996948242
    3. '    
' → logprob: -8.500699996948242
    4. 'value' → logprob: -10.125699996948242
    5. ' height' → logprob: -11.125699996948242
    6. '```' → logprob: -11.125699996948242
    7. '  ' → logprob: -11.375699996948242
    8. '
' → logprob: -12.625699996948242
    9. ',' → logprob: -12.625699996948242
    10. '    ' → logprob: -12.750699996948242

Token 560: ' les' (ID: 1341)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.011109127663075924
    2. ' l' → logprob: -5.886109352111816
    3. 'les' → logprob: -5.886109352111816
    4. 'én' → logprob: -5.886109352111816
    5. 'en' → logprob: -6.886109352111816
    6. 'le' → logprob: -7.136109352111816
    7. 'la' → logprob: -7.511109352111816
    8. 'len' → logprob: -9.136109352111816
    9. ' les' → logprob: -10.261109352111816
    10. 't' → logprob: -10.511109352111816

Token 561: ' contraintes' (ID: 167366)
  Prédit: 'én'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'én' → logprob: -0.008616226725280285
    2. 'en' → logprob: -5.6336164474487305
    3. 'é' → logprob: -6.3836164474487305
    4. 'contra' → logprob: -7.0086164474487305
    5. 'conditions' → logprob: -7.3836164474487305
    6. '#' → logprob: -7.6336164474487305
    7. ' é' → logprob: -7.7586164474487305
    8. '0' → logprob: -8.88361644744873
    9. 'instructions' → logprob: -9.25861644744873
    10. 'hyp' → logprob: -9.25861644744873

Token 562: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002067588793579489
    2. '    
' → logprob: -8.87520694732666
    3. 'height' → logprob: -10.25020694732666
    4. 'limit' → logprob: -12.00020694732666
    5. ' height' → logprob: -12.25020694732666
    6. '
' → logprob: -12.37520694732666
    7. ' limit' → logprob: -12.75020694732666
    8. '  ' → logprob: -12.87520694732666
    9. 'max' → logprob: -13.25020694732666
    10. '  
' → logprob: -13.37520694732666

Token 563: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00543059641495347
    2. 'height' → logprob: -5.755430698394775
    3. 'value' → logprob: -7.380430698394775
    4. 'max' → logprob: -7.505430698394775
    5. '    
' → logprob: -8.505430221557617
    6. 'limit' → logprob: -8.505430221557617
    7. ' height' → logprob: -8.755430221557617
    8. 'current' → logprob: -8.880430221557617
    9. 'val' → logprob: -9.380430221557617
    10. ' max' → logprob: -9.880430221557617

Token 564: ' needed' (ID: 6118)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.26142075657844543
    2. 'required' → logprob: -1.886420726776123
    3. 'limit' → logprob: -3.136420726776123
    4. '   ' → logprob: -3.886420726776123
    5. 'current' → logprob: -5.011420726776123
    6. 'candidate' → logprob: -6.136420726776123
    7. 'h' → logprob: -6.636420726776123
    8. 'possible' → logprob: -6.761420726776123
    9. 'val' → logprob: -7.511420726776123
    10. ' height' → logprob: -7.636420726776123

Token 565: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.009525036439299583
    2. ' =' → logprob: -5.009524822235107
    3. '=' → logprob: -5.884524822235107
    4. '_h' → logprob: -12.009525299072266
    5. '_' → logprob: -12.009525299072266
    6. 'height' → logprob: -12.134525299072266
    7. 'Height' → logprob: -12.634525299072266
    8. '_he' → logprob: -14.634525299072266
    9. ' height' → logprob: -14.759525299072266
    10. '=float' → logprob: -15.009525299072266

Token 566: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804149478673935
    2. ' =' → logprob: -3.288041591644287
    3. '=float' → logprob: -17.663042068481445
    4. '>' → logprob: -18.413042068481445
    5. '＝' → logprob: -18.663042068481445
    6. '   ' → logprob: -19.163042068481445
    7. ' ' → logprob: -19.288042068481445
    8. '.=' → logprob: -19.288042068481445
    9. '=

' → logprob: -19.288042068481445
    10. '=max' → logprob: -19.538042068481445

Token 567: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.001675779465585947
    2. ' h' → logprob: -6.501675605773926
    3. '(h' → logprob: -8.751675605773926
    4. '   ' → logprob: -11.501675605773926
    5. ' (' → logprob: -13.001675605773926
    6. 'float' → logprob: -13.251675605773926
    7. ' ' → logprob: -14.626675605773926
    8. '(' → logprob: -15.376675605773926
    9. '  ' → logprob: -15.876675605773926
    10. '	h' → logprob: -16.251676559448242

Token 568: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: 0.0
    2. '[i' → logprob: -18.875
    3. 'i' → logprob: -19.5
    4. '   ' → logprob: -20.125
    5. '=' → logprob: -20.5
    6. '_' → logprob: -20.625
    7. ' =' → logprob: -21.25
    8. '```' → logprob: -21.75
    9. '_id' → logprob: -22.375
    10. '[' → logprob: -22.625

Token 569: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.07894454151391983
    2. ' *' → logprob: -2.578944444656372
    3. '*t' → logprob: -9.828944206237793
    4. ' ' → logprob: -14.578944206237793
    5. '   ' → logprob: -15.328944206237793
    6. '**' → logprob: -17.07894515991211
    7. 't' → logprob: -17.20394515991211
    8. '*object' → logprob: -17.20394515991211
    9. '
' → logprob: -17.32894515991211
    10. '```' → logprob: -17.57894515991211

Token 570: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0067209405824542046
    2. ' t' → logprob: -5.006721019744873
    3. '(t' → logprob: -12.131720542907715
    4. ' (' → logprob: -15.506720542907715
    5. 'float' → logprob: -16.88172149658203
    6. ' ' → logprob: -17.38172149658203
    7. '   ' → logprob: -17.50672149658203
    8. '	t' → logprob: -18.25672149658203
    9. '(' → logprob: -19.13172149658203
    10. '`t' → logprob: -19.13172149658203

Token 571: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.07948935776948929
    2. '/' → logprob: -2.5794894695281982
    3. '/(' → logprob: -7.454489231109619
    4. '   ' → logprob: -11.579489707946777
    5. ' /(' → logprob: -11.579489707946777
    6. ' /
' → logprob: -14.204489707946777
    7. '/
' → logprob: -14.579489707946777
    8. ')' → logprob: -15.454489707946777
    9. ' ' → logprob: -15.954489707946777
    10. ')/(' → logprob: -16.07948875427246

Token 572: ' (' (ID: 350)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.04859304800629616
    2. ' (' → logprob: -3.048593044281006
    3. '(T' → logprob: -12.923593521118164
    4. '(' → logprob: -13.423593521118164
    5. '(float' → logprob: -14.173593521118164
    6. '(tt' → logprob: -15.548593521118164
    7. ' ' → logprob: -15.548593521118164
    8. 'float' → logprob: -15.923593521118164
    9. '(tc' → logprob: -15.923593521118164
    10. '   ' → logprob: -16.548593521118164

Token 573: 't' (ID: 83)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0028141476213932037
    2. ' (' → logprob: -5.877814292907715
    3. '((' → logprob: -12.877814292907715
    4. '(' → logprob: -13.002814292907715
    5. '   ' → logprob: -13.127814292907715
    6. ')' → logprob: -14.002814292907715
    7. '(T' → logprob: -14.627814292907715
    8. '(tt' → logprob: -15.002814292907715
    9. ' ' → logprob: -15.252814292907715
    10. '(float' → logprob: -15.627814292907715

Token 574: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0485910028219223
    2. '-' → logprob: -3.048590898513794
    3. ' ' → logprob: -12.673590660095215
    4. ' ' → logprob: -16.17359161376953
    5. '.' → logprob: -16.79859161376953
    6. '-t' → logprob: -16.79859161376953
    7. '  ' → logprob: -17.04859161376953
    8. '   ' → logprob: -17.17359161376953
    9. '_' → logprob: -17.54859161376953
    10. 't' → logprob: -17.92359161376953

Token 575: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01814994215965271
    2. ' x' → logprob: -4.0181498527526855
    3. '	x' → logprob: -18.018150329589844
    4. ')x' → logprob: -18.393150329589844
    5. '(x' → logprob: -20.018150329589844
    6. ' ' → logprob: -20.518150329589844
    7. '"x' → logprob: -20.518150329589844
    8. 'xi' → logprob: -20.768150329589844
    9. '   ' → logprob: -21.018150329589844
    10. '$x' → logprob: -21.143150329589844

Token 576: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00014013137842994183
    2. 'i' → logprob: -8.875140190124512
    3. ')' → logprob: -16.000139236450195
    4. '[i' → logprob: -17.000139236450195
    5. '```' → logprob: -17.000139236450195
    6. '[' → logprob: -18.000139236450195
    7. 'x' → logprob: -18.875139236450195
    8. 's' → logprob: -19.125139236450195
    9. ' i' → logprob: -19.250139236450195
    10. '_' → logprob: -19.250139236450195

Token 577: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005239445250481367
    2. ')
' → logprob: -5.255239486694336
    3. ' )' → logprob: -12.630239486694336
    4. ')

' → logprob: -13.630239486694336
    5. '   ' → logprob: -14.255239486694336
    6. ')
' → logprob: -14.755239486694336
    7. ' )
' → logprob: -16.005239486694336
    8. ' ' → logprob: -18.380239486694336
    9. '),' → logprob: -18.755239486694336
    10. ').' → logprob: -18.880239486694336

Token 578: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5575386881828308
    2. 'if' → logprob: -1.0575387477874756
    3. ' if' → logprob: -2.5575387477874756
    4. 'max' → logprob: -6.6825385093688965
    5. '
' → logprob: -6.8075385093688965
    6. '    
' → logprob: -9.057538986206055
    7. ')' → logprob: -10.807538986206055
    8. '	if' → logprob: -11.057538986206055
    9. '<|end|>' → logprob: -11.057538986206055
    10. '  
' → logprob: -11.432538986206055

Token 579: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0014215452829375863
    2. ' if' → logprob: -7.2514214515686035
    3. '   ' → logprob: -7.5014214515686035
    4. 'max' → logprob: -8.751421928405762
    5. '    
' → logprob: -15.001421928405762
    6. '
' → logprob: -15.001421928405762
    7. '	if' → logprob: -16.501420974731445
    8. '  ' → logprob: -17.876420974731445
    9. ' max' → logprob: -18.001420974731445
    10. ' ' → logprob: -18.501420974731445

Token 580: ' needed' (ID: 6118)
  Prédit: ' needed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' needed' → logprob: -0.38687586784362793
    2. 'needed' → logprob: -1.136875867843628
    3. 'need' → logprob: -13.636876106262207
    4. '   ' → logprob: -13.761876106262207
    5. '_needed' → logprob: -14.136876106262207
    6. ' ' → logprob: -14.886876106262207
    7. ' ' → logprob: -14.886876106262207
    8. ' need' → logprob: -15.011876106262207
    9. 'Needed' → logprob: -15.636876106262207
    10. ' necessary' → logprob: -15.761876106262207

Token 581: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -1.2664456789934775e-06
    2. 'height' → logprob: -13.875000953674316
    3. '_needed' → logprob: -16.250001907348633
    4. '_he' → logprob: -16.625001907348633
    5. '_' → logprob: -16.875001907348633
    6. 's' → logprob: -18.125001907348633
    7. '_width' → logprob: -18.625001907348633
    8. '_length' → logprob: -18.875001907348633
    9. 'e' → logprob: -18.875001907348633
    10. '_HEIGHT' → logprob: -19.250001907348633

Token 582: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.10020720958709717
    2. ' >' → logprob: -2.3502073287963867
    3. '">' → logprob: -15.600207328796387
    4. ' ' → logprob: -15.850207328796387
    5. '   ' → logprob: -16.72520637512207
    6. '>

' → logprob: -16.72520637512207
    7. '()>' → logprob: -17.35020637512207
    8. ')>' → logprob: -17.60020637512207
    9. '＞' → logprob: -18.10020637512207
    10. '&gt' → logprob: -18.10020637512207

Token 583: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0001234428636962548
    2. ' max' → logprob: -9.000123023986816
    3. '	max' → logprob: -22.250123977661133
    4. '   ' → logprob: -22.375123977661133
    5. '_max' → logprob: -23.625123977661133
    6. '=max' → logprob: -24.500123977661133
    7. 'maximum' → logprob: -24.750123977661133
    8. '(max' → logprob: -25.000123977661133
    9. 'Max' → logprob: -25.250123977661133
    10. '[max' → logprob: -25.500123977661133

Token 584: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -7.896309739408025e-07
    2. 'height' → logprob: -14.250000953674316
    3. '_max' → logprob: -16.125
    4. 'max' → logprob: -17.25
    5. '_' → logprob: -18.625
    6. '\' → logprob: -18.875
    7. '_length' → logprob: -19.125
    8. '_he' → logprob: -19.125
    9. '_HEIGHT' → logprob: -20.125
    10. '_width' → logprob: -20.125

Token 585: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021583328023552895
    2. ':
' → logprob: -3.896583318710327
    3. '       ' → logprob: -7.521583557128906
    4. '   ' → logprob: -8.146583557128906
    5. ':max' → logprob: -9.771583557128906
    6. 'max' → logprob: -10.646583557128906
    7. ' :' → logprob: -10.771583557128906
    8. '):
' → logprob: -10.771583557128906
    9. '):' → logprob: -11.021583557128906
    10. ' =' → logprob: -11.146583557128906

Token 586: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031539499759674072
    2. '   ' → logprob: -6.1281538009643555
    3. ' max' → logprob: -7.1281538009643555
    4. 'max' → logprob: -8.753153800964355
    5. '	max' → logprob: -12.378153800964355
    6. '(max' → logprob: -14.128153800964355
    7. '
' → logprob: -14.628153800964355
    8. '     ' → logprob: -14.753153800964355
    9. '           ' → logprob: -14.753153800964355
    10. '      ' → logprob: -15.003153800964355

Token 587: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.0233500637114048
    2. ' max' → logprob: -3.7733500003814697
    3. '       ' → logprob: -9.52334976196289
    4. '   ' → logprob: -10.39834976196289
    5. '           ' → logprob: -14.39834976196289
    6. '	max' → logprob: -14.89834976196289
    7. '_max' → logprob: -16.89834976196289
    8. '(max' → logprob: -18.27334976196289
    9. ',max' → logprob: -18.52334976196289
    10. '[max' → logprob: -19.14834976196289

Token 588: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -1.9361264946837764e-07
    2. 'height' → logprob: -16.375
    3. '_he' → logprob: -17.875
    4. '_width' → logprob: -18.0
    5. '_' → logprob: -19.125
    6. '_length' → logprob: -19.375
    7. '_depth' → logprob: -19.875
    8. '_HEIGHT' → logprob: -20.625
    9. '_h' → logprob: -21.0
    10. '_max' → logprob: -21.125

Token 589: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196824833750725
    2. ' =' → logprob: -2.8119683265686035
    3. '=max' → logprob: -14.436967849731445
    4. 'max' → logprob: -18.811967849731445
    5. '.=' → logprob: -18.811967849731445
    6. '＝' → logprob: -18.936967849731445
    7. '=

' → logprob: -19.936967849731445
    8. ' ' → logprob: -19.936967849731445
    9. '   ' → logprob: -20.186967849731445
    10. '=cut' → logprob: -20.686967849731445

Token 590: ' needed' (ID: 6118)
  Prédit: 'needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'needed' → logprob: -0.07889121770858765
    2. ' needed' → logprob: -2.5788912773132324
    3. '   ' → logprob: -14.703890800476074
    4. 'necessary' → logprob: -15.078890800476074
    5. 'need' → logprob: -15.203890800476074
    6. '_needed' → logprob: -15.703890800476074
    7. 'required' → logprob: -16.07889175415039
    8. 'needs' → logprob: -16.45389175415039
    9. 'Needed' → logprob: -16.70389175415039
    10. ' ' → logprob: -17.20389175415039

Token 591: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.00028386167832650244
    2. 'ed' → logprob: -8.625284194946289
    3. 'ht' → logprob: -10.125284194946289
    4. 't' → logprob: -10.750284194946289
    5. 'd' → logprob: -10.875284194946289
    6. 'height' → logprob: -12.000284194946289
    7. 'ght' → logprob: -12.000284194946289
    8. 'e' → logprob: -12.750284194946289
    9. 'ted' → logprob: -13.125284194946289
    10. '_needed' → logprob: -13.500284194946289

Token 592: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008148320019245148
    2. '
' → logprob: -5.508148193359375
    3. '

' → logprob: -5.508148193359375
    4. ' print' → logprob: -12.133148193359375
    5. '
' → logprob: -13.758148193359375
    6. '<|end|>' → logprob: -14.258148193359375
    7. '```' → logprob: -14.758148193359375
    8. ')' → logprob: -15.508148193359375
    9. '#print' → logprob: -16.633148193359375
    10. '#' → logprob: -16.758148193359375

Token 593: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.9054008084349334e-05
    2. '
' → logprob: -10.250039100646973
    3. '

' → logprob: -13.000039100646973
    4. ' print' → logprob: -13.625039100646973
    5. '```' → logprob: -16.375038146972656
    6. '#' → logprob: -19.750038146972656
    7. '
' → logprob: -19.875038146972656
    8. '  
' → logprob: -20.125038146972656
    9. '#print' → logprob: -20.375038146972656
    10. 'if' → logprob: -20.375038146972656

Token 594: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.25
    3. 'if' → logprob: -18.5
    4. 'import' → logprob: -22.125
    5. 'printf' → logprob: -22.125
    6. '#' → logprob: -23.0
    7. '#print' → logprob: -24.75
    8. '```' → logprob: -24.875
    9. '
' → logprob: -26.5
    10. 'Print' → logprob: -27.125

Token 595: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.0008266602526418865
    2. 'ichage' → logprob: -7.250826835632324
    3. 'iche' → logprob: -9.375826835632324
    4. 'ic' → logprob: -11.375826835632324
    5. '#' → logprob: -11.750826835632324
    6. 'ich' → logprob: -11.875826835632324
    7. 'ichier' → logprob: -13.125826835632324
    8. '   ' → logprob: -14.000826835632324
    9. 'cher' → logprob: -14.000826835632324
    10. '

' → logprob: -14.000826835632324

Token 596: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.080963092041202e-06
    2. ' print' → logprob: -12.875004768371582
    3. '
' → logprob: -13.750004768371582
    4. '```' → logprob: -14.000004768371582
    5. 'printf' → logprob: -15.375004768371582
    6. 'import' → logprob: -16.2500057220459
    7. '(print' → logprob: -16.3750057220459
    8. 'if' → logprob: -16.5000057220459
    9. '``' → logprob: -18.5000057220459
    10. ':' → logprob: -18.8750057220459

Token 597: ' résultat' (ID: 62556)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.011533333919942379
    2. 'print' → logprob: -4.886533260345459
    3. ' max' → logprob: -6.011533260345459
    4. '"{' → logprob: -7.886533260345459
    5. 'float' → logprob: -8.136533737182617
    6. '{' → logprob: -8.386533737182617
    7. 'f' → logprob: -8.761533737182617
    8. 'int' → logprob: -8.886533737182617
    9. 'result' → logprob: -9.511533737182617
    10. 'format' → logprob: -9.511533737182617

Token 598: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -17.625
    3. '
' → logprob: -18.0
    4. 'printf' → logprob: -19.5
    5. 'import' → logprob: -19.625
    6. ' print' → logprob: -19.75
    7. 'if' → logprob: -19.75
    8. '#print' → logprob: -22.25
    9. '``' → logprob: -22.875
    10. '(print' → logprob: -23.25

Token 599: ' valeur' (ID: 41664)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.842555426876061e-06
    2. ' print' → logprob: -12.250004768371582
    3. 'printf' → logprob: -18.0000057220459
    4. 'import' → logprob: -19.7500057220459
    5. '{' → logprob: -20.1250057220459
    6. '   ' → logprob: -20.2500057220459
    7. 'if' → logprob: -20.3750057220459
    8. '```' → logprob: -20.6250057220459
    9. '#print' → logprob: -21.0000057220459
    10. 'f' → logprob: -21.2500057220459

Token 600: ' minimale' (ID: 143217)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06796176731586456
    2. 'f' → logprob: -3.9429616928100586
    3. '=' → logprob: -4.567961692810059
    4. '.' → logprob: -4.817961692810059
    5. '{' → logprob: -4.817961692810059
    6. ' =' → logprob: -5.317961692810059
    7. ':' → logprob: -6.067961692810059
    8. ')' → logprob: -6.442961692810059
    9. ' print' → logprob: -6.442961692810059
    10. 'max' → logprob: -6.567961692810059

Token 601: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.7954958821064793e-05
    2. ' print' → logprob: -11.250018119812012
    3. '#print' → logprob: -13.625018119812012
    4. ',' → logprob: -13.750018119812012
    5. '#' → logprob: -13.875018119812012
    6. '
' → logprob: -14.375018119812012
    7. 'min' → logprob: -15.625018119812012
    8. 'import' → logprob: -15.750018119812012
    9. ':' → logprob: -15.750018119812012
    10. '(print' → logprob: -16.000017166137695

Token 602: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.03418545797467232
    2. 'la' → logprob: -3.5341854095458984
    3. ' max' → logprob: -5.784185409545898
    4. ' la' → logprob: -7.034185409545898
    5. 'ha' → logprob: -8.659185409545898
    6. 'H' → logprob: -8.784185409545898
    7. 'l' → logprob: -9.909185409545898
    8. 't' → logprob: -11.034185409545898
    9. 'height' → logprob: -11.034185409545898
    10. 'ma' → logprob: -11.409185409545898

Token 603: ' hauteur' (ID: 72987)
  Prédit: 'tour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tour' → logprob: -0.28223884105682373
    2. 'ha' → logprob: -1.4072388410568237
    3. ' hauteur' → logprob: -7.657238960266113
    4. ' tour' → logprob: -8.157238960266113
    5. 'max' → logprob: -8.782238960266113
    6. 'height' → logprob: -10.282238960266113
    7. 'haut' → logprob: -10.657238960266113
    8. 'tor' → logprob: -10.782238960266113
    9. '#' → logprob: -11.032238960266113
    10. 'tou' → logprob: -11.032238960266113

Token 604: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.6240566083070007e-06
    2. ' print' → logprob: -13.750001907348633
    3. '
' → logprob: -15.000001907348633
    4. '(print' → logprob: -16.500001907348633
    5. '{' → logprob: -17.125001907348633
    6. 'import' → logprob: -18.000001907348633
    7. 'printf' → logprob: -18.500001907348633
    8. '```' → logprob: -18.625001907348633
    9. '#print' → logprob: -18.750001907348633
    10. 'for' → logprob: -19.000001907348633

Token 605: ' la' (ID: 557)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.31516531109809875
    2. 'la' → logprob: -2.0651652812957764
    3. 'ass' → logprob: -2.9401652812957764
    4. 'ne' → logprob: -3.4401652812957764
    5. 'print' → logprob: -4.0651655197143555
    6. 'max' → logprob: -4.5651655197143555
    7. ' garantir' → logprob: -4.9401655197143555
    8. 'avoir' → logprob: -5.6901655197143555
    9. 'voir' → logprob: -5.9401655197143555
    10. 'év' → logprob: -6.1901655197143555

Token 606: ' tour' (ID: 6970)
  Prédit: 'tour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tour' → logprob: -0.005228186957538128
    2. 'vue' → logprob: -5.505228042602539
    3. 'print' → logprob: -6.880228042602539
    4. '#' → logprob: -9.755228042602539
    5. ' tour' → logprob: -10.755228042602539
    6. 'tor' → logprob: -11.755228042602539
    7. 'tou' → logprob: -11.755228042602539
    8. 'tower' → logprob: -12.755228042602539
    9. 'ligne' → logprob: -13.005228042602539
    10. '   ' → logprob: -13.130228042602539

Token 607: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '
' → logprob: -18.5
    3. ' print' → logprob: -18.875
    4. '```' → logprob: -20.75
    5. 'printf' → logprob: -21.375
    6. 'import' → logprob: -21.625
    7. '#print' → logprob: -23.75
    8. 'if' → logprob: -24.875
    9. '#' → logprob: -25.0
    10. '.print' → logprob: -25.25

Token 608: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -21.5
    3. 'printf' → logprob: -22.0
    4. '```' → logprob: -23.75
    5. 'import' → logprob: -24.375
    6. 'if' → logprob: -25.875
    7. '#print' → logprob: -25.875
    8. '
' → logprob: -28.125
    9. '	print' → logprob: -28.625
    10. 'Print' → logprob: -28.625

Token 609: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.008220454677939415
    2. '(f' → logprob: -5.008220672607422
    3. '(' → logprob: -7.008220672607422
    4. '("{' → logprob: -7.883220672607422
    5. '(round' → logprob: -8.758220672607422
    6. '("%.' → logprob: -10.383220672607422
    7. '(format' → logprob: -10.758220672607422
    8. '(float' → logprob: -12.008220672607422
    9. '('{' → logprob: -12.508220672607422
    10. '(int' → logprob: -13.758220672607422

Token 610: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -1.9361264946837764e-07
    2. 'height' → logprob: -15.875
    3. '(max' → logprob: -18.625
    4. 'Height' → logprob: -19.375
    5. '(height' → logprob: -19.625
    6. '_he' → logprob: -19.875
    7. '_HEIGHT' → logprob: -20.25
    8. ' height' → logprob: -20.75
    9. '_width' → logprob: -21.25
    10. 'max' → logprob: -21.25

Token 611: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.60414821645827e-06
    2. '())' → logprob: -12.750004768371582
    3. ' )' → logprob: -13.750004768371582
    4. '()' → logprob: -14.625004768371582
    5. ')
' → logprob: -16.500003814697266
    6. '))' → logprob: -17.500003814697266
    7. '),' → logprob: -18.375003814697266
    8. ')`' → logprob: -18.375003814697266
    9. ' if' → logprob: -18.625003814697266
    10. '(' → logprob: -19.000003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 609
Tokens correctement prédits (1ère position, stricte): 198
Tokens correctement prédits (1ère position, avec adaptation): 202
Tokens correctement prédits (top 10): 436
Précision stricte (1ère position): 32.51%
Précision adaptée (1ère position): 33.17%
Précision (top 10): 71.59%
================================================================================
