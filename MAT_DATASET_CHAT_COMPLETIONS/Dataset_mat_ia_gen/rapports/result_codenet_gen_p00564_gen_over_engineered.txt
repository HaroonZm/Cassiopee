================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:15:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class PencilSet:
    def __init__(self, quantity: int, price: int):
        self.quantity = quantity
        self.price = price

    def min_cost_for(self, required: int) -> int:
        # nombre de paquets nécessaires pour atteindre au moins required
        packages_needed = -(-required // self.quantity)  # division plafond
        return packages_needed * self.price

class PencilsPurchase:
    def __init__(self, required: int, set_x: PencilSet, set_y: PencilSet):
        self.required = required
        self.set_x = set_x
        self.set_y = set_y

    def compute_min_cost(self) -> int:
        cost_x = self.set_x.min_cost_for(self.required)
        cost_y = self.set_y.min_cost_for(self.required)
        return min(cost_x, cost_y)

class InputParser:
    @staticmethod
    def parse() -> PencilsPurchase:
        # lecture et extraction des valeurs
        import sys
        data = sys.stdin.read().strip().split()
        N, A, B, C, D = map(int, data)
        set_x = PencilSet(A, B)
        set_y = PencilSet(C, D)
        return PencilsPurchase(N, set_x, set_y)

def main():
    purchase = InputParser.parse()
    result = purchase.compute_min_cost()
    print(result)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Pencil' (ID: 158301)
  → Token d'amorce (pas de prédiction)

Token 2: 'Set' (ID: 1984)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16813775897026062
    2. '(' → logprob: -2.543137788772583
    3. '{' → logprob: -2.668137788772583
    4. ' {' → logprob: -5.168137550354004
    5. '.' → logprob: -7.543137550354004
    6. ' :' → logprob: -8.543137550354004
    7. '(:' → logprob: -8.918137550354004
    8. '```' → logprob: -9.793137550354004
    9. '({' → logprob: -9.918137550354004
    10. '[' → logprob: -10.543137550354004

Token 4: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6345791816711426
    2. ':' → logprob: -0.7595791816711426
    3. '():' → logprob: -7.759579181671143
    4. '```' → logprob: -7.884579181671143
    5. '   ' → logprob: -8.134578704833984
    6. '(
' → logprob: -8.509578704833984
    7. '.' → logprob: -8.634578704833984
    8. '\' → logprob: -8.759578704833984
    9. ':
' → logprob: -9.134578704833984
    10. '()' → logprob: -9.884578704833984

Token 5: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.541818380355835
    2. ' ' → logprob: -1.791818380355835
    3. 'def' (adapté à ' def') → logprob: -2.541818380355835
    4. '   ' → logprob: -2.541818380355835
    5. '    ' → logprob: -3.416818380355835
    6. '```' → logprob: -4.416818618774414
    7. ' 
' → logprob: -4.541818618774414
    8. ' pass' → logprob: -4.666818618774414
    9. '_' → logprob: -5.666818618774414
    10. '[' → logprob: -5.666818618774414

Token 6: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.7266051173210144
    2. ' ' → logprob: -0.9766051173210144
    3. '__' → logprob: -2.351605176925659
    4. ' ' → logprob: -3.851605176925659
    5. ' init' → logprob: -5.72660493850708
    6. '    ' → logprob: -5.85160493850708
    7. '<|end|>' → logprob: -5.97660493850708
    8. ' add' → logprob: -6.22660493850708
    9. ' write' → logprob: -6.35160493850708
    10. '_' → logprob: -6.47660493850708

Token 7: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.644463479053229e-05
    2. '_init' → logprob: -10.250046730041504
    3. ' init' → logprob: -11.500046730041504
    4. '_' → logprob: -14.125046730041504
    5. '	init' → logprob: -16.625045776367188
    6. 'ini' → logprob: -17.500045776367188
    7. '_i' → logprob: -18.000045776367188
    8. '__' → logprob: -19.000045776367188
    9. '_in' → logprob: -19.375045776367188
    10. 'inite' → logprob: -19.625045776367188

Token 8: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5305370092391968
    2. '__(' → logprob: -1.0305370092391968
    3. '(' → logprob: -3.1555371284484863
    4. '_' → logprob: -5.405537128448486
    5. '__(
' → logprob: -5.655537128448486
    6. '__((' → logprob: -6.280537128448486
    7. '```' → logprob: -6.905537128448486
    8. '__('' → logprob: -7.530537128448486
    9. '__(*' → logprob: -8.155536651611328
    10. '(self' → logprob: -9.030536651611328

Token 9: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0036459225229918957
    2. ' self' → logprob: -5.628645896911621
    3. ')' → logprob: -10.753645896911621
    4. '(self' → logprob: -11.128645896911621
    5. ' ' → logprob: -12.753645896911621
    6. ' )' → logprob: -14.003645896911621
    7. '	self' → logprob: -14.003645896911621
    8. '```' → logprob: -14.128645896911621
    9. '*self' → logprob: -14.378645896911621
    10. '_self' → logprob: -14.753645896911621

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010134383104741573
    2. 'self' → logprob: -5.260134220123291
    3. '):' → logprob: -6.135134220123291
    4. ' ,' → logprob: -6.385134220123291
    5. ')' → logprob: -7.635134220123291
    6. '_' → logprob: -9.26013469696045
    7. ' self' → logprob: -9.26013469696045
    8. ',self' → logprob: -9.76013469696045
    9. ' ' → logprob: -9.88513469696045
    10. ',p' → logprob: -9.88513469696045

Token 11: ' quantity' (ID: 17245)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2427523285150528
    2. ' pencils' → logprob: -1.9927523136138916
    3. ' self' → logprob: -2.7427523136138916
    4. ' pencil' → logprob: -4.242752552032471
    5. 'p' → logprob: -9.242752075195312
    6. ' pens' → logprob: -9.367752075195312
    7. 'color' → logprob: -9.367752075195312
    8. ')' → logprob: -9.992752075195312
    9. 'pens' → logprob: -10.367752075195312
    10. 'colors' → logprob: -10.867752075195312

Token 12: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0185680128633976
    2. ',' → logprob: -4.39356803894043
    3. ':' → logprob: -5.51856803894043
    4. '=' → logprob: -6.89356803894043
    5. ')' → logprob: -7.39356803894043
    6. '):
' → logprob: -8.14356803894043
    7. '   ' → logprob: -9.89356803894043
    8. ' ):' → logprob: -11.51856803894043
    9. ' ,' → logprob: -11.76856803894043
    10. '_' → logprob: -12.51856803894043

Token 13: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.31328314542770386
    2. ' int' → logprob: -1.3132832050323486
    3. '=int' → logprob: -11.31328296661377
    4. '[int' → logprob: -12.81328296661377
    5. ')' → logprob: -13.31328296661377
    6. ':int' → logprob: -13.68828296661377
    7. ' )' → logprob: -13.81328296661377
    8. '(int' → logprob: -14.06328296661377
    9. '<int' → logprob: -14.56328296661377
    10. ' ' → logprob: -14.68828296661377

Token 14: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11052956432104111
    2. ',' → logprob: -2.735529661178589
    3. ')' → logprob: -3.235529661178589
    4. '):
' → logprob: -8.235529899597168
    5. '   ' → logprob: -9.485529899597168
    6. ':' → logprob: -10.610529899597168
    7. ')>' → logprob: -11.860529899597168
    8. '       ' → logprob: -12.110529899597168
    9. ' ,' → logprob: -12.110529899597168
    10. '),' → logprob: -12.110529899597168

Token 15: ' price' (ID: 3911)
  Prédit: ' color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.13951510190963745
    2. 'color' → logprob: -3.1395151615142822
    3. ' price' → logprob: -3.2645151615142822
    4. ' pencil' → logprob: -3.2645151615142822
    5. ' quality' → logprob: -6.264514923095703
    6. ' brand' → logprob: -6.639514923095703
    7. ' max' → logprob: -6.639514923095703
    8. ' hardness' → logprob: -7.139514923095703
    9. ' length' → logprob: -7.264514923095703
    10. ' cost' → logprob: -7.764514923095703

Token 16: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06720422208309174
    2. ':' → logprob: -3.317204236984253
    3. '=' → logprob: -4.067203998565674
    4. ')' → logprob: -4.692203998565674
    5. ',' → logprob: -6.817203998565674
    6. ' ):' → logprob: -7.067203998565674
    7. '):
' → logprob: -8.817204475402832
    8. '_per' → logprob: -8.817204475402832
    9. '   ' → logprob: -10.067204475402832
    10. 's' → logprob: -10.192204475402832

Token 17: ' int' (ID: 677)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.04129629582166672
    2. 'float' → logprob: -3.5412962436676025
    3. ' int' → logprob: -4.916296482086182
    4. 'int' → logprob: -6.416296482086182
    5. '=float' → logprob: -6.666296482086182
    6. ')' → logprob: -7.791296482086182
    7. ' )' → logprob: -8.041296005249023
    8. ' ' → logprob: -8.291296005249023
    9. '(float' → logprob: -9.416296005249023
    10. '<|end|>' → logprob: -10.291296005249023

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0043230680748820305
    2. ')' → logprob: -5.5043230056762695
    3. '):
' → logprob: -8.50432300567627
    4. ':' → logprob: -11.12932300567627
    5. ',' → logprob: -11.25432300567627
    6. '   ' → logprob: -11.62932300567627
    7. '```' → logprob: -13.50432300567627
    8. '):

' → logprob: -14.37932300567627
    9. '):
' → logprob: -14.50432300567627
    10. '       ' → logprob: -14.75432300567627

Token 19: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023933829739689827
    2. '   ' → logprob: -4.1489338874816895
    3. '    ' → logprob: -5.3989338874816895
    4. '<|end|>' → logprob: -6.6489338874816895
    5. 'self' → logprob: -8.148933410644531
    6. ' ' → logprob: -8.148933410644531
    7. '        ' → logprob: -8.523933410644531
    8. '\' → logprob: -8.648933410644531
    9. '        
' → logprob: -8.648933410644531
    10. ':' → logprob: -8.648933410644531

Token 20: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12763388454914093
    2. 'self' (adapté à ' self') → logprob: -2.752633810043335
    3. ' self' → logprob: -3.002633810043335
    4. '<|end|>' → logprob: -6.127634048461914
    5. '   ' → logprob: -6.877634048461914
    6. '        ' → logprob: -6.877634048461914
    7. ' ' → logprob: -8.002634048461914
    8. '\' → logprob: -8.127634048461914
    9. ' ' → logprob: -8.127634048461914
    10. '           ' → logprob: -8.377634048461914

Token 21: '.quantity' (ID: 65301)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18011823296546936
    2. '.quantity' → logprob: -1.805118203163147
    3. ' .' → logprob: -8.680118560791016
    4. '.price' → logprob: -8.930118560791016
    5. 'quantity' → logprob: -10.805118560791016
    6. '.p' → logprob: -11.430118560791016
    7. '.Quantity' → logprob: -12.055118560791016
    8. '.qty' → logprob: -12.305118560791016
    9. '.amount' → logprob: -12.680118560791016
    10. '.quant' → logprob: -13.180118560791016

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0898064374923706
    2. '=' → logprob: -2.46480655670166
    3. '<|end|>' → logprob: -7.21480655670166
    4. '       ' → logprob: -9.71480655670166
    5. '<|end|>' → logprob: -11.21480655670166
    6. ' ' → logprob: -11.21480655670166
    7. '        ' → logprob: -11.46480655670166
    8. ')' → logprob: -12.08980655670166
    9. ',' → logprob: -12.21480655670166
    10. '    ' → logprob: -12.83980655670166

Token 23: ' quantity' (ID: 17245)
  Prédit: ' quantity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quantity' → logprob: -0.02324768900871277
    2. 'quantity' → logprob: -3.773247718811035
    3. '(quantity' → logprob: -13.273247718811035
    4. '.quantity' → logprob: -15.773247718811035
    5. '_quantity' → logprob: -16.14824676513672
    6. ' ' → logprob: -16.39824676513672
    7. '```' → logprob: -16.77324676513672
    8. 'Quantity' → logprob: -16.77324676513672
    9. ' ' → logprob: -17.64824676513672
    10. '   ' → logprob: -18.27324676513672

Token 24: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3700753152370453
    2. '<|end|>' → logprob: -1.2450753450393677
    3. '```' → logprob: -5.120075225830078
    4. '
' → logprob: -5.620075225830078
    5. '        
' → logprob: -6.120075225830078
    6. '\n' → logprob: -6.370075225830078
    7. ')' → logprob: -6.495075225830078
    8. '        ' → logprob: -6.620075225830078
    9. '<|end|>' → logprob: -6.870075225830078
    10. ' ' → logprob: -7.120075225830078

Token 26: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09490378201007843
    2. 'self' (adapté à ' self') → logprob: -2.5949037075042725
    3. '        ' → logprob: -4.969903945922852
    4. ' self' → logprob: -5.594903945922852
    5. ' ' → logprob: -6.469903945922852
    6. '```' → logprob: -7.219903945922852
    7. ',' → logprob: -7.469903945922852
    8. '        
' → logprob: -7.719903945922852
    9. '<|end|>' → logprob: -7.844903945922852
    10. '   ' → logprob: -8.469903945922852

Token 27: '.price' (ID: 31587)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05090225487947464
    2. '.price' → logprob: -3.0509023666381836
    3. '.quantity' → logprob: -6.175902366638184
    4. ' .' → logprob: -8.675902366638184
    5. 'price' → logprob: -11.300902366638184
    6. '.value' → logprob: -11.550902366638184
    7. '.Price' → logprob: -12.050902366638184
    8. '.cost' → logprob: -12.050902366638184
    9. '.purchase' → logprob: -12.675902366638184
    10. '.color' → logprob: -13.425902366638184

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10047473013401031
    2. '=' → logprob: -2.3504748344421387
    3. '<|end|>' → logprob: -8.85047435760498
    4. ' ' → logprob: -9.60047435760498
    5. '.' → logprob: -11.10047435760498
    6. '   ' → logprob: -11.22547435760498
    7. '<|end|>' → logprob: -11.47547435760498
    8. ')' → logprob: -12.22547435760498
    9. ' =)' → logprob: -12.72547435760498
    10. '  ' → logprob: -13.22547435760498

Token 29: ' price' (ID: 3911)
  Prédit: ' price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.012510471045970917
    2. 'price' → logprob: -4.387510299682617
    3. '(price' → logprob: -14.887510299682617
    4. '	price' → logprob: -15.637510299682617
    5. ' ' → logprob: -16.387510299682617
    6. '0' → logprob: -16.762510299682617
    7. ' quantity' → logprob: -17.262510299682617
    8. ' pric' → logprob: -17.262510299682617
    9. '.price' → logprob: -17.637510299682617
    10. 'Price' → logprob: -17.637510299682617

Token 30: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9195931553840637
    2. '<|end|>' → logprob: -1.169593095779419
    3. '   ' → logprob: -1.419593095779419
    4. '\n' → logprob: -4.169593334197998
    5. '    
' → logprob: -5.044593334197998
    6. ':' → logprob: -5.044593334197998
    7. '\' → logprob: -5.419593334197998
    8. '```' → logprob: -5.669593334197998
    9. '<|end|>' → logprob: -5.669593334197998
    10. ' ' → logprob: -7.169593334197998

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23668831586837769
    2. '
' → logprob: -1.7366883754730225
    3. '    
' → logprob: -4.986688137054443
    4. '\n' → logprob: -4.986688137054443
    5. '<|end|>' → logprob: -5.111688137054443
    6. '.' → logprob: -6.236688137054443
    7. '\' → logprob: -6.236688137054443
    8. ',' → logprob: -6.486688137054443
    9. ':' → logprob: -6.736688137054443
    10. 'def' → logprob: -6.861688137054443

Token 32: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4895780086517334
    2. 'def' (adapté à ' def') → logprob: -0.9895780086517334
    3. ' def' → logprob: -4.2395782470703125
    4. '    
' → logprob: -7.6145782470703125
    5. '	def' → logprob: -8.739578247070312
    6. '```' → logprob: -8.989578247070312
    7. ' ' → logprob: -9.364578247070312
    8. '       ' → logprob: -10.614578247070312
    9. '
' → logprob: -10.739578247070312
    10. '<|end|>' → logprob: -11.114578247070312

Token 33: ' min' (ID: 1349)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.5560363531112671
    2. ' calculate' → logprob: -1.056036353111267
    3. ' space' → logprob: -3.0560364723205566
    4. ' total' → logprob: -4.306036472320557
    5. ' ' → logprob: -5.681036472320557
    6. ' price' → logprob: -5.931036472320557
    7. ' buy' → logprob: -6.181036472320557
    8. ' def' → logprob: -6.431036472320557
    9. ' purchase' → logprob: -6.681036472320557
    10. ' add' → logprob: -6.806036472320557

Token 34: '_cost' (ID: 36820)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03152895346283913
    2. '_price' → logprob: -4.156528949737549
    3. 'imum' → logprob: -5.406528949737549
    4. '_quantity' → logprob: -6.031528949737549
    5. 'imize' → logprob: -6.031528949737549
    6. '_qty' → logprob: -6.781528949737549
    7. '_cost' → logprob: -7.406528949737549
    8. '_size' → logprob: -8.031529426574707
    9. '_purchase' → logprob: -8.156529426574707
    10. '_count' → logprob: -8.156529426574707

Token 35: '_for' (ID: 11903)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5059866905212402
    2. '(self' → logprob: -1.0059866905212402
    3. '_' → logprob: -3.6309866905212402
    4. '_to' → logprob: -6.75598669052124
    5. '_per' → logprob: -7.13098669052124
    6. '_self' → logprob: -7.25598669052124
    7. '_(' → logprob: -7.50598669052124
    8. '_for' → logprob: -8.380987167358398
    9. '   ' → logprob: -8.630987167358398
    10. '_space' → logprob: -8.755987167358398

Token 36: '(self' (ID: 2402)
  Prédit: '_quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_quantity' → logprob: -0.271828293800354
    2. '(self' → logprob: -2.7718281745910645
    3. '_' → logprob: -2.8968281745910645
    4. '_purchase' → logprob: -3.2718281745910645
    5. '_p' → logprob: -3.3968281745910645
    6. 'quantity' → logprob: -4.1468281745910645
    7. '(' → logprob: -4.6468281745910645
    8. ' purchasing' → logprob: -5.3968281745910645
    9. ' quantity' → logprob: -5.7718281745910645
    10. ' ' → logprob: -6.0218281745910645

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.056140422821045
    2. '_quantity' → logprob: -1.056140422821045
    3. 'self' → logprob: -2.306140422821045
    4. 'quantity' → logprob: -3.056140422821045
    5. ')' → logprob: -3.431140422821045
    6. '_' → logprob: -3.931140422821045
    7. ' )' → logprob: -3.931140422821045
    8. ' quantity' → logprob: -4.056140422821045
    9. '_purchase' → logprob: -4.306140422821045
    10. '(self' → logprob: -4.556140422821045

Token 38: ' required' (ID: 3759)
  Prédit: ' quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' quantity' → logprob: -0.4556690454483032
    2. ' self' → logprob: -1.5806690454483032
    3. ' pencils' → logprob: -2.0806689262390137
    4. 'quantity' → logprob: -4.455668926239014
    5. ' n' → logprob: -4.705668926239014
    6. 'self' → logprob: -5.580668926239014
    7. ' amount' → logprob: -5.705668926239014
    8. ' number' → logprob: -5.830668926239014
    9. ' num' → logprob: -6.955668926239014
    10. ' count' → logprob: -6.955668926239014

Token 39: ':' (ID: 25)
  Prédit: '_quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_quantity' → logprob: -0.0637391209602356
    2. '_p' → logprob: -3.438739061355591
    3. '):' → logprob: -3.938739061355591
    4. '_' → logprob: -5.18873929977417
    5. '_qty' → logprob: -6.43873929977417
    6. '_amount' → logprob: -6.81373929977417
    7. ' ):' → logprob: -7.31373929977417
    8. '_quant' → logprob: -8.188738822937012
    9. '_space' → logprob: -8.563738822937012
    10. ':' → logprob: -9.313738822937012

Token 40: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.47854137420654297
    2. 'int' → logprob: -1.603541374206543
    3. ' quantity' → logprob: -2.228541374206543
    4. ' )' → logprob: -3.228541374206543
    5. 'quantity' → logprob: -3.853541374206543
    6. ')' → logprob: -5.728541374206543
    7. ' ' → logprob: -6.228541374206543
    8. ' ):' → logprob: -6.478541374206543
    9. ' self' → logprob: -7.103541374206543
    10. ' pencils' → logprob: -7.353541374206543

Token 41: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021420324221253395
    2. ')' → logprob: -3.8964202404022217
    3. '):
' → logprob: -7.146420478820801
    4. ',' → logprob: -10.1464204788208
    5. '   ' → logprob: -11.1464204788208
    6. ' ):' → logprob: -11.7714204788208
    7. ':' → logprob: -11.8964204788208
    8. '       ' → logprob: -12.0214204788208
    9. ')->' → logprob: -12.3964204788208
    10. '):

' → logprob: -12.8964204788208

Token 42: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001383805531077087
    2. '):' → logprob: -6.7513837814331055
    3. ':**' → logprob: -9.501383781433105
    4. '():' → logprob: -9.626383781433105
    5. ':return' → logprob: -11.001383781433105
    6. '       ' → logprob: -11.376383781433105
    7. ' :' → logprob: -11.626383781433105
    8. '(self' → logprob: -12.001383781433105
    9. ':self' → logprob: -12.376383781433105
    10. '   ' → logprob: -12.501383781433105

Token 43: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.04959886148571968
    2. 'int' → logprob: -3.0495989322662354
    3. ' ' → logprob: -7.299598693847656
    4. ' None' → logprob: -8.924598693847656
    5. ' ' → logprob: -9.299598693847656
    6. ' '' → logprob: -10.424598693847656
    7. ' Optional' → logprob: -10.799598693847656
    8. ' "' → logprob: -11.049598693847656
    9. '  ' → logprob: -11.424598693847656
    10. '	int' → logprob: -11.424598693847656

Token 44: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016623330884613097
    2. '):' → logprob: -9.000165939331055
    3. '():' → logprob: -10.875165939331055
    4. ':return' → logprob: -11.625165939331055
    5. ' :' → logprob: -12.250165939331055
    6. ':**' → logprob: -12.500165939331055
    7. ':
' → logprob: -14.000165939331055
    8. '>:' → logprob: -14.000165939331055
    9. ':def' → logprob: -14.000165939331055
    10. ',' → logprob: -14.625165939331055

Token 45: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003500407561659813
    2. '    ' → logprob: -6.628500461578369
    3. '   ' → logprob: -7.628500461578369
    4. '        ' → logprob: -7.628500461578369
    5. '```' → logprob: -8.128499984741211
    6. '
' → logprob: -8.503499984741211
    7. '\n' → logprob: -8.878499984741211
    8. 'n' → logprob: -9.253499984741211
    9. ' ' → logprob: -9.628499984741211
    10. '\' → logprob: -9.753499984741211

Token 46: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3926933705806732
    2. ' if' → logprob: -1.2676934003829956
    3. '       ' → logprob: -3.892693281173706
    4. 'cost' → logprob: -4.642693519592285
    5. 'return' → logprob: -6.017693519592285
    6. 'max' → logprob: -6.017693519592285
    7. 'min' → logprob: -6.267693519592285
    8. '```' → logprob: -6.517693519592285
    9. 'pass' → logprob: -6.892693519592285
    10. 'best' → logprob: -6.892693519592285

Token 47: ' nombre' (ID: 9733)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.307941734790802
    2. 'if' → logprob: -1.8079416751861572
    3. '       ' → logprob: -3.6829416751861572
    4. ' pass' → logprob: -4.182941913604736
    5. 'i' → logprob: -4.307941913604736
    6. ' i' → logprob: -4.432941913604736
    7. 'pass' → logprob: -4.932941913604736
    8. ' ' → logprob: -5.557941913604736
    9. '        ' → logprob: -5.682941913604736
    10. '#' → logprob: -5.807941913604736

Token 48: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14813454449176788
    2. 's' → logprob: -2.898134469985962
    3. ' ' → logprob: -3.398134469985962
    4. '   ' → logprob: -3.773134469985962
    5. '       ' → logprob: -4.898134708404541
    6. '_s' → logprob: -5.898134708404541
    7. '  ' → logprob: -6.023134708404541
    8. ')' → logprob: -6.148134708404541
    9. '=' → logprob: -6.148134708404541
    10. '_space' → logprob: -6.523134708404541

Token 49: ' pa' (ID: 2428)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.12463933974504471
    2. 'cr' → logprob: -3.7496392726898193
    3. 'c' → logprob: -3.8746392726898193
    4. ' p' → logprob: -4.249639511108398
    5. ' crayons' → logprob: -4.249639511108398
    6. '```' → logprob: -4.374639511108398
    7. ' pencils' → logprob: -5.124639511108398
    8. 's' → logprob: -5.624639511108398
    9. 't' → logprob: -5.874639511108398
    10. ' ' → logprob: -5.874639511108398

Token 50: 'quets' (ID: 82953)
  Prédit: 'quets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quets' → logprob: -0.010580706410109997
    2. 'ck' → logprob: -5.760580539703369
    3. 'n' → logprob: -6.885580539703369
    4. 'quet' → logprob: -7.010580539703369
    5. 'p' → logprob: -7.010580539703369
    6. 'qu' → logprob: -7.260580539703369
    7. 'quettes' → logprob: -7.760580539703369
    8. 'q' → logprob: -7.885580539703369
    9. 'u' → logprob: -7.885580539703369
    10. 'sets' → logprob: -8.260581016540527

Token 51: ' nécessaires' (ID: 74402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6959168314933777
    2. 's' → logprob: -1.8209168910980225
    3. ' ' → logprob: -1.8209168910980225
    4. '        ' → logprob: -3.1959168910980225
    5. '_' → logprob: -3.5709168910980225
    6. '   ' → logprob: -3.8209168910980225
    7. ' s' → logprob: -4.195916652679443
    8. ' =' → logprob: -4.445916652679443
    9. '    ' → logprob: -4.570916652679443
    10. ' )' → logprob: -5.195916652679443

Token 52: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02084793895483017
    2. '        ' → logprob: -4.020847797393799
    3. ' =' → logprob: -7.145847797393799
    4. '   ' → logprob: -7.520847797393799
    5. '    ' → logprob: -8.395848274230957
    6. 'n' → logprob: -8.645848274230957
    7. '     ' → logprob: -8.895848274230957
    8. '      ' → logprob: -9.145848274230957
    9. '           ' → logprob: -9.520848274230957
    10. ' ' → logprob: -9.520848274230957

Token 53: ' atteindre' (ID: 95734)
  Prédit: ' couvrir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couvrir' → logprob: -0.061165571212768555
    2. ' acheter' → logprob: -3.1861655712127686
    3. 'acheter' → logprob: -5.436165809631348
    4. 'cover' → logprob: -6.561165809631348
    5. ' satisfaire' → logprob: -6.561165809631348
    6. ' cover' → logprob: -6.811165809631348
    7. ' atteindre' → logprob: -6.811165809631348
    8. ' ' → logprob: -6.936165809631348
    9. ' couvr' → logprob: -7.186165809631348
    10. ' required' → logprob: -7.311165809631348

Token 54: ' au' (ID: 2791)
  Prédit: ' required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' required' → logprob: -0.6983535289764404
    2. ' le' → logprob: -1.4483535289764404
    3. 'required' → logprob: -1.6983535289764404
    4. ' la' → logprob: -3.8233535289764404
    5. ' ' → logprob: -4.1983537673950195
    6. '       ' → logprob: -4.6983537673950195
    7. 'le' → logprob: -5.0733537673950195
    8. '`' → logprob: -5.4483537673950195
    9. '   ' → logprob: -5.4483537673950195
    10. '(required' → logprob: -5.4483537673950195

Token 55: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.2844952940940857
    2. ' moins' → logprob: -1.4094953536987305
    3. '   ' → logprob: -6.5344953536987305
    4. '  ' → logprob: -7.2844953536987305
    5. 'menos' → logprob: -8.15949535369873
    6. 'minimum' → logprob: -8.28449535369873
    7. '```' → logprob: -8.65949535369873
    8. ' menos' → logprob: -9.03449535369873
    9. 'mo' → logprob: -9.15949535369873
    10. '    ' → logprob: -9.28449535369873

Token 56: ' required' (ID: 3759)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'required' → logprob: -0.2846163809299469
    2. ' required' → logprob: -1.4096163511276245
    3. '	required' → logprob: -6.659616470336914
    4. ' le' → logprob: -7.034616470336914
    5. '`' → logprob: -7.784616470336914
    6. '(required' → logprob: -8.534616470336914
    7. ' ' → logprob: -9.159616470336914
    8. '   ' → logprob: -9.284616470336914
    9. '```' → logprob: -9.409616470336914
    10. 'le' → logprob: -9.534616470336914

Token 57: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025276556611061096
    2. '        ' → logprob: -4.9002766609191895
    3. 'n' → logprob: -5.2752766609191895
    4. '<|end|>' → logprob: -5.6502766609191895
    5. '\n' → logprob: -6.4002766609191895
    6. '        
' → logprob: -6.7752766609191895
    7. '   ' → logprob: -6.9002766609191895
    8. ':' → logprob: -7.1502766609191895
    9. ' ' → logprob: -7.7752766609191895
    10. 'return' → logprob: -8.025276184082031

Token 58: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024129224941134453
    2. '        ' → logprob: -4.899129390716553
    3. 'n' → logprob: -5.024129390716553
    4. '\n' → logprob: -5.774129390716553
    5. '   ' → logprob: -7.149129390716553
    6. '<|end|>' → logprob: -7.274129390716553
    7. '        
' → logprob: -7.399129390716553
    8. 's' → logprob: -7.649129390716553
    9. '\' → logprob: -7.774129390716553
    10. ' ' → logprob: -7.774129390716553

Token 59: ' packages' (ID: 21429)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.053088828921318054
    2. 'n' → logprob: -3.803088903427124
    3. 'p' → logprob: -5.053088665008545
    4. 'import' → logprob: -5.178088665008545
    5. 'pack' → logprob: -6.428088665008545
    6. ' p' → logprob: -6.428088665008545
    7. 'packs' → logprob: -6.428088665008545
    8. ' n' → logprob: -6.553088665008545
    9. 'needed' → logprob: -6.803088665008545
    10. ' packages' → logprob: -7.053088665008545

Token 60: '_needed' (ID: 148421)
  Prédit: '_needed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_needed' → logprob: -0.36344894766807556
    2. ' =' → logprob: -1.238448977470398
    3. '_required' → logprob: -5.3634490966796875
    4. '_' → logprob: -5.3634490966796875
    5. '=' → logprob: -5.4884490966796875
    6. '_count' → logprob: -7.1134490966796875
    7. '_to' → logprob: -8.613449096679688
    8. '_per' → logprob: -8.738449096679688
    9. '_num' → logprob: -9.988449096679688
    10. '_for' → logprob: -10.238449096679688

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0008054602658376098
    2. '=' → logprob: -7.125805377960205
    3. ' ' → logprob: -14.625805854797363
    4. ' =
' → logprob: -15.375805854797363
    5. ' ' → logprob: -16.250804901123047
    6. ',' → logprob: -16.625804901123047
    7. '        ' → logprob: -17.125804901123047
    8. '    ' → logprob: -17.250804901123047
    9. '   ' → logprob: -17.250804901123047
    10. ' =
' → logprob: -17.250804901123047

Token 62: ' -' (ID: 533)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.15842655301094055
    2. '(required' → logprob: -2.283426523208618
    3. ' -' → logprob: -3.158426523208618
    4. '-' → logprob: -6.783426761627197
    5. 'required' → logprob: -8.283426284790039
    6. ' ' → logprob: -8.408426284790039
    7. '(' → logprob: -8.533426284790039
    8. ' required' → logprob: -8.908426284790039
    9. '-required' → logprob: -10.158426284790039
    10. '   ' → logprob: -10.283426284790039

Token 63: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.018801433965563774
    2. '-' → logprob: -4.143801212310791
    3. '-(' → logprob: -7.018801212310791
    4. '(' → logprob: -7.268801212310791
    5. '(-(' → logprob: -7.518801212310791
    6. '(required' → logprob: -7.643801212310791
    7. '-required' → logprob: -9.76880168914795
    8. '-self' → logprob: -10.26880168914795
    9. '((-' → logprob: -10.89380168914795
    10. 'required' → logprob: -11.01880168914795

Token 64: 'required' (ID: 12919)
  Prédit: 'required'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'required' → logprob: -0.0004952482995577157
    2. ' required' → logprob: -7.625495433807373
    3. 'self' → logprob: -12.875494956970215
    4. '	required' → logprob: -13.000494956970215
    5. 'requested' → logprob: -13.375494956970215
    6. '(required' → logprob: -14.875494956970215
    7. '       ' → logprob: -16.12549591064453
    8. '   ' → logprob: -16.25049591064453
    9. '.required' → logprob: -16.37549591064453
    10. 'require' → logprob: -16.37549591064453

Token 65: ' //' (ID: 602)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.5411022305488586
    2. ' //' → logprob: -0.9161022305488586
    3. ' ' → logprob: -4.916102409362793
    4. '/' → logprob: -5.166102409362793
    5. ' ' → logprob: -6.166102409362793
    6. '//' → logprob: -6.291102409362793
    7. '        ' → logprob: -8.666102409362793
    8. ')' → logprob: -8.666102409362793
    9. 'self' → logprob: -9.041102409362793
    10. '       ' → logprob: -9.541102409362793

Token 66: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16025348007678986
    2. ' self' → logprob: -1.9102535247802734
    3. '       ' → logprob: -10.785253524780273
    4. ' ' → logprob: -12.535253524780273
    5. '           ' → logprob: -13.410253524780273
    6. '   ' → logprob: -13.910253524780273
    7. '	self' → logprob: -14.410253524780273
    8. '(self' → logprob: -14.660253524780273
    9. '
' → logprob: -15.535253524780273
    10. '```' → logprob: -15.660253524780273

Token 67: '.quantity' (ID: 65301)
  Prédit: '.quantity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.quantity' → logprob: -0.0003163969377055764
    2. '.' → logprob: -8.625316619873047
    3. ' .' → logprob: -9.375316619873047
    4. 'quantity' → logprob: -10.375316619873047
    5. '.price' → logprob: -11.750316619873047
    6. '.quant' → logprob: -12.000316619873047
    7. ').' → logprob: -13.250316619873047
    8. '.p' → logprob: -13.875316619873047
    9. '.pack' → logprob: -14.500316619873047
    10. '.amount' → logprob: -14.625316619873047

Token 68: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012403888104017824
    2. '       ' → logprob: -9.875123977661133
    3. ' )' → logprob: -10.375123977661133
    4. ')
' → logprob: -10.750123977661133
    5. '))' → logprob: -10.875123977661133
    6. ')

' → logprob: -15.000123977661133
    7. ')`' → logprob: -15.750123977661133
    8. '   ' → logprob: -16.125123977661133
    9. ')#' → logprob: -16.375123977661133
    10. '`)' → logprob: -16.500123977661133

Token 69: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2935352027416229
    2. 'return' → logprob: -1.7935352325439453
    3. '
' → logprob: -3.1685352325439453
    4. ' return' → logprob: -3.5435352325439453
    5. '        
' → logprob: -4.793535232543945
    6. '*' → logprob: -6.293535232543945
    7. '  
' → logprob: -6.793535232543945
    8. '```' → logprob: -6.918535232543945
    9. ' 
' → logprob: -7.168535232543945
    10. '\' → logprob: -7.293535232543945

Token 70: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.443047434091568
    2. '       ' → logprob: -1.3180474042892456
    3. 'return' → logprob: -2.568047523498535
    4. ' return' → logprob: -5.443047523498535
    5. '        
' → logprob: -5.818047523498535
    6. '<|end|>' → logprob: -6.193047523498535
    7. '*' → logprob: -7.193047523498535
    8. '
' → logprob: -7.693047523498535
    9. '```' → logprob: -7.818047523498535
    10. ' 
' → logprob: -7.818047523498535

Token 71: ' division' (ID: 21629)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3869349956512451
    2. '<|end|>' → logprob: -2.261934995651245
    3. ' math' → logprob: -2.386934995651245
    4. ' ' → logprob: -2.761934995651245
    5. ')' → logprob: -4.761935234069824
    6. ' ceil' → logprob: -5.136935234069824
    7. 'ceil' → logprob: -5.136935234069824
    8. '       ' → logprob: -5.261935234069824
    9. '```' → logprob: -5.261935234069824
    10. ' (' → logprob: -5.386935234069824

Token 72: ' plafond' (ID: 114829)
  Prédit: ' entière'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' entière' → logprob: -0.18871349096298218
    2. '   ' → logprob: -2.438713550567627
    3. ' ent' → logprob: -3.313713550567627
    4. 'ent' → logprob: -4.188713550567627
    5. ' ' → logprob: -4.813713550567627
    6. '  ' → logprob: -5.188713550567627
    7. '```' → logprob: -5.938713550567627
    8. ' //' → logprob: -6.438713550567627
    9. '    ' → logprob: -6.563713550567627
    10. ' ' → logprob: -6.813713550567627

Token 73: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.56563401222229
    2. 'return' → logprob: -1.56563401222229
    3. '       ' → logprob: -1.81563401222229
    4. ' return' → logprob: -3.56563401222229
    5. '        
' → logprob: -3.69063401222229
    6. '```' → logprob: -6.690633773803711
    7. '
' → logprob: -6.940633773803711
    8. ' 
' → logprob: -7.065633773803711
    9. '\' → logprob: -7.315633773803711
    10. '<|end|>' → logprob: -7.565633773803711

Token 74: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.455814391374588
    2. '
' → logprob: -1.5808143615722656
    3. 'return' → logprob: -2.0808143615722656
    4. '        
' → logprob: -3.9558143615722656
    5. ' return' → logprob: -4.205814361572266
    6. '```' → logprob: -8.080814361572266
    7. '<|end|>' → logprob: -8.330814361572266
    8. '    
' → logprob: -8.705814361572266
    9. '
' → logprob: -9.205814361572266
    10. ' 
' → logprob: -9.330814361572266

Token 75: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7549669742584229
    2. '       ' → logprob: -1.1299669742584229
    3. ' return' → logprob: -1.6299669742584229
    4. '
' → logprob: -4.754966735839844
    5. '        
' → logprob: -6.504966735839844
    6. ' 
' → logprob: -9.129966735839844
    7. '\' → logprob: -9.379966735839844
    8. '```' → logprob: -9.379966735839844
    9. '<|end|>' → logprob: -9.504966735839844
    10. 'eturn' → logprob: -9.879966735839844

Token 76: ' packages' (ID: 21429)
  Prédit: ' packages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' packages' → logprob: -0.0501709021627903
    2. 'packages' → logprob: -3.3001708984375
    3. ' self' → logprob: -4.6751708984375
    4. 'self' → logprob: -5.9251708984375
    5. 'package' → logprob: -10.5501708984375
    6. ' package' → logprob: -11.0501708984375
    7. '(pack' → logprob: -11.8001708984375
    8. '       ' → logprob: -11.9251708984375
    9. '   ' → logprob: -13.4251708984375
    10. 'pack' → logprob: -14.1751708984375

Token 77: '_needed' (ID: 148421)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7089548707008362
    2. 'ges' → logprob: -1.3339548110961914
    3. 'ages' → logprob: -2.4589548110961914
    4. 'es' → logprob: -2.7089548110961914
    5. 'packages' → logprob: -3.4589548110961914
    6. '_needed' → logprob: -3.5839548110961914
    7. '_packages' → logprob: -3.8339548110961914
    8. 'g' → logprob: -5.708954811096191
    9. 'ge' → logprob: -6.083954811096191
    10. 'ses' → logprob: -6.583954811096191

Token 78: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.000961362209636718
    2. '*' → logprob: -7.0009613037109375
    3. ' ' → logprob: -10.625961303710938
    4. '*self' → logprob: -11.500961303710938
    5. ' ' → logprob: -11.625961303710938
    6. '```' → logprob: -13.125961303710938
    7. 'self' → logprob: -14.250961303710938
    8. ' self' → logprob: -14.375961303710938
    9. '`' → logprob: -14.375961303710938
    10. '0' → logprob: -15.000961303710938

Token 79: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.14269065856933594
    2. 'self' → logprob: -2.017690658569336
    3. ' ' → logprob: -11.642690658569336
    4. ' ' → logprob: -12.642690658569336
    5. '       ' → logprob: -13.892690658569336
    6. '<|end|>' → logprob: -14.142690658569336
    7. '	self' → logprob: -14.517690658569336
    8. '(self' → logprob: -14.642690658569336
    9. '*self' → logprob: -16.392690658569336
    10. '        ' → logprob: -16.517690658569336

Token 80: '.price' (ID: 31587)
  Prédit: '.price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.price' → logprob: -0.0003927808138541877
    2. '.' → logprob: -8.00039291381836
    3. '.quantity' → logprob: -10.25039291381836
    4. ' .' → logprob: -11.12539291381836
    5. '.cost' → logprob: -12.25039291381836
    6. 'price' → logprob: -14.37539291381836
    7. '.value' → logprob: -14.75039291381836
    8. '.payment' → logprob: -15.62539291381836
    9. '.Price' → logprob: -15.62539291381836
    10. '	price' → logprob: -15.87539291381836

Token 81: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5591527223587036
    2. '<|end|>' → logprob: -1.0591527223587036
    3. '```' → logprob: -2.934152603149414
    4. '#' → logprob: -4.809152603149414
    5. '<|end|>' → logprob: -4.809152603149414
    6. '\n' → logprob: -5.184152603149414
    7. 'class' → logprob: -6.684152603149414
    8. '

' → logprob: -6.809152603149414
    9. '.' → logprob: -7.434152603149414
    10. ' ' → logprob: -7.559152603149414

Token 82: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4938933849334717
    2. '<|end|>' → logprob: -1.2438933849334717
    3. '```' → logprob: -2.9938933849334717
    4. '#' → logprob: -3.7438933849334717
    5. '<|end|>' → logprob: -4.618893623352051
    6. '\n' → logprob: -5.618893623352051
    7. ' ' → logprob: -5.868893623352051
    8. '[' → logprob: -6.243893623352051
    9. '

' → logprob: -6.493893623352051
    10. 'class' → logprob: -6.743893623352051

Token 83: ' P' (ID: 398)
  Prédit: ' Er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Er' → logprob: -0.9850469827651978
    2. ' Marker' → logprob: -1.9850469827651978
    3. ' Pencil' → logprob: -2.360046863555908
    4. ' Paper' → logprob: -2.485046863555908
    5. ' Pen' → logprob: -2.860046863555908
    6. ' Notebook' → logprob: -2.985046863555908
    7. ' ' → logprob: -3.360046863555908
    8. ' Book' → logprob: -3.360046863555908
    9. ' Box' → logprob: -3.360046863555908
    10. ' Paint' → logprob: -3.610046863555908

Token 84: 'encils' (ID: 176266)
  Prédit: 'encil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'encil' → logprob: -0.24458114802837372
    2. 'en' → logprob: -2.4945812225341797
    3. 'aper' → logprob: -3.7445812225341797
    4. 'ro' → logprob: -4.24458122253418
    5. 'r' → logprob: -4.24458122253418
    6. 'ar' → logprob: -4.36958122253418
    7. 'e' → logprob: -4.61958122253418
    8. 'aint' → logprob: -5.30708122253418
    9. 'ython' → logprob: -5.43208122253418
    10. 'rice' → logprob: -5.80708122253418

Token 85: 'Purchase' (ID: 38522)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.2689293622970581
    2. ':' → logprob: -1.768929362297058
    3. 'et' → logprob: -2.7689294815063477
    4. 'Pack' → logprob: -7.143929481506348
    5. 'Bundle' → logprob: -7.393929481506348
    6. '():' → logprob: -7.643929481506348
    7. '(' → logprob: -9.268929481506348
    8. 'ets' → logprob: -9.643929481506348
    9. 'For' → logprob: -9.893929481506348
    10. 'Sets' → logprob: -10.268929481506348

Token 86: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003992104611825198
    2. '(' → logprob: -8.250399589538574
    3. ':
' → logprob: -9.375399589538574
    4. '<|end|>' → logprob: -10.750399589538574
    5. ' :' → logprob: -11.125399589538574
    6. '(P' → logprob: -13.000399589538574
    7. ':def' → logprob: -13.000399589538574
    8. '():' → logprob: -13.250399589538574
    9. '```' → logprob: -13.250399589538574
    10. '):' → logprob: -13.375399589538574

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007660585455596447
    2. '(' → logprob: -5.882660388946533
    3. ' def' → logprob: -6.882660388946533
    4. '<|end|>' → logprob: -7.007660388946533
    5. 'def' → logprob: -7.132660388946533
    6. '    
' → logprob: -7.382660388946533
    7. '(n' → logprob: -8.382660865783691
    8. '       ' → logprob: -8.757660865783691
    9. '[' → logprob: -8.757660865783691
    10. ' (' → logprob: -8.882660865783691

Token 88: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.005546540021896362
    2. 'def' (adapté à ' def') → logprob: -5.380546569824219
    3. '   ' → logprob: -7.005546569824219
    4. '    ' → logprob: -11.505546569824219
    5. ' ' → logprob: -12.505546569824219
    6. ' __' → logprob: -13.380546569824219
    7. '	def' → logprob: -14.255546569824219
    8. ' ' → logprob: -14.255546569824219
    9. '  ' → logprob: -14.380546569824219
    10. ' de' → logprob: -14.505546569824219

Token 89: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0029954127967357635
    2. ' ' → logprob: -6.627995491027832
    3. '__' → logprob: -7.627995491027832
    4. ' _' → logprob: -7.877995491027832
    5. '_init' → logprob: -8.002995491027832
    6. ' init' → logprob: -8.002995491027832
    7. ' def' → logprob: -10.252995491027832
    8. '_' → logprob: -10.377995491027832
    9. '  ' → logprob: -10.877995491027832
    10. ' ' → logprob: -11.252995491027832

Token 90: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.3782830137643032e-05
    2. 'def' → logprob: -12.25001335144043
    3. ' init' → logprob: -12.62501335144043
    4. '   ' → logprob: -12.87501335144043
    5. '__' → logprob: -14.37501335144043
    6. 'class' → logprob: -14.37501335144043
    7. '```' → logprob: -14.37501335144043
    8. '_init' → logprob: -14.62501335144043
    9. 'int' → logprob: -15.12501335144043
    10. 'it' → logprob: -15.50001335144043

Token 91: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.024765919893980026
    2. '__' → logprob: -3.774765968322754
    3. '__(
' → logprob: -7.149765968322754
    4. '(' → logprob: -7.899765968322754
    5. '(self' → logprob: -8.149765968322754
    6. '__((' → logprob: -10.399765968322754
    7. ' (' → logprob: -11.524765968322754
    8. '_(' → logprob: -11.774765968322754
    9. 'self' → logprob: -12.274765968322754
    10. '<|end|>' → logprob: -12.274765968322754

Token 92: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003231878508813679
    2. ' self' → logprob: -8.125323295593262
    3. '
' → logprob: -11.125323295593262
    4. '):
' → logprob: -12.125323295593262
    5. '       ' → logprob: -12.750323295593262
    6. ')' → logprob: -13.250323295593262
    7. ',' → logprob: -14.125323295593262
    8. '   ' → logprob: -14.375323295593262
    9. '(self' → logprob: -15.750323295593262
    10. '0' → logprob: -16.000322341918945

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009654151508584619
    2. ' ,' → logprob: -7.250965595245361
    3. 'self' → logprob: -8.375965118408203
    4. '<|end|>' → logprob: -11.750965118408203
    5. ',self' → logprob: -12.375965118408203
    6. ')' → logprob: -12.875965118408203
    7. '‌,' → logprob: -13.000965118408203
    8. ',
' → logprob: -13.125965118408203
    9. ',p' → logprob: -14.250965118408203
    10. 'quantity' → logprob: -14.250965118408203

Token 94: ' required' (ID: 3759)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4194120168685913
    2. ' self' → logprob: -1.7944120168685913
    3. ' pencil' → logprob: -2.169412136077881
    4. 'p' → logprob: -3.419412136077881
    5. ' pencils' → logprob: -4.669412136077881
    6. ' sets' → logprob: -4.919412136077881
    7. 'sets' → logprob: -5.044412136077881
    8. '   ' → logprob: -6.419412136077881
    9. ')' → logprob: -7.544412136077881
    10. ' available' → logprob: -7.669412136077881

Token 95: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017501497641205788
    2. ' :' → logprob: -7.5017499923706055
    3. '):' → logprob: -7.6267499923706055
    4. ',' → logprob: -8.501749992370605
    5. 's' → logprob: -8.626749992370605
    6. ')' → logprob: -9.501749992370605
    7. ':int' → logprob: -9.501749992370605
    8. '_quantity' → logprob: -10.126749992370605
    9. '_amount' → logprob: -10.251749992370605
    10. 'quantity' → logprob: -11.001749992370605

Token 96: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.602297306060791
    2. ' int' → logprob: -0.852297306060791
    3. 'dict' → logprob: -4.227297306060791
    4. ' dict' → logprob: -5.352297306060791
    5. 'list' → logprob: -5.852297306060791
    6. ' list' → logprob: -6.477297306060791
    7. 'List' → logprob: -7.227297306060791
    8. 'Dict' → logprob: -7.852297306060791
    9. ')' → logprob: -8.477296829223633
    10. '[int' → logprob: -8.727296829223633

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14532114565372467
    2. '):' → logprob: -2.0203211307525635
    3. '):
' → logprob: -6.645321369171143
    4. '       ' → logprob: -6.770321369171143
    5. '   ' → logprob: -9.020320892333984
    6. ')' → logprob: -9.895320892333984
    7. ' ,' → logprob: -11.770320892333984
    8. ':' → logprob: -12.645320892333984
    9. ' ):' → logprob: -12.645320892333984
    10. '):
' → logprob: -13.395320892333984

Token 98: ' set' (ID: 920)
  Prédit: ' pencil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pencil' → logprob: -0.7496218681335449
    2. ' available' → logprob: -1.749621868133545
    3. 'p' → logprob: -1.999621868133545
    4. ' sets' → logprob: -2.124621868133545
    5. '   ' → logprob: -3.624621868133545
    6. 'available' → logprob: -3.874621868133545
    7. 'sets' → logprob: -3.999621868133545
    8. ' pencils' → logprob: -3.999621868133545
    9. ' bundles' → logprob: -6.499621868133545
    10. ' p' → logprob: -6.499621868133545

Token 99: '_x' (ID: 7054)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0001334559783572331
    2. '_list' → logprob: -10.375133514404297
    3. '_sets' → logprob: -10.750133514404297
    4. '_classes' → logprob: -10.875133514404297
    5. '_choices' → logprob: -11.250133514404297
    6. 'sets' → logprob: -11.375133514404297
    7. '_options' → logprob: -11.625133514404297
    8. ':' → logprob: -12.625133514404297
    9. '_sizes' → logprob: -12.625133514404297
    10. '_prices' → logprob: -12.875133514404297

Token 100: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014923048205673695
    2. 's' → logprob: -5.139923095703125
    3. '_quantity' → logprob: -5.139923095703125
    4. 'es' → logprob: -7.014923095703125
    5. '):' → logprob: -7.764923095703125
    6. 'quantity' → logprob: -7.889923095703125
    7. 'Quantity' → logprob: -8.139923095703125
    8. ',' → logprob: -8.764923095703125
    9. ' :' → logprob: -8.889923095703125
    10. '1' → logprob: -8.889923095703125

Token 101: ' Pencil' (ID: 158301)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.5319188237190247
    2. ' Pencil' → logprob: -1.5319187641143799
    3. ' P' → logprob: -1.6569187641143799
    4. ' ' → logprob: -5.531919002532959
    5. ')' → logprob: -7.781919002532959
    6. ' None' → logprob: -8.0319185256958
    7. ' '' → logprob: -8.5319185256958
    8. 'None' → logprob: -8.9069185256958
    9. '  ' → logprob: -9.0319185256958
    10. ',P' → logprob: -9.0319185256958

Token 102: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -9.043078898685053e-05
    2. 'et' → logprob: -9.750090599060059
    3. 'set' → logprob: -10.875090599060059
    4. '_set' → logprob: -11.750090599060059
    5. ' Set' → logprob: -13.250090599060059
    6. 'S' → logprob: -13.875090599060059
    7. 's' → logprob: -14.125090599060059
    8. ' set' → logprob: -15.000090599060059
    9. ':' → logprob: -15.250090599060059
    10. 'Sets' → logprob: -15.375090599060059

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10078927129507065
    2. '):' → logprob: -2.3507893085479736
    3. '):
' → logprob: -7.9757890701293945
    4. ')' → logprob: -8.975789070129395
    5. ':' → logprob: -10.475789070129395
    6. '   ' → logprob: -10.475789070129395
    7. ' ,' → logprob: -10.725789070129395
    8. '1' → logprob: -10.975789070129395
    9. ' ):' → logprob: -12.350789070129395
    10. '       ' → logprob: -12.600789070129395

Token 104: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.00017767686222214252
    2. 'set' → logprob: -9.125177383422852
    3. ' ' → logprob: -10.375177383422852
    4. ' space' → logprob: -11.375177383422852
    5. ' ' → logprob: -11.750177383422852
    6. ' s' → logprob: -12.000177383422852
    7. ' sets' → logprob: -12.125177383422852
    8. ')' → logprob: -14.125177383422852
    9. 'space' → logprob: -14.125177383422852
    10. ' x' → logprob: -14.250177383422852

Token 105: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0029963627457618713
    2. '_' → logprob: -6.752996444702148
    3. 'y' → logprob: -6.752996444702148
    4. '_o' → logprob: -7.377996444702148
    5. 'o' → logprob: -11.377996444702148
    6. '_x' → logprob: -11.877996444702148
    7. ' y' → logprob: -12.877996444702148
    8. ')' → logprob: -13.502996444702148
    9. '_a' → logprob: -13.752996444702148
    10. '_Y' → logprob: -13.877996444702148

Token 106: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11453502625226974
    2. '):' → logprob: -2.239535093307495
    3. ' ):' → logprob: -7.239534854888916
    4. ')' → logprob: -7.739534854888916
    5. ' :' → logprob: -8.114535331726074
    6. ',' → logprob: -8.739535331726074
    7. '):
' → logprob: -9.864535331726074
    8. '   ' → logprob: -10.989535331726074
    9. ' ' → logprob: -11.989535331726074
    10. '=None' → logprob: -12.739535331726074

Token 107: ' Pencil' (ID: 158301)
  Prédit: ' Pencil'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Pencil' → logprob: -0.008960096165537834
    2. 'P' → logprob: -5.008960247039795
    3. ' P' → logprob: -6.258960247039795
    4. ' ' → logprob: -9.008959770202637
    5. ' pencil' → logprob: -9.383959770202637
    6. ')' → logprob: -9.633959770202637
    7. '	P' → logprob: -10.508959770202637
    8. ',P' → logprob: -12.008959770202637
    9. '   ' → logprob: -12.383959770202637
    10. ' )' → logprob: -12.883959770202637

Token 108: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -3.7697225252486533e-06
    2. 'set' → logprob: -12.625003814697266
    3. 'et' → logprob: -16.250003814697266
    4. 'Sets' → logprob: -16.375003814697266
    5. ')' → logprob: -16.750003814697266
    6. '_set' → logprob: -17.000003814697266
    7. 'S' → logprob: -17.375003814697266
    8. '	Set' → logprob: -17.625003814697266
    9. ' Set' → logprob: -18.500003814697266
    10. '   ' → logprob: -18.875003814697266

Token 109: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0026238122954964638
    2. '):
' → logprob: -6.002624034881592
    3. ')' → logprob: -9.127623558044434
    4. ',' → logprob: -10.752623558044434
    5. '   ' → logprob: -11.627623558044434
    6. ' ):' → logprob: -12.377623558044434
    7. ':' → logprob: -12.627623558044434
    8. ' ' → logprob: -14.377623558044434
    9. '       ' → logprob: -14.752623558044434
    10. '):
' → logprob: -15.252623558044434

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00047940885997377336
    2. '        
' → logprob: -8.750479698181152
    3. '<|end|>' → logprob: -8.875479698181152
    4. '
' → logprob: -9.000479698181152
    5. '   ' → logprob: -10.750479698181152
    6. '      ' → logprob: -12.000479698181152
    7. '<|end|>' → logprob: -12.000479698181152
    8. 'self' → logprob: -12.125479698181152
    9. '```' → logprob: -12.500479698181152
    10. '    
' → logprob: -12.625479698181152

Token 111: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15016046166419983
    2. 'self' (adapté à ' self') → logprob: -2.150160551071167
    3. ' self' → logprob: -3.775160551071167
    4. '   ' → logprob: -10.775160789489746
    5. ' ' → logprob: -13.150160789489746
    6. '	self' → logprob: -13.150160789489746
    7. 'def' → logprob: -13.400160789489746
    8. '      ' → logprob: -13.525160789489746
    9. '        
' → logprob: -13.900160789489746
    10. '     ' → logprob: -14.025160789489746

Token 112: '.required' (ID: 42972)
  Prédit: '.required'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.required' → logprob: -0.1577024906873703
    2. '.' → logprob: -2.4077024459838867
    3. ' .' → logprob: -2.9077024459838867
    4. ' ' → logprob: -7.157702445983887
    5. '	required' → logprob: -9.157702445983887
    6. ' required' → logprob: -9.282702445983887
    7. 'required' → logprob: -9.282702445983887
    8. '.user' → logprob: -10.032702445983887
    9. '_required' → logprob: -10.157702445983887
    10. '   ' → logprob: -10.907702445983887

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0013424931094050407
    2. '=' → logprob: -6.626342296600342
    3. ' ' → logprob: -11.1263427734375
    4. '    ' → logprob: -13.8763427734375
    5. '        ' → logprob: -15.0013427734375
    6. '   ' → logprob: -16.0013427734375
    7. ' =
' → logprob: -16.2513427734375
    8. '<|end|>' → logprob: -16.5013427734375
    9. ',' → logprob: -16.6263427734375
    10. ' +=' → logprob: -17.0013427734375

Token 114: ' required' (ID: 3759)
  Prédit: ' required'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' required' → logprob: -0.47408607602119446
    2. 'required' → logprob: -0.9740860462188721
    3. '	required' → logprob: -11.849085807800293
    4. '(required' → logprob: -13.474085807800293
    5. 'require' → logprob: -15.974085807800293
    6. ' ' → logprob: -16.59908676147461
    7. '_required' → logprob: -16.84908676147461
    8. '.required' → logprob: -16.84908676147461
    9. 'requested' → logprob: -17.59908676147461
    10. '       ' → logprob: -17.72408676147461

Token 115: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001418326748535037
    2. '
' → logprob: -6.626418113708496
    3. '<|end|>' → logprob: -10.126418113708496
    4. '        
' → logprob: -10.626418113708496
    5. 'self' → logprob: -11.876418113708496
    6. ',' → logprob: -12.126418113708496
    7. '   ' → logprob: -12.501418113708496
    8. '    
' → logprob: -12.876418113708496
    9. ' 
' → logprob: -13.126418113708496
    10. ' ' → logprob: -13.501418113708496

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004164587706327438
    2. 'self' → logprob: -5.504164695739746
    3. ' self' → logprob: -9.379164695739746
    4. '   ' → logprob: -13.879164695739746
    5. '	self' → logprob: -15.004164695739746
    6. '
' → logprob: -15.504164695739746
    7. '	' → logprob: -16.00416374206543
    8. '        
' → logprob: -16.87916374206543
    9. '```' → logprob: -17.25416374206543
    10. ',' → logprob: -17.37916374206543

Token 117: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03158821165561676
    2. ' self' → logprob: -3.906588315963745
    3. '       ' → logprob: -4.531588077545166
    4. '   ' → logprob: -9.156588554382324
    5. 'def' → logprob: -10.156588554382324
    6. ' ' → logprob: -10.656588554382324
    7. '
' → logprob: -10.781588554382324
    8. '	self' → logprob: -11.531588554382324
    9. '     ' → logprob: -12.531588554382324
    10. '      ' → logprob: -12.531588554382324

Token 118: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.7941015958786011
    2. ' .' → logprob: -1.419101595878601
    3. '.required' → logprob: -1.794101595878601
    4. '.' → logprob: -2.2941017150878906
    5. ' =' → logprob: -4.419101715087891
    6. 'required' → logprob: -4.669101715087891
    7. '.quantity' → logprob: -5.294101715087891
    8. '.x' → logprob: -5.919101715087891
    9. '   ' → logprob: -6.669101715087891
    10. ' ' → logprob: -7.169101715087891

Token 119: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0002112886286340654
    2. '_' → logprob: -8.500211715698242
    3. '_y' → logprob: -11.875211715698242
    4. 'x' → logprob: -15.125211715698242
    5. 's' → logprob: -15.500211715698242
    6. '_a' → logprob: -16.250211715698242
    7. ' _' → logprob: -16.750211715698242
    8. '_
' → logprob: -17.000211715698242
    9. '_=' → logprob: -17.000211715698242
    10. '_s' → logprob: -17.125211715698242

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16072742640972137
    2. '=' → logprob: -1.9107273817062378
    3. ',' → logprob: -8.285727500915527
    4. '.' → logprob: -9.035727500915527
    5. ' ' → logprob: -9.410727500915527
    6. ' ,' → logprob: -10.910727500915527
    7. ' =
' → logprob: -11.410727500915527
    8. '    ' → logprob: -11.910727500915527
    9. ')' → logprob: -12.660727500915527
    10. '   ' → logprob: -12.785727500915527

Token 121: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.0699385479092598
    2. 'set' → logprob: -2.6949386596679688
    3. '_set' → logprob: -14.569938659667969
    4. ')set' → logprob: -14.819938659667969
    5. ' sets' → logprob: -14.944938659667969
    6. '(set' → logprob: -15.319938659667969
    7. '	set' → logprob: -15.319938659667969
    8. '=set' → logprob: -15.444938659667969
    9. 'x' → logprob: -16.06993865966797
    10. ' ' → logprob: -16.19493865966797

Token 122: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.020945776253938675
    2. '_y' → logprob: -3.8959457874298096
    3. '_' → logprob: -8.02094554901123
    4. '._' → logprob: -9.77094554901123
    5. '.' → logprob: -11.39594554901123
    6. 'x' → logprob: -13.39594554901123
    7. ' _' → logprob: -13.52094554901123
    8. '_set' → logprob: -14.14594554901123
    9. '_.' → logprob: -14.52094554901123
    10. '_p' → logprob: -15.02094554901123

Token 123: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00036168331280350685
    2. '
' → logprob: -8.000361442565918
    3. '   ' → logprob: -11.375361442565918
    4. 'self' → logprob: -11.875361442565918
    5. '        
' → logprob: -13.125361442565918
    6. '    
' → logprob: -13.375361442565918
    7. '<|end|>' → logprob: -13.875361442565918
    8. ' self' → logprob: -14.250361442565918
    9. '      ' → logprob: -14.375361442565918
    10. '           ' → logprob: -14.750361442565918

Token 124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012330879690125585
    2. 'self' → logprob: -6.751233100891113
    3. '
' → logprob: -10.376233100891113
    4. ' self' → logprob: -10.876233100891113
    5. '   ' → logprob: -11.501233100891113
    6. '	' → logprob: -14.001233100891113
    7. '	self' → logprob: -14.501233100891113
    8. '           ' → logprob: -15.376233100891113
    9. '      ' → logprob: -15.376233100891113
    10. '        
' → logprob: -15.626233100891113

Token 125: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.005426323506981134
    2. '       ' → logprob: -5.380426406860352
    3. ' self' → logprob: -7.130426406860352
    4. '
' → logprob: -12.505426406860352
    5. '   ' → logprob: -14.380426406860352
    6. '	self' → logprob: -14.380426406860352
    7. ' ' → logprob: -15.130426406860352
    8. '(self' → logprob: -17.38042640686035
    9. '        
' → logprob: -18.00542640686035
    10. '
' → logprob: -18.25542640686035

Token 126: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.08380359411239624
    2. '.' → logprob: -2.708803653717041
    3. 'set' → logprob: -4.958803653717041
    4. ' .' → logprob: -5.583803653717041
    5. '_set' → logprob: -6.708803653717041
    6. ' set' → logprob: -7.208803653717041
    7. ' ' → logprob: -8.333803176879883
    8. '_' → logprob: -8.958803176879883
    9. '   ' → logprob: -9.208803176879883
    10. ''s' → logprob: -9.583803176879883

Token 127: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0002787359117064625
    2. '_x' → logprob: -8.25027847290039
    3. '_' → logprob: -11.37527847290039
    4. 'y' → logprob: -12.87527847290039
    5. 'Y' → logprob: -13.75027847290039
    6. ' _' → logprob: -14.37527847290039
    7. '<|end|>' → logprob: -14.75027847290039
    8. '_
' → logprob: -15.75027847290039
    9. '_ylabel' → logprob: -16.12527847290039
    10. '\' → logprob: -16.31277847290039

Token 128: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28185006976127625
    2. ' =' → logprob: -1.4068500995635986
    3. '<|end|>' → logprob: -7.4068498611450195
    4. '.' → logprob: -10.53184986114502
    5. ' =
' → logprob: -10.90684986114502
    6. '=
' → logprob: -11.03184986114502
    7. ' ' → logprob: -11.65684986114502
    8. '<|end|>' → logprob: -11.78184986114502
    9. ')' → logprob: -12.03184986114502
    10. '=set' → logprob: -13.28184986114502

Token 129: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.28117239475250244
    2. 'set' → logprob: -1.4061723947525024
    3. '<|end|>' → logprob: -11.781172752380371
    4. ')set' → logprob: -12.906172752380371
    5. '=set' → logprob: -12.906172752380371
    6. ' sets' → logprob: -13.156172752380371
    7. ' ' → logprob: -13.406172752380371
    8. '	set' → logprob: -13.406172752380371
    9. '(set' → logprob: -13.781172752380371
    10. '_set' → logprob: -13.906172752380371

Token 130: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.001671015052124858
    2. '_x' → logprob: -6.501670837402344
    3. 'y' → logprob: -9.001670837402344
    4. 'Y' → logprob: -10.376670837402344
    5. '_' → logprob: -12.126670837402344
    6. ')' → logprob: -13.501670837402344
    7. 'required' → logprob: -14.251670837402344
    8. 'x' → logprob: -14.376670837402344
    9. '   ' → logprob: -14.501670837402344
    10. 'ing' → logprob: -14.751670837402344

Token 131: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05094654858112335
    2. '   ' → logprob: -3.0509464740753174
    3. '    
' → logprob: -6.9259467124938965
    4. '<|end|>' → logprob: -6.9259467124938965
    5. 'def' → logprob: -8.425946235656738
    6. '<|end|>' → logprob: -9.425946235656738
    7. ' def' → logprob: -10.550946235656738
    8. '

' → logprob: -10.675946235656738
    9. ' 
' → logprob: -10.925946235656738
    10. '  
' → logprob: -11.800946235656738

Token 132: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012811927124857903
    2. '   ' → logprob: -4.76281213760376
    3. 'def' → logprob: -6.26281213760376
    4. '    
' → logprob: -6.51281213760376
    5. ' 
' → logprob: -7.76281213760376
    6. '  
' → logprob: -9.012811660766602
    7. ' def' → logprob: -9.262811660766602
    8. '

' → logprob: -9.887811660766602
    9. '<|end|>' → logprob: -9.887811660766602
    10. '   
' → logprob: -10.637811660766602

Token 133: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0003464289184194058
    2. ' def' → logprob: -8.000346183776855
    3. '   ' → logprob: -12.000346183776855
    4. '
' → logprob: -12.625346183776855
    5. 'd' → logprob: -13.875346183776855
    6. 'de' → logprob: -14.875346183776855
    7. ' ' → logprob: -16.750347137451172
    8. '    
' → logprob: -16.750347137451172
    9. '	def' → logprob: -17.125347137451172
    10. 'from' → logprob: -17.375347137451172

Token 134: ' compute' (ID: 23864)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.03116712160408497
    2. 'min' → logprob: -3.6561670303344727
    3. ' total' → logprob: -6.406167030334473
    4. ' minimal' → logprob: -7.031167030334473
    5. ' best' → logprob: -7.281167030334473
    6. ' minimum' → logprob: -7.531167030334473
    7. ' calculate' → logprob: -8.406167030334473
    8. ' get' → logprob: -8.656167030334473
    9. ' def' → logprob: -9.031167030334473
    10. ' find' → logprob: -9.031167030334473

Token 135: '_min' (ID: 15950)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.7456154227256775
    2. '_min' → logprob: -1.4956154823303223
    3. '_total' → logprob: -1.6206154823303223
    4. '_' → logprob: -2.4956154823303223
    5. '_price' → logprob: -4.620615482330322
    6. '_best' → logprob: -5.245615482330322
    7. '_opt' → logprob: -5.870615482330322
    8. '_max' → logprob: -6.370615482330322
    9. '_purchase' → logprob: -7.745615482330322
    10. '(self' → logprob: -8.370615005493164

Token 136: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0022281676065176725
    2. '_' → logprob: -6.127228260040283
    3. ' _' → logprob: -10.627227783203125
    4. '_price' → logprob: -12.127227783203125
    5. '_total' → logprob: -13.002227783203125
    6. '_p' → logprob: -13.252227783203125
    7. '_purchase' → logprob: -13.877227783203125
    8. '_val' → logprob: -14.502227783203125
    9. '_for' → logprob: -14.627227783203125
    10. '_code' → logprob: -14.752227783203125

Token 137: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0054017845541238785
    2. '(' → logprob: -5.255401611328125
    3. '_for' → logprob: -9.005401611328125
    4. ' (' → logprob: -10.630401611328125
    5. 'self' → logprob: -12.005401611328125
    6. 'for' → logprob: -12.130401611328125
    7. '   ' → logprob: -12.380401611328125
    8. '_(' → logprob: -13.380401611328125
    9. '_' → logprob: -13.755401611328125
    10. '(s' → logprob: -14.005401611328125

Token 138: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04843098670244217
    2. '):' → logprob: -3.298430919647217
    3. 'self' → logprob: -5.423430919647217
    4. ' ,' → logprob: -5.798430919647217
    5. ')' → logprob: -6.423430919647217
    6. '):
' → logprob: -7.298430919647217
    7. '   ' → logprob: -8.173431396484375
    8. '       ' → logprob: -8.923431396484375
    9. ' ):' → logprob: -10.048431396484375
    10. ' self' → logprob: -10.798431396484375

Token 139: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.007972360588610172
    2. '(' → logprob: -4.882972240447998
    3. ':' → logprob: -8.882972717285156
    4. '       ' → logprob: -9.257972717285156
    5. ' (' → logprob: -10.132972717285156
    6. '(s' → logprob: -10.257972717285156
    7. 'self' → logprob: -10.632972717285156
    8. '   ' → logprob: -11.257972717285156
    9. '(
' → logprob: -11.382972717285156
    10. ' self' → logprob: -13.132972717285156

Token 140: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.08913248777389526
    2. 'int' → logprob: -2.46413254737854
    3. ' None' → logprob: -8.964132308959961
    4. '   ' → logprob: -10.089132308959961
    5. ' ' → logprob: -11.089132308959961
    6. '(int' → logprob: -12.589132308959961
    7. 'None' → logprob: -13.464132308959961
    8. '  ' → logprob: -14.464132308959961
    9. '	int' → logprob: -14.464132308959961
    10. '    ' → logprob: -14.714132308959961

Token 141: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0029330067336559296
    2. ':
' → logprob: -6.127933025360107
    3. '       ' → logprob: -7.502933025360107
    4. '(self' → logprob: -9.50293254852295
    5. '):' → logprob: -10.12793254852295
    6. '():' → logprob: -10.75293254852295
    7. '   ' → logprob: -11.12793254852295
    8. '(' → logprob: -11.12793254852295
    9. '<|end|>' → logprob: -12.00293254852295
    10. '):
' → logprob: -12.12793254852295

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001261845463886857
    2. '        ' → logprob: -10.000125885009766
    3. '        
' → logprob: -10.250125885009766
    4. ' 
' → logprob: -11.375125885009766
    5. '
' → logprob: -11.500125885009766
    6. '    ' → logprob: -11.625125885009766
    7. '      ' → logprob: -12.500125885009766
    8. 'n' → logprob: -12.750125885009766
    9. '   ' → logprob: -13.250125885009766
    10. '    
' → logprob: -14.375125885009766

Token 143: ' cost' (ID: 3097)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7870283722877502
    2. ' min' → logprob: -0.9120283722877502
    3. '       ' → logprob: -2.1620283126831055
    4. 'best' → logprob: -3.9120283126831055
    5. ' best' → logprob: -5.0370283126831055
    6. 'minimum' → logprob: -7.7870283126831055
    7. ' minimum' → logprob: -8.287028312683105
    8. 'max' → logprob: -8.787028312683105
    9. 'cost' (adapté à ' cost') → logprob: -9.037028312683105
    10. ' minimal' → logprob: -9.287028312683105

Token 144: '_x' (ID: 7054)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.45077672600746155
    2. '_x' → logprob: -1.5757766962051392
    3. '_' → logprob: -2.4507768154144287
    4. ' =' → logprob: -2.9507768154144287
    5. '_min' → logprob: -4.32577657699585
    6. 'x' → logprob: -6.32577657699585
    7. '=' → logprob: -6.95077657699585
    8. '_best' → logprob: -6.95077657699585
    9. '_for' → logprob: -8.200777053833008
    10. 'min' → logprob: -9.575777053833008

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012974804267287254
    2. '=' → logprob: -4.387974739074707
    3. 's' → logprob: -8.387974739074707
    4. '_' → logprob: -9.637974739074707
    5. '_for' → logprob: -9.637974739074707
    6. '_min' → logprob: -10.387974739074707
    7. '_total' → logprob: -11.012974739074707
    8. 'for' → logprob: -11.512974739074707
    9. ',' → logprob: -11.512974739074707
    10. '   ' → logprob: -11.637974739074707

Token 146: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6341213583946228
    2. 'self' → logprob: -0.7591213583946228
    3. '       ' → logprob: -6.509121417999268
    4. ' ' → logprob: -11.75912094116211
    5. '(self' → logprob: -12.13412094116211
    6. '	self' → logprob: -12.63412094116211
    7. '0' → logprob: -12.63412094116211
    8. '   ' → logprob: -12.88412094116211
    9. '           ' → logprob: -13.25912094116211
    10. '        ' → logprob: -13.75912094116211

Token 147: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.002060807542875409
    2. '.' → logprob: -6.377060890197754
    3. ' .' → logprob: -8.627060890197754
    4. '.required' → logprob: -9.877060890197754
    5. 'set' → logprob: -9.877060890197754
    6. '..' → logprob: -10.877060890197754
    7. 'required' → logprob: -11.752060890197754
    8. '   ' → logprob: -11.877060890197754
    9. '.min' → logprob: -12.127060890197754
    10. '`.' → logprob: -12.627060890197754

Token 148: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -6.869017852295656e-06
    2. 'x' → logprob: -12.250006675720215
    3. '_' → logprob: -13.375006675720215
    4. '_y' → logprob: -15.000006675720215
    5. '._' → logprob: -16.25000762939453
    6. '.' → logprob: -17.37500762939453
    7. '_.' → logprob: -17.62500762939453
    8. ' _' → logprob: -17.62500762939453
    9. '```' → logprob: -18.62500762939453
    10. '}_' → logprob: -19.75000762939453

Token 149: '.min' (ID: 8649)
  Prédit: '.min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.min' → logprob: -1.9862216504407115e-05
    2. '.' → logprob: -11.375020027160645
    3. ' .' → logprob: -12.625020027160645
    4. '.max' → logprob: -13.125020027160645
    5. 'min' → logprob: -13.625020027160645
    6. '.price' → logprob: -13.750020027160645
    7. '.minimum' → logprob: -15.000020027160645
    8. '.m' → logprob: -15.750020027160645
    9. ' min' → logprob: -16.375019073486328
    10. '	min' → logprob: -16.875019073486328

Token 150: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -3.7697225252486533e-06
    2. '_' → logprob: -13.000003814697266
    3. 'cost' → logprob: -13.875003814697266
    4. '_co' → logprob: -16.125003814697266
    5. '_COST' → logprob: -16.250003814697266
    6. 'Cost' → logprob: -16.500003814697266
    7. '_for' → logprob: -16.500003814697266
    8. '_code' → logprob: -17.250003814697266
    9. ' _' → logprob: -18.000003814697266
    10. '_price' → logprob: -18.500003814697266

Token 151: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -14.625000953674316
    3. ' _' → logprob: -18.0
    4. '_f' → logprob: -18.125
    5. 'for' → logprob: -18.625
    6. '_FOR' → logprob: -19.0
    7. '_to' → logprob: -19.875
    8. 'For' → logprob: -20.375
    9. '_For' → logprob: -20.375
    10. '_cost' → logprob: -20.875

Token 152: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005241821985691786
    2. '(' → logprob: -5.255241870880127
    3. '(required' → logprob: -12.380241394042969
    4. '(
' → logprob: -13.255241394042969
    5. '<|end|>' → logprob: -14.130241394042969
    6. 'self' → logprob: -14.505241394042969
    7. ' (' → logprob: -14.505241394042969
    8. '(

' → logprob: -16.38024139404297
    9. '('' → logprob: -17.00524139404297
    10. ' self' → logprob: -17.13024139404297

Token 153: '.required' (ID: 42972)
  Prédit: '.required'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.required' → logprob: -0.0033118657302111387
    2. 'required' → logprob: -5.753311634063721
    3. '.' → logprob: -9.253312110900879
    4. ' .' → logprob: -10.753312110900879
    5. '	required' → logprob: -11.628312110900879
    6. ' required' → logprob: -12.503312110900879
    7. '   ' → logprob: -13.628312110900879
    8. ' ' → logprob: -14.253312110900879
    9. '(required' → logprob: -14.253312110900879
    10. ').' → logprob: -14.503312110900879

Token 154: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026994308456778526
    2. ')
' → logprob: -3.651994228363037
    3. ' )' → logprob: -7.526994228363037
    4. ' )
' → logprob: -9.401994705200195
    5. ')
' → logprob: -10.026994705200195
    6. ')

' → logprob: -10.901994705200195
    7. '       ' → logprob: -11.651994705200195
    8. '   ' → logprob: -15.026994705200195
    9. ' )
' → logprob: -15.651994705200195
    10. '),' → logprob: -15.776994705200195

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06664597243070602
    2. 'cost' → logprob: -3.691645860671997
    3. ' cost' → logprob: -3.941645860671997
    4. '
' → logprob: -4.191646099090576
    5. '        
' → logprob: -5.566646099090576
    6. '   ' → logprob: -7.941646099090576
    7. ',' → logprob: -8.941645622253418
    8. '    
' → logprob: -9.316645622253418
    9. ')' → logprob: -9.566645622253418
    10. ' 
' → logprob: -9.691645622253418

Token 156: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.005991128273308277
    2. ' cost' → logprob: -5.255990982055664
    3. '       ' → logprob: -7.255990982055664
    4. '   ' → logprob: -10.005990982055664
    5. 'return' → logprob: -13.505990982055664
    6. '
' → logprob: -13.630990982055664
    7. '_cost' → logprob: -14.255990982055664
    8. ' ' → logprob: -14.505990982055664
    9. 'Cost' → logprob: -14.630990982055664
    10. '```' → logprob: -15.005990982055664

Token 157: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.00524798734113574
    2. '_' → logprob: -5.255248069763184
    3. '_x' → logprob: -11.755248069763184
    4. ' _' → logprob: -12.505248069763184
    5. '_yaml' → logprob: -14.880248069763184
    6. '_
' → logprob: -15.005248069763184
    7. '_you' → logprob: -15.255248069763184
    8. 'y' → logprob: -15.380248069763184
    9. ' ' → logprob: -15.505248069763184
    10. '=_' → logprob: -16.130247116088867

Token 158: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005235291086137295
    2. '=' → logprob: -5.255235195159912
    3. ' ' → logprob: -13.50523567199707
    4. ' ' → logprob: -16.88023567199707
    5. ' =
' → logprob: -17.38023567199707
    6. ' =)' → logprob: -19.00523567199707
    7. ')' → logprob: -19.25523567199707
    8. '.' → logprob: -20.13023567199707
    9. '_' → logprob: -20.25523567199707
    10. '	' → logprob: -20.38023567199707

Token 159: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.31326499581336975
    2. 'self' → logprob: -1.3132649660110474
    3. '       ' → logprob: -13.188264846801758
    4. '(self' → logprob: -14.313264846801758
    5. '	self' → logprob: -14.688264846801758
    6. ' ' → logprob: -16.063264846801758
    7. '        ' → logprob: -16.313264846801758
    8. '=self' → logprob: -16.563264846801758
    9. ' ' → logprob: -17.188264846801758
    10. '[self' → logprob: -17.438264846801758

Token 160: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.000540166103746742
    2. '.' → logprob: -7.625540256500244
    3. ' .' → logprob: -9.875539779663086
    4. 'set' → logprob: -14.500539779663086
    5. ' ' → logprob: -16.250539779663086
    6. '   ' → logprob: -17.000539779663086
    7. ' set' → logprob: -17.125539779663086
    8. '.min' → logprob: -17.375539779663086
    9. '..' → logprob: -17.750539779663086
    10. '	set' → logprob: -18.000539779663086

Token 161: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.00018518301658332348
    2. '_x' → logprob: -8.875185012817383
    3. '._' → logprob: -10.125185012817383
    4. 'set' → logprob: -13.125185012817383
    5. '.set' → logprob: -13.125185012817383
    6. '_.' → logprob: -14.875185012817383
    7. '```' → logprob: -15.625185012817383
    8. '.' → logprob: -15.750185012817383
    9. '   ' → logprob: -15.875185012817383
    10. 'y' → logprob: -16.625185012817383

Token 162: '.min' (ID: 8649)
  Prédit: '.min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.min' → logprob: -1.6286106983898208e-05
    2. '.' → logprob: -11.375016212463379
    3. ' .' → logprob: -12.375016212463379
    4. '.max' → logprob: -15.625016212463379
    5. 'min' → logprob: -15.875016212463379
    6. '.m' → logprob: -16.375017166137695
    7. ' min' → logprob: -16.875017166137695
    8. '.minimum' → logprob: -18.000017166137695
    9. '	min' → logprob: -18.000017166137695
    10. '.Min' → logprob: -19.250017166137695

Token 163: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0001805377542041242
    2. 'cost' → logprob: -8.6251802444458
    3. '-cost' → logprob: -15.2501802444458
    4. ' cost' → logprob: -15.5001802444458
    5. '_for' → logprob: -15.7501802444458
    6. '_' → logprob: -15.7501802444458
    7. 'Cost' → logprob: -16.125181198120117
    8. '_COST' → logprob: -16.125181198120117
    9. '_code' → logprob: -18.750181198120117
    10. '_co' → logprob: -18.875181198120117

Token 164: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -5.383526149671525e-05
    2. 'For' → logprob: -10.375053405761719
    3. '_' → logprob: -11.250053405761719
    4. 'for' → logprob: -12.125053405761719
    5. '_f' → logprob: -12.875053405761719
    6. '_FOR' → logprob: -14.875053405761719
    7. ' _' → logprob: -15.375053405761719
    8. ' for' → logprob: -15.875053405761719
    9. '_cost' → logprob: -15.875053405761719
    10. '_to' → logprob: -16.37505340576172

Token 165: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0017094480572268367
    2. '(' → logprob: -6.376709461212158
    3. 'self' → logprob: -12.501708984375
    4. ' (' → logprob: -13.501708984375
    5. '(
' → logprob: -13.751708984375
    6. '(s' → logprob: -14.376708984375
    7. '(sel' → logprob: -15.626708984375
    8. '(the' → logprob: -16.001708984375
    9. '(this' → logprob: -16.501708984375
    10. '(

' → logprob: -17.751708984375

Token 166: '.required' (ID: 42972)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11283976584672928
    2. ' self' → logprob: -2.987839698791504
    3. '.required' → logprob: -3.112839698791504
    4. 'required' → logprob: -4.737839698791504
    5. ')' → logprob: -6.862839698791504
    6. ' required' → logprob: -7.237839698791504
    7. '.self' → logprob: -7.237839698791504
    8. '   ' → logprob: -8.737839698791504
    9. ' ' → logprob: -8.862839698791504
    10. ' .' → logprob: -9.737839698791504

Token 167: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010188785381615162
    2. ')
' → logprob: -4.635188579559326
    3. '       ' → logprob: -7.760188579559326
    4. ')
' → logprob: -12.635189056396484
    5. ' )' → logprob: -13.385189056396484
    6. '
' → logprob: -15.135189056396484
    7. ')return' → logprob: -15.260189056396484
    8. ')

' → logprob: -15.510189056396484
    9. ' )
' → logprob: -16.010189056396484
    10. '),' → logprob: -16.385189056396484

Token 168: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004286146257072687
    2. '
' → logprob: -6.004286289215088
    3. 'min' → logprob: -7.379286289215088
    4. 'cost' → logprob: -8.37928581237793
    5. '        
' → logprob: -8.75428581237793
    6. 'result' → logprob: -8.87928581237793
    7. ' cost' → logprob: -8.87928581237793
    8. ' min' → logprob: -8.87928581237793
    9. 'minimum' → logprob: -9.25428581237793
    10. '```' → logprob: -9.25428581237793

Token 169: ' return' (ID: 622)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.06187289208173752
    2. ' min' → logprob: -3.186872959136963
    3. '       ' → logprob: -4.561872959136963
    4. 'return' (adapté à ' return') → logprob: -5.186872959136963
    5. 'cost' → logprob: -6.436872959136963
    6. ' return' → logprob: -8.061872482299805
    7. 'result' → logprob: -8.686872482299805
    8. 'best' → logprob: -8.686872482299805
    9. '
' → logprob: -8.936872482299805
    10. ' cost' → logprob: -9.186872482299805

Token 170: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.2519305646419525
    2. 'min' → logprob: -1.501930594444275
    3. '	min' → logprob: -13.501930236816406
    4. '   ' → logprob: -16.376930236816406
    5. '(min' → logprob: -17.001930236816406
    6. ' minimum' → logprob: -17.876930236816406
    7. '[min' → logprob: -18.001930236816406
    8. 'minimum' → logprob: -18.501930236816406
    9. '_min' → logprob: -18.876930236816406
    10. 'cost' → logprob: -19.126930236816406

Token 171: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.16023530066013336
    2. '(' → logprob: -1.9102352857589722
    3. '(
' → logprob: -11.535235404968262
    4. '(

' → logprob: -14.535235404968262
    5. ' (' → logprob: -15.035235404968262
    6. '((' → logprob: -15.660235404968262
    7. '(price' → logprob: -16.035234451293945
    8. '(c' → logprob: -16.160234451293945
    9. '(co' → logprob: -16.660234451293945
    10. 'cost' → logprob: -16.785234451293945

Token 172: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -3.5597102396423e-05
    2. '_y' → logprob: -10.375035285949707
    3. '_' → logprob: -12.875035285949707
    4. '_cost' → logprob: -13.875035285949707
    5. ' _' → logprob: -15.000035285949707
    6. ')_' → logprob: -15.125035285949707
    7. 'x' → logprob: -16.375036239624023
    8. '_)' → logprob: -16.375036239624023
    9. ')' → logprob: -17.125036239624023
    10. '_s' → logprob: -17.750036239624023

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048599183559417725
    2. ' ,' → logprob: -3.0485992431640625
    3. ',c' → logprob: -11.423599243164062
    4. ',
' → logprob: -14.923599243164062
    5. ' ,
' → logprob: -15.673599243164062
    6. 'cost' → logprob: -16.798599243164062
    7. '_,' → logprob: -17.048599243164062
    8. ' cost' → logprob: -17.298599243164062
    9. ',

' → logprob: -17.548599243164062
    10. ' ,

' → logprob: -17.548599243164062

Token 174: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.001702675479464233
    2. 'cost' → logprob: -6.376702785491943
    3. '(cost' → logprob: -16.1267032623291
    4. ' ' → logprob: -16.7517032623291
    5. '_cost' → logprob: -17.1267032623291
    6. ' costo' → logprob: -17.5017032623291
    7. ' costs' → logprob: -17.7517032623291
    8. 'Cost' → logprob: -17.7517032623291
    9. ' coste' → logprob: -17.8767032623291
    10. ' kost' → logprob: -18.2517032623291

Token 175: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -2.2246291337069124e-05
    2. 'y' → logprob: -12.000021934509277
    3. '_cost' → logprob: -12.000021934509277
    4. '_' → logprob: -12.500021934509277
    5. ')_' → logprob: -12.750021934509277
    6. '_x' → logprob: -13.750021934509277
    7. ')' → logprob: -14.500021934509277
    8. ' _' → logprob: -14.875021934509277
    9. '   ' → logprob: -15.250021934509277
    10. '._' → logprob: -15.625021934509277

Token 176: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011045700375689194
    2. ' )' → logprob: -9.375110626220703
    3. ')
' → logprob: -10.750110626220703
    4. '       ' → logprob: -13.625110626220703
    5. '<|end|>' → logprob: -13.750110626220703
    6. ',' → logprob: -13.875110626220703
    7. ')return' → logprob: -15.375110626220703
    8. '   ' → logprob: -15.750110626220703
    9. '))' → logprob: -16.125110626220703
    10. ')}' → logprob: -16.875110626220703

Token 177: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: ' Input' (ID: 10090)
  Prédit: ' P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' P' → logprob: -0.3218121826648712
    2. ' Pencil' → logprob: -1.6968121528625488
    3. ' Test' → logprob: -3.946812152862549
    4. 'P' → logprob: -4.196812152862549
    5. ' Solution' → logprob: -4.946812152862549
    6. ' Bundle' → logprob: -5.196812152862549
    7. ' Mixed' → logprob: -6.071812152862549
    8. ' Pen' → logprob: -6.071812152862549
    9. ' Notebook' → logprob: -6.196812152862549
    10. ' Calculator' → logprob: -6.196812152862549

Token 179: 'Parser' (ID: 9231)
  Prédit: 'Reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.4643592834472656
    2. 'Handler' → logprob: -1.5893592834472656
    3. 'Data' → logprob: -2.4643592834472656
    4. 'Parser' → logprob: -2.8393592834472656
    5. 'Processor' → logprob: -4.214359283447266
    6. ':' → logprob: -5.214359283447266
    7. 'Output' → logprob: -6.964359283447266
    8. 'Manager' → logprob: -7.589359283447266
    9. 'Provider' → logprob: -7.589359283447266
    10. ':
' → logprob: -7.839359283447266

Token 180: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000354769523255527
    2. ':
' → logprob: -8.000354766845703
    3. '():' → logprob: -12.625354766845703
    4. '<|end|>' → logprob: -12.625354766845703
    5. ' :' → logprob: -12.875354766845703
    6. '(' → logprob: -13.125354766845703
    7. '):' → logprob: -13.125354766845703
    8. ':def' → logprob: -13.250354766845703
    9. '(object' → logprob: -13.500354766845703
    10. ':**' → logprob: -14.000354766845703

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021253814920783043
    2. ' def' → logprob: -3.896253824234009
    3. 'def' → logprob: -7.27125358581543
    4. '```' → logprob: -12.14625358581543
    5. '    ' → logprob: -12.89625358581543
    6. '    
' → logprob: -13.89625358581543
    7. ' ' → logprob: -13.89625358581543
    8. '	def' → logprob: -13.89625358581543
    9. ' class' → logprob: -14.02125358581543
    10. 'class' → logprob: -14.02125358581543

Token 182: ' @' (ID: 759)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.27135729789733887
    2. 'def' → logprob: -1.5213572978973389
    3. '   ' → logprob: -4.021357536315918
    4. ' @' → logprob: -7.271357536315918
    5. '@' (adapté à ' @') → logprob: -7.396357536315918
    6. '```' → logprob: -13.271357536315918
    7. 'import' → logprob: -14.021357536315918
    8. '	def' → logprob: -14.771357536315918
    9. '
' → logprob: -16.2713565826416
    10. ' ' → logprob: -16.3963565826416

Token 183: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.0006801460403949022
    2. 'static' → logprob: -8.000679969787598
    3. 'classmethod' → logprob: -8.000679969787598
    4. 'st' → logprob: -12.375679969787598
    5. 'sta' → logprob: -13.250679969787598
    6. 'dat' → logprob: -13.500679969787598
    7. 'stat' → logprob: -13.500679969787598
    8. ' static' → logprob: -14.500679969787598
    9. 's' → logprob: -16.250680923461914
    10. 'property' → logprob: -17.125680923461914

Token 184: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09799063950777054
    2. '   ' → logprob: -2.8479907512664795
    3. ' def' → logprob: -3.4729907512664795
    4. '
' → logprob: -5.4729905128479
    5. '	def' → logprob: -9.972990989685059
    6. '\' → logprob: -10.347990989685059
    7. '(' → logprob: -10.597990989685059
    8. '(def' → logprob: -11.222990989685059
    9. '    
' → logprob: -11.472990989685059
    10. ' ' → logprob: -12.097990989685059

Token 185: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02414039708673954
    2. ' def' → logprob: -3.7741403579711914
    3. '   ' → logprob: -7.024140357971191
    4. '
' → logprob: -12.524140357971191
    5. ' ' → logprob: -14.899140357971191
    6. '	def' → logprob: -15.274140357971191
    7. '  ' → logprob: -16.149141311645508
    8. '\' → logprob: -17.149141311645508
    9. ':def' → logprob: -17.899141311645508
    10. '    
' → logprob: -18.024141311645508

Token 186: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0024756586644798517
    2. ' def' → logprob: -6.002475738525391
    3. '   ' → logprob: -19.00247573852539
    4. '	def' → logprob: -19.37747573852539
    5. 'de' → logprob: -20.25247573852539
    6. '
' → logprob: -20.75247573852539
    7. 'import' → logprob: -20.75247573852539
    8. 'd' → logprob: -21.37747573852539
    9. 'from' → logprob: -21.50247573852539
    10. ' ' → logprob: -21.75247573852539

Token 187: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.3978230059146881
    2. ' parse' → logprob: -1.1478229761123657
    3. 'read' → logprob: -4.897822856903076
    4. ' read' → logprob: -6.147822856903076
    5. 'from' → logprob: -6.897822856903076
    6. ' from' → logprob: -8.522823333740234
    7. 'def' → logprob: -10.272823333740234
    8. ' def' → logprob: -10.647823333740234
    9. ' readline' → logprob: -11.522823333740234
    10. ' input' → logprob: -12.397823333740234

Token 188: '()' (ID: 416)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.030079638585448265
    2. '(line' → logprob: -4.0300798416137695
    3. '()' → logprob: -5.7800798416137695
    4. '(lines' → logprob: -5.7800798416137695
    5. '_input' → logprob: -6.2800798416137695
    6. 'input' → logprob: -6.7800798416137695
    7. '(data' → logprob: -7.1550798416137695
    8. '_line' → logprob: -7.5300798416137695
    9. '(' → logprob: -8.15507984161377
    10. '(raw' → logprob: -8.78007984161377

Token 189: ' ->' (ID: 2747)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.006522222422063351
    2. '()' → logprob: -5.756522178649902
    3. ':' → logprob: -6.631522178649902
    4. '(' → logprob: -7.006522178649902
    5. '():
' → logprob: -7.506522178649902
    6. '(input' → logprob: -7.756522178649902
    7. '(line' → logprob: -10.131522178649902
    8. '()->' → logprob: -11.006522178649902
    9. '(file' → logprob: -11.131522178649902
    10. '(stdin' → logprob: -11.756522178649902

Token 190: ' P' (ID: 398)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.12274743616580963
    2. 'P' → logprob: -2.4977474212646484
    3. '(tuple' → logprob: -4.622747421264648
    4. ' tuple' → logprob: -4.747747421264648
    5. 'list' → logprob: -4.747747421264648
    6. '"P' → logprob: -6.122747421264648
    7. 'Tuple' → logprob: -6.622747421264648
    8. 'dict' → logprob: -7.747747421264648
    9. 'int' → logprob: -7.747747421264648
    10. ''' → logprob: -7.872747421264648

Token 191: 'encils' (ID: 176266)
  Prédit: 'encils'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'encils' → logprob: -9.269565634895116e-05
    2. 'encil' → logprob: -9.375092506408691
    3. 'e' → logprob: -12.625092506408691
    4. 'enc' → logprob: -14.125092506408691
    5. '[]' → logprob: -14.375092506408691
    6. ' pencils' → logprob: -14.875092506408691
    7. '\x' → logprob: -15.375092506408691
    8. '   ' → logprob: -15.500092506408691
    9. '```' → logprob: -15.500092506408691
    10. 'enci' → logprob: -15.625092506408691

Token 192: 'Purchase' (ID: 38522)
  Prédit: 'Purchase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Purchase' → logprob: -0.12712642550468445
    2. 'Set' → logprob: -2.127126455307007
    3. 'set' → logprob: -9.252126693725586
    4. 'et' → logprob: -10.502126693725586
    5. 'urchase' → logprob: -10.627126693725586
    6. 'P' → logprob: -11.502126693725586
    7. ' Purchase' → logprob: -11.627126693725586
    8. 'purchase' → logprob: -11.877126693725586
    9. '_purchase' → logprob: -11.877126693725586
    10. 'Purch' → logprob: -12.127126693725586

Token 193: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.04217188060283661
    2. ':' → logprob: -3.4171719551086426
    3. '():
' → logprob: -4.792171955108643
    4. '(' → logprob: -9.292171478271484
    5. ':
' → logprob: -9.542171478271484
    6. '):' → logprob: -11.542171478271484
    7. '()' → logprob: -11.917171478271484
    8. '(":' → logprob: -12.917171478271484
    9. '():
' → logprob: -13.167171478271484
    10. '(input' → logprob: -13.292171478271484

Token 194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009949211031198502
    2. 'import' → logprob: -5.509949207305908
    3. 'line' → logprob: -5.759949207305908
    4. 'input' → logprob: -6.259949207305908
    5. ' line' → logprob: -8.259949684143066
    6. 'user' → logprob: -8.509949684143066
    7. 'data' → logprob: -9.134949684143066
    8. 'text' → logprob: -9.759949684143066
    9. 'raw' → logprob: -9.759949684143066
    10. ' import' → logprob: -10.884949684143066

Token 195: ' #' (ID: 1069)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'required' → logprob: -0.27893128991127014
    2. 'n' → logprob: -2.2789313793182373
    3. ' n' → logprob: -2.5289313793182373
    4. ' required' → logprob: -3.2789313793182373
    5. 'quantity' → logprob: -5.028931140899658
    6. 'import' → logprob: -5.653931140899658
    7. '   ' → logprob: -6.028931140899658
    8. 'raw' → logprob: -6.403931140899658
    9. 'req' → logprob: -6.403931140899658
    10. 'lines' → logprob: -6.778931140899658

Token 196: ' lecture' (ID: 31993)
  Prédit: ' required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' required' → logprob: -1.0844857692718506
    2. ' n' → logprob: -1.8344857692718506
    3. 'required' → logprob: -1.8344857692718506
    4. ' quantity' → logprob: -2.0844857692718506
    5. ' import' → logprob: -2.9594857692718506
    6. 'quantity' → logprob: -3.3344857692718506
    7. ' lines' → logprob: -3.7094857692718506
    8. 'import' → logprob: -3.9594857692718506
    9. ' input' → logprob: -4.08448600769043
    10. 'n' → logprob: -4.20948600769043

Token 197: ' et' (ID: 859)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.23642852902412415
    2. '       ' → logprob: -1.6114284992218018
    3. 'n' → logprob: -5.611428737640381
    4. 'import' → logprob: -6.361428737640381
    5. 'des' → logprob: -6.611428737640381
    6. ' des' → logprob: -6.986428737640381
    7. ' n' → logprob: -7.486428737640381
    8. 'line' → logprob: -8.111428260803223
    9. '(n' → logprob: -8.111428260803223
    10. '   ' → logprob: -8.236428260803223

Token 198: ' extraction' (ID: 48166)
  Prédit: ' parsing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parsing' → logprob: -1.4201210737228394
    2. ' split' → logprob: -1.5451210737228394
    3. ' traitement' → logprob: -2.170121192932129
    4. 'split' → logprob: -2.170121192932129
    5. ' parse' → logprob: -2.545121192932129
    6. ' lecture' → logprob: -3.545121192932129
    7. 'import' → logprob: -3.670121192932129
    8. 'parse' → logprob: -3.795121192932129
    9. 'spl' → logprob: -3.920121192932129
    10. ' import' → logprob: -3.920121192932129

Token 199: ' des' (ID: 731)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.9115198850631714
    2. '       ' → logprob: -1.0365198850631714
    3. 'line' → logprob: -1.5365198850631714
    4. ' ligne' → logprob: -4.786520004272461
    5. 'input' → logprob: -5.286520004272461
    6. 'ligne' → logprob: -5.911520004272461
    7. 'data' → logprob: -6.161520004272461
    8. ' des' → logprob: -6.536520004272461
    9. ' input' → logprob: -6.911520004272461
    10. '   ' → logprob: -6.911520004272461

Token 200: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5588182210922241
    2. 'quant' → logprob: -1.3088182210922241
    3. 'l' → logprob: -2.6838183403015137
    4. 'd' → logprob: -4.308818340301514
    5. ' valeurs' → logprob: -4.433818340301514
    6. ' quant' → logprob: -4.683818340301514
    7. ' données' → logprob: -4.933818340301514
    8. 'values' → logprob: -4.933818340301514
    9. 'data' → logprob: -5.183818340301514
    10. 'nombre' → logprob: -5.558818340301514

Token 201: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003116991138085723
    2. ' line' → logprob: -6.378117084503174
    3. ' lines' → logprob: -7.378117084503174
    4. ' input' → logprob: -8.378116607666016
    5. 'line' → logprob: -8.753116607666016
    6. 'input' → logprob: -8.878116607666016
    7. 'import' → logprob: -9.628116607666016
    8. '        
' → logprob: -10.378116607666016
    9. '(line' → logprob: -10.878116607666016
    10. '(lines' → logprob: -10.878116607666016

Token 202: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011915372451767325
    2. ' line' → logprob: -7.75119161605835
    3. 'input' → logprob: -8.001191139221191
    4. 'line' → logprob: -8.501191139221191
    5. ' input' → logprob: -9.501191139221191
    6. ' lines' → logprob: -9.876191139221191
    7. 'n' → logprob: -10.876191139221191
    8. '        
' → logprob: -11.376191139221191
    9. 'import' → logprob: -11.501191139221191
    10. 'inputs' → logprob: -11.751191139221191

Token 203: ' import' (ID: 1588)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3256584405899048
    2. 'line' → logprob: -1.4506584405899048
    3. ' n' → logprob: -1.7006584405899048
    4. 'required' → logprob: -2.2006583213806152
    5. 'x' → logprob: -2.9506583213806152
    6. ' line' → logprob: -3.2006583213806152
    7. 'a' → logprob: -3.8256583213806152
    8. 'raw' → logprob: -4.200658321380615
    9. ' required' → logprob: -4.200658321380615
    10. 'r' → logprob: -4.450658321380615

Token 204: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.16023580729961395
    2. ' sys' → logprob: -1.9102357625961304
    3. '=sys' → logprob: -11.535235404968262
    4. '	sys' → logprob: -14.285235404968262
    5. 're' → logprob: -14.785235404968262
    6. '_sys' → logprob: -15.410235404968262
    7. 's' → logprob: -15.785235404968262
    8. 'built' → logprob: -15.785235404968262
    9. 'io' → logprob: -16.160236358642578
    10. '(sys' → logprob: -16.160236358642578

Token 205: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0082640890032053
    2. ' line' → logprob: -6.508264064788818
    3. '        
' → logprob: -6.508264064788818
    4. ' lines' → logprob: -6.508264064788818
    5. 'line' → logprob: -7.008264064788818
    6. 'input' → logprob: -7.383264064788818
    7. 'n' → logprob: -7.508264064788818
    8. ' input' → logprob: -7.758264064788818
    9. ' readline' → logprob: -8.133264541625977
    10. 'data' → logprob: -8.633264541625977

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004053463693708181
    2. ' line' → logprob: -7.004053592681885
    3. ' input' → logprob: -7.129053592681885
    4. 'input' → logprob: -7.379053592681885
    5. ' lines' → logprob: -7.379053592681885
    6. '        
' → logprob: -7.629053592681885
    7. 'line' → logprob: -7.879053592681885
    8. 'data' → logprob: -10.254053115844727
    9. 'n' → logprob: -10.379053115844727
    10. ' readline' → logprob: -10.629053115844727

Token 207: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' (adapté à ' data') → logprob: -0.3744730055332184
    2. 'line' → logprob: -1.999472975730896
    3. ' data' → logprob: -2.6244730949401855
    4. ' line' → logprob: -3.3744730949401855
    5. 'input' → logprob: -3.8744730949401855
    6. ' lines' → logprob: -4.1244730949401855
    7. 'x' → logprob: -4.3744730949401855
    8. 'lines' → logprob: -4.4994730949401855
    9. ' input' → logprob: -5.9994730949401855
    10. '       ' → logprob: -6.6244730949401855

Token 208: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.348484069108963
    2. ' =' → logprob: -1.2234840393066406
    3. '   ' → logprob: -10.59848403930664
    4. '_' → logprob: -13.34848403930664
    5. 'line' → logprob: -13.34848403930664
    6. '=line' → logprob: -13.34848403930664
    7. '_line' → logprob: -13.59848403930664
    8. '=sys' → logprob: -13.72348403930664
    9. '.readline' → logprob: -13.84848403930664
    10. '[' → logprob: -14.22348403930664

Token 209: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.2519310414791107
    2. ' sys' → logprob: -1.501931071281433
    3. '	sys' → logprob: -14.376931190490723
    4. 'list' → logprob: -14.876931190490723
    5. '(sys' → logprob: -14.876931190490723
    6. ' list' → logprob: -15.251931190490723
    7. '=sys' → logprob: -15.251931190490723
    8. '[' → logprob: -16.251930236816406
    9. ' [' → logprob: -17.126930236816406
    10. 'input' → logprob: -17.251930236816406

Token 210: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0001025895617203787
    2. '.' → logprob: -9.250102996826172
    3. '.argv' → logprob: -12.500102996826172
    4. '.stdout' → logprob: -13.500102996826172
    5. '.std' → logprob: -14.125102996826172
    6. ' .' → logprob: -14.625102996826172
    7. 'stdin' → logprob: -16.125102996826172
    8. '.st' → logprob: -17.375102996826172
    9. ' stdin' → logprob: -17.625102996826172
    10. '.readline' → logprob: -17.750102996826172

Token 211: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0025742328725755215
    2. '.read' → logprob: -6.252574443817139
    3. '.readlines' → logprob: -7.877574443817139
    4. '.' → logprob: -8.37757396697998
    5. 'read' → logprob: -10.25257396697998
    6. ' readline' → logprob: -14.50257396697998
    7. ' .' → logprob: -15.50257396697998
    8. '.buffer' → logprob: -15.62757396697998
    9. 'r' → logprob: -16.502574920654297
    10. '_read' → logprob: -17.127574920654297

Token 212: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0024764856789261103
    2. '()' → logprob: -6.002476692199707
    3. '(' → logprob: -14.877476692199707
    4. ' ().' → logprob: -15.502476692199707
    5. '()
' → logprob: -16.12747573852539
    6. '()).' → logprob: -16.50247573852539
    7. '()

' → logprob: -16.87747573852539
    8. ' ()' → logprob: -18.62747573852539
    9. '()`' → logprob: -18.62747573852539
    10. '（）' → logprob: -18.87747573852539

Token 213: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.011059019714593887
    2. 'split' → logprob: -4.511058807373047
    3. 'decode' → logprob: -11.886058807373047
    4. 'rstrip' → logprob: -12.761058807373047
    5. 'read' → logprob: -13.636058807373047
    6. 'replace' → logprob: -15.511058807373047
    7. ' strip' → logprob: -17.261058807373047
    8. '(strip' → logprob: -18.511058807373047
    9. '```' → logprob: -19.136058807373047
    10. ' split' → logprob: -19.261058807373047

Token 214: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0110534792765975
    2. '()' → logprob: -4.511053562164307
    3. '(' → logprob: -12.511053085327148
    4. '()
' → logprob: -13.636053085327148
    5. ' ().' → logprob: -15.511053085327148
    6. '('' → logprob: -15.636053085327148
    7. '().'' → logprob: -16.26105308532715
    8. '()

' → logprob: -16.38605308532715
    9. 'split' → logprob: -16.38605308532715
    10. ' ()' → logprob: -17.26105308532715

Token 215: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -17.0
    3. 'replace' → logprob: -17.125
    4. '(split' → logprob: -17.75
    5. 'spl' → logprob: -18.875
    6. '```' → logprob: -21.0
    7. 'rstrip' → logprob: -21.375
    8. '.split' → logprob: -21.875
    9. 's' → logprob: -22.125
    10. 'strip' → logprob: -22.125

Token 216: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0016724453307688236
    2. '(' → logprob: -6.751672267913818
    3. '('' → logprob: -7.626672267913818
    4. '()
' → logprob: -12.376672744750977
    5. '('\' → logprob: -12.626672744750977
    6. ' ()' → logprob: -12.876672744750977
    7. '()\' → logprob: -13.251672744750977
    8. '()[' → logprob: -14.626672744750977
    9. '("("' → logprob: -14.626672744750977
    10. '("' → logprob: -14.626672744750977

Token 217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08629930019378662
    2. 'required' → logprob: -2.961299419403076
    3. ' required' → logprob: -4.336299419403076
    4. '        
' → logprob: -4.711299419403076
    5. '
' → logprob: -4.961299419403076
    6. '   ' → logprob: -7.711299419403076
    7. 'return' → logprob: -8.086298942565918
    8. ' 
' → logprob: -8.336298942565918
    9. '    
' → logprob: -8.711298942565918
    10. '        ' → logprob: -9.461298942565918

Token 218: ' N' (ID: 478)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'required' → logprob: -0.01096965279430151
    2. ' required' → logprob: -4.885969638824463
    3. 'req' → logprob: -7.135969638824463
    4. '       ' → logprob: -7.135969638824463
    5. 'n' → logprob: -7.510969638824463
    6. 'R' → logprob: -8.135970115661621
    7. 'quantity' → logprob: -8.135970115661621
    8. 'r' → logprob: -9.010970115661621
    9. 'x' → logprob: -9.010970115661621
    10. '   ' → logprob: -9.385970115661621

Token 219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3892971873283386
    2. ' =' → logprob: -1.1392972469329834
    3. ' ,' → logprob: -6.264297008514404
    4. '=' → logprob: -8.139297485351562
    5. '_required' → logprob: -8.889297485351562
    6. '   ' → logprob: -10.639297485351562
    7. '1' → logprob: -10.889297485351562
    8. 'required' → logprob: -11.264297485351562
    9. ' ' → logprob: -12.139297485351562
    10. '[' → logprob: -12.889297485351562

Token 220: ' A' (ID: 355)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.11927565187215805
    2. 'Q' → logprob: -3.1192755699157715
    3. 'A' → logprob: -3.3692755699157715
    4. 'x' → logprob: -4.3692755699157715
    5. ' X' → logprob: -4.3692755699157715
    6. 'a' → logprob: -5.7442755699157715
    7. ' A' → logprob: -6.9942755699157715
    8. ' Q' → logprob: -7.4942755699157715
    9. 'K' → logprob: -7.6192755699157715
    10. 'q' → logprob: -7.9942755699157715

Token 221: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029856672044843435
    2. ' =' → logprob: -6.37798547744751
    3. ' ,' → logprob: -7.37798547744751
    4. '=' → logprob: -7.37798547744751
    5. ',Q' → logprob: -12.002985954284668
    6. '<|end|>' → logprob: -12.127985954284668
    7. ' ' → logprob: -12.502985954284668
    8. '1' → logprob: -12.752985954284668
    9. 'quantity' → logprob: -13.002985954284668
    10. 'Q' → logprob: -13.252985954284668

Token 222: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.04869183152914047
    2. ' B' → logprob: -3.173691749572754
    3. 'a' → logprob: -6.298691749572754
    4. 'X' → logprob: -6.923691749572754
    5. 'P' → logprob: -7.048691749572754
    6. 'N' → logprob: -7.923691749572754
    7. 'A' → logprob: -7.923691749572754
    8. ' ' → logprob: -8.923691749572754
    9. 'M' → logprob: -9.173691749572754
    10. 'PA' → logprob: -9.173691749572754

Token 223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18419381976127625
    2. ' =' → logprob: -1.8091938495635986
    3. '=' → logprob: -5.4341936111450195
    4. ' ,' → logprob: -9.55919361114502
    5. ' ' → logprob: -14.05919361114502
    6. '<|end|>' → logprob: -14.05919361114502
    7. '   ' → logprob: -14.18419361114502
    8. '=int' → logprob: -14.55919361114502
    9. '  ' → logprob: -15.80919361114502
    10. ',int' → logprob: -15.93419361114502

Token 224: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.024367524310946465
    2. ' C' → logprob: -4.024367332458496
    3. 'X' → logprob: -5.149367332458496
    4. ' X' → logprob: -9.024367332458496
    5. ' ' → logprob: -9.524367332458496
    6. 'P' → logprob: -10.149367332458496
    7. 'Y' → logprob: -10.149367332458496
    8. 'M' → logprob: -10.524367332458496
    9. 'Cx' → logprob: -11.211867332458496
    10. 'N' → logprob: -11.336867332458496

Token 225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041398804751224816
    2. ' ,' → logprob: -8.62541389465332
    3. ' =' → logprob: -9.00041389465332
    4. '=' → logprob: -9.37541389465332
    5. ',D' → logprob: -10.62541389465332
    6. 'D' → logprob: -14.00041389465332
    7. ' ' → logprob: -15.12541389465332
    8. '   ' → logprob: -15.25041389465332
    9. ' D' → logprob: -15.50041389465332
    10. '  ' → logprob: -16.12541389465332

Token 226: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.005947521887719631
    2. ' D' → logprob: -5.130947589874268
    3. ' ' → logprob: -11.25594711303711
    4. '   ' → logprob: -13.13094711303711
    5. '  ' → logprob: -13.50594711303711
    6. '<|end|>' → logprob: -14.13094711303711
    7. '
' → logprob: -14.63094711303711
    8. 'and' → logprob: -15.13094711303711
    9. '  
' → logprob: -15.50594711303711
    10. ' 
' → logprob: -15.63094711303711

Token 227: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02070479467511177
    2. '=' → logprob: -3.895704746246338
    3. ',' → logprob: -8.770705223083496
    4. ' ' → logprob: -12.020705223083496
    5. ' ,' → logprob: -14.145705223083496
    6. ' =
' → logprob: -15.395705223083496
    7. ')' → logprob: -15.520705223083496
    8. '   ' → logprob: -15.645705223083496
    9. '    ' → logprob: -15.770705223083496
    10. '=int' → logprob: -16.14570426940918

Token 228: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1616353988647461
    2. 'map' → logprob: -1.911635398864746
    3. 'int' → logprob: -7.161635398864746
    4. ' int' → logprob: -7.411635398864746
    5. ' data' → logprob: -11.786635398864746
    6. '[int' → logprob: -12.036635398864746
    7. '(map' → logprob: -12.161635398864746
    8. ' list' → logprob: -12.786635398864746
    9. ' [' → logprob: -12.911635398864746
    10. '   ' → logprob: -13.286635398864746

Token 229: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000570667558349669
    2. 'int' → logprob: -7.500570774078369
    3. '(' → logprob: -11.000570297241211
    4. ' (' → logprob: -14.500570297241211
    5. '```' → logprob: -16.00057029724121
    6. '
' → logprob: -16.37557029724121
    7. '   ' → logprob: -16.62557029724121
    8. '(
' → logprob: -16.75057029724121
    9. ' int' → logprob: -16.87557029724121
    10. '[int' → logprob: -17.12557029724121

Token 230: ',' (ID: 11)
  Prédit: '(data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.016433151438832283
    2. ',data' → logprob: -4.516433238983154
    3. 'data' → logprob: -5.766433238983154
    4. ',' → logprob: -6.266433238983154
    5. ' data' → logprob: -9.141432762145996
    6. ' (' → logprob: -9.266432762145996
    7. ')data' → logprob: -9.266432762145996
    8. ')' → logprob: -10.891432762145996
    9. '(' → logprob: -11.016432762145996
    10. ')(' → logprob: -12.641432762145996

Token 231: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.02324652671813965
    2. ' data' → logprob: -3.7732465267181396
    3. ')' → logprob: -15.273246765136719
    4. ')data' → logprob: -15.273246765136719
    5. ' ' → logprob: -15.398246765136719
    6. '
' → logprob: -16.14824676513672
    7. '(data' → logprob: -16.14824676513672
    8. '   ' → logprob: -16.64824676513672
    9. '[data' → logprob: -16.89824676513672
    10. '	data' → logprob: -17.39824676513672

Token 232: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.2855416066013277e-05
    2. ' )' → logprob: -10.625032424926758
    3. ')
' → logprob: -12.375032424926758
    4. '[' → logprob: -13.000032424926758
    5. ')`' → logprob: -14.750032424926758
    6. '   ' → logprob: -15.000032424926758
    7. '[:' → logprob: -15.375032424926758
    8. '[])' → logprob: -15.375032424926758
    9. '))' → logprob: -15.625032424926758
    10. '())' → logprob: -16.000032424926758

Token 233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014893806539475918
    2. '
' → logprob: -4.889894008636475
    3. '        
' → logprob: -5.139894008636475
    4. 'return' → logprob: -7.014894008636475
    5. ' return' → logprob: -8.264893531799316
    6. '<|end|>' → logprob: -9.139893531799316
    7. '   ' → logprob: -10.389893531799316
    8. '    
' → logprob: -10.639893531799316
    9. 'x' → logprob: -11.389893531799316
    10. ' set' → logprob: -11.639893531799316

Token 234: ' set' (ID: 920)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6134514808654785
    2. ' set' → logprob: -1.2384514808654785
    3. 'set' (adapté à ' set') → logprob: -1.8634514808654785
    4. 'x' → logprob: -5.1134514808654785
    5. ' x' → logprob: -5.8634514808654785
    6. 'p' → logprob: -6.1134514808654785
    7. ' return' → logprob: -7.2384514808654785
    8. '   ' → logprob: -7.7384514808654785
    9. 'return' → logprob: -7.8634514808654785
    10. ' p' → logprob: -7.9884514808654785

Token 235: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -4.024604277219623e-05
    2. 'x' → logprob: -10.250040054321289
    3. '_' → logprob: -12.875040054321289
    4. 'X' → logprob: -13.250040054321289
    5. '_set' → logprob: -15.375040054321289
    6. '_a' → logprob: -16.00004005432129
    7. 'set' → logprob: -16.00004005432129
    8. '_y' → logprob: -18.25004005432129
    9. '_
' → logprob: -18.75004005432129
    10. '_X' → logprob: -18.75004005432129

Token 236: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931490898132324
    2. ' =' → logprob: -0.6931490898132324
    3. ',' → logprob: -13.69314956665039
    4. ' ' → logprob: -15.19314956665039
    5. '=
' → logprob: -15.56814956665039
    6. ' =
' → logprob: -15.81814956665039
    7. '=P' → logprob: -16.19314956665039
    8. '=

' → logprob: -16.94314956665039
    9. '```' → logprob: -18.06814956665039
    10. 'P' → logprob: -18.44314956665039

Token 237: ' Pencil' (ID: 158301)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.07061926275491714
    2. ' Pencil' → logprob: -2.6956193447113037
    3. ' P' → logprob: -7.320619106292725
    4. '	P' → logprob: -11.445619583129883
    5. ' ' → logprob: -12.320619583129883
    6. '   ' → logprob: -12.570619583129883
    7. '  ' → logprob: -13.945619583129883
    8. ' pencil' → logprob: -15.570619583129883
    9. '\P' → logprob: -15.570619583129883
    10. '_P' → logprob: -15.695619583129883

Token 238: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -1.2664456789934775e-06
    2. 'set' → logprob: -13.625000953674316
    3. ' Set' → logprob: -19.000001907348633
    4. '_set' → logprob: -19.625001907348633
    5. 'Sets' → logprob: -19.625001907348633
    6. 'S' → logprob: -20.375001907348633
    7. '_Set' → logprob: -21.000001907348633
    8. '	Set' → logprob: -21.125001907348633
    9. ' set' → logprob: -21.250001907348633
    10. 'P' → logprob: -22.125001907348633

Token 239: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.014639629051089287
    2. '(B' → logprob: -4.264639854431152
    3. '(' → logprob: -8.014639854431152
    4. '(C' → logprob: -8.889639854431152
    5. '(
' → logprob: -12.639639854431152
    6. '((' → logprob: -13.389639854431152
    7. ' (' → logprob: -13.514639854431152
    8. 'A' → logprob: -14.514639854431152
    9. '(quantity' → logprob: -14.889639854431152
    10. '   ' → logprob: -15.514639854431152

Token 240: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001426346570951864
    2. ' ,' → logprob: -9.000143051147461
    3. ',B' → logprob: -11.750143051147461
    4. ',C' → logprob: -12.000143051147461
    5. ')' → logprob: -13.250143051147461
    6. '<|end|>' → logprob: -14.000143051147461
    7. ',
' → logprob: -14.375143051147461
    8. 'B' → logprob: -14.500143051147461
    9. 'C' → logprob: -14.875143051147461
    10. '   ' → logprob: -15.250143051147461

Token 241: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.1608598828315735
    2. 'C' → logprob: -1.9108598232269287
    3. ' B' → logprob: -7.660860061645508
    4. ' C' → logprob: -8.910860061645508
    5. '       ' → logprob: -11.785860061645508
    6. ' ' → logprob: -11.910860061645508
    7. '   ' → logprob: -12.160860061645508
    8. ')' → logprob: -12.285860061645508
    9. '    ' → logprob: -13.035860061645508
    10. '        ' → logprob: -13.910860061645508

Token 242: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2519412040710449
    2. ')
' → logprob: -1.501941204071045
    3. ')
' → logprob: -11.876941680908203
    4. ')

' → logprob: -12.501941680908203
    5. '       ' → logprob: -14.626941680908203
    6. ' )' → logprob: -14.876941680908203
    7. ' )
' → logprob: -15.001941680908203
    8. '   ' → logprob: -16.126941680908203
    9. ')set' → logprob: -16.251941680908203
    10. '),' → logprob: -16.751941680908203

Token 243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14836211502552032
    2. 'set' → logprob: -2.648362159729004
    3. ' set' → logprob: -2.773362159729004
    4. '
' → logprob: -5.523362159729004
    5. '        
' → logprob: -8.523362159729004
    6. ',' → logprob: -9.023362159729004
    7. ',set' → logprob: -9.773362159729004
    8. ')set' → logprob: -9.898362159729004
    9. '=set' → logprob: -10.148362159729004
    10. '<|end|>' → logprob: -10.148362159729004

Token 244: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' (adapté à ' set') → logprob: -0.00021390743495430797
    2. ' set' → logprob: -8.500213623046875
    3. '       ' → logprob: -11.500213623046875
    4. '   ' → logprob: -15.875213623046875
    5. '
' → logprob: -16.625213623046875
    6. '	set' → logprob: -17.875213623046875
    7. 'sets' → logprob: -18.625213623046875
    8. ' ' → logprob: -18.625213623046875
    9. '        
' → logprob: -18.625213623046875
    10. '        ' → logprob: -19.250213623046875

Token 245: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.001536166062578559
    2. '_' → logprob: -6.5015363693237305
    3. '_x' → logprob: -10.37653636932373
    4. ' _' → logprob: -14.12653636932373
    5. '_s' → logprob: -15.12653636932373
    6. 'y' → logprob: -15.62653636932373
    7. '_Y' → logprob: -15.62653636932373
    8. '_yaml' → logprob: -15.75153636932373
    9. '_c' → logprob: -15.87653636932373
    10. '_z' → logprob: -16.126535415649414

Token 246: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759400725364685
    2. '=' → logprob: -0.8259400725364685
    3. ' ' → logprob: -15.200940132141113
    4. '=P' → logprob: -16.075939178466797
    5. '(' → logprob: -16.200939178466797
    6. ')' → logprob: -17.075939178466797
    7. '=
' → logprob: -17.450939178466797
    8. '<|end|>' → logprob: -17.450939178466797
    9. ',' → logprob: -17.700939178466797
    10. ' =
' → logprob: -18.075939178466797

Token 247: ' Pencil' (ID: 158301)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.029822243377566338
    2. ' Pencil' → logprob: -3.52982234954834
    3. '   ' → logprob: -9.90482234954834
    4. ' ' → logprob: -11.90482234954834
    5. ' pencil' → logprob: -12.27982234954834
    6. ' P' → logprob: -13.02982234954834
    7. '	P' → logprob: -13.27982234954834
    8. '  ' → logprob: -13.40482234954834
    9. '(P' → logprob: -13.52982234954834
    10. '-pencil' → logprob: -14.15482234954834

Token 248: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: 0.0
    2. 'set' → logprob: -18.75
    3. '_set' → logprob: -20.625
    4. '	Set' → logprob: -22.5
    5. ' Set' → logprob: -23.0
    6. 'Sets' → logprob: -23.125
    7. 'S' → logprob: -23.25
    8. ' set' → logprob: -23.75
    9. '_SET' → logprob: -23.75
    10. '_Set' → logprob: -23.875

Token 249: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.75
    3. '(
' → logprob: -16.375
    4. '((' → logprob: -18.25
    5. ' (' → logprob: -18.75
    6. '
' → logprob: -18.75
    7. 'C' → logprob: -19.25
    8. '(D' → logprob: -19.75
    9. '   ' → logprob: -20.125
    10. ')' → logprob: -20.75

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2233183042553719e-05
    2. ' ,' → logprob: -11.500012397766113
    3. ',D' → logprob: -13.500012397766113
    4. ',
' → logprob: -14.625012397766113
    5. ')' → logprob: -16.875011444091797
    6. '),' → logprob: -17.750011444091797
    7. '‌,' → logprob: -17.750011444091797
    8. ' ' → logprob: -17.875011444091797
    9. '   ' → logprob: -18.125011444091797
    10. 'D' → logprob: -18.875011444091797

Token 251: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0031777136027812958
    2. ' D' → logprob: -5.753177642822266
    3. ' ' → logprob: -17.878177642822266
    4. '   ' → logprob: -19.128177642822266
    5. '	D' → logprob: -19.378177642822266
    6. '       ' → logprob: -19.628177642822266
    7. '%D' → logprob: -20.128177642822266
    8. '[D' → logprob: -20.628177642822266
    9. '
' → logprob: -20.878177642822266
    10. 'd' → logprob: -20.878177642822266

Token 252: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002477081725373864
    2. ')
' → logprob: -6.002477169036865
    3. ' )' → logprob: -13.877476692199707
    4. ')
' → logprob: -15.127476692199707
    5. '       ' → logprob: -16.377477645874023
    6. ')

' → logprob: -16.752477645874023
    7. '   ' → logprob: -17.502477645874023
    8. ' )
' → logprob: -17.627477645874023
    9. ')return' → logprob: -19.502477645874023
    10. '))' → logprob: -19.877477645874023

Token 253: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001602579141035676
    2. 'return' → logprob: -6.751602649688721
    3. ' return' → logprob: -7.751602649688721
    4. '<|end|>' → logprob: -14.126602172851562
    5. '   ' → logprob: -14.376602172851562
    6. '	return' → logprob: -14.501602172851562
    7. '        
' → logprob: -15.376602172851562
    8. '      ' → logprob: -16.876602172851562
    9. '
' → logprob: -16.876602172851562
    10. '```' → logprob: -17.001602172851562

Token 254: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -7.982165698194876e-05
    2. '       ' → logprob: -9.750080108642578
    3. ' return' → logprob: -10.750080108642578
    4. '	return' → logprob: -20.000080108642578
    5. '   ' → logprob: -20.250080108642578
    6. '        
' → logprob: -20.375080108642578
    7. '```' → logprob: -20.500080108642578
    8. '
' → logprob: -20.875080108642578
    9. '{return' → logprob: -22.000080108642578
    10. 'eturn' → logprob: -23.000080108642578

Token 255: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.16022443771362305
    2. ' P' → logprob: -1.910224437713623
    3. '	P' → logprob: -15.660224914550781
    4. '   ' → logprob: -16.78522491455078
    5. '\P' → logprob: -16.91022491455078
    6. '_P' → logprob: -17.03522491455078
    7. ' ' → logprob: -17.41022491455078
    8. ' ' → logprob: -18.03522491455078
    9. '  ' → logprob: -19.16022491455078
    10. 'p' → logprob: -19.16022491455078

Token 256: 'encils' (ID: 176266)
  Prédit: 'encils'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'encils' → logprob: -0.00023917861108202487
    2. 'c' → logprob: -8.375239372253418
    3. 'enc' → logprob: -13.125239372253418
    4. 'nc' → logprob: -13.250239372253418
    5. 'P' → logprob: -13.625239372253418
    6. 'C' → logprob: -14.000239372253418
    7. 'n' → logprob: -14.125239372253418
    8. 'cls' → logprob: -14.125239372253418
    9. 'e' → logprob: -15.000239372253418
    10. ' pencils' → logprob: -15.375239372253418

Token 257: 'Purchase' (ID: 38522)
  Prédit: 'Purchase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Purchase' → logprob: -0.0006658526253886521
    2. 'P' → logprob: -7.375665664672852
    3. 'Purch' → logprob: -10.250665664672852
    4. 'urchase' → logprob: -13.125665664672852
    5. ' Purchase' → logprob: -14.375665664672852
    6. 'purchase' → logprob: -14.500665664672852
    7. '_purchase' → logprob: -15.000665664672852
    8. 's' → logprob: -15.750665664672852
    9. 'Purchased' → logprob: -16.12566566467285
    10. 'p' → logprob: -16.12566566467285

Token 258: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0003386806638445705
    2. '(' → logprob: -8.125338554382324
    3. 'N' → logprob: -10.250338554382324
    4. '(
' → logprob: -12.000338554382324
    5. ' (' → logprob: -14.625338554382324
    6. '((' → logprob: -15.750338554382324
    7. '(required' → logprob: -15.750338554382324
    8. '(n' → logprob: -15.875338554382324
    9. '   ' → logprob: -16.75033950805664
    10. '```' → logprob: -17.12533950805664

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016790216614026576
    2. ',set' → logprob: -9.125167846679688
    3. ' ,' → logprob: -9.750167846679688
    4. 'set' → logprob: -15.125167846679688
    5. ',
' → logprob: -15.500167846679688
    6. '‌,' → logprob: -17.000167846679688
    7. '(set' → logprob: -17.375167846679688
    8. ')' → logprob: -17.500167846679688
    9. '',' → logprob: -18.000167846679688
    10. '),' → logprob: -18.250167846679688

Token 260: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.10020720958709717
    2. ' set' → logprob: -2.3502073287963867
    3. ')set' → logprob: -14.850207328796387
    4. '(set' → logprob: -17.72520637512207
    5. ' ' → logprob: -17.85020637512207
    6. '   ' → logprob: -17.97520637512207
    7. '	set' → logprob: -18.10020637512207
    8. 'sets' → logprob: -18.10020637512207
    9. '       ' → logprob: -18.22520637512207
    10. ' sets' → logprob: -18.97520637512207

Token 261: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -2.339278580620885e-06
    2. 'set' → logprob: -13.375001907348633
    3. 'x' → logprob: -14.375001907348633
    4. '_y' → logprob: -16.250001907348633
    5. '_set' → logprob: -17.750001907348633
    6. '_' → logprob: -18.750001907348633
    7. 'et' → logprob: -20.250001907348633
    8. '_xt' → logprob: -22.375001907348633
    9. '__' → logprob: -22.875001907348633
    10. '_z' → logprob: -22.875001907348633

Token 262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7848862373502925e-05
    2. ',set' → logprob: -11.125027656555176
    3. ' ,' → logprob: -11.375027656555176
    4. ',
' → logprob: -13.625027656555176
    5. ')' → logprob: -16.125028610229492
    6. ',

' → logprob: -16.375028610229492
    7. '‌,' → logprob: -16.625028610229492
    8. '   ' → logprob: -17.125028610229492
    9. ',y' → logprob: -17.750028610229492
    10. 'set' → logprob: -18.125028610229492

Token 263: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.04858771339058876
    2. ' set' → logprob: -3.0485877990722656
    3. ')set' → logprob: -15.173587799072266
    4. '	set' → logprob: -17.298587799072266
    5. '(set' → logprob: -17.548587799072266
    6. ' ' → logprob: -18.423587799072266
    7. '       ' → logprob: -18.673587799072266
    8. '
' → logprob: -18.798587799072266
    9. '=set' → logprob: -18.798587799072266
    10. ')' → logprob: -19.673587799072266

Token 264: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0005263420753180981
    2. 'y' → logprob: -7.625526428222656
    3. '_x' → logprob: -10.375526428222656
    4. '_' → logprob: -12.625526428222656
    5. ')' → logprob: -13.000526428222656
    6. ',' → logprob: -14.500526428222656
    7. 'x' → logprob: -14.750526428222656
    8. ')_' → logprob: -16.000526428222656
    9. '_)' → logprob: -16.125526428222656
    10. 'Y' → logprob: -16.250526428222656

Token 265: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.375000953674316
    3. ' )' → logprob: -15.375000953674316
    4. '))' → logprob: -17.5
    5. '   ' → logprob: -19.0
    6. '())' → logprob: -20.0
    7. ')

' → logprob: -20.25
    8. '()' → logprob: -20.375
    9. ')}' → logprob: -20.5
    10. ')`' → logprob: -20.5

Token 266: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0722714364528656
    2. 'def' → logprob: -2.6972713470458984
    3. 'purchase' → logprob: -6.197271347045898
    4. 'p' → logprob: -9.447271347045898
    5. ' if' → logprob: -9.697271347045898
    6. '#' → logprob: -10.072271347045898
    7. 'print' → logprob: -10.197271347045898
    8. 'result' → logprob: -10.447271347045898
    9. '```' → logprob: -11.197271347045898
    10. '<|end|>' → logprob: -11.572271347045898

Token 267: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5759420394897461
    2. ' main' → logprob: -0.8259420394897461
    3. ' solve' → logprob: -13.450942039489746
    4. 'solve' → logprob: -13.825942039489746
    5. '	main' → logprob: -17.075942993164062
    6. ' run' → logprob: -17.700942993164062
    7. ' solution' → logprob: -17.700942993164062
    8. 'run' → logprob: -17.950942993164062
    9. 'def' → logprob: -18.575942993164062
    10. '_main' → logprob: -18.825942993164062

Token 268: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.6286106983898208e-05
    2. '():
' → logprob: -11.625016212463379
    3. ' ():' → logprob: -12.125016212463379
    4. '()' → logprob: -13.625016212463379
    5. '(' → logprob: -15.000016212463379
    6. '()>' → logprob: -16.000017166137695
    7. '():
' → logprob: -16.500017166137695
    8. ':' → logprob: -17.250017166137695
    9. '()">' → logprob: -17.625017166137695
    10. '():

' → logprob: -17.750017166137695

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008496518130414188
    2. 'p' → logprob: -8.125849723815918
    3. 'purchase' → logprob: -8.250849723815918
    4. ' purchase' → logprob: -8.875849723815918
    5. 'pp' → logprob: -9.125849723815918
    6. ' p' → logprob: -10.375849723815918
    7. '   ' → logprob: -12.125849723815918
    8. ' pp' → logprob: -12.875849723815918
    9. 'import' → logprob: -13.125849723815918
    10. 'input' → logprob: -14.625849723815918

Token 270: ' purchase' (ID: 7314)
  Prédit: 'purchase'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'purchase' (adapté à ' purchase') → logprob: -0.029907844960689545
    2. '   ' → logprob: -4.404907703399658
    3. 'pp' → logprob: -4.404907703399658
    4. ' purchase' → logprob: -5.654907703399658
    5. 'p' → logprob: -6.654907703399658
    6. 'import' → logprob: -9.154908180236816
    7. 'order' → logprob: -10.654908180236816
    8. ' pp' → logprob: -11.154908180236816
    9. 'request' → logprob: -11.279908180236816
    10. ' ' → logprob: -11.279908180236816

Token 271: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014167038723826408
    2. '=' → logprob: -4.264166831970215
    3. ' ' → logprob: -13.139166831970215
    4. '  ' → logprob: -14.764166831970215
    5. ')' → logprob: -15.014166831970215
    6. '   ' → logprob: -15.264166831970215
    7. '.' → logprob: -16.13916778564453
    8. '_' → logprob: -16.26416778564453
    9. 'purchase' → logprob: -16.38916778564453
    10. ' ' → logprob: -16.51416778564453

Token 272: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.0009114635176956654
    2. ' Input' → logprob: -7.000911235809326
    3. '	Input' → logprob: -18.750911712646484
    4. '<Input' → logprob: -21.250911712646484
    5. '_Input' → logprob: -22.000911712646484
    6. '   ' → logprob: -22.125911712646484
    7. '\Input' → logprob: -22.500911712646484
    8. '(Input' → logprob: -22.500911712646484
    9. '.Input' → logprob: -24.250911712646484
    10. '_input' → logprob: -24.375911712646484

Token 273: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -1.9361264946837764e-07
    2. 'parser' → logprob: -15.875
    3. 'Parse' → logprob: -16.875
    4. '_parser' → logprob: -18.25
    5. 'Parsed' → logprob: -19.375
    6. '-parser' → logprob: -19.5
    7. 'P' → logprob: -19.5
    8. 'Parsing' → logprob: -19.625
    9. 'Par' → logprob: -20.25
    10. '.Parser' → logprob: -20.5

Token 274: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -5.88418151892256e-05
    2. '.' → logprob: -9.750059127807617
    3. ' .' → logprob: -15.000059127807617
    4. '   ' → logprob: -16.000059127807617
    5. '().' → logprob: -17.250059127807617
    6. '=parse' → logprob: -18.250059127807617
    7. '.decode' → logprob: -18.625059127807617
    8. '  ' → logprob: -19.250059127807617
    9. '.Parse' → logprob: -19.500059127807617
    10. '```' → logprob: -19.875059127807617

Token 275: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00523612555116415
    2. '()
' → logprob: -5.2552361488342285
    3. '()

' → logprob: -13.88023567199707
    4. '()
' → logprob: -14.00523567199707
    5. ' ()' → logprob: -15.00523567199707
    6. '()`' → logprob: -16.13023567199707
    7. '(' → logprob: -17.63023567199707
    8. '()"' → logprob: -17.63023567199707
    9. '().' → logprob: -18.25523567199707
    10. '())' → logprob: -18.38023567199707

Token 276: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002157518407329917
    2. 'print' → logprob: -6.252157688140869
    3. ' print' → logprob: -9.127157211303711
    4. 'result' → logprob: -9.627157211303711
    5. 'cost' → logprob: -10.627157211303711
    6. ' cost' → logprob: -10.877157211303711
    7. ' result' → logprob: -11.627157211303711
    8. '
' → logprob: -13.377157211303711
    9. '```' → logprob: -15.377157211303711
    10. 'total' → logprob: -15.502157211303711

Token 277: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01181846670806408
    2. 'cost' → logprob: -4.6368184089660645
    3. ' print' → logprob: -7.2618184089660645
    4. 'min' → logprob: -7.3868184089660645
    5. 'result' (adapté à ' result') → logprob: -7.5118184089660645
    6. ' cost' → logprob: -9.261818885803223
    7. '   ' → logprob: -9.386818885803223
    8. 'total' → logprob: -11.886818885803223
    9. ' min' → logprob: -13.386818885803223
    10. 'price' → logprob: -13.511818885803223

Token 278: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004084808751940727
    2. '=' → logprob: -5.504084587097168
    3. '.' → logprob: -12.879084587097168
    4. ' ' → logprob: -13.254084587097168
    5. '   ' → logprob: -14.004084587097168
    6. ' ' → logprob: -15.129084587097168
    7. '  ' → logprob: -15.254084587097168
    8. '    ' → logprob: -15.254084587097168
    9. ' =
' → logprob: -15.254084587097168
    10. '_' → logprob: -15.879084587097168

Token 279: ' purchase' (ID: 7314)
  Prédit: 'purchase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'purchase' → logprob: -0.16022564470767975
    2. ' purchase' → logprob: -1.9102256298065186
    3. '   ' → logprob: -13.660225868225098
    4. '.purchase' → logprob: -16.53522491455078
    5. '_purchase' → logprob: -16.66022491455078
    6. 'p' → logprob: -17.03522491455078
    7. 'Purchase' → logprob: -17.41022491455078
    8. ' ' → logprob: -19.16022491455078
    9. 'urchase' → logprob: -19.53522491455078
    10. '
' → logprob: -20.28522491455078

Token 280: '.compute' (ID: 60156)
  Prédit: '.compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compute' → logprob: -0.00022201328829396516
    2. '.' → logprob: -8.625222206115723
    3. 'compute' → logprob: -10.875222206115723
    4. ' .' → logprob: -11.000222206115723
    5. '.calculate' → logprob: -12.750222206115723
    6. '   ' → logprob: -13.000222206115723
    7. '.purchase' → logprob: -14.000222206115723
    8. '
' → logprob: -15.625222206115723
    9. '_compute' → logprob: -16.250221252441406
    10. ' compute' → logprob: -16.625221252441406

Token 281: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -1.9361264946837764e-07
    2. 'min' → logprob: -16.375
    3. '_max' → logprob: -16.375
    4. '_' → logprob: -19.25
    5. ' _' → logprob: -19.5
    6. '_cost' → logprob: -19.75
    7. '```' → logprob: -20.0
    8. '_m' → logprob: -20.5
    9. '_MIN' → logprob: -21.125
    10. '(min' → logprob: -21.375

Token 282: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -2.45848218582978e-06
    2. 'cost' → logprob: -13.50000286102295
    3. '_' → logprob: -14.25000286102295
    4. ' _' → logprob: -16.250001907348633
    5. '_co' → logprob: -16.375001907348633
    6. '_COST' → logprob: -17.000001907348633
    7. '_result' → logprob: -17.500001907348633
    8. 'Cost' → logprob: -17.625001907348633
    9. ' cost' → logprob: -18.625001907348633
    10. '(_' → logprob: -18.625001907348633

Token 283: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25196021795272827
    2. '()
' → logprob: -1.501960277557373
    3. '()
' → logprob: -10.501959800720215
    4. '()`' → logprob: -13.251959800720215
    5. '()

' → logprob: -13.876959800720215
    6. ' ()' → logprob: -15.001959800720215
    7. '())' → logprob: -15.626959800720215
    8. '()\' → logprob: -15.876959800720215
    9. '()"' → logprob: -16.37696075439453
    10. '_for' → logprob: -16.75196075439453

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018151231110095978
    2. 'print' → logprob: -4.01815128326416
    3. ' print' → logprob: -13.64315128326416
    4. '```' → logprob: -15.89315128326416
    5. '
' → logprob: -17.393150329589844
    6. '    
' → logprob: -17.893150329589844
    7. '	print' → logprob: -17.893150329589844
    8. '   ' → logprob: -20.768150329589844
    9. '    ' → logprob: -21.018150329589844
    10. '       ' → logprob: -21.143150329589844

Token 285: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -15.75
    3. ' print' → logprob: -17.0
    4. '```' → logprob: -20.0
    5. '	print' → logprob: -24.75
    6. '#print' → logprob: -26.75
    7. '
' → logprob: -27.0
    8. '``' → logprob: -27.0
    9. 'printf' → logprob: -27.5
    10. '    
' → logprob: -28.0

Token 286: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.02324652671813965
    2. '(' → logprob: -3.7732465267181396
    3. '(f' → logprob: -14.523246765136719
    4. '(
' → logprob: -15.648246765136719
    5. '()' → logprob: -15.898246765136719
    6. 'result' → logprob: -16.52324676513672
    7. '(res' → logprob: -17.02324676513672
    8. ' (' → logprob: -17.27324676513672
    9. '(results' → logprob: -17.39824676513672
    10. '(resultado' → logprob: -17.52324676513672

Token 287: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.500000953674316
    3. ' )' → logprob: -14.875000953674316
    4. '()' → logprob: -17.250001907348633
    5. '())' → logprob: -18.000001907348633
    6. ')`' → logprob: -18.875001907348633
    7. '}' → logprob: -19.750001907348633
    8. ')

' → logprob: -19.875001907348633
    9. '')' → logprob: -19.875001907348633
    10. '))' → logprob: -20.125001907348633

Token 288: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.4868770196917467e-05
    2. ' if' → logprob: -11.375024795532227
    3. '
' → logprob: -11.750024795532227
    4. '```' → logprob: -12.875024795532227
    5. '<|end|>' → logprob: -13.000024795532227
    6. '#' → logprob: -15.250024795532227
    7. '\' → logprob: -16.000024795532227
    8. '\n' → logprob: -16.250024795532227
    9. '    
' → logprob: -16.500024795532227
    10. '  
' → logprob: -17.375024795532227

Token 289: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.25229430198669434
    2. '__' → logprob: -1.5022943019866943
    3. '_' → logprob: -8.377294540405273
    4. '_name' → logprob: -9.377294540405273
    5. ' ' → logprob: -10.752294540405273
    6. 'name' → logprob: -11.502294540405273
    7. ' ' → logprob: -11.752294540405273
    8. '___' → logprob: -12.002294540405273
    9. ' _' → logprob: -13.377294540405273
    10. '  ' → logprob: -13.877294540405273

Token 290: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.15205788612365723
    2. ' ==' → logprob: -2.6520578861236572
    3. ' __' → logprob: -2.7770578861236572
    4. '==' → logprob: -5.402057647705078
    5. '.__' → logprob: -5.777057647705078
    6. 'name' → logprob: -8.277057647705078
    7. '__.__' → logprob: -9.277057647705078
    8. '.name' → logprob: -9.777057647705078
    9. '__.' → logprob: -9.777057647705078
    10. '=="' → logprob: -10.027057647705078

Token 291: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.935296834039036e-06
    2. '==' → logprob: -13.12500286102295
    3. '__.__' → logprob: -14.25000286102295
    4. ' ==' → logprob: -15.62500286102295
    5. '___' → logprob: -16.625003814697266
    6. '____' → logprob: -17.125003814697266
    7. '__.' → logprob: -17.375003814697266
    8. '__
' → logprob: -17.875003814697266
    9. 'name' → logprob: -18.500003814697266
    10. '_' → logprob: -18.625003814697266

Token 292: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.37889230251312256
    2. ' ==' → logprob: -1.5038923025131226
    3. '==' → logprob: -2.378892421722412
    4. '=="' → logprob: -7.878892421722412
    5. '_' → logprob: -10.378891944885254
    6. '___' → logprob: -11.628891944885254
    7. '=='' → logprob: -11.628891944885254
    8. ' __' → logprob: -11.753891944885254
    9. '===' → logprob: -11.753891944885254
    10. ' =="' → logprob: -11.878891944885254

Token 293: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006741184741258621
    2. ''' → logprob: -5.006741046905518
    3. ' "__' → logprob: -10.631741523742676
    4. '__' → logprob: -13.756741523742676
    5. ' '__' → logprob: -15.756741523742676
    6. '"user' → logprob: -16.13174057006836
    7. '"name' → logprob: -16.25674057006836
    8. '("__' → logprob: -16.50674057006836
    9. '"class' → logprob: -16.75674057006836
    10. ''"' → logprob: -17.13174057006836

Token 294: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00016182278341148049
    2. '__' → logprob: -8.750162124633789
    3. 'name' → logprob: -12.875162124633789
    4. '"' → logprob: -15.250162124633789
    5. '_main' → logprob: -15.250162124633789
    6. ' main' → logprob: -15.625162124633789
    7. '__":
' → logprob: -17.37516212463379
    8. 'built' → logprob: -17.87516212463379
    9. '-main' → logprob: -18.25016212463379
    10. 'Main' → logprob: -18.37516212463379

Token 295: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.1602610945701599
    2. '__' → logprob: -1.9102611541748047
    3. '__':
' → logprob: -10.410261154174805
    4. '__.' → logprob: -12.660261154174805
    5. '__["' → logprob: -13.410261154174805
    6. '__:' → logprob: -13.910261154174805
    7. '__.__' → logprob: -14.535261154174805
    8. '__",' → logprob: -15.160261154174805
    9. '__
' → logprob: -15.535261154174805
    10. '__("' → logprob: -15.535261154174805

Token 296: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04359588027000427
    2. ''' → logprob: -3.418595790863037
    3. '__' → logprob: -4.668595790863037
    4. 'main' → logprob: -8.293596267700195
    5. ' "__' → logprob: -8.543596267700195
    6. '   ' → logprob: -9.793596267700195
    7. ' '__' → logprob: -12.543596267700195
    8. '___' → logprob: -13.543596267700195
    9. '"_' → logprob: -13.543596267700195
    10. ' main' → logprob: -13.668596267700195

Token 297: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -7.941850526549388e-06
    2. ' main' → logprob: -11.750007629394531
    3. '	main' → logprob: -17.37500762939453
    4. 'import' → logprob: -18.87500762939453
    5. '   ' → logprob: -20.00000762939453
    6. '(main' → logprob: -22.87500762939453
    7. '.main' → logprob: -23.00000762939453
    8. '_main' → logprob: -23.25000762939453
    9. '  ' → logprob: -24.00000762939453
    10. '    
' → logprob: -24.62500762939453

Token 298: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 296
Tokens correctement prédits (1ère position, stricte): 147
Tokens correctement prédits (1ère position, avec adaptation): 159
Tokens correctement prédits (top 10): 255
Précision stricte (1ère position): 49.66%
Précision adaptée (1ère position): 53.72%
Précision (top 10): 86.15%
================================================================================
