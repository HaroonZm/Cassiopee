================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:06:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = input()
    if n == '0':
        break
    n = int(n)
    words = []
    for _ in range(n):
        words.extend(input().split())
    k = input()
    freq = {}
    for w in words:
        if w.startswith(k):
            freq[w] = freq.get(w, 0) + 1
    if not freq:
        print("NA")
        continue
    sorted_words = sorted(freq.items(), key=lambda x: (-x[1], x[0]))
    print(" ".join(w for w, c in sorted_words[:5]))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5957265496253967
    2. '\' → logprob: -2.220726490020752
    3. ' ' → logprob: -2.470726490020752
    4. '```' → logprob: -2.845726490020752
    5. '    ' → logprob: -2.970726490020752
    6. '    
' → logprob: -3.220726490020752
    7. '\n' → logprob: -3.720726490020752
    8. ' 
' → logprob: -3.845726490020752
    9. '<|end|>' → logprob: -3.970726490020752
    10. '  
' → logprob: -5.095726490020752

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19517217576503754
    2. '    ' → logprob: -2.695172071456909
    3. ' ' → logprob: -3.070172071456909
    4. '```' → logprob: -3.195172071456909
    5. '       ' → logprob: -5.195172309875488
    6. '    
' → logprob: -5.695172309875488
    7. ' pass' → logprob: -5.945172309875488
    8. '  ' → logprob: -6.445172309875488
    9. 'pass' → logprob: -6.445172309875488
    10. ' ```' → logprob: -6.945172309875488

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6069875359535217
    2. 'u' → logprob: -1.731987476348877
    3. '=' → logprob: -2.481987476348877
    4. 'o' → logprob: -2.481987476348877
    5. '   ' → logprob: -3.356987476348877
    6. 'e' → logprob: -4.606987476348877
    7. '_' → logprob: -4.731987476348877
    8. ' =' → logprob: -4.731987476348877
    9. '+' → logprob: -4.856987476348877
    10. '%' → logprob: -5.106987476348877

Token 6: ' input' (ID: 3422)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2752552926540375
    2. ' input' → logprob: -1.5252553224563599
    3. 'input' → logprob: -4.27525520324707
    4. 'int' → logprob: -4.77525520324707
    5. ' n' → logprob: -7.90025520324707
    6. ' ' → logprob: -9.02525520324707
    7. 'n' → logprob: -10.15025520324707
    8. ' eval' → logprob: -10.65025520324707
    9. '```' → logprob: -10.65025520324707
    10. ' randint' → logprob: -10.90025520324707

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002151569351553917
    2. '('' → logprob: -6.6271514892578125
    3. '("("' → logprob: -8.002151489257812
    4. ''' → logprob: -8.502151489257812
    5. '()' → logprob: -8.627151489257812
    6. '```' → logprob: -10.127151489257812
    7. '"' → logprob: -11.002151489257812
    8. '("")' → logprob: -11.752151489257812
    9. '`' → logprob: -12.252151489257812
    10. '(
' → logprob: -12.252151489257812

Token 8: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5989494323730469
    2. ' ' → logprob: -2.348949432373047
    3. '   ' → logprob: -2.723949432373047
    4. '.' → logprob: -3.223949432373047
    5. '\n' → logprob: -3.223949432373047
    6. ' ==' → logprob: -3.223949432373047
    7. '<|end|>' → logprob: -3.223949432373047
    8. '```' → logprob: -3.598949432373047
    9. 'if' → logprob: -4.348949432373047
    10. ')' → logprob: -4.348949432373047

Token 9: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5926225781440735
    2. ' ==' → logprob: -1.7176225185394287
    3. ' ' → logprob: -2.7176225185394287
    4. '.' → logprob: -2.8426225185394287
    5. 'if' (adapté à ' if') → logprob: -3.0926225185394287
    6. '==' → logprob: -3.2176225185394287
    7. '.strip' → logprob: -4.342622756958008
    8. '<|end|>' → logprob: -5.092622756958008
    9. '   ' → logprob: -5.217622756958008
    10. '    ' → logprob: -5.342622756958008

Token 10: ' n' (ID: 297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.07012060284614563
    2. ' n' → logprob: -3.3201205730438232
    3. ' ' → logprob: -3.5701205730438232
    4. 'not' → logprob: -5.945120811462402
    5. 'n' → logprob: -7.320120811462402
    6. '  ' → logprob: -9.070120811462402
    7. ' ' → logprob: -11.820120811462402
    8. ' n't' → logprob: -12.320120811462402
    9. '	not' → logprob: -13.445120811462402
    10. 'n't' → logprob: -14.070120811462402

Token 11: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.019317807629704475
    2. '==' → logprob: -4.144317626953125
    3. '.' → logprob: -6.269317626953125
    4. ' .' → logprob: -7.644317626953125
    5. '.strip' → logprob: -8.019317626953125
    6. ' ' → logprob: -8.644317626953125
    7. '.is' → logprob: -9.269317626953125
    8. ' =' → logprob: -9.519317626953125
    9. ' !=' → logprob: -9.644317626953125
    10. ')' → logprob: -10.519317626953125

Token 12: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.05038289353251457
    2. ''' → logprob: -3.0503828525543213
    3. '""' → logprob: -6.5503830909729
    4. '''' → logprob: -8.800382614135742
    5. ' ' → logprob: -8.925382614135742
    6. ' "' → logprob: -10.550382614135742
    7. '"\' → logprob: -10.675382614135742
    8. ' '' → logprob: -11.800382614135742
    9. ''\' → logprob: -13.175382614135742
    10. '   ' → logprob: -13.425382614135742

Token 13: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.29659536480903625
    2. '0' → logprob: -1.9215953350067139
    3. ''ex' → logprob: -3.171595335006714
    4. '':' → logprob: -3.546595335006714
    5. ''\' → logprob: -4.421595573425293
    6. '\n' → logprob: -4.671595573425293
    7. '"' → logprob: -4.921595573425293
    8. 'exit' → logprob: -5.296595573425293
    9. '''' → logprob: -6.171595573425293
    10. 'quit' → logprob: -6.796595573425293

Token 14: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.07276080548763275
    2. ''' → logprob: -3.197760820388794
    3. '\n' → logprob: -3.572760820388794
    4. ':' → logprob: -7.447760581970215
    5. '':
' → logprob: -7.822760581970215
    6. ' ':' → logprob: -9.447760581970215
    7. '':
' → logprob: -9.572760581970215
    8. '0' → logprob: -10.947760581970215
    9. '":' → logprob: -11.072760581970215
    10. '\r' → logprob: -11.072760581970215

Token 15: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010164475068449974
    2. ' break' → logprob: -4.885164260864258
    3. '   ' → logprob: -6.510164260864258
    4. ':' → logprob: -8.260164260864258
    5. '    ' → logprob: -8.510164260864258
    6. '	break' → logprob: -8.635164260864258
    7. '\n' → logprob: -8.885164260864258
    8. '      ' → logprob: -10.010164260864258
    9. '     ' → logprob: -10.135164260864258
    10. ':
' → logprob: -10.135164260864258

Token 16: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.3510962724685669
    2. '       ' → logprob: -1.226096272468567
    3. 'break' (adapté à ' break') → logprob: -6.851096153259277
    4. '   ' → logprob: -7.226096153259277
    5. '\n' → logprob: -7.851096153259277
    6. '	break' → logprob: -8.476096153259277
    7. ' ' → logprob: -9.726096153259277
    8. '           ' → logprob: -9.976096153259277
    9. '    ' → logprob: -10.226096153259277
    10. ' ' → logprob: -10.476096153259277

Token 17: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.5743416547775269
    2. ':' → logprob: -1.9493416547775269
    3. '   ' → logprob: -1.9493416547775269
    4. '
' → logprob: -1.9493416547775269
    5. '<|end|>' → logprob: -2.0743417739868164
    6. ' ' → logprob: -2.6993417739868164
    7. '    
' → logprob: -3.0743417739868164
    8. '  
' → logprob: -3.5743417739868164
    9. 'n' → logprob: -3.8243417739868164
    10. ' 
' → logprob: -3.9493417739868164

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06078985705971718
    2. '    
' → logprob: -3.5607898235321045
    3. '
' → logprob: -4.435790061950684
    4. 'n' → logprob: -5.435790061950684
    5. '<|end|>' → logprob: -5.435790061950684
    6. '\n' → logprob: -5.685790061950684
    7. '  
' → logprob: -5.935790061950684
    8. 'print' → logprob: -6.685790061950684
    9. '  ' → logprob: -7.560790061950684
    10. '   
' → logprob: -7.935790061950684

Token 19: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7988591194152832
    2. ' ' → logprob: -1.0488591194152832
    3. 'n' (adapté à ' n') → logprob: -2.548859119415283
    4. '    ' → logprob: -3.548859119415283
    5. '\n' → logprob: -4.048859119415283
    6. '    
' → logprob: -4.798859119415283
    7. '<|end|>' → logprob: -4.798859119415283
    8. ' n' → logprob: -5.048859119415283
    9. 'print' → logprob: -5.048859119415283
    10. ',' → logprob: -5.173859119415283

Token 20: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.067206621170044
    2. ')' → logprob: -1.567206621170044
    3. '<|end|>' → logprob: -1.817206621170044
    4. '+' → logprob: -2.317206621170044
    5. '=' → logprob: -2.442206621170044
    6. '[' → logprob: -3.442206621170044
    7. '#' → logprob: -4.317206382751465
    8. '<|end|>' → logprob: -4.692206382751465
    9. ' ' → logprob: -5.067206382751465
    10. '.strip' → logprob: -5.067206382751465

Token 21: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.18010689318180084
    2. ' n' → logprob: -2.6801068782806396
    3. 'int' → logprob: -2.6801068782806396
    4. ' list' → logprob: -3.9301068782806396
    5. 'n' → logprob: -5.430107116699219
    6. 'list' → logprob: -6.430107116699219
    7. ' [' → logprob: -7.180107116699219
    8. ' ' → logprob: -7.805107116699219
    9. '[int' → logprob: -8.680107116699219
    10. ' sorted' → logprob: -8.805107116699219

Token 22: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3484979569911957
    2. '(n' → logprob: -1.223497986793518
    3. ' (' → logprob: -11.098498344421387
    4. '(input' → logprob: -11.598498344421387
    5. '(
' → logprob: -11.723498344421387
    6. '()' → logprob: -11.848498344421387
    7. '('' → logprob: -12.973498344421387
    8. '(

' → logprob: -13.473498344421387
    9. '(int' → logprob: -13.723498344421387
    10. ' ' → logprob: -13.723498344421387

Token 23: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00046951865078881383
    2. ' )' → logprob: -7.87546968460083
    3. '+' → logprob: -10.125469207763672
    4. '*' → logprob: -11.000469207763672
    5. '**' → logprob: -11.625469207763672
    6. '))' → logprob: -11.875469207763672
    7. '`)' → logprob: -12.375469207763672
    8. '   ' → logprob: -13.125469207763672
    9. ')
' → logprob: -13.125469207763672
    10. ' +' → logprob: -13.625469207763672

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7782187461853027
    2. '<|end|>' → logprob: -1.0282187461853027
    3. ' ' → logprob: -3.1532187461853027
    4. '+' → logprob: -3.4032187461853027
    5. ' 
' → logprob: -3.5282187461853027
    6. '    
' → logprob: -4.153218746185303
    7. '\n' → logprob: -4.778218746185303
    8. ')' → logprob: -5.028218746185303
    9. '<|end|>' → logprob: -5.028218746185303
    10. '  
' → logprob: -5.278218746185303

Token 25: ' words' (ID: 6391)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35693320631980896
    2. '   ' → logprob: -1.4819332361221313
    3. '    ' → logprob: -4.231933116912842
    4. ' 
' → logprob: -4.356933116912842
    5. ' if' → logprob: -4.606933116912842
    6. '<|end|>' → logprob: -4.731933116912842
    7. '  ' → logprob: -5.231933116912842
    8. 'n' → logprob: -5.981933116912842
    9. '    
' → logprob: -5.981933116912842
    10. 's' → logprob: -6.356933116912842

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4453761875629425
    2. '_count' → logprob: -1.8203761577606201
    3. '=' → logprob: -2.82037615776062
    4. '[' → logprob: -3.19537615776062
    5. '.' → logprob: -3.19537615776062
    6. '_' → logprob: -3.69537615776062
    7. '.setdefault' → logprob: -5.070376396179199
    8. '_counts' → logprob: -5.695376396179199
    9. '.count' → logprob: -6.070376396179199
    10. '=[]' → logprob: -6.195376396179199

Token 27: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.5801406502723694
    2. '[]' → logprob: -1.0801405906677246
    3. ' [' → logprob: -2.9551405906677246
    4. '[' → logprob: -4.455140590667725
    5. ' ['' → logprob: -4.955140590667725
    6. '['' → logprob: -5.205140590667725
    7. ' list' → logprob: -5.455140590667725
    8. '[n' → logprob: -5.455140590667725
    9. '[input' → logprob: -5.830140590667725
    10. ' input' → logprob: -5.955140590667725

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1454683393239975
    2. 'for' → logprob: -2.520468235015869
    3. ' for' → logprob: -3.145468235015869
    4. ' ' → logprob: -5.020468235015869
    5. '    ' → logprob: -6.520468235015869
    6. '<|end|>' → logprob: -6.645468235015869
    7. '    
' → logprob: -7.520468235015869
    8. '[' → logprob: -7.895468235015869
    9. '  ' → logprob: -8.395468711853027
    10. ' 
' → logprob: -8.645468711853027

Token 29: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03532520309090614
    2. ' for' → logprob: -3.660325288772583
    3. '   ' → logprob: -5.160325050354004
    4. 'w' → logprob: -7.410325050354004
    5. 'f' → logprob: -7.535325050354004
    6. 'if' → logprob: -7.785325050354004
    7. 'words' → logprob: -7.910325050354004
    8. ' ' → logprob: -8.035325050354004
    9. 'while' → logprob: -8.035325050354004
    10. 'i' → logprob: -8.285325050354004

Token 30: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0030596256256104
    2. ' _' → logprob: -1.2530596256256104
    3. ' i' → logprob: -1.7530596256256104
    4. '_' → logprob: -1.7530596256256104
    5. 'i' → logprob: -6.878059387207031
    6. '  ' → logprob: -10.378059387207031
    7. ' range' → logprob: -11.003059387207031
    8. ' ‌' → logprob: -11.128059387207031
    9. ' ' → logprob: -11.503059387207031
    10. ' in' → logprob: -11.878059387207031

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0014105896698310971
    2. 'in' → logprob: -6.626410484313965
    3. ' ' → logprob: -9.501410484313965
    4. '<|end|>' → logprob: -12.251410484313965
    5. '	in' → logprob: -12.876410484313965
    6. 'range' → logprob: -14.126410484313965
    7. '_' → logprob: -14.376410484313965
    8. ' range' → logprob: -15.626410484313965
    9. ' _' → logprob: -15.876410484313965
    10. ' i' → logprob: -16.00141143798828

Token 32: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931613683700562
    2. 'range' → logprob: -0.6931613683700562
    3. '	range' → logprob: -11.693161010742188
    4. 'rang' → logprob: -13.318161010742188
    5. ' ' → logprob: -13.318161010742188
    6. 'ran' → logprob: -14.318161010742188
    7. '(range' → logprob: -14.443161010742188
    8. '_range' → logprob: -14.693161010742188
    9. ' xrange' → logprob: -15.443161010742188
    10. '_' → logprob: -15.693161010742188

Token 33: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.09763304144144058
    2. ' n' → logprob: -3.097633123397827
    3. '(' → logprob: -3.347633123397827
    4. ' (' → logprob: -4.597632884979248
    5. 'n' → logprob: -5.972632884979248
    6. ' ' → logprob: -10.097633361816406
    7. '	n' → logprob: -12.222633361816406
    8. '_n' → logprob: -12.847633361816406
    9. ',' → logprob: -12.972633361816406
    10. ')' → logprob: -13.222633361816406

Token 34: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011449663899838924
    2. ')' → logprob: -4.636449813842773
    3. ' ):' → logprob: -6.886449813842773
    4. '):
' → logprob: -7.636449813842773
    5. ':' → logprob: -8.886449813842773
    6. ' )' → logprob: -11.136449813842773
    7. '   ' → logprob: -11.261449813842773
    8. ',' → logprob: -12.636449813842773
    9. '+' → logprob: -12.761449813842773
    10. ' ' → logprob: -13.136449813842773

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10385077446699142
    2. ' ' → logprob: -2.978850841522217
    3. '    ' → logprob: -3.603850841522217
    4. '   ' → logprob: -4.103850841522217
    5. '<|end|>' → logprob: -6.353850841522217
    6. ' s' → logprob: -7.728850841522217
    7. ' ' → logprob: -8.478850364685059
    8. '     ' → logprob: -8.603850364685059
    9. '        ' → logprob: -8.853850364685059
    10. ' words' → logprob: -8.853850364685059

Token 36: ' words' (ID: 6391)
  Prédit: ' words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' words' → logprob: -0.763233482837677
    2. '   ' → logprob: -1.3882334232330322
    3. ' word' → logprob: -1.3882334232330322
    4. 'words' (adapté à ' words') → logprob: -4.513233661651611
    5. ' s' → logprob: -4.888233661651611
    6. ' w' → logprob: -5.013233661651611
    7. ' line' → logprob: -5.638233661651611
    8. '       ' → logprob: -6.138233661651611
    9. 'word' → logprob: -6.263233661651611
    10. ' sentence' → logprob: -7.763233661651611

Token 37: '.extend' (ID: 34151)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.3623282015323639
    2. '.' → logprob: -1.3623281717300415
    3. ' =' → logprob: -3.112328290939331
    4. '=' → logprob: -5.862328052520752
    5. '.extend' → logprob: -8.36232852935791
    6. ' .' → logprob: -8.86232852935791
    7. '.=' → logprob: -9.48732852935791
    8. '   ' → logprob: -11.11232852935791
    9. ' ' → logprob: -11.48732852935791
    10. ' .=' → logprob: -11.73732852935791

Token 38: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.11368217319250107
    2. '(' → logprob: -2.238682270050049
    3. '(list' → logprob: -7.613682270050049
    4. 'input' → logprob: -9.11368179321289
    5. '(['' → logprob: -9.61368179321289
    6. '([' → logprob: -9.86368179321289
    7. '('' → logprob: -10.61368179321289
    8. '(
' → logprob: -10.98868179321289
    9. '(str' → logprob: -10.98868179321289
    10. '(int' → logprob: -11.11368179321289

Token 39: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0037126655224710703
    2. '()' → logprob: -5.6287126541137695
    3. '())' → logprob: -9.37871265411377
    4. ' ().' → logprob: -11.25371265411377
    5. '()))' → logprob: -12.50371265411377
    6. ')' → logprob: -12.62871265411377
    7. '()
' → logprob: -12.62871265411377
    8. ' ()' → logprob: -13.62871265411377
    9. '(' → logprob: -13.87871265411377
    10. ' ' → logprob: -14.50371265411377

Token 40: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.003995527047663927
    2. 'strip' → logprob: -5.628995418548584
    3. ' split' → logprob: -8.628995895385742
    4. 'rstrip' → logprob: -8.628995895385742
    5. 'lower' → logprob: -10.503995895385742
    6. 'replace' → logprob: -12.753995895385742
    7. 'spl' → logprob: -13.003995895385742
    8. 'rs' → logprob: -13.753995895385742
    9. '(split' → logprob: -14.128995895385742
    10. ' strip' → logprob: -14.378995895385742

Token 41: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.009380730800330639
    2. '()' → logprob: -5.00938081741333
    3. '()))' → logprob: -6.00938081741333
    4. '(' → logprob: -9.009380340576172
    5. ')' → logprob: -9.634380340576172
    6. '))' → logprob: -12.259380340576172
    7. ' ())' → logprob: -12.259380340576172
    8. '())
' → logprob: -12.384380340576172
    9. '('' → logprob: -13.384380340576172
    10. '()]' → logprob: -14.384380340576172

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0672229528427124
    2. '<|end|>' → logprob: -4.067223072052002
    3. '    
' → logprob: -4.192223072052002
    4. 'for' → logprob: -5.442223072052002
    5. 'words' → logprob: -5.567223072052002
    6. '[' → logprob: -5.692223072052002
    7. ' for' → logprob: -5.817223072052002
    8. ' if' → logprob: -5.817223072052002
    9. 'print' → logprob: -6.192223072052002
    10. ')' → logprob: -6.442223072052002

Token 43: ' k' (ID: 372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29145506024360657
    2. 'words' → logprob: -2.416455030441284
    3. 'print' → logprob: -3.166455030441284
    4. ' words' → logprob: -3.416455030441284
    5. '<|end|>' → logprob: -3.541455030441284
    6. ' for' → logprob: -4.166455268859863
    7. ' if' → logprob: -5.041455268859863
    8. 'for' → logprob: -5.041455268859863
    9. ' print' → logprob: -5.666455268859863
    10. '    
' → logprob: -6.041455268859863

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0036582681350409985
    2. '=' → logprob: -5.753658294677734
    3. ' ' → logprob: -8.003658294677734
    4. '_' → logprob: -10.253658294677734
    5. 'ey' → logprob: -10.253658294677734
    6. '   ' → logprob: -11.253658294677734
    7. 'eys' → logprob: -11.253658294677734
    8. '  ' → logprob: -11.378658294677734
    9. 'e' → logprob: -11.628658294677734
    10. '=int' → logprob: -11.878658294677734

Token 45: ' input' (ID: 3422)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3530898988246918
    2. ' len' → logprob: -2.1030898094177246
    3. 'int' → logprob: -2.4780898094177246
    4. 'len' → logprob: -2.9780898094177246
    5. ' n' → logprob: -3.6030898094177246
    6. ' ' → logprob: -4.853089809417725
    7. '0' → logprob: -6.853089809417725
    8. ' max' → logprob: -6.978089809417725
    9. ' words' → logprob: -7.228089809417725
    10. '1' → logprob: -7.353089809417725

Token 46: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007834100164473057
    2. '(' → logprob: -4.882833957672119
    3. '('' → logprob: -8.882834434509277
    4. ' ()' → logprob: -10.132834434509277
    5. '().' → logprob: -10.382834434509277
    6. '(k' → logprob: -11.882834434509277
    7. '("' → logprob: -13.632834434509277
    8. '())' → logprob: -13.757834434509277
    9. '()
' → logprob: -13.882834434509277
    10. '()>' → logprob: -14.007834434509277

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1182987689971924
    2. '
' → logprob: -1.6182987689971924
    3. '<|end|>' → logprob: -2.2432987689971924
    4. ' ' → logprob: -3.1182987689971924
    5. 'words' → logprob: -3.1182987689971924
    6. ' if' → logprob: -3.1182987689971924
    7. '    
' → logprob: -3.7432987689971924
    8. 'if' → logprob: -3.7432987689971924
    9. '.' → logprob: -3.9932987689971924
    10. '.split' → logprob: -4.118298530578613

Token 48: ' freq' (ID: 42078)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09532337635755539
    2. ' =' → logprob: -2.720323324203491
    3. '.' → logprob: -4.72032356262207
    4. 'if' → logprob: -5.84532356262207
    5. 'for' → logprob: -5.84532356262207
    6. 'words' → logprob: -6.47032356262207
    7. ':' → logprob: -6.72032356262207
    8. 'count' → logprob: -7.09532356262207
    9. ',' → logprob: -7.22032356262207
    10. '   ' → logprob: -7.47032356262207

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2820281982421875
    2. 's' → logprob: -2.2820281982421875
    3. '=' → logprob: -2.4070281982421875
    4. 'u' → logprob: -3.4070281982421875
    5. '_' → logprob: -4.6570281982421875
    6. '[' → logprob: -5.0320281982421875
    7. '[u' → logprob: -6.7820281982421875
    8. '.' → logprob: -7.1570281982421875
    9. ' ' → logprob: -7.1570281982421875
    10. '(' → logprob: -7.7820281982421875

Token 50: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0007815150311216712
    2. ' {}' → logprob: -7.250781536102295
    3. '{' → logprob: -10.125781059265137
    4. 'dict' → logprob: -10.750781059265137
    5. 'collections' → logprob: -13.250781059265137
    6. 'default' → logprob: -13.750781059265137
    7. 'words' → logprob: -13.750781059265137
    8. '{})' → logprob: -13.750781059265137
    9. '[]' → logprob: -14.375781059265137
    10. '{}
' → logprob: -14.375781059265137

Token 51: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015026151202619076
    2. ' for' → logprob: -4.265026092529297
    3. '   ' → logprob: -7.390026092529297
    4. '<|end|>' → logprob: -8.515026092529297
    5. ' ' → logprob: -11.140026092529297
    6. '.' → logprob: -12.390026092529297
    7. '  ' → logprob: -12.390026092529297
    8. '<|end|>' → logprob: -12.390026092529297
    9. '
' → logprob: -12.890026092529297
    10. '=' → logprob: -13.390026092529297

Token 52: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005079957190901041
    2. ' for' → logprob: -7.625507831573486
    3. '   ' → logprob: -11.375508308410645
    4. 'count' → logprob: -13.500508308410645
    5. ' ' → logprob: -14.125508308410645
    6. 'words' → logprob: -14.375508308410645
    7. 'word' → logprob: -14.375508308410645
    8. '```' → logprob: -14.375508308410645
    9. 'if' → logprob: -14.625508308410645
    10. '	for' → logprob: -14.750508308410645

Token 53: ' w' (ID: 286)
  Prédit: ' word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.5166091918945312
    2. 'word' → logprob: -1.6416091918945312
    3. ' w' → logprob: -2.1416091918945312
    4. 'w' → logprob: -2.3916091918945312
    5. ' ' → logprob: -7.641609191894531
    6. '_' → logprob: -9.641609191894531
    7. ' i' → logprob: -9.891609191894531
    8. 'i' → logprob: -10.391609191894531
    9. ' _' → logprob: -10.516609191894531
    10. '	word' → logprob: -10.516609191894531

Token 54: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004777687601745129
    2. 'in' → logprob: -5.379777908325195
    3. ' ' → logprob: -9.004777908325195
    4. '   ' → logprob: -11.879777908325195
    5. 'n' → logprob: -12.129777908325195
    6. ',' → logprob: -13.004777908325195
    7. 's' → logprob: -13.004777908325195
    8. '  ' → logprob: -13.004777908325195
    9. '    ' → logprob: -13.004777908325195
    10. 'i' → logprob: -13.379777908325195

Token 55: ' words' (ID: 6391)
  Prédit: ' words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' words' → logprob: -0.28144270181655884
    2. 'words' → logprob: -1.406442642211914
    3. '    ' → logprob: -9.156442642211914
    4. '(words' → logprob: -9.906442642211914
    5. '   ' → logprob: -10.156442642211914
    6. ' ' → logprob: -10.156442642211914
    7. 'w' → logprob: -11.593942642211914
    8. 'k' → logprob: -11.718942642211914
    9. 'word' → logprob: -12.218942642211914
    10. '.words' → logprob: -12.593942642211914

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006646605907008052
    2. ':
' → logprob: -7.875664710998535
    3. ' :' → logprob: -8.250664710998535
    4. '   ' → logprob: -11.875664710998535
    5. '):' → logprob: -12.000664710998535
    6. '[' → logprob: -13.500664710998535
    7. '=' → logprob: -13.500664710998535
    8. ',' → logprob: -13.875664710998535
    9. '       ' → logprob: -14.125664710998535
    10. '.' → logprob: -14.250664710998535

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021796426735818386
    2. '<|end|>' → logprob: -6.8771796226501465
    3. ' if' → logprob: -7.7521796226501465
    4. '    ' → logprob: -8.752180099487305
    5. ' ' → logprob: -8.752180099487305
    6. '   ' → logprob: -9.252180099487305
    7. '        ' → logprob: -9.252180099487305
    8. ' freq' → logprob: -9.377180099487305
    9. 'if' → logprob: -10.252180099487305
    10. '      ' → logprob: -11.252180099487305

Token 58: ' if' (ID: 538)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.10713954269886017
    2. ' freq' → logprob: -3.3571395874023438
    3. '   ' → logprob: -3.4821395874023438
    4. 'if' (adapté à ' if') → logprob: -3.4821395874023438
    5. ' if' → logprob: -5.732139587402344
    6. '       ' → logprob: -6.232139587402344
    7. 'frequency' → logprob: -10.482139587402344
    8. ' frequency' → logprob: -11.232139587402344
    9. '_freq' → logprob: -11.232139587402344
    10. 'fre' → logprob: -12.607139587402344

Token 59: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.0020254701375961304
    2. 'w' → logprob: -6.252025604248047
    3. ' ' → logprob: -9.252025604248047
    4. ' ' → logprob: -14.502025604248047
    5. ' not' → logprob: -16.377025604248047
    6. '	w' → logprob: -16.502025604248047
    7. '    ' → logprob: -16.627025604248047
    8. '  ' → logprob: -16.752025604248047
    9. '<|end|>' → logprob: -17.252025604248047
    10. '<|end|>' → logprob: -17.877025604248047

Token 60: '.startswith' (ID: 64340)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0352814756333828
    2. ' not' → logprob: -3.4102814197540283
    3. 'in' → logprob: -6.535281658172607
    4. 'not' → logprob: -9.28528118133545
    5. ' ==' → logprob: -10.16028118133545
    6. ' ' → logprob: -10.28528118133545
    7. '==' → logprob: -11.41028118133545
    8. '   ' → logprob: -14.16028118133545
    9. ' no' → logprob: -14.16028118133545
    10. ')' → logprob: -14.28528118133545

Token 61: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0015505714109167457
    2. '(' → logprob: -6.626550674438477
    3. ' (' → logprob: -8.626550674438477
    4. '('' → logprob: -10.251550674438477
    5. '(s' → logprob: -13.126550674438477
    6. ' k' → logprob: -13.376550674438477
    7. '((' → logprob: -13.376550674438477
    8. 'k' → logprob: -13.626550674438477
    9. '(
' → logprob: -14.501550674438477
    10. '(i' → logprob: -14.501550674438477

Token 62: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4332237243652344
    2. '):
' → logprob: -1.0582237243652344
    3. ')' → logprob: -5.808223724365234
    4. '       ' → logprob: -7.433223724365234
    5. '):
' → logprob: -8.308223724365234
    6. ' ):' → logprob: -8.683223724365234
    7. '   ' → logprob: -8.683223724365234
    8. '           ' → logprob: -9.183223724365234
    9. ' ):
' → logprob: -9.308223724365234
    10. ''):' → logprob: -10.558223724365234

Token 63: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001580447657033801
    2. 'freq' → logprob: -7.376580238342285
    3. ' freq' → logprob: -8.001580238342285
    4. '       ' → logprob: -8.251580238342285
    5. ':' → logprob: -8.876580238342285
    6. '               ' → logprob: -9.001580238342285
    7. '          ' → logprob: -10.626580238342285
    8. ':
' → logprob: -11.376580238342285
    9. '	       ' → logprob: -11.376580238342285
    10. '        ' → logprob: -12.126580238342285

Token 64: ' freq' (ID: 42078)
  Prédit: ' freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' freq' → logprob: -0.8039420247077942
    2. 'freq' (adapté à ' freq') → logprob: -0.8039420247077942
    3. '       ' → logprob: -2.5539419651031494
    4. '           ' → logprob: -4.1789422035217285
    5. ' if' → logprob: -5.0539422035217285
    6. 'if' → logprob: -6.0539422035217285
    7. '               ' → logprob: -6.0539422035217285
    8. '   ' → logprob: -7.6789422035217285
    9. ' frequency' → logprob: -9.80394172668457
    10. ' ' → logprob: -10.67894172668457

Token 65: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -7.703443770878948e-06
    2. '.setdefault' → logprob: -12.125007629394531
    3. '[' → logprob: -13.375007629394531
    4. ' [' → logprob: -15.500007629394531
    5. 'w' → logprob: -15.500007629394531
    6. '[word' → logprob: -17.12500762939453
    7. '[f' → logprob: -17.37500762939453
    8. '.get' → logprob: -17.50000762939453
    9. '[v' → logprob: -17.62500762939453
    10. '=w' → logprob: -18.00000762939453

Token 66: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010396919213235378
    2. ']=' → logprob: -4.760396957397461
    3. ' ]' → logprob: -6.885396957397461
    4. ']+=' → logprob: -7.760396957397461
    5. '=' → logprob: -8.135396957397461
    6. ' =' → logprob: -10.510396957397461
    7. ')' → logprob: -13.135396957397461
    8. '']' → logprob: -13.260396957397461
    9. '']=' → logprob: -13.510396957397461
    10. '`]' → logprob: -13.885396957397461

Token 67: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975292131304741
    2. ' =' → logprob: -3.5297529697418213
    3. '+=' → logprob: -13.154752731323242
    4. '=

' → logprob: -15.529752731323242
    5. '＝' → logprob: -16.279752731323242
    6. ' +=' → logprob: -16.404752731323242
    7. '=
' → logprob: -16.529752731323242
    8. ' ' → logprob: -16.904752731323242
    9. '=f' → logprob: -18.279752731323242
    10. '=}' → logprob: -18.779752731323242

Token 68: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.5232594609260559
    2. ' freq' → logprob: -0.8982594609260559
    3. '1' → logprob: -9.898259162902832
    4. '0' → logprob: -10.648259162902832
    5. '(freq' → logprob: -11.148259162902832
    6. ' ' → logprob: -11.523259162902832
    7. '   ' → logprob: -12.023259162902832
    8. ' frequency' → logprob: -12.023259162902832
    9. 'f' → logprob: -12.210759162902832
    10. 'fre' → logprob: -12.460759162902832

Token 69: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -2.4868770196917467e-05
    2. 'get' → logprob: -11.375024795532227
    3. '.' → logprob: -12.000024795532227
    4. ' .' → logprob: -12.250024795532227
    5. '.setdefault' → logprob: -13.375024795532227
    6. '0' → logprob: -14.875024795532227
    7. '   ' → logprob: -15.750024795532227
    8. ' ' → logprob: -16.625024795532227
    9. '1' → logprob: -16.875024795532227
    10. 'w' → logprob: -17.250024795532227

Token 70: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.00033665422233752906
    2. '(' → logprob: -8.000336647033691
    3. '<|end|>' → logprob: -14.875336647033691
    4. ' (' → logprob: -15.375336647033691
    5. '(
' → logprob: -16.125337600708008
    6. '(u' → logprob: -16.375337600708008
    7. 'w' → logprob: -16.750337600708008
    8. '(word' → logprob: -16.750337600708008
    9. '```' → logprob: -16.750337600708008
    10. '(k' → logprob: -17.125337600708008

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019851787015795708
    2. ',w' → logprob: -4.0198516845703125
    3. ' ,' → logprob: -6.8948516845703125
    4. '(w' → logprob: -7.5198516845703125
    5. 'w' → logprob: -9.144851684570312
    6. ')' → logprob: -11.394851684570312
    7. '```' → logprob: -11.644851684570312
    8. '[w' → logprob: -12.894851684570312
    9. ' ' → logprob: -13.269851684570312
    10. '`,' → logprob: -13.269851684570312

Token 72: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019301822176203132
    2. ' ' → logprob: -6.251930236816406
    3. ')' → logprob: -13.751930236816406
    4. '1' → logprob: -15.376930236816406
    5. '۰' → logprob: -16.751930236816406
    6. '<|end|>' → logprob: -16.751930236816406
    7. '+' → logprob: -16.876930236816406
    8. '    ' → logprob: -17.001930236816406
    9. '   ' → logprob: -17.626930236816406
    10. ' ' → logprob: -17.876930236816406

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014025058771949261
    2. ' ' → logprob: -8.875140190124512
    3. '1' → logprob: -16.125141143798828
    4. ')' → logprob: -16.625141143798828
    5. '   ' → logprob: -17.250141143798828
    6. '    ' → logprob: -17.375141143798828
    7. '۰' → logprob: -17.687641143798828
    8. '```' → logprob: -17.687641143798828
    9. '  ' → logprob: -18.000141143798828
    10. '+' → logprob: -18.500141143798828

Token 74: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026872646412812173
    2. ')+' → logprob: -8.250268936157227
    3. ' )' → logprob: -12.000268936157227
    4. '+' → logprob: -14.125268936157227
    5. '```' → logprob: -15.500268936157227
    6. ']' → logprob: -16.125268936157227
    7. '1' → logprob: -16.875268936157227
    8. '0' → logprob: -16.875268936157227
    9. '}' → logprob: -17.250268936157227
    10. ' +' → logprob: -17.875268936157227

Token 75: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31326815485954285
    2. ' +' → logprob: -1.3132681846618652
    3. ' ' → logprob: -12.813267707824707
    4. ' plus' → logprob: -13.188267707824707
    5. '1' → logprob: -13.938267707824707
    6. '    ' → logprob: -15.438267707824707
    7. '   ' → logprob: -16.313268661499023
    8. ')+' → logprob: -16.313268661499023
    9. '()+' → logprob: -16.438268661499023
    10. '0' → logprob: -16.438268661499023

Token 76: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024756586644798517
    2. ' ' → logprob: -6.002475738525391
    3. '   ' → logprob: -18.00247573852539
    4. ' ' → logprob: -19.75247573852539
    5. '```' → logprob: -19.75247573852539
    6. '0' → logprob: -20.87747573852539
    7. '<|end|>' → logprob: -21.12747573852539
    8. '  ' → logprob: -21.25247573852539
    9. '１' → logprob: -22.12747573852539
    10. '2' → logprob: -22.25247573852539

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '```' → logprob: -20.875
    4. '   ' → logprob: -21.375
    5. '<|end|>' → logprob: -21.75
    6. '１' → logprob: -23.0
    7. '۱' → logprob: -23.25
    8. '१' → logprob: -23.5
    9. '১' → logprob: -24.0625
    10. '' → logprob: -24.125

Token 78: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0015171766281128
    2. 'print' → logprob: -1.2515171766281128
    3. '<|end|>' → logprob: -1.6265171766281128
    4. '   ' → logprob: -2.3765172958374023
    5. 'for' → logprob: -3.5015172958374023
    6. ')' → logprob: -5.001517295837402
    7. '    
' → logprob: -5.501517295837402
    8. '#' → logprob: -5.876517295837402
    9. ' ' → logprob: -6.001517295837402
    10. '  
' → logprob: -6.751517295837402

Token 80: ' if' (ID: 538)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.718085527420044
    2. 'max' → logprob: -1.343085527420044
    3. 'if' (adapté à ' if') → logprob: -2.093085527420044
    4. 'print' → logprob: -3.093085527420044
    5. 'for' → logprob: -3.968085527420044
    6. 'items' → logprob: -4.468085289001465
    7. 'result' → logprob: -5.093085289001465
    8. 'm' → logprob: -5.093085289001465
    9. ' if' → logprob: -5.218085289001465
    10. '   ' → logprob: -5.218085289001465

Token 81: ' not' (ID: 625)
  Prédit: ' freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' freq' → logprob: -0.04602719843387604
    2. ' len' → logprob: -3.796027183532715
    3. ' not' → logprob: -4.171027183532715
    4. 'freq' → logprob: -5.046027183532715
    5. ' ' → logprob: -7.671027183532715
    6. 'len' → logprob: -9.296027183532715
    7. ' max' → logprob: -10.421027183532715
    8. ' fre' → logprob: -10.921027183532715
    9. '(freq' → logprob: -11.171027183532715
    10. ' sorted' → logprob: -11.671027183532715

Token 82: ' freq' (ID: 42078)
  Prédit: ' freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' freq' → logprob: -0.001707659917883575
    2. 'freq' → logprob: -6.376707553863525
    3. '(freq' → logprob: -12.251708030700684
    4. ' fre' → logprob: -15.126708030700684
    5. ' ' → logprob: -15.876708030700684
    6. ' ' → logprob: -16.001707077026367
    7. ' frequency' → logprob: -16.001707077026367
    8. ' len' → logprob: -17.126707077026367
    9. ' frequ' → logprob: -17.376707077026367
    10. '.freq' → logprob: -18.126707077026367

Token 83: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.117345684382599e-05
    2. '.keys' → logprob: -11.750020980834961
    3. ':
' → logprob: -12.125020980834961
    4. '.' → logprob: -12.500020980834961
    5. '.setdefault' → logprob: -13.625020980834961
    6. ':return' → logprob: -14.000020980834961
    7. '.values' → logprob: -14.500020980834961
    8. ' :' → logprob: -14.625020980834961
    9. ' or' → logprob: -15.750020980834961
    10. '):' → logprob: -15.875020980834961

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006288875825703144
    2. ':' → logprob: -5.131289005279541
    3. '   ' → logprob: -8.756288528442383
    4. ' continue' → logprob: -9.256288528442383
    5. '    ' → logprob: -10.006288528442383
    6. '     ' → logprob: -10.756288528442383
    7. ':
' → logprob: -11.631288528442383
    8. ' print' → logprob: -11.756288528442383
    9. '      ' → logprob: -12.131288528442383
    10. 'continue' → logprob: -12.256288528442383

Token 85: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.48092037439346313
    2. '   ' → logprob: -1.2309203147888184
    3. 'print' (adapté à ' print') → logprob: -2.4809203147888184
    4. ' continue' → logprob: -5.730920314788818
    5. '    ' → logprob: -6.855920314788818
    6. '       ' → logprob: -7.105920314788818
    7. '    
' → logprob: -8.105920791625977
    8. 'continue' → logprob: -8.230920791625977
    9. ' 
' → logprob: -9.230920791625977
    10. '\n' → logprob: -9.980920791625977

Token 86: '("' (ID: 568)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5271853804588318
    2. '(' → logprob: -1.6521854400634766
    3. '('' → logprob: -2.2771854400634766
    4. '("' → logprob: -2.5271854400634766
    5. '(-' → logprob: -3.7771854400634766
    6. '(None' → logprob: -5.027185440063477
    7. '("")' → logprob: -5.277185440063477
    8. '(False' → logprob: -7.652185440063477
    9. '("("' → logprob: -8.652185440063477
    10. '("(' → logprob: -9.777185440063477

Token 87: 'NA' (ID: 9555)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.7063770294189453
    2. '0' → logprob: -1.8313770294189453
    3. '-' → logprob: -2.5813770294189453
    4. 'Not' → logprob: -2.7063770294189453
    5. 'None' → logprob: -3.2063770294189453
    6. 'なし' → logprob: -3.9563770294189453
    7. 'NA' → logprob: -4.206377029418945
    8. 'NO' → logprob: -4.206377029418945
    9. 'v' → logprob: -4.331377029418945
    10. '{}' → logprob: -4.706377029418945

Token 88: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.024004705250263214
    2. '")
' → logprob: -3.7740046977996826
    3. ')' → logprob: -7.399004936218262
    4. '")
' → logprob: -9.149004936218262
    5. ')")' → logprob: -10.899004936218262
    6. '"' → logprob: -11.524004936218262
    7. ')
' → logprob: -12.024004936218262
    8. ')")
' → logprob: -13.024004936218262
    9. '')' → logprob: -13.274004936218262
    10. '\n' → logprob: -14.274004936218262

Token 89: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001553547801449895
    2. 'else' → logprob: -7.126553535461426
    3. ' else' → logprob: -7.251553535461426
    4. '       ' → logprob: -11.376553535461426
    5. '<|end|>' → logprob: -11.751553535461426
    6. '    
' → logprob: -12.001553535461426
    7. '	else' → logprob: -12.001553535461426
    8. ' ' → logprob: -12.501553535461426
    9. ')' → logprob: -14.001553535461426
    10. '  ' → logprob: -14.126553535461426

Token 90: ' continue' (ID: 4901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007748232688754797
    2. '       ' → logprob: -5.632748126983643
    3. 'else' → logprob: -5.757748126983643
    4. ' else' → logprob: -7.132748126983643
    5. 'continue' (adapté à ' continue') → logprob: -8.8827486038208
    6. ' continue' → logprob: -10.3827486038208
    7. '	continue' → logprob: -12.2577486038208
    8. ' ' → logprob: -12.8827486038208
    9. '	else' → logprob: -13.8827486038208
    10. 'elif' → logprob: -14.3827486038208

Token 91: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01860077865421772
    2. '    
' → logprob: -4.268600940704346
    3. '
' → logprob: -5.518600940704346
    4. '   
' → logprob: -9.268600463867188
    5. '  
' → logprob: -9.768600463867188
    6. ' 
' → logprob: -10.018600463867188
    7. 'print' → logprob: -10.268600463867188
    8. '        
' → logprob: -10.518600463867188
    9. '<|end|>' → logprob: -10.643600463867188
    10. '    ' → logprob: -10.768600463867188

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001148313982412219
    2. '    
' → logprob: -7.001148223876953
    3. '    ' → logprob: -9.251148223876953
    4. 'print' → logprob: -10.376148223876953
    5. ' sorted' → logprob: -10.376148223876953
    6. ' print' → logprob: -11.251148223876953
    7. 'sorted' → logprob: -11.251148223876953
    8. '
' → logprob: -11.376148223876953
    9. '  ' → logprob: -11.876148223876953
    10. ' else' → logprob: -12.751148223876953

Token 93: ' sorted' (ID: 20099)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5838412046432495
    2. 'max' → logprob: -1.7088412046432495
    3. ' max' → logprob: -1.9588412046432495
    4. 'sorted' (adapté à ' sorted') → logprob: -3.833841323852539
    5. ' sorted' → logprob: -3.958841323852539
    6. 'print' → logprob: -3.958841323852539
    7. ' for' → logprob: -4.333841323852539
    8. 'm' → logprob: -4.333841323852539
    9. 'for' → logprob: -4.458841323852539
    10. ' print' → logprob: -4.958841323852539

Token 94: '_words' (ID: 45077)
  Prédit: '_freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_freq' → logprob: -0.8314257264137268
    2. '_items' → logprob: -1.081425666809082
    3. '_words' → logprob: -1.581425666809082
    4. '_' → logprob: -4.081425666809082
    5. '_tokens' → logprob: -6.456425666809082
    6. '_keys' → logprob: -8.331425666809082
    7. '_w' → logprob: -8.706425666809082
    8. '_list' → logprob: -8.706425666809082
    9. '(' → logprob: -8.831425666809082
    10. '_f' → logprob: -9.206425666809082

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11401163786649704
    2. '=' → logprob: -2.239011526107788
    3. '_items' → logprob: -6.864011764526367
    4. '(' → logprob: -9.239011764526367
    5. 's' → logprob: -11.364011764526367
    6. 'items' → logprob: -11.989011764526367
    7. '_sorted' → logprob: -12.239011764526367
    8. '_' → logprob: -12.489011764526367
    9. '(sorted' → logprob: -12.489011764526367
    10. '_=' → logprob: -12.989011764526367

Token 96: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.47410649061203003
    2. 'sorted' → logprob: -0.97410649061203
    3. '(sorted' → logprob: -10.849106788635254
    4. '   ' → logprob: -11.849106788635254
    5. '[' → logprob: -13.349106788635254
    6. ' ' → logprob: -13.974106788635254
    7. '.sorted' → logprob: -15.349106788635254
    8. 's' → logprob: -17.224105834960938
    9. ' [' → logprob: -17.474105834960938
    10. '[]' → logprob: -17.724105834960938

Token 97: '(freq' (ID: 157195)
  Prédit: '(freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(freq' → logprob: -0.004099416080862284
    2. '(' → logprob: -5.504099369049072
    3. '((' → logprob: -11.50409984588623
    4. 'freq' → logprob: -11.75409984588623
    5. ' (' → logprob: -13.37909984588623
    6. '(
' → logprob: -13.75409984588623
    7. '([(' → logprob: -16.004098892211914
    8. '_freq' → logprob: -16.629098892211914
    9. '(

' → logprob: -17.254098892211914
    10. '(list' → logprob: -17.379098892211914

Token 98: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.004628888331353664
    2. 'items' → logprob: -5.504628658294678
    3. '(items' → logprob: -8.879629135131836
    4. '(key' → logprob: -9.129629135131836
    5. ' items' → logprob: -9.379629135131836
    6. '().' → logprob: -9.754629135131836
    7. ',key' → logprob: -10.129629135131836
    8. ')' → logprob: -10.504629135131836
    9. ',' → logprob: -10.504629135131836
    10. '.key' → logprob: -10.879629135131836

Token 99: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.1360441893339157
    2. '(key' → logprob: -2.1360442638397217
    3. '())' → logprob: -5.511044025421143
    4. '(lambda' → logprob: -5.886044025421143
    5. '()' → logprob: -6.886044025421143
    6. '(' → logprob: -7.636044025421143
    7. ',key' → logprob: -7.761044025421143
    8. ',' → logprob: -8.7610445022583
    9. '(reverse' → logprob: -9.8860445022583
    10. 'key' → logprob: -10.1360445022583

Token 100: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.201570525765419
    2. 'key' → logprob: -1.7015705108642578
    3. 'lambda' → logprob: -9.201570510864258
    4. ' lambda' → logprob: -9.951570510864258
    5. '   ' → logprob: -12.451570510864258
    6. '(key' → logprob: -12.701570510864258
    7. 'reverse' → logprob: -14.201570510864258
    8. '	key' → logprob: -14.701570510864258
    9. ' reverse' → logprob: -15.326570510864258
    10. ',key' → logprob: -15.326570510864258

Token 101: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0005533903022296727
    2. '=' → logprob: -7.500553607940674
    3. 'lambda' → logprob: -15.000553131103516
    4. '=
' → logprob: -17.250553131103516
    5. ' lambda' → logprob: -18.375553131103516
    6. '(lambda' → logprob: -20.000553131103516
    7. '=

' → logprob: -20.625553131103516
    8. '=}' → logprob: -21.000553131103516
    9. '=*/' → logprob: -21.250553131103516
    10. '=_' → logprob: -21.375553131103516

Token 102: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.14487797021865845
    2. ' lambda' → logprob: -2.3948779106140137
    3. 'x' → logprob: -3.7698779106140137
    4. ' item' → logprob: -4.019877910614014
    5. '=lambda' → logprob: -6.769877910614014
    6. 'lambda' → logprob: -6.894877910614014
    7. 'item' → logprob: -8.019878387451172
    8. ' e' → logprob: -9.769878387451172
    9. ' s' → logprob: -10.519878387451172
    10. ' kv' → logprob: -11.144878387451172

Token 103: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.2617008400848135e-05
    2. ' :' → logprob: -11.000032424926758
    3. ':x' → logprob: -11.250032424926758
    4. 'x' → logprob: -13.000032424926758
    5. ':
' → logprob: -15.375032424926758
    6. ':(' → logprob: -15.625032424926758
    7. ' x' → logprob: -17.125032424926758
    8. '[' → logprob: -17.375032424926758
    9. '_:' → logprob: -17.625032424926758
    10. '```' → logprob: -17.750032424926758

Token 104: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.11631112545728683
    2. ' (-' → logprob: -2.2413110733032227
    3. 'x' → logprob: -5.991311073303223
    4. ' x' → logprob: -7.741311073303223
    5. ' -' → logprob: -8.616311073303223
    6. '(' → logprob: -8.866311073303223
    7. ' (' → logprob: -9.241311073303223
    8. '(x' → logprob: -9.366311073303223
    9. '-x' → logprob: -10.366311073303223
    10. '-' → logprob: -12.241311073303223

Token 105: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.836499985889532e-05
    2. ' x' → logprob: -9.7500581741333
    3. ')x' → logprob: -18.000059127807617
    4. '(x' → logprob: -19.125059127807617
    5. '	x' → logprob: -19.625059127807617
    6. ')' → logprob: -20.875059127807617
    7. '
' → logprob: -21.500059127807617
    8. '   ' → logprob: -21.875059127807617
    9. '"x' → logprob: -22.562559127807617
    10. ' ' → logprob: -22.687559127807617

Token 106: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0921942703134846e-05
    2. '1' → logprob: -12.00001049041748
    3. ' [' → logprob: -12.75001049041748
    4. ' ' → logprob: -14.62501049041748
    5. 'x' → logprob: -14.87501049041748
    6. '[
' → logprob: -15.12501049041748
    7. ')' → logprob: -15.37501049041748
    8. ',' → logprob: -16.125011444091797
    9. '][' → logprob: -16.375011444091797
    10. '```' → logprob: -16.500011444091797

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029744720086455345
    2. '[' → logprob: -8.125297546386719
    3. 'x' → logprob: -13.750297546386719
    4. ' ' → logprob: -15.625297546386719
    5. '```' → logprob: -16.87529754638672
    6. '
' → logprob: -18.00029754638672
    7. '{' → logprob: -18.06279754638672
    8. '`' → logprob: -18.31279754638672
    9. '11' → logprob: -18.31279754638672
    10. '0' → logprob: -18.62529754638672

Token 108: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -8.959636033978313e-05
    2. ',x' → logprob: -10.000089645385742
    3. ' ,' → logprob: -10.125089645385742
    4. '),' → logprob: -13.875089645385742
    5. ')' → logprob: -14.875089645385742
    6. ',n' → logprob: -15.000089645385742
    7. ',)' → logprob: -15.125089645385742
    8. '‌,' → logprob: -15.250089645385742
    9. ',w' → logprob: -16.000089645385742
    10. ',
' → logprob: -16.000089645385742

Token 109: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.17983266711235046
    2. 'x' → logprob: -1.8048326969146729
    3. 'len' → logprob: -9.804832458496094
    4. ' len' → logprob: -10.554832458496094
    5. 'ord' → logprob: -12.554832458496094
    6. ' ' → logprob: -13.554832458496094
    7. ' ord' → logprob: -14.054832458496094
    8. '    ' → logprob: -15.304832458496094
    9. '	x' → logprob: -15.429832458496094
    10. ')' → logprob: -15.554832458496094

Token 110: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5048530030981055e-06
    2. '[
' → logprob: -14.375001907348633
    3. ' [' → logprob: -14.750001907348633
    4. ')' → logprob: -15.250001907348633
    5. '0' → logprob: -16.375001907348633
    6. '```' → logprob: -17.000001907348633
    7. 'x' → logprob: -17.750001907348633
    8. '
' → logprob: -17.750001907348633
    9. ')[' → logprob: -18.062501907348633
    10. ' ' → logprob: -18.125001907348633

Token 111: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013643606507685035
    2. '[' → logprob: -9.875136375427246
    3. '1' → logprob: -10.000136375427246
    4. ' ' → logprob: -10.250136375427246
    5. 'x' → logprob: -12.875136375427246
    6. '   ' → logprob: -15.000136375427246
    7. ')' → logprob: -15.687636375427246
    8. '.' → logprob: -16.000137329101562
    9. '۰' → logprob: -16.062637329101562
    10. '`' → logprob: -16.312637329101562

Token 112: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0002888682356569916
    2. ')' → logprob: -8.750288963317871
    3. '[' → logprob: -9.875288963317871
    4. ' ))' → logprob: -10.125288963317871
    5. '))
' → logprob: -10.625288963317871
    6. '),' → logprob: -12.250288963317871
    7. '[]' → logprob: -12.625288963317871
    8. ')))' → logprob: -13.000288963317871
    9. ' ' → logprob: -13.625288963317871
    10. '))

' → logprob: -14.875288963317871

Token 113: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08529384434223175
    2. 'for' → logprob: -3.335293769836426
    3. '   ' → logprob: -3.960293769836426
    4. '[' → logprob: -4.460293769836426
    5. '
' → logprob: -4.585293769836426
    6. ')' → logprob: -6.335293769836426
    7. ')
' → logprob: -6.960293769836426
    8. ' print' → logprob: -7.585293769836426
    9. '    
' → logprob: -7.710293769836426
    10. ' for' → logprob: -7.710293769836426

Token 114: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08244899660348892
    2. 'print' (adapté à ' print') → logprob: -2.582448959350586
    3. 'if' → logprob: -6.582448959350586
    4. ' for' → logprob: -6.957448959350586
    5. '   ' → logprob: -7.582448959350586
    6. 'max' → logprob: -8.457448959350586
    7. '[' → logprob: -8.957448959350586
    8. 'count' → logprob: -9.207448959350586
    9. 'result' → logprob: -9.582448959350586
    10. 'top' → logprob: -10.207448959350586

Token 115: '("' (ID: 568)
  Prédit: '(sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.0015142656629905105
    2. '(' → logprob: -6.501514434814453
    3. ' (' → logprob: -12.126514434814453
    4. 'sorted' → logprob: -12.501514434814453
    5. '((' → logprob: -14.501514434814453
    6. '("("' → logprob: -14.626514434814453
    7. '('' → logprob: -14.876514434814453
    8. '(sort' → logprob: -15.001514434814453
    9. '(len' → logprob: -15.251514434814453
    10. '(s' → logprob: -15.251514434814453

Token 116: ' ".' (ID: 11730)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.00046951865078881383
    2. '(sorted' → logprob: -7.87546968460083
    3. ' sorted' → logprob: -9.625469207763672
    4. '"' → logprob: -11.375469207763672
    5. '",' → logprob: -12.125469207763672
    6. '{}' → logprob: -13.000469207763672
    7. '.sorted' → logprob: -13.875469207763672
    8. '{' → logprob: -13.875469207763672
    9. '   ' → logprob: -14.000469207763672
    10. '")' → logprob: -14.750469207763672

Token 117: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.0921942703134846e-05
    2. 'print' → logprob: -11.62501049041748
    3. ' join' → logprob: -14.50001049041748
    4. 'jo' → logprob: -14.87501049041748
    5. 'strip' → logprob: -14.87501049041748
    6. 'write' → logprob: -15.00001049041748
    7. 'sep' → logprob: -15.87501049041748
    8. 'split' → logprob: -16.125011444091797
    9. 'j' → logprob: -17.250011444091797
    10. ' ' → logprob: -17.625011444091797

Token 118: '(w' (ID: 7420)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.06599245965480804
    2. '(w' → logprob: -3.0659923553466797
    3. '(word' → logprob: -4.19099235534668
    4. '[w' → logprob: -6.31599235534668
    5. '[word' → logprob: -8.81599235534668
    6. '(x' → logprob: -9.19099235534668
    7. '(pair' → logprob: -10.94099235534668
    8. '(' → logprob: -11.69099235534668
    9. '(item' → logprob: -12.06599235534668
    10. '[x' → logprob: -12.44099235534668

Token 119: ' for' (ID: 395)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09784579277038574
    2. 'for' → logprob: -2.7228457927703857
    3. ' for' → logprob: -3.5978457927703857
    4. ' [' → logprob: -9.597846031188965
    5. 'w' → logprob: -9.972846031188965
    6. '[w' → logprob: -11.597846031188965
    7. '[word' → logprob: -12.597846031188965
    8. '_[' → logprob: -12.847846031188965
    9. 'e' → logprob: -13.722846031188965
    10. 't' → logprob: -13.722846031188965

Token 120: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0005544631858356297
    2. ' w' → logprob: -7.50055456161499
    3. '(w' → logprob: -14.000554084777832
    4. ',' → logprob: -14.875554084777832
    5. ',w' → logprob: -15.000554084777832
    6. '	w' → logprob: -17.00055503845215
    7. '_w' → logprob: -18.62555503845215
    8. ' (' → logprob: -20.00055503845215
    9. '_,' → logprob: -20.37555503845215
    10. 'v' → logprob: -20.50055503845215

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00136368942912668
    2. ',w' → logprob: -7.626363754272461
    3. ',_' → logprob: -7.751363754272461
    4. ',f' → logprob: -7.751363754272461
    5. ',v' → logprob: -12.001363754272461
    6. ',count' → logprob: -12.876363754272461
    7. ',
' → logprob: -14.001363754272461
    8. 'w' → logprob: -14.001363754272461
    9. ',c' → logprob: -14.501363754272461
    10. ' ,' → logprob: -14.501363754272461

Token 122: ' c' (ID: 274)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1077875867486
    2. '_count' → logprob: -2.607787609100342
    3. '_c' → logprob: -4.357787609100342
    4. ' _' → logprob: -4.857787609100342
    5. '_f' → logprob: -5.607787609100342
    6. '_freq' → logprob: -6.232787609100342
    7. 'count' → logprob: -6.607787609100342
    8. 'freq' → logprob: -8.107787132263184
    9. 'c' → logprob: -8.232787132263184
    10. '_cnt' → logprob: -8.607787132263184

Token 123: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04864414036273956
    2. 'in' → logprob: -3.0486440658569336
    3. ')' → logprob: -10.423644065856934
    4. 'n' → logprob: -10.923644065856934
    5. ',' → logprob: -12.923644065856934
    6. ' ' → logprob: -13.173644065856934
    7. '	in' → logprob: -14.673644065856934
    8. 's' → logprob: -14.798644065856934
    9. 'inthe' → logprob: -14.798644065856934
    10. '<|end|>' → logprob: -14.923644065856934

Token 124: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.47408682107925415
    2. 'sorted' → logprob: -0.9740868210792542
    3. '(sorted' → logprob: -12.59908676147461
    4. ' ' → logprob: -12.72408676147461
    5. '_sorted' → logprob: -13.59908676147461
    6. '.sorted' → logprob: -13.84908676147461
    7. '   ' → logprob: -14.84908676147461
    8. 'orted' → logprob: -15.34908676147461
    9. 'Sorted' → logprob: -15.59908676147461
    10. '
' → logprob: -15.84908676147461

Token 125: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -0.00038145645521581173
    2. '_items' → logprob: -8.250381469726562
    3. 'sorted' → logprob: -9.375381469726562
    4. 'freq' → logprob: -11.250381469726562
    5. '(sorted' → logprob: -12.125381469726562
    6. '(freq' → logprob: -12.625381469726562
    7. ')' → logprob: -12.750381469726562
    8. 'words' → logprob: -13.250381469726562
    9. '_freq' → logprob: -13.375381469726562
    10. '_sorted' → logprob: -13.375381469726562

Token 126: '[:' (ID: 7808)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -9.29340603761375e-05
    2. ')' → logprob: -9.375092506408691
    3. ')))' → logprob: -12.500092506408691
    4. ' ))' → logprob: -13.125092506408691
    5. '))
' → logprob: -14.125092506408691
    6. '[' → logprob: -14.500092506408691
    7. '()))' → logprob: -14.625092506408691
    8. '),' → logprob: -15.250092506408691
    9. '[:' → logprob: -15.875092506408691
    10. '));' → logprob: -16.750093460083008

Token 127: '5' (ID: 20)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7085016369819641
    2. '3' → logprob: -1.2085015773773193
    3. '5' → logprob: -1.5835015773773193
    4. '2' → logprob: -6.833501815795898
    5. '1' → logprob: -6.833501815795898
    6. '7' → logprob: -7.958501815795898
    7. '20' → logprob: -7.958501815795898
    8. '4' → logprob: -8.458501815795898
    9. '25' → logprob: -8.583501815795898
    10. ' ' → logprob: -9.583501815795898

Token 128: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.012641615234315395
    2. ']))' → logprob: -4.512641429901123
    3. ')' → logprob: -7.262641429901123
    4. ')))' → logprob: -7.637641429901123
    5. '])' → logprob: -7.887641429901123
    6. '}))' → logprob: -11.262641906738281
    7. ')])' → logprob: -11.512641906738281
    8. '))
' → logprob: -12.512641906738281
    9. ')]' → logprob: -13.262641906738281
    10. ' ))' → logprob: -13.512641906738281


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 126
Tokens correctement prédits (1ère position, stricte): 61
Tokens correctement prédits (1ère position, avec adaptation): 63
Tokens correctement prédits (top 10): 110
Précision stricte (1ère position): 48.41%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 87.30%
================================================================================
