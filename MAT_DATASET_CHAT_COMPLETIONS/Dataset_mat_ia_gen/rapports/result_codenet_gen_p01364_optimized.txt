================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

for line in sys.stdin:
    if not line.strip():
        continue
    N,D=map(int,line.split())
    if N==0 and D==0:
        break
    x=y=theta=0.0
    for _ in range(N):
        Lspeed,Rspeed,time=map(int,sys.stdin.readline().split())
        Lv=math.radians(Lspeed)*time
        Rv=math.radians(Rspeed)*time
        v=(Lv+Rv)*0.5*D
        w=(Rv-Lv)/(2*D)
        if abs(w)<1e-15:
            x+=v*math.cos(theta)
            y+=v*math.sin(theta)
        else:
            r=v/w
            x+=r*(math.sin(theta+w)-math.sin(theta))
            y+=r*(-math.cos(theta+w)+math.cos(theta))
            theta+=w
    print(f"{x:.5f}")
    print(f"{y:.5f}")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -17.000125885009766

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2752407193183899
    2. '\n' → logprob: -2.775240659713745
    3. 'import' → logprob: -3.025240659713745
    4. '<|end|>' → logprob: -3.275240659713745
    5. '\' → logprob: -3.400240659713745
    6. '
' → logprob: -3.650240659713745
    7. '```' → logprob: -4.400240898132324
    8. '

' → logprob: -5.275240898132324
    9. '<|end|>' → logprob: -5.275240898132324
    10. ',' → logprob: -5.900240898132324

Token 6: 'for' (ID: 1938)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.22251643240451813
    2. '```' → logprob: -2.9725165367126465
    3. '\' → logprob: -3.0975165367126465
    4. '\n' → logprob: -3.2225165367126465
    5. 'import' → logprob: -3.4725165367126465
    6. ',' → logprob: -4.5975165367126465
    7. 'def' → logprob: -5.7225165367126465
    8. '*' → logprob: -5.8475165367126465
    9. '#' → logprob: -5.8475165367126465
    10. '(' → logprob: -6.2225165367126465

Token 7: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0007032568100839853
    2. '  ' → logprob: -7.37570333480835
    3. ' i' → logprob: -9.625702857971191
    4. ' ```' → logprob: -13.125702857971191
    5. ' space' → logprob: -13.500702857971191
    6. 'space' → logprob: -13.625702857971191
    7. '_' → logprob: -14.125702857971191
    8. ' ‌' → logprob: -14.250702857971191
    9. ' ▁' → logprob: -14.625702857971191
    10. ' s' → logprob: -14.625702857971191

Token 8: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.287424772977829
    2. 'in' → logprob: -1.4124248027801514
    3. '[' → logprob: -6.412424564361572
    4. ':' → logprob: -6.912424564361572
    5. '.' → logprob: -7.162424564361572
    6. 's' → logprob: -7.537424564361572
    7. '(' → logprob: -7.912424564361572
    8. '_in' → logprob: -8.03742504119873
    9. '<|end|>' → logprob: -8.16242504119873
    10. ' ' → logprob: -8.41242504119873

Token 9: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.009867997840046883
    2. 'sys' → logprob: -4.634868144989014
    3. '=sys' → logprob: -9.759867668151855
    4. ' iter' → logprob: -11.509867668151855
    5. '	sys' → logprob: -11.634867668151855
    6. '(sys' → logprob: -11.634867668151855
    7. ' ' → logprob: -12.009867668151855
    8. ' file' → logprob: -12.259867668151855
    9. ' open' → logprob: -12.384867668151855
    10. '```' → logprob: -12.634867668151855

Token 10: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3360811769962311
    2. '.stdin' → logprob: -1.3360811471939087
    3. '.readline' → logprob: -4.586081027984619
    4. '.argv' → logprob: -4.711081027984619
    5. '.stdout' → logprob: -6.211081027984619
    6. ' .' → logprob: -6.961081027984619
    7. '.input' → logprob: -8.961081504821777
    8. '.import' → logprob: -9.461081504821777
    9. '.stderr' → logprob: -10.211081504821777
    10. '.readlines' → logprob: -10.586081504821777

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012483276659622788
    2. '.readline' → logprob: -7.251248359680176
    3. '.' → logprob: -8.376248359680176
    4. ':
' → logprob: -8.626248359680176
    5. ' :' → logprob: -10.501248359680176
    6. '):' → logprob: -11.126248359680176
    7. ':**' → logprob: -11.126248359680176
    8. '.readlines' → logprob: -11.126248359680176
    9. '[:]' → logprob: -11.751248359680176
    10. '>:' → logprob: -12.251248359680176

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001234399271197617
    2. '    
' → logprob: -7.251234531402588
    3. '    ' → logprob: -8.75123405456543
    4. ' if' → logprob: -9.25123405456543
    5. ' readline' → logprob: -9.62623405456543
    6. ' ' → logprob: -10.12623405456543
    7. '```' → logprob: -10.50123405456543
    8. ' print' → logprob: -10.50123405456543
    9. ' line' → logprob: -11.12623405456543
    10. '   ' → logprob: -11.12623405456543

Token 13: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06617322564125061
    2. ' line' → logprob: -2.8161733150482178
    3. 'line' → logprob: -6.191173076629639
    4. ' if' → logprob: -7.316173076629639
    5. ' print' → logprob: -7.566173076629639
    6. ' stripped' → logprob: -7.566173076629639
    7. 'print' → logprob: -8.316173553466797
    8. ' data' → logprob: -9.941173553466797
    9. '    ' → logprob: -10.441173553466797
    10. 'data' → logprob: -10.816173553466797

Token 14: ' not' (ID: 625)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5389244556427002
    2. ' not' → logprob: -1.1639244556427002
    3. ' ' → logprob: -2.2889244556427
    4. 'line' → logprob: -6.538924217224121
    5. ' len' → logprob: -7.163924217224121
    6. ''' → logprob: -8.288924217224121
    7. 'not' → logprob: -8.538924217224121
    8. '"' → logprob: -8.788924217224121
    9. '  ' → logprob: -10.163924217224121
    10. '	line' → logprob: -10.288924217224121

Token 15: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.000275040598353371
    2. 'line' → logprob: -8.250274658203125
    3. ' ' → logprob: -11.625274658203125
    4. '	line' → logprob: -12.500274658203125
    5. '(line' → logprob: -14.750274658203125
    6. '=line' → logprob: -15.000274658203125
    7. '#line' → logprob: -15.875274658203125
    8. ' ' → logprob: -16.500274658203125
    9. '[line' → logprob: -16.500274658203125
    10. ' linha' → logprob: -17.125274658203125

Token 16: '.strip' (ID: 40613)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08034183084964752
    2. '.strip' → logprob: -2.5803418159484863
    3. '.rstrip' → logprob: -6.830341815948486
    4. '.startswith' → logprob: -8.205342292785645
    5. ' .' → logprob: -9.455342292785645
    6. '.endswith' → logprob: -12.455342292785645
    7. '.readline' → logprob: -12.705342292785645
    8. '   ' → logprob: -12.705342292785645
    9. 'rstrip' → logprob: -13.455342292785645
    10. 'strip' → logprob: -13.580342292785645

Token 17: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0015142656629905105
    2. ':' → logprob: -6.626514434814453
    3. ' ():' → logprob: -9.251514434814453
    4. '()' → logprob: -10.001514434814453
    5. '():
' → logprob: -10.251514434814453
    6. '()==' → logprob: -12.751514434814453
    7. '().' → logprob: -13.001514434814453
    8. '(':' → logprob: -13.876514434814453
    9. ' :' → logprob: -13.876514434814453
    10. '):' → logprob: -14.001514434814453

Token 18: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013558330247178674
    2. '   ' → logprob: -6.7513556480407715
    3. ' continue' → logprob: -8.87635612487793
    4. ' break' → logprob: -10.62635612487793
    5. 'continue' → logprob: -11.00135612487793
    6. '    ' → logprob: -13.75135612487793
    7. '```' → logprob: -13.87635612487793
    8. 'break' → logprob: -14.12635612487793
    9. '           ' → logprob: -14.37635612487793
    10. '    ' → logprob: -15.12635612487793

Token 19: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.19739161431789398
    2. '       ' → logprob: -2.1973915100097656
    3. '   ' → logprob: -2.8223915100097656
    4. 'break' → logprob: -5.072391510009766
    5. ' continue' → logprob: -6.197391510009766
    6. 'continue' (adapté à ' continue') → logprob: -8.822391510009766
    7. '	break' → logprob: -10.072391510009766
    8. '```' → logprob: -10.072391510009766
    9. ' ' → logprob: -10.947391510009766
    10. '    ' → logprob: -11.572391510009766

Token 20: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0068660941906273365
    2. '    
' → logprob: -5.006865978240967
    3. '        
' → logprob: -10.006866455078125
    4. '
' → logprob: -10.131866455078125
    5. '```' → logprob: -10.881866455078125
    6. '       ' → logprob: -12.006866455078125
    7. '     
' → logprob: -12.006866455078125
    8. '    ' → logprob: -12.131866455078125
    9. '   
' → logprob: -12.381866455078125
    10. '    
    
' → logprob: -12.381866455078125

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002273774443892762
    2. '    
' → logprob: -8.500226974487305
    3. '```' → logprob: -11.125226974487305
    4. '       ' → logprob: -13.375226974487305
    5. ':' → logprob: -13.375226974487305
    6. 'print' → logprob: -13.625226974487305
    7. '        
' → logprob: -14.250226974487305
    8. '
' → logprob: -14.375226974487305
    9. '    
' → logprob: -14.750226974487305
    10. 'for' → logprob: -14.750226974487305

Token 22: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03251143917441368
    2. 'data' → logprob: -4.032511234283447
    3. 'value' → logprob: -6.032511234283447
    4. 'result' → logprob: -6.282511234283447
    5. ' numbers' → logprob: -6.407511234283447
    6. 'tokens' → logprob: -6.407511234283447
    7. 'numbers' → logprob: -6.532511234283447
    8. 'values' → logprob: -6.657511234283447
    9. ' data' → logprob: -6.782511234283447
    10. ' values' → logprob: -7.782511234283447

Token 23: ',D' (ID: 61507)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008373674005270004
    2. '=' → logprob: -4.883373737335205
    3. ',' → logprob: -7.383373737335205
    4. ' ' → logprob: -9.258373260498047
    5. '=int' → logprob: -10.508373260498047
    6. ' ,' → logprob: -11.508373260498047
    7. ')' → logprob: -12.258373260498047
    8. '.' → logprob: -13.133373260498047
    9. ' ==' → logprob: -13.508373260498047
    10. ' =
' → logprob: -13.883373260498047

Token 24: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10052496194839478
    2. '=' → logprob: -2.35052490234375
    3. ',' → logprob: -8.10052490234375
    4. '=int' → logprob: -12.22552490234375
    5. ' ' → logprob: -12.47552490234375
    6. ' ,' → logprob: -12.47552490234375
    7. '=input' → logprob: -14.47552490234375
    8. '=line' → logprob: -14.72552490234375
    9. ')' → logprob: -15.10052490234375
    10. ' =
' → logprob: -15.60052490234375

Token 25: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.323089599609375
    2. ' map' → logprob: -1.448089599609375
    3. 'line' → logprob: -3.448089599609375
    4. ' line' → logprob: -4.698089599609375
    5. 'list' → logprob: -9.073089599609375
    6. '[' → logprob: -11.323089599609375
    7. '[line' → logprob: -11.948089599609375
    8. ' list' → logprob: -12.323089599609375
    9. '(map' → logprob: -12.323089599609375
    10. ' [' → logprob: -12.823089599609375

Token 26: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.006070048548281193
    2. '(' → logprob: -5.256070137023926
    3. '(str' → logprob: -7.381070137023926
    4. '(lambda' → logprob: -8.506070137023926
    5. '[int' → logprob: -12.381070137023926
    6. 'int' → logprob: -13.006070137023926
    7. '<int' → logprob: -13.131070137023926
    8. ' (' → logprob: -14.756070137023926
    9. '(
' → logprob: -14.881070137023926
    10. ',int' → logprob: -15.506070137023926

Token 27: ',line' (ID: 171132)
  Prédit: ',line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',line' → logprob: -0.5147452354431152
    2. ',' → logprob: -1.0147452354431152
    3. '(line' → logprob: -3.2647452354431152
    4. ' line' → logprob: -7.264745235443115
    5. ' ,' → logprob: -7.389745235443115
    6. ')' → logprob: -8.889745712280273
    7. 'line' → logprob: -9.764745712280273
    8. '#line' → logprob: -10.139745712280273
    9. '=line' → logprob: -10.264745712280273
    10. '[line' → logprob: -10.639745712280273

Token 28: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.5964101552963257
    2. '.strip' → logprob: -0.8464101552963257
    3. '.' → logprob: -3.9714102745056152
    4. '().' → logprob: -6.971410274505615
    5. '.rstrip' → logprob: -8.846409797668457
    6. ')' → logprob: -9.221409797668457
    7. ').' → logprob: -9.471409797668457
    8. ' .' → logprob: -9.596409797668457
    9. '.readline' → logprob: -9.721409797668457
    10. 'split' → logprob: -11.721409797668457

Token 29: '())
' (ID: 4574)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.25552669167518616
    2. '())' → logprob: -1.6305266618728638
    3. '(','' → logprob: -3.7555267810821533
    4. ')' → logprob: -6.005526542663574
    5. '()' → logprob: -6.380526542663574
    6. '(' → logprob: -6.630526542663574
    7. '("' → logprob: -7.755526542663574
    8. '(',' → logprob: -8.630526542663574
    9. '()))' → logprob: -9.880526542663574
    10. '())
' → logprob: -10.255526542663574

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7538900971412659
    2. '
' → logprob: -1.628890037536621
    3. ':' → logprob: -2.628890037536621
    4. '    
' → logprob: -2.628890037536621
    5. 'for' → logprob: -3.003890037536621
    6. '<|end|>' → logprob: -3.128890037536621
    7. ')' → logprob: -4.128890037536621
    8. '```' → logprob: -4.628890037536621
    9. ' for' → logprob: -4.753890037536621
    10. ' if' → logprob: -4.878890037536621

Token 31: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7317180037498474
    2. '   ' → logprob: -1.6067180633544922
    3. '    
' → logprob: -2.856718063354492
    4. '<|end|>' → logprob: -2.856718063354492
    5. ' 
' → logprob: -3.231718063354492
    6. ')' → logprob: -3.981718063354492
    7. '    ' → logprob: -3.981718063354492
    8. 'result' → logprob: -4.356718063354492
    9. '
' → logprob: -4.481718063354492
    10. ':' → logprob: -4.731718063354492

Token 32: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.39495474100112915
    2. ' D' → logprob: -1.5199546813964844
    3. 'N' → logprob: -2.3949546813964844
    4. 'D' → logprob: -4.144954681396484
    5. ' ' → logprob: -7.769954681396484
    6. ' math' → logprob: -9.644954681396484
    7. ' abs' → logprob: -11.144954681396484
    8. ' not' → logprob: -11.269954681396484
    9. ' (' → logprob: -12.207454681396484
    10. 'math' → logprob: -12.519954681396484

Token 33: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.1576976776123047
    2. ' >' → logprob: -1.1576976776123047
    3. '==' → logprob: -1.9076976776123047
    4. '>' → logprob: -2.4076976776123047
    5. ' <' → logprob: -3.0326976776123047
    6. ' <=' → logprob: -3.5326976776123047
    7. '<' → logprob: -3.9076976776123047
    8. '%' → logprob: -3.9076976776123047
    9. '<=' → logprob: -5.282697677612305
    10. ' %' → logprob: -5.782697677612305

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.062380146235227585
    2. ' ' → logprob: -2.812380075454712
    3. 'D' → logprob: -8.187379837036133
    4. '1' → logprob: -9.437379837036133
    5. ' D' → logprob: -9.937379837036133
    6. '-' → logprob: -13.062379837036133
    7. '2' → logprob: -14.812379837036133
    8. '  ' → logprob: -15.124879837036133
    9. '```' → logprob: -15.249879837036133
    10. '=' → logprob: -15.374879837036133

Token 35: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05636867880821228
    2. 'and' → logprob: -2.931368589401245
    3. ':' → logprob: -6.931368827819824
    4. ' ' → logprob: -7.806368827819824
    5. ' a' → logprob: -9.806368827819824
    6. ' or' → logprob: -10.306368827819824
    7. '	and' → logprob: -12.681368827819824
    8. ' an' → logprob: -13.181368827819824
    9. ' :' → logprob: -13.431368827819824
    10. 'a' → logprob: -13.681368827819824

Token 36: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.0243932344019413
    2. 'D' → logprob: -3.774393320083618
    3. ' ' → logprob: -6.774393081665039
    4. '<|end|>' → logprob: -12.899393081665039
    5. '  ' → logprob: -13.774393081665039
    6. '	D' → logprob: -15.149393081665039
    7. ' ' → logprob: -15.399393081665039
    8. '<D' → logprob: -15.899393081665039
    9. '>D' → logprob: -16.71189308166504
    10. '<|end|>' → logprob: -16.89939308166504

Token 37: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0011767742689698935
    2. ' ==' → logprob: -6.751176834106445
    3. '=' → logprob: -12.626176834106445
    4. '<|end|>' → logprob: -13.751176834106445
    5. '==-' → logprob: -14.376176834106445
    6. '0' → logprob: -14.501176834106445
    7. ']==' → logprob: -15.376176834106445
    8. '==
' → logprob: -15.501176834106445
    9. ')==' → logprob: -15.751176834106445
    10. '()==' → logprob: -15.876176834106445

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002622894535306841
    2. ' ' → logprob: -8.250262260437012
    3. '  ' → logprob: -15.000262260437012
    4. '-' → logprob: -15.562762260437012
    5. '<|end|>' → logprob: -15.750262260437012
    6. '   ' → logprob: -16.625263214111328
    7. '۰' → logprob: -16.937763214111328
    8. '<|end|>' → logprob: -17.000263214111328
    9. '1' → logprob: -17.062763214111328
    10. '```' → logprob: -17.500263214111328

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003694205661304295
    2. ':
' → logprob: -8.50036907196045
    3. '   ' → logprob: -9.25036907196045
    4. ' :' → logprob: -9.75036907196045
    5. '       ' → logprob: -12.50036907196045
    6. ':return' → logprob: -13.12536907196045
    7. '.' → logprob: -13.25036907196045
    8. ' break' → logprob: -13.75036907196045
    9. '    ' → logprob: -14.00036907196045
    10. '	break' → logprob: -14.25036907196045

Token 40: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010260285809636116
    2. '   ' → logprob: -4.635260105133057
    3. ' break' → logprob: -8.385260581970215
    4. ':' → logprob: -8.885260581970215
    5. '	break' → logprob: -9.510260581970215
    6. '     ' → logprob: -11.510260581970215
    7. '      ' → logprob: -11.760260581970215
    8. '    ' → logprob: -11.885260581970215
    9. '\n' → logprob: -12.135260581970215
    10. '\t' → logprob: -12.135260581970215

Token 41: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.6992241740226746
    2. 'break' (adapté à ' break') → logprob: -0.6992241740226746
    3. '       ' → logprob: -5.19922399520874
    4. '   ' → logprob: -7.69922399520874
    5. '	break' → logprob: -9.449224472045898
    6. '_break' → logprob: -12.949224472045898
    7. '           ' → logprob: -14.199224472045898
    8. '```' → logprob: -14.324224472045898
    9. '-break' → logprob: -14.824224472045898
    10. ' ' → logprob: -14.949224472045898

Token 42: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7481465935707092
    2. '
' → logprob: -0.8731465935707092
    3. '    
' → logprob: -2.3731465339660645
    4. '\n' → logprob: -4.9981465339660645
    5. '<|end|>' → logprob: -6.1231465339660645
    6. '  
' → logprob: -6.2481465339660645
    7. '```' → logprob: -6.4981465339660645
    8. '   
' → logprob: -6.8731465339660645
    9. ' 
' → logprob: -7.6231465339660645
    10. 'print' → logprob: -7.9981465339660645

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01188291609287262
    2. '    
' → logprob: -4.636882781982422
    3. '
' → logprob: -6.386882781982422
    4. '```' → logprob: -8.011882781982422
    5. '\n' → logprob: -11.011882781982422
    6. '<|end|>' → logprob: -11.011882781982422
    7. 'for' → logprob: -11.386882781982422
    8. '   
' → logprob: -11.636882781982422
    9. 'print' → logprob: -11.761882781982422
    10. '  
' → logprob: -12.011882781982422

Token 44: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39692530035972595
    2. '    
' → logprob: -1.7719253301620483
    3. '
' → logprob: -3.021925210952759
    4. 'result' → logprob: -4.396925449371338
    5. '```' → logprob: -4.396925449371338
    6. ' 
' → logprob: -4.521925449371338
    7. '     
' → logprob: -4.646925449371338
    8. ' distances' → logprob: -4.771925449371338
    9. '    ' → logprob: -5.146925449371338
    10. ' result' → logprob: -5.271925449371338

Token 45: '=y' (ID: 70421)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2832567095756531
    2. ',' → logprob: -1.7832567691802979
    3. ' =' → logprob: -3.158256769180298
    4. '=' → logprob: -4.033256530761719
    5. ',y' → logprob: -4.408256530761719
    6. '_values' → logprob: -6.283256530761719
    7. ',s' → logprob: -6.908256530761719
    8. '_list' → logprob: -7.408256530761719
    9. '_' → logprob: -7.533256530761719
    10. ' ,' → logprob: -8.033256530761719

Token 46: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011190356686711311
    2. ' =' → logprob: -4.636190414428711
    3. '=z' → logprob: -7.636190414428711
    4. '=[]' → logprob: -8.636190414428711
    5. '=i' → logprob: -8.886190414428711
    6. '=x' → logprob: -9.011190414428711
    7. '=[' → logprob: -9.386190414428711
    8. '=y' → logprob: -9.511190414428711
    9. '0' → logprob: -9.886190414428711
    10. '=f' → logprob: -10.386190414428711

Token 47: 'theta' (ID: 57853)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017767686222214252
    2. ' ' → logprob: -9.375177383422852
    3. '1' → logprob: -9.750177383422852
    4. 'D' → logprob: -10.750177383422852
    5. 'N' → logprob: -12.875177383422852
    6. '[]' → logprob: -13.125177383422852
    7. '-' → logprob: -13.312677383422852
    8. '(' → logprob: -14.000177383422852
    9. 'x' → logprob: -14.437677383422852
    10. '10' → logprob: -14.437677383422852

Token 48: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023377664387226105
    2. ' =' → logprob: -3.7733776569366455
    3. '0' → logprob: -9.023377418518066
    4. ' ' → logprob: -12.273377418518066
    5. ' ' → logprob: -14.023377418518066
    6. '=int' → logprob: -14.148377418518066
    7. '=s' → logprob: -14.398377418518066
    8. '_=' → logprob: -14.398377418518066
    9. '=f' → logprob: -14.648377418518066
    10. '=line' → logprob: -14.773377418518066

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006407116306945682
    2. ' ' → logprob: -7.375640869140625
    3. '1' → logprob: -12.000640869140625
    4. 'z' → logprob: -13.813140869140625
    5. '[]' → logprob: -13.875640869140625
    6. '.' → logprob: -14.813140869140625
    7. 'D' → logprob: -14.813140869140625
    8. '=' → logprob: -14.875640869140625
    9. '100' → logprob: -15.188140869140625
    10. '[' → logprob: -15.250640869140625

Token 50: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34995388984680176
    2. '<|end|>' → logprob: -1.3499538898468018
    3. '\n' → logprob: -3.8499538898468018
    4. '<|end|>' → logprob: -5.599953651428223
    5. ' ' → logprob: -6.474953651428223
    6. '0' → logprob: -6.599953651428223
    7. '  
' → logprob: -6.599953651428223
    8. '' → logprob: -6.599953651428223
    9. '\' → logprob: -6.974953651428223
    10. '    
' → logprob: -6.974953651428223

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014519019750878215
    2. '5' → logprob: -8.00145149230957
    3. '
' → logprob: -8.25145149230957
    4. '1' → logprob: -8.37645149230957
    5. '000' → logprob: -8.62645149230957
    6. '```' → logprob: -9.12645149230957
    7. '\n' → logprob: -9.75145149230957
    8. '00' → logprob: -10.12645149230957
    9. 'j' → logprob: -10.25145149230957
    10. 'x' → logprob: -10.37645149230957

Token 52: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02274196781218052
    2. '\n' → logprob: -4.772741794586182
    3. '<|end|>' → logprob: -4.772741794586182
    4. '' → logprob: -6.397741794586182
    5. '    
' → logprob: -6.897741794586182
    6. '
' → logprob: -7.272741794586182
    7. ' 
' → logprob: -7.522741794586182
    8. '  
' → logprob: -7.772741794586182
    9. '   ' → logprob: -8.39774227142334
    10. ' ' → logprob: -8.64774227142334

Token 53: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03703567385673523
    2. '<|end|>' → logprob: -4.0370354652404785
    3. '\n' → logprob: -4.7870354652404785
    4. '   ' → logprob: -5.1620354652404785
    5. '    
' → logprob: -6.6620354652404785
    6. '<|end|>' → logprob: -7.4120354652404785
    7. '
' → logprob: -7.5370354652404785
    8. ' for' → logprob: -7.6620354652404785
    9. '' → logprob: -8.037035942077637
    10. ' 
' → logprob: -8.287035942077637

Token 54: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03606955707073212
    2. ' for' → logprob: -3.661069631576538
    3. '   ' → logprob: -4.661069393157959
    4. '	for' → logprob: -8.786069869995117
    5. '\t' → logprob: -11.161069869995117
    6. '  ' → logprob: -11.286069869995117
    7. '    ' → logprob: -11.286069869995117
    8. ' ' → logprob: -11.286069869995117
    9. '\n' → logprob: -11.286069869995117
    10. '    
' → logprob: -11.661069869995117

Token 55: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.21341624855995178
    2. '_' → logprob: -1.7134162187576294
    3. ' i' → logprob: -4.58841609954834
    4. '_i' → logprob: -6.71341609954834
    5. 'i' → logprob: -7.58841609954834
    6. ' in' → logprob: -10.46341609954834
    7. ' ' → logprob: -12.58841609954834
    8. '_range' → logprob: -13.33841609954834
    9. ' range' → logprob: -13.46341609954834
    10. '_j' → logprob: -13.58841609954834

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00982255581766367
    2. 'in' → logprob: -4.634822368621826
    3. ' ' → logprob: -9.759822845458984
    4. 'range' → logprob: -12.634822845458984
    5. '	in' → logprob: -14.134822845458984
    6. '<|end|>' → logprob: -14.134822845458984
    7. '  ' → logprob: -14.134822845458984
    8. ',' → logprob: -14.259822845458984
    9. '```' → logprob: -15.384822845458984
    10. ' ,' → logprob: -15.572322845458984

Token 57: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12693114578723907
    2. ' range' → logprob: -2.1269311904907227
    3. ' xrange' → logprob: -13.501931190490723
    4. '	range' → logprob: -13.876931190490723
    5. '(range' → logprob: -15.376931190490723
    6. ' ' → logprob: -15.376931190490723
    7. 'rang' → logprob: -15.876931190490723
    8. '  ' → logprob: -16.876930236816406
    9. 'r' → logprob: -17.126930236816406
    10. 'ran' → logprob: -18.126930236816406

Token 58: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0020115524530410767
    2. 'N' → logprob: -7.377011775970459
    3. ' N' → logprob: -7.377011775970459
    4. '(' → logprob: -7.502011775970459
    5. '(D' → logprob: -8.8770112991333
    6. ' (' → logprob: -9.7520112991333
    7. 'D' → logprob: -12.8770112991333
    8. '   ' → logprob: -13.2520112991333
    9. '	N' → logprob: -13.5020112991333
    10. ' ' → logprob: -13.7520112991333

Token 59: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002581209992058575
    2. '):
' → logprob: -8.875258445739746
    3. ':' → logprob: -9.375258445739746
    4. ' ):' → logprob: -10.875258445739746
    5. '+' → logprob: -12.375258445739746
    6. '   ' → logprob: -12.500258445739746
    7. ')' → logprob: -13.125258445739746
    8. '}:' → logprob: -14.000258445739746
    9. '):
' → logprob: -14.000258445739746
    10. ',' → logprob: -14.750258445739746

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03810414299368858
    2. '   ' → logprob: -3.6631040573120117
    3. ' ' → logprob: -5.288104057312012
    4. '<|end|>' → logprob: -5.413104057312012
    5. '    ' → logprob: -6.788104057312012
    6. '  ' → logprob: -8.913104057312012
    7. '<|end|>' → logprob: -9.038104057312012
    8. '```' → logprob: -9.288104057312012
    9. '        
' → logprob: -9.413104057312012
    10. '      ' → logprob: -9.538104057312012

Token 61: ' L' (ID: 451)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -1.8534972667694092
    2. ' parts' → logprob: -1.9784972667694092
    3. 'cmd' → logprob: -2.103497266769409
    4. ' dx' → logprob: -2.353497266769409
    5. ' s' → logprob: -2.603497266769409
    6. ' cmd' → logprob: -3.103497266769409
    7. ' d' → logprob: -3.103497266769409
    8. 'd' → logprob: -3.478497266769409
    9. '       ' → logprob: -3.478497266769409
    10. 's' → logprob: -3.603497266769409

Token 62: 'speed' (ID: 42880)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31410548090934753
    2. ',d' → logprob: -1.81410551071167
    3. ',D' → logprob: -3.43910551071167
    4. ',v' → logprob: -3.68910551071167
    5. ',V' → logprob: -4.43910551071167
    6. ',s' → logprob: -4.56410551071167
    7. ',a' → logprob: -4.81410551071167
    8. ',A' → logprob: -5.06410551071167
    9. ' ,' → logprob: -5.93910551071167
    10. ',R' → logprob: -6.68910551071167

Token 63: ',R' (ID: 48317)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41500380635261536
    2. ',s' → logprob: -1.665003776550293
    3. ',d' → logprob: -2.415003776550293
    4. ',D' → logprob: -3.790003776550293
    5. ',r' → logprob: -4.790003776550293
    6. ',v' → logprob: -5.665003776550293
    7. ',R' → logprob: -5.915003776550293
    8. ',a' → logprob: -6.040003776550293
    9. ' ,' → logprob: -6.165003776550293
    10. ',int' → logprob: -6.165003776550293

Token 64: 'speed' (ID: 42880)
  Prédit: 'speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.023009134456515312
    2. 'peed' → logprob: -4.273009300231934
    3. '_speed' → logprob: -4.773009300231934
    4. '=' → logprob: -9.023009300231934
    5. 'Speed' → logprob: -9.148009300231934
    6. ',' → logprob: -10.148009300231934
    7. '	speed' → logprob: -10.773009300231934
    8. '-speed' → logprob: -11.023009300231934
    9. ' speed' → logprob: -11.023009300231934
    10. ' =' → logprob: -12.148009300231934

Token 65: ',time' (ID: 125988)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009485593065619469
    2. ' =' → logprob: -4.759485721588135
    3. '=input' → logprob: -8.009485244750977
    4. ',' → logprob: -8.509485244750977
    5. '=int' → logprob: -8.634485244750977
    6. '=line' → logprob: -9.634485244750977
    7. ',map' → logprob: -10.259485244750977
    8. '=list' → logprob: -11.134485244750977
    9. '=float' → logprob: -11.634485244750977
    10. '=sys' → logprob: -12.134485244750977

Token 66: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009511926211416721
    2. ' =' → logprob: -4.759511947631836
    3. '=input' → logprob: -7.884511947631836
    4. '=line' → logprob: -7.884511947631836
    5. '=list' → logprob: -9.634511947631836
    6. '=sys' → logprob: -10.759511947631836
    7. 'map' → logprob: -10.884511947631836
    8. ',map' → logprob: -11.509511947631836
    9. '   ' → logprob: -12.509511947631836
    10. ' ' → logprob: -12.509511947631836

Token 67: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.020647229626774788
    2. ' map' → logprob: -3.8956472873687744
    3. '	map' → logprob: -9.645647048950195
    4. '   ' → logprob: -10.645647048950195
    5. '(map' → logprob: -12.520647048950195
    6. '[' → logprob: -12.645647048950195
    7. 'sys' → logprob: -13.020647048950195
    8. 'list' → logprob: -13.145647048950195
    9. '  ' → logprob: -13.520647048950195
    10. ' ' → logprob: -13.770647048950195

Token 68: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.011379891075193882
    2. '(float' → logprob: -4.511379718780518
    3. '(' → logprob: -8.636380195617676
    4. 'int' → logprob: -9.011380195617676
    5. '[int' → logprob: -11.386380195617676
    6. '<int' → logprob: -12.136380195617676
    7. 'float' → logprob: -12.261380195617676
    8. '(lambda' → logprob: -12.386380195617676
    9. ' (' → logprob: -13.636380195617676
    10. '=int' → logprob: -14.011380195617676

Token 69: ',' (ID: 11)
  Prédit: ',line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',line' → logprob: -0.0012208210537210107
    2. ',' → logprob: -6.751220703125
    3. ',input' → logprob: -10.626220703125
    4. '(line' → logprob: -10.751220703125
    5. '[line' → logprob: -13.001220703125
    6. 'line' → logprob: -13.376220703125
    7. ' ,' → logprob: -15.251220703125
    8. ' line' → logprob: -16.001220703125
    9. '=line' → logprob: -16.001220703125
    10. '#line' → logprob: -16.126220703125

Token 70: 'sys' (ID: 17324)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.39058825373649597
    2. 'sys' → logprob: -1.1405882835388184
    3. ' input' → logprob: -6.515588283538818
    4. ' sys' → logprob: -6.765588283538818
    5. 'line' → logprob: -7.015588283538818
    6. ')' → logprob: -9.39058780670166
    7. 'raw' → logprob: -10.51558780670166
    8. '(sys' → logprob: -10.51558780670166
    9. '=sys' → logprob: -11.01558780670166
    10. '	sys' → logprob: -12.14058780670166

Token 71: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -4.370294846012257e-05
    2. '.' → logprob: -10.750043869018555
    3. 'stdin' → logprob: -11.250043869018555
    4. '.stdout' → logprob: -12.250043869018555
    5. '.std' → logprob: -12.750043869018555
    6. '.readline' → logprob: -14.000043869018555
    7. '.argv' → logprob: -14.875043869018555
    8. '.stderr' → logprob: -15.125043869018555
    9. ' stdin' → logprob: -16.250043869018555
    10. '.st' → logprob: -17.000043869018555

Token 72: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.4974866644479334e-05
    2. '.' → logprob: -11.125015258789062
    3. ')' → logprob: -16.250015258789062
    4. '.readlines' → logprob: -18.125015258789062
    5. '.)' → logprob: -18.875015258789062
    6. ' .' → logprob: -19.125015258789062
    7. '().' → logprob: -19.125015258789062
    8. '.next' → logprob: -19.250015258789062
    9. '.stdin' → logprob: -19.250015258789062
    10. ').' → logprob: -19.375015258789062

Token 73: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.8312570318812504e-05
    2. '()' → logprob: -11.000018119812012
    3. ' ().' → logprob: -14.000018119812012
    4. '(' → logprob: -14.500018119812012
    5. '())' → logprob: -16.125019073486328
    6. '.' → logprob: -16.875019073486328
    7. '.readline' → logprob: -17.125019073486328
    8. '()
' → logprob: -18.000019073486328
    9. '.strip' → logprob: -18.625019073486328
    10. '()).' → logprob: -18.750019073486328

Token 74: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.018192552030086517
    2. 'strip' → logprob: -4.018192768096924
    3. 'rstrip' → logprob: -10.143192291259766
    4. ' split' → logprob: -12.768192291259766
    5. ' strip' → logprob: -15.768192291259766
    6. '(split' → logprob: -16.143192291259766
    7. 'spl' → logprob: -17.018192291259766
    8. ' ' → logprob: -17.893192291259766
    9. 'plit' → logprob: -18.768192291259766
    10. ')' → logprob: -19.018192291259766

Token 75: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.12818415462970734
    2. ')' → logprob: -2.7531840801239014
    3. '()' → logprob: -2.8781840801239014
    4. '())
' → logprob: -8.87818431854248
    5. '(' → logprob: -9.00318431854248
    6. '()))' → logprob: -10.37818431854248
    7. ' ())' → logprob: -11.12818431854248
    8. '()
' → logprob: -11.87818431854248
    9. '();)' → logprob: -12.12818431854248
    10. '))' → logprob: -12.37818431854248

Token 76: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: ' Lv' (ID: 181669)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9910077452659607
    2. ' if' → logprob: -1.7410078048706055
    3. '<|end|>' → logprob: -1.9910078048706055
    4. ' ' → logprob: -2.3660078048706055
    5. '    ' → logprob: -2.9910078048706055
    6. '        ' → logprob: -3.2410078048706055
    7. ' 
' → logprob: -3.3660078048706055
    8. '   ' → logprob: -3.3660078048706055
    9. 'if' → logprob: -3.9910078048706055
    10. '        
' → logprob: -4.3660078048706055

Token 78: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20664656162261963
    2. 'el' → logprob: -2.45664644241333
    3. ' =' → logprob: -4.33164644241333
    4. 'speed' → logprob: -4.45664644241333
    5. '=float' → logprob: -4.58164644241333
    6. '=(' → logprob: -4.83164644241333
    7. '=s' → logprob: -4.95664644241333
    8. '=x' → logprob: -5.20664644241333
    9. '=int' → logprob: -5.33164644241333
    10. '=v' → logprob: -5.58164644241333

Token 79: 'math' (ID: 20310)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.26335427165031433
    2. '(L' → logprob: -1.6383543014526367
    3. ' L' → logprob: -4.013354301452637
    4. ' (' → logprob: -4.638354301452637
    5. '(float' → logprob: -5.638354301452637
    6. '(' → logprob: -6.388354301452637
    7. '0' → logprob: -7.263354301452637
    8. 'float' → logprob: -7.263354301452637
    9. ' ' → logprob: -7.513354301452637
    10. 'R' → logprob: -7.763354301452637

Token 80: '.r' (ID: 2951)
  Prédit: '.sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.8189868330955505
    2. '.r' → logprob: -1.0689868927001953
    3. '.pi' → logprob: -2.3189868927001953
    4. '.cos' → logprob: -2.3189868927001953
    5. '.c' → logprob: -5.318986892700195
    6. '.sin' → logprob: -5.818986892700195
    7. '.speed' → logprob: -6.318986892700195
    8. '.atan' → logprob: -6.318986892700195
    9. '.floor' → logprob: -6.568986892700195
    10. '.' → logprob: -6.693986892700195

Token 81: 'adians' (ID: 45611)
  Prédit: 'ads'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ads' → logprob: -0.5999669432640076
    2. 'ad' → logprob: -0.8499669432640076
    3. 'adians' → logprob: -3.9749670028686523
    4. 'ds' → logprob: -6.099967002868652
    5. 'd' → logprob: -7.349967002868652
    6. 'adi' → logprob: -8.099967002868652
    7. 'v' → logprob: -8.224967002868652
    8. 'adian' → logprob: -8.349967002868652
    9. 'm' → logprob: -8.599967002868652
    10. 'di' → logprob: -8.974967002868652

Token 82: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.002871803706511855
    2. '(' → logprob: -6.252871990203857
    3. 'L' → logprob: -7.377871990203857
    4. '((' → logprob: -8.6278715133667
    5. '(ls' → logprob: -10.3778715133667
    6. '(-' → logprob: -11.2528715133667
    7. '90' → logprob: -11.6278715133667
    8. '45' → logprob: -11.7528715133667
    9. '40' → logprob: -12.0028715133667
    10. 'Ls' → logprob: -12.1278715133667

Token 83: 'speed' (ID: 42880)
  Prédit: 'speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.00042412037146277726
    2. 'Speed' → logprob: -8.1254243850708
    3. 'peed' → logprob: -10.3754243850708
    4. '_speed' → logprob: -10.5004243850708
    5. ' speed' → logprob: -10.6254243850708
    6. '-speed' → logprob: -11.1254243850708
    7. 'spd' → logprob: -11.1254243850708
    8. '.speed' → logprob: -12.2504243850708
    9. '	speed' → logprob: -12.7504243850708
    10. '(speed' → logprob: -13.3754243850708

Token 84: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2352238893508911
    2. '*' → logprob: -1.8602238893508911
    3. ')*' → logprob: -3.3602237701416016
    4. ' *' → logprob: -4.235223770141602
    5. ')
' → logprob: -6.610223770141602
    6. '/D' → logprob: -6.860223770141602
    7. '/' → logprob: -6.985223770141602
    8. '*time' → logprob: -7.235223770141602
    9. ' )' → logprob: -8.485223770141602
    10. '<|end|>' → logprob: -8.860223770141602

Token 85: 'time' (ID: 4580)
  Prédit: 'time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.281656414270401
    2. 'D' → logprob: -1.5316563844680786
    3. ' time' → logprob: -4.156656265258789
    4. 'R' → logprob: -5.156656265258789
    5. 'radius' → logprob: -6.031656265258789
    6. ' D' → logprob: -6.281656265258789
    7. '0' → logprob: -6.406656265258789
    8. '2' → logprob: -7.656656265258789
    9. ' ' → logprob: -7.906656265258789
    10. 'r' → logprob: -8.531656265258789

Token 86: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: ' R' (ID: 460)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.3856492842023727e-06
    2. '_v' → logprob: -14.375000953674316
    3. ' v' → logprob: -14.750000953674316
    4. '	v' → logprob: -15.875000953674316
    5. 'theta' → logprob: -16.500001907348633
    6. '=' → logprob: -16.750001907348633
    7. 'V' → logprob: -16.750001907348633
    8. '*v' → logprob: -16.875001907348633
    9. 'vel' → logprob: -17.500001907348633
    10. '=v' → logprob: -17.750001907348633

Token 90: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.9146995327901095e-05
    2. ' =' → logprob: -11.000019073486328
    3. '=Math' → logprob: -13.125019073486328
    4. '=m' → logprob: -16.000019073486328
    5. '=s' → logprob: -17.125019073486328
    6. '=int' → logprob: -17.250019073486328
    7. '=

' → logprob: -18.000019073486328
    8. '=float' → logprob: -18.000019073486328
    9. '=line' → logprob: -18.250019073486328
    10. '=time' → logprob: -18.375019073486328

Token 91: 'math' (ID: 20310)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.22547902166843414
    2. 'math' → logprob: -1.600479006767273
    3. '(math' → logprob: -10.100479125976562
    4. '.math' → logprob: -11.350479125976562
    5. 'Math' → logprob: -12.100479125976562
    6. '/math' → logprob: -12.350479125976562
    7. 'cmath' → logprob: -14.475479125976562
    8. '_math' → logprob: -14.600479125976562
    9. '```' → logprob: -14.975479125976562
    10. 'm' → logprob: -15.225479125976562

Token 92: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.004642899613827467
    2. '.' → logprob: -5.379642963409424
    3. '.v' → logprob: -11.629642486572266
    4. ' radians' → logprob: -12.504642486572266
    5. ' .' → logprob: -13.504642486572266
    6. '.rad' → logprob: -13.754642486572266
    7. 'r' → logprob: -13.754642486572266
    8. '.w' → logprob: -14.004642486572266
    9. 'Radians' → logprob: -14.254642486572266
    10. '.math' → logprob: -14.379642486572266

Token 93: 'adians' (ID: 45611)
  Prédit: 'adians'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adians' → logprob: -0.00067966926144436
    2. 'a' → logprob: -7.8756794929504395
    3. 'ads' → logprob: -8.625679969787598
    4. 'ath' → logprob: -10.250679969787598
    5. 'adi' → logprob: -10.500679969787598
    6. 'ad' → logprob: -11.250679969787598
    7. 'math' → logprob: -11.500679969787598
    8. 'at' → logprob: -11.875679969787598
    9. 'r' → logprob: -11.875679969787598
    10. 's' → logprob: -12.375679969787598

Token 94: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.002478508511558175
    2. '(' → logprob: -6.00247859954834
    3. '(S' → logprob: -12.87747859954834
    4. ' (' → logprob: -16.252477645874023
    5. '((' → logprob: -16.627477645874023
    6. '(rs' → logprob: -16.877477645874023
    7. '(r' → logprob: -18.002477645874023
    8. '(`' → logprob: -18.127477645874023
    9. '(

' → logprob: -18.252477645874023
    10. '(s' → logprob: -18.377477645874023

Token 95: 'speed' (ID: 42880)
  Prédit: 'speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.00014203863975126296
    2. 'peed' → logprob: -9.125142097473145
    3. '-speed' → logprob: -11.750142097473145
    4. '_speed' → logprob: -12.375142097473145
    5. ')' → logprob: -12.500142097473145
    6. '	speed' → logprob: -12.500142097473145
    7. 'Speed' → logprob: -12.625142097473145
    8. '.speed' → logprob: -12.625142097473145
    9. ' speed' → logprob: -12.750142097473145
    10. '(speed' → logprob: -13.750142097473145

Token 96: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -8.065608562901616e-05
    2. ')' → logprob: -10.250081062316895
    3. '*time' → logprob: -10.500081062316895
    4. '*' → logprob: -11.125081062316895
    5. '*)' → logprob: -13.000081062316895
    6. ' )' → logprob: -14.875081062316895
    7. ')**' → logprob: -15.500081062316895
    8. ' ' → logprob: -17.000080108642578
    9. '	' → logprob: -17.625080108642578
    10. ']*' → logprob: -17.750080108642578

Token 97: 'time' (ID: 4580)
  Prédit: '*time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*time' → logprob: -0.015194414183497429
    2. 'time' → logprob: -4.265194416046143
    3. ' time' → logprob: -7.390194416046143
    4. '	time' → logprob: -8.515193939208984
    5. '*' → logprob: -9.390193939208984
    6. '*t' → logprob: -10.265193939208984
    7. 'times' → logprob: -10.765193939208984
    8. '"time' → logprob: -11.140193939208984
    9. 't' → logprob: -11.265193939208984
    10. ' ' → logprob: -11.515193939208984

Token 98: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: ' v' (ID: 323)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4449508488178253
    2. '   ' → logprob: -1.444950819015503
    3. ' if' → logprob: -3.194950819015503
    4. ' ' → logprob: -3.819950819015503
    5. 'if' → logprob: -3.944950819015503
    6. '<|end|>' → logprob: -4.319951057434082
    7. '
' → logprob: -5.319951057434082
    8. '    ' → logprob: -5.569951057434082
    9. '```' → logprob: -5.694951057434082
    10. '  ' → logprob: -5.819951057434082

Token 101: '=(' (ID: 9893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010799378156661987
    2. ' =' → logprob: -4.760799407958984
    3. 'x' → logprob: -6.510799407958984
    4. 'el' → logprob: -7.760799407958984
    5. ' ' → logprob: -9.885799407958984
    6. '_' → logprob: -10.635799407958984
    7. 'l' → logprob: -10.760799407958984
    8. 'al' → logprob: -10.885799407958984
    9. '_x' → logprob: -10.885799407958984
    10. '=(' → logprob: -11.010799407958984

Token 102: 'Lv' (ID: 98159)
  Prédit: 'Lv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Lv' → logprob: -0.10308679938316345
    2. 'Rv' → logprob: -3.4780867099761963
    3. '(L' → logprob: -3.6030867099761963
    4. ' Lv' → logprob: -4.103086948394775
    5. 'L' → logprob: -4.353086948394775
    6. '(R' → logprob: -5.478086948394775
    7. 'R' → logprob: -5.603086948394775
    8. ' (' → logprob: -6.978086948394775
    9. ' R' → logprob: -7.353086948394775
    10. ' L' → logprob: -8.103086471557617

Token 103: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014196882955729961
    2. ' +' → logprob: -4.264196872711182
    3. '-' → logprob: -10.88919734954834
    4. '+
' → logprob: -11.88919734954834
    5. ' -' → logprob: -12.51419734954834
    6. '+

' → logprob: -14.26419734954834
    7. ' +
' → logprob: -14.26419734954834
    8. '＋' → logprob: -14.63919734954834
    9. '+r' → logprob: -14.88919734954834
    10. ' plus' → logprob: -15.13919734954834

Token 104: 'Rv' (ID: 135287)
  Prédit: 'Rv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rv' → logprob: -0.008894047699868679
    2. ' R' → logprob: -4.758893966674805
    3. 'R' → logprob: -8.258893966674805
    4. ' ' → logprob: -11.133893966674805
    5. '	R' → logprob: -12.758893966674805
    6. ' ' → logprob: -14.383893966674805
    7. '_R' → logprob: -14.508893966674805
    8. 'Rw' → logprob: -15.008893966674805
    9. '
' → logprob: -15.383893966674805
    10. '   ' → logprob: -15.508893966674805

Token 105: ')*' (ID: 11043)
  Prédit: ')/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')/' → logprob: -0.20201577246189117
    2. ')' → logprob: -1.70201575756073
    3. ' )' → logprob: -7.4520158767700195
    4. ')*' → logprob: -11.32701587677002
    5. ')/(' → logprob: -13.20201587677002
    6. ' ' → logprob: -13.20201587677002
    7. '/' → logprob: -13.70201587677002
    8. '
' → logprob: -14.07701587677002
    9. '）' → logprob: -14.07701587677002
    10. ')>>' → logprob: -14.32701587677002

Token 106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0029510781168937683
    2. ' ' → logprob: -5.877951145172119
    3. '/' → logprob: -9.502950668334961
    4. '.' → logprob: -10.627950668334961
    5. 'D' → logprob: -10.627950668334961
    6. ' D' → logprob: -12.627950668334961
    7. '1' → logprob: -12.752950668334961
    8. '2' → logprob: -12.877950668334961
    9. '50' → logprob: -13.315450668334961
    10. ' /' → logprob: -13.627950668334961

Token 107: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -3.15441757265944e-05
    2. '.
' → logprob: -10.875031471252441
    3. '0' → logprob: -12.375031471252441
    4. ' .' → logprob: -13.000031471252441
    5. '.
' → logprob: -13.500031471252441
    6. '.

' → logprob: -14.250031471252441
    7. '```' → logprob: -14.250031471252441
    8. ''.' → logprob: -14.500031471252441
    9. '`.' → logprob: -14.750031471252441
    10. '5' → logprob: -14.750031471252441

Token 108: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0005107374745421112
    2. '1' → logprob: -8.500511169433594
    3. '2' → logprob: -8.750511169433594
    4. '05' → logprob: -9.125511169433594
    5. '25' → logprob: -10.750511169433594
    6. '0' → logprob: -11.875511169433594
    7. '3' → logprob: -13.125511169433594
    8. 'five' → logprob: -13.250511169433594
    9. '125' → logprob: -13.750511169433594
    10. '50' → logprob: -14.000511169433594

Token 109: '*' (ID: 9)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.01433626376092434
    2. '0' → logprob: -4.639336109161377
    3. ' D' → logprob: -5.639336109161377
    4. '(' → logprob: -7.639336109161377
    5. '1' → logprob: -8.264336585998535
    6. ' ' → logprob: -9.514336585998535
    7. '(D' → logprob: -9.889336585998535
    8. '2' → logprob: -10.139336585998535
    9. ' (' → logprob: -11.264336585998535
    10. '10' → logprob: -11.264336585998535

Token 111: '
' (ID: 198)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.6630339622497559
    2. '   ' → logprob: -1.5380339622497559
    3. ' /' → logprob: -2.413033962249756
    4. '
' → logprob: -2.788033962249756
    5. '/the' → logprob: -3.413033962249756
    6. 'theta' → logprob: -4.038033962249756
    7. '<|end|>' → logprob: -4.538033962249756
    8. '       ' → logprob: -5.163033962249756
    9. '/math' → logprob: -5.413033962249756
    10. ' theta' → logprob: -5.538033962249756

Token 112: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1978251188993454
    2. '<|end|>' → logprob: -2.5728251934051514
    3. ' if' → logprob: -2.9478251934051514
    4. '
' → logprob: -4.447824954986572
    5. ',' → logprob: -4.447824954986572
    6. '       ' → logprob: -5.197824954986572
    7. ' ' → logprob: -5.697824954986572
    8. ' 
' → logprob: -5.822824954986572
    9. '  
' → logprob: -6.072824954986572
    10. '  ' → logprob: -6.197824954986572

Token 113: ' w' (ID: 286)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19742555916309357
    2. '<|end|>' → logprob: -2.322425603866577
    3. '       ' → logprob: -3.447425603866577
    4. ' ' → logprob: -4.197425365447998
    5. ' if' → logprob: -4.322425365447998
    6. '  ' → logprob: -5.447425365447998
    7. '    ' → logprob: -5.697425365447998
    8. 'x' → logprob: -6.072425365447998
    9. '```' → logprob: -6.322425365447998
    10. ' 
' → logprob: -6.572425365447998

Token 114: '=(' (ID: 9893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015243870439007878
    2. ' =' → logprob: -6.501524448394775
    3. '=(' → logprob: -11.876523971557617
    4. '=v' → logprob: -12.001523971557617
    5. ' =(' → logprob: -12.376523971557617
    6. '=int' → logprob: -13.751523971557617
    7. '=}' → logprob: -14.001523971557617
    8. '=w' → logprob: -14.501523971557617
    9. '=

' → logprob: -14.626523971557617
    10. '=s' → logprob: -15.126523971557617

Token 115: 'Rv' (ID: 135287)
  Prédit: '(R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.056687839329242706
    2. 'Rv' → logprob: -2.931687831878662
    3. 'R' → logprob: -6.556687831878662
    4. '(L' → logprob: -9.18168830871582
    5. 'Lv' → logprob: -9.80668830871582
    6. ' (' → logprob: -9.80668830871582
    7. '(' → logprob: -10.30668830871582
    8. '(rv' → logprob: -10.55668830871582
    9. 'math' → logprob: -10.93168830871582
    10. ' R' → logprob: -11.18168830871582

Token 116: '-L' (ID: 9665)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0060580819845199585
    2. ' -' → logprob: -5.381058216094971
    3. '-L' → logprob: -6.631058216094971
    4. '-
' → logprob: -9.131057739257812
    5. '-(' → logprob: -13.006057739257812
    6. '-

' → logprob: -13.006057739257812
    7. '-V' → logprob: -13.631057739257812
    8. '

' → logprob: -14.381057739257812
    9. ' -
' → logprob: -14.756057739257812
    10. '
' → logprob: -14.881057739257812

Token 117: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -4.961759259458631e-06
    2. ' v' → logprob: -13.125004768371582
    3. '_v' → logprob: -14.125004768371582
    4. '*v' → logprob: -14.375004768371582
    5. ')v' → logprob: -14.375004768371582
    6. '	v' → logprob: -14.500004768371582
    7. ')' → logprob: -15.500004768371582
    8. '/' → logprob: -15.625004768371582
    9. '	' → logprob: -17.3750057220459
    10. ')*' → logprob: -17.8750057220459

Token 118: ')/(' (ID: 60504)
  Prédit: ')/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')/' → logprob: -0.6792461276054382
    2. ')' → logprob: -1.429246187210083
    3. ')/(' → logprob: -1.679246187210083
    4. '/' → logprob: -3.429246187210083
    5. '/D' → logprob: -3.929246187210083
    6. ')*' → logprob: -4.554245948791504
    7. '*' → logprob: -6.429245948791504
    8. '/(' → logprob: -7.054245948791504
    9. ' /' → logprob: -7.929245948791504
    10. '")' → logprob: -8.554245948791504

Token 119: '2' (ID: 17)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -4.286852345103398e-05
    2. ' D' → logprob: -10.125042915344238
    3. '2' → logprob: -13.000042915344238
    4. ' ' → logprob: -15.375042915344238
    5. '0' → logprob: -15.875042915344238
    6. '(' → logprob: -16.875041961669922
    7. '	D' → logprob: -17.750041961669922
    8. '   ' → logprob: -18.625041961669922
    9. '    ' → logprob: -18.875041961669922
    10. 'd' → logprob: -19.000041961669922

Token 120: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0002523992152418941
    2. ' *' → logprob: -9.000252723693848
    3. '.' → logprob: -9.250252723693848
    4. 'D' → logprob: -11.750252723693848
    5. ')' → logprob: -11.875252723693848
    6. ' ' → logprob: -12.375252723693848
    7. ')*' → logprob: -12.500252723693848
    8. ' ' → logprob: -12.625252723693848
    9. '0' → logprob: -13.125252723693848
    10. '*
' → logprob: -13.750252723693848

Token 121: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0005701907211914659
    2. ' D' → logprob: -7.500570297241211
    3. '*' → logprob: -12.375570297241211
    4. '.' → logprob: -12.625570297241211
    5. '	D' → logprob: -12.875570297241211
    6. '0' → logprob: -13.000570297241211
    7. ' ' → logprob: -13.375570297241211
    8. ' ' → logprob: -13.750570297241211
    9. '.D' → logprob: -14.500570297241211
    10. '>D' → logprob: -14.500570297241211

Token 122: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20220822095870972
    2. ')
' → logprob: -1.7022082805633545
    3. '   ' → logprob: -8.327208518981934
    4. ':
' → logprob: -9.327208518981934
    5. '       ' → logprob: -9.452208518981934
    6. '
' → logprob: -9.702208518981934
    7. '):
' → logprob: -9.827208518981934
    8. ')*' → logprob: -9.952208518981934
    9. '<|end|>' → logprob: -10.077208518981934
    10. ' )
' → logprob: -10.702208518981934

Token 123: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5357407331466675
    2. '<|end|>' → logprob: -1.2857407331466675
    3. '
' → logprob: -2.660740852355957
    4. '       ' → logprob: -3.035740852355957
    5. '\n' → logprob: -5.160740852355957
    6. '    
' → logprob: -5.535740852355957
    7. '  
' → logprob: -5.785740852355957
    8. '```' → logprob: -6.285740852355957
    9. ' 
' → logprob: -6.410740852355957
    10. ' if' → logprob: -7.410740852355957

Token 124: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33698225021362305
    2. 'if' (adapté à ' if') → logprob: -2.086982250213623
    3. ' if' → logprob: -2.211982250213623
    4. '       ' → logprob: -3.711982250213623
    5. '<|end|>' → logprob: -3.711982250213623
    6. ' ' → logprob: -6.586982250213623
    7. '    ' → logprob: -7.336982250213623
    8. '	if' → logprob: -8.336982727050781
    9. ' 
' → logprob: -8.336982727050781
    10. '  ' → logprob: -8.461982727050781

Token 125: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.2874200940132141
    2. ' w' → logprob: -1.4124200344085693
    3. 'abs' → logprob: -5.412420272827148
    4. 'w' → logprob: -6.412420272827148
    5. ' math' → logprob: -9.287420272827148
    6. '(abs' → logprob: -9.912420272827148
    7. '(w' → logprob: -13.037420272827148
    8. 'math' → logprob: -14.162420272827148
    9. ' ' → logprob: -14.412420272827148
    10. '-' → logprob: -14.662420272827148

Token 126: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.00071553117595613
    2. '(' → logprob: -7.250715732574463
    3. '(
' → logprob: -12.250715255737305
    4. 'w' → logprob: -14.625715255737305
    5. '(wx' → logprob: -16.125715255737305
    6. ' w' → logprob: -16.500715255737305
    7. '(

' → logprob: -16.875715255737305
    8. ' (' → logprob: -17.125715255737305
    9. '(theta' → logprob: -17.875715255737305
    10. '(math' → logprob: -17.875715255737305

Token 127: ')<' (ID: 62287)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2612541615962982
    2. ')>' → logprob: -2.261254072189331
    3. ')<' → logprob: -3.011254072189331
    4. '>' → logprob: -3.386254072189331
    5. ' >' → logprob: -3.636254072189331
    6. '<' → logprob: -4.76125431060791
    7. ' <' → logprob: -5.01125431060791
    8. ')>=' → logprob: -7.63625431060791
    9. '<|end|>' → logprob: -9.38625431060791
    10. ')<=' → logprob: -9.38625431060791

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.717296517104842e-05
    2. ' ' → logprob: -10.375057220458984
    3. '0' → logprob: -10.625057220458984
    4. '(' → logprob: -14.125057220458984
    5. '=' → logprob: -15.000057220458984
    6. '
' → logprob: -15.375057220458984
    7. '   ' → logprob: -16.000057220458984
    8. '

' → logprob: -16.375057220458984
    9. ' ' → logprob: -16.875057220458984
    10. '-' → logprob: -17.250057220458984

Token 129: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -9.968312951968983e-06
    2. '-' → logprob: -12.625009536743164
    3. '0' → logprob: -12.625009536743164
    4. 'E' → logprob: -12.875009536743164
    5. '.' → logprob: -14.750009536743164
    6. '.e' → logprob: -14.875009536743164
    7. '-e' → logprob: -17.375009536743164
    8. '1' → logprob: -17.500009536743164
    9. '00' → logprob: -17.500009536743164
    10. '000' → logprob: -18.375009536743164

Token 130: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.75
    3. '9' → logprob: -17.625
    4. 'e' → logprob: -17.75
    5. ' -' → logprob: -17.875
    6. '6' → logprob: -18.0
    7. '{-' → logprob: -18.0
    8. '
' → logprob: -18.375
    9. '10' → logprob: -18.625
    10. '-
' → logprob: -19.0

Token 131: '15' (ID: 1055)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.0858973264694214
    2. '10' → logprob: -1.2108973264694214
    3. '8' → logprob: -1.5858973264694214
    4. '6' → logprob: -2.460897445678711
    5. '7' → logprob: -3.085897445678711
    6. '12' → logprob: -4.460897445678711
    7. '5' → logprob: -4.585897445678711
    8. '15' → logprob: -5.835897445678711
    9. '-' → logprob: -6.585897445678711
    10. '14' → logprob: -6.710897445678711

Token 132: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004647641908377409
    2. ':
' → logprob: -5.379647731781006
    3. ' :' → logprob: -10.754647254943848
    4. ' :
' → logprob: -14.004647254943848
    5. ':

' → logprob: -14.129647254943848
    6. '):' → logprob: -14.129647254943848
    7. ',' → logprob: -14.379647254943848
    8. '<|end|>' → logprob: -14.629647254943848
    9. '{' → logprob: -14.754647254943848
    10. ' or' → logprob: -14.754647254943848

Token 133: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2687801122665405
    2. '       ' → logprob: -1.5187801122665405
    3. '        
' → logprob: -4.76878023147583
    4. '<|end|>' → logprob: -6.01878023147583
    5. '           ' → logprob: -6.39378023147583
    6. '            
' → logprob: -7.01878023147583
    7. ',' → logprob: -7.01878023147583
    8. ':' → logprob: -8.143779754638672
    9. ':
' → logprob: -8.143779754638672
    10. ' x' → logprob: -8.268779754638672

Token 134: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.31358951330184937
    2. ' x' → logprob: -1.3135895729064941
    3. '
' → logprob: -8.813589096069336
    4. '           ' → logprob: -8.938589096069336
    5. '	x' → logprob: -11.438589096069336
    6. 'y' → logprob: -11.688589096069336
    7. '   ' → logprob: -11.813589096069336
    8. ' y' → logprob: -11.813589096069336
    9. '            
' → logprob: -12.313589096069336
    10. '       ' → logprob: -12.813589096069336

Token 135: '+=' (ID: 18287)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5238472819328308
    2. '+=' → logprob: -0.8988472819328308
    3. '+=(' → logprob: -7.8988471031188965
    4. '+' → logprob: -8.773847579956055
    5. ']+=' → logprob: -9.023847579956055
    6. '=' → logprob: -10.398847579956055
    7. '+='' → logprob: -11.023847579956055
    8. '```' → logprob: -11.648847579956055
    9. '<|end|>' → logprob: -11.773847579956055
    10. '+="' → logprob: -12.523847579956055

Token 136: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0005146674811840057
    2. 'math' → logprob: -7.625514507293701
    3. ' v' → logprob: -10.75051498413086
    4. 'Lv' → logprob: -13.12551498413086
    5. ' math' → logprob: -13.25051498413086
    6. 'L' → logprob: -14.62551498413086
    7. '   ' → logprob: -14.75051498413086
    8. '	v' → logprob: -15.75051498413086
    9. 'Math' → logprob: -16.25051498413086
    10. 'vx' → logprob: -16.50051498413086

Token 137: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.00982255581766367
    2. ' *' → logprob: -5.134822368621826
    3. '*cos' → logprob: -5.759822368621826
    4. '*Math' → logprob: -7.509822368621826
    5. 'math' → logprob: -9.634822845458984
    6. ' math' → logprob: -10.134822845458984
    7. '*object' → logprob: -11.384822845458984
    8. '*np' → logprob: -11.509822845458984
    9. '+' → logprob: -11.509822845458984
    10. '*x' → logprob: -11.884822845458984

Token 138: 'math' (ID: 20310)
  Prédit: 'math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -6.392202976712724e-06
    2. ' math' → logprob: -12.000006675720215
    3. '(math' → logprob: -16.5000057220459
    4. 'mat' → logprob: -17.2500057220459
    5. 'cos' → logprob: -17.2500057220459
    6. 'Math' → logprob: -18.1250057220459
    7. '   ' → logprob: -18.7500057220459
    8. 'cmath' → logprob: -19.8750057220459
    9. 'm' → logprob: -20.5000057220459
    10. 'ma' → logprob: -20.6250057220459

Token 139: '.cos' (ID: 44221)
  Prédit: '.cos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cos' → logprob: -4.310693111619912e-05
    2. '.sin' → logprob: -10.125042915344238
    3. 'cos' → logprob: -13.250042915344238
    4. '.Cos' → logprob: -14.875042915344238
    5. '.pi' → logprob: -15.000042915344238
    6. '.' → logprob: -15.250042915344238
    7. '.c' → logprob: -15.500042915344238
    8. '.sqrt' → logprob: -16.375043869018555
    9. '.atan' → logprob: -17.000043869018555
    10. '.ac' → logprob: -18.000043869018555

Token 140: '(theta' (ID: 69139)
  Prédit: '(theta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(theta' → logprob: -0.0052486988715827465
    2. '(' → logprob: -5.255248546600342
    3. 'theta' → logprob: -11.5052490234375
    4. '(
' → logprob: -13.1302490234375
    5. ' (' → logprob: -13.3802490234375
    6. '(phi' → logprob: -14.3802490234375
    7. '(angle' → logprob: -15.3802490234375
    8. '(math' → logprob: -15.7552490234375
    9. ' theta' → logprob: -16.7552490234375
    10. '((' → logprob: -16.7552490234375

Token 141: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0891168937087059
    2. ')
' → logprob: -2.4641168117523193
    3. ' )' → logprob: -10.339117050170898
    4. '<|end|>' → logprob: -10.464117050170898
    5. ')*' → logprob: -10.589117050170898
    6. '       ' → logprob: -10.839117050170898
    7. ' )
' → logprob: -11.089117050170898
    8. ')

' → logprob: -11.339117050170898
    9. '   ' → logprob: -11.464117050170898
    10. ')
' → logprob: -11.464117050170898

Token 142: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 143: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.04859020933508873
    2. ' y' → logprob: -3.0485901832580566
    3. '	y' → logprob: -13.548590660095215
    4. '           ' → logprob: -14.548590660095215
    5. ',y' → logprob: -14.673590660095215
    6. '
' → logprob: -15.673590660095215
    7. ' ' → logprob: -16.4235897064209
    8. 'x' → logprob: -16.6735897064209
    9. '            ' → logprob: -17.1735897064209
    10. '    ' → logprob: -17.1735897064209

Token 144: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.006285321898758411
    2. '+' → logprob: -5.131285190582275
    3. ' +=' → logprob: -8.506285667419434
    4. ']+=' → logprob: -10.006285667419434
    5. '+='' → logprob: -10.006285667419434
    6. '+="' → logprob: -10.256285667419434
    7. '+=(' → logprob: -10.756285667419434
    8. '<|end|>' → logprob: -12.006285667419434
    9. ')+' → logprob: -15.006285667419434
    10. '[' → logprob: -15.256285667419434

Token 145: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.318681188422488e-05
    2. ' v' → logprob: -11.25001335144043
    3. '(v' → logprob: -16.00001335144043
    4. '(' → logprob: -18.12501335144043
    5. 'x' → logprob: -18.50001335144043
    6. '	v' → logprob: -18.62501335144043
    7. 'y' → logprob: -20.25001335144043
    8. 'w' → logprob: -20.37501335144043
    9. '*v' → logprob: -20.50001335144043
    10. ')v' → logprob: -20.87501335144043

Token 146: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0003229494614060968
    2. '*sin' → logprob: -8.250323295593262
    3. ' *' → logprob: -10.375323295593262
    4. '*Math' → logprob: -11.000323295593262
    5. '*cos' → logprob: -11.875323295593262
    6. '*np' → logprob: -12.125323295593262
    7. '<|end|>' → logprob: -14.500323295593262
    8. '*object' → logprob: -15.875323295593262
    9. '**' → logprob: -16.000322341918945
    10. '*s' → logprob: -16.125322341918945

Token 147: 'math' (ID: 20310)
  Prédit: 'math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.07907120883464813
    2. 'sin' → logprob: -2.579071283340454
    3. 'theta' → logprob: -8.954071044921875
    4. ' math' → logprob: -10.579071044921875
    5. '(math' → logprob: -10.579071044921875
    6. 'Math' → logprob: -14.329071044921875
    7. '.math' → logprob: -14.579071044921875
    8. ' sin' → logprob: -16.829071044921875
    9. '.sin' → logprob: -17.329071044921875
    10. 's' → logprob: -17.454071044921875

Token 148: '.sin' (ID: 35734)
  Prédit: '.sin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sin' → logprob: -0.12718920409679413
    2. '.cos' → logprob: -2.1271891593933105
    3. '.' → logprob: -8.877189636230469
    4. 'sin' → logprob: -9.377189636230469
    5. 'cos' → logprob: -10.252189636230469
    6. '.s' → logprob: -14.377189636230469
    7. '.pi' → logprob: -15.002189636230469
    8. '.Sin' → logprob: -15.377189636230469
    9. '.sqrt' → logprob: -15.877189636230469
    10. '*sin' → logprob: -16.37718963623047

Token 149: '(theta' (ID: 69139)
  Prédit: '(theta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(theta' → logprob: -0.014169743284583092
    2. '(' → logprob: -4.264169692993164
    3. '(
' → logprob: -13.264169692993164
    4. 'theta' → logprob: -13.389169692993164
    5. '(phi' → logprob: -13.514169692993164
    6. ' (' → logprob: -13.639169692993164
    7. '(

' → logprob: -15.764169692993164
    8. '(math' → logprob: -17.264169692993164
    9. '(token' → logprob: -17.264169692993164
    10. '(angle' → logprob: -17.389169692993164

Token 150: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20155757665634155
    2. ')
' → logprob: -1.7015576362609863
    3. '       ' → logprob: -9.576557159423828
    4. '   ' → logprob: -10.076557159423828
    5. ')
' → logprob: -11.201557159423828
    6. ' )' → logprob: -12.201557159423828
    7. ' )
' → logprob: -12.201557159423828
    8. ')

' → logprob: -12.326557159423828
    9. 'else' → logprob: -14.451557159423828
    10. '           ' → logprob: -14.826557159423828

Token 151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1015647649765015
    2. '<|end|>' → logprob: -1.7265647649765015
    3. '\n' → logprob: -1.9765647649765015
    4. ' else' → logprob: -2.101564884185791
    5. 'else' → logprob: -2.601564884185791
    6. '   ' → logprob: -2.726564884185791
    7. '
' → logprob: -2.726564884185791
    8. '    
' → logprob: -5.351564884185791
    9. '```' → logprob: -5.601564884185791
    10. '	else' → logprob: -5.601564884185791

Token 152: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.47616639733314514
    2. 'else' (adapté à ' else') → logprob: -0.9761663675308228
    3. '   ' → logprob: -6.476166248321533
    4. '	else' → logprob: -7.851166248321533
    5. '```' → logprob: -9.101166725158691
    6. '       ' → logprob: -10.476166725158691
    7. '<|end|>' → logprob: -12.601166725158691
    8. ':
' → logprob: -12.601166725158691
    9. ' ' → logprob: -13.101166725158691
    10. '_else' → logprob: -14.101166725158691

Token 153: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14319883286952972
    2. ':
' → logprob: -2.0181987285614014
    3. '{' → logprob: -8.39319896697998
    4. '       ' → logprob: -8.76819896697998
    5. '           ' → logprob: -10.01819896697998
    6. ',' → logprob: -10.89319896697998
    7. '<|end|>' → logprob: -11.01819896697998
    8. ' :
' → logprob: -11.26819896697998
    9. ' :' → logprob: -11.39319896697998
    10. '        ' → logprob: -11.89319896697998

Token 154: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5317994356155396
    2. '       ' → logprob: -2.03179931640625
    3. ' x' → logprob: -2.03179931640625
    4. '        ' → logprob: -2.53179931640625
    5. ' theta' → logprob: -3.28179931640625
    6. '   ' → logprob: -4.90679931640625
    7. 'theta' → logprob: -5.40679931640625
    8. ' math' → logprob: -5.65679931640625
    9. 'x' → logprob: -5.65679931640625
    10. '```' → logprob: -5.65679931640625

Token 155: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.38327786326408386
    2. 'r' (adapté à ' r') → logprob: -2.2582778930664062
    3. ' x' → logprob: -2.2582778930664062
    4. 'x' → logprob: -3.2582778930664062
    5. ' radius' → logprob: -3.8832778930664062
    6. 'radius' → logprob: -3.8832778930664062
    7. ' R' → logprob: -4.008277893066406
    8. ' theta' → logprob: -5.758277893066406
    9. 'R' → logprob: -5.883277893066406
    10. 'theta' → logprob: -6.133277893066406

Token 156: '=v' (ID: 89140)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018971992656588554
    2. '=v' → logprob: -4.893971920013428
    3. ' =' → logprob: -5.018971920013428
    4. '=w' → logprob: -6.018971920013428
    5. '=r' → logprob: -6.143971920013428
    6. '=(' → logprob: -9.893972396850586
    7. '=x' → logprob: -11.018972396850586
    8. '=float' → logprob: -11.143972396850586
    9. '=((' → logprob: -12.268972396850586
    10. '=int' → logprob: -12.518972396850586

Token 157: '/w' (ID: 10407)
  Prédit: '/w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/w' → logprob: -0.0026087139267474413
    2. '/' → logprob: -6.252608776092529
    3. ' /' → logprob: -7.377608776092529
    4. '/math' → logprob: -10.502608299255371
    5. '/(' → logprob: -11.627608299255371
    6. '/W' → logprob: -12.877608299255371
    7. 'w' → logprob: -13.127608299255371
    8. '   ' → logprob: -13.502608299255371
    9. '```' → logprob: -13.502608299255371
    10. '<w' → logprob: -13.627608299255371

Token 158: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15570273995399475
    2. 'x' → logprob: -2.780702829360962
    3. '
' → logprob: -3.155702829360962
    4. '+' → logprob: -5.405702590942383
    5. 'theta' → logprob: -5.530702590942383
    6. '               ' → logprob: -5.655702590942383
    7. '-' → logprob: -5.780702590942383
    8. '            
' → logprob: -5.780702590942383
    9. '   ' → logprob: -6.155702590942383
    10. '       ' → logprob: -6.405702590942383

Token 159: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7926284670829773
    2. ' x' → logprob: -0.9176284670829773
    3. 'x' → logprob: -2.042628526687622
    4. '   ' → logprob: -5.167628288269043
    5. '               ' → logprob: -5.542628288269043
    6. ' theta' → logprob: -5.542628288269043
    7. '       ' → logprob: -6.417628288269043
    8. 'theta' → logprob: -6.792628288269043
    9. '```' → logprob: -8.042628288269043
    10. '\n' → logprob: -8.167628288269043

Token 160: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.002866092836484313
    2. 'theta' → logprob: -5.877866268157959
    3. ' x' → logprob: -10.0028657913208
    4. '   ' → logprob: -12.0028657913208
    5. '           ' → logprob: -12.3778657913208
    6. 'cx' → logprob: -13.3778657913208
    7. ' theta' → logprob: -14.1278657913208
    8. 'dx' → logprob: -14.2528657913208
    9. '            
' → logprob: -14.7528657913208
    10. '	x' → logprob: -14.8778657913208

Token 161: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0023217720445245504
    2. ' +=' → logprob: -6.127321720123291
    3. '+=(' → logprob: -9.50232219696045
    4. '=' → logprob: -10.37732219696045
    5. '=x' → logprob: -11.37732219696045
    6. ']+=' → logprob: -11.75232219696045
    7. '+' → logprob: -12.37732219696045
    8. '-=' → logprob: -13.12732219696045
    9. '+='' → logprob: -13.25232219696045
    10. '```' → logprob: -14.37732219696045

Token 162: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.004873181227594614
    2. 'math' → logprob: -5.379873275756836
    3. ' r' → logprob: -9.004873275756836
    4. '(r' → logprob: -9.879873275756836
    5. ' math' → logprob: -10.004873275756836
    6. '-r' → logprob: -11.254873275756836
    7. '(math' → logprob: -11.629873275756836
    8. '(' → logprob: -13.129873275756836
    9. 'Math' → logprob: -13.129873275756836
    10. ' ' → logprob: -13.629873275756836

Token 163: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.13447831571102142
    2. '*' → logprob: -2.1344783306121826
    3. '(math' → logprob: -5.0094780921936035
    4. ' *' → logprob: -8.134478569030762
    5. '(' → logprob: -8.384478569030762
    6. '*Math' → logprob: -8.509478569030762
    7. '*sin' → logprob: -9.509478569030762
    8. '*(-' → logprob: -11.384478569030762
    9. 'math' → logprob: -11.634478569030762
    10. '   ' → logprob: -12.509478569030762

Token 164: 'math' (ID: 20310)
  Prédit: 'math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.0015061709564179182
    2. ' math' → logprob: -6.501506328582764
    3. '(math' → logprob: -12.501505851745605
    4. '   ' → logprob: -16.751506805419922
    5. ' ' → logprob: -18.126506805419922
    6. 'Math' → logprob: -18.501506805419922
    7. 'mat' → logprob: -18.876506805419922
    8. '-m' → logprob: -19.251506805419922
    9. '1' → logprob: -19.876506805419922
    10. '.math' → logprob: -20.001506805419922

Token 165: '.sin' (ID: 35734)
  Prédit: '.sin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sin' → logprob: -0.0031941127963364124
    2. 'sin' → logprob: -6.253194332122803
    3. '.s' → logprob: -7.253194332122803
    4. '.' → logprob: -8.128193855285645
    5. ' sin' → logprob: -10.003193855285645
    6. '.math' → logprob: -10.378193855285645
    7. '   ' → logprob: -10.503193855285645
    8. ' ' → logprob: -10.878193855285645
    9. '*sin' → logprob: -11.003193855285645
    10. '-' → logprob: -11.253193855285645

Token 166: '(theta' (ID: 69139)
  Prédit: '(theta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(theta' → logprob: -0.000284696085145697
    2. 'theta' → logprob: -8.250285148620605
    3. ' (' → logprob: -11.250285148620605
    4. '(' → logprob: -11.625285148620605
    5. ' theta' → logprob: -13.750285148620605
    6. ')' → logprob: -15.750285148620605
    7. '(
' → logprob: -16.50028419494629
    8. '
' → logprob: -17.00028419494629
    9. '.theta' → logprob: -17.75028419494629
    10. 'θ' → logprob: -18.00028419494629

Token 167: '+w' (ID: 155687)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5483778119087219
    2. '+w' → logprob: -0.9233778119087219
    3. ' +' → logprob: -4.048377990722656
    4. '+r' → logprob: -4.923377990722656
    5. '+t' → logprob: -9.673377990722656
    6. '+
' → logprob: -9.673377990722656
    7. '+x' → logprob: -10.173377990722656
    8. '()+' → logprob: -11.173377990722656
    9. '+l' → logprob: -12.548377990722656
    10. '+y' → logprob: -12.673377990722656

Token 168: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043293874710798264
    2. ')-' → logprob: -3.1682939529418945
    3. ' )' → logprob: -8.168293952941895
    4. ')-(' → logprob: -11.793293952941895
    5. ' ' → logprob: -14.293293952941895
    6. '*' → logprob: -14.668293952941895
    7. ')
' → logprob: -14.668293952941895
    8. ' -' → logprob: -15.543293952941895
    9. ')`' → logprob: -15.543293952941895
    10. ')*' → logprob: -15.543293952941895

Token 169: 'math' (ID: 20310)
  Prédit: 'math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.029751529917120934
    2. ' math' → logprob: -3.5297515392303467
    3. 'sin' → logprob: -14.404751777648926
    4. '(math' → logprob: -14.904751777648926
    5. 'mat' → logprob: -16.02975082397461
    6. 'Math' → logprob: -18.27975082397461
    7. '.math' → logprob: -18.52975082397461
    8. '_math' → logprob: -19.15475082397461
    9. ' ' → logprob: -19.65475082397461
    10. ' sin' → logprob: -20.02975082397461

Token 170: '.sin' (ID: 35734)
  Prédit: '.sin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sin' → logprob: -0.00019901065388694406
    2. 'sin' → logprob: -8.750199317932129
    3. '.cos' → logprob: -10.375199317932129
    4. '.' → logprob: -12.625199317932129
    5. '.s' → logprob: -13.000199317932129
    6. '*sin' → logprob: -13.375199317932129
    7. '.theta' → logprob: -13.500199317932129
    8. '.atan' → logprob: -15.000199317932129
    9. '.Sin' → logprob: -15.375199317932129
    10. ' sin' → logprob: -15.750199317932129

Token 171: '(theta' (ID: 69139)
  Prédit: '(theta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(theta' → logprob: -0.014240846037864685
    2. '(' → logprob: -4.264240741729736
    3. 'theta' → logprob: -9.639241218566895
    4. '(
' → logprob: -12.014241218566895
    5. ' (' → logprob: -12.764241218566895
    6. '(phi' → logprob: -14.139241218566895
    7. ')' → logprob: -14.264241218566895
    8. ' theta' → logprob: -14.389241218566895
    9. '(angle' → logprob: -14.514241218566895
    10. '(lambda' → logprob: -15.764241218566895

Token 172: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.001077110879123211
    2. ')' → logprob: -6.876077175140381
    3. '))
' → logprob: -10.626076698303223
    4. ')))' → logprob: -11.376076698303223
    5. ' ))' → logprob: -12.001076698303223
    6. '))

' → logprob: -13.626076698303223
    7. '));' → logprob: -15.751076698303223
    8. ' ' → logprob: -16.00107765197754
    9. '()))' → logprob: -16.00107765197754
    10. '```' → logprob: -16.25107765197754

Token 173: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04824017360806465
    2. '       ' → logprob: -4.1732401847839355
    3. '   ' → logprob: -4.5482401847839355
    4. '<|end|>' → logprob: -4.6732401847839355
    5. ' ' → logprob: -5.6732401847839355
    6. '```' → logprob: -6.5482401847839355
    7. '
' → logprob: -6.6732401847839355
    8. '            
' → logprob: -7.4232401847839355
    9. 'x' → logprob: -7.5482401847839355
    10. 'r' → logprob: -7.7982401847839355

Token 174: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.25207826495170593
    2. ' y' → logprob: -1.5020782947540283
    3. 'r' → logprob: -9.25207805633545
    4. '           ' → logprob: -10.25207805633545
    5. ' r' → logprob: -12.00207805633545
    6. '   ' → logprob: -12.00207805633545
    7. 'x' → logprob: -12.75207805633545
    8. ' ' → logprob: -14.37707805633545
    9. '          ' → logprob: -15.25207805633545
    10. '```' → logprob: -15.37707805633545

Token 175: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -1.6286106983898208e-05
    2. '+=(' → logprob: -11.250016212463379
    3. '+="' → logprob: -13.875016212463379
    4. ' +=' → logprob: -14.125016212463379
    5. '+='' → logprob: -14.125016212463379
    6. '+' → logprob: -14.625016212463379
    7. ']+=' → logprob: -14.875016212463379
    8. '-=' → logprob: -16.625017166137695
    9. '```' → logprob: -18.000017166137695
    10. '+-' → logprob: -18.250017166137695

Token 176: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.816093228830141e-06
    2. ' r' → logprob: -13.37500286102295
    3. '-r' → logprob: -13.62500286102295
    4. '-' → logprob: -18.250001907348633
    5. '	r' → logprob: -19.125001907348633
    6. '   ' → logprob: -20.500001907348633
    7. 'x' → logprob: -22.125001907348633
    8. '+r' → logprob: -22.250001907348633
    9. '_r' → logprob: -22.500001907348633
    10. '           ' → logprob: -22.875001907348633

Token 177: '*(-' (ID: 78771)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.03812342509627342
    2. '*(-' → logprob: -3.538123369216919
    3. '*' → logprob: -4.788123607635498
    4. '*((' → logprob: -12.03812313079834
    5. '*-' → logprob: -12.78812313079834
    6. '(' → logprob: -14.41312313079834
    7. '*Math' → logprob: -15.28812313079834
    8. '*cos' → logprob: -15.53812313079834
    9. '*
' → logprob: -16.538124084472656
    10. '*[' → logprob: -17.663124084472656

Token 178: 'math' (ID: 20310)
  Prédit: 'math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -3.9292415749514475e-05
    2. ' math' → logprob: -10.250039100646973
    3. '(math' → logprob: -12.750039100646973
    4. 'cmath' → logprob: -14.500039100646973
    5. 'cos' → logprob: -14.625039100646973
    6. 'mat' → logprob: -17.87504005432129
    7. 'Math' → logprob: -18.50004005432129
    8. '.math' → logprob: -18.87504005432129
    9. '   ' → logprob: -19.25004005432129
    10. '1' → logprob: -19.37504005432129

Token 179: '.cos' (ID: 44221)
  Prédit: '.cos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cos' → logprob: -0.0015062900492921472
    2. 'cos' → logprob: -6.501506328582764
    3. '*cos' → logprob: -13.876505851745605
    4. '.' → logprob: -14.126505851745605
    5. '_cos' → logprob: -14.126505851745605
    6. 'Cos' → logprob: -14.501505851745605
    7. '.Cos' → logprob: -14.501505851745605
    8. ' cos' → logprob: -14.626505851745605
    9. '.cost' → logprob: -17.001506805419922
    10. '.c' → logprob: -17.501506805419922

Token 180: '(theta' (ID: 69139)
  Prédit: '(theta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(theta' → logprob: -3.3213025744771585e-05
    2. 'theta' → logprob: -10.375033378601074
    3. '(' → logprob: -13.250033378601074
    4. ' (' → logprob: -16.375032424926758
    5. ' theta' → logprob: -17.750032424926758
    6. '(
' → logprob: -18.250032424926758
    7. '(phi' → logprob: -18.500032424926758
    8. '(the' → logprob: -18.500032424926758
    9. 'thet' → logprob: -19.125032424926758
    10. '(math' → logprob: -19.375032424926758

Token 181: '+w' (ID: 155687)
  Prédit: '(theta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(theta' → logprob: -0.8385063409805298
    2. '+w' → logprob: -1.3385063409805298
    3. 'theta' → logprob: -1.4635063409805298
    4. '+' → logprob: -2.8385062217712402
    5. ')' → logprob: -4.83850622177124
    6. ')+' → logprob: -5.08850622177124
    7. ' theta' → logprob: -7.46350622177124
    8. 'w' → logprob: -8.338506698608398
    9. '(' → logprob: -8.838506698608398
    10. '+)' → logprob: -9.713506698608398

Token 182: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.01862897165119648
    2. ')' → logprob: -4.01862907409668
    3. '+' → logprob: -7.76862907409668
    4. ' )' → logprob: -11.26862907409668
    5. ')+(' → logprob: -11.39362907409668
    6. ']+' → logprob: -11.76862907409668
    7. ')-' → logprob: -12.01862907409668
    8. '+y' → logprob: -12.39362907409668
    9. '+)' → logprob: -12.39362907409668
    10. '}+' → logprob: -12.64362907409668

Token 183: 'math' (ID: 20310)
  Prédit: 'math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.0023689894005656242
    2. ' math' → logprob: -6.252368927001953
    3. 'cos' → logprob: -7.752368927001953
    4. '(math' → logprob: -12.127368927001953
    5. '.math' → logprob: -12.502368927001953
    6. 'cmath' → logprob: -14.252368927001953
    7. '_math' → logprob: -15.502368927001953
    8. 'Math' → logprob: -15.877368927001953
    9. '```' → logprob: -16.252368927001953
    10. '/math' → logprob: -16.252368927001953

Token 184: '.cos' (ID: 44221)
  Prédit: '.cos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cos' → logprob: -0.00017040544480551034
    2. 'cos' → logprob: -8.750170707702637
    3. '(theta' → logprob: -12.625170707702637
    4. '.Cos' → logprob: -12.625170707702637
    5. '.' → logprob: -12.750170707702637
    6. '.theta' → logprob: -13.875170707702637
    7. ' cos' → logprob: -14.250170707702637
    8. '*cos' → logprob: -15.375170707702637
    9. '_cos' → logprob: -15.500170707702637
    10. '.sin' → logprob: -15.875170707702637

Token 185: '(theta' (ID: 69139)
  Prédit: '(theta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(theta' → logprob: -8.399378566537052e-05
    2. 'theta' → logprob: -9.500083923339844
    3. '(' → logprob: -11.750083923339844
    4. ' (' → logprob: -14.250083923339844
    5. ' theta' → logprob: -15.125083923339844
    6. '(
' → logprob: -16.250083923339844
    7. '(phi' → logprob: -16.875083923339844
    8. 'heta' → logprob: -18.000083923339844
    9. '(math' → logprob: -18.250083923339844
    10. '(lambda' → logprob: -18.750083923339844

Token 186: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.050372011959552765
    2. '))' → logprob: -3.0503721237182617
    3. ')
' → logprob: -6.550372123718262
    4. '))
' → logprob: -8.050372123718262
    5. ' )' → logprob: -11.175372123718262
    6. ')+' → logprob: -11.925372123718262
    7. ')t' → logprob: -13.050372123718262
    8. 'w' → logprob: -13.300372123718262
    9. 'theta' → logprob: -13.425372123718262
    10. ')))' → logprob: -13.925372123718262

Token 187: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005193320568650961
    2. '       ' → logprob: -6.13019323348999
    3. 'theta' → logprob: -6.25519323348999
    4. ' theta' → logprob: -8.005193710327148
    5. '```' → logprob: -8.380193710327148
    6. '    
' → logprob: -9.005193710327148
    7. '  ' → logprob: -9.380193710327148
    8. '<|end|>' → logprob: -9.755193710327148
    9. '           ' → logprob: -10.380193710327148
    10. '
' → logprob: -10.380193710327148

Token 188: ' theta' (ID: 43101)
  Prédit: 'theta'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'theta' (adapté à ' theta') → logprob: -0.0930410772562027
    2. '   ' → logprob: -2.718041181564331
    3. ' theta' → logprob: -4.468040943145752
    4. '	' → logprob: -4.968040943145752
    5. '       ' → logprob: -6.093040943145752
    6. '.theta' → logprob: -7.718040943145752
    7. '           ' → logprob: -8.09304141998291
    8. '		' → logprob: -8.21804141998291
    9. '
' → logprob: -8.34304141998291
    10. '	   ' → logprob: -8.84304141998291

Token 189: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0008452449692413211
    2. ' +=' → logprob: -7.250845432281494
    3. '+' → logprob: -9.625844955444336
    4. '+='' → logprob: -10.375844955444336
    5. ']+=' → logprob: -10.750844955444336
    6. '+=(' → logprob: -12.000844955444336
    7. '+="' → logprob: -12.125844955444336
    8. '=' → logprob: -12.375844955444336
    9. '<|end|>' → logprob: -14.125844955444336
    10. '```' → logprob: -16.250844955444336

Token 190: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.004078639671206474
    2. ' w' → logprob: -5.5040788650512695
    3. '	w' → logprob: -16.004077911376953
    4. '+w' → logprob: -17.129077911376953
    5. '```' → logprob: -18.754077911376953
    6. '*w' → logprob: -18.879077911376953
    7. '_w' → logprob: -19.129077911376953
    8. '   ' → logprob: -19.254077911376953
    9. 'wv' → logprob: -19.629077911376953
    10. '(w' → logprob: -20.129077911376953

Token 191: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 192: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 193: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0749698355793953
    2. ' print' → logprob: -2.69996976852417
    3. '   ' → logprob: -5.32496976852417
    4. ',' → logprob: -10.699970245361328
    5. ' ' → logprob: -11.199970245361328
    6. '	print' → logprob: -11.199970245361328
    7. 'theta' → logprob: -11.324970245361328
    8. '
' → logprob: -11.449970245361328
    9. ')' → logprob: -11.699970245361328
    10. 'x' → logprob: -11.949970245361328

Token 194: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.5114427208900452
    2. '(' → logprob: -1.0114426612854004
    3. '("' → logprob: -3.5114426612854004
    4. '('' → logprob: -5.2614426612854
    5. '(x' → logprob: -7.0114426612854
    6. '(round' → logprob: -8.386443138122559
    7. '()' → logprob: -8.636443138122559
    8. ' (' → logprob: -9.261443138122559
    9. 'f' → logprob: -9.636443138122559
    10. ' f' → logprob: -10.136443138122559

Token 195: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.0713782086968422
    2. '(' → logprob: -3.446378231048584
    3. '("{' → logprob: -3.946378231048584
    4. '(x' → logprob: -5.446378231048584
    5. '("%.' → logprob: -5.946378231048584
    6. ''{' → logprob: -6.071378231048584
    7. '{' → logprob: -6.446378231048584
    8. '(f' → logprob: -6.571378231048584
    9. '({' → logprob: -6.571378231048584
    10. 'loat' → logprob: -7.196378231048584

Token 196: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00029041420202702284
    2. 'abs' → logprob: -9.000290870666504
    3. 'round' → logprob: -9.000290870666504
    4. ' x' → logprob: -10.750290870666504
    5. 'math' → logprob: -11.250290870666504
    6. 'D' → logprob: -12.250290870666504
    7. 'y' → logprob: -13.750290870666504
    8. '(x' → logprob: -13.875290870666504
    9. 'int' → logprob: -14.375290870666504
    10. 'float' → logprob: -15.375290870666504

Token 197: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.00044437398901209235
    2. ':' → logprob: -7.750444412231445
    3. '}' → logprob: -11.500444412231445
    4. ' :.' → logprob: -12.625444412231445
    5. ':+' → logprob: -16.000444412231445
    6. ' .' → logprob: -17.000444412231445
    7. ' :' → logprob: -17.625444412231445
    8. ' ' → logprob: -17.875444412231445
    9. '.' → logprob: -18.250444412231445
    10. ':y' → logprob: -18.875444412231445

Token 198: '5' (ID: 20)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.5330576300621033
    2. '3' → logprob: -1.658057689666748
    3. '2' → logprob: -2.033057689666748
    4. '4' → logprob: -2.783057689666748
    5. '5' → logprob: -4.783057689666748
    6. '8' → logprob: -4.908057689666748
    7. '10' → logprob: -5.033057689666748
    8. '7' → logprob: -5.908057689666748
    9. '0' → logprob: -6.658057689666748
    10. '9' → logprob: -6.658057689666748

Token 199: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: 0.0
    2. 'g' → logprob: -18.0
    3. '
' → logprob: -18.625
    4. '}' → logprob: -18.875
    5. 'lf' → logprob: -20.375
    6. 'e' → logprob: -20.5
    7. '```' → logprob: -21.25
    8. ' f' → logprob: -21.875
    9. '

' → logprob: -22.25
    10. '[f' → logprob: -22.875

Token 200: '}")
' (ID: 23577)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -2.7968066206085496e-05
    2. ' }' → logprob: -10.875027656555176
    3. ' ' → logprob: -12.375027656555176
    4. ' {' → logprob: -13.000027656555176
    5. ' y' → logprob: -13.375027656555176
    6. 'f' → logprob: -15.125027656555176
    7. '}{' → logprob: -15.250027656555176
    8. ' f' → logprob: -15.500027656555176
    9. ' x' → logprob: -16.250028610229492
    10. '{' → logprob: -16.250028610229492

Token 201: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 202: ' print' (ID: 2123)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.964318037033081
    2. '<|end|>' → logprob: -1.214318037033081
    3. '"' → logprob: -1.839318037033081
    4. ' f' → logprob: -2.214318037033081
    5. '    ' → logprob: -4.33931827545166
    6. ',' → logprob: -4.33931827545166
    7. '  ' → logprob: -4.96431827545166
    8. '   ' → logprob: -5.46431827545166
    9. ' {' → logprob: -5.71431827545166
    10. ' y' → logprob: -5.83931827545166

Token 203: '(f' (ID: 1526)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011925315484404564
    2. '(f' → logprob: -4.511925220489502
    3. '("")' → logprob: -7.261925220489502
    4. '(' → logprob: -8.76192569732666
    5. '('' → logprob: -11.63692569732666
    6. 'f' → logprob: -12.51192569732666
    7. '()
' → logprob: -12.63692569732666
    8. '()}' → logprob: -14.88692569732666
    9. ' ()' → logprob: -15.13692569732666
    10. '(""' → logprob: -15.13692569732666

Token 204: '"{' (ID: 27510)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.015487664379179478
    2. '{' → logprob: -5.1404876708984375
    3. '(' → logprob: -5.6404876708984375
    4. '"{' → logprob: -5.6404876708984375
    5. 'f' → logprob: -6.2654876708984375
    6. '("{' → logprob: -7.8904876708984375
    7. '(y' → logprob: -9.265487670898438
    8. '($"{' → logprob: -11.390487670898438
    9. '("' → logprob: -12.015487670898438
    10. ' f' → logprob: -12.390487670898438

Token 205: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.127333340875339e-06
    2. ' y' → logprob: -13.250003814697266
    3. 'x' → logprob: -13.500003814697266
    4. '{' → logprob: -14.750003814697266
    5. 'abs' → logprob: -15.875003814697266
    6. '   ' → logprob: -16.625003814697266
    7. '0' → logprob: -16.625003814697266
    8. '-' → logprob: -17.125003814697266
    9. '"' → logprob: -17.375003814697266
    10. '-y' → logprob: -17.625003814697266

Token 206: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -6.704273118884885e-07
    2. ' :.' → logprob: -14.875000953674316
    3. '.' → logprob: -15.250000953674316
    4. '{' → logprob: -17.375
    5. '   ' → logprob: -17.75
    6. ' .' → logprob: -17.875
    7. '+.' → logprob: -18.5
    8. '=.' → logprob: -18.875
    9. 'f' → logprob: -19.0
    10. ' {:.' → logprob: -19.25

Token 207: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.375000953674316
    3. 'f' → logprob: -15.625000953674316
    4. '05' → logprob: -16.625
    5. '{' → logprob: -16.75
    6. '```' → logprob: -17.5
    7. '.' → logprob: -18.125
    8. '   ' → logprob: -19.625
    9. '  ' → logprob: -20.625
    10. '
' → logprob: -21.125

Token 208: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.1398757123970427e-05
    2. ' f' → logprob: -12.125011444091797
    3. '5' → logprob: -12.250011444091797
    4. ' ' → logprob: -15.000011444091797
    5. '```' → logprob: -15.375011444091797
    6. '}' → logprob: -15.500011444091797
    7. 'ф' → logprob: -16.375011444091797
    8. '
' → logprob: -16.500011444091797
    9. '   ' → logprob: -16.500011444091797
    10. '	f' → logprob: -17.000011444091797

Token 209: '}")' (ID: 122365)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.012702584266662598
    2. '}")' → logprob: -4.637702465057373
    3. '")
' → logprob: -5.887702465057373
    4. '}' → logprob: -9.137702941894531
    5. '}")
' → logprob: -10.012702941894531
    6. 'f' → logprob: -11.637702941894531
    7. '{' → logprob: -13.012702941894531
    8. '"}' → logprob: -13.262702941894531
    9. ')' → logprob: -14.012702941894531
    10. '")}' → logprob: -14.137702941894531


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 207
Tokens correctement prédits (1ère position, stricte): 110
Tokens correctement prédits (1ère position, avec adaptation): 117
Tokens correctement prédits (top 10): 178
Précision stricte (1ère position): 53.14%
Précision adaptée (1ère position): 56.52%
Précision (top 10): 85.99%
================================================================================
