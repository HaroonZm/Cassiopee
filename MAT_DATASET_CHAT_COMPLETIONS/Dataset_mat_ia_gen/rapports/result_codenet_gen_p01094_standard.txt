================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = input()
    if n == '0':
        break
    n = int(n)
    votes = input().split()
    counts = {}
    for c in votes:
        counts[c] = 0
    total_votes = n
    winner = None
    winner_at = None
    for i, v in enumerate(votes, 1):
        counts[v] += 1
        max_votes = max(counts.values())
        leaders = [k for k, val in counts.items() if val == max_votes]
        if len(leaders) == 1:
            leader = leaders[0]
            remaining = total_votes - i
            # Check if leader's lead is insurmountable
            can_others_catch = any(max_votes - counts[cand] <= remaining for cand in counts if cand != leader)
            if not can_others_catch:
                winner = leader
                winner_at = i
                break
    if winner is None:
        # check if tie or single winner at the end
        max_votes = max(counts.values())
        leaders = [k for k, val in counts.items() if val == max_votes]
        if len(leaders) == 1:
            winner = leaders[0]
            winner_at = n
        else:
            print("TIE")
            continue
    print(f"{winner} {winner_at}")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08060130476951599
    2. ' ' → logprob: -3.955601215362549
    3. '    ' → logprob: -4.455601215362549
    4. '    
' → logprob: -4.580601215362549
    5. '\n' → logprob: -5.080601215362549
    6. '\' → logprob: -5.080601215362549
    7. '```' → logprob: -5.080601215362549
    8. ' 
' → logprob: -5.205601215362549
    9. '<|end|>' → logprob: -5.705601215362549
    10. ':' → logprob: -6.580601215362549

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4779955744743347
    2. '    ' → logprob: -1.7279956340789795
    3. ' ' → logprob: -1.9779956340789795
    4. '```' → logprob: -3.6029956340789795
    5. '       ' → logprob: -4.7279953956604
    6. '  ' → logprob: -5.3529953956604
    7. '    
' → logprob: -5.6029953956604
    8. '        
' → logprob: -6.6029953956604
    9. 'pass' → logprob: -6.7279953956604
    10. '`' → logprob: -6.7279953956604

Token 5: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.0897926092147827
    2. ' ' → logprob: -1.2147926092147827
    3. '=' → logprob: -2.3397927284240723
    4. 'o' → logprob: -2.3397927284240723
    5. '+' → logprob: -2.9647927284240723
    6. '   ' → logprob: -3.2147927284240723
    7. '_' → logprob: -4.339792728424072
    8. '.' → logprob: -4.339792728424072
    9. 'e' → logprob: -4.839792728424072
    10. '%' → logprob: -4.964792728424072

Token 6: ' input' (ID: 3422)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.27525365352630615
    2. ' input' → logprob: -1.5252536535263062
    3. 'input' → logprob: -4.275253772735596
    4. 'int' → logprob: -4.775253772735596
    5. ' n' → logprob: -7.900253772735596
    6. ' ' → logprob: -9.025253295898438
    7. 'n' → logprob: -10.150253295898438
    8. ' eval' → logprob: -10.650253295898438
    9. '```' → logprob: -10.650253295898438
    10. ' randint' → logprob: -10.900253295898438

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00254415487870574
    2. '('' → logprob: -6.627543926239014
    3. ''' → logprob: -7.627543926239014
    4. '()' → logprob: -8.127544403076172
    5. '("("' → logprob: -8.252544403076172
    6. '```' → logprob: -9.877544403076172
    7. '"' → logprob: -10.002544403076172
    8. '`' → logprob: -11.377544403076172
    9. ''s' → logprob: -11.502544403076172
    10. ')' → logprob: -11.752544403076172

Token 8: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.3552186489105225
    2. ' ' → logprob: -1.6052186489105225
    3. '   ' → logprob: -1.6052186489105225
    4. ' ==' → logprob: -2.3552186489105225
    5. '<|end|>' → logprob: -2.6052186489105225
    6. '==' → logprob: -3.8552186489105225
    7. '```' → logprob: -4.105218887329102
    8. ')' → logprob: -4.105218887329102
    9. '  
' → logprob: -4.230218887329102
    10. '    ' → logprob: -4.355218887329102

Token 9: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.48448431491851807
    2. ' ' → logprob: -2.4844841957092285
    3. ' ==' → logprob: -2.6094841957092285
    4. '   ' → logprob: -3.2344841957092285
    5. 'if' (adapté à ' if') → logprob: -3.2344841957092285
    6. '\n' → logprob: -3.4844841957092285
    7. '.' → logprob: -3.6094841957092285
    8. '==' → logprob: -3.8594841957092285
    9. '    ' → logprob: -4.3594841957092285
    10. ')' → logprob: -4.8594841957092285

Token 10: ' n' (ID: 297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4405902624130249
    2. ' ' → logprob: -1.565590262413025
    3. ' n' → logprob: -1.940590262413025
    4. 'n' → logprob: -6.1905903816223145
    5. 'not' → logprob: -6.5655903816223145
    6. '  ' → logprob: -8.190589904785156
    7. ' ' → logprob: -12.065589904785156
    8. ' n't' → logprob: -12.065589904785156
    9. '<|end|>' → logprob: -13.315589904785156
    10. '	not' → logprob: -13.440589904785156

Token 11: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07064059376716614
    2. '==' → logprob: -3.0706405639648438
    3. '.' → logprob: -4.445640563964844
    4. '.strip' → logprob: -6.070640563964844
    5. ' .' → logprob: -6.195640563964844
    6. ' !=' → logprob: -6.320640563964844
    7. ' ' → logprob: -6.945640563964844
    8. ')' → logprob: -7.195640563964844
    9. '.is' → logprob: -7.320640563964844
    10. ' =' → logprob: -8.570640563964844

Token 12: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2559840679168701
    2. ''' → logprob: -1.5059840679168701
    3. ' ' → logprob: -6.755984306335449
    4. ' '' → logprob: -7.005984306335449
    5. ' "' → logprob: -7.005984306335449
    6. '''' → logprob: -7.505984306335449
    7. '""' → logprob: -7.755984306335449
    8. ' ''' → logprob: -10.88098430633545
    9. '"\' → logprob: -11.38098430633545
    10. ' ""' → logprob: -11.75598430633545

Token 13: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6028603911399841
    2. '\n' → logprob: -1.352860450744629
    3. '':' → logprob: -2.102860450744629
    4. 'q' → logprob: -3.852860450744629
    5. '0' → logprob: -3.977860450744629
    6. ''\' → logprob: -4.102860450744629
    7. 'quit' → logprob: -5.352860450744629
    8. 'exit' → logprob: -5.727860450744629
    9. ''ex' → logprob: -5.977860450744629
    10. '"' → logprob: -6.477860450744629

Token 14: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.02475801110267639
    2. ''' → logprob: -3.7747581005096436
    3. '\n' → logprob: -6.8997578620910645
    4. ':' → logprob: -8.524758338928223
    5. '':
' → logprob: -9.024758338928223
    6. ' ':' → logprob: -9.399758338928223
    7. '':
' → logprob: -9.899758338928223
    8. '":' → logprob: -10.899758338928223
    9. ' '' → logprob: -12.149758338928223
    10. ''):' → logprob: -12.274758338928223

Token 15: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027272517327219248
    2. ' break' → logprob: -6.502727031707764
    3. '\n' → logprob: -7.502727031707764
    4. '   ' → logprob: -7.752727031707764
    5. '    ' → logprob: -9.127727508544922
    6. '      ' → logprob: -10.752727508544922
    7. ' \' → logprob: -10.877727508544922
    8. ' ' → logprob: -11.002727508544922
    9. '     ' → logprob: -11.127727508544922
    10. '	break' → logprob: -11.127727508544922

Token 16: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14348897337913513
    2. ' break' → logprob: -2.018488883972168
    3. '   ' → logprob: -8.143488883972168
    4. '\n' → logprob: -9.018488883972168
    5. '	break' → logprob: -9.143488883972168
    6. 'break' (adapté à ' break') → logprob: -9.518488883972168
    7. ' ' → logprob: -10.018488883972168
    8. ' \' → logprob: -10.018488883972168
    9. ' ' → logprob: -10.768488883972168
    10. '           ' → logprob: -10.768488883972168

Token 17: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0000410079956055
    2. '    
' → logprob: -1.1250410079956055
    3. '\n' → logprob: -2.1250410079956055
    4. '
' → logprob: -2.7500410079956055
    5. '  
' → logprob: -3.1250410079956055
    6. ' 
' → logprob: -3.8750410079956055
    7. '\' → logprob: -4.3750410079956055
    8. '<|end|>' → logprob: -4.8750410079956055
    9. ')' → logprob: -5.0000410079956055
    10. 'n' → logprob: -5.2500410079956055

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3588732182979584
    2. '<|end|>' → logprob: -1.8588732481002808
    3. '    
' → logprob: -2.733873128890991
    4. '
' → logprob: -3.483873128890991
    5. '\n' → logprob: -3.858873128890991
    6. ')' → logprob: -5.48387336730957
    7. '#' → logprob: -5.60887336730957
    8. '  
' → logprob: -5.60887336730957
    9. '<|end|>' → logprob: -5.60887336730957
    10. '```' → logprob: -6.10887336730957

Token 19: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8510352373123169
    2. '   ' → logprob: -1.101035237312317
    3. '    ' → logprob: -2.9760351181030273
    4. '<|end|>' → logprob: -3.2260351181030273
    5. 'print' → logprob: -3.4760351181030273
    6. '\n' → logprob: -4.101035118103027
    7. 'n' (adapté à ' n') → logprob: -4.226035118103027
    8. ',' → logprob: -4.351035118103027
    9. '\' → logprob: -4.726035118103027
    10. ':' → logprob: -4.976035118103027

Token 20: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7841298580169678
    2. '<|end|>' → logprob: -1.6591298580169678
    3. ')' → logprob: -2.4091298580169678
    4. ' ' → logprob: -2.5341298580169678
    5. '.' → logprob: -2.7841298580169678
    6. '[' → logprob: -3.2841298580169678
    7. '<|end|>' → logprob: -4.159130096435547
    8. '#' → logprob: -4.159130096435547
    9. '\n' → logprob: -4.534130096435547
    10. '\' → logprob: -4.909130096435547

Token 21: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.19511596858501434
    2. ' n' → logprob: -2.3201160430908203
    3. 'int' → logprob: -2.6951160430908203
    4. 'n' → logprob: -5.07011604309082
    5. ' list' → logprob: -5.57011604309082
    6. ' ' → logprob: -8.07011604309082
    7. ' input' → logprob: -8.32011604309082
    8. 'list' → logprob: -8.57011604309082
    9. ' len' → logprob: -9.32011604309082
    10. '[int' → logprob: -9.44511604309082

Token 22: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4742371141910553
    2. '(' → logprob: -0.9742370843887329
    3. '()' → logprob: -9.224237442016602
    4. '(input' → logprob: -10.724237442016602
    5. ' (' → logprob: -11.349237442016602
    6. '('' → logprob: -12.349237442016602
    7. ')' → logprob: -12.474237442016602
    8. '(
' → logprob: -12.974237442016602
    9. '(int' → logprob: -13.099237442016602
    10. 'n' → logprob: -13.349237442016602

Token 23: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015276329941116273
    2. ')
' → logprob: -9.750152587890625
    3. '+' → logprob: -10.125152587890625
    4. ' )' → logprob: -10.500152587890625
    5. '))' → logprob: -12.375152587890625
    6. '*' → logprob: -12.500152587890625
    7. '`)' → logprob: -12.625152587890625
    8. '**' → logprob: -12.875152587890625
    9. '')' → logprob: -13.000152587890625
    10. ')+' → logprob: -13.125152587890625

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1040652990341187
    2. '<|end|>' → logprob: -1.3540652990341187
    3. ' ' → logprob: -1.6040652990341187
    4. '+' → logprob: -2.479065418243408
    5. ' 
' → logprob: -3.854065418243408
    6. '\n' → logprob: -3.979065418243408
    7. '    
' → logprob: -4.354065418243408
    8. '  
' → logprob: -4.729065418243408
    9. ':' → logprob: -4.854065418243408
    10. '    ' → logprob: -5.104065418243408

Token 25: ' votes' (ID: 24183)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34943389892578125
    2. '   ' → logprob: -2.0994338989257812
    3. ' 
' → logprob: -2.5994338989257812
    4. '    ' → logprob: -4.349433898925781
    5. 'n' → logprob: -4.474433898925781
    6. '<|end|>' → logprob: -4.474433898925781
    7. ' if' → logprob: -4.724433898925781
    8. '    
' → logprob: -4.849433898925781
    9. '  
' → logprob: -4.849433898925781
    10. 's' → logprob: -5.099433898925781

Token 26: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7809181213378906
    2. ' =' → logprob: -1.5309181213378906
    3. '_count' → logprob: -2.1559181213378906
    4. '_' → logprob: -3.0309181213378906
    5. '_counts' → logprob: -3.0309181213378906
    6. '.' → logprob: -3.1559181213378906
    7. '=' → logprob: -3.5309181213378906
    8. '.count' → logprob: -3.5309181213378906
    9. '.setdefault' → logprob: -6.155918121337891
    10. 'count' → logprob: -6.530918121337891

Token 27: ' input' (ID: 3422)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.4295492172241211
    2. '[' → logprob: -2.179549217224121
    3. '{}' → logprob: -2.179549217224121
    4. ' {}' → logprob: -2.804549217224121
    5. ' []' → logprob: -2.929549217224121
    6. '[]' → logprob: -4.804549217224121
    7. ' ' → logprob: -8.429549217224121
    8. ' defaultdict' → logprob: -9.179549217224121
    9. '[n' → logprob: -9.304549217224121
    10. ' {' → logprob: -9.804549217224121

Token 28: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011093330569565296
    2. '(' → logprob: -4.5110931396484375
    3. '().' → logprob: -10.636093139648438
    4. ' ()' → logprob: -12.261093139648438
    5. '('' → logprob: -12.636093139648438
    6. ')' → logprob: -12.886093139648438
    7. '())' → logprob: -13.386093139648438
    8. '()`' → logprob: -13.386093139648438
    9. '()
' → logprob: -14.011093139648438
    10. '   ' → logprob: -14.011093139648438

Token 29: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.003240578342229128
    2. 'strip' → logprob: -5.753240585327148
    3. 'rstrip' → logprob: -10.503240585327148
    4. 'spl' → logprob: -11.128240585327148
    5. 's' → logprob: -11.378240585327148
    6. 'sp' → logprob: -12.628240585327148
    7. ' split' → logprob: -12.753240585327148
    8. 'replace' → logprob: -12.878240585327148
    9. 'count' → logprob: -15.753240585327148
    10. '(split' → logprob: -15.878240585327148

Token 30: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6521632075309753
    2. '('' → logprob: -0.9021632075309753
    3. '()' → logprob: -2.77716326713562
    4. '("("' → logprob: -4.527163028717041
    5. ''' → logprob: -8.7771635055542
    6. '(`' → logprob: -9.7771635055542
    7. '("' → logprob: -10.7771635055542
    8. '```' → logprob: -11.0271635055542
    9. '('.')' → logprob: -11.5271635055542
    10. '(',' → logprob: -11.5271635055542

Token 31: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.36728519201278687
    2. ' ' → logprob: -2.1172852516174316
    3. '<|end|>' → logprob: -2.1172852516174316
    4. '   ' → logprob: -3.8672852516174316
    5. '\n' → logprob: -4.992285251617432
    6. ')' → logprob: -4.992285251617432
    7. '[:]' → logprob: -5.617285251617432
    8. '\' → logprob: -5.742285251617432
    9. '.' → logprob: -5.867285251617432
    10. ' 
' → logprob: -5.867285251617432

Token 32: ' counts' (ID: 28991)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0437426567077637
    2. 'c' → logprob: -1.2937426567077637
    3. 't' → logprob: -3.0437426567077637
    4. ' ' → logprob: -3.1687426567077637
    5. 'count' → logprob: -3.1687426567077637
    6. 'votes' → logprob: -3.7937426567077637
    7. 'i' → logprob: -3.9187426567077637
    8. 'n' → logprob: -3.9187426567077637
    9. 'valid' → logprob: -3.9187426567077637
    10. '   ' → logprob: -4.043742656707764

Token 33: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.45660367608070374
    2. ' =' → logprob: -1.4566036462783813
    3. '[' → logprob: -2.331603765487671
    4. '_' → logprob: -3.581603765487671
    5. '.' → logprob: -5.081603527069092
    6. '.setdefault' → logprob: -6.956603527069092
    7. 's' → logprob: -7.581603527069092
    8. '(' → logprob: -8.83160400390625
    9. '   ' → logprob: -9.08160400390625
    10. ')' → logprob: -9.08160400390625

Token 34: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.02462926134467125
    2. ' {}' → logprob: -4.02462911605835
    3. '[' → logprob: -5.77462911605835
    4. ' [' → logprob: -6.14962911605835
    5. '{' → logprob: -6.77462911605835
    6. ' {' → logprob: -10.899629592895508
    7. 'dict' → logprob: -11.399629592895508
    8. '[]' → logprob: -11.524629592895508
    9. ' []' → logprob: -11.774629592895508
    10. ' defaultdict' → logprob: -11.774629592895508

Token 35: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21977116167545319
    2. ' ' → logprob: -2.219771146774292
    3. ' for' → logprob: -2.594771146774292
    4. ' 
' → logprob: -5.344771385192871
    5. '   ' → logprob: -5.844771385192871
    6. '<|end|>' → logprob: -6.219771385192871
    7. '[' → logprob: -7.344771385192871
    8. '.' → logprob: -7.344771385192871
    9. '    
' → logprob: -7.594771385192871
    10. 't' → logprob: -8.094771385192871

Token 36: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.023137971758842468
    2. '   ' → logprob: -4.523138046264648
    3. ' for' → logprob: -4.648138046264648
    4. 'f' → logprob: -6.648138046264648
    5. ' ' → logprob: -7.398138046264648
    6. 'v' → logprob: -9.023138046264648
    7. ' 
' → logprob: -9.148138046264648
    8. 't' → logprob: -10.023138046264648
    9. 'i' → logprob: -10.148138046264648
    10. '    ' → logprob: -10.273138046264648

Token 37: ' c' (ID: 274)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.34126266837120056
    2. ' vote' → logprob: -1.466262698173523
    3. ' ' → logprob: -3.2162625789642334
    4. 'v' → logprob: -4.7162628173828125
    5. 'vote' → logprob: -5.7162628173828125
    6. ' i' → logprob: -6.2162628173828125
    7. ' c' → logprob: -6.3412628173828125
    8. ' candidate' → logprob: -7.4662628173828125
    9. '  ' → logprob: -8.466262817382812
    10. ' _' → logprob: -8.466262817382812

Token 38: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04038731008768082
    2. 'in' → logprob: -3.2903873920440674
    3. ' ' → logprob: -6.540387153625488
    4. '  ' → logprob: -7.540387153625488
    5. '   ' → logprob: -8.915387153625488
    6. 'i' → logprob: -9.290387153625488
    7. '	in' → logprob: -10.290387153625488
    8. ' i' → logprob: -10.415387153625488
    9. 's' → logprob: -11.290387153625488
    10. 'o' → logprob: -11.290387153625488

Token 39: ' votes' (ID: 24183)
  Prédit: ' votes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' votes' → logprob: -0.04312524572014809
    2. 'votes' → logprob: -3.1681251525878906
    3. ' votos' → logprob: -10.54312515258789
    4. ' ' → logprob: -10.54312515258789
    5. 'v' → logprob: -10.66812515258789
    6. '_votes' → logprob: -11.04312515258789
    7. 'Votes' → logprob: -11.66812515258789
    8. ' vote' → logprob: -11.91812515258789
    9. ' v' → logprob: -12.04312515258789
    10. 'vote' → logprob: -12.79312515258789

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003989720717072487
    2. ' :' → logprob: -7.875399112701416
    3. ':**' → logprob: -11.750398635864258
    4. '):' → logprob: -12.500398635864258
    5. '   ' → logprob: -13.500398635864258
    6. '=' → logprob: -13.750398635864258
    7. ':
' → logprob: -13.750398635864258
    8. '[:]' → logprob: -14.125398635864258
    9. ',' → logprob: -14.750398635864258
    10. '>:' → logprob: -15.000398635864258

Token 41: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16082750260829926
    2. ' counts' → logprob: -2.535827398300171
    3. '   ' → logprob: -3.410827398300171
    4. '    ' → logprob: -3.410827398300171
    5. 'counts' → logprob: -7.03582763671875
    6. '_counts' → logprob: -7.28582763671875
    7. ' ' → logprob: -7.53582763671875
    8. '<|end|>' → logprob: -7.91082763671875
    9. ' if' → logprob: -8.28582763671875
    10. '        ' → logprob: -9.16082763671875

Token 42: ' counts' (ID: 28991)
  Prédit: ' counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.02302614413201809
    2. 'counts' (adapté à ' counts') → logprob: -4.273025989532471
    3. '       ' → logprob: -5.898025989532471
    4. '    ' → logprob: -6.148025989532471
    5. ' if' → logprob: -6.648025989532471
    6. '   ' → logprob: -7.023025989532471
    7. ' ' → logprob: -7.023025989532471
    8. '_counts' → logprob: -7.398025989532471
    9. 'if' → logprob: -10.023026466369629
    10. ' 
' → logprob: -10.148026466369629

Token 43: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -3.3451433409936726e-05
    2. '.setdefault' → logprob: -10.750033378601074
    3. '[' → logprob: -11.500033378601074
    4. '[count' → logprob: -13.500033378601074
    5. ' [' → logprob: -16.00003433227539
    6. '.' → logprob: -16.12503433227539
    7. '.get' → logprob: -16.62503433227539
    8. 'c' → logprob: -17.00003433227539
    9. '[get' → logprob: -17.50003433227539
    10. '[...]' → logprob: -18.00003433227539

Token 44: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001484747277572751
    2. ']=' → logprob: -6.8764848709106445
    3. ' ]' → logprob: -8.626484870910645
    4. ']+=' → logprob: -8.626484870910645
    5. '=' → logprob: -9.376484870910645
    6. ' =' → logprob: -11.876484870910645
    7. '']' → logprob: -14.626484870910645
    8. ')' → logprob: -15.626484870910645
    9. ']]' → logprob: -15.751484870910645
    10. '"]' → logprob: -15.751484870910645

Token 45: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869000971317291
    2. ' =' → logprob: -1.1369000673294067
    3. ' +=' → logprob: -11.136899948120117
    4. '+=' → logprob: -11.261899948120117
    5. ' ' → logprob: -13.761899948120117
    6. '=count' → logprob: -15.636899948120117
    7. ' =)' → logprob: -16.261899948120117
    8. '＝' → logprob: -16.261899948120117
    9. '=

' → logprob: -17.386899948120117
    10. '=int' → logprob: -17.386899948120117

Token 46: ' ' (ID: 220)
  Prédit: ' counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.42877164483070374
    2. 'counts' → logprob: -1.0537716150283813
    3. 'count' → logprob: -10.05377197265625
    4. '0' → logprob: -11.67877197265625
    5. 'votes' → logprob: -12.30377197265625
    6. ' votes' → logprob: -12.55377197265625
    7. ' ' → logprob: -12.67877197265625
    8. '1' → logprob: -12.67877197265625
    9. '_counts' → logprob: -13.42877197265625
    10. ' count' → logprob: -13.67877197265625

Token 47: '0' (ID: 15)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.08899911493062973
    2. ' counts' → logprob: -2.463999032974243
    3. 'count' → logprob: -9.963998794555664
    4. 'votes' → logprob: -12.088998794555664
    5. '1' → logprob: -12.588998794555664
    6. '0' → logprob: -13.463998794555664
    7. 'c' → logprob: -14.588998794555664
    8. ' ' → logprob: -14.588998794555664
    9. '_counts' → logprob: -14.963998794555664
    10. ' votes' → logprob: -15.088998794555664

Token 48: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6264086961746216
    2. 'counts' → logprob: -1.6264086961746216
    3. '    
' → logprob: -2.501408576965332
    4. ' counts' → logprob: -3.001408576965332
    5. '       ' → logprob: -3.126408576965332
    6. ' ' → logprob: -3.626408576965332
    7. '[' → logprob: -4.001408576965332
    8. ' 
' → logprob: -4.626408576965332
    9. 'for' → logprob: -4.751408576965332
    10. '
' → logprob: -5.251408576965332

Token 49: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.519683599472046
    2. '
' → logprob: -1.519683599472046
    3. '   ' → logprob: -1.769683599472046
    4. '    
' → logprob: -2.644683599472046
    5. ' 
' → logprob: -3.019683599472046
    6. ' counts' → logprob: -3.269683599472046
    7. 'counts' → logprob: -3.269683599472046
    8. ' ' → logprob: -3.769683599472046
    9. '  
' → logprob: -3.894683599472046
    10. 'for' → logprob: -3.894683599472046

Token 50: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08346819132566452
    2. 'for' → logprob: -2.708468198776245
    3. 'counts' → logprob: -5.208467960357666
    4. ' for' → logprob: -5.708467960357666
    5. '       ' → logprob: -6.208467960357666
    6. ' counts' → logprob: -6.958467960357666
    7. '    ' → logprob: -7.708467960357666
    8. ' ' → logprob: -8.083468437194824
    9. '    
' → logprob: -8.458468437194824
    10. '[' → logprob: -8.583468437194824

Token 51: '_votes' (ID: 167389)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.32420292496681213
    2. '_counts' → logprob: -2.0742030143737793
    3. '_votes' → logprob: -2.5742030143737793
    4. '<|end|>' → logprob: -3.3242030143737793
    5. ' ' → logprob: -3.8242030143737793
    6. '=' → logprob: -5.699203014373779
    7. ' =' → logprob: -6.199203014373779
    8. 'Votes' → logprob: -6.699203014373779
    9. '_count' → logprob: -7.074203014373779
    10. '<|end|>' → logprob: -7.074203014373779

Token 52: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: ' n' (ID: 297)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.30068671703338623
    2. 'len' → logprob: -1.9256867170333862
    3. ' n' → logprob: -3.050686836242676
    4. '0' → logprob: -3.175686836242676
    5. ' ' → logprob: -3.800686836242676
    6. 'n' → logprob: -6.300686836242676
    7. ' sum' → logprob: -7.925686836242676
    8. 'sum' → logprob: -9.175686836242676
    9. ' votes' → logprob: -10.050686836242676
    10. ' int' → logprob: -10.925686836242676

Token 54: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11544620245695114
    2. '
' → logprob: -2.490446090698242
    3. '<|end|>' → logprob: -3.865446090698242
    4. 'for' → logprob: -6.115446090698242
    5. ' for' → logprob: -6.365446090698242
    6. ' ' → logprob: -7.865446090698242
    7. '<|end|>' → logprob: -8.240446090698242
    8. '    
' → logprob: -8.240446090698242
    9. ' 
' → logprob: -9.615446090698242
    10. '  ' → logprob: -9.740446090698242

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020445888862013817
    2. 'for' → logprob: -4.270445823669434
    3. ' for' → logprob: -6.020445823669434
    4. '<|end|>' → logprob: -6.395445823669434
    5. '
' → logprob: -7.020445823669434
    6. '    
' → logprob: -7.520445823669434
    7. ' ' → logprob: -8.145445823669434
    8. '  
' → logprob: -9.270445823669434
    9. ' 
' → logprob: -9.270445823669434
    10. '       ' → logprob: -9.770445823669434

Token 56: ' winner' (ID: 19499)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22322522103786469
    2. 'for' → logprob: -1.7232252359390259
    3. ' for' → logprob: -3.9732251167297363
    4. '<|end|>' → logprob: -7.098225116729736
    5. ' ' → logprob: -7.223225116729736
    6. '
' → logprob: -7.848225116729736
    7. '  ' → logprob: -8.473225593566895
    8. '	for' → logprob: -8.473225593566895
    9. '    
' → logprob: -8.723225593566895
    10. '       ' → logprob: -9.973225593566895

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.558516263961792
    2. '_' → logprob: -1.058516263961792
    3. '=' → logprob: -2.808516263961792
    4. '_votes' → logprob: -5.183516502380371
    5. '_count' → logprob: -5.433516502380371
    6. '_counts' → logprob: -5.433516502380371
    7. 's' → logprob: -5.933516502380371
    8. ',' → logprob: -6.558516502380371
    9. ' ' → logprob: -7.058516502380371
    10. '_found' → logprob: -7.558516502380371

Token 58: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.568075954914093
    2. ' None' → logprob: -1.0680758953094482
    3. ''' → logprob: -3.4430758953094482
    4. '''' → logprob: -3.5680758953094482
    5. ' ''' → logprob: -4.943076133728027
    6. 'max' → logprob: -5.318076133728027
    7. '"' → logprob: -5.443076133728027
    8. ' max' → logprob: -5.693076133728027
    9. ' '' → logprob: -5.818076133728027
    10. '""' → logprob: -6.318076133728027

Token 59: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6265936493873596
    2. '
' → logprob: -1.3765935897827148
    3. '<|end|>' → logprob: -1.6265935897827148
    4. '    
' → logprob: -5.251593589782715
    5. ' for' → logprob: -6.001593589782715
    6. ' 
' → logprob: -6.001593589782715
    7. '  
' → logprob: -6.251593589782715
    8. '\n' → logprob: -7.001593589782715
    9. 'for' → logprob: -7.251593589782715
    10. ' ' → logprob: -7.376593589782715

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07131083309650421
    2. '
' → logprob: -3.0713107585906982
    3. '<|end|>' → logprob: -4.821310997009277
    4. '    
' → logprob: -5.821310997009277
    5. ' for' → logprob: -5.821310997009277
    6. 'for' → logprob: -6.071310997009277
    7. ' ' → logprob: -6.071310997009277
    8. ' 
' → logprob: -6.446310997009277
    9. '       ' → logprob: -7.821310997009277
    10. '  
' → logprob: -8.071310997009277

Token 61: ' winner' (ID: 19499)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5153338313102722
    2. ' ' → logprob: -2.265333890914917
    3. 'for' → logprob: -2.265333890914917
    4. ' for' → logprob: -2.765333890914917
    5. ' 
' → logprob: -2.765333890914917
    6. '<|end|>' → logprob: -3.265333890914917
    7. '
' → logprob: -4.765333652496338
    8. '    
' → logprob: -4.765333652496338
    9. '    ' → logprob: -6.015333652496338
    10. '  ' → logprob: -6.390333652496338

Token 62: '_at' (ID: 8254)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5940963625907898
    2. '=' → logprob: -1.7190964221954346
    3. '_counts' → logprob: -1.9690964221954346
    4. '_' → logprob: -2.9690964221954346
    5. ',' → logprob: -3.7190964221954346
    6. '_count' → logprob: -3.9690964221954346
    7. ' ' → logprob: -4.5940961837768555
    8. '_votes' → logprob: -5.3440961837768555
    9. '<|end|>' → logprob: -5.5940961837768555
    10. ':' → logprob: -5.8440961837768555

Token 63: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.37077397108078003
    2. ' =' → logprob: -1.9957740306854248
    3. '_le' → logprob: -2.995774030685425
    4. 'tributes' → logprob: -3.870774030685425
    5. 't' → logprob: -3.995774030685425
    6. '_' → logprob: -3.995774030685425
    7. '<|end|>' → logprob: -4.620773792266846
    8. ' ' → logprob: -5.370773792266846
    9. 'tribution' → logprob: -5.495773792266846
    10. 'ed' → logprob: -5.495773792266846

Token 64: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20388340950012207
    2. '-' → logprob: -2.953883409500122
    3. ' ' → logprob: -2.953883409500122
    4. ' -' → logprob: -3.328883409500122
    5. ' None' → logprob: -3.953883409500122
    6. 'None' → logprob: -4.203883171081543
    7. 'n' → logprob: -5.578883171081543
    8. ' n' → logprob: -5.828883171081543
    9. 'total' → logprob: -7.203883171081543
    10. '100' → logprob: -7.328883171081543

Token 65: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006904694717377424
    2. 'for' → logprob: -6.006904602050781
    3. ' for' → logprob: -6.756904602050781
    4. '<|end|>' → logprob: -6.756904602050781
    5. '    
' → logprob: -7.131904602050781
    6. '
' → logprob: -7.256904602050781
    7. ' ' → logprob: -8.381904602050781
    8. '  ' → logprob: -10.256904602050781
    9. ' 
' → logprob: -10.381904602050781
    10. '  
' → logprob: -10.381904602050781

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026765933260321617
    2. 'for' → logprob: -4.276765823364258
    3. ' for' → logprob: -5.026765823364258
    4. '    
' → logprob: -5.776765823364258
    5. '
' → logprob: -7.276765823364258
    6. '<|end|>' → logprob: -7.401765823364258
    7. ' ' → logprob: -7.901765823364258
    8. ' 
' → logprob: -8.276765823364258
    9. '```' → logprob: -8.276765823364258
    10. '       ' → logprob: -8.901765823364258

Token 67: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03255320340394974
    2. '   ' → logprob: -4.032553195953369
    3. ' for' → logprob: -4.282553195953369
    4. ' ' → logprob: -8.282553672790527
    5. '	for' → logprob: -10.157553672790527
    6. '  ' → logprob: -10.282553672790527
    7. '    
' → logprob: -10.532553672790527
    8. 'while' → logprob: -10.782553672790527
    9. '```' → logprob: -10.782553672790527
    10. '<|end|>' → logprob: -11.032553672790527

Token 68: ' i' (ID: 575)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.002712500048801303
    2. 'c' → logprob: -7.502712726593018
    3. ' v' → logprob: -7.627712726593018
    4. ' ' → logprob: -7.752712726593018
    5. ' i' → logprob: -7.752712726593018
    6. ' candidate' → logprob: -7.752712726593018
    7. ' vote' → logprob: -9.25271224975586
    8. ' key' → logprob: -9.37771224975586
    9. ' k' → logprob: -9.87771224975586
    10. ' t' → logprob: -11.06521224975586

Token 69: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09372828900814056
    2. ',' → logprob: -2.7187283039093018
    3. ' ' → logprob: -4.343728065490723
    4. 'n' → logprob: -5.093728065490723
    5. 'in' → logprob: -5.718728065490723
    6. ' ,' → logprob: -7.343728065490723
    7. ' n' → logprob: -8.218728065490723
    8. '  ' → logprob: -9.843728065490723
    9. ',n' → logprob: -9.968728065490723
    10. 's' → logprob: -10.843728065490723

Token 70: ' v' (ID: 323)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.06074487045407295
    2. 'c' → logprob: -3.5607447624206543
    3. ' v' → logprob: -3.6857447624206543
    4. 'v' → logprob: -5.435744762420654
    5. ' candidate' → logprob: -7.810744762420654
    6. ' vote' → logprob: -8.310745239257812
    7. ' ' → logprob: -8.810745239257812
    8. 'vote' → logprob: -9.310745239257812
    9. 'candidate' → logprob: -9.435745239257812
    10. '```' → logprob: -11.248245239257812

Token 71: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.049114011228084564
    2. 'otes' → logprob: -3.2991139888763428
    3. 'in' → logprob: -5.424114227294922
    4. 'ote' → logprob: -6.424114227294922
    5. 'al' → logprob: -6.549114227294922
    6. 'oter' → logprob: -7.174114227294922
    7. 'alue' → logprob: -7.299114227294922
    8. 'ot' → logprob: -7.424114227294922
    9. 's' → logprob: -7.549114227294922
    10. 'oters' → logprob: -8.049114227294922

Token 72: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -2.9040898880339228e-05
    2. 'enumer' → logprob: -10.500028610229492
    3. ' enumer' → logprob: -14.500028610229492
    4. ' counts' → logprob: -14.625028610229492
    5. ' votes' → logprob: -16.250028610229492
    6. ' en' → logprob: -16.250028610229492
    7. ' ' → logprob: -16.250028610229492
    8. ' enum' → logprob: -16.500028610229492
    9. ' range' → logprob: -17.500028610229492
    10. '```' → logprob: -17.750028610229492

Token 73: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.05508888512849808
    2. ' votes' → logprob: -3.055088996887207
    3. '(' → logprob: -5.680088996887207
    4. 'votes' → logprob: -6.680088996887207
    5. ' counts' → logprob: -7.305088996887207
    6. '(count' → logprob: -7.805088996887207
    7. ' v' → logprob: -8.430088996887207
    8. ' (' → logprob: -8.555088996887207
    9. ' votos' → logprob: -9.180088996887207
    10. '(s' → logprob: -9.930088996887207

Token 74: 'otes' (ID: 8534)
  Prédit: 'otes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'otes' → logprob: -0.0003121056070085615
    2. 'votes' → logprob: -8.625311851501465
    3. '[' → logprob: -10.875311851501465
    4. 'ote' → logprob: -11.125311851501465
    5. ' votes' → logprob: -11.250311851501465
    6. ')' → logprob: -11.375311851501465
    7. '`' → logprob: -11.375311851501465
    8. 'OTES' → logprob: -11.750311851501465
    9. '_votes' → logprob: -12.125311851501465
    10. '```' → logprob: -12.250311851501465

Token 75: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008692807517945766
    2. ':' → logprob: -4.758692741394043
    3. '):
' → logprob: -10.133692741394043
    4. ',' → logprob: -11.633692741394043
    5. ')' → logprob: -11.883692741394043
    6. ' ):' → logprob: -11.883692741394043
    7. '[:' → logprob: -12.508692741394043
    8. ']:' → logprob: -13.008692741394043
    9. '}:' → logprob: -13.133692741394043
    10. '   ' → logprob: -13.133692741394043

Token 76: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6516995429992676
    2. '1' → logprob: -0.7766995429992676
    3. ' start' → logprob: -4.151699542999268
    4. ')' → logprob: -6.651699542999268
    5. ' )' → logprob: -7.151699542999268
    6. 'start' → logprob: -7.776699542999268
    7. '):' → logprob: -8.40169906616211
    8. ' ):' → logprob: -8.90169906616211
    9. '<|end|>' → logprob: -9.52669906616211
    10. '0' → logprob: -10.02669906616211

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017722812481224537
    2. 'start' → logprob: -6.626772403717041
    3. ' ' → logprob: -8.001771926879883
    4. '0' → logprob: -9.376771926879883
    5. ' start' → logprob: -10.751771926879883
    6. '2' → logprob: -13.001771926879883
    7. ')' → logprob: -13.126771926879883
    8. '   ' → logprob: -15.126771926879883
    9. 'i' → logprob: -16.126771926879883
    10. '100' → logprob: -16.376771926879883

Token 78: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0038448516279459
    2. ':' → logprob: -5.628844738006592
    3. '):
' → logprob: -8.75384521484375
    4. ' ):' → logprob: -10.00384521484375
    5. ')' → logprob: -10.25384521484375
    6. '   ' → logprob: -12.87884521484375
    7. '):
' → logprob: -13.75384521484375
    8. '}:' → logprob: -14.37884521484375
    9. ',' → logprob: -14.37884521484375
    10. '():' → logprob: -14.75384521484375

Token 79: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13701383769512177
    2. '<|end|>' → logprob: -2.5120139122009277
    3. '       ' → logprob: -3.7620139122009277
    4. '    ' → logprob: -4.012013912200928
    5. ' 
' → logprob: -6.012013912200928
    6. '   ' → logprob: -6.387013912200928
    7. '        ' → logprob: -7.887013912200928
    8. '  ' → logprob: -8.38701343536377
    9. ':' → logprob: -8.38701343536377
    10. ' if' → logprob: -8.88701343536377

Token 80: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.24169784784317017
    2. ' counts' → logprob: -1.7416977882385254
    3. '   ' → logprob: -3.6166977882385254
    4. 'if' → logprob: -4.866697788238525
    5. ' if' → logprob: -5.491697788238525
    6. 'count' → logprob: -8.116698265075684
    7. '       ' → logprob: -9.116698265075684
    8. '_counts' → logprob: -9.366698265075684
    9. '```' → logprob: -9.366698265075684
    10. ' ' → logprob: -9.741698265075684

Token 81: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.01882179081439972
    2. '[c' → logprob: -4.018821716308594
    3. '[' → logprob: -7.393821716308594
    4. 'v' → logprob: -10.893821716308594
    5. '```' → logprob: -11.643821716308594
    6. '[value' → logprob: -12.643821716308594
    7. '[i' → logprob: -13.143821716308594
    8. '.setdefault' → logprob: -13.143821716308594
    9. '[C' → logprob: -13.268821716308594
    10. '[count' → logprob: -13.393821716308594

Token 82: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0036195507273077965
    2. ']+=' → logprob: -5.62861967086792
    3. ' ]' → logprob: -11.378619194030762
    4. '']' → logprob: -13.003619194030762
    5. '"]' → logprob: -13.128619194030762
    6. '[' → logprob: -13.378619194030762
    7. '`]' → logprob: -13.878619194030762
    8. ']+' → logprob: -15.128619194030762
    9. ']=' → logprob: -15.503619194030762
    10. '+=' → logprob: -15.753619194030762

Token 83: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.023338651284575462
    2. ' +=' → logprob: -3.773338556289673
    3. '=' → logprob: -9.398338317871094
    4. ']+=' → logprob: -11.648338317871094
    5. '+' → logprob: -13.648338317871094
    6. ' =' → logprob: -16.148338317871094
    7. '+='' → logprob: -16.273338317871094
    8. ' ' → logprob: -17.023338317871094
    9. '+=(' → logprob: -17.648338317871094
    10. '[' → logprob: -17.648338317871094

Token 84: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020543284714221954
    2. ' ' → logprob: -3.895543336868286
    3. 'counts' → logprob: -14.645543098449707
    4. 'votes' → logprob: -15.145543098449707
    5. '   ' → logprob: -16.083044052124023
    6. '```' → logprob: -16.333044052124023
    7. '<|end|>' → logprob: -16.395544052124023
    8. ' counts' → logprob: -16.895544052124023
    9. '0' → logprob: -17.020544052124023
    10. '  ' → logprob: -17.145544052124023

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.723973582556937e-05
    2. ' ' → logprob: -11.000017166137695
    3. 'votes' → logprob: -15.375017166137695
    4. 'counts' → logprob: -16.250017166137695
    5. '   ' → logprob: -16.687517166137695
    6. '```' → logprob: -16.750017166137695
    7. '<|end|>' → logprob: -16.812517166137695
    8. '2' → logprob: -17.625017166137695
    9. 'v' → logprob: -18.062517166137695
    10. '>' → logprob: -18.375017166137695

Token 86: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04063275456428528
    2. '<|end|>' → logprob: -3.540632724761963
    3. ' 
' → logprob: -5.540632724761963
    4. '       ' → logprob: -6.040632724761963
    5. '  
' → logprob: -6.790632724761963
    6. '    
' → logprob: -7.290632724761963
    7. '   ' → logprob: -7.415632724761963
    8. '        
' → logprob: -7.540632724761963
    9. '<|end|>' → logprob: -7.790632724761963
    10. ' ' → logprob: -7.915632724761963

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019440336152911186
    2. '   ' → logprob: -4.269440174102783
    3. ' if' → logprob: -5.894440174102783
    4. ' ' → logprob: -7.394440174102783
    5. '<|end|>' → logprob: -7.519440174102783
    6. '
' → logprob: -7.769440174102783
    7. '        
' → logprob: -8.144440650939941
    8. '```' → logprob: -8.644440650939941
    9. 'if' → logprob: -8.894440650939941
    10. ',' → logprob: -9.644440650939941

Token 88: ' max' (ID: 2999)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0817498192191124
    2. '       ' → logprob: -2.95674991607666
    3. 'if' → logprob: -3.83174991607666
    4. '   ' → logprob: -5.45674991607666
    5. '```' → logprob: -8.83174991607666
    6. ' ' → logprob: -9.33174991607666
    7. '        
' → logprob: -9.83174991607666
    8. '    ' → logprob: -10.33174991607666
    9. ' current' → logprob: -10.58174991607666
    10. '
' → logprob: -10.58174991607666

Token 89: '_votes' (ID: 167389)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.6171332001686096
    2. '_' → logprob: -0.8671332001686096
    3. '_counts' → logprob: -4.117133140563965
    4. '_votes' → logprob: -4.617133140563965
    5. '(' → logprob: -4.867133140563965
    6. '_key' → logprob: -5.992133140563965
    7. '_vote' → logprob: -6.117133140563965
    8. '_val' → logprob: -7.117133140563965
    9. '_value' → logprob: -8.617133140563965
    10. '_v' → logprob: -8.742133140563965

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008616461418569088
    2. '=' → logprob: -4.7586164474487305
    3. ',' → logprob: -14.25861644744873
    4. ')' → logprob: -15.38361644744873
    5. ' ' → logprob: -15.38361644744873
    6. ' ==' → logprob: -15.63361644744873
    7. '=max' → logprob: -16.008617401123047
    8. '   ' → logprob: -16.258617401123047
    9. '  ' → logprob: -16.633617401123047
    10. ' =
' → logprob: -16.758617401123047

Token 91: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.11817659437656403
    2. 'max' → logprob: -2.3681766986846924
    3. ' counts' → logprob: -4.118176460266113
    4. 'counts' → logprob: -6.493176460266113
    5. '0' → logprob: -11.368176460266113
    6. ' ' → logprob: -12.618176460266113
    7. '   ' → logprob: -13.243176460266113
    8. 'count' → logprob: -13.743176460266113
    9. ' votes' → logprob: -13.743176460266113
    10. '	max' → logprob: -14.493176460266113

Token 92: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.0009140860638581216
    2. '(' → logprob: -7.000914096832275
    3. 'counts' → logprob: -14.125913619995117
    4. '(values' → logprob: -14.125913619995117
    5. '(
' → logprob: -15.125913619995117
    6. ' counts' → logprob: -15.375913619995117
    7. 'count' → logprob: -15.875913619995117
    8. '(list' → logprob: -16.125913619995117
    9. '()' → logprob: -16.375913619995117
    10. '(value' → logprob: -16.625913619995117

Token 93: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.32754746079444885
    2. 'ount' → logprob: -1.3275474309921265
    3. 'nts' → logprob: -4.827547550201416
    4. 'unts' → logprob: -5.827547550201416
    5. 'ts' → logprob: -6.202547550201416
    6. ')' → logprob: -7.952547550201416
    7. 'counts' → logprob: -7.952547550201416
    8. 'uts' → logprob: -8.702547073364258
    9. '(s' → logprob: -9.577547073364258
    10. 'oints' → logprob: -9.827547073364258

Token 94: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.00022547018306795508
    2. '.' → logprob: -8.500225067138672
    3. '().' → logprob: -11.875225067138672
    4. ').' → logprob: -12.000225067138672
    5. 'values' → logprob: -13.000225067138672
    6. ' .' → logprob: -13.000225067138672
    7. '.Values' → logprob: -13.250225067138672
    8. ' values' → logprob: -13.500225067138672
    9. ')' → logprob: -14.125225067138672
    10. '.value' → logprob: -15.250225067138672

Token 95: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.008293398655951023
    2. '()' → logprob: -5.383293628692627
    3. ')' → logprob: -5.633293628692627
    4. '())
' → logprob: -10.008293151855469
    5. ' )' → logprob: -11.133293151855469
    6. '(),' → logprob: -11.508293151855469
    7. ' ())' → logprob: -11.633293151855469
    8. '()
' → logprob: -12.383293151855469
    9. '(' → logprob: -12.633293151855469
    10. '()))' → logprob: -13.883293151855469

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44259902834892273
    2. '<|end|>' → logprob: -1.4425990581512451
    3. '
' → logprob: -2.192599058151245
    4. '   ' → logprob: -6.192598819732666
    5. '        
' → logprob: -6.442598819732666
    6. ',' → logprob: -6.442598819732666
    7. '<|end|>' → logprob: -6.942598819732666
    8. ' 
' → logprob: -7.067598819732666
    9. '  
' → logprob: -7.192598819732666
    10. ' ' → logprob: -7.817598819732666

Token 97: ' leaders' (ID: 13998)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.280351459980011
    2. '<|end|>' → logprob: -2.405351400375366
    3. ' ' → logprob: -2.655351400375366
    4. ' if' → logprob: -2.780351400375366
    5. ' 
' → logprob: -4.655351638793945
    6. '        
' → logprob: -5.155351638793945
    7. '
' → logprob: -6.280351638793945
    8. '        ' → logprob: -6.780351638793945
    9. '   ' → logprob: -7.030351638793945
    10. '<|end|>' → logprob: -7.780351638793945

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326910853385925
    2. '=' → logprob: -1.3132691383361816
    3. ',' → logprob: -11.938268661499023
    4. ')' → logprob: -15.188268661499023
    5. '＝' → logprob: -15.688268661499023
    6. '=[]' → logprob: -16.313268661499023
    7. ' ' → logprob: -16.688268661499023
    8. ' =[' → logprob: -16.688268661499023
    9. '=list' → logprob: -17.063268661499023
    10. '   ' → logprob: -17.063268661499023

Token 99: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.03422589227557182
    2. '[' → logprob: -3.4092259407043457
    3. '[key' → logprob: -8.909225463867188
    4. '[count' → logprob: -9.784225463867188
    5. '[k' → logprob: -10.159225463867188
    6. '[c' → logprob: -10.409225463867188
    7. '[t' → logprob: -10.534225463867188
    8. '[v' → logprob: -10.534225463867188
    9. '[int' → logprob: -10.909225463867188
    10. '[name' → logprob: -10.909225463867188

Token 100: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3008260726928711
    2. 'c' → logprob: -1.550826072692871
    3. 'key' → logprob: -3.425826072692871
    4. 'candidate' → logprob: -4.550826072692871
    5. 'cand' → logprob: -5.550826072692871
    6. 'x' → logprob: -7.925826072692871
    7. ' candidate' → logprob: -8.675826072692871
    8. ' k' → logprob: -10.050826072692871
    9. ' key' → logprob: -10.300826072692871
    10. 'p' → logprob: -10.300826072692871

Token 101: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25194409489631653
    2. 'for' → logprob: -1.5019440650939941
    3. ' ' → logprob: -11.626944541931152
    4. ' 
' → logprob: -13.001944541931152
    5. '   ' → logprob: -13.751944541931152
    6. '	for' → logprob: -14.126944541931152
    7. '
' → logprob: -14.251944541931152
    8. 'v' → logprob: -14.876944541931152
    9. 'k' → logprob: -15.251944541931152
    10. 'f' → logprob: -15.626944541931152

Token 102: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7822885513305664
    2. ' k' → logprob: -0.7822885513305664
    3. ' counts' → logprob: -2.5322885513305664
    4. 'counts' → logprob: -5.157288551330566
    5. ',k' → logprob: -10.532288551330566
    6. ',' → logprob: -11.032288551330566
    7. ' ' → logprob: -13.032288551330566
    8. 'count' → logprob: -13.282288551330566
    9. '   ' → logprob: -13.782288551330566
    10. '	k' → logprob: -14.782288551330566

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016878176480531693
    2. ' in' → logprob: -4.516878128051758
    3. ',v' → logprob: -6.391878128051758
    4. ',k' → logprob: -6.516878128051758
    5. ',count' → logprob: -6.641878128051758
    6. 'in' → logprob: -7.266878128051758
    7. 'if' → logprob: -8.141878128051758
    8. ' if' → logprob: -9.016878128051758
    9. ',value' → logprob: -9.516878128051758
    10. 'k' → logprob: -9.641878128051758

Token 104: ' val' (ID: 1459)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.054931145161390305
    2. 'v' → logprob: -2.929931163787842
    3. ' val' → logprob: -10.929930686950684
    4. ' count' → logprob: -11.679930686950684
    5. ' ' → logprob: -12.054930686950684
    6. 'count' → logprob: -12.804930686950684
    7. ' c' → logprob: -12.804930686950684
    8. ' in' → logprob: -13.179930686950684
    9. '	v' → logprob: -13.179930686950684
    10. ' value' → logprob: -13.304930686950684

Token 105: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005970389116555452
    2. 'in' → logprob: -5.130970478057861
    3. ' ' → logprob: -10.505970001220703
    4. 's' → logprob: -12.005970001220703
    5. '```' → logprob: -13.505970001220703
    6. 'ue' → logprob: -14.255970001220703
    7. '<|end|>' → logprob: -14.255970001220703
    8. '  ' → logprob: -14.380970001220703
    9. 'al' → logprob: -14.505970001220703
    10. 'n' → logprob: -14.755970001220703

Token 106: ' counts' (ID: 28991)
  Prédit: ' counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.002186307217925787
    2. 'counts' → logprob: -6.127186298370361
    3. 'count' → logprob: -14.37718677520752
    4. ' count' → logprob: -14.87718677520752
    5. '_counts' → logprob: -15.75218677520752
    6. ' ' → logprob: -16.752185821533203
    7. 'c' → logprob: -17.127185821533203
    8. 'Counts' → logprob: -18.002185821533203
    9. '```' → logprob: -18.502185821533203
    10. 's' → logprob: -18.877185821533203

Token 107: '.items' (ID: 19607)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009066660888493061
    2. '.items' → logprob: -5.259066581726074
    3. 'in' → logprob: -6.009066581726074
    4. 'items' → logprob: -7.509066581726074
    5. ' ' → logprob: -8.259066581726074
    6. '.iteritems' → logprob: -9.009066581726074
    7. '()' → logprob: -9.134066581726074
    8. '   ' → logprob: -9.634066581726074
    9. '<|end|>' → logprob: -9.759066581726074
    10. ' if' → logprob: -10.634066581726074

Token 108: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004067597910761833
    2. ' if' → logprob: -6.254067420959473
    3. '(' → logprob: -6.754067420959473
    4. ' ()' → logprob: -7.379067420959473
    5. 'if' → logprob: -9.129067420959473
    6. ' (' → logprob: -9.254067420959473
    7. '(k' → logprob: -10.379067420959473
    8. '()]' → logprob: -10.504067420959473
    9. '   ' → logprob: -10.879067420959473
    10. '       ' → logprob: -11.379067420959473

Token 109: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.00010306637705070898
    2. 'if' → logprob: -9.250102996826172
    3. ' ' → logprob: -12.875102996826172
    4. '           ' → logprob: -13.750102996826172
    5. ' in' → logprob: -14.000102996826172
    6. '        ' → logprob: -14.125102996826172
    7. '       ' → logprob: -14.375102996826172
    8. '   ' → logprob: -14.750102996826172
    9. '    ' → logprob: -15.250102996826172
    10. '	if' → logprob: -16.625102996826172

Token 110: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.07889111340045929
    2. 'val' → logprob: -2.5788910388946533
    3. '	val' → logprob: -14.453890800476074
    4. '(val' → logprob: -14.578890800476074
    5. '[val' → logprob: -15.203890800476074
    6. '    ' → logprob: -16.32889175415039
    7. '   ' → logprob: -16.95389175415039
    8. ' valent' → logprob: -18.45389175415039
    9. '_val' → logprob: -18.70389175415039
    10. ',val' → logprob: -18.70389175415039

Token 111: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25193583965301514
    2. ' ==' → logprob: -1.5019358396530151
    3. '==
' → logprob: -12.751935958862305
    4. ']==' → logprob: -13.126935958862305
    5. '=' → logprob: -14.001935958862305
    6. ' ' → logprob: -15.001935958862305
    7. ')==' → logprob: -15.251935958862305
    8. '===' → logprob: -15.501935958862305
    9. ' ' → logprob: -15.751935958862305
    10. '()==' → logprob: -16.501935958862305

Token 112: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3868725895881653
    2. 'max' → logprob: -1.1368725299835205
    3. ' ' → logprob: -13.886872291564941
    4. '	max' → logprob: -15.386872291564941
    5. '   ' → logprob: -16.011873245239258
    6. ' maximum' → logprob: -16.511873245239258
    7. '
' → logprob: -16.636873245239258
    8. '[max' → logprob: -17.136873245239258
    9. ' maximal' → logprob: -17.261873245239258
    10. '(max' → logprob: -17.261873245239258

Token 113: '_votes' (ID: 167389)
  Prédit: '_votes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_votes' → logprob: -2.534558552724775e-05
    2. 'votes' → logprob: -11.625025749206543
    3. '_counts' → logprob: -12.500025749206543
    4. 'max' → logprob: -12.625025749206543
    5. '(max' → logprob: -12.750025749206543
    6. '_' → logprob: -13.875025749206543
    7. '_vote' → logprob: -14.250025749206543
    8. 'Votes' → logprob: -14.250025749206543
    9. '_values' → logprob: -14.500025749206543
    10. '=max' → logprob: -14.625025749206543

Token 114: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005685953423380852
    2. ']
' → logprob: -5.255685806274414
    3. ' ]' → logprob: -8.380685806274414
    4. ' and' → logprob: -9.630685806274414
    5. '       ' → logprob: -9.755685806274414
    6. ']
' → logprob: -10.005685806274414
    7. ']

' → logprob: -10.255685806274414
    8. '   ' → logprob: -11.755685806274414
    9. ' ]
' → logprob: -12.255685806274414
    10. ' if' → logprob: -12.630685806274414

Token 115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7665003538131714
    2. '<|end|>' → logprob: -1.5165003538131714
    3. '
' → logprob: -2.016500473022461
    4. '        
' → logprob: -3.141500473022461
    5. ' ' → logprob: -3.266500473022461
    6. '   ' → logprob: -3.641500473022461
    7. ' 
' → logprob: -4.016500473022461
    8. ' if' → logprob: -4.391500473022461
    9. '  
' → logprob: -4.891500473022461
    10. '    
' → logprob: -5.141500473022461

Token 116: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06596734374761581
    2. '       ' → logprob: -3.065967321395874
    3. 'if' (adapté à ' if') → logprob: -4.190967559814453
    4. '        
' → logprob: -7.315967559814453
    5. ' 
' → logprob: -7.440967559814453
    6. ' ' → logprob: -8.065967559814453
    7. '<|end|>' → logprob: -8.315967559814453
    8. '
' → logprob: -9.815967559814453
    9. '        ' → logprob: -9.815967559814453
    10. '   ' → logprob: -10.565967559814453

Token 117: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.004207444377243519
    2. 'len' → logprob: -5.754207611083984
    3. ' winner' → logprob: -7.379207611083984
    4. ' v' → logprob: -8.754207611083984
    5. ' '' → logprob: -9.254207611083984
    6. ' ' → logprob: -10.004207611083984
    7. ' n' → logprob: -10.129207611083984
    8. '(len' → logprob: -11.129207611083984
    9. ''' → logprob: -11.379207611083984
    10. ' (' → logprob: -11.629207611083984

Token 118: '(le' (ID: 135521)
  Prédit: '(le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(le' → logprob: -0.004163995385169983
    2. '(' → logprob: -5.504164218902588
    3. ' (' → logprob: -9.37916374206543
    4. ' ' → logprob: -14.62916374206543
    5. '(w' → logprob: -15.12916374206543
    6. 'leaders' → logprob: -16.87916374206543
    7. '(
' → logprob: -17.00416374206543
    8. '   ' → logprob: -17.12916374206543
    9. ' ==' → logprob: -17.37916374206543
    10. 'Le' → logprob: -18.00416374206543

Token 119: 'aders' (ID: 35288)
  Prédit: 'aders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aders' → logprob: -0.0005382588133215904
    2. 'ads' → logprob: -8.000537872314453
    3. 'ad' → logprob: -9.000537872314453
    4. '       ' → logprob: -10.375537872314453
    5. 'ader' → logprob: -10.875537872314453
    6. 'leaders' → logprob: -11.500537872314453
    7. '   ' → logprob: -12.500537872314453
    8. 'ading' → logprob: -13.125537872314453
    9. '           ' → logprob: -13.125537872314453
    10. 'ders' → logprob: -13.625537872314453

Token 120: ')' (ID: 8)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.012054650112986565
    2. '==' → logprob: -4.512054443359375
    3. ')' → logprob: -7.637054443359375
    4. ' >' → logprob: -8.137054443359375
    5. '<|end|>' → logprob: -9.512054443359375
    6. ' ' → logprob: -9.762054443359375
    7. ' <=' → logprob: -10.262054443359375
    8. ')==' → logprob: -10.887054443359375
    9. '>' → logprob: -11.012054443359375
    10. '1' → logprob: -11.512054443359375

Token 121: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01741381734609604
    2. '==' → logprob: -4.51741361618042
    3. ' >' → logprob: -5.51741361618042
    4. ' ' → logprob: -6.89241361618042
    5. '<|end|>' → logprob: -7.39241361618042
    6. ' <' → logprob: -8.267414093017578
    7. ' <=' → logprob: -8.892414093017578
    8. '>' → logprob: -9.017414093017578
    9. ')' → logprob: -10.267414093017578
    10. '1' → logprob: -10.392414093017578

Token 122: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0141702089458704
    2. ' ' → logprob: -4.264170169830322
    3. '<|end|>' → logprob: -12.88917064666748
    4. '   ' → logprob: -13.88917064666748
    5. '  ' → logprob: -14.63917064666748
    6. '2' → logprob: -14.63917064666748
    7. '```' → logprob: -14.88917064666748
    8. ' ' → logprob: -15.63917064666748
    9. '

' → logprob: -15.63917064666748
    10. '
' → logprob: -16.014169692993164

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00039385363925248384
    2. ' ' → logprob: -7.875393867492676
    3. '<|end|>' → logprob: -12.000393867492676
    4. '2' → logprob: -12.125393867492676
    5. '```' → logprob: -14.187893867492676
    6. 'one' → logprob: -15.312893867492676
    7. '
' → logprob: -16.25039291381836
    8. ' one' → logprob: -16.25039291381836
    9. '

' → logprob: -16.37539291381836
    10. '   ' → logprob: -16.37539291381836

Token 124: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20219272375106812
    2. ':' → logprob: -1.702192783355713
    3. ':
' → logprob: -7.827192783355713
    4. 'and' → logprob: -8.202192306518555
    5. '<|end|>' → logprob: -10.077192306518555
    6. ',' → logprob: -10.452192306518555
    7. ' :' → logprob: -11.577192306518555
    8. '       ' → logprob: -11.702192306518555
    9. ' or' → logprob: -12.202192306518555
    10. ' ' → logprob: -12.827192306518555

Token 125: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4315430521965027
    2. '           ' → logprob: -1.8065431118011475
    3. ' and' → logprob: -1.9315431118011475
    4. ':
' → logprob: -3.6815431118011475
    5. '       ' → logprob: -4.681542873382568
    6. '<|end|>' → logprob: -5.556542873382568
    7. ',' → logprob: -7.056542873382568
    8. ' ' → logprob: -8.431543350219727
    9. ' :' → logprob: -8.431543350219727
    10. 'and' → logprob: -8.431543350219727

Token 126: ' leader' (ID: 12554)
  Prédit: ' winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' winner' → logprob: -0.5452383756637573
    2. 'winner' → logprob: -1.1702383756637573
    3. '               ' → logprob: -2.295238494873047
    4. '           ' → logprob: -4.920238494873047
    5. ' if' → logprob: -7.545238494873047
    6. '   ' → logprob: -7.670238494873047
    7. 'if' → logprob: -8.295238494873047
    8. '       ' → logprob: -8.920238494873047
    9. ' ' → logprob: -8.920238494873047
    10. 'Winner' → logprob: -9.420238494873047

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04874894395470619
    2. '=' → logprob: -3.0487489700317383
    3. ',' → logprob: -9.673748970031738
    4. ' ' → logprob: -10.173748970031738
    5. '<|end|>' → logprob: -10.923748970031738
    6. '_' → logprob: -11.548748970031738
    7. '_at' → logprob: -11.923748970031738
    8. ']' → logprob: -12.423748970031738
    9. 's' → logprob: -12.423748970031738
    10. ')' → logprob: -12.673748970031738

Token 128: ' leaders' (ID: 13998)
  Prédit: 'leaders'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leaders' → logprob: -0.31359735131263733
    2. ' leaders' → logprob: -1.313597321510315
    3. 'le' → logprob: -8.063597679138184
    4. ' leads' → logprob: -11.188597679138184
    5. 'leader' → logprob: -13.188597679138184
    6. ' votes' → logprob: -13.688597679138184
    7. ' ' → logprob: -13.688597679138184
    8. ' winners' → logprob: -13.938597679138184
    9. 'votes' → logprob: -14.063597679138184
    10. ' voters' → logprob: -15.813597679138184

Token 129: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.45848218582978e-06
    2. '0' → logprob: -13.50000286102295
    3. ' [' → logprob: -14.75000286102295
    4. '<|end|>' → logprob: -15.75000286102295
    5. '][' → logprob: -15.87500286102295
    6. '```' → logprob: -16.000001907348633
    7. '[
' → logprob: -16.500001907348633
    8. '#' → logprob: -17.875001907348633
    9. 'The' → logprob: -18.000001907348633
    10. '()[' → logprob: -18.125001907348633

Token 130: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0683535037969705e-05
    2. ' ' → logprob: -11.50001049041748
    3. '
' → logprob: -15.12501049041748
    4. '-' → logprob: -16.375011444091797
    5. '   ' → logprob: -16.937511444091797
    6. '[' → logprob: -17.187511444091797
    7. '```' → logprob: -17.750011444091797
    8. ']' → logprob: -18.125011444091797
    9. '۰' → logprob: -18.250011444091797
    10. ')' → logprob: -18.250011444091797

Token 131: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5236031413078308
    2. '           ' → logprob: -1.2736032009124756
    3. '<|end|>' → logprob: -2.7736032009124756
    4. '
' → logprob: -3.3986032009124756
    5. ')
' → logprob: -3.8986032009124756
    6. '       ' → logprob: -5.8986029624938965
    7. '<|end|>' → logprob: -6.0236029624938965
    8. ':
' → logprob: -6.8986029624938965
    9. '            
' → logprob: -6.8986029624938965
    10. '):
' → logprob: -7.1486029624938965

Token 132: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03895273059606552
    2. '<|end|>' → logprob: -3.9139528274536133
    3. '       ' → logprob: -4.163952827453613
    4. ',' → logprob: -7.413952827453613
    5. ' if' → logprob: -7.788952827453613
    6. ' and' → logprob: -7.913952827453613
    7. '<|end|>' → logprob: -8.038952827453613
    8. '            
' → logprob: -8.038952827453613
    9. '        
' → logprob: -8.288952827453613
    10. '
' → logprob: -8.663952827453613

Token 133: ' remaining' (ID: 15448)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5836603045463562
    2. 'if' → logprob: -0.9586603045463562
    3. '           ' → logprob: -3.458660364151001
    4. ' winner' → logprob: -4.208660125732422
    5. 'winner' → logprob: -5.083660125732422
    6. ' votes' → logprob: -6.583660125732422
    7. ' counts' → logprob: -6.708660125732422
    8. 'votes' → logprob: -6.833660125732422
    9. '   ' → logprob: -7.333660125732422
    10. '       ' → logprob: -8.083660125732422

Token 134: ' =' (ID: 314)
  Prédit: '_votes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_votes' → logprob: -0.09584614634513855
    2. ' =' → logprob: -2.470846176147461
    3. '=' → logprob: -5.095846176147461
    4. '_' → logprob: -7.720846176147461
    5. '   ' → logprob: -9.720846176147461
    6. 'votes' → logprob: -10.220846176147461
    7. '_remaining' → logprob: -10.345846176147461
    8. 's' → logprob: -10.345846176147461
    9. '_v' → logprob: -10.345846176147461
    10. '_vote' → logprob: -10.470846176147461

Token 135: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.9323315620422363
    2. ' n' → logprob: -1.0573315620422363
    3. 'total' → logprob: -1.9323315620422363
    4. 'n' → logprob: -2.1823315620422363
    5. ' ' → logprob: -7.682331562042236
    6. ' len' → logprob: -8.057331085205078
    7. 'len' → logprob: -8.182331085205078
    8. '   ' → logprob: -8.932331085205078
    9. '    ' → logprob: -9.557331085205078
    10. '  ' → logprob: -10.307331085205078

Token 136: '_votes' (ID: 167389)
  Prédit: '_votes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_votes' → logprob: -0.009556563571095467
    2. ' -' → logprob: -5.009556770324707
    3. '-' → logprob: -6.009556770324707
    4. '-v' → logprob: -8.634556770324707
    5. '-_' → logprob: -9.384556770324707
    6. '_' → logprob: -9.509556770324707
    7. 'votes' → logprob: -11.509556770324707
    8. 'Votes' → logprob: -11.884556770324707
    9. '```' → logprob: -11.884556770324707
    10. '_vote' → logprob: -12.009556770324707

Token 137: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10026630759239197
    2. '-' → logprob: -2.350266218185425
    3. '-i' → logprob: -9.850266456604004
    4. ' ' → logprob: -12.975266456604004
    5. '   ' → logprob: -14.100266456604004
    6. '-(' → logprob: -14.850266456604004
    7. 'i' → logprob: -14.850266456604004
    8. ' ' → logprob: -14.850266456604004
    9. '+' → logprob: -15.287766456604004
    10. '
' → logprob: -15.412766456604004

Token 138: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0023366394452750683
    2. ' i' → logprob: -6.127336502075195
    3. '   ' → logprob: -9.002336502075195
    4. ' ' → logprob: -11.127336502075195
    5. '  ' → logprob: -12.377336502075195
    6. '       ' → logprob: -12.627336502075195
    7. '	i' → logprob: -13.502336502075195
    8. '           ' → logprob: -13.877336502075195
    9. '(i' → logprob: -13.877336502075195
    10. '    ' → logprob: -14.127336502075195

Token 139: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11725311726331711
    2. '           ' → logprob: -2.867253065109253
    3. ' if' → logprob: -3.367253065109253
    4. 'if' → logprob: -5.242253303527832
    5. '<|end|>' → logprob: -5.242253303527832
    6. ' 
' → logprob: -6.242253303527832
    7. '       ' → logprob: -6.492253303527832
    8. '            
' → logprob: -7.117253303527832
    9. ')' → logprob: -7.492253303527832
    10. ' votes' → logprob: -7.617253303527832

Token 140: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000486680306494236
    2. '
' → logprob: -8.500486373901367
    3. '<|end|>' → logprob: -8.625486373901367
    4. ' if' → logprob: -10.125486373901367
    5. '            
' → logprob: -10.750486373901367
    6. '       ' → logprob: -10.875486373901367
    7. ',' → logprob: -12.000486373901367
    8. '<|end|>' → logprob: -12.500486373901367
    9. '   ' → logprob: -12.750486373901367
    10. '```' → logprob: -13.875486373901367

Token 141: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2908972501754761
    2. ' if' → logprob: -1.415897250175476
    3. '           ' → logprob: -4.665897369384766
    4. '   ' → logprob: -8.415897369384766
    5. '       ' → logprob: -10.040897369384766
    6. '               ' → logprob: -12.415897369384766
    7. 'votes' → logprob: -12.665897369384766
    8. ' votes' → logprob: -13.040897369384766
    9. '```' → logprob: -13.165897369384766
    10. 'possible' → logprob: -13.290897369384766

Token 142: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.043610829859972
    2. ' if' → logprob: -3.1686108112335205
    3. '           ' → logprob: -7.5436110496521
    4. 'If' → logprob: -10.293610572814941
    5. '   ' → logprob: -10.668610572814941
    6. '       ' → logprob: -11.668610572814941
    7. 'possible' → logprob: -11.918610572814941
    8. '#' → logprob: -12.793610572814941
    9. '```' → logprob: -13.043610572814941
    10. ' If' → logprob: -13.918610572814941

Token 143: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.01105300523340702
    2. 'if' → logprob: -4.511053085327148
    3. ' for' → logprob: -12.761053085327148
    4. '   ' → logprob: -13.761053085327148
    5. ' whether' → logprob: -14.136053085327148
    6. 'for' → logprob: -15.761053085327148
    7. '           ' → logprob: -15.886053085327148
    8. ':' → logprob: -16.38605308532715
    9. '       ' → logprob: -16.51105308532715
    10. '```' → logprob: -17.26105308532715

Token 144: ' leader' (ID: 12554)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8567757606506348
    2. ' max' → logprob: -1.1067757606506348
    3. ' counts' → logprob: -1.6067757606506348
    4. 'counts' → logprob: -3.2317757606506348
    5. ' leader' → logprob: -6.106775760650635
    6. 'leader' → logprob: -6.356775760650635
    7. ' winner' → logprob: -8.106775283813477
    8. 'winner' → logprob: -8.981775283813477
    9. ' ' → logprob: -9.731775283813477
    10. '(max' → logprob: -9.856775283813477

Token 145: ''s' (ID: 885)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.21911470592021942
    2. 'has' → logprob: -2.3441147804260254
    3. ' can' → logprob: -3.2191147804260254
    4. '_votes' → logprob: -4.094114780426025
    5. 'votes' → logprob: -4.969114780426025
    6. 'count' → logprob: -4.969114780426025
    7. 'can' → logprob: -5.219114780426025
    8. ''s' → logprob: -5.969114780426025
    9. ' counts' → logprob: -6.094114780426025
    10. '_counts' → logprob: -6.094114780426025

Token 146: ' lead' (ID: 4124)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.42133626341819763
    2. 'votes' → logprob: -1.17133629322052
    3. ' votes' → logprob: -4.1713361740112305
    4. ' count' → logprob: -5.0463361740112305
    5. 'max' → logprob: -5.4213361740112305
    6. 'lead' → logprob: -5.7963361740112305
    7. 'vote' → logprob: -6.0463361740112305
    8. 'current' → logprob: -7.1713361740112305
    9. ' lead' → logprob: -7.6713361740112305
    10. ' current' → logprob: -8.17133617401123

Token 147: ' is' (ID: 382)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3394356071949005
    2. '>' → logprob: -1.4644355773925781
    3. ' is' → logprob: -3.214435577392578
    4. ' ' → logprob: -5.089435577392578
    5. ' *' → logprob: -5.589435577392578
    6. ' >=' → logprob: -5.589435577392578
    7. '*' → logprob: -6.714435577392578
    8. 'is' → logprob: -7.964435577392578
    9. '>=' → logprob: -8.214435577392578
    10. ' exceeds' → logprob: -8.339435577392578

Token 148: ' ins' (ID: 2215)
  Prédit: 'greater'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'greater' → logprob: -0.6248557567596436
    2. ' greater' → logprob: -1.2498557567596436
    3. 'max' → logprob: -1.9998557567596436
    4. ' max' → logprob: -4.624855995178223
    5. '>' → logprob: -4.874855995178223
    6. ' counts' → logprob: -5.124855995178223
    7. 'more' → logprob: -5.499855995178223
    8. 'strict' → logprob: -5.624855995178223
    9. 'counts' → logprob: -5.624855995178223
    10. ' more' → logprob: -6.499855995178223

Token 149: 'ur' (ID: 330)
  Prédit: 'ufficient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ufficient' → logprob: -0.19373171031475067
    2. 'ur' → logprob: -1.818731665611267
    3. 'u' → logprob: -4.693731784820557
    4. 'uf' → logprob: -6.068731784820557
    5. '```' → logprob: -7.568731784820557
    6. 's' → logprob: -7.943731784820557
    7. 'uff' → logprob: -8.318731307983398
    8. 't' → logprob: -8.568731307983398
    9. 'p' → logprob: -8.943731307983398
    10. 'up' → logprob: -9.193731307983398

Token 150: 'mount' (ID: 32893)
  Prédit: 'mount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mount' → logprob: -0.7306501269340515
    2. 'pass' → logprob: -1.4806501865386963
    3. 'ough' → logprob: -1.6056501865386963
    4. 'fficient' → logprob: -2.9806501865386963
    5. 'able' → logprob: -4.855649948120117
    6. 'e' → logprob: -5.730649948120117
    7. 'passed' → logprob: -5.730649948120117
    8. '```' → logprob: -5.855649948120117
    9. ' ' → logprob: -6.105649948120117
    10. 'f' → logprob: -6.105649948120117

Token 151: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.0012739235535264015
    2. '   ' → logprob: -7.376274108886719
    3. ' ' → logprob: -8.251274108886719
    4. '```' → logprob: -9.501274108886719
    5. 'iable' → logprob: -9.751274108886719
    6. 'ible' → logprob: -9.876274108886719
    7. '       ' → logprob: -10.376274108886719
    8. 'e' → logprob: -11.126274108886719
    9. '           ' → logprob: -11.376274108886719
    10. 'a' → logprob: -11.376274108886719

Token 152: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37113210558891296
    2. ' and' → logprob: -1.2461321353912354
    3. ':' → logprob: -4.246131896972656
    4. ' if' → logprob: -5.746131896972656
    5. '<|end|>' → logprob: -6.246131896972656
    6. 'and' → logprob: -7.371131896972656
    7. '   ' → logprob: -7.621131896972656
    8. '       ' → logprob: -7.621131896972656
    9. '               ' → logprob: -8.496131896972656
    10. ' or' → logprob: -8.621131896972656

Token 153: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028081197291612625
    2. ' and' → logprob: -3.653081178665161
    3. ':' → logprob: -6.77808141708374
    4. ' if' → logprob: -8.403080940246582
    5. 'and' → logprob: -9.028080940246582
    6. '       ' → logprob: -9.528080940246582
    7. '<|end|>' → logprob: -10.028080940246582
    8. ',' → logprob: -10.153080940246582
    9. '               ' → logprob: -10.153080940246582
    10. ' or' → logprob: -10.903080940246582

Token 154: ' can' (ID: 665)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2661537826061249
    2. 'if' → logprob: -1.5161538124084473
    3. '           ' → logprob: -4.266153812408447
    4. '   ' → logprob: -9.641153335571289
    5. '```' → logprob: -11.266153335571289
    6. '
' → logprob: -13.016153335571289
    7. '       ' → logprob: -13.141153335571289
    8. ' ' → logprob: -13.391153335571289
    9. '            
' → logprob: -13.641153335571289
    10. '  ' → logprob: -14.141153335571289

Token 155: '_' (ID: 62)
  Prédit: '_not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_not' → logprob: -1.091733455657959
    2. ''t' → logprob: -1.216733455657959
    3. 't' → logprob: -1.591733455657959
    4. '_t' → logprob: -2.841733455657959
    5. 'not' → logprob: -3.216733455657959
    6. '_have' → logprob: -3.466733455657959
    7. '_' → logprob: -3.966733455657959
    8. ''' → logprob: -6.216733455657959
    9. '_leave' → logprob: -6.466733455657959
    10. '`t' → logprob: -6.716733455657959

Token 156: 'others' (ID: 30407)
  Prédit: 'catch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'catch' → logprob: -0.9156819581985474
    2. 'be' → logprob: -1.5406819581985474
    3. 'win' → logprob: -2.040681838989258
    4. 'still' → logprob: -2.915681838989258
    5. 'o' → logprob: -3.165681838989258
    6. 'poss' → logprob: -3.915681838989258
    7. 'possibly' → logprob: -4.040681838989258
    8. 'tie' → logprob: -4.290681838989258
    9. 'potential' → logprob: -4.290681838989258
    10. 'over' → logprob: -4.665681838989258

Token 157: '_c' (ID: 1303)
  Prédit: '_win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_win' → logprob: -0.2749100625514984
    2. '_c' → logprob: -2.5249099731445312
    3. '_sur' → logprob: -2.5249099731445312
    4. '_gain' → logprob: -3.8999099731445312
    5. '_' → logprob: -4.274909973144531
    6. '_over' → logprob: -4.399909973144531
    7. '_get' → logprob: -4.524909973144531
    8. ' =' → logprob: -5.399909973144531
    9. '_o' → logprob: -5.524909973144531
    10. '_take' → logprob: -5.649909973144531

Token 158: 'atch' (ID: 987)
  Prédit: 'atch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atch' → logprob: -0.028637763112783432
    2. 'h' → logprob: -3.778637647628784
    3. 'ome' → logprob: -5.903637886047363
    4. 'over' → logprob: -6.653637886047363
    5. 'catch' → logprob: -8.403637886047363
    6. 'o' → logprob: -8.778637886047363
    7. 'an' → logprob: -8.903637886047363
    8. 'ount' → logprob: -8.903637886047363
    9. 'at' → logprob: -9.403637886047363
    10. 'ont' → logprob: -9.403637886047363

Token 159: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.46403592824935913
    2. 'up' → logprob: -1.089035987854004
    3. '=' → logprob: -3.714035987854004
    4. ' =' → logprob: -5.089035987854004
    5. '_up' → logprob: -6.589035987854004
    6. ' up' → logprob: -6.964035987854004
    7. '```' → logprob: -7.464035987854004
    8. '   ' → logprob: -7.464035987854004
    9. 'h' → logprob: -8.714035987854004
    10. '
' → logprob: -8.839035987854004

Token 160: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.8161343932151794
    2. ' max' → logprob: -2.066134452819824
    3. ' False' → logprob: -2.066134452819824
    4. 'False' → logprob: -2.066134452819824
    5. 'max' → logprob: -2.316134452819824
    6. 'any' → logprob: -3.316134452819824
    7. ' remaining' → logprob: -3.691134452819824
    8. 'remaining' → logprob: -4.941134452819824
    9. ' (' → logprob: -5.691134452819824
    10. '(max' → logprob: -6.066134452819824

Token 161: '(max' (ID: 17178)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.15203945338726044
    2. '(max' → logprob: -2.1520395278930664
    3. '((' → logprob: -4.027039527893066
    4. '(' → logprob: -5.027039527893066
    5. 'counts' → logprob: -9.027039527893066
    6. ' counts' → logprob: -9.402039527893066
    7. '(
' → logprob: -10.027039527893066
    8. '(le' → logprob: -10.152039527893066
    9. 'max' → logprob: -10.527039527893066
    10. ' (' → logprob: -10.652039527893066

Token 162: '_votes' (ID: 167389)
  Prédit: '_votes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_votes' → logprob: -0.003481278195977211
    2. '(' → logprob: -6.253481388092041
    3. '(count' → logprob: -7.003481388092041
    4. '_counts' → logprob: -8.878480911254883
    5. '([' → logprob: -9.003480911254883
    6. '(max' → logprob: -9.003480911254883
    7. '(v' → logprob: -9.503480911254883
    8. ')' → logprob: -10.503480911254883
    9. 'votes' → logprob: -10.628480911254883
    10. 'Votes' → logprob: -11.253480911254883

Token 163: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.14316071569919586
    2. '+' → logprob: -2.018160820007324
    3. '<=' → logprob: -9.143160820007324
    4. '<' → logprob: -9.143160820007324
    5. ' <=' → logprob: -9.268160820007324
    6. ' <' → logprob: -9.268160820007324
    7. '-' → logprob: -11.143160820007324
    8. ' ' → logprob: -11.143160820007324
    9. ' -' → logprob: -11.143160820007324
    10. ' plus' → logprob: -11.518160820007324

Token 164: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.00558021804317832
    2. ' counts' → logprob: -5.255580425262451
    3. 'count' → logprob: -8.630579948425293
    4. 'val' → logprob: -9.130579948425293
    5. '(count' → logprob: -11.380579948425293
    6. 'max' → logprob: -11.380579948425293
    7. ')' → logprob: -11.380579948425293
    8. 'votes' → logprob: -11.880579948425293
    9. 'c' → logprob: -12.755579948425293
    10. 'cnt' → logprob: -12.880579948425293

Token 165: '[c' (ID: 22840)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18833516538143158
    2. '[k' → logprob: -2.6883351802825928
    3. '.get' → logprob: -2.9383351802825928
    4. '[c' → logprob: -3.1883351802825928
    5. '[o' → logprob: -5.188334941864014
    6. '[l' → logprob: -6.313334941864014
    7. '[x' → logprob: -6.438334941864014
    8. '[v' → logprob: -9.313335418701172
    9. '[key' → logprob: -9.938335418701172
    10. '[get' → logprob: -9.938335418701172

Token 166: 'and' (ID: 427)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12535397708415985
    2. '[c' → logprob: -2.250354051589966
    3. '[v' → logprob: -5.375353813171387
    4. ']<' → logprob: -6.500353813171387
    5. ' <' → logprob: -6.750353813171387
    6. '<=' → logprob: -7.000353813171387
    7. ']<=' → logprob: -7.000353813171387
    8. '[' → logprob: -7.500353813171387
    9. '<' → logprob: -7.625353813171387
    10. '<c' → logprob: -7.875353813171387

Token 167: ']' (ID: 60)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.1813364028930664
    2. '>' → logprob: -2.3063364028930664
    3. ']' → logprob: -3.4313364028930664
    4. ')' → logprob: -4.181336402893066
    5. ' >' → logprob: -4.681336402893066
    6. '[' → logprob: -5.056336402893066
    7. '[v' → logprob: -7.431336402893066
    8. '.get' → logprob: -7.556336402893066
    9. ')>' → logprob: -7.556336402893066
    10. '[k' → logprob: -8.306336402893066

Token 168: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.25947538018226624
    2. '<' → logprob: -2.0094754695892334
    3. ' <=' → logprob: -2.6344754695892334
    4. ' <' → logprob: -4.259475231170654
    5. '>' → logprob: -4.884475231170654
    6. ' >' → logprob: -7.634475231170654
    7. '>=' → logprob: -8.509475708007812
    8. '[' → logprob: -9.384475708007812
    9. '-' → logprob: -9.884475708007812
    10. ')' → logprob: -9.884475708007812

Token 169: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.01603800244629383
    2. ' remaining' → logprob: -4.141037940979004
    3. '   ' → logprob: -13.141037940979004
    4. ' ' → logprob: -14.141037940979004
    5. '_remaining' → logprob: -15.766037940979004
    6. '```' → logprob: -15.891037940979004
    7. '0' → logprob: -16.01603889465332
    8. '.remaining' → logprob: -16.14103889465332
    9. '  ' → logprob: -16.26603889465332
    10. 'remain' → logprob: -16.39103889465332

Token 170: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12056678533554077
    2. ' )' → logprob: -2.2455668449401855
    3. ' for' → logprob: -5.2455668449401855
    4. '):' → logprob: -6.4955668449401855
    5. ' and' → logprob: -8.370566368103027
    6. ' ' → logprob: -8.370566368103027
    7. ':' → logprob: -8.620566368103027
    8. ' ):' → logprob: -9.120566368103027
    9. 'for' → logprob: -9.870566368103027
    10. '<|end|>' → logprob: -10.745566368103027

Token 171: ' cand' (ID: 31771)
  Prédit: ' cand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cand' → logprob: -0.26657262444496155
    2. 'cand' → logprob: -2.1415727138519287
    3. ' c' → logprob: -3.1415727138519287
    4. ' counts' → logprob: -3.3915727138519287
    5. 'c' → logprob: -3.7665727138519287
    6. ' candidates' → logprob: -5.64157247543335
    7. ' leaders' → logprob: -5.76657247543335
    8. ' leader' → logprob: -5.89157247543335
    9. 'counts' → logprob: -6.51657247543335
    10. ' candidate' → logprob: -7.01657247543335

Token 172: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02414645068347454
    2. 'in' → logprob: -4.149146556854248
    3. 'id' → logprob: -5.024146556854248
    4. ' ' → logprob: -6.774146556854248
    5. '   ' → logprob: -9.14914608001709
    6. '  ' → logprob: -9.27414608001709
    7. ')' → logprob: -10.27414608001709
    8. 's' → logprob: -10.64914608001709
    9. 'if' → logprob: -10.89914608001709
    10. 'd' → logprob: -11.14914608001709

Token 173: ' counts' (ID: 28991)
  Prédit: ' counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.6446409821510315
    2. 'counts' → logprob: -1.3946409225463867
    3. 'leaders' → logprob: -2.0196409225463867
    4. ' leaders' → logprob: -2.3946409225463867
    5. 'le' → logprob: -7.269640922546387
    6. ' leads' → logprob: -7.644640922546387
    7. ' votes' → logprob: -8.019640922546387
    8. ' ' → logprob: -8.269640922546387
    9. 'count' → logprob: -8.269640922546387
    10. 'votes' → logprob: -8.519640922546387

Token 174: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0016756601398810744
    2. 'if' → logprob: -6.751675605773926
    3. ')' → logprob: -8.126675605773926
    4. ' and' → logprob: -8.626675605773926
    5. ' ' → logprob: -11.501675605773926
    6. ' )' → logprob: -11.751675605773926
    7. '.keys' → logprob: -12.376675605773926
    8. '})' → logprob: -12.626675605773926
    9. '])' → logprob: -13.376675605773926
    10. 'and' → logprob: -14.126675605773926

Token 175: ' cand' (ID: 31771)
  Prédit: ' cand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cand' → logprob: -0.6326957941055298
    2. 'cand' → logprob: -0.7576957941055298
    3. 'c' → logprob: -9.382696151733398
    4. ' c' → logprob: -12.007696151733398
    5. '	c' → logprob: -13.632696151733398
    6. ' ' → logprob: -14.132696151733398
    7. '   ' → logprob: -14.632696151733398
    8. 'cot' → logprob: -14.632696151733398
    9. '```' → logprob: -14.757696151733398
    10. '    ' → logprob: -14.945196151733398

Token 176: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.011068453080952168
    2. '!=' → logprob: -4.511068344116211
    3. ' ' → logprob: -11.136068344116211
    4. ']!=' → logprob: -13.136068344116211
    5. ')!=' → logprob: -13.386068344116211
    6. ' not' → logprob: -14.136068344116211
    7. ')' → logprob: -14.136068344116211
    8. '()!=' → logprob: -15.386068344116211
    9. ' ' → logprob: -15.636068344116211
    10. 'not' → logprob: -16.01106834411621

Token 177: ' leader' (ID: 12554)
  Prédit: ' leader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leader' → logprob: -0.6934000253677368
    2. 'leader' → logprob: -0.6934000253677368
    3. 'lead' → logprob: -9.693400382995605
    4. 'leaders' → logprob: -9.818400382995605
    5. ' leaders' → logprob: -9.943400382995605
    6. ' ' → logprob: -10.693400382995605
    7. 'v' → logprob: -11.443400382995605
    8. '   ' → logprob: -11.568400382995605
    9. 'le' → logprob: -12.193400382995605
    10. '  ' → logprob: -12.318400382995605

Token 178: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011587664484977722
    2. '):' → logprob: -4.511587619781494
    3. ' )' → logprob: -7.636587619781494
    4. '):
' → logprob: -10.136588096618652
    5. ')
' → logprob: -11.886588096618652
    6. ' ):' → logprob: -12.136588096618652
    7. '       ' → logprob: -13.761588096618652
    8. ':' → logprob: -13.886588096618652
    9. '))' → logprob: -14.011588096618652
    10. '   ' → logprob: -14.511588096618652

Token 179: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2383274883031845
    2. '       ' → logprob: -2.2383275032043457
    3. ':
' → logprob: -2.6133275032043457
    4. '):' → logprob: -4.113327503204346
    5. '           ' → logprob: -4.988327503204346
    6. ')' → logprob: -5.488327503204346
    7. '):
' → logprob: -5.988327503204346
    8. '               ' → logprob: -6.863327503204346
    9. ' :' → logprob: -8.488327026367188
    10. ' and' → logprob: -8.488327026367188

Token 180: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43729111552238464
    2. '       ' → logprob: -1.187291145324707
    3. ' if' → logprob: -4.437291145324707
    4. ' continue' → logprob: -4.562291145324707
    5. 'if' (adapté à ' if') → logprob: -4.687291145324707
    6. 'continue' → logprob: -5.062291145324707
    7. '   ' → logprob: -5.187291145324707
    8. ')' → logprob: -6.187291145324707
    9. '               ' → logprob: -6.937291145324707
    10. ':' → logprob: -7.062291145324707

Token 181: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.07012360543012619
    2. 'not' → logprob: -2.6951236724853516
    3. '           ' → logprob: -9.820123672485352
    4. '   ' → logprob: -9.945123672485352
    5. ' can' → logprob: -10.320123672485352
    6. '               ' → logprob: -11.570123672485352
    7. '       ' → logprob: -11.695123672485352
    8. 'can' → logprob: -12.320123672485352
    9. '!' → logprob: -12.445123672485352
    10. '    ' → logprob: -12.570123672485352

Token 182: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.023249903693795204
    2. 'can' → logprob: -3.773249864578247
    3. '	can' → logprob: -12.898249626159668
    4. ' ' → logprob: -13.648249626159668
    5. '(can' → logprob: -15.648249626159668
    6. '_can' → logprob: -16.148250579833984
    7. ' ' → logprob: -16.148250579833984
    8. ' could' → logprob: -16.523250579833984
    9. ' any' → logprob: -16.648250579833984
    10. '```' → logprob: -16.648250579833984

Token 183: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.246537173457909e-06
    2. ' _' → logprob: -12.750003814697266
    3. '_have' → logprob: -13.875003814697266
    4. '_are' → logprob: -16.500003814697266
    5. '_else' → logprob: -17.375003814697266
    6. '_can' → logprob: -17.500003814697266
    7. '\' → logprob: -17.750003814697266
    8. '_other' → logprob: -17.750003814697266
    9. '_possible' → logprob: -17.875003814697266
    10. '_any' → logprob: -18.500003814697266

Token 184: 'others' (ID: 30407)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.327974796295166
    2. 'others' → logprob: -1.327974796295166
    3. 'oth' → logprob: -5.202974796295166
    4. 'Others' → logprob: -5.702974796295166
    5. 'catch' → logprob: -6.202974796295166
    6. '_c' → logprob: -7.452974796295166
    7. ' Others' → logprob: -7.452974796295166
    8. 'othe' → logprob: -7.577974796295166
    9. ' others' → logprob: -7.827974796295166
    10. 'o' → logprob: -8.577974319458008

Token 185: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0003290288441348821
    2. '_' → logprob: -8.12532901763916
    3. '_can' → logprob: -10.75032901763916
    4. ' _' → logprob: -11.75032901763916
    5. '_have' → logprob: -14.50032901763916
    6. '_continue' → logprob: -14.50032901763916
    7. ':' → logprob: -14.62532901763916
    8. '_get' → logprob: -15.62532901763916
    9. '_le' → logprob: -15.62532901763916
    10. '```' → logprob: -15.75032901763916

Token 186: 'atch' (ID: 987)
  Prédit: 'atch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atch' → logprob: -0.0019797838758677244
    2. 'ont' → logprob: -6.751979827880859
    3. 'catch' → logprob: -7.876979827880859
    4. '   ' → logprob: -9.37697982788086
    5. 'ach' → logprob: -9.75197982788086
    6. 'at' → logprob: -10.25197982788086
    7. 'aught' → logprob: -10.62697982788086
    8. 't' → logprob: -10.62697982788086
    9. '       ' → logprob: -10.75197982788086
    10. 'ount' → logprob: -10.75197982788086

Token 187: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5760225057601929
    2. ':
' → logprob: -0.8260225057601929
    3. '           ' → logprob: -10.576022148132324
    4. '):
' → logprob: -10.951022148132324
    5. '               ' → logprob: -10.951022148132324
    6. ' and' → logprob: -11.951022148132324
    7. ':
' → logprob: -12.201022148132324
    8. ':

' → logprob: -12.951022148132324
    9. ' :
' → logprob: -12.951022148132324
    10. '       ' → logprob: -13.076022148132324

Token 188: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012584454379975796
    2. '           ' → logprob: -6.876258373260498
    3. '       ' → logprob: -8.751258850097656
    4. ' winner' → logprob: -10.376258850097656
    5. '   ' → logprob: -11.126258850097656
    6. 'winner' → logprob: -11.751258850097656
    7. '                   ' → logprob: -12.126258850097656
    8. '```' → logprob: -12.876258850097656
    9. ',' → logprob: -13.751258850097656
    10. '              ' → logprob: -14.001258850097656

Token 189: ' winner' (ID: 19499)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5737133026123047
    2. ' winner' → logprob: -1.5737133026123047
    3. 'winner' (adapté à ' winner') → logprob: -1.6987133026123047
    4. '           ' → logprob: -3.6987133026123047
    5. '   ' → logprob: -4.073713302612305
    6. '       ' → logprob: -5.948713302612305
    7. '                   ' → logprob: -6.323713302612305
    8. ' ' → logprob: -9.823713302612305
    9. '  ' → logprob: -10.948713302612305
    10. 'win' → logprob: -11.323713302612305

Token 190: ' =' (ID: 314)
  Prédit: '_at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.055353742092847824
    2. '=' → logprob: -3.6803536415100098
    3. ' =' → logprob: -4.30535364151001
    4. '_' → logprob: -4.43035364151001
    5. '=_' → logprob: -5.80535364151001
    6. ',_' → logprob: -9.305354118347168
    7. ' _' → logprob: -9.805354118347168
    8. '="_' → logprob: -10.305354118347168
    9. '_=' → logprob: -10.930354118347168
    10. '='_' → logprob: -12.180354118347168

Token 191: ' leader' (ID: 12554)
  Prédit: 'leader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leader' → logprob: -0.2818548083305359
    2. ' leader' → logprob: -1.4068548679351807
    3. 'v' → logprob: -8.031854629516602
    4. 'lead' → logprob: -8.781854629516602
    5. '   ' → logprob: -9.031854629516602
    6. ' v' → logprob: -10.031854629516602
    7. '  ' → logprob: -11.656854629516602
    8. ' ' → logprob: -11.656854629516602
    9. 'leaders' → logprob: -11.656854629516602
    10. '(' → logprob: -12.156854629516602

Token 192: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008767137303948402
    2. '       ' → logprob: -4.758767127990723
    3. '           ' → logprob: -9.383767127990723
    4. ',' → logprob: -10.258767127990723
    5. '<|end|>' → logprob: -10.508767127990723
    6. '   ' → logprob: -12.883767127990723
    7. '		       ' → logprob: -14.633767127990723
    8. '              ' → logprob: -14.758767127990723
    9. '.' → logprob: -14.883767127990723
    10. 'n' → logprob: -15.008767127990723

Token 193: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01056690700352192
    2. '       ' → logprob: -4.635566711425781
    3. '           ' → logprob: -7.135566711425781
    4. '<|end|>' → logprob: -12.385566711425781
    5. '   ' → logprob: -12.635566711425781
    6. ',' → logprob: -12.760566711425781
    7. '		       ' → logprob: -13.760566711425781
    8. '                   ' → logprob: -14.385566711425781
    9. '              ' → logprob: -14.635566711425781
    10. '​' → logprob: -15.385566711425781

Token 194: ' winner' (ID: 19499)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' (adapté à ' winner') → logprob: -0.00012284684635233134
    2. ' winner' → logprob: -9.125123023986816
    3. '       ' → logprob: -12.250123023986816
    4. 'break' → logprob: -12.375123023986816
    5. '   ' → logprob: -13.000123023986816
    6. '               ' → logprob: -13.375123023986816
    7. '           ' → logprob: -14.875123023986816
    8. 'w' → logprob: -14.875123023986816
    9. 'print' → logprob: -16.6251220703125
    10. '```' → logprob: -16.7501220703125

Token 195: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -2.570319702499546e-05
    2. '_' → logprob: -11.750025749206543
    3. '=_' → logprob: -12.500025749206543
    4. '=' → logprob: -13.250025749206543
    5. '```' → logprob: -13.375025749206543
    6. ''_' → logprob: -13.875025749206543
    7. '##_' → logprob: -13.875025749206543
    8. ' _' → logprob: -14.250025749206543
    9. '<|end|>' → logprob: -14.375025749206543
    10. '"_' → logprob: -14.375025749206543

Token 196: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005240037105977535
    2. ' =' → logprob: -5.255239963531494
    3. '=i' → logprob: -12.005240440368652
    4. '=
' → logprob: -17.255239486694336
    5. '＝' → logprob: -17.755239486694336
    6. '=

' → logprob: -18.505239486694336
    7. 'i' → logprob: -18.755239486694336
    8. ' ' → logprob: -19.005239486694336
    9. '=}' → logprob: -19.255239486694336
    10. '==' → logprob: -19.380239486694336

Token 197: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004080301150679588
    2. ' i' → logprob: -5.504080295562744
    3. '   ' → logprob: -13.254080772399902
    4. ' ' → logprob: -16.254079818725586
    5. '	i' → logprob: -17.504079818725586
    6. '  ' → logprob: -17.629079818725586
    7. '(i' → logprob: -18.754079818725586
    8. '    ' → logprob: -18.879079818725586
    9. '{i' → logprob: -19.504079818725586
    10. '[i' → logprob: -19.879079818725586

Token 198: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012340232729911804
    2. '       ' → logprob: -4.512340068817139
    3. '           ' → logprob: -7.387340068817139
    4. '<|end|>' → logprob: -8.137340545654297
    5. '                
' → logprob: -9.012340545654297
    6. '   ' → logprob: -9.512340545654297
    7. '
' → logprob: -9.887340545654297
    8. ',' → logprob: -10.012340545654297
    9. '        
' → logprob: -11.387340545654297
    10. '		       ' → logprob: -11.387340545654297

Token 199: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2847785949707031
    2. '   ' → logprob: -1.5347785949707031
    3. '       ' → logprob: -3.909778594970703
    4. 'print' → logprob: -5.284778594970703
    5. '           ' → logprob: -5.784778594970703
    6. '    
' → logprob: -6.534778594970703
    7. 'if' → logprob: -6.659778594970703
    8. '                
' → logprob: -7.659778594970703
    9. '
' → logprob: -8.284778594970703
    10. ' if' → logprob: -8.534778594970703

Token 200: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6679917573928833
    2. 'break' (adapté à ' break') → logprob: -0.7929917573928833
    3. ' break' → logprob: -3.4179916381835938
    4. '           ' → logprob: -6.792991638183594
    5. '   ' → logprob: -7.542991638183594
    6. '               ' → logprob: -8.417991638183594
    7. '	break' → logprob: -9.417991638183594
    8. 'print' → logprob: -10.667991638183594
    9. '      ' → logprob: -12.292991638183594
    10. ' ' → logprob: -12.667991638183594

Token 201: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2205103635787964
    2. 'print' → logprob: -1.7205103635787964
    3. 'if' → logprob: -4.595510482788086
    4. ' if' → logprob: -5.720510482788086
    5. '
' → logprob: -6.595510482788086
    6. '    
' → logprob: -6.720510482788086
    7. ')' → logprob: -6.720510482788086
    8. '       ' → logprob: -7.595510482788086
    9. ' print' → logprob: -7.595510482788086
    10. '<|end|>' → logprob: -8.595510482788086

Token 202: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.019280195236206
    2. '   ' → logprob: -1.019280195236206
    3. '<|end|>' → logprob: -1.894280195236206
    4. '
' → logprob: -2.269280195236206
    5. '    
' → logprob: -5.019280433654785
    6. '       ' → logprob: -5.519280433654785
    7. '\n' → logprob: -6.269280433654785
    8. 'print' → logprob: -6.519280433654785
    9. ')
' → logprob: -6.769280433654785
    10. '  
' → logprob: -7.019280433654785

Token 203: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20754589140415192
    2. 'if' (adapté à ' if') → logprob: -1.8325458765029907
    3. '   ' → logprob: -3.9575459957122803
    4. ' if' → logprob: -4.957545757293701
    5. ' print' → logprob: -7.082545757293701
    6. '    
' → logprob: -8.58254623413086
    7. 'else' → logprob: -8.95754623413086
    8. 'for' → logprob: -10.08254623413086
    9. '  
' → logprob: -11.45754623413086
    10. 'elif' → logprob: -11.45754623413086

Token 204: ' winner' (ID: 19499)
  Prédit: ' winner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' winner' → logprob: -0.0029349105898290873
    2. 'winner' → logprob: -6.25293493270874
    3. ' not' → logprob: -7.00293493270874
    4. ' ' → logprob: -9.377934455871582
    5. ' ' → logprob: -13.252934455871582
    6. ' len' → logprob: -13.252934455871582
    7. 'not' → logprob: -13.377934455871582
    8. ' n' → logprob: -13.377934455871582
    9. 'n' → logprob: -13.502934455871582
    10. '  ' → logprob: -13.877934455871582

Token 205: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.015159426257014275
    2. ' ==' → logprob: -4.640159606933594
    3. ':' → logprob: -5.390159606933594
    4. '==' → logprob: -7.265159606933594
    5. 'is' → logprob: -9.390159606933594
    6. ' !=' → logprob: -10.640159606933594
    7. ' ' → logprob: -12.015159606933594
    8. ' and' → logprob: -12.140159606933594
    9. '!=' → logprob: -12.765159606933594
    10. ' :' → logprob: -13.390159606933594

Token 206: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.31677597761154175
    2. 'None' → logprob: -1.5667760372161865
    3. ' not' → logprob: -2.8167760372161865
    4. 'not' → logprob: -5.816775798797607
    5. ' ' → logprob: -12.691776275634766
    6. '   ' → logprob: -13.066776275634766
    7. '_None' → logprob: -13.066776275634766
    8. 'Not' → logprob: -13.316776275634766
    9. '=None' → logprob: -13.441776275634766
    10. '(None' → logprob: -13.816776275634766

Token 207: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020601682364940643
    2. ':
' → logprob: -3.895601749420166
    3. '       ' → logprob: -9.895601272583008
    4. '   ' → logprob: -12.270601272583008
    5. ' :' → logprob: -13.520601272583008
    6. ' or' → logprob: -13.645601272583008
    7. ' and' → logprob: -14.270601272583008
    8. ',' → logprob: -15.020601272583008
    9. '():
' → logprob: -15.270601272583008
    10. ':
' → logprob: -15.395601272583008

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014502760022878647
    2. ':' → logprob: -4.38950252532959
    3. '   ' → logprob: -6.51450252532959
    4. ':
' → logprob: -7.88950252532959
    5. ' print' → logprob: -9.88950252532959
    6. 'print' → logprob: -10.76450252532959
    7. ',' → logprob: -10.88950252532959
    8. ' and' → logprob: -12.01450252532959
    9. ' :' → logprob: -12.13950252532959
    10. '    
' → logprob: -12.51450252532959

Token 209: ' #' (ID: 1069)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6499603986740112
    2. 'print' → logprob: -0.8999603986740112
    3. '   ' → logprob: -2.774960517883301
    4. '       ' → logprob: -4.899960517883301
    5. ' if' → logprob: -7.524960517883301
    6. ' for' → logprob: -8.0249605178833
    7. ' votes' → logprob: -9.2749605178833
    8. 'if' → logprob: -9.5249605178833
    9. ' winner' → logprob: -9.7749605178833
    10. ' ' → logprob: -9.8999605178833

Token 210: ' check' (ID: 2371)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16296766698360443
    2. 'max' → logprob: -2.1629676818847656
    3. 'sorted' → logprob: -4.537967681884766
    4. 'winner' → logprob: -4.787967681884766
    5. ' print' → logprob: -5.287967681884766
    6. 'votes' → logprob: -5.912967681884766
    7. 'counts' → logprob: -6.037967681884766
    8. '#' → logprob: -6.537967681884766
    9. ' max' → logprob: -7.037967681884766
    10. 'total' → logprob: -7.537967681884766

Token 211: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20858483016490936
    2. 'max' → logprob: -3.208584785461426
    3. ' max' → logprob: -3.458584785461426
    4. ' if' → logprob: -3.583584785461426
    5. ' counts' → logprob: -3.583584785461426
    6. ' for' → logprob: -4.333584785461426
    7. ' final' → logprob: -4.458584785461426
    8. ' votes' → logprob: -4.708584785461426
    9. 'final' → logprob: -5.083584785461426
    10. 'counts' → logprob: -5.083584785461426

Token 212: ' tie' (ID: 22244)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3389164209365845
    2. ' max' → logprob: -1.7139164209365845
    3. ' counts' → logprob: -3.588916301727295
    4. 'counts' → logprob: -4.088916301727295
    5. 'all' → logprob: -4.213916301727295
    6. 'len' → logprob: -4.338916301727295
    7. ' all' → logprob: -4.338916301727295
    8. ' len' → logprob: -4.963916301727295
    9. 'sum' → logprob: -5.088916301727295
    10. ' sum' → logprob: -6.213916301727295

Token 213: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12619736790657043
    2. '   ' → logprob: -2.626197338104248
    3. ':
' → logprob: -4.001197338104248
    4. 's' → logprob: -4.626197338104248
    5. 'votes' → logprob: -5.001197338104248
    6. ' :' → logprob: -5.626197338104248
    7. ' or' → logprob: -6.626197338104248
    8. ' :
' → logprob: -7.126197338104248
    9. 'counts' → logprob: -7.126197338104248
    10. '       ' → logprob: -7.251197338104248

Token 214: ' single' (ID: 4590)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6402606964111328
    2. 'winner' → logprob: -2.015260696411133
    3. ' max' → logprob: -2.765260696411133
    4. 'all' → logprob: -2.890260696411133
    5. ' winner' → logprob: -3.140260696411133
    6. 'not' → logprob: -3.265260696411133
    7. ' not' → logprob: -3.765260696411133
    8. 'counts' → logprob: -3.890260696411133
    9. ' counts' → logprob: -4.015260696411133
    10. ' all' → logprob: -4.140260696411133

Token 215: ' winner' (ID: 19499)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7692223191261292
    2. 'winner' → logprob: -1.3942222595214844
    3. ' winner' → logprob: -1.6442222595214844
    4. ' max' → logprob: -2.6442222595214844
    5. 'leader' → logprob: -5.269222259521484
    6. 'w' → logprob: -5.769222259521484
    7. '   ' → logprob: -6.019222259521484
    8. 'count' → logprob: -6.144222259521484
    9. ' leader' → logprob: -6.644222259521484
    10. ' counts' → logprob: -6.644222259521484

Token 216: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4973832070827484
    2. ':' → logprob: -1.2473832368850708
    3. '       ' → logprob: -3.6223831176757812
    4. ' at' → logprob: -4.122383117675781
    5. ' counts' → logprob: -4.372383117675781
    6. 'votes' → logprob: -4.622383117675781
    7. ',' → logprob: -4.747383117675781
    8. '```' → logprob: -4.997383117675781
    9. ':
' → logprob: -5.122383117675781
    10. 'counts' → logprob: -5.247383117675781

Token 217: ' the' (ID: 290)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6108580231666565
    2. 'max' → logprob: -1.2358579635620117
    3. 'n' → logprob: -2.6108579635620117
    4. 'end' → logprob: -3.3608579635620117
    5. 'votes' → logprob: -4.235857963562012
    6. 'all' → logprob: -4.360857963562012
    7. 'final' → logprob: -4.735857963562012
    8. 'the' → logprob: -4.985857963562012
    9. 'len' → logprob: -5.360857963562012
    10. 'counts' → logprob: -5.485857963562012

Token 218: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.012572160921990871
    2. ' end' → logprob: -4.387572288513184
    3. 'last' → logprob: -10.887572288513184
    4. 'final' → logprob: -11.262572288513184
    5. 'count' → logprob: -11.637572288513184
    6. 'else' → logprob: -12.262572288513184
    7. '   ' → logprob: -12.512572288513184
    8. ' ' → logprob: -13.262572288513184
    9. 'finish' → logprob: -13.262572288513184
    10. 'votes' → logprob: -13.387572288513184

Token 219: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02798452414572239
    2. '       ' → logprob: -3.777984619140625
    3. 'max' → logprob: -6.777984619140625
    4. ' max' → logprob: -7.027984619140625
    5. ' votes' → logprob: -7.152984619140625
    6. 'votes' → logprob: -7.527984619140625
    7. ' counts' → logprob: -8.027984619140625
    8. ':' → logprob: -8.027984619140625
    9. ' if' → logprob: -8.402984619140625
    10. 'counts' → logprob: -9.152984619140625

Token 220: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007378146983683109
    2. '       ' → logprob: -5.132378101348877
    3. ' counts' → logprob: -8.007378578186035
    4. ' if' → logprob: -8.132378578186035
    5. 'votes' → logprob: -8.507378578186035
    6. ' votes' → logprob: -8.632378578186035
    7. 'max' → logprob: -8.882378578186035
    8. ' max' → logprob: -9.132378578186035
    9. 'counts' → logprob: -9.382378578186035
    10. 'if' → logprob: -9.757378578186035

Token 221: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.019870487973093987
    2. ' max' → logprob: -4.894870281219482
    3. 'if' → logprob: -5.394870281219482
    4. 'counts' → logprob: -5.394870281219482
    5. 'final' → logprob: -6.394870281219482
    6. '   ' → logprob: -7.269870281219482
    7. ' counts' → logprob: -8.64487075805664
    8. 'votes' → logprob: -9.01987075805664
    9. 'leaders' → logprob: -9.01987075805664
    10. ' if' → logprob: -9.39487075805664

Token 222: '_votes' (ID: 167389)
  Prédit: '_votes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_votes' → logprob: -0.000116655595775228
    2. '_counts' → logprob: -9.250116348266602
    3. '_vote' → logprob: -11.625116348266602
    4. '_' → logprob: -11.625116348266602
    5. 'Votes' → logprob: -14.750116348266602
    6. '(' → logprob: -14.750116348266602
    7. '_v' → logprob: -14.875116348266602
    8. 'votes' → logprob: -15.125116348266602
    9. '(_' → logprob: -15.125116348266602
    10. '```' → logprob: -15.500116348266602

Token 223: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5771405696868896
    2. '=' → logprob: -0.8271405696868896
    3. ' ==' → logprob: -7.077140808105469
    4. '==' → logprob: -8.077140808105469
    5. '=max' → logprob: -10.202140808105469
    6. ',' → logprob: -13.327140808105469
    7. '<|end|>' → logprob: -13.702140808105469
    8. '>' → logprob: -13.952140808105469
    9. '=count' → logprob: -13.952140808105469
    10. '=int' → logprob: -14.327140808105469

Token 224: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.2519291639328003
    2. 'max' → logprob: -1.5019291639328003
    3. '(max' → logprob: -17.126928329467773
    4. ' ' → logprob: -17.251928329467773
    5. '	max' → logprob: -17.501928329467773
    6. '=max' → logprob: -17.751928329467773
    7. '   ' → logprob: -18.001928329467773
    8. ',max' → logprob: -18.626928329467773
    9. '[max' → logprob: -19.126928329467773
    10. ' maximum' → logprob: -19.751928329467773

Token 225: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -6.825890159234405e-05
    2. 'counts' → logprob: -10.125068664550781
    3. 'count' → logprob: -11.250068664550781
    4. '(' → logprob: -11.250068664550781
    5. ' counts' → logprob: -13.750068664550781
    6. '[count' → logprob: -14.750068664550781
    7. ' (' → logprob: -15.750068664550781
    8. '(list' → logprob: -16.25006866455078
    9. '(values' → logprob: -16.37506866455078
    10. '(
' → logprob: -16.50006866455078

Token 226: 's' (ID: 82)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.10631058365106583
    2. '(count' → logprob: -2.4813106060028076
    3. ' counts' → logprob: -4.6063103675842285
    4. 'count' → logprob: -5.1063103675842285
    5. '.count' → logprob: -7.7313103675842285
    6. 'ount' → logprob: -8.606310844421387
    7. '[count' → logprob: -8.856310844421387
    8. ')' → logprob: -9.106310844421387
    9. 's' → logprob: -9.231310844421387
    10. 'values' → logprob: -9.856310844421387

Token 227: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -6.635164754698053e-05
    2. '.' → logprob: -9.875066757202148
    3. ' .' → logprob: -11.375066757202148
    4. '().' → logprob: -13.625066757202148
    5. ').' → logprob: -13.625066757202148
    6. ')' → logprob: -14.375066757202148
    7. 'values' → logprob: -15.000066757202148
    8. '.value' → logprob: -16.62506675720215
    9. ' values' → logprob: -17.37506675720215
    10. '(values' → logprob: -17.62506675720215

Token 228: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2624589502811432
    2. ')' → logprob: -1.5124589204788208
    3. '()' → logprob: -5.012458801269531
    4. '())
' → logprob: -5.637458801269531
    5. ')
' → logprob: -8.637458801269531
    6. '()
' → logprob: -9.887458801269531
    7. ' )' → logprob: -11.137458801269531
    8. '   ' → logprob: -12.387458801269531
    9. ' ())' → logprob: -12.887458801269531
    10. '(' → logprob: -13.387458801269531

Token 229: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010062279179692268
    2. '<|end|>' → logprob: -5.135062217712402
    3. 'leaders' → logprob: -6.635062217712402
    4. '_le' → logprob: -6.885062217712402
    5. '```' → logprob: -7.260062217712402
    6. ' leaders' → logprob: -7.760062217712402
    7. ' winners' → logprob: -8.885062217712402
    8. '   ' → logprob: -9.010062217712402
    9. 'le' → logprob: -9.385062217712402
    10. ' if' → logprob: -9.760062217712402

Token 230: ' leaders' (ID: 13998)
  Prédit: 'leaders'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leaders' (adapté à ' leaders') → logprob: -0.4735317826271057
    2. 'w' → logprob: -1.098531723022461
    3. ' leaders' → logprob: -3.598531723022461
    4. ' winners' → logprob: -4.848531723022461
    5. 'le' → logprob: -5.848531723022461
    6. '       ' → logprob: -6.348531723022461
    7. 'max' → logprob: -6.848531723022461
    8. 'if' → logprob: -6.973531723022461
    9. 'c' → logprob: -8.098531723022461
    10. ' if' → logprob: -8.348531723022461

Token 231: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3138265311717987
    2. '=' → logprob: -1.313826560974121
    3. '<|end|>' → logprob: -7.688826560974121
    4. '==' → logprob: -10.313826560974121
    5. ')' → logprob: -10.438826560974121
    6. '=[]' → logprob: -12.313826560974121
    7. '=[
' → logprob: -12.438826560974121
    8. '=
' → logprob: -12.438826560974121
    9. '```' → logprob: -12.563826560974121
    10. '   ' → logprob: -12.688826560974121

Token 232: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.16680388152599335
    2. '[k' → logprob: -1.9168038368225098
    3. '[' → logprob: -5.04180383682251
    4. '[key' → logprob: -9.666804313659668
    5. '[v' → logprob: -11.416804313659668
    6. '[max' → logprob: -12.416804313659668
    7. '[len' → logprob: -12.916804313659668
    8. '[a' → logprob: -12.916804313659668
    9. '[s' → logprob: -13.041804313659668
    10. '[c' → logprob: -13.541804313659668

Token 233: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.700132997939363e-05
    2. ' k' → logprob: -11.000017166137695
    3. 'c' → logprob: -16.375017166137695
    4. '(k' → logprob: -17.250017166137695
    5. '   ' → logprob: -17.625017166137695
    6. '_k' → logprob: -18.000017166137695
    7. '
' → logprob: -18.000017166137695
    8. '{k' → logprob: -18.750017166137695
    9. '"k' → logprob: -18.875017166137695
    10. '```' → logprob: -18.875017166137695

Token 234: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.018150178715586662
    2. 'for' → logprob: -4.018150329589844
    3. ',' → logprob: -15.893150329589844
    4. ' ' → logprob: -16.518150329589844
    5. '	for' → logprob: -17.393150329589844
    6. '
' → logprob: -18.643150329589844
    7. '   ' → logprob: -18.893150329589844
    8. '        ' → logprob: -18.893150329589844
    9. ' 
' → logprob: -19.893150329589844
    10. '           ' → logprob: -19.893150329589844

Token 235: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0005002511315979064
    2. ' k' → logprob: -7.750500202178955
    3. ',' → logprob: -9.625500679016113
    4. ',k' → logprob: -12.625500679016113
    5. '
' → logprob: -16.500499725341797
    6. ' ,' → logprob: -17.500499725341797
    7. 'c' → logprob: -17.625499725341797
    8. '_,' → logprob: -17.625499725341797
    9. 'v' → logprob: -17.625499725341797
    10. '```' → logprob: -18.500499725341797

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007352700922638178
    2. ',val' → logprob: -5.132352828979492
    3. 'val' → logprob: -6.882352828979492
    4. ',v' → logprob: -9.007352828979492
    5. ' ,' → logprob: -9.132352828979492
    6. ',k' → logprob: -9.382352828979492
    7. '_,' → logprob: -10.257352828979492
    8. ' val' → logprob: -10.882352828979492
    9. 'k' → logprob: -11.257352828979492
    10. 'v' → logprob: -11.632352828979492

Token 237: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.061967913061380386
    2. 'val' → logprob: -2.8119678497314453
    3. '[val' → logprob: -16.811967849731445
    4. '	val' → logprob: -16.936967849731445
    5. '(val' → logprob: -17.061967849731445
    6. 'v' → logprob: -17.061967849731445
    7. '_val' → logprob: -17.436967849731445
    8. ' ' → logprob: -17.561967849731445
    9. 'value' → logprob: -17.936967849731445
    10. ',val' → logprob: -18.186967849731445

Token 238: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07890135049819946
    2. 'in' → logprob: -2.5789012908935547
    3. ' ' → logprob: -12.203901290893555
    4. ' counts' → logprob: -12.953901290893555
    5. ',' → logprob: -13.703901290893555
    6. 'val' → logprob: -13.828901290893555
    7. 'counts' → logprob: -14.203901290893555
    8. ' val' → logprob: -15.328901290893555
    9. 'count' → logprob: -15.578901290893555
    10. '  ' → logprob: -15.578901290893555

Token 239: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.06197183206677437
    2. ' counts' → logprob: -2.81197190284729
    3. 'count' → logprob: -12.436971664428711
    4. 'val' → logprob: -17.43697166442871
    5. 'votes' → logprob: -17.93697166442871
    6. '```' → logprob: -18.06197166442871
    7. ' ' → logprob: -18.18697166442871
    8. '_counts' → logprob: -18.43697166442871
    9. '   ' → logprob: -18.81197166442871
    10. 'c' → logprob: -19.56197166442871

Token 240: '.items' (ID: 19607)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5808676481246948
    2. 'in' → logprob: -0.8308676481246948
    3. '==' → logprob: -6.080867767333984
    4. 'if' → logprob: -6.205867767333984
    5. 'items' → logprob: -8.580867767333984
    6. '.items' → logprob: -8.830867767333984
    7. ' if' → logprob: -9.955867767333984
    8. ' ==' → logprob: -10.080867767333984
    9. '```' → logprob: -10.080867767333984
    10. ' ' → logprob: -10.455867767333984

Token 241: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03569302707910538
    2. 'if' → logprob: -3.7856929302215576
    3. ' if' → logprob: -4.410693168640137
    4. '()==' → logprob: -9.035693168640137
    5. '()]' → logprob: -10.535693168640137
    6. ' ()' → logprob: -10.785693168640137
    7. ')' → logprob: -11.035693168640137
    8. ' in' → logprob: -11.410693168640137
    9. 'in' → logprob: -11.535693168640137
    10. '   ' → logprob: -12.410693168640137

Token 242: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5760289430618286
    2. ' if' → logprob: -0.8260289430618286
    3. ' in' → logprob: -9.951028823852539
    4. '==' → logprob: -10.326028823852539
    5. 'in' → logprob: -12.701028823852539
    6. '   ' → logprob: -12.951028823852539
    7. ' ==' → logprob: -13.576028823852539
    8. '=' → logprob: -14.451028823852539
    9. ' ' → logprob: -14.576028823852539
    10. ')' → logprob: -14.576028823852539

Token 243: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.10020763427019119
    2. 'val' → logprob: -2.350207567214966
    3. '(val' → logprob: -14.725207328796387
    4. '    ' → logprob: -15.975207328796387
    5. '[val' → logprob: -16.100208282470703
    6. '	val' → logprob: -16.225208282470703
    7. '   ' → logprob: -16.725208282470703
    8. '```' → logprob: -16.725208282470703
    9. 'max' → logprob: -17.225208282470703
    10. '           ' → logprob: -17.475208282470703

Token 244: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3132668435573578
    2. ' ==' → logprob: -1.3132668733596802
    3. '>=' → logprob: -12.81326675415039
    4. ' >=' → logprob: -13.81326675415039
    5. ']==' → logprob: -14.81326675415039
    6. ' ' → logprob: -15.31326675415039
    7. '==
' → logprob: -15.56326675415039
    8. '```' → logprob: -15.56326675415039
    9. '===' → logprob: -16.18826675415039
    10. '   ' → logprob: -16.81326675415039

Token 245: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.003177952254191041
    2. ' max' → logprob: -5.753178119659424
    3. 'val' → logprob: -15.253177642822266
    4. ' ' → logprob: -17.003177642822266
    5. '[max' → logprob: -18.128177642822266
    6. '(max' → logprob: -18.253177642822266
    7. '=max' → logprob: -18.503177642822266
    8. '
' → logprob: -18.753177642822266
    9. '	max' → logprob: -19.003177642822266
    10. '   ' → logprob: -19.503177642822266

Token 246: '_votes' (ID: 167389)
  Prédit: '_votes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_votes' → logprob: -0.0036726370453834534
    2. 'votes' → logprob: -5.8786725997924805
    3. 'val' → logprob: -7.1286725997924805
    4. '_values' → logprob: -10.37867259979248
    5. 'Votes' → logprob: -11.12867259979248
    6. 'values' → logprob: -11.75367259979248
    7. 'value' → logprob: -12.25367259979248
    8. 'max' → logprob: -13.50367259979248
    9. 'vals' → logprob: -13.87867259979248
    10. '_vals' → logprob: -14.00367259979248

Token 247: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006031776778399944
    2. ']
' → logprob: -5.1310319900512695
    3. ' ]' → logprob: -9.88103199005127
    4. ']

' → logprob: -10.63103199005127
    5. '       ' → logprob: -11.50603199005127
    6. '   ' → logprob: -11.50603199005127
    7. ']
' → logprob: -12.50603199005127
    8. ' ]
' → logprob: -14.13103199005127
    9. ' if' → logprob: -14.50603199005127
    10. 'if' → logprob: -14.88103199005127

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4460357427597046
    2. '   ' → logprob: -1.8210357427597046
    3. 'if' → logprob: -1.9460357427597046
    4. ' if' → logprob: -2.946035861968994
    5. 'print' → logprob: -6.571035861968994
    6. '           ' → logprob: -7.446035861968994
    7. ':' → logprob: -8.696035385131836
    8. '[' → logprob: -9.446035385131836
    9. '```' → logprob: -9.821035385131836
    10. '{' → logprob: -9.821035385131836

Token 249: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12862733006477356
    2. ' if' → logprob: -2.878627300262451
    3. '       ' → logprob: -3.128627300262451
    4. '   ' → logprob: -3.878627300262451
    5. '           ' → logprob: -11.37862777709961
    6. ' ' → logprob: -12.37862777709961
    7. '```' → logprob: -12.37862777709961
    8. 'print' → logprob: -13.00362777709961
    9. '  ' → logprob: -13.50362777709961
    10. '    ' → logprob: -13.62862777709961

Token 250: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.25192973017692566
    2. 'len' → logprob: -1.501929759979248
    3. '   ' → logprob: -15.12692928314209
    4. '(len' → logprob: -15.25192928314209
    5. ' ' → logprob: -17.001930236816406
    6. '	len' → logprob: -17.251930236816406
    7. '    ' → logprob: -18.876930236816406
    8. '[len' → logprob: -19.001930236816406
    9. '  ' → logprob: -19.251930236816406
    10. ',len' → logprob: -19.876930236816406

Token 251: '(le' (ID: 135521)
  Prédit: '(le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(le' → logprob: -5.796184723294573e-06
    2. '(' → logprob: -12.250005722045898
    3. ' (' → logprob: -14.000005722045898
    4. 'leaders' → logprob: -16.7500057220459
    5. '```' → logprob: -18.3750057220459
    6. 'Le' → logprob: -18.5000057220459
    7. 'le' → logprob: -18.7500057220459
    8. '(
' → logprob: -19.0000057220459
    9. '/le' → logprob: -19.2500057220459
    10. '(w' → logprob: -19.3750057220459

Token 252: 'aders' (ID: 35288)
  Prédit: 'aders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aders' → logprob: -3.643152740551159e-05
    2. 'leaders' → logprob: -11.250036239624023
    3. 'ad' → logprob: -11.375036239624023
    4. 'ads' → logprob: -12.625036239624023
    5. 'ader' → logprob: -13.000036239624023
    6. '[' → logprob: -13.375036239624023
    7. 'ders' → logprob: -13.500036239624023
    8. 'iders' → logprob: -14.250036239624023
    9. '{' → logprob: -14.625036239624023
    10. 'a' → logprob: -14.875036239624023

Token 253: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6390961408615112
    2. ' ==' → logprob: -0.8890961408615112
    3. ')' → logprob: -2.889096260070801
    4. '>' → logprob: -5.764096260070801
    5. ' >' → logprob: -6.764096260070801
    6. ')==' → logprob: -6.889096260070801
    7. ' )' → logprob: -9.7640962600708
    8. '```' → logprob: -9.8890962600708
    9. ' <=' → logprob: -10.2640962600708
    10. '<=' → logprob: -10.6390962600708

Token 254: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3002897799015045
    2. ' ==' → logprob: -1.4252897500991821
    3. '>' → logprob: -4.175289630889893
    4. ' >' → logprob: -5.675289630889893
    5. '```' → logprob: -10.42529010772705
    6. '=' → logprob: -10.55029010772705
    7. '<' → logprob: -10.67529010772705
    8. ' ' → logprob: -10.92529010772705
    9. '1' → logprob: -11.30029010772705
    10. '!=' → logprob: -11.80029010772705

Token 255: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0026449791621416807
    2. ' ' → logprob: -6.002645015716553
    3. '2' → logprob: -8.752644538879395
    4. '```' → logprob: -12.127644538879395
    5. '0' → logprob: -12.752644538879395
    6. '>' → logprob: -14.252644538879395
    7. '   ' → logprob: -14.315144538879395
    8. '3' → logprob: -15.190144538879395
    9. '  ' → logprob: -16.12764549255371
    10. 'count' → logprob: -16.31514549255371

Token 256: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002003218833124265
    2. ' ' → logprob: -9.250200271606445
    3. '2' → logprob: -9.750200271606445
    4. '```' → logprob: -10.500200271606445
    5. '>' → logprob: -12.187700271606445
    6. '   ' → logprob: -13.000200271606445
    7. '0' → logprob: -13.625200271606445
    8. '=' → logprob: -13.875200271606445
    9. ')' → logprob: -14.250200271606445
    10. 'one' → logprob: -14.312700271606445

Token 257: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08901208639144897
    2. ':
' → logprob: -2.4640121459960938
    3. '       ' → logprob: -10.339012145996094
    4. '           ' → logprob: -11.464012145996094
    5. ' and' → logprob: -11.589012145996094
    6. '   ' → logprob: -11.839012145996094
    7. 'print' → logprob: -13.089012145996094
    8. ',' → logprob: -13.089012145996094
    9. ' or' → logprob: -13.589012145996094
    10. ':

' → logprob: -13.589012145996094

Token 258: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08495566248893738
    2. 'print' → logprob: -2.9599556922912598
    3. '       ' → logprob: -4.08495569229126
    4. ' print' → logprob: -4.45995569229126
    5. '   ' → logprob: -7.20995569229126
    6. '
' → logprob: -8.709955215454102
    7. ':
' → logprob: -9.209955215454102
    8. '```' → logprob: -9.334955215454102
    9. '               ' → logprob: -10.084955215454102
    10. 'winner' → logprob: -10.709955215454102

Token 259: ' winner' (ID: 19499)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' (adapté à ' winner') → logprob: -0.863791823387146
    2. ' winner' → logprob: -1.613791823387146
    3. 'print' → logprob: -2.1137919425964355
    4. '       ' → logprob: -2.2387919425964355
    5. '   ' → logprob: -2.3637919425964355
    6. '           ' → logprob: -3.2387919425964355
    7. ' print' → logprob: -4.2387919425964355
    8. '               ' → logprob: -5.7387919425964355
    9. '```' → logprob: -7.8637919425964355
    10. ' ' → logprob: -8.238791465759277

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759637355804443
    2. '=' → logprob: -0.8259637355804443
    3. ',' → logprob: -10.700963973999023
    4. ' ' → logprob: -14.825963973999023
    5. ')' → logprob: -15.075963973999023
    6. '=

' → logprob: -15.575963973999023
    7. ' +=' → logprob: -15.825963973999023
    8. '＝' → logprob: -15.950963973999023
    9. ' ==' → logprob: -15.950963973999023
    10. ' ,' → logprob: -16.450963973999023

Token 261: ' leaders' (ID: 13998)
  Prédit: 'leaders'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leaders' → logprob: -0.20145085453987122
    2. ' leaders' → logprob: -1.7014508247375488
    3. 'le' → logprob: -10.451451301574707
    4. 'leader' → logprob: -12.201451301574707
    5. ' winners' → logprob: -13.326451301574707
    6. ' leads' → logprob: -14.076451301574707
    7. ' ' → logprob: -15.076451301574707
    8. '   ' → logprob: -15.326451301574707
    9. 'lead' → logprob: -15.576451301574707
    10. ' ' → logprob: -16.20145034790039

Token 262: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0067201098427176476
    2. '0' → logprob: -5.006720066070557
    3. '```' → logprob: -13.506720542907715
    4. ' [' → logprob: -13.631720542907715
    5. '][' → logprob: -14.256720542907715
    6. '(' → logprob: -14.881720542907715
    7. ' ' → logprob: -15.381720542907715
    8. 's' → logprob: -15.631720542907715
    9. '-' → logprob: -15.631720542907715
    10. '   ' → logprob: -15.881720542907715

Token 263: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4378848391061183e-05
    2. '[' → logprob: -11.875014305114746
    3. ' ' → logprob: -12.125014305114746
    4. '   ' → logprob: -14.250014305114746
    5. '```' → logprob: -15.125014305114746
    6. '
' → logprob: -15.187514305114746
    7. '۰' → logprob: -16.500015258789062
    8. '1' → logprob: -16.812515258789062
    9. '`' → logprob: -16.937515258789062
    10. ']' → logprob: -17.250015258789062

Token 264: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 265: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2537941336631775
    2. '       ' → logprob: -1.8787941932678223
    3. 'print' → logprob: -3.1287941932678223
    4. '           ' → logprob: -4.128794193267822
    5. 'else' → logprob: -4.503794193267822
    6. ' else' → logprob: -8.753793716430664
    7. ' print' → logprob: -9.128793716430664
    8. '```' → logprob: -9.628793716430664
    9. '    
' → logprob: -9.753793716430664
    10. 'elif' → logprob: -11.128793716430664

Token 266: ' winner' (ID: 19499)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' (adapté à ' winner') → logprob: -0.0037833312526345253
    2. '       ' → logprob: -6.503783226013184
    3. '           ' → logprob: -6.628783226013184
    4. 'print' → logprob: -7.378783226013184
    5. ' winner' → logprob: -8.378783226013184
    6. '   ' → logprob: -9.253783226013184
    7. 'w' → logprob: -12.753783226013184
    8. '               ' → logprob: -13.753783226013184
    9. 'if' → logprob: -14.003783226013184
    10. '  ' → logprob: -15.503783226013184

Token 267: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.004403651691973209
    2. ',' → logprob: -6.129403591156006
    3. 'at' → logprob: -7.379403591156006
    4. 'At' → logprob: -7.754403591156006
    5. '=' → logprob: -8.754404067993164
    6. ')' → logprob: -8.754404067993164
    7. ',_' → logprob: -8.879404067993164
    8. '
' → logprob: -9.129404067993164
    9. '```' → logprob: -9.504404067993164
    10. ' =' → logprob: -10.004404067993164

Token 268: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014164329506456852
    2. ' =' → logprob: -4.264164447784424
    3. ',' → logprob: -15.639163970947266
    4. '=n' → logprob: -15.639163970947266
    5. '=i' → logprob: -16.264163970947266
    6. '=
' → logprob: -16.764163970947266
    7. '+=' → logprob: -16.889163970947266
    8. '==' → logprob: -16.889163970947266
    9. ' ' → logprob: -17.514163970947266
    10. ')' → logprob: -17.764163970947266

Token 269: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5263276100158691
    2. 'total' → logprob: -0.9013276100158691
    3. ' total' → logprob: -6.526327610015869
    4. ' n' → logprob: -6.901327610015869
    5. 'len' → logprob: -7.276327610015869
    6. '   ' → logprob: -10.901327133178711
    7. ' ' → logprob: -12.276327133178711
    8. 't' → logprob: -12.526327133178711
    9. '  ' → logprob: -13.276327133178711
    10. ' len' → logprob: -13.401327133178711

Token 270: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2854368984699249
    2. '
' → logprob: -1.7854368686676025
    3. 'print' → logprob: -2.7854368686676025
    4. '    
' → logprob: -4.285437107086182
    5. ')' → logprob: -7.035437107086182
    6. '<|end|>' → logprob: -7.035437107086182
    7. '       ' → logprob: -7.285437107086182
    8. ' print' → logprob: -7.410437107086182
    9. '\n' → logprob: -7.660437107086182
    10. '```' → logprob: -8.160436630249023

Token 271: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07899113744497299
    2. 'print' → logprob: -2.578991174697876
    3. 'else' → logprob: -10.328990936279297
    4. '    
' → logprob: -10.703990936279297
    5. '       ' → logprob: -11.078990936279297
    6. '```' → logprob: -11.078990936279297
    7. ' print' → logprob: -11.328990936279297
    8. '
' → logprob: -14.078990936279297
    9. 'elif' → logprob: -14.453990936279297
    10. 'for' → logprob: -14.953990936279297

Token 272: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.8141920566558838
    2. 'print' → logprob: -1.0641920566558838
    3. '   ' → logprob: -1.5641920566558838
    4. ' else' → logprob: -6.064191818237305
    5. 'elif' → logprob: -8.689191818237305
    6. ' print' → logprob: -8.814191818237305
    7. '```' → logprob: -10.314191818237305
    8. '       ' → logprob: -10.814191818237305
    9. 'if' → logprob: -10.939191818237305
    10. '    
' → logprob: -11.564191818237305

Token 273: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08084609359502792
    2. ':
' → logprob: -2.705846071243286
    3. '           ' → logprob: -4.580846309661865
    4. '       ' → logprob: -7.705846309661865
    5. '   ' → logprob: -9.330845832824707
    6. ' :' → logprob: -10.580845832824707
    7. '          ' → logprob: -11.455845832824707
    8. '        ' → logprob: -12.705845832824707
    9. '         ' → logprob: -12.830845832824707
    10. ':
' → logprob: -12.830845832824707

Token 274: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.377946674823761
    2. '       ' → logprob: -1.5029466152191162
    3. ' print' → logprob: -2.627946615219116
    4. 'print' → logprob: -4.252946853637695
    5. '   ' → logprob: -5.502946853637695
    6. ' winner' → logprob: -7.252946853637695
    7. ' continue' → logprob: -8.002946853637695
    8. '               ' → logprob: -8.502946853637695
    9. '```' → logprob: -9.377946853637695
    10. ' ' → logprob: -9.752946853637695

Token 275: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.11234574019908905
    2. ' print' → logprob: -2.9873456954956055
    3. 'winner' → logprob: -3.3623456954956055
    4. ' winner' → logprob: -4.7373456954956055
    5. '   ' → logprob: -4.9873456954956055
    6. '           ' → logprob: -5.7373456954956055
    7. '       ' → logprob: -6.4873456954956055
    8. 'continue' → logprob: -7.8623456954956055
    9. ' continue' → logprob: -9.112345695495605
    10. ' ' → logprob: -9.237345695495605

Token 276: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.09060584008693695
    2. '('' → logprob: -2.5906057357788086
    3. '(' → logprob: -4.465605735778809
    4. '("?' → logprob: -10.090605735778809
    5. '("("' → logprob: -10.590605735778809
    6. '   ' → logprob: -11.090605735778809
    7. '('?' → logprob: -11.215605735778809
    8. '()' → logprob: -11.465605735778809
    9. '(-' → logprob: -11.590605735778809
    10. ' ("' → logprob: -11.590605735778809

Token 277: 'T' (ID: 51)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.7168439626693726
    2. 'tie' → logprob: -1.0918439626693726
    3. 'T' → logprob: -3.091844081878662
    4. 't' → logprob: -3.216844081878662
    5. '"' → logprob: -3.216844081878662
    6. 'EMP' → logprob: -5.091844081878662
    7. 'Tie' → logprob: -5.466844081878662
    8. '"T' → logprob: -5.591844081878662
    9. 'now' → logprob: -5.716844081878662
    10. 'No' → logprob: -5.716844081878662

Token 278: 'IE' (ID: 7654)
  Prédit: 'ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.09850238263607025
    2. 'IE' → logprob: -2.8485023975372314
    3. 'i' → logprob: -3.9735023975372314
    4. 'ied' → logprob: -4.598502159118652
    5. 'ies' → logprob: -6.848502159118652
    6. 'e' → logprob: -7.098502159118652
    7. 'o' → logprob: -7.348502159118652
    8. 'I' → logprob: -7.473502159118652
    9. 'a' → logprob: -7.598502159118652
    10. 'ime' → logprob: -8.098502159118652

Token 279: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00011677479778882116
    2. '")
' → logprob: -9.125116348266602
    3. ')")' → logprob: -12.250116348266602
    4. ')' → logprob: -13.125116348266602
    5. '")
' → logprob: -14.875116348266602
    6. ' ")' → logprob: -15.500116348266602
    7. '\")' → logprob: -15.625116348266602
    8. '"' → logprob: -16.2501163482666
    9. '}")' → logprob: -16.5001163482666
    10. '')' → logprob: -16.7501163482666

Token 280: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5317569971084595
    2. '       ' → logprob: -1.0317569971084595
    3. '           ' → logprob: -2.90675687789917
    4. 'else' → logprob: -7.28175687789917
    5. '
' → logprob: -8.031757354736328
    6. '    
' → logprob: -8.406757354736328
    7. ' else' → logprob: -9.656757354736328
    8. '```' → logprob: -10.031757354736328
    9. '<|end|>' → logprob: -10.656757354736328
    10. 'continue' → logprob: -12.031757354736328

Token 281: ' continue' (ID: 4901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4645329415798187
    2. 'continue' (adapté à ' continue') → logprob: -1.4645329713821411
    3. ' continue' → logprob: -1.9645329713821411
    4. '       ' → logprob: -9.089532852172852
    5. '	continue' → logprob: -9.964532852172852
    6. ' ' → logprob: -13.589532852172852
    7. '```' → logprob: -13.964532852172852
    8. 'contin' → logprob: -14.089532852172852
    9. '_continue' → logprob: -15.089532852172852
    10. '   ' → logprob: -15.214532852172852

Token 282: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01270458847284317
    2. 'print' → logprob: -4.387704372406006
    3. '    
' → logprob: -9.387704849243164
    4. '       ' → logprob: -10.262704849243164
    5. '
' → logprob: -10.512704849243164
    6. '```' → logprob: -10.762704849243164
    7. ' print' → logprob: -11.262704849243164
    8. '<|end|>' → logprob: -11.887704849243164
    9. '        
' → logprob: -13.137704849243164
    10. '  
' → logprob: -13.137704849243164

Token 283: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014236493967473507
    2. 'print' → logprob: -4.2642364501953125
    3. '```' → logprob: -10.014236450195312
    4. '       ' → logprob: -11.639236450195312
    5. ' print' → logprob: -11.764236450195312
    6. '<|end|>' → logprob: -11.889236450195312
    7. '    
' → logprob: -12.639236450195312
    8. 'else' → logprob: -14.889236450195312
    9. '           ' → logprob: -15.014236450195312
    10. ')' → logprob: -15.014236450195312

Token 284: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6933264136314392
    2. 'print' (adapté à ' print') → logprob: -0.6933264136314392
    3. ' print' → logprob: -8.693325996398926
    4. '       ' → logprob: -12.068325996398926
    5. '	print' → logprob: -13.318325996398926
    6. '```' → logprob: -13.443325996398926
    7. '    
' → logprob: -13.568325996398926
    8. '           ' → logprob: -15.318325996398926
    9. '  ' → logprob: -15.443325996398926
    10. '<|end|>' → logprob: -15.818325996398926

Token 285: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.32366764545440674
    2. '(w' → logprob: -1.3236676454544067
    3. '(' → logprob: -4.573667526245117
    4. '()' → logprob: -11.073667526245117
    5. '("' → logprob: -12.198667526245117
    6. '((' → logprob: -12.573667526245117
    7. '('' → logprob: -12.823667526245117
    8. '("{}' → logprob: -12.948667526245117
    9. '(win' → logprob: -14.448667526245117
    10. 'f' → logprob: -14.448667526245117

Token 286: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.07755975425243378
    2. '("{' → logprob: -3.45255970954895
    3. '"' → logprob: -3.95255970954895
    4. '("' → logprob: -5.077559947967529
    5. '{' → logprob: -5.452559947967529
    6. '"The' → logprob: -5.452559947967529
    7. '"W' → logprob: -5.577559947967529
    8. ''{' → logprob: -6.327559947967529
    9. '({' → logprob: -6.577559947967529
    10. '('{' → logprob: -7.452559947967529

Token 287: 'winner' (ID: 99794)
  Prédit: 'winner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' → logprob: -9.13388703338569e-06
    2. 'w' → logprob: -11.875009536743164
    3. ' winner' → logprob: -13.625009536743164
    4. '   ' → logprob: -15.250009536743164
    5. 'win' → logprob: -16.375009536743164
    6. 'candidate' → logprob: -16.500009536743164
    7. 'leader' → logprob: -16.625009536743164
    8. 'winning' → logprob: -17.000009536743164
    9. '}' → logprob: -17.125009536743164
    10. 'welcome' → logprob: -17.375009536743164

Token 288: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -4.11996734328568e-05
    2. '_at' → logprob: -10.250041007995605
    3. ' }' → logprob: -13.125041007995605
    4. '}{' → logprob: -13.875041007995605
    5. 'At' → logprob: -14.000041007995605
    6. 'at' → logprob: -14.250041007995605
    7. '}@' → logprob: -15.000041007995605
    8. '},' → logprob: -15.250041007995605
    9. '[' → logprob: -15.250041007995605
    10. '},{' → logprob: -15.750041007995605

Token 289: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.0006579888286069036
    2. ' at' → logprob: -7.75065803527832
    3. ' after' → logprob: -9.62565803527832
    4. '{' → logprob: -9.75065803527832
    5. ' ' → logprob: -10.50065803527832
    6. '   ' → logprob: -10.75065803527832
    7. ' won' → logprob: -11.37565803527832
    8. ' winner' → logprob: -11.75065803527832
    9. ' was' → logprob: -12.12565803527832
    10. ' ,' → logprob: -12.50065803527832

Token 290: 'winner' (ID: 99794)
  Prédit: 'winner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' → logprob: -1.3856492842023727e-06
    2. 'w' → logprob: -14.000000953674316
    3. ' winner' → logprob: -15.500000953674316
    4. 'writer' → logprob: -16.750001907348633
    5. '   ' → logprob: -17.000001907348633
    6. '}' → logprob: -17.250001907348633
    7. ' ' → logprob: -17.250001907348633
    8. '{' → logprob: -17.875001907348633
    9. 'win' → logprob: -18.500001907348633
    10. '  ' → logprob: -18.625001907348633

Token 291: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -3.128163257315464e-07
    2. 'at' → logprob: -15.75
    3. '}' → logprob: -16.0
    4. '_a' → logprob: -17.25
    5. '}_' → logprob: -17.375
    6. '_' → logprob: -18.125
    7. ')' → logprob: -18.125
    8. ' _' → logprob: -19.0
    9. '   ' → logprob: -19.375
    10. ')_' → logprob: -19.5

Token 292: '}")' (ID: 122365)
  Prédit: ')")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')")' → logprob: -0.013401737436652184
    2. '}")' → logprob: -5.013401508331299
    3. '")' → logprob: -5.263401508331299
    4. ')' → logprob: -6.513401508331299
    5. ')")
' → logprob: -13.388401985168457
    6. ')}' → logprob: -14.638401985168457
    7. ' )' → logprob: -15.138401985168457
    8. ')"' → logprob: -15.138401985168457
    9. '}' → logprob: -15.513401985168457
    10. ')").' → logprob: -16.01340103149414


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 290
Tokens correctement prédits (1ère position, stricte): 127
Tokens correctement prédits (1ère position, avec adaptation): 138
Tokens correctement prédits (top 10): 256
Précision stricte (1ère position): 43.79%
Précision adaptée (1ère position): 47.59%
Précision (top 10): 88.28%
================================================================================
