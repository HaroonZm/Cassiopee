================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class NumberSortingSolver:
    def __init__(self, a: int, b: int, p: int):
        self.a = a
        self.b = b
        self.p = p
        self.numbers = list(range(a, b + 1))
        self.size = len(self.numbers)
        self.adj_list = {}
        self.components = []
    
    class LexicoComparator:
        @staticmethod
        def compare_num_str_lex(n1: int, n2: int) -> bool:
            # Return True if n1 < n2 lexicographically by string representation, else False
            return str(n1) < str(n2)
        
        @staticmethod
        def compare_numeric(n1: int, n2: int) -> bool:
            # Return True if n1 < n2 numerically, else False
            return n1 < n2
        
        @classmethod
        def is_conflict(cls, n1: int, n2: int) -> bool:
            # There is conflict if relative orderings numeric and lexicographic differ
            numeric_less = cls.compare_numeric(n1, n2)
            lex_less = cls.compare_num_str_lex(n1, n2)
            return numeric_less != lex_less

    class GraphBuilder:
        def __init__(self, numbers, comparator):
            self.numbers = numbers
            self.comp = comparator
            self.graph = {num: set() for num in numbers}
        
        def build_graph(self):
            # Connect pairs that break sorted order equivalence:
            # If numeric < but lexicographically > (or converse), add edge because can't be in same valid subset
            n = len(self.numbers)
            nums = self.numbers
            for i in range(n):
                for j in range(i + 1, n):
                    ni, nj = nums[i], nums[j]
                    if self.comp.is_conflict(ni, nj):
                        self.graph[ni].add(nj)
                        self.graph[nj].add(ni)
            return self.graph
    
    class ComponentFinder:
        def __init__(self, graph):
            self.graph = graph
            self.visited = set()
            self.components = []
        
        def dfs(self, node):
            stack = [node]
            comp = []
            while stack:
                cur = stack.pop()
                if cur not in self.visited:
                    self.visited.add(cur)
                    comp.append(cur)
                    neighbors = self.graph[cur]
                    for nxt in neighbors:
                        if nxt not in self.visited:
                            stack.append(nxt)
            return comp
        
        def find_components(self):
            for node in self.graph:
                if node not in self.visited:
                    comp = self.dfs(node)
                    self.components.append(comp)
            return self.components
    
    class IndependentSetCounter:
        def __init__(self, graph, mod):
            self.graph = graph
            self.mod = mod
            self.memo = {}
        
        def bit_repr(self, nodes):
            # map node to index and return list of nodes by index
            self.nodes = nodes
            self.node_index = {node: idx for idx, node in enumerate(nodes)}
            # adjacency bitmasks
            self.adj_mask = [0] * len(nodes)
            for node in nodes:
                idx = self.node_index[node]
                for neighbor in self.graph[node]:
                    if neighbor in self.node_index:
                        nid = self.node_index[neighbor]
                        self.adj_mask[idx] |= (1 << nid)
        
        def count_independent_sets(self):
            # Use bitmask and DP over subsets approach:
            n = len(self.nodes)
            # DP[s] = number of independent sets represented by subset s
            # bottom up could be exponential (2^n) - refined method: use backtracking + memo
            self.memo = {}
            def dfs(used_mask, pos):
                if pos == n:
                    return 1
                key = (used_mask, pos)
                if key in self.memo:
                    return self.memo[key]
                # Skip current node
                res = dfs(used_mask, pos + 1)
                # Take current node: only if none neighbor taken before
                if (used_mask & self.adj_mask[pos]) == 0:
                    res += dfs(used_mask | (1 << pos), pos + 1)
                res %= self.mod
                self.memo[key] = res
                return res
            return dfs(0, 0)
    
    def calculate(self) -> int:
        # Step 1: Build conflict graph
        builder = self.GraphBuilder(self.numbers, self.LexicoComparator)
        self.adj_list = builder.build_graph()
        # Step 2: Find connected components
        finder = self.ComponentFinder(self.adj_list)
        components = finder.find_components()
        # Step 3: For each component count independent sets
        # number of valid subsets = product of count_of_independent_sets over components
        # minus 1 (the empty subset)
        mod = self.p
        result = 1
        for comp in components:
            counter = self.IndependentSetCounter(self.adj_list, mod)
            counter.bit_repr(comp)
            sets_count = counter.count_independent_sets()
            result = (result * sets_count) % mod
        # subtract empty subset globally
        result = (result - 1) % mod
        return result

def main():
    import sys
    for line in sys.stdin:
        if line.strip() == '':
            continue
        A, B, P = map(int, line.strip().split())
        if A == 0 and B == 0 and P == 0:
            break
        solver = NumberSortingSolver(A, B, P)
        print(solver.calculate())

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Number' (ID: 9184)
  → Token d'amorce (pas de prédiction)

Token 2: 'Sorting' (ID: 89508)
  → Token d'amorce (pas de prédiction)

Token 3: 'Solver' (ID: 70484)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.15843968093395233
    2. '(' → logprob: -2.2834396362304688
    3. ':' → logprob: -3.2834396362304688
    4. '.' → logprob: -5.408439636230469
    5. ' {' → logprob: -6.033439636230469
    6. '[' → logprob: -9.658439636230469
    7. '```' → logprob: -9.658439636230469
    8. ' ' → logprob: -10.658439636230469
    9. 's' → logprob: -11.783439636230469
    10. '({' → logprob: -11.783439636230469

Token 4: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6504831910133362
    2. '(' → logprob: -1.2754831314086914
    3. '{' → logprob: -1.6504831314086914
    4. '.' → logprob: -5.025483131408691
    5. ' {' → logprob: -8.275483131408691
    6. '(:' → logprob: -10.275483131408691
    7. '```' → logprob: -10.900483131408691
    8. '[' → logprob: -11.025483131408691
    9. ' :' → logprob: -11.025483131408691
    10. '({' → logprob: -12.150483131408691

Token 5: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2780407667160034
    2. ':' → logprob: -1.5280407667160034
    3. '```' → logprob: -4.403040885925293
    4. '(
' → logprob: -5.028040885925293
    5. '   ' → logprob: -5.778040885925293
    6. ':
' → logprob: -6.528040885925293
    7. '()' → logprob: -7.278040885925293
    8. '\' → logprob: -7.903040885925293
    9. '.' → logprob: -8.278040885925293
    10. '():' → logprob: -8.403040885925293

Token 6: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9458837509155273
    2. '   ' → logprob: -1.0708837509155273
    3. '    ' → logprob: -1.8208837509155273
    4. ' def' → logprob: -3.0708837509155273
    5. '```' → logprob: -3.8208837509155273
    6. '\' → logprob: -5.070883750915527
    7. ' ```' → logprob: -5.570883750915527
    8. 'def' (adapté à ' def') → logprob: -5.570883750915527
    9. ' 
' → logprob: -5.820883750915527
    10. '`' → logprob: -5.945883750915527

Token 7: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.873362123966217
    2. ' process' → logprob: -1.7483620643615723
    3. ' calculate' → logprob: -2.2483620643615723
    4. ' def' → logprob: -2.6233620643615723
    5. ' solve' → logprob: -3.2483620643615723
    6. ' __' → logprob: -3.2483620643615723
    7. '__' → logprob: -3.3733620643615723
    8. ' ' → logprob: -3.7483620643615723
    9. ' find' → logprob: -3.8733620643615723
    10. '_' → logprob: -3.9983620643615723

Token 8: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.2127087504486553e-05
    2. ' init' → logprob: -10.750021934509277
    3. '_init' → logprob: -14.875021934509277
    4. 'ini' → logprob: -15.750021934509277
    5. '	init' → logprob: -16.625022888183594
    6. '   ' → logprob: -18.625022888183594
    7. '  ' → logprob: -19.250022888183594
    8. 'in' → logprob: -19.500022888183594
    9. ' ' → logprob: -19.625022888183594
    10. 'inite' → logprob: -19.625022888183594

Token 9: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.1476350575685501
    2. '(' → logprob: -2.272634983062744
    3. '__' → logprob: -4.147634983062744
    4. '(self' → logprob: -4.272634983062744
    5. ' (' → logprob: -6.272634983062744
    6. '__(
' → logprob: -6.647634983062744
    7. '<|end|>' → logprob: -7.522634983062744
    8. '__((' → logprob: -8.147635459899902
    9. 'self' → logprob: -9.397635459899902
    10. '__(*' → logprob: -9.772635459899902

Token 10: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010506733087822795
    2. ' self' → logprob: -6.8760504722595215
    3. ')' → logprob: -11.12605094909668
    4. '(self' → logprob: -13.87605094909668
    5. 'number' → logprob: -14.62605094909668
    6. ' )' → logprob: -15.00105094909668
    7. ' ' → logprob: -15.00105094909668
    8. 's' → logprob: -15.75105094909668
    9. '*self' → logprob: -16.00105094909668
    10. '_self' → logprob: -16.12605094909668

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03231663256883621
    2. ' ,' → logprob: -4.4073166847229
    3. 'self' → logprob: -4.4073166847229
    4. '):' → logprob: -5.5323166847229
    5. ')' → logprob: -6.2823166847229
    6. ',self' → logprob: -7.9073166847229
    7. ' self' → logprob: -8.532316207885742
    8. ' ' → logprob: -8.782316207885742
    9. ' )' → logprob: -8.782316207885742
    10. '(self' → logprob: -9.032316207885742

Token 12: ' a' (ID: 261)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3319808840751648
    2. 'self' → logprob: -1.5819809436798096
    3. ' numbers' → logprob: -2.5819809436798096
    4. 'numbers' → logprob: -7.0819807052612305
    5. ' number' → logprob: -8.20698070526123
    6. ' data' → logprob: -10.45698070526123
    7. 'number' → logprob: -10.58198070526123
    8. ' )' → logprob: -10.70698070526123
    9. ' nums' → logprob: -10.95698070526123
    10. ')' → logprob: -11.08198070526123

Token 13: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.024262234568595886
    2. ')' → logprob: -4.024262428283691
    3. ':' → logprob: -5.899262428283691
    4. ',' → logprob: -7.024262428283691
    5. 'a' → logprob: -7.024262428283691
    6. ' ):' → logprob: -7.399262428283691
    7. 's' → logprob: -8.274262428283691
    8. '):
' → logprob: -8.649262428283691
    9. '[]):' → logprob: -8.774262428283691
    10. '[' → logprob: -8.774262428283691

Token 14: ' int' (ID: 677)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.36455538868904114
    2. ' list' → logprob: -1.4895553588867188
    3. 'List' → logprob: -2.9895553588867188
    4. 'int' → logprob: -3.6145553588867188
    5. ' List' → logprob: -6.114555358886719
    6. ' int' → logprob: -7.739555358886719
    7. '   ' → logprob: -9.614555358886719
    8. '_list' → logprob: -10.864555358886719
    9. ')' → logprob: -11.239555358886719
    10. ' ' → logprob: -11.864555358886719

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2613016963005066
    2. ')' → logprob: -1.7613017559051514
    3. '):' → logprob: -3.0113017559051514
    4. ' ,' → logprob: -5.636301517486572
    5. ' )' → logprob: -6.761301517486572
    6. '[' → logprob: -7.011301517486572
    7. 'a' → logprob: -7.136301517486572
    8. ' ):' → logprob: -7.886301517486572
    9. ':' → logprob: -8.13630199432373
    10. ',a' → logprob: -8.26130199432373

Token 16: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.1271313726902008
    2. 'b' → logprob: -2.127131462097168
    3. ' ' → logprob: -9.752131462097168
    4. 'a' → logprob: -10.252131462097168
    5. ' n' → logprob: -10.627131462097168
    6. 'n' → logprob: -11.252131462097168
    7. ' a' → logprob: -11.377131462097168
    8. '    ' → logprob: -12.002131462097168
    9. ',' → logprob: -12.002131462097168
    10. ' numbers' → logprob: -12.252131462097168

Token 17: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15463349223136902
    2. ')' → logprob: -2.7796335220336914
    3. '):' → logprob: -3.0296335220336914
    4. ',' → logprob: -3.6546335220336914
    5. '=' → logprob: -5.029633522033691
    6. ':int' → logprob: -9.154633522033691
    7. ' :' → logprob: -9.904633522033691
    8. ' ' → logprob: -10.404633522033691
    9. ' ,' → logprob: -10.654633522033691
    10. '   ' → logprob: -10.779633522033691

Token 18: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.08906640857458115
    2. ' int' → logprob: -2.464066505432129
    3. ':int' → logprob: -10.089066505432129
    4. '=int' → logprob: -10.964066505432129
    5. ')' → logprob: -11.214066505432129
    6. '[int' → logprob: -11.464066505432129
    7. '<int' → logprob: -11.964066505432129
    8. '(int' → logprob: -12.089066505432129
    9. ' ' → logprob: -12.214066505432129
    10. ',int' → logprob: -12.464066505432129

Token 19: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.45647871494293213
    2. ')' → logprob: -1.5814787149429321
    3. ',' → logprob: -1.8314787149429321
    4. '   ' → logprob: -8.4564790725708
    5. '):
' → logprob: -8.7064790725708
    6. ':' → logprob: -9.2064790725708
    7. '```' → logprob: -10.2064790725708
    8. '),' → logprob: -10.7064790725708
    9. '       ' → logprob: -10.9564790725708
    10. '<|end|>' → logprob: -11.4564790725708

Token 20: ' p' (ID: 275)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.019331956282258034
    2. 'c' → logprob: -4.019331932067871
    3. ' ' → logprob: -7.894331932067871
    4. ' a' → logprob: -8.394331932067871
    5. ')' → logprob: -8.769331932067871
    6. 'a' → logprob: -9.144331932067871
    7. '   ' → logprob: -10.019331932067871
    8. ' number' → logprob: -10.019331932067871
    9. ' n' → logprob: -10.269331932067871
    10. 'n' → logprob: -11.519331932067871

Token 21: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22702564299106598
    2. 'r' → logprob: -2.1020257472991943
    3. '):' → logprob: -3.1020257472991943
    4. '=' → logprob: -4.977025508880615
    5. 'er' → logprob: -5.102025508880615
    6. 'ar' → logprob: -5.477025508880615
    7. ')' → logprob: -5.852025508880615
    8. ',' → logprob: -6.102025508880615
    9. 'aram' → logprob: -6.227025508880615
    10. 'e' → logprob: -6.602025508880615

Token 22: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.015867186710238457
    2. ' int' → logprob: -5.015867233276367
    3. 'List' → logprob: -5.765867233276367
    4. ')' → logprob: -6.265867233276367
    5. 'list' → logprob: -6.265867233276367
    6. 'float' → logprob: -7.015867233276367
    7. '[int' → logprob: -7.390867233276367
    8. 'str' → logprob: -8.890867233276367
    9. ' List' → logprob: -9.390867233276367
    10. ' list' → logprob: -9.515867233276367

Token 23: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04774363711476326
    2. ')' → logprob: -3.172743558883667
    3. ',' → logprob: -5.422743797302246
    4. ':' → logprob: -8.547743797302246
    5. '   ' → logprob: -9.797743797302246
    6. '):
' → logprob: -10.547743797302246
    7. ' ):' → logprob: -11.797743797302246
    8. ''):' → logprob: -12.047743797302246
    9. '```' → logprob: -12.047743797302246
    10. ' ' → logprob: -12.422743797302246

Token 24: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04787386953830719
    2. ':' → logprob: -3.1728739738464355
    3. '<|end|>' → logprob: -5.9228739738464355
    4. '   ' → logprob: -7.1728739738464355
    5. 'self' → logprob: -8.047873497009277
    6. '\' → logprob: -8.922873497009277
    7. '	' → logprob: -8.922873497009277
    8. '```' → logprob: -9.047873497009277
    9. '
' → logprob: -9.547873497009277
    10. '<|end|>' → logprob: -9.547873497009277

Token 25: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43868231773376465
    2. 'self' (adapté à ' self') → logprob: -1.1886823177337646
    3. ' self' → logprob: -3.6886823177337646
    4. '<|end|>' → logprob: -4.438682556152344
    5. ' ' → logprob: -5.938682556152344
    6. '\' → logprob: -5.938682556152344
    7. '   ' → logprob: -6.063682556152344
    8. '```' → logprob: -6.438682556152344
    9. ' ' → logprob: -7.188682556152344
    10. '        ' → logprob: -7.938682556152344

Token 26: '.a' (ID: 8772)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4302806258201599
    2. '.a' → logprob: -1.0552806854248047
    3. ' .' → logprob: -6.555280685424805
    4. '._' → logprob: -10.180280685424805
    5. 'a' → logprob: -10.555280685424805
    6. ' ' → logprob: -10.680280685424805
    7. '.p' → logprob: -10.930280685424805
    8. '.b' → logprob: -11.555280685424805
    9. '.n' → logprob: -11.680280685424805
    10. '.data' → logprob: -12.555280685424805

Token 27: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3760685920715332
    2. ',' → logprob: -1.3760685920715332
    3. '_' → logprob: -3.876068592071533
    4. '=' → logprob: -4.251068592071533
    5. ' =' → logprob: -5.001068592071533
    6. ' ' → logprob: -5.626068592071533
    7. ')' → logprob: -5.626068592071533
    8. '<|end|>' → logprob: -6.001068592071533
    9. ' ,' → logprob: -6.251068592071533
    10. 'a' → logprob: -6.251068592071533

Token 28: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4740805923938751
    2. ' a' → logprob: -0.9740805625915527
    3. ' ' → logprob: -12.974081039428711
    4. '	a' → logprob: -14.474081039428711
    5. '_a' → logprob: -15.349081039428711
    6. 'b' → logprob: -15.599081039428711
    7. ')a' → logprob: -16.47408103942871
    8. ' b' → logprob: -16.84908103942871
    9. '>a' → logprob: -17.34908103942871
    10. ''a' → logprob: -17.47408103942871

Token 29: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: ' self' (ID: 1051)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8098033666610718
    2. '       ' → logprob: -1.6848033666610718
    3. 'self' (adapté à ' self') → logprob: -2.0598034858703613
    4. 'b' → logprob: -2.1848034858703613
    5. '        ' → logprob: -2.6848034858703613
    6. ' self' → logprob: -3.5598034858703613
    7. ' b' → logprob: -4.809803485870361
    8. ' 
' → logprob: -5.059803485870361
    9. '    ' → logprob: -5.809803485870361
    10. '```' → logprob: -5.809803485870361

Token 32: '.b' (ID: 1292)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.003755067242309451
    2. '.b' → logprob: -5.62875509262085
    3. ' .' → logprob: -9.628754615783691
    4. '.p' → logprob: -10.253754615783691
    5. 'b' → logprob: -10.503754615783691
    6. '.a' → logprob: -11.128754615783691
    7. ' ' → logprob: -13.628754615783691
    8. '<|end|>' → logprob: -13.628754615783691
    9. '.period' → logprob: -14.128754615783691
    10. 'a' → logprob: -14.128754615783691

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12759220600128174
    2. '=' → logprob: -2.127592086791992
    3. '.' → logprob: -8.127592086791992
    4. '<|end|>' → logprob: -9.127592086791992
    5. ' ==' → logprob: -9.377592086791992
    6. ')' → logprob: -9.502592086791992
    7. ',' → logprob: -10.752592086791992
    8. ' ' → logprob: -11.002592086791992
    9. '_' → logprob: -11.752592086791992
    10. '   ' → logprob: -11.877592086791992

Token 34: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.04874496906995773
    2. 'b' → logprob: -3.0487449169158936
    3. ' ' → logprob: -8.798745155334473
    4. ' ' → logprob: -12.798745155334473
    5. ' p' → logprob: -13.673745155334473
    6. '	b' → logprob: -14.423745155334473
    7. ' б' → logprob: -14.548745155334473
    8. 'p' → logprob: -14.673745155334473
    9. ''' → logprob: -15.673745155334473
    10. '<|end|>' → logprob: -15.923745155334473

Token 35: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23476283252239227
    2. '<|end|>' → logprob: -2.1097629070281982
    3. ' 
' → logprob: -3.2347629070281982
    4. '        ' → logprob: -3.9847629070281982
    5. ' ' → logprob: -4.734762668609619
    6. '        
' → logprob: -4.984762668609619
    7. '
' → logprob: -5.109762668609619
    8. '```' → logprob: -6.734762668609619
    9. '\' → logprob: -6.859762668609619
    10. '  
' → logprob: -7.109762668609619

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10688331723213196
    2. ' ' → logprob: -3.4818832874298096
    3. '<|end|>' → logprob: -3.4818832874298096
    4. ' 
' → logprob: -3.8568832874298096
    5. '        ' → logprob: -4.856883525848389
    6. '```' → logprob: -6.106883525848389
    7. '
' → logprob: -6.356883525848389
    8. '        
' → logprob: -6.481883525848389
    9. '   ' → logprob: -7.106883525848389
    10. '  
' → logprob: -7.606883525848389

Token 37: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4213038682937622
    2. 'self' (adapté à ' self') → logprob: -2.0463037490844727
    3. ' ' → logprob: -2.1713037490844727
    4. ' self' → logprob: -3.5463037490844727
    5. 'p' → logprob: -4.171303749084473
    6. ' 
' → logprob: -4.296303749084473
    7. 's' → logprob: -5.421303749084473
    8. '```' → logprob: -5.421303749084473
    9. ' ' → logprob: -5.421303749084473
    10. ',' → logprob: -5.671303749084473

Token 38: '.p' (ID: 1201)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3134107291698456
    2. '.p' → logprob: -1.313410758972168
    3. ' .' → logprob: -10.063410758972168
    4. 'p' → logprob: -10.688410758972168
    5. '.a' → logprob: -10.688410758972168
    6. '.pkl' → logprob: -11.188410758972168
    7. '.py' → logprob: -12.563410758972168
    8. '`.' → logprob: -12.688410758972168
    9. '```' → logprob: -12.688410758972168
    10. '.b' → logprob: -12.813410758972168

Token 39: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931861639022827
    2. ' =' → logprob: -0.6931861639022827
    3. ' ' → logprob: -11.193185806274414
    4. ' ==' → logprob: -11.568185806274414
    5. '_' → logprob: -12.193185806274414
    6. ')' → logprob: -12.568185806274414
    7. '.' → logprob: -12.693185806274414
    8. '<|end|>' → logprob: -13.318185806274414
    9. '==' → logprob: -14.943185806274414
    10. '  ' → logprob: -14.943185806274414

Token 40: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.048588961362838745
    2. ' p' → logprob: -3.048588991165161
    3. ' ' → logprob: -13.798588752746582
    4. 'b' → logprob: -15.423588752746582
    5. '0' → logprob: -16.0485897064209
    6. '	p' → logprob: -16.1735897064209
    7. '1' → logprob: -17.0485897064209
    8. '  ' → logprob: -17.4235897064209
    9. '_p' → logprob: -17.6735897064209
    10. '   ' → logprob: -17.6735897064209

Token 41: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35725653171539307
    2. '   ' → logprob: -1.232256531715393
    3. '\n' → logprob: -6.2322564125061035
    4. '    
' → logprob: -6.6072564125061035
    5. '<|end|>' → logprob: -6.8572564125061035
    6. '```' → logprob: -7.1072564125061035
    7. ' 
' → logprob: -7.6072564125061035
    8. '  
' → logprob: -7.8572564125061035
    9. ' def' → logprob: -7.9822564125061035
    10. 'n' → logprob: -7.9822564125061035

Token 42: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08841190487146378
    2. '
' → logprob: -2.838411808013916
    3. ':' → logprob: -4.588411808013916
    4. 'def' → logprob: -5.463411808013916
    5. ' def' → logprob: -5.713411808013916
    6. '<|end|>' → logprob: -6.338411808013916
    7. '```' → logprob: -6.713411808013916
    8. '    
' → logprob: -6.963411808013916
    9. ' ' → logprob: -6.963411808013916
    10. '\n' → logprob: -7.213411808013916

Token 43: ' self' (ID: 1051)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2583894729614258
    2. '
' → logprob: -1.6333894729614258
    3. 'def' → logprob: -4.008389472961426
    4. '\n' → logprob: -5.633389472961426
    5. ' def' → logprob: -5.883389472961426
    6. '```' → logprob: -5.883389472961426
    7. '       ' → logprob: -6.258389472961426
    8. '\' → logprob: -6.883389472961426
    9. ':' → logprob: -7.758389472961426
    10. '    
' → logprob: -7.883389472961426

Token 44: '.n' (ID: 1835)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.049864739179611206
    2. '.a' → logprob: -3.4248647689819336
    3. '.n' → logprob: -4.924864768981934
    4. '._' → logprob: -6.174864768981934
    5. '.s' → logprob: -6.549864768981934
    6. '.data' → logprob: -7.049864768981934
    7. '.arr' → logprob: -7.549864768981934
    8. '.values' → logprob: -7.924864768981934
    9. '.sorted' → logprob: -7.924864768981934
    10. ' .' → logprob: -8.049864768981934

Token 45: 'umbers' (ID: 14501)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3219168484210968
    2. ' =' → logprob: -1.3219168186187744
    3. '_' → logprob: -4.8219170570373535
    4. ' ' → logprob: -8.446916580200195
    5. '<|end|>' → logprob: -9.571916580200195
    6. 'um' → logprob: -10.071916580200195
    7. '=int' → logprob: -10.196916580200195
    8. ')' → logprob: -10.321916580200195
    9. '_=' → logprob: -10.571916580200195
    10. '   ' → logprob: -10.821916580200195

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026892662048339844
    2. '=' → logprob: -3.65189266204834
    3. '=[]' → logprob: -8.52689266204834
    4. '.' → logprob: -9.40189266204834
    5. '_' → logprob: -9.40189266204834
    6. '[:]' → logprob: -9.77689266204834
    7. '<|end|>' → logprob: -10.15189266204834
    8. '[' → logprob: -10.27689266204834
    9. ' ' → logprob: -11.02689266204834
    10. '[]' → logprob: -11.15189266204834

Token 47: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.07906867563724518
    2. '[]' → logprob: -2.579068660736084
    3. ' [' → logprob: -8.829069137573242
    4. '[' → logprob: -11.079069137573242
    5. ' ' → logprob: -11.954069137573242
    6. ' []
' → logprob: -12.954069137573242
    7. '[]}' → logprob: -12.954069137573242
    8. ' [];' → logprob: -13.579069137573242
    9. '[]>' → logprob: -13.954069137573242
    10. ' [])' → logprob: -13.954069137573242

Token 48: '(range' (ID: 50017)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0971267893910408
    2. '(range' → logprob: -2.5971267223358154
    3. '[' → logprob: -4.8471269607543945
    4. '()' → logprob: -5.3471269607543945
    5. '[int' → logprob: -5.4721269607543945
    6. '<|end|>' → logprob: -7.7221269607543945
    7. '[]' → logprob: -9.097126960754395
    8. '[:]' → logprob: -9.347126960754395
    9. '([]' → logprob: -9.472126960754395
    10. '(int' → logprob: -9.597126960754395

Token 49: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20158250629901886
    2. '(self' → logprob: -1.7015825510025024
    3. '(a' → logprob: -9.451582908630371
    4. '(
' → logprob: -9.826582908630371
    5. '(p' → logprob: -11.201582908630371
    6. '(s' → logprob: -12.326582908630371
    7. ')(' → logprob: -12.826582908630371
    8. ')' → logprob: -12.951582908630371
    9. '(n' → logprob: -12.951582908630371
    10. '(

' → logprob: -13.326582908630371

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031139038037508726
    2. ' ,' → logprob: -8.125311851501465
    3. ',b' → logprob: -11.500311851501465
    4. ')' → logprob: -13.250311851501465
    5. ',p' → logprob: -13.750311851501465
    6. ',a' → logprob: -14.625311851501465
    7. '+' → logprob: -15.500311851501465
    8. ',
' → logprob: -15.500311851501465
    9. ',int' → logprob: -15.500311851501465
    10. ' ' → logprob: -15.750311851501465

Token 51: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.31326404213905334
    2. 'b' → logprob: -1.313264012336731
    3. ' ' → logprob: -14.188263893127441
    4. '	b' → logprob: -14.313263893127441
    5. ')b' → logprob: -14.563263893127441
    6. ' ' → logprob: -15.688263893127441
    7. '_b' → logprob: -16.188264846801758
    8. '(b' → logprob: -16.563264846801758
    9. '>b' → logprob: -16.688264846801758
    10. '```' → logprob: -17.313264846801758

Token 52: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18904568254947662
    2. ' +' → logprob: -1.8140456676483154
    3. ',' → logprob: -4.6890459060668945
    4. '))' → logprob: -10.439045906066895
    5. ')' → logprob: -11.439045906066895
    6. ' ,' → logprob: -11.689045906066895
    7. ' ' → logprob: -11.939045906066895
    8. '1' → logprob: -13.189045906066895
    9. '   ' → logprob: -13.314045906066895
    10. ',+' → logprob: -13.439045906066895

Token 53: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3132648468017578
    2. ' ' → logprob: -1.3132648468017578
    3. ' ' → logprob: -13.688264846801758
    4. ' p' → logprob: -14.063264846801758
    5. ')' → logprob: -14.688264846801758
    6. '```' → logprob: -15.563264846801758
    7. 'p' → logprob: -16.438264846801758
    8. '0' → logprob: -16.938264846801758
    9. ' )' → logprob: -17.063264846801758
    10. '<|end|>' → logprob: -17.063264846801758

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005960680078715086
    2. ' ' → logprob: -5.130960464477539
    3. '))' → logprob: -10.380960464477539
    4. ' ))' → logprob: -15.130960464477539
    5. ')' → logprob: -15.505960464477539
    6. '```' → logprob: -15.630960464477539
    7. '   ' → logprob: -15.880960464477539
    8. '0' → logprob: -16.38096046447754
    9. '  ' → logprob: -16.88096046447754
    10. ')))' → logprob: -17.13096046447754

Token 55: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.014221210032701492
    2. ')' → logprob: -4.26422119140625
    3. ')))' → logprob: -9.88922119140625
    4. ' ))' → logprob: -12.38922119140625
    5. '),' → logprob: -13.63922119140625
    6. '))
' → logprob: -14.01422119140625
    7. ')
' → logprob: -15.88922119140625
    8. ' )' → logprob: -15.88922119140625
    9. '   ' → logprob: -16.38922119140625
    10. '+' → logprob: -16.38922119140625

Token 56: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.578182578086853
    2. '
' → logprob: -0.953182578086853
    3. '\' → logprob: -4.078182697296143
    4. '    
' → logprob: -4.453182697296143
    5. '\n' → logprob: -5.203182697296143
    6. ' def' → logprob: -5.453182697296143
    7. ' 
' → logprob: -5.578182697296143
    8. 'def' → logprob: -5.953182697296143
    9. '<|end|>' → logprob: -6.203182697296143
    10. '  
' → logprob: -6.328182697296143

Token 57: ' self' (ID: 1051)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11468628793954849
    2. '
' → logprob: -2.9896862506866455
    3. 'def' → logprob: -3.2396862506866455
    4. ' def' → logprob: -4.489686489105225
    5. '    
' → logprob: -6.239686489105225
    6. '       ' → logprob: -6.614686489105225
    7. ')' → logprob: -7.114686489105225
    8. '	def' → logprob: -7.114686489105225
    9. '<|end|>' → logprob: -7.989686489105225
    10. '```' → logprob: -8.114686012268066

Token 58: '.size' (ID: 4463)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.007907784543931484
    2. '.sort' → logprob: -5.507907867431641
    3. '.n' → logprob: -6.132907867431641
    4. '.p' → logprob: -6.882907867431641
    5. '.sorted' → logprob: -8.13290786743164
    6. ' .' → logprob: -9.50790786743164
    7. '.s' → logprob: -9.88290786743164
    8. '._' → logprob: -10.88290786743164
    9. '.e' → logprob: -11.50790786743164
    10. '.def' → logprob: -11.88290786743164

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03773525357246399
    2. ' ' → logprob: -3.9127352237701416
    3. '=' → logprob: -4.662735462188721
    4. '<|end|>' → logprob: -5.037735462188721
    5. '<|end|>' → logprob: -7.537735462188721
    6. ')' → logprob: -8.787734985351562
    7. '_' → logprob: -8.787734985351562
    8. 's' → logprob: -9.662734985351562
    9. ' ==' → logprob: -10.537734985351562
    10. '  ' → logprob: -10.787734985351562

Token 60: ' len' (ID: 4631)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.14289796352386475
    2. 'b' → logprob: -2.6428980827331543
    3. ' len' → logprob: -2.8928980827331543
    4. 'len' → logprob: -5.267898082733154
    5. ' self' → logprob: -7.017898082733154
    6. 'self' → logprob: -8.392897605895996
    7. ' ' → logprob: -9.017897605895996
    8. '    ' → logprob: -9.767897605895996
    9. '(len' → logprob: -9.892897605895996
    10. ' (' → logprob: -10.517897605895996

Token 61: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3133254945278168
    2. '(self' → logprob: -1.3133255243301392
    3. '(
' → logprob: -10.063325881958008
    4. '(s' → logprob: -11.313325881958008
    5. ' (' → logprob: -12.813325881958008
    6. '(

' → logprob: -12.813325881958008
    7. '(space' → logprob: -14.563325881958008
    8. 'self' → logprob: -14.688325881958008
    9. '(this' → logprob: -14.688325881958008
    10. '('' → logprob: -14.813325881958008

Token 62: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.014272922649979591
    2. '.' → logprob: -4.264272689819336
    3. '(numbers' → logprob: -10.264272689819336
    4. ')' → logprob: -10.389272689819336
    5. '(' → logprob: -10.764272689819336
    6. ' .' → logprob: -12.014272689819336
    7. '.number' → logprob: -12.139272689819336
    8. 'numbers' → logprob: -12.389272689819336
    9. '(n' → logprob: -12.639272689819336
    10. '_numbers' → logprob: -14.514272689819336

Token 63: 'umbers' (ID: 14501)
  Prédit: 'umbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umbers' → logprob: -0.0004329341172706336
    2. 'numbers' → logprob: -7.875432968139648
    3. '_numbers' → logprob: -10.000432968139648
    4. '(numbers' → logprob: -13.125432968139648
    5. 'u' → logprob: -13.500432968139648
    6. 'umber' → logprob: -13.500432968139648
    7. 'umers' → logprob: -13.875432968139648
    8. '```' → logprob: -14.125432968139648
    9. 'um' → logprob: -14.875432968139648
    10. '   ' → logprob: -15.500432968139648

Token 64: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3915141355246305e-05
    2. ')
' → logprob: -11.50002384185791
    3. '))' → logprob: -11.62502384185791
    4. ' )' → logprob: -12.62502384185791
    5. ')))' → logprob: -14.75002384185791
    6. '`)' → logprob: -15.50002384185791
    7. '<|end|>' → logprob: -16.125024795532227
    8. '       ' → logprob: -16.250024795532227
    9. '```' → logprob: -16.375024795532227
    10. '   ' → logprob: -16.500024795532227

Token 65: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10429851710796356
    2. '   ' → logprob: -2.4792985916137695
    3. '    
' → logprob: -5.6042985916137695
    4. '<|end|>' → logprob: -5.6042985916137695
    5. '\' → logprob: -5.9792985916137695
    6. ' 
' → logprob: -6.4792985916137695
    7. 'def' → logprob: -6.9792985916137695
    8. ' def' → logprob: -7.2292985916137695
    9. '\n' → logprob: -7.3542985916137695
    10. '  
' → logprob: -7.6042985916137695

Token 66: ' self' (ID: 1051)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7439495325088501
    2. '
' → logprob: -0.8689495325088501
    3. 'def' → logprob: -2.7439494132995605
    4. '    
' → logprob: -3.8689494132995605
    5. ' def' → logprob: -4.3689494132995605
    6. ' 
' → logprob: -6.3689494132995605
    7. '  
' → logprob: -6.8689494132995605
    8. '\n' → logprob: -6.9939494132995605
    9. '\' → logprob: -7.1189494132995605
    10. '<|end|>' → logprob: -7.7439494132995605

Token 67: '.ad' (ID: 19775)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29437872767448425
    2. '.sorted' → logprob: -2.1693787574768066
    3. '.n' → logprob: -3.4193787574768066
    4. '.p' → logprob: -4.294378757476807
    5. '.sort' → logprob: -4.669378757476807
    6. '._' → logprob: -5.044378757476807
    7. '.steps' → logprob: -5.044378757476807
    8. '.data' → logprob: -5.044378757476807
    9. '.dp' → logprob: -5.169378757476807
    10. '.indices' → logprob: -5.294378757476807

Token 68: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06217729300260544
    2. 'jac' → logprob: -2.8121771812438965
    3. 'ja' → logprob: -9.312177658081055
    4. '_j' → logprob: -9.937177658081055
    5. 'd' → logprob: -11.062177658081055
    6. '	j' → logprob: -11.187177658081055
    7. '[j' → logprob: -11.562177658081055
    8. 'js' → logprob: -11.937177658081055
    9. '_' → logprob: -12.562177658081055
    10. 'jec' → logprob: -12.812177658081055

Token 69: '_list' (ID: 4162)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.02641988918185234
    2. ' =' → logprob: -4.4014201164245605
    3. 'acent' → logprob: -4.7764201164245605
    4. 'ac' → logprob: -6.2764201164245605
    5. '=' → logprob: -6.2764201164245605
    6. '[' → logprob: -6.6514201164245605
    7. '_list' → logprob: -8.901419639587402
    8. '=[]' → logprob: -10.401419639587402
    9. '[]' → logprob: -10.651419639587402
    10. '_matrix' → logprob: -10.776419639587402

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001529024913907051
    2. '=' → logprob: -6.501529216766357
    3. '[' → logprob: -11.7515287399292
    4. '=[]' → logprob: -12.3765287399292
    5. 's' → logprob: -12.5015287399292
    6. ' =[' → logprob: -13.1265287399292
    7. ':' → logprob: -13.5015287399292
    8. '[:]' → logprob: -13.5015287399292
    9. ' =
' → logprob: -13.7515287399292
    10. ' ' → logprob: -13.8765287399292

Token 71: ' {}
' (ID: 11421)
  Prédit: ' [[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.03481794521212578
    2. ' [' → logprob: -3.534817934036255
    3. '[' → logprob: -5.909818172454834
    4. ' []' → logprob: -6.784818172454834
    5. ' {}' → logprob: -7.284818172454834
    6. ' {' → logprob: -8.409817695617676
    7. ' ' → logprob: -9.034817695617676
    8. ' defaultdict' → logprob: -9.409817695617676
    9. '[]' → logprob: -9.534817695617676
    10. ' [{}' → logprob: -11.034817695617676

Token 72: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: ' self' (ID: 1051)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0689895153045654
    2. ' ' → logprob: -1.1939895153045654
    3. '       ' → logprob: -1.9439895153045654
    4. ' 
' → logprob: -2.4439895153045654
    5. '
' → logprob: -2.8189895153045654
    6. '    ' → logprob: -4.3189897537231445
    7. ' def' → logprob: -4.8189897537231445
    8. '<|end|>' → logprob: -4.8189897537231445
    9. 'def' → logprob: -4.9439897537231445
    10. '    
' → logprob: -5.3189897537231445

Token 74: '.components' (ID: 41872)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0008801387157291174
    2. ' .' → logprob: -7.375880241394043
    3. '.ad' → logprob: -9.250880241394043
    4. '.n' → logprob: -10.250880241394043
    5. '._' → logprob: -10.875880241394043
    6. '.p' → logprob: -11.250880241394043
    7. '.s' → logprob: -11.750880241394043
    8. '.build' → logprob: -12.000880241394043
    9. '.add' → logprob: -12.125880241394043
    10. '.size' → logprob: -12.375880241394043

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.051352500915527344
    2. '=' → logprob: -3.1763525009155273
    3. '_' → logprob: -4.801352500915527
    4. '=[]' → logprob: -10.301352500915527
    5. '_count' → logprob: -11.426352500915527
    6. 's' → logprob: -11.676352500915527
    7. '.' → logprob: -12.051352500915527
    8. '_=' → logprob: -12.051352500915527
    9. '_list' → logprob: -12.301352500915527
    10. '_sizes' → logprob: -12.426352500915527

Token 76: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.01830551214516163
    2. '[]' → logprob: -4.01830530166626
    3. ' []
' → logprob: -9.393305778503418
    4. ' ' → logprob: -9.893305778503418
    5. ' [' → logprob: -12.018305778503418
    6. ' {}' → logprob: -12.018305778503418
    7. '0' → logprob: -12.768305778503418
    8. ' [[]' → logprob: -13.393305778503418
    9. '[' → logprob: -13.518305778503418
    10. '[]
' → logprob: -13.643305778503418

Token 77: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31711068749427795
    2. '
' → logprob: -1.8171106576919556
    3. '<|end|>' → logprob: -3.567110776901245
    4. '    
' → logprob: -3.692110776901245
    5. ' ' → logprob: -3.817110776901245
    6. ' 
' → logprob: -4.067110538482666
    7. '  
' → logprob: -4.942110538482666
    8. 'def' → logprob: -5.817110538482666
    9. ' def' → logprob: -6.692110538482666
    10. '\' → logprob: -7.067110538482666

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046917058527469635
    2. 'def' → logprob: -3.421916961669922
    3. ' def' → logprob: -4.546916961669922
    4. 'd' → logprob: -6.546916961669922
    5. '    
' → logprob: -7.671916961669922
    6. ' 
' → logprob: -8.171916961669922
    7. ' ' → logprob: -9.171916961669922
    8. '
' → logprob: -9.421916961669922
    9. '       ' → logprob: -9.921916961669922
    10. '	def' → logprob: -10.421916961669922

Token 79: ' class' (ID: 744)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4763237237930298
    2. 'd' → logprob: -0.9763237237930298
    3. ' def' → logprob: -6.60132360458374
    4. '   ' → logprob: -7.22632360458374
    5. 'de' → logprob: -9.226324081420898
    6. ' ' → logprob: -10.476324081420898
    7. ' 
' → logprob: -11.476324081420898
    8. ' d' → logprob: -11.851324081420898
    9. '    
' → logprob: -11.851324081420898
    10. '
' → logprob: -13.226324081420898

Token 80: ' Lex' (ID: 32643)
  Prédit: ' Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Node' → logprob: -0.4421849846839905
    2. ' Graph' → logprob: -2.3171849250793457
    3. ' Number' → logprob: -2.5671849250793457
    4. ' Helper' → logprob: -2.9421849250793457
    5. ' Component' → logprob: -3.1921849250793457
    6. ' Solver' → logprob: -3.5671849250793457
    7. ' Solution' → logprob: -4.067184925079346
    8. ' Union' → logprob: -4.442184925079346
    9. ' Token' → logprob: -5.067184925079346
    10. ' Connected' → logprob: -5.192184925079346

Token 81: 'ico' (ID: 2424)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.12178408354520798
    2. 'i' → logprob: -2.496783971786499
    3. 'o' → logprob: -4.871784210205078
    4. 'Sort' → logprob: -5.496784210205078
    5. 'Sorter' → logprob: -5.496784210205078
    6. 'ical' → logprob: -5.621784210205078
    7. 'Node' → logprob: -5.746784210205078
    8. 'Compare' → logprob: -6.621784210205078
    9. '```' → logprob: -6.871784210205078
    10. 'Comparer' → logprob: -7.121784210205078

Token 82: 'Comparator' (ID: 45034)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.01699374057352543
    2. 'graphic' → logprob: -4.391993522644043
    3. 'Graph' → logprob: -5.641993522644043
    4. 'gr' → logprob: -7.641993522644043
    5. 'gram' → logprob: -8.766993522644043
    6. 'gra' → logprob: -9.891993522644043
    7. 'g' → logprob: -10.391993522644043
    8. 'Graphic' → logprob: -10.641993522644043
    9. 'class' → logprob: -10.891993522644043
    10. '_graph' → logprob: -11.016993522644043

Token 83: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003978992172051221
    2. '(' → logprob: -8.375397682189941
    3. ':
' → logprob: -8.750397682189941
    4. '(object' → logprob: -12.625397682189941
    5. ' :' → logprob: -13.875397682189941
    6. '):' → logprob: -13.875397682189941
    7. '():' → logprob: -14.125397682189941
    8. ',' → logprob: -15.000397682189941
    9. '{' → logprob: -15.250397682189941
    10. '<|end|>' → logprob: -15.375397682189941

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.810457170009613
    2. '    ' → logprob: -1.5604572296142578
    3. ':' → logprob: -1.6854572296142578
    4. '   ' → logprob: -2.185457229614258
    5. '        ' → logprob: -4.185457229614258
    6. ' ' → logprob: -4.435457229614258
    7. '<|end|>' → logprob: -4.685457229614258
    8. '(' → logprob: -5.435457229614258
    9. '     ' → logprob: -6.185457229614258
    10. ':
' → logprob: -7.060457229614258

Token 85: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6468273997306824
    2. ' def' → logprob: -0.7718273997306824
    3. '    ' → logprob: -5.021827220916748
    4. '   ' → logprob: -5.646827220916748
    5. '        ' → logprob: -6.271827220916748
    6. '       ' → logprob: -6.396827220916748
    7. ' ' → logprob: -8.021827697753906
    8. '  ' → logprob: -10.646827697753906
    9. '     ' → logprob: -10.646827697753906
    10. '           ' → logprob: -11.021827697753906

Token 86: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.0011100899428129196
    2. 'dat' → logprob: -7.751110076904297
    3. 'fun' → logprob: -8.001110076904297
    4. 'classmethod' → logprob: -9.126110076904297
    5. 'property' → logprob: -9.251110076904297
    6. 'static' → logprob: -9.376110076904297
    7. 'st' → logprob: -10.501110076904297
    8. 'total' → logprob: -11.251110076904297
    9. 'sta' → logprob: -11.501110076904297
    10. 'stat' → logprob: -13.376110076904297

Token 87: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.44030988216400146
    2. ' def' → logprob: -1.3153098821640015
    3. '(' → logprob: -2.565310001373291
    4. '       ' → logprob: -5.190310001373291
    5. '   ' → logprob: -6.815310001373291
    6. '(def' → logprob: -6.940310001373291
    7. ' (' → logprob: -7.190310001373291
    8. '
' → logprob: -7.565310001373291
    9. '(
' → logprob: -7.565310001373291
    10. '        
' → logprob: -7.690310001373291

Token 88: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.39701539278030396
    2. ' def' → logprob: -1.1470153331756592
    3. '       ' → logprob: -5.022015571594238
    4. '(' → logprob: -6.272015571594238
    5. '   ' → logprob: -7.397015571594238
    6. '
' → logprob: -8.147015571594238
    7. '        
' → logprob: -8.272015571594238
    8. '(def' → logprob: -8.772015571594238
    9. '    
' → logprob: -10.147015571594238
    10. ' (' → logprob: -10.397015571594238

Token 89: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.006716079078614712
    2. ' def' → logprob: -5.006716251373291
    3. '   ' → logprob: -15.256715774536133
    4. ' ' → logprob: -15.506715774536133
    5. '
' → logprob: -15.756715774536133
    6. '       ' → logprob: -16.756715774536133
    7. 'de' → logprob: -17.131715774536133
    8. 'd' → logprob: -17.381715774536133
    9. '  ' → logprob: -17.506715774536133
    10. '    ' → logprob: -18.506715774536133

Token 90: ' compare' (ID: 12221)
  Prédit: ' compare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compare' → logprob: -0.4815201759338379
    2. 'compare' → logprob: -1.106520175933838
    3. '_compare' → logprob: -3.981520175933838
    4. ' key' → logprob: -3.981520175933838
    5. ' def' → logprob: -5.856520175933838
    6. ' get' → logprob: -6.231520175933838
    7. '_key' → logprob: -6.231520175933838
    8. 'def' → logprob: -6.731520175933838
    9. '_' → logprob: -6.731520175933838
    10. ' _' → logprob: -7.106520175933838

Token 91: '_num' (ID: 9834)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5324432849884033
    2. '(a' → logprob: -0.9074432849884033
    3. '(x' → logprob: -5.282443046569824
    4. '(lhs' → logprob: -6.657443046569824
    5. '(n' → logprob: -7.032443046569824
    6. '(s' → logprob: -7.282443046569824
    7. '(token' → logprob: -7.532443046569824
    8. '(p' → logprob: -9.157443046569824
    9. '(left' → logprob: -9.282443046569824
    10. '(
' → logprob: -9.657443046569824

Token 92: '_str' (ID: 6182)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.17048302292823792
    2. 'bers' → logprob: -2.170483112335205
    3. '(a' → logprob: -3.420483112335205
    4. 'ber' → logprob: -5.295483112335205
    5. '(self' → logprob: -6.295483112335205
    6. '(s' → logprob: -6.920483112335205
    7. '(' → logprob: -7.170483112335205
    8. 'ers' → logprob: -7.545483112335205
    9. '(n' → logprob: -8.670482635498047
    10. 'er' → logprob: -8.795482635498047

Token 93: '_' (ID: 62)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.065773367881775
    2. '(a' → logprob: -1.190773367881775
    3. 's' → logprob: -1.690773367881775
    4. '(s' → logprob: -2.0657734870910645
    5. '(n' → logprob: -4.3157734870910645
    6. 'ings' → logprob: -4.4407734870910645
    7. 'ing' → logprob: -5.5657734870910645
    8. '(num' → logprob: -5.5657734870910645
    9. ' (' → logprob: -5.6907734870910645
    10. '(str' → logprob: -7.1907734870910645

Token 94: 'lex' (ID: 3179)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03974755480885506
    2. 'ings' → logprob: -3.414747476577759
    3. 'ing' → logprob: -5.914747714996338
    4. '_repr' → logprob: -6.539747714996338
    5. 'as' → logprob: -7.664747714996338
    6. '(s' → logprob: -8.16474723815918
    7. '(a' → logprob: -8.41474723815918
    8. 'rep' → logprob: -9.28974723815918
    9. 'ber' → logprob: -9.53974723815918
    10. '_rep' → logprob: -9.66474723815918

Token 95: '(n' (ID: 2406)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.0764290913939476
    2. '(self' → logprob: -3.7014291286468506
    3. '(a' → logprob: -4.2014288902282715
    4. '(cls' → logprob: -4.7014288902282715
    5. '(' → logprob: -5.2014288902282715
    6. '(
' → logprob: -5.7014288902282715
    7. 'ico' → logprob: -5.8264288902282715
    8. 'ically' → logprob: -6.3264288902282715
    9. '(x' → logprob: -6.7014288902282715
    10. '(i' → logprob: -6.7014288902282715

Token 96: '1' (ID: 16)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.3167665898799896
    2. ':' → logprob: -2.1917665004730225
    3. '):' → logprob: -2.3167665004730225
    4. ',' → logprob: -3.0667665004730225
    5. ')' → logprob: -4.941766738891602
    6. ':str' → logprob: -6.441766738891602
    7. '   ' → logprob: -7.316766738891602
    8. 'umer' → logprob: -7.441766738891602
    9. '```' → logprob: -7.441766738891602
    10. ':int' → logprob: -7.566766738891602

Token 97: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4295874536037445
    2. ':' → logprob: -1.054587483406067
    3. ' ,' → logprob: -8.054587364196777
    4. '):' → logprob: -8.179587364196777
    5. ':int' → logprob: -8.679587364196777
    6. ':str' → logprob: -10.179587364196777
    7. ' :' → logprob: -11.054587364196777
    8. ')' → logprob: -11.054587364196777
    9. ':,' → logprob: -11.679587364196777
    10. ',n' → logprob: -11.679587364196777

Token 98: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.051900897175073624
    2. ' int' → logprob: -3.051900863647461
    3. ')' → logprob: -5.801900863647461
    4. ':int' → logprob: -9.551900863647461
    5. '[int' → logprob: -9.676900863647461
    6. ' )' → logprob: -10.426900863647461
    7. ' ' → logprob: -10.676900863647461
    8. ',' → logprob: -11.051900863647461
    9. ',int' → logprob: -11.051900863647461
    10. 'str' → logprob: -11.301900863647461

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011889220913872123
    2. ' ,' → logprob: -6.8761887550354
    3. ',n' → logprob: -9.001189231872559
    4. ':' → logprob: -11.001189231872559
    5. ')' → logprob: -12.876189231872559
    6. ',
' → logprob: -12.876189231872559
    7. '‌,' → logprob: -12.876189231872559
    8. '),' → logprob: -13.251189231872559
    9. ',int' → logprob: -13.751189231872559
    10. '):' → logprob: -13.876189231872559

Token 100: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.31333813071250916
    2. 'n' → logprob: -1.3133381605148315
    3. ')' → logprob: -10.688338279724121
    4. ' ' → logprob: -11.188338279724121
    5. '	n' → logprob: -11.438338279724121
    6. ',' → logprob: -11.688338279724121
    7. ')n' → logprob: -11.938338279724121
    8. ' ' → logprob: -12.063338279724121
    9. ' )' → logprob: -13.063338279724121
    10. 'int' → logprob: -13.438338279724121

Token 101: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012225302867591381
    2. '2' → logprob: -4.637225151062012
    3. ',' → logprob: -6.887225151062012
    4. ':' → logprob: -7.637225151062012
    5. ')' → logprob: -8.012225151062012
    6. 'um' → logprob: -8.637225151062012
    7. 'umber' → logprob: -9.012225151062012
    8. 'u' → logprob: -9.387225151062012
    9. 'umer' → logprob: -9.762225151062012
    10. '   ' → logprob: -10.512225151062012

Token 102: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29735565185546875
    2. '):' → logprob: -1.6723556518554688
    3. ')' → logprob: -2.6723556518554688
    4. '):
' → logprob: -9.297355651855469
    5. ':int' → logprob: -9.422355651855469
    6. ' ):' → logprob: -10.547355651855469
    7. ',' → logprob: -10.672355651855469
    8. '1' → logprob: -10.797355651855469
    9. ' :' → logprob: -11.297355651855469
    10. '   ' → logprob: -11.547355651855469

Token 103: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.47447139024734497
    2. 'int' → logprob: -0.974471390247345
    3. ')' → logprob: -8.474471092224121
    4. ':int' → logprob: -9.349471092224121
    5. ' ' → logprob: -9.849471092224121
    6. ' )' → logprob: -11.849471092224121
    7. '[int' → logprob: -11.974471092224121
    8. ' str' → logprob: -12.224471092224121
    9. '=int' → logprob: -12.224471092224121
    10. '	int' → logprob: -12.849471092224121

Token 104: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1623050421476364
    2. ')' → logprob: -1.9123049974441528
    3. ' ):' → logprob: -6.537304878234863
    4. '):
' → logprob: -8.662304878234863
    5. ' )' → logprob: -8.912304878234863
    6. ',' → logprob: -9.162304878234863
    7. ')->' → logprob: -9.162304878234863
    8. ':' → logprob: -9.412304878234863
    9. '   ' → logprob: -11.162304878234863
    10. ' ' → logprob: -12.287304878234863

Token 105: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07303333282470703
    2. '):' → logprob: -2.698033332824707
    3. ' :' → logprob: -6.448033332824707
    4. ')' → logprob: -6.948033332824707
    5. '):
' → logprob: -9.073033332824707
    6. '       ' → logprob: -9.073033332824707
    7. ':
' → logprob: -9.198033332824707
    8. ',' → logprob: -9.698033332824707
    9. ':return' → logprob: -9.948033332824707
    10. ' ->' → logprob: -10.198033332824707

Token 106: ' bool' (ID: 3792)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.010711626149713993
    2. ' int' → logprob: -4.635711669921875
    3. 'bool' → logprob: -7.010711669921875
    4. ' bool' → logprob: -10.510711669921875
    5. ' ' → logprob: -11.010711669921875
    6. '  ' → logprob: -12.510711669921875
    7. '   ' → logprob: -13.260711669921875
    8. '[int' → logprob: -14.010711669921875
    9. '	int' → logprob: -14.135711669921875
    10. '<int' → logprob: -14.760711669921875

Token 107: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010080387583002448
    2. '       ' → logprob: -7.751008033752441
    3. '):' → logprob: -8.001008033752441
    4. ' :' → logprob: -9.501008033752441
    5. ':
' → logprob: -9.626008033752441
    6. ',' → logprob: -10.251008033752441
    7. ':return' → logprob: -10.626008033752441
    8. '():' → logprob: -11.251008033752441
    9. ')' → logprob: -11.626008033752441
    10. '<|end|>' → logprob: -11.751008033752441

Token 108: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5429547429084778
    2. ' ' → logprob: -1.417954683303833
    3. '        ' → logprob: -2.292954683303833
    4. '           ' → logprob: -2.917954683303833
    5. '<|end|>' → logprob: -5.417954921722412
    6. ',' → logprob: -5.792954921722412
    7. '   ' → logprob: -6.042954921722412
    8. ':' → logprob: -6.667954921722412
    9. ')' → logprob: -7.167954921722412
    10. '    ' → logprob: -7.292954921722412

Token 109: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02692435123026371
    2. ' s' → logprob: -4.651924133300781
    3. 'n' → logprob: -4.901924133300781
    4. 'str' → logprob: -5.151924133300781
    5. 'return' → logprob: -5.901924133300781
    6. '       ' → logprob: -7.276924133300781
    7. ' str' → logprob: -9.151924133300781
    8. 'a' → logprob: -9.276924133300781
    9. ' n' → logprob: -9.526924133300781
    10. ' return' → logprob: -9.651924133300781

Token 110: ' Return' (ID: 6318)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2806302607059479
    2. ' s' → logprob: -1.9056302309036255
    3. 'str' → logprob: -3.155630350112915
    4. 'return' → logprob: -4.030630111694336
    5. 'n' → logprob: -4.280630111694336
    6. ' str' → logprob: -4.530630111694336
    7. ' return' → logprob: -5.030630111694336
    8. ' n' → logprob: -6.155630111694336
    9. 'num' → logprob: -6.405630111694336
    10. ' num' → logprob: -8.030630111694336

Token 111: ' True' (ID: 6432)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.18110579252243042
    2. 'str' → logprob: -1.8061058521270752
    3. ' True' → logprob: -7.181105613708496
    4. 'True' → logprob: -8.806105613708496
    5. '   ' → logprob: -9.056105613708496
    6. ' ' → logprob: -9.556105613708496
    7. ' int' → logprob: -9.681105613708496
    8. ' len' → logprob: -9.806105613708496
    9. ' n' → logprob: -10.556105613708496
    10. 'len' → logprob: -10.556105613708496

Token 112: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0018768743611872196
    2. 'if' → logprob: -6.8768768310546875
    3. ' ' → logprob: -7.3768768310546875
    4. '<|end|>' → logprob: -9.376876831054688
    5. ' for' → logprob: -10.001876831054688
    6. ' n' → logprob: -11.126876831054688
    7. ' iff' → logprob: -11.376876831054688
    8. ' str' → logprob: -12.126876831054688
    9. '    ' → logprob: -12.251876831054688
    10. ' (' → logprob: -12.376876831054688

Token 113: ' n' (ID: 297)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.007629938889294863
    2. ' str' → logprob: -4.882629871368408
    3. ' ' → logprob: -12.257630348205566
    4. '	str' → logprob: -12.382630348205566
    5. '   ' → logprob: -12.507630348205566
    6. '(str' → logprob: -13.132630348205566
    7. '
' → logprob: -13.257630348205566
    8. 'len' → logprob: -13.257630348205566
    9. 's' → logprob: -14.007630348205566
    10. 'n' → logprob: -14.007630348205566

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003841167315840721
    2. 'str' → logprob: -5.628841400146484
    3. ' str' → logprob: -9.378841400146484
    4. '2' → logprob: -9.503841400146484
    5. '[str' → logprob: -10.003841400146484
    6. 's' → logprob: -11.753841400146484
    7. '_str' → logprob: -12.128841400146484
    8. '```' → logprob: -12.628841400146484
    9. '=str' → logprob: -12.753841400146484
    10. '(str' → logprob: -13.128841400146484

Token 115: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6075037717819214
    2. 'str' → logprob: -2.107503890991211
    3. '_str' → logprob: -2.357503890991211
    4. '<n' → logprob: -2.607503890991211
    5. ' <=' → logprob: -3.357503890991211
    6. 's' → logprob: -3.357503890991211
    7. ''s' → logprob: -3.982503890991211
    8. ' is' → logprob: -4.857503890991211
    9. '<' → logprob: -4.982503890991211
    10. '.to' → logprob: -5.107503890991211

Token 116: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4612552225589752
    2. 'str' → logprob: -1.7112551927566528
    3. ' str' → logprob: -1.8362551927566528
    4. 'n' → logprob: -3.5862553119659424
    5. ' ' → logprob: -7.961255073547363
    6. 'int' → logprob: -8.461255073547363
    7. '=str' → logprob: -8.711255073547363
    8. '"' → logprob: -8.961255073547363
    9. '_str' → logprob: -9.086255073547363
    10. ')' → logprob: -9.586255073547363

Token 117: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.15253493189811707
    2. '1' → logprob: -2.2775349617004395
    3. 'n' → logprob: -3.9025349617004395
    4. ' n' → logprob: -4.0275349617004395
    5. ' ' → logprob: -8.777534484863281
    6. '_' → logprob: -9.027534484863281
    7. '   ' → logprob: -9.152534484863281
    8. 'str' → logprob: -9.402534484863281
    9. 'um' → logprob: -9.527534484863281
    10. '_str' → logprob: -9.777534484863281

Token 118: ' lex' (ID: 37772)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4066114127635956
    2. ' in' → logprob: -2.281611442565918
    3. '       ' → logprob: -2.781611442565918
    4. ' and' → logprob: -2.906611442565918
    5. ' else' → logprob: -4.031611442565918
    6. '   ' → logprob: -4.156611442565918
    7. ':' → logprob: -4.656611442565918
    8. ' ,' → logprob: -4.656611442565918
    9. '    ' → logprob: -4.781611442565918
    10. 'return' → logprob: -5.281611442565918

Token 119: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.06558392941951752
    2. 'ographical' → logprob: -3.8155839443206787
    3. 'ographically' → logprob: -3.9405839443206787
    4. ':' → logprob: -4.3155837059021
    5. 'ically' → logprob: -6.6905837059021
    6. 'ographic' → logprob: -6.8155837059021
    7. 'ical' → logprob: -6.9405837059021
    8. ' ' → logprob: -7.3155837059021
    9. ')' → logprob: -7.4405837059021
    10. '       ' → logprob: -7.4405837059021

Token 120: 'ographically' (ID: 121004)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.23809489607810974
    2. 'ographically' → logprob: -1.6130949258804321
    3. 'cal' → logprob: -5.363094806671143
    4. '   ' → logprob: -5.988094806671143
    5. '```' → logprob: -5.988094806671143
    6. '
' → logprob: -6.863094806671143
    7. 'oc' → logprob: -8.1130952835083
    8. 'graph' → logprob: -8.2380952835083
    9. 'co' → logprob: -9.1130952835083
    10. '``' → logprob: -9.1130952835083

Token 121: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5409758687019348
    2. ':' → logprob: -1.54097580909729
    3. ',' → logprob: -2.29097580909729
    4. '           ' → logprob: -2.79097580909729
    5. ' :' → logprob: -4.665976047515869
    6. '   ' → logprob: -5.040976047515869
    7. ' and' → logprob: -5.665976047515869
    8. ')' → logprob: -5.915976047515869
    9. '):' → logprob: -6.040976047515869
    10. ' ,' → logprob: -6.165976047515869

Token 122: ' string' (ID: 1621)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.07914567738771439
    2. ' str' → logprob: -2.579145669937134
    3. '=str' → logprob: -10.079145431518555
    4. '   ' → logprob: -10.204145431518555
    5. '
' → logprob: -10.329145431518555
    6. '	str' → logprob: -10.579145431518555
    7. 'def' → logprob: -10.954145431518555
    8. 's' → logprob: -11.079145431518555
    9. ' ' → logprob: -11.204145431518555
    10. '`' → logprob: -11.454145431518555

Token 123: ' representation' (ID: 22311)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9768664240837097
    2. ')' → logprob: -1.2268664836883545
    3. 'def' → logprob: -2.8518664836883545
    4. 'return' → logprob: -2.9768664836883545
    5. '):' → logprob: -3.3518664836883545
    6. ':return' → logprob: -3.6018664836883545
    7. '1' → logprob: -3.7268664836883545
    8. ',' → logprob: -4.351866245269775
    9. ':
' → logprob: -4.601866245269775
    10. ' else' → logprob: -4.601866245269775

Token 124: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6834391951560974
    2. '           ' → logprob: -1.1834392547607422
    3. ':' → logprob: -2.308439254760742
    4. ',' → logprob: -3.058439254760742
    5. '
' → logprob: -4.308439254760742
    6. ')' → logprob: -4.808439254760742
    7. '):' → logprob: -5.058439254760742
    8. '   ' → logprob: -5.933439254760742
    9. ' :' → logprob: -6.433439254760742
    10. ':
' → logprob: -6.558439254760742

Token 125: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00433018384501338
    2. ',' → logprob: -7.129330158233643
    3. '            ' → logprob: -7.129330158233643
    4. '       ' → logprob: -7.629330158233643
    5. '            
' → logprob: -7.754330158233643
    6. ' else' → logprob: -7.879330158233643
    7. '               ' → logprob: -8.3793306350708
    8. ' ' → logprob: -8.3793306350708
    9. ' return' → logprob: -9.0043306350708
    10. ' ,' → logprob: -9.1293306350708

Token 126: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.07902440428733826
    2. 'False' → logprob: -2.579024314880371
    3. '    ' → logprob: -10.829024314880371
    4. '   ' → logprob: -11.079024314880371
    5. '       ' → logprob: -11.204024314880371
    6. '<|end|>' → logprob: -11.204024314880371
    7. '=False' → logprob: -11.204024314880371
    8. ' return' → logprob: -11.329024314880371
    9. '(False' → logprob: -11.329024314880371
    10. ' True' → logprob: -11.704024314880371

Token 127: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4584977626800537
    2. '       ' → logprob: -1.3334977626800537
    3. '           ' → logprob: -2.9584977626800537
    4. '):' → logprob: -3.9584977626800537
    5. ',' → logprob: -4.208498001098633
    6. ')' → logprob: -5.083498001098633
    7. ' :' → logprob: -5.333498001098633
    8. ':
' → logprob: -6.333498001098633
    9. '   ' → logprob: -6.708498001098633
    10. '<|end|>' → logprob: -6.958498001098633

Token 128: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18090176582336426
    2. ':' → logprob: -2.1809017658233643
    3. '       ' → logprob: -3.0559017658233643
    4. ' :' → logprob: -6.180901527404785
    5. ',' → logprob: -7.430901527404785
    6. ':
' → logprob: -8.055901527404785
    7. '):' → logprob: -8.305901527404785
    8. '   ' → logprob: -8.430901527404785
    9. '
' → logprob: -8.430901527404785
    10. '            
' → logprob: -8.680901527404785

Token 129: ' return' (ID: 622)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3299950957298279
    2. 's' → logprob: -1.9549951553344727
    3. '           ' → logprob: -3.0799951553344727
    4. ' n' → logprob: -3.7049951553344727
    5. 'n' → logprob: -4.079995155334473
    6. 'str' → logprob: -4.079995155334473
    7. ' str' → logprob: -4.204995155334473
    8. '       ' → logprob: -4.704995155334473
    9. ' return' → logprob: -4.954995155334473
    10. 'return' (adapté à ' return') → logprob: -5.954995155334473

Token 130: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0789254829287529
    2. ' str' → logprob: -2.578925371170044
    3. '   ' → logprob: -10.953925132751465
    4. ' ' → logprob: -11.828925132751465
    5. '	str' → logprob: -12.828925132751465
    6. '    ' → logprob: -13.328925132751465
    7. '(str' → logprob: -13.453925132751465
    8. '  ' → logprob: -13.578925132751465
    9. '           ' → logprob: -14.328925132751465
    10. 'len' → logprob: -14.578925132751465

Token 131: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.6060808522743173e-05
    2. '(' → logprob: -10.750025749206543
    3. ' (' → logprob: -13.000025749206543
    4. 'n' → logprob: -13.250025749206543
    5. '[n' → logprob: -14.625025749206543
    6. '(
' → logprob: -17.00002670288086
    7. '<n' → logprob: -17.75002670288086
    8. ' n' → logprob: -18.25002670288086
    9. ' ' → logprob: -18.62502670288086
    10. '(num' → logprob: -18.75002670288086

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '
' → logprob: -16.875
    3. ')' → logprob: -17.3125
    4. '```' → logprob: -17.5625
    5. '(n' → logprob: -17.875
    6. '[' → logprob: -18.0625
    7. 'um' → logprob: -18.125
    8. 'umber' → logprob: -18.1875
    9. '   ' → logprob: -18.75
    10. 'orm' → logprob: -18.75

Token 133: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003754999197553843
    2. ' )' → logprob: -8.250375747680664
    3. ')<' → logprob: -9.250375747680664
    4. '")' → logprob: -12.125375747680664
    5. ' <' → logprob: -12.125375747680664
    6. '<' → logprob: -12.875375747680664
    7. '"' → logprob: -14.125375747680664
    8. ').' → logprob: -14.750375747680664
    9. '[' → logprob: -14.750375747680664
    10. '')' → logprob: -14.875375747680664

Token 134: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6933660507202148
    2. ' <' → logprob: -0.6933660507202148
    3. '[' → logprob: -9.068366050720215
    4. '<n' → logprob: -10.318366050720215
    5. '<string' → logprob: -11.443366050720215
    6. ' ' → logprob: -11.568366050720215
    7. '<|end|>' → logprob: -11.693366050720215
    8. ')' → logprob: -12.443366050720215
    9. '<len' → logprob: -12.568366050720215
    10. '<int' → logprob: -12.568366050720215

Token 135: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.5759454369544983
    2. 'str' → logprob: -0.8259454369544983
    3. '	str' → logprob: -12.950945854187012
    4. '(str' → logprob: -13.450945854187012
    5. ' ' → logprob: -14.575945854187012
    6. 's' → logprob: -14.825945854187012
    7. '=str' → logprob: -15.075945854187012
    8. '"' → logprob: -15.325945854187012
    9. '_str' → logprob: -15.450945854187012
    10. ' ' → logprob: -15.950945854187012

Token 136: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.007620468270033598
    2. '(' → logprob: -4.882620334625244
    3. '(str' → logprob: -11.882620811462402
    4. '(
' → logprob: -12.382620811462402
    5. 'n' → logprob: -13.132620811462402
    6. ' (' → logprob: -14.257620811462402
    7. 'str' → logprob: -15.882620811462402
    8. '(

' → logprob: -16.132619857788086
    9. '(num' → logprob: -16.382619857788086
    10. '(int' → logprob: -16.882619857788086

Token 137: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1994775377388578e-05
    2. 'n' → logprob: -11.500012397766113
    3. '   ' → logprob: -14.250012397766113
    4. ' ' → logprob: -14.875012397766113
    5. ')' → logprob: -15.375012397766113
    6. '```' → logprob: -15.875012397766113
    7. '
' → logprob: -16.500011444091797
    8. '       ' → logprob: -16.625011444091797
    9. 'o' → logprob: -17.125011444091797
    10. '[' → logprob: -17.750011444091797

Token 138: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.15310683415737e-05
    2. ')
' → logprob: -11.250021934509277
    3. ')n' → logprob: -12.500021934509277
    4. ' )' → logprob: -13.125021934509277
    5. '))' → logprob: -14.625021934509277
    6. ')return' → logprob: -14.750021934509277
    7. '<|end|>' → logprob: -14.750021934509277
    8. '())' → logprob: -15.500021934509277
    9. '[' → logprob: -15.500021934509277
    10. '1' → logprob: -15.750021934509277

Token 139: '        
' (ID: 3564)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3353162705898285
    2. '<|end|>' → logprob: -1.7103163003921509
    3. '    
' → logprob: -2.4603161811828613
    4. '   ' → logprob: -4.835316181182861
    5. '        
' → logprob: -5.960316181182861
    6. '       ' → logprob: -6.210316181182861
    7. '  
' → logprob: -6.335316181182861
    8. '<|end|>' → logprob: -6.460316181182861
    9. ' 
' → logprob: -6.835316181182861
    10. '\n' → logprob: -7.960316181182861

Token 140: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21155796945095062
    2. '    
' → logprob: -2.3365578651428223
    3. '       ' → logprob: -2.4615578651428223
    4. '        
' → logprob: -4.836557865142822
    5. 'def' → logprob: -8.21155834197998
    6. '
' → logprob: -8.21155834197998
    7. '    
    
' → logprob: -9.83655834197998
    8. '<|end|>' → logprob: -10.08655834197998
    9. '            
' → logprob: -10.46155834197998
    10. '<|end|>' → logprob: -10.83655834197998

Token 141: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5717219114303589
    2. '   ' → logprob: -1.0717219114303589
    3. '@' (adapté à ' @') → logprob: -2.4467220306396484
    4. '       ' → logprob: -5.946722030639648
    5. '    
' → logprob: -5.946722030639648
    6. '        
' → logprob: -7.321722030639648
    7. ' def' → logprob: -8.321722030639648
    8. ' @' → logprob: -9.446722030639648
    9. '    ' → logprob: -10.321722030639648
    10. ' ' → logprob: -10.446722030639648

Token 142: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.0007562621613033116
    2. 'classmethod' → logprob: -7.62575626373291
    3. 'static' → logprob: -8.25075626373291
    4. '@' → logprob: -12.87575626373291
    5. ' static' → logprob: -13.00075626373291
    6. 'dat' → logprob: -14.00075626373291
    7. 'property' → logprob: -14.37575626373291
    8. 'st' → logprob: -15.50075626373291
    9. '
' → logprob: -15.62575626373291
    10. 'pytest' → logprob: -16.375755310058594

Token 143: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6695554256439209
    2. '
' → logprob: -0.7945554256439209
    3. ' def' → logprob: -4.2945556640625
    4. '       ' → logprob: -4.4195556640625
    5. '   ' → logprob: -5.1695556640625
    6. '(' → logprob: -6.5445556640625
    7. ':' → logprob: -6.6695556640625
    8. ' ' → logprob: -7.0445556640625
    9. '
' → logprob: -8.2945556640625
    10. '        
' → logprob: -8.4195556640625

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07985394448041916
    2. 'def' → logprob: -2.7048540115356445
    3. '   ' → logprob: -5.3298540115356445
    4. '
' → logprob: -5.4548540115356445
    5. ' def' → logprob: -7.4548540115356445
    6. '	def' → logprob: -9.329854011535645
    7. '           ' → logprob: -10.454854011535645
    8. '        
' → logprob: -11.704854011535645
    9. '	   ' → logprob: -11.954854011535645
    10. '      ' → logprob: -12.079854011535645

Token 145: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00023560250701848418
    2. '
' → logprob: -8.750235557556152
    3. ' def' → logprob: -9.625235557556152
    4. '       ' → logprob: -11.875235557556152
    5. 'from' → logprob: -12.750235557556152
    6. '   ' → logprob: -14.375235557556152
    7. '	def' → logprob: -15.375235557556152
    8. '        
' → logprob: -16.37523651123047
    9. 'class' → logprob: -17.25023651123047
    10. 'compare' → logprob: -17.62523651123047

Token 146: ' compare' (ID: 12221)
  Prédit: ' compare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compare' → logprob: -1.0947072505950928
    2. ' def' → logprob: -1.7197072505950928
    3. 'compare' → logprob: -1.9697072505950928
    4. ' le' → logprob: -2.2197072505950928
    5. ' sort' → logprob: -2.5947072505950928
    6. ' key' → logprob: -3.2197072505950928
    7. 'sort' → logprob: -3.8447072505950928
    8. 'def' → logprob: -3.9697072505950928
    9. ' lex' → logprob: -4.344707489013672
    10. 'lex' → logprob: -4.469707489013672

Token 147: '_numeric' (ID: 75954)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.10367738455533981
    2. '_str' → logprob: -2.478677272796631
    3. '_nums' → logprob: -5.353677272796631
    4. '_list' → logprob: -5.728677272796631
    5. '_numbers' → logprob: -7.228677272796631
    6. '_len' → logprob: -7.478677272796631
    7. '_size' → logprob: -7.603677272796631
    8. '_n' → logprob: -7.728677272796631
    9. 's' → logprob: -7.978677272796631
    10. '_lists' → logprob: -8.103677749633789

Token 148: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0209991242736578
    2. '(' → logprob: -3.8959991931915283
    3. ' (' → logprob: -8.89599895477295
    4. '(a' → logprob: -9.52099895477295
    5. '_' → logprob: -9.64599895477295
    6. '(int' → logprob: -9.77099895477295
    7. '(num' → logprob: -10.89599895477295
    8. '(p' → logprob: -11.02099895477295
    9. '<|end|>' → logprob: -11.02099895477295
    10. '_numbers' → logprob: -11.27099895477295

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002979240380227566
    2. '2' → logprob: -8.250297546386719
    3. ')' → logprob: -11.250297546386719
    4. ',' → logprob: -11.625297546386719
    5. ' ' → logprob: -12.375297546386719
    6. '(' → logprob: -12.875297546386719
    7. '   ' → logprob: -13.125297546386719
    8. ' (' → logprob: -14.250297546386719
    9. '  ' → logprob: -14.500297546386719
    10. '    ' → logprob: -15.000297546386719

Token 150: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00688741123303771
    2. ':' → logprob: -5.881887435913086
    3. ',n' → logprob: -6.131887435913086
    4. ' ,' → logprob: -6.381887435913086
    5. ':int' → logprob: -8.756887435913086
    6. ',int' → logprob: -10.631887435913086
    7. ' :' → logprob: -11.506887435913086
    8. ':n' → logprob: -12.631887435913086
    9. '   ' → logprob: -12.756887435913086
    10. 'int' → logprob: -13.006887435913086

Token 151: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3480529487133026
    2. ' n' → logprob: -1.848052978515625
    3. 'n' → logprob: -2.598052978515625
    4. ' int' → logprob: -2.973052978515625
    5. '<|end|>' → logprob: -4.973052978515625
    6. ' ' → logprob: -6.223052978515625
    7. ',' → logprob: -7.473052978515625
    8. ')' → logprob: -8.098052978515625
    9. '1' → logprob: -8.223052978515625
    10. ',int' → logprob: -9.223052978515625

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003784631844609976
    2. ',n' → logprob: -5.628784656524658
    3. ' ,' → logprob: -8.6287841796875
    4. 'n' → logprob: -13.2537841796875
    5. ',
' → logprob: -13.5037841796875
    6. ',int' → logprob: -13.5037841796875
    7. '   ' → logprob: -14.6287841796875
    8. ',num' → logprob: -15.7537841796875
    9. ' n' → logprob: -15.8787841796875
    10. '       ' → logprob: -16.3787841796875

Token 153: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.038706302642822266
    2. 'n' → logprob: -3.2887063026428223
    3. ' int' → logprob: -7.913706302642822
    4. 'int' → logprob: -8.163705825805664
    5. ' ' → logprob: -12.163705825805664
    6. ',' → logprob: -13.038705825805664
    7. ' ' → logprob: -13.163705825805664
    8. '    ' → logprob: -13.413705825805664
    9. '   ' → logprob: -13.913705825805664
    10. '	n' → logprob: -14.538705825805664

Token 154: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0033501284196972847
    2. ',' → logprob: -5.878350257873535
    3. '1' → logprob: -8.003350257873535
    4. ' ,' → logprob: -9.628350257873535
    5. '   ' → logprob: -9.628350257873535
    6. ' ' → logprob: -10.503350257873535
    7. ':' → logprob: -10.503350257873535
    8. ')' → logprob: -12.378350257873535
    9. '    ' → logprob: -12.378350257873535
    10. '  ' → logprob: -12.878350257873535

Token 155: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48216572403907776
    2. ',' → logprob: -0.9821656942367554
    3. ')' → logprob: -4.982165813446045
    4. ' ,' → logprob: -8.107165336608887
    5. '):' → logprob: -8.357165336608887
    6. ' :' → logprob: -8.357165336608887
    7. ':int' → logprob: -8.482165336608887
    8. ',n' → logprob: -9.482165336608887
    9. '   ' → logprob: -9.732165336608887
    10. ' )' → logprob: -11.357165336608887

Token 156: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3240680992603302
    2. ' int' → logprob: -1.4490680694580078
    3. 'n' → logprob: -3.699068069458008
    4. ' n' → logprob: -4.074068069458008
    5. ')' → logprob: -9.074068069458008
    6. ' ' → logprob: -9.824068069458008
    7. ':int' → logprob: -10.699068069458008
    8. '   ' → logprob: -11.699068069458008
    9. ' 
' → logprob: -11.949068069458008
    10. ' )' → logprob: -12.074068069458008

Token 157: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009080066229216754
    2. ' )' → logprob: -7.125907897949219
    3. ':' → logprob: -9.750907897949219
    4. '):' → logprob: -10.250907897949219
    5. ',' → logprob: -12.125907897949219
    6. ')->' → logprob: -14.000907897949219
    7. '   ' → logprob: -14.000907897949219
    8. ' ' → logprob: -14.500907897949219
    9. '):
' → logprob: -15.125907897949219
    10. '))' → logprob: -15.250907897949219

Token 158: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23932507634162903
    2. ' <' → logprob: -1.8643250465393066
    3. ':' → logprob: -3.2393250465393066
    4. ' :' → logprob: -4.989325046539307
    5. ' )' → logprob: -5.114325046539307
    6. ' ->' → logprob: -5.739325046539307
    7. ' ' → logprob: -7.239325046539307
    8. '   ' → logprob: -7.489325046539307
    9. ',' → logprob: -8.239325523376465
    10. ' >' → logprob: -8.614325523376465

Token 159: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.15341134369373322
    2. ' bool' → logprob: -2.278411388397217
    3. 'int' → logprob: -3.403411388397217
    4. ' int' → logprob: -6.278411388397217
    5. 'return' → logprob: -6.403411388397217
    6. 'n' → logprob: -6.528411388397217
    7. ' return' → logprob: -7.403411388397217
    8. '   ' → logprob: -7.778411388397217
    9. ' n' → logprob: -8.653410911560059
    10. ' ' → logprob: -8.778410911560059

Token 160: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005378541070967913
    2. ':
' → logprob: -5.255378723144531
    3. ':return' → logprob: -9.005378723144531
    4. '       ' → logprob: -11.630378723144531
    5. ' :' → logprob: -12.380378723144531
    6. '           ' → logprob: -13.505378723144531
    7. ':
' → logprob: -13.505378723144531
    8. ':

' → logprob: -13.755378723144531
    9. '   ' → logprob: -13.755378723144531
    10. ',' → logprob: -14.255378723144531

Token 161: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08888264745473862
    2. '           ' → logprob: -3.0888826847076416
    3. 'return' → logprob: -3.7138826847076416
    4. ' return' → logprob: -4.2138824462890625
    5. '   ' → logprob: -8.963882446289062
    6. ' ' → logprob: -9.713882446289062
    7. '
' → logprob: -10.963882446289062
    8. '         ' → logprob: -10.963882446289062
    9. '        ' → logprob: -11.213882446289062
    10. '          ' → logprob: -11.463882446289062

Token 162: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009320974349975586
    2. ' return' → logprob: -4.759321212768555
    3. '           ' → logprob: -7.259321212768555
    4. '   ' → logprob: -13.884321212768555
    5. '       ' → logprob: -14.134321212768555
    6. '
' → logprob: -15.134321212768555
    7. '	return' → logprob: -15.509321212768555
    8. '               ' → logprob: -15.759321212768555
    9. '```' → logprob: -16.384321212768555
    10. '          ' → logprob: -16.884321212768555

Token 163: ' Return' (ID: 6318)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00013846253568772227
    2. ' return' → logprob: -9.000138282775879
    3. 'Return' → logprob: -11.750138282775879
    4. '           ' → logprob: -12.125138282775879
    5. '       ' → logprob: -13.500138282775879
    6. '
' → logprob: -16.250139236450195
    7. '   ' → logprob: -16.250139236450195
    8. '#' → logprob: -16.875139236450195
    9. ':return' → logprob: -17.875139236450195
    10. '	return' → logprob: -18.000139236450195

Token 164: ' True' (ID: 6432)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01419324241578579
    2. ' n' → logprob: -4.264193058013916
    3. 'True' → logprob: -11.139193534851074
    4. 'str' → logprob: -11.889193534851074
    5. ' ' → logprob: -12.889193534851074
    6. '   ' → logprob: -13.014193534851074
    7. '	n' → logprob: -13.889193534851074
    8. ' True' → logprob: -14.514193534851074
    9. '(n' → logprob: -14.889193534851074
    10. '
' → logprob: -15.139193534851074

Token 165: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.41718506813049316
    2. ' n' → logprob: -1.1671850681304932
    3. 'n' → logprob: -3.792185068130493
    4. 'if' → logprob: -5.042184829711914
    5. '           ' → logprob: -7.292184829711914
    6. '(n' → logprob: -9.917184829711914
    7. '            ' → logprob: -10.542184829711914
    8. ' return' → logprob: -11.167184829711914
    9. ',' → logprob: -11.417184829711914
    10. '          ' → logprob: -11.542184829711914

Token 166: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023246178403496742
    2. ' n' → logprob: -3.7732462882995605
    3. '(n' → logprob: -14.898245811462402
    4. '   ' → logprob: -16.14824676513672
    5. '	n' → logprob: -16.39824676513672
    6. '
' → logprob: -16.52324676513672
    7. ' ' → logprob: -16.89824676513672
    8. 'str' → logprob: -17.14824676513672
    9. '    ' → logprob: -17.77324676513672
    10. ' (' → logprob: -18.27324676513672

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. 'n' → logprob: -14.125001907348633
    3. '2' → logprob: -14.375001907348633
    4. ' n' → logprob: -16.250001907348633
    5. 'um' → logprob: -17.125001907348633
    6. '<n' → logprob: -17.500001907348633
    7. '(n' → logprob: -17.625001907348633
    8. '```' → logprob: -18.125001907348633
    9. 'umber' → logprob: -18.250001907348633
    10. '[n' → logprob: -18.500001907348633

Token 168: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.004302407614886761
    2. '<' → logprob: -5.754302501678467
    3. ' >' → logprob: -6.879302501678467
    4. ' <=' → logprob: -10.254302024841309
    5. '>' → logprob: -10.754302024841309
    6. '<n' → logprob: -11.004302024841309
    7. ' ' → logprob: -11.754302024841309
    8. ' ' → logprob: -13.004302024841309
    9. '<num' → logprob: -13.504302024841309
    10. '<int' → logprob: -13.504302024841309

Token 169: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07892999798059464
    2. 'n' → logprob: -2.578929901123047
    3. ' ' → logprob: -10.453929901123047
    4. ' ' → logprob: -12.203929901123047
    5. '	n' → logprob: -13.453929901123047
    6. ',' → logprob: -14.203929901123047
    7. ' 
' → logprob: -14.703929901123047
    8. '(n' → logprob: -14.703929901123047
    9. '=n' → logprob: -14.703929901123047
    10. '<|end|>' → logprob: -14.828929901123047

Token 170: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.073596548754722e-05
    2. 'n' → logprob: -10.00005054473877
    3. ' n' → logprob: -13.37505054473877
    4. 'um' → logprob: -14.12505054473877
    5. ' ' → logprob: -14.25005054473877
    6. 'p' → logprob: -15.00005054473877
    7. 'o' → logprob: -15.12505054473877
    8. '1' → logprob: -15.12505054473877
    9. 'umber' → logprob: -15.12505054473877
    10. '   ' → logprob: -15.68755054473877

Token 171: ' numer' (ID: 9076)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: 'ically' (ID: 2905)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.17736747860908508
    2. 'ically' → logprob: -1.9273674488067627
    3. 'ical' → logprob: -4.802367687225342
    4. 'er' → logprob: -5.052367687225342
    5. 'umeric' → logprob: -7.052367687225342
    6. 'meric' → logprob: -7.177367687225342
    7. 'erc' → logprob: -8.427367210388184
    8. 'ber' → logprob: -8.927367210388184
    9. 'ric' → logprob: -10.052367210388184
    10. 'al' → logprob: -10.177367210388184

Token 173: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 174: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0009187239338643849
    2. 'else' → logprob: -7.125918865203857
    3. ' return' → logprob: -9.3759183883667
    4. ' n' → logprob: -11.0009183883667
    5. 'return' → logprob: -12.3759183883667
    6. ' ' → logprob: -13.2509183883667
    7. ',' → logprob: -13.6259183883667
    8. '        ' → logprob: -14.0009183883667
    9. ' 
' → logprob: -14.1259183883667
    10. ' True' → logprob: -14.2509183883667

Token 175: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.1269669532775879
    2. 'False' → logprob: -2.126966953277588
    3. ' n' → logprob: -10.37696647644043
    4. 'n' → logprob: -12.37696647644043
    5. ' str' → logprob: -13.62696647644043
    6. ' True' → logprob: -14.37696647644043
    7. '           ' → logprob: -14.75196647644043
    8. ' ' → logprob: -15.25196647644043
    9. '(False' → logprob: -15.25196647644043
    10. 'str' → logprob: -15.62696647644043

Token 176: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001064963056705892
    2. ' return' → logprob: -8.126065254211426
    3. ':' → logprob: -8.751065254211426
    4. '       ' → logprob: -9.001065254211426
    5. 'return' → logprob: -9.126065254211426
    6. ':
' → logprob: -9.376065254211426
    7. '   ' → logprob: -9.876065254211426
    8. '               ' → logprob: -9.876065254211426
    9. ',' → logprob: -10.126065254211426
    10. ':return' → logprob: -10.376065254211426

Token 177: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002403243212029338
    2. ' return' → logprob: -6.377403259277344
    3. 'return' → logprob: -7.877403259277344
    4. '       ' → logprob: -8.877403259277344
    5. '               ' → logprob: -10.127403259277344
    6. '   ' → logprob: -10.502403259277344
    7. ' ' → logprob: -10.627403259277344
    8. '          ' → logprob: -10.627403259277344
    9. '		' → logprob: -11.252403259277344
    10. ' ' → logprob: -11.627403259277344

Token 178: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.016208680346608162
    2. ' return' → logprob: -4.266208648681641
    3. '           ' → logprob: -6.266208648681641
    4. '       ' → logprob: -8.89120864868164
    5. '   ' → logprob: -12.76620864868164
    6. '	return' → logprob: -13.76620864868164
    7. '          ' → logprob: -14.14120864868164
    8. '         ' → logprob: -14.76620864868164
    9. '```' → logprob: -14.76620864868164
    10. '
' → logprob: -15.76620864868164

Token 179: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.033646389842033386
    2. 'n' → logprob: -3.40864634513855
    3. ' ' → logprob: -15.408646583557129
    4. '	n' → logprob: -15.908646583557129
    5. '(n' → logprob: -16.033645629882812
    6. ' ' → logprob: -16.408645629882812
    7. ' (' → logprob: -16.783645629882812
    8. '   ' → logprob: -17.408645629882812
    9. '(' → logprob: -18.658645629882812
    10. '1' → logprob: -19.096145629882812

Token 180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. 'um' → logprob: -12.87500286102295
    3. 'n' → logprob: -15.12500286102295
    4. '2' → logprob: -17.000003814697266
    5. '```' → logprob: -18.000003814697266
    6. 'umber' → logprob: -18.125003814697266
    7. ' ' → logprob: -18.375003814697266
    8. '   ' → logprob: -18.625003814697266
    9. '<n' → logprob: -18.625003814697266
    10. '<' → logprob: -19.125003814697266

Token 181: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.009759394451975822
    2. '<' → logprob: -4.634759426116943
    3. ' ' → logprob: -13.634758949279785
    4. '<n' → logprob: -13.759758949279785
    5. '<int' → logprob: -14.634758949279785
    6. '<num' → logprob: -15.134758949279785
    7. ' ' → logprob: -16.1347599029541
    8. '<p' → logprob: -16.5097599029541
    9. '[' → logprob: -16.7597599029541
    10. '<|end|>' → logprob: -17.5097599029541

Token 182: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02324792370200157
    2. ' n' → logprob: -3.7732479572296143
    3. ' ' → logprob: -14.273247718811035
    4. '   ' → logprob: -14.398247718811035
    5. '	n' → logprob: -14.398247718811035
    6. ' ' → logprob: -15.148247718811035
    7. '    ' → logprob: -15.773247718811035
    8. '2' → logprob: -15.773247718811035
    9. '  ' → logprob: -16.39824867248535
    10. '       ' → logprob: -17.39824867248535

Token 183: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.723352049040841e-06
    2. 'um' → logprob: -12.875004768371582
    3. 'o' → logprob: -14.000004768371582
    4. 'n' → logprob: -15.000004768371582
    5. '1' → logprob: -15.375004768371582
    6. 'u' → logprob: -15.500004768371582
    7. ' ' → logprob: -15.875004768371582
    8. 'umber' → logprob: -16.000003814697266
    9. '   ' → logprob: -16.250003814697266
    10. 'w' → logprob: -16.750003814697266

Token 184: '
        
' (ID: 20417)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 185: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30570346117019653
    2. '    
' → logprob: -1.4307034015655518
    3. '        
' → logprob: -4.055703639984131
    4. '       ' → logprob: -5.930703639984131
    5. '
' → logprob: -6.055703639984131
    6. 'def' → logprob: -7.555703639984131
    7. ' 
' → logprob: -8.055703163146973
    8. '    
    
' → logprob: -8.180703163146973
    9. '    ' → logprob: -8.555703163146973
    10. '            
' → logprob: -9.180703163146973

Token 186: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.030442899093031883
    2. 'def' → logprob: -3.905442953109741
    3. '   ' → logprob: -4.780442714691162
    4. '       ' → logprob: -7.155442714691162
    5. ' @' → logprob: -7.405442714691162
    6. '@property' → logprob: -11.15544319152832
    7. ' def' → logprob: -11.28044319152832
    8. '
' → logprob: -11.90544319152832
    9. '    
' → logprob: -12.15544319152832
    10. '        
' → logprob: -12.15544319152832

Token 187: 'classmethod' (ID: 64680)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.0005555360112339258
    2. 'classmethod' → logprob: -7.625555515289307
    3. 'dat' → logprob: -10.500555992126465
    4. 'static' → logprob: -10.625555992126465
    5. 'property' → logprob: -11.125555992126465
    6. '@' → logprob: -15.750555992126465
    7. 'Static' → logprob: -15.750555992126465
    8. 'class' → logprob: -16.12555503845215
    9. ' static' → logprob: -16.62555503845215
    10. 'Lex' → logprob: -16.75055503845215

Token 188: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36246591806411743
    2. '       ' → logprob: -1.4874658584594727
    3. ' def' → logprob: -2.7374658584594727
    4. '   ' → logprob: -4.487465858459473
    5. '
' → logprob: -6.237465858459473
    6. '    ' → logprob: -10.362465858459473
    7. '           ' → logprob: -10.862465858459473
    8. '	def' → logprob: -10.862465858459473
    9. '  ' → logprob: -11.362465858459473
    10. '        
' → logprob: -11.487465858459473

Token 189: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.514961302280426
    2. ' def' → logprob: -1.2649612426757812
    3. '       ' → logprob: -2.3899612426757812
    4. '   ' → logprob: -4.139961242675781
    5. '
' → logprob: -4.389961242675781
    6. '        
' → logprob: -9.264961242675781
    7. '    
' → logprob: -10.014961242675781
    8. '	def' → logprob: -10.389961242675781
    9. '    ' → logprob: -10.514961242675781
    10. '```' → logprob: -10.889961242675781

Token 190: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0019355426775291562
    2. ' def' → logprob: -6.2519354820251465
    3. '   ' → logprob: -12.251935958862305
    4. '       ' → logprob: -13.126935958862305
    5. '
' → logprob: -16.376935958862305
    6. ' ' → logprob: -17.126935958862305
    7. '  ' → logprob: -17.251935958862305
    8. '	def' → logprob: -17.501935958862305
    9. 'd' → logprob: -18.126935958862305
    10. 'compare' → logprob: -19.876935958862305

Token 191: ' is' (ID: 382)
  Prédit: 'compare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compare' → logprob: -0.7291732430458069
    2. ' compare' → logprob: -0.9791732430458069
    3. 'sort' → logprob: -3.604173183441162
    4. ' sort' → logprob: -3.854173183441162
    5. ' get' → logprob: -4.229173183441162
    6. 'def' → logprob: -4.354173183441162
    7. ' key' → logprob: -4.479173183441162
    8. ' def' → logprob: -4.729173183441162
    9. 'get' → logprob: -4.979173183441162
    10. 'key' → logprob: -5.104173183441162

Token 192: '_conf' (ID: 39390)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0005968777113594115
    2. '_less' → logprob: -8.50059700012207
    3. ' lex' → logprob: -9.37559700012207
    4. '_numeric' → logprob: -9.50059700012207
    5. ' _' → logprob: -9.62559700012207
    6. ' lexi' → logprob: -10.00059700012207
    7. '_sorted' → logprob: -10.75059700012207
    8. '_le' → logprob: -10.75059700012207
    9. 'lex' → logprob: -11.12559700012207
    10. '_str' → logprob: -11.25059700012207

Token 193: 'lict' (ID: 38585)
  Prédit: 'lict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lict' → logprob: -0.0668594166636467
    2. 'licted' → logprob: -3.566859483718872
    3. 'ict' → logprob: -4.566859245300293
    4. 'l' → logprob: -4.816859245300293
    5. 'lic' → logprob: -4.816859245300293
    6. 'licting' → logprob: -5.191859245300293
    7. 'li' → logprob: -6.566859245300293
    8. 'orm' → logprob: -7.816859245300293
    9. 'liet' → logprob: -8.191859245300293
    10. '```' → logprob: -8.191859245300293

Token 194: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.00024370834580622613
    2. '(' → logprob: -8.500244140625
    3. '(self' → logprob: -10.500244140625
    4. '(
' → logprob: -12.000244140625
    5. '(c' → logprob: -12.875244140625
    6. '(lhs' → logprob: -14.375244140625
    7. '(class' → logprob: -14.500244140625
    8. '(cl' → logprob: -14.625244140625
    9. '(clazz' → logprob: -14.625244140625
    10. '(a' → logprob: -14.750244140625

Token 195: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.41200870275497437
    2. '(cls' → logprob: -1.1620087623596191
    3. ')(' → logprob: -4.037008762359619
    4. ',' → logprob: -5.662008762359619
    5. '(' → logprob: -6.162008762359619
    6. ' (' → logprob: -7.537008762359619
    7. '(self' → logprob: -8.037008285522461
    8. '(a' → logprob: -8.662008285522461
    9. ')' → logprob: -8.912008285522461
    10. ')(
' → logprob: -9.287008285522461

Token 196: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0705551728606224
    2. 'num' → logprob: -3.5705552101135254
    3. ' n' → logprob: -3.6955552101135254
    4. 'str' → logprob: -5.445555210113525
    5. 's' → logprob: -5.445555210113525
    6. 'a' → logprob: -5.570555210113525
    7. 'x' → logprob: -7.320555210113525
    8. ' num' → logprob: -7.820555210113525
    9. ' s' → logprob: -8.070554733276367
    10. 'val' → logprob: -8.445554733276367

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. '_' → logprob: -13.500004768371582
    3. ' ' → logprob: -14.125004768371582
    4. '2' → logprob: -14.250004768371582
    5. '   ' → logprob: -14.375004768371582
    6. ',' → logprob: -14.937504768371582
    7. ')' → logprob: -15.562504768371582
    8. '```' → logprob: -15.812504768371582
    9. '
' → logprob: -16.187503814697266
    10. 'umber' → logprob: -16.625003814697266

Token 198: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012110481970012188
    2. ':' → logprob: -4.512110710144043
    3. ' ,' → logprob: -7.262110710144043
    4. ',n' → logprob: -8.012110710144043
    5. ':int' → logprob: -10.762110710144043
    6. ',int' → logprob: -13.387110710144043
    7. ' :' → logprob: -13.512110710144043
    8. ':,' → logprob: -13.512110710144043
    9. ',
' → logprob: -14.137110710144043
    10. '   ' → logprob: -14.137110710144043

Token 199: ' int' (ID: 677)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0824854373931885
    2. ' n' → logprob: -1.0824854373931885
    3. 'int' → logprob: -1.3324854373931885
    4. ' int' → logprob: -2.9574854373931885
    5. ',' → logprob: -5.207485198974609
    6. ':int' → logprob: -7.207485198974609
    7. ',int' → logprob: -8.58248519897461
    8. ' ,' → logprob: -9.20748519897461
    9. ' ' → logprob: -10.33248519897461
    10. ':' → logprob: -10.58248519897461

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002811199810821563
    2. ',n' → logprob: -8.87528133392334
    3. ' ,' → logprob: -8.87528133392334
    4. ',
' → logprob: -13.75028133392334
    5. 'n' → logprob: -16.375280380249023
    6. '‌,' → logprob: -16.625280380249023
    7. ',

' → logprob: -17.000280380249023
    8. ',int' → logprob: -17.125280380249023
    9. ')' → logprob: -17.750280380249023
    10. ':' → logprob: -17.750280380249023

Token 201: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2519381642341614
    2. 'n' → logprob: -1.5019381046295166
    3. '    ' → logprob: -12.626937866210938
    4. '        ' → logprob: -13.126937866210938
    5. ' ' → logprob: -14.001937866210938
    6. '       ' → logprob: -14.251937866210938
    7. '	n' → logprob: -14.501937866210938
    8. '   ' → logprob: -14.876937866210938
    9. ' ' → logprob: -14.876937866210938
    10. '            ' → logprob: -15.376937866210938

Token 202: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003902775060851127
    2. ',' → logprob: -7.87539005279541
    3. ' ,' → logprob: -12.12539005279541
    4. ' ' → logprob: -13.25039005279541
    5. '   ' → logprob: -14.00039005279541
    6. '₂' → logprob: -14.75039005279541
    7. 'n' → logprob: -15.12539005279541
    8. ')' → logprob: -15.25039005279541
    9. '_' → logprob: -15.25039005279541
    10. '1' → logprob: -15.62539005279541

Token 203: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07443773001432419
    2. '):' → logprob: -2.9494376182556152
    3. ':' → logprob: -4.074437618255615
    4. '):
' → logprob: -6.699437618255615
    5. ',' → logprob: -7.324437618255615
    6. ' )' → logprob: -7.824437618255615
    7. ' ):' → logprob: -10.824438095092773
    8. '   ' → logprob: -11.199438095092773
    9. ')->' → logprob: -11.824438095092773
    10. '):

' → logprob: -12.199438095092773

Token 204: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16157759726047516
    2. ' int' → logprob: -1.911577582359314
    3. ')' → logprob: -6.6615777015686035
    4. 'n' → logprob: -10.911577224731445
    5. '[int' → logprob: -11.411577224731445
    6. ' ' → logprob: -11.786577224731445
    7. ':int' → logprob: -11.786577224731445
    8. ' )' → logprob: -11.786577224731445
    9. '):
' → logprob: -12.661577224731445
    10. 'bool' → logprob: -12.911577224731445

Token 205: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005521982675418258
    2. '):' → logprob: -8.2505521774292
    3. '):
' → logprob: -8.5005521774292
    4. ' )' → logprob: -9.5005521774292
    5. ',' → logprob: -12.0005521774292
    6. '   ' → logprob: -12.7505521774292
    7. ')->' → logprob: -14.0005521774292
    8. '):

' → logprob: -14.3755521774292
    9. ':' → logprob: -14.6255521774292
    10. '):
' → logprob: -15.1255521774292

Token 206: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1643993854522705
    2. ')' → logprob: -1.9143993854522705
    3. '):' → logprob: -6.164399147033691
    4. ')->' → logprob: -7.039399147033691
    5. '->' → logprob: -7.539399147033691
    6. ' ->' → logprob: -7.914399147033691
    7. ':
' → logprob: -8.914399147033691
    8. '   ' → logprob: -10.539399147033691
    9. ' :' → logprob: -10.539399147033691
    10. ',' → logprob: -10.664399147033691

Token 207: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.055034391582012177
    2. 'bool' → logprob: -2.9300343990325928
    3. ')' → logprob: -8.930034637451172
    4. ' int' → logprob: -12.555034637451172
    5. '(bool' → logprob: -12.930034637451172
    6. '	bool' → logprob: -13.180034637451172
    7. '<bool' → logprob: -13.305034637451172
    8. '.bool' → logprob: -13.680034637451172
    9. '   ' → logprob: -13.805034637451172
    10. ' ' → logprob: -13.805034637451172

Token 208: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006159742828458548
    2. ':
' → logprob: -5.631159782409668
    3. '):' → logprob: -6.506159782409668
    4. '       ' → logprob: -7.131159782409668
    5. ')' → logprob: -9.381159782409668
    6. '):
' → logprob: -9.881159782409668
    7. ',' → logprob: -10.631159782409668
    8. '<|end|>' → logprob: -10.881159782409668
    9. ':**' → logprob: -11.131159782409668
    10. ':return' → logprob: -11.256159782409668

Token 209: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026767258532345295
    2. '<|end|>' → logprob: -6.252676963806152
    3. ' return' → logprob: -9.002676963806152
    4. '   ' → logprob: -9.002676963806152
    5. '           ' → logprob: -9.127676963806152
    6. '        
' → logprob: -10.002676963806152
    7. '        ' → logprob: -10.127676963806152
    8. ')' → logprob: -10.252676963806152
    9. ',' → logprob: -10.252676963806152
    10. '<|end|>' → logprob: -10.377676963806152

Token 210: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.653992772102356
    2. '           ' → logprob: -0.903992772102356
    3. 'return' → logprob: -2.6539926528930664
    4. '       ' → logprob: -6.653992652893066
    5. ' num' → logprob: -7.028992652893066
    6. 'num' → logprob: -7.028992652893066
    7. ' n' → logprob: -7.778992652893066
    8. '               ' → logprob: -8.528992652893066
    9. ' s' → logprob: -8.778992652893066
    10. '   ' → logprob: -9.028992652893066

Token 211: ' There' (ID: 3274)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1407930701971054
    2. 'num' → logprob: -2.3907930850982666
    3. 'str' → logprob: -4.1407928466796875
    4. ' return' → logprob: -4.8907928466796875
    5. 'lex' → logprob: -5.7657928466796875
    6. 's' → logprob: -6.0157928466796875
    7. '       ' → logprob: -6.3907928466796875
    8. '#' → logprob: -6.3907928466796875
    9. 'if' → logprob: -6.6407928466796875
    10. 'numer' → logprob: -7.0157928466796875

Token 212: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.714384138584137
    2. ' return' → logprob: -1.7143840789794922
    3. '           ' → logprob: -2.339384078979492
    4. 'return' → logprob: -2.589384078979492
    5. ' is' → logprob: -2.714384078979492
    6. '   ' → logprob: -2.714384078979492
    7. ' if' → logprob: -5.589384078979492
    8. ' are' → logprob: -5.839384078979492
    9. '    ' → logprob: -5.964384078979492
    10. 'is' → logprob: -6.339384078979492

Token 213: ' conflict' (ID: 21461)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.10285139828920364
    2. ' not' → logprob: -3.227851390838623
    3. ' n' → logprob: -3.977851390838623
    4. 'n' → logprob: -4.477851390838623
    5. 'a' → logprob: -5.102851390838623
    6. ' (' → logprob: -5.352851390838623
    7. ' str' → logprob: -5.477851390838623
    8. ' return' → logprob: -6.102851390838623
    9. ' no' → logprob: -6.102851390838623
    10. '(n' → logprob: -6.352851390838623

Token 214: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.022251246497035027
    2. '       ' → logprob: -5.022251129150391
    3. ':' → logprob: -5.522251129150391
    4. ' when' → logprob: -5.772251129150391
    5. '           ' → logprob: -5.897251129150391
    6. '<|end|>' → logprob: -6.522251129150391
    7. ',' → logprob: -7.147251129150391
    8. ' and' → logprob: -7.522251129150391
    9. 'if' → logprob: -7.522251129150391
    10. ' return' → logprob: -7.772251129150391

Token 215: ' relative' (ID: 15001)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.18197430670261383
    2. '(cls' → logprob: -2.681974411010742
    3. 'not' → logprob: -2.931974411010742
    4. 'str' → logprob: -3.681974411010742
    5. ' cls' → logprob: -4.431974411010742
    6. ' not' → logprob: -5.431974411010742
    7. '(str' → logprob: -6.556974411010742
    8. '(not' → logprob: -7.056974411010742
    9. ' str' → logprob: -7.556974411010742
    10. ' (' → logprob: -8.681974411010742

Token 216: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.07289446890354156
    2. 'order' → logprob: -2.94789457321167
    3. ' ordering' → logprob: -4.32289457321167
    4. 'ordering' → logprob: -6.07289457321167
    5. '_order' → logprob: -6.44789457321167
    6. 'position' → logprob: -9.322894096374512
    7. ' comparison' → logprob: -9.697894096374512
    8. 'str' → logprob: -9.822894096374512
    9. '_str' → logprob: -9.947894096374512
    10. '_' → logprob: -10.072894096374512

Token 217: 'ings' (ID: 963)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.8114974498748779
    2. ' of' → logprob: -1.061497449874878
    3. ' is' → logprob: -2.186497449874878
    4. ' differs' → logprob: -3.061497449874878
    5. '(cls' → logprob: -3.936497449874878
    6. 'diff' → logprob: -5.936497688293457
    7. ' not' → logprob: -6.061497688293457
    8. ' !=' → logprob: -6.061497688293457
    9. ' between' → logprob: -6.186497688293457
    10. ' changes' → logprob: -6.186497688293457

Token 218: ' numeric' (ID: 52077)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.7457492351531982
    2. ' differ' → logprob: -1.6207492351531982
    3. '(n' → logprob: -1.8707492351531982
    4. ' of' → logprob: -2.9957492351531982
    5. ' !=' → logprob: -2.9957492351531982
    6. '(cls' → logprob: -4.370749473571777
    7. ' different' → logprob: -4.995749473571777
    8. ' (' → logprob: -5.245749473571777
    9. '<|end|>' → logprob: -5.245749473571777
    10. ' =' → logprob: -5.495749473571777

Token 219: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1988428831100464
    2. 'and' → logprob: -2.323843002319336
    3. 'ly' → logprob: -3.198843002319336
    4. ' !=' → logprob: -3.573843002319336
    5. '!=' → logprob: -4.823843002319336
    6. ' <' → logprob: -6.573843002319336
    7. '<' → logprob: -7.323843002319336
    8. '()!=' → logprob: -7.448843002319336
    9. ' ' → logprob: -8.073843002319336
    10. 'y' → logprob: -8.073843002319336

Token 220: ' lex' (ID: 37772)
  Prédit: ' lex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lex' → logprob: -0.5641661882400513
    2. 'lex' → logprob: -1.1891661882400513
    3. ' str' → logprob: -2.8141660690307617
    4. 'str' → logprob: -3.8141660690307617
    5. ' lexi' → logprob: -4.064166069030762
    6. ' lexical' → logprob: -4.314166069030762
    7. ' not' → logprob: -5.189166069030762
    8. ' string' → logprob: -5.689166069030762
    9. ' le' → logprob: -6.439166069030762
    10. 'string' → logprob: -6.939166069030762

Token 221: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.0022673013154417276
    2. '(n' → logprob: -7.127267360687256
    3. 'n' → logprob: -7.377267360687256
    4. '<n' → logprob: -9.002266883850098
    5. '>' → logprob: -9.377266883850098
    6. 'i' → logprob: -9.502266883850098
    7. 'ical' → logprob: -9.502266883850098
    8. '1' → logprob: -9.627266883850098
    9. 'ically' → logprob: -10.002266883850098
    10. '   ' → logprob: -10.127266883850098

Token 222: 'ographic' (ID: 19045)
  Prédit: 'ographically'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ographically' → logprob: -0.299634724855423
    2. 'ographical' → logprob: -1.5496346950531006
    3. 'ographic' → logprob: -3.1746346950531006
    4. 'og' → logprob: -6.42463493347168
    5. 'ograph' → logprob: -6.67463493347168
    6. 'o' → logprob: -7.54963493347168
    7. 'ally' → logprob: -7.92463493347168
    8. 'ograp' → logprob: -8.67463493347168
    9. 'graph' → logprob: -8.79963493347168
    10. 'al' → logprob: -9.42463493347168

Token 223: ' differ' (ID: 2171)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.4396549463272095
    2. ' differ' → logprob: -1.1896549463272095
    3. ' !=' → logprob: -3.93965482711792
    4. 'are' → logprob: -4.68965482711792
    5. 'd' → logprob: -5.81465482711792
    6. ' do' → logprob: -5.93965482711792
    7. '!=' → logprob: -6.06465482711792
    8. ':' → logprob: -6.43965482711792
    9. ')' → logprob: -6.43965482711792
    10. ' order' → logprob: -6.56465482711792

Token 224: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6560563445091248
    2. '           ' → logprob: -1.0310564041137695
    3. ':' → logprob: -2.2810564041137695
    4. '(' → logprob: -5.5310564041137695
    5. '               ' → logprob: -5.5310564041137695
    6. '   ' → logprob: -6.0310564041137695
    7. ':
' → logprob: -6.2810564041137695
    8. ' return' → logprob: -6.4060564041137695
    9. ',' → logprob: -6.5310564041137695
    10. '():' → logprob: -6.9060564041137695

Token 225: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.530702531337738
    2. '       ' → logprob: -1.1557025909423828
    3. ':' → logprob: -3.280702590942383
    4. '(' → logprob: -4.155702590942383
    5. '   ' → logprob: -4.905702590942383
    6. ',' → logprob: -5.155702590942383
    7. ')' → logprob: -5.280702590942383
    8. ':
' → logprob: -5.655702590942383
    9. '               ' → logprob: -5.780702590942383
    10. ' (' → logprob: -6.030702590942383

Token 226: ' numeric' (ID: 52077)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7542591094970703
    2. ' return' → logprob: -0.8792591094970703
    3. '           ' → logprob: -2.3792591094970703
    4. ' numeric' → logprob: -4.87925910949707
    5. 'num' → logprob: -5.00425910949707
    6. '       ' → logprob: -5.87925910949707
    7. 'numeric' (adapté à ' numeric') → logprob: -6.00425910949707
    8. ' num' → logprob: -6.62925910949707
    9. '   ' → logprob: -7.87925910949707
    10. 'numer' → logprob: -7.87925910949707

Token 227: '_less' (ID: 154196)
  Prédit: '_order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.00926569290459156
    2. ' =' → logprob: -5.384265899658203
    3. '_less' → logprob: -6.134265899658203
    4. '_result' → logprob: -6.884265899658203
    5. '_' → logprob: -7.384265899658203
    6. '=' → logprob: -7.884265899658203
    7. '_lt' → logprob: -9.134265899658203
    8. 'order' → logprob: -9.384265899658203
    9. '(n' → logprob: -10.134265899658203
    10. '(order' → logprob: -10.634265899658203

Token 228: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10389085859060287
    2. ' =' → logprob: -2.603890895843506
    3. '_than' → logprob: -3.978890895843506
    4. '(n' → logprob: -5.978890895843506
    5. '=n' → logprob: -6.103890895843506
    6. '=True' → logprob: -7.978890895843506
    7. ' than' → logprob: -8.478890419006348
    8. '=(' → logprob: -8.978890419006348
    9. '=int' → logprob: -9.603890419006348
    10. 'than' → logprob: -9.603890419006348

Token 229: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.47502991557121277
    2. ' cls' → logprob: -0.9750299453735352
    3. '(cls' → logprob: -7.725029945373535
    4. ' n' → logprob: -8.225029945373535
    5. 'n' → logprob: -8.350029945373535
    6. ' (' → logprob: -13.350029945373535
    7. '(n' → logprob: -13.850029945373535
    8. 'cl' → logprob: -14.100029945373535
    9. 'str' → logprob: -14.350029945373535
    10. 'Cls' → logprob: -14.975029945373535

Token 230: '.compare' (ID: 35829)
  Prédit: '.compare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compare' → logprob: -2.0100624169572257e-05
    2. '.' → logprob: -11.375020027160645
    3. 'compare' → logprob: -11.750020027160645
    4. ' .' → logprob: -14.375020027160645
    5. '.com' → logprob: -17.87502098083496
    6. '>.' → logprob: -18.00002098083496
    7. '(compare' → logprob: -18.00002098083496
    8. ' compare' → logprob: -18.62502098083496
    9. '.Compare' → logprob: -19.00002098083496
    10. '.evaluate' → logprob: -19.00002098083496

Token 231: '_numeric' (ID: 75954)
  Prédit: '_numeric'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numeric' → logprob: -0.2816063165664673
    2. '_num' → logprob: -1.4066063165664673
    3. '_n' → logprob: -8.656606674194336
    4. '_' → logprob: -9.406606674194336
    5. 'numeric' → logprob: -9.656606674194336
    6. ' _' → logprob: -9.906606674194336
    7. '-_' → logprob: -10.906606674194336
    8. '
' → logprob: -11.156606674194336
    9. '-' → logprob: -12.281606674194336
    10. ' numeric' → logprob: -12.406606674194336

Token 232: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.750001907348633
    3. ' (' → logprob: -14.875001907348633
    4. '(
' → logprob: -17.250001907348633
    5. '
' → logprob: -19.375001907348633
    6. ')(' → logprob: -20.000001907348633
    7. '(num' → logprob: -20.250001907348633
    8. '

' → logprob: -20.500001907348633
    9. '((' → logprob: -20.875001907348633
    10. ')' → logprob: -21.125001907348633

Token 233: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.41866585687967e-06
    2. 'um' → logprob: -12.500008583068848
    3. '2' → logprob: -13.125008583068848
    4. 'umber' → logprob: -14.250008583068848
    5. 'umbers' → logprob: -15.187508583068848
    6. 'n' → logprob: -15.250008583068848
    7. 'm' → logprob: -15.375008583068848
    8. ' ' → logprob: -15.687508583068848
    9. 'umer' → logprob: -15.687508583068848
    10. ',' → logprob: -15.812508583068848

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00477068405598402
    2. ',n' → logprob: -5.629770755767822
    3. ' ,' → logprob: -6.754770755767822
    4. 'n' → logprob: -13.879770278930664
    5. ',
' → logprob: -13.879770278930664
    6. '<n' → logprob: -14.629770278930664
    7. ')' → logprob: -14.754770278930664
    8. ' n' → logprob: -14.754770278930664
    9. '(n' → logprob: -15.254770278930664
    10. '   ' → logprob: -15.379770278930664

Token 235: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009759158827364445
    2. ' n' → logprob: -4.634758949279785
    3. '   ' → logprob: -13.759758949279785
    4. '       ' → logprob: -14.134758949279785
    5. '           ' → logprob: -14.634758949279785
    6. '	n' → logprob: -14.759758949279785
    7. '    ' → logprob: -15.884758949279785
    8. ' ' → logprob: -16.1347599029541
    9. ')' → logprob: -16.6347599029541
    10. '     ' → logprob: -17.0097599029541

Token 236: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.87500286102295
    3. ')' → logprob: -14.37500286102295
    4. '   ' → logprob: -14.62500286102295
    5. '```' → logprob: -15.50000286102295
    6. '1' → logprob: -15.62500286102295
    7. 'u' → logprob: -16.937501907348633
    8. '  ' → logprob: -17.437501907348633
    9. 'o' → logprob: -17.500001907348633
    10. '
' → logprob: -17.875001907348633

Token 237: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07116784155368805
    2. ')
' → logprob: -2.6961679458618164
    3. ' )' → logprob: -7.071167945861816
    4. ' )
' → logprob: -8.196167945861816
    5. ')!=' → logprob: -9.571167945861816
    6. ',' → logprob: -11.321167945861816
    7. '!=' → logprob: -12.071167945861816
    8. ')

' → logprob: -12.196167945861816
    9. ' !=' → logprob: -12.446167945861816
    10. ')
' → logprob: -12.446167945861816

Token 238: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1439507007598877
    2. ' lex' → logprob: -3.0189507007598877
    3. ' and' → logprob: -3.5189507007598877
    4. '
' → logprob: -3.8939507007598877
    5. '       ' → logprob: -4.768950462341309
    6. ' if' → logprob: -5.518950462341309
    7. ' lexical' → logprob: -5.768950462341309
    8. ' or' → logprob: -5.768950462341309
    9. ' xor' → logprob: -5.893950462341309
    10. '   ' → logprob: -6.518950462341309

Token 239: ' lex' (ID: 37772)
  Prédit: 'lex'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lex' (adapté à ' lex') → logprob: -0.39933568239212036
    2. ' lex' → logprob: -1.1493356227874756
    3. ' lexi' → logprob: -4.899335861206055
    4. ' lexical' → logprob: -5.774335861206055
    5. ' le' → logprob: -6.649335861206055
    6. ' numeric' → logprob: -8.649335861206055
    7. 'numeric' → logprob: -9.524335861206055
    8. '   ' → logprob: -9.774335861206055
    9. '       ' → logprob: -9.899335861206055
    10. '```' → logprob: -10.399335861206055

Token 240: '_less' (ID: 154196)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.8372092843055725
    2. '_less' → logprob: -0.8372092843055725
    3. 'ico' → logprob: -2.2122092247009277
    4. 'o' → logprob: -3.9622092247009277
    5. '=' → logprob: -6.587209224700928
    6. ' =' → logprob: -6.712209224700928
    7. 'less' → logprob: -7.337209224700928
    8. 'ical' → logprob: -8.087209701538086
    9. '_' → logprob: -8.337209701538086
    10. 'icom' → logprob: -8.587209701538086

Token 241: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889540493488312
    2. '=' → logprob: -2.578895330429077
    3. '           ' → logprob: -13.328895568847656
    4. ' ' → logprob: -13.578895568847656
    5. '        ' → logprob: -13.828895568847656
    6. '       ' → logprob: -14.953895568847656
    7. '    ' → logprob: -14.953895568847656
    8. '            ' → logprob: -15.703895568847656
    9. ',' → logprob: -15.953895568847656
    10. '<|end|>' → logprob: -16.078895568847656

Token 242: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.2519368827342987
    2. ' cls' → logprob: -1.501936912536621
    3. '(cls' → logprob: -12.126936912536621
    4. '           ' → logprob: -13.376936912536621
    5. '.cls' → logprob: -15.126936912536621
    6. 'str' → logprob: -15.251936912536621
    7. 'Cls' → logprob: -15.751936912536621
    8. ' str' → logprob: -16.751935958862305
    9. '_cls' → logprob: -17.501935958862305
    10. 'classmethod' → logprob: -17.501935958862305

Token 243: '.compare' (ID: 35829)
  Prédit: '.compare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compare' → logprob: -0.0011743901995941997
    2. 'compare' → logprob: -6.751174449920654
    3. '.' → logprob: -13.001173973083496
    4. '(compare' → logprob: -14.001173973083496
    5. ' .' → logprob: -14.876173973083496
    6. ' compare' → logprob: -15.876173973083496
    7. '...' → logprob: -17.126174926757812
    8. '.str' → logprob: -17.126174926757812
    9. 'str' → logprob: -17.126174926757812
    10. 'Lex' → logprob: -17.251174926757812

Token 244: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.000432695698691532
    2. 'num' → logprob: -8.250432968139648
    3. '_str' → logprob: -8.750432968139648
    4. 'str' → logprob: -11.750432968139648
    5. 'Num' → logprob: -14.000432968139648
    6. 'string' → logprob: -14.250432968139648
    7. 'lex' → logprob: -14.500432968139648
    8. '_' → logprob: -14.750432968139648
    9. 'al' → logprob: -15.375432968139648
    10. '[num' → logprob: -15.625432968139648

Token 245: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.00014334988372866064
    2. 'str' → logprob: -8.875143051147461
    3. '_' → logprob: -14.000143051147461
    4. 'ber' → logprob: -14.375143051147461
    5. 'Str' → logprob: -14.500143051147461
    6. 'er' → logprob: -15.500143051147461
    7. '1' → logprob: -15.750143051147461
    8. '-str' → logprob: -15.875143051147461
    9. '	str' → logprob: -16.12514305114746
    10. '_st' → logprob: -16.12514305114746

Token 246: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0003335585934109986
    2. 'lex' → logprob: -8.125333786010742
    3. 'ex' → logprob: -10.875333786010742
    4. 'ing' → logprob: -11.375333786010742
    5. 'ic' → logprob: -12.875333786010742
    6. 'ec' → logprob: -13.375333786010742
    7. 'e' → logprob: -15.000333786010742
    8. '-' → logprob: -15.125333786010742
    9. '_str' → logprob: -15.125333786010742
    10. 'Lex' → logprob: -15.375333786010742

Token 247: 'lex' (ID: 3179)
  Prédit: 'lex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lex' → logprob: -0.0006251106387935579
    2. 'ex' → logprob: -7.500625133514404
    3. 'str' → logprob: -9.875624656677246
    4. ' lex' → logprob: -11.375624656677246
    5. 'x' → logprob: -13.125624656677246
    6. 'Lex' → logprob: -13.250624656677246
    7. 'exp' → logprob: -13.500624656677246
    8. '1' → logprob: -14.375624656677246
    9. 'hex' → logprob: -14.750624656677246
    10. '```' → logprob: -14.875624656677246

Token 248: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -13.12500286102295
    3. ' (' → logprob: -14.75000286102295
    4. '(
' → logprob: -16.500001907348633
    5. '1' → logprob: -17.625001907348633
    6. '(num' → logprob: -18.000001907348633
    7. '       ' → logprob: -18.250001907348633
    8. ' ' → logprob: -18.375001907348633
    9. 'lex' → logprob: -18.500001907348633
    10. ')' → logprob: -18.500001907348633

Token 249: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '2' → logprob: -16.25
    3. ')' → logprob: -16.625
    4. ',' → logprob: -17.3125
    5. ' ' → logprob: -17.3125
    6. '   ' → logprob: -17.375
    7. '１' → logprob: -18.75
    8. '१' → logprob: -18.875
    9. '۱' → logprob: -18.875
    10. '১' → logprob: -19.0

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013114932924509048
    2. ',n' → logprob: -4.388114929199219
    3. ' ,' → logprob: -8.138114929199219
    4. '(n' → logprob: -8.263114929199219
    5. 'n' → logprob: -10.138114929199219
    6. ')' → logprob: -12.513114929199219
    7. ',
' → logprob: -12.513114929199219
    8. '           ' → logprob: -13.263114929199219
    9. ' n' → logprob: -13.263114929199219
    10. '   ' → logprob: -13.513114929199219

Token 251: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006720705423504114
    2. ' n' → logprob: -5.006720542907715
    3. '   ' → logprob: -13.131720542907715
    4. '       ' → logprob: -13.131720542907715
    5. '           ' → logprob: -14.381720542907715
    6. '
' → logprob: -15.631720542907715
    7. '	n' → logprob: -15.631720542907715
    8. '    ' → logprob: -15.756720542907715
    9. ')' → logprob: -16.13172149658203
    10. '2' → logprob: -16.38172149658203

Token 252: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.77627644513268e-06
    2. ' ' → logprob: -11.875008583068848
    3. '1' → logprob: -14.625008583068848
    4. ')' → logprob: -14.625008583068848
    5. '   ' → logprob: -14.750008583068848
    6. '```' → logprob: -16.625009536743164
    7. '       ' → logprob: -17.125009536743164
    8. '
' → logprob: -17.687509536743164
    9. 's' → logprob: -17.812509536743164
    10. ',' → logprob: -17.812509536743164

Token 253: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020776262506842613
    2. ')
' → logprob: -3.8957762718200684
    3. '           ' → logprob: -8.64577579498291
    4. ' )' → logprob: -10.02077579498291
    5. ')
' → logprob: -12.89577579498291
    6. ')==' → logprob: -13.02077579498291
    7. ' )
' → logprob: -13.02077579498291
    8. '       ' → logprob: -13.39577579498291
    9. ')return' → logprob: -13.52077579498291
    10. ')

' → logprob: -14.14577579498291

Token 254: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3755243420600891
    2. '           ' → logprob: -1.2505242824554443
    3. '   ' → logprob: -3.8755242824554443
    4. ' return' → logprob: -5.500524520874023
    5. 'return' → logprob: -6.750524520874023
    6. '	return' → logprob: -8.000524520874023
    7. '	' → logprob: -9.125524520874023
    8. '
' → logprob: -9.625524520874023
    9. '		' → logprob: -10.250524520874023
    10. '    
' → logprob: -10.500524520874023

Token 255: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5253056883811951
    2. 'return' (adapté à ' return') → logprob: -1.0253057479858398
    3. '       ' → logprob: -3.52530574798584
    4. ' return' → logprob: -4.27530574798584
    5. '   ' → logprob: -5.02530574798584
    6. '	return' → logprob: -11.65030574798584
    7. '
' → logprob: -12.90030574798584
    8. ' ' → logprob: -13.77530574798584
    9. '     ' → logprob: -13.90030574798584
    10. '          ' → logprob: -14.02530574798584

Token 256: ' numeric' (ID: 52077)
  Prédit: ' numeric'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numeric' → logprob: -0.22710372507572174
    2. 'numeric' → logprob: -1.6021037101745605
    3. '(n' → logprob: -6.4771037101745605
    4. ' (' → logprob: -9.227104187011719
    5. '(' → logprob: -10.602104187011719
    6. 'n' → logprob: -11.477104187011719
    7. ' ' → logprob: -12.727104187011719
    8. ' ' → logprob: -12.977104187011719
    9. 'numer' → logprob: -12.977104187011719
    10. '.numeric' → logprob: -13.102104187011719

Token 257: '_less' (ID: 154196)
  Prédit: '_less'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_less' → logprob: -6.392202976712724e-06
    2. 'less' → logprob: -12.000006675720215
    3. '_' → logprob: -16.5000057220459
    4. 'Less' → logprob: -18.2500057220459
    5. '_l' → logprob: -18.8750057220459
    6. '```' → logprob: -19.3750057220459
    7. '-less' → logprob: -19.5000057220459
    8. ' less' → logprob: -20.0000057220459
    9. '<' → logprob: -20.2500057220459
    10. '
' → logprob: -21.0000057220459

Token 258: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.06198897212743759
    2. ' !=' → logprob: -2.8119890689849854
    3. ')!=' → logprob: -11.186988830566406
    4. '()!=' → logprob: -12.436988830566406
    5. ')' → logprob: -13.436988830566406
    6. '!=(' → logprob: -14.436988830566406
    7. 'is' → logprob: -15.436988830566406
    8. 'and' → logprob: -15.436988830566406
    9. '^' → logprob: -15.561988830566406
    10. '!==' → logprob: -15.561988830566406

Token 259: ' lex' (ID: 37772)
  Prédit: 'lex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lex' → logprob: -0.004078758880496025
    2. ' lex' → logprob: -5.5040788650512695
    3. '   ' → logprob: -16.129077911376953
    4. ' ' → logprob: -16.629077911376953
    5. '```' → logprob: -17.504077911376953
    6. '.lex' → logprob: -17.504077911376953
    7. ' lexi' → logprob: -17.879077911376953
    8. 'lic' → logprob: -18.129077911376953
    9. '       ' → logprob: -18.129077911376953
    10. 'Lex' → logprob: -18.254077911376953

Token 260: '_less' (ID: 154196)
  Prédit: '_less'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_less' → logprob: -0.003219422185793519
    2. 'ess' → logprob: -5.7532196044921875
    3. 'ex' → logprob: -11.128219604492188
    4. 'less' → logprob: -11.753219604492188
    5. 'x' → logprob: -12.128219604492188
    6. '_' → logprob: -12.128219604492188
    7. 'lex' → logprob: -12.378219604492188
    8. 'ic' → logprob: -13.503219604492188
    9. '_than' → logprob: -14.753219604492188
    10. 'ss' → logprob: -14.753219604492188

Token 261: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4041857123374939
    2. '    
' → logprob: -1.1541857719421387
    3. '   ' → logprob: -4.904185771942139
    4. '<|end|>' → logprob: -5.529185771942139
    5. '        
' → logprob: -5.654185771942139
    6. ' 
' → logprob: -6.904185771942139
    7. '  
' → logprob: -7.779185771942139
    8. '
    
' → logprob: -8.52918529510498
    9. '       ' → logprob: -8.77918529510498
    10. '   
' → logprob: -8.90418529510498

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07918509840965271
    2. '    
' → logprob: -2.7041850090026855
    3. '
' → logprob: -5.2041850090026855
    4. 'def' → logprob: -6.2041850090026855
    5. '        
' → logprob: -7.4541850090026855
    6. '       ' → logprob: -7.5791850090026855
    7. ' def' → logprob: -8.329185485839844
    8. ' 
' → logprob: -9.079185485839844
    9. ')' → logprob: -9.704185485839844
    10. '    
    
' → logprob: -10.204185485839844

Token 263: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04695778340101242
    2. 'def' → logprob: -3.1719577312469482
    3. ' def' → logprob: -5.796957969665527
    4. '    
' → logprob: -7.171957969665527
    5. '
' → logprob: -9.171957969665527
    6. '	def' → logprob: -10.546957969665527
    7. '        
' → logprob: -12.171957969665527
    8. '       ' → logprob: -12.546957969665527
    9. ' 
' → logprob: -13.296957969665527
    10. ' indentation' → logprob: -14.171957969665527

Token 264: ' Graph' (ID: 15559)
  Prédit: 'Graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Graph' → logprob: -1.2326037883758545
    2. 'Component' → logprob: -2.1076037883758545
    3. 'Union' → logprob: -2.1076037883758545
    4. 'DS' → logprob: -2.4826037883758545
    5. 'Adj' → logprob: -2.7326037883758545
    6. 'Prime' → logprob: -3.3576037883758545
    7. 'Bit' → logprob: -3.3576037883758545
    8. 'Mod' → logprob: -3.7326037883758545
    9. 'Modulo' → logprob: -3.7326037883758545
    10. 'Numeric' → logprob: -4.107604026794434

Token 265: 'Builder' (ID: 4542)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00024025145103223622
    2. ':
' → logprob: -8.375240325927734
    3. '():' → logprob: -12.625240325927734
    4. '):' → logprob: -12.750240325927734
    5. '>:' → logprob: -13.500240325927734
    6. '_:' → logprob: -15.000240325927734
    7. '<|end|>' → logprob: -15.500240325927734
    8. ':

' → logprob: -15.625240325927734
    9. ':**' → logprob: -15.625240325927734
    10. '{' → logprob: -15.750240325927734

Token 266: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024779161904007196
    2. ':
' → logprob: -6.002478122711182
    3. '(' → logprob: -14.752477645874023
    4. ':def' → logprob: -14.752477645874023
    5. '   ' → logprob: -15.127477645874023
    6. ':

' → logprob: -15.377477645874023
    7. '):' → logprob: -15.502477645874023
    8. ' :' → logprob: -15.502477645874023
    9. '(object' → logprob: -16.002477645874023
    10. '():' → logprob: -16.627477645874023

Token 267: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011987750418484211
    2. '   ' → logprob: -4.511987686157227
    3. '<|end|>' → logprob: -7.761987686157227
    4. ' def' → logprob: -8.886987686157227
    5. 'def' → logprob: -8.886987686157227
    6. '	   ' → logprob: -9.261987686157227
    7. '    
' → logprob: -10.011987686157227
    8. '<|end|>' → logprob: -10.261987686157227
    9. '    ' → logprob: -11.136987686157227
    10. '     ' → logprob: -11.261987686157227

Token 268: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.256965309381485
    2. 'def' (adapté à ' def') → logprob: -1.5069652795791626
    3. ' @' → logprob: -6.131965160369873
    4. '@' → logprob: -6.381965160369873
    5. '       ' → logprob: -7.131965160369873
    6. '   ' → logprob: -8.006965637207031
    7. '	def' → logprob: -11.381965637207031
    8. ' ' → logprob: -12.006965637207031
    9. '    ' → logprob: -12.381965637207031
    10. 'staticmethod' → logprob: -12.631965637207031

Token 269: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.485538125038147
    2. 'init' → logprob: -1.735538125038147
    3. ' init' → logprob: -2.2355380058288574
    4. ' build' → logprob: -3.2355380058288574
    5. ' def' → logprob: -3.4855380058288574
    6. '__' → logprob: -4.110538005828857
    7. ' _' → logprob: -5.860538005828857
    8. 'def' → logprob: -5.985538005828857
    9. '_' → logprob: -6.110538005828857
    10. ' construct' → logprob: -6.360538005828857

Token 270: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'def' → logprob: -16.875
    3. ' init' → logprob: -17.0
    4. 'in' → logprob: -17.875
    5. 'ini' → logprob: -18.125
    6. 'int' → logprob: -18.375
    7. 'inite' → logprob: -18.625
    8. '   ' → logprob: -18.625
    9. 'build' → logprob: -18.625
    10. 'i' → logprob: -19.0

Token 271: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.35018473863601685
    2. '(self' → logprob: -1.225184679031372
    3. '(' → logprob: -7.475184917449951
    4. ' (' → logprob: -7.600184917449951
    5. '__(
' → logprob: -7.975184917449951
    6. '__' → logprob: -9.350184440612793
    7. '<|end|>' → logprob: -9.600184440612793
    8. ')(' → logprob: -9.725184440612793
    9. 'self' → logprob: -9.975184440612793
    10. '_(' → logprob: -10.850184440612793

Token 272: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006450029904954135
    2. ' self' → logprob: -7.375645160675049
    3. '(self' → logprob: -11.25064468383789
    4. ')' → logprob: -12.75064468383789
    5. '       ' → logprob: -13.75064468383789
    6. '           ' → logprob: -14.75064468383789
    7. '   ' → logprob: -15.25064468383789
    8. ',self' → logprob: -15.25064468383789
    9. ',' → logprob: -16.12564468383789
    10. '):
' → logprob: -16.37564468383789

Token 273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003055308014154434
    2. ' ,' → logprob: -5.878055095672607
    3. ',self' → logprob: -8.753055572509766
    4. 'self' → logprob: -9.628055572509766
    5. ',s' → logprob: -11.378055572509766
    6. ' self' → logprob: -12.253055572509766
    7. '       ' → logprob: -13.128055572509766
    8. '(self' → logprob: -13.128055572509766
    9. ',parent' → logprob: -13.378055572509766
    10. ',
' → logprob: -14.003055572509766

Token 274: ' numbers' (ID: 8663)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.8474540710449219
    2. 'numbers' → logprob: -1.2224540710449219
    3. ' numbers' → logprob: -1.9724540710449219
    4. ' solver' → logprob: -3.097454071044922
    5. 'size' → logprob: -3.472454071044922
    6. 'a' → logprob: -4.222454071044922
    7. 'outer' → logprob: -4.347454071044922
    8. ' size' → logprob: -4.847454071044922
    9. 'parent' → logprob: -5.222454071044922
    10. ' outer' → logprob: -5.347454071044922

Token 275: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06594301760196686
    2. '):
' → logprob: -3.3159430027008057
    3. ':' → logprob: -3.8159430027008057
    4. ',' → logprob: -5.315943241119385
    5. ' ):' → logprob: -8.065942764282227
    6. ')' → logprob: -8.565942764282227
    7. '):
' → logprob: -10.940942764282227
    8. ':list' → logprob: -11.190942764282227
    9. '   ' → logprob: -11.315942764282227
    10. ' ):
' → logprob: -11.690942764282227

Token 276: ' comparator' (ID: 96166)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2553778290748596
    2. ' p' → logprob: -1.5053777694702148
    3. 'adj' → logprob: -6.630377769470215
    4. ' comparator' → logprob: -7.880377769470215
    5. '   ' → logprob: -8.255377769470215
    6. 'a' → logprob: -8.505377769470215
    7. ' size' → logprob: -8.505377769470215
    8. 'size' → logprob: -8.630377769470215
    9. ' adj' → logprob: -9.005377769470215
    10. ' a' → logprob: -9.630377769470215

Token 277: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16025978326797485
    2. '):
' → logprob: -1.91025972366333
    3. '):
' → logprob: -11.160260200500488
    4. ':' → logprob: -11.285260200500488
    5. ',' → logprob: -12.285260200500488
    6. '):

' → logprob: -13.035260200500488
    7. ' ):' → logprob: -13.535260200500488
    8. '=None' → logprob: -15.910260200500488
    9. ')' → logprob: -16.160259246826172
    10. ' ' → logprob: -16.410259246826172

Token 278: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16214580833911896
    2. ':' → logprob: -2.2871458530426025
    3. '       ' → logprob: -3.1621458530426025
    4. '	       ' → logprob: -6.037145614624023
    5. '<|end|>' → logprob: -7.537145614624023
    6. '	' → logprob: -7.912145614624023
    7. ',' → logprob: -8.162145614624023
    8. '   ' → logprob: -8.412145614624023
    9. '               ' → logprob: -8.412145614624023
    10. '):' → logprob: -8.412145614624023

Token 279: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.08203385770320892
    2. ' self' → logprob: -2.58203387260437
    3. '           ' → logprob: -6.207033634185791
    4. '       ' → logprob: -6.832033634185791
    5. '   ' → logprob: -10.58203411102295
    6. '	self' → logprob: -11.95703411102295
    7. ' ' → logprob: -12.70703411102295
    8. '               ' → logprob: -12.95703411102295
    9. ' ' → logprob: -13.20703411102295
    10. '         ' → logprob: -13.70703411102295

Token 280: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.058298058807849884
    2. '.' → logprob: -2.933298110961914
    3. ' .' → logprob: -5.683298110961914
    4. '.characters' → logprob: -13.808298110961914
    5. '._' → logprob: -14.308298110961914
    6. '.number' → logprob: -14.308298110961914
    7. '.num' → logprob: -14.433298110961914
    8. 'numbers' → logprob: -14.558298110961914
    9. '.com' → logprob: -14.683298110961914
    10. '.
' → logprob: -15.058298110961914

Token 281: 'umbers' (ID: 14501)
  Prédit: 'umbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umbers' → logprob: -1.2471589798224159e-05
    2. 'numbers' → logprob: -12.000012397766113
    3. 'umber' → logprob: -12.875012397766113
    4. '   ' → logprob: -13.250012397766113
    5. 'um' → logprob: -13.875012397766113
    6. '_numbers' → logprob: -15.125012397766113
    7. 'u' → logprob: -15.375012397766113
    8. 'umers' → logprob: -15.750012397766113
    9. 'umb' → logprob: -15.750012397766113
    10. 'umbe' → logprob: -16.75001335144043

Token 282: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6330498456954956
    2. '=' → logprob: -0.7580498456954956
    3. ')' → logprob: -8.008049964904785
    4. ',' → logprob: -9.383049964904785
    5. ':' → logprob: -12.383049964904785
    6. ' )' → logprob: -12.508049964904785
    7. '           ' → logprob: -12.633049964904785
    8. '[' → logprob: -12.758049964904785
    9. '.' → logprob: -12.883049964904785
    10. '        ' → logprob: -13.133049964904785

Token 283: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.3868733048439026
    2. ' numbers' → logprob: -1.1368732452392578
    3. 'number' → logprob: -14.136873245239258
    4. '(numbers' → logprob: -14.261873245239258
    5. 'n' → logprob: -15.511873245239258
    6. '_numbers' → logprob: -15.636873245239258
    7. ' ' → logprob: -15.636873245239258
    8. 'umbers' → logprob: -16.136873245239258
    9. 'num' → logprob: -16.636873245239258
    10. 'list' → logprob: -16.886873245239258

Token 284: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03434143215417862
    2. '<|end|>' → logprob: -3.534341335296631
    3. '       ' → logprob: -6.409341335296631
    4. '    
' → logprob: -7.534341335296631
    5. '
' → logprob: -7.784341335296631
    6. '            
' → logprob: -8.034341812133789
    7. '<|end|>' → logprob: -8.034341812133789
    8. '        
' → logprob: -8.159341812133789
    9. '   ' → logprob: -8.409341812133789
    10. '               ' → logprob: -9.159341812133789

Token 285: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00045081099960952997
    2. '       ' → logprob: -8.00045108795166
    3. '    
' → logprob: -10.62545108795166
    4. 'self' → logprob: -10.87545108795166
    5. '        
' → logprob: -10.87545108795166
    6. '            
' → logprob: -11.25045108795166
    7. '   ' → logprob: -11.62545108795166
    8. '
' → logprob: -11.87545108795166
    9. '<|end|>' → logprob: -11.87545108795166
    10. '               ' → logprob: -13.00045108795166

Token 286: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.012374838814139366
    2. ' self' → logprob: -4.5123748779296875
    3. '           ' → logprob: -6.6373748779296875
    4. '       ' → logprob: -12.012374877929688
    5. 'com' → logprob: -12.387374877929688
    6. '   ' → logprob: -12.637374877929688
    7. ' comparator' → logprob: -14.762374877929688
    8. '	self' → logprob: -15.012374877929688
    9. ' ' → logprob: -15.262374877929688
    10. '               ' → logprob: -15.387374877929688

Token 287: '.comp' (ID: 20569)
  Prédit: '.com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.com' → logprob: -0.20350991189479828
    2. 'com' → logprob: -1.7035099267959595
    3. ' comparator' → logprob: -6.70350980758667
    4. '.' → logprob: -8.203510284423828
    5. ' .' → logprob: -8.578510284423828
    6. '=com' → logprob: -9.078510284423828
    7. '.comp' → logprob: -9.703510284423828
    8. '_com' → logprob: -9.953510284423828
    9. '
' → logprob: -10.203510284423828
    10. '	com' → logprob: -10.328510284423828

Token 288: ' =' (ID: 314)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -7.822646693966817e-06
    2. 'arer' → logprob: -12.125007629394531
    3. 'parator' → logprob: -14.500007629394531
    4. '       ' → logprob: -15.125007629394531
    5. '   ' → logprob: -15.250007629394531
    6. '=' → logprob: -15.375007629394531
    7. 'artor' → logprob: -15.375007629394531
    8. '           ' → logprob: -15.500007629394531
    9. 'are' → logprob: -15.750007629394531
    10. ' ar' → logprob: -16.00000762939453

Token 289: ' comparator' (ID: 96166)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.31329044699668884
    2. 'ar' → logprob: -1.3132904767990112
    3. 'parator' → logprob: -10.8132905960083
    4. '=com' → logprob: -12.8132905960083
    5. 'comp' → logprob: -12.9382905960083
    6. '(com' → logprob: -13.6882905960083
    7. 'arer' → logprob: -14.5632905960083
    8. ' comparator' → logprob: -14.9382905960083
    9. 'or' → logprob: -15.0632905960083
    10. 'Comparator' → logprob: -15.6882905960083

Token 290: '
' (ID: 198)
  Prédit: '        
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        
' → logprob: -0.8512568473815918
    2. '       ' → logprob: -1.4762568473815918
    3. '    
' → logprob: -1.9762568473815918
    4. '
' → logprob: -2.226256847381592
    5. '<|end|>' → logprob: -2.476256847381592
    6. '  
' → logprob: -5.476256847381592
    7. '   ' → logprob: -6.351256847381592
    8. ' 
' → logprob: -6.351256847381592
    9. '<|end|>' → logprob: -6.851256847381592
    10. '            
' → logprob: -7.226256847381592

Token 291: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36538025736808777
    2. '        
' → logprob: -1.7403802871704102
    3. '
' → logprob: -2.36538028717041
    4. '    
' → logprob: -3.36538028717041
    5. '<|end|>' → logprob: -7.36538028717041
    6. '   ' → logprob: -7.74038028717041
    7. 'def' → logprob: -8.74038028717041
    8. '  
' → logprob: -8.86538028717041
    9. '       
' → logprob: -8.86538028717041
    10. '            
' → logprob: -8.86538028717041

Token 292: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8131892681121826
    2. 'self' (adapté à ' self') → logprob: -1.3131892681121826
    3. '       ' → logprob: -1.9381892681121826
    4. '
' → logprob: -2.4381892681121826
    5. 'def' → logprob: -3.4381892681121826
    6. ' self' → logprob: -4.688189506530762
    7. '   ' → logprob: -4.688189506530762
    8. '    
' → logprob: -5.938189506530762
    9. '        
' → logprob: -6.063189506530762
    10. '            
' → logprob: -8.688189506530762

Token 293: '.graph' (ID: 18104)
  Prédit: '.ad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.011244932189583778
    2. ' .' → logprob: -5.511244773864746
    3. '.edges' → logprob: -5.511244773864746
    4. 'adj' → logprob: -6.886244773864746
    5. '.' → logprob: -7.011244773864746
    6. '.graph' → logprob: -7.886244773864746
    7. '.n' → logprob: -9.011244773864746
    8. ' adjacency' → logprob: -9.136244773864746
    9. ' adj' → logprob: -9.386244773864746
    10. '.nodes' → logprob: -9.386244773864746

Token 294: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11292517185211182
    2. '=' → logprob: -2.2379250526428223
    3. '={}' → logprob: -9.98792552947998
    4. '       ' → logprob: -11.36292552947998
    5. ' ' → logprob: -11.36292552947998
    6. '=[]' → logprob: -11.98792552947998
    7. '        ' → logprob: -12.23792552947998
    8. '           ' → logprob: -12.36292552947998
    9. '   ' → logprob: -12.48792552947998
    10. ' ={' → logprob: -12.61292552947998

Token 295: ' {' (ID: 354)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0002728985855355859
    2. '{' → logprob: -8.500272750854492
    3. 'default' → logprob: -9.750272750854492
    4. ' {}' → logprob: -11.500272750854492
    5. 'dict' → logprob: -14.875272750854492
    6. '[]' → logprob: -14.875272750854492
    7. ' defaultdict' → logprob: -15.875272750854492
    8. '{}
' → logprob: -16.000272750854492
    9. '{}

' → logprob: -17.375272750854492
    10. '{})' → logprob: -18.000272750854492

Token 296: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0015455723041668534
    2. 'n' → logprob: -7.376545429229736
    3. 'x' → logprob: -8.001545906066895
    4. 'i' → logprob: -8.376545906066895
    5. 'number' → logprob: -8.626545906066895
    6. ' num' → logprob: -8.876545906066895
    7. 'k' → logprob: -11.001545906066895
    8. '       ' → logprob: -11.751545906066895
    9. '   ' → logprob: -12.501545906066895
    10. '           ' → logprob: -13.126545906066895

Token 297: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.364928700961173e-05
    2. ' :' → logprob: -9.375093460083008
    3. 'for' → logprob: -12.250093460083008
    4. ':num' → logprob: -13.125093460083008
    5. ' for' → logprob: -15.000093460083008
    6. '   ' → logprob: -15.500093460083008
    7. ':i' → logprob: -16.125093460083008
    8. 'num' → logprob: -16.250093460083008
    9. '           ' → logprob: -16.250093460083008
    10. '0' → logprob: -16.375093460083008

Token 298: ' set' (ID: 920)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.003357251174747944
    2. '[]}' → logprob: -5.753357410430908
    3. 'set' → logprob: -9.00335693359375
    4. ' []' → logprob: -10.00335693359375
    5. '[]
' → logprob: -11.50335693359375
    6. '[]

' → logprob: -13.87835693359375
    7. ' set' → logprob: -15.87835693359375
    8. '[' → logprob: -17.00335693359375
    9. '[]>' → logprob: -17.50335693359375
    10. '[])' → logprob: -18.00335693359375

Token 299: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.650518920039758e-06
    2. '()}' → logprob: -13.000003814697266
    3. '()
' → logprob: -14.375003814697266
    4. '(' → logprob: -15.000003814697266
    5. '()]' → logprob: -15.125003814697266
    6. '(),' → logprob: -15.750003814697266
    7. ' ()' → logprob: -17.125003814697266
    8. '()

' → logprob: -17.375003814697266
    9. '())' → logprob: -18.125003814697266
    10. '():' → logprob: -18.250003814697266

Token 300: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.016163405030965805
    2. 'for' → logprob: -4.141163349151611
    3. '        ' → logprob: -10.26616382598877
    4. '       ' → logprob: -10.64116382598877
    5. ' ' → logprob: -10.64116382598877
    6. '           ' → logprob: -11.39116382598877
    7. '()' → logprob: -11.76616382598877
    8. '    ' → logprob: -11.89116382598877
    9. '}' → logprob: -12.01616382598877
    10. '         ' → logprob: -12.51616382598877

Token 301: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.16023235023021698
    2. ' num' → logprob: -1.9102323055267334
    3. '	num' → logprob: -12.660232543945312
    4. ' ' → logprob: -12.910232543945312
    5. '   ' → logprob: -14.285232543945312
    6. 'n' → logprob: -14.910232543945312
    7. ' ' → logprob: -15.285232543945312
    8. '  ' → logprob: -15.785232543945312
    9. 'number' → logprob: -15.785232543945312
    10. '<num' → logprob: -15.910232543945312

Token 302: ' in' (ID: 306)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.07142239063978195
    2. ' num' → logprob: -2.6964223384857178
    3. ' in' → logprob: -6.696422576904297
    4. 'in' → logprob: -8.446422576904297
    5. 'numbers' → logprob: -11.321422576904297
    6. 'range' → logprob: -12.071422576904297
    7. ' ' → logprob: -12.696422576904297
    8. ' range' → logprob: -12.696422576904297
    9. 'nums' → logprob: -12.821422576904297
    10. 'self' → logprob: -13.446422576904297

Token 303: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.01838778890669346
    2. ' numbers' → logprob: -4.643387794494629
    3. 'self' → logprob: -4.768387794494629
    4. ' self' → logprob: -9.518387794494629
    5. 'number' → logprob: -11.768387794494629
    6. '(numbers' → logprob: -12.018387794494629
    7. '   ' → logprob: -12.268387794494629
    8. 'num' → logprob: -12.893387794494629
    9. 'range' → logprob: -13.518387794494629
    10. '
' → logprob: -14.018387794494629

Token 304: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.001091639045625925
    2. '       ' → logprob: -6.876091480255127
    3. '}
' → logprob: -10.126091957092285
    4. ' }' → logprob: -11.126091957092285
    5. '           ' → logprob: -13.251091957092285
    6. '   ' → logprob: -13.751091957092285
    7. '<|end|>' → logprob: -14.751091957092285
    8. '}

' → logprob: -15.126091957092285
    9. ')' → logprob: -15.626091957092285
    10. '               ' → logprob: -16.37609100341797

Token 305: '        
' (ID: 3564)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6185493469238281
    2. '       ' → logprob: -1.1185493469238281
    3. '<|end|>' → logprob: -2.743549346923828
    4. '        
' → logprob: -3.118549346923828
    5. '    
' → logprob: -3.993549346923828
    6. '   ' → logprob: -5.743549346923828
    7. ' 
' → logprob: -6.868549346923828
    8. '  
' → logprob: -7.368549346923828
    9. '<|end|>' → logprob: -7.368549346923828
    10. '		
' → logprob: -7.743549346923828

Token 306: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01701999641954899
    2. '   ' → logprob: -4.142020225524902
    3. '
' → logprob: -7.267020225524902
    4. 'def' → logprob: -8.767020225524902
    5. '        
' → logprob: -9.892020225524902
    6. '	   ' → logprob: -10.142020225524902
    7. '    
' → logprob: -10.517020225524902
    8. '	def' → logprob: -12.517020225524902
    9. '           ' → logprob: -12.767020225524902
    10. ' ' → logprob: -13.017020225524902

Token 307: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0006697862991131842
    2. '   ' → logprob: -7.750669956207275
    3. ' def' → logprob: -8.500669479370117
    4. '       ' → logprob: -10.250669479370117
    5. ' ' → logprob: -15.625669479370117
    6. '
' → logprob: -15.750669479370117
    7. '  ' → logprob: -16.625669479370117
    8. '	def' → logprob: -18.000669479370117
    9. '        
' → logprob: -18.625669479370117
    10. '    
' → logprob: -18.750669479370117

Token 308: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.3875901401042938
    2. ' build' → logprob: -1.1375901699066162
    3. 'add' → logprob: -7.887589931488037
    4. ' add' → logprob: -8.137590408325195
    5. '_build' → logprob: -11.012590408325195
    6. 'construct' → logprob: -11.137590408325195
    7. 'create' → logprob: -12.012590408325195
    8. ' construct' → logprob: -12.512590408325195
    9. 'generate' → logprob: -12.887590408325195
    10. ' create' → logprob: -12.887590408325195

Token 309: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.6595556735992432
    2. '(self' → logprob: -1.5345556735992432
    3. '_edges' → logprob: -1.6595556735992432
    4. '_' → logprob: -3.159555673599243
    5. '(' → logprob: -3.659555673599243
    6. '_edge' → logprob: -5.409555435180664
    7. '_(' → logprob: -6.534555435180664
    8. '_connections' → logprob: -6.909555435180664
    9. '()' → logprob: -8.034555435180664
    10. '_adj' → logprob: -8.159555435180664

Token 310: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003619217313826084
    2. '(' → logprob: -8.000362396240234
    3. ' (' → logprob: -10.625362396240234
    4. 'self' → logprob: -14.375362396240234
    5. '       ' → logprob: -14.625362396240234
    6. '()' → logprob: -14.750362396240234
    7. '   ' → logprob: -15.125362396240234
    8. '(
' → logprob: -15.750362396240234
    9. '(s' → logprob: -16.750362396240234
    10. '(Self' → logprob: -17.000362396240234

Token 311: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06172160431742668
    2. '):
' → logprob: -3.0617215633392334
    3. ',' → logprob: -4.4367218017578125
    4. ' ):' → logprob: -6.9367218017578125
    5. ')' → logprob: -9.561721801757812
    6. ' ,' → logprob: -10.061721801757812
    7. '):
' → logprob: -10.186721801757812
    8. 'self' → logprob: -10.561721801757812
    9. ' ):
' → logprob: -10.811721801757812
    10. '       ' → logprob: -11.186721801757812

Token 312: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12985704839229584
    2. '       ' → logprob: -2.129857063293457
    3. ' for' → logprob: -6.379857063293457
    4. 'for' → logprob: -7.504857063293457
    5. '
' → logprob: -8.254857063293457
    6. '        
' → logprob: -9.629857063293457
    7. '        ' → logprob: -9.629857063293457
    8. ',' → logprob: -9.629857063293457
    9. '               ' → logprob: -10.129857063293457
    10. ':' → logprob: -10.254857063293457

Token 313: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13709886372089386
    2. 'for' → logprob: -2.137098789215088
    3. '           ' → logprob: -4.637098789215088
    4. ' n' → logprob: -8.637099266052246
    5. 'n' → logprob: -9.012099266052246
    6. '       ' → logprob: -9.137099266052246
    7. '   ' → logprob: -10.887099266052246
    8. ' ' → logprob: -12.887099266052246
    9. '               ' → logprob: -13.137099266052246
    10. '```' → logprob: -13.387099266052246

Token 314: ' Connect' (ID: 16834)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07123401761054993
    2. 'for' → logprob: -2.6962339878082275
    3. ' n' → logprob: -6.821234226226807
    4. 'n' → logprob: -8.946233749389648
    5. '           ' → logprob: -9.696233749389648
    6. ' nums' → logprob: -12.446233749389648
    7. '       ' → logprob: -13.196233749389648
    8. '        ' → logprob: -13.321233749389648
    9. ' numbers' → logprob: -13.571233749389648
    10. ' ' → logprob: -13.571233749389648

Token 315: ' pairs' (ID: 24702)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05005728453397751
    2. ' i' → logprob: -3.5500571727752686
    3. 'for' → logprob: -4.300057411193848
    4. '           ' → logprob: -5.550057411193848
    5. 'i' → logprob: -7.550057411193848
    6. '        ' → logprob: -7.675057411193848
    7. '       ' → logprob: -8.050057411193848
    8. ' ' → logprob: -8.550057411193848
    9. ' all' → logprob: -8.675057411193848
    10. ' self' → logprob: -8.925057411193848

Token 316: ' that' (ID: 484)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.8203262686729431
    2. ' (' → logprob: -0.9453262686729431
    3. ' for' → logprob: -3.070326328277588
    4. '           ' → logprob: -3.195326328277588
    5. '       ' → logprob: -4.695326328277588
    6. ' ' → logprob: -4.820326328277588
    7. '        ' → logprob: -4.820326328277588
    8. '(' → logprob: -4.945326328277588
    9. ' in' → logprob: -5.070326328277588
    10. ' if' → logprob: -5.320326328277588

Token 317: ' break' (ID: 2338)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.7211682796478271
    2. ' have' → logprob: -0.7211682796478271
    3. 'have' → logprob: -4.971168518066406
    4. ' may' → logprob: -5.721168518066406
    5. '           ' → logprob: -5.846168518066406
    6. ' for' → logprob: -5.971168518066406
    7. ' do' → logprob: -5.971168518066406
    8. ' can' → logprob: -6.596168518066406
    9. ' ' → logprob: -6.596168518066406
    10. 'are' → logprob: -6.596168518066406

Token 318: ' sorted' (ID: 20099)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.19607657194137573
    2. '           ' → logprob: -2.9460766315460205
    3. 'the' → logprob: -3.3210766315460205
    4. ' their' → logprob: -3.8210766315460205
    5. '       ' → logprob: -4.071076393127441
    6. ' self' → logprob: -4.321076393127441
    7. ' lex' → logprob: -4.321076393127441
    8. ' range' → logprob: -4.696076393127441
    9. ' numeric' → logprob: -5.571076393127441
    10. 'self' → logprob: -6.446076393127441

Token 319: ' order' (ID: 2569)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16466018557548523
    2. 'ness' → logprob: -1.9146602153778076
    3. '_order' → logprob: -6.6646599769592285
    4. ' _' → logprob: -7.1646599769592285
    5. '_by' → logprob: -7.5396599769592285
    6. '_pairs' → logprob: -8.164660453796387
    7. '_list' → logprob: -9.039660453796387
    8. '_condition' → logprob: -9.164660453796387
    9. '_constraints' → logprob: -9.289660453796387
    10. '()' → logprob: -9.914660453796387

Token 320: ' equival' (ID: 56509)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06770345568656921
    2. ' for' → logprob: -2.9427034854888916
    3. '       ' → logprob: -5.9427032470703125
    4. 'for' → logprob: -6.0677032470703125
    5. '
' → logprob: -6.3177032470703125
    6. ' by' → logprob: -6.9427032470703125
    7. ',' → logprob: -6.9427032470703125
    8. ':' → logprob: -7.5677032470703125
    9. '        
' → logprob: -7.5677032470703125
    10. '   ' → logprob: -7.6927032470703125

Token 321: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.09341985732316971
    2. 'ent' → logprob: -2.5934197902679443
    3. 'al' → logprob: -4.718420028686523
    4. 'ently' → logprob: -5.968420028686523
    5. 'ance' → logprob: -6.593420028686523
    6. 'ences' → logprob: -7.968420028686523
    7. 'alent' → logprob: -8.218420028686523
    8. '   ' → logprob: -8.843420028686523
    9. 'ency' → logprob: -8.968420028686523
    10. 'nt' → logprob: -9.093420028686523

Token 322: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005158334970474243
    2. ' for' → logprob: -6.130158424377441
    3. '       ' → logprob: -6.755158424377441
    4. 'for' → logprob: -8.505158424377441
    5. '
' → logprob: -8.755158424377441
    6. '        
' → logprob: -8.755158424377441
    7. '   ' → logprob: -8.880158424377441
    8. ',' → logprob: -9.005158424377441
    9. ' with' → logprob: -9.130158424377441
    10. '               ' → logprob: -9.130158424377441

Token 323: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012097643688321114
    2. ' for' → logprob: -4.5120978355407715
    3. 'for' → logprob: -7.3870978355407715
    4. '       ' → logprob: -8.012097358703613
    5. '               ' → logprob: -10.887097358703613
    6. '        ' → logprob: -11.262097358703613
    7. '   ' → logprob: -11.262097358703613
    8. '         ' → logprob: -11.512097358703613
    9. '            ' → logprob: -11.637097358703613
    10. '          ' → logprob: -11.887097358703613

Token 324: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1078796312212944
    2. 'for' → logprob: -2.857879638671875
    3. '           ' → logprob: -3.107879638671875
    4. ' n' → logprob: -9.607879638671875
    5. '       ' → logprob: -10.232879638671875
    6. ' ' → logprob: -10.482879638671875
    7. 'n' → logprob: -10.982879638671875
    8. '   ' → logprob: -11.107879638671875
    9. '    ' → logprob: -12.482879638671875
    10. '        ' → logprob: -12.857879638671875

Token 325: ' If' (ID: 1843)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04639848321676254
    2. 'for' → logprob: -3.171398401260376
    3. '           ' → logprob: -6.046398639678955
    4. ' n' → logprob: -7.171398639678955
    5. 'n' → logprob: -8.796398162841797
    6. ' ' → logprob: -9.796398162841797
    7. '        ' → logprob: -11.046398162841797
    8. '    ' → logprob: -11.421398162841797
    9. ' ' → logprob: -11.796398162841797
    10. '            ' → logprob: -12.171398162841797

Token 326: ' numeric' (ID: 52077)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.42848992347717285
    2. 'i' → logprob: -1.6784899234771729
    3. ' self' → logprob: -2.428489923477173
    4. 'self' → logprob: -3.303489923477173
    5. ' not' → logprob: -3.553489923477173
    6. 'not' → logprob: -5.928489685058594
    7. ' n' → logprob: -6.928489685058594
    8. 'n' → logprob: -7.053489685058594
    9. ' num' → logprob: -7.553489685058594
    10. ' abs' → logprob: -7.803489685058594

Token 327: ' <' (ID: 464)
  Prédit: '_less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_less' → logprob: -0.3888423442840576
    2. 'ally' → logprob: -1.5138423442840576
    3. 'ly' → logprob: -2.6388423442840576
    4. 'order' → logprob: -4.513842582702637
    5. 'less' → logprob: -4.888842582702637
    6. ' order' → logprob: -5.888842582702637
    7. 'all' → logprob: -6.263842582702637
    8. 'l' → logprob: -6.513842582702637
    9. '_order' → logprob: -6.763842582702637
    10. '_' → logprob: -7.513842582702637

Token 328: ' but' (ID: 889)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.530261218547821
    2. ' n' → logprob: -1.0302612781524658
    3. 'num' → logprob: -3.155261278152466
    4. ' num' → logprob: -5.030261039733887
    5. '           ' → logprob: -6.655261039733887
    6. 'self' → logprob: -6.780261039733887
    7. ' self' → logprob: -7.155261039733887
    8. ' ' → logprob: -8.405261039733887
    9. ',' → logprob: -8.530261039733887
    10. ' and' → logprob: -8.655261039733887

Token 329: ' lex' (ID: 37772)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.8607625961303711
    2. 'lex' → logprob: -1.360762596130371
    3. ' lex' → logprob: -1.735762596130371
    4. 'not' → logprob: -1.985762596130371
    5. ' lexi' → logprob: -5.985762596130371
    6. ' numeric' → logprob: -6.360762596130371
    7. ' lexical' → logprob: -6.985762596130371
    8. 'numeric' → logprob: -7.860762596130371
    9. ' str' → logprob: -8.485762596130371
    10. ' self' → logprob: -8.485762596130371

Token 330: 'ic' (ID: 291)
  Prédit: '_less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_less' → logprob: -0.4544159770011902
    2. '_' → logprob: -1.454416036605835
    3. 'ic' → logprob: -2.079416036605835
    4. '_str' → logprob: -6.454415798187256
    5. 'ically' → logprob: -7.954415798187256
    6. ' ' → logprob: -8.079416275024414
    7. '_num' → logprob: -8.079416275024414
    8. '   ' → logprob: -8.204416275024414
    9. '       ' → logprob: -8.329416275024414
    10. '_compare' → logprob: -8.454416275024414

Token 331: 'ographically' (ID: 121004)
  Prédit: 'ographically'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ographically' → logprob: -0.6117841005325317
    2. 'ographical' → logprob: -1.4867841005325317
    3. 'ographic' → logprob: -1.8617841005325317
    4. 'o' → logprob: -3.611783981323242
    5. 'ograph' → logprob: -4.486783981323242
    6. '_less' → logprob: -4.736783981323242
    7. 'graph' → logprob: -4.986783981323242
    8. 'ic' → logprob: -5.236783981323242
    9. '   ' → logprob: -5.486783981323242
    10. '       ' → logprob: -6.486783981323242

Token 332: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3190160095691681
    2. ' >' → logprob: -1.9440159797668457
    3. 'greater' → logprob: -2.6940159797668457
    4. ' greater' → logprob: -4.194015979766846
    5. ' >=' → logprob: -4.444015979766846
    6. ' not' → logprob: -4.819015979766846
    7. 'not' → logprob: -4.944015979766846
    8. '>=' → logprob: -5.069015979766846
    9. ' is' → logprob: -5.569015979766846
    10. ' <' → logprob: -6.819015979766846

Token 333: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4247465133666992
    2. ' or' → logprob: -1.1747465133666992
    3. '           ' → logprob: -4.174746513366699
    4. ':' → logprob: -4.549746513366699
    5. ' ,' → logprob: -5.424746513366699
    6. ' for' → logprob: -5.424746513366699
    7. 'or' → logprob: -7.174746513366699
    8. ':
' → logprob: -8.1747465133667
    9. ',
' → logprob: -8.1747465133667
    10. ' ' → logprob: -8.2997465133667

Token 334: 'or' (ID: 267)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1074907779693604
    2. ' or' → logprob: -1.1074907779693604
    3. '),' → logprob: -1.2324907779693604
    4. ' ),' → logprob: -3.9824907779693604
    5. ' )' → logprob: -4.482490539550781
    6. '           ' → logprob: -4.732490539550781
    7. 'or' → logprob: -5.107490539550781
    8. ',' → logprob: -6.857490539550781
    9. ' ' → logprob: -7.857490539550781
    10. '            ' → logprob: -8.732490539550781

Token 335: ' converse' (ID: 146128)
  Prédit: ' vice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vice' → logprob: -0.2143026739358902
    2. ' numeric' → logprob: -2.4643027782440186
    3. 'vice' → logprob: -2.5893027782440186
    4. ' the' → logprob: -4.2143025398254395
    5. 'numeric' → logprob: -4.9643025398254395
    6. ' reverse' → logprob: -5.8393025398254395
    7. ')' → logprob: -6.0893025398254395
    8. ' )' → logprob: -6.3393025398254395
    9. 'reverse' → logprob: -7.4643025398254395
    10. ' ' → logprob: -7.8393025398254395

Token 336: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.32002830505371094
    2. ')' → logprob: -1.320028305053711
    3. '):' → logprob: -5.820028305053711
    4. ',' → logprob: -6.070028305053711
    5. ' ),' → logprob: -7.195028305053711
    6. ' )' → logprob: -8.195028305053711
    7. '):
' → logprob: -8.445028305053711
    8. ').' → logprob: -9.820028305053711
    9. ' or' → logprob: -9.945028305053711
    10. '),
' → logprob: -10.820028305053711

Token 337: ' add' (ID: 1147)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4527755081653595
    2. '           ' → logprob: -1.702775478363037
    3. '               ' → logprob: -2.327775478363037
    4. 'for' → logprob: -3.202775478363037
    5. ' then' → logprob: -4.327775478363037
    6. ' add' → logprob: -4.577775478363037
    7. ' self' → logprob: -5.327775478363037
    8. '            ' → logprob: -5.577775478363037
    9. ' continue' → logprob: -6.077775478363037
    10. 'self' → logprob: -6.077775478363037

Token 338: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.1533764898777008
    2. ' an' → logprob: -2.278376579284668
    3. '_edge' → logprob: -3.653376579284668
    4. 'edge' → logprob: -4.528376579284668
    5. ' edges' → logprob: -6.278376579284668
    6. '           ' → logprob: -8.028376579284668
    7. ' a' → logprob: -8.278376579284668
    8. '   ' → logprob: -8.528376579284668
    9. '(edge' → logprob: -9.278376579284668
    10. '_' → logprob: -10.153376579284668

Token 339: ' because' (ID: 2236)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009285300970077515
    2. '               ' → logprob: -5.1342854499816895
    3. ' for' → logprob: -6.7592854499816895
    4. '            
' → logprob: -7.7592854499816895
    5. '
' → logprob: -8.009284973144531
    6. ',' → logprob: -8.259284973144531
    7. '            ' → logprob: -8.384284973144531
    8. ' ' → logprob: -9.134284973144531
    9. '   ' → logprob: -9.259284973144531
    10. '          ' → logprob: -9.259284973144531

Token 340: ' can't' (ID: 8535)
  Prédit: ' they'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' they' → logprob: -0.47876617312431335
    2. 'they' → logprob: -1.9787662029266357
    3. ' there' → logprob: -2.8537662029266357
    4. ' conflict' → logprob: -3.2287662029266357
    5. ' the' → logprob: -3.2287662029266357
    6. ' we' → logprob: -3.9787662029266357
    7. 'there' → logprob: -4.603765964508057
    8. 'the' → logprob: -4.728765964508057
    9. ' it' → logprob: -4.728765964508057
    10. ' sorting' → logprob: -5.103765964508057

Token 341: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.10651078075170517
    2. 'be' → logprob: -2.981510877609253
    3. ' sort' → logprob: -4.106510639190674
    4. 'sort' → logprob: -4.356510639190674
    5. ' keep' → logprob: -4.981510639190674
    6. ' have' → logprob: -5.856510639190674
    7. ' maintain' → logprob: -6.481510639190674
    8. ' both' → logprob: -6.606510639190674
    9. 'keep' → logprob: -6.856510639190674
    10. 'maint' → logprob: -6.856510639190674

Token 342: ' in' (ID: 306)
  Prédit: ' sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -1.0892784595489502
    2. 'sorted' → logprob: -1.3392784595489502
    3. ' in' → logprob: -1.5892784595489502
    4. ' ordered' → logprob: -3.58927845954895
    5. ' both' → logprob: -3.58927845954895
    6. 'in' → logprob: -3.83927845954895
    7. 'both' → logprob: -3.83927845954895
    8. ' on' → logprob: -3.96427845954895
    9. ' placed' → logprob: -4.214278221130371
    10. 'ordered' → logprob: -4.339278221130371

Token 343: ' same' (ID: 2684)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5999351143836975
    2. ' same' → logprob: -1.4749350547790527
    3. 'the' → logprob: -1.9749350547790527
    4. 'same' → logprob: -2.5999350547790527
    5. ' sorted' → logprob: -5.849935054779053
    6. 'sorted' → logprob: -6.349935054779053
    7. 'both' → logprob: -6.974935054779053
    8. ' both' → logprob: -6.974935054779053
    9. 'correct' → logprob: -7.224935054779053
    10. ' correct' → logprob: -8.224935531616211

Token 344: ' valid' (ID: 4529)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.6480498909950256
    2. ' component' → logprob: -0.7730498909950256
    3. ' set' → logprob: -5.148049831390381
    4. ' group' → logprob: -6.148049831390381
    5. ' connected' → logprob: -6.523049831390381
    6. ' sorted' → logprob: -7.148049831390381
    7. 'connected' → logprob: -7.273049831390381
    8. '   ' → logprob: -7.523049831390381
    9. 'class' → logprob: -7.773049831390381
    10. ' ' → logprob: -7.773049831390381

Token 345: ' subset' (ID: 58845)
  Prédit: ' component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' component' → logprob: -0.18230853974819183
    2. 'component' → logprob: -2.4323084354400635
    3. ' set' → logprob: -3.4323084354400635
    4. ' group' → logprob: -4.557308673858643
    5. ' subset' → logprob: -4.557308673858643
    6. ' order' → logprob: -5.057308673858643
    7. ' cluster' → logprob: -5.557308673858643
    8. ' class' → logprob: -5.807308673858643
    9. ' sorted' → logprob: -6.057308673858643
    10. ' partition' → logprob: -6.307308673858643

Token 346: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021981537342071533
    2. ' for' → logprob: -5.146981716156006
    3. '
' → logprob: -5.646981716156006
    4. '            
' → logprob: -6.271981716156006
    5. ' ' → logprob: -6.396981716156006
    6. '.' → logprob: -6.521981716156006
    7. '        
' → logprob: -6.771981716156006
    8. '       ' → logprob: -6.771981716156006
    9. '   ' → logprob: -6.896981716156006
    10. '               ' → logprob: -7.396981716156006

Token 347: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012517188675701618
    2. '
' → logprob: -4.887516975402832
    3. '       ' → logprob: -6.137516975402832
    4. '        
' → logprob: -6.762516975402832
    5. '            
' → logprob: -7.512516975402832
    6. '    
' → logprob: -7.887516975402832
    7. '  
' → logprob: -8.762516975402832
    8. '               ' → logprob: -9.012516975402832
    9. '\n' → logprob: -9.637516975402832
    10. '   ' → logprob: -9.887516975402832

Token 348: ' n' (ID: 297)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4996325373649597
    2. '           ' → logprob: -1.2496325969696045
    3. 'for' → logprob: -2.2496325969696045
    4. '       ' → logprob: -7.249632358551025
    5. '   ' → logprob: -8.374632835388184
    6. ' n' → logprob: -9.249632835388184
    7. 'n' (adapté à ' n') → logprob: -9.624632835388184
    8. ' ' → logprob: -10.874632835388184
    9. '    ' → logprob: -11.374632835388184
    10. '         ' → logprob: -11.624632835388184

Token 349: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3836634159088135
    2. '       ' → logprob: -1.8836634159088135
    3. '=' → logprob: -2.2586634159088135
    4. 'um' → logprob: -3.2586634159088135
    5. '   ' → logprob: -4.633663177490234
    6. 'ums' → logprob: -5.508663177490234
    7. 'umbers' → logprob: -5.758663177490234
    8. '=len' → logprob: -5.883663177490234
    9. '           ' → logprob: -6.758663177490234
    10. '     ' → logprob: -7.133663177490234

Token 350: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5215323567390442
    2. ' len' → logprob: -1.5215322971343994
    3. 'self' → logprob: -1.7715322971343994
    4. ' self' → logprob: -4.0215325355529785
    5. '           ' → logprob: -11.64653205871582
    6. '   ' → logprob: -13.02153205871582
    7. '(len' → logprob: -13.77153205871582
    8. '       ' → logprob: -14.02153205871582
    9. ' ' → logprob: -14.27153205871582
    10. '=len' → logprob: -14.39653205871582

Token 351: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.610702363715973e-06
    2. '(' → logprob: -11.625009536743164
    3. 'self' → logprob: -14.375009536743164
    4. ' (' → logprob: -17.875009536743164
    5. '(this' → logprob: -17.875009536743164
    6. ' self' → logprob: -18.250009536743164
    7. '(s' → logprob: -18.375009536743164
    8. '(
' → logprob: -18.750009536743164
    9. '=self' → logprob: -20.875009536743164
    10. '(sel' → logprob: -21.500009536743164

Token 352: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.00032068457221612334
    2. 'numbers' → logprob: -8.125320434570312
    3. ' .' → logprob: -11.375320434570312
    4. '.' → logprob: -11.875320434570312
    5. '(numbers' → logprob: -13.625320434570312
    6. 'self' → logprob: -14.250320434570312
    7. '.number' → logprob: -14.250320434570312
    8. ').' → logprob: -14.625320434570312
    9. 'umbers' → logprob: -14.625320434570312
    10. 'n' → logprob: -14.750320434570312

Token 353: 'umbers' (ID: 14501)
  Prédit: 'umbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umbers' → logprob: -0.25324317812919617
    2. '.n' → logprob: -1.5032432079315186
    3. '.' → logprob: -7.0032429695129395
    4. 'numbers' → logprob: -8.253243446350098
    5. '.um' → logprob: -9.878243446350098
    6. '.u' → logprob: -10.253243446350098
    7. '(numbers' → logprob: -11.128243446350098
    8. 'umber' → logprob: -11.753243446350098
    9. '.o' → logprob: -12.503243446350098
    10. 'self' → logprob: -12.628243446350098

Token 354: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3147793114185333
    2. ')
' → logprob: -1.314779281616211
    3. '           ' → logprob: -6.689779281616211
    4. '       ' → logprob: -8.939779281616211
    5. ')
' → logprob: -9.689779281616211
    6. '
' → logprob: -10.564779281616211
    7. ' )' → logprob: -10.689779281616211
    8. ' )
' → logprob: -11.564779281616211
    9. '   ' → logprob: -12.564779281616211
    10. '):
' → logprob: -12.689779281616211

Token 355: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10167039185762405
    2. '       ' → logprob: -2.476670503616333
    3. '
' → logprob: -5.351670265197754
    4. '   ' → logprob: -5.726670265197754
    5. '        
' → logprob: -7.101670265197754
    6. '	   ' → logprob: -7.101670265197754
    7. '	       ' → logprob: -7.101670265197754
    8. ' for' → logprob: -7.851670265197754
    9. '    
' → logprob: -7.851670265197754
    10. '	' → logprob: -7.976670265197754

Token 356: ' nums' (ID: 18117)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6716305017471313
    2. 'for' → logprob: -0.9216305017471313
    3. '           ' → logprob: -2.546630382537842
    4. '       ' → logprob: -4.671630382537842
    5. '   ' → logprob: -5.921630382537842
    6. ' ' → logprob: -7.671630382537842
    7. '	for' → logprob: -9.046630859375
    8. '    ' → logprob: -9.921630859375
    9. '
' → logprob: -10.171630859375
    10. '  ' → logprob: -10.421630859375

Token 357: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.040860045701265335
    2. '=' → logprob: -3.5408599376678467
    3. '           ' → logprob: -5.415860176086426
    4. '       ' → logprob: -6.165860176086426
    5. 'for' → logprob: -6.540860176086426
    6. '        ' → logprob: -6.915860176086426
    7. ' ' → logprob: -7.415860176086426
    8. ' for' → logprob: -7.915860176086426
    9. ')' → logprob: -8.415860176086426
    10. '         ' → logprob: -8.540860176086426

Token 358: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.012515068985521793
    2. ' self' → logprob: -4.387515068054199
    3. '           ' → logprob: -12.5125150680542
    4. '   ' → logprob: -14.5125150680542
    5. '[self' → logprob: -14.6375150680542
    6. '       ' → logprob: -15.2625150680542
    7. '	self' → logprob: -16.137516021728516
    8. '(self' → logprob: -16.262516021728516
    9. '=self' → logprob: -16.637516021728516
    10. ' ' → logprob: -16.762516021728516

Token 359: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0009851736249402165
    2. 'numbers' → logprob: -7.250985145568848
    3. 'umbers' → logprob: -8.250985145568848
    4. ' .' → logprob: -12.875985145568848
    5. '.number' → logprob: -13.250985145568848
    6. '.' → logprob: -13.375985145568848
    7. '_numbers' → logprob: -13.625985145568848
    8. 'n' → logprob: -13.625985145568848
    9. '(numbers' → logprob: -14.000985145568848
    10. 'self' → logprob: -14.250985145568848

Token 360: 'umbers' (ID: 14501)
  Prédit: 'umbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umbers' → logprob: -0.0003397535183466971
    2. 'numbers' → logprob: -8.37533950805664
    3. 'ums' → logprob: -9.50033950805664
    4. '_numbers' → logprob: -12.00033950805664
    5. 'umber' → logprob: -12.25033950805664
    6. '```' → logprob: -12.50033950805664
    7. '   ' → logprob: -12.62533950805664
    8. 'um' → logprob: -12.87533950805664
    9. '[' → logprob: -13.37533950805664
    10. '``' → logprob: -13.62533950805664

Token 361: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14188186824321747
    2. '           ' → logprob: -2.1418819427490234
    3. '            
' → logprob: -5.016881942749023
    4. '    
' → logprob: -6.266881942749023
    5. 'for' → logprob: -6.391881942749023
    6. '        
' → logprob: -6.391881942749023
    7. '       ' → logprob: -7.141881942749023
    8. ' for' → logprob: -7.391881942749023
    9. '[' → logprob: -8.141881942749023
    10. '
' → logprob: -8.266881942749023

Token 362: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34666600823402405
    2. '
' → logprob: -1.4716659784317017
    3. '       ' → logprob: -3.346666097640991
    4. '    
' → logprob: -5.096665859222412
    5. '        
' → logprob: -5.596665859222412
    6. '	' → logprob: -5.846665859222412
    7. '   ' → logprob: -5.971665859222412
    8. ' for' → logprob: -5.971665859222412
    9. '  
' → logprob: -6.346665859222412
    10. '		' → logprob: -6.471665859222412

Token 363: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7374029159545898
    2. 'for' (adapté à ' for') → logprob: -0.7374029159545898
    3. '           ' → logprob: -3.23740291595459
    4. '       ' → logprob: -6.36240291595459
    5. ' ' → logprob: -7.11240291595459
    6. '
' → logprob: -7.61240291595459
    7. '	for' → logprob: -8.11240291595459
    8. '        ' → logprob: -8.86240291595459
    9. ' ' → logprob: -9.11240291595459
    10. '   ' → logprob: -9.36240291595459

Token 364: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5759990215301514
    2. 'i' → logprob: -0.8259990215301514
    3. '   ' → logprob: -10.57599925994873
    4. '	i' → logprob: -11.45099925994873
    5. ' ' → logprob: -11.70099925994873
    6. '_i' → logprob: -12.07599925994873
    7. '    ' → logprob: -12.95099925994873
    8. '       ' → logprob: -13.20099925994873
    9. '           ' → logprob: -14.07599925994873
    10. ' ' → logprob: -14.20099925994873

Token 365: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03072628378868103
    2. 'in' → logprob: -3.530726194381714
    3. ' ' → logprob: -7.155726432800293
    4. '	in' → logprob: -9.655726432800293
    5. ' i' → logprob: -10.155726432800293
    6. '+' → logprob: -10.530726432800293
    7. '   ' → logprob: -11.030726432800293
    8. '    ' → logprob: -11.655726432800293
    9. '  ' → logprob: -11.905726432800293
    10. ',' → logprob: -12.030726432800293

Token 366: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31333690881729126
    2. 'range' → logprob: -1.3133368492126465
    3. ' ' → logprob: -9.938337326049805
    4. '   ' → logprob: -11.313337326049805
    5. '  ' → logprob: -11.813337326049805
    6. '    ' → logprob: -13.313337326049805
    7. '0' → logprob: -13.688337326049805
    8. 'r' → logprob: -14.188337326049805
    9. '     ' → logprob: -14.188337326049805
    10. ' r' → logprob: -14.313337326049805

Token 367: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02872428111732006
    2. '(' → logprob: -3.903724193572998
    3. 'n' → logprob: -5.403724193572998
    4. ' n' → logprob: -5.778724193572998
    5. '1' → logprob: -8.153724670410156
    6. ' (' → logprob: -8.653724670410156
    7. ' ' → logprob: -9.778724670410156
    8. '(len' → logprob: -10.903724670410156
    9. '(
' → logprob: -12.153724670410156
    10. '(i' → logprob: -12.403724670410156

Token 368: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5430096387863159
    2. '-' → logprob: -1.668009638786316
    3. '):
' → logprob: -2.1680097579956055
    4. ' -' → logprob: -2.1680097579956055
    5. '   ' → logprob: -7.1680097579956055
    6. ')' → logprob: -7.6680097579956055
    7. ' ):' → logprob: -8.793009757995605
    8. '       ' → logprob: -9.543009757995605
    9. ' ' → logprob: -10.668009757995605
    10. '
' → logprob: -10.668009757995605

Token 369: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2145211398601532
    2. ' for' → logprob: -2.4645211696624756
    3. '               ' → logprob: -2.5895211696624756
    4. '       ' → logprob: -3.8395211696624756
    5. ' ' → logprob: -5.3395209312438965
    6. '	       ' → logprob: -6.3395209312438965
    7. '   ' → logprob: -6.4645209312438965
    8. 'for' → logprob: -7.2145209312438965
    9. '<|end|>' → logprob: -7.4645209312438965
    10. '	           ' → logprob: -7.7145209312438965

Token 370: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.030093519017100334
    2. 'for' (adapté à ' for') → logprob: -3.5300934314727783
    3. '           ' → logprob: -8.6550931930542
    4. '   ' → logprob: -9.1550931930542
    5. '               ' → logprob: -10.0300931930542
    6. '	for' → logprob: -11.7800931930542
    7. '    ' → logprob: -12.4050931930542
    8. '       ' → logprob: -13.1550931930542
    9. '                   ' → logprob: -14.0300931930542
    10. ' ' → logprob: -14.1550931930542

Token 371: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.4845117926597595
    2. 'j' → logprob: -0.9845117926597595
    3. 'i' → logprob: -5.109511852264404
    4. ' i' → logprob: -5.484511852264404
    5. '                   ' → logprob: -9.859511375427246
    6. '               ' → logprob: -10.359511375427246
    7. '   ' → logprob: -10.484511375427246
    8. '           ' → logprob: -11.109511375427246
    9. ' (' → logprob: -11.234511375427246
    10. '    ' → logprob: -11.359511375427246

Token 372: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013565927743911743
    2. 'in' → logprob: -4.388566017150879
    3. ' i' → logprob: -7.638566017150879
    4. ' ' → logprob: -9.388566017150879
    5. '=i' → logprob: -9.388566017150879
    6. '                ' → logprob: -9.638566017150879
    7. ' =' → logprob: -9.638566017150879
    8. '(i' → logprob: -9.763566017150879
    9. '	in' → logprob: -10.263566017150879
    10. '=' → logprob: -10.263566017150879

Token 373: ' range' (ID: 3352)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6082633137702942
    2. '(i' → logprob: -1.4832632541656494
    3. 'range' → logprob: -1.9832632541656494
    4. ' i' → logprob: -2.9832632541656494
    5. ' range' → logprob: -3.2332632541656494
    6. '(range' → logprob: -7.6082634925842285
    7. ' (' → logprob: -8.10826301574707
    8. 'n' → logprob: -9.35826301574707
    9. '   ' → logprob: -9.60826301574707
    10. '(' → logprob: -9.98326301574707

Token 374: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.005364079028367996
    2. 'i' → logprob: -5.505363941192627
    3. '(n' → logprob: -6.755363941192627
    4. '(' → logprob: -9.755364418029785
    5. 'n' → logprob: -10.505364418029785
    6. ' i' → logprob: -11.005364418029785
    7. ' (' → logprob: -11.380364418029785
    8. '(
' → logprob: -13.005364418029785
    9. '   ' → logprob: -13.755364418029785
    10. ')' → logprob: -14.130364418029785

Token 375: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2014756053686142
    2. ' +' → logprob: -1.7014756202697754
    3. '1' → logprob: -10.326475143432617
    4. '+
' → logprob: -11.451475143432617
    5. ' +
' → logprob: -12.201475143432617
    6. ' ' → logprob: -12.451475143432617
    7. '   ' → logprob: -12.576475143432617
    8. '+i' → logprob: -13.201475143432617
    9. '+j' → logprob: -14.201475143432617
    10. '
' → logprob: -14.576475143432617

Token 376: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006266565760597587
    2. ' ' → logprob: -7.375626564025879
    3. '   ' → logprob: -16.375627517700195
    4. '0' → logprob: -17.750627517700195
    5. '```' → logprob: -17.875627517700195
    6. '  ' → logprob: -18.375627517700195
    7. '    ' → logprob: -18.500627517700195
    8. '
' → logprob: -18.938127517700195
    9. '2' → logprob: -19.063127517700195
    10. 'i' → logprob: -19.375627517700195

Token 377: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.250015258789062
    3. '
' → logprob: -14.625015258789062
    4. '0' → logprob: -14.625015258789062
    5. '   ' → logprob: -14.875015258789062
    6. 'i' → logprob: -14.875015258789062
    7. 'n' → logprob: -16.562515258789062
    8. '2' → logprob: -16.625015258789062
    9. 'for' → logprob: -17.000015258789062
    10. '       ' → logprob: -17.312515258789062

Token 378: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013654236681759357
    2. ',n' → logprob: -4.5136542320251465
    3. ' ,' → logprob: -6.2636542320251465
    4. 'n' → logprob: -7.5136542320251465
    5. '(n' → logprob: -9.263654708862305
    6. '):' → logprob: -11.138654708862305
    7. '):
' → logprob: -12.013654708862305
    8. ',
' → logprob: -12.263654708862305
    9. '<|end|>' → logprob: -12.263654708862305
    10. '   ' → logprob: -12.888654708862305

Token 379: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002476604888215661
    2. ' n' → logprob: -6.002476692199707
    3. '	n' → logprob: -14.377476692199707
    4. ')' → logprob: -15.627476692199707
    5. '   ' → logprob: -16.37747573852539
    6. '           ' → logprob: -16.62747573852539
    7. ')n' → logprob: -16.75247573852539
    8. '                   ' → logprob: -16.87747573852539
    9. '       ' → logprob: -17.50247573852539
    10. '
' → logprob: -17.75247573852539

Token 380: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06996455788612366
    2. '):
' → logprob: -2.694964647293091
    3. ' ):' → logprob: -11.569964408874512
    4. ')' → logprob: -11.944964408874512
    5. ':' → logprob: -11.944964408874512
    6. '):
' → logprob: -13.194964408874512
    7. '):

' → logprob: -13.444964408874512
    8. '           ' → logprob: -14.319964408874512
    9. '   ' → logprob: -14.819964408874512
    10. ' ):
' → logprob: -14.944964408874512

Token 381: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05604986846446991
    2. '           ' → logprob: -3.5560498237609863
    3. '               ' → logprob: -4.681049823760986
    4. ':' → logprob: -5.181049823760986
    5. ' ' → logprob: -5.556049823760986
    6. ',' → logprob: -6.556049823760986
    7. '                    
' → logprob: -6.806049823760986
    8. '                       ' → logprob: -7.431049823760986
    9. '   ' → logprob: -7.681049823760986
    10. ' if' → logprob: -7.806049823760986

Token 382: ' ni' (ID: 2565)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.81513512134552
    2. 'n' → logprob: -1.56513512134552
    3. 'if' → logprob: -1.69013512134552
    4. ' n' → logprob: -2.1901350021362305
    5. 'num' → logprob: -3.9401350021362305
    6. ' num' → logprob: -4.3151350021362305
    7. '                   ' → logprob: -4.5651350021362305
    8. '                       ' → logprob: -4.9401350021362305
    9. '           ' → logprob: -7.5651350021362305
    10. '   ' → logprob: -7.8151350021362305

Token 383: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05389915406703949
    2. ',' → logprob: -3.428899049758911
    3. '=' → logprob: -4.42889928817749
    4. 's' → logprob: -5.17889928817749
    5. '     ' → logprob: -7.80389928817749
    6. ' ' → logprob: -7.92889928817749
    7. 'm' → logprob: -8.178898811340332
    8. '        ' → logprob: -8.178898811340332
    9. '         ' → logprob: -8.803898811340332
    10. ']' → logprob: -8.803898811340332

Token 384: ' nj' (ID: 8979)
  Prédit: 'nj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -0.0385582335293293
    2. ' nj' → logprob: -3.4135582447052
    3. 'nums' → logprob: -5.413558006286621
    4. ' nums' → logprob: -8.288558006286621
    5. 'n' → logprob: -8.663558006286621
    6. 'npj' → logprob: -12.038558006286621
    7. 'num' → logprob: -12.288558006286621
    8. ' n' → logprob: -12.913558006286621
    9. 'ns' → logprob: -13.163558006286621
    10. 'noj' → logprob: -14.163558006286621

Token 385: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759824514389038
    2. ' =' → logprob: -0.8259824514389038
    3. ')' → logprob: -10.700982093811035
    4. ']' → logprob: -11.825982093811035
    5. ' ' → logprob: -12.950982093811035
    6. ',' → logprob: -13.075982093811035
    7. '           ' → logprob: -13.075982093811035
    8. ']=' → logprob: -13.450982093811035
    9. ')=' → logprob: -13.950982093811035
    10. '=self' → logprob: -14.200982093811035

Token 386: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.0025385632179677486
    2. ' nums' → logprob: -6.002538681030273
    3. '                   ' → logprob: -10.752538681030273
    4. 'self' → logprob: -11.002538681030273
    5. 'numbers' → logprob: -11.502538681030273
    6. '               ' → logprob: -12.252538681030273
    7. '(nums' → logprob: -12.752538681030273
    8. '           ' → logprob: -12.877538681030273
    9. 'num' → logprob: -14.002538681030273
    10. '                    ' → logprob: -14.377538681030273

Token 387: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.1318875446449965e-05
    2. '[' → logprob: -10.250041007995605
    3. '[j' → logprob: -12.125041007995605
    4. '[
' → logprob: -15.375041007995605
    5. 'i' → logprob: -16.125041961669922
    6. '```' → logprob: -16.500041961669922
    7. ' [' → logprob: -18.000041961669922
    8. '
' → logprob: -18.375041961669922
    9. '   ' → logprob: -18.500041961669922
    10. ']' → logprob: -18.500041961669922

Token 388: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.012829465791583061
    2. ',' → logprob: -4.387829303741455
    3. ']' → logprob: -8.512829780578613
    4. ' ],' → logprob: -9.262829780578613
    5. ' ,' → logprob: -10.887829780578613
    6. ' ' → logprob: -13.387829780578613
    7. '),' → logprob: -13.512829780578613
    8. ',j' → logprob: -14.387829780578613
    9. '>,' → logprob: -14.762829780578613
    10. ',n' → logprob: -14.887829780578613

Token 389: ' nums' (ID: 18117)
  Prédit: ' nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.054902710020542145
    2. 'nums' → logprob: -2.9299027919769287
    3. '(nums' → logprob: -11.679903030395508
    4. ' ' → logprob: -12.554903030395508
    5. ' nj' → logprob: -12.679903030395508
    6. ' 
' → logprob: -14.054903030395508
    7. ' ' → logprob: -14.179903030395508
    8. ' n' → logprob: -14.304903030395508
    9. '    ' → logprob: -14.554903030395508
    10. 'n' → logprob: -14.679903030395508

Token 390: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -5.514650183613412e-05
    2. 'j' → logprob: -9.875055313110352
    3. '[' → logprob: -13.625055313110352
    4. ' [' → logprob: -14.250055313110352
    5. '[n' → logprob: -15.000055313110352
    6. '[
' → logprob: -15.375055313110352
    7. '   ' → logprob: -15.375055313110352
    8. '
' → logprob: -15.375055313110352
    9. '	j' → logprob: -15.375055313110352
    10. '```' → logprob: -16.12505531311035

Token 391: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7757266759872437
    2. ']' → logprob: -0.7757266759872437
    3. '                   ' → logprob: -2.775726795196533
    4. ']
' → logprob: -4.775726795196533
    5. ')
' → logprob: -5.025726795196533
    6. '<|end|>' → logprob: -6.900726795196533
    7. '               ' → logprob: -8.150726318359375
    8. ')]' → logprob: -8.775726318359375
    9. '<|end|>' → logprob: -9.275726318359375
    10. '                       ' → logprob: -9.525726318359375

Token 392: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -3.976922744186595e-05
    2. '               ' → logprob: -10.750040054321289
    3. '           ' → logprob: -12.125040054321289
    4. '                    ' → logprob: -12.375040054321289
    5. '                    
' → logprob: -12.875040054321289
    6. '                  ' → logprob: -13.250040054321289
    7. '                       ' → logprob: -13.500040054321289
    8. '		           ' → logprob: -14.250040054321289
    9. '       ' → logprob: -14.375040054321289
    10. ',' → logprob: -15.000040054321289

Token 393: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.39793455600738525
    2. '                   ' → logprob: -1.1479345560073853
    3. ' if' → logprob: -4.522934436798096
    4. '               ' → logprob: -9.772934913635254
    5. '           ' → logprob: -10.647934913635254
    6. '                       ' → logprob: -10.647934913635254
    7. '   ' → logprob: -11.272934913635254
    8. '                  ' → logprob: -11.772934913635254
    9. '       ' → logprob: -12.897934913635254
    10. '	if' → logprob: -13.022934913635254

Token 394: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009769546799361706
    2. ' self' → logprob: -4.634769439697266
    3. 'Number' → logprob: -12.384769439697266
    4. '   ' → logprob: -13.384769439697266
    5. '(self' → logprob: -13.509769439697266
    6. '           ' → logprob: -13.634769439697266
    7. '	self' → logprob: -13.884769439697266
    8. '                   ' → logprob: -14.634769439697266
    9. 'Self' → logprob: -14.884769439697266
    10. 'comp' → logprob: -14.884769439697266

Token 395: '.comp' (ID: 20569)
  Prédit: '.comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.comp' → logprob: -3.4121114822482923e-06
    2. 'comp' → logprob: -13.875003814697266
    3. '	comp' → logprob: -14.125003814697266
    4. '.' → logprob: -14.625003814697266
    5. '.Comp' → logprob: -15.250003814697266
    6. ' .' → logprob: -15.875003814697266
    7. '   ' → logprob: -16.000003814697266
    8. '`.' → logprob: -16.125003814697266
    9. '}.' → logprob: -16.250003814697266
    10. ''.' → logprob: -16.625003814697266

Token 396: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.00013643606507685035
    2. 'is' → logprob: -9.375136375427246
    3. '.' → logprob: -10.000136375427246
    4. '().' → logprob: -12.875136375427246
    5. ').' → logprob: -14.000136375427246
    6. ' .' → logprob: -14.500136375427246
    7. '   ' → logprob: -15.500136375427246
    8. '.isnan' → logprob: -15.750136375427246
    9. '{}.' → logprob: -15.875136375427246
    10. '           ' → logprob: -16.000137329101562

Token 397: '_conf' (ID: 39390)
  Prédit: '_conf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_conf' → logprob: -6.704273118884885e-07
    2. 'conf' → logprob: -14.750000953674316
    3. '_con' → logprob: -16.25
    4. '_co' → logprob: -17.125
    5. '_c' → logprob: -17.875
    6. '_cons' → logprob: -18.375
    7. '_' → logprob: -18.5
    8. '_cont' → logprob: -18.75
    9. '
' → logprob: -19.25
    10. ' conflict' → logprob: -19.375

Token 398: 'lict' (ID: 38585)
  Prédit: 'lict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lict' → logprob: -0.04991508647799492
    2. 'ict' → logprob: -3.049915075302124
    3. '(' → logprob: -7.174915313720703
    4. 'l' → logprob: -8.049915313720703
    5. 'li' → logprob: -9.924915313720703
    6. '(n' → logprob: -10.299915313720703
    7. '```' → logprob: -10.299915313720703
    8. 'lect' → logprob: -11.299915313720703
    9. 'lic' → logprob: -11.424915313720703
    10. '``' → logprob: -11.799915313720703

Token 399: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.1888679839321412e-05
    2. '(n' → logprob: -10.875021934509277
    3. ' (' → logprob: -13.000021934509277
    4. '(
' → logprob: -14.625021934509277
    5. ')(' → logprob: -16.62502098083496
    6. '((' → logprob: -17.25002098083496
    7. ')' → logprob: -17.50002098083496
    8. '           ' → logprob: -18.00002098083496
    9. '(nums' → logprob: -18.50002098083496
    10. '(

' → logprob: -18.50002098083496

Token 400: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -0.34879690408706665
    2. '(' → logprob: -1.2237968444824219
    3. ')' → logprob: -8.723796844482422
    4. 'n' → logprob: -9.973796844482422
    5. ')(' → logprob: -10.223796844482422
    6. ' ni' → logprob: -10.973796844482422
    7. '   ' → logprob: -11.098796844482422
    8. '       ' → logprob: -11.473796844482422
    9. 'nii' → logprob: -11.598796844482422
    10. '(n' → logprob: -11.973796844482422

Token 401: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007193523459136486
    2. ',n' → logprob: -5.007193565368652
    3. ' ,' → logprob: -7.757193565368652
    4. ',j' → logprob: -11.132193565368652
    5. 'nj' → logprob: -11.132193565368652
    6. ' nj' → logprob: -11.757193565368652
    7. ',
' → logprob: -11.882193565368652
    8. '                   ' → logprob: -13.257193565368652
    9. 'n' → logprob: -14.132193565368652
    10. '(n' → logprob: -14.132193565368652

Token 402: ' nj' (ID: 8979)
  Prédit: 'nj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -0.0008383385138586164
    2. ' nj' → logprob: -7.125838279724121
    3. 'n' → logprob: -11.250838279724121
    4. '   ' → logprob: -11.375838279724121
    5. ' ' → logprob: -12.625838279724121
    6. '
' → logprob: -13.625838279724121
    7. '	n' → logprob: -13.875838279724121
    8. ' ' → logprob: -14.750838279724121
    9. '       ' → logprob: -14.875838279724121
    10. 'nij' → logprob: -14.875838279724121

Token 403: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12896792590618134
    2. '):
' → logprob: -2.1289680004119873
    3. '                   ' → logprob: -6.503967761993408
    4. '                       ' → logprob: -7.753967761993408
    5. ':' → logprob: -10.128968238830566
    6. '):
' → logprob: -10.378968238830566
    7. ')' → logprob: -10.878968238830566
    8. ' ):' → logprob: -11.878968238830566
    9. '               ' → logprob: -12.128968238830566
    10. '):

' → logprob: -12.503968238830566

Token 404: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0001170132018160075
    2. '                   ' → logprob: -10.250117301940918
    3. ':' → logprob: -11.125117301940918
    4. 'self' → logprob: -11.250117301940918
    5. '               ' → logprob: -11.750117301940918
    6. ',' → logprob: -12.000117301940918
    7. '                           ' → logprob: -12.125117301940918
    8. '                        ' → logprob: -12.250117301940918
    9. ' self' → logprob: -12.250117301940918
    10. '                        
' → logprob: -12.250117301940918

Token 405: ' self' (ID: 1051)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.42512452602386475
    2. 'self' (adapté à ' self') → logprob: -1.4251245260238647
    3. ' self' → logprob: -2.3001246452331543
    4. '                           ' → logprob: -5.300124645233154
    5. '   ' → logprob: -8.550124168395996
    6. '                   ' → logprob: -9.175124168395996
    7. '           ' → logprob: -9.550124168395996
    8. '
' → logprob: -10.300124168395996
    9. ' ' → logprob: -10.300124168395996
    10. '               ' → logprob: -10.800124168395996

Token 406: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.00042221311014145613
    2. '.' → logprob: -8.250422477722168
    3. 'graph' → logprob: -9.375422477722168
    4. ' .' → logprob: -10.750422477722168
    5. '	graph' → logprob: -10.750422477722168
    6. '           ' → logprob: -11.500422477722168
    7. '                   ' → logprob: -12.750422477722168
    8. '                       ' → logprob: -12.750422477722168
    9. ' graph' → logprob: -13.000422477722168
    10. '
' → logprob: -13.000422477722168

Token 407: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.372294698550832e-06
    2. '[num' → logprob: -12.375009536743164
    3. '[n' → logprob: -12.750009536743164
    4. ')[' → logprob: -14.500009536743164
    5. ' [' → logprob: -14.875009536743164
    6. '[self' → logprob: -15.000009536743164
    7. '][' → logprob: -15.000009536743164
    8. '       ' → logprob: -16.000009536743164
    9. '.setdefault' → logprob: -16.375009536743164
    10. '   ' → logprob: -16.375009536743164

Token 408: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -2.1888679839321412e-05
    2. '[' → logprob: -11.375021934509277
    3. ' ni' → logprob: -11.875021934509277
    4. 'n' → logprob: -13.500021934509277
    5. '           ' → logprob: -14.250021934509277
    6. 'num' → logprob: -15.250021934509277
    7. '   ' → logprob: -15.375021934509277
    8. 'nj' → logprob: -15.625021934509277
    9. '       ' → logprob: -15.750021934509277
    10. '               ' → logprob: -16.25002098083496

Token 409: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00199608551338315
    2. '[' → logprob: -6.751996040344238
    3. '][' → logprob: -7.126996040344238
    4. ' ].' → logprob: -12.001996040344238
    5. '[j' → logprob: -12.751996040344238
    6. ']' → logprob: -12.876996040344238
    7. '[n' → logprob: -12.876996040344238
    8. '[num' → logprob: -13.001996040344238
    9. '.add' → logprob: -13.626996040344238
    10. '           ' → logprob: -13.876996040344238

Token 410: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: 0.0
    2. '.add' → logprob: -17.625
    3. ' add' → logprob: -18.625
    4. 'ad' → logprob: -21.125
    5. 'adde' → logprob: -21.875
    6. '_add' → logprob: -22.0
    7. 'addi' → logprob: -22.25
    8. '	add' → logprob: -22.5
    9. 'append' → logprob: -22.5
    10. 'update' → logprob: -22.875

Token 411: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.08944896562025e-05
    2. 'nj' → logprob: -9.500081062316895
    3. '(' → logprob: -12.750081062316895
    4. 'n' → logprob: -12.875081062316895
    5. ' nj' → logprob: -14.875081062316895
    6. ' (' → logprob: -16.500080108642578
    7. '(
' → logprob: -16.625080108642578
    8. '	n' → logprob: -17.875080108642578
    9. 'Nj' → logprob: -17.875080108642578
    10. 'nij' → logprob: -18.000080108642578

Token 412: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.7697225252486533e-06
    2. '[j' → logprob: -13.125003814697266
    3. ' j' → logprob: -14.375003814697266
    4. '_j' → logprob: -14.750003814697266
    5. '$j' → logprob: -15.500003814697266
    6. '	j' → logprob: -16.250003814697266
    7. '
' → logprob: -16.375003814697266
    8. ',j' → logprob: -16.875003814697266
    9. ')' → logprob: -17.125003814697266
    10. '   ' → logprob: -17.125003814697266

Token 413: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2525915801525116
    2. ')
' → logprob: -1.502591609954834
    3. '                       ' → logprob: -7.377591609954834
    4. ')
' → logprob: -10.877591133117676
    5. '                   ' → logprob: -11.877591133117676
    6. ')

' → logprob: -12.502591133117676
    7. '           ' → logprob: -13.252591133117676
    8. '               ' → logprob: -13.627591133117676
    9. ' )' → logprob: -13.877591133117676
    10. ' )
' → logprob: -14.252591133117676

Token 414: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0005191935342736542
    2. 'self' → logprob: -7.625519275665283
    3. '               ' → logprob: -11.625518798828125
    4. '                   ' → logprob: -12.250518798828125
    5. ' self' → logprob: -12.500518798828125
    6. ' and' → logprob: -13.000518798828125
    7. ',' → logprob: -13.125518798828125
    8. '           ' → logprob: -13.375518798828125
    9. 'and' → logprob: -13.625518798828125
    10. '
' → logprob: -13.750518798828125

Token 415: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2035885900259018
    2. ' self' → logprob: -1.703588604927063
    3. '                       ' → logprob: -6.203588485717773
    4. '                        
' → logprob: -9.828588485717773
    5. '
' → logprob: -10.203588485717773
    6. '                        ' → logprob: -11.328588485717773
    7. ' ' → logprob: -11.328588485717773
    8. ' 
' → logprob: -11.953588485717773
    9. '[self' → logprob: -12.203588485717773
    10. ' ' → logprob: -12.453588485717773

Token 416: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.0013903543585911393
    2. '.' → logprob: -6.62639045715332
    3. ' .' → logprob: -10.75139045715332
    4. '.
' → logprob: -11.37639045715332
    5. 'raph' → logprob: -11.50139045715332
    6. '
' → logprob: -12.12639045715332
    7. '	graph' → logprob: -12.37639045715332
    8. 'graph' → logprob: -12.75139045715332
    9. '[' → logprob: -13.50139045715332
    10. '.g' → logprob: -13.62639045715332

Token 417: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0003374886582605541
    2. '[' → logprob: -8.000337600708008
    3. '[[' → logprob: -14.500337600708008
    4. '[
' → logprob: -15.000337600708008
    5. 'nj' → logprob: -15.625337600708008
    6. '   ' → logprob: -15.625337600708008
    7. '```' → logprob: -15.750337600708008
    8. ' [' → logprob: -16.125337600708008
    9. '       ' → logprob: -16.625337600708008
    10. '_[' → logprob: -16.625337600708008

Token 418: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004500023555010557
    2. 'i' → logprob: -5.504499912261963
    3. '[j' → logprob: -9.004500389099121
    4. '[' → logprob: -9.254500389099121
    5. ']' → logprob: -9.379500389099121
    6. 'um' → logprob: -10.754500389099121
    7. 'nj' → logprob: -11.129500389099121
    8. '][' → logprob: -11.379500389099121
    9. '```' → logprob: -11.379500389099121
    10. 'umbers' → logprob: -11.504500389099121

Token 419: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.000855001388117671
    2. '[' → logprob: -7.125854969024658
    3. '][' → logprob: -11.250855445861816
    4. ']' → logprob: -11.250855445861816
    5. '}.' → logprob: -11.375855445861816
    6. '.' → logprob: -12.125855445861816
    7. ' ].' → logprob: -12.375855445861816
    8. '   ' → logprob: -13.375855445861816
    9. '].[' → logprob: -14.125855445861816
    10. '           ' → logprob: -14.875855445861816

Token 420: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.9361264946837764e-07
    2. ' add' → logprob: -15.875
    3. '.add' → logprob: -18.5
    4. 'append' → logprob: -18.75
    5. 'ad' → logprob: -19.125
    6. 'adj' → logprob: -19.875
    7. '	add' → logprob: -20.125
    8. ')add' → logprob: -20.75
    9. '```' → logprob: -21.25
    10. ' ' → logprob: -22.0

Token 421: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.849109119386412e-06
    2. '(
' → logprob: -11.750009536743164
    3. '(n' → logprob: -13.875009536743164
    4. ' (' → logprob: -14.750009536743164
    5. 'ni' → logprob: -15.625009536743164
    6. '   ' → logprob: -16.125009536743164
    7. '```' → logprob: -16.500009536743164
    8. '(i' → logprob: -17.250009536743164
    9. '(

' → logprob: -17.375009536743164
    10. '	' → logprob: -17.875009536743164

Token 422: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -9.849109119386412e-06
    2. ' ni' → logprob: -11.875009536743164
    3. 'n' → logprob: -13.500009536743164
    4. '   ' → logprob: -14.125009536743164
    5. '
' → logprob: -16.125009536743164
    6. '       ' → logprob: -16.250009536743164
    7. '           ' → logprob: -16.625009536743164
    8. '(' → logprob: -17.000009536743164
    9. '	' → logprob: -17.250009536743164
    10. '     ' → logprob: -17.250009536743164

Token 423: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3915141355246305e-05
    2. ')
' → logprob: -11.25002384185791
    3. '                       ' → logprob: -12.12502384185791
    4. '                   ' → logprob: -13.37502384185791
    5. ' )' → logprob: -13.37502384185791
    6. '<|end|>' → logprob: -14.37502384185791
    7. '           ' → logprob: -14.50002384185791
    8. '               ' → logprob: -14.87502384185791
    9. '       ' → logprob: -15.62502384185791
    10. ')}' → logprob: -15.75002384185791

Token 424: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 425: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10413052141666412
    2. '       ' → logprob: -2.354130506515503
    3. '
' → logprob: -6.354130744934082
    4. '		' → logprob: -7.604130744934082
    5. '   ' → logprob: -8.354130744934082
    6. '	return' → logprob: -8.479130744934082
    7. 'return' (adapté à ' return') → logprob: -8.604130744934082
    8. '<|end|>' → logprob: -8.604130744934082
    9. '               ' → logprob: -8.729130744934082
    10. '    
' → logprob: -9.229130744934082

Token 426: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.34875795245170593
    2. 'self' → logprob: -1.2237579822540283
    3. ' ' → logprob: -9.22375774383545
    4. ' None' → logprob: -9.47375774383545
    5. 'None' → logprob: -9.59875774383545
    6. ' ' → logprob: -11.47375774383545
    7. '	self' → logprob: -11.47375774383545
    8. '<|end|>' → logprob: -11.47375774383545
    9. '  ' → logprob: -11.72375774383545
    10. 'graph' → logprob: -11.84875774383545

Token 427: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.004294215235859156
    2. '.' → logprob: -5.504294395446777
    3. '.comp' → logprob: -9.504294395446777
    4. '.Graph' → logprob: -9.879294395446777
    5. ' .' → logprob: -10.629294395446777
    6. 'Graph' → logprob: -11.379294395446777
    7. '.build' → logprob: -11.879294395446777
    8. '.builder' → logprob: -12.129294395446777
    9. '	graph' → logprob: -12.254294395446777
    10. 'graph' → logprob: -12.254294395446777

Token 428: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 429: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12486662715673447
    2. '    
' → logprob: -2.3748667240142822
    3. '
' → logprob: -3.8748667240142822
    4. 'def' → logprob: -5.999866485595703
    5. '        
' → logprob: -6.999866485595703
    6. '       ' → logprob: -8.874866485595703
    7. ' def' → logprob: -10.624866485595703
    8. '    
    
' → logprob: -11.499866485595703
    9. '            
' → logprob: -11.624866485595703
    10. '```' → logprob: -11.999866485595703

Token 430: ' class' (ID: 744)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01160356868058443
    2. '   ' → logprob: -4.511603355407715
    3. ' def' → logprob: -7.511603355407715
    4. '    
' → logprob: -11.761603355407715
    5. '	def' → logprob: -14.261603355407715
    6. '
' → logprob: -15.761603355407715
    7. ' ' → logprob: -16.26160430908203
    8. '  ' → logprob: -16.26160430908203
    9. 'class' (adapté à ' class') → logprob: -17.13660430908203
    10. '        
' → logprob: -17.26160430908203

Token 431: ' Component' (ID: 10996)
  Prédit: 'Component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Component' → logprob: -0.7164947390556335
    2. ' Component' → logprob: -1.9664947986602783
    3. 'Solver' → logprob: -2.5914947986602783
    4. ' Connected' → logprob: -2.9664947986602783
    5. 'DFS' → logprob: -2.9664947986602783
    6. ' DFS' → logprob: -2.9664947986602783
    7. 'Connected' → logprob: -3.2164947986602783
    8. ' Solver' → logprob: -3.2164947986602783
    9. 'Color' → logprob: -4.216494560241699
    10. ' Components' → logprob: -5.091494560241699

Token 432: 'Finder' (ID: 42976)
  Prédit: 'Finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Finder' → logprob: -0.030753443017601967
    2. 'Extractor' → logprob: -3.9057533740997314
    3. 'Builder' → logprob: -5.6557536125183105
    4. 'Explorer' → logprob: -6.4057536125183105
    5. '   ' → logprob: -6.5307536125183105
    6. 'Splitter' → logprob: -7.0307536125183105
    7. 's' → logprob: -7.9057536125183105
    8. 'Analyzer' → logprob: -8.030753135681152
    9. 'DFS' → logprob: -8.280753135681152
    10. 'Detector' → logprob: -8.405753135681152

Token 433: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25200793147087097
    2. ':
' → logprob: -1.5020079612731934
    3. '   ' → logprob: -9.877007484436035
    4. '(' → logprob: -11.377007484436035
    5. ':def' → logprob: -12.877007484436035
    6. 'def' → logprob: -13.002007484436035
    7. '(object' → logprob: -13.127007484436035
    8. ':
' → logprob: -13.502007484436035
    9. '       ' → logprob: -13.627007484436035
    10. '():
' → logprob: -13.752007484436035

Token 434: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00877020787447691
    2. '   ' → logprob: -4.758769989013672
    3. 'def' → logprob: -8.883769989013672
    4. '    
' → logprob: -11.758769989013672
    5. '
' → logprob: -12.758769989013672
    6. ' def' → logprob: -13.133769989013672
    7. '     ' → logprob: -13.508769989013672
    8. '           ' → logprob: -13.883769989013672
    9. '        
' → logprob: -14.508769989013672
    10. '      ' → logprob: -15.008769989013672

Token 435: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.18039198219776154
    2. ' def' → logprob: -2.180392026901245
    3. '       ' → logprob: -3.430392026901245
    4. '   ' → logprob: -3.930392026901245
    5. '	def' → logprob: -10.680392265319824
    6. '@' → logprob: -11.055392265319824
    7. ' ' → logprob: -12.180392265319824
    8. ' @' → logprob: -13.555392265319824
    9. '     ' → logprob: -13.930392265319824
    10. 'class' → logprob: -14.055392265319824

Token 436: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6553630828857422
    2. '__' → logprob: -1.7803630828857422
    3. ' __' → logprob: -2.030363082885742
    4. 'init' → logprob: -2.155363082885742
    5. ' def' → logprob: -3.030363082885742
    6. 'staticmethod' → logprob: -4.280363082885742
    7. '   ' → logprob: -7.030363082885742
    8. 'classmethod' → logprob: -7.155363082885742
    9. '_init' → logprob: -8.030363082885742
    10. '```' → logprob: -8.405363082885742

Token 437: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.274932143744081e-05
    2. 'iter' → logprob: -11.125042915344238
    3. 'int' → logprob: -11.250042915344238
    4. 'nit' → logprob: -11.625042915344238
    5. 'dict' → logprob: -13.125042915344238
    6. 'it' → logprob: -13.625042915344238
    7. 'set' → logprob: -14.750042915344238
    8. 'def' → logprob: -14.750042915344238
    9. '(init' → logprob: -14.750042915344238
    10. '__' → logprob: -14.875042915344238

Token 438: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005794849130325019
    2. '__(' → logprob: -8.125579833984375
    3. '       ' → logprob: -8.875579833984375
    4. ' (' → logprob: -9.875579833984375
    5. 'self' → logprob: -10.000579833984375
    6. '(' → logprob: -10.500579833984375
    7. ',' → logprob: -12.250579833984375
    8. '           ' → logprob: -12.500579833984375
    9. '   ' → logprob: -12.875579833984375
    10. '```' → logprob: -13.500579833984375

Token 439: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.253090865968261e-06
    2. ' self' → logprob: -11.875009536743164
    3. '           ' → logprob: -13.875009536743164
    4. ',' → logprob: -14.250009536743164
    5. '       ' → logprob: -15.000009536743164
    6. '(self' → logprob: -15.500009536743164
    7. ')' → logprob: -16.750009536743164
    8. ',self' → logprob: -17.375009536743164
    9. 'graph' → logprob: -17.750009536743164
    10. '               ' → logprob: -19.000009536743164

Token 440: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0382162481546402
    2. 'self' → logprob: -3.2882163524627686
    3. ' ,' → logprob: -9.913216590881348
    4. '(self' → logprob: -10.288216590881348
    5. 'graph' → logprob: -10.663216590881348
    6. ',self' → logprob: -10.663216590881348
    7. ' self' → logprob: -11.038216590881348
    8. '       ' → logprob: -11.413216590881348
    9. '           ' → logprob: -11.663216590881348
    10. '```' → logprob: -13.413216590881348

Token 441: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.006407923996448517
    2. ' graph' → logprob: -5.131407737731934
    3. '   ' → logprob: -8.131407737731934
    4. 'adj' → logprob: -9.381407737731934
    5. '       ' → logprob: -10.381407737731934
    6. '	graph' → logprob: -11.006407737731934
    7. ')' → logprob: -11.381407737731934
    8. 'self' → logprob: -11.381407737731934
    9. '           ' → logprob: -12.381407737731934
    10. '    ' → logprob: -12.631407737731934

Token 442: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.313730388879776
    2. '):' → logprob: -1.3137303590774536
    3. ':' → logprob: -7.938730239868164
    4. '):
' → logprob: -10.063730239868164
    5. ' ):' → logprob: -10.813730239868164
    6. '       ' → logprob: -11.188730239868164
    7. '   ' → logprob: -11.188730239868164
    8. ' ):
' → logprob: -11.438730239868164
    9. ',' → logprob: -11.938730239868164
    10. ')' → logprob: -13.813730239868164

Token 443: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2531529664993286
    2. '       ' → logprob: -1.5031529664993286
    3. 'self' → logprob: -6.753152847290039
    4. ' self' → logprob: -10.378152847290039
    5. '   ' → logprob: -11.253152847290039
    6. 'def' → logprob: -13.003152847290039
    7. '         ' → logprob: -13.253152847290039
    8. '               ' → logprob: -13.253152847290039
    9. '	       ' → logprob: -13.253152847290039
    10. '          ' → logprob: -13.628152847290039

Token 444: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0009583894861862063
    2. ' self' → logprob: -7.000958442687988
    3. '       ' → logprob: -10.250958442687988
    4. '           ' → logprob: -11.750958442687988
    5. 'graph' → logprob: -12.875958442687988
    6. '   ' → logprob: -14.500958442687988
    7. '	self' → logprob: -15.250958442687988
    8. '(self' → logprob: -16.375957489013672
    9. 'def' → logprob: -16.625957489013672
    10. '        ' → logprob: -16.875957489013672

Token 445: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.0004411591507960111
    2. 'graph' → logprob: -7.750441074371338
    3. '.' → logprob: -12.625441551208496
    4. '	graph' → logprob: -12.625441551208496
    5. ' .' → logprob: -12.875441551208496
    6. ' graph' → logprob: -13.750441551208496
    7. '_graph' → logprob: -16.00044059753418
    8. '.Graph' → logprob: -17.12544059753418
    9. '(graph' → logprob: -17.50044059753418
    10. '   ' → logprob: -17.75044059753418

Token 446: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28119856119155884
    2. ' =' → logprob: -1.406198501586914
    3. '           ' → logprob: -10.781198501586914
    4. '       ' → logprob: -11.406198501586914
    5. '        ' → logprob: -12.281198501586914
    6. '         ' → logprob: -12.656198501586914
    7. '=self' → logprob: -13.031198501586914
    8. '   ' → logprob: -13.406198501586914
    9. ',' → logprob: -13.906198501586914
    10. ':' → logprob: -14.406198501586914

Token 447: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.005234952084720135
    2. ' graph' → logprob: -5.255234718322754
    3. '	graph' → logprob: -13.880234718322754
    4. '(graph' → logprob: -15.380234718322754
    5. '.graph' → logprob: -17.88023567199707
    6. 'raph' → logprob: -19.13023567199707
    7. '_graph' → logprob: -19.25523567199707
    8. 'Graph' → logprob: -19.75523567199707
    9. 'graphql' → logprob: -19.75523567199707
    10. '       ' → logprob: -20.75523567199707

Token 448: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5050906538963318
    2. '
' → logprob: -1.2550907135009766
    3. '        
' → logprob: -2.5050907135009766
    4. '    
' → logprob: -3.8800907135009766
    5. '           ' → logprob: -5.005090713500977
    6. '<|end|>' → logprob: -6.755090713500977
    7. '   ' → logprob: -7.130090713500977
    8. '  
' → logprob: -9.005090713500977
    9. 'def' → logprob: -9.380090713500977
    10. '            
' → logprob: -9.630090713500977

Token 449: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0712546557188034
    2. '
' → logprob: -2.8212547302246094
    3. '           ' → logprob: -5.571254730224609
    4. '        
' → logprob: -5.821254730224609
    5. '    
' → logprob: -6.571254730224609
    6. '   ' → logprob: -6.946254730224609
    7. 'def' → logprob: -9.44625473022461
    8. '            
' → logprob: -11.94625473022461
    9. '  
' → logprob: -12.19625473022461
    10. '<|end|>' → logprob: -12.69625473022461

Token 450: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0019581327214837074
    2. '           ' → logprob: -6.25195837020874
    3. '       ' → logprob: -11.001957893371582
    4. ' self' → logprob: -11.501957893371582
    5. 'def' → logprob: -13.501957893371582
    6. '
' → logprob: -14.751957893371582
    7. '   ' → logprob: -14.876957893371582
    8. 'visited' → logprob: -15.376957893371582
    9. '	self' → logprob: -16.6269588470459
    10. '         ' → logprob: -17.2519588470459

Token 451: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -0.0024781543761491776
    2. 'visited' → logprob: -6.002478122711182
    3. ' visited' → logprob: -14.12747859954834
    4. 'vis' → logprob: -15.00247859954834
    5. '.color' → logprob: -15.00247859954834
    6. '.colors' → logprob: -15.37747859954834
    7. '.un' → logprob: -15.75247859954834
    8. 'seen' → logprob: -16.127477645874023
    9. '.components' → logprob: -16.252477645874023
    10. '.se' → logprob: -16.502477645874023

Token 452: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -7.465036105713807e-06
    2. 'isted' → logprob: -12.625007629394531
    3. '_' → logprob: -13.375007629394531
    4. '```' → logprob: -14.125007629394531
    5. '
' → logprob: -14.875007629394531
    6. '   ' → logprob: -15.500007629394531
    7. '

' → logprob: -15.500007629394531
    8. '[' → logprob: -15.500007629394531
    9. 'ITED' → logprob: -16.25000762939453
    10. 'ite' → logprob: -16.37500762939453

Token 453: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31343528628349304
    2. '=' → logprob: -1.3134353160858154
    3. '=set' → logprob: -8.688435554504395
    4. ' ' → logprob: -12.688435554504395
    5. ':' → logprob: -14.813435554504395
    6. '={}' → logprob: -15.188435554504395
    7. '   ' → logprob: -15.313435554504395
    8. 'set' → logprob: -15.438435554504395
    9. ' ={' → logprob: -15.438435554504395
    10. '	' → logprob: -15.688435554504395

Token 454: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.5767892599105835
    2. 'set' → logprob: -0.8267892599105835
    3. '{}' → logprob: -7.076789379119873
    4. ' {}' → logprob: -12.451788902282715
    5. '	set' → logprob: -14.326788902282715
    6. '=set' → logprob: -14.951788902282715
    7. ' ' → logprob: -16.95178985595703
    8. '   ' → logprob: -17.57678985595703
    9. '{' → logprob: -18.20178985595703
    10. '  ' → logprob: -18.32678985595703

Token 455: '()
' (ID: 1234)
  Prédit: '        
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '        
' → logprob: -0.5419073104858398
    2. '    
' → logprob: -1.7919073104858398
    3. '       ' → logprob: -2.04190731048584
    4. '
' → logprob: -2.41690731048584
    5. '<|end|>' → logprob: -3.79190731048584
    6. '
        
' → logprob: -6.04190731048584
    7. '  
' → logprob: -6.54190731048584
    8. '   ' → logprob: -6.66690731048584
    9. '<|end|>' → logprob: -7.16690731048584
    10. 'def' → logprob: -7.29190731048584

Token 456: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5771757960319519
    2. '
' → logprob: -1.4521758556365967
    3. '        
' → logprob: -2.0771758556365967
    4. '    
' → logprob: -2.7021758556365967
    5. '   ' → logprob: -4.577175617218018
    6. 'def' → logprob: -6.452175617218018
    7. ' def' → logprob: -9.577176094055176
    8. '            
' → logprob: -9.827176094055176
    9. '  
' → logprob: -10.577176094055176
    10. '       
' → logprob: -10.952176094055176

Token 457: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3145483136177063
    2. 'def' → logprob: -1.8145482540130615
    3. '       ' → logprob: -2.3145482540130615
    4. '           ' → logprob: -5.814548492431641
    5. '   ' → logprob: -6.064548492431641
    6. '
' → logprob: -6.189548492431641
    7. ' self' → logprob: -7.814548492431641
    8. '        
' → logprob: -8.43954849243164
    9. '    
' → logprob: -9.31454849243164
    10. ' def' → logprob: -10.18954849243164

Token 458: '.components' (ID: 41872)
  Prédit: '.components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.components' → logprob: -0.0042330860160291195
    2. 'components' → logprob: -5.629232883453369
    3. '.component' → logprob: -7.879232883453369
    4. '.stack' → logprob: -9.754233360290527
    5. '.comp' → logprob: -10.254233360290527
    6. '   ' → logprob: -10.379233360290527
    7. ' components' → logprob: -10.504233360290527
    8. '.result' → logprob: -10.504233360290527
    9. '.current' → logprob: -11.129233360290527
    10. 'result' → logprob: -11.629233360290527

Token 459: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04323725774884224
    2. '=' → logprob: -3.1682372093200684
    3. '=[]' → logprob: -8.418237686157227
    4. '   ' → logprob: -11.918237686157227
    5. ' ' → logprob: -12.418237686157227
    6. ':' → logprob: -13.168237686157227
    7. '=[]
' → logprob: -13.418237686157227
    8. '[]' → logprob: -13.918237686157227
    9. '  ' → logprob: -14.668237686157227
    10. '       ' → logprob: -15.043237686157227

Token 460: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.000206401280593127
    2. '[]
' → logprob: -8.500205993652344
    3. '[]

' → logprob: -13.375205993652344
    4. ' []' → logprob: -14.125205993652344
    5. '[]"' → logprob: -15.125205993652344
    6. '[' → logprob: -15.625205993652344
    7. '[]}' → logprob: -15.750205993652344
    8. '   ' → logprob: -17.250205993652344
    9. '[])' → logprob: -19.000205993652344
    10. '[],' → logprob: -19.000205993652344

Token 461: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08813798427581787
    2. '
' → logprob: -3.5881381034851074
    3. '        
' → logprob: -3.7131381034851074
    4. '    
' → logprob: -4.088138103485107
    5. '   ' → logprob: -4.213138103485107
    6. '<|end|>' → logprob: -7.963138103485107
    7. 'def' → logprob: -9.08813762664795
    8. '            
' → logprob: -10.21313762664795
    9. '```' → logprob: -10.33813762664795
    10. '		
' → logprob: -10.46313762664795

Token 462: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07948572933673859
    2. '       ' → logprob: -2.5794856548309326
    3. 'def' → logprob: -7.454485893249512
    4. '
' → logprob: -11.204485893249512
    5. '    
' → logprob: -13.079485893249512
    6. ' def' → logprob: -14.204485893249512
    7. '	def' → logprob: -15.579485893249512
    8. '        
' → logprob: -15.954485893249512
    9. '     ' → logprob: -16.454484939575195
    10. ' ' → logprob: -16.954484939575195

Token 463: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0010355490958318114
    2. '   ' → logprob: -7.001035690307617
    3. ' def' → logprob: -9.001035690307617
    4. '       ' → logprob: -14.626035690307617
    5. '
' → logprob: -15.751035690307617
    6. '  ' → logprob: -16.501035690307617
    7. ' ' → logprob: -16.876035690307617
    8. '	def' → logprob: -17.501035690307617
    9. '    ' → logprob: -19.501035690307617
    10. '    
' → logprob: -19.626035690307617

Token 464: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.05114195868372917
    2. ' dfs' → logprob: -3.0511419773101807
    3. 'find' → logprob: -6.551141738891602
    4. ' find' → logprob: -6.801141738891602
    5. 'get' → logprob: -12.301141738891602
    6. '_find' → logprob: -12.926141738891602
    7. '_d' → logprob: -13.801141738891602
    8. '_' → logprob: -14.301141738891602
    9. 'DFS' → logprob: -14.801141738891602
    10. ' get' → logprob: -14.801141738891602

Token 465: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008535027503967285
    2. '(' → logprob: -4.883534908294678
    3. '(node' → logprob: -7.008534908294678
    4. ' (' → logprob: -10.883535385131836
    5. '(v' → logprob: -13.758535385131836
    6. 'self' → logprob: -13.883535385131836
    7. '(s' → logprob: -14.383535385131836
    8. '(u' → logprob: -14.633535385131836
    9. '(
' → logprob: -14.883535385131836
    10. '<|end|>' → logprob: -14.883535385131836

Token 466: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023736290633678436
    2. '(self' → logprob: -3.8987362384796143
    3. ')(' → logprob: -6.023736476898193
    4. 'self' → logprob: -8.523736000061035
    5. '(' → logprob: -9.023736000061035
    6. ' ,' → logprob: -9.023736000061035
    7. ')' → logprob: -9.523736000061035
    8. ',self' → logprob: -9.773736000061035
    9. '(node' → logprob: -9.773736000061035
    10. ' (' → logprob: -9.898736000061035

Token 467: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.38706377148628235
    2. ' node' → logprob: -1.13706374168396
    3. 'u' → logprob: -9.512063980102539
    4. 'v' → logprob: -9.637063980102539
    5. ' v' → logprob: -10.262063980102539
    6. ' u' → logprob: -11.637063980102539
    7. 'start' → logprob: -12.262063980102539
    8. 'vertex' → logprob: -13.137063980102539
    9. '   ' → logprob: -13.762063980102539
    10. ' start' → logprob: -14.012063980102539

Token 468: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.537180211627856e-05
    2. '):' → logprob: -10.375045776367188
    3. ',node' → logprob: -11.500045776367188
    4. ' ,' → logprob: -13.250045776367188
    5. '):
' → logprob: -13.500045776367188
    6. ':' → logprob: -14.375045776367188
    7. ',n' → logprob: -16.625045776367188
    8. ',
' → logprob: -17.625045776367188
    9. ')' → logprob: -17.875045776367188
    10. '   ' → logprob: -18.000045776367188

Token 469: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1153174638748169
    2. '       ' → logprob: -2.2403173446655273
    3. ':' → logprob: -6.865317344665527
    4. '               ' → logprob: -7.615317344665527
    5. '	       ' → logprob: -8.115317344665527
    6. '   ' → logprob: -8.240317344665527
    7. ':
' → logprob: -8.740317344665527
    8. ',' → logprob: -9.615317344665527
    9. '
' → logprob: -9.990317344665527
    10. '```' → logprob: -10.865317344665527

Token 470: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.5124700665473938
    2. '           ' → logprob: -1.012470006942749
    3. ' stack' → logprob: -3.512470006942749
    4. 'self' → logprob: -5.137470245361328
    5. '       ' → logprob: -7.012470245361328
    6. '   ' → logprob: -7.137470245361328
    7. ' self' → logprob: -9.137470245361328
    8. '	stack' → logprob: -9.637470245361328
    9. '_stack' → logprob: -9.887470245361328
    10. '               ' → logprob: -10.137470245361328

Token 471: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03810712695121765
    2. '=' → logprob: -3.28810715675354
    3. '.append' → logprob: -10.038106918334961
    4. '=[]' → logprob: -10.913106918334961
    5. '=[' → logprob: -13.163106918334961
    6. '=[]
' → logprob: -14.163106918334961
    7. ' =[' → logprob: -14.913106918334961
    8. '.pop' → logprob: -15.413106918334961
    9. '=['' → logprob: -15.788106918334961
    10. '＝' → logprob: -16.53810691833496

Token 472: ' [' (ID: 723)
  Prédit: '[node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.0024904031306505203
    2. ' [' → logprob: -6.002490520477295
    3. '[' → logprob: -11.252490043640137
    4. '[n' → logprob: -14.252490043640137
    5. '[user' → logprob: -15.502490043640137
    6. '[token' → logprob: -15.627490043640137
    7. '[item' → logprob: -15.752490043640137
    8. '[player' → logprob: -16.002490997314453
    9. '[self' → logprob: -16.627490997314453
    10. '[num' → logprob: -16.752490997314453

Token 473: 'node' (ID: 7005)
  Prédit: 'node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -4.56102097814437e-05
    2. ' node' → logprob: -10.000045776367188
    3. '(node' → logprob: -16.625045776367188
    4. '[node' → logprob: -19.750045776367188
    5. '	node' → logprob: -21.375045776367188
    6. '
' → logprob: -21.625045776367188
    7. '   ' → logprob: -22.625045776367188
    8. '```' → logprob: -23.000045776367188
    9. ',node' → logprob: -23.250045776367188
    10. '.node' → logprob: -23.625045776367188

Token 474: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.575969398021698
    2. ']' → logprob: -0.825969398021698
    3. ']
' → logprob: -11.075969696044922
    4. ' ]
' → logprob: -11.825969696044922
    5. ' ]' → logprob: -12.325969696044922
    6. '           ' → logprob: -13.950969696044922
    7. ']

' → logprob: -14.200969696044922
    8. '       ' → logprob: -14.575969696044922
    9. '
' → logprob: -15.575969696044922
    10. '   ' → logprob: -15.825969696044922

Token 475: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04901662841439247
    2. 'while' → logprob: -3.4240167140960693
    3. ' while' → logprob: -4.54901647567749
    4. '
' → logprob: -5.92401647567749
    5. 'visited' → logprob: -7.04901647567749
    6. '       ' → logprob: -7.42401647567749
    7. '   ' → logprob: -8.799016952514648
    8. '               ' → logprob: -9.049016952514648
    9. '```' → logprob: -9.674016952514648
    10. '            
' → logprob: -10.049016952514648

Token 476: ' comp' (ID: 1050)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.014344137161970139
    2. 'visited' → logprob: -4.764344215393066
    3. ' component' → logprob: -5.764344215393066
    4. 'comp' (adapté à ' comp') → logprob: -6.514344215393066
    5. 'self' → logprob: -7.764344215393066
    6. 'while' → logprob: -8.014344215393066
    7. '           ' → logprob: -8.514344215393066
    8. ' comp' → logprob: -9.889344215393066
    9. 'result' → logprob: -10.514344215393066
    10. '       ' → logprob: -10.514344215393066

Token 477: ' =' (ID: 314)
  Prédit: 'onent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onent' → logprob: -0.024747075513005257
    2. ' =' → logprob: -3.899747133255005
    3. '=[]' → logprob: -5.774746894836426
    4. '=[]
' → logprob: -7.524746894836426
    5. '   ' → logprob: -8.774746894836426
    6. 'on' → logprob: -8.899746894836426
    7. '=' → logprob: -9.649746894836426
    8. 'ponent' → logprob: -10.149746894836426
    9. '[]' → logprob: -10.274746894836426
    10. '=set' → logprob: -10.649746894836426

Token 478: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.10397186130285263
    2. 'set' → logprob: -2.3539719581604004
    3. '[]
' → logprob: -6.4789719581604
    4. '{' → logprob: -7.1039719581604
    5. ' []' → logprob: -7.2289719581604
    6. ' set' → logprob: -7.4789719581604
    7. '[' → logprob: -9.228971481323242
    8. '[]}' → logprob: -12.478971481323242
    9. '{}' → logprob: -12.853971481323242
    10. ' []
' → logprob: -13.603971481323242

Token 479: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004724987084046006
    2. ' while' → logprob: -8.000472068786621
    3. 'while' → logprob: -9.375472068786621
    4. '
' → logprob: -10.625472068786621
    5. '   ' → logprob: -11.750472068786621
    6. '       ' → logprob: -12.000472068786621
    7. '               ' → logprob: -12.250472068786621
    8. '          ' → logprob: -13.000472068786621
    9. '            ' → logprob: -13.625472068786621
    10. '            
' → logprob: -13.750472068786621

Token 480: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.3944304883480072
    2. ' while' → logprob: -1.1444305181503296
    3. '           ' → logprob: -4.894430637359619
    4. '   ' → logprob: -11.019430160522461
    5. '	while' → logprob: -11.144430160522461
    6. '            ' → logprob: -12.519430160522461
    7. '       ' → logprob: -12.894430160522461
    8. '               ' → logprob: -13.019430160522461
    9. 'While' → logprob: -13.769430160522461
    10. '    ' → logprob: -14.519430160522461

Token 481: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.005234002135694027
    2. ' stack' → logprob: -5.2552337646484375
    3. '(stack' → logprob: -16.380233764648438
    4. '	stack' → logprob: -16.630233764648438
    5. 'len' → logprob: -17.380233764648438
    6. '   ' → logprob: -19.755233764648438
    7. ' ' → logprob: -20.255233764648438
    8. 'st' → logprob: -21.005233764648438
    9. 'Stack' → logprob: -22.255233764648438
    10. '
' → logprob: -22.255233764648438

Token 482: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10043451189994812
    2. ':
' → logprob: -2.3504345417022705
    3. '.pop' → logprob: -8.475434303283691
    4. '):
' → logprob: -11.600434303283691
    5. '):' → logprob: -12.350434303283691
    6. 'pop' → logprob: -13.600434303283691
    7. '[-' → logprob: -13.600434303283691
    8. '```' → logprob: -13.975434303283691
    9. ' and' → logprob: -14.225434303283691
    10. ':not' → logprob: -15.100434303283691

Token 483: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7816665172576904
    2. ' node' → logprob: -1.1566665172576904
    3. 'node' → logprob: -1.5316665172576904
    4. ' current' → logprob: -5.4066667556762695
    5. ' u' → logprob: -6.0316667556762695
    6. 'current' → logprob: -6.9066667556762695
    7. 'n' → logprob: -7.1566667556762695
    8. '   ' → logprob: -7.4066667556762695
    9. 'pop' → logprob: -7.4066667556762695
    10. ' n' → logprob: -7.7816667556762695

Token 484: ' cur' (ID: 4396)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.4399223029613495
    2. ' node' → logprob: -1.6899223327636719
    3. ' current' → logprob: -2.189922332763672
    4. ' curr' → logprob: -3.564922332763672
    5. 'u' → logprob: -4.314922332763672
    6. 'node' → logprob: -4.564922332763672
    7. 'current' → logprob: -5.814922332763672
    8. 'curr' → logprob: -6.064922332763672
    9. ' v' → logprob: -7.064922332763672
    10. ' cur' → logprob: -7.564922332763672

Token 485: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01349323894828558
    2. '=' → logprob: -4.388493061065674
    3. '=node' → logprob: -7.638493061065674
    4. '_node' → logprob: -7.888493061065674
    5. '               ' → logprob: -9.638493537902832
    6. 'node' → logprob: -10.513493537902832
    7. '.pop' → logprob: -11.763493537902832
    8. '                ' → logprob: -11.888493537902832
    9. '                   ' → logprob: -12.638493537902832
    10. '   ' → logprob: -13.138493537902832

Token 486: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.07889044284820557
    2. ' stack' → logprob: -2.578890323638916
    3. '	stack' → logprob: -14.453890800476074
    4. '(stack' → logprob: -16.078889846801758
    5. '   ' → logprob: -17.328889846801758
    6. ' ' → logprob: -17.703889846801758
    7. 'st' → logprob: -18.203889846801758
    8. '.stack' → logprob: -18.203889846801758
    9. '    ' → logprob: -19.328889846801758
    10. 'sta' → logprob: -19.453889846801758

Token 487: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -1.1398757123970427e-05
    2. 'pop' → logprob: -11.750011444091797
    3. '[-' → logprob: -12.625011444091797
    4. '.' → logprob: -16.375011444091797
    5. '.append' → logprob: -17.750011444091797
    6. '   ' → logprob: -18.125011444091797
    7. 'Pop' → logprob: -18.625011444091797
    8. '                   ' → logprob: -19.375011444091797
    9. ' pop' → logprob: -19.625011444091797
    10. '_pop' → logprob: -19.750011444091797

Token 488: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023252464830875397
    2. '()
' → logprob: -3.773252487182617
    3. ')' → logprob: -12.648252487182617
    4. '(' → logprob: -13.273252487182617
    5. '()

' → logprob: -14.523252487182617
    6. '               ' → logprob: -14.898252487182617
    7. '())' → logprob: -14.898252487182617
    8. '()
' → logprob: -14.898252487182617
    9. '())
' → logprob: -16.148252487182617
    10. '(
' → logprob: -16.148252487182617

Token 489: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06825075298547745
    2. '           ' → logprob: -2.9432506561279297
    3. '
' → logprob: -5.31825065612793
    4. ' if' → logprob: -5.69325065612793
    5. '                
' → logprob: -6.31825065612793
    6. '                   ' → logprob: -6.94325065612793
    7. '            
' → logprob: -7.19325065612793
    8. '                ' → logprob: -7.19325065612793
    9. ' 
' → logprob: -8.44325065612793
    10. '            ' → logprob: -9.44325065612793

Token 490: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0789095088839531
    2. 'if' (adapté à ' if') → logprob: -2.578909397125244
    3. '               ' → logprob: -11.078909873962402
    4. '           ' → logprob: -13.078909873962402
    5. '                   ' → logprob: -13.703909873962402
    6. ' not' → logprob: -14.703909873962402
    7. '                ' → logprob: -14.828909873962402
    8. '```' → logprob: -16.078908920288086
    9. 'If' → logprob: -16.453908920288086
    10. '            ' → logprob: -16.578908920288086

Token 491: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.02975071594119072
    2. ' cur' → logprob: -3.5297508239746094
    3. '	cur' → logprob: -16.02975082397461
    4. '(cur' → logprob: -16.65475082397461
    5. '[cur' → logprob: -18.15475082397461
    6. '   ' → logprob: -18.65475082397461
    7. '_cur' → logprob: -19.52975082397461
    8. '.cur' → logprob: -19.77975082397461
    9. ' ' → logprob: -20.15475082397461
    10. 'Cur' → logprob: -20.27975082397461

Token 492: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0008052219054661691
    2. 'not' → logprob: -7.125805377960205
    3. ' in' → logprob: -14.625804901123047
    4. '	not' → logprob: -15.875804901123047
    5. ' no' → logprob: -17.125804901123047
    6. ')' → logprob: -17.250804901123047
    7. ' ' → logprob: -18.625804901123047
    8. '<|end|>' → logprob: -18.750804901123047
    9. '_not' → logprob: -18.875804901123047
    10. ' ' → logprob: -19.125804901123047

Token 493: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06220552697777748
    2. 'in' → logprob: -2.8122055530548096
    3. '               ' → logprob: -8.68720531463623
    4. '                   ' → logprob: -10.68720531463623
    5. '           ' → logprob: -11.18720531463623
    6. ' self' → logprob: -12.06220531463623
    7. '.' → logprob: -12.06220531463623
    8. 'to' → logprob: -12.43720531463623
    9. 'self' → logprob: -12.56220531463623
    10. ' ' → logprob: -12.81220531463623

Token 494: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031786637846380472
    2. ' self' → logprob: -5.753178596496582
    3. 'visited' → logprob: -14.378178596496582
    4. '
' → logprob: -17.0031795501709
    5. '	self' → logprob: -17.0031795501709
    6. '   ' → logprob: -17.0031795501709
    7. '```' → logprob: -17.8781795501709
    8. ' ' → logprob: -17.8781795501709
    9. '       ' → logprob: -18.0031795501709
    10. '[self' → logprob: -18.0031795501709

Token 495: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -0.0002627662615850568
    2. 'visited' → logprob: -8.250263214111328
    3. 'vis' → logprob: -13.750263214111328
    4. ' .' → logprob: -15.125263214111328
    5. '.' → logprob: -16.375263214111328
    6. '.v' → logprob: -17.125263214111328
    7. 'vist' → logprob: -17.250263214111328
    8. 'Visited' → logprob: -17.375263214111328
    9. '.visit' → logprob: -17.375263214111328
    10. '.visible' → logprob: -17.750263214111328

Token 496: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -6.635164754698053e-05
    2. 'ted' → logprob: -10.000066757202148
    3. 'isted' → logprob: -11.250066757202148
    4. '_' → logprob: -13.250066757202148
    5. '   ' → logprob: -13.750066757202148
    6. '`' → logprob: -14.000066757202148
    7. '-' → logprob: -14.500066757202148
    8. '
' → logprob: -14.625066757202148
    9. '[' → logprob: -14.625066757202148
    10. ' it' → logprob: -14.875066757202148

Token 497: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12744970619678497
    2. ':' → logprob: -2.1274497509002686
    3. '):
' → logprob: -8.627449989318848
    4. '                   ' → logprob: -8.627449989318848
    5. '               ' → logprob: -9.377449989318848
    6. '                       ' → logprob: -10.502449989318848
    7. '           ' → logprob: -10.752449989318848
    8. '):' → logprob: -11.877449989318848
    9. ' and' → logprob: -12.127449989318848
    10. '                           ' → logprob: -12.377449989318848

Token 498: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.23725160956382751
    2. ':
' → logprob: -1.61225163936615
    3. ':' → logprob: -5.1122517585754395
    4. '               ' → logprob: -5.6122517585754395
    5. '                       ' → logprob: -6.4872517585754395
    6. '           ' → logprob: -7.9872517585754395
    7. '   ' → logprob: -9.362251281738281
    8. '):
' → logprob: -10.362251281738281
    9. '                           ' → logprob: -10.737251281738281
    10. '       ' → logprob: -10.862251281738281

Token 499: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1734950840473175
    2. '                   ' → logprob: -2.423495054244995
    3. 'self' (adapté à ' self') → logprob: -2.673495054244995
    4. '   ' → logprob: -7.048495292663574
    5. '                       ' → logprob: -7.423495292663574
    6. '               ' → logprob: -9.298495292663574
    7. '       ' → logprob: -10.048495292663574
    8. '           ' → logprob: -10.423495292663574
    9. ' ' → logprob: -11.798495292663574
    10. '	self' → logprob: -11.923495292663574

Token 500: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -0.00010962257510982454
    2. 'visited' → logprob: -9.125109672546387
    3. '.' → logprob: -15.375109672546387
    4. 'vis' → logprob: -15.625109672546387
    5. ' .' → logprob: -15.875109672546387
    6. ' visited' → logprob: -16.50010871887207
    7. '.visit' → logprob: -16.87510871887207
    8. '.v' → logprob: -17.87510871887207
    9. '
' → logprob: -18.00010871887207
    10. 'Visited' → logprob: -18.25010871887207

Token 501: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -2.7729658540920354e-05
    2. 'isted' → logprob: -11.375027656555176
    3. '_' → logprob: -12.000027656555176
    4. 'ted' → logprob: -12.375027656555176
    5. '
' → logprob: -14.000027656555176
    6. '-' → logprob: -14.125027656555176
    7. '   ' → logprob: -14.750027656555176
    8. ' it' → logprob: -14.750027656555176
    9. '```' → logprob: -14.750027656555176
    10. 'ite' → logprob: -14.875027656555176

Token 502: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -6.301394023466855e-05
    2. '.' → logprob: -9.875062942504883
    3. 'add' → logprob: -11.875062942504883
    4. ' .' → logprob: -12.375062942504883
    5. '	add' → logprob: -16.500062942504883
    6. '   ' → logprob: -16.625062942504883
    7. ' add' → logprob: -17.375062942504883
    8. '                   ' → logprob: -17.500062942504883
    9. '_add' → logprob: -18.250062942504883
    10. '.Add' → logprob: -18.500062942504883

Token 503: '(cur' (ID: 34723)
  Prédit: '(cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -1.2352385965641588e-05
    2. '(' → logprob: -12.000012397766113
    3. 'cur' → logprob: -12.000012397766113
    4. ' cur' → logprob: -18.000011444091797
    5. '[cur' → logprob: -18.250011444091797
    6. ' (' → logprob: -18.500011444091797
    7. '(
' → logprob: -18.625011444091797
    8. '	cur' → logprob: -19.375011444091797
    9. '(c' → logprob: -20.375011444091797
    10. '(cal' → logprob: -22.125011444091797

Token 504: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2536037564277649
    2. ')
' → logprob: -1.6286036968231201
    3. '                   ' → logprob: -3.62860369682312
    4. '
' → logprob: -7.003603935241699
    5. '               ' → logprob: -9.6286039352417
    6. '                    ' → logprob: -10.0036039352417
    7. '                       ' → logprob: -10.1286039352417
    8. ')
' → logprob: -10.2536039352417
    9. '                    
' → logprob: -10.2536039352417
    10. '           ' → logprob: -11.2536039352417

Token 505: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001069727586582303
    2. '               ' → logprob: -7.50106954574585
    3. '           ' → logprob: -8.251070022583008
    4. '       ' → logprob: -9.376070022583008
    5. '   ' → logprob: -9.501070022583008
    6. '				' → logprob: -10.126070022583008
    7. '                       ' → logprob: -10.501070022583008
    8. '		           ' → logprob: -12.126070022583008
    9. '                    
' → logprob: -12.376070022583008
    10. '                  ' → logprob: -12.501070022583008

Token 506: ' comp' (ID: 1050)
  Prédit: ' comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comp' → logprob: -0.6933411359786987
    2. 'comp' (adapté à ' comp') → logprob: -0.6933411359786987
    3. '                   ' → logprob: -8.693341255187988
    4. '               ' → logprob: -11.318341255187988
    5. '	comp' → logprob: -11.318341255187988
    6. '           ' → logprob: -14.068341255187988
    7. '   ' → logprob: -14.818341255187988
    8. '(comp' → logprob: -15.193341255187988
    9. '.comp' → logprob: -15.318341255187988
    10. '                       ' → logprob: -16.818340301513672

Token 507: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002740906202234328
    2. '.' → logprob: -8.250273704528809
    3. '.ap' → logprob: -11.625273704528809
    4. '.app' → logprob: -12.750273704528809
    5. ' .' → logprob: -14.375273704528809
    6. 'append' → logprob: -15.125273704528809
    7. '.extend' → logprob: -16.625274658203125
    8. '.a' → logprob: -18.125274658203125
    9. '   ' → logprob: -18.375274658203125
    10. '	append' → logprob: -18.500274658203125

Token 508: '(cur' (ID: 34723)
  Prédit: '(cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -5.56233171664644e-05
    2. 'cur' → logprob: -10.000055313110352
    3. '(' → logprob: -11.500055313110352
    4. '(
' → logprob: -18.00005531311035
    5. ' cur' → logprob: -18.87505531311035
    6. '[cur' → logprob: -18.87505531311035
    7. '(c' → logprob: -19.12505531311035
    8. '	cur' → logprob: -19.37505531311035
    9. '(curr' → logprob: -21.87505531311035
    10. 'Cur' → logprob: -22.12505531311035

Token 509: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015670880675315857
    2. ')
' → logprob: -4.3906707763671875
    3. '                   ' → logprob: -5.7656707763671875
    4. '               ' → logprob: -11.640670776367188
    5. '           ' → logprob: -11.890670776367188
    6. ' )' → logprob: -13.390670776367188
    7. '                    ' → logprob: -13.515670776367188
    8. '                       ' → logprob: -13.765670776367188
    9. ')
' → logprob: -14.265670776367188
    10. '       ' → logprob: -14.390670776367188

Token 510: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00048524985322728753
    2. '               ' → logprob: -8.12548542022705
    3. '           ' → logprob: -9.25048542022705
    4. '       ' → logprob: -10.75048542022705
    5. '                       ' → logprob: -10.87548542022705
    6. '   ' → logprob: -10.87548542022705
    7. '                    
' → logprob: -11.37548542022705
    8. '```' → logprob: -11.87548542022705
    9. '
' → logprob: -12.87548542022705
    10. 'for' → logprob: -12.87548542022705

Token 511: ' neighbors' (ID: 31655)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.8134623765945435
    2. 'for' → logprob: -1.0634623765945435
    3. '                   ' → logprob: -1.5634623765945435
    4. ' for' → logprob: -6.438462257385254
    5. ' stack' → logprob: -8.563462257385254
    6. '   ' → logprob: -9.688462257385254
    7. '               ' → logprob: -10.188462257385254
    8. '           ' → logprob: -10.438462257385254
    9. 'self' → logprob: -10.438462257385254
    10. '
' → logprob: -10.938462257385254

Token 512: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08903063833713531
    2. '=' → logprob: -2.4640307426452637
    3. '   ' → logprob: -10.589030265808105
    4. ':' → logprob: -10.714030265808105
    5. '.extend' → logprob: -10.714030265808105
    6. '       ' → logprob: -12.464030265808105
    7. 'for' → logprob: -12.589030265808105
    8. '.update' → logprob: -13.089030265808105
    9. '.' → logprob: -13.214030265808105
    10. ' ' → logprob: -13.339030265808105

Token 513: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02078804187476635
    2. ' self' → logprob: -3.8957879543304443
    3. 'list' → logprob: -8.520788192749023
    4. ' list' → logprob: -10.770788192749023
    5. '[self' → logprob: -10.895788192749023
    6. '   ' → logprob: -13.270788192749023
    7. '[' → logprob: -13.395788192749023
    8. '           ' → logprob: -13.770788192749023
    9. ' [' → logprob: -13.895788192749023
    10. '	self' → logprob: -14.145788192749023

Token 514: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.00010020548506872728
    2. 'graph' → logprob: -9.625100135803223
    3. '.' → logprob: -10.875100135803223
    4. 'self' → logprob: -11.500100135803223
    5. '	graph' → logprob: -12.875100135803223
    6. '.
' → logprob: -14.500100135803223
    7. ' .' → logprob: -14.875100135803223
    8. '   ' → logprob: -14.875100135803223
    9. '.self' → logprob: -15.125100135803223
    10. ' graph' → logprob: -15.375100135803223

Token 515: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -0.0015023599844425917
    2. '.get' → logprob: -6.501502513885498
    3. 'cur' → logprob: -18.001502990722656
    4. '(cur' → logprob: -18.126502990722656
    5. 'get' → logprob: -18.251502990722656
    6. '[current' → logprob: -18.501502990722656
    7. '[curr' → logprob: -18.751502990722656
    8. '[get' → logprob: -19.251502990722656
    9. ' [' → logprob: -19.501502990722656
    10. '.cur' → logprob: -19.501502990722656

Token 516: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09946034103631973
    2. ']
' → logprob: -2.4744603633880615
    3. '                   ' → logprob: -4.849460124969482
    4. ' -' → logprob: -7.349460124969482
    5. '-' → logprob: -7.474460124969482
    6. '           ' → logprob: -7.724460124969482
    7. ')' → logprob: -8.22446060180664
    8. '                       ' → logprob: -8.72446060180664
    9. ']-' → logprob: -8.84946060180664
    10. '               ' → logprob: -9.34946060180664

Token 517: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.8193366486229934e-05
    2. '
' → logprob: -12.000018119812012
    3. '                    
' → logprob: -12.125018119812012
    4. '               ' → logprob: -13.000018119812012
    5. '           ' → logprob: -13.250018119812012
    6. '				' → logprob: -13.875018119812012
    7. '                       ' → logprob: -14.750018119812012
    8. '       ' → logprob: -14.750018119812012
    9. '                  ' → logprob: -15.375018119812012
    10. '		           ' → logprob: -15.500018119812012

Token 518: ' for' (ID: 395)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03287428617477417
    2. 'for' (adapté à ' for') → logprob: -3.532874345779419
    3. ' for' → logprob: -5.90787410736084
    4. '				' → logprob: -8.40787410736084
    5. 'stack' → logprob: -9.15787410736084
    6. '                       ' → logprob: -10.90787410736084
    7. '           ' → logprob: -10.90787410736084
    8. '               ' → logprob: -11.28287410736084
    9. '	for' → logprob: -11.90787410736084
    10. '		           ' → logprob: -12.65787410736084

Token 519: ' nxt' (ID: 160200)
  Prédit: ' neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' neighbor' → logprob: -0.21348057687282562
    2. 'neighbor' → logprob: -1.7134805917739868
    3. ' neigh' → logprob: -5.588480472564697
    4. 'n' → logprob: -6.213480472564697
    5. ' nbr' → logprob: -6.338480472564697
    6. 'nbr' → logprob: -6.963480472564697
    7. ' nei' → logprob: -6.963480472564697
    8. 'nei' → logprob: -7.088480472564697
    9. ' nxt' → logprob: -7.088480472564697
    10. ' n' → logprob: -7.963480472564697

Token 520: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0076276883482933044
    2. 'in' → logprob: -4.882627487182617
    3. '	in' → logprob: -11.382627487182617
    4. 'n' → logprob: -11.632627487182617
    5. ' ' → logprob: -13.882627487182617
    6. '  ' → logprob: -17.007627487182617
    7. 's' → logprob: -17.382627487182617
    8. ' 
' → logprob: -17.382627487182617
    9. '   ' → logprob: -17.382627487182617
    10. ' ' → logprob: -17.507627487182617

Token 521: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.023287173360586166
    2. ' neighbors' → logprob: -3.773287057876587
    3. 'neighbor' → logprob: -11.273286819458008
    4. '   ' → logprob: -11.273286819458008
    5. 'ne' → logprob: -12.023286819458008
    6. '                   ' → logprob: -12.398286819458008
    7. '               ' → logprob: -13.648286819458008
    8. '           ' → logprob: -13.648286819458008
    9. '_neighbors' → logprob: -14.148286819458008
    10. 'sorted' → logprob: -14.273286819458008

Token 522: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.032836101949214935
    2. ':' → logprob: -3.5328361988067627
    3. ':
' → logprob: -6.032835960388184
    4. ' if' → logprob: -8.782835960388184
    5. '[::-' → logprob: -9.032835960388184
    6. '                        ' → logprob: -9.157835960388184
    7. '                   ' → logprob: -9.282835960388184
    8. '                        
' → logprob: -9.657835960388184
    9. ' :' → logprob: -10.407835960388184
    10. '                           ' → logprob: -10.532835960388184

Token 523: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0007267289329320192
    2. ' if' → logprob: -7.250726699829102
    3. '                        ' → logprob: -12.375726699829102
    4. '                           ' → logprob: -12.625726699829102
    5. '                   ' → logprob: -12.875726699829102
    6. 'if' → logprob: -13.250726699829102
    7. '                      ' → logprob: -13.875726699829102
    8. '                    ' → logprob: -14.000726699829102
    9. '					' → logprob: -14.250726699829102
    10. ' stack' → logprob: -14.500726699829102

Token 524: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5279778242111206
    2. '                           ' → logprob: -0.9029778242111206
    3. '                               ' → logprob: -6.52797794342041
    4. ' stack' → logprob: -6.77797794342041
    5. '                       ' → logprob: -7.27797794342041
    6. 'if' (adapté à ' if') → logprob: -7.65297794342041
    7. ' ' → logprob: -8.15297794342041
    8. '                            ' → logprob: -8.40297794342041
    9. '                        ' → logprob: -8.77797794342041
    10. '   ' → logprob: -9.27797794342041

Token 525: ' nxt' (ID: 160200)
  Prédit: ' nxt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nxt' → logprob: -0.42873916029930115
    2. 'n' → logprob: -1.0537391901016235
    3. '(n' → logprob: -11.178739547729492
    4. ' nex' → logprob: -11.803739547729492
    5. 'n't' → logprob: -13.053739547729492
    6. '   ' → logprob: -13.428739547729492
    7. '[n' → logprob: -13.553739547729492
    8. '	n' → logprob: -13.678739547729492
    9. ' next' → logprob: -13.678739547729492
    10. ' ' → logprob: -13.803739547729492

Token 526: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.00033558503491804004
    2. 'not' → logprob: -8.000335693359375
    3. '	not' → logprob: -15.875335693359375
    4. ' ' → logprob: -19.000335693359375
    5. ':not' → logprob: -19.375335693359375
    6. ' no' → logprob: -19.500335693359375
    7. ')' → logprob: -20.375335693359375
    8. '_not' → logprob: -20.500335693359375
    9. ' не' → logprob: -20.625335693359375
    10. '<|end|>' → logprob: -20.625335693359375

Token 527: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25298747420310974
    2. 'in' → logprob: -1.5029875040054321
    3. '                   ' → logprob: -7.752987384796143
    4. 'self' → logprob: -7.877987384796143
    5. '.' → logprob: -9.6279878616333
    6. '                       ' → logprob: -9.7529878616333
    7. ' self' → logprob: -10.0029878616333
    8. ' not' → logprob: -11.3779878616333
    9. '                           ' → logprob: -11.3779878616333
    10. '               ' → logprob: -11.6279878616333

Token 528: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03804987296462059
    2. ' self' → logprob: -3.2880499362945557
    3. '           ' → logprob: -13.663049697875977
    4. '[self' → logprob: -13.788049697875977
    5. '(self' → logprob: -13.913049697875977
    6. '                   ' → logprob: -13.913049697875977
    7. '	self' → logprob: -14.163049697875977
    8. '   ' → logprob: -14.413049697875977
    9. '       ' → logprob: -14.538049697875977
    10. ' ' → logprob: -14.663049697875977

Token 529: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -0.04861824959516525
    2. 'visited' → logprob: -3.0486183166503906
    3. '.' → logprob: -11.04861831665039
    4. 'vis' → logprob: -11.92361831665039
    5. ' visited' → logprob: -13.04861831665039
    6. 'self' → logprob: -13.17361831665039
    7. ' .' → logprob: -13.29861831665039
    8. '.visible' → logprob: -14.17361831665039
    9. '
' → logprob: -14.67361831665039
    10. '.visit' → logprob: -15.29861831665039

Token 530: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -2.2961512513575144e-05
    2. 'ted' → logprob: -11.375022888183594
    3. 'isted' → logprob: -11.500022888183594
    4. 'ITED' → logprob: -14.875022888183594
    5. 'sted' → logprob: -15.875022888183594
    6. '   ' → logprob: -15.875022888183594
    7. '```' → logprob: -16.250022888183594
    8. '[' → logprob: -16.375022888183594
    9. '_' → logprob: -16.375022888183594
    10. 'visited' → logprob: -17.000022888183594

Token 531: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.27531883120536804
    2. ':' → logprob: -1.9003188610076904
    3. '                           ' → logprob: -2.4003188610076904
    4. '):
' → logprob: -8.40031909942627
    5. '                       ' → logprob: -8.90031909942627
    6. '                               ' → logprob: -10.65031909942627
    7. ' and' → logprob: -11.52531909942627
    8. ':
' → logprob: -11.65031909942627
    9. '                   ' → logprob: -11.90031909942627
    10. '):' → logprob: -11.90031909942627

Token 532: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0001487140398239717
    2. ':
' → logprob: -9.62514877319336
    3. '                               ' → logprob: -10.50014877319336
    4. ':' → logprob: -10.87514877319336
    5. '                       ' → logprob: -10.87514877319336
    6. ' stack' → logprob: -11.87514877319336
    7. 'stack' → logprob: -13.00014877319336
    8. '                   ' → logprob: -13.00014877319336
    9. '                          ' → logprob: -13.50014877319336
    10. '                            ' → logprob: -13.75014877319336

Token 533: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.31453660130500793
    2. 'stack' (adapté à ' stack') → logprob: -1.3145365715026855
    3. '                               ' → logprob: -6.6895365715026855
    4. '                           ' → logprob: -11.564537048339844
    5. '	stack' → logprob: -11.814537048339844
    6. '(stack' → logprob: -12.564537048339844
    7. '                                   ' → logprob: -12.814537048339844
    8. '               ' → logprob: -13.314537048339844
    9. 'Stack' → logprob: -14.064537048339844
    10. '                   ' → logprob: -14.064537048339844

Token 534: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.841743303695694e-05
    2. '.' → logprob: -9.25009822845459
    3. '.extend' → logprob: -13.37509822845459
    4. ' .' → logprob: -15.25009822845459
    5. '.push' → logprob: -15.37509822845459
    6. '                           ' → logprob: -16.000099182128906
    7. '.add' → logprob: -16.125099182128906
    8. '                               ' → logprob: -17.000099182128906
    9. 'append' → logprob: -17.500099182128906
    10. '.insert' → logprob: -18.125099182128906

Token 535: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0004309076175559312
    2. '(' → logprob: -7.750431060791016
    3. 'n' → logprob: -15.625431060791016
    4. '(
' → logprob: -17.625431060791016
    5. '((' → logprob: -17.750431060791016
    6. '(next' → logprob: -18.000431060791016
    7. '(nx' → logprob: -18.375431060791016
    8. ' (' → logprob: -18.625431060791016
    9. '()' → logprob: -19.250431060791016
    10. '('' → logprob: -19.875431060791016

Token 536: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -8.895480277715251e-06
    2. 't' → logprob: -12.250008583068848
    3. 'x' → logprob: -12.625008583068848
    4. '```' → logprob: -15.125008583068848
    5. 'ext' → logprob: -15.625008583068848
    6. '   ' → logprob: -16.125009536743164
    7. 'n' → logprob: -17.125009536743164
    8. '[' → logprob: -17.500009536743164
    9. '``' → logprob: -17.625009536743164
    10. ')' → logprob: -17.750009536743164

Token 537: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7610454708337784e-05
    2. ')
' → logprob: -10.625027656555176
    3. ' )' → logprob: -13.125027656555176
    4. '           ' → logprob: -15.000027656555176
    5. ')\' → logprob: -16.00002670288086
    6. '<|end|>' → logprob: -16.25002670288086
    7. ')return' → logprob: -16.25002670288086
    8. '                           ' → logprob: -16.37502670288086
    9. ')}' → logprob: -16.37502670288086
    10. ')`' → logprob: -16.62502670288086

Token 538: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03695410490036011
    2. '    
' → logprob: -3.786954164505005
    3. '       ' → logprob: -4.661953926086426
    4. '        
' → logprob: -6.536953926086426
    5. '
' → logprob: -6.911953926086426
    6. '  
' → logprob: -7.536953926086426
    7. '            
' → logprob: -8.161953926086426
    8. '   ' → logprob: -8.411953926086426
    9. '<|end|>' → logprob: -8.536953926086426
    10. '               ' → logprob: -8.786953926086426

Token 539: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014620832167565823
    2. '       ' → logprob: -4.514620780944824
    3. ' return' → logprob: -6.264620780944824
    4. 'return' (adapté à ' return') → logprob: -6.514620780944824
    5. '   ' → logprob: -8.889620780944824
    6. '               ' → logprob: -10.889620780944824
    7. '          ' → logprob: -12.264620780944824
    8. '         ' → logprob: -12.639620780944824
    9. 'class' → logprob: -12.889620780944824
    10. ' ' → logprob: -12.889620780944824

Token 540: ' comp' (ID: 1050)
  Prédit: ' comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comp' → logprob: -0.38687199354171753
    2. 'comp' → logprob: -1.1368720531463623
    3. '	comp' → logprob: -14.011872291564941
    4. '(comp' → logprob: -15.886872291564941
    5. '.comp' → logprob: -18.011871337890625
    6. '   ' → logprob: -18.011871337890625
    7. 'None' → logprob: -19.011871337890625
    8. 'com' → logprob: -19.136871337890625
    9. ' ' → logprob: -19.511871337890625
    10. '[' → logprob: -19.761871337890625

Token 541: '
        
' (ID: 20417)
  Prédit: '        
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        
' → logprob: -0.16631300747394562
    2. '    
' → logprob: -2.4163129329681396
    3. '
' → logprob: -2.9163129329681396
    4. '       ' → logprob: -5.041313171386719
    5. '<|end|>' → logprob: -6.041313171386719
    6. '   ' → logprob: -7.791313171386719
    7. '  
' → logprob: -8.416313171386719
    8. '            
' → logprob: -8.791313171386719
    9. '```' → logprob: -9.541313171386719
    10. '
        
' → logprob: -10.416313171386719

Token 542: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3214607238769531
    2. '        
' → logprob: -1.3214607238769531
    3. '    
' → logprob: -4.946460723876953
    4. '
' → logprob: -6.946460723876953
    5. '   ' → logprob: -9.946460723876953
    6. '            
' → logprob: -10.821460723876953
    7. 'def' → logprob: -11.071460723876953
    8. '  
' → logprob: -12.446460723876953
    9. '       
' → logprob: -13.071460723876953
    10. '      
' → logprob: -13.321460723876953

Token 543: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0016991066513583064
    2. '        
' → logprob: -7.251698970794678
    3. '       ' → logprob: -7.501698970794678
    4. '
' → logprob: -8.126699447631836
    5. '    
' → logprob: -9.501699447631836
    6. ' def' → logprob: -10.126699447631836
    7. '   ' → logprob: -10.626699447631836
    8. '            
' → logprob: -14.251699447631836
    9. '  
' → logprob: -14.626699447631836
    10. '	def' → logprob: -14.876699447631836

Token 544: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0028469599783420563
    2. ' find' → logprob: -6.252847194671631
    3. 'get' → logprob: -7.002847194671631
    4. 'compute' → logprob: -12.002846717834473
    5. 'connected' → logprob: -14.377846717834473
    6. ' get' → logprob: -14.752846717834473
    7. '_find' → logprob: -14.877846717834473
    8. 'solve' → logprob: -15.252846717834473
    9. 'run' → logprob: -15.377846717834473
    10. 'extract' → logprob: -15.627846717834473

Token 545: '_components' (ID: 55324)
  Prédit: '_components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -0.0007320931763388216
    2. '_' → logprob: -7.375731945037842
    3. '_connected' → logprob: -9.875732421875
    4. '_all' → logprob: -10.500732421875
    5. '_clusters' → logprob: -11.875732421875
    6. '_connections' → logprob: -12.750732421875
    7. '_parts' → logprob: -12.750732421875
    8. '_com' → logprob: -12.750732421875
    9. 'components' → logprob: -13.000732421875
    10. '_component' → logprob: -13.000732421875

Token 546: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006726499181240797
    2. '(' → logprob: -5.006726264953613
    3. '(
' → logprob: -12.506726264953613
    4. ' (' → logprob: -12.506726264953613
    5. 'self' → logprob: -13.381726264953613
    6. '   ' → logprob: -14.131726264953613
    7. '       ' → logprob: -14.381726264953613
    8. '()' → logprob: -14.756726264953613
    9. '(Self' → logprob: -16.00672721862793
    10. 'def' → logprob: -16.13172721862793

Token 547: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6762866377830505
    2. '):' → logprob: -1.3012866973876953
    3. '(self' → logprob: -1.5512866973876953
    4. 'self' → logprob: -5.551286697387695
    5. '():
' → logprob: -6.676286697387695
    6. ')' → logprob: -6.676286697387695
    7. '()):
' → logprob: -8.426286697387695
    8. '():' → logprob: -8.551286697387695
    9. ',' → logprob: -9.051286697387695
    10. '):
' → logprob: -9.301286697387695

Token 548: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022858604788780212
    2. '       ' → logprob: -6.877285957336426
    3. 'self' → logprob: -7.002285957336426
    4. '(self' → logprob: -9.127285957336426
    5. 'for' → logprob: -9.377285957336426
    6. ' for' → logprob: -10.252285957336426
    7. '               ' → logprob: -10.377285957336426
    8. '   ' → logprob: -10.877285957336426
    9. 'return' → logprob: -11.127285957336426
    10. '```' → logprob: -11.627285957336426

Token 549: ' for' (ID: 395)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.11117030680179596
    2. 'result' → logprob: -2.9861702919006348
    3. 'for' (adapté à ' for') → logprob: -3.7361702919006348
    4. '           ' → logprob: -4.111170291900635
    5. 'res' → logprob: -5.486170291900635
    6. 'com' → logprob: -5.986170291900635
    7. ' components' → logprob: -6.236170291900635
    8. '       ' → logprob: -6.236170291900635
    9. 'results' → logprob: -6.236170291900635
    10. ' for' → logprob: -7.236170291900635

Token 550: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.2519325315952301
    2. ' node' → logprob: -1.5019325017929077
    3. '   ' → logprob: -12.751932144165039
    4. 'v' → logprob: -15.876932144165039
    5. ' v' → logprob: -16.25193214416504
    6. '	node' → logprob: -16.25193214416504
    7. 'vertex' → logprob: -16.62693214416504
    8. '(node' → logprob: -17.37693214416504
    9. 'num' → logprob: -17.37693214416504
    10. '       ' → logprob: -17.62693214416504

Token 551: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0006268949946388602
    2. 'in' → logprob: -7.375627040863037
    3. 'self' → logprob: -15.875626564025879
    4. ' ' → logprob: -16.625627517700195
    5. '	in' → logprob: -16.875627517700195
    6. '           ' → logprob: -17.000627517700195
    7. '        ' → logprob: -17.500627517700195
    8. 'import' → logprob: -18.000627517700195
    9. '    ' → logprob: -18.000627517700195
    10. '  ' → logprob: -18.000627517700195

Token 552: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011048882268369198
    2. ' self' → logprob: -4.511048793792725
    3. 'list' → logprob: -15.011049270629883
    4. '(self' → logprob: -15.261049270629883
    5. '   ' → logprob: -15.511049270629883
    6. '           ' → logprob: -15.636049270629883
    7. '       ' → logprob: -16.386049270629883
    8. '	self' → logprob: -17.386049270629883
    9. ' list' → logprob: -17.511049270629883
    10. ' ' → logprob: -18.011049270629883

Token 553: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -8.2994620242971e-06
    2. 'graph' → logprob: -11.875008583068848
    3. '.' → logprob: -14.375008583068848
    4. '	graph' → logprob: -14.625008583068848
    5. ' .' → logprob: -15.750008583068848
    6. 'self' → logprob: -17.25000762939453
    7. '.vis' → logprob: -17.87500762939453
    8. '(graph' → logprob: -18.12500762939453
    9. '.nodes' → logprob: -18.50000762939453
    10. '.grid' → logprob: -18.62500762939453

Token 554: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3874247372150421
    2. ':' → logprob: -1.1374247074127197
    3. '.keys' → logprob: -7.762424945831299
    4. '           ' → logprob: -9.38742446899414
    5. '):
' → logprob: -11.26242446899414
    6. ':
' → logprob: -11.51242446899414
    7. ':

' → logprob: -11.76242446899414
    8. '               ' → logprob: -12.01242446899414
    9. '       ' → logprob: -12.51242446899414
    10. '):' → logprob: -13.51242446899414

Token 555: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002482315758243203
    2. ' if' → logprob: -6.5024824142456055
    3. '           ' → logprob: -7.0024824142456055
    4. 'if' → logprob: -10.002482414245605
    5. '
' → logprob: -11.502482414245605
    6. '	           ' → logprob: -12.627482414245605
    7. '              ' → logprob: -13.127482414245605
    8. ',' → logprob: -13.127482414245605
    9. '                   ' → logprob: -13.627482414245605
    10. '   ' → logprob: -13.627482414245605

Token 556: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16766789555549622
    2. 'if' (adapté à ' if') → logprob: -1.9176678657531738
    3. '               ' → logprob: -4.917667865753174
    4. '           ' → logprob: -9.417668342590332
    5. '   ' → logprob: -11.542668342590332
    6. '	           ' → logprob: -12.667668342590332
    7. '                   ' → logprob: -13.042668342590332
    8. '	if' → logprob: -13.667668342590332
    9. '            ' → logprob: -14.292668342590332
    10. ' ' → logprob: -14.792668342590332

Token 557: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.16022585332393646
    2. 'node' → logprob: -1.9102258682250977
    3. '(node' → logprob: -14.285225868225098
    4. '[node' → logprob: -15.160225868225098
    5. 'not' → logprob: -15.160225868225098
    6. '               ' → logprob: -15.410225868225098
    7. '	node' → logprob: -15.535225868225098
    8. '                   ' → logprob: -16.78522491455078
    9. ' not' → logprob: -17.41022491455078
    10. '=node' → logprob: -18.03522491455078

Token 558: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0024758970830589533
    2. 'not' → logprob: -6.002475738525391
    3. '	not' → logprob: -16.62747573852539
    4. ':not' → logprob: -17.75247573852539
    5. ' no' → logprob: -18.75247573852539
    6. '_not' → logprob: -18.87747573852539
    7. ')' → logprob: -19.75247573852539
    8. '           ' → logprob: -19.87747573852539
    9. '               ' → logprob: -20.50247573852539
    10. ' in' → logprob: -20.50247573852539

Token 559: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16050246357917786
    2. 'in' → logprob: -1.9105024337768555
    3. 'self' → logprob: -8.410502433776855
    4. '           ' → logprob: -10.785502433776855
    5. '               ' → logprob: -10.910502433776855
    6. ' self' → logprob: -12.035502433776855
    7. '                   ' → logprob: -12.535502433776855
    8. 'not' → logprob: -12.910502433776855
    9. ' not' → logprob: -13.535502433776855
    10. '   ' → logprob: -13.910502433776855

Token 560: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06198415905237198
    2. ' self' → logprob: -2.811984062194824
    3. '           ' → logprob: -11.561984062194824
    4. '[self' → logprob: -13.811984062194824
    5. '               ' → logprob: -14.186984062194824
    6. '   ' → logprob: -14.311984062194824
    7. '(self' → logprob: -14.311984062194824
    8. 'visited' → logprob: -14.436984062194824
    9. '	self' → logprob: -14.561984062194824
    10. '       ' → logprob: -14.624484062194824

Token 561: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -5.8961017202818766e-05
    2. 'visited' → logprob: -9.750059127807617
    3. '.' → logprob: -15.125059127807617
    4. 'vis' → logprob: -16.125059127807617
    5. ' .' → logprob: -16.750059127807617
    6. '.visible' → logprob: -17.500059127807617
    7. '.visit' → logprob: -17.750059127807617
    8. '.v' → logprob: -17.875059127807617
    9. 'self' → logprob: -18.375059127807617
    10. 'Visited' → logprob: -19.125059127807617

Token 562: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -5.080963092041202e-06
    2. 'isted' → logprob: -12.500004768371582
    3. 'ITED' → logprob: -14.625004768371582
    4. 'ted' → logprob: -15.125004768371582
    5. '_' → logprob: -15.375004768371582
    6. '```' → logprob: -15.750004768371582
    7. '
' → logprob: -17.3750057220459
    8. '   ' → logprob: -17.3750057220459
    9. 'visited' → logprob: -17.3750057220459
    10. '`' → logprob: -17.3750057220459

Token 563: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1688855141401291
    2. ':' → logprob: -1.9188854694366455
    3. '                   ' → logprob: -4.793885707855225
    4. '):
' → logprob: -8.293885231018066
    5. '           ' → logprob: -10.668885231018066
    6. '():
' → logprob: -10.668885231018066
    7. '               ' → logprob: -10.793885231018066
    8. '                       ' → logprob: -12.043885231018066
    9. '):' → logprob: -12.168885231018066
    10. ':

' → logprob: -12.793885231018066

Token 564: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01690431497991085
    2. ':
' → logprob: -4.266904354095459
    3. ':' → logprob: -6.016904354095459
    4. '               ' → logprob: -8.8919038772583
    5. '           ' → logprob: -9.6419038772583
    6. '                       ' → logprob: -10.3919038772583
    7. '):
' → logprob: -11.1419038772583
    8. '                    
' → logprob: -11.2669038772583
    9. ',' → logprob: -11.5169038772583
    10. '                           ' → logprob: -12.1419038772583

Token 565: ' comp' (ID: 1050)
  Prédit: ' comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comp' → logprob: -0.3357257843017578
    2. 'comp' (adapté à ' comp') → logprob: -1.3357257843017578
    3. 'component' → logprob: -4.085725784301758
    4. ' component' → logprob: -5.710725784301758
    5. '                   ' → logprob: -6.335725784301758
    6. 'self' → logprob: -9.210725784301758
    7. '               ' → logprob: -9.210725784301758
    8. ' self' → logprob: -9.835725784301758
    9. '           ' → logprob: -10.460725784301758
    10. '	comp' → logprob: -10.960725784301758

Token 566: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003414870472624898
    2. '=' → logprob: -5.753415107727051
    3. 'onent' → logprob: -9.87841510772705
    4. '                   ' → logprob: -10.00341510772705
    5. '           ' → logprob: -10.12841510772705
    6. '               ' → logprob: -10.62841510772705
    7. '=[]' → logprob: -10.87841510772705
    8. '   ' → logprob: -11.25341510772705
    9. 'ponent' → logprob: -11.75341510772705
    10. '_comp' → logprob: -12.00341510772705

Token 567: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3133128583431244
    2. ' self' → logprob: -1.3133128881454468
    3. '                   ' → logprob: -10.063312530517578
    4. '           ' → logprob: -12.938312530517578
    5. '[self' → logprob: -12.938312530517578
    6. '               ' → logprob: -13.688312530517578
    7. '(self' → logprob: -14.313312530517578
    8. '=self' → logprob: -14.688312530517578
    9. '                       ' → logprob: -15.063312530517578
    10. '	self' → logprob: -15.313312530517578

Token 568: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.0009146820520982146
    2. 'dfs' → logprob: -7.000914573669434
    3. '.df' → logprob: -14.000914573669434
    4. ' .' → logprob: -14.125914573669434
    5. '
' → logprob: -14.500914573669434
    6. ' dfs' → logprob: -14.875914573669434
    7. '.' → logprob: -14.875914573669434
    8. '.find' → logprob: -15.750914573669434
    9. '.components' → logprob: -16.75091552734375
    10. '   ' → logprob: -17.00091552734375

Token 569: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -4.4849443838757e-06
    2. 'f' → logprob: -13.875004768371582
    3. 'efs' → logprob: -13.875004768371582
    4. 'dfs' → logprob: -14.000004768371582
    5. 'ef' → logprob: -14.125004768371582
    6. 'ep' → logprob: -15.125004768371582
    7. 'eep' → logprob: -15.500004768371582
    8. 'find' → logprob: -15.625004768371582
    9. 'FS' → logprob: -16.125003814697266
    10. 'sf' → logprob: -16.250003814697266

Token 570: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.750001907348633
    3. '(
' → logprob: -14.875001907348633
    4. ' (' → logprob: -15.250001907348633
    5. '[node' → logprob: -16.625001907348633
    6. '(n' → logprob: -17.125001907348633
    7. '```' → logprob: -17.750001907348633
    8. 'node' → logprob: -18.000001907348633
    9. '((' → logprob: -18.500001907348633
    10. '(Node' → logprob: -18.750001907348633

Token 571: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.313862681388855
    2. ')
' → logprob: -1.313862681388855
    3. '                   ' → logprob: -7.4388628005981445
    4. ')
' → logprob: -12.063862800598145
    5. '               ' → logprob: -12.938862800598145
    6. ')

' → logprob: -13.563862800598145
    7. '           ' → logprob: -14.188862800598145
    8. '()' → logprob: -14.438862800598145
    9. '                       ' → logprob: -14.813862800598145
    10. '())
' → logprob: -15.188862800598145

Token 572: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0001669485354796052
    2. '           ' → logprob: -9.750166893005371
    3. '               ' → logprob: -9.875166893005371
    4. '                       ' → logprob: -10.000166893005371
    5. '       ' → logprob: -12.875166893005371
    6. '```' → logprob: -13.000166893005371
    7. '   ' → logprob: -13.250166893005371
    8. 'self' → logprob: -13.625166893005371
    9. '                    ' → logprob: -13.750166893005371
    10. '                  ' → logprob: -13.875166893005371

Token 573: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006831170991063118
    2. '                   ' → logprob: -5.006831169128418
    3. ' self' → logprob: -9.256831169128418
    4. '           ' → logprob: -11.256831169128418
    5. '   ' → logprob: -12.506831169128418
    6. '               ' → logprob: -13.131831169128418
    7. '                       ' → logprob: -14.006831169128418
    8. '       ' → logprob: -14.506831169128418
    9. '	self' → logprob: -15.506831169128418
    10. '
' → logprob: -15.881831169128418

Token 574: '.components' (ID: 41872)
  Prédit: '.components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.components' → logprob: -2.0219828002154827e-05
    2. 'components' → logprob: -11.500020027160645
    3. '.comp' → logprob: -11.625020027160645
    4. '.com' → logprob: -15.000020027160645
    5. '.append' → logprob: -15.625020027160645
    6. '.' → logprob: -15.625020027160645
    7. 'comp' → logprob: -16.37502098083496
    8. '/components' → logprob: -16.75002098083496
    9. '   ' → logprob: -17.37502098083496
    10. 's' → logprob: -17.37502098083496

Token 575: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.043078898685053e-05
    2. '.' → logprob: -9.375090599060059
    3. '.app' → logprob: -13.125090599060059
    4. ' .' → logprob: -13.500090599060059
    5. 'append' → logprob: -13.625090599060059
    6. '.extend' → logprob: -14.375090599060059
    7. '.ap' → logprob: -16.000089645385742
    8. '.add' → logprob: -16.000089645385742
    9. '           ' → logprob: -16.875089645385742
    10. ').' → logprob: -17.625089645385742

Token 576: '(comp' (ID: 60272)
  Prédit: '(comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(comp' → logprob: -8.537868779967539e-06
    2. 'comp' → logprob: -11.750008583068848
    3. '(' → logprob: -14.375008583068848
    4. ' comp' → logprob: -18.50000762939453
    5. '	comp' → logprob: -18.87500762939453
    6. '(
' → logprob: -19.00000762939453
    7. ' (' → logprob: -19.12500762939453
    8. '(component' → logprob: -20.00000762939453
    9. '(c' → logprob: -20.87500762939453
    10. '((' → logprob: -21.00000762939453

Token 577: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005007279687561095
    2. ')
' → logprob: -7.750500679016113
    3. '())' → logprob: -10.625500679016113
    4. '           ' → logprob: -10.875500679016113
    5. '<|end|>' → logprob: -11.375500679016113
    6. ')return' → logprob: -12.500500679016113
    7. '()' → logprob: -13.000500679016113
    8. '       ' → logprob: -13.125500679016113
    9. ' )' → logprob: -13.250500679016113
    10. '               ' → logprob: -14.375500679016113

Token 578: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013868462294340134
    2. '
' → logprob: -4.51386833190918
    3. '       ' → logprob: -6.38886833190918
    4. '<|end|>' → logprob: -7.88886833190918
    5. '    
' → logprob: -8.38886833190918
    6. 'return' → logprob: -8.63886833190918
    7. '        ' → logprob: -9.63886833190918
    8. '          ' → logprob: -9.88886833190918
    9. '        
' → logprob: -10.13886833190918
    10. '		' → logprob: -10.51386833190918

Token 579: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6733728647232056
    2. '       ' → logprob: -0.9233728647232056
    3. ' return' → logprob: -2.923372745513916
    4. '           ' → logprob: -3.298372745513916
    5. '   ' → logprob: -6.673372745513916
    6. '
' → logprob: -7.173372745513916
    7. '	return' → logprob: -9.798373222351074
    8. '      ' → logprob: -11.548373222351074
    9. '        ' → logprob: -11.798373222351074
    10. ' ' → logprob: -11.923373222351074

Token 580: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018150296062231064
    2. ' self' → logprob: -4.018150329589844
    3. '[self' → logprob: -15.018150329589844
    4. '	self' → logprob: -17.643150329589844
    5. '   ' → logprob: -17.893150329589844
    6. '[]' → logprob: -18.268150329589844
    7. '(self' → logprob: -18.268150329589844
    8. ' ' → logprob: -18.518150329589844
    9. '[' → logprob: -18.643150329589844
    10. 'None' → logprob: -18.893150329589844

Token 581: '.components' (ID: 41872)
  Prédit: '.components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.components' → logprob: -1.0206720617134124e-05
    2. '.' → logprob: -12.37501049041748
    3. 'components' → logprob: -12.37501049041748
    4. '.comp' → logprob: -14.87501049041748
    5. '<|end|>' → logprob: -15.12501049041748
    6. '.Components' → logprob: -15.50001049041748
    7. ' .' → logprob: -15.75001049041748
    8. '@Component' → logprob: -16.375009536743164
    9. '_components' → logprob: -16.500009536743164
    10. '/components' → logprob: -16.625009536743164

Token 582: '
    
' (ID: 15698)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.22922293841838837
    2. '
' → logprob: -2.2292230129241943
    3. '   ' → logprob: -2.3542230129241943
    4. '        
' → logprob: -6.354222774505615
    5. 'def' → logprob: -8.854223251342773
    6. '<|end|>' → logprob: -8.979223251342773
    7. '
    
' → logprob: -9.104223251342773
    8. '    
    
' → logprob: -9.729223251342773
    9. '  
' → logprob: -10.604223251342773
    10. '            
' → logprob: -10.729223251342773

Token 583: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4013764560222626
    2. 'def' → logprob: -1.151376485824585
    3. '    
' → logprob: -4.276376247406006
    4. ' def' → logprob: -8.401376724243164
    5. '        
' → logprob: -8.776376724243164
    6. '
' → logprob: -9.776376724243164
    7. '	def' → logprob: -10.776376724243164
    8. '<|end|>' → logprob: -11.151376724243164
    9. '```' → logprob: -11.776376724243164
    10. '    
    
' → logprob: -11.901376724243164

Token 584: ' class' (ID: 744)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001923352392623201
    2. '   ' → logprob: -9.250192642211914
    3. ' def' → logprob: -9.250192642211914
    4. '    
' → logprob: -16.625192642211914
    5. '	def' → logprob: -18.000192642211914
    6. 'class' (adapté à ' class') → logprob: -18.500192642211914
    7. ' ' → logprob: -18.875192642211914
    8. '  ' → logprob: -19.500192642211914
    9. '
' → logprob: -19.625192642211914
    10. '@' → logprob: -20.250192642211914

Token 585: ' Independent' (ID: 43203)
  Prédit: 'Solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -1.0907018184661865
    2. 'Color' → logprob: -1.7157018184661865
    3. 'Solution' → logprob: -2.0907018184661865
    4. ' Solver' → logprob: -2.3407018184661865
    5. ' Coloring' → logprob: -2.8407018184661865
    6. 'Result' → logprob: -3.4657018184661865
    7. ' Solution' → logprob: -3.8407018184661865
    8. 'Subset' → logprob: -3.8407018184661865
    9. 'Component' → logprob: -4.215702056884766
    10. ' Color' → logprob: -4.340702056884766

Token 586: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -9.078839502763003e-05
    2. 'set' → logprob: -9.375090599060059
    3. 'Sets' → logprob: -12.250090599060059
    4. '_set' → logprob: -14.000090599060059
    5. ' set' → logprob: -15.625090599060059
    6. '_Set' → logprob: -16.750091552734375
    7. 'Subset' → logprob: -17.250091552734375
    8. ' Set' → logprob: -17.625091552734375
    9. '.set' → logprob: -18.250091552734375
    10. 'Class' → logprob: -18.375091552734375

Token 587: 'Counter' (ID: 16263)
  Prédit: 'Finder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Finder' → logprob: -0.019744737073779106
    2. 'Solver' → logprob: -4.144744873046875
    3. ':' → logprob: -6.019744873046875
    4. '{' → logprob: -8.144744873046875
    5. 'Enumerator' → logprob: -8.769744873046875
    6. 'Searcher' → logprob: -8.894744873046875
    7. 'Selector' → logprob: -9.019744873046875
    8. ':
' → logprob: -9.269744873046875
    9. 'Builder' → logprob: -9.394744873046875
    10. 'Chooser' → logprob: -9.394744873046875

Token 588: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014176084659993649
    2. ':
' → logprob: -4.264175891876221
    3. ':def' → logprob: -12.514176368713379
    4. '(object' → logprob: -13.014176368713379
    5. ':

' → logprob: -13.764176368713379
    6. '   ' → logprob: -13.889176368713379
    7. '(' → logprob: -13.889176368713379
    8. 'def' → logprob: -14.264176368713379
    9. ' :' → logprob: -14.264176368713379
    10. '):' → logprob: -14.514176368713379

Token 589: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20171990990638733
    2. '   ' → logprob: -1.701719880104065
    3. 'def' → logprob: -8.201720237731934
    4. ' def' → logprob: -11.076720237731934
    5. '    
' → logprob: -12.326720237731934
    6. '     ' → logprob: -12.826720237731934
    7. '    ' → logprob: -13.076720237731934
    8. '	def' → logprob: -13.201720237731934
    9. '           ' → logprob: -13.451720237731934
    10. '        
' → logprob: -13.826720237731934

Token 590: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6953938603401184
    2. 'def' (adapté à ' def') → logprob: -0.8203938603401184
    3. '   ' → logprob: -3.0703938007354736
    4. '       ' → logprob: -4.320394039154053
    5. 'from' → logprob: -7.195394039154053
    6. 'import' → logprob: -8.695393562316895
    7. ' ' → logprob: -9.570393562316895
    8. ' from' → logprob: -10.445393562316895
    9. 'class' → logprob: -10.570393562316895
    10. '    ' → logprob: -10.570393562316895

Token 591: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.007964789867401123
    2. ' __' → logprob: -5.632964611053467
    3. ' init' → logprob: -5.757964611053467
    4. '__' → logprob: -7.257964611053467
    5. ' def' → logprob: -8.257965087890625
    6. 'def' → logprob: -8.632965087890625
    7. '_init' → logprob: -10.132965087890625
    8. 'count' → logprob: -11.632965087890625
    9. 'int' → logprob: -13.382965087890625
    10. ' count' → logprob: -13.757965087890625

Token 592: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.7835754988482222e-05
    2. 'iter' → logprob: -12.250018119812012
    3. 'staticmethod' → logprob: -12.250018119812012
    4. 'it' → logprob: -13.125018119812012
    5. 'int' → logprob: -13.375018119812012
    6. 'new' → logprob: -14.125018119812012
    7. '```' → logprob: -14.500018119812012
    8. 'def' → logprob: -14.500018119812012
    9. 'dict' → logprob: -14.875018119812012
    10. 'nit' → logprob: -15.125018119812012

Token 593: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.38771742582321167
    2. '(self' → logprob: -1.1377174854278564
    3. '(' → logprob: -7.637717247009277
    4. '       ' → logprob: -8.762717247009277
    5. '_(' → logprob: -9.387717247009277
    6. ' (' → logprob: -10.637717247009277
    7. '__(
' → logprob: -10.637717247009277
    8. 'self' → logprob: -11.137717247009277
    9. '   ' → logprob: -11.137717247009277
    10. '<>(' → logprob: -11.387717247009277

Token 594: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.301394023466855e-05
    2. ' self' → logprob: -9.875062942504883
    3. '       ' → logprob: -11.750062942504883
    4. ',' → logprob: -13.250062942504883
    5. 'graph' → logprob: -13.750062942504883
    6. '(self' → logprob: -15.125062942504883
    7. '   ' → logprob: -15.750062942504883
    8. ')' → logprob: -16.250062942504883
    9. '           ' → logprob: -16.375062942504883
    10. 'def' → logprob: -17.375062942504883

Token 595: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006724014529027045
    2. 'self' → logprob: -7.375672340393066
    3. ' ,' → logprob: -10.250672340393066
    4. ',self' → logprob: -12.000672340393066
    5. ' self' → logprob: -13.625672340393066
    6. '(self' → logprob: -14.125672340393066
    7. ',
' → logprob: -14.125672340393066
    8. '       ' → logprob: -14.125672340393066
    9. 'graph' → logprob: -15.375672340393066
    10. '           ' → logprob: -15.875672340393066

Token 596: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.01614956185221672
    2. ' graph' → logprob: -4.516149520874023
    3. 'component' → logprob: -6.641149520874023
    4. 'components' → logprob: -6.766149520874023
    5. 'adj' → logprob: -7.016149520874023
    6. 'self' → logprob: -7.391149520874023
    7. 'nodes' → logprob: -7.641149520874023
    8. 'comp' → logprob: -9.016149520874023
    9. '   ' → logprob: -9.141149520874023
    10. '       ' → logprob: -10.016149520874023

Token 597: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5335444211959839
    2. '):' → logprob: -0.9085444211959839
    3. ',' → logprob: -4.658544540405273
    4. '):
' → logprob: -8.533544540405273
    5. ':' → logprob: -8.658544540405273
    6. '       ' → logprob: -8.783544540405273
    7. '   ' → logprob: -9.033544540405273
    8. ' ):' → logprob: -9.033544540405273
    9. ' ):
' → logprob: -10.033544540405273
    10. ')' → logprob: -10.283544540405273

Token 598: ' mod' (ID: 1812)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.40359875559806824
    2. 'components' → logprob: -2.2785987854003906
    3. 'nodes' → logprob: -3.0285987854003906
    4. 'comp' → logprob: -3.1535987854003906
    5. ' component' → logprob: -3.4035987854003906
    6. 'mod' → logprob: -3.9035987854003906
    7. ' nodes' → logprob: -4.153598785400391
    8. ' components' → logprob: -4.403598785400391
    9. 'subset' → logprob: -4.653598785400391
    10. 'p' → logprob: -5.028598785400391

Token 599: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04377926141023636
    2. '):
' → logprob: -3.5437793731689453
    3. ':' → logprob: -4.418779373168945
    4. '=' → logprob: -6.543779373168945
    5. ' ):' → logprob: -8.293779373168945
    6. ')' → logprob: -9.668779373168945
    7. '=None' → logprob: -10.418779373168945
    8. '):
' → logprob: -10.543779373168945
    9. 'ulus' → logprob: -11.168779373168945
    10. ',' → logprob: -11.293779373168945

Token 600: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06623994559049606
    2. '       ' → logprob: -2.816239833831787
    3. 'self' → logprob: -5.691239833831787
    4. ' self' → logprob: -8.066240310668945
    5. '(self' → logprob: -8.441240310668945
    6. '	       ' → logprob: -9.191240310668945
    7. '          ' → logprob: -9.691240310668945
    8. '               ' → logprob: -9.816240310668945
    9. '         ' → logprob: -9.941240310668945
    10. '        ' → logprob: -10.566240310668945

Token 601: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004184891004115343
    2. ' self' → logprob: -5.504184722900391
    3. '       ' → logprob: -9.37918472290039
    4. 'graph' → logprob: -11.00418472290039
    5. '           ' → logprob: -13.00418472290039
    6. '   ' → logprob: -13.37918472290039
    7. '	self' → logprob: -14.25418472290039
    8. 'import' → logprob: -14.87918472290039
    9. ' graph' → logprob: -15.50418472290039
    10. ' ' → logprob: -16.25418472290039

Token 602: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.0022384009789675474
    2. '.' → logprob: -6.3772382736206055
    3. ' .' → logprob: -8.377238273620605
    4. 'graph' → logprob: -8.752238273620605
    5. '=' → logprob: -10.252238273620605
    6. '	graph' → logprob: -10.502238273620605
    7. ' =' → logprob: -10.752238273620605
    8. ' graph' → logprob: -11.127238273620605
    9. '   ' → logprob: -11.127238273620605
    10. '.mod' → logprob: -11.752238273620605

Token 603: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327179074287415
    2. '=' → logprob: -1.3132717609405518
    3. ',' → logprob: -12.063271522521973
    4. '   ' → logprob: -12.938271522521973
    5. ' ' → logprob: -14.313271522521973
    6. '  ' → logprob: -15.313271522521973
    7. '<|end|>' → logprob: -15.563271522521973
    8. ')' → logprob: -15.938271522521973
    9. '       ' → logprob: -15.938271522521973
    10. ' =
' → logprob: -16.18827247619629

Token 604: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.023251881822943687
    2. ' graph' → logprob: -3.77325177192688
    3. '	graph' → logprob: -12.2732515335083
    4. '(graph' → logprob: -14.2732515335083
    5. '{' → logprob: -15.2732515335083
    6. '   ' → logprob: -15.5232515335083
    7. '       ' → logprob: -16.148252487182617
    8. '           ' → logprob: -16.273252487182617
    9. '.graph' → logprob: -16.648252487182617
    10. '_graph' → logprob: -17.023252487182617

Token 605: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004923839122056961
    2. '       ' → logprob: -5.5049238204956055
    3. '
' → logprob: -7.3799238204956055
    4. '   ' → logprob: -9.629923820495605
    5. '	       ' → logprob: -10.004923820495605
    6. ',' → logprob: -10.629923820495605
    7. '               ' → logprob: -10.754923820495605
    8. '<|end|>' → logprob: -11.004923820495605
    9. 'self' → logprob: -11.504923820495605
    10. '		' → logprob: -11.504923820495605

Token 606: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006952526047825813
    2. '       ' → logprob: -5.00695276260376
    3. '	       ' → logprob: -9.631952285766602
    4. '		' → logprob: -9.881952285766602
    5. 'self' → logprob: -10.256952285766602
    6. '   ' → logprob: -10.506952285766602
    7. ',' → logprob: -11.006952285766602
    8. '	' → logprob: -11.131952285766602
    9. '	   ' → logprob: -11.881952285766602
    10. '		   ' → logprob: -12.006952285766602

Token 607: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -4.4060561776859686e-05
    2. '       ' → logprob: -10.750043869018555
    3. '           ' → logprob: -11.625043869018555
    4. ' self' → logprob: -12.000043869018555
    5. 'mod' → logprob: -12.125043869018555
    6. 'import' → logprob: -14.375043869018555
    7. '   ' → logprob: -14.625043869018555
    8. 'from' → logprob: -15.250043869018555
    9. '
' → logprob: -16.250043869018555
    10. '         ' → logprob: -16.875043869018555

Token 608: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -0.0013664272846654058
    2. '.' → logprob: -6.75136661529541
    3. 'mod' → logprob: -9.00136661529541
    4. '.graph' → logprob: -10.25136661529541
    5. ' .' → logprob: -11.12636661529541
    6. '.m' → logprob: -11.12636661529541
    7. '.n' → logprob: -13.50136661529541
    8. '.size' → logprob: -14.37636661529541
    9. '.Mod' → logprob: -14.50136661529541
    10. '.nodes' → logprob: -14.62636661529541

Token 609: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6334219574928284
    2. ' =' → logprob: -0.7584219574928284
    3. '<|end|>' → logprob: -7.258421897888184
    4. ':' → logprob: -9.383421897888184
    5. ')' → logprob: -10.758421897888184
    6. ',' → logprob: -12.508421897888184
    7. ' ' → logprob: -13.383421897888184
    8. ' =
' → logprob: -14.008421897888184
    9. '<|end|>' → logprob: -14.008421897888184
    10. '=int' → logprob: -14.508421897888184

Token 610: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.02326003834605217
    2. ' mod' → logprob: -3.7732601165771484
    3. 'p' → logprob: -11.398260116577148
    4. '	mod' → logprob: -13.523260116577148
    5. ' p' → logprob: -14.023260116577148
    6. '(mod' → logprob: -14.648260116577148
    7. '   ' → logprob: -15.148260116577148
    8. '    ' → logprob: -16.02326011657715
    9. '           ' → logprob: -16.27326011657715
    10. '       ' → logprob: -16.89826011657715

Token 611: '
' (ID: 198)
  Prédit: '        
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        
' → logprob: -0.40521135926246643
    2. '
' → logprob: -1.280211329460144
    3. '       ' → logprob: -3.0302114486694336
    4. '    
' → logprob: -5.155211448669434
    5. '		
' → logprob: -8.530211448669434
    6. '
        
' → logprob: -8.655211448669434
    7. 'def' → logprob: -9.030211448669434
    8. '   ' → logprob: -9.030211448669434
    9. '       
' → logprob: -9.280211448669434
    10. '        
        
' → logprob: -9.280211448669434

Token 612: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018507275730371475
    2. '
' → logprob: -4.143507480621338
    3. '        
' → logprob: -6.393507480621338
    4. '   ' → logprob: -7.643507480621338
    5. '           ' → logprob: -8.51850700378418
    6. '    
' → logprob: -9.51850700378418
    7. 'def' → logprob: -10.51850700378418
    8. '	' → logprob: -12.14350700378418
    9. '	   ' → logprob: -12.51850700378418
    10. '		
' → logprob: -13.39350700378418

Token 613: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.023491906002163887
    2. 'def' → logprob: -4.023491859436035
    3. '       ' → logprob: -5.773491859436035
    4. '           ' → logprob: -6.398491859436035
    5. '   ' → logprob: -8.523491859436035
    6. 'from' → logprob: -9.023491859436035
    7. '
' → logprob: -9.273491859436035
    8. ' self' → logprob: -9.398491859436035
    9. 'import' → logprob: -10.898491859436035
    10. '#' → logprob: -12.523491859436035

Token 614: '.memo' (ID: 161018)
  Prédit: '.dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dp' → logprob: -0.7135477066040039
    2. '.memo' → logprob: -0.7135477066040039
    3. '.result' → logprob: -4.713547706604004
    4. '.count' → logprob: -4.963547706604004
    5. '.cache' → logprob: -5.963547706604004
    6. '.nodes' → logprob: -8.088547706604004
    7. '.color' → logprob: -8.213547706604004
    8. '.answer' → logprob: -8.338547706604004
    9. 'dp' → logprob: -8.463547706604004
    10. '.res' → logprob: -9.338547706604004

Token 615: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007646968122571707
    2. '=' → logprob: -4.8826470375061035
    3. '={}' → logprob: -10.257646560668945
    4. ' ' → logprob: -13.007646560668945
    5. ' ={' → logprob: -13.257646560668945
    6. '_' → logprob: -14.257646560668945
    7. '={}
' → logprob: -15.132646560668945
    8. '[' → logprob: -15.632646560668945
    9. '={' → logprob: -15.632646560668945
    10. ':' → logprob: -16.132646560668945

Token 616: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -2.1008713702030946e-06
    2. '{}
' → logprob: -14.000001907348633
    3. 'dict' → logprob: -14.250001907348633
    4. ' {}' → logprob: -15.250001907348633
    5. '{' → logprob: -16.125001907348633
    6. '{}

' → logprob: -16.375001907348633
    7. '={}' → logprob: -16.875001907348633
    8. '{},' → logprob: -17.000001907348633
    9. '{})' → logprob: -17.375001907348633
    10. '{}\' → logprob: -18.875001907348633

Token 617: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29257798194885254
    2. '        
' → logprob: -1.4175779819488525
    3. '
' → logprob: -4.792577743530273
    4. '    
' → logprob: -5.917577743530273
    5. '   ' → logprob: -8.667577743530273
    6. '            
' → logprob: -9.917577743530273
    7. '		
' → logprob: -9.917577743530273
    8. '       
' → logprob: -10.292577743530273
    9. '<|end|>' → logprob: -11.417577743530273
    10. 'def' → logprob: -11.792577743530273

Token 618: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007009590044617653
    2. '   ' → logprob: -5.007009506225586
    3. 'def' → logprob: -8.132009506225586
    4. '
' → logprob: -16.132009506225586
    5. '           ' → logprob: -17.257009506225586
    6. '        
' → logprob: -17.382009506225586
    7. '	   ' → logprob: -17.757009506225586
    8. ' def' → logprob: -18.007009506225586
    9. '    
' → logprob: -18.257009506225586
    10. '	def' → logprob: -18.632009506225586

Token 619: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.306760805164231e-05
    2. '   ' → logprob: -11.75001335144043
    3. '       ' → logprob: -12.50001335144043
    4. ' def' → logprob: -13.50001335144043
    5. '@' → logprob: -19.37501335144043
    6. ' ' → logprob: -20.00001335144043
    7. '  ' → logprob: -20.37501335144043
    8. '	def' → logprob: -20.37501335144043
    9. '        
' → logprob: -20.87501335144043
    10. '#' → logprob: -21.50001335144043

Token 620: ' bit' (ID: 3546)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.004402105696499348
    2. ' count' → logprob: -5.504402160644531
    3. 'dfs' → logprob: -8.754402160644531
    4. 'max' → logprob: -8.879402160644531
    5. '_count' → logprob: -11.754402160644531
    6. 'maximum' → logprob: -12.004402160644531
    7. 'dp' → logprob: -12.504402160644531
    8. ' dfs' → logprob: -12.754402160644531
    9. 'solve' → logprob: -13.004402160644531
    10. 'ind' → logprob: -13.379402160644531

Token 621: '_repr' (ID: 193246)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.5838204622268677
    2. 'set' → logprob: -1.3338204622268677
    3. '_count' → logprob: -2.208820343017578
    4. 'count' → logprob: -3.208820343017578
    5. '_mask' → logprob: -3.583820343017578
    6. '_dp' → logprob: -8.208820343017578
    7. 'dp' → logprob: -8.708820343017578
    8. 'Count' → logprob: -9.458820343017578
    9. '_set' → logprob: -10.208820343017578
    10. 'm' → logprob: -10.333820343017578

Token 622: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.012969395145773888
    2. '(' → logprob: -4.637969493865967
    3. '(s' → logprob: -7.262969493865967
    4. '(node' → logprob: -7.637969493865967
    5. 'ection' → logprob: -8.137969017028809
    6. ' (' → logprob: -8.262969017028809
    7. '(u' → logprob: -8.387969017028809
    8. ' =' → logprob: -8.512969017028809
    9. 'ect' → logprob: -9.387969017028809
    10. 'entation' → logprob: -9.387969017028809

Token 623: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3583095669746399
    2. '):' → logprob: -1.3583095073699951
    3. ')' → logprob: -3.608309507369995
    4. 'self' → logprob: -5.358309745788574
    5. ' ,' → logprob: -5.733309745788574
    6. '(self' → logprob: -5.733309745788574
    7. '(' → logprob: -6.733309745788574
    8. ')(' → logprob: -7.108309745788574
    9. '):
' → logprob: -7.733309745788574
    10. '[' → logprob: -7.983309745788574

Token 624: ' nodes' (ID: 15749)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.18440201878547668
    2. 'nodes' → logprob: -2.9344019889831543
    3. ' node' → logprob: -3.1844019889831543
    4. 'neighbors' → logprob: -3.5594019889831543
    5. 'mask' → logprob: -3.9344019889831543
    6. 'graph' → logprob: -4.934401988983154
    7. 'subset' → logprob: -5.184401988983154
    8. ' neighbors' → logprob: -6.309401988983154
    9. ' nodes' → logprob: -6.309401988983154
    10. 'u' → logprob: -6.434401988983154

Token 625: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17268307507038116
    2. ',' → logprob: -2.547683000564575
    3. '):
' → logprob: -2.547683000564575
    4. ')' → logprob: -7.547683238983154
    5. ':' → logprob: -7.547683238983154
    6. '   ' → logprob: -7.922683238983154
    7. ' ):' → logprob: -8.547682762145996
    8. '       ' → logprob: -8.672682762145996
    9. 'self' → logprob: -9.422682762145996
    10. '):
' → logprob: -9.547682762145996

Token 626: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010573158040642738
    2. ' =' → logprob: -5.385573387145996
    3. '=' → logprob: -5.760573387145996
    4. ':
' → logprob: -6.885573387145996
    5. ',' → logprob: -7.385573387145996
    6. '       ' → logprob: -7.760573387145996
    7. ' :' → logprob: -8.385573387145996
    8. '):' → logprob: -8.885573387145996
    9. '           ' → logprob: -9.010573387145996
    10. ':return' → logprob: -10.385573387145996

Token 627: ' #' (ID: 1069)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -1.0434283018112183
    2. ' res' → logprob: -2.043428421020508
    3. 'bits' → logprob: -2.168428421020508
    4. 'bit' → logprob: -2.168428421020508
    5. ' bit' → logprob: -2.293428421020508
    6. ' mask' → logprob: -3.293428421020508
    7. ' return' → logprob: -3.418428421020508
    8. 'res' → logprob: -3.418428421020508
    9. 'return' → logprob: -3.543428421020508
    10. ' bits' → logprob: -4.293428421020508

Token 628: ' map' (ID: 4014)
  Prédit: 'mapping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mapping' → logprob: -1.113501787185669
    2. 'bit' → logprob: -1.363501787185669
    3. 'node' → logprob: -2.238501787185669
    4. 'bits' → logprob: -2.363501787185669
    5. 'nodes' → logprob: -2.488501787185669
    6. 'mask' → logprob: -2.988501787185669
    7. 'res' → logprob: -4.23850154876709
    8. 'repr' → logprob: -4.61350154876709
    9. 'index' → logprob: -4.73850154876709
    10. 'return' → logprob: -4.86350154876709

Token 629: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.11143311113119125
    2. ' nodes' → logprob: -2.8614330291748047
    3. 'node' → logprob: -3.4864330291748047
    4. ' {' → logprob: -5.236433029174805
    5. '{' → logprob: -5.486433029174805
    6. 'nodes' → logprob: -5.736433029174805
    7. ' =' → logprob: -6.361433029174805
    8. '[node' → logprob: -7.111433029174805
    9. '_nodes' → logprob: -7.361433029174805
    10. ' return' → logprob: -8.111433029174805

Token 630: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7025390863418579
    2. 's' → logprob: -1.327539086341858
    3. 'to' → logprob: -2.2025389671325684
    4. ':' → logprob: -2.3275389671325684
    5. '_to' → logprob: -4.327538967132568
    6. ' in' → logprob: -4.827538967132568
    7. ',' → logprob: -6.077538967132568
    8. ' ->' → logprob: -6.202538967132568
    9. ' :' → logprob: -6.952538967132568
    10. ' =' → logprob: -7.077538967132568

Token 631: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.21545898914337158
    2. ' index' → logprob: -2.090458869934082
    3. 'idx' → logprob: -3.215458869934082
    4. ' idx' → logprob: -3.840458869934082
    5. '{' → logprob: -5.340458869934082
    6. 'bit' → logprob: -6.340458869934082
    7. ' {' → logprob: -6.965458869934082
    8. 'id' → logprob: -8.215458869934082
    9. 'node' → logprob: -9.090458869934082
    10. 'self' → logprob: -9.340458869934082

Token 632: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10343964397907257
    2. '=' → logprob: -2.6034395694732666
    3. ':' → logprob: -4.103439807891846
    4. '   ' → logprob: -6.603439807891846
    5. '       ' → logprob: -6.853439807891846
    6. ',' → logprob: -7.103439807891846
    7. 'self' → logprob: -7.353439807891846
    8. '(self' → logprob: -7.353439807891846
    9. '           ' → logprob: -7.353439807891846
    10. 's' → logprob: -7.478439807891846

Token 633: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.36968109011650085
    2. ' return' → logprob: -1.8696811199188232
    3. 'index' → logprob: -3.2446811199188232
    4. 'def' → logprob: -3.7446811199188232
    5. 'bit' → logprob: -3.9946811199188232
    6. 'bits' → logprob: -4.369680881500244
    7. 'reverse' → logprob: -4.494680881500244
    8. 'indices' → logprob: -4.744680881500244
    9. 'create' → logprob: -5.744680881500244
    10. 'mask' → logprob: -5.744680881500244

Token 634: ' list' (ID: 1562)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.02883131615817547
    2. ' {' → logprob: -3.6538312435150146
    3. '({' → logprob: -6.903831481933594
    4. 'dict' → logprob: -7.403831481933594
    5. 'len' → logprob: -8.028831481933594
    6. '{}' → logprob: -8.903831481933594
    7. '{x' → logprob: -9.903831481933594
    8. '{return' → logprob: -9.903831481933594
    9. '{i' → logprob: -10.028831481933594
    10. 'node' → logprob: -10.153831481933594

Token 635: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.6201465129852295
    2. '(range' → logprob: -1.4951465129852295
    3. '           ' → logprob: -2.7451465129852295
    4. '[' → logprob: -2.8701465129852295
    5. ',' → logprob: -2.9951465129852295
    6. '       ' → logprob: -4.870146751403809
    7. ' =' → logprob: -4.995146751403809
    8. '[int' → logprob: -5.120146751403809
    9. ':' → logprob: -5.245146751403809
    10. ' [' → logprob: -5.620146751403809

Token 636: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.13507410883903503
    2. ' nodes' → logprob: -3.3850741386413574
    3. 'node' → logprob: -3.5100741386413574
    4. '0' → logprob: -3.6350741386413574
    5. 'indices' → logprob: -4.135074138641357
    6. 'len' → logprob: -5.635074138641357
    7. ' node' → logprob: -6.135074138641357
    8. 'int' → logprob: -6.260074138641357
    9. 'neighbors' → logprob: -6.260074138641357
    10. 'inte' → logprob: -6.510074138641357

Token 637: ' by' (ID: 656)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0660877227783203
    2. ':' → logprob: -1.9410877227783203
    3. ' =' → logprob: -2.0660877227783203
    4. ' and' → logprob: -2.3160877227783203
    5. '           ' → logprob: -2.4410877227783203
    6. ' in' → logprob: -2.9410877227783203
    7. 'indices' → logprob: -3.5660877227783203
    8. '       ' → logprob: -3.8160877227783203
    9. '=' → logprob: -4.19108772277832
    10. ' for' → logprob: -4.81608772277832

Token 638: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.45746034383773804
    2. 'enumer' → logprob: -1.4574604034423828
    3. 'nodes' → logprob: -2.707460403442383
    4. 'range' → logprob: -4.207460403442383
    5. 'bit' → logprob: -4.332460403442383
    6. 'node' → logprob: -4.582460403442383
    7. 'indices' → logprob: -4.707460403442383
    8. ' index' → logprob: -5.332460403442383
    9. 'sorted' → logprob: -5.582460403442383
    10. ' nodes' → logprob: -6.457460403442383

Token 639: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3032398819923401
    2. ' =' → logprob: -1.9282398223876953
    3. '=' → logprob: -2.9282398223876953
    4. ':
' → logprob: -3.4282398223876953
    5. ',' → logprob: -4.303239822387695
    6. '       ' → logprob: -5.803239822387695
    7. '
' → logprob: -6.178239822387695
    8. '   ' → logprob: -6.428239822387695
    9. '.' → logprob: -6.928239822387695
    10. '[' → logprob: -6.928239822387695

Token 640: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.762653112411499
    2. '       ' → logprob: -0.887653112411499
    3. '           ' → logprob: -3.137653112411499
    4. ':
' → logprob: -3.762653112411499
    5. ' =' → logprob: -4.012653350830078
    6. '=' → logprob: -5.012653350830078
    7. ',' → logprob: -5.012653350830078
    8. '   ' → logprob: -5.387653350830078
    9. '
' → logprob: -5.762653350830078
    10. '        
' → logprob: -5.887653350830078

Token 641: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.34905678033828735
    2. 'self' (adapté à ' self') → logprob: -1.9740567207336426
    3. '           ' → logprob: -2.0990567207336426
    4. ' return' → logprob: -4.224056720733643
    5. 'return' → logprob: -5.099056720733643
    6. ' node' → logprob: -6.224056720733643
    7. '       ' → logprob: -6.349056720733643
    8. ' nodes' → logprob: -6.599056720733643
    9. ' {' → logprob: -6.974056720733643
    10. 'node' → logprob: -7.099056720733643

Token 642: '.nodes' (ID: 44152)
  Prédit: '.node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.node' → logprob: -0.07548663020133972
    2. '.nodes' → logprob: -2.950486660003662
    3. '.index' → logprob: -4.700486660003662
    4. '.mapping' → logprob: -5.075486660003662
    5. '.indices' → logprob: -6.200486660003662
    6. 'node' → logprob: -6.825486660003662
    7. '.idx' → logprob: -6.950486660003662
    8. 'index' → logprob: -8.075486183166504
    9. '.map' → logprob: -9.200486183166504
    10. '.id' → logprob: -9.325486183166504

Token 643: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18158090114593506
    2. '=' → logprob: -1.806580901145935
    3. '_map' → logprob: -7.306581020355225
    4. '_index' → logprob: -7.556581020355225
    5. '_to' → logprob: -8.056580543518066
    6. '_indices' → logprob: -9.556580543518066
    7. ',' → logprob: -9.806580543518066
    8. '_list' → logprob: -10.431580543518066
    9. '_idx' → logprob: -10.431580543518066
    10. '=index' → logprob: -10.931580543518066

Token 644: ' nodes' (ID: 15749)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4813336431980133
    2. 'nodes' → logprob: -1.731333613395691
    3. ' list' → logprob: -1.856333613395691
    4. ' nodes' → logprob: -3.4813337326049805
    5. '{' → logprob: -4.2313337326049805
    6. '[list' → logprob: -7.3563337326049805
    7. ' {' → logprob: -7.4813337326049805
    8. 'sorted' → logprob: -7.4813337326049805
    9. '[' → logprob: -7.7313337326049805
    10. '[n' → logprob: -7.8563337326049805

Token 645: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04795875772833824
    2. '           ' → logprob: -3.7979588508605957
    3. '<|end|>' → logprob: -4.547958850860596
    4. '       ' → logprob: -4.922958850860596
    5. ',
' → logprob: -6.672958850860596
    6. ',' → logprob: -6.672958850860596
    7. '<|end|>' → logprob: -7.047958850860596
    8. '        
' → logprob: -7.672958850860596
    9. 'self' → logprob: -7.922958850860596
    10. '.index' → logprob: -8.422958374023438

Token 646: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.671671986579895
    2. '           ' → logprob: -1.046671986579895
    3. '       ' → logprob: -2.2966718673706055
    4. ',' → logprob: -4.2966718673706055
    5. '<|end|>' → logprob: -5.0466718673706055
    6. ' =' → logprob: -5.5466718673706055
    7. '        
' → logprob: -6.1716718673706055
    8. '   ' → logprob: -6.1716718673706055
    9. '<|end|>' → logprob: -6.6716718673706055
    10. ',
' → logprob: -7.0466718673706055

Token 647: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.08291302621364594
    2. ' self' → logprob: -2.5829129219055176
    3. '           ' → logprob: -5.957912921905518
    4. 'return' → logprob: -7.082912921905518
    5. '{' → logprob: -9.082913398742676
    6. '       ' → logprob: -9.332913398742676
    7. '   ' → logprob: -9.457913398742676
    8. '
' → logprob: -9.957913398742676
    9. ' return' → logprob: -10.082913398742676
    10. ' ' → logprob: -10.707913398742676

Token 648: '.node' (ID: 23366)
  Prédit: '.node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.node' → logprob: -0.5065041184425354
    2. '.index' → logprob: -1.7565040588378906
    3. 'index' → logprob: -2.2565040588378906
    4. '.indices' → logprob: -2.7565040588378906
    5. 'node' → logprob: -3.8815040588378906
    6. 'indices' → logprob: -4.381504058837891
    7. '.nodes' → logprob: -4.506504058837891
    8. '.idx' → logprob: -5.756504058837891
    9. '_index' → logprob: -6.631504058837891
    10. '.n' → logprob: -6.756504058837891

Token 649: '_index' (ID: 7748)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.008488337509334087
    2. '_index' → logprob: -4.883488178253174
    3. '2' → logprob: -7.508488178253174
    4. '_indices' → logprob: -8.633488655090332
    5. 's' → logprob: -9.883488655090332
    6. 'to' → logprob: -10.508488655090332
    7. '_map' → logprob: -10.508488655090332
    8. '_idx' → logprob: -10.633488655090332
    9. 'To' → logprob: -11.633488655090332
    10. '_indexes' → logprob: -11.758488655090332

Token 650: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16028018295764923
    2. ' =' → logprob: -1.9102802276611328
    3. 's' → logprob: -10.035280227661133
    4. '_map' → logprob: -12.285280227661133
    5. '={}' → logprob: -12.535280227661133
    6. '={' → logprob: -14.035280227661133
    7. '   ' → logprob: -14.535280227661133
    8. '[' → logprob: -14.785280227661133
    9. '={}
' → logprob: -14.785280227661133
    10. ' ' → logprob: -15.160280227661133

Token 651: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.004205190110951662
    2. '{}' → logprob: -5.504205226898193
    3. '{}
' → logprob: -10.004204750061035
    4. ' {' → logprob: -10.254204750061035
    5. '{i' → logprob: -11.129204750061035
    6. '{id' → logprob: -11.254204750061035
    7. '{x' → logprob: -11.629204750061035
    8. '{k' → logprob: -12.504204750061035
    9. '{s' → logprob: -13.129204750061035
    10. '{name' → logprob: -13.379204750061035

Token 652: 'node' (ID: 7005)
  Prédit: 'node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0037745507434010506
    2. 'nodes' → logprob: -5.753774642944336
    3. 'n' → logprob: -7.753774642944336
    4. 'v' → logprob: -9.003774642944336
    5. ' node' → logprob: -10.128774642944336
    6. 'num' → logprob: -13.003774642944336
    7. 'x' → logprob: -14.253774642944336
    8. 'nod' → logprob: -14.878774642944336
    9. 'val' → logprob: -15.003774642944336
    10. '
' → logprob: -15.128774642944336

Token 653: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005325406673364341
    2. ':i' → logprob: -7.875532627105713
    3. ' :' → logprob: -9.500532150268555
    4. ':n' → logprob: -9.875532150268555
    5. ':index' → logprob: -10.750532150268555
    6. '   ' → logprob: -14.125532150268555
    7. ':k' → logprob: -14.250532150268555
    8. '[node' → logprob: -14.375532150268555
    9. '[i' → logprob: -14.750532150268555
    10. '           ' → logprob: -14.750532150268555

Token 654: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007116472348570824
    2. 'idx' → logprob: -5.007116317749023
    3. ' i' → logprob: -8.007116317749023
    4. ' idx' → logprob: -9.757116317749023
    5. 'index' → logprob: -11.632116317749023
    6. '(i' → logprob: -14.507116317749023
    7. '{i' → logprob: -15.257116317749023
    8. 'ix' → logprob: -15.507116317749023
    9. 'node' → logprob: -16.507116317749023
    10. '	i' → logprob: -16.882116317749023

Token 655: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.020836031064391136
    2. 'for' → logprob: -3.895836114883423
    3. '           ' → logprob: -9.020835876464844
    4. '               ' → logprob: -9.020835876464844
    5. '                   ' → logprob: -10.895835876464844
    6. '             ' → logprob: -12.395835876464844
    7. ' ' → logprob: -12.520835876464844
    8. '            ' → logprob: -12.520835876464844
    9. '   ' → logprob: -12.645835876464844
    10. '       ' → logprob: -12.770835876464844

Token 656: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0005488642491400242
    2. ' idx' → logprob: -7.625548839569092
    3. 'node' → logprob: -9.75054931640625
    4. '	idx' → logprob: -13.50054931640625
    5. '(idx' → logprob: -15.00054931640625
    6. '   ' → logprob: -15.75054931640625
    7. ' node' → logprob: -15.87554931640625
    8. '_idx' → logprob: -16.25054931640625
    9. ' ' → logprob: -16.50054931640625
    10. '       ' → logprob: -16.75054931640625

Token 657: ',' (ID: 11)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.5116510391235352
    2. 'enumer' → logprob: -1.2616510391235352
    3. 'range' → logprob: -2.886651039123535
    4. ',' → logprob: -3.261651039123535
    5. 'in' → logprob: -4.511651039123535
    6. ' in' → logprob: -5.136651039123535
    7. ' idx' → logprob: -5.511651039123535
    8. ' range' → logprob: -7.011651039123535
    9. '(idx' → logprob: -7.136651039123535
    10. 'node' → logprob: -8.886651039123535

Token 658: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0005539863486774266
    2. ' node' → logprob: -7.500554084777832
    3. '(node' → logprob: -14.125554084777832
    4. '	node' → logprob: -16.375553131103516
    5. '[node' → logprob: -17.000553131103516
    6. 'n' → logprob: -17.625553131103516
    7. '
' → logprob: -17.750553131103516
    8. ' ' → logprob: -17.750553131103516
    9. '```' → logprob: -17.750553131103516
    10. '   ' → logprob: -18.000553131103516

Token 659: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.428731769323349
    2. 'in' → logprob: -1.0537317991256714
    3. 'enumer' → logprob: -10.928731918334961
    4. ',' → logprob: -12.428731918334961
    5. ' ' → logprob: -12.928731918334961
    6. '
' → logprob: -13.053731918334961
    7. ' 
' → logprob: -13.928731918334961
    8. 'n' → logprob: -14.928731918334961
    9. '	in' → logprob: -14.928731918334961
    10. 's' → logprob: -15.178731918334961

Token 660: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0004311460361350328
    2. ' enumerate' → logprob: -7.750431060791016
    3. 'enum' → logprob: -15.500431060791016
    4. '
' → logprob: -16.375431060791016
    5. '```' → logprob: -16.375431060791016
    6. 'en' → logprob: -17.000431060791016
    7. 'Enumer' → logprob: -18.750431060791016
    8. 'import' → logprob: -19.500431060791016
    9. '.enumer' → logprob: -19.875431060791016
    10. 'enqueue' → logprob: -20.000431060791016

Token 661: '(nodes' (ID: 86139)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.07904588431119919
    2. '(nodes' → logprob: -2.5790457725524902
    3. ' nodes' → logprob: -8.954046249389648
    4. 'self' → logprob: -10.829046249389648
    5. '	nodes' → logprob: -12.829046249389648
    6. 'node' → logprob: -13.079046249389648
    7. '(self' → logprob: -13.954046249389648
    8. '(n' → logprob: -14.954046249389648
    9. '(' → logprob: -15.329046249389648
    10. '(node' → logprob: -15.329046249389648

Token 662: ')}
' (ID: 19324)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -5.133198283147067e-05
    2. '}
' → logprob: -10.750051498413086
    3. ' }' → logprob: -11.125051498413086
    4. '           ' → logprob: -11.875051498413086
    5. '       ' → logprob: -12.375051498413086
    6. ')}' → logprob: -14.250051498413086
    7. '})' → logprob: -14.375051498413086
    8. ',' → logprob: -14.500051498413086
    9. '               ' → logprob: -14.625051498413086
    10. ')' → logprob: -14.750051498413086

Token 663: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8609732985496521
    2. '        
' → logprob: -1.6109733581542969
    3. '           ' → logprob: -2.110973358154297
    4. '<|end|>' → logprob: -2.110973358154297
    5. '
' → logprob: -2.610973358154297
    6. '    
' → logprob: -3.360973358154297
    7. '   ' → logprob: -5.110973358154297
    8. '  
' → logprob: -5.235973358154297
    9. ' 
' → logprob: -5.485973358154297
    10. '            
' → logprob: -6.235973358154297

Token 664: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1265989542007446
    2. '       ' → logprob: -1.3765989542007446
    3. 'return' → logprob: -2.126598834991455
    4. ' return' → logprob: -2.251598834991455
    5. 'def' → logprob: -2.376598834991455
    6. '   ' → logprob: -4.001598834991455
    7. ' ' → logprob: -4.251598834991455
    8. '    
' → logprob: -4.501598834991455
    9. '<|end|>' → logprob: -4.626598834991455
    10. '        
' → logprob: -4.751598834991455

Token 665: ' adjacency' (ID: 177015)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2043723315000534
    2. 'return' → logprob: -1.9543722867965698
    3. 'def' → logprob: -3.4543724060058594
    4. ' self' → logprob: -5.829372406005859
    5. '       ' → logprob: -6.329372406005859
    6. ' return' → logprob: -6.704372406005859
    7. '#' → logprob: -7.204372406005859
    8. 'adj' → logprob: -7.204372406005859
    9. 'mask' → logprob: -7.204372406005859
    10. '           ' → logprob: -7.454372406005859

Token 666: ' bit' (ID: 3546)
  Prédit: '_matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -0.8324244022369385
    2. ' =' → logprob: -1.0824244022369385
    3. 'matrix' → logprob: -2.0824244022369385
    4. '_masks' → logprob: -3.2074244022369385
    5. '_mask' → logprob: -3.5824244022369385
    6. '_list' → logprob: -3.9574244022369385
    7. 'mask' → logprob: -5.332424163818359
    8. '=' → logprob: -5.582424163818359
    9. 'list' → logprob: -6.457424163818359
    10. ' matrix' → logprob: -7.082424163818359

Token 667: 'm' (ID: 76)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.22256506979465485
    2. 'm' → logprob: -1.7225650548934937
    3. '_mask' → logprob: -4.347565174102783
    4. '_masks' → logprob: -4.972565174102783
    5. 'sets' → logprob: -8.222564697265625
    6. ' masks' → logprob: -8.472564697265625
    7. 's' → logprob: -8.597564697265625
    8. ' =' → logprob: -9.347564697265625
    9. 'matrix' → logprob: -9.722564697265625
    10. 'set' → logprob: -9.722564697265625

Token 668: 'asks' (ID: 9523)
  Prédit: 'ask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ask' → logprob: -0.07865246385335922
    2. 'asks' → logprob: -3.0786523818969727
    3. 'ap' → logprob: -3.5786523818969727
    4. 'aps' → logprob: -6.953652381896973
    5. 'sk' → logprob: -8.078652381896973
    6. 'mask' → logprob: -9.328652381896973
    7. '   ' → logprob: -9.453652381896973
    8. '
' → logprob: -10.078652381896973
    9. 's' → logprob: -10.203652381896973
    10. 'as' → logprob: -10.453652381896973

Token 669: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14828072488307953
    2. '           ' → logprob: -2.148280620574951
    3. 'self' → logprob: -4.648280620574951
    4. ' self' → logprob: -5.148280620574951
    5. '=' → logprob: -6.273280620574951
    6. '       ' → logprob: -6.773280620574951
    7. ' for' → logprob: -7.148280620574951
    8. ':' → logprob: -7.398280620574951
    9. '   ' → logprob: -8.02328109741211
    10. '[self' → logprob: -8.27328109741211

Token 670: '           ' (ID: 352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06926137953996658
    2. '           ' → logprob: -3.319261312484741
    3. ' for' → logprob: -4.44426155090332
    4. '       ' → logprob: -5.19426155090332
    5. ':' → logprob: -5.44426155090332
    6. '=' → logprob: -5.69426155090332
    7. 'self' → logprob: -6.06926155090332
    8. ' self' → logprob: -6.31926155090332
    9. '   ' → logprob: -7.56926155090332
    10. '[self' → logprob: -8.19426155090332

Token 671: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.011899403296411037
    2. ' self' → logprob: -4.761899471282959
    3. '           ' → logprob: -5.761899471282959
    4. 'def' → logprob: -10.3868989944458
    5. 'return' → logprob: -10.5118989944458
    6. '   ' → logprob: -10.6368989944458
    7. 'adj' → logprob: -11.0118989944458
    8. ' ' → logprob: -11.6368989944458
    9. 'n' → logprob: -12.0118989944458
    10. '       ' → logprob: -12.3868989944458

Token 672: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.00024965754710137844
    2. 'adj' → logprob: -8.625249862670898
    3. '.edges' → logprob: -10.750249862670898
    4. '.node' → logprob: -11.625249862670898
    5. '.bit' → logprob: -11.875249862670898
    6. '.ne' → logprob: -12.250249862670898
    7. '.mask' → logprob: -12.500249862670898
    8. '.graph' → logprob: -12.500249862670898
    9. '.Ad' → logprob: -12.500249862670898
    10. '.n' → logprob: -12.625249862670898

Token 673: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0010590101592242718
    2. 'js' → logprob: -7.501059055328369
    3. 'jac' → logprob: -7.626059055328369
    4. 'jc' → logprob: -11.626058578491211
    5. 'jm' → logprob: -12.001058578491211
    6. 'ja' → logprob: -14.376058578491211
    7. '[j' → logprob: -14.876058578491211
    8. 'jr' → logprob: -14.876058578491211
    9. 'jec' → logprob: -15.126058578491211
    10. 'jl' → logprob: -15.251058578491211

Token 674: '_mask' (ID: 21732)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.757441520690918
    2. '_masks' → logprob: -1.382441520690918
    3. 'acency' → logprob: -1.632441520690918
    4. '=' → logprob: -2.882441520690918
    5. '_mask' → logprob: -4.757441520690918
    6. '_list' → logprob: -5.007441520690918
    7. 'm' → logprob: -5.257441520690918
    8. 'ac' → logprob: -5.507441520690918
    9. '_bits' → logprob: -7.257441520690918
    10. 's' → logprob: -7.507441520690918

Token 675: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0222246646881104
    2. 's' → logprob: -1.0222246646881104
    3. ' =' → logprob: -1.2722246646881104
    4. '[' → logprob: -8.897224426269531
    5. '   ' → logprob: -11.022224426269531
    6. '[s' → logprob: -11.147224426269531
    7. ' ' → logprob: -11.897224426269531
    8. '=[' → logprob: -12.147224426269531
    9. '=[]' → logprob: -12.522224426269531
    10. ':' → logprob: -12.897224426269531

Token 676: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.017806533724069595
    2. ' [' → logprob: -4.267806529998779
    3. '{' → logprob: -6.142806529998779
    4. '[]' → logprob: -7.392806529998779
    5. '{}' → logprob: -7.517806529998779
    6. '[]
' → logprob: -8.392807006835938
    7. '{}
' → logprob: -10.017807006835938
    8. '0' → logprob: -11.017807006835938
    9. ' {' → logprob: -11.142807006835938
    10. '[
' → logprob: -11.767807006835938

Token 677: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3544423381972592e-05
    2. ' ' → logprob: -11.25001335144043
    3. 'set' → logprob: -15.37501335144043
    4. '(' → logprob: -16.43751335144043
    5. '   ' → logprob: -16.50001335144043
    6. '
' → logprob: -17.50001335144043
    7. '           ' → logprob: -17.62501335144043
    8. '[' → logprob: -17.68751335144043
    9. '       ' → logprob: -18.00001335144043
    10. '[]' → logprob: -18.06251335144043

Token 678: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.30319446325302124
    2. ' for' → logprob: -1.678194522857666
    3. ']*' → logprob: -2.678194522857666
    4. 'for' → logprob: -5.303194522857666
    5. ']*(' → logprob: -7.553194522857666
    6. ' ]' → logprob: -7.928194522857666
    7. '
' → logprob: -9.553194046020508
    8. '	for' → logprob: -10.178194046020508
    9. '           ' → logprob: -10.553194046020508
    10. '   ' → logprob: -10.928194046020508

Token 679: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.49796953797340393
    2. 'for' → logprob: -0.9979695081710815
    3. '
' → logprob: -3.872969627380371
    4. '<|end|>' → logprob: -5.997969627380371
    5. '	for' → logprob: -8.997969627380371
    6. '       ' → logprob: -10.122969627380371
    7. '           ' → logprob: -10.372969627380371
    8. ' ' → logprob: -10.372969627380371
    9. ']' → logprob: -10.997969627380371
    10. '<|end|>' → logprob: -11.247969627380371

Token 680: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -8.895480277715251e-06
    2. '(len' → logprob: -12.375008583068848
    3. 'self' → logprob: -12.875008583068848
    4. ' len' → logprob: -13.250008583068848
    5. '   ' → logprob: -15.625008583068848
    6. '           ' → logprob: -16.125009536743164
    7. '       ' → logprob: -16.750009536743164
    8. '[len' → logprob: -17.500009536743164
    9. '
' → logprob: -18.125009536743164
    10. '        
' → logprob: -18.625009536743164

Token 681: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.0001462107611587271
    2. '(self' → logprob: -9.37514591217041
    3. 'nodes' → logprob: -9.87514591217041
    4. '(n' → logprob: -12.12514591217041
    5. '(' → logprob: -13.25014591217041
    6. '(node' → logprob: -13.87514591217041
    7. '	nodes' → logprob: -14.00014591217041
    8. '(
' → logprob: -14.75014591217041
    9. '(numbers' → logprob: -15.62514591217041
    10. 'self' → logprob: -15.87514591217041

Token 682: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013535580597817898
    2. ')
' → logprob: -4.388535499572754
    3. '           ' → logprob: -7.138535499572754
    4. '       ' → logprob: -9.388535499572754
    5. ' )' → logprob: -9.638535499572754
    6. ')]' → logprob: -10.263535499572754
    7. ']' → logprob: -10.888535499572754
    8. '
' → logprob: -12.013535499572754
    9. '               ' → logprob: -12.388535499572754
    10. '   ' → logprob: -12.388535499572754

Token 683: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016621096059679985
    2. '<|end|>' → logprob: -4.266621112823486
    3. '       ' → logprob: -6.641621112823486
    4. '               ' → logprob: -8.516620635986328
    5. 'for' → logprob: -8.641620635986328
    6. ' for' → logprob: -8.641620635986328
    7. '        
' → logprob: -9.016620635986328
    8. '<|end|>' → logprob: -9.641620635986328
    9. '   ' → logprob: -9.766620635986328
    10. '
' → logprob: -9.766620635986328

Token 684: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.26645025610923767
    2. '           ' → logprob: -1.76645028591156
    3. ' for' → logprob: -2.7664501667022705
    4. '```' → logprob: -10.891449928283691
    5. '                   ' → logprob: -11.141449928283691
    6. '               ' → logprob: -11.266449928283691
    7. '	for' → logprob: -11.516449928283691
    8. '   ' → logprob: -11.891449928283691
    9. '       ' → logprob: -12.141449928283691
    10. '	       ' → logprob: -12.766449928283691

Token 685: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -1.1042160987854004
    2. 'idx' → logprob: -1.1042160987854004
    3. 'u' → logprob: -1.4792160987854004
    4. 'i' → logprob: -2.2292160987854004
    5. ' node' → logprob: -7.8542160987854
    6. ' idx' → logprob: -8.104215621948242
    7. 'index' → logprob: -8.604215621948242
    8. 'neighbor' → logprob: -8.729215621948242
    9. '   ' → logprob: -8.979215621948242
    10. ' u' → logprob: -9.229215621948242

Token 686: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009669794701039791
    2. ',' → logprob: -5.134669780731201
    3. 'in' → logprob: -5.759669780731201
    4. '_idx' → logprob: -7.759669780731201
    5. 'idx' → logprob: -9.88467025756836
    6. '_index' → logprob: -10.00967025756836
    7. 'index' → logprob: -11.38467025756836
    8. ',node' → logprob: -11.88467025756836
    9. '   ' → logprob: -12.25967025756836
    10. 's' → logprob: -12.63467025756836

Token 687: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.0713011771440506
    2. 'range' → logprob: -3.321301221847534
    3. 'self' → logprob: -3.446301221847534
    4. ' nodes' → logprob: -8.196301460266113
    5. '(nodes' → logprob: -9.071301460266113
    6. '
' → logprob: -9.446301460266113
    7. 'node' → logprob: -9.446301460266113
    8. 'neighbors' → logprob: -9.571301460266113
    9. 'enumer' → logprob: -9.821301460266113
    10. ' range' → logprob: -9.946301460266113

Token 688: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36223524808883667
    2. ':
' → logprob: -1.2372353076934814
    3. '               ' → logprob: -4.612235069274902
    4. '           ' → logprob: -6.237235069274902
    5. ',' → logprob: -7.237235069274902
    6. '):
' → logprob: -7.987235069274902
    7. '                   ' → logprob: -8.237235069274902
    8. '   ' → logprob: -8.737235069274902
    9. '):' → logprob: -9.737235069274902
    10. '       ' → logprob: -9.987235069274902

Token 689: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0019011514959856868
    2. ' for' → logprob: -7.001901149749756
    3. '   ' → logprob: -7.626901149749756
    4. '                   ' → logprob: -8.501901626586914
    5. 'for' → logprob: -8.876901626586914
    6. 'index' → logprob: -10.501901626586914
    7. 'neighbors' → logprob: -10.876901626586914
    8. '           ' → logprob: -11.001901626586914
    9. 'indices' → logprob: -11.001901626586914
    10. '	           ' → logprob: -11.251901626586914

Token 690: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.8728373646736145
    2. 'for' → logprob: -1.1228373050689697
    3. ' idx' → logprob: -2.7478373050689697
    4. 'i' → logprob: -2.7478373050689697
    5. ' for' → logprob: -2.9978373050689697
    6. 'u' → logprob: -3.3728373050689697
    7. '           ' → logprob: -4.372837543487549
    8. '       ' → logprob: -4.622837543487549
    9. '   ' → logprob: -5.122837543487549
    10. 'mask' → logprob: -5.372837543487549

Token 691: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22562289237976074
    2. '=' → logprob: -1.6006228923797607
    3. ' ' → logprob: -8.72562313079834
    4. '_idx' → logprob: -11.35062313079834
    5. ',' → logprob: -11.47562313079834
    6. '=node' → logprob: -12.35062313079834
    7. 'idx' → logprob: -12.85062313079834
    8. ' =
' → logprob: -12.85062313079834
    9. '   ' → logprob: -13.22562313079834
    10. '.' → logprob: -13.60062313079834

Token 692: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006274910410866141
    2. ' self' → logprob: -7.375627517700195
    3. '   ' → logprob: -15.500627517700195
    4. '0' → logprob: -16.000627517700195
    5. '           ' → logprob: -16.000627517700195
    6. '[self' → logprob: -16.000627517700195
    7. 'node' → logprob: -16.125627517700195
    8. '(self' → logprob: -16.750627517700195
    9. ' ' → logprob: -17.000627517700195
    10. '
' → logprob: -17.000627517700195

Token 693: '.node' (ID: 23366)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.3144816756248474
    2. '.node' → logprob: -1.3144817352294922
    3. 'self' → logprob: -7.939481735229492
    4. 'nodes' → logprob: -8.189481735229492
    5. '.user' → logprob: -8.939481735229492
    6. '_index' → logprob: -9.314481735229492
    7. 'user' → logprob: -9.689481735229492
    8. 'index' → logprob: -10.064481735229492
    9. '.' → logprob: -10.314481735229492
    10. '.nodes' → logprob: -10.439481735229492

Token 694: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -6.921253225300461e-05
    2. 'index' → logprob: -9.625069618225098
    3. 'Index' → logprob: -13.750069618225098
    4. 's' → logprob: -14.125069618225098
    5. '_INDEX' → logprob: -14.875069618225098
    6. '.index' → logprob: -15.250069618225098
    7. 'nd' → logprob: -16.62506866455078
    8. '_indices' → logprob: -16.62506866455078
    9. '	index' → logprob: -16.87506866455078
    10. '
' → logprob: -16.87506866455078

Token 695: '[node' (ID: 67268)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.5846520066261292
    2. '[node' → logprob: -0.8346520066261292
    3. 'node' → logprob: -4.834651947021484
    4. '[' → logprob: -7.334651947021484
    5. ' node' → logprob: -10.834651947021484
    6. '(' → logprob: -10.959651947021484
    7. ',node' → logprob: -11.459651947021484
    8. '[
' → logprob: -11.709651947021484
    9. '(
' → logprob: -11.959651947021484
    10. '=node' → logprob: -12.459651947021484

Token 696: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25064998865127563
    2. ']
' → logprob: -1.7506499290466309
    3. '               ' → logprob: -3.125649929046631
    4. ')' → logprob: -6.250649929046631
    5. '           ' → logprob: -6.875649929046631
    6. ')
' → logprob: -7.625649929046631
    7. '<|end|>' → logprob: -8.625650405883789
    8. '                   ' → logprob: -8.750650405883789
    9. '
' → logprob: -10.000650405883789
    10. '       ' → logprob: -10.250650405883789

Token 697: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005719385575503111
    2. ' for' → logprob: -5.505719184875488
    3. 'for' → logprob: -7.130719184875488
    4. '                   ' → logprob: -7.505719184875488
    5. '           ' → logprob: -8.630719184875488
    6. '   ' → logprob: -10.880719184875488
    7. '                       ' → logprob: -11.005719184875488
    8. '       ' → logprob: -11.005719184875488
    9. '	           ' → logprob: -11.880719184875488
    10. '		       ' → logprob: -11.880719184875488

Token 698: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -7.421908958349377e-05
    2. '               ' → logprob: -10.37507438659668
    3. '                   ' → logprob: -10.50007438659668
    4. ' for' → logprob: -12.12507438659668
    5. 'neighbors' → logprob: -12.25007438659668
    6. 'mask' → logprob: -13.50007438659668
    7. '   ' → logprob: -13.75007438659668
    8. 'self' → logprob: -13.87507438659668
    9. '           ' → logprob: -14.12507438659668
    10. '	for' → logprob: -14.62507438659668

Token 699: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.5769796967506409
    2. 'nei' → logprob: -1.576979637145996
    3. 'nbr' → logprob: -1.576979637145996
    4. 'ne' → logprob: -3.951979637145996
    5. ' nei' → logprob: -6.076979637145996
    6. 'adj' → logprob: -6.576979637145996
    7. 'n' → logprob: -6.701979637145996
    8. ' neighbor' → logprob: -7.326979637145996
    9. 'nb' → logprob: -8.576979637145996
    10. ' neigh' → logprob: -8.826979637145996

Token 700: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004094427917152643
    2. 'in' → logprob: -5.50409460067749
    3. '	in' → logprob: -12.129094123840332
    4. ' ' → logprob: -12.254094123840332
    5. 's' → logprob: -12.379094123840332
    6. '  ' → logprob: -15.129094123840332
    7. '   ' → logprob: -15.879094123840332
    8. '<|end|>' → logprob: -16.12909507751465
    9. ' 
' → logprob: -16.25409507751465
    10. ' ' → logprob: -16.25409507751465

Token 701: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011120449751615524
    2. ' self' → logprob: -4.511120319366455
    3. '           ' → logprob: -10.136120796203613
    4. '               ' → logprob: -11.636120796203613
    5. '   ' → logprob: -11.886120796203613
    6. 'graph' → logprob: -12.261120796203613
    7. '       ' → logprob: -12.511120796203613
    8. '                   ' → logprob: -12.636120796203613
    9. '[self' → logprob: -13.386120796203613
    10. '(self' → logprob: -13.386120796203613

Token 702: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.004145356826484203
    2. 'graph' → logprob: -5.50414514541626
    3. 'self' → logprob: -10.754145622253418
    4. '[' → logprob: -10.879145622253418
    5. '	graph' → logprob: -11.879145622253418
    6. '.user' → logprob: -12.504145622253418
    7. 'adj' → logprob: -13.004145622253418
    8. 'user' → logprob: -13.129145622253418
    9. '
' → logprob: -13.504145622253418
    10. '.' → logprob: -13.629145622253418

Token 703: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -1.9361264946837764e-07
    2. 'node' → logprob: -16.0
    3. '[n' → logprob: -17.875
    4. '   ' → logprob: -17.875
    5. '[' → logprob: -19.125
    6. '[
' → logprob: -20.125
    7. ' [' → logprob: -20.125
    8. '       ' → logprob: -20.25
    9. '(node' → logprob: -20.25
    10. '               ' → logprob: -20.5

Token 704: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.08991878479719162
    2. ']:' → logprob: -2.839918851852417
    3. '[node' → logprob: -3.714918851852417
    4. '                   ' → logprob: -6.339918613433838
    5. ']' → logprob: -7.714918613433838
    6. '               ' → logprob: -7.964918613433838
    7. '[idx' → logprob: -8.839919090270996
    8. '[' → logprob: -8.964919090270996
    9. ']:
' → logprob: -9.589919090270996
    10. ':
' → logprob: -9.589919090270996

Token 705: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004706849809736013
    2. '                       ' → logprob: -5.504706859588623
    3. ':
' → logprob: -8.379706382751465
    4. '                           ' → logprob: -8.879706382751465
    5. ':' → logprob: -9.504706382751465
    6. 'self' → logprob: -10.254706382751465
    7. '               ' → logprob: -10.254706382751465
    8. ' self' → logprob: -10.754706382751465
    9. '   ' → logprob: -10.879706382751465
    10. '                    ' → logprob: -11.004706382751465

Token 706: ' if' (ID: 538)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5252346992492676
    2. 'self' → logprob: -0.9002346992492676
    3. '                       ' → logprob: -6.900234699249268
    4. '                   ' → logprob: -7.525234699249268
    5. '                           ' → logprob: -8.40023422241211
    6. ' if' → logprob: -9.02523422241211
    7. '                               ' → logprob: -9.15023422241211
    8. '               ' → logprob: -10.40023422241211
    9. 'if' (adapté à ' if') → logprob: -11.27523422241211
    10. '   ' → logprob: -11.40023422241211

Token 707: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.0182228721678257
    2. ' neighbor' → logprob: -4.018222808837891
    3. 'self' → logprob: -9.89322280883789
    4. 'ne' → logprob: -12.26822280883789
    5. '   ' → logprob: -12.64322280883789
    6. 'n' → logprob: -12.89322280883789
    7. ' self' → logprob: -13.14322280883789
    8. ' ' → logprob: -13.76822280883789
    9. 'neighbors' → logprob: -13.89322280883789
    10. '(ne' → logprob: -14.01822280883789

Token 708: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02988898940384388
    2. 'in' → logprob: -3.5298891067504883
    3. ']' → logprob: -10.404889106750488
    4. ' ' → logprob: -10.904889106750488
    5. ' not' → logprob: -10.904889106750488
    6. 'idx' → logprob: -10.904889106750488
    7. '==' → logprob: -11.904889106750488
    8. ')' → logprob: -11.904889106750488
    9. '!=' → logprob: -12.279889106750488
    10. '<' → logprob: -12.404889106750488

Token 709: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007239909609779716
    2. ' self' → logprob: -7.250723838806152
    3. '           ' → logprob: -12.000723838806152
    4. 'nodes' → logprob: -12.750723838806152
    5. '               ' → logprob: -13.750723838806152
    6. '
' → logprob: -14.250723838806152
    7. '                   ' → logprob: -14.375723838806152
    8. 'node' → logprob: -14.375723838806152
    9. '   ' → logprob: -14.500723838806152
    10. ' ' → logprob: -15.000723838806152

Token 710: '.node' (ID: 23366)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.7755403518676758
    2. '.node' → logprob: -1.1505403518676758
    3. 'self' → logprob: -1.5255403518676758
    4. 'nodes' → logprob: -5.400540351867676
    5. '.nodes' → logprob: -7.150540351867676
    6. '
' → logprob: -9.775540351867676
    7. '_nodes' → logprob: -10.400540351867676
    8. ' self' → logprob: -10.525540351867676
    9. ' node' → logprob: -10.775540351867676
    10. '.self' → logprob: -10.900540351867676

Token 711: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00021152703266125172
    2. 's' → logprob: -8.875211715698242
    3. 'index' → logprob: -10.000211715698242
    4. 'nodes' → logprob: -12.000211715698242
    5. '_nodes' → logprob: -12.375211715698242
    6. '
' → logprob: -12.500211715698242
    7. 'set' → logprob: -12.625211715698242
    8. '_indices' → logprob: -12.750211715698242
    9. '_set' → logprob: -14.250211715698242
    10. '.index' → logprob: -14.375211715698242

Token 712: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.11580704152584076
    2. ':' → logprob: -2.240807056427002
    3. '[node' → logprob: -6.490807056427002
    4. '                       ' → logprob: -7.490807056427002
    5. '                   ' → logprob: -7.990807056427002
    6. ' and' → logprob: -8.490806579589844
    7. '[idx' → logprob: -8.740806579589844
    8. ':

' → logprob: -9.990806579589844
    9. '):
' → logprob: -10.490806579589844
    10. '               ' → logprob: -10.865806579589844

Token 713: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.003673829138278961
    2. ':
' → logprob: -6.253674030303955
    3. '                           ' → logprob: -7.503674030303955
    4. ':' → logprob: -7.628674030303955
    5. '                               ' → logprob: -7.753674030303955
    6. '                   ' → logprob: -9.753673553466797
    7. '):
' → logprob: -10.128673553466797
    8. '                        ' → logprob: -10.128673553466797
    9. ',' → logprob: -10.253673553466797
    10. ' self' → logprob: -10.378673553466797

Token 714: ' nid' (ID: 68904)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.048988137394189835
    2. ' self' → logprob: -3.048988103866577
    3. '                           ' → logprob: -8.298988342285156
    4. '                               ' → logprob: -9.298988342285156
    5. '   ' → logprob: -10.423988342285156
    6. '	self' → logprob: -11.548988342285156
    7. '                       ' → logprob: -12.048988342285156
    8. 'n' → logprob: -12.923988342285156
    9. ' ' → logprob: -13.298988342285156
    10. '                                   ' → logprob: -13.798988342285156

Token 715: ' =' (ID: 314)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04344671219587326
    2. 'ex' → logprob: -3.1684467792510986
    3. 'dx' → logprob: -9.16844654083252
    4. ' =' → logprob: -9.29344654083252
    5. '=' → logprob: -9.29344654083252
    6. '_index' → logprob: -10.41844654083252
    7. '_idx' → logprob: -10.41844654083252
    8. '[node' → logprob: -10.54344654083252
    9. 'idx' → logprob: -11.54344654083252
    10. '=node' → logprob: -11.66844654083252

Token 716: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008622609078884125
    2. ' self' → logprob: -4.758622646331787
    3. '[self' → logprob: -12.758622169494629
    4. '                       ' → logprob: -13.258622169494629
    5. '                   ' → logprob: -14.008622169494629
    6. '           ' → logprob: -14.508622169494629
    7. '(self' → logprob: -15.258622169494629
    8. '{' → logprob: -15.508622169494629
    9. '               ' → logprob: -15.508622169494629
    10. '                           ' → logprob: -15.508622169494629

Token 717: '.node' (ID: 23366)
  Prédit: '.node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.node' → logprob: -0.038076501339673996
    2. 'node' → logprob: -3.288076400756836
    3. '.user' → logprob: -10.913076400756836
    4. ' node' → logprob: -11.788076400756836
    5. 'self' → logprob: -12.538076400756836
    6. '[node' → logprob: -13.038076400756836
    7. 'user' → logprob: -13.913076400756836
    8. 'ode' → logprob: -14.663076400756836
    9. '=node' → logprob: -14.663076400756836
    10. '	node' → logprob: -14.913076400756836

Token 718: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.009800242260098457
    2. 'index' → logprob: -4.634800434112549
    3. 'nd' → logprob: -10.88479995727539
    4. '[node' → logprob: -11.13479995727539
    5. 'ex' → logprob: -13.00979995727539
    6. 'x' → logprob: -13.13479995727539
    7. '_INDEX' → logprob: -13.25979995727539
    8. '[' → logprob: -13.63479995727539
    9. 'Index' → logprob: -14.25979995727539
    10. '[index' → logprob: -14.38479995727539

Token 719: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.872261317563243e-05
    2. '[node' → logprob: -10.250059127807617
    3. 'neighbor' → logprob: -11.000059127807617
    4. '[n' → logprob: -12.500059127807617
    5. '[
' → logprob: -13.375059127807617
    6. ' [' → logprob: -15.000059127807617
    7. 'n' → logprob: -15.000059127807617
    8. '[[' → logprob: -15.750059127807617
    9. '{' → logprob: -15.750059127807617
    10. '```' → logprob: -16.500059127807617

Token 720: 'neighbor' (ID: 108409)
  Prédit: 'neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -2.165027217415627e-05
    2. 'node' → logprob: -11.750021934509277
    3. 'ne' → logprob: -12.000021934509277
    4. ' neighbor' → logprob: -12.000021934509277
    5. 'nei' → logprob: -15.125021934509277
    6. '
' → logprob: -15.375021934509277
    7. 'n' → logprob: -15.500021934509277
    8. '(ne' → logprob: -16.25002098083496
    9. 'friend' → logprob: -17.00002098083496
    10. 'neighbors' → logprob: -17.00002098083496

Token 721: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.2823251187801361
    2. ']' → logprob: -1.4073251485824585
    3. '                           ' → logprob: -7.907325267791748
    4. ']|' → logprob: -8.03232479095459
    5. ']
' → logprob: -9.15732479095459
    6. '                       ' → logprob: -9.53232479095459
    7. ']<<' → logprob: -10.03232479095459
    8. ']

' → logprob: -10.15732479095459
    9. '[node' → logprob: -10.65732479095459
    10. ']+=' → logprob: -10.90732479095459

Token 722: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.006985553540289402
    2. '                           ' → logprob: -5.381985664367676
    3. 'self' → logprob: -6.381985664367676
    4. ' self' → logprob: -8.131985664367676
    5. '                   ' → logprob: -8.631985664367676
    6. ',' → logprob: -9.756985664367676
    7. '                        ' → logprob: -10.131985664367676
    8. '               ' → logprob: -11.006985664367676
    9. '                               ' → logprob: -11.381985664367676
    10. '                        
' → logprob: -11.506985664367676

Token 723: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01423625461757183
    2. ' self' → logprob: -4.2642364501953125
    3. '                           ' → logprob: -10.139236450195312
    4. '                               ' → logprob: -10.514236450195312
    5. '                       ' → logprob: -13.264236450195312
    6. '	self' → logprob: -13.514236450195312
    7. ' ' → logprob: -13.764236450195312
    8. '```' → logprob: -14.764236450195312
    9. '[self' → logprob: -15.139236450195312
    10. '   ' → logprob: -15.389236450195312

Token 724: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -9.253090865968261e-06
    2. 'adj' → logprob: -11.625009536743164
    3. '.' → logprob: -16.250009536743164
    4. '_adj' → logprob: -16.375009536743164
    5. '
' → logprob: -17.125009536743164
    6. '.Ad' → logprob: -17.250009536743164
    7. '#ad' → logprob: -17.625009536743164
    8. '.
' → logprob: -18.000009536743164
    9. 'Adj' → logprob: -18.375009536743164
    10. ' .' → logprob: -18.625009536743164

Token 725: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.843177233240567e-05
    2. '_mask' → logprob: -11.375018119812012
    3. 'd' → logprob: -13.000018119812012
    4. 'jm' → logprob: -13.125018119812012
    5. 'mask' → logprob: -13.750018119812012
    6. 'm' → logprob: -14.000018119812012
    7. '[' → logprob: -15.875018119812012
    8. 'jac' → logprob: -16.125019073486328
    9. '[j' → logprob: -16.625019073486328
    10. 'k' → logprob: -16.875019073486328

Token 726: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -3.531315314830863e-06
    2. 'mask' → logprob: -13.000003814697266
    3. '_masks' → logprob: -14.500003814697266
    4. '_MASK' → logprob: -15.500003814697266
    5. '_m' → logprob: -15.750003814697266
    6. 'm' → logprob: -16.250003814697266
    7. '	mask' → logprob: -17.000003814697266
    8. '_' → logprob: -17.375003814697266
    9. '[' → logprob: -17.375003814697266
    10. '_repr' → logprob: -17.625003814697266

Token 727: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.309382373117842e-05
    2. '[node' → logprob: -10.625033378601074
    3. 'idx' → logprob: -12.000033378601074
    4. '[' → logprob: -13.125033378601074
    5. '[i' → logprob: -16.000032424926758
    6. '[n' → logprob: -16.125032424926758
    7. '	idx' → logprob: -16.625032424926758
    8. '[id' → logprob: -17.000032424926758
    9. '[
' → logprob: -17.750032424926758
    10. ' idx' → logprob: -17.875032424926758

Token 728: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0075170728377997875
    2. '|' → logprob: -5.257516860961914
    3. ']|' → logprob: -6.132516860961914
    4. ' |=' → logprob: -9.507516860961914
    5. ' ]' → logprob: -11.132516860961914
    6. ']+=' → logprob: -11.632516860961914
    7. ')' → logprob: -11.882516860961914
    8. '```' → logprob: -13.507516860961914
    9. ']=' → logprob: -14.132516860961914
    10. '|=
' → logprob: -14.132516860961914

Token 729: ' |=' (ID: 19917)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.005235648714005947
    2. ' |=' → logprob: -5.25523567199707
    3. '|=
' → logprob: -15.00523567199707
    4. '=' → logprob: -15.25523567199707
    5. ' |' → logprob: -15.38023567199707
    6. '   ' → logprob: -15.38023567199707
    7. '```' → logprob: -16.00523567199707
    8. '│' → logprob: -16.13023567199707
    9. '|\' → logprob: -16.50523567199707
    10. '           ' → logprob: -16.63023567199707

Token 730: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04861121252179146
    2. '(' → logprob: -3.0486111640930176
    3. ' (' → logprob: -11.173611640930176
    4. ' ' → logprob: -11.548611640930176
    5. '```' → logprob: -17.79861068725586
    6. '[' → logprob: -18.04861068725586
    7. '{' → logprob: -18.29861068725586
    8. '   ' → logprob: -18.54861068725586
    9. '
' → logprob: -18.54861068725586
    10. '(
' → logprob: -18.92361068725586

Token 731: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7954958821064793e-05
    2. '(' → logprob: -11.000018119812012
    3. ' ' → logprob: -13.625018119812012
    4. ' (' → logprob: -18.000017166137695
    5. '
' → logprob: -18.125017166137695
    6. '```' → logprob: -19.125017166137695
    7. '   ' → logprob: -19.375017166137695
    8. '           ' → logprob: -19.500017166137695
    9. '                           ' → logprob: -19.875017166137695
    10. '`' → logprob: -19.875017166137695

Token 732: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.38695162534713745
    2. '<<' → logprob: -1.1369516849517822
    3. '1' → logprob: -9.636951446533203
    4. ' ' → logprob: -12.511951446533203
    5. '<' → logprob: -12.761951446533203
    6. ')<<' → logprob: -13.511951446533203
    7. '
' → logprob: -13.511951446533203
    8. ')' → logprob: -13.511951446533203
    9. '<<(' → logprob: -13.636951446533203
    10. ' <<
' → logprob: -13.761951446533203

Token 733: ' nid' (ID: 68904)
  Prédit: 'nid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nid' → logprob: -0.00023095356300473213
    2. ' nid' → logprob: -8.37523078918457
    3. 'n' → logprob: -15.87523078918457
    4. '   ' → logprob: -17.12523078918457
    5. '
' → logprob: -17.25023078918457
    6. ' ' → logprob: -17.62523078918457
    7. 'tid' → logprob: -18.12523078918457
    8. '	n' → logprob: -18.25023078918457
    9. 'rid' → logprob: -18.50023078918457
    10. 'ni' → logprob: -18.62523078918457

Token 734: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018717595376074314
    2. ' )' → logprob: -6.876871585845947
    3. '<|end|>' → logprob: -8.001872062683105
    4. '           ' → logprob: -8.376872062683105
    5. '                           ' → logprob: -9.501872062683105
    6. ')
' → logprob: -9.876872062683105
    7. '                   ' → logprob: -10.251872062683105
    8. '                       ' → logprob: -10.251872062683105
    9. '               ' → logprob: -10.376872062683105
    10. '),' → logprob: -12.001872062683105

Token 735: '        
' (ID: 3564)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7572376728057861
    2. '        
' → logprob: -1.1322376728057861
    3. '       ' → logprob: -2.257237672805786
    4. '           ' → logprob: -3.382237672805786
    5. '    
' → logprob: -3.507237672805786
    6. '<|end|>' → logprob: -3.507237672805786
    7. '            
' → logprob: -5.757237434387207
    8. '  
' → logprob: -6.382237434387207
    9. '   ' → logprob: -7.382237434387207
    10. '\n' → logprob: -7.757237434387207

Token 736: '       ' (ID: 309)
  Prédit: '        
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        
' → logprob: -0.26601308584213257
    2. '       ' → logprob: -1.5160131454467773
    3. '
' → logprob: -4.641013145446777
    4. '    
' → logprob: -5.516013145446777
    5. '            
' → logprob: -8.516013145446777
    6. '   ' → logprob: -10.016013145446777
    7. 'def' → logprob: -10.891013145446777
    8. '  
' → logprob: -11.516013145446777
    9. '           ' → logprob: -11.891013145446777
    10. '                
' → logprob: -12.016013145446777

Token 737: ' def' (ID: 1056)
  Prédit: '        
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        
' → logprob: -0.8305661082267761
    2. '       ' → logprob: -1.080566167831421
    3. 'def' (adapté à ' def') → logprob: -2.330566167831421
    4. '
' → logprob: -2.330566167831421
    5. '    
' → logprob: -3.580566167831421
    6. '   ' → logprob: -6.580565929412842
    7. '            
' → logprob: -7.455565929412842
    8. '  
' → logprob: -9.08056640625
    9. ' def' → logprob: -9.33056640625
    10. ' 
' → logprob: -9.58056640625

Token 738: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.04332594946026802
    2. ' count' → logprob: -3.168325901031494
    3. 'dfs' → logprob: -8.668326377868652
    4. '_count' → logprob: -9.793326377868652
    5. 'solve' → logprob: -9.918326377868652
    6. ' dfs' → logprob: -11.043326377868652
    7. 'dp' → logprob: -11.043326377868652
    8. 'ind' → logprob: -12.043326377868652
    9. 'max' → logprob: -12.793326377868652
    10. ' solve' → logprob: -12.918326377868652

Token 739: '_ind' (ID: 20261)
  Prédit: '_ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ind' → logprob: -0.04378132149577141
    2. '(self' → logprob: -3.793781280517578
    3. '(' → logprob: -4.793781280517578
    4. '_max' → logprob: -5.418781280517578
    5. '_set' → logprob: -5.793781280517578
    6. '_' → logprob: -6.293781280517578
    7. '_sets' → logprob: -6.918781280517578
    8. '(
' → logprob: -7.793781280517578
    9. '_self' → logprob: -8.043781280517578
    10. '_all' → logprob: -8.293781280517578

Token 740: 'ependent' (ID: 66362)
  Prédit: 'ependent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ependent' → logprob: -0.014340135268867016
    2. 'ep' → logprob: -4.264339923858643
    3. 'epen' → logprob: -9.1393404006958
    4. '_set' → logprob: -10.6393404006958
    5. 'epend' → logprob: -11.1393404006958
    6. '_sets' → logprob: -12.1393404006958
    7. 'e' → logprob: -12.3893404006958
    8. 'p' → logprob: -12.3893404006958
    9. 'pendent' → logprob: -12.5143404006958
    10. 'set' → logprob: -12.6393404006958

Token 741: '_sets' (ID: 56707)
  Prédit: '_set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.28676527738571167
    2. '_sets' → logprob: -1.4117653369903564
    3. '_' → logprob: -5.411765098571777
    4. 'set' → logprob: -7.411765098571777
    5. 'Set' → logprob: -8.411765098571777
    6. ' sets' → logprob: -9.661765098571777
    7. 'Sets' → logprob: -9.786765098571777
    8. '(' → logprob: -9.911765098571777
    9. 'sets' → logprob: -10.036765098571777
    10. ' set' → logprob: -10.661765098571777

Token 742: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00765738170593977
    2. '(' → logprob: -4.882657527923584
    3. '(
' → logprob: -10.757657051086426
    4. 'self' → logprob: -11.007657051086426
    5. '_(' → logprob: -12.507657051086426
    6. '_recursive' → logprob: -13.007657051086426
    7. '_' → logprob: -13.257657051086426
    8. ' (' → logprob: -13.382657051086426
    9. '       ' → logprob: -14.007657051086426
    10. '   ' → logprob: -14.007657051086426

Token 743: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013491649879142642
    2. 'self' → logprob: -7.126348972320557
    3. ' ,' → logprob: -7.626348972320557
    4. '_,' → logprob: -11.126349449157715
    5. '(self' → logprob: -11.376349449157715
    6. ',self' → logprob: -11.626349449157715
    7. ',
' → logprob: -11.751349449157715
    8. '       ' → logprob: -12.626349449157715
    9. '_helper' → logprob: -12.751349449157715
    10. ',node' → logprob: -13.626349449157715

Token 744: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0062517886981368065
    2. '       ' → logprob: -6.006251811981201
    3. '(' → logprob: -6.631251811981201
    4. '{' → logprob: -7.256251811981201
    5. '   ' → logprob: -7.631251811981201
    6. '        ' → logprob: -8.506251335144043
    7. '          ' → logprob: -8.631251335144043
    8. ' {' → logprob: -8.881251335144043
    9. '(self' → logprob: -8.881251335144043
    10. ',' → logprob: -9.131251335144043

Token 745: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2422657459974289
    2. '           ' → logprob: -2.3672657012939453
    3. 'n' → logprob: -3.1172657012939453
    4. 'return' → logprob: -3.2422657012939453
    5. ' def' → logprob: -3.7422657012939453
    6. 'self' → logprob: -5.742265701293945
    7. ' n' → logprob: -5.867265701293945
    8. 'from' → logprob: -6.242265701293945
    9. ' return' → logprob: -6.617265701293945
    10. '               ' → logprob: -6.992265701293945

Token 746: ' Use' (ID: 7649)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09683002531528473
    2. 'return' → logprob: -3.096830129623413
    3. 'n' → logprob: -3.471830129623413
    4. 'from' → logprob: -4.846829891204834
    5. 'nodes' → logprob: -6.221829891204834
    6. 'if' → logprob: -6.721829891204834
    7. 'self' → logprob: -6.846829891204834
    8. '           ' → logprob: -6.971829891204834
    9. 'full' → logprob: -6.971829891204834
    10. '       ' → logprob: -7.721829891204834

Token 747: ' bit' (ID: 3546)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5282193422317505
    2. 'self' → logprob: -1.2782193422317505
    3. '(' → logprob: -2.903219223022461
    4. '1' → logprob: -3.278219223022461
    5. '0' → logprob: -3.653219223022461
    6. 'dfs' → logprob: -5.528219223022461
    7. 'dp' → logprob: -5.778219223022461
    8. '(self' → logprob: -6.653219223022461
    9. 'fun' → logprob: -6.778219223022461
    10. '@' → logprob: -7.403219223022461

Token 748: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.005525203887373209
    2. 'm' → logprob: -6.5055251121521
    3. 'set' → logprob: -6.6305251121521
    4. '   ' → logprob: -7.5055251121521
    5. '_mask' → logprob: -7.7555251121521
    6. '_repr' → logprob: -7.7555251121521
    7. '
' → logprob: -8.005525588989258
    8. '       ' → logprob: -8.380525588989258
    9. '```' → logprob: -8.880525588989258
    10. '           ' → logprob: -9.005525588989258

Token 749: ' and' (ID: 326)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9455597996711731
    2. ' =' → logprob: -1.6955597400665283
    3. ' dp' → logprob: -2.8205597400665283
    4. '_dp' → logprob: -3.3205597400665283
    5. '(' → logprob: -3.4455597400665283
    6. '   ' → logprob: -3.4455597400665283
    7. ':' → logprob: -3.5705597400665283
    8. '=' → logprob: -3.5705597400665283
    9. '       ' → logprob: -3.9455597400665283
    10. 'def' → logprob: -4.070559978485107

Token 750: ' DP' (ID: 51992)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.500645637512207
    2. 'dp' → logprob: -1.625645637512207
    3. 'rec' → logprob: -2.625645637512207
    4. 'memo' → logprob: -3.000645637512207
    5. 'def' → logprob: -4.125645637512207
    6. 'recursive' → logprob: -4.375645637512207
    7. ' memo' → logprob: -4.500645637512207
    8. ' dfs' → logprob: -4.875645637512207
    9. ' recursion' → logprob: -5.125645637512207
    10. 'self' → logprob: -5.500645637512207

Token 751: ' over' (ID: 1072)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5893006324768066
    2. '(' → logprob: -1.9643006324768066
    3. '       ' → logprob: -2.4643006324768066
    4. '(
' → logprob: -2.8393006324768066
    5. ' for' → logprob: -3.3393006324768066
    6. ':' → logprob: -3.5893006324768066
    7. ' (' → logprob: -3.5893006324768066
    8. '           ' → logprob: -4.089300632476807
    9. '
' → logprob: -4.964300632476807
    10. '   ' → logprob: -4.964300632476807

Token 752: ' subsets' (ID: 165377)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2586687207221985
    2. 'self' → logprob: -2.2586686611175537
    3. '1' → logprob: -3.1336686611175537
    4. 'all' → logprob: -3.3836686611175537
    5. 'sub' → logprob: -4.258668899536133
    6. 'subset' → logprob: -4.883668899536133
    7. '0' → logprob: -5.133668899536133
    8. 'nodes' → logprob: -5.258668899536133
    9. ' subsets' → logprob: -5.758668899536133
    10. ' (' → logprob: -6.133668899536133

Token 753: ' approach' (ID: 7139)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1721981763839722
    2. ':' → logprob: -1.2971981763839722
    3. '(self' → logprob: -1.5471981763839722
    4. '
' → logprob: -2.4221982955932617
    5. '       ' → logprob: -3.5471982955932617
    6. '   ' → logprob: -3.7971982955932617
    7. ':
' → logprob: -4.047198295593262
    8. '(' → logprob: -4.297198295593262
    9. '(
' → logprob: -4.922198295593262
    10. '{' → logprob: -5.297198295593262

Token 754: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5810521841049194
    2. ':' → logprob: -1.9560521841049194
    3. '(self' → logprob: -2.581052303314209
    4. '       ' → logprob: -2.706052303314209
    5. ':
' → logprob: -2.831052303314209
    6. '
' → logprob: -3.081052303314209
    7. '   ' → logprob: -3.831052303314209
    8. '(' → logprob: -5.206052303314209
    9. '(
' → logprob: -5.456052303314209
    10. ',' → logprob: -5.706052303314209

Token 755: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015633042203262448
    2. '       ' → logprob: -7.12656307220459
    3. '   ' → logprob: -8.37656307220459
    4. '            ' → logprob: -9.50156307220459
    5. ' ' → logprob: -9.62656307220459
    6. '    ' → logprob: -9.75156307220459
    7. '        ' → logprob: -9.75156307220459
    8. ' return' → logprob: -10.12656307220459
    9. '               ' → logprob: -10.37656307220459
    10. ' {' → logprob: -10.50156307220459

Token 756: ' n' (ID: 297)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5072534680366516
    2. ' def' → logprob: -1.3822534084320068
    3. ' n' → logprob: -2.632253408432007
    4. 'n' (adapté à ' n') → logprob: -3.507253408432007
    5. 'dp' → logprob: -5.007253646850586
    6. ' full' → logprob: -5.132253646850586
    7. 'self' → logprob: -5.132253646850586
    8. 'return' → logprob: -5.132253646850586
    9. '       ' → logprob: -5.382253646850586
    10. '   ' → logprob: -5.507253646850586

Token 757: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05017508938908577
    2. '=' → logprob: -3.300175189971924
    3. '           ' → logprob: -5.675175189971924
    4. ' ' → logprob: -6.175175189971924
    5. ')' → logprob: -6.300175189971924
    6. '       ' → logprob: -6.925175189971924
    7. '        ' → logprob: -7.175175189971924
    8. '<|end|>' → logprob: -7.550175189971924
    9. ':' → logprob: -7.800175189971924
    10. '            ' → logprob: -8.050174713134766

Token 758: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.31440338492393494
    2. ' len' → logprob: -1.3144034147262573
    3. 'self' → logprob: -7.064403533935547
    4. ' self' → logprob: -8.189403533935547
    5. '(len' → logprob: -12.814403533935547
    6. '   ' → logprob: -13.314403533935547
    7. '           ' → logprob: -13.689403533935547
    8. ' ' → logprob: -14.064403533935547
    9. '	len' → logprob: -14.439403533935547
    10. '[len' → logprob: -14.439403533935547

Token 759: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.911954500945285e-05
    2. 'self' → logprob: -9.625088691711426
    3. '(' → logprob: -10.750088691711426
    4. ' (' → logprob: -14.250088691711426
    5. ' self' → logprob: -14.375088691711426
    6. '(s' → logprob: -16.250089645385742
    7. '(
' → logprob: -16.375089645385742
    8. 's' → logprob: -17.500089645385742
    9. '=self' → logprob: -18.375089645385742
    10. '(this' → logprob: -18.500089645385742

Token 760: '.nodes' (ID: 44152)
  Prédit: '.nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.nodes' → logprob: -0.00033522743615321815
    2. 'self' → logprob: -8.750335693359375
    3. 'nodes' → logprob: -9.625335693359375
    4. ' .' → logprob: -10.125335693359375
    5. '.n' → logprob: -10.250335693359375
    6. '.node' → logprob: -11.375335693359375
    7. '.ad' → logprob: -12.375335693359375
    8. '.self' → logprob: -12.375335693359375
    9. '.s' → logprob: -12.625335693359375
    10. '
' → logprob: -13.125335693359375

Token 761: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0573900043964386
    2. ')
' → logprob: -3.057389974594116
    3. '
' → logprob: -5.182390213012695
    4. '           ' → logprob: -5.932390213012695
    5. '       ' → logprob: -8.432390213012695
    6. ' )' → logprob: -8.932390213012695
    7. '):
' → logprob: -10.182390213012695
    8. '   ' → logprob: -10.807390213012695
    9. '               ' → logprob: -11.557390213012695
    10. ' )
' → logprob: -11.557390213012695

Token 762: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07371822744607925
    2. '   ' → logprob: -3.698718309402466
    3. ' ' → logprob: -4.698718070983887
    4. '
' → logprob: -4.948718070983887
    5. ' 
' → logprob: -4.948718070983887
    6. '       ' → logprob: -5.198718070983887
    7. '<|end|>' → logprob: -5.573718070983887
    8. '    
' → logprob: -5.823718070983887
    9. ':' → logprob: -5.948718070983887
    10. '               ' → logprob: -6.448718070983887

Token 763: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.19553770124912262
    2. 'self' → logprob: -1.9455376863479614
    3. 'return' → logprob: -4.695537567138672
    4. 'res' → logprob: -5.195537567138672
    5. 'result' → logprob: -5.195537567138672
    6. 'if' → logprob: -5.570537567138672
    7. '       ' → logprob: -5.695537567138672
    8. 'def' → logprob: -5.695537567138672
    9. 'total' → logprob: -6.445537567138672
    10. '   ' → logprob: -7.570537567138672

Token 764: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07109268754720688
    2. 'self' → logprob: -2.9460926055908203
    3. 'def' → logprob: -4.94609260559082
    4. 'return' → logprob: -5.82109260559082
    5. 'from' → logprob: -6.07109260559082
    6. 'res' → logprob: -6.57109260559082
    7. 'f' → logprob: -7.57109260559082
    8. '   ' → logprob: -7.94609260559082
    9. 'result' → logprob: -7.94609260559082
    10. '       ' → logprob: -8.19609260559082

Token 765: '[s' (ID: 24177)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012836175039410591
    2. '=' → logprob: -4.38783597946167
    3. '_' → logprob: -9.387836456298828
    4. '[' → logprob: -9.637836456298828
    5. ' ' → logprob: -10.137836456298828
    6. '   ' → logprob: -10.262836456298828
    7. '=[' → logprob: -11.012836456298828
    8. 'dp' → logprob: -11.512836456298828
    9. 'size' → logprob: -11.512836456298828
    10. '```' → logprob: -11.512836456298828

Token 766: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0022294751834124327
    2. ' ]' → logprob: -7.127229690551758
    3. ']=' → logprob: -7.252229690551758
    4. ' =' → logprob: -8.752229690551758
    5. '[' → logprob: -9.002229690551758
    6. '
' → logprob: -9.502229690551758
    7. '][' → logprob: -10.002229690551758
    8. '[s' → logprob: -10.002229690551758
    9. '=' → logprob: -10.127229690551758
    10. '   ' → logprob: -10.502229690551758

Token 767: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16039665043354034
    2. '=' → logprob: -1.910396695137024
    3. '=[' → logprob: -9.535396575927734
    4. '[' → logprob: -9.535396575927734
    5. ' =[' → logprob: -11.535396575927734
    6. 's' → logprob: -12.785396575927734
    7. ')' → logprob: -12.910396575927734
    8. ' ' → logprob: -13.035396575927734
    9. ',' → logprob: -13.160396575927734
    10. ']' → logprob: -13.535396575927734

Token 768: ' number' (ID: 2086)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.054304126650094986
    2. '0' → logprob: -3.5543041229248047
    3. 'number' → logprob: -4.679304122924805
    4. ' ' → logprob: -5.179304122924805
    5. '(' → logprob: -5.679304122924805
    6. ' number' → logprob: -6.429304122924805
    7. ' (' → logprob: -6.554304122924805
    8. '(s' → logprob: -6.804304122924805
    9. 'pow' → logprob: -7.429304122924805
    10. '[' → logprob: -8.429304122924805

Token 769: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -1.078033447265625
    2. '_of' → logprob: -1.203033447265625
    3. ' of' → logprob: -1.953033447265625
    4. 's' → logprob: -2.078033447265625
    5. '[' → logprob: -2.828033447265625
    6. 'ofs' → logprob: -5.078033447265625
    7. '_' → logprob: -5.828033447265625
    8. '_s' → logprob: -5.828033447265625
    9. '[s' → logprob: -5.828033447265625
    10. '=' → logprob: -5.953033447265625

Token 770: ' independent' (ID: 13313)
  Prédit: ' independent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' independent' → logprob: -0.1826673001050949
    2. 'ind' → logprob: -2.5576672554016113
    3. ' ways' → logprob: -2.8076672554016113
    4. ' subsets' → logprob: -3.9326672554016113
    5. ' valid' → logprob: -5.807667255401611
    6. '_ind' → logprob: -6.307667255401611
    7. 'sub' → logprob: -6.807667255401611
    8. 'ways' → logprob: -7.432667255401611
    9. 'valid' → logprob: -7.557667255401611
    10. ' s' → logprob: -7.557667255401611

Token 771: ' sets' (ID: 11982)
  Prédit: '_sets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -0.016048209741711617
    2. ' sets' → logprob: -4.641048431396484
    3. '_set' → logprob: -5.891048431396484
    4. '_' → logprob: -6.391048431396484
    5. 'sets' → logprob: -7.141048431396484
    6. 's' → logprob: -8.516048431396484
    7. ' _' → logprob: -8.641048431396484
    8. '_s' → logprob: -8.766048431396484
    9. '   ' → logprob: -9.016048431396484
    10. ' ' → logprob: -9.266048431396484

Token 772: ' represented' (ID: 27328)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.25147661566734314
    2. '
' → logprob: -2.501476526260376
    3. ' =' → logprob: -2.626476526260376
    4. '[' → logprob: -3.626476526260376
    5. '           ' → logprob: -4.126476764678955
    6. '       ' → logprob: -5.501476764678955
    7. ' s' → logprob: -5.751476764678955
    8. ' [' → logprob: -6.001476764678955
    9. '=' → logprob: -6.001476764678955
    10. '   ' → logprob: -6.126476764678955

Token 773: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.24408815801143646
    2. 'by' → logprob: -1.6190881729125977
    3. '```' → logprob: -5.494088172912598
    4. 's' → logprob: -5.619088172912598
    5. ' s' → logprob: -5.619088172912598
    6. '[s' → logprob: -5.994088172912598
    7. '           ' → logprob: -7.369088172912598
    8. '   ' → logprob: -7.494088172912598
    9. '
' → logprob: -7.744088172912598
    10. '=' → logprob: -7.744088172912598

Token 774: ' subset' (ID: 58845)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6885274052619934
    2. 's' → logprob: -0.9385274052619934
    3. ' subsets' → logprob: -3.1885273456573486
    4. 'subset' → logprob: -3.4385273456573486
    5. ' subset' → logprob: -4.063527584075928
    6. ' the' → logprob: -5.313527584075928
    7. 'sub' → logprob: -5.438527584075928
    8. ' a' → logprob: -6.938527584075928
    9. 'the' → logprob: -7.063527584075928
    10. ' ' → logprob: -7.063527584075928

Token 775: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.47367000579833984
    2. 's' → logprob: -1.5986700057983398
    3. ' _' → logprob: -3.09867000579834
    4. '_s' → logprob: -3.09867000579834
    5. '_' → logprob: -3.72367000579834
    6. '_mask' → logprob: -3.97367000579834
    7. ' =' → logprob: -4.34867000579834
    8. '[s' → logprob: -4.34867000579834
    9. ' of' → logprob: -5.59867000579834
    10. ' [' → logprob: -6.22367000579834

Token 776: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3136518895626068
    2. '[s' → logprob: -2.3136518001556396
    3. '[' → logprob: -2.9386518001556396
    4. '
' → logprob: -3.4386518001556396
    5. '=' → logprob: -3.8136518001556396
    6. '           ' → logprob: -4.188652038574219
    7. '       ' → logprob: -4.313652038574219
    8. '\n' → logprob: -4.563652038574219
    9. '\' → logprob: -5.813652038574219
    10. '   ' → logprob: -6.063652038574219

Token 777: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5905694961547852
    2. '           ' → logprob: -1.0905694961547852
    3. ' =' → logprob: -2.965569496154785
    4. '       ' → logprob: -3.215569496154785
    5. '[' → logprob: -5.340569496154785
    6. '   ' → logprob: -5.465569496154785
    7. '\n' → logprob: -6.215569496154785
    8. '[s' → logprob: -6.840569496154785
    9. '=' → logprob: -7.215569496154785
    10. ',' → logprob: -7.465569496154785

Token 778: ' #' (ID: 1069)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.23925189673900604
    2. ' DP' → logprob: -2.6142518520355225
    3. 'dp' → logprob: -2.9892518520355225
    4. '   ' → logprob: -3.8642518520355225
    5. '
' → logprob: -4.239252090454102
    6. '       ' → logprob: -4.489252090454102
    7. '[' → logprob: -4.739252090454102
    8. ' dp' → logprob: -4.739252090454102
    9. 'D' → logprob: -4.989252090454102
    10. '\n' → logprob: -5.489252090454102

Token 779: ' bottom' (ID: 8725)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.047291096299886703
    2. ' DP' → logprob: -4.047291278839111
    3. '           ' → logprob: -4.172291278839111
    4. '       ' → logprob: -5.172291278839111
    5. '   ' → logprob: -6.172291278839111
    6. 'D' → logprob: -6.797291278839111
    7. 'dp' → logprob: -6.797291278839111
    8. 'from' → logprob: -7.172291278839111
    9. 'self' → logprob: -7.172291278839111
    10. '_DP' → logprob: -8.297290802001953

Token 780: ' up' (ID: 869)
  Prédit: '-up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-up' → logprob: -0.8006991744041443
    2. '_up' → logprob: -0.8006991744041443
    3. '           ' → logprob: -3.050699234008789
    4. '_' → logprob: -3.675699234008789
    5. 'up' → logprob: -4.800699234008789
    6. 'Up' → logprob: -5.050699234008789
    7. ' up' → logprob: -5.925699234008789
    8. '-Up' → logprob: -6.050699234008789
    9. '               ' → logprob: -6.425699234008789
    10. '-' → logprob: -6.425699234008789

Token 781: ' could' (ID: 2023)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8586906790733337
    2. '_dp' → logprob: -1.4836907386779785
    3. '           ' → logprob: -2.1086907386779785
    4. ' =' → logprob: -2.1086907386779785
    5. '       ' → logprob: -3.3586907386779785
    6. '
' → logprob: -3.6086907386779785
    7. '=' → logprob: -4.1086907386779785
    8. '   ' → logprob: -5.3586907386779785
    9. ' dp' → logprob: -5.3586907386779785
    10. 'DP' → logprob: -5.6086907386779785

Token 782: ' be' (ID: 413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6287361979484558
    2. ' =' → logprob: -1.0037362575531006
    3. ' be' → logprob: -3.3787362575531006
    4. '[' → logprob: -4.0037360191345215
    5. '```' → logprob: -4.6287360191345215
    6. '       ' → logprob: -4.7537360191345215
    7. '_' → logprob: -5.5037360191345215
    8. '   ' → logprob: -5.8787360191345215
    9. '           ' → logprob: -6.1287360191345215
    10. ')' → logprob: -6.1287360191345215

Token 783: ' exponential' (ID: 116799)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.015170582570135593
    2. '[n' → logprob: -4.765170574188232
    3. ' [' → logprob: -5.765170574188232
    4. '[s' → logprob: -6.890170574188232
    5. 'dp' → logprob: -7.515170574188232
    6. 'n' → logprob: -7.640170574188232
    7. 'DP' → logprob: -8.51517105102539
    8. '{' → logprob: -8.64017105102539
    9. '{}' → logprob: -8.89017105102539
    10. 'self' → logprob: -8.89017105102539

Token 784: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11432355642318726
    2. '       ' → logprob: -3.614323616027832
    3. '           ' → logprob: -3.739323616027832
    4. ',' → logprob: -4.364323616027832
    5. '\n' → logprob: -4.364323616027832
    6. ',
' → logprob: -4.989323616027832
    7. '[' → logprob: -5.489323616027832
    8. 'def' → logprob: -5.489323616027832
    9. '```' → logprob: -5.739323616027832
    10. '        
' → logprob: -5.989323616027832

Token 785: '2' (ID: 17)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2427384853363037
    2. '           ' → logprob: -2.8677384853363037
    3. '
' → logprob: -3.6177384853363037
    4. ' but' → logprob: -3.7427384853363037
    5. ' )' → logprob: -3.9927384853363037
    6. ')
' → logprob: -4.242738723754883
    7. '1' → logprob: -4.367738723754883
    8. ' n' → logprob: -4.742738723754883
    9. 'n' → logprob: -4.742738723754883
    10. ' ' → logprob: -4.867738723754883

Token 786: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5757305026054382
    2. ' **' → logprob: -0.9507305026054382
    3. '^' → logprob: -3.450730562210083
    4. ')' → logprob: -4.200730323791504
    5. ' )' → logprob: -6.700730323791504
    6. '**)' → logprob: -7.075730323791504
    7. '
' → logprob: -7.200730323791504
    8. ' **)' → logprob: -7.200730323791504
    9. '^)' → logprob: -8.200730323791504
    10. ' ^' → logprob: -8.450730323791504

Token 787: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10169236361980438
    2. ' n' → logprob: -2.3516924381256104
    3. ')' → logprob: -7.601692199707031
    4. '(n' → logprob: -8.226692199707031
    5. ')n' → logprob: -8.351692199707031
    6. ' )' → logprob: -8.601692199707031
    7. ' ' → logprob: -8.976692199707031
    8. '```' → logprob: -9.976692199707031
    9. ' (' → logprob: -11.351692199707031
    10. '
' → logprob: -11.601692199707031

Token 788: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3232946991920471
    2. '),' → logprob: -2.0732946395874023
    3. ')
' → logprob: -2.1982946395874023
    4. ' )' → logprob: -3.9482946395874023
    5. '
' → logprob: -5.073294639587402
    6. ',' → logprob: -5.698294639587402
    7. '           ' → logprob: -6.073294639587402
    8. ' )
' → logprob: -6.198294639587402
    9. ' ),' → logprob: -6.448294639587402
    10. ' but' → logprob: -6.448294639587402

Token 789: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02970917709171772
    2. '           ' → logprob: -3.6547091007232666
    3. '       ' → logprob: -7.154709339141846
    4. ',' → logprob: -7.529709339141846
    5. '            
' → logprob: -7.904709339141846
    6. '    
' → logprob: -8.029708862304688
    7. '\n' → logprob: -8.029708862304688
    8. '        
' → logprob: -8.279708862304688
    9. '
' → logprob: -8.529708862304688
    10. '   ' → logprob: -8.904708862304688

Token 790: ' refined' (ID: 54969)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2651498317718506
    2. 'return' → logprob: -2.3901498317718506
    3. ' but' → logprob: -3.2651498317718506
    4. ' if' → logprob: -3.3901498317718506
    5. '           ' → logprob: -3.7651498317718506
    6. ' n' → logprob: -5.14015007019043
    7. '       ' → logprob: -5.26515007019043
    8. '
' → logprob: -5.26515007019043
    9. '        ' → logprob: -5.39015007019043
    10. 'n' → logprob: -5.64015007019043

Token 791: ' method' (ID: 2595)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26071909070014954
    2. 'def' → logprob: -2.385719060897827
    3. '       ' → logprob: -3.135719060897827
    4. '           ' → logprob: -3.635719060897827
    5. '   ' → logprob: -3.885719060897827
    6. ' approach' → logprob: -4.760719299316406
    7. ' def' → logprob: -5.010719299316406
    8. '        
' → logprob: -5.135719299316406
    9. '    
' → logprob: -5.385719299316406
    10. '            
' → logprob: -5.760719299316406

Token 792: ':' (ID: 25)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13724105060100555
    2. ':' → logprob: -2.6372411251068115
    3. ':
' → logprob: -4.387240886688232
    4. 'def' → logprob: -4.887240886688232
    5. ' =' → logprob: -5.512240886688232
    6. '           ' → logprob: -5.512240886688232
    7. '       ' → logprob: -5.512240886688232
    8. '\n' → logprob: -5.637240886688232
    9. '[' → logprob: -6.387240886688232
    10. '        
' → logprob: -6.637240886688232

Token 793: ' use' (ID: 1199)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.7412558794021606
    2. 'DP' → logprob: -1.8662558794021606
    3. 'def' → logprob: -1.8662558794021606
    4. ' return' → logprob: -2.241255760192871
    5. ' def' → logprob: -2.866255760192871
    6. 'dp' → logprob: -2.866255760192871
    7. 'from' → logprob: -3.241255760192871
    8. ' from' → logprob: -3.491255760192871
    9. '           ' → logprob: -3.616255760192871
    10. '```' → logprob: -3.741255760192871

Token 794: ' back' (ID: 1602)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.8204421997070312
    2. 'self' → logprob: -1.5704421997070312
    3. 'memo' → logprob: -1.8204421997070312
    4. 'back' → logprob: -2.9454421997070312
    5. 'def' → logprob: -3.1954421997070312
    6. '0' → logprob: -3.5704421997070312
    7. 'recursive' → logprob: -4.695442199707031
    8. 'rec' → logprob: -4.945442199707031
    9. 'branch' → logprob: -4.945442199707031
    10. '```' → logprob: -5.070442199707031

Token 795: 'tracking' (ID: 83383)
  Prédit: 'tracking'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tracking' → logprob: -0.1295144408941269
    2. 'track' → logprob: -2.129514455795288
    3. 't' → logprob: -6.129514217376709
    4. '_tracking' → logprob: -9.379514694213867
    5. 'trace' → logprob: -9.754514694213867
    6. 'tr' → logprob: -9.879514694213867
    7. '
' → logprob: -9.879514694213867
    8. 'def' → logprob: -10.379514694213867
    9. 'tract' → logprob: -10.504514694213867
    10. '   ' → logprob: -10.754514694213867

Token 796: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1322946548461914
    2. '    
' → logprob: -3.5072946548461914
    3. 'def' → logprob: -3.7572946548461914
    4. '        
' → logprob: -3.8822946548461914
    5. '           ' → logprob: -4.257294654846191
    6. '   ' → logprob: -4.257294654846191
    7. '       ' → logprob: -4.757294654846191
    8. '            
' → logprob: -6.132294654846191
    9. ' def' → logprob: -6.257294654846191
    10. '  
' → logprob: -6.757294654846191

Token 797: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.02648514322936535
    2. ' memo' → logprob: -3.6514852046966553
    3. '0' → logprob: -10.151485443115234
    4. 'mem' → logprob: -10.401485443115234
    5. 'memor' → logprob: -10.401485443115234
    6. 'pr' → logprob: -11.026485443115234
    7. 'self' → logprob: -11.026485443115234
    8. 'dfs' → logprob: -11.651485443115234
    9. 'l' → logprob: -11.901485443115234
    10. '1' → logprob: -12.026485443115234

Token 798: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4142068922519684
    2. '
' → logprob: -2.5392069816589355
    3. '   ' → logprob: -2.9142069816589355
    4. '    ' → logprob: -3.0392069816589355
    5. '       ' → logprob: -3.5392069816589355
    6. '            ' → logprob: -3.9142069816589355
    7. 'def' → logprob: -3.9142069816589355
    8. '            
' → logprob: -4.6642069816589355
    9. '        ' → logprob: -4.7892069816589355
    10. ' def' → logprob: -4.9142069816589355

Token 799: '           ' (ID: 352)
  Prédit: '        
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        
' → logprob: -0.5780373811721802
    2. '           ' → logprob: -1.7030373811721802
    3. '
' → logprob: -1.8280373811721802
    4. '    
' → logprob: -3.0780372619628906
    5. ' 
' → logprob: -4.203037261962891
    6. '            
' → logprob: -4.203037261962891
    7. '       ' → logprob: -4.453037261962891
    8. '   ' → logprob: -5.453037261962891
    9. '  
' → logprob: -7.203037261962891
    10. ' ' → logprob: -7.328037261962891

Token 800: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.046025149524211884
    2. '           ' → logprob: -3.296025037765503
    3. '   ' → logprob: -5.921025276184082
    4. ' def' → logprob: -6.171025276184082
    5. '
' → logprob: -6.296025276184082
    6. '       ' → logprob: -7.171025276184082
    7. 'from' → logprob: -8.671025276184082
    8. 'self' (adapté à ' self') → logprob: -9.046025276184082
    9. '            
' → logprob: -9.046025276184082
    10. 'return' → logprob: -9.421025276184082

Token 801: '.memo' (ID: 161018)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12619653344154358
    2. '.' → logprob: -2.7511966228485107
    3. ' def' → logprob: -3.3761966228485107
    4. '._' → logprob: -4.626196384429932
    5. '.def' → logprob: -5.001196384429932
    6. '.nodes' → logprob: -6.751196384429932
    7. '.memo' → logprob: -6.876196384429932
    8. '_' → logprob: -8.12619686126709
    9. ' .' → logprob: -8.37619686126709
    10. '   ' → logprob: -8.50119686126709

Token 802: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06397240608930588
    2. ' =' → logprob: -3.3139724731445312
    3. '={}' → logprob: -4.313972473144531
    4. '={' → logprob: -4.813972473144531
    5. '[' → logprob: -6.313972473144531
    6. '[-' → logprob: -7.688972473144531
    7. '={}
' → logprob: -8.188972473144531
    8. '.clear' → logprob: -8.438972473144531
    9. '[(' → logprob: -8.438972473144531
    10. '.setdefault' → logprob: -8.563972473144531

Token 803: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -3.7697225252486533e-06
    2. '{}
' → logprob: -13.000003814697266
    3. 'dict' → logprob: -14.375003814697266
    4. '{' → logprob: -14.750003814697266
    5. ' {}' → logprob: -15.125003814697266
    6. '{}

' → logprob: -15.625003814697266
    7. '{}\' → logprob: -16.750003814697266
    8. '{})' → logprob: -17.375003814697266
    9. '{},' → logprob: -18.875003814697266
    10. '{}_' → logprob: -19.625003814697266

Token 804: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6076823472976685
    2. '       ' → logprob: -1.1076823472976685
    3. '        
' → logprob: -2.232682228088379
    4. '   ' → logprob: -5.232682228088379
    5. '           ' → logprob: -5.357682228088379
    6. '    
' → logprob: -5.482682228088379
    7. 'def' → logprob: -6.232682228088379
    8. ' 
' → logprob: -7.732682228088379
    9. '            
' → logprob: -7.982682228088379
    10. ' def' → logprob: -8.357682228088379

Token 805: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.25605514645576477
    2. '           ' → logprob: -1.6310551166534424
    3. 'return' → logprob: -3.8810551166534424
    4. '   ' → logprob: -5.5060553550720215
    5. '       ' → logprob: -6.0060553550720215
    6. '
' → logprob: -6.5060553550720215
    7. ' def' → logprob: -6.6310553550720215
    8. ' return' → logprob: -9.256054878234863
    9. '            
' → logprob: -10.506054878234863
    10. '		' → logprob: -10.631054878234863

Token 806: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.1087534949183464
    2. ' dfs' → logprob: -3.2337534427642822
    3. 'back' → logprob: -3.8587534427642822
    4. 'dp' → logprob: -3.9837534427642822
    5. ' back' → logprob: -4.358753681182861
    6. 'count' → logprob: -4.733753681182861
    7. '_back' → logprob: -7.608753681182861
    8. 'solve' → logprob: -7.733753681182861
    9. 'search' → logprob: -7.983753681182861
    10. ' count' → logprob: -8.358753204345703

Token 807: '(' (ID: 7)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.024655433371663094
    2. '(state' → logprob: -4.399655342102051
    3. '(node' → logprob: -5.274655342102051
    4. '(' → logprob: -5.399655342102051
    5. '(self' → logprob: -7.274655342102051
    6. '(mask' → logprob: -7.649655342102051
    7. ' (' → logprob: -7.899655342102051
    8. '(cur' → logprob: -8.64965534210205
    9. '(u' → logprob: -8.89965534210205
    10. '(pos' → logprob: -8.89965534210205

Token 808: 'used' (ID: 4943)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10774306952953339
    2. 's' → logprob: -2.85774302482605
    3. '(' → logprob: -3.35774302482605
    4. ')' → logprob: -5.482743263244629
    5. '(s' → logprob: -5.607743263244629
    6. 'node' → logprob: -8.107743263244629
    7. 'state' → logprob: -8.232743263244629
    8. ' ' → logprob: -8.357743263244629
    9. 'mask' → logprob: -8.357743263244629
    10. 'subset' → logprob: -8.482743263244629

Token 809: '_mask' (ID: 21732)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001613459608051926
    2. ' ,' → logprob: -9.625161170959473
    3. 's' → logprob: -9.750161170959473
    4. '):' → logprob: -11.625161170959473
    5. '_mask' → logprob: -11.875161170959473
    6. ',
' → logprob: -12.125161170959473
    7. ',s' → logprob: -12.250161170959473
    8. ':' → logprob: -12.875161170959473
    9. 'mask' → logprob: -13.875161170959473
    10. ',state' → logprob: -14.000161170959473

Token 810: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006476254784502089
    2. '):' → logprob: -7.62564754486084
    3. ' ,' → logprob: -8.87564754486084
    4. '):
' → logprob: -11.25064754486084
    5. ',
' → logprob: -12.62564754486084
    6. ':' → logprob: -13.62564754486084
    7. ',n' → logprob: -14.75064754486084
    8. ',node' → logprob: -14.87564754486084
    9. ')' → logprob: -15.50064754486084
    10. ',int' → logprob: -15.62564754486084

Token 811: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.06622610986232758
    2. 'idx' → logprob: -3.316226005554199
    3. ' pos' → logprob: -4.566226005554199
    4. ' idx' → logprob: -5.066226005554199
    5. 'available' → logprob: -6.191226005554199
    6. 'for' → logprob: -6.316226005554199
    7. 'node' → logprob: -6.941226005554199
    8. 'index' → logprob: -6.941226005554199
    9. 'last' → logprob: -7.066226005554199
    10. 'avail' → logprob: -7.566226005554199

Token 812: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08939708769321442
    2. '):
' → logprob: -2.4643971920013428
    3. ')' → logprob: -8.339397430419922
    4. '=' → logprob: -9.464397430419922
    5. '):
' → logprob: -9.714397430419922
    6. ',' → logprob: -10.589397430419922
    7. ' ):' → logprob: -11.214397430419922
    8. ':' → logprob: -11.214397430419922
    9. '+' → logprob: -12.089397430419922
    10. '):

' → logprob: -12.214397430419922

Token 813: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004951712675392628
    2. ':' → logprob: -5.754951477050781
    3. '                ' → logprob: -7.879951477050781
    4. '   ' → logprob: -8.004951477050781
    5. ')' → logprob: -8.129951477050781
    6. '                   ' → logprob: -8.879951477050781
    7. '           ' → logprob: -9.504951477050781
    8. ',' → logprob: -9.629951477050781
    9. '            ' → logprob: -9.629951477050781
    10. '):
' → logprob: -9.754951477050781

Token 814: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13433542847633362
    2. 'if' (adapté à ' if') → logprob: -2.134335517883301
    3. ' ' → logprob: -5.634335517883301
    4. '                ' → logprob: -7.259335517883301
    5. ')' → logprob: -7.384335517883301
    6. '                    ' → logprob: -8.1343355178833
    7. '                   ' → logprob: -8.2593355178833
    8. 'return' → logprob: -8.3843355178833
    9. ' return' → logprob: -8.3843355178833
    10. ':' → logprob: -9.2593355178833

Token 815: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.0015110508538782597
    2. 'pos' → logprob: -6.501511096954346
    3. ' used' → logprob: -11.751510620117188
    4. ' ' → logprob: -14.626510620117188
    5. '	pos' → logprob: -15.751510620117188
    6. ' ' → logprob: -16.126510620117188
    7. '_pos' → logprob: -16.626510620117188
    8. 'used' → logprob: -17.876510620117188
    9. '(pos' → logprob: -18.626510620117188
    10. ',pos' → logprob: -18.751510620117188

Token 816: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6974636912345886
    2. ' ==' → logprob: -0.6974636912345886
    3. '>=' → logprob: -6.072463512420654
    4. ' >=' → logprob: -6.322463512420654
    5. '===' → logprob: -9.572463989257812
    6. ')==' → logprob: -10.447463989257812
    7. ')' → logprob: -10.572463989257812
    8. '<|end|>' → logprob: -10.697463989257812
    9. '==
' → logprob: -11.447463989257812
    10. ']==' → logprob: -11.697463989257812

Token 817: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10070294886827469
    2. ' n' → logprob: -2.350703001022339
    3. 'len' → logprob: -7.97570276260376
    4. 'self' → logprob: -9.225703239440918
    5. ' len' → logprob: -10.350703239440918
    6. ' self' → logprob: -10.975703239440918
    7. '   ' → logprob: -13.975703239440918
    8. '	n' → logprob: -14.100703239440918
    9. '_n' → logprob: -14.600703239440918
    10. '(n' → logprob: -14.725703239440918

Token 818: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07819373905658722
    2. ':
' → logprob: -2.7031936645507812
    3. ':return' → logprob: -4.953193664550781
    4. ' or' → logprob: -6.828193664550781
    5. 'or' → logprob: -10.578193664550781
    6. '               ' → logprob: -10.953193664550781
    7. '           ' → logprob: -10.953193664550781
    8. ':
' → logprob: -12.203193664550781
    9. '                   ' → logprob: -12.578193664550781
    10. '   ' → logprob: -13.203193664550781

Token 819: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7499364018440247
    2. ':' → logprob: -0.8749364018440247
    3. ':
' → logprob: -2.62493634223938
    4. ':return' → logprob: -3.62493634223938
    5. '                       ' → logprob: -5.499936580657959
    6. '               ' → logprob: -6.499936580657959
    7. ' return' → logprob: -6.624936580657959
    8. '                           ' → logprob: -6.749936580657959
    9. 'return' → logprob: -6.999936580657959
    10. '           ' → logprob: -7.499936580657959

Token 820: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.012213523499667645
    2. '                   ' → logprob: -5.137213706970215
    3. ' return' → logprob: -5.262213706970215
    4. '                       ' → logprob: -7.512213706970215
    5. '
' → logprob: -8.387213706970215
    6. ':return' → logprob: -8.887213706970215
    7. '   ' → logprob: -10.012213706970215
    8. '1' → logprob: -10.137213706970215
    9. '	return' → logprob: -11.012213706970215
    10. '{return' → logprob: -11.387213706970215

Token 821: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.668304245569743e-05
    2. ' ' → logprob: -10.000046730041504
    3. '           ' → logprob: -14.625046730041504
    4. '               ' → logprob: -15.625046730041504
    5. '   ' → logprob: -15.875046730041504
    6. '(' → logprob: -15.875046730041504
    7. '                   ' → logprob: -16.125045776367188
    8. '                       ' → logprob: -16.500045776367188
    9. '{' → logprob: -17.125045776367188
    10. '       ' → logprob: -17.375045776367188

Token 822: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.500004768371582
    3. ' ' → logprob: -14.000004768371582
    4. '{' → logprob: -15.250004768371582
    5. 'pow' → logprob: -16.0000057220459
    6. '   ' → logprob: -16.5000057220459
    7. '[' → logprob: -17.4375057220459
    8. '۱' → logprob: -17.5625057220459
    9. '           ' → logprob: -18.1250057220459
    10. '
' → logprob: -18.3125057220459

Token 823: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001969673437997699
    2. '
' → logprob: -6.751969814300537
    3. '           ' → logprob: -7.876969814300537
    4. '                
' → logprob: -8.751969337463379
    5. '                   ' → logprob: -10.001969337463379
    6. '                ' → logprob: -10.501969337463379
    7. ')' → logprob: -10.501969337463379
    8. '\n' → logprob: -10.501969337463379
    9. '<|end|>' → logprob: -10.876969337463379
    10. '              ' → logprob: -10.876969337463379

Token 824: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001439459010725841
    2. '                
' → logprob: -9.625144004821777
    3. '
' → logprob: -10.250144004821777
    4. '           ' → logprob: -11.250144004821777
    5. '                ' → logprob: -12.125144004821777
    6. '			' → logprob: -12.250144004821777
    7. '              ' → logprob: -12.500144004821777
    8. '  
' → logprob: -13.125144004821777
    9. '    
' → logprob: -13.375144004821777
    10. '                   ' → logprob: -13.375144004821777

Token 825: ' key' (ID: 2140)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20620404183864594
    2. '               ' → logprob: -1.7062040567398071
    3. 'if' → logprob: -5.706203937530518
    4. '           ' → logprob: -7.456203937530518
    5. '                
' → logprob: -8.081204414367676
    6. ' next' → logprob: -8.331204414367676
    7. '                ' → logprob: -9.331204414367676
    8. ' 
' → logprob: -10.081204414367676
    9. ' ' → logprob: -10.331204414367676
    10. ' ' → logprob: -10.581204414367676

Token 826: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3134497404098511
    2. ' =' → logprob: -1.313449740409851
    3. '=(' → logprob: -9.18844985961914
    4. ',' → logprob: -9.81344985961914
    5. '=
' → logprob: -11.18844985961914
    6. ' =(' → logprob: -11.93844985961914
    7. '(' → logprob: -12.43844985961914
    8. ' (' → logprob: -12.68844985961914
    9. ' =
' → logprob: -13.43844985961914
    10. '=("' → logprob: -14.93844985961914

Token 827: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0026147786993533373
    2. '(pos' → logprob: -6.252614974975586
    3. ' (' → logprob: -7.377614974975586
    4. 'used' → logprob: -10.002614974975586
    5. 'pos' → logprob: -11.252614974975586
    6. '(use' → logprob: -13.877614974975586
    7. ' used' → logprob: -14.627614974975586
    8. '(us' → logprob: -15.127614974975586
    9. '(position' → logprob: -15.377614974975586
    10. '(u' → logprob: -15.627614974975586

Token 828: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -2.3557529857498594e-05
    2. ' used' → logprob: -10.75002384185791
    3. 'pos' → logprob: -13.12502384185791
    4. '(' → logprob: -16.500022888183594
    5. '   ' → logprob: -18.125022888183594
    6. 'us' → logprob: -20.000022888183594
    7. 'Used' → logprob: -20.250022888183594
    8. '.used' → logprob: -20.250022888183594
    9. '_used' → logprob: -20.750022888183594
    10. 'use' → logprob: -20.875022888183594

Token 829: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.00019698418327607214
    2. '_' → logprob: -8.625197410583496
    3. '_MASK' → logprob: -12.125197410583496
    4. '_m' → logprob: -12.375197410583496
    5. '_masks' → logprob: -12.500197410583496
    6. ' _' → logprob: -13.500197410583496
    7. ',' → logprob: -13.750197410583496
    8. ')_' → logprob: -15.500197410583496
    9. '_,' → logprob: -15.500197410583496
    10. 's' → logprob: -16.12519645690918

Token 830: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026205103495158255
    2. ',pos' → logprob: -8.500262260437012
    3. ' ,' → logprob: -10.125262260437012
    4. ',
' → logprob: -11.125262260437012
    5. ',p' → logprob: -13.500262260437012
    6. ')' → logprob: -13.875262260437012
    7. ',)' → logprob: -14.500262260437012
    8. ',num' → logprob: -16.125261306762695
    9. ',key' → logprob: -16.125261306762695
    10. '‌,' → logprob: -16.250261306762695

Token 831: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.011047814972698689
    2. ' pos' → logprob: -4.511047840118408
    3. '	pos' → logprob: -20.13604736328125
    4. ')' → logprob: -20.76104736328125
    5. ' ' → logprob: -20.76104736328125
    6. '_pos' → logprob: -21.51104736328125
    7. '[pos' → logprob: -21.63604736328125
    8. '(pos' → logprob: -22.26104736328125
    9. 'p' → logprob: -22.38604736328125
    10. '           ' → logprob: -22.76104736328125

Token 832: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015840200940147042
    2. ')
' → logprob: -6.626584053039551
    3. '               ' → logprob: -8.37658405303955
    4. ',' → logprob: -10.87658405303955
    5. ',)' → logprob: -13.37658405303955
    6. '           ' → logprob: -13.50158405303955
    7. '                   ' → logprob: -13.75158405303955
    8. '),' → logprob: -14.00158405303955
    9. ' )' → logprob: -14.00158405303955
    10. '                ' → logprob: -14.50158405303955

Token 833: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008666796493344009
    2. '           ' → logprob: -7.625866889953613
    3. '                   ' → logprob: -8.500866889953613
    4. ')' → logprob: -9.375866889953613
    5. ',' → logprob: -10.875866889953613
    6. ':' → logprob: -11.125866889953613
    7. '       ' → logprob: -11.750866889953613
    8. '<|end|>' → logprob: -11.875866889953613
    9. '                       ' → logprob: -12.000866889953613
    10. '   ' → logprob: -12.250866889953613

Token 834: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6423161029815674
    2. '               ' → logprob: -1.1423161029815674
    3. ' if' → logprob: -1.8923161029815674
    4. '           ' → logprob: -5.517315864562988
    5. '                   ' → logprob: -10.017315864562988
    6. '   ' → logprob: -10.392315864562988
    7. '       ' → logprob: -10.767315864562988
    8. 'return' → logprob: -12.267315864562988
    9. '	if' → logprob: -12.392315864562988
    10. '                
' → logprob: -14.517315864562988

Token 835: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.04858759790658951
    2. ' key' → logprob: -3.0485875606536865
    3. '   ' → logprob: -16.298587799072266
    4. ' ' → logprob: -16.923587799072266
    5. '	key' → logprob: -17.048587799072266
    6. '_key' → logprob: -17.298587799072266
    7. 'Key' → logprob: -18.298587799072266
    8. '           ' → logprob: -18.548587799072266
    9. '(key' → logprob: -18.798587799072266
    10. '
' → logprob: -19.173587799072266

Token 836: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.030289221554994583
    2. 'in' → logprob: -4.155289173126221
    3. '<|end|>' → logprob: -5.530289173126221
    4. ' not' → logprob: -5.655289173126221
    5. ')' → logprob: -5.780289173126221
    6. ':' → logprob: -6.780289173126221
    7. '[' → logprob: -7.155289173126221
    8. ']' → logprob: -8.030289649963379
    9. '<|end|>' → logprob: -8.155289649963379
    10. '==' → logprob: -8.155289649963379

Token 837: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009115827269852161
    2. ' self' → logprob: -7.000911712646484
    3. '           ' → logprob: -17.750911712646484
    4. '               ' → logprob: -17.750911712646484
    5. '(self' → logprob: -18.125911712646484
    6. '
' → logprob: -19.000911712646484
    7. '[self' → logprob: -19.250911712646484
    8. '                   ' → logprob: -19.750911712646484
    9. '=self' → logprob: -20.000911712646484
    10. '	self' → logprob: -20.875911712646484

Token 838: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -4.632542913896032e-05
    2. 'memo' → logprob: -10.250046730041504
    3. '.' → logprob: -12.000046730041504
    4. '.mem' → logprob: -13.000046730041504
    5. '.memory' → logprob: -13.375046730041504
    6. ' .' → logprob: -14.750046730041504
    7. '```' → logprob: -16.250045776367188
    8. ' memo' → logprob: -16.500045776367188
    9. '.m' → logprob: -16.875045776367188
    10. '._' → logprob: -17.125045776367188

Token 839: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5130141377449036
    2. ':
' → logprob: -1.0130140781402588
    3. '                   ' → logprob: -3.388014078140259
    4. ':return' → logprob: -5.638014316558838
    5. '               ' → logprob: -8.01301383972168
    6. '                       ' → logprob: -8.26301383972168
    7. '):
' → logprob: -8.76301383972168
    8. 'return' → logprob: -10.26301383972168
    9. '():
' → logprob: -11.38801383972168
    10. '           ' → logprob: -11.38801383972168

Token 840: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003596029244363308
    2. 'return' → logprob: -5.75359582901001
    3. '               ' → logprob: -8.628596305847168
    4. '                       ' → logprob: -8.878596305847168
    5. '           ' → logprob: -9.503596305847168
    6. ' return' → logprob: -11.878596305847168
    7. '       ' → logprob: -12.378596305847168
    8. ':return' → logprob: -12.378596305847168
    9. '{return' → logprob: -12.378596305847168
    10. '   ' → logprob: -12.753596305847168

Token 841: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0006733550690114498
    2. '                   ' → logprob: -7.375673294067383
    3. ' return' → logprob: -10.375673294067383
    4. '{return' → logprob: -11.375673294067383
    5. '```' → logprob: -13.375673294067383
    6. ':return' → logprob: -13.625673294067383
    7. '	return' → logprob: -14.375673294067383
    8. '                       ' → logprob: -15.000673294067383
    9. '               ' → logprob: -15.875673294067383
    10. '``' → logprob: -16.125673294067383

Token 842: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003377270477358252
    2. ' self' → logprob: -8.000337600708008
    3. '                   ' → logprob: -13.125337600708008
    4. '               ' → logprob: -15.500337600708008
    5. '[self' → logprob: -16.875337600708008
    6. '(self' → logprob: -17.750337600708008
    7. '           ' → logprob: -18.500337600708008
    8. '                       ' → logprob: -18.625337600708008
    9. '   ' → logprob: -19.125337600708008
    10. '	self' → logprob: -19.750337600708008

Token 843: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -4.7159857786027715e-05
    2. '.' → logprob: -10.875046730041504
    3. '.mem' → logprob: -11.000046730041504
    4. '.memory' → logprob: -12.375046730041504
    5. ' .' → logprob: -12.750046730041504
    6. 'memo' → logprob: -13.500046730041504
    7. '.mime' → logprob: -13.875046730041504
    8. '[m' → logprob: -14.750046730041504
    9. '.m' → logprob: -15.000046730041504
    10. '.micro' → logprob: -15.625046730041504

Token 844: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -6.704273118884885e-07
    2. 'key' → logprob: -14.750000953674316
    3. '[' → logprob: -15.625000953674316
    4. '[
' → logprob: -17.375
    5. '(key' → logprob: -17.375
    6. '                   ' → logprob: -18.625
    7. '   ' → logprob: -19.0
    8. '```' → logprob: -19.0
    9. '[[' → logprob: -19.25
    10. ',key' → logprob: -19.25

Token 845: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06483776867389679
    2. '               ' → logprob: -2.939837694168091
    3. ']' → logprob: -4.68983793258667
    4. ')
' → logprob: -7.56483793258667
    5. '           ' → logprob: -9.814837455749512
    6. ')]' → logprob: -9.939837455749512
    7. '                   ' → logprob: -9.939837455749512
    8. ' )' → logprob: -11.439837455749512
    9. '])' → logprob: -11.689837455749512
    10. '                ' → logprob: -12.564837455749512

Token 846: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00034237600630149245
    2. '                   ' → logprob: -9.12534236907959
    3. '                
' → logprob: -9.12534236907959
    4. '
' → logprob: -10.12534236907959
    5. '```' → logprob: -11.12534236907959
    6. '                       ' → logprob: -11.12534236907959
    7. '           ' → logprob: -11.25034236907959
    8. '                ' → logprob: -11.25034236907959
    9. '    
' → logprob: -11.37534236907959
    10. '                    
' → logprob: -13.12534236907959

Token 847: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.627755343914032
    2. '               ' → logprob: -1.1277554035186768
    3. 'if' → logprob: -2.0027554035186768
    4. ' res' → logprob: -6.127755165100098
    5. 'res' → logprob: -6.377755165100098
    6. ' next' → logprob: -7.002755165100098
    7. '           ' → logprob: -7.627755165100098
    8. 'next' → logprob: -7.627755165100098
    9. 'indent' → logprob: -7.877755165100098
    10. '                   ' → logprob: -8.252755165100098

Token 848: ' Skip' (ID: 47626)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3457683324813843
    2. 'include' → logprob: -1.5957683324813843
    3. 'if' → logprob: -3.595768451690674
    4. '               ' → logprob: -3.970768451690674
    5. 'exclude' → logprob: -3.970768451690674
    6. 'skip' → logprob: -5.220768451690674
    7. 'ans' → logprob: -5.345768451690674
    8. '#' → logprob: -5.595768451690674
    9. 'take' → logprob: -5.970768451690674
    10. 'without' → logprob: -6.095768451690674

Token 849: ' current' (ID: 2208)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.005171970464289188
    2. '_pos' → logprob: -6.130171775817871
    3. ' pos' → logprob: -6.255171775817871
    4. '(pos' → logprob: -8.130171775817871
    5. 'def' → logprob: -8.380171775817871
    6. '[pos' → logprob: -8.505171775817871
    7. ' =' → logprob: -9.755171775817871
    8. '               ' → logprob: -10.130171775817871
    9. 'the' → logprob: -10.255171775817871
    10. '   ' → logprob: -10.255171775817871

Token 850: ' node' (ID: 4596)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2683565318584442
    2. ' pos' → logprob: -2.3933565616607666
    3. ' node' → logprob: -2.6433565616607666
    4. '_pos' → logprob: -2.8933565616607666
    5. 'node' → logprob: -5.3933563232421875
    6. ' position' → logprob: -5.7683563232421875
    7. ' token' → logprob: -6.1433563232421875
    8. ')' → logprob: -6.8933563232421875
    9. ' or' → logprob: -7.1433563232421875
    10. '   ' → logprob: -7.1433563232421875

Token 851: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5692692995071411
    2. ' or' → logprob: -1.8192692995071411
    3. ' if' → logprob: -1.9442692995071411
    4. ',' → logprob: -2.6942691802978516
    5. 'pos' → logprob: -3.8192691802978516
    6. ',
' → logprob: -5.069269180297852
    7. '           ' → logprob: -5.069269180297852
    8. 'if' → logprob: -5.194269180297852
    9. ' ,' → logprob: -5.319269180297852
    10. ' pos' → logprob: -5.944269180297852

Token 852: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12898847460746765
    2. ' or' → logprob: -2.62898850440979
    3. ' if' → logprob: -3.25398850440979
    4. ' =' → logprob: -5.503988265991211
    5. 'pos' → logprob: -6.378988265991211
    6. ',' → logprob: -6.378988265991211
    7. ' ,' → logprob: -7.753988265991211
    8. 'if' → logprob: -7.878988265991211
    9. '           ' → logprob: -8.128988265991211
    10. '=' → logprob: -8.628988265991211

Token 853: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.08606011420488358
    2. '               ' → logprob: -3.336060047149658
    3. ' res' → logprob: -3.461060047149658
    4. 'skip' → logprob: -5.336060047149658
    5. 'ans' → logprob: -5.586060047149658
    6. 'ret' → logprob: -5.836060047149658
    7. 'result' → logprob: -6.211060047149658
    8. 'count' → logprob: -7.336060047149658
    9. 'cnt' → logprob: -8.086060523986816
    10. 'r' → logprob: -8.086060523986816

Token 854: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197362765669823
    2. '=' → logprob: -2.8119735717773438
    3. ' =
' → logprob: -13.061973571777344
    4. ' ' → logprob: -13.436973571777344
    5. '               ' → logprob: -14.436973571777344
    6. '   ' → logprob: -14.936973571777344
    7. '=
' → logprob: -14.936973571777344
    8. ',' → logprob: -15.686973571777344
    9. ' ' → logprob: -15.811973571777344
    10. '_' → logprob: -15.936973571777344

Token 855: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.020558124408125877
    2. ' dfs' → logprob: -3.8955581188201904
    3. '                   ' → logprob: -11.77055835723877
    4. '               ' → logprob: -12.64555835723877
    5. 'df' → logprob: -13.02055835723877
    6. 'd' → logprob: -13.14555835723877
    7. '
' → logprob: -14.89555835723877
    8. '   ' → logprob: -16.270557403564453
    9. '                       ' → logprob: -16.270557403564453
    10. '0' → logprob: -16.270557403564453

Token 856: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.014684110297821e-06
    2. ' (' → logprob: -12.125008583068848
    3. 'used' → logprob: -13.000008583068848
    4. ' used' → logprob: -14.250008583068848
    5. '((' → logprob: -14.750008583068848
    6. '   ' → logprob: -16.375009536743164
    7. '(
' → logprob: -16.500009536743164
    8. '(user' → logprob: -18.750009536743164
    9. '```' → logprob: -18.750009536743164
    10. '(u' → logprob: -19.375009536743164

Token 857: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.000433291686931625
    2. ' used' → logprob: -7.750433444976807
    3. '(' → logprob: -12.875432968139648
    4. '   ' → logprob: -17.75043296813965
    5. '.used' → logprob: -18.87543296813965
    6. ' (' → logprob: -19.00043296813965
    7. '-used' → logprob: -19.75043296813965
    8. '_used' → logprob: -20.00043296813965
    9. ' ' → logprob: -21.12543296813965
    10. 'unused' → logprob: -21.12543296813965

Token 858: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -2.0100624169572257e-05
    2. 'mask' → logprob: -10.875020027160645
    3. '_MASK' → logprob: -14.625020027160645
    4. 'Mask' → logprob: -15.875020027160645
    5. '_' → logprob: -16.62502098083496
    6. '_masks' → logprob: -16.87502098083496
    7. '
' → logprob: -16.87502098083496
    8. '```' → logprob: -17.00002098083496
    9. 'emask' → logprob: -17.25002098083496
    10. '_m' → logprob: -17.25002098083496

Token 859: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000330220878822729
    2. ' ,' → logprob: -8.375329971313477
    3. ',pos' → logprob: -9.375329971313477
    4. ',
' → logprob: -11.625329971313477
    5. ',next' → logprob: -14.250329971313477
    6. ',p' → logprob: -14.500329971313477
    7. '   ' → logprob: -14.500329971313477
    8. '|' → logprob: -14.500329971313477
    9. ' ' → logprob: -15.000329971313477
    10. '+' → logprob: -15.000329971313477

Token 860: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.04858759790658951
    2. ' pos' → logprob: -3.0485875606536865
    3. '           ' → logprob: -16.423587799072266
    4. '               ' → logprob: -16.798587799072266
    5. '   ' → logprob: -17.173587799072266
    6. '       ' → logprob: -17.298587799072266
    7. '                   ' → logprob: -17.423587799072266
    8. '	pos' → logprob: -17.923587799072266
    9. ' ' → logprob: -19.048587799072266
    10. '    ' → logprob: -19.298587799072266

Token 861: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12692883610725403
    2. ' +' → logprob: -2.1269288063049316
    3. '+
' → logprob: -14.37692928314209
    4. ' +
' → logprob: -16.501928329467773
    5. '＋' → logprob: -17.501928329467773
    6. '   ' → logprob: -18.751928329467773
    7. '+)' → logprob: -18.876928329467773
    8. ')' → logprob: -19.126928329467773
    9. '1' → logprob: -19.126928329467773
    10. ' plus' → logprob: -19.376928329467773

Token 862: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.750008583068848
    3. '   ' → logprob: -16.37500762939453
    4. '
' → logprob: -16.43750762939453
    5. '```' → logprob: -16.75000762939453
    6. ')' → logprob: -17.68750762939453
    7. '2' → logprob: -17.81250762939453
    8. '`' → logprob: -18.50000762939453
    9. '0' → logprob: -18.81250762939453
    10. '  ' → logprob: -19.00000762939453

Token 863: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -17.312503814697266
    4. '
' → logprob: -17.437503814697266
    5. '2' → logprob: -17.562503814697266
    6. '   ' → logprob: -17.812503814697266
    7. '0' → logprob: -19.312503814697266
    8. ')' → logprob: -19.562503814697266
    9. '۱' → logprob: -19.562503814697266
    10. '' → logprob: -19.812503814697266

Token 864: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.055373821407556534
    2. ')
' → logprob: -2.9303739070892334
    3. '               ' → logprob: -7.930373668670654
    4. ' )' → logprob: -10.180374145507812
    5. '           ' → logprob: -10.930374145507812
    6. ')+' → logprob: -10.930374145507812
    7. '
' → logprob: -11.555374145507812
    8. ' +' → logprob: -11.805374145507812
    9. ')
' → logprob: -11.930374145507812
    10. ')

' → logprob: -11.930374145507812

Token 865: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04884839430451393
    2. '
' → logprob: -3.0488483905792236
    3. '                
' → logprob: -8.798848152160645
    4. ' if' → logprob: -10.548848152160645
    5. '           ' → logprob: -10.798848152160645
    6. '                   ' → logprob: -11.298848152160645
    7. '
' → logprob: -11.673848152160645
    8. ' +' → logprob: -11.673848152160645
    9. '+' → logprob: -11.798848152160645
    10. 'if' → logprob: -12.298848152160645

Token 866: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.226210817694664
    2. 'if' → logprob: -1.8512108325958252
    3. ' if' → logprob: -3.226210832595825
    4. '                
' → logprob: -5.726210594177246
    5. '
' → logprob: -6.726210594177246
    6. '#' (adapté à ' #') → logprob: -7.226210594177246
    7. ' #' → logprob: -8.476210594177246
    8. ' 
' → logprob: -9.851210594177246
    9. 'mask' → logprob: -10.351210594177246
    10. '                ' → logprob: -10.476210594177246

Token 867: ' Take' (ID: 14166)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20633092522621155
    2. ' if' → logprob: -1.7063308954238892
    3. '               ' → logprob: -6.7063307762146
    4. 'mask' → logprob: -6.9563307762146
    5. 'token' → logprob: -7.2063307762146
    6. ' #' → logprob: -7.3313307762146
    7. 'If' → logprob: -8.206331253051758
    8. '#' → logprob: -8.581331253051758
    9. 'node' → logprob: -9.081331253051758
    10. ' token' → logprob: -9.331331253051758

Token 868: ' current' (ID: 2208)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4031620919704437
    2. ' (' → logprob: -1.1531621217727661
    3. 'used' → logprob: -4.903162002563477
    4. ' used' → logprob: -5.028162002563477
    5. ' current' → logprob: -6.778162002563477
    6. ' ' → logprob: -7.903162002563477
    7. '_used' → logprob: -8.278162002563477
    8. ' node' → logprob: -9.278162002563477
    9. 'current' → logprob: -9.528162002563477
    10. '_' → logprob: -9.653162002563477

Token 869: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.08242189139127731
    2. 'node' → logprob: -2.8324217796325684
    3. '_node' → logprob: -4.957421779632568
    4. 'pos' → logprob: -6.207421779632568
    5. '_' → logprob: -6.332421779632568
    6. '(node' → logprob: -6.457421779632568
    7. ')' → logprob: -6.582421779632568
    8. '_mask' → logprob: -6.707421779632568
    9. '```' → logprob: -7.082421779632568
    10. ' (' → logprob: -7.207421779632568

Token 870: ':' (ID: 25)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6979734897613525
    2. '               ' → logprob: -0.8229734897613525
    3. 'if' → logprob: -3.5729734897613525
    4. ' and' → logprob: -5.197973251342773
    5. '                   ' → logprob: -5.322973251342773
    6. ',' → logprob: -5.322973251342773
    7. ' &' → logprob: -5.697973251342773
    8. ' (' → logprob: -5.947973251342773
    9. '           ' → logprob: -6.197973251342773
    10. '&' → logprob: -6.322973251342773

Token 871: ' only' (ID: 1606)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.015087920241057873
    2. 'if' → logprob: -4.265088081359863
    3. '               ' → logprob: -8.140088081359863
    4. ' res' → logprob: -8.265088081359863
    5. '                   ' → logprob: -9.015088081359863
    6. '
' → logprob: -9.765088081359863
    7. 'res' → logprob: -9.890088081359863
    8. ' used' → logprob: -10.390088081359863
    9. ' not' → logprob: -10.765088081359863
    10. '0' → logprob: -11.515088081359863

Token 872: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.048594068735837936
    2. ' if' → logprob: -3.0485939979553223
    3. '           ' → logprob: -12.54859447479248
    4. '               ' → logprob: -14.29859447479248
    5. 'res' → logprob: -15.04859447479248
    6. '   ' → logprob: -15.04859447479248
    7. '                   ' → logprob: -15.17359447479248
    8. '       ' → logprob: -15.42359447479248
    9. '            
' → logprob: -15.67359447479248
    10. '```' → logprob: -15.67359447479248

Token 873: ' none' (ID: 12698)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0675441324710846
    2. '(' → logprob: -2.9425442218780518
    3. '(not' → logprob: -4.442543983459473
    4. '((' → logprob: -7.692543983459473
    5. 'not' → logprob: -8.317543983459473
    6. ' (' → logprob: -9.942543983459473
    7. 'self' → logprob: -10.192543983459473
    8. ' not' → logprob: -12.317543983459473
    9. '(all' → logprob: -12.442543983459473
    10. 'used' → logprob: -12.442543983459473

Token 874: ' neighbor' (ID: 13034)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.37735074758529663
    2. '&' → logprob: -1.3773508071899414
    3. ' of' → logprob: -3.2523508071899414
    4. 'of' → logprob: -4.752350807189941
    5. '               ' → logprob: -5.002350807189941
    6. '                   ' → logprob: -6.502350807189941
    7. '           ' → logprob: -6.627350807189941
    8. '&(' → logprob: -6.752350807189941
    9. ' in' → logprob: -7.127350807189941
    10. ')' → logprob: -7.127350807189941

Token 875: ' taken' (ID: 6697)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.345852255821228
    2. '(' → logprob: -1.720852255821228
    3. 'in' → logprob: -2.9708523750305176
    4. ' in' → logprob: -3.7208523750305176
    5. '&' → logprob: -4.720852375030518
    6. ' &' → logprob: -4.970852375030518
    7. '(s' → logprob: -5.470852375030518
    8. '(bit' → logprob: -5.595852375030518
    9. ' (' → logprob: -5.720852375030518
    10. ' of' → logprob: -6.595852375030518

Token 876: ' before' (ID: 2254)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.3327608108520508
    2. 'and' → logprob: -1.4577608108520508
    3. '               ' → logprob: -1.7077608108520508
    4. ' &' → logprob: -2.207760810852051
    5. '&' → logprob: -2.957760810852051
    6. ' if' → logprob: -3.457760810852051
    7. '(' → logprob: -3.582760810852051
    8. 'if' → logprob: -3.582760810852051
    9. ' (' → logprob: -3.707760810852051
    10. '           ' → logprob: -4.082760810852051

Token 877: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.18473000824451447
    2. '               ' → logprob: -2.059730052947998
    3. '                   ' → logprob: -3.934730052947998
    4. 'and' → logprob: -4.059730052947998
    5. ' if' → logprob: -5.934730052947998
    6. '                       ' → logprob: -6.934730052947998
    7. '                ' → logprob: -8.55972957611084
    8. ',' → logprob: -8.93472957611084
    9. ' or' → logprob: -9.55972957611084
    10. 'if' → logprob: -9.68472957611084

Token 878: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12869346141815186
    2. ' and' → logprob: -2.1286935806274414
    3. ' if' → logprob: -6.628693580627441
    4. 'and' → logprob: -8.128693580627441
    5. '                   ' → logprob: -10.128693580627441
    6. ',' → logprob: -10.253693580627441
    7. '                ' → logprob: -11.378693580627441
    8. ' or' → logprob: -11.378693580627441
    9. 'if' → logprob: -11.878693580627441
    10. ' ' → logprob: -12.253693580627441

Token 879: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03000444360077381
    2. 'if' (adapté à ' if') → logprob: -3.9050045013427734
    3. ' and' → logprob: -5.405004501342773
    4. '               ' → logprob: -5.905004501342773
    5. ' not' → logprob: -6.780004501342773
    6. 'and' → logprob: -8.155004501342773
    7. '&' → logprob: -8.780004501342773
    8. ' &' → logprob: -8.780004501342773
    9. ' (' → logprob: -8.905004501342773
    10. '                   ' → logprob: -9.280004501342773

Token 880: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005379018373787403
    2. '(not' → logprob: -6.2553791999816895
    3. '(' → logprob: -6.5053791999816895
    4. ' (' → logprob: -6.6303791999816895
    5. '((' → logprob: -7.7553791999816895
    6. 'self' → logprob: -9.380378723144531
    7. ' not' → logprob: -10.005378723144531
    8. 'not' → logprob: -10.380378723144531
    9. '(all' → logprob: -11.505378723144531
    10. '   ' → logprob: -12.005378723144531

Token 881: 'used' (ID: 4943)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5417898893356323
    2. 'self' → logprob: -0.9167898893356323
    3. '(' → logprob: -4.291790008544922
    4. 'used' → logprob: -5.791790008544922
    5. '((' → logprob: -7.041790008544922
    6. '(not' → logprob: -7.791790008544922
    7. 'not' → logprob: -8.666790008544922
    8. ' (' → logprob: -8.666790008544922
    9. ' self' → logprob: -9.541790008544922
    10. '   ' → logprob: -10.791790008544922

Token 882: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -1.6240566083070007e-06
    2. '_MASK' → logprob: -14.125001907348633
    3. 'mask' → logprob: -14.625001907348633
    4. '_masks' → logprob: -15.250001907348633
    5. '_' → logprob: -16.125001907348633
    6. 'Mask' → logprob: -17.375001907348633
    7. '_m' → logprob: -18.875001907348633
    8. '```' → logprob: -19.375001907348633
    9. '[' → logprob: -19.625001907348633
    10. ')' → logprob: -19.750001907348633

Token 883: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.03366322070360184
    2. '&' → logprob: -3.408663272857666
    3. ' ' → logprob: -12.033662796020508
    4. ' ' → logprob: -12.908662796020508
    5. '>>' → logprob: -13.033662796020508
    6. ' &
' → logprob: -13.033662796020508
    7. '&nbsp' → logprob: -13.533662796020508
    8. '&amp' → logprob: -14.283662796020508
    9. '&
' → logprob: -14.783662796020508
    10. '&p' → logprob: -14.783662796020508

Token 884: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004462281707674265
    2. ' self' → logprob: -5.629462242126465
    3. '(self' → logprob: -7.379462242126465
    4. '(' → logprob: -8.879462242126465
    5. ' (' → logprob: -10.004462242126465
    6. '   ' → logprob: -11.254462242126465
    7. '               ' → logprob: -11.629462242126465
    8. '           ' → logprob: -11.754462242126465
    9. '                   ' → logprob: -11.754462242126465
    10. '1' → logprob: -13.129462242126465

Token 885: '.ad' (ID: 19775)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.15721650421619415
    2. 'self' → logprob: -2.1572165489196777
    3. '.ad' → logprob: -4.407216548919678
    4. '(' → logprob: -4.532216548919678
    5. '(self' → logprob: -6.782216548919678
    6. ' (' → logprob: -6.907216548919678
    7. '(adj' → logprob: -6.907216548919678
    8. 'ad' → logprob: -7.032216548919678
    9. ' adj' → logprob: -7.157216548919678
    10. ' self' → logprob: -7.282216548919678

Token 886: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.080963092041202e-06
    2. 'jm' → logprob: -12.875004768371582
    3. '_mask' → logprob: -13.625004768371582
    4. '[j' → logprob: -15.000004768371582
    5. 'm' → logprob: -15.000004768371582
    6. 'jac' → logprob: -15.625004768371582
    7. '[' → logprob: -15.875004768371582
    8. 'js' → logprob: -17.2500057220459
    9. 'c' → logprob: -17.3750057220459
    10. 'J' → logprob: -17.6250057220459

Token 887: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -1.4259644558478612e-05
    2. 'mask' → logprob: -11.375014305114746
    3. '[' → logprob: -13.375014305114746
    4. '_MASK' → logprob: -14.750014305114746
    5. '_' → logprob: -15.125014305114746
    6. 'Mask' → logprob: -16.50001335144043
    7. 'm' → logprob: -16.75001335144043
    8. ')' → logprob: -17.25001335144043
    9. '_m' → logprob: -17.37501335144043
    10. '[_' → logprob: -17.50001335144043

Token 888: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -2.696889623621246e-06
    2. 'pos' → logprob: -13.87500286102295
    3. '[idx' → logprob: -13.87500286102295
    4. '[' → logprob: -15.00000286102295
    5. ')' → logprob: -15.62500286102295
    6. ' [' → logprob: -16.375001907348633
    7. ')[' → logprob: -16.500001907348633
    8. '[
' → logprob: -18.000001907348633
    9. '[position' → logprob: -18.000001907348633
    10. '[val' → logprob: -19.125001907348633

Token 889: '])' (ID: 4636)
  Prédit: '[pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -3.464347173576243e-05
    2. ')' → logprob: -11.25003433227539
    3. '[' → logprob: -11.37503433227539
    4. '])' → logprob: -12.12503433227539
    5. ']' → logprob: -12.87503433227539
    6. '[
' → logprob: -14.25003433227539
    7. '][' → logprob: -14.75003433227539
    8. ' [' → logprob: -15.37503433227539
    9. '   ' → logprob: -16.12503433227539
    10. '
' → logprob: -16.37503433227539

Token 890: ' ==' (ID: 951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10830376297235489
    2. '==' → logprob: -2.6083037853240967
    3. ')==' → logprob: -3.8583037853240967
    4. ' ==' → logprob: -4.858303546905518
    5. ' )' → logprob: -9.358304023742676
    6. '=' → logprob: -11.358304023742676
    7. ']==' → logprob: -11.983304023742676
    8. '==
' → logprob: -12.108304023742676
    9. '0' → logprob: -12.983304023742676
    10. ']' → logprob: -13.483304023742676

Token 891: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '   ' → logprob: -18.25020408630371
    4. '۰' → logprob: -18.25020408630371
    5. '                   ' → logprob: -18.75020408630371
    6. '	' → logprob: -19.37520408630371
    7. ' ' → logprob: -19.75020408630371
    8. '000' → logprob: -20.00020408630371
    9. '00' → logprob: -20.25020408630371
    10. '٠' → logprob: -20.37520408630371

Token 892: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '۰' → logprob: -18.500003814697266
    4. '   ' → logprob: -19.625003814697266
    5. '                   ' → logprob: -20.500003814697266
    6. '000' → logprob: -20.500003814697266
    7. '	' → logprob: -20.500003814697266
    8. '00' → logprob: -20.625003814697266
    9. '٠' → logprob: -20.812503814697266
    10. '  ' → logprob: -20.937503814697266

Token 893: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05216072499752045
    2. ':' → logprob: -3.1771607398986816
    3. ' and' → logprob: -5.302160739898682
    4. '               ' → logprob: -6.302160739898682
    5. '                   ' → logprob: -6.927160739898682
    6. '):
' → logprob: -7.177160739898682
    7. '           ' → logprob: -8.677160263061523
    8. ' :
' → logprob: -9.052160263061523
    9. ',' → logprob: -9.552160263061523
    10. '                       ' → logprob: -9.927160263061523

Token 894: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06503739953041077
    2. ':
' → logprob: -3.565037488937378
    3. ' and' → logprob: -3.815037488937378
    4. ':' → logprob: -5.065037250518799
    5. '                       ' → logprob: -5.815037250518799
    6. '               ' → logprob: -6.690037250518799
    7. '                    ' → logprob: -7.690037250518799
    8. ',' → logprob: -7.690037250518799
    9. '                           ' → logprob: -8.190037727355957
    10. '                               ' → logprob: -8.815037727355957

Token 895: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.6932518482208252
    2. ' res' → logprob: -0.6932518482208252
    3. '                   ' → logprob: -9.318251609802246
    4. '                       ' → logprob: -12.068251609802246
    5. '	res' → logprob: -12.193251609802246
    6. '               ' → logprob: -13.318251609802246
    7. ' ' → logprob: -14.318251609802246
    8. '$res' → logprob: -15.068251609802246
    9. '                               ' → logprob: -15.318251609802246
    10. '                    ' → logprob: -15.318251609802246

Token 896: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2530156075954437
    2. ' +=' → logprob: -1.5030156373977661
    3. '+' → logprob: -7.628015518188477
    4. '=' → logprob: -7.628015518188477
    5. ' =' → logprob: -9.253015518188477
    6. ' +' → logprob: -12.253015518188477
    7. '*=' → logprob: -12.878015518188477
    8. ']+=' → logprob: -12.878015518188477
    9. '+=(' → logprob: -13.378015518188477
    10. '   ' → logprob: -13.503015518188477

Token 897: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.4740793704986572
    2. ' dfs' → logprob: -0.9740793704986572
    3. 'df' → logprob: -13.224079132080078
    4. 'd' → logprob: -15.849079132080078
    5. ' ' → logprob: -16.599079132080078
    6. ' ' → logprob: -16.724079132080078
    7. ' DFS' → logprob: -16.974079132080078
    8. '   ' → logprob: -17.099079132080078
    9. '
' → logprob: -17.224079132080078
    10. 'DFS' → logprob: -17.599079132080078

Token 898: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.676981345459353e-06
    2. '((' → logprob: -12.250005722045898
    3. ' (' → logprob: -14.375005722045898
    4. '(
' → logprob: -16.1250057220459
    5. 'used' → logprob: -16.2500057220459
    6. '(use' → logprob: -18.3750057220459
    7. '   ' → logprob: -18.8750057220459
    8. '(u' → logprob: -19.2500057220459
    9. '(us' → logprob: -19.5000057220459
    10. '(user' → logprob: -19.6250057220459

Token 899: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -7.584239938296378e-06
    2. '(' → logprob: -12.500007629394531
    3. ' used' → logprob: -12.500007629394531
    4. '   ' → logprob: -20.00000762939453
    5. '.used' → logprob: -20.50000762939453
    6. '-used' → logprob: -21.25000762939453
    7. '_used' → logprob: -21.50000762939453
    8. 'visited' → logprob: -22.00000762939453
    9. ' (' → logprob: -22.25000762939453
    10. 'Used' → logprob: -22.62500762939453

Token 900: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.21835854649543762
    2. '(' → logprob: -2.3433585166931152
    3. 'used' → logprob: -2.3433585166931152
    4. 'mask' → logprob: -6.093358516693115
    5. '_used' → logprob: -6.343358516693115
    6. '_MASK' → logprob: -10.843358993530273
    7. '   ' → logprob: -10.968358993530273
    8. '[' → logprob: -11.343358993530273
    9. '{' → logprob: -11.468358993530273
    10. '_' → logprob: -11.718358993530273

Token 901: ' |' (ID: 1022)
  Prédit: ' |'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' |' → logprob: -0.8843618631362915
    2. '|' → logprob: -1.0093618631362915
    3. ',' → logprob: -1.5093618631362915
    4. ' ,' → logprob: -6.759361743927002
    5. '|(' → logprob: -8.25936222076416
    6. ',
' → logprob: -10.38436222076416
    7. ' ' → logprob: -11.38436222076416
    8. ')' → logprob: -11.88436222076416
    9. '│' → logprob: -11.88436222076416
    10. ' ' → logprob: -12.25936222076416

Token 902: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018151700496673584
    2. ' (' → logprob: -4.018151760101318
    3. ' ' → logprob: -14.64315128326416
    4. '1' → logprob: -15.01815128326416
    5. '[' → logprob: -15.64315128326416
    6. '   ' → logprob: -16.393152236938477
    7. '(
' → logprob: -16.393152236938477
    8. '           ' → logprob: -16.393152236938477
    9. '                   ' → logprob: -16.518152236938477
    10. '               ' → logprob: -16.643152236938477

Token 903: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001584850688232109
    2. '(' → logprob: -8.750158309936523
    3. ' ' → logprob: -18.750158309936523
    4. '   ' → logprob: -19.500158309936523
    5. ' (' → logprob: -20.125158309936523
    6. '           ' → logprob: -20.500158309936523
    7. '[' → logprob: -21.250158309936523
    8. '
' → logprob: -21.375158309936523
    9. '{' → logprob: -22.000158309936523
    10. '               ' → logprob: -22.125158309936523

Token 904: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.0007105246186256409
    2. ' <<' → logprob: -7.250710487365723
    3. '<' → logprob: -14.750710487365723
    4. '<<(' → logprob: -16.37571144104004
    5. '1' → logprob: -17.62571144104004
    6. '<<<' → logprob: -18.00071144104004
    7. ' ' → logprob: -18.00071144104004
    8. '```' → logprob: -19.37571144104004
    9. ' ' → logprob: -19.75071144104004
    10. '   ' → logprob: -20.12571144104004

Token 905: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.547789674485102e-05
    2. ' pos' → logprob: -10.250035285949707
    3. '	pos' → logprob: -19.000036239624023
    4. '[pos' → logprob: -20.000036239624023
    5. '(pos' → logprob: -20.750036239624023
    6. '   ' → logprob: -21.250036239624023
    7. '_pos' → logprob: -22.250036239624023
    8. 'p' → logprob: -23.125036239624023
    9. '.pos' → logprob: -23.375036239624023
    10. ' ' → logprob: -23.375036239624023

Token 906: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.007450086995959282
    2. ',' → logprob: -5.007450103759766
    3. ')' → logprob: -7.257450103759766
    4. '           ' → logprob: -11.382450103759766
    5. '               ' → logprob: -12.382450103759766
    6. ' ),' → logprob: -12.882450103759766
    7. '   ' → logprob: -13.132450103759766
    8. '))' → logprob: -13.257450103759766
    9. ',),' → logprob: -13.257450103759766
    10. '                   ' → logprob: -13.507450103759766

Token 907: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.12692904472351074
    2. 'pos' → logprob: -2.1269290447235107
    3. '    ' → logprob: -15.00192928314209
    4. '                ' → logprob: -15.87692928314209
    5. ' ' → logprob: -16.001928329467773
    6. '        ' → logprob: -16.251928329467773
    7. '            ' → logprob: -16.376928329467773
    8. '   ' → logprob: -16.626928329467773
    9. '                   ' → logprob: -16.751928329467773
    10. '           ' → logprob: -17.126928329467773

Token 908: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759401321411133
    2. '+' → logprob: -0.8259401321411133
    3. '+
' → logprob: -15.075940132141113
    4. ' +
' → logprob: -15.325940132141113
    5. ')' → logprob: -16.700939178466797
    6. '+)' → logprob: -17.075939178466797
    7. '1' → logprob: -17.325939178466797
    8. '＋' → logprob: -17.700939178466797
    9. ' ' → logprob: -18.075939178466797
    10. '               ' → logprob: -18.575939178466797

Token 909: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0484450437361374e-05
    2. ' ' → logprob: -10.125040054321289
    3. '```' → logprob: -15.250040054321289
    4. '   ' → logprob: -15.875040054321289
    5. ')' → logprob: -17.12504005432129
    6. '
' → logprob: -17.87504005432129
    7. '           ' → logprob: -18.50004005432129
    8. '``' → logprob: -18.68754005432129
    9. '       ' → logprob: -19.37504005432129
    10. '`' → logprob: -19.43754005432129

Token 910: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -17.25
    4. '
' → logprob: -18.5
    5. '   ' → logprob: -19.0
    6. ')' → logprob: -20.3125
    7. '``' → logprob: -20.625
    8. '۱' → logprob: -21.0
    9. '0' → logprob: -21.3125
    10. '2' → logprob: -21.4375

Token 911: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004095143172889948
    2. ')
' → logprob: -5.629095077514648
    3. '               ' → logprob: -7.629095077514648
    4. '           ' → logprob: -12.629095077514648
    5. '                   ' → logprob: -12.879095077514648
    6. ')
' → logprob: -14.629095077514648
    7. ' )' → logprob: -14.629095077514648
    8. ')return' → logprob: -14.754095077514648
    9. ')\' → logprob: -15.254095077514648
    10. ',' → logprob: -15.379095077514648

Token 912: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007732972735539079
    2. '                   ' → logprob: -8.000773429870605
    3. '```' → logprob: -8.250773429870605
    4. '           ' → logprob: -9.000773429870605
    5. '       ' → logprob: -11.125773429870605
    6. '[' → logprob: -11.500773429870605
    7. 'return' → logprob: -12.125773429870605
    8. '                       ' → logprob: -12.625773429870605
    9. '   ' → logprob: -12.750773429870605
    10. ' return' → logprob: -12.875773429870605

Token 913: ' res' (ID: 694)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00012070851516909897
    2. '           ' → logprob: -9.625121116638184
    3. 'return' → logprob: -10.875121116638184
    4. ' return' → logprob: -11.250121116638184
    5. '
' → logprob: -12.375121116638184
    6. '                   ' → logprob: -12.500121116638184
    7. '                
' → logprob: -12.875121116638184
    8. '```' → logprob: -13.000121116638184
    9. '\' → logprob: -13.125121116638184
    10. '\n' → logprob: -13.125121116638184

Token 914: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.3718652129173279
    2. ' %=' → logprob: -1.3718652725219727
    3. '%' → logprob: -2.8718652725219727
    4. '=' → logprob: -8.746865272521973
    5. ' %' → logprob: -9.121865272521973
    6. '	' → logprob: -10.871865272521973
    7. '   ' → logprob: -11.246865272521973
    8. '
' → logprob: -12.121865272521973
    9. ')' → logprob: -12.246865272521973
    10. ' ' → logprob: -12.246865272521973

Token 915: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.318681188422488e-05
    2. ' self' → logprob: -11.25001335144043
    3. '           ' → logprob: -17.12501335144043
    4. '               ' → logprob: -17.75001335144043
    5. '(self' → logprob: -18.62501335144043
    6. '       ' → logprob: -20.37501335144043
    7. '   ' → logprob: -21.00001335144043
    8. '                   ' → logprob: -21.12501335144043
    9. '
' → logprob: -21.75001335144043
    10. '	self' → logprob: -22.00001335144043

Token 916: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -3.531315314830863e-06
    2. 'mod' → logprob: -12.625003814697266
    3. '	mod' → logprob: -16.125003814697266
    4. '```' → logprob: -17.750003814697266
    5. 'MOD' → logprob: -18.750003814697266
    6. '_mod' → logprob: -19.375003814697266
    7. '
' → logprob: -19.375003814697266
    8. ' .' → logprob: -19.375003814697266
    9. '   ' → logprob: -19.625003814697266
    10. '.MOD' → logprob: -19.875003814697266

Token 917: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.771655115589965e-05
    2. '           ' → logprob: -11.250018119812012
    3. '       ' → logprob: -13.625018119812012
    4. 'return' → logprob: -13.750018119812012
    5. '```' → logprob: -14.375018119812012
    6. '                   ' → logprob: -14.625018119812012
    7. ',' → logprob: -15.000018119812012
    8. '              ' → logprob: -15.125018119812012
    9. ' return' → logprob: -15.500018119812012
    10. '                ' → logprob: -16.125017166137695

Token 918: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.5690089639974758e-05
    2. '           ' → logprob: -12.000015258789062
    3. 'self' → logprob: -12.250015258789062
    4. '       ' → logprob: -13.250015258789062
    5. '   ' → logprob: -13.875015258789062
    6. '```' → logprob: -14.125015258789062
    7. '                   ' → logprob: -14.500015258789062
    8. '<|end|>' → logprob: -15.250015258789062
    9. '              ' → logprob: -15.750015258789062
    10. '                
' → logprob: -16.125015258789062

Token 919: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.06229244917631149
    2. '               ' → logprob: -2.8122923374176025
    3. 'return' → logprob: -8.437292098999023
    4. '           ' → logprob: -9.562292098999023
    5. '       ' → logprob: -10.937292098999023
    6. ' self' → logprob: -10.937292098999023
    7. '                   ' → logprob: -13.937292098999023
    8. '   ' → logprob: -13.937292098999023
    9. '```' → logprob: -15.812292098999023
    10. '              ' → logprob: -16.562292098999023

Token 920: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -0.00023286080977413803
    2. '.mem' → logprob: -9.500232696533203
    3. '.' → logprob: -9.625232696533203
    4. 'memo' → logprob: -9.750232696533203
    5. '.memory' → logprob: -10.375232696533203
    6. ' .' → logprob: -14.125232696533203
    7. ' memo' → logprob: -14.500232696533203
    8. 'Memo' → logprob: -16.125232696533203
    9. '```' → logprob: -16.125232696533203
    10. '.mime' → logprob: -16.250232696533203

Token 921: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.000712074339389801
    2. '[' → logprob: -7.250711917877197
    3. '[(' → logprob: -13.375712394714355
    4. '[
' → logprob: -15.750712394714355
    5. '[token' → logprob: -16.37571144104004
    6. '```' → logprob: -16.37571144104004
    7. 'key' → logprob: -16.62571144104004
    8. '[...]' → logprob: -17.00071144104004
    9. '(key' → logprob: -17.12571144104004
    10. ',key' → logprob: -17.25071144104004

Token 922: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002898428589105606
    2. ' =' → logprob: -5.877898216247559
    3. ']' → logprob: -9.627898216247559
    4. ']=' → logprob: -10.752898216247559
    5. '=
' → logprob: -12.377898216247559
    6. '   ' → logprob: -14.127898216247559
    7. ')' → logprob: -14.627898216247559
    8. ')=' → logprob: -14.752898216247559
    9. '       ' → logprob: -15.627898216247559
    10. '           ' → logprob: -16.002899169921875

Token 923: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00020425561524461955
    2. ' =' → logprob: -8.500204086303711
    3. '=
' → logprob: -14.125204086303711
    4. '   ' → logprob: -18.00020408630371
    5. ')=' → logprob: -18.62520408630371
    6. '=True' → logprob: -18.62520408630371
    7. ']=' → logprob: -18.75020408630371
    8. '       ' → logprob: -18.75020408630371
    9. '=

' → logprob: -18.87520408630371
    10. '=None' → logprob: -19.00020408630371

Token 924: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -5.512236498361744e-07
    2. ' res' → logprob: -14.500000953674316
    3. 're' → logprob: -22.375
    4. '(res' → logprob: -23.75
    5. 'r' → logprob: -24.0
    6. '	res' → logprob: -25.0
    7. 'ret' → logprob: -25.25
    8. 'resi' → logprob: -25.625
    9. '$res' → logprob: -25.75
    10. '_res' → logprob: -26.375

Token 925: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.6060808522743173e-05
    2. 'return' → logprob: -10.750025749206543
    3. ' return' → logprob: -13.750025749206543
    4. '           ' → logprob: -14.375025749206543
    5. '		       ' → logprob: -14.500025749206543
    6. '	           ' → logprob: -14.750025749206543
    7. '                
' → logprob: -15.000025749206543
    8. '			' → logprob: -15.000025749206543
    9. '                   ' → logprob: -15.125025749206543
    10. '       ' → logprob: -15.375025749206543

Token 926: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.240481914370321e-05
    2. 'return' → logprob: -10.000052452087402
    3. ' return' → logprob: -13.375052452087402
    4. '       ' → logprob: -13.625052452087402
    5. '           ' → logprob: -13.875052452087402
    6. '```' → logprob: -14.250052452087402
    7. '                
' → logprob: -14.625052452087402
    8. '                   ' → logprob: -14.750052452087402
    9. '		       ' → logprob: -15.000052452087402
    10. '			' → logprob: -15.000052452087402

Token 927: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0298226997256279
    2. 'return' (adapté à ' return') → logprob: -3.529822587966919
    3. ' return' → logprob: -9.77982234954834
    4. '           ' → logprob: -11.52982234954834
    5. '       ' → logprob: -13.27982234954834
    6. '                   ' → logprob: -13.40482234954834
    7. '   ' → logprob: -13.77982234954834
    8. '```' → logprob: -14.65482234954834
    9. ':return' → logprob: -15.02982234954834
    10. '	return' → logprob: -15.02982234954834

Token 928: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.306760805164231e-05
    2. ' res' → logprob: -11.25001335144043
    3. 'r' → logprob: -19.87501335144043
    4. '	res' → logprob: -20.12501335144043
    5. '   ' → logprob: -20.37501335144043
    6. '(res' → logprob: -21.37501335144043
    7. 're' → logprob: -21.50001335144043
    8. '
' → logprob: -21.50001335144043
    9. '$res' → logprob: -21.50001335144043
    10. 'resi' → logprob: -22.12501335144043

Token 929: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2243008315563202
    2. '        
' → logprob: -2.4743008613586426
    3. '       ' → logprob: -2.9743008613586426
    4. '    
' → logprob: -4.099300861358643
    5. '<|end|>' → logprob: -4.224300861358643
    6. '
' → logprob: -4.599300861358643
    7. '            
' → logprob: -4.849300861358643
    8. '               ' → logprob: -5.224300861358643
    9. '		
' → logprob: -5.599300861358643
    10. '		' → logprob: -6.099300861358643

Token 930: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19458530843257904
    2. '        
' → logprob: -1.9445853233337402
    3. '           ' → logprob: -3.4445853233337402
    4. '    
' → logprob: -6.81958532333374
    5. '            
' → logprob: -8.444584846496582
    6. '   ' → logprob: -9.069584846496582
    7. '               ' → logprob: -9.069584846496582
    8. '<|end|>' → logprob: -9.069584846496582
    9. '		
' → logprob: -10.194584846496582
    10. '
' → logprob: -10.944584846496582

Token 931: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1875704824924469
    2. '       ' → logprob: -1.8125704526901245
    3. '               ' → logprob: -5.187570571899414
    4. 'return' (adapté à ' return') → logprob: -6.437570571899414
    5. '
' → logprob: -8.062570571899414
    6. '   ' → logprob: -9.687570571899414
    7. '        
' → logprob: -9.687570571899414
    8. ' return' → logprob: -10.687570571899414
    9. '         ' → logprob: -10.687570571899414
    10. '```' → logprob: -10.687570571899414

Token 932: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.3133629560470581
    2. ' dfs' → logprob: -1.313362956047058
    3. '0' → logprob: -9.563363075256348
    4. 'df' → logprob: -10.813363075256348
    5. '           ' → logprob: -13.063363075256348
    6. 'd' → logprob: -13.063363075256348
    7. '   ' → logprob: -13.188363075256348
    8. '
' → logprob: -13.938363075256348
    9. '1' → logprob: -13.938363075256348
    10. '               ' → logprob: -14.313363075256348

Token 933: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008255873690359294
    2. '0' → logprob: -7.12582540512085
    3. ' (' → logprob: -11.750825881958008
    4. '(None' → logprob: -12.125825881958008
    5. '(
' → logprob: -13.250825881958008
    6. '           ' → logprob: -13.250825881958008
    7. '(self' → logprob: -14.000825881958008
    8. ' ' → logprob: -14.375825881958008
    9. 'used' → logprob: -14.375825881958008
    10. '([],' → logprob: -14.500825881958008

Token 934: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. ')' → logprob: -17.625
    4. '(' → logprob: -18.375
    5. '   ' → logprob: -19.0
    6. '000' → logprob: -19.0
    7. '۰' → logprob: -19.25
    8. '00' → logprob: -19.625
    9. '```' → logprob: -20.8125
    10. '０' → logprob: -21.125

Token 935: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021486106561496854
    2. ' ,' → logprob: -8.500214576721191
    3. ',
' → logprob: -13.000214576721191
    4. '   ' → logprob: -13.000214576721191
    5. '           ' → logprob: -13.125214576721191
    6. ')' → logprob: -13.250214576721191
    7. ',n' → logprob: -13.750214576721191
    8. '       ' → logprob: -14.125214576721191
    9. ',len' → logprob: -14.125214576721191
    10. ' ' → logprob: -16.750215530395508

Token 936: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013327404158189893
    2. 'n' → logprob: -6.751332759857178
    3. ' ' → logprob: -8.75133228302002
    4. ' n' → logprob: -12.87633228302002
    5. '           ' → logprob: -14.62633228302002
    6. '   ' → logprob: -15.25133228302002
    7. 'len' → logprob: -15.50133228302002
    8. '       ' → logprob: -15.62633228302002
    9. ')' → logprob: -16.626333236694336
    10. '1' → logprob: -16.876333236694336

Token 937: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. 'n' → logprob: -15.25
    3. ' ' → logprob: -15.625
    4. 'len' → logprob: -19.0
    5. '1' → logprob: -20.0
    6. '۰' → logprob: -20.375
    7. ')' → logprob: -20.5
    8. '   ' → logprob: -20.5
    9. '```' → logprob: -20.5
    10. '
' → logprob: -20.6875

Token 938: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7491250875755213e-05
    2. '       ' → logprob: -10.875027656555176
    3. ')
' → logprob: -12.875027656555176
    4. ' )' → logprob: -13.250027656555176
    5. '<|end|>' → logprob: -13.250027656555176
    6. '   ' → logprob: -13.875027656555176
    7. ')return' → logprob: -14.375027656555176
    8. '}' → logprob: -15.500027656555176
    9. '
' → logprob: -16.00002670288086
    10. '           ' → logprob: -16.12502670288086

Token 939: '    
' (ID: 1944)
  Prédit: '    
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.20306484401226044
    2. '   ' → logprob: -1.9530647993087769
    3. '        
' → logprob: -3.8280649185180664
    4. '
' → logprob: -4.328064918518066
    5. 'def' → logprob: -5.078064918518066
    6. '       ' → logprob: -8.203064918518066
    7. '  
' → logprob: -9.078064918518066
    8. ' 
' → logprob: -9.328064918518066
    9. '    
    
' → logprob: -9.578064918518066
    10. '   
' → logprob: -9.828064918518066

Token 940: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06566386669874191
    2. 'def' → logprob: -2.9406638145446777
    3. '    
' → logprob: -4.690663814544678
    4. ' def' → logprob: -7.440663814544678
    5. '        
' → logprob: -7.940663814544678
    6. '       ' → logprob: -8.065664291381836
    7. '
' → logprob: -9.065664291381836
    8. '<|end|>' → logprob: -9.565664291381836
    9. '```' → logprob: -10.190664291381836
    10. '	def' → logprob: -11.565664291381836

Token 941: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.20169661939144135
    2. '   ' → logprob: -1.7016966342926025
    3. ' def' → logprob: -8.201696395874023
    4. '    
' → logprob: -11.826696395874023
    5. '```' → logprob: -14.201696395874023
    6. '	def' → logprob: -14.576696395874023
    7. '       ' → logprob: -15.076696395874023
    8. '        
' → logprob: -15.326696395874023
    9. '
' → logprob: -16.951696395874023
    10. ' ' → logprob: -17.326696395874023

Token 942: ' calculate' (ID: 17950)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.8758640885353088
    2. ' solve' → logprob: -1.250864028930664
    3. 'count' → logprob: -1.750864028930664
    4. ' count' → logprob: -2.125864028930664
    5. ' compute' → logprob: -6.500864028930664
    6. 'compute' → logprob: -6.625864028930664
    7. 'calculate' → logprob: -6.875864028930664
    8. ' calculate' → logprob: -8.375864028930664
    9. '_count' → logprob: -10.125864028930664
    10. ' number' → logprob: -10.500864028930664

Token 943: '(self' (ID: 2402)
  Prédit: '_ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ind' → logprob: -0.9795233011245728
    2. '(self' → logprob: -2.104523181915283
    3. '_' → logprob: -2.479523181915283
    4. '_count' → logprob: -2.729523181915283
    5. '_total' → logprob: -2.729523181915283
    6. '_min' → logprob: -2.979523181915283
    7. '_sub' → logprob: -3.229523181915283
    8. '_valid' → logprob: -3.354523181915283
    9. '_unique' → logprob: -3.729523181915283
    10. '_max' → logprob: -3.854523181915283

Token 944: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7406076192855835
    2. ',' → logprob: -0.8656076192855835
    3. 'self' → logprob: -2.615607738494873
    4. '_self' → logprob: -4.365607738494873
    5. '_' → logprob: -5.615607738494873
    6. '(self' → logprob: -6.115607738494873
    7. '   ' → logprob: -6.115607738494873
    8. '_value' → logprob: -6.490607738494873
    9. '_,' → logprob: -6.990607738494873
    10. ',_' → logprob: -7.240607738494873

Token 945: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001657090149819851
    2. '       ' → logprob: -6.876657009124756
    3. '   ' → logprob: -8.126657485961914
    4. '(' → logprob: -8.501657485961914
    5. '(
' → logprob: -10.126657485961914
    6. ':
' → logprob: -10.126657485961914
    7. ':' → logprob: -10.626657485961914
    8. 'self' → logprob: -11.626657485961914
    9. 'def' → logprob: -13.126657485961914
    10. ' (' → logprob: -13.126657485961914

Token 946: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.572941179503687e-05
    2. ' int' → logprob: -10.000045776367188
    3. '(int' → logprob: -16.000045776367188
    4. '   ' → logprob: -16.125045776367188
    5. '[int' → logprob: -17.875045776367188
    6. '	int' → logprob: -18.250045776367188
    7. 'str' → logprob: -19.000045776367188
    8. '  ' → logprob: -19.500045776367188
    9. 'None' → logprob: -19.750045776367188
    10. '<int' → logprob: -19.750045776367188

Token 947: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5920550227165222
    2. '       ' → logprob: -0.9670550227165222
    3. ':' → logprob: -3.342055082321167
    4. ':
' → logprob: -3.967055082321167
    5. 'self' → logprob: -5.092054843902588
    6. '   ' → logprob: -5.967054843902588
    7. '(
' → logprob: -7.217054843902588
    8. '(' → logprob: -7.342054843902588
    9. '	self' → logprob: -8.217055320739746
    10. '```' → logprob: -8.217055320739746

Token 948: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.652451464906335e-05
    2. '```' → logprob: -11.375016212463379
    3. '        
' → logprob: -13.625016212463379
    4. '   ' → logprob: -13.750016212463379
    5. 'a' → logprob: -14.000016212463379
    6. '           ' → logprob: -14.375016212463379
    7. 'result' → logprob: -15.125016212463379
    8. '      ' → logprob: -15.875016212463379
    9. 'self' → logprob: -16.000017166137695
    10. '        ' → logprob: -16.500017166137695

Token 949: ' #' (ID: 1069)
  Prédit: ' builder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' builder' → logprob: -0.8013041019439697
    2. 'builder' → logprob: -1.0513041019439697
    3. '       ' → logprob: -2.0513041019439697
    4. 'graph' → logprob: -3.0513041019439697
    5. ' graph' → logprob: -3.8013041019439697
    6. 'com' → logprob: -6.801303863525391
    7. ' comparator' → logprob: -6.926303863525391
    8. ' numbers' → logprob: -7.801303863525391
    9. ' comp' → logprob: -8.05130386352539
    10. 'comp' → logprob: -8.55130386352539

Token 950: ' Step' (ID: 22291)
  Prédit: 'builder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'builder' → logprob: -0.2748444080352783
    2. 'graph' → logprob: -2.3998444080352783
    3. 'com' → logprob: -2.5248444080352783
    4. 'comp' → logprob: -3.0248444080352783
    5. ' builder' → logprob: -4.399844169616699
    6. 'gb' → logprob: -6.024844169616699
    7. ' comparator' → logprob: -6.524844169616699
    8. '       ' → logprob: -6.524844169616699
    9. ' comp' → logprob: -6.899844169616699
    10. ' graph' → logprob: -7.399844169616699

Token 951: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.463142991065979
    2. ' =' → logprob: -1.963142991065979
    3. '1' → logprob: -2.7131428718566895
    4. '        ' → logprob: -2.9631428718566895
    5. '=' → logprob: -3.2131428718566895
    6. '           ' → logprob: -3.2131428718566895
    7. ':' → logprob: -3.9631428718566895
    8. ' by' → logprob: -5.4631428718566895
    9. '```' → logprob: -6.2131428718566895
    10. '    ' → logprob: -6.8381428718566895

Token 952: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01371079497039318
    2. '0' → logprob: -5.638710975646973
    3. 'graph' → logprob: -5.638710975646973
    4. ' ' → logprob: -6.138710975646973
    5. '       ' → logprob: -6.263710975646973
    6. '#' → logprob: -6.638710975646973
    7. '   ' → logprob: -7.888710975646973
    8. '           ' → logprob: -8.013710975646973
    9. 'builder' → logprob: -9.388710975646973
    10. 'self' → logprob: -9.513710975646973

Token 953: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2804659903049469
    2. ' graph' → logprob: -2.655466079711914
    3. ' builder' → logprob: -3.030466079711914
    4. 'graph' → logprob: -3.155466079711914
    5. ':' → logprob: -3.780466079711914
    6. 'builder' → logprob: -4.155466079711914
    7. ' =' → logprob: -4.530466079711914
    8. ' numbers' → logprob: -5.030466079711914
    9. '```' → logprob: -5.030466079711914
    10. '=' → logprob: -5.280466079711914

Token 954: ' Build' (ID: 10885)
  Prédit: 'builder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'builder' → logprob: -0.15455137193202972
    2. 'graph' → logprob: -2.9045512676239014
    3. 'com' → logprob: -3.1545512676239014
    4. 'comp' → logprob: -3.1545512676239014
    5. ' builder' → logprob: -6.2795515060424805
    6. ' comparator' → logprob: -8.40455150604248
    7. ' comp' → logprob: -8.52955150604248
    8. 'cb' → logprob: -8.77955150604248
    9. 'build' → logprob: -9.15455150604248
    10. 'cmp' → logprob: -9.15455150604248

Token 955: ' conflict' (ID: 21461)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.2861980199813843
    2. ' graph' → logprob: -1.4111980199813843
    3. 'self' → logprob: -6.536198139190674
    4. '_graph' → logprob: -7.036198139190674
    5. ' self' → logprob: -7.161198139190674
    6. 'Graph' → logprob: -7.161198139190674
    7. '       ' → logprob: -7.286198139190674
    8. ' Graph' → logprob: -7.786198139190674
    9. '           ' → logprob: -10.411197662353516
    10. ' the' → logprob: -12.411197662353516

Token 956: ' graph' (ID: 7465)
  Prédit: '_graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.08723338693380356
    2. ' graph' → logprob: -2.587233304977417
    3. 'graph' → logprob: -4.837233543395996
    4. '       ' → logprob: -8.087233543395996
    5. 'Graph' → logprob: -10.712233543395996
    6. '           ' → logprob: -11.087233543395996
    7. '   ' → logprob: -11.587233543395996
    8. '	graph' → logprob: -11.712233543395996
    9. '_edges' → logprob: -12.212233543395996
    10. '(graph' → logprob: -12.837233543395996

Token 957: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018100658431649208
    2. 'builder' → logprob: -4.393100738525391
    3. 'graph' → logprob: -6.018100738525391
    4. '           ' → logprob: -7.143100738525391
    5. '
' → logprob: -7.143100738525391
    6. ' builder' → logprob: -7.393100738525391
    7. ':' → logprob: -8.51810073852539
    8. '        
' → logprob: -8.76810073852539
    9. '_builder' → logprob: -9.01810073852539
    10. ' graph' → logprob: -9.14310073852539

Token 958: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02267088182270527
    2. 'builder' → logprob: -4.022670745849609
    3. 'graph' → logprob: -5.647670745849609
    4. '           ' → logprob: -7.522670745849609
    5. ' builder' → logprob: -8.02267074584961
    6. ' graph' → logprob: -10.02267074584961
    7. '```' → logprob: -10.77267074584961
    8. '   ' → logprob: -11.27267074584961
    9. '_builder' → logprob: -11.52267074584961
    10. 'Builder' → logprob: -11.52267074584961

Token 959: ' builder' (ID: 11592)
  Prédit: 'builder'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'builder' (adapté à ' builder') → logprob: -0.3561319410800934
    2. ' builder' → logprob: -1.731131911277771
    3. 'graph' → logprob: -2.3561320304870605
    4. ' graph' → logprob: -4.2311320304870605
    5. '       ' → logprob: -4.3561320304870605
    6. 'gb' → logprob: -8.356131553649902
    7. '   ' → logprob: -9.356131553649902
    8. ' gb' → logprob: -10.106131553649902
    9. '```' → logprob: -12.481131553649902
    10. 'Builder' → logprob: -12.731131553649902

Token 960: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20788012444972992
    2. ' =' → logprob: -1.7078801393508911
    3. '.' → logprob: -5.332880020141602
    4. '       ' → logprob: -7.832880020141602
    5. '.Builder' → logprob: -8.082880020141602
    6. '.=' → logprob: -8.082880020141602
    7. '.build' → logprob: -8.332880020141602
    8. '   ' → logprob: -9.207880020141602
    9. '.builder' → logprob: -9.207880020141602
    10. '=self' → logprob: -9.957880020141602

Token 961: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.017319152131676674
    2. ' self' → logprob: -4.267319202423096
    3. 'Number' → logprob: -5.767319202423096
    4. ' Number' → logprob: -10.767318725585938
    5. '       ' → logprob: -13.642318725585938
    6. '   ' → logprob: -15.517318725585938
    7. '(self' → logprob: -16.642318725585938
    8. '=self' → logprob: -17.392318725585938
    9. '
' → logprob: -17.642318725585938
    10. '	self' → logprob: -17.892318725585938

Token 962: '.Graph' (ID: 20759)
  Prédit: '.Graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Graph' → logprob: -2.1008713702030946e-06
    2. 'Graph' → logprob: -13.750001907348633
    3. '.Graphics' → logprob: -15.125001907348633
    4. '.Number' → logprob: -15.375001907348633
    5. '.Code' → logprob: -15.375001907348633
    6. '.Class' → logprob: -16.625001907348633
    7. '.L' → logprob: -16.750001907348633
    8. '.G' → logprob: -17.750001907348633
    9. '.' → logprob: -18.250001907348633
    10. ' .' → logprob: -18.500001907348633

Token 963: 'Builder' (ID: 4542)
  Prédit: 'Builder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Builder' → logprob: 0.0
    2. 'builder' → logprob: -17.25
    3. 'uilder' → logprob: -19.125
    4. '_builder' → logprob: -19.375
    5. ' Builder' → logprob: -19.5
    6. '\Builder' → logprob: -19.875
    7. '@Builder' → logprob: -20.25
    8. 'Build' → logprob: -21.125
    9. '.Builder' → logprob: -21.25
    10. ' builder' → logprob: -21.875

Token 964: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -14.500000953674316
    3. '       ' → logprob: -14.625000953674316
    4. 'self' → logprob: -15.625000953674316
    5. '(
' → logprob: -15.750000953674316
    6. '   ' → logprob: -17.500001907348633
    7. ' (' → logprob: -17.625001907348633
    8. 'Number' → logprob: -17.875001907348633
    9. '```' → logprob: -18.125001907348633
    10. '(list' → logprob: -18.250001907348633

Token 965: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0010348338400945067
    2. 'numbers' → logprob: -6.876034736633301
    3. '   ' → logprob: -14.6260347366333
    4. ',n' → logprob: -15.3760347366333
    5. '(numbers' → logprob: -15.3760347366333
    6. 'n' → logprob: -15.5010347366333
    7. '       ' → logprob: -16.001035690307617
    8. '.' → logprob: -16.001035690307617
    9. '.a' → logprob: -16.126035690307617
    10. ' .' → logprob: -16.251035690307617

Token 966: 'umbers' (ID: 14501)
  Prédit: 'umbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umbers' → logprob: -7.707997428951785e-05
    2. 'numbers' → logprob: -9.500077247619629
    3. '_numbers' → logprob: -14.000077247619629
    4. '   ' → logprob: -14.750077247619629
    5. '```' → logprob: -15.000077247619629
    6. '(numbers' → logprob: -15.625077247619629
    7. 'umber' → logprob: -15.750077247619629
    8. 'Numbers' → logprob: -16.375076293945312
    9. 'embers' → logprob: -16.625076293945312
    10. '...' → logprob: -16.750076293945312

Token 967: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8312570318812504e-05
    2. ')' → logprob: -12.125018119812012
    3. ',
' → logprob: -12.250018119812012
    4. ' ,' → logprob: -12.500018119812012
    5. ',self' → logprob: -12.750018119812012
    6. '       ' → logprob: -14.750018119812012
    7. '   ' → logprob: -15.000018119812012
    8. '),' → logprob: -15.250018119812012
    9. '           ' → logprob: -16.250019073486328
    10. 'self' → logprob: -16.500019073486328

Token 968: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011099939234554768
    2. ' self' → logprob: -4.511099815368652
    3. 'Number' → logprob: -10.011099815368652
    4. '           ' → logprob: -12.261099815368652
    5. '       ' → logprob: -13.886099815368652
    6. '   ' → logprob: -14.136099815368652
    7. ' Number' → logprob: -14.761099815368652
    8. '               ' → logprob: -15.886099815368652
    9. '(self' → logprob: -16.13610076904297
    10. '                   ' → logprob: -16.76110076904297

Token 969: '.L' (ID: 2024)
  Prédit: 'Lex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Lex' → logprob: -0.0013635702198371291
    2. '.L' → logprob: -6.626363754272461
    3. ' Lex' → logprob: -10.376363754272461
    4. '.' → logprob: -13.251363754272461
    5. '.lex' → logprob: -14.376363754272461
    6. 'L' → logprob: -14.626363754272461
    7. '`' → logprob: -14.751363754272461
    8. 'Lexer' → logprob: -14.876363754272461
    9. 'lex' → logprob: -15.001363754272461
    10. '...' → logprob: -15.251363754272461

Token 970: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -2.141186450899113e-05
    2. 'xico' → logprob: -11.750020980834961
    3. 'exo' → logprob: -12.625020980834961
    4. 'ec' → logprob: -13.375020980834961
    5. '	ex' → logprob: -13.750020980834961
    6. '

' → logprob: -14.125020980834961
    7. ' ex' → logprob: -14.500020980834961
    8. 'exc' → logprob: -14.500020980834961
    9. 'utico' → logprob: -14.750020980834961
    10. 'EX' → logprob: -14.875020980834961

Token 971: 'ico' (ID: 2424)
  Prédit: 'ico'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ico' → logprob: -1.0280383548888494e-06
    2. 'eco' → logprob: -14.375000953674316
    3. ' ico' → logprob: -16.500001907348633
    4. 'lico' → logprob: -16.625001907348633
    5. 'tico' → logprob: -16.625001907348633
    6. 'xico' → logprob: -17.000001907348633
    7. 'exo' → logprob: -17.125001907348633
    8. 'icolo' → logprob: -17.500001907348633
    9. 'fico' → logprob: -17.750001907348633
    10. '   ' → logprob: -17.875001907348633

Token 972: 'Comparator' (ID: 45034)
  Prédit: 'Comparator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Comparator' → logprob: -5.512236498361744e-07
    2. ' Comparator' → logprob: -15.500000953674316
    3. 'Comparer' → logprob: -16.0
    4. '.Comparator' → logprob: -16.25
    5. 'Compar' → logprob: -17.75
    6. ' comparator' → logprob: -19.5
    7. '
' → logprob: -20.375
    8. 'Compet' → logprob: -21.625
    9. 'Com' → logprob: -21.75
    10. 'com' → logprob: -22.0

Token 973: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25353288650512695
    2. ')' → logprob: -1.503532886505127
    3. ')
' → logprob: -7.128532886505127
    4. '())
' → logprob: -7.503532886505127
    5. '(self' → logprob: -9.503532409667969
    6. '())' → logprob: -10.128532409667969
    7. ')

' → logprob: -10.253532409667969
    8. '(' → logprob: -10.503532409667969
    9. 'self' → logprob: -10.878532409667969
    10. ' )
' → logprob: -11.253532409667969

Token 974: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07983115315437317
    2. 'graph' → logprob: -2.579831123352051
    3. ' graph' → logprob: -7.579831123352051
    4. '
' → logprob: -8.70483112335205
    5. 'builder' → logprob: -8.70483112335205
    6. '	graph' → logprob: -10.70483112335205
    7. '        
' → logprob: -10.95483112335205
    8. 'self' → logprob: -11.20483112335205
    9. '           ' → logprob: -11.95483112335205
    10. '.graph' → logprob: -12.07983112335205

Token 975: ' self' (ID: 1051)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.03973735496401787
    2. ' graph' → logprob: -3.2897374629974365
    3. '       ' → logprob: -6.414737224578857
    4. 'g' → logprob: -10.914737701416016
    5. 'self' (adapté à ' self') → logprob: -10.914737701416016
    6. '	graph' → logprob: -12.039737701416016
    7. ' self' → logprob: -12.539737701416016
    8. 'adj' → logprob: -12.789737701416016
    9. '   ' → logprob: -12.914737701416016
    10. 'builder' → logprob: -13.914737701416016

Token 976: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.7749665975570679
    2. 'adj' → logprob: -1.0249665975570679
    3. 'graph' → logprob: -2.2749667167663574
    4. '.graph' → logprob: -2.6499667167663574
    5. '_graph' → logprob: -5.399966716766357
    6. '_adj' → logprob: -6.274966716766357
    7. '_ad' → logprob: -8.3999662399292
    8. ' adj' → logprob: -8.7749662399292
    9. 'Graph' → logprob: -9.3999662399292
    10. 'ad' → logprob: -9.7749662399292

Token 977: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.200166469876422e-06
    2. 'd' → logprob: -12.500004768371582
    3. '_list' → logprob: -14.000004768371582
    4. 'jac' → logprob: -15.625004768371582
    5. '_j' → logprob: -16.2500057220459
    6. 'dj' → logprob: -16.6250057220459
    7. '```' → logprob: -17.2500057220459
    8. ' j' → logprob: -17.6250057220459
    9. 'jl' → logprob: -17.7500057220459
    10. 'js' → logprob: -17.7500057220459

Token 978: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.128163257315464e-07
    2. '_graph' → logprob: -16.375
    3. '_' → logprob: -16.5
    4. 'acency' → logprob: -18.75
    5. 'list' → logprob: -19.0
    6. '   ' → logprob: -19.375
    7. '_lists' → logprob: -19.5
    8. ' _' → logprob: -19.5
    9. '_lst' → logprob: -19.625
    10. '\' → logprob: -19.75

Token 979: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931474208831787
    2. ' =' → logprob: -0.6931474208831787
    3. ',' → logprob: -16.693147659301758
    4. ' ' → logprob: -17.068147659301758
    5. ' =
' → logprob: -17.068147659301758
    6. '=self' → logprob: -17.193147659301758
    7. '=

' → logprob: -18.068147659301758
    8. '＝' → logprob: -18.318147659301758
    9. ')' → logprob: -18.443147659301758
    10. '   ' → logprob: -18.943147659301758

Token 980: ' builder' (ID: 11592)
  Prédit: 'builder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'builder' → logprob: -0.0007099286303855479
    2. ' builder' → logprob: -7.2507100105285645
    3. '	builder' → logprob: -19.750709533691406
    4. '(builder' → logprob: -20.500709533691406
    5. '.builder' → logprob: -20.625709533691406
    6. 'Builder' → logprob: -21.000709533691406
    7. '_builder' → logprob: -22.500709533691406
    8. '   ' → logprob: -23.500709533691406
    9. 'b' → logprob: -23.750709533691406
    10. 'build' → logprob: -24.375709533691406

Token 981: '.build' (ID: 20924)
  Prédit: '.build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.build' → logprob: -5.5577775128767826e-06
    2. 'build' → logprob: -12.500005722045898
    3. '.' → logprob: -14.000005722045898
    4. ' .' → logprob: -14.250005722045898
    5. '   ' → logprob: -16.7500057220459
    6. '       ' → logprob: -17.0000057220459
    7. '           ' → logprob: -17.3750057220459
    8. ').' → logprob: -18.2500057220459
    9. '}.' → logprob: -18.8750057220459
    10. '
' → logprob: -19.0000057220459

Token 982: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -1.2664456789934775e-06
    2. 'graph' → logprob: -14.000000953674316
    3. '_' → logprob: -15.375000953674316
    4. '```' → logprob: -16.375001907348633
    5. '_list' → logprob: -17.750001907348633
    6. '\' → logprob: -17.750001907348633
    7. '
' → logprob: -18.000001907348633
    8. '_tree' → logprob: -18.000001907348633
    9. ' _' → logprob: -18.250001907348633
    10. 'raph' → logprob: -18.875001907348633

Token 983: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16433191299438477
    2. '       ' → logprob: -1.9143319129943848
    3. '        
' → logprob: -5.539331912994385
    4. '

' → logprob: -9.664331436157227
    5. '    
' → logprob: -9.664331436157227
    6. '  
' → logprob: -11.289331436157227
    7. '       
' → logprob: -12.164331436157227
    8. '
' → logprob: -12.539331436157227
    9. '<|end|>' → logprob: -12.664331436157227
    10. '#' → logprob: -13.039331436157227

Token 984: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1850898712873459
    2. '
' → logprob: -1.8100898265838623
    3. '        
' → logprob: -5.310090065002441
    4. '```' → logprob: -8.685090065002441
    5. '    
' → logprob: -9.185090065002441
    6. 'builder' → logprob: -10.685090065002441
    7. '   ' → logprob: -10.810090065002441
    8. '  
' → logprob: -11.435090065002441
    9. '           ' → logprob: -11.560090065002441
    10. '
' → logprob: -11.810090065002441

Token 985: ' #' (ID: 1069)
  Prédit: 'finder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finder' → logprob: -0.024703001603484154
    2. '       ' → logprob: -3.774703025817871
    3. 'component' → logprob: -7.274703025817871
    4. ' finder' → logprob: -7.899703025817871
    5. 'cf' → logprob: -8.524703025817871
    6. 'find' → logprob: -9.649703025817871
    7. '#' (adapté à ' #') → logprob: -10.399703025817871
    8. '
' → logprob: -10.524703025817871
    9. 'components' → logprob: -10.649703025817871
    10. '        
' → logprob: -10.899703025817871

Token 986: ' Step' (ID: 22291)
  Prédit: 'finder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'finder' → logprob: -0.056516051292419434
    2. 'component' → logprob: -3.806516170501709
    3. 'cf' → logprob: -4.056516170501709
    4. '       ' → logprob: -5.306516170501709
    5. 'components' → logprob: -5.681516170501709
    6. ' finder' → logprob: -5.806516170501709
    7. '#' → logprob: -6.181516170501709
    8. 'comp' → logprob: -7.806516170501709
    9. '   ' → logprob: -7.806516170501709
    10. ' cf' → logprob: -7.806516170501709

Token 987: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22784733772277832
    2. ' ' → logprob: -1.8528473377227783
    3. '1' → logprob: -3.1028473377227783
    4. '       ' → logprob: -6.602847099304199
    5. '   ' → logprob: -7.477847099304199
    6. '    ' → logprob: -10.2278470993042
    7. '#' → logprob: -10.9778470993042
    8. '3' → logprob: -10.9778470993042
    9. '        ' → logprob: -10.9778470993042
    10. ':' → logprob: -11.9778470993042

Token 988: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00024203950306400657
    2. '1' → logprob: -9.375242233276367
    3. '       ' → logprob: -9.625242233276367
    4. '   ' → logprob: -10.000242233276367
    5. ' ' → logprob: -10.250242233276367
    6. '#' → logprob: -12.875242233276367
    7. '```' → logprob: -13.375242233276367
    8. ':' → logprob: -13.625242233276367
    9. '=' → logprob: -13.875242233276367
    10. '           ' → logprob: -14.125242233276367

Token 989: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06379001587629318
    2. '       ' → logprob: -2.8137900829315186
    3. '#' → logprob: -6.6887898445129395
    4. '   ' → logprob: -7.8137898445129395
    5. '
' → logprob: -9.938790321350098
    6. '        ' → logprob: -10.938790321350098
    7. '           ' → logprob: -10.938790321350098
    8. 'def' → logprob: -11.188790321350098
    9. '=' → logprob: -11.313790321350098
    10. ' #' → logprob: -11.813790321350098

Token 990: ' Find' (ID: 9764)
  Prédit: 'finder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'finder' → logprob: -0.00899034459143877
    2. ' finder' → logprob: -5.383990287780762
    3. 'cf' → logprob: -6.258990287780762
    4. 'component' → logprob: -6.508990287780762
    5. 'find' → logprob: -7.758990287780762
    6. 'components' → logprob: -7.758990287780762
    7. 'comp' → logprob: -10.383990287780762
    8. '       ' → logprob: -10.508990287780762
    9. ' cf' → logprob: -11.383990287780762
    10. ' components' → logprob: -11.633990287780762

Token 991: ' connected' (ID: 12079)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.038164395838975906
    2. ' components' → logprob: -3.2881643772125244
    3. 'self' → logprob: -9.788164138793945
    4. '       ' → logprob: -11.038164138793945
    5. ' self' → logprob: -11.038164138793945
    6. '_components' → logprob: -11.163164138793945
    7. '   ' → logprob: -12.163164138793945
    8. 'all' → logprob: -12.288164138793945
    9. 'connected' → logprob: -12.538164138793945
    10. '.components' → logprob: -13.288164138793945

Token 992: ' components' (ID: 10674)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.18562856316566467
    2. '_components' → logprob: -1.9356285333633423
    3. ' components' → logprob: -3.685628652572632
    4. '   ' → logprob: -13.685628890991211
    5. '_' → logprob: -14.685628890991211
    6. '.components' → logprob: -14.935628890991211
    7. 'Components' → logprob: -15.185628890991211
    8. 'self' → logprob: -15.685628890991211
    9. 'component' → logprob: -15.810628890991211
    10. '#' → logprob: -15.810628890991211

Token 993: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03037514165043831
    2. '
' → logprob: -3.9053752422332764
    3. 'finder' → logprob: -4.655375003814697
    4. ' finder' → logprob: -8.905375480651855
    5. 'component' → logprob: -9.530375480651855
    6. '        
' → logprob: -10.280375480651855
    7. '           ' → logprob: -11.905375480651855
    8. 'find' → logprob: -12.280375480651855
    9. '   ' → logprob: -12.405375480651855
    10. '```' → logprob: -12.405375480651855

Token 994: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007169028278440237
    2. 'finder' → logprob: -5.132169246673584
    3. ' finder' → logprob: -7.382169246673584
    4. '
' → logprob: -8.007168769836426
    5. 'component' → logprob: -9.007168769836426
    6. '   ' → logprob: -9.632168769836426
    7. 'cf' → logprob: -10.007168769836426
    8. ' component' → logprob: -10.757168769836426
    9. '```' → logprob: -11.882168769836426
    10. '           ' → logprob: -12.132168769836426

Token 995: ' finder' (ID: 61306)
  Prédit: 'finder'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finder' (adapté à ' finder') → logprob: -0.004534080624580383
    2. 'cf' → logprob: -5.5045342445373535
    3. 'component' → logprob: -8.004533767700195
    4. ' finder' → logprob: -9.879533767700195
    5. 'find' → logprob: -10.379533767700195
    6. 'comp' → logprob: -10.629533767700195
    7. '       ' → logprob: -12.004533767700195
    8. '   ' → logprob: -12.129533767700195
    9. ' cf' → logprob: -13.629533767700195
    10. 'c' → logprob: -13.879533767700195

Token 996: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815134845674038
    2. '=' → logprob: -4.01815128326416
    3. '       ' → logprob: -13.76815128326416
    4. '   ' → logprob: -15.39315128326416
    5. '=self' → logprob: -15.89315128326416
    6. ' =
' → logprob: -17.018152236938477
    7. '=
' → logprob: -17.268152236938477
    8. '           ' → logprob: -17.393152236938477
    9. ' ' → logprob: -17.768152236938477
    10. '        ' → logprob: -18.143152236938477

Token 997: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005234832875430584
    2. ' self' → logprob: -5.255234718322754
    3. '       ' → logprob: -13.880234718322754
    4. 'Number' → logprob: -15.630234718322754
    5. '   ' → logprob: -16.88023567199707
    6. '(self' → logprob: -18.38023567199707
    7. '=self' → logprob: -19.50523567199707
    8. '           ' → logprob: -19.63023567199707
    9. ' Number' → logprob: -19.88023567199707
    10. '	self' → logprob: -20.13023567199707

Token 998: '.Component' (ID: 10535)
  Prédit: '.Component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Component' → logprob: -1.9504606825648807e-05
    2. 'Component' → logprob: -11.500019073486328
    3. '.Number' → logprob: -11.750019073486328
    4. 'self' → logprob: -13.500019073486328
    5. '.Comp' → logprob: -17.125019073486328
    6. '.Components' → logprob: -17.250019073486328
    7. '.Class' → logprob: -17.750019073486328
    8. 'Number' → logprob: -17.750019073486328
    9. '.Graph' → logprob: -17.875019073486328
    10. '<Component' → logprob: -18.750019073486328

Token 999: 'Finder' (ID: 42976)
  Prédit: 'Finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Finder' → logprob: -4.320199877838604e-07
    2. 'Find' → logprob: -16.0
    3. 'finder' → logprob: -16.125
    4. 'Fetcher' → logprob: -16.5
    5. 'F' → logprob: -16.75
    6. ' Finder' → logprob: -17.0
    7. ' finder' → logprob: -19.125
    8. '
' → logprob: -19.625
    9. 'Founder' → logprob: -19.625
    10. 'Solver' → logprob: -20.125

Token 1000: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -14.000001907348633
    3. '       ' → logprob: -14.625001907348633
    4. 'self' → logprob: -15.375001907348633
    5. '(
' → logprob: -17.250001907348633
    6. ' (' → logprob: -18.000001907348633
    7. '(this' → logprob: -18.875001907348633
    8. '   ' → logprob: -19.000001907348633
    9. '=self' → logprob: -20.250001907348633
    10. '```' → logprob: -20.250001907348633

Token 1001: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -8.423219696851447e-05
    2. 'adj' → logprob: -9.500083923339844
    3. 'self' → logprob: -12.125083923339844
    4. ' .' → logprob: -13.125083923339844
    5. '   ' → logprob: -14.875083923339844
    6. '_adj' → logprob: -15.375083923339844
    7. '.' → logprob: -15.625083923339844
    8. ').' → logprob: -15.875083923339844
    9. '```' → logprob: -15.875083923339844
    10. ' adj' → logprob: -16.000083923339844

Token 1002: 'j' (ID: 73)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.31373804807662964
    2. 'j' → logprob: -1.3137381076812744
    3. 'list' → logprob: -7.938737869262695
    4. 'adj' → logprob: -9.438737869262695
    5. 'List' → logprob: -10.938737869262695
    6. 'jac' → logprob: -11.688737869262695
    7. 'd' → logprob: -12.688737869262695
    8. '_j' → logprob: -13.063737869262695
    9. 'J' → logprob: -13.438737869262695
    10. '_LIST' → logprob: -13.813737869262695

Token 1003: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.3856492842023727e-06
    2. 'List' → logprob: -13.875000953674316
    3. 'list' → logprob: -15.000000953674316
    4. '\' → logprob: -19.125001907348633
    5. '   ' → logprob: -19.875001907348633
    6. '_LIST' → logprob: -20.000001907348633
    7. '_l' → logprob: -20.250001907348633
    8. '       ' → logprob: -20.375001907348633
    9. '_lists' → logprob: -20.500001907348633
    10. '-list' → logprob: -20.625001907348633

Token 1004: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10116426646709442
    2. ')' → logprob: -2.3511643409729004
    3. '       ' → logprob: -7.1011643409729
    4. '())
' → logprob: -9.601163864135742
    5. ')
' → logprob: -10.226163864135742
    6. '()
' → logprob: -11.226163864135742
    7. '()' → logprob: -12.226163864135742
    8. '   ' → logprob: -12.351163864135742
    9. '())' → logprob: -13.351163864135742
    10. ')

' → logprob: -13.351163864135742

Token 1005: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6452133655548096
    2. 'components' → logprob: -0.7702133655548096
    3. 'result' → logprob: -5.0202131271362305
    4. 'found' → logprob: -6.0202131271362305
    5. 'self' → logprob: -6.3952131271362305
    6. 'find' → logprob: -7.5202131271362305
    7. 'results' → logprob: -7.8952131271362305
    8. 'finder' → logprob: -7.8952131271362305
    9. ' components' → logprob: -8.27021312713623
    10. 'component' → logprob: -9.02021312713623

Token 1006: ' components' (ID: 10674)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' (adapté à ' components') → logprob: -0.13739193975925446
    2. 'self' → logprob: -2.137392044067383
    3. 'com' → logprob: -4.637392044067383
    4. '       ' → logprob: -7.762392044067383
    5. 'comp' → logprob: -9.387392044067383
    6. ' comps' → logprob: -9.512392044067383
    7. 'component' → logprob: -9.762392044067383
    8. ' components' → logprob: -11.012392044067383
    9. 'result' → logprob: -11.137392044067383
    10. 'found' → logprob: -11.512392044067383

Token 1007: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2046363204717636
    2. ' =' → logprob: -1.7046363353729248
    3. '.append' → logprob: -6.454636096954346
    4. '.extend' → logprob: -6.829636096954346
    5. '.' → logprob: -8.204636573791504
    6. '       ' → logprob: -9.454636573791504
    7. '=[]' → logprob: -9.579636573791504
    8. '=find' → logprob: -10.079636573791504
    9. '           ' → logprob: -10.204636573791504
    10. '.clear' → logprob: -10.954636573791504

Token 1008: ' finder' (ID: 61306)
  Prédit: 'finder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finder' → logprob: -0.0002614550176076591
    2. ' finder' → logprob: -8.250261306762695
    3. 'found' → logprob: -16.000261306762695
    4. 'find' → logprob: -17.375261306762695
    5. '   ' → logprob: -18.750261306762695
    6. 'Finder' → logprob: -20.250261306762695
    7. '
' → logprob: -20.375261306762695
    8. 'f' → logprob: -20.625261306762695
    9. '       ' → logprob: -20.625261306762695
    10. '           ' → logprob: -20.750261306762695

Token 1009: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.00599717115983367
    2. 'find' → logprob: -5.130997180938721
    3. '.' → logprob: -10.380996704101562
    4. '=find' → logprob: -11.005996704101562
    5. 'components' → logprob: -11.755996704101562
    6. '.components' → logprob: -12.630996704101562
    7. '           ' → logprob: -12.755996704101562
    8. '       ' → logprob: -12.880996704101562
    9. '.findall' → logprob: -13.755996704101562
    10. ' find' → logprob: -14.005996704101562

Token 1010: '_components' (ID: 55324)
  Prédit: '_components'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_components' → logprob: -1.6240566083070007e-06
    2. 'components' → logprob: -13.625001907348633
    3. '_component' → logprob: -16.375001907348633
    4. '_connections' → logprob: -16.625001907348633
    5. '_nodes' → logprob: -17.125001907348633
    6. '_' → logprob: -17.375001907348633
    7. '
' → logprob: -17.625001907348633
    8. '```' → logprob: -18.250001907348633
    9. '_comp' → logprob: -18.375001907348633
    10. '_elements' → logprob: -18.625001907348633

Token 1011: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6735658049583435
    2. '
' → logprob: -0.9235658049583435
    3. '()
' → logprob: -2.4235658645629883
    4. '()' → logprob: -6.298565864562988
    5. '        
' → logprob: -6.923565864562988
    6. 'return' → logprob: -6.923565864562988
    7. '#' → logprob: -8.423565864562988
    8. '[]
' → logprob: -9.048565864562988
    9. 'for' → logprob: -10.173565864562988
    10. '```' → logprob: -10.548565864562988

Token 1012: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05462000146508217
    2. '
' → logprob: -3.5546200275421143
    3. 'result' → logprob: -4.179619789123535
    4. '        
' → logprob: -4.929619789123535
    5. 'count' → logprob: -7.554619789123535
    6. '   ' → logprob: -7.679619789123535
    7. 'total' → logprob: -7.929619789123535
    8. '    
' → logprob: -8.679619789123535
    9. 'results' → logprob: -8.679619789123535
    10. '```' → logprob: -8.929619789123535

Token 1013: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.04914897307753563
    2. 'res' → logprob: -3.2991490364074707
    3. '       ' → logprob: -5.424149036407471
    4. 'total' → logprob: -5.424149036407471
    5. 'count' → logprob: -6.424149036407471
    6. 'answer' → logprob: -8.549148559570312
    7. 'results' → logprob: -8.674148559570312
    8. '#' (adapté à ' #') → logprob: -9.424148559570312
    9. 'ans' → logprob: -9.674148559570312
    10. 'counts' → logprob: -10.424148559570312

Token 1014: ' Step' (ID: 22291)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.09730494022369385
    2. 'res' → logprob: -2.4723048210144043
    3. 'total' → logprob: -5.597304821014404
    4. 'count' → logprob: -6.597304821014404
    5. '       ' → logprob: -7.097304821014404
    6. 'answer' → logprob: -7.097304821014404
    7. 'ans' → logprob: -7.347304821014404
    8. '#' → logprob: -7.972304821014404
    9. 'mod' → logprob: -8.472305297851562
    10. 'results' → logprob: -8.847305297851562

Token 1015: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2812363803386688
    2. ' ' → logprob: -1.5312364101409912
    3. '2' → logprob: -3.656236410140991
    4. '3' → logprob: -5.906236171722412
    5. '   ' → logprob: -8.90623664855957
    6. '       ' → logprob: -9.15623664855957
    7. '#' → logprob: -10.15623664855957
    8. '0' → logprob: -11.90623664855957
    9. '  ' → logprob: -12.15623664855957
    10. '_' → logprob: -12.15623664855957

Token 1016: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.03175866976380348
    2. '2' → logprob: -3.7817587852478027
    3. '1' → logprob: -4.781758785247803
    4. 'step' → logprob: -10.156758308410645
    5. '   ' → logprob: -10.781758308410645
    6. '0' → logprob: -11.406758308410645
    7. 'Step' → logprob: -11.406758308410645
    8. ' ' → logprob: -12.281758308410645
    9. '
' → logprob: -13.156758308410645
    10. '```' → logprob: -13.156758308410645

Token 1017: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15008485317230225
    2. ':' → logprob: -2.025084972381592
    3. '
' → logprob: -5.150084972381592
    4. '   ' → logprob: -7.900084972381592
    5. '_count' → logprob: -8.400084495544434
    6. '```' → logprob: -8.775084495544434
    7. 'count' → logprob: -8.900084495544434
    8. ':
' → logprob: -9.025084495544434
    9. '        
' → logprob: -9.400084495544434
    10. '#' → logprob: -9.525084495544434

Token 1018: ' For' (ID: 2214)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.20770204067230225
    2. 'total' → logprob: -2.582702159881592
    3. 'res' → logprob: -3.207702159881592
    4. 'counter' → logprob: -3.332702159881592
    5. 'count' → logprob: -3.457702159881592
    6. 'answer' → logprob: -6.332702159881592
    7. 'ans' → logprob: -6.707702159881592
    8. 'mod' → logprob: -7.207702159881592
    9. 'from' → logprob: -8.082701683044434
    10. 'cnt' → logprob: -9.957701683044434

Token 1019: ' each' (ID: 2454)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.12172878533601761
    2. ' comp' → logprob: -2.8717288970947266
    3. 'component' → logprob: -2.8717288970947266
    4. ' component' → logprob: -6.871728897094727
    5. 'c' → logprob: -8.121728897094727
    6. ' c' → logprob: -9.996728897094727
    7. 'each' → logprob: -10.996728897094727
    8. '	comp' → logprob: -12.246728897094727
    9. '   ' → logprob: -12.621728897094727
    10. ' each' → logprob: -13.121728897094727

Token 1020: ' component' (ID: 6392)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.13030824065208435
    2. 'component' → logprob: -2.130308151245117
    3. ' comp' → logprob: -5.755308151245117
    4. ' component' → logprob: -9.005308151245117
    5. 'c' → logprob: -9.505308151245117
    6. '	comp' → logprob: -12.630308151245117
    7. '       ' → logprob: -12.880308151245117
    8. 'cmp' → logprob: -13.005308151245117
    9. '   ' → logprob: -13.755308151245117
    10. 'com' → logprob: -13.880308151245117

Token 1021: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8663709163665771
    2. '           ' → logprob: -1.1163709163665771
    3. ':' → logprob: -2.116370916366577
    4. 'result' → logprob: -2.991370916366577
    5. 'count' → logprob: -3.366370916366577
    6. ',' → logprob: -3.866370916366577
    7. ':
' → logprob: -4.741371154785156
    8. 'counter' → logprob: -5.116371154785156
    9. 'total' → logprob: -6.116371154785156
    10. ' result' → logprob: -6.366371154785156

Token 1022: ' independent' (ID: 13313)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.23662160336971283
    2. ' independent' → logprob: -2.986621618270874
    3. '_ind' → logprob: -3.611621618270874
    4. 'the' → logprob: -3.736621618270874
    5. 'all' → logprob: -3.736621618270874
    6. ' the' → logprob: -4.111621379852295
    7. '       ' → logprob: -4.486621379852295
    8. '   ' → logprob: -4.736621379852295
    9. 'component' → logprob: -4.986621379852295
    10. 'possible' → logprob: -5.236621379852295

Token 1023: ' sets' (ID: 11982)
  Prédit: 'sets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sets' → logprob: -0.09559308737516403
    2. ' sets' → logprob: -2.845592975616455
    3. '_sets' → logprob: -3.845592975616455
    4. 'set' → logprob: -4.595592975616455
    5. '_set' → logprob: -6.470592975616455
    6. ' set' → logprob: -10.095593452453613
    7. '       ' → logprob: -13.220593452453613
    8. '   ' → logprob: -13.220593452453613
    9. 'Sets' → logprob: -13.970593452453613
    10. '_' → logprob: -14.720593452453613

Token 1024: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08014720678329468
    2. '
' → logprob: -3.2051472663879395
    3. 'result' → logprob: -3.4551472663879395
    4. 'total' → logprob: -5.9551472663879395
    5. 'count' → logprob: -7.0801472663879395
    6. ' result' → logprob: -7.8301472663879395
    7. '        
' → logprob: -8.330146789550781
    8. 'results' → logprob: -8.580146789550781
    9. 'res' → logprob: -8.705146789550781
    10. ' =' → logprob: -9.455146789550781

Token 1025: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022551774978637695
    2. 'result' → logprob: -3.8975517749786377
    3. '
' → logprob: -7.022551536560059
    4. ' result' → logprob: -8.022551536560059
    5. 'total' → logprob: -8.022551536560059
    6. 'results' → logprob: -8.772551536560059
    7. '        
' → logprob: -9.772551536560059
    8. 'res' → logprob: -9.772551536560059
    9. '           ' → logprob: -9.897551536560059
    10. 'count' → logprob: -9.897551536560059

Token 1026: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0039247567765414715
    2. 'res' → logprob: -6.00392484664917
    3. 'total' → logprob: -6.75392484664917
    4. '       ' → logprob: -8.503924369812012
    5. 'count' → logprob: -10.503924369812012
    6. 'answer' → logprob: -10.753924369812012
    7. ' result' → logprob: -10.753924369812012
    8. 'ans' → logprob: -12.128924369812012
    9. 'results' → logprob: -13.253924369812012
    10. '```' → logprob: -14.378924369812012

Token 1027: ' number' (ID: 2086)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.04358390346169472
    2. '       ' → logprob: -3.543583869934082
    3. 'res' → logprob: -4.543583869934082
    4. 'total' → logprob: -5.918583869934082
    5. 'count' → logprob: -8.668583869934082
    6. 'answer' → logprob: -8.793583869934082
    7. ' result' → logprob: -10.293583869934082
    8. 'ans' → logprob: -10.918583869934082
    9. 'results' → logprob: -11.418583869934082
    10. '   ' → logprob: -11.668583869934082

Token 1028: ' of' (ID: 328)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.18155895173549652
    2. 'result' → logprob: -3.181558847427368
    3. '_result' → logprob: -3.431558847427368
    4. 'of' → logprob: -3.431558847427368
    5. '       ' → logprob: -3.556558847427368
    6. '=' → logprob: -4.056559085845947
    7. ' =' → logprob: -5.431559085845947
    8. '   ' → logprob: -6.556559085845947
    9. 's' → logprob: -6.681559085845947
    10. '_' → logprob: -6.681559085845947

Token 1029: ' valid' (ID: 4529)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.6852099299430847
    2. ' ways' → logprob: -0.9352099299430847
    3. 'result' → logprob: -3.1852099895477295
    4. 'components' → logprob: -4.43520975112915
    5. 'valid' → logprob: -4.43520975112915
    6. 'ind' → logprob: -4.81020975112915
    7. '_' → logprob: -4.93520975112915
    8. 'res' → logprob: -5.06020975112915
    9. ' =' → logprob: -5.93520975112915
    10. '=' → logprob: -6.43520975112915

Token 1030: ' subsets' (ID: 165377)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.2773193120956421
    2. 'sub' → logprob: -2.1523194313049316
    3. '_' → logprob: -3.0273194313049316
    4. '_sets' → logprob: -3.1523194313049316
    5. 'sets' → logprob: -4.152319431304932
    6. 'ways' → logprob: -4.902319431304932
    7. ' ways' → logprob: -6.152319431304932
    8. '_se' → logprob: -6.652319431304932
    9. '_choices' → logprob: -6.652319431304932
    10. '_ind' → logprob: -6.902319431304932

Token 1031: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41315361857414246
    2. 'result' → logprob: -1.1631536483764648
    3. '
' → logprob: -4.038153648376465
    4. ' result' → logprob: -5.288153648376465
    5. 'res' → logprob: -6.913153648376465
    6. 'total' → logprob: -6.913153648376465
    7. '        
' → logprob: -7.538153648376465
    8. '```' → logprob: -8.663153648376465
    9. '_result' → logprob: -9.038153648376465
    10. 'count' → logprob: -9.163153648376465

Token 1032: ' product' (ID: 1888)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011708177626132965
    2. 'result' → logprob: -7.251170635223389
    3. ' ' → logprob: -8.376171112060547
    4. '       ' → logprob: -9.251171112060547
    5. '   ' → logprob: -10.251171112060547
    6. 'ans' → logprob: -10.376171112060547
    7. 'res' → logprob: -10.501171112060547
    8. ' result' → logprob: -11.876171112060547
    9. 'total' → logprob: -12.126171112060547
    10. '(' → logprob: -12.251171112060547

Token 1033: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1878165006637573
    2. '(' → logprob: -1.8128165006637573
    3. '(
' → logprob: -2.062816619873047
    4. '(len' → logprob: -2.312816619873047
    5. ' of' → logprob: -2.812816619873047
    6. '```' → logprob: -3.062816619873047
    7. 'of' → logprob: -3.187816619873047
    8. ' (' → logprob: -3.437816619873047
    9. '_of' → logprob: -3.562816619873047
    10. ' =' → logprob: -4.062816619873047

Token 1034: ' count' (ID: 3605)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7128643989562988
    2. 'self' → logprob: -1.7128643989562988
    3. '[self' → logprob: -2.212864398956299
    4. '(len' → logprob: -3.087864398956299
    5. '(' → logprob: -3.712864398956299
    6. 'counts' → logprob: -3.712864398956299
    7. '[(' → logprob: -3.962864398956299
    8. 'count' → logprob: -3.962864398956299
    9. '[' → logprob: -4.087864398956299
    10. '(count' → logprob: -4.337864398956299

Token 1035: '_of' (ID: 8023)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4214332699775696
    2. '_ind' → logprob: -1.6714332103729248
    3. '(' → logprob: -2.546433210372925
    4. ' =' → logprob: -3.296433210372925
    5. '_' → logprob: -4.296433448791504
    6. '(
' → logprob: -4.921433448791504
    7. '=' → logprob: -5.296433448791504
    8. 'of' → logprob: -6.046433448791504
    9. '_of' → logprob: -6.296433448791504
    10. '[' → logprob: -6.546433448791504

Token 1036: '_ind' (ID: 20261)
  Prédit: '_ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ind' → logprob: -0.5324286222457886
    2. 'ind' → logprob: -0.9074286222457886
    3. 's' → logprob: -5.157428741455078
    4. '(ind' → logprob: -6.282428741455078
    5. ' independent' → logprob: -7.032428741455078
    6. '[ind' → logprob: -9.032428741455078
    7. '
' → logprob: -9.532428741455078
    8. '(' → logprob: -9.532428741455078
    9. 'ing' → logprob: -10.157428741455078
    10. 'ed' → logprob: -10.282428741455078

Token 1037: 'ependent' (ID: 66362)
  Prédit: 'ependent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ependent' → logprob: -0.008896882645785809
    2. 'ep' → logprob: -4.883896827697754
    3. 'pendent' → logprob: -6.758896827697754
    4. '[' → logprob: -10.258896827697754
    5. 'epend' → logprob: -10.758896827697754
    6. 'endent' → logprob: -11.008896827697754
    7. '{' → logprob: -11.508896827697754
    8. 'e' → logprob: -11.633896827697754
    9. 'dependent' → logprob: -11.633896827697754
    10. 'ividual' → logprob: -12.508896827697754

Token 1038: '_sets' (ID: 56707)
  Prédit: 'sets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sets' → logprob: -0.16061636805534363
    2. '_sets' → logprob: -1.910616397857666
    3. 'set' → logprob: -8.160615921020508
    4. '_set' → logprob: -9.785615921020508
    5. ' sets' → logprob: -10.785615921020508
    6. 'sub' → logprob: -11.035615921020508
    7. '_sub' → logprob: -11.535615921020508
    8. 'Sets' → logprob: -13.785615921020508
    9. '```' → logprob: -14.035615921020508
    10. 's' → logprob: -14.285615921020508

Token 1039: ' over' (ID: 1072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5653543472290039
    2. '(
' → logprob: -2.190354347229004
    3. ' =' → logprob: -2.315354347229004
    4. '(' → logprob: -2.815354347229004
    5. '_of' → logprob: -3.690354347229004
    6. ' for' → logprob: -3.815354347229004
    7. '
' → logprob: -4.190354347229004
    8. '=' → logprob: -4.315354347229004
    9. '   ' → logprob: -4.440354347229004
    10. 'for' → logprob: -4.565354347229004

Token 1040: ' components' (ID: 10674)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.03383956477046013
    2. ' components' → logprob: -3.783839464187622
    3. 'all' → logprob: -5.033839702606201
    4. ' all' → logprob: -6.408839702606201
    5. 'component' → logprob: -6.783839702606201
    6. 'self' → logprob: -7.408839702606201
    7. 'each' → logprob: -7.783839702606201
    8. '   ' → logprob: -9.283839225769043
    9. ' self' → logprob: -9.908839225769043
    10. ' each' → logprob: -10.283839225769043

Token 1041: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05724726617336273
    2. 'result' → logprob: -2.9322471618652344
    3. ' result' → logprob: -6.807247161865234
    4. '
' → logprob: -7.557247161865234
    5. 'count' → logprob: -8.057247161865234
    6. '        
' → logprob: -9.057247161865234
    7. '```' → logprob: -9.682247161865234
    8. 'res' → logprob: -9.932247161865234
    9. '   ' → logprob: -9.932247161865234
    10. 'total' → logprob: -10.182247161865234

Token 1042: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4324449896812439
    2. 'result' → logprob: -1.0574450492858887
    3. 'res' → logprob: -6.182445049285889
    4. ' result' → logprob: -7.932445049285889
    5. '```' → logprob: -8.18244457244873
    6. '
' → logprob: -8.30744457244873
    7. 'product' → logprob: -8.30744457244873
    8. '   ' → logprob: -8.43244457244873
    9. 'total' → logprob: -9.05744457244873
    10. 'count' → logprob: -9.30744457244873

Token 1043: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.04101920872926712
    2. '       ' → logprob: -3.5410192012786865
    3. 'res' → logprob: -4.541019439697266
    4. ' result' → logprob: -8.166019439697266
    5. '```' → logprob: -9.291019439697266
    6. 'total' → logprob: -9.916019439697266
    7. 'count' → logprob: -10.541019439697266
    8. 'answer' → logprob: -11.041019439697266
    9. 'ans' → logprob: -11.041019439697266
    10. '   ' → logprob: -11.166019439697266

Token 1044: ' minus' (ID: 40335)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.021476687863469124
    2. '       ' → logprob: -4.021476745605469
    3. 'res' → logprob: -5.771476745605469
    4. ' result' → logprob: -9.521476745605469
    5. 'total' → logprob: -10.146476745605469
    6. '
' → logprob: -10.396476745605469
    7. '   ' → logprob: -10.521476745605469
    8. 'answer' → logprob: -11.146476745605469
    9. '```' → logprob: -12.271476745605469
    10. 'product' → logprob: -12.271476745605469

Token 1045: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1269853264093399
    2. ' ' → logprob: -2.1269853115081787
    3. ' one' → logprob: -10.126985549926758
    4. '   ' → logprob: -11.251985549926758
    5. '
' → logprob: -13.501985549926758
    6. '```' → logprob: -13.876985549926758
    7. 'one' → logprob: -14.751985549926758
    8. '       ' → logprob: -14.876985549926758
    9. 'One' → logprob: -15.126985549926758
    10. '    ' → logprob: -15.501985549926758

Token 1046: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -12.125015258789062
    3. 'one' → logprob: -12.500015258789062
    4. ' one' → logprob: -12.875015258789062
    5. '
' → logprob: -13.375015258789062
    6. '```' → logprob: -13.875015258789062
    7. '   ' → logprob: -14.500015258789062
    8. 'One' → logprob: -16.125015258789062
    9. '_one' → logprob: -17.000015258789062
    10. '       ' → logprob: -17.875015258789062

Token 1047: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5135130882263184
    2. '
' → logprob: -1.0135130882263184
    3. 'result' → logprob: -3.7635130882263184
    4. '        
' → logprob: -4.388513088226318
    5. ' result' → logprob: -6.763513088226318
    6. '    
' → logprob: -7.638513088226318
    7. 'import' → logprob: -7.638513088226318
    8. 'product' → logprob: -8.513513565063477
    9. 'total' → logprob: -9.138513565063477
    10. '   ' → logprob: -9.388513565063477

Token 1048: 'the' (ID: 3086)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0690019428730011
    2. ' for' → logprob: -2.9440019130706787
    3. ' )' → logprob: -4.819002151489258
    4. ' to' → logprob: -5.819002151489258
    5. ')
' → logprob: -7.194002151489258
    6. 'for' → logprob: -7.194002151489258
    7. 'self' → logprob: -8.319002151489258
    8. '       ' → logprob: -8.444002151489258
    9. '```' → logprob: -8.444002151489258
    10. '1' → logprob: -8.944002151489258

Token 1049: ' empty' (ID: 8213)
  Prédit: ' empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' empty' → logprob: -0.005249056499451399
    2. 'empty' → logprob: -5.2552490234375
    3. '(empty' → logprob: -12.6302490234375
    4. '_empty' → logprob: -12.8802490234375
    5. ' whole' → logprob: -13.2552490234375
    6. ' ' → logprob: -13.5052490234375
    7. ' entire' → logprob: -13.6302490234375
    8. '   ' → logprob: -13.8802490234375
    9. '
' → logprob: -14.1302490234375
    10. ' full' → logprob: -14.3802490234375

Token 1050: ' subset' (ID: 58845)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5108171701431274
    2. 'set' → logprob: -1.2608171701431274
    3. ' set' → logprob: -2.510817050933838
    4. '_set' → logprob: -3.385817050933838
    5. ' subset' → logprob: -7.135817050933838
    6. ')' → logprob: -8.135817527770996
    7. ' _' → logprob: -9.135817527770996
    8. '_subset' → logprob: -9.135817527770996
    9. ' ' → logprob: -9.510817527770996
    10. 'subset' → logprob: -9.760817527770996

Token 1051: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0027878843247890472
    2. ')
' → logprob: -6.002788066864014
    3. ' )' → logprob: -8.377787590026855
    4. '   ' → logprob: -11.127787590026855
    5. '       ' → logprob: -11.252787590026855
    6. ').' → logprob: -11.502787590026855
    7. ')`' → logprob: -11.752787590026855
    8. ' ' → logprob: -12.252787590026855
    9. ')

' → logprob: -12.502787590026855
    10. ')
' → logprob: -12.752787590026855

Token 1052: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1336934119462967
    2. 'result' → logprob: -2.1336934566497803
    3. '
' → logprob: -5.258693218231201
    4. 'res' → logprob: -7.883693218231201
    5. '   ' → logprob: -8.25869369506836
    6. ' result' → logprob: -8.38369369506836
    7. '        
' → logprob: -8.38369369506836
    8. '```' → logprob: -8.38369369506836
    9. 'total' → logprob: -9.50869369506836
    10. 'product' → logprob: -10.00869369506836

Token 1053: ' mod' (ID: 1812)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.13885563611984253
    2. '       ' → logprob: -2.1388556957244873
    3. 'res' → logprob: -4.513855457305908
    4. ' result' → logprob: -7.638855457305908
    5. '```' → logprob: -8.888855934143066
    6. '
' → logprob: -9.513855934143066
    7. 'total' → logprob: -9.763855934143066
    8. '   ' → logprob: -10.013855934143066
    9. 'product' → logprob: -10.138855934143066
    10. 'count' → logprob: -10.513855934143066

Token 1054: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47412437200546265
    2. ' =' → logprob: -0.9741243720054626
    3. '=
' → logprob: -10.97412395477295
    4. ' =
' → logprob: -11.09912395477295
    5. '=self' → logprob: -11.34912395477295
    6. ':' → logprob: -13.84912395477295
    7. ',' → logprob: -14.59912395477295
    8. '```' → logprob: -15.22412395477295
    9. '=int' → logprob: -15.47412395477295
    10. '   ' → logprob: -15.47412395477295

Token 1055: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01824898272752762
    2. ' self' → logprob: -4.018249034881592
    3. '10' → logprob: -10.018248558044434
    4. '       ' → logprob: -10.143248558044434
    5. '100' → logprob: -12.018248558044434
    6. '1' → logprob: -12.768248558044434
    7. '(self' → logprob: -13.393248558044434
    8. '   ' → logprob: -13.393248558044434
    9. '        
' → logprob: -14.018248558044434
    10. '
' → logprob: -14.643248558044434

Token 1056: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.19702176749706268
    2. 'p' → logprob: -1.822021722793579
    3. 'self' → logprob: -4.572021961212158
    4. ' p' → logprob: -5.822021961212158
    5. '.' → logprob: -6.447021961212158
    6. ' self' → logprob: -6.947021961212158
    7. '10' → logprob: -7.572021961212158
    8. '```' → logprob: -9.072021484375
    9. '   ' → logprob: -9.197021484375
    10. '
' → logprob: -9.322021484375

Token 1057: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004846734460443258
    2. '       ' → logprob: -5.754846572875977
    3. '        
' → logprob: -7.004846572875977
    4. '
' → logprob: -7.504846572875977
    5. '    
' → logprob: -10.379846572875977
    6. 'result' → logprob: -10.504846572875977
    7. '```' → logprob: -10.754846572875977
    8. '*' → logprob: -11.004846572875977
    9. '**' → logprob: -11.254846572875977
    10. ' 
' → logprob: -11.254846572875977

Token 1058: '       ' (ID: 309)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5816160440444946
    2. '       ' → logprob: -0.8316160440444946
    3. 'res' → logprob: -5.831615924835205
    4. ' result' → logprob: -6.081615924835205
    5. 'total' → logprob: -8.456616401672363
    6. '   ' → logprob: -9.581616401672363
    7. 'product' → logprob: -9.831616401672363
    8. 'count' → logprob: -10.081616401672363
    9. 'answer' → logprob: -11.206616401672363
    10. ' res' → logprob: -11.456616401672363

Token 1059: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.0020766248926520348
    2. 'res' → logprob: -6.502076625823975
    3. '       ' → logprob: -7.627076625823975
    4. 'answer' → logprob: -10.127076148986816
    5. 'total' → logprob: -10.627076148986816
    6. 'ans' → logprob: -11.752076148986816
    7. 'count' → logprob: -12.127076148986816
    8. ' result' → logprob: -12.252076148986816
    9. '```' → logprob: -12.752076148986816
    10. '   ' → logprob: -14.127076148986816

Token 1060: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11286693066358566
    2. '=' → logprob: -2.2378668785095215
    3. ' *=' → logprob: -10.23786735534668
    4. ')' → logprob: -13.11286735534668
    5. '```' → logprob: -13.61286735534668
    6. ' ' → logprob: -14.11286735534668
    7. ' <<=' → logprob: -14.23786735534668
    8. '<|end|>' → logprob: -14.23786735534668
    9. ' =
' → logprob: -14.86286735534668
    10. ',' → logprob: -14.86286735534668

Token 1061: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000344640837283805
    2. ' ' → logprob: -8.000344276428223
    3. '       ' → logprob: -12.125344276428223
    4. '   ' → logprob: -12.500344276428223
    5. '(' → logprob: -17.00034523010254
    6. '    ' → logprob: -18.00034523010254
    7. '```' → logprob: -18.12534523010254
    8. '           ' → logprob: -18.50034523010254
    9. '        ' → logprob: -18.62534523010254
    10. '
' → logprob: -18.62534523010254

Token 1062: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '   ' → logprob: -17.75
    3. ' ' → logprob: -18.0
    4. '
' → logprob: -18.625
    5. '```' → logprob: -18.625
    6. '(' → logprob: -20.125
    7. '۱' → logprob: -20.25
    8. '       ' → logprob: -20.25
    9. 'result' → logprob: -20.375
    10. 'pow' → logprob: -20.375

Token 1063: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1281130611896515
    2. 'for' → logprob: -3.003113031387329
    3. ' for' → logprob: -3.128113031387329
    4. '
' → logprob: -3.753113031387329
    5. '        
' → logprob: -6.128113269805908
    6. '   ' → logprob: -7.253113269805908
    7. '    
' → logprob: -8.75311279296875
    8. '  
' → logprob: -9.87811279296875
    9. '           ' → logprob: -10.25311279296875
    10. ' ' → logprob: -10.37811279296875

Token 1064: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2448853850364685
    2. 'for' → logprob: -1.7448854446411133
    3. ' for' → logprob: -3.2448854446411133
    4. '
' → logprob: -5.744885444641113
    5. '   ' → logprob: -8.119885444641113
    6. '        
' → logprob: -10.744885444641113
    7. '           ' → logprob: -10.994885444641113
    8. '	for' → logprob: -11.494885444641113
    9. '    
' → logprob: -12.119885444641113
    10. '```' → logprob: -12.119885444641113

Token 1065: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.013502181507647038
    2. '       ' → logprob: -4.51350212097168
    3. ' for' → logprob: -6.01350212097168
    4. '   ' → logprob: -12.26350212097168
    5. '	for' → logprob: -14.26350212097168
    6. '```' → logprob: -15.38850212097168
    7. '           ' → logprob: -15.88850212097168
    8. ' ' → logprob: -17.26350212097168
    9. '_for' → logprob: -17.51350212097168
    10. '        
' → logprob: -17.63850212097168

Token 1066: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0015052208909764886
    2. ' comp' → logprob: -6.751505374908447
    3. 'component' → logprob: -8.001504898071289
    4. ' component' → logprob: -16.75150489807129
    5. '	comp' → logprob: -19.00150489807129
    6. '   ' → logprob: -20.87650489807129
    7. 'cmp' → logprob: -20.87650489807129
    8. 'Comp' → logprob: -21.75150489807129
    9. '       ' → logprob: -21.87650489807129
    10. 'components' → logprob: -22.25150489807129

Token 1067: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0014209493529051542
    2. 'in' → logprob: -6.876420974731445
    3. '_nodes' → logprob: -9.376420974731445
    4. '       ' → logprob: -9.626420974731445
    5. '_in' → logprob: -9.876420974731445
    6. 's' → logprob: -10.001420974731445
    7. '   ' → logprob: -10.376420974731445
    8. '_' → logprob: -11.126420974731445
    9. '_tokens' → logprob: -11.126420974731445
    10. '_size' → logprob: -11.251420974731445

Token 1068: ' components' (ID: 10674)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.0011891605099663138
    2. ' components' → logprob: -7.251189231872559
    3. 'comp' → logprob: -8.251189231872559
    4. 'self' → logprob: -8.501189231872559
    5. 'range' → logprob: -12.126189231872559
    6. ' self' → logprob: -13.001189231872559
    7. 'com' → logprob: -13.376189231872559
    8. '.components' → logprob: -13.626189231872559
    9. '(' → logprob: -13.876189231872559
    10. '[' → logprob: -14.126189231872559

Token 1069: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26149481534957886
    2. ':
' → logprob: -1.7614948749542236
    3. '           ' → logprob: -2.8864948749542236
    4. ',' → logprob: -6.6364946365356445
    5. '=' → logprob: -7.8864946365356445
    6. ' =' → logprob: -8.011494636535645
    7. '):
' → logprob: -8.886494636535645
    8. '<|end|>' → logprob: -9.261494636535645
    9. '<|end|>' → logprob: -9.511494636535645
    10. '[' → logprob: -10.511494636535645

Token 1070: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00020270596724003553
    2. 'ind' → logprob: -9.625203132629395
    3. '       ' → logprob: -10.250203132629395
    4. '               ' → logprob: -10.750203132629395
    5. '          ' → logprob: -11.250203132629395
    6. '            
' → logprob: -11.750203132629395
    7. '        ' → logprob: -12.000203132629395
    8. '            ' → logprob: -12.125203132629395
    9. ' counter' → logprob: -12.125203132629395
    10. '	       ' → logprob: -12.125203132629395

Token 1071: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' (adapté à ' counter') → logprob: -0.03819733113050461
    2. ' counter' → logprob: -3.9131972789764404
    3. 'isc' → logprob: -4.4131975173950195
    4. '           ' → logprob: -5.2881975173950195
    5. 'ind' → logprob: -9.41319751739502
    6. 'c' → logprob: -9.66319751739502
    7. ' isc' → logprob: -10.03819751739502
    8. 'ic' → logprob: -10.16319751739502
    9. 'is' → logprob: -10.91319751739502
    10. 'count' → logprob: -11.03819751739502

Token 1072: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759408473968506
    2. '=' → logprob: -0.8259408473968506
    3. '.=' → logprob: -14.57594108581543
    4. '.' → logprob: -14.95094108581543
    5. '        ' → logprob: -15.82594108581543
    6. '       ' → logprob: -16.20094108581543
    7. '=
' → logprob: -16.32594108581543
    8. '＝' → logprob: -16.57594108581543
    9. '           ' → logprob: -16.70094108581543
    10. '   ' → logprob: -16.70094108581543

Token 1073: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.8921695047756657e-05
    2. ' self' → logprob: -10.500028610229492
    3. 'Number' → logprob: -13.750028610229492
    4. '           ' → logprob: -15.875028610229492
    5. '       ' → logprob: -16.500028610229492
    6. '   ' → logprob: -18.125028610229492
    7. '(self' → logprob: -19.125028610229492
    8. '               ' → logprob: -19.375028610229492
    9. '
' → logprob: -19.875028610229492
    10. ' ' → logprob: -20.125028610229492

Token 1074: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02325584553182125
    2. 'Independent' → logprob: -3.7732558250427246
    3. '.Number' → logprob: -12.148256301879883
    4. ' Independent' → logprob: -12.898256301879883
    5. 'Number' → logprob: -13.398256301879883
    6. '.In' → logprob: -15.523256301879883
    7. '.Inter' → logprob: -15.898256301879883
    8. 'Ind' → logprob: -16.023256301879883
    9. '.Internal' → logprob: -16.148256301879883
    10. '.
' → logprob: -16.398256301879883

Token 1075: 'Independent' (ID: 110917)
  Prédit: 'Independent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Independent' → logprob: -1.2664456789934775e-06
    2. ' Independent' → logprob: -13.625000953674316
    3. ' independent' → logprob: -19.125001907348633
    4. 'Number' → logprob: -19.375001907348633
    5. 'Ind' → logprob: -19.750001907348633
    6. 'Indirect' → logprob: -20.625001907348633
    7. '-independent' → logprob: -21.500001907348633
    8. 'Dependent' → logprob: -22.625001907348633
    9. 'I' → logprob: -23.250001907348633
    10. 'class' → logprob: -23.375001907348633

Token 1076: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -3.128163257315464e-07
    2. '_set' → logprob: -15.25
    3. 'set' → logprob: -17.125
    4. ' Set' → logprob: -18.875
    5. '_SET' → logprob: -19.75
    6. 'Sets' → logprob: -19.875
    7. '	Set' → logprob: -20.0
    8. '_Set' → logprob: -21.125
    9. '[' → logprob: -21.375
    10. 'S' → logprob: -22.125

Token 1077: 'Counter' (ID: 16263)
  Prédit: 'Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -6.704273118884885e-07
    2. 'Coun' → logprob: -15.000000953674316
    3. 'Count' → logprob: -16.25
    4. 'counter' → logprob: -16.5
    5. ' Counter' → logprob: -17.25
    6. '_counter' → logprob: -17.5
    7. 'ounter' → logprob: -17.625
    8. '.Counter' → logprob: -18.375
    9. 'C' → logprob: -19.25
    10. '_COUNTER' → logprob: -19.5

Token 1078: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.803360495017841e-05
    2. '(' → logprob: -9.750078201293945
    3. '(
' → logprob: -10.875078201293945
    4. 'self' → logprob: -14.500078201293945
    5. '[self' → logprob: -16.750078201293945
    6. ' (' → logprob: -16.875078201293945
    7. '       ' → logprob: -17.250078201293945
    8. ',self' → logprob: -17.250078201293945
    9. ' self' → logprob: -18.000078201293945
    10. '```' → logprob: -18.250078201293945

Token 1079: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.0004027865652460605
    2. '.graph' → logprob: -9.125402450561523
    3. '.comp' → logprob: -9.500402450561523
    4. 'adj' → logprob: -9.625402450561523
    5. 'self' → logprob: -9.750402450561523
    6. 'Graph' → logprob: -9.875402450561523
    7. '(adj' → logprob: -10.875402450561523
    8. 'graph' → logprob: -11.750402450561523
    9. '.code' → logprob: -12.500402450561523
    10. '.' → logprob: -13.500402450561523

Token 1080: 'j' (ID: 73)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.004635422490537167
    2. 'j' → logprob: -5.379635334014893
    3. '           ' → logprob: -12.12963581085205
    4. '       ' → logprob: -12.50463581085205
    5. 'd' → logprob: -13.75463581085205
    6. '   ' → logprob: -14.00463581085205
    7. 'p' → logprob: -14.00463581085205
    8. 'f' → logprob: -14.37963581085205
    9. 'list' → logprob: -14.62963581085205
    10. 'c' → logprob: -15.12963581085205

Token 1081: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0016301940195262432
    2. '           ' → logprob: -6.5016303062438965
    3. 'List' → logprob: -9.876629829406738
    4. '_counter' → logprob: -10.626629829406738
    5. '       ' → logprob: -11.251629829406738
    6. '               ' → logprob: -12.001629829406738
    7. '_set' → logprob: -12.251629829406738
    8. 'list' → logprob: -12.251629829406738
    9. '   ' → logprob: -12.376629829406738
    10. '          ' → logprob: -12.501629829406738

Token 1082: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031651611789129674
    2. '(comp' → logprob: -8.125316619873047
    3. '           ' → logprob: -11.750316619873047
    4. ' ,' → logprob: -12.125316619873047
    5. ',
' → logprob: -12.500316619873047
    6. 'comp' → logprob: -14.125316619873047
    7. '(com' → logprob: -14.375316619873047
    8. ',self' → logprob: -15.125316619873047
    9. '.comp' → logprob: -15.375316619873047
    10. ',[' → logprob: -15.375316619873047

Token 1083: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00020652047533076257
    2. ' mod' → logprob: -8.50020694732666
    3. '           ' → logprob: -12.87520694732666
    4. 'self' → logprob: -14.75020694732666
    5. '               ' → logprob: -16.500205993652344
    6. '	mod' → logprob: -18.250205993652344
    7. '                   ' → logprob: -18.750205993652344
    8. '            ' → logprob: -18.750205993652344
    9. ' self' → logprob: -19.000205993652344
    10. 'p' → logprob: -19.125205993652344

Token 1084: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10257139801979065
    2. ')' → logprob: -2.352571487426758
    3. '           ' → logprob: -6.102571487426758
    4. ')
' → logprob: -9.977571487426758
    5. '               ' → logprob: -10.852571487426758
    6. 'counter' → logprob: -10.977571487426758
    7. '(counter' → logprob: -11.227571487426758
    8. '[counter' → logprob: -11.852571487426758
    9. '.counter' → logprob: -12.602571487426758
    10. '   ' → logprob: -12.727571487426758

Token 1085: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5607993602752686
    2. '.bit' → logprob: -0.9357993602752686
    3. '.counter' → logprob: -3.9357993602752686
    4. 'bit' → logprob: -4.560799598693848
    5. 'counter' → logprob: -5.435799598693848
    6. '   ' → logprob: -7.060799598693848
    7. '.' → logprob: -7.185799598693848
    8. ' bit' → logprob: -7.810799598693848
    9. '       ' → logprob: -8.185799598693848
    10. ' counter' → logprob: -9.560799598693848

Token 1086: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' (adapté à ' counter') → logprob: -0.0017226649215444922
    2. '           ' → logprob: -7.001722812652588
    3. ' counter' → logprob: -7.126722812652588
    4. 'token' → logprob: -13.00172233581543
    5. '.counter' → logprob: -13.50172233581543
    6. '	counter' → logprob: -13.87672233581543
    7. 'count' → logprob: -14.12672233581543
    8. '   ' → logprob: -14.37672233581543
    9. '[counter' → logprob: -14.62672233581543
    10. '       ' → logprob: -15.12672233581543

Token 1087: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -3.128163257315464e-07
    2. '.' → logprob: -15.75
    3. ' .' → logprob: -17.0
    4. 'bit' → logprob: -17.125
    5. '.b' → logprob: -17.375
    6. '   ' → logprob: -17.875
    7. '.bits' → logprob: -18.0
    8. '           ' → logprob: -18.375
    9. '.bet' → logprob: -18.625
    10. '.byte' → logprob: -18.75

Token 1088: '_repr' (ID: 193246)
  Prédit: '_repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_repr' → logprob: -5.512236498361744e-07
    2. 'repr' → logprob: -15.250000953674316
    3. '_rep' → logprob: -16.125
    4. '_' → logprob: -16.875
    5. '_r' → logprob: -17.875
    6. '_re' → logprob: -18.0
    7. 's' → logprob: -18.625
    8. '\' → logprob: -18.625
    9. '_descr' → logprob: -19.375
    10. ' _' → logprob: -19.625

Token 1089: '(comp' (ID: 60272)
  Prédit: '(comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(comp' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.625000953674316
    3. '(com' → logprob: -15.125000953674316
    4. '(
' → logprob: -15.375000953674316
    5. 'comp' → logprob: -17.125001907348633
    6. '(cont' → logprob: -17.750001907348633
    7. '(c' → logprob: -18.000001907348633
    8. '(cap' → logprob: -18.875001907348633
    9. '```' → logprob: -19.125001907348633
    10. '(co' → logprob: -19.250001907348633

Token 1090: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11885911226272583
    2. '           ' → logprob: -2.618859052658081
    3. ')
' → logprob: -3.243859052658081
    4. ',' → logprob: -10.61885929107666
    5. '               ' → logprob: -10.61885929107666
    6. ')(
' → logprob: -10.86885929107666
    7. '<|end|>' → logprob: -11.11885929107666
    8. ').' → logprob: -11.24385929107666
    9. '(counter' → logprob: -11.49385929107666
    10. ')(' → logprob: -11.86885929107666

Token 1091: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3593159317970276
    2. 'result' → logprob: -1.4843158721923828
    3. ' result' → logprob: -2.609315872192383
    4. 'count' → logprob: -7.234315872192383
    5. '
' → logprob: -8.234315872192383
    6. '   ' → logprob: -8.609315872192383
    7. '```' → logprob: -8.859315872192383
    8. '       ' → logprob: -9.359315872192383
    9. 'res' → logprob: -9.484315872192383
    10. ' res' → logprob: -9.859315872192383

Token 1092: ' sets' (ID: 11982)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.16588260233402252
    2. 'count' → logprob: -1.9158825874328613
    3. 'res' → logprob: -5.665882587432861
    4. 'cnt' → logprob: -6.665882587432861
    5. '           ' → logprob: -7.540882587432861
    6. ' result' → logprob: -8.29088306427002
    7. 'c' → logprob: -10.16588306427002
    8. ' count' → logprob: -10.54088306427002
    9. 'counts' → logprob: -11.04088306427002
    10. 'subset' → logprob: -11.54088306427002

Token 1093: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.008879744447767735
    2. ' =' → logprob: -5.133879661560059
    3. '_counts' → logprob: -6.758879661560059
    4. '=' → logprob: -6.883879661560059
    5. '_' → logprob: -7.883879661560059
    6. '_cnt' → logprob: -9.008879661560059
    7. '_size' → logprob: -10.008879661560059
    8. '   ' → logprob: -10.008879661560059
    9. 's' → logprob: -10.133879661560059
    10. '_num' → logprob: -10.508879661560059

Token 1094: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39111605286598206
    2. '=' → logprob: -1.1411160230636597
    3. '           ' → logprob: -6.391116142272949
    4. ' +=' → logprob: -8.26611614227295
    5. '_count' → logprob: -8.39111614227295
    6. '       ' → logprob: -8.39111614227295
    7. '   ' → logprob: -8.39111614227295
    8. '_' → logprob: -8.51611614227295
    9. '[' → logprob: -8.51611614227295
    10. ' ' → logprob: -9.01611614227295

Token 1095: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.12693041563034058
    2. ' counter' → logprob: -2.1269304752349854
    3. '(counter' → logprob: -13.001930236816406
    4. '	counter' → logprob: -16.876930236816406
    5. 'Counter' → logprob: -17.751930236816406
    6. '(' → logprob: -17.751930236816406
    7. '           ' → logprob: -18.126930236816406
    8. ' counters' → logprob: -18.126930236816406
    9. ' (' → logprob: -18.376930236816406
    10. '1' → logprob: -18.376930236816406

Token 1096: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -1.1517960956552997e-05
    2. 'count' → logprob: -11.625011444091797
    3. '.' → logprob: -13.625011444091797
    4. ' .' → logprob: -14.125011444091797
    5. '.bit' → logprob: -14.500011444091797
    6. '_count' → logprob: -17.000011444091797
    7. '	count' → logprob: -17.125011444091797
    8. ' count' → logprob: -17.625011444091797
    9. '(count' → logprob: -18.250011444091797
    10. '.
' → logprob: -18.875011444091797

Token 1097: '_ind' (ID: 20261)
  Prédit: '_ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ind' → logprob: -5.080963092041202e-06
    2. 'ing' → logprob: -13.250004768371582
    3. 'ind' → logprob: -14.000004768371582
    4. 's' → logprob: -14.000004768371582
    5. '(ind' → logprob: -14.750004768371582
    6. '(' → logprob: -15.250004768371582
    7. '_' → logprob: -15.500004768371582
    8. '-independent' → logprob: -16.0000057220459
    9. 'Independent' → logprob: -16.2500057220459
    10. '_in' → logprob: -16.3750057220459

Token 1098: 'ependent' (ID: 66362)
  Prédit: 'ependent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ependent' → logprob: -0.0010741343721747398
    2. 'pendent' → logprob: -7.126074314117432
    3. 'endent' → logprob: -8.501073837280273
    4. 'ep' → logprob: -10.001073837280273
    5. 'dependent' → logprob: -11.376073837280273
    6. 'ent' → logprob: -12.626073837280273
    7. '_sets' → logprob: -13.126073837280273
    8. 'epend' → logprob: -13.501073837280273
    9. 'edent' → logprob: -14.001073837280273
    10. 'e' → logprob: -14.251073837280273

Token 1099: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -0.00022320532298181206
    2. '_set' → logprob: -8.625223159790039
    3. '_' → logprob: -10.125223159790039
    4. 'sets' → logprob: -13.625223159790039
    5. 's' → logprob: -13.750223159790039
    6. '_s' → logprob: -14.625223159790039
    7. '_masks' → logprob: -15.875223159790039
    8. 'Sets' → logprob: -16.25022315979004
    9. ' sets' → logprob: -16.37522315979004
    10. ' _' → logprob: -16.50022315979004

Token 1100: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04508017376065254
    2. '
' → logprob: -3.9200801849365234
    3. '%' → logprob: -4.045080184936523
    4. ' %' → logprob: -6.545080184936523
    5. '```' → logprob: -6.795080184936523
    6. '<|end|>' → logprob: -6.920080184936523
    7. '(' → logprob: -7.170080184936523
    8. '       ' → logprob: -7.920080184936523
    9. '            
' → logprob: -8.045080184936523
    10. '%
' → logprob: -8.045080184936523

Token 1101: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00037311585037969053
    2. 'result' → logprob: -8.375372886657715
    3. '```' → logprob: -10.000372886657715
    4. '   ' → logprob: -10.125372886657715
    5. ' result' → logprob: -10.250372886657715
    6. '       ' → logprob: -11.625372886657715
    7. '<|end|>' → logprob: -12.625372886657715
    8. '
' → logprob: -12.750372886657715
    9. '               ' → logprob: -13.375372886657715
    10. '          ' → logprob: -13.750372886657715

Token 1102: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.6043257713317871
    2. '           ' → logprob: -1.104325771331787
    3. 'result' (adapté à ' result') → logprob: -2.104325771331787
    4. '
' → logprob: -9.104326248168945
    5. '```' → logprob: -10.229326248168945
    6. '       ' → logprob: -10.604326248168945
    7. '	result' → logprob: -12.229326248168945
    8. '   ' → logprob: -12.479326248168945
    9. '(result' → logprob: -12.729326248168945
    10. '               ' → logprob: -13.104326248168945

Token 1103: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.08115489780902863
    2. '=' → logprob: -2.5811548233032227
    3. ' *=' → logprob: -6.581154823303223
    4. ' =' → logprob: -8.081154823303223
    5. '*' → logprob: -8.081154823303223
    6. '```' → logprob: -8.331154823303223
    7. '   ' → logprob: -11.831154823303223
    8. '\' → logprob: -12.956154823303223
    9. '
' → logprob: -13.206154823303223
    10. '	' → logprob: -13.706154823303223

Token 1104: ' (' (ID: 350)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0011748670367524028
    2. ' (' → logprob: -6.7511749267578125
    3. 'result' → logprob: -12.376174926757812
    4. '(' → logprob: -15.751174926757812
    5. '(res' → logprob: -16.001174926757812
    6. '[result' → logprob: -16.251174926757812
    7. ' result' → logprob: -17.251174926757812
    8. '   ' → logprob: -18.001174926757812
    9. '=result' → logprob: -18.001174926757812
    10. '(response' → logprob: -18.751174926757812

Token 1105: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0003372502396814525
    2. '(result' → logprob: -8.000337600708008
    3. ' result' → logprob: -13.250337600708008
    4. '           ' → logprob: -17.875337600708008
    5. '[result' → logprob: -19.875337600708008
    6. '_result' → logprob: -20.250337600708008
    7. '	result' → logprob: -20.250337600708008
    8. '=result' → logprob: -20.375337600708008
    9. '.result' → logprob: -21.000337600708008
    10. 'res' → logprob: -21.000337600708008

Token 1106: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.018151231110095978
    2. '*' → logprob: -4.01815128326416
    3. ' ' → logprob: -14.26815128326416
    4. '*object' → logprob: -15.51815128326416
    5. '```' → logprob: -15.89315128326416
    6. '**' → logprob: -16.018150329589844
    7. '   ' → logprob: -16.518150329589844
    8. ' ' → logprob: -16.768150329589844
    9. '*self' → logprob: -18.268150329589844
    10. ' **' → logprob: -18.393150329589844

Token 1107: ' sets' (ID: 11982)
  Prédit: 'sets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sets' → logprob: -0.000553151941858232
    2. ' sets' → logprob: -7.500553131103516
    3. '(' → logprob: -15.625553131103516
    4. ' (' → logprob: -18.875553131103516
    5. '_sets' → logprob: -19.250553131103516
    6. 'set' → logprob: -19.750553131103516
    7. 'Sets' → logprob: -20.000553131103516
    8. 'SETS' → logprob: -20.125553131103516
    9. 'ets' → logprob: -20.500553131103516
    10. '```' → logprob: -20.625553131103516

Token 1108: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -5.085517113911919e-05
    2. 'ult' → logprob: -10.00005054473877
    3. '_counts' → logprob: -13.12505054473877
    4. 'ults' → logprob: -14.50005054473877
    5. '\' → logprob: -14.62505054473877
    6. ' _' → logprob: -15.00005054473877
    7. 'count' → logprob: -15.00005054473877
    8. 'et' → logprob: -15.00005054473877
    9. '_COUNT' → logprob: -15.00005054473877
    10. 'ets' → logprob: -15.37505054473877

Token 1109: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002630353905260563
    2. ')%' → logprob: -6.002630233764648
    3. ' )' → logprob: -9.002630233764648
    4. ' %' → logprob: -10.752630233764648
    5. '%' → logprob: -11.752630233764648
    6. '   ' → logprob: -14.127630233764648
    7. '```' → logprob: -14.877630233764648
    8. ' -' → logprob: -15.252630233764648
    9. '       ' → logprob: -15.377630233764648
    10. '           ' → logprob: -15.752630233764648

Token 1110: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.16037380695343018
    2. '%' → logprob: -1.9103738069534302
    3. ' %=' → logprob: -9.41037368774414
    4. '
' → logprob: -10.03537368774414
    5. '%s' → logprob: -12.03537368774414
    6. '%d' → logprob: -12.28537368774414
    7. ')%' → logprob: -12.78537368774414
    8. '%n' → logprob: -13.16037368774414
    9. '%=' → logprob: -13.41037368774414
    10. '%c' → logprob: -13.53537368774414

Token 1111: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -6.873571692267433e-05
    2. ' mod' → logprob: -9.750068664550781
    3. 'self' → logprob: -11.500068664550781
    4. '(mod' → logprob: -15.250068664550781
    5. ' self' → logprob: -17.25006866455078
    6. 'p' → logprob: -20.62506866455078
    7. '```' → logprob: -20.75006866455078
    8. '	mod' → logprob: -21.00006866455078
    9. '   ' → logprob: -21.37506866455078
    10. '_mod' → logprob: -22.25006866455078

Token 1112: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31669503450393677
    2. '
' → logprob: -1.441694974899292
    3. '        
' → logprob: -4.316695213317871
    4. '-' → logprob: -4.816695213317871
    5. ' 
' → logprob: -5.816695213317871
    6. '    
' → logprob: -5.941695213317871
    7. '+' → logprob: -5.941695213317871
    8. '<|end|>' → logprob: -6.816695213317871
    9. 'return' → logprob: -6.941695213317871
    10. '   ' → logprob: -7.316695213317871

Token 1113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17009180784225464
    2. '-' → logprob: -2.7950918674468994
    3. '
' → logprob: -2.9200918674468994
    4. '```' → logprob: -3.9200918674468994
    5. 'result' → logprob: -5.17009162902832
    6. 'return' → logprob: -5.29509162902832
    7. '+' → logprob: -5.67009162902832
    8. '   ' → logprob: -6.42009162902832
    9. '        
' → logprob: -6.54509162902832
    10. '-
' → logprob: -6.79509162902832

Token 1114: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.028666483238339424
    2. 'result' → logprob: -3.7786664962768555
    3. '       ' → logprob: -5.9036664962768555
    4. ' return' → logprob: -6.0286664962768555
    5. '
' → logprob: -8.778666496276855
    6. '```' → logprob: -9.778666496276855
    7. ' result' → logprob: -10.653666496276855
    8. '   ' → logprob: -10.778666496276855
    9. '        
' → logprob: -11.903666496276855
    10. '	return' → logprob: -12.778666496276855

Token 1115: ' subtract' (ID: 71973)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.011655994690954685
    2. 'result' → logprob: -4.511655807495117
    3. ' return' → logprob: -7.761655807495117
    4. '       ' → logprob: -8.636655807495117
    5. ' result' → logprob: -12.761655807495117
    6. '
' → logprob: -14.011655807495117
    7. '   ' → logprob: -14.261655807495117
    8. '        
' → logprob: -15.636655807495117
    9. '```' → logprob: -16.261655807495117
    10. '	return' → logprob: -16.386655807495117

Token 1116: ' empty' (ID: 8213)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002525957068428397
    2. ' ' → logprob: -6.002525806427002
    3. '=' → logprob: -10.00252628326416
    4. '(' → logprob: -12.87752628326416
    5. ' =' → logprob: -13.62752628326416
    6. '   ' → logprob: -14.25252628326416
    7. '       ' → logprob: -15.12752628326416
    8. '```' → logprob: -16.002525329589844
    9. '
' → logprob: -16.877525329589844
    10. ' (' → logprob: -17.252525329589844

Token 1117: ' subset' (ID: 58845)
  Prédit: '_set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.5683326721191406
    2. '_' → logprob: -1.3183326721191406
    3. 'set' → logprob: -2.3183326721191406
    4. '_subset' → logprob: -3.0683326721191406
    5. ' _' → logprob: -4.943332672119141
    6. '_result' → logprob: -6.068332672119141
    7. '_space' → logprob: -6.068332672119141
    8. '()' → logprob: -6.818332672119141
    9. ' -' → logprob: -6.818332672119141
    10. ')' → logprob: -6.943332672119141

Token 1118: ' globally' (ID: 43727)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5300349593162537
    2. '
' → logprob: -0.9050349593162537
    3. ' -' → logprob: -5.780035018920898
    4. '-' → logprob: -6.155035018920898
    5. '   ' → logprob: -7.030035018920898
    6. 'result' → logprob: -8.030035018920898
    7. '        
' → logprob: -8.655035018920898
    8. ' result' → logprob: -10.030035018920898
    9. '    
' → logprob: -10.030035018920898
    10. '-
' → logprob: -10.155035018920898

Token 1119: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6644229292869568
    2. '       ' → logprob: -0.7894229292869568
    3. 'result' → logprob: -3.5394229888916016
    4. ' result' → logprob: -6.789422988891602
    5. '        
' → logprob: -7.914422988891602
    6. '   ' → logprob: -8.039422988891602
    7. 'return' → logprob: -8.414422988891602
    8. '```' → logprob: -9.289422988891602
    9. '-' → logprob: -9.789422988891602
    10. '    
' → logprob: -10.414422988891602

Token 1120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008510822663083673
    2. 'result' → logprob: -7.500851154327393
    3. 'return' → logprob: -8.500850677490234
    4. ' result' → logprob: -9.750850677490234
    5. ' return' → logprob: -10.625850677490234
    6. '
' → logprob: -11.625850677490234
    7. '   ' → logprob: -13.375850677490234
    8. '        
' → logprob: -14.000850677490234
    9. '```' → logprob: -15.250850677490234
    10. '           ' → logprob: -16.125850677490234

Token 1121: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.20790451765060425
    2. 'return' → logprob: -1.707904577255249
    3. ' result' → logprob: -5.45790433883667
    4. '       ' → logprob: -6.70790433883667
    5. ' return' → logprob: -6.95790433883667
    6. '
' → logprob: -10.332904815673828
    7. '```' → logprob: -13.582904815673828
    8. '   ' → logprob: -13.707904815673828
    9. '        
' → logprob: -16.082904815673828
    10. '	result' → logprob: -16.457904815673828

Token 1122: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19271397590637207
    2. ' =' → logprob: -2.442713975906372
    3. ' -=' → logprob: -2.817713975906372
    4. '-=' → logprob: -3.567713975906372
    5. '-' → logprob: -8.192713737487793
    6. '   ' → logprob: -9.942713737487793
    7. '%=' → logprob: -11.067713737487793
    8. '```' → logprob: -11.067713737487793
    9. '
' → logprob: -11.317713737487793
    10. ' -' → logprob: -11.942713737487793

Token 1123: ' (' (ID: 350)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.029751762747764587
    2. ' (' → logprob: -3.529751777648926
    3. '(res' → logprob: -14.654751777648926
    4. '(' → logprob: -15.404751777648926
    5. 'result' → logprob: -16.02975082397461
    6. '(max' → logprob: -16.15475082397461
    7. '   ' → logprob: -16.40475082397461
    8. '[result' → logprob: -16.40475082397461
    9. '(response' → logprob: -17.02975082397461
    10. '```' → logprob: -17.52975082397461

Token 1124: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -5.319370302458992e-06
    2. '(result' → logprob: -12.250005722045898
    3. ' result' → logprob: -14.500005722045898
    4. '[result' → logprob: -20.7500057220459
    5. '
' → logprob: -20.8750057220459
    6. '   ' → logprob: -21.1250057220459
    7. 'res' → logprob: -21.2500057220459
    8. '$result' → logprob: -21.8750057220459
    9. '	result' → logprob: -22.3750057220459
    10. '```' → logprob: -23.3750057220459

Token 1125: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.47407856583595276
    2. ' -' → logprob: -0.9740785360336304
    3. '+' → logprob: -13.474078178405762
    4. ' +' → logprob: -17.474079132080078
    5. '
' → logprob: -17.849079132080078
    6. '```' → logprob: -17.849079132080078
    7. ' ' → logprob: -18.099079132080078
    8. '-
' → logprob: -18.224079132080078
    9. '   ' → logprob: -18.474079132080078
    10. '%' → logprob: -18.724079132080078

Token 1126: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -17.000001907348633
    4. '       ' → logprob: -20.000001907348633
    5. '```' → logprob: -20.000001907348633
    6. '<|end|>' → logprob: -21.625001907348633
    7. '  ' → logprob: -22.125001907348633
    8. '
' → logprob: -22.750001907348633
    9. '۱' → logprob: -23.125001907348633
    10. '    ' → logprob: -23.250001907348633

Token 1127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.5
    3. '   ' → logprob: -16.75
    4. '```' → logprob: -17.75
    5. '       ' → logprob: -19.5
    6. ')' → logprob: -20.0
    7. '۱' → logprob: -20.125
    8. '<|end|>' → logprob: -20.125
    9. '[' → logprob: -20.375
    10. '
' → logprob: -20.875

Token 1128: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005613288376480341
    2. '+' → logprob: -6.005613327026367
    3. ' +' → logprob: -6.130613327026367
    4. ')%' → logprob: -7.005613327026367
    5. '       ' → logprob: -10.630613327026367
    6. ' )' → logprob: -11.255613327026367
    7. '%' → logprob: -11.755613327026367
    8. '```' → logprob: -13.380613327026367
    9. ' %' → logprob: -14.255613327026367
    10. '
' → logprob: -14.255613327026367

Token 1129: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.20340867340564728
    2. '%' → logprob: -1.7034087181091309
    3. '       ' → logprob: -6.953408718109131
    4. '
' → logprob: -6.953408718109131
    5. ')' → logprob: -10.828408241271973
    6. ' ' → logprob: -11.328408241271973
    7. ' ' → logprob: -11.828408241271973
    8. ')%' → logprob: -11.828408241271973
    9. '```' → logprob: -11.953408241271973
    10. ' if' → logprob: -12.078408241271973

Token 1130: ' mod' (ID: 1812)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031808018684387207
    2. ' self' → logprob: -5.753180980682373
    3. '       ' → logprob: -12.753180503845215
    4. 'mod' → logprob: -15.753180503845215
    5. '   ' → logprob: -17.37818145751953
    6. '(self' → logprob: -17.62818145751953
    7. '        ' → logprob: -20.00318145751953
    8. '```' → logprob: -20.12818145751953
    9. '           ' → logprob: -20.37818145751953
    10. '    ' → logprob: -20.50318145751953

Token 1131: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006868702359497547
    2. 'return' → logprob: -5.256868839263916
    3. '
' → logprob: -6.631868839263916
    4. ' return' → logprob: -8.256868362426758
    5. '   ' → logprob: -10.631868362426758
    6. '	return' → logprob: -11.756868362426758
    7. '        
' → logprob: -11.881868362426758
    8. '```' → logprob: -11.881868362426758
    9. '	' → logprob: -12.756868362426758
    10. '<|end|>' → logprob: -12.881868362426758

Token 1132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009574358118698001
    2. 'return' → logprob: -7.375957489013672
    3. '
' → logprob: -8.125957489013672
    4. '   ' → logprob: -11.000957489013672
    5. ' return' → logprob: -11.375957489013672
    6. '	return' → logprob: -12.750957489013672
    7. '```' → logprob: -13.375957489013672
    8. '	' → logprob: -13.625957489013672
    9. '        
' → logprob: -14.375957489013672
    10. '           ' → logprob: -15.500957489013672

Token 1133: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3878684341907501
    2. 'return' (adapté à ' return') → logprob: -1.1378684043884277
    3. ' return' → logprob: -7.512868404388428
    4. '   ' → logprob: -8.387868881225586
    5. '
' → logprob: -8.637868881225586
    6. '	return' → logprob: -10.512868881225586
    7. '	' → logprob: -11.512868881225586
    8. '```' → logprob: -12.387868881225586
    9. '{return' → logprob: -13.887868881225586
    10. ' ' → logprob: -14.012868881225586

Token 1134: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.01416350994259119
    2. ' result' → logprob: -4.264163494110107
    3. '	result' → logprob: -19.639163970947266
    4. '   ' → logprob: -21.264163970947266
    5. '(result' → logprob: -21.639163970947266
    6. '_result' → logprob: -22.014163970947266
    7. ' ' → logprob: -22.639163970947266
    8. '$result' → logprob: -22.889163970947266
    9. 'self' → logprob: -23.014163970947266
    10. '[result' → logprob: -23.139163970947266

Token 1135: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1136: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1137: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.8167715072631836
    2. ' solve' → logprob: -1.3167715072631836
    3. '_' → logprob: -1.9417715072631836
    4. ' test' → logprob: -3.5667715072631836
    5. ' calculate' → logprob: -4.191771507263184
    6. ' _' → logprob: -4.191771507263184
    7. ' ' → logprob: -4.691771507263184
    8. ' sort' → logprob: -4.691771507263184
    9. ' solution' → logprob: -4.816771507263184
    10. ' sorted' → logprob: -5.191771507263184

Token 1138: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005599428550340235
    2. '():
' → logprob: -7.5005598068237305
    3. '()' → logprob: -12.25055980682373
    4. ' ():' → logprob: -13.50055980682373
    5. '():
' → logprob: -14.87555980682373
    6. '(' → logprob: -15.50055980682373
    7. '():

' → logprob: -16.125560760498047
    8. '().' → logprob: -16.375560760498047
    9. ':' → logprob: -16.625560760498047
    10. '()>' → logprob: -18.375560760498047

Token 1139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04259464517235756
    2. 'import' → logprob: -3.7925946712493896
    3. ' import' → logprob: -4.4175944328308105
    4. ' solver' → logprob: -5.7925944328308105
    5. '```' → logprob: -6.4175944328308105
    6. 'solver' → logprob: -6.5425944328308105
    7. 'n' → logprob: -7.6675944328308105
    8. ' n' → logprob: -8.292594909667969
    9. '   ' → logprob: -9.917594909667969
    10. '    ' → logprob: -10.167594909667969

Token 1140: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.6046434044837952
    2. ' import' → logprob: -0.8546434044837952
    3. '   ' → logprob: -4.10464334487915
    4. ' n' → logprob: -4.97964334487915
    5. 'n' → logprob: -5.60464334487915
    6. 'a' → logprob: -7.47964334487915
    7. '```' → logprob: -8.104643821716309
    8. 't' → logprob: -8.854643821716309
    9. ' a' → logprob: -9.104643821716309
    10. ' t' → logprob: -9.604643821716309

Token 1141: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -4.320199877838604e-07
    2. ' sys' → logprob: -15.0
    3. 'math' → logprob: -17.625
    4. '=sys' → logprob: -18.5
    5. '```' → logprob: -19.75
    6. '(sys' → logprob: -20.125
    7. '	sys' → logprob: -21.5
    8. '_sys' → logprob: -23.625
    9. '.sys' → logprob: -24.0
    10. 'os' → logprob: -24.625

Token 1142: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.652780294418335
    2. 'input' → logprob: -1.277780294418335
    3. 'data' → logprob: -1.652780294418335
    4. '
' → logprob: -5.652780532836914
    5. ' input' → logprob: -5.777780532836914
    6. 'n' → logprob: -7.277780532836914
    7. ' data' → logprob: -7.527780532836914
    8. 'def' → logprob: -7.652780532836914
    9. '    
' → logprob: -7.902780532836914
    10. 'a' → logprob: -8.777780532836914

Token 1143: '   ' (ID: 271)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2562711238861084
    2. '   ' → logprob: -1.7562711238861084
    3. ' input' → logprob: -3.0062711238861084
    4. 'data' → logprob: -5.6312713623046875
    5. 'n' → logprob: -9.256271362304688
    6. ' data' → logprob: -10.006271362304688
    7. 'def' → logprob: -10.381271362304688
    8. '
' → logprob: -10.506271362304688
    9. '_input' → logprob: -10.756271362304688
    10. '```' → logprob: -10.756271362304688

Token 1144: ' for' (ID: 395)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.11376260221004486
    2. ' input' → logprob: -2.363762617111206
    3. '   ' → logprob: -4.488762378692627
    4. 'data' → logprob: -6.613762378692627
    5. 'n' → logprob: -7.738762378692627
    6. 'a' → logprob: -8.988762855529785
    7. 'import' → logprob: -9.613762855529785
    8. 'def' → logprob: -9.738762855529785
    9. 'args' → logprob: -9.863762855529785
    10. '```' → logprob: -9.988762855529785

Token 1145: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.008825987577438354
    2. 'line' → logprob: -4.758825778961182
    3. '	line' → logprob: -8.50882625579834
    4. '_line' → logprob: -12.25882625579834
    5. '(line' → logprob: -13.13382625579834
    6. '=line' → logprob: -14.00882625579834
    7. '#line' → logprob: -14.38382625579834
    8. '   ' → logprob: -15.25882625579834
    9. '  ' → logprob: -15.88382625579834
    10. ' ' → logprob: -15.88382625579834

Token 1146: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0006378580583259463
    2. 'in' → logprob: -7.375638008117676
    3. '   ' → logprob: -12.750638008117676
    4. '_in' → logprob: -13.750638008117676
    5. '()' → logprob: -13.750638008117676
    6. '(line' → logprob: -13.750638008117676
    7. 'line' → logprob: -14.000638008117676
    8. ' ' → logprob: -14.125638008117676
    9. '():
' → logprob: -14.375638008117676
    10. '[line' → logprob: -14.500638008117676

Token 1147: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.03805262967944145
    2. ' sys' → logprob: -3.288052558898926
    3. '=sys' → logprob: -11.913052558898926
    4. '(sys' → logprob: -12.913052558898926
    5. '	sys' → logprob: -13.538052558898926
    6. 'stdin' → logprob: -14.913052558898926
    7. 'import' → logprob: -15.913052558898926
    8. '```' → logprob: -16.288053512573242
    9. 'in' → logprob: -17.038053512573242
    10. '   ' → logprob: -17.413053512573242

Token 1148: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.3950708210468292
    2. 'stdin' → logprob: -2.020070791244507
    3. 'in' → logprob: -2.270070791244507
    4. '(stdin' → logprob: -3.395070791244507
    5. '.readline' → logprob: -3.895070791244507
    6. '   ' → logprob: -4.770071029663086
    7. ' in' → logprob: -4.895071029663086
    8. ':
' → logprob: -5.395071029663086
    9. '():
' → logprob: -5.645071029663086
    10. '().' → logprob: -5.645071029663086

Token 1149: ':
' (ID: 734)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.2352038025856018
    2. ':
' → logprob: -2.360203742980957
    3. ':' → logprob: -2.860203742980957
    4. ' in' → logprob: -3.360203742980957
    5. '():
' → logprob: -4.610203742980957
    6. '   ' → logprob: -4.985203742980957
    7. '):
' → logprob: -6.860203742980957
    8. '.readlines' → logprob: -6.860203742980957
    9. '():' → logprob: -7.235203742980957
    10. '.strip' → logprob: -7.360203742980957

Token 1150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32796064019203186
    2. '   ' → logprob: -2.202960729598999
    3. '```' → logprob: -3.577960729598999
    4. '        
' → logprob: -3.952960729598999
    5. ' line' → logprob: -4.32796049118042
    6. '.strip' → logprob: -4.32796049118042
    7. 'rstrip' → logprob: -4.32796049118042
    8. 'strip' → logprob: -4.45296049118042
    9. ':
' → logprob: -4.57796049118042
    10. 'tokens' → logprob: -5.07796049118042

Token 1151: ' if' (ID: 538)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.7140967845916748
    2. ' line' → logprob: -1.2140967845916748
    3. ' if' → logprob: -2.089096784591675
    4. 'if' (adapté à ' if') → logprob: -2.464096784591675
    5. '       ' → logprob: -6.089097023010254
    6. 'n' → logprob: -7.589097023010254
    7. ' n' → logprob: -8.464097023010254
    8. 'a' → logprob: -8.464097023010254
    9. '	line' → logprob: -8.714097023010254
    10. 'input' → logprob: -9.089097023010254

Token 1152: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2568654716014862
    2. 'not' → logprob: -1.5068655014038086
    3. 'line' → logprob: -6.006865501403809
    4. ' line' → logprob: -6.006865501403809
    5. '=line' → logprob: -15.006865501403809
    6. '#line' → logprob: -15.631865501403809
    7. '   ' → logprob: -16.881864547729492
    8. ' ' → logprob: -17.006864547729492
    9. '	not' → logprob: -17.381864547729492
    10. '(line' → logprob: -17.506864547729492

Token 1153: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.024065108969807625
    2. '.' → logprob: -3.8990650177001953
    3. '.startswith' → logprob: -6.024065017700195
    4. '==' → logprob: -8.024065017700195
    5. '().' → logprob: -8.024065017700195
    6. '.rstrip' → logprob: -8.649065017700195
    7. '```' → logprob: -9.774065017700195
    8. 'strip' → logprob: -9.774065017700195
    9. ' ==' → logprob: -10.024065017700195
    10. '       ' → logprob: -10.649065017700195

Token 1154: '()' (ID: 416)
  Prédit: '()=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()==' → logprob: -0.32119807600975037
    2. '()' → logprob: -1.3211981058120728
    3. '():' → logprob: -5.446197986602783
    4. '==' → logprob: -5.821197986602783
    5. '():
' → logprob: -7.571197986602783
    6. ' ==' → logprob: -9.321198463439941
    7. '()=="' → logprob: -10.946198463439941
    8. '```' → logprob: -12.696198463439941
    9. '()!=' → logprob: -14.446198463439941
    10. '()<' → logprob: -14.571198463439941

Token 1155: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.004379328340291977
    2. ' ==' → logprob: -5.6293792724609375
    3. '()==' → logprob: -7.2543792724609375
    4. '```' → logprob: -10.504379272460938
    5. '=='' → logprob: -11.004379272460938
    6. '==
' → logprob: -11.379379272460938
    7. '===' → logprob: -12.504379272460938
    8. '=="' → logprob: -12.504379272460938
    9. ')==' → logprob: -12.754379272460938
    10. ']==' → logprob: -12.879379272460938

Token 1156: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.6563180088996887
    2. '"":' → logprob: -1.656317949295044
    3. '"' → logprob: -1.906317949295044
    4. '""' → logprob: -2.156317949295044
    5. ''' → logprob: -3.656317949295044
    6. ''ex' → logprob: -8.781317710876465
    7. ''end' → logprob: -10.906317710876465
    8. ''q' → logprob: -12.656317710876465
    9. '"""' → logprob: -13.031317710876465
    10. ' "' → logprob: -13.156317710876465

Token 1157: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.579495235811919e-05
    2. 'break' → logprob: -10.00009536743164
    3. ' break' → logprob: -10.50009536743164
    4. 'continue' → logprob: -11.50009536743164
    5. '       ' → logprob: -11.87509536743164
    6. '	       ' → logprob: -13.75009536743164
    7. ' continue' → logprob: -13.75009536743164
    8. ':' → logprob: -14.00009536743164
    9. '```' → logprob: -14.12509536743164
    10. ',' → logprob: -14.62509536743164

Token 1158: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.014278093352913857
    2. '           ' → logprob: -4.264277935028076
    3. ' break' → logprob: -9.389278411865234
    4. '	break' → logprob: -11.889278411865234
    5. '```' → logprob: -11.889278411865234
    6. 'return' → logprob: -12.139278411865234
    7. '       ' → logprob: -12.139278411865234
    8. '               ' → logprob: -12.889278411865234
    9. '_break' → logprob: -13.389278411865234
    10. 'continue' (adapté à ' continue') → logprob: -14.014278411865234

Token 1159: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1146959662437439
    2. '   ' → logprob: -2.2396960258483887
    3. '```' → logprob: -6.864696025848389
    4. '        
' → logprob: -8.61469554901123
    5. ' line' → logprob: -9.36469554901123
    6. '    
' → logprob: -9.61469554901123
    7. 'tokens' → logprob: -9.86469554901123
    8. '           ' → logprob: -9.86469554901123
    9. '<|end|>' → logprob: -9.98969554901123
    10. ' lines' → logprob: -10.23969554901123

Token 1160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2259553074836731
    2. '   ' → logprob: -1.6009552478790283
    3. '```' → logprob: -7.850955486297607
    4. 'a' → logprob: -9.85095500946045
    5. 'tokens' → logprob: -10.35095500946045
    6. 'line' → logprob: -10.60095500946045
    7. 'try' → logprob: -11.72595500946045
    8. ' line' → logprob: -12.22595500946045
    9. 'num' → logprob: -12.35095500946045
    10. 'token' → logprob: -12.35095500946045

Token 1161: ' A' (ID: 355)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.26538941264152527
    2. 'params' → logprob: -2.5153894424438477
    3. 'args' → logprob: -2.7653894424438477
    4. 'parts' → logprob: -3.0153894424438477
    5. 'n' → logprob: -4.015389442443848
    6. 'values' → logprob: -4.640389442443848
    7. 'nums' → logprob: -4.890389442443848
    8. 'vals' → logprob: -6.015389442443848
    9. 'tokens' → logprob: -7.015389442443848
    10. 'numbers' → logprob: -7.265389442443848

Token 1162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0062251402996480465
    2. ' ,' → logprob: -5.256225109100342
    3. ',B' → logprob: -7.381225109100342
    4. ' =' → logprob: -8.3812255859375
    5. ',b' → logprob: -10.0062255859375
    6. '=' → logprob: -10.2562255859375
    7. ',P' → logprob: -11.6312255859375
    8. ',int' → logprob: -11.8812255859375
    9. ',p' → logprob: -12.0062255859375
    10. ',A' → logprob: -12.6312255859375

Token 1163: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.001930301426909864
    2. ' B' → logprob: -6.251930236816406
    3. ' 
' → logprob: -14.251930236816406
    4. 'b' → logprob: -15.251930236816406
    5. ' ' → logprob: -15.376930236816406
    6. 'P' → logprob: -15.501930236816406
    7. 'p' → logprob: -15.751930236816406
    8. '  
' → logprob: -16.751930236816406
    9. ',' → logprob: -17.501930236816406
    10. '<|end|>' → logprob: -17.501930236816406

Token 1164: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.043873727321624756
    2. ',' → logprob: -3.1688737869262695
    3. ' =' → logprob: -7.0438737869262695
    4. ' ,' → logprob: -14.29387378692627
    5. '=int' → logprob: -14.91887378692627
    6. '=line' → logprob: -15.66887378692627
    7. ')=' → logprob: -16.293872833251953
    8. ')' → logprob: -17.043872833251953
    9. '   ' → logprob: -17.168872833251953
    10. ',A' → logprob: -17.418872833251953

Token 1165: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.10242054611444473
    2. 'p' → logprob: -2.3524205684661865
    3. 'C' → logprob: -6.352420330047607
    4. ' p' → logprob: -8.227420806884766
    5. ' P' → logprob: -8.602420806884766
    6. ' ' → logprob: -11.227420806884766
    7. ' C' → logprob: -13.852420806884766
    8. ' =' → logprob: -13.977420806884766
    9. '<|end|>' → logprob: -14.102420806884766
    10. '=' → logprob: -14.602420806884766

Token 1166: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00861456897109747
    2. ' =' → logprob: -4.758614540100098
    3. '=line' → logprob: -17.383615493774414
    4. ',' → logprob: -17.758615493774414
    5. ')' → logprob: -18.883615493774414
    6. '＝' → logprob: -19.508615493774414
    7. '=
' → logprob: -19.758615493774414
    8. ' ' → logprob: -20.258615493774414
    9. ')=' → logprob: -20.258615493774414
    10. '=input' → logprob: -20.383615493774414

Token 1167: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6931519508361816
    2. ' map' → logprob: -0.6931519508361816
    3. 'line' → logprob: -12.818151473999023
    4. ' line' → logprob: -13.568151473999023
    5. '(map' → logprob: -14.943151473999023
    6. '_map' → logprob: -15.318151473999023
    7. '	map' → logprob: -16.818151473999023
    8. '=' → logprob: -17.068151473999023
    9. '[line' → logprob: -17.693151473999023
    10. '.map' → logprob: -17.818151473999023

Token 1168: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005240872036665678
    2. 'int' → logprob: -5.2552409172058105
    3. '[int' → logprob: -12.880240440368652
    4. '(str' → logprob: -13.130240440368652
    5. '=int' → logprob: -13.505240440368652
    6. '<int' → logprob: -14.505240440368652
    7. '```' → logprob: -15.130240440368652
    8. 'str' → logprob: -15.630240440368652
    9. '(lambda' → logprob: -16.25524139404297
    10. '(' → logprob: -16.38024139404297

Token 1169: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.3360130190849304
    2. ',' → logprob: -1.8360130786895752
    3. ',line' → logprob: -2.086013078689575
    4. 'line' → logprob: -6.836012840270996
    5. '=line' → logprob: -8.211012840270996
    6. ' line' → logprob: -8.711012840270996
    7. '       ' → logprob: -9.461012840270996
    8. '#line' → logprob: -10.086012840270996
    9. '[line' → logprob: -10.336012840270996
    10. '   ' → logprob: -10.586012840270996

Token 1170: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -7.517272024415433e-05
    2. ' line' → logprob: -9.500075340270996
    3. '(line' → logprob: -15.375075340270996
    4. '=line' → logprob: -17.37507438659668
    5. '[line' → logprob: -18.00007438659668
    6. '           ' → logprob: -19.75007438659668
    7. '	line' → logprob: -20.00007438659668
    8. '#line' → logprob: -20.00007438659668
    9. '       ' → logprob: -20.62507438659668
    10. '   ' → logprob: -20.75007438659668

Token 1171: '.strip' (ID: 40613)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.007714159321039915
    2. '.strip' → logprob: -5.50771427154541
    3. '.split' → logprob: -5.63271427154541
    4. '()' → logprob: -11.38271427154541
    5. '.' → logprob: -11.50771427154541
    6. '.readline' → logprob: -12.00771427154541
    7. ' .' → logprob: -12.50771427154541
    8. 'split' → logprob: -12.75771427154541
    9. '('').' → logprob: -12.75771427154541
    10. '.rstrip' → logprob: -12.88271427154541

Token 1172: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.796184723294573e-06
    2. '()' → logprob: -12.250005722045898
    3. '.split' → logprob: -14.000005722045898
    4. '()
' → logprob: -16.2500057220459
    5. '   ' → logprob: -18.3750057220459
    6. ' ().' → logprob: -18.5000057220459
    7. '()[' → logprob: -18.7500057220459
    8. 'split' → logprob: -19.0000057220459
    9. '('').' → logprob: -19.5000057220459
    10. '().
' → logprob: -19.7500057220459

Token 1173: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.704273118884885e-07
    2. '(split' → logprob: -14.625000953674316
    3. ' split' → logprob: -16.625
    4. '.split' → logprob: -18.0
    5. 'spl' → logprob: -19.625
    6. 'plit' → logprob: -19.75
    7. '_split' → logprob: -21.375
    8. 'rstrip' → logprob: -21.625
    9. '```' → logprob: -22.625
    10. ')' → logprob: -23.625

Token 1174: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003090370213612914
    2. '()' → logprob: -6.5030903816223145
    3. ')' → logprob: -6.7530903816223145
    4. '())
' → logprob: -7.8780903816223145
    5. '('' → logprob: -10.628089904785156
    6. '(' → logprob: -11.503089904785156
    7. '()))' → logprob: -13.128089904785156
    8. '(','' → logprob: -13.753089904785156
    9. ' ())' → logprob: -14.003089904785156
    10. '()
' → logprob: -14.753089904785156

Token 1175: '       ' (ID: 309)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.021862344816327095
    2. ' solver' → logprob: -3.896862268447876
    3. '   ' → logprob: -7.271862506866455
    4. '       ' → logprob: -7.896862506866455
    5. 's' → logprob: -9.646862030029297
    6. 'if' → logprob: -9.896862030029297
    7. ' if' → logprob: -10.146862030029297
    8. 'ns' → logprob: -10.646862030029297
    9. '_solver' → logprob: -10.646862030029297
    10. 'number' → logprob: -11.396862030029297

Token 1176: ' if' (ID: 538)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.00193149340339005
    2. ' solver' → logprob: -6.251931667327881
    3. 'sol' → logprob: -13.251931190490723
    4. 'solution' → logprob: -15.126931190490723
    5. 's' → logprob: -15.126931190490723
    6. '   ' → logprob: -15.501931190490723
    7. 'solve' → logprob: -15.751931190490723
    8. '       ' → logprob: -16.62693214416504
    9. 'Solver' → logprob: -16.75193214416504
    10. 'number' → logprob: -16.87693214416504

Token 1177: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.002475777640938759
    2. ' A' → logprob: -6.002475738525391
    3. '   ' → logprob: -16.75247573852539
    4. ' ' → logprob: -17.00247573852539
    5. '(A' → logprob: -17.12747573852539
    6. '[A' → logprob: -18.62747573852539
    7. '	A' → logprob: -18.87747573852539
    8. '  ' → logprob: -19.12747573852539
    9. '(' → logprob: -19.12747573852539
    10. 'a' → logprob: -19.25247573852539

Token 1178: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6048593521118164
    2. ' ==' → logprob: -0.8548593521118164
    3. '<=' → logprob: -4.354859352111816
    4. ' <=' → logprob: -4.604859352111816
    5. ' <' → logprob: -6.229859352111816
    6. '<' → logprob: -6.604859352111816
    7. '>=' → logprob: -6.854859352111816
    8. ' >=' → logprob: -7.354859352111816
    9. '>' → logprob: -7.854859352111816
    10. ' >' → logprob: -8.979859352111816

Token 1179: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.612634362885728e-05
    2. ' ' → logprob: -9.500076293945312
    3. 'B' → logprob: -13.625076293945312
    4. ' B' → logprob: -18.625076293945312
    5. '-' → logprob: -20.375076293945312
    6. '   ' → logprob: -21.125076293945312
    7. '۰' → logprob: -21.250076293945312
    8. '  ' → logprob: -22.250076293945312
    9. '
' → logprob: -22.250076293945312
    10. 'A' → logprob: -22.375076293945312

Token 1180: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.452426608419046e-05
    2. 'B' → logprob: -10.75003433227539
    3. ' ' → logprob: -11.25003433227539
    4. ' B' → logprob: -17.12503433227539
    5. '-' → logprob: -19.50003433227539
    6. '۰' → logprob: -20.75003433227539
    7. '   ' → logprob: -21.12503433227539
    8. '  ' → logprob: -21.37503433227539
    9. '```' → logprob: -21.37503433227539
    10. '
' → logprob: -21.50003433227539

Token 1181: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023248620331287384
    2. 'and' → logprob: -3.7732486724853516
    3. '   ' → logprob: -14.148248672485352
    4. '           ' → logprob: -14.273248672485352
    5. ' ' → logprob: -14.523248672485352
    6. '       ' → logprob: -14.773248672485352
    7. '        ' → logprob: -15.523248672485352
    8. '    ' → logprob: -16.14824867248535
    9. '	and' → logprob: -16.27324867248535
    10. ' or' → logprob: -16.39824867248535

Token 1182: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -5.836499985889532e-05
    2. ' B' → logprob: -9.7500581741333
    3. '	B' → logprob: -22.250059127807617
    4. '   ' → logprob: -23.250059127807617
    5. 'b' → logprob: -24.000059127807617
    6. 'A' → logprob: -24.250059127807617
    7. '  ' → logprob: -24.375059127807617
    8. ' ' → logprob: -24.875059127807617
    9. 'P' → logprob: -25.625059127807617
    10. '=B' → logprob: -25.750059127807617

Token 1183: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2519305646419525
    2. ' ==' → logprob: -1.501930594444275
    3. '0' → logprob: -15.001930236816406
    4. '=' → logprob: -15.251930236816406
    5. '==
' → logprob: -15.501930236816406
    6. ' ' → logprob: -15.751930236816406
    7. '===' → logprob: -15.751930236816406
    8. ')==' → logprob: -16.126930236816406
    9. 'and' → logprob: -16.501930236816406
    10. '==-' → logprob: -17.001930236816406

Token 1184: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '۰' → logprob: -19.125003814697266
    4. '   ' → logprob: -19.625003814697266
    5. '  ' → logprob: -19.750003814697266
    6. '
' → logprob: -20.875003814697266
    7. 'and' → logprob: -21.187503814697266
    8. '০' → logprob: -21.687503814697266
    9. '```' → logprob: -21.937503814697266
    10. '०' → logprob: -22.125003814697266

Token 1185: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -19.0
    4. '-' → logprob: -19.125
    5. '۰' → logprob: -19.375
    6. '```' → logprob: -19.5625
    7. '  ' → logprob: -20.0625
    8. '1' → logprob: -20.1875
    9. '=' → logprob: -21.0
    10. '
' → logprob: -21.1875

Token 1186: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03806834667921066
    2. 'and' → logprob: -3.2880682945251465
    3. '           ' → logprob: -11.413068771362305
    4. '       ' → logprob: -11.538068771362305
    5. '0' → logprob: -13.288068771362305
    6. ':
' → logprob: -14.288068771362305
    7. '        ' → logprob: -14.413068771362305
    8. ':' → logprob: -14.413068771362305
    9. '<|end|>' → logprob: -14.538068771362305
    10. '          ' → logprob: -14.663068771362305

Token 1187: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.1472419600977446e-06
    2. ' P' → logprob: -13.750000953674316
    3. '  ' → logprob: -22.125001907348633
    4. ' ' → logprob: -22.500001907348633
    5. '	P' → logprob: -22.875001907348633
    6. '   ' → logprob: -22.875001907348633
    7. 'p' → logprob: -23.500001907348633
    8. '\P' → logprob: -25.000001907348633
    9. '<P' → logprob: -25.250001907348633
    10. '
' → logprob: -25.500001907348633

Token 1188: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3869280219078064
    2. ' ==' → logprob: -1.1369280815124512
    3. '=' → logprob: -10.261927604675293
    4. '0' → logprob: -11.761927604675293
    5. '==
' → logprob: -11.886927604675293
    6. '<|end|>' → logprob: -13.761927604675293
    7. '===' → logprob: -13.886927604675293
    8. ')==' → logprob: -13.886927604675293
    9. '()==' → logprob: -14.011927604675293
    10. ':' → logprob: -14.511927604675293

Token 1189: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '1' → logprob: -19.625
    4. '   ' → logprob: -20.125
    5. '  ' → logprob: -20.625
    6. '۰' → logprob: -21.0
    7. '```' → logprob: -21.625
    8. '০' → logprob: -22.0
    9. '<|end|>' → logprob: -22.5625
    10. '०' → logprob: -22.6875

Token 1190: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -15.125
    3. ' ' → logprob: -16.375
    4. '
' → logprob: -17.125
    5. '   ' → logprob: -18.5
    6. '```' → logprob: -18.875
    7. '``' → logprob: -19.625
    8. '       ' → logprob: -19.875
    9. '  ' → logprob: -20.125
    10. '-' → logprob: -20.375

Token 1191: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8649770617485046
    2. ':' → logprob: -1.2399771213531494
    3. ':
' → logprob: -1.2399771213531494
    4. '       ' → logprob: -9.23997688293457
    5. '          ' → logprob: -10.86497688293457
    6. '):
' → logprob: -12.23997688293457
    7. '   ' → logprob: -12.23997688293457
    8. ':return' → logprob: -12.23997688293457
    9. '		' → logprob: -12.36497688293457
    10. '               ' → logprob: -12.36497688293457

Token 1192: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0802738870552275e-05
    2. '       ' → logprob: -11.87501049041748
    3. '               ' → logprob: -14.00001049041748
    4. '          ' → logprob: -14.12501049041748
    5. '		' → logprob: -14.25001049041748
    6. '	       ' → logprob: -14.75001049041748
    7. ':' → logprob: -15.00001049041748
    8. ':
' → logprob: -15.12501049041748
    9. ' break' → logprob: -15.62501049041748
    10. '                   ' → logprob: -16.375011444091797

Token 1193: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0015577126760035753
    2. ' break' → logprob: -7.00155782699585
    3. '           ' → logprob: -8.001557350158691
    4. 'return' → logprob: -8.251557350158691
    5. '       ' → logprob: -10.001557350158691
    6. '	break' → logprob: -12.626557350158691
    7. '               ' → logprob: -14.126557350158691
    8. '_break' → logprob: -15.251557350158691
    9. '   ' → logprob: -15.376557350158691
    10. '```' → logprob: -15.501557350158691

Token 1194: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.622224748134613
    2. 'solver' → logprob: -1.2472248077392578
    3. '       ' → logprob: -1.8722248077392578
    4. ' solver' → logprob: -4.497224807739258
    5. '
' → logprob: -4.997224807739258
    6. '_solver' → logprob: -6.622224807739258
    7. '    
' → logprob: -6.872224807739258
    8. '        
' → logprob: -6.997224807739258
    9. '<|end|>' → logprob: -7.997224807739258
    10. 'solution' → logprob: -8.997224807739258

Token 1195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03639642149209976
    2. '   ' → logprob: -4.161396503448486
    3. 'solver' → logprob: -4.161396503448486
    4. ' solver' → logprob: -5.911396503448486
    5. '
' → logprob: -7.036396503448486
    6. '        
' → logprob: -7.661396503448486
    7. '```' → logprob: -8.911396026611328
    8. '    
' → logprob: -9.161396026611328
    9. '_solver' → logprob: -9.286396026611328
    10. 's' → logprob: -10.161396026611328

Token 1196: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.002982102334499359
    2. ' solver' → logprob: -6.002982139587402
    3. '   ' → logprob: -7.627982139587402
    4. '       ' → logprob: -11.252982139587402
    5. 's' → logprob: -12.502982139587402
    6. 'solution' → logprob: -13.752982139587402
    7. 'sol' → logprob: -14.127982139587402
    8. '_solver' → logprob: -14.752982139587402
    9. 'Solver' → logprob: -15.502982139587402
    10. '```' → logprob: -15.877982139587402

Token 1197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01842126064002514
    2. '=' → logprob: -4.018421173095703
    3. '       ' → logprob: -8.643421173095703
    4. '   ' → logprob: -10.393421173095703
    5. '.solve' → logprob: -11.643421173095703
    6. '_solver' → logprob: -12.018421173095703
    7. '=s' → logprob: -12.018421173095703
    8. '```' → logprob: -12.268421173095703
    9. '.' → logprob: -12.393421173095703
    10. '        
' → logprob: -12.518421173095703

Token 1198: ' Number' (ID: 9184)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.0009114635176956654
    2. ' Number' → logprob: -7.000911235809326
    3. '_Number' → logprob: -17.375911712646484
    4. '_number' → logprob: -20.875911712646484
    5. '(Number' → logprob: -21.625911712646484
    6. '.Number' → logprob: -22.625911712646484
    7. 'Num' → logprob: -22.750911712646484
    8. '   ' → logprob: -23.375911712646484
    9. 'number' → logprob: -24.375911712646484
    10. 'Numero' → logprob: -24.875911712646484

Token 1199: 'Sorting' (ID: 89508)
  Prédit: 'Sorting'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sorting' → logprob: 0.0
    2. ' Sorting' → logprob: -17.125
    3. 'sorting' → logprob: -19.375
    4. ' sorting' → logprob: -20.375
    5. 'Skipping' → logprob: -21.5
    6. 'Sorted' → logprob: -22.125
    7. 'Sort' → logprob: -22.375
    8. 'Number' → logprob: -22.375
    9. 'Sol' → logprob: -22.875
    10. 'Sorter' → logprob: -23.125

Token 1200: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -5.514650183613412e-05
    2. 'solver' → logprob: -9.875055313110352
    3. 'Sorter' → logprob: -13.500055313110352
    4. '_solver' → logprob: -13.750055313110352
    5. ' solver' → logprob: -13.875055313110352
    6. ' Solver' → logprob: -15.750055313110352
    7. '```' → logprob: -17.87505531311035
    8. '   ' → logprob: -18.12505531311035
    9. 'Solve' → logprob: -18.50005531311035
    10. '
' → logprob: -18.75005531311035

Token 1201: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.001821673708036542
    2. '(' → logprob: -7.001821517944336
    3. 'solver' → logprob: -7.751821517944336
    4. '(
' → logprob: -8.376821517944336
    5. '(s' → logprob: -8.501821517944336
    6. '(line' → logprob: -10.876821517944336
    7. '((' → logprob: -12.501821517944336
    8. '   ' → logprob: -12.751821517944336
    9. 'A' → logprob: -12.751821517944336
    10. ' solver' → logprob: -12.876821517944336

Token 1202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036256047897040844
    2. ',B' → logprob: -5.628625392913818
    3. ' ,' → logprob: -11.128625869750977
    4. ',
' → logprob: -12.503625869750977
    5. '       ' → logprob: -12.878625869750977
    6. ',b' → logprob: -13.878625869750977
    7. ',A' → logprob: -14.003625869750977
    8. '   ' → logprob: -14.378625869750977
    9. ',P' → logprob: -14.503625869750977
    10. '```' → logprob: -15.128625869750977

Token 1203: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -5.836499985889532e-05
    2. ' B' → logprob: -9.7500581741333
    3. '       ' → logprob: -18.750059127807617
    4. '   ' → logprob: -19.125059127807617
    5. ' ' → logprob: -20.875059127807617
    6. '	B' → logprob: -21.125059127807617
    7. '        
' → logprob: -21.250059127807617
    8. '           ' → logprob: -21.875059127807617
    9. '>B' → logprob: -21.875059127807617
    10. '<|end|>' → logprob: -21.875059127807617

Token 1204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01816117763519287
    2. ',P' → logprob: -4.018161296844482
    3. ' ,' → logprob: -11.768160820007324
    4. 'P' → logprob: -13.518160820007324
    5. ',p' → logprob: -14.018160820007324
    6. ',
' → logprob: -14.768160820007324
    7. ')' → logprob: -14.893160820007324
    8. ',B' → logprob: -15.268160820007324
    9. '<|end|>' → logprob: -16.26816177368164
    10. '       ' → logprob: -17.01816177368164

Token 1205: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.676292231422849e-05
    2. ' P' → logprob: -11.000017166137695
    3. '   ' → logprob: -20.125017166137695
    4. '       ' → logprob: -20.625017166137695
    5. '           ' → logprob: -21.375017166137695
    6. '	P' → logprob: -21.875017166137695
    7. 'p' → logprob: -22.125017166137695
    8. '
' → logprob: -22.375017166137695
    9. ' ' → logprob: -22.375017166137695
    10. '```' → logprob: -23.000017166137695

Token 1206: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012308906763792038
    2. ')' → logprob: -5.1373090744018555
    3. '.calculate' → logprob: -6.1373090744018555
    4. ').' → logprob: -6.5123090744018555
    5. '.solve' → logprob: -6.7623090744018555
    6. '<|end|>' → logprob: -7.5123090744018555
    7. ')
' → logprob: -7.8873090744018555
    8. '   ' → logprob: -8.262309074401855
    9. '<|end|>' → logprob: -9.512309074401855
    10. 'solver' → logprob: -10.137309074401855

Token 1207: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2659522294998169
    2. 'result' → logprob: -1.515952229499817
    3. 'print' → logprob: -4.890952110290527
    4. '   ' → logprob: -5.515952110290527
    5. 'solver' → logprob: -6.515952110290527
    6. 'output' → logprob: -8.265952110290527
    7. 'solution' → logprob: -8.265952110290527
    8. ' result' → logprob: -8.890952110290527
    9. 'res' → logprob: -9.390952110290527
    10. 'response' → logprob: -10.515952110290527

Token 1208: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.641841820150148e-05
    2. 'result' → logprob: -11.00002670288086
    3. ' print' → logprob: -11.75002670288086
    4. 'res' → logprob: -14.25002670288086
    5. 'output' → logprob: -14.37502670288086
    6. '       ' → logprob: -15.00002670288086
    7. 'answer' → logprob: -15.75002670288086
    8. 'solver' → logprob: -16.00002670288086
    9. '        
' → logprob: -17.62502670288086
    10. '   ' → logprob: -17.87502670288086

Token 1209: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0009246804984286427
    2. 'solver' → logprob: -7.000924587249756
    3. '(' → logprob: -11.375925064086914
    4. '(sol' → logprob: -14.125925064086914
    5. 'sol' → logprob: -15.000925064086914
    6. '(solution' → logprob: -15.500925064086914
    7. 's' → logprob: -16.000925064086914
    8. ' solver' → logprob: -16.375925064086914
    9. '(
' → logprob: -16.500925064086914
    10. '((' → logprob: -17.875925064086914

Token 1210: 'olver' (ID: 13941)
  Prédit: 'olver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olver' → logprob: -3.249780638725497e-05
    2. 'olve' → logprob: -11.250032424926758
    3. 'tr' → logprob: -11.500032424926758
    4. 'solver' → logprob: -12.375032424926758
    5. 'ol' → logprob: -13.250032424926758
    6. '(' → logprob: -13.625032424926758
    7. 'erver' → logprob: -14.250032424926758
    8. 'oler' → logprob: -14.500032424926758
    9. 'over' → logprob: -14.750032424926758
    10. 't' → logprob: -16.500032424926758

Token 1211: '.calculate' (ID: 67851)
  Prédit: '.calculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.calculate' → logprob: -9.253090865968261e-06
    2. ').' → logprob: -12.375009536743164
    3. ')' → logprob: -13.375009536743164
    4. '.' → logprob: -13.750009536743164
    5. '.Calculate' → logprob: -14.000009536743164
    6. ' .' → logprob: -14.875009536743164
    7. '.compute' → logprob: -15.125009536743164
    8. '.cal' → logprob: -15.250009536743164
    9. '.solve' → logprob: -15.375009536743164
    10. '.)' → logprob: -16.250009536743164

Token 1212: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0011952288914471865
    2. '()' → logprob: -6.751195430755615
    3. '())
' → logprob: -10.626194953918457
    4. ' ())' → logprob: -14.751194953918457
    5. '()
' → logprob: -16.001195907592773
    6. ')' → logprob: -16.126195907592773
    7. '())
' → logprob: -16.876195907592773
    8. '(' → logprob: -17.126195907592773
    9. '())

' → logprob: -17.251195907592773
    10. '()))' → logprob: -17.876195907592773

Token 1213: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15485325455665588
    2. '<|end|>' → logprob: -2.779853343963623
    3. '#' → logprob: -3.154853343963623
    4. '```' → logprob: -3.404853343963623
    5. ' if' → logprob: -5.529853343963623
    6. '
' → logprob: -7.529853343963623
    7. '<|end|>' → logprob: -8.404852867126465
    8. '__' → logprob: -8.654852867126465
    9. '{' → logprob: -9.404852867126465
    10. '...' → logprob: -9.529852867126465

Token 1214: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3135563135147095
    2. '__' → logprob: -1.3135563135147095
    3. '_name' → logprob: -8.313556671142578
    4. '_' → logprob: -10.438556671142578
    5. 'name' → logprob: -11.438556671142578
    6. '___' → logprob: -12.188556671142578
    7. '  ' → logprob: -13.938556671142578
    8. ' _' → logprob: -14.313556671142578
    9. ' name' → logprob: -14.938556671142578
    10. ' "__' → logprob: -14.938556671142578

Token 1215: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01606510579586029
    2. 'name' → logprob: -4.8910651206970215
    3. ' ==' → logprob: -5.1410651206970215
    4. '==' → logprob: -6.1410651206970215
    5. '.__' → logprob: -9.391064643859863
    6. '__.__' → logprob: -9.391064643859863
    7. '=="' → logprob: -9.641064643859863
    8. ' __' → logprob: -9.891064643859863
    9. '_name' → logprob: -10.891064643859863
    10. '[' → logprob: -11.141064643859863

Token 1216: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.057743949990254e-05
    2. '==' → logprob: -11.500020980834961
    3. '__.__' → logprob: -12.125020980834961
    4. '=="' → logprob: -12.875020980834961
    5. ' ==' → logprob: -13.875020980834961
    6. '__
' → logprob: -14.875020980834961
    7. 'name' → logprob: -15.250020980834961
    8. '____' → logprob: -15.750020980834961
    9. '=='' → logprob: -16.00002098083496
    10. '__["' → logprob: -16.12502098083496

Token 1217: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.34378689527511597
    2. '__' → logprob: -1.3437869548797607
    3. '=="' → logprob: -3.8437869548797607
    4. ' ==' → logprob: -4.843786716461182
    5. '=='' → logprob: -7.218786716461182
    6. '==
' → logprob: -11.21878719329834
    7. '"' → logprob: -11.84378719329834
    8. '===' → logprob: -12.46878719329834
    9. '=' → logprob: -12.59378719329834
    10. '```' → logprob: -12.71878719329834

Token 1218: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3868817985057831
    2. ''' → logprob: -1.1368818283081055
    3. '__' → logprob: -11.636881828308105
    4. ' "__' → logprob: -13.761881828308105
    5. ' '__' → logprob: -15.636881828308105
    6. ''"' → logprob: -16.26188087463379
    7. '('__' → logprob: -16.38688087463379
    8. ''name' → logprob: -16.76188087463379
    9. '"user' → logprob: -16.76188087463379
    10. ''m' → logprob: -16.88688087463379

Token 1219: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5891956090927124
    2. 'main' → logprob: -0.8391956090927124
    3. '"' → logprob: -4.339195728302002
    4. ''' → logprob: -9.089195251464844
    5. ' "__' → logprob: -12.839195251464844
    6. 'name' → logprob: -12.964195251464844
    7. '___' → logprob: -13.714195251464844
    8. '"name' → logprob: -14.089195251464844
    9. '__":
' → logprob: -14.714195251464844
    10. 'built' → logprob: -15.089195251464844

Token 1220: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.1165204793214798
    2. '__' → logprob: -2.241520404815674
    3. '__':
' → logprob: -5.866520404815674
    4. '__.__' → logprob: -8.116520881652832
    5. '__
' → logprob: -8.491520881652832
    6. '__.' → logprob: -8.616520881652832
    7. '__["' → logprob: -8.866520881652832
    8. '__("' → logprob: -12.241520881652832
    9. '__()
' → logprob: -12.366520881652832
    10. '__
' → logprob: -12.366520881652832

Token 1221: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00597335072234273
    2. '__' → logprob: -5.1309733390808105
    3. '   ' → logprob: -10.380973815917969
    4. ' main' → logprob: -12.255973815917969
    5. '	main' → logprob: -12.880973815917969
    6. '```' → logprob: -13.005973815917969
    7. 'run' → logprob: -13.880973815917969
    8. '__":
' → logprob: -14.005973815917969
    9. '____' → logprob: -14.130973815917969
    10. '_main' → logprob: -14.630973815917969

Token 1222: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.008129963040119e-06
    2. 'import' → logprob: -12.500003814697266
    3. ' main' → logprob: -16.000003814697266
    4. '   ' → logprob: -16.500003814697266
    5. '	main' → logprob: -16.500003814697266
    6. '_main' → logprob: -22.875003814697266
    7. '```' → logprob: -22.875003814697266
    8. '.main' → logprob: -23.125003814697266
    9. '(main' → logprob: -23.125003814697266
    10. '
' → logprob: -24.125003814697266

Token 1223: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1221
Tokens correctement prédits (1ère position, stricte): 529
Tokens correctement prédits (1ère position, avec adaptation): 581
Tokens correctement prédits (top 10): 1027
Précision stricte (1ère position): 43.33%
Précision adaptée (1ère position): 47.58%
Précision (top 10): 84.11%
================================================================================
