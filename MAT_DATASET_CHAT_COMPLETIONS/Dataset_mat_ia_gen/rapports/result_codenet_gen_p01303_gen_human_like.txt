================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
t = int(input())
for _ in range(t):
    X, Y, W, H = map(int, input().split())
    N = int(input())
    count = 0
    for __ in range(N):
        x, y = map(int, input().split())
        if X <= x <= X + W and Y <= y <= Y + H:
            count += 1
    print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 't' (ID: 83)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00029470553272403777
    2. '(t' → logprob: -8.87529468536377
    3. '(
' → logprob: -10.25029468536377
    4. ')' → logprob: -10.62529468536377
    5. '```' → logprob: -10.75029468536377
    6. ''' → logprob: -10.87529468536377
    7. 't' → logprob: -11.12529468536377
    8. '('' → logprob: -11.25029468536377
    9. '`' → logprob: -12.25029468536377
    10. '()' → logprob: -12.62529468536377

Token 4: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6585825681686401
    2. '(' → logprob: -0.7835825681686401
    3. '()' → logprob: -4.28358268737793
    4. '())' → logprob: -5.28358268737793
    5. '")' → logprob: -6.40858268737793
    6. '))' → logprob: -6.53358268737793
    7. '')' → logprob: -6.78358268737793
    8. '(
' → logprob: -7.03358268737793
    9. '`)' → logprob: -8.28358268737793
    10. '('' → logprob: -8.53358268737793

Token 5: 'for' (ID: 1938)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.05984928458929062
    2. 'for' → logprob: -2.934849262237549
    3. '\' → logprob: -6.309849262237549
    4. '\r' → logprob: -6.684849262237549
    5. ' for' → logprob: -7.184849262237549
    6. ')' → logprob: -8.684849739074707
    7. '' → logprob: -8.934849739074707
    8. '#' → logprob: -9.309849739074707
    9. '
' → logprob: -9.309849739074707
    10. '  
' → logprob: -9.309849739074707

Token 6: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006747227627784014
    2. ' i' → logprob: -5.506747245788574
    3. '  ' → logprob: -6.256747245788574
    4. ' t' → logprob: -7.881747245788574
    5. ''' → logprob: -9.006747245788574
    6. ' ' → logprob: -9.631747245788574
    7. 'i' → logprob: -10.131747245788574
    8. ' n' → logprob: -10.256747245788574
    9. '_' → logprob: -11.256747245788574
    10. '"' → logprob: -11.256747245788574

Token 7: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.039859820157289505
    2. 'in' → logprob: -3.2898597717285156
    3. ' ' → logprob: -6.414859771728516
    4. '  ' → logprob: -9.289859771728516
    5. ' i' → logprob: -10.289859771728516
    6. ',' → logprob: -11.539859771728516
    7. ')' → logprob: -12.164859771728516
    8. ' ,' → logprob: -12.164859771728516
    9. '_' → logprob: -12.289859771728516
    10. '<|end|>' → logprob: -12.289859771728516

Token 8: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759419202804565
    2. ' range' → logprob: -0.8259419202804565
    3. ' ' → logprob: -13.950942039489746
    4. '	range' → logprob: -14.200942039489746
    5. '_range' → logprob: -15.700942039489746
    6. '(range' → logprob: -15.700942039489746
    7. 't' → logprob: -15.825942039489746
    8. '_' → logprob: -15.825942039489746
    9. ' in' → logprob: -16.32594108581543
    10. ' t' → logprob: -16.70094108581543

Token 9: '(t' (ID: 2025)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00011903966515092179
    2. ' (' → logprob: -9.62511920928955
    3. '(t' → logprob: -10.37511920928955
    4. '(n' → logprob: -11.62511920928955
    5. '(range' → logprob: -11.75011920928955
    6. '(len' → logprob: -13.37511920928955
    7. '(`' → logprob: -14.37511920928955
    8. '((' → logprob: -14.87511920928955
    9. '(i' → logprob: -15.50011920928955
    10. '(
' → logprob: -15.50011920928955

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005111014936119318
    2. ')' → logprob: -5.630111217498779
    3. ':' → logprob: -6.505111217498779
    4. '):
' → logprob: -11.755110740661621
    5. ' ):' → logprob: -13.505110740661621
    6. ':)' → logprob: -13.880110740661621
    7. ''):' → logprob: -14.005110740661621
    8. '```' → logprob: -14.630110740661621
    9. '():' → logprob: -14.880110740661621
    10. ':**' → logprob: -15.255110740661621

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007111206650733948
    2. '    
' → logprob: -7.375710964202881
    3. '```' → logprob: -10.500711441040039
    4. '   ' → logprob: -11.125711441040039
    5. ' input' → logprob: -11.875711441040039
    6. 'input' → logprob: -11.875711441040039
    7. ' 
' → logprob: -12.250711441040039
    8. 'a' → logprob: -12.750711441040039
    9. 'n' → logprob: -12.750711441040039
    10. '    ' → logprob: -13.125711441040039

Token 12: ' X' (ID: 2127)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6010721921920776
    2. '   ' → logprob: -0.8510721921920776
    3. ' n' → logprob: -4.351072311401367
    4. 'a' → logprob: -5.101072311401367
    5. 'x' → logprob: -5.601072311401367
    6. 's' → logprob: -7.851072311401367
    7. 'line' → logprob: -7.851072311401367
    8. 'num' → logprob: -8.101072311401367
    9. 'print' → logprob: -8.351072311401367
    10. 'data' → logprob: -8.601072311401367

Token 13: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04969165101647377
    2. '=' → logprob: -3.549691677093506
    3. ' ' → logprob: -4.299691677093506
    4. ',' → logprob: -5.799691677093506
    5. ' +=' → logprob: -6.799691677093506
    6. '[' → logprob: -7.299691677093506
    7. ')' → logprob: -8.174691200256348
    8. '   ' → logprob: -8.674691200256348
    9. '=int' → logprob: -8.799691200256348
    10. '  ' → logprob: -8.924691200256348

Token 14: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.47944533824920654
    2. ' Y' → logprob: -0.9794453382492065
    3. ' ' → logprob: -5.729445457458496
    4. 'y' → logprob: -6.979445457458496
    5. 'input' → logprob: -8.854445457458496
    6. '  ' → logprob: -8.979445457458496
    7. '=' → logprob: -9.104445457458496
    8. ' y' → logprob: -9.354445457458496
    9. ' t' → logprob: -9.354445457458496
    10. ' =' → logprob: -9.479445457458496

Token 15: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2829059660434723
    2. '=' → logprob: -1.40790593624115
    3. ',' → logprob: -6.4079060554504395
    4. ')' → logprob: -9.657905578613281
    5. '=input' → logprob: -10.782905578613281
    6. ' ' → logprob: -11.782905578613281
    7. '   ' → logprob: -12.657905578613281
    8. '  ' → logprob: -13.032905578613281
    9. ' ,' → logprob: -13.157905578613281
    10. '=int' → logprob: -13.657905578613281

Token 16: ' W' (ID: 486)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31921353936195374
    2. '=' → logprob: -1.3192135095596313
    3. ' ' → logprob: -5.694213390350342
    4. 'Z' → logprob: -6.944213390350342
    5. ' Z' → logprob: -7.569213390350342
    6. 'input' → logprob: -8.0692138671875
    7. '  ' → logprob: -8.1942138671875
    8. '=input' → logprob: -8.8192138671875
    9. '   ' → logprob: -9.3192138671875
    10. 'map' → logprob: -9.6942138671875

Token 17: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4764033854007721
    2. ' =' → logprob: -0.9764033555984497
    3. ',' → logprob: -6.10140323638916
    4. '=input' → logprob: -10.10140323638916
    5. ')' → logprob: -10.35140323638916
    6. ' ' → logprob: -12.60140323638916
    7. ' ,' → logprob: -13.85140323638916
    8. '.' → logprob: -14.10140323638916
    9. ')=' → logprob: -14.22640323638916
    10. '   ' → logprob: -14.41390323638916

Token 18: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0424005389213562
    2. 'D' → logprob: -3.417400598526001
    3. ' H' → logprob: -5.792400360107422
    4. 'L' → logprob: -6.792400360107422
    5. 'Z' → logprob: -6.917400360107422
    6. 'C' → logprob: -7.042400360107422
    7. 'B' → logprob: -7.292400360107422
    8. 'M' → logprob: -7.792400360107422
    9. 'S' → logprob: -8.292400360107422
    10. 'V' → logprob: -8.542400360107422

Token 19: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10025271773338318
    2. ' =' → logprob: -2.350252628326416
    3. ',' → logprob: -10.600253105163574
    4. '=input' → logprob: -11.100253105163574
    5. ')' → logprob: -12.600253105163574
    6. '   ' → logprob: -13.725253105163574
    7. '```' → logprob: -15.475253105163574
    8. ' ' → logprob: -15.600253105163574
    9. 'input' → logprob: -15.725253105163574
    10. '>' → logprob: -15.725253105163574

Token 20: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.023270871490240097
    2. 'map' → logprob: -3.773270845413208
    3. ' ' → logprob: -11.648270606994629
    4. ' input' → logprob: -12.148270606994629
    5. '	map' → logprob: -12.773270606994629
    6. ' list' → logprob: -12.898270606994629
    7. '   ' → logprob: -13.023270606994629
    8. 'input' → logprob: -13.523270606994629
    9. ' [' → logprob: -14.273270606994629
    10. '[' → logprob: -14.273270606994629

Token 21: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.09479016065597534
    2. '(' → logprob: -2.46979022026062
    3. '(input' → logprob: -5.344789981842041
    4. '(str' → logprob: -7.594789981842041
    5. '(lambda' → logprob: -8.2197904586792
    6. '(list' → logprob: -8.3447904586792
    7. '(map' → logprob: -11.0947904586792
    8. '(
' → logprob: -11.4697904586792
    9. 'int' → logprob: -12.4697904586792
    10. '<int' → logprob: -12.5947904586792

Token 22: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.23496286571025848
    2. ',input' → logprob: -1.734962821006775
    3. ',' → logprob: -3.6099629402160645
    4. 'input' → logprob: -5.2349629402160645
    5. '=input' → logprob: -8.734962463378906
    6. ')' → logprob: -8.984962463378906
    7. ' input' → logprob: -9.109962463378906
    8. '(' → logprob: -9.234962463378906
    9. '<input' → logprob: -9.984962463378906
    10. '```' → logprob: -10.609962463378906

Token 23: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16022524237632751
    2. ' input' → logprob: -1.91022527217865
    3. '(input' → logprob: -15.035224914550781
    4. '=input' → logprob: -15.160224914550781
    5. ',input' → logprob: -15.535224914550781
    6. ' ' → logprob: -15.910224914550781
    7. '	input' → logprob: -16.41022491455078
    8. '<input' → logprob: -17.16022491455078
    9. '   ' → logprob: -17.53522491455078
    10. '```' → logprob: -17.66022491455078

Token 24: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.618001053633634e-05
    2. '()' → logprob: -10.875025749206543
    3. '())' → logprob: -11.875025749206543
    4. ')' → logprob: -16.25002670288086
    5. ' ().' → logprob: -16.75002670288086
    6. '()
' → logprob: -17.12502670288086
    7. '()))' → logprob: -18.25002670288086
    8. '(' → logprob: -19.00002670288086
    9. '());' → logprob: -19.37502670288086
    10. '()

' → logprob: -20.00002670288086

Token 25: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00012749579036608338
    2. 'strip' → logprob: -9.000127792358398
    3. 'rstrip' → logprob: -12.500127792358398
    4. ' split' → logprob: -15.375127792358398
    5. '(split' → logprob: -16.1251277923584
    6. 'spl' → logprob: -17.3751277923584
    7. ')' → logprob: -18.6251277923584
    8. '```' → logprob: -20.3751277923584
    9. 'startswith' → logprob: -21.0001277923584
    10. 's' → logprob: -21.1251277923584

Token 26: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13541273772716522
    2. '())' → logprob: -2.1354126930236816
    3. '))' → logprob: -5.260412693023682
    4. '()' → logprob: -5.760412693023682
    5. '()))' → logprob: -9.38541316986084
    6. '(' → logprob: -12.01041316986084
    7. '`)' → logprob: -12.38541316986084
    8. ')`' → logprob: -13.01041316986084
    9. '())
' → logprob: -13.51041316986084
    10. '')' → logprob: -13.51041316986084

Token 27: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.127174511551857
    2. 'min' → logprob: -2.5021746158599854
    3. 'd' → logprob: -4.377174377441406
    4. 'm' → logprob: -4.377174377441406
    5. ')' → logprob: -5.502174377441406
    6. 'dist' → logprob: -6.002174377441406
    7. '```' → logprob: -6.877174377441406
    8. 'p' → logprob: -7.002174377441406
    9. '
' → logprob: -7.377174377441406
    10. 'distance' → logprob: -7.627174377441406

Token 28: ' N' (ID: 478)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.9950428009033203
    2. 'print' → logprob: -0.9950428009033203
    3. 'dist' → logprob: -1.4950428009033203
    4. 'd' → logprob: -4.12004280090332
    5. 'dx' → logprob: -4.87004280090332
    6. 'left' → logprob: -5.49504280090332
    7. 'distance' → logprob: -6.62004280090332
    8. 'diff' → logprob: -6.74504280090332
    9. 'a' → logprob: -6.87004280090332
    10. 'result' → logprob: -6.99504280090332

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31966251134872437
    2. '=' → logprob: -1.8196625709533691
    3. 'ext' → logprob: -2.444662570953369
    4. 'e' → logprob: -4.069662570953369
    5. 'E' → logprob: -6.069662570953369
    6. '_ext' → logprob: -6.444662570953369
    7. '_' → logprob: -6.944662570953369
    8. '=min' → logprob: -7.194662570953369
    9. '   ' → logprob: -7.819662570953369
    10. '-' → logprob: -8.569662094116211

Token 30: ' int' (ID: 677)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.28272950649261475
    2. ' min' → logprob: -1.4077295064926147
    3. 'X' → logprob: -7.157729625701904
    4. '[min' → logprob: -8.782729148864746
    5. ' X' → logprob: -9.032729148864746
    6. 'W' → logprob: -9.157729148864746
    7. ' W' → logprob: -9.282729148864746
    8. '(min' → logprob: -9.407729148864746
    9. '   ' → logprob: -9.532729148864746
    10. '0' → logprob: -9.782729148864746

Token 31: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.009825976565480232
    2. '(' → logprob: -4.634826183319092
    3. 'input' → logprob: -10.509825706481934
    4. ' (' → logprob: -11.009825706481934
    5. '()' → logprob: -11.259825706481934
    6. '(X' → logprob: -12.759825706481934
    7. '(x' → logprob: -12.884825706481934
    8. '(
' → logprob: -13.634825706481934
    9. ' ' → logprob: -13.759825706481934
    10. ' input' → logprob: -14.134825706481934

Token 32: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0809241533279419
    2. '()' → logprob: -2.5809240341186523
    3. ')' → logprob: -6.205924034118652
    4. '())
' → logprob: -12.080924034118652
    5. '(' → logprob: -12.705924034118652
    6. ' ())' → logprob: -13.080924034118652
    7. '()
' → logprob: -13.330924034118652
    8. '();)' → logprob: -13.830924034118652
    9. '()))' → logprob: -14.830924034118652
    10. '().' → logprob: -15.080924034118652

Token 33: '   ' (ID: 271)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8921183347702026
    2. '   ' → logprob: -1.7671183347702026
    3. 'm' → logprob: -2.142118453979492
    4. 'dist' → logprob: -3.142118453979492
    5. 'd' → logprob: -3.267118453979492
    6. 'for' → logprob: -3.392118453979492
    7. 'distance' → logprob: -3.517118453979492
    8. ')' → logprob: -3.892118453979492
    9. 'result' → logprob: -3.892118453979492
    10. 'positions' → logprob: -4.517118453979492

Token 34: ' count' (ID: 3605)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9131835699081421
    2. 'min' → logprob: -2.5381836891174316
    3. 'max' → logprob: -2.5381836891174316
    4. 'd' → logprob: -2.6631836891174316
    5. ' ' → logprob: -3.0381836891174316
    6. 'n' → logprob: -3.2881836891174316
    7. 'result' → logprob: -3.4131836891174316
    8. 's' → logprob: -3.4131836891174316
    9. 'm' → logprob: -3.9131836891174316
    10. '(' → logprob: -4.288183689117432

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16231924295425415
    2. '=' → logprob: -2.0373191833496094
    3. '_' → logprob: -4.412319183349609
    4. ' ' → logprob: -5.412319183349609
    5. '(' → logprob: -6.412319183349609
    6. 's' → logprob: -7.412319183349609
    7. ' +=' → logprob: -8.03731918334961
    8. ')' → logprob: -9.41231918334961
    9. '  ' → logprob: -10.03731918334961
    10. 'space' → logprob: -10.78731918334961

Token 36: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31334415078163147
    2. ' ' → logprob: -1.313344120979309
    3. ' N' → logprob: -11.31334400177002
    4. ' min' → logprob: -11.75084400177002
    5. '1' → logprob: -12.06334400177002
    6. ' X' → logprob: -12.12584400177002
    7. '   ' → logprob: -12.31334400177002
    8. ' max' → logprob: -12.31334400177002
    9. ' ' → logprob: -12.56334400177002
    10. '  ' → logprob: -12.68834400177002

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000529202981851995
    2. ' ' → logprob: -7.8755292892456055
    3. 'N' → logprob: -10.000529289245605
    4. 'max' → logprob: -10.750529289245605
    5. 'min' → logprob: -11.000529289245605
    6. '(' → logprob: -11.000529289245605
    7. 'abs' → logprob: -11.375529289245605
    8. 'X' → logprob: -11.750529289245605
    9. 'sum' → logprob: -11.875529289245605
    10. '1' → logprob: -12.625529289245605

Token 38: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.458389163017273
    2. 'for' → logprob: -1.583389163017273
    3. ' for' → logprob: -1.708389163017273
    4. '<|end|>' → logprob: -1.708389163017273
    5. '\n' → logprob: -2.3333892822265625
    6. ' 
' → logprob: -3.5833892822265625
    7. '
' → logprob: -3.5833892822265625
    8. ' ' → logprob: -4.2083892822265625
    9. '\' → logprob: -4.5833892822265625
    10. '    
' → logprob: -5.3333892822265625

Token 40: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.24360521137714386
    2. ' for' → logprob: -1.9936052560806274
    3. '   ' → logprob: -3.243605136871338
    4. '<|end|>' → logprob: -3.368605136871338
    5. '\n' → logprob: -6.618605136871338
    6. '	for' → logprob: -6.868605136871338
    7. '```' → logprob: -7.243605136871338
    8. '\' → logprob: -7.368605136871338
    9. ' ' → logprob: -7.618605136871338
    10. ')' → logprob: -7.618605136871338

Token 41: ' __' (ID: 2516)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.37773019075393677
    2. ' ' → logprob: -1.252730131149292
    3. '_' → logprob: -4.252730369567871
    4. ' i' → logprob: -4.502730369567871
    5. ' range' → logprob: -6.252730369567871
    6. ' N' → logprob: -7.127730369567871
    7. '  ' → logprob: -7.877730369567871
    8. ' n' → logprob: -8.627730369567871
    9. ' in' → logprob: -9.627730369567871
    10. ' I' → logprob: -9.752730369567871

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015543542802333832
    2. 'in' → logprob: -4.265543460845947
    3. ' ' → logprob: -6.640543460845947
    4. 'range' → logprob: -10.515543937683105
    5. '  ' → logprob: -11.390543937683105
    6. '_' → logprob: -11.390543937683105
    7. '    ' → logprob: -12.015543937683105
    8. ' _' → logprob: -12.265543937683105
    9. '   ' → logprob: -13.140543937683105
    10. '0' → logprob: -13.265543937683105

Token 43: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931604743003845
    2. 'range' → logprob: -0.6931604743003845
    3. '_' → logprob: -11.818160057067871
    4. ' ' → logprob: -13.568160057067871
    5. '(range' → logprob: -13.693160057067871
    6. '	range' → logprob: -14.318160057067871
    7. 'in' → logprob: -14.818160057067871
    8. 'rang' → logprob: -14.943160057067871
    9. ' in' → logprob: -15.443160057067871
    10. 'ran' → logprob: -15.443160057067871

Token 44: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6955325603485107
    2. '(N' → logprob: -0.6955325603485107
    3. '(n' → logprob: -6.82053279876709
    4. ' (' → logprob: -6.82053279876709
    5. '(t' → logprob: -9.44553279876709
    6. ' N' → logprob: -9.82053279876709
    7. '(count' → logprob: -10.44553279876709
    8. ' ' → logprob: -11.19553279876709
    9. '(range' → logprob: -12.07053279876709
    10. '(s' → logprob: -12.69553279876709

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0038767927326261997
    2. '):
' → logprob: -6.878876686096191
    3. ':' → logprob: -7.003876686096191
    4. ')' → logprob: -7.253876686096191
    5. ' ):' → logprob: -7.253876686096191
    6. '   ' → logprob: -7.628876686096191
    7. ',' → logprob: -12.253876686096191
    8. ' )' → logprob: -12.503876686096191
    9. ' :' → logprob: -12.753876686096191
    10. '       ' → logprob: -13.003876686096191

Token 46: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1494719535112381
    2. '   ' → logprob: -2.3994719982147217
    3. '    ' → logprob: -3.7744719982147217
    4. ' ' → logprob: -5.149471759796143
    5. '<|end|>' → logprob: -5.149471759796143
    6. '    
' → logprob: -6.024471759796143
    7. '        
' → logprob: -6.274471759796143
    8. '        ' → logprob: -6.524471759796143
    9. ' 
' → logprob: -6.774471759796143
    10. '     ' → logprob: -7.024471759796143

Token 47: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.38377079367637634
    2. ' x' → logprob: -1.7587708234786987
    3. '   ' → logprob: -2.758770704269409
    4. 'X' → logprob: -3.633770704269409
    5. ' X' → logprob: -4.133770942687988
    6. 'abs' → logprob: -6.008770942687988
    7. 'w' → logprob: -6.008770942687988
    8. ' ' → logprob: -6.008770942687988
    9. '    ' → logprob: -6.133770942687988
    10. 't' → logprob: -6.133770942687988

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019745321944355965
    2. ' ,' → logprob: -4.519745349884033
    3. '1' → logprob: -5.394745349884033
    4. ',y' → logprob: -5.894745349884033
    5. '_,' → logprob: -7.519745349884033
    6. '0' → logprob: -8.144744873046875
    7. '_' → logprob: -8.894744873046875
    8. 'y' → logprob: -9.019744873046875
    9. 's' → logprob: -10.144744873046875
    10. 'i' → logprob: -10.269744873046875

Token 49: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.47418212890625
    2. ' y' → logprob: -0.97418212890625
    3. ' ' → logprob: -9.47418212890625
    4. '  ' → logprob: -11.84918212890625
    5. '    ' → logprob: -11.97418212890625
    6. '   ' → logprob: -12.72418212890625
    7. '<|end|>' → logprob: -12.72418212890625
    8. '	y' → logprob: -13.09918212890625
    9. ',y' → logprob: -14.22418212890625
    10. '=' → logprob: -14.34918212890625

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21345707774162292
    2. '=' → logprob: -1.9634571075439453
    3. ',' → logprob: -2.9634571075439453
    4. ')' → logprob: -9.713457107543945
    5. ' ,' → logprob: -9.713457107543945
    6. '=input' → logprob: -10.838457107543945
    7. '   ' → logprob: -11.088457107543945
    8. ' ' → logprob: -11.588457107543945
    9. '    ' → logprob: -11.963457107543945
    10. '  ' → logprob: -12.400957107543945

Token 51: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.004084216430783272
    2. 'map' → logprob: -5.50408411026001
    3. ' list' → logprob: -13.129084587097168
    4. '   ' → logprob: -14.004084587097168
    5. ' input' → logprob: -14.129084587097168
    6. ' ' → logprob: -14.254084587097168
    7. '	map' → logprob: -14.254084587097168
    8. '    ' → logprob: -15.379084587097168
    9. ' mapa' → logprob: -16.00408363342285
    10. '  ' → logprob: -16.12908363342285

Token 52: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00014692598779220134
    2. '(' → logprob: -8.875146865844727
    3. '<int' → logprob: -12.625146865844727
    4. '<|end|>' → logprob: -13.875146865844727
    5. '[int' → logprob: -14.125146865844727
    6. '(str' → logprob: -14.250146865844727
    7. ' (' → logprob: -14.500146865844727
    8. '=int' → logprob: -14.750146865844727
    9. '(input' → logprob: -15.750146865844727
    10. ',int' → logprob: -16.500146865844727

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02541208453476429
    2. ',input' → logprob: -4.275412082672119
    3. ',int' → logprob: -4.650412082672119
    4. '(' → logprob: -7.275412082672119
    5. '(int' → logprob: -7.650412082672119
    6. '(input' → logprob: -8.025412559509277
    7. ' ,' → logprob: -9.650412559509277
    8. '(),' → logprob: -10.650412559509277
    9. ')' → logprob: -11.400412559509277
    10. '```' → logprob: -11.525412559509277

Token 54: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6931514739990234
    2. ' input' → logprob: -0.6931514739990234
    3. '(input' → logprob: -12.943151473999023
    4. 'int' → logprob: -14.568151473999023
    5. '=input' → logprob: -14.693151473999023
    6. ',input' → logprob: -14.818151473999023
    7. ' ' → logprob: -15.193151473999023
    8. '	input' → logprob: -15.818151473999023
    9. '<input' → logprob: -16.443151473999023
    10. ')' → logprob: -16.693151473999023

Token 55: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.2166411478538066e-05
    2. '()' → logprob: -9.875052452087402
    3. '())' → logprob: -14.875052452087402
    4. ' ().' → logprob: -16.000051498413086
    5. ')' → logprob: -16.750051498413086
    6. '.' → logprob: -17.125051498413086
    7. '(' → logprob: -17.750051498413086
    8. '()
' → logprob: -18.000051498413086
    9. '());' → logprob: -19.000051498413086
    10. '().__' → logprob: -19.125051498413086

Token 56: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.941850526549388e-06
    2. 'spl' → logprob: -12.125007629394531
    3. 's' → logprob: -13.500007629394531
    4. ')' → logprob: -14.375007629394531
    5. 'strip' → logprob: -15.125007629394531
    6. ' split' → logprob: -16.25000762939453
    7. '(split' → logprob: -16.87500762939453
    8. 'sp' → logprob: -17.37500762939453
    9. 'rstrip' → logprob: -18.00000762939453
    10. '_split' → logprob: -18.62500762939453

Token 57: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025225525721907616
    2. '()' → logprob: -4.275225639343262
    3. '())' → logprob: -4.525225639343262
    4. '))' → logprob: -8.900225639343262
    5. ')
' → logprob: -11.275225639343262
    6. '`)' → logprob: -12.150225639343262
    7. ' )' → logprob: -12.775225639343262
    8. '(' → logprob: -12.900225639343262
    9. '())
' → logprob: -13.150225639343262
    10. '()
' → logprob: -13.525225639343262

Token 58: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3334518373012543
    2. '```' → logprob: -2.958451747894287
    3. '       ' → logprob: -3.083451747894287
    4. '    
' → logprob: -3.458451747894287
    5. '<|end|>' → logprob: -3.583451747894287
    6. '    ' → logprob: -3.708451747894287
    7. '\n' → logprob: -3.833451747894287
    8. ')' → logprob: -4.083451747894287
    9. ' ' → logprob: -4.708451747894287
    10. '   
' → logprob: -4.833451747894287

Token 59: ' if' (ID: 538)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.9337826371192932
    2. ' ' → logprob: -1.5587825775146484
    3. ''' → logprob: -2.1837825775146484
    4. '\n' → logprob: -2.9337825775146484
    5. '   ' → logprob: -3.3087825775146484
    6. '```' → logprob: -3.4337825775146484
    7. ' if' → logprob: -3.5587825775146484
    8. '    ' → logprob: -3.8087825775146484
    9. '     
' → logprob: -3.9337825775146484
    10. 'if' (adapté à ' if') → logprob: -4.058782577514648

Token 60: ' X' (ID: 2127)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7252479195594788
    2. ' ' → logprob: -2.225247859954834
    3. ' X' → logprob: -2.350247859954834
    4. ' (' → logprob: -2.475247859954834
    5. ' abs' → logprob: -2.475247859954834
    6. ' min' → logprob: -2.850247859954834
    7. 'x' → logprob: -3.475247859954834
    8. ' W' → logprob: -3.600247859954834
    9. '(' → logprob: -4.725247859954834
    10. 'X' → logprob: -5.725247859954834

Token 61: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.347535640001297
    2. '<=' → logprob: -1.7225356101989746
    3. ' -' → logprob: -3.0975356101989746
    4. '+' → logprob: -3.8475356101989746
    5. '<' → logprob: -4.097535610198975
    6. '-' → logprob: -4.097535610198975
    7. ' <' → logprob: -4.722535610198975
    8. ' +' → logprob: -5.722535610198975
    9. ' ' → logprob: -6.847535610198975
    10. ' >=' → logprob: -7.722535610198975

Token 62: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00023071514442563057
    2. ' x' → logprob: -8.37523078918457
    3. ' ' → logprob: -16.12523078918457
    4. '0' → logprob: -17.87523078918457
    5. 'y' → logprob: -18.00023078918457
    6. '	x' → logprob: -18.25023078918457
    7. '>x' → logprob: -18.62523078918457
    8. '=' → logprob: -18.75023078918457
    9. ')x' → logprob: -18.75023078918457
    10. '(x' → logprob: -18.87523078918457

Token 63: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.6124625205993652
    2. ' and' → logprob: -1.6124625205993652
    3. 'and' → logprob: -1.9874625205993652
    4. ' <=' → logprob: -2.1124625205993652
    5. '+' → logprob: -8.112462997436523
    6. '<' → logprob: -8.737462997436523
    7. ' ' → logprob: -10.737462997436523
    8. '<|end|>' → logprob: -10.737462997436523
    9. ' <' → logprob: -10.862462997436523
    10. '>=' → logprob: -11.362462997436523

Token 64: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.7714942693710327
    2. ' X' → logprob: -1.2714942693710327
    3. 'W' → logprob: -2.2714943885803223
    4. ' W' → logprob: -2.6464943885803223
    5. 'Y' → logprob: -3.0214943885803223
    6. ' Y' → logprob: -3.3964943885803223
    7. ' ' → logprob: -7.021494388580322
    8. '   ' → logprob: -10.708993911743164
    9. ' ' → logprob: -11.646493911743164
    10. '	X' → logprob: -11.646493911743164

Token 65: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.054887473583221436
    2. ' +' → logprob: -2.929887533187866
    3. ' ' → logprob: -12.804887771606445
    4. '   ' → logprob: -13.804887771606445
    5. '+w' → logprob: -14.054887771606445
    6. '2' → logprob: -16.804887771606445
    7. '```' → logprob: -16.867387771606445
    8. '＋' → logprob: -16.929887771606445
    9. '+
' → logprob: -16.929887771606445
    10. '  ' → logprob: -16.929887771606445

Token 66: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.3487906754016876
    2. ' W' → logprob: -1.2237906455993652
    3. ' ' → logprob: -8.098791122436523
    4. 'w' → logprob: -10.848791122436523
    5. '  ' → logprob: -11.848791122436523
    6. '   ' → logprob: -12.098791122436523
    7. '	W' → logprob: -12.348791122436523
    8. ' w' → logprob: -13.598791122436523
    9. '0' → logprob: -13.723791122436523
    10. '1' → logprob: -13.973791122436523

Token 67: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.00884135253727436
    2. 'and' → logprob: -4.758841514587402
    3. ' ' → logprob: -8.633841514587402
    4. ' or' → logprob: -10.633841514587402
    5. '   ' → logprob: -11.258841514587402
    6. '    ' → logprob: -12.258841514587402
    7. '  ' → logprob: -13.383841514587402
    8. '        ' → logprob: -14.008841514587402
    9. '       ' → logprob: -14.133841514587402
    10. '<|end|>' → logprob: -14.133841514587402

Token 68: ' Y' (ID: 865)
  Prédit: ' Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Y' → logprob: -0.11401960998773575
    2. 'Y' → logprob: -2.2390196323394775
    3. ' ' → logprob: -7.489019393920898
    4. '   ' → logprob: -8.239019393920898
    5. ' H' → logprob: -9.364019393920898
    6. '  ' → logprob: -9.739019393920898
    7. '    ' → logprob: -9.864019393920898
    8. ' y' → logprob: -9.989019393920898
    9. '0' → logprob: -10.364019393920898
    10. 'y' → logprob: -10.739019393920898

Token 69: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0008191577508114278
    2. '<=' → logprob: -7.125819206237793
    3. '<|end|>' → logprob: -11.250819206237793
    4. ' ' → logprob: -14.625819206237793
    5. ' ≤' → logprob: -14.625819206237793
    6. ' <=",' → logprob: -14.750819206237793
    7. '+' → logprob: -16.000818252563477
    8. '<|end|>' → logprob: -16.125818252563477
    9. ' +' → logprob: -16.875818252563477
    10. ')<=' → logprob: -17.125818252563477

Token 70: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.001502717612311244
    2. 'y' → logprob: -6.501502513885498
    3. '<|end|>' → logprob: -15.376502990722656
    4. ' ' → logprob: -16.001502990722656
    5. '	y' → logprob: -17.376502990722656
    6. ' ' → logprob: -17.876502990722656
    7. ' x' → logprob: -18.626502990722656
    8. ' Y' → logprob: -19.251502990722656
    9. 'Y' → logprob: -19.501502990722656
    10. '(y' → logprob: -20.001502990722656

Token 71: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.039923857897520065
    2. '<=' → logprob: -3.289923906326294
    3. '+' → logprob: -6.539923667907715
    4. ' ' → logprob: -8.539923667907715
    5. '<|end|>' → logprob: -9.039923667907715
    6. ' +' → logprob: -9.414923667907715
    7. '  ' → logprob: -12.289923667907715
    8. ' ' → logprob: -12.414923667907715
    9. '[' → logprob: -12.414923667907715
    10. ')<=' → logprob: -12.539923667907715

Token 72: ' Y' (ID: 865)
  Prédit: ' Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Y' → logprob: -0.026338033378124237
    2. 'Y' → logprob: -3.6513381004333496
    3. ' ' → logprob: -10.526337623596191
    4. '   ' → logprob: -12.651337623596191
    5. ' y' → logprob: -13.151337623596191
    6. '	Y' → logprob: -13.651337623596191
    7. '    ' → logprob: -13.776337623596191
    8. ' ' → logprob: -13.901337623596191
    9. '  ' → logprob: -14.151337623596191
    10. ' H' → logprob: -14.401337623596191

Token 73: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4741007387638092
    2. ' +' → logprob: -0.9741007089614868
    3. ' ' → logprob: -11.224101066589355
    4. ' plus' → logprob: -13.099101066589355
    5. ' ' → logprob: -13.224101066589355
    6. '+h' → logprob: -13.224101066589355
    7. '   ' → logprob: -13.474101066589355
    8. 'H' → logprob: -13.849101066589355
    9. '<|end|>' → logprob: -14.599101066589355
    10. ' H' → logprob: -14.849101066589355

Token 74: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.023258758708834648
    2. ' H' → logprob: -3.773258686065674
    3. ' ' → logprob: -11.648259162902832
    4. '<|end|>' → logprob: -13.398259162902832
    5. '   ' → logprob: -14.148259162902832
    6. ' ' → logprob: -14.273259162902832
    7. '  ' → logprob: -14.898259162902832
    8. '	H' → logprob: -15.585759162902832
    9. 'h' → logprob: -15.898259162902832
    10. '(H' → logprob: -16.648258209228516

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008829995640553534
    2. ' :' → logprob: -7.750883102416992
    3. '       ' → logprob: -8.625883102416992
    4. ' and' → logprob: -9.000883102416992
    5. '):' → logprob: -9.375883102416992
    6. ':
' → logprob: -10.625883102416992
    7. '   ' → logprob: -11.375883102416992
    8. ':**' → logprob: -11.750883102416992
    9. '           ' → logprob: -12.375883102416992
    10. '.' → logprob: -12.500883102416992

Token 76: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15624994039535522
    2. '       ' → logprob: -2.03125
    3. '\n' → logprob: -5.15625
    4. 'count' → logprob: -6.28125
    5. '
' → logprob: -6.65625
    6. '1' → logprob: -7.28125
    7. '\' → logprob: -7.53125
    8. '        
' → logprob: -7.90625
    9. '   ' → logprob: -8.15625
    10. '            
' → logprob: -8.15625

Token 77: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -1.1605565547943115
    2. '               ' → logprob: -1.2855565547943115
    3. '           ' → logprob: -1.4105565547943115
    4. '       ' → logprob: -2.7855565547943115
    5. ' 
' → logprob: -2.9105565547943115
    6. ' count' → logprob: -4.035556793212891
    7. '
' → logprob: -4.910556793212891
    8. '   ' → logprob: -5.035556793212891
    9. ' \' → logprob: -5.660556793212891
    10. ' ' → logprob: -6.035556793212891

Token 78: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6592960953712463
    2. ' +=' → logprob: -0.7842960953712463
    3. '+=' → logprob: -3.6592960357666016
    4. ' +' → logprob: -8.409296035766602
    5. ' ' → logprob: -8.409296035766602
    6. '=' → logprob: -9.909296035766602
    7. '<|end|>' → logprob: -10.284296035766602
    8. ')' → logprob: -10.409296035766602
    9. '+='' → logprob: -12.159296035766602
    10. '(' → logprob: -12.534296035766602

Token 79: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08893968164920807
    2. ' ' → logprob: -2.463939666748047
    3. ' ' → logprob: -16.276439666748047
    4. '   ' → logprob: -16.713939666748047
    5. '0' → logprob: -17.526439666748047
    6. '  ' → logprob: -17.838939666748047
    7. '2' → logprob: -17.838939666748047
    8. '```' → logprob: -18.213939666748047
    9. '１' → logprob: -18.838939666748047
    10. '+' → logprob: -19.151439666748047

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -18.250017166137695
    4. '+' → logprob: -19.250017166137695
    5. '```' → logprob: -19.500017166137695
    6. 'count' → logprob: -19.687517166137695
    7. '  ' → logprob: -19.812517166137695
    8. '0' → logprob: -19.937517166137695
    9. '１' → logprob: -19.937517166137695
    10. '2' → logprob: -20.062517166137695

Token 81: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3187931180000305
    2. '   ' → logprob: -1.6937930583953857
    3. '<|end|>' → logprob: -3.3187930583953857
    4. '
' → logprob: -3.5687930583953857
    5. '\n' → logprob: -4.818793296813965
    6. ' print' → logprob: -4.943793296813965
    7. '    
' → logprob: -6.443793296813965
    8. '```' → logprob: -6.568793296813965
    9. ')' → logprob: -6.818793296813965
    10. ' ' → logprob: -6.943793296813965

Token 82: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4161032438278198
    2. '   ' → logprob: -1.2911032438278198
    3. ')' → logprob: -3.2911033630371094
    4. ' print' → logprob: -4.416103363037109
    5. '<|end|>' → logprob: -5.041103363037109
    6. ']' → logprob: -6.291103363037109
    7. '\n' → logprob: -6.541103363037109
    8. '```' → logprob: -6.791103363037109
    9. ' ' → logprob: -7.041103363037109
    10. '#' → logprob: -7.166103363037109

Token 83: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0002533528604544699
    2. ' print' → logprob: -8.750253677368164
    3. '   ' → logprob: -9.750253677368164
    4. 'pr' → logprob: -10.750253677368164
    5. 'p' → logprob: -12.000253677368164
    6. ')' → logprob: -12.625253677368164
    7. '```' → logprob: -13.250253677368164
    8. 'prin' → logprob: -13.750253677368164
    9. ' ' → logprob: -14.375253677368164
    10. 'pri' → logprob: -15.000253677368164

Token 84: '(count' (ID: 25892)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5761095881462097
    2. '(count' → logprob: -0.8261095881462097
    3. '('' → logprob: -9.076109886169434
    4. '((' → logprob: -11.201109886169434
    5. ' (' → logprob: -11.576109886169434
    6. '(f' → logprob: -11.826109886169434
    7. '("' → logprob: -11.951109886169434
    8. '()' → logprob: -12.076109886169434
    9. '("("' → logprob: -12.326109886169434
    10. '(c' → logprob: -12.701109886169434

Token 85: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ' )' → logprob: -13.12500286102295
    3. ')`' → logprob: -16.250001907348633
    4. '))' → logprob: -16.375001907348633
    5. ')
' → logprob: -16.500001907348633
    6. '`)' → logprob: -16.625001907348633
    7. '')' → logprob: -17.500001907348633
    8. '()' → logprob: -17.625001907348633
    9. '(' → logprob: -18.125001907348633
    10. '#' → logprob: -18.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 83
Tokens correctement prédits (1ère position, stricte): 31
Tokens correctement prédits (1ère position, avec adaptation): 35
Tokens correctement prédits (top 10): 72
Précision stricte (1ère position): 37.35%
Précision adaptée (1ère position): 42.17%
Précision (top 10): 86.75%
================================================================================
