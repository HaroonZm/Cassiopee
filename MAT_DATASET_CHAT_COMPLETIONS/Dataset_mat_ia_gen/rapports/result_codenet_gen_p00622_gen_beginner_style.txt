================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    red = input()
    if red == '-':
        break
    green = input()
    down = input()

    # red, green, down are strings of unique characters
    # red packages come from top (vertical belt)
    # green packages come from left (horizontal belt)
    # down is the sequence of packages that reached the bottom belt after mixing

    # We need to reconstruct the sequence of packages that reached the right (right belt)

    # The mixing process is an interleaving of red and green packages:
    # Number of push_down = len(red)
    # Number of push_right = len(green) + 1
    # The first and last push are push_right
    # down represents the packages that reached bottom in order

    # Using down (bottom belt sequence), and red, green sequences,
    # reconstruct the right (right belt) output sequence

    # Approach:
    # Since the mixed sequence is an interleaving of red and green,
    # and down contains the packages that "fell" out of vertical belt (red),
    # we can simulate the interleaving and find the packages that fall out on the right belt (green's packages order).

    red_index = 0
    green_index = 0
    down_index = 0
    right = ''

    # The total output length is len(red)+len(green)
    # down contains len(red) packages

    # The mixed sequence is len(red)+len(green)

    # we simulate selecting from red or green:
    # if down[down_index] == red[red_index], it means a push_down happened (vertical belt package emitted)
    # else the emitted package must be from green (right belt), so we output it to right

    # Note: down and right are outputs, red and green are inputs

    while len(right) < len(green):
        # if next down package matches next red package, then it's a push_down
        if down_index < len(down) and red_index < len(red) and down[down_index] == red[red_index]:
            red_index += 1
            down_index += 1
        else:
            # this must be a push_right output package from green
            right += green[green_index]
            green_index += 1

    print(right)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5957265496253967
    2. '\' → logprob: -2.220726490020752
    3. ' ' → logprob: -2.470726490020752
    4. '```' → logprob: -2.845726490020752
    5. '    ' → logprob: -2.970726490020752
    6. '    
' → logprob: -3.220726490020752
    7. '\n' → logprob: -3.720726490020752
    8. ' 
' → logprob: -3.845726490020752
    9. '<|end|>' → logprob: -3.970726490020752
    10. '  
' → logprob: -5.095726490020752

Token 4: ' red' (ID: 3592)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26106780767440796
    2. '    ' → logprob: -1.7610678672790527
    3. ' ' → logprob: -3.7610678672790527
    4. '```' → logprob: -3.8860678672790527
    5. '    
' → logprob: -5.636067867279053
    6. '       ' → logprob: -6.386067867279053
    7. '  ' → logprob: -6.386067867279053
    8. ' pass' → logprob: -6.761067867279053
    9. 'pass' → logprob: -6.886067867279053
    10. ' 
' → logprob: -7.386067867279053

Token 5: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07758457213640213
    2. ' ' → logprob: -3.4525845050811768
    3. '=' → logprob: -4.827584743499756
    4. ' =' → logprob: -5.077584743499756
    5. '   ' → logprob: -5.202584743499756
    6. 'irection' → logprob: -5.577584743499756
    7. ' _' → logprob: -5.952584743499756
    8. ':' → logprob: -5.952584743499756
    9. ')' → logprob: -6.202584743499756
    10. 'space' → logprob: -6.202584743499756

Token 6: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.13133884966373444
    2. 'input' → logprob: -2.2563388347625732
    3. ' True' → logprob: -5.631339073181152
    4. ' int' → logprob: -6.006339073181152
    5. ' random' → logprob: -6.381339073181152
    6. '"' → logprob: -6.381339073181152
    7. 'int' → logprob: -6.631339073181152
    8. ' red' → logprob: -6.756339073181152
    9. ' '' → logprob: -6.756339073181152
    10. ' "' → logprob: -7.006339073181152

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00160138716455549
    2. '('' → logprob: -6.876601219177246
    3. '("("' → logprob: -8.501601219177246
    4. '```' → logprob: -8.626601219177246
    5. '()' → logprob: -9.751601219177246
    6. '("")' → logprob: -11.126601219177246
    7. '(
' → logprob: -11.251601219177246
    8. ''' → logprob: -11.251601219177246
    9. ' ' → logprob: -11.376601219177246
    10. '   ' → logprob: -11.501601219177246

Token 8: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.2196332216262817
    2. ' ==' → logprob: -1.2196332216262817
    3. ' if' → logprob: -2.219633102416992
    4. ' ' → logprob: -2.344633102416992
    5. '==' → logprob: -2.719633102416992
    6. ')' → logprob: -3.469633102416992
    7. '=' → logprob: -4.094633102416992
    8. ',' → logprob: -4.219633102416992
    9. '.strip' → logprob: -4.344633102416992
    10. 'if' → logprob: -4.469633102416992

Token 9: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7251250147819519
    2. ' ==' → logprob: -0.9751250147819519
    3. ' ' → logprob: -2.8501250743865967
    4. '==' → logprob: -3.8501250743865967
    5. 'if' (adapté à ' if') → logprob: -4.350124835968018
    6. '<|end|>' → logprob: -4.350124835968018
    7. '   ' → logprob: -4.475124835968018
    8. ')' → logprob: -5.225124835968018
    9. ' ===' → logprob: -5.725124835968018
    10. '.' → logprob: -5.725124835968018

Token 10: ' red' (ID: 3592)
  Prédit: ' red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.014573716558516026
    2. ' ' → logprob: -4.764573574066162
    3. 'red' → logprob: -5.514573574066162
    4. ' not' → logprob: -6.264573574066162
    5. '  ' → logprob: -12.63957405090332
    6. ' ' → logprob: -13.51457405090332
    7. ' len' → logprob: -13.76457405090332
    8. '_red' → logprob: -13.88957405090332
    9. 'not' → logprob: -14.01457405090332
    10. ' "' → logprob: -14.38957405090332

Token 11: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02786801941692829
    2. '==' → logprob: -3.9028680324554443
    3. '.' → logprob: -5.777867794036865
    4. ' ' → logprob: -6.152867794036865
    5. ' .' → logprob: -7.277867794036865
    6. ' !=' → logprob: -7.527867794036865
    7. ':' → logprob: -8.402868270874023
    8. ' =' → logprob: -9.152868270874023
    9. ' :' → logprob: -9.402868270874023
    10. '=' → logprob: -9.652868270874023

Token 12: ' '-' (ID: 17489)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0719088464975357
    2. ''' → logprob: -2.696908950805664
    3. ' ' → logprob: -6.696908950805664
    4. ' "' → logprob: -7.446908950805664
    5. ' '' → logprob: -8.946908950805664
    6. '""' → logprob: -12.696908950805664
    7. '`' → logprob: -12.759408950805664
    8. '"""' → logprob: -12.821908950805664
    9. '  ' → logprob: -13.446908950805664
    10. '''' → logprob: -13.884408950805664

Token 13: '':
' (ID: 7669)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5786164402961731
    2. '1' → logprob: -0.8286164402961731
    3. 'q' → logprob: -6.328616619110107
    4. ' ' → logprob: -9.20361614227295
    5. ''-' → logprob: -9.89111614227295
    6. 'quit' → logprob: -9.95361614227295
    7. '2' → logprob: -10.01611614227295
    8. '0' → logprob: -10.14111614227295
    9. '```' → logprob: -10.45361614227295
    10. '-q' → logprob: -10.57861614227295

Token 14: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016774320974946022
    2. ' break' → logprob: -4.3917741775512695
    3. '   ' → logprob: -5.8917741775512695
    4. '    ' → logprob: -7.1417741775512695
    5. ' ' → logprob: -8.64177417755127
    6. '	break' → logprob: -9.26677417755127
    7. '      ' → logprob: -9.26677417755127
    8. ' ' → logprob: -9.89177417755127
    9. '    ' → logprob: -9.89177417755127
    10. '        ' → logprob: -10.01677417755127

Token 15: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.019823038950562477
    2. '       ' → logprob: -4.01982307434082
    3. 'break' (adapté à ' break') → logprob: -7.01982307434082
    4. '   ' → logprob: -7.39482307434082
    5. '	break' → logprob: -9.51982307434082
    6. ' ' → logprob: -10.14482307434082
    7. '    ' → logprob: -11.51982307434082
    8. ' ' → logprob: -11.64482307434082
    9. '_break' → logprob: -11.89482307434082
    10. '```' → logprob: -12.01982307434082

Token 16: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17905238270759583
    2. ' ' → logprob: -2.6790523529052734
    3. ':' → logprob: -3.3040523529052734
    4. ')' → logprob: -4.054052352905273
    5. '    
' → logprob: -4.429052352905273
    6. '  
' → logprob: -5.429052352905273
    7. '<|end|>' → logprob: -5.679052352905273
    8. 'print' → logprob: -5.804052352905273
    9. '\n' → logprob: -5.804052352905273
    10. '
' → logprob: -5.804052352905273

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.047724537551403046
    2. ' ' → logprob: -3.547724485397339
    3. 'print' → logprob: -5.297724723815918
    4. '    
' → logprob: -5.672724723815918
    5. ')' → logprob: -5.797724723815918
    6. '  ' → logprob: -7.297724723815918
    7. '[' → logprob: -7.547724723815918
    8. '#' → logprob: -7.547724723815918
    9. '  
' → logprob: -7.547724723815918
    10. 'r' → logprob: -7.672724723815918

Token 18: ' green' (ID: 8851)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.567744255065918
    2. 'print' → logprob: -1.442744255065918
    3. ':' → logprob: -2.442744255065918
    4. ' print' → logprob: -3.442744255065918
    5. ' ' → logprob: -3.692744255065918
    6. ' if' → logprob: -4.692744255065918
    7. ')' → logprob: -4.942744255065918
    8. '[' → logprob: -5.317744255065918
    9. 'red' → logprob: -5.317744255065918
    10. 'r' → logprob: -5.567744255065918

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.027839845046401024
    2. '=' → logprob: -3.9028398990631104
    3. ' ==' → logprob: -5.402839660644531
    4. ' ' → logprob: -7.152839660644531
    5. ' +=' → logprob: -7.402839660644531
    6. ')' → logprob: -8.027839660644531
    7. ',' → logprob: -8.152839660644531
    8. ' +' → logprob: -8.652839660644531
    9. '_' → logprob: -9.277839660644531
    10. '==' → logprob: -9.402839660644531

Token 20: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.07209386676549911
    2. 'input' → logprob: -2.697093963623047
    3. ' int' → logprob: -6.447093963623047
    4. 'int' → logprob: -7.697093963623047
    5. ' ' → logprob: -10.197093963623047
    6. '   ' → logprob: -11.072093963623047
    7. '=input' → logprob: -11.072093963623047
    8. '(input' → logprob: -11.822093963623047
    9. '	input' → logprob: -12.072093963623047
    10. ' '' → logprob: -12.822093963623047

Token 21: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002439467643853277
    2. '(' → logprob: -8.375244140625
    3. '()
' → logprob: -11.875244140625
    4. '()

' → logprob: -12.875244140625
    5. ' ()' → logprob: -13.500244140625
    6. '().' → logprob: -14.625244140625
    7. '()`' → logprob: -15.000244140625
    8. ' ' → logprob: -15.250244140625
    9. '```' → logprob: -15.250244140625
    10. '()]' → logprob: -15.375244140625

Token 22: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 23: ' down' (ID: 1917)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6849115490913391
    2. ' blue' → logprob: -1.8099114894866943
    3. ' ' → logprob: -2.5599114894866943
    4. ' red' → logprob: -2.5599114894866943
    5. 'if' → logprob: -2.8099114894866943
    6. 'red' → logprob: -4.059911727905273
    7. ' green' → logprob: -4.184911727905273
    8. 'blue' → logprob: -4.184911727905273
    9. ' =' → logprob: -4.434911727905273
    10. '<|end|>' → logprob: -4.559911727905273

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9665294885635376
    2. 'line' → logprob: -0.9665294885635376
    3. '   ' → logprob: -2.841529369354248
    4. '=' → logprob: -2.841529369354248
    5. 'load' → logprob: -2.841529369354248
    6. '_' → logprob: -4.341529369354248
    7. '()' → logprob: -4.966529369354248
    8. 'loaded' → logprob: -5.091529369354248
    9. 'side' → logprob: -5.216529369354248
    10. 'stream' → logprob: -5.341529369354248

Token 25: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5656030774116516
    2. 'input' → logprob: -1.1906030178070068
    3. 'int' → logprob: -2.815603017807007
    4. ' int' → logprob: -2.940603017807007
    5. ' green' → logprob: -5.065603256225586
    6. ' red' → logprob: -6.440603256225586
    7. ''' → logprob: -6.565603256225586
    8. 'green' → logprob: -6.940603256225586
    9. ' '' → logprob: -7.440603256225586
    10. '0' → logprob: -7.690603256225586

Token 26: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018158255144953728
    2. '(' → logprob: -4.018158435821533
    3. ' ()' → logprob: -13.393157958984375
    4. '```' → logprob: -13.518157958984375
    5. '()
' → logprob: -13.768157958984375
    6. '()

' → logprob: -14.143157958984375
    7. '('' → logprob: -14.268157958984375
    8. '()`' → logprob: -14.768157958984375
    9. '()]' → logprob: -15.018157958984375
    10. '   ' → logprob: -15.143157958984375

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004711595829576254
    2. '<|end|>' → logprob: -6.629711627960205
    3. '    
' → logprob: -7.254711627960205
    4. ' ' → logprob: -7.379711627960205
    5. ' if' → logprob: -7.504711627960205
    6. 'if' → logprob: -7.629711627960205
    7. ')' → logprob: -8.629711151123047
    8. '  ' → logprob: -8.879711151123047
    9. '```' → logprob: -8.879711151123047
    10. '#' → logprob: -9.129711151123047

Token 28: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9895307421684265
    2. ' if' → logprob: -1.2395308017730713
    3. '   ' → logprob: -1.4895308017730713
    4. 'print' → logprob: -3.9895308017730713
    5. '#' (adapté à ' #') → logprob: -4.114530563354492
    6. ' ' → logprob: -4.489530563354492
    7. 'try' → logprob: -4.489530563354492
    8. 'i' → logprob: -4.739530563354492
    9. ')' → logprob: -5.364530563354492
    10. '```' → logprob: -5.364530563354492

Token 29: ' red' (ID: 3592)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.31725436449050903
    2. 'if' → logprob: -2.1922543048858643
    3. '   ' → logprob: -2.9422543048858643
    4. ' #' → logprob: -3.4422543048858643
    5. ' try' → logprob: -4.567254543304443
    6. '#' → logprob: -4.692254543304443
    7. ' red' → logprob: -4.692254543304443
    8. ' green' → logprob: -4.942254543304443
    9. ' continue' → logprob: -5.442254543304443
    10. 'red' → logprob: -5.692254543304443

Token 30: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8339542150497437
    2. '=' → logprob: -2.083954334259033
    3. '_' → logprob: -2.333954334259033
    4. ' +=' → logprob: -2.583954334259033
    5. ' ==' → logprob: -2.958954334259033
    6. ')' → logprob: -3.458954334259033
    7. ',' → logprob: -3.458954334259033
    8. '[' → logprob: -3.583954334259033
    9. ' ' → logprob: -3.833954334259033
    10. '+' → logprob: -4.208954334259033

Token 31: ' green' (ID: 8851)
  Prédit: ' green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' green' → logprob: -0.25308316946029663
    2. 'green' → logprob: -1.5030832290649414
    3. ' ' → logprob: -7.753083229064941
    4. ' blue' → logprob: -9.378083229064941
    5. ' down' → logprob: -9.440583229064941
    6. ' up' → logprob: -9.628083229064941
    7. ' '' → logprob: -10.315583229064941
    8. 'int' → logprob: -10.440583229064941
    9. 'down' → logprob: -10.565583229064941
    10. '  ' → logprob: -10.690583229064941

Token 32: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5992160439491272
    2. ' =' → logprob: -1.4742159843444824
    3. ',' → logprob: -1.8492159843444824
    4. ')' → logprob: -4.599215984344482
    5. '==' → logprob: -4.599215984344482
    6. ' ==' → logprob: -5.224215984344482
    7. '_' → logprob: -5.474215984344482
    8. '.' → logprob: -5.599215984344482
    9. '>' → logprob: -5.724215984344482
    10. 'and' → logprob: -6.099215984344482

Token 33: ' down' (ID: 1917)
  Prédit: ' down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' down' → logprob: -0.7511528730392456
    2. ' and' → logprob: -0.8761528730392456
    3. 'down' → logprob: -2.626152992248535
    4. 'and' → logprob: -3.501152992248535
    5. ' blue' → logprob: -6.126152992248535
    6. ' red' → logprob: -6.501152992248535
    7. ' up' → logprob: -6.626152992248535
    8. ' ' → logprob: -7.126152992248535
    9. ' yellow' → logprob: -8.001152992248535
    10. ' green' → logprob: -8.001152992248535

Token 34: ' are' (ID: 553)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7651156783103943
    2. ' =' → logprob: -1.890115737915039
    3. '=' → logprob: -2.140115737915039
    4. '<|end|>' → logprob: -2.390115737915039
    5. ')' → logprob: -2.515115737915039
    6. ' ' → logprob: -3.390115737915039
    7. '[' → logprob: -4.265115737915039
    8. ' if' → logprob: -4.390115737915039
    9. ':' → logprob: -5.515115737915039
    10. '.' → logprob: -5.640115737915039

Token 35: ' strings' (ID: 18279)
  Prédit: ' integers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.47672683000564575
    2. ' strings' → logprob: -1.226726770401001
    3. ' numbers' → logprob: -4.35172700881958
    4. ' int' → logprob: -4.35172700881958
    5. ' not' → logprob: -4.47672700881958
    6. ' used' → logprob: -4.72672700881958
    7. 'strings' → logprob: -5.47672700881958
    8. 'int' → logprob: -5.60172700881958
    9. ' ' → logprob: -5.60172700881958
    10. ' given' → logprob: -5.97672700881958

Token 36: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20246772468090057
    2. ' if' → logprob: -2.827467679977417
    3. ' ' → logprob: -3.202467679977417
    4. 'if' → logprob: -3.827467679977417
    5. '[' → logprob: -4.827467918395996
    6. '    
' → logprob: -4.952467918395996
    7. '```' → logprob: -4.952467918395996
    8. ',' → logprob: -5.202467918395996
    9. '\n' → logprob: -5.202467918395996
    10. '
' → logprob: -5.702467918395996

Token 37: ' unique' (ID: 5746)
  Prédit: ' digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.9525687098503113
    2. ' length' → logprob: -1.327568769454956
    3. ' ' → logprob: -2.202568769454956
    4. 'length' → logprob: -2.702568769454956
    5. 'digits' → logprob: -3.077568769454956
    6. ''' → logprob: -3.577568769454956
    7. '0' → logprob: -3.577568769454956
    8. ' either' → logprob: -4.577568531036377
    9. ' a' → logprob: -4.702568531036377
    10. ' '' → logprob: -5.077568531036377

Token 38: ' characters' (ID: 9862)
  Prédit: ' characters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' characters' → logprob: -0.4656847417354584
    2. 'characters' → logprob: -1.9656847715377808
    3. ' ' → logprob: -2.715684652328491
    4. ' colors' → logprob: -3.590684652328491
    5. 's' → logprob: -4.21568489074707
    6. 'chars' → logprob: -4.21568489074707
    7. ')' → logprob: -4.21568489074707
    8. ' letters' → logprob: -4.46568489074707
    9. 'colors' → logprob: -4.59068489074707
    10. ' digits' → logprob: -4.71568489074707

Token 39: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02961902506649494
    2. '```' → logprob: -4.404619216918945
    3. ' if' → logprob: -5.654619216918945
    4. '[' → logprob: -5.904619216918945
    5. 'n' → logprob: -6.154619216918945
    6. 'if' → logprob: -6.779619216918945
    7. ' ' → logprob: -7.154619216918945
    8. 's' → logprob: -7.404619216918945
    9. ':' → logprob: -7.529619216918945
    10. ''' → logprob: -7.654619216918945

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09865004569292068
    2. '    
' → logprob: -4.473649978637695
    3. ' ' → logprob: -4.598649978637695
    4. '
' → logprob: -4.723649978637695
    5. '```' → logprob: -4.723649978637695
    6. '<|end|>' → logprob: -4.848649978637695
    7. ' if' → logprob: -4.973649978637695
    8. '[' → logprob: -5.473649978637695
    9. '\n' → logprob: -5.473649978637695
    10. 'n' → logprob: -5.848649978637695

Token 41: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16785578429698944
    2. '```' → logprob: -3.792855739593506
    3. 'n' → logprob: -3.917855739593506
    4. 's' → logprob: -4.042855739593506
    5. ':' → logprob: -4.417855739593506
    6. '
' → logprob: -4.667855739593506
    7. ' if' → logprob: -4.792855739593506
    8. ' ' → logprob: -5.167855739593506
    9. '<|end|>' → logprob: -5.292855739593506
    10. '[' → logprob: -5.292855739593506

Token 42: ' red' (ID: 3592)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11536186933517456
    2. 's' → logprob: -4.36536169052124
    3. ' ' → logprob: -4.61536169052124
    4. '    ' → logprob: -4.74036169052124
    5. '```' → logprob: -4.74036169052124
    6. ' if' → logprob: -4.86536169052124
    7. '<|end|>' → logprob: -5.11536169052124
    8. '#' → logprob: -5.36536169052124
    9. 'c' → logprob: -5.49036169052124
    10. ' #' → logprob: -5.74036169052124

Token 43: ' packages' (ID: 21429)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5547198057174683
    2. '.' → logprob: -1.5547198057174683
    3. '_' → logprob: -3.179719924926758
    4. '=' → logprob: -3.179719924926758
    5. '_set' → logprob: -3.304719924926758
    6. ' ' → logprob: -3.554719924926758
    7. ',' → logprob: -4.179719924926758
    8. '<|end|>' → logprob: -5.054719924926758
    9. ' |=' → logprob: -5.179719924926758
    10. '|' → logprob: -5.304719924926758

Token 44: ' come' (ID: 3063)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08671770244836807
    2. '.' → logprob: -3.8367176055908203
    3. ' ' → logprob: -4.08671760559082
    4. '=' → logprob: -4.21171760559082
    5. '_' → logprob: -4.83671760559082
    6. ',' → logprob: -5.83671760559082
    7. '   ' → logprob: -5.96171760559082
    8. '<|end|>' → logprob: -5.96171760559082
    9. ' +=' → logprob: -6.33671760559082
    10. ' in' → logprob: -6.71171760559082

Token 45: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.20309306681156158
    2. ' from' → logprob: -2.3280930519104004
    3. 'in' → logprob: -2.9530930519104004
    4. ' in' → logprob: -4.2030930519104
    5. 'first' → logprob: -5.2030930519104
    6. 'with' → logprob: -5.7030930519104
    7. ' with' → logprob: -6.2030930519104
    8. ' first' → logprob: -6.3280930519104
    9. 'before' → logprob: -6.8280930519104
    10. 'after' → logprob: -7.0780930519104

Token 46: ' top' (ID: 2344)
  Prédit: ' red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.08205538243055344
    2. ' green' → logprob: -3.0820553302764893
    3. ' the' → logprob: -4.332055568695068
    4. 'red' → logprob: -4.707055568695068
    5. ' set' → logprob: -6.082055568695068
    6. ' {'' → logprob: -6.707055568695068
    7. 'green' → logprob: -6.957055568695068
    8. ' down' → logprob: -7.207055568695068
    9. ' a' → logprob: -7.332055568695068
    10. 'the' → logprob: -7.457055568695068

Token 47: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7206722497940063
    2. ':' → logprob: -1.0956722497940063
    3. '<|end|>' → logprob: -2.845672130584717
    4. '```' → logprob: -3.220672130584717
    5. '.' → logprob: -3.845672130584717
    6. ' ' → logprob: -4.220672130584717
    7. '[' → logprob: -5.095672130584717
    8. '    
' → logprob: -5.470672130584717
    9. '
' → logprob: -5.470672130584717
    10. '\' → logprob: -5.720672130584717

Token 48: 'vertical' (ID: 29475)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23128902912139893
    2. ' )' → logprob: -1.606289029121399
    3. ''' → logprob: -6.731288909912109
    4. '')' → logprob: -7.481288909912109
    5. ' and' → logprob: -7.481288909912109
    6. ',' → logprob: -7.606288909912109
    7. ' ' → logprob: -8.10628890991211
    8. '   ' → logprob: -8.10628890991211
    9. ' )
' → logprob: -8.23128890991211
    10. ' ')' → logprob: -8.23128890991211

Token 49: ' belt' (ID: 28328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04142782464623451
    2. ' )' → logprob: -4.2914276123046875
    3. '   ' → logprob: -5.1664276123046875
    4. ' direction' → logprob: -5.4164276123046875
    5. ' line' → logprob: -5.5414276123046875
    6. ' and' → logprob: -5.6664276123046875
    7. 'direction' → logprob: -5.9164276123046875
    8. ',' → logprob: -6.2914276123046875
    9. 'line' → logprob: -7.0414276123046875
    10. ')
' → logprob: -7.1664276123046875

Token 50: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39801037311553955
    2. '   ' → logprob: -1.5230103731155396
    3. '<|end|>' → logprob: -2.39801025390625
    4. ' )' → logprob: -5.52301025390625
    5. '<|end|>' → logprob: -5.89801025390625
    6. '```' → logprob: -6.14801025390625
    7. '):' → logprob: -6.52301025390625
    8. ':' → logprob: -6.52301025390625
    9. '    ' → logprob: -6.77301025390625
    10. '       ' → logprob: -6.89801025390625

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014110970310866833
    2. '<|end|>' → logprob: -5.014111042022705
    3. '```' → logprob: -6.014111042022705
    4. ')' → logprob: -6.514111042022705
    5. '    
' → logprob: -7.639111042022705
    6. ' if' → logprob: -7.889111042022705
    7. ' ' → logprob: -8.014110565185547
    8. ' and' → logprob: -8.514110565185547
    9. '  ' → logprob: -8.514110565185547
    10. '
' → logprob: -8.514110565185547

Token 52: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01696608029305935
    2. ' if' → logprob: -4.891965866088867
    3. '```' → logprob: -6.016965866088867
    4. 'if' → logprob: -6.266965866088867
    5. ')' → logprob: -6.891965866088867
    6. '<|end|>' → logprob: -7.016965866088867
    7. ' and' → logprob: -7.516965866088867
    8. '       ' → logprob: -8.141965866088867
    9. 's' → logprob: -8.141965866088867
    10. '  ' → logprob: -8.641965866088867

Token 53: ' green' (ID: 8851)
  Prédit: ' horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' horizontal' → logprob: -1.3561084270477295
    2. ' blue' → logprob: -1.6061084270477295
    3. ' if' → logprob: -2.4811084270477295
    4. '   ' → logprob: -2.6061084270477295
    5. ' green' → logprob: -2.7311084270477295
    6. ' red' → logprob: -2.7311084270477295
    7. 'horizontal' → logprob: -3.1061084270477295
    8. ' for' → logprob: -3.4811084270477295
    9. ' #' → logprob: -3.6061084270477295
    10. '#' → logprob: -4.231108665466309

Token 54: ' packages' (ID: 21429)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6172239184379578
    2. '<|end|>' → logprob: -1.2422239780426025
    3. ' packages' → logprob: -2.3672239780426025
    4. ' ' → logprob: -3.4922239780426025
    5. '<|end|>' → logprob: -3.7422239780426025
    6. ' ,' → logprob: -5.117223739624023
    7. ',' → logprob: -5.742223739624023
    8. ')' → logprob: -6.242223739624023
    9. ' and' → logprob: -6.367223739624023
    10. ' are' → logprob: -6.367223739624023

Token 55: ' come' (ID: 3063)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.10026081651449203
    2. 'from' → logprob: -2.3502607345581055
    3. '<|end|>' → logprob: -10.100260734558105
    4. '<|end|>' → logprob: -12.475260734558105
    5. ' to' → logprob: -12.725260734558105
    6. ' ' → logprob: -13.100260734558105
    7. '	from' → logprob: -13.600260734558105
    8. 'to' → logprob: -13.975260734558105
    9. '_from' → logprob: -14.600260734558105
    10. ' ' → logprob: -15.225260734558105

Token 57: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.6937974095344543
    2. ' the' → logprob: -1.1937973499298096
    3. ' bottom' → logprob: -2.5687973499298096
    4. ' horizontal' → logprob: -2.6937973499298096
    5. ' right' → logprob: -4.443797588348389
    6. ' top' → logprob: -4.568797588348389
    7. ' side' → logprob: -4.693797588348389
    8. 'left' → logprob: -4.818797588348389
    9. ' a' → logprob: -5.568797588348389
    10. ' green' → logprob: -5.943797588348389

Token 58: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3845280408859253
    2. '<|end|>' → logprob: -1.2595280408859253
    3. '```' → logprob: -5.134528160095215
    4. ')' → logprob: -5.134528160095215
    5. ' and' → logprob: -5.259528160095215
    6. '<|end|>' → logprob: -5.384528160095215
    7. '
' → logprob: -5.384528160095215
    8. '    
' → logprob: -5.759528160095215
    9. 'and' → logprob: -6.259528160095215
    10. ',' → logprob: -7.259528160095215

Token 59: 'horizontal' (ID: 62473)
  Prédit: ' horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' horizontal' → logprob: -0.540219247341156
    2. 'horizontal' → logprob: -0.915219247341156
    3. ')' → logprob: -4.915219306945801
    4. ' ' → logprob: -5.540219306945801
    5. ' )' → logprob: -6.915219306945801
    6. ' the' → logprob: -7.040219306945801
    7. ' a' → logprob: -7.165219306945801
    8. 'a' → logprob: -7.415219306945801
    9. ' side' → logprob: -7.915219306945801
    10. 'the' → logprob: -7.915219306945801

Token 60: ' belt' (ID: 28328)
  Prédit: ' belt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' belt' → logprob: -0.5893004536628723
    2. ')' → logprob: -1.4643003940582275
    3. ' )' → logprob: -2.2143003940582275
    4. 'belt' → logprob: -2.3393003940582275
    5. '   ' → logprob: -6.214300632476807
    6. ' ' → logprob: -6.714300632476807
    7. ' conveyor' → logprob: -6.964300632476807
    8. '_b' → logprob: -7.901800632476807
    9. '_' → logprob: -8.089300155639648
    10. ' ')' → logprob: -8.089300155639648

Token 61: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20415551960468292
    2. '   ' → logprob: -1.7041555643081665
    3. '<|end|>' → logprob: -6.579155445098877
    4. '#' → logprob: -8.204155921936035
    5. ')
' → logprob: -8.204155921936035
    6. ' )' → logprob: -8.204155921936035
    7. '):' → logprob: -8.579155921936035
    8. '):
' → logprob: -9.954155921936035
    9. '<|end|>' → logprob: -9.954155921936035
    10. ':' → logprob: -10.204155921936035

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03231559321284294
    2. '    
' → logprob: -4.907315731048584
    3. '<|end|>' → logprob: -4.907315731048584
    4. '
' → logprob: -5.657315731048584
    5. ' if' → logprob: -5.782315731048584
    6. 'if' → logprob: -5.907315731048584
    7. '```' → logprob: -6.157315731048584
    8. '       ' → logprob: -6.782315731048584
    9. '    ' → logprob: -7.282315731048584
    10. '  ' → logprob: -7.657315731048584

Token 63: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04463772475719452
    2. ' if' → logprob: -4.169637680053711
    3. 'if' → logprob: -4.794637680053711
    4. '    
' → logprob: -5.544637680053711
    5. '       ' → logprob: -5.794637680053711
    6. '    ' → logprob: -6.044637680053711
    7. '```' → logprob: -6.294637680053711
    8. '<|end|>' → logprob: -6.294637680053711
    9. 'space' → logprob: -7.169637680053711
    10. '  ' → logprob: -7.669637680053711

Token 64: ' down' (ID: 1917)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.223089575767517
    2. '   ' → logprob: -2.0980896949768066
    3. 'stack' → logprob: -2.0980896949768066
    4. 'result' → logprob: -2.5980896949768066
    5. 'red' → logprob: -3.3480896949768066
    6. 'blue' → logprob: -3.7230896949768066
    7. 'if' → logprob: -3.9730896949768066
    8. 'used' → logprob: -3.9730896949768066
    9. 'intersection' → logprob: -4.223089694976807
    10. 'merged' → logprob: -4.348089694976807

Token 65: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9435626864433289
    2. '=' → logprob: -1.6935627460479736
    3. '_' → logprob: -1.8185627460479736
    4. '_packages' → logprob: -1.9435627460479736
    5. '_b' → logprob: -2.6935627460479736
    6. '_set' → logprob: -4.5685625076293945
    7. 'packages' → logprob: -5.4435625076293945
    8. 'belt' → logprob: -5.9435625076293945
    9. '_stack' → logprob: -6.0685625076293945
    10. ' ' → logprob: -6.1935625076293945

Token 66: ' the' (ID: 290)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.4151314496994019
    2. 'a' → logprob: -1.7901314496994019
    3. 'input' → logprob: -1.9151314496994019
    4. ' input' → logprob: -1.9151314496994019
    5. ' the' → logprob: -2.5401315689086914
    6. 'down' → logprob: -2.6651315689086914
    7. 'the' → logprob: -2.9151315689086914
    8. ' down' → logprob: -3.9151315689086914
    9. ''' → logprob: -4.415131568908691
    10. '""' → logprob: -4.540131568908691

Token 67: ' sequence' (ID: 16281)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.0706379413604736
    2. ' set' → logprob: -2.1956379413604736
    3. ' destination' → logprob: -2.3206379413604736
    4. ' direction' → logprob: -2.4456379413604736
    5. 'destination' → logprob: -3.0706379413604736
    6. ' conveyor' → logprob: -3.3206379413604736
    7. 'next' → logprob: -3.6956379413604736
    8. ' current' → logprob: -3.8206379413604736
    9. ' sequence' → logprob: -3.9456379413604736
    10. 'direction' → logprob: -4.3206377029418945

Token 68: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08225292712450027
    2. 'n' → logprob: -4.0822529792785645
    3. ' ' → logprob: -4.3322529792785645
    4. '#' → logprob: -5.0822529792785645
    5. ' if' → logprob: -5.4572529792785645
    6. '<|end|>' → logprob: -5.4572529792785645
    7. 'i' → logprob: -5.7072529792785645
    8. '
' → logprob: -5.7072529792785645
    9. 'for' → logprob: -5.8322529792785645
    10. 'if' → logprob: -5.8322529792785645

Token 69: ' packages' (ID: 21429)
  Prédit: ' packages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' packages' → logprob: -1.0179603099822998
    2. ' characters' → logprob: -2.2679603099823
    3. 'packages' → logprob: -2.5179603099823
    4. ' the' → logprob: -3.1429603099823
    5. ' red' → logprob: -3.1429603099823
    6. ' output' → logprob: -3.3929603099823
    7. ' letters' → logprob: -3.5179603099823
    8. ' delivery' → logprob: -3.6429603099823
    9. ' destinations' → logprob: -3.7679603099823
    10. ' deliveries' → logprob: -3.8929603099823

Token 70: ' that' (ID: 484)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13597747683525085
    2. '   ' → logprob: -2.6359775066375732
    3. '<|end|>' → logprob: -4.385977268218994
    4. '[' → logprob: -4.510977268218994
    5. '#' → logprob: -5.760977268218994
    6. ' if' → logprob: -5.885977268218994
    7. ')' → logprob: -6.010977268218994
    8. '    ' → logprob: -6.010977268218994
    9. '  ' → logprob: -6.010977268218994
    10. ':' → logprob: -6.135977268218994

Token 71: ' reached' (ID: 15237)
  Prédit: ' should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' should' → logprob: -0.7862052917480469
    2. ' must' → logprob: -1.7862052917480469
    3. ' have' → logprob: -2.411205291748047
    4. ' are' → logprob: -2.911205291748047
    5. ' appear' → logprob: -3.036205291748047
    6. ' will' → logprob: -3.411205291748047
    7. ' can' → logprob: -3.411205291748047
    8. ' need' → logprob: -3.661205291748047
    9. 'should' → logprob: -4.536205291748047
    10. 'arr' → logprob: -4.911205291748047

Token 72: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30311039090156555
    2. ' ' → logprob: -2.303110361099243
    3. ' =' → logprob: -3.303110361099243
    4. '<|end|>' → logprob: -3.803110361099243
    5. ':' → logprob: -3.928110361099243
    6. '  ' → logprob: -4.053110599517822
    7. '[' → logprob: -4.178110599517822
    8. '.' → logprob: -5.053110599517822
    9. '```' → logprob: -5.053110599517822
    10. '=' → logprob: -5.178110599517822

Token 73: ' bottom' (ID: 8725)
  Prédit: ' bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bottom' → logprob: -0.4669334590435028
    2. ' destination' → logprob: -2.341933488845825
    3. ' output' → logprob: -2.591933488845825
    4. ' ground' → logprob: -2.841933488845825
    5. ' end' → logprob: -3.216933488845825
    6. ' ' → logprob: -4.466933250427246
    7. ' down' → logprob: -4.716933250427246
    8. ' floor' → logprob: -4.779433250427246
    9. ' final' → logprob: -4.966933250427246
    10. ' bott' → logprob: -4.966933250427246

Token 74: ' belt' (ID: 28328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5508501529693604
    2. '<|end|>' → logprob: -2.1758501529693604
    3. '#' → logprob: -2.4258501529693604
    4. ' ' → logprob: -2.5508501529693604
    5. 'n' → logprob: -3.4258501529693604
    6. '
' → logprob: -4.050849914550781
    7. '```' → logprob: -4.175849914550781
    8. '\' → logprob: -4.675849914550781
    9. '.' → logprob: -4.925849914550781
    10. ':' → logprob: -5.175849914550781

Token 75: ' after' (ID: 1934)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9159420132637024
    2. '<|end|>' → logprob: -1.1659419536590576
    3. '   ' → logprob: -2.2909419536590576
    4. '#' → logprob: -2.4159419536590576
    5. ' ' → logprob: -3.6659419536590576
    6. '.' → logprob: -4.290942192077637
    7. '[' → logprob: -4.790942192077637
    8. '
' → logprob: -4.790942192077637
    9. '\' → logprob: -4.790942192077637
    10. '```' → logprob: -5.040942192077637

Token 76: ' mixing' (ID: 38917)
  Prédit: ' passing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' passing' → logprob: -0.45771297812461853
    2. ' processing' → logprob: -1.832713007926941
    3. 'passing' → logprob: -2.5827128887176514
    4. 'processing' → logprob: -3.3327128887176514
    5. ' merging' → logprob: -3.3327128887176514
    6. ' the' → logprob: -4.2077131271362305
    7. ' going' → logprob: -5.0827131271362305
    8. ' being' → logprob: -5.0827131271362305
    9. 'the' → logprob: -5.2077131271362305
    10. ' rearr' → logprob: -5.8327131271362305

Token 77: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8228124380111694
    2. '   ' → logprob: -1.1978124380111694
    3. '<|end|>' → logprob: -1.4478124380111694
    4. '<|end|>' → logprob: -5.447812557220459
    5. '    
' → logprob: -5.572812557220459
    6. '#' → logprob: -5.697812557220459
    7. ' ' → logprob: -6.072812557220459
    8. ' if' → logprob: -6.447812557220459
    9. 'n' → logprob: -6.572812557220459
    10. '\n' → logprob: -6.572812557220459

Token 79: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8221848607063293
    2. 'red' → logprob: -2.0721848011016846
    3. '#' (adapté à ' #') → logprob: -2.1971848011016846
    4. 'if' → logprob: -2.3221848011016846
    5. 'n' → logprob: -2.3221848011016846
    6. 'valid' → logprob: -4.322185039520264
    7. 'count' → logprob: -4.572185039520264
    8. 'pass' → logprob: -4.572185039520264
    9. 'import' → logprob: -4.697185039520264
    10. 'm' → logprob: -5.072185039520264

Token 80: ' We' (ID: 1416)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5348527431488037
    2. 'pass' → logprob: -2.5348527431488037
    3. 'from' → logprob: -2.7848527431488037
    4. ' red' → logprob: -3.0348527431488037
    5. ' #' → logprob: -3.2848527431488037
    6. ' pass' → logprob: -3.4098527431488037
    7. 'red' → logprob: -3.6598527431488037
    8. ' from' → logprob: -4.909852981567383
    9. '   ' → logprob: -5.034852981567383
    10. 'def' → logprob: -5.034852981567383

Token 81: ' need' (ID: 1309)
  Prédit: ' want'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' want' → logprob: -0.5473295450210571
    2. ' need' → logprob: -1.6723295450210571
    3. ' ' → logprob: -1.7973295450210571
    4. ' can' → logprob: -3.9223294258117676
    5. ' continue' → logprob: -4.297329425811768
    6. ' #' → logprob: -4.922329425811768
    7. ''ll' → logprob: -5.047329425811768
    8. ' must' → logprob: -5.172329425811768
    9. '<|end|>' → logprob: -5.922329425811768
    10. ' are' → logprob: -5.922329425811768

Token 82: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.25209465622901917
    2. 'to' → logprob: -1.5020946264266968
    3. '<|end|>' → logprob: -10.377094268798828
    4. ' ' → logprob: -10.627094268798828
    5. 'def' → logprob: -10.752094268798828
    6. '  ' → logprob: -10.877094268798828
    7. ' a' → logprob: -10.877094268798828
    8. '<|end|>' → logprob: -11.002094268798828
    9. '   ' → logprob: -11.877094268798828
    10. 'a' → logprob: -11.877094268798828

Token 83: ' reconstruct' (ID: 78298)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.7367943525314331
    2. 'check' → logprob: -1.736794352531433
    3. 'simulate' → logprob: -2.1117944717407227
    4. 'validate' → logprob: -2.4867944717407227
    5. 'verify' → logprob: -2.9867944717407227
    6. 'det' → logprob: -3.6117944717407227
    7. ' verify' → logprob: -3.8617944717407227
    8. ' validate' → logprob: -4.736794471740723
    9. ' simulate' → logprob: -5.361794471740723
    10. 'compare' → logprob: -5.361794471740723

Token 84: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3373461067676544
    2. 'the' → logprob: -1.712346076965332
    3. '<|end|>' → logprob: -3.462346076965332
    4. '    ' → logprob: -3.837346076965332
    5. '   ' → logprob: -4.337346076965332
    6. ' red' → logprob: -4.962346076965332
    7. ' ' → logprob: -5.337346076965332
    8. ' next' → logprob: -5.837346076965332
    9. 'red' → logprob: -5.962346076965332
    10. '#' → logprob: -5.962346076965332

Token 85: ' sequence' (ID: 16281)
  Prédit: ' order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.47671857476234436
    2. ' sequence' → logprob: -1.851718544960022
    3. ' sets' → logprob: -3.1017186641693115
    4. ' original' → logprob: -3.2267186641693115
    5. ' logic' → logprob: -3.4767186641693115
    6. ' code' → logprob: -4.476718425750732
    7. ' set' → logprob: -4.726718425750732
    8. 'order' → logprob: -4.851718425750732
    9. ' possible' → logprob: -4.851718425750732
    10. ' mixing' → logprob: -4.851718425750732

Token 86: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15574488043785095
    2. '<|end|>' → logprob: -3.280744791030884
    3. ' ' → logprob: -3.405744791030884
    4. '#' → logprob: -3.530744791030884
    5. '
' → logprob: -4.905745029449463
    6. '    ' → logprob: -5.280745029449463
    7. '```' → logprob: -5.530745029449463
    8. ' #' → logprob: -5.655745029449463
    9. 'import' → logprob: -5.780745029449463
    10. '<|end|>' → logprob: -6.030745029449463

Token 87: ' packages' (ID: 21429)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.2153300046920776
    2. ' red' → logprob: -1.2153300046920776
    3. ' tokens' → logprob: -2.590330123901367
    4. 'the' → logprob: -3.340330123901367
    5. ' steps' → logprob: -3.340330123901367
    6. ' how' → logprob: -3.465330123901367
    7. ' green' → logprob: -3.840330123901367
    8. ' operations' → logprob: -3.840330123901367
    9. 'tokens' → logprob: -4.215330123901367
    10. ' moves' → logprob: -4.340330123901367

Token 88: ' that' (ID: 484)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4446706771850586
    2. '   ' → logprob: -1.6946706771850586
    3. ' #' → logprob: -3.4446706771850586
    4. ' ' → logprob: -3.5696706771850586
    5. 'n' → logprob: -3.9446706771850586
    6. ':' → logprob: -4.194670677185059
    7. '```' → logprob: -4.194670677185059
    8. '
' → logprob: -4.319670677185059
    9. '<|end|>' → logprob: -4.944670677185059
    10. 's' → logprob: -5.194670677185059

Token 89: ' reached' (ID: 15237)
  Prédit: ' came'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' came' → logprob: -0.2048015594482422
    2. 'came' → logprob: -3.329801559448242
    3. ' could' → logprob: -3.579801559448242
    4. ' appeared' → logprob: -3.704801559448242
    5. ' were' → logprob: -3.829801559448242
    6. ' arrived' → logprob: -4.079801559448242
    7. ' passed' → logprob: -4.704801559448242
    8. ' reached' → logprob: -4.954801559448242
    9. ' went' → logprob: -5.204801559448242
    10. ' left' → logprob: -5.329801559448242

Token 90: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.016221819445490837
    2. 'the' → logprob: -4.39122200012207
    3. ' from' → logprob: -6.26622200012207
    4. ' top' → logprob: -7.01622200012207
    5. 'from' → logprob: -8.01622200012207
    6. '<|end|>' → logprob: -9.01622200012207
    7. 'top' → logprob: -9.01622200012207
    8. ' both' → logprob: -9.76622200012207
    9. ' to' → logprob: -10.01622200012207
    10. ' up' → logprob: -10.01622200012207

Token 91: ' right' (ID: 1849)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.9915589094161987
    2. 'top' → logprob: -1.4915589094161987
    3. 'horizontal' → logprob: -1.8665589094161987
    4. 'left' → logprob: -2.6165590286254883
    5. ' horizontal' → logprob: -3.2415590286254883
    6. 'right' → logprob: -3.2415590286254883
    7. ' left' → logprob: -3.4915590286254883
    8. ' green' → logprob: -4.116559028625488
    9. ' right' → logprob: -4.366559028625488
    10. 'green' → logprob: -4.616559028625488

Token 92: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4995754361152649
    2. '#' → logprob: -1.2495753765106201
    3. '```' → logprob: -2.99957537651062
    4. ' #' → logprob: -4.499575614929199
    5. ''s' → logprob: -5.249575614929199
    6. 'n' → logprob: -5.499575614929199
    7. '<|end|>' → logprob: -5.624575614929199
    8. 's' → logprob: -5.749575614929199
    9. 'def' → logprob: -5.749575614929199
    10. '
' → logprob: -5.874575614929199

Token 93: 'right' (ID: 2460)
  Prédit: ' vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vertical' → logprob: -1.7574031352996826
    2. 'vertical' → logprob: -1.8824031352996826
    3. ' the' → logprob: -2.1324031352996826
    4. ' side' → logprob: -2.2574031352996826
    5. ')' → logprob: -2.3824031352996826
    6. ' horizontal' → logprob: -2.6324031352996826
    7. 'horizontal' → logprob: -2.6324031352996826
    8. 'belt' → logprob: -2.7574031352996826
    9. ' ' → logprob: -3.5074031352996826
    10. 'the' → logprob: -3.5074031352996826

Token 94: ' belt' (ID: 28328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26138633489608765
    2. 'belt' → logprob: -2.3863863945007324
    3. '<|end|>' → logprob: -2.7613863945007324
    4. ' belt' → logprob: -2.8863863945007324
    5. ' )' → logprob: -5.136386394500732
    6. 'vertical' → logprob: -5.511386394500732
    7. ' vertical' → logprob: -6.261386394500732
    8. '_' → logprob: -6.761386394500732
    9. '<|end|>' → logprob: -6.761386394500732
    10. ' side' → logprob: -7.011386394500732

Token 95: ')

' (ID: 1029)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3947129249572754
    2. ')' → logprob: -1.2697129249572754
    3. ':' → logprob: -4.394712924957275
    4. '<|end|>' → logprob: -4.394712924957275
    5. ' ' → logprob: -5.769712924957275
    6. '#' → logprob: -5.769712924957275
    7. '```' → logprob: -6.019712924957275
    8. ',' → logprob: -6.269712924957275
    9. ']' → logprob: -6.644712924957275
    10. '=' → logprob: -7.019712924957275

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7169038653373718
    2. '#' → logprob: -0.9669038653373718
    3. '
' → logprob: -3.3419039249420166
    4. ' #' → logprob: -3.7169039249420166
    5. 'right' → logprob: -3.8419039249420166
    6. '```' → logprob: -3.9669039249420166
    7. ' right' → logprob: -4.8419036865234375
    8. '<|end|>' → logprob: -5.2169036865234375
    9. '    
' → logprob: -6.0919036865234375
    10. 'r' → logprob: -6.5919036865234375

Token 97: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.2517579197883606
    2. 'right' → logprob: -1.8767578601837158
    3. 'stack' → logprob: -3.751757860183716
    4. 'def' → logprob: -4.126758098602295
    5. 'from' → logprob: -5.001758098602295
    6. 'n' → logprob: -5.501758098602295
    7. '   ' → logprob: -5.501758098602295
    8. 'result' → logprob: -5.626758098602295
    9. 'red' → logprob: -6.001758098602295
    10. 'left' → logprob: -7.001758098602295

Token 98: ' The' (ID: 623)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.41587546467781067
    2. 'n' → logprob: -2.6658754348754883
    3. 'stack' → logprob: -2.7908754348754883
    4. 'from' → logprob: -3.0408754348754883
    5. ' n' → logprob: -3.1658754348754883
    6. 'right' → logprob: -3.4158754348754883
    7. 'def' → logprob: -3.7908754348754883
    8. ' #' → logprob: -4.290875434875488
    9. ' stack' → logprob: -4.915875434875488
    10. '   ' → logprob: -4.915875434875488

Token 99: ' mixing' (ID: 38917)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7640594244003296
    2. ' #' → logprob: -1.6390594244003296
    3. ' next' → logprob: -2.764059543609619
    4. ' rest' → logprob: -2.764059543609619
    5. ' red' → logprob: -3.389059543609619
    6. ' right' → logprob: -3.889059543609619
    7. ' code' → logprob: -4.264059543609619
    8. ' blue' → logprob: -4.389059543609619
    9. 'right' → logprob: -4.639059543609619
    10. ' left' → logprob: -4.639059543609619

Token 100: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.2726525068283081
    2. ' logic' → logprob: -2.3976526260375977
    3. ' sequence' → logprob: -2.6476526260375977
    4. ' is' → logprob: -4.022652626037598
    5. ' happens' → logprob: -4.022652626037598
    6. '<|end|>' → logprob: -5.272652626037598
    7. 'process' → logprob: -5.397652626037598
    8. ' #' → logprob: -5.522652626037598
    9. ' =' → logprob: -5.522652626037598
    10. ' order' → logprob: -5.772652626037598

Token 101: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9725289344787598
    2. '   ' → logprob: -1.8475289344787598
    3. '<|end|>' → logprob: -1.8475289344787598
    4. ' involves' → logprob: -2.3475289344787598
    5. '<|end|>' → logprob: -3.0975289344787598
    6. ' continues' → logprob: -3.0975289344787598
    7. ':' → logprob: -3.5975289344787598
    8. '    ' → logprob: -3.9725289344787598
    9. '#' → logprob: -3.9725289344787598
    10. ' ' → logprob: -4.97252893447876

Token 102: ' an' (ID: 448)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.1439374685287476
    2. 'def' → logprob: -1.7689374685287476
    3. 'not' → logprob: -2.018937587738037
    4. '   ' → logprob: -2.268937587738037
    5. '#' → logprob: -2.768937587738037
    6. ' simulated' → logprob: -3.268937587738037
    7. ' #' → logprob: -4.018937587738037
    8. ' described' → logprob: -4.643937587738037
    9. ' def' → logprob: -4.768937587738037
    10. ' a' → logprob: -4.893937587738037

Token 103: ' inter' (ID: 993)
  Prédit: ' inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inter' → logprob: -0.3486837148666382
    2. 'inter' → logprob: -2.2236838340759277
    3. ' unknown' → logprob: -3.7236838340759277
    4. 'other' → logprob: -3.8486838340759277
    5. 'unknown' → logprob: -4.661183834075928
    6. ' intertwined' → logprob: -4.723683834075928
    7. ' intertw' → logprob: -5.036183834075928
    8. ' alternating' → logprob: -5.286183834075928
    9. ' implementation' → logprob: -5.286183834075928
    10. ' in' → logprob: -5.348683834075928

Token 104: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.016940657049417496
    2. 'rupted' → logprob: -4.641940593719482
    3. 'leave' → logprob: -5.391940593719482
    4. 'woven' → logprob: -7.391940593719482
    5. 'l' → logprob: -7.766940593719482
    6. 'section' → logprob: -7.891940593719482
    7. 'we' → logprob: -8.39194107055664
    8. 'pre' → logprob: -8.89194107055664
    9. 'esting' → logprob: -9.01694107055664
    10. 'pret' → logprob: -9.51694107055664

Token 105: 'aving' (ID: 3025)
  Prédit: 'aving'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aving' → logprob: -0.29867157340049744
    2. 'aved' → logprob: -1.4236716032028198
    3. 'ave' → logprob: -4.298671722412109
    4. 'e' → logprob: -6.173671722412109
    5. 'av' → logprob: -6.798671722412109
    6. 'avings' → logprob: -8.67367172241211
    7. 'a' → logprob: -9.67367172241211
    8. 'ace' → logprob: -10.17367172241211
    9. '   ' → logprob: -10.17367172241211
    10. 'ation' → logprob: -10.17367172241211

Token 106: ' of' (ID: 328)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4258797764778137
    2. '   ' → logprob: -1.925879716873169
    3. 'result' → logprob: -3.300879716873169
    4. ' #' → logprob: -3.675879716873169
    5. ' of' → logprob: -3.925879716873169
    6. '_' → logprob: -4.550879955291748
    7. '  ' → logprob: -4.550879955291748
    8. '#' → logprob: -4.675879955291748
    9. 'red' → logprob: -4.800879955291748
    10. '<|end|>' → logprob: -4.800879955291748

Token 107: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.043892670422792435
    2. ' red' → logprob: -3.1688926219940186
    3. 'the' → logprob: -7.543892860412598
    4. 'green' → logprob: -8.043892860412598
    5. ' green' → logprob: -10.793892860412598
    6. ' the' → logprob: -11.168892860412598
    7. '(red' → logprob: -12.418892860412598
    8. 'two' → logprob: -12.918892860412598
    9. 'reds' → logprob: -15.418892860412598
    10. ' ' → logprob: -15.543892860412598

Token 108: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16097354888916016
    2. 'and' → logprob: -1.9109735488891602
    3. '   ' → logprob: -7.91097354888916
    4. '+' → logprob: -9.53597354888916
    5. ' ' → logprob: -9.78597354888916
    6. ',' → logprob: -9.78597354888916
    7. ' +' → logprob: -9.91097354888916
    8. ' ,' → logprob: -10.28597354888916
    9. ')' → logprob: -10.78597354888916
    10. ' packages' → logprob: -11.16097354888916

Token 109: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.5759583115577698
    2. ' green' → logprob: -0.8259583115577698
    3. '   ' → logprob: -11.575958251953125
    4. ' ' → logprob: -13.325958251953125
    5. 'down' → logprob: -13.450958251953125
    6. '.green' → logprob: -14.450958251953125
    7. '
' → logprob: -14.450958251953125
    8. ' ' → logprob: -14.513458251953125
    9. '_green' → logprob: -14.575958251953125
    10. '```' → logprob: -14.638458251953125

Token 110: ' packages' (ID: 21429)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6770429611206055
    2. 'right' → logprob: -1.1770429611206055
    3. ' right' → logprob: -2.9270429611206055
    4. 'result' → logprob: -3.1770429611206055
    5. '#' → logprob: -3.3020429611206055
    6. '
' → logprob: -3.9270429611206055
    7. '       ' → logprob: -5.1770429611206055
    8. ' #' → logprob: -5.6770429611206055
    9. 'from' → logprob: -6.0520429611206055
    10. '```' → logprob: -6.1770429611206055

Token 111: ':
' (ID: 734)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5953669548034668
    2. '   ' → logprob: -1.4703669548034668
    3. 'result' → logprob: -1.8453669548034668
    4. '
' → logprob: -4.720366954803467
    5. 'def' → logprob: -4.845366954803467
    6. 'next' → logprob: -5.220366954803467
    7. '#' → logprob: -5.220366954803467
    8. ' right' → logprob: -5.595366954803467
    9. '       ' → logprob: -5.845366954803467
    10. 'res' → logprob: -5.845366954803467

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003003492718562484
    2. '    ' → logprob: -7.2530035972595215
    3. '       ' → logprob: -7.5030035972595215
    4. ' i' → logprob: -8.003003120422363
    5. '  ' → logprob: -8.378003120422363
    6. ' ' → logprob: -8.503003120422363
    7. '#' → logprob: -8.878003120422363
    8. ' #' → logprob: -8.878003120422363
    9. ' tokens' → logprob: -9.253003120422363
    10. 'i' → logprob: -9.503003120422363

Token 113: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1265724152326584
    2. ' i' → logprob: -3.251572370529175
    3. 'i' → logprob: -3.626572370529175
    4. 'r' → logprob: -4.501572608947754
    5. ' right' → logprob: -5.001572608947754
    6. ' r' → logprob: -5.251572608947754
    7. ' red' → logprob: -5.251572608947754
    8. 'right' → logprob: -5.751572608947754
    9. ' pos' → logprob: -5.876572608947754
    10. ' #' → logprob: -6.126572608947754

Token 114: ' Number' (ID: 9184)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.582589328289032
    2. ' red' → logprob: -1.9575893878936768
    3. 'i' → logprob: -2.4575893878936768
    4. ' r' → logprob: -2.8325893878936768
    5. ' #' → logprob: -3.4575893878936768
    6. ' pos' → logprob: -3.5825893878936768
    7. '   ' → logprob: -4.082589149475098
    8. ' idx' → logprob: -4.457589149475098
    9. 'r' → logprob: -4.832589149475098
    10. ' next' → logprob: -4.957589149475098

Token 115: ' of' (ID: 328)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.6444629430770874
    2. 'of' → logprob: -1.5194629430770874
    3. ' of' → logprob: -2.144463062286377
    4. 's' → logprob: -2.519463062286377
    5. ' =' → logprob: -4.269463062286377
    6. 'ed' → logprob: -4.894463062286377
    7. '_sequences' → logprob: -5.019463062286377
    8. '_tokens' → logprob: -5.144463062286377
    9. '_chars' → logprob: -5.394463062286377
    10. '<|end|>' → logprob: -5.519463062286377

Token 116: ' push' (ID: 9349)
  Prédit: ' red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.5848281979560852
    2. 'red' → logprob: -0.9598281979560852
    3. 'down' → logprob: -4.8348283767700195
    4. 'green' → logprob: -4.9598283767700195
    5. ' green' → logprob: -4.9598283767700195
    6. 'characters' → logprob: -5.0848283767700195
    7. ' characters' → logprob: -5.5848283767700195
    8. ' elements' → logprob: -6.0848283767700195
    9. 'reds' → logprob: -6.3348283767700195
    10. ' packages' → logprob: -6.4598283767700195

Token 117: '_down' (ID: 40267)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08222942054271698
    2. ' s' → logprob: -3.0822293758392334
    3. 'ed' → logprob: -3.8322293758392334
    4. 'es' → logprob: -4.8322296142578125
    5. '_' → logprob: -7.0822296142578125
    6. '_s' → logprob: -7.2072296142578125
    7. '_count' → logprob: -7.4572296142578125
    8. ' ' → logprob: -7.7072296142578125
    9. 'd' → logprob: -8.082229614257812
    10. '    ' → logprob: -9.207229614257812

Token 118: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1475994735956192
    2. '_' → logprob: -2.897599458694458
    3. ' =' → logprob: -3.272599458694458
    4. 'es' → logprob: -4.522599697113037
    5. '_count' → logprob: -4.772599697113037
    6. ' s' → logprob: -5.147599697113037
    7. '_index' → logprob: -5.397599697113037
    8. ' ' → logprob: -5.772599697113037
    9. '=' → logprob: -5.897599697113037
    10. '_s' → logprob: -6.897599697113037

Token 119: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.37792930006980896
    2. ' len' → logprob: -1.3779293298721313
    3. ' red' → logprob: -4.377929210662842
    4. ' min' → logprob: -4.627929210662842
    5. 'down' → logprob: -4.627929210662842
    6. 'max' → logprob: -5.252929210662842
    7. 'min' → logprob: -5.377929210662842
    8. ' max' → logprob: -5.377929210662842
    9. ' ' → logprob: -5.502929210662842
    10. '0' → logprob: -5.502929210662842

Token 120: '(red' (ID: 83440)
  Prédit: '(red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(red' → logprob: -0.09935241937637329
    2. '(d' → logprob: -3.0993523597717285
    3. 'red' → logprob: -3.4743523597717285
    4. 'down' → logprob: -4.2243523597717285
    5. '(' → logprob: -5.8493523597717285
    6. ' red' → logprob: -8.099352836608887
    7. 'd' → logprob: -8.974352836608887
    8. '(g' → logprob: -9.224352836608887
    9. ' (' → logprob: -9.224352836608887
    10. ' down' → logprob: -9.849352836608887

Token 121: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21575234830379486
    2. ' +' → logprob: -1.965752363204956
    3. '+' → logprob: -3.590752363204956
    4. ' -' → logprob: -4.840752124786377
    5. ' )' → logprob: -5.340752124786377
    6. ')+' → logprob: -5.340752124786377
    7. ' and' → logprob: -5.965752124786377
    8. '-' → logprob: -6.090752124786377
    9. ' or' → logprob: -6.465752124786377
    10. '   ' → logprob: -7.340752124786377

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0580887570977211
    2. ' +' → logprob: -4.558088779449463
    3. 'while' → logprob: -4.683088779449463
    4. ' while' → logprob: -4.683088779449463
    5. '+' → logprob: -4.933088779449463
    6. '<|end|>' → logprob: -5.683088779449463
    7. ')' → logprob: -6.058088779449463
    8. ' #' → logprob: -6.308088779449463
    9. '#' → logprob: -6.558088779449463
    10. '    ' → logprob: -6.933088779449463

Token 123: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23297235369682312
    2. ')' → logprob: -2.9829723834991455
    3. '<|end|>' → logprob: -3.6079723834991455
    4. 'while' → logprob: -3.8579723834991455
    5. ' while' → logprob: -3.9829723834991455
    6. '#' (adapté à ' #') → logprob: -3.9829723834991455
    7. 'right' → logprob: -4.607972145080566
    8. ' #' → logprob: -5.107972145080566
    9. 'green' → logprob: -5.107972145080566
    10. '    ' → logprob: -5.107972145080566

Token 124: ' Number' (ID: 9184)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1949838548898697
    2. 'green' → logprob: -4.069983959197998
    3. 'while' → logprob: -4.194983959197998
    4. ' while' → logprob: -4.194983959197998
    5. ' green' → logprob: -4.319983959197998
    6. 'next' → logprob: -4.694983959197998
    7. ')' → logprob: -4.694983959197998
    8. '    ' → logprob: -4.819983959197998
    9. ' #' → logprob: -4.819983959197998
    10. 'count' → logprob: -5.069983959197998

Token 125: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.49135637283325195
    2. '_of' → logprob: -2.116356372833252
    3. 'of' → logprob: -2.116356372833252
    4. ' of' → logprob: -3.116356372833252
    5. ' _' → logprob: -3.491356372833252
    6. ')' → logprob: -3.616356372833252
    7. '=' → logprob: -4.991356372833252
    8. '_space' → logprob: -5.366356372833252
    9. '_spaces' → logprob: -5.741356372833252
    10. 'space' → logprob: -5.991356372833252

Token 126: ' push' (ID: 9349)
  Prédit: ' pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pop' → logprob: -0.7373787760734558
    2. 'pop' → logprob: -0.9873787760734558
    3. ' green' → logprob: -3.1123788356781006
    4. 'push' → logprob: -3.2373788356781006
    5. ' push' → logprob: -3.2373788356781006
    6. ' pull' → logprob: -4.7373785972595215
    7. 'green' → logprob: -4.9873785972595215
    8. 'pull' → logprob: -5.3623785972595215
    9. ' pops' → logprob: -6.3623785972595215
    10. ' red' → logprob: -7.1123785972595215

Token 127: '_right' (ID: 24402)
  Prédit: '_down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_down' → logprob: -0.016742436215281487
    2. '_up' → logprob: -4.76674222946167
    3. '_right' → logprob: -6.01674222946167
    4. '_' → logprob: -6.14174222946167
    5. 'down' → logprob: -6.76674222946167
    6. '_left' → logprob: -7.14174222946167
    7. '_out' → logprob: -7.89174222946167
    8. 's' → logprob: -8.141742706298828
    9. '_back' → logprob: -8.266742706298828
    10. 'es' → logprob: -8.266742706298828

Token 128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0042088706977665424
    2. '=' → logprob: -5.504209041595459
    3. ' ' → logprob: -9.8792085647583
    4. ' ==' → logprob: -10.2542085647583
    5. ')' → logprob: -11.1292085647583
    6. '   ' → logprob: -11.7542085647583
    7. ' +=' → logprob: -12.2542085647583
    8. ' )' → logprob: -12.6292085647583
    9. '    ' → logprob: -13.0042085647583
    10. 's' → logprob: -13.0042085647583

Token 129: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.17980746924877167
    2. 'len' → logprob: -1.804807424545288
    3. '(len' → logprob: -10.054807662963867
    4. ' ' → logprob: -11.679807662963867
    5. '=len' → logprob: -12.429807662963867
    6. '[len' → logprob: -12.804807662963867
    7. ' ' → logprob: -13.429807662963867
    8. '	len' → logprob: -13.554807662963867
    9. '   ' → logprob: -15.179807662963867
    10. '<len' → logprob: -15.429807662963867

Token 130: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.0048889582976698875
    2. '(red' → logprob: -5.379889011383057
    3. '(' → logprob: -8.504888534545898
    4. 'green' → logprob: -10.004888534545898
    5. '(right' → logprob: -11.879888534545898
    6. ' (' → logprob: -12.004888534545898
    7. ' green' → logprob: -12.504888534545898
    8. '(left' → logprob: -14.254888534545898
    9. 'red' → logprob: -14.379888534545898
    10. 'g' → logprob: -14.629888534545898

Token 131: 'reen' (ID: 15653)
  Prédit: 'reen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reen' → logprob: -5.12127808178775e-05
    2. 'green' → logprob: -10.000051498413086
    3. 'ree' → logprob: -13.125051498413086
    4. 're' → logprob: -13.500051498413086
    5. 'red' → logprob: -14.875051498413086
    6. ' green' → logprob: -14.875051498413086
    7. ')' → logprob: -15.000051498413086
    8. ' reen' → logprob: -15.500051498413086
    9. 'REEN' → logprob: -15.625051498413086
    10. '
' → logprob: -15.625051498413086

Token 132: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001588058308698237
    2. '+' → logprob: -7.501587867736816
    3. '   ' → logprob: -8.126587867736816
    4. ')
' → logprob: -8.251587867736816
    5. ' -' → logprob: -9.251587867736816
    6. ' +' → logprob: -9.376587867736816
    7. '-' → logprob: -9.376587867736816
    8. ' )' → logprob: -9.626587867736816
    9. ')+' → logprob: -10.126587867736816
    10. '):' → logprob: -10.626587867736816

Token 133: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01816035620868206
    2. '#' → logprob: -5.643160343170166
    3. '       ' → logprob: -5.643160343170166
    4. 'right' → logprob: -5.893160343170166
    5. '
' → logprob: -6.143160343170166
    6. ' ' → logprob: -7.768160343170166
    7. ' #' → logprob: -7.893160343170166
    8. ')' → logprob: -8.018160820007324
    9. '  ' → logprob: -8.018160820007324
    10. '    ' → logprob: -8.018160820007324

Token 134: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.03291073441505432
    2. '1' → logprob: -3.5329108238220215
    3. ' len' → logprob: -5.9079108238220215
    4. 'down' → logprob: -8.532910346984863
    5. '(len' → logprob: -9.407910346984863
    6. ' ' → logprob: -9.782910346984863
    7. '0' → logprob: -9.907910346984863
    8. '   ' → logprob: -10.532910346984863
    9. '[len' → logprob: -11.407910346984863
    10. '	len' → logprob: -12.282910346984863

Token 135: '1' (ID: 16)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.011035330593585968
    2. '1' → logprob: -4.886035442352295
    3. ' len' → logprob: -6.136035442352295
    4. 'down' → logprob: -7.136035442352295
    5. '(len' → logprob: -7.886035442352295
    6. '0' → logprob: -10.011034965515137
    7. ' ' → logprob: -11.011034965515137
    8. '[len' → logprob: -12.011034965515137
    9. '(' → logprob: -12.261034965515137
    10. '   ' → logprob: -12.386034965515137

Token 136: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07059471309185028
    2. '<|end|>' → logprob: -3.5705947875976562
    3. ')' → logprob: -4.695594787597656
    4. '#' → logprob: -4.695594787597656
    5. '
' → logprob: -5.320594787597656
    6. ' ' → logprob: -5.695594787597656
    7. '    ' → logprob: -5.820594787597656
    8. '  ' → logprob: -6.445594787597656
    9. ' #' → logprob: -6.695594787597656
    10. '[' → logprob: -6.695594787597656

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18478034436702728
    2. 'right' → logprob: -3.4347803592681885
    3. '#' → logprob: -4.309780120849609
    4. 'def' → logprob: -4.434780120849609
    5. 'result' → logprob: -4.559780120849609
    6. 'stack' → logprob: -4.559780120849609
    7. '
' → logprob: -4.684780120849609
    8. ' stack' → logprob: -5.184780120849609
    9. ' right' → logprob: -5.309780120849609
    10. 'pos' → logprob: -5.309780120849609

Token 138: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9063419103622437
    2. '#' (adapté à ' #') → logprob: -1.9063419103622437
    3. 'result' → logprob: -2.406342029571533
    4. '
' → logprob: -2.406342029571533
    5. 'right' → logprob: -2.781342029571533
    6. ')' → logprob: -3.281342029571533
    7. '<|end|>' → logprob: -3.656342029571533
    8. 'def' → logprob: -3.906342029571533
    9. ' #' → logprob: -4.531342029571533
    10. 'next' → logprob: -4.656342029571533

Token 139: ' The' (ID: 623)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.654880702495575
    2. '   ' → logprob: -1.7798807621002197
    3. 'result' → logprob: -2.1548807621002197
    4. '#' → logprob: -2.6548807621002197
    5. 'push' → logprob: -3.4048807621002197
    6. 'stack' → logprob: -4.279880523681641
    7. 'res' → logprob: -4.779880523681641
    8. ')' → logprob: -5.029880523681641
    9. 'next' → logprob: -5.279880523681641
    10. 'n' → logprob: -5.529880523681641

Token 140: ' first' (ID: 1577)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -1.2865753173828125
    2. 'dp' → logprob: -1.5365753173828125
    3. '#' → logprob: -1.9115753173828125
    4. 'def' → logprob: -1.9115753173828125
    5. ' #' → logprob: -3.5365753173828125
    6. ' def' → logprob: -3.6615753173828125
    7. 'n' → logprob: -3.7865753173828125
    8. ' n' → logprob: -4.0365753173828125
    9. 'for' → logprob: -4.0365753173828125
    10. ' next' → logprob: -4.2865753173828125

Token 141: ' and' (ID: 326)
  Prédit: ' push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' push' → logprob: -0.683492124080658
    2. 'push' → logprob: -1.5584921836853027
    3. ' step' → logprob: -3.0584921836853027
    4. ' ' → logprob: -3.4334921836853027
    5. ' token' → logprob: -3.4334921836853027
    6. 'token' → logprob: -3.8084921836853027
    7. ' character' → logprob: -4.183492183685303
    8. ' right' → logprob: -4.433492183685303
    9. ' red' → logprob: -4.558492183685303
    10. 'down' → logprob: -4.558492183685303

Token 142: ' last' (ID: 2174)
  Prédit: ' last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.5436463356018066
    2. 'last' → logprob: -0.9186463356018066
    3. ' only' → logprob: -4.293646335601807
    4. 'second' → logprob: -6.293646335601807
    5. 'only' → logprob: -6.793646335601807
    6. ' second' → logprob: -7.418646335601807
    7. 'next' → logprob: -7.543646335601807
    8. '#' → logprob: -7.668646335601807
    9. ' the' → logprob: -7.793646335601807
    10. '   ' → logprob: -8.043645858764648

Token 143: ' push' (ID: 9349)
  Prédit: ' push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' push' → logprob: -0.3555785119533539
    2. 'push' → logprob: -2.3555784225463867
    3. ' tokens' → logprob: -2.9805784225463867
    4. ' down' → logprob: -3.7305784225463867
    5. ' pushes' → logprob: -3.8555784225463867
    6. ' token' → logprob: -4.355578422546387
    7. ' characters' → logprob: -4.355578422546387
    8. ' ' → logprob: -4.855578422546387
    9. ' character' → logprob: -4.980578422546387
    10. 'tokens' → logprob: -5.355578422546387

Token 144: ' are' (ID: 553)
  Prédit: '_right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.44929811358451843
    2. '_down' → logprob: -1.1992981433868408
    3. 'right' → logprob: -3.574298143386841
    4. 'down' → logprob: -4.199297904968262
    5. '_' → logprob: -5.199297904968262
    6. ' right' → logprob: -5.574297904968262
    7. 's' → logprob: -6.699297904968262
    8. '   ' → logprob: -6.824297904968262
    9. ' down' → logprob: -6.824297904968262
    10. ' ' → logprob: -7.074297904968262

Token 145: ' push' (ID: 9349)
  Prédit: ' push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' push' → logprob: -0.5551647543907166
    2. 'push' → logprob: -1.3051648139953613
    3. ' always' → logprob: -2.8051648139953613
    4. ' from' → logprob: -3.6801648139953613
    5. ' to' → logprob: -4.305164813995361
    6. 'always' → logprob: -4.430164813995361
    7. ' down' → logprob: -4.930164813995361
    8. 'down' → logprob: -4.930164813995361
    9. ' red' → logprob: -5.055164813995361
    10. 'from' → logprob: -5.055164813995361

Token 146: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.7280076742172241
    2. '_down' → logprob: -0.7280076742172241
    3. '_' → logprob: -4.478007793426514
    4. 'down' → logprob: -4.478007793426514
    5. 'right' → logprob: -5.103007793426514
    6. ' down' → logprob: -6.728007793426514
    7. ' right' → logprob: -7.103007793426514
    8. '_left' → logprob: -7.228007793426514
    9. '_push' → logprob: -7.228007793426514
    10. ' _' → logprob: -7.728007793426514

Token 147: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02167210541665554
    2. 'def' → logprob: -5.521672248840332
    3. 'push' → logprob: -5.771672248840332
    4. '#' → logprob: -5.896672248840332
    5. '
' → logprob: -6.146672248840332
    6. 'right' → logprob: -6.396672248840332
    7. 'result' → logprob: -6.896672248840332
    8. 'dp' → logprob: -7.396672248840332
    9. 'stack' → logprob: -7.521672248840332
    10. '```' → logprob: -7.646672248840332

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6569511890411377
    2. 'right' → logprob: -1.6569511890411377
    3. 'push' → logprob: -2.1569511890411377
    4. 'result' → logprob: -3.0319511890411377
    5. '#' → logprob: -3.6569511890411377
    6. 'pos' → logprob: -3.9069511890411377
    7. 'stack' → logprob: -4.406950950622559
    8. 'r' → logprob: -4.781950950622559
    9. 'def' → logprob: -4.906950950622559
    10. 'red' → logprob: -5.031950950622559

Token 149: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07609817385673523
    2. '#' (adapté à ' #') → logprob: -3.8260982036590576
    3. 'push' → logprob: -4.4510979652404785
    4. '
' → logprob: -5.3260979652404785
    5. ' #' → logprob: -5.5760979652404785
    6. 'def' → logprob: -5.8260979652404785
    7. 'stack' → logprob: -5.8260979652404785
    8. '       ' → logprob: -6.0760979652404785
    9. 'right' → logprob: -6.0760979652404785
    10. ' push' → logprob: -6.2010979652404785

Token 150: ' down' (ID: 1917)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.8663098812103271
    2. 'push' → logprob: -1.9913098812103271
    3. 'stack' → logprob: -2.616309881210327
    4. '   ' → logprob: -2.741309881210327
    5. 'def' → logprob: -2.741309881210327
    6. '#' → logprob: -2.866309881210327
    7. 'result' → logprob: -2.991309881210327
    8. 'dp' → logprob: -3.241309881210327
    9. 'res' → logprob: -3.616309881210327
    10. 'pos' → logprob: -4.741310119628906

Token 151: ' represents' (ID: 18627)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.3076499700546265
    2. '_idx' → logprob: -1.4326499700546265
    3. '_pos' → logprob: -2.057650089263916
    4. '_len' → logprob: -2.557650089263916
    5. ' =' → logprob: -2.932650089263916
    6. '_' → logprob: -2.932650089263916
    7. '_length' → logprob: -4.182650089263916
    8. '_ptr' → logprob: -4.182650089263916
    9. '_push' → logprob: -4.307650089263916
    10. '=' → logprob: -4.432650089263916

Token 152: ' the' (ID: 290)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.7877538204193115
    2. ' the' → logprob: -1.0377538204193115
    3. 'the' → logprob: -2.0377538204193115
    4. ' a' → logprob: -3.5377538204193115
    5. 'a' → logprob: -4.287754058837891
    6. 'an' → logprob: -4.662754058837891
    7. 'down' → logprob: -5.287754058837891
    8. ' down' → logprob: -6.912754058837891
    9. ' all' → logprob: -7.162754058837891
    10. ' one' → logprob: -8.28775405883789

Token 153: ' packages' (ID: 21429)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.47643113136291504
    2. ' inter' → logprob: -2.351431131362915
    3. 'sequence' → logprob: -2.351431131362915
    4. 'result' → logprob: -2.476431131362915
    5. 'down' → logprob: -3.601431131362915
    6. ' sequence' → logprob: -4.101430892944336
    7. 'merged' → logprob: -4.726430892944336
    8. ' result' → logprob: -4.976430892944336
    9. 'order' → logprob: -5.101430892944336
    10. 'final' → logprob: -5.226430892944336

Token 154: ' that' (ID: 484)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6670802235603333
    2. '_' → logprob: -1.2920801639556885
    3. ' ' → logprob: -1.9170801639556885
    4. '   ' → logprob: -4.042080402374268
    5. '=' → logprob: -5.042080402374268
    6. 'def' → logprob: -5.042080402374268
    7. ')' → logprob: -5.292080402374268
    8. ''' → logprob: -5.417080402374268
    9. '[' → logprob: -5.542080402374268
    10. ' _' → logprob: -5.917080402374268

Token 155: ' reached' (ID: 15237)
  Prédit: 'were'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'were' → logprob: -1.7837753295898438
    2. ' have' → logprob: -1.9087753295898438
    3. 'have' → logprob: -1.9087753295898438
    4. ' were' → logprob: -2.0337753295898438
    5. ' reached' → logprob: -2.9087753295898438
    6. 'came' → logprob: -2.9087753295898438
    7. 'result' → logprob: -3.0337753295898438
    8. ' came' → logprob: -3.4087753295898438
    9. 're' → logprob: -3.6587753295898438
    10. ' appeared' → logprob: -3.9087753295898438

Token 156: ' bottom' (ID: 8725)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.38703522086143494
    2. 'the' → logprob: -1.1370352506637573
    3. 'right' → logprob: -9.637035369873047
    4. '<|end|>' → logprob: -10.262035369873047
    5. ' right' → logprob: -10.762035369873047
    6. 'both' → logprob: -11.137035369873047
    7. ' both' → logprob: -11.387035369873047
    8. ' ' → logprob: -12.137035369873047
    9. 'from' → logprob: -13.137035369873047
    10. 'to' → logprob: -13.512035369873047

Token 157: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06583943963050842
    2. '#' → logprob: -3.8158395290374756
    3. '
' → logprob: -4.8158392906188965
    4. ' ' → logprob: -4.9408392906188965
    5. '```' → logprob: -5.6908392906188965
    6. '       ' → logprob: -5.9408392906188965
    7. 'right' → logprob: -6.1908392906188965
    8. 'n' → logprob: -6.1908392906188965
    9. '_' → logprob: -6.3158392906188965
    10. '[' → logprob: -6.4408392906188965

Token 158: ' order' (ID: 2569)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9579187035560608
    2. 'order' → logprob: -1.457918643951416
    3. ' the' → logprob: -2.082918643951416
    4. ' order' → logprob: -2.582918643951416
    5. 'some' → logprob: -2.957918643951416
    6. 'between' → logprob: -3.457918643951416
    7. 'ter' → logprob: -3.707918643951416
    8. ' an' → logprob: -3.832918643951416
    9. 'an' → logprob: -4.332918643951416
    10. ' some' → logprob: -5.082918643951416

Token 159: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059285376220941544
    2. 'def' → logprob: -4.1842851638793945
    3. '
' → logprob: -4.3092851638793945
    4. 'right' → logprob: -4.8092851638793945
    5. '#' → logprob: -5.0592851638793945
    6. 'result' → logprob: -5.4342851638793945
    7. 'push' → logprob: -6.3092851638793945
    8. '    
' → logprob: -6.4342851638793945
    9. 'stack' → logprob: -7.5592851638793945
    10. ')' → logprob: -7.6842851638793945

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8460330367088318
    2. '#' → logprob: -1.0960330963134766
    3. 'right' → logprob: -2.5960330963134766
    4. '_' → logprob: -3.4710330963134766
    5. 'push' → logprob: -3.4710330963134766
    6. ' ' → logprob: -4.346033096313477
    7. '
' → logprob: -4.596033096313477
    8. '```' → logprob: -4.596033096313477
    9. ' 
' → logprob: -4.846033096313477
    10. 'def' → logprob: -4.846033096313477

Token 161: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.135998249053955
    2. '#' (adapté à ' #') → logprob: -1.385998249053955
    3. 'right' → logprob: -2.135998249053955
    4. 'push' → logprob: -2.260998249053955
    5. 'def' → logprob: -2.885998249053955
    6. 'result' → logprob: -3.135998249053955
    7. 'n' → logprob: -3.260998249053955
    8. 'stack' → logprob: -4.385998249053955
    9. 'r' → logprob: -4.760998249053955
    10. ' #' → logprob: -5.260998249053955

Token 162: ' Using' (ID: 17511)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -1.1742757558822632
    2. 'dp' → logprob: -1.7992757558822632
    3. 'push' → logprob: -1.7992757558822632
    4. '#' → logprob: -2.0492758750915527
    5. 'def' → logprob: -3.1742758750915527
    6. 'red' → logprob: -3.1742758750915527
    7. 'stack' → logprob: -3.4242758750915527
    8. 'pos' → logprob: -3.6742758750915527
    9. 'n' → logprob: -3.6742758750915527
    10. 'from' → logprob: -4.049275875091553

Token 163: ' down' (ID: 1917)
  Prédit: ' two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.9122439026832581
    2. ' dynamic' → logprob: -1.1622438430786133
    3. 'two' → logprob: -2.5372438430786133
    4. ' red' → logprob: -2.9122438430786133
    5. 'dynamic' → logprob: -3.2872438430786133
    6. 'dp' → logprob: -3.7872438430786133
    7. ' a' → logprob: -4.162243843078613
    8. 'red' → logprob: -4.287243843078613
    9. 'a' → logprob: -4.412243843078613
    10. ' dp' → logprob: -4.662243843078613

Token 164: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.28725865483283997
    2. '_stack' → logprob: -2.4122586250305176
    3. '_index' → logprob: -3.6622586250305176
    4. '_len' → logprob: -3.7872586250305176
    5. '_idx' → logprob: -3.7872586250305176
    6. '_left' → logprob: -4.787258625030518
    7. '_length' → logprob: -4.787258625030518
    8. ' =' → logprob: -4.912258625030518
    9. '_pos' → logprob: -5.037258625030518
    10. '_count' → logprob: -5.037258625030518

Token 165: 'bottom' (ID: 29677)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33602213859558105
    2. ' red' → logprob: -2.461022138595581
    3. 'red' → logprob: -2.711022138595581
    4. '),' → logprob: -3.211022138595581
    5. ' and' → logprob: -3.961022138595581
    6. ' )' → logprob: -4.33602237701416
    7. ' the' → logprob: -4.83602237701416
    8. 'len' → logprob: -4.83602237701416
    9. 'down' → logprob: -4.96102237701416
    10. ' set' → logprob: -5.08602237701416

Token 166: ' belt' (ID: 28328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.521436333656311
    2. '_b' → logprob: -1.896436333656311
    3. ',' → logprob: -2.1464362144470215
    4. '_pos' → logprob: -3.8964362144470215
    5. '_' → logprob: -4.0214362144470215
    6. '),' → logprob: -4.2714362144470215
    7. '_idx' → logprob: -4.6464362144470215
    8. '_right' → logprob: -4.7714362144470215
    9. '_index' → logprob: -4.7714362144470215
    10. '_positions' → logprob: -4.7714362144470215

Token 167: ' sequence' (ID: 16281)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19993850588798523
    2. ',' → logprob: -2.0749385356903076
    3. '),' → logprob: -3.0749385356903076
    4. ' and' → logprob: -5.4499382972717285
    5. ' ,' → logprob: -6.4499382972717285
    6. 'and' → logprob: -7.0749382972717285
    7. '[' → logprob: -7.3249382972717285
    8. ' )' → logprob: -7.3249382972717285
    9. '<|end|>' → logprob: -8.199938774108887
    10. 's' → logprob: -9.324938774108887

Token 168: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7037351727485657
    2. ',' → logprob: -1.078735113143921
    3. '),' → logprob: -1.953735113143921
    4. ' and' → logprob: -4.8287353515625
    5. ' ,' → logprob: -5.0787353515625
    6. 'and' → logprob: -5.4537353515625
    7. ' )' → logprob: -6.0787353515625
    8. '   ' → logprob: -6.7037353515625
    9. ' ),' → logprob: -6.9537353515625
    10. 'def' → logprob: -9.3287353515625

Token 169: ' and' (ID: 326)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2958651781082153
    2. ' n' → logprob: -1.9208651781082153
    3. 'right' → logprob: -1.9208651781082153
    4. ' #' → logprob: -2.170865058898926
    5. 'from' → logprob: -2.295865058898926
    6. ' right' → logprob: -2.670865058898926
    7. 'dp' → logprob: -3.545865058898926
    8. ' from' → logprob: -3.670865058898926
    9. ' dp' → logprob: -3.795865058898926
    10. 'n' → logprob: -4.545865058898926

Token 170: ' red' (ID: 3592)
  Prédit: ' red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.1931600421667099
    2. 'red' → logprob: -1.818160057067871
    3. ' green' → logprob: -5.193160057067871
    4. 'the' → logprob: -5.568160057067871
    5. 'green' → logprob: -5.693160057067871
    6. ' the' → logprob: -7.693160057067871
    7. '(red' → logprob: -10.318160057067871
    8. 'len' → logprob: -10.568160057067871
    9. '#' → logprob: -11.568160057067871
    10. 'right' → logprob: -11.568160057067871

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6677197217941284
    2. ' and' → logprob: -1.4177197217941284
    3. 'and' → logprob: -1.6677197217941284
    4. ' ,' → logprob: -3.042719841003418
    5. '<|end|>' → logprob: -5.167719841003418
    6. 'green' → logprob: -6.792719841003418
    7. ')' → logprob: -8.042719841003418
    8. ' green' → logprob: -8.167719841003418
    9. ' ' → logprob: -8.542719841003418
    10. ' =' → logprob: -8.792719841003418

Token 172: ' green' (ID: 8851)
  Prédit: ' green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' green' → logprob: -0.11285532265901566
    2. 'green' → logprob: -2.2378554344177246
    3. ' and' → logprob: -11.237854957580566
    4. 'and' → logprob: -11.612854957580566
    5. ' red' → logprob: -12.987854957580566
    6. '_green' → logprob: -13.237854957580566
    7. ' ' → logprob: -13.362854957580566
    8. '.green' → logprob: -13.987854957580566
    9. ',' → logprob: -14.237854957580566
    10. ' ,' → logprob: -14.862854957580566

Token 173: ' sequences' (ID: 45665)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08936449140310287
    2. '_right' → logprob: -3.339364528656006
    3. ' ,' → logprob: -4.214364528656006
    4. ')' → logprob: -4.339364528656006
    5. '<|end|>' → logprob: -5.714364528656006
    6. '   ' → logprob: -6.214364528656006
    7. '_sequences' → logprob: -6.339364528656006
    8. '_next' → logprob: -6.839364528656006
    9. '_' → logprob: -6.964364528656006
    10. 'def' → logprob: -6.964364528656006

Token 174: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39153826236724854
    2. 'def' → logprob: -1.6415382623672485
    3. '#' → logprob: -3.766538143157959
    4. ' def' → logprob: -3.891538143157959
    5. ':' → logprob: -4.016538143157959
    6. '
' → logprob: -4.391538143157959
    7. 'right' → logprob: -4.891538143157959
    8. 'dp' → logprob: -5.266538143157959
    9. ' #' → logprob: -5.391538143157959
    10. 'n' → logprob: -5.391538143157959

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19102171063423157
    2. ' we' → logprob: -2.441021680831909
    3. '    ' → logprob: -3.941021680831909
    4. 'def' → logprob: -4.191021919250488
    5. ' try' → logprob: -4.691021919250488
    6. '#' → logprob: -4.816021919250488
    7. ' find' → logprob: -5.066021919250488
    8. ' #' → logprob: -5.441021919250488
    9. '       ' → logprob: -5.691021919250488
    10. ' continue' → logprob: -5.691021919250488

Token 176: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06685896962881088
    2. '#' (adapté à ' #') → logprob: -3.691859006881714
    3. ' we' → logprob: -4.066858768463135
    4. ' #' → logprob: -4.816858768463135
    5. ' find' → logprob: -5.816858768463135
    6. ' continue' → logprob: -6.191858768463135
    7. 'we' → logprob: -6.191858768463135
    8. ' try' → logprob: -6.191858768463135
    9. '    ' → logprob: -6.691858768463135
    10. 'def' → logprob: -7.066858768463135

Token 177: ' reconstruct' (ID: 78298)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.940116822719574
    2. ' #' → logprob: -1.4401168823242188
    3. ' pass' → logprob: -2.0651168823242188
    4. ' dp' → logprob: -3.1901168823242188
    5. ' continue' → logprob: -3.5651168823242188
    6. 'pass' → logprob: -3.9401168823242188
    7. 'def' → logprob: -4.065116882324219
    8. ' we' → logprob: -4.065116882324219
    9. ' n' → logprob: -4.315116882324219
    10. ' res' → logprob: -4.690116882324219

Token 178: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4350179135799408
    2. 'the' → logprob: -2.0600178241729736
    3. '   ' → logprob: -2.4350178241729736
    4. 'right' → logprob: -2.6850178241729736
    5. ' right' → logprob: -3.5600178241729736
    6. 'def' → logprob: -3.8100178241729736
    7. ' =' → logprob: -4.810018062591553
    8. '_right' → logprob: -5.435018062591553
    9. 'import' → logprob: -6.060018062591553
    10. ' def' → logprob: -7.435018062591553

Token 179: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5545161962509155
    2. ' right' → logprob: -0.9295161962509155
    3. ' sequence' → logprob: -3.554516315460205
    4. 'sequence' → logprob: -6.554516315460205
    5. ' next' → logprob: -8.554515838623047
    6. ' rights' → logprob: -9.304515838623047
    7. '"' → logprob: -9.679515838623047
    8. ' sequences' → logprob: -9.679515838623047
    9. '	right' → logprob: -10.179515838623047
    10. '`' → logprob: -10.304515838623047

Token 180: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.740614652633667
    2. '_b' → logprob: -0.740614652633667
    3. ')' → logprob: -3.865614652633667
    4. '_sequence' → logprob: -4.240614891052246
    5. '<|end|>' → logprob: -5.865614891052246
    6. '_right' → logprob: -6.240614891052246
    7. 'belt' → logprob: -6.240614891052246
    8. '_sequences' → logprob: -6.740614891052246
    9. '_seq' → logprob: -7.990614891052246
    10. ')_' → logprob: -8.240614891052246

Token 181: 'right' (ID: 2460)
  Prédit: ' belt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' belt' → logprob: -0.588024377822876
    2. 'belt' → logprob: -1.213024377822876
    3. ')' → logprob: -1.963024377822876
    4. ' sequence' → logprob: -5.713024139404297
    5. ' )' → logprob: -7.088024139404297
    6. ' ' → logprob: -7.588024139404297
    7. '_' → logprob: -7.963024139404297
    8. 'bel' → logprob: -8.088024139404297
    9. 'b' → logprob: -8.213024139404297
    10. 'sequence' → logprob: -8.838024139404297

Token 182: ' belt' (ID: 28328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6824893355369568
    2. '_b' → logprob: -0.8074893355369568
    3. '_' → logprob: -3.3074893951416016
    4. 'belt' → logprob: -5.432489395141602
    5. '<|end|>' → logprob: -5.682489395141602
    6. ' sequence' → logprob: -6.807489395141602
    7. ' belt' → logprob: -6.932489395141602
    8. '_sequence' → logprob: -7.432489395141602
    9. ' )' → logprob: -7.432489395141602
    10. ')_' → logprob: -8.432489395141602

Token 183: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20663300156593323
    2. '):' → logprob: -2.4566330909729004
    3. ' =' → logprob: -2.5816330909729004
    4. '_sequence' → logprob: -4.3316330909729
    5. '=' → logprob: -5.4566330909729
    6. '):
' → logprob: -6.5816330909729
    7. '_sequences' → logprob: -6.9566330909729
    8. '_seq' → logprob: -7.7066330909729
    9. '```' → logprob: -7.7066330909729
    10. 'sequence' → logprob: -7.8316330909729

Token 184: ' output' (ID: 4733)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.04936423897743225
    2. '   ' → logprob: -3.4243643283843994
    3. 'def' → logprob: -5.67436408996582
    4. 'red' → logprob: -5.92436408996582
    5. 'stack' → logprob: -6.29936408996582
    6. '#' → logprob: -6.42436408996582
    7. 'n' → logprob: -6.79936408996582
    8. 'result' → logprob: -6.79936408996582
    9. 'dp' → logprob: -7.17436408996582
    10. 'r' → logprob: -7.54936408996582

Token 185: ' sequence' (ID: 16281)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0433752536773682
    2. 'right' → logprob: -1.1683752536773682
    3. '   ' → logprob: -1.5433752536773682
    4. '#' → logprob: -2.918375253677368
    5. ':' → logprob: -3.418375253677368
    6. ' 
' → logprob: -5.168375015258789
    7. '
' → logprob: -5.293375015258789
    8. ' right' → logprob: -5.543375015258789
    9. 'n' → logprob: -5.918375015258789
    10. ' ' → logprob: -6.043375015258789

Token 186: '

' (ID: 279)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.49928560853004456
    2. '   ' → logprob: -0.9992855787277222
    3. 'red' → logprob: -4.874285697937012
    4. 'def' → logprob: -5.249285697937012
    5. ' right' → logprob: -5.374285697937012
    6. '
' → logprob: -6.499285697937012
    7. 'n' → logprob: -6.624285697937012
    8. 'stack' → logprob: -6.874285697937012
    9. '```' → logprob: -7.249285697937012
    10. '#' → logprob: -7.374285697937012

Token 187: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.241946280002594
    2. 'right' → logprob: -1.6169462203979492
    3. 'red' → logprob: -5.491946220397949
    4. ' right' → logprob: -5.741946220397949
    5. '```' → logprob: -5.991946220397949
    6. '
' → logprob: -6.616946220397949
    7. 'stack' → logprob: -7.241946220397949
    8. '#' → logprob: -7.366946220397949
    9. 'def' → logprob: -7.491946220397949
    10. 'n' → logprob: -7.616946220397949

Token 188: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4221360683441162
    2. 'right' → logprob: -1.5471360683441162
    3. '#' (adapté à ' #') → logprob: -3.297136068344116
    4. 'result' → logprob: -4.297136306762695
    5. 'r' → logprob: -4.422136306762695
    6. 'n' → logprob: -4.672136306762695
    7. 'def' → logprob: -4.672136306762695
    8. ' right' → logprob: -4.922136306762695
    9. '       ' → logprob: -5.297136306762695
    10. '    ' → logprob: -5.422136306762695

Token 189: ' Approach' (ID: 86383)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -1.570204734802246
    2. 'r' → logprob: -1.945204734802246
    3. 'from' → logprob: -2.070204734802246
    4. 'right' → logprob: -2.195204734802246
    5. 'dp' → logprob: -2.445204734802246
    6. '#' → logprob: -2.570204734802246
    7. 'n' → logprob: -2.570204734802246
    8. 'def' → logprob: -2.820204734802246
    9. 'red' → logprob: -3.445204734802246
    10. 'push' → logprob: -4.070204734802246

Token 190: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05472835153341293
    2. '   ' → logprob: -3.3047282695770264
    3. ':
' → logprob: -5.1797285079956055
    4. ' =' → logprob: -5.4297285079956055
    5. ' :' → logprob: -5.9297285079956055
    6. '=' → logprob: -6.3047285079956055
    7. ' ' → logprob: -7.6797285079956055
    8. '#' → logprob: -8.679728507995605
    9. '```' → logprob: -8.804728507995605
    10. 'red' → logprob: -8.929728507995605

Token 191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008019437082111835
    2. ' #' → logprob: -5.75801944732666
    3. ' from' → logprob: -6.13301944732666
    4. '#' → logprob: -7.38301944732666
    5. 'from' → logprob: -7.63301944732666
    6. ' n' → logprob: -7.75801944732666
    7. '    ' → logprob: -8.50801944732666
    8. ' stack' → logprob: -8.63301944732666
    9. ' red' → logprob: -9.00801944732666
    10. ' def' → logprob: -9.38301944732666

Token 192: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6280072927474976
    2. '#' (adapté à ' #') → logprob: -1.3780072927474976
    3. ' #' → logprob: -2.878007411956787
    4. 'from' → logprob: -3.128007411956787
    5. ' from' → logprob: -3.628007411956787
    6. ' n' → logprob: -4.003007411956787
    7. ' red' → logprob: -4.253007411956787
    8. 'dp' → logprob: -5.253007411956787
    9. 'n' → logprob: -5.378007411956787
    10. 'r' → logprob: -5.378007411956787

Token 193: ' Since' (ID: 12265)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7727617025375366
    2. 'from' → logprob: -1.3977617025375366
    3. ' from' → logprob: -3.022761821746826
    4. 'dp' → logprob: -3.272761821746826
    5. ' #' → logprob: -3.272761821746826
    6. 'i' → logprob: -3.397761821746826
    7. 'r' → logprob: -4.022761821746826
    8. ' red' → logprob: -4.147761821746826
    9. ' i' → logprob: -4.272761821746826
    10. 'n' → logprob: -4.522761821746826

Token 194: ' the' (ID: 290)
  Prédit: ' red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.0636894628405571
    2. ' the' → logprob: -3.6886894702911377
    3. 'red' → logprob: -4.688689231872559
    4. ' green' → logprob: -4.938689231872559
    5. ' down' → logprob: -5.563689231872559
    6. 'down' → logprob: -5.688689231872559
    7. 'the' → logprob: -5.813689231872559
    8. ' right' → logprob: -5.938689231872559
    9. ' both' → logprob: -6.563689231872559
    10. ' len' → logprob: -6.688689231872559

Token 195: ' mixed' (ID: 16435)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -1.0978511571884155
    2. 'down' → logprob: -1.0978511571884155
    3. ' red' → logprob: -2.347851276397705
    4. 'right' → logprob: -2.722851276397705
    5. 'len' → logprob: -3.722851276397705
    6. 'length' → logprob: -4.097851276397705
    7. '#' → logprob: -4.097851276397705
    8. ' down' → logprob: -4.347851276397705
    9. 'green' → logprob: -4.347851276397705
    10. ' code' → logprob: -4.847851276397705

Token 196: ' sequence' (ID: 16281)
  Prédit: ' red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.6757513284683228
    2. ' sequence' → logprob: -2.675751209259033
    3. ' sequences' → logprob: -2.800751209259033
    4. ' stack' → logprob: -2.800751209259033
    5. 'red' → logprob: -2.925751209259033
    6. 'down' → logprob: -3.550751209259033
    7. ' stacks' → logprob: -3.800751209259033
    8. 'length' → logprob: -4.050751209259033
    9. ' down' → logprob: -4.050751209259033
    10. 'stack' → logprob: -4.175751209259033

Token 197: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1566908359527588
    2. 'is' → logprob: -2.281690835952759
    3. ' consists' → logprob: -4.28169059753418
    4. ' can' → logprob: -4.78169059753418
    5. '   ' → logprob: -5.15669059753418
    6. '#' → logprob: -5.78169059753418
    7. ' was' → logprob: -6.28169059753418
    8. ' involves' → logprob: -6.65669059753418
    9. 'can' → logprob: -7.03169059753418
    10. ' represents' → logprob: -7.03169059753418

Token 198: ' an' (ID: 448)
  Prédit: ' an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.6871551871299744
    2. 'an' → logprob: -0.8121551871299744
    3. ' inter' → logprob: -4.312155246734619
    4. 'a' → logprob: -4.812155246734619
    5. ' a' → logprob: -5.062155246734619
    6. 'inter' → logprob: -5.062155246734619
    7. ' formed' → logprob: -5.312155246734619
    8. ' the' → logprob: -5.812155246734619
    9. 'formed' → logprob: -6.187155246734619
    10. 'the' → logprob: -6.437155246734619

Token 199: ' inter' (ID: 993)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.04932349920272827
    2. ' inter' → logprob: -3.049323558807373
    3. 'in' → logprob: -8.049323081970215
    4. '   ' → logprob: -9.861823081970215
    5. '
' → logprob: -10.049323081970215
    6. 'ordered' → logprob: -10.299323081970215
    7. ''inter' → logprob: -10.486823081970215
    8. 'int' → logprob: -11.111823081970215
    9. ' ' → logprob: -11.236823081970215
    10. 'import' → logprob: -11.361823081970215

Token 200: 'le' (ID: 282)
  Prédit: 'ter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ter' → logprob: -0.009516535326838493
    2. 'le' → logprob: -5.509516716003418
    3. 'er' → logprob: -6.134516716003418
    4. 'def' → logprob: -7.259516716003418
    5. '   ' → logprob: -7.509516716003418
    6. 'tering' → logprob: -7.509516716003418
    7. 't' → logprob: -7.759516716003418
    8. 'ner' → logprob: -7.759516716003418
    9. 'leave' → logprob: -8.134516716003418
    10. 'red' → logprob: -10.009516716003418

Token 201: 'aving' (ID: 3025)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.02671126462519169
    2. 't' → logprob: -4.901711463928223
    3. 'ed' → logprob: -5.526711463928223
    4. 'aving' → logprob: -6.401711463928223
    5. 'while' → logprob: -6.526711463928223
    6. 'ng' → logprob: -6.651711463928223
    7. '   ' → logprob: -6.776711463928223
    8. 'ving' → logprob: -6.776711463928223
    9. 'r' → logprob: -6.901711463928223
    10. 'ar' → logprob: -7.026711463928223

Token 202: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.09354211390018463
    2. '   ' → logprob: -2.7185420989990234
    3. '    ' → logprob: -4.468542098999023
    4. 'of' → logprob: -5.718542098999023
    5. ' red' → logprob: -5.968542098999023
    6. 'red' → logprob: -6.343542098999023
    7. '  ' → logprob: -7.093542098999023
    8. ' ' → logprob: -7.468542098999023
    9. 'import' → logprob: -7.593542098999023
    10. ',' → logprob: -7.593542098999023

Token 203: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.4300895035266876
    2. ' red' → logprob: -1.0550894737243652
    3. 'green' → logprob: -7.430089473724365
    4. ' green' → logprob: -7.805089473724365
    5. 'the' → logprob: -8.430089950561523
    6. ' the' → logprob: -9.430089950561523
    7. ' two' → logprob: -10.805089950561523
    8. 'two' → logprob: -11.305089950561523
    9. 'reds' → logprob: -11.305089950561523
    10. 'down' → logprob: -11.805089950561523

Token 204: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8211998343467712
    2. ' and' → logprob: -0.9461998343467712
    3. ' ,' → logprob: -2.946199893951416
    4. ',' → logprob: -3.446199893951416
    5. 'and' → logprob: -3.821199893951416
    6. ' packages' → logprob: -4.571199893951416
    7. ' sequences' → logprob: -4.696199893951416
    8. 'tokens' → logprob: -4.696199893951416
    9. '    ' → logprob: -4.821199893951416
    10. '[' → logprob: -5.071199893951416

Token 205: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.4740942120552063
    2. ' green' → logprob: -0.9740942120552063
    3. 'red' → logprob: -12.84909439086914
    4. '   ' → logprob: -12.97409439086914
    5. ' ' → logprob: -13.22409439086914
    6. ' ' → logprob: -13.22409439086914
    7. 'blue' → logprob: -13.84909439086914
    8. '.green' → logprob: -13.97409439086914
    9. ' blue' → logprob: -14.09909439086914
    10. 'the' → logprob: -14.34909439086914

Token 206: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06261911988258362
    2. ' ' → logprob: -4.312619209289551
    3. '[' → logprob: -4.562619209289551
    4. ')' → logprob: -5.062619209289551
    5. ' =' → logprob: -5.562619209289551
    6. '       ' → logprob: -5.812619209289551
    7. '  ' → logprob: -5.937619209289551
    8. ',' → logprob: -5.937619209289551
    9. ':' → logprob: -6.062619209289551
    10. ' ,' → logprob: -6.062619209289551

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020969684701412916
    2. '#' → logprob: -6.752097129821777
    3. ' #' → logprob: -8.127097129821777
    4. '       ' → logprob: -8.502097129821777
    5. '    ' → logprob: -8.627097129821777
    6. ' i' → logprob: -9.627097129821777
    7. 'from' → logprob: -10.877097129821777
    8. ' for' → logprob: -11.127097129821777
    9. 'i' → logprob: -11.252097129821777
    10. ')' → logprob: -11.377097129821777

Token 208: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08205427974462509
    2. '#' (adapté à ' #') → logprob: -2.957054376602173
    3. ' #' → logprob: -4.332054138183594
    4. ' right' → logprob: -5.832054138183594
    5. 'from' → logprob: -6.207054138183594
    6. ' from' → logprob: -6.457054138183594
    7. 'right' → logprob: -6.457054138183594
    8. ' i' → logprob: -6.832054138183594
    9. ' pos' → logprob: -7.707054138183594
    10. 'pos' → logprob: -7.707054138183594

Token 209: ' and' (ID: 326)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.8982440829277039
    2. ' right' → logprob: -1.6482441425323486
    3. '#' → logprob: -2.3982441425323486
    4. 'r' → logprob: -3.1482441425323486
    5. 'dp' → logprob: -3.2732441425323486
    6. ' dp' → logprob: -3.5232441425323486
    7. 'i' → logprob: -3.6482441425323486
    8. 'from' → logprob: -3.6482441425323486
    9. ' #' → logprob: -3.8982441425323486
    10. 'n' → logprob: -4.0232439041137695

Token 210: ' down' (ID: 1917)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.266419529914856
    2. '#' → logprob: -1.516419529914856
    3. ' red' → logprob: -1.516419529914856
    4. '   ' → logprob: -2.8914194107055664
    5. 'the' → logprob: -2.8914194107055664
    6. 'red' → logprob: -3.6414194107055664
    7. 'len' → logprob: -3.8914194107055664
    8. ' #' → logprob: -3.8914194107055664
    9. 'right' → logprob: -4.141419410705566
    10. ' right' → logprob: -4.266419410705566

Token 211: ' contains' (ID: 8895)
  Prédit: '_tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tokens' → logprob: -0.6421012282371521
    2. '_' → logprob: -1.7671012878417969
    3. '_index' → logprob: -3.517101287841797
    4. ')' → logprob: -3.642101287841797
    5. '_sequences' → logprob: -3.892101287841797
    6. '_sequence' → logprob: -4.142101287841797
    7. ' =' → logprob: -4.267101287841797
    8. '[' → logprob: -4.517101287841797
    9. '_chars' → logprob: -4.517101287841797
    10. '=' → logprob: -4.642101287841797

Token 212: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5305759310722351
    2. ' the' → logprob: -1.6555759906768799
    3. 'only' → logprob: -2.53057599067688
    4. ' only' → logprob: -3.03057599067688
    5. 'all' → logprob: -3.03057599067688
    6. ' all' → logprob: -3.53057599067688
    7. 'a' → logprob: -5.405575752258301
    8. 'red' → logprob: -5.780575752258301
    9. ' red' → logprob: -6.405575752258301
    10. 'len' → logprob: -6.405575752258301

Token 213: ' packages' (ID: 21429)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -1.466046929359436
    2. 'inter' → logprob: -1.841046929359436
    3. 'remaining' → logprob: -2.4660468101501465
    4. 'characters' → logprob: -2.5910468101501465
    5. 'positions' → logprob: -2.7160468101501465
    6. 'red' → logprob: -2.9660468101501465
    7. 'down' → logprob: -3.0910468101501465
    8. 'packages' → logprob: -3.4660468101501465
    9. 'order' → logprob: -3.8410468101501465
    10. 'rest' → logprob: -3.9660468101501465

Token 214: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -1.246140718460083
    2. 'that' → logprob: -1.246140718460083
    3. 'from' → logprob: -1.621140718460083
    4. '   ' → logprob: -1.996140718460083
    5. 'not' → logprob: -3.996140718460083
    6. ')' → logprob: -4.246140480041504
    7. '#' → logprob: -4.996140480041504
    8. ' not' → logprob: -5.371140480041504
    9. ' from' → logprob: -5.496140480041504
    10. ' =' → logprob: -5.871140480041504

Token 215: ' "' (ID: 392)
  Prédit: 'came'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'came' → logprob: -0.9416910409927368
    2. 'went' → logprob: -1.0666910409927368
    3. 'were' → logprob: -1.9416910409927368
    4. 're' → logprob: -3.5666909217834473
    5. 'are' → logprob: -3.8166909217834473
    6. 'have' → logprob: -4.441690921783447
    7. 'did' → logprob: -4.691690921783447
    8. 'go' → logprob: -4.941690921783447
    9. 'ended' → logprob: -5.066690921783447
    10. 'arr' → logprob: -5.441690921783447

Token 216: 'fell' (ID: 171902)
  Prédit: 'were'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'were' → logprob: -0.9330812692642212
    2. 'went' → logprob: -1.4330812692642212
    3. 'did' → logprob: -2.1830811500549316
    4. 'came' → logprob: -2.5580811500549316
    5. 'are' → logprob: -3.4330811500549316
    6. 'go' → logprob: -4.058081150054932
    7. 'weren' → logprob: -4.058081150054932
    8. 'got' → logprob: -4.308081150054932
    9. ' were' → logprob: -4.558081150054932
    10. 'arr' → logprob: -4.933081150054932

Token 217: '"' (ID: 1)
  Prédit: 'through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'through' → logprob: -0.517987072467804
    2. ' through' → logprob: -1.1429870128631592
    3. 'right' → logprob: -3.642987012863159
    4. ' ' → logprob: -4.892987251281738
    5. ' onto' → logprob: -4.892987251281738
    6. ' off' → logprob: -5.017987251281738
    7. 'off' → logprob: -5.267987251281738
    8. '   ' → logprob: -5.392987251281738
    9. 'down' → logprob: -5.517987251281738
    10. '_right' → logprob: -5.642987251281738

Token 218: ' out' (ID: 842)
  Prédit: ' through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' through' → logprob: -0.3197973370552063
    2. 'through' → logprob: -1.5697972774505615
    3. ' ' → logprob: -3.3197972774505615
    4. 'from' → logprob: -5.194797515869141
    5. 'right' → logprob: -5.694797515869141
    6. ' from' → logprob: -5.819797515869141
    7. ' out' → logprob: -5.819797515869141
    8. ' off' → logprob: -5.944797515869141
    9. ' right' → logprob: -6.069797515869141
    10. ' onto' → logprob: -6.194797515869141

Token 219: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059244491159915924
    2. ',' → logprob: -3.434244394302368
    3. 'from' → logprob: -4.809244632720947
    4. ' from' → logprob: -5.559244632720947
    5. ' ,' → logprob: -5.684244632720947
    6. '       ' → logprob: -5.934244632720947
    7. ' of' → logprob: -6.309244632720947
    8. '.' → logprob: -6.809244632720947
    9. ' while' → logprob: -7.309244632720947
    10. ' into' → logprob: -7.434244632720947

Token 220: ' vertical' (ID: 17679)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.26162487268447876
    2. ' the' → logprob: -1.761624813079834
    3. ' red' → logprob: -3.386624813079834
    4. 'red' → logprob: -3.886624813079834
    5. 'down' → logprob: -6.761624813079834
    6. 'right' → logprob: -7.136624813079834
    7. 'bottom' → logprob: -7.261624813079834
    8. 'vertical' → logprob: -8.011625289916992
    9. ' vertical' → logprob: -8.511625289916992
    10. 'push' → logprob: -9.011625289916992

Token 221: ' belt' (ID: 28328)
  Prédit: 'belt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'belt' → logprob: -0.13379906117916107
    2. ' belt' → logprob: -2.8837990760803223
    3. 'b' → logprob: -3.8837990760803223
    4. '   ' → logprob: -4.133799076080322
    5. ' and' → logprob: -4.758799076080322
    6. 'push' → logprob: -5.383799076080322
    7. ')' → logprob: -5.508799076080322
    8. ' belts' → logprob: -5.758799076080322
    9. 'bel' → logprob: -6.133799076080322
    10. 'stack' → logprob: -6.383799076080322

Token 222: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17985795438289642
    2. ')' → logprob: -2.3048579692840576
    3. ',' → logprob: -3.3048579692840576
    4. '<|end|>' → logprob: -4.0548577308654785
    5. ']' → logprob: -6.5548577308654785
    6. '#' → logprob: -6.5548577308654785
    7. '[' → logprob: -6.9298577308654785
    8. ':' → logprob: -7.1798577308654785
    9. '.' → logprob: -7.3048577308654785
    10. '<|end|>' → logprob: -7.5548577308654785

Token 223: 'red' (ID: 1291)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0526263527572155
    2. ' )' → logprob: -3.677626371383667
    3. ' the' → logprob: -5.302626132965088
    4. '),' → logprob: -5.552626132965088
    5. 'the' → logprob: -5.677626132965088
    6. '   ' → logprob: -6.052626132965088
    7. ' at' → logprob: -6.427626132965088
    8. ' red' → logprob: -6.552626132965088
    9. 'red' → logprob: -6.802626132965088
    10. ' after' → logprob: -7.052626132965088

Token 224: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13565091788768768
    2. ' )' → logprob: -2.385650873184204
    3. '   ' → logprob: -3.510650873184204
    4. ' and' → logprob: -7.010651111602783
    5. ' ")' → logprob: -7.135651111602783
    6. ',' → logprob: -7.635651111602783
    7. ' sequences' → logprob: -8.010650634765625
    8. ' ,' → logprob: -8.260650634765625
    9. ' ' → logprob: -8.260650634765625
    10. ' sequence' → logprob: -8.385650634765625

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013887154869735241
    2. '    ' → logprob: -5.63888692855835
    3. ')' → logprob: -6.01388692855835
    4. '       ' → logprob: -6.76388692855835
    5. ' while' → logprob: -6.76388692855835
    6. ' #' → logprob: -6.88888692855835
    7. '#' → logprob: -7.01388692855835
    8. ' from' → logprob: -7.38888692855835
    9. 'from' → logprob: -7.38888692855835
    10. 'def' → logprob: -8.138887405395508

Token 226: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18272002041339874
    2. '#' (adapté à ' #') → logprob: -2.3077199459075928
    3. ' #' → logprob: -3.8077199459075928
    4. '       ' → logprob: -4.557720184326172
    5. '    ' → logprob: -4.557720184326172
    6. ')' → logprob: -4.682720184326172
    7. ' while' → logprob: -5.682720184326172
    8. 'while' → logprob: -6.057720184326172
    9. ' ' → logprob: -6.307720184326172
    10. ' and' → logprob: -7.182720184326172

Token 227: ' we' (ID: 581)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2933990955352783
    2. ' right' → logprob: -1.6683990955352783
    3. ' #' → logprob: -1.7933990955352783
    4. '#' → logprob: -1.9183990955352783
    5. 'right' → logprob: -2.4183990955352783
    6. ' continue' → logprob: -3.9183990955352783
    7. ' dp' → logprob: -4.418398857116699
    8. ' pass' → logprob: -4.668398857116699
    9. '    ' → logprob: -4.793398857116699
    10. ' ' → logprob: -4.793398857116699

Token 228: ' can' (ID: 665)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' → logprob: -1.035043478012085
    2. ' can' → logprob: -1.285043478012085
    3. 'can' → logprob: -1.660043478012085
    4. ' need' → logprob: -2.035043478012085
    5. '#' → logprob: -4.660043716430664
    6. 'know' → logprob: -4.785043716430664
    7. 'continue' → logprob: -5.160043716430664
    8. 'have' → logprob: -5.285043716430664
    9. ' should' → logprob: -5.785043716430664
    10. 'should' → logprob: -5.785043716430664

Token 229: ' simulate' (ID: 66687)
  Prédit: 'simulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'simulate' → logprob: -0.5998108386993408
    2. 'use' → logprob: -1.2248108386993408
    3. 'try' → logprob: -2.724810838699341
    4. ' use' → logprob: -3.349810838699341
    5. 'initialize' → logprob: -4.474810600280762
    6. ' try' → logprob: -4.724810600280762
    7. ' simulate' → logprob: -4.849810600280762
    8. 'maint' → logprob: -5.474810600280762
    9. 'continue' → logprob: -5.849810600280762
    10. 'track' → logprob: -5.849810600280762

Token 230: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.08278343081474304
    2. 'the' → logprob: -2.8327834606170654
    3. ' two' → logprob: -5.457783222198486
    4. ' a' → logprob: -5.582783222198486
    5. '   ' → logprob: -5.582783222198486
    6. 'push' → logprob: -6.582783222198486
    7. ' red' → logprob: -6.582783222198486
    8. 'right' → logprob: -6.832783222198486
    9. ' right' → logprob: -6.957783222198486
    10. ' push' → logprob: -6.957783222198486

Token 231: ' inter' (ID: 993)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.15103885531425476
    2. 'dp' → logprob: -3.151038885116577
    3. 'right' → logprob: -3.276038885116577
    4. 'p' → logprob: -4.026038646697998
    5. 'def' → logprob: -4.526038646697998
    6. 'red' → logprob: -5.151038646697998
    7. 'from' → logprob: -5.401038646697998
    8. 'import' → logprob: -5.401038646697998
    9. 'stack' → logprob: -6.151038646697998
    10. 'rest' → logprob: -6.401038646697998

Token 232: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.31416234374046326
    2. 'leave' → logprob: -1.3141623735427856
    3. '   ' → logprob: -8.439162254333496
    4. 'face' → logprob: -8.564162254333496
    5. '       ' → logprob: -8.689162254333496
    6. 'action' → logprob: -9.439162254333496
    7. 'we' → logprob: -9.814162254333496
    8. 'l' → logprob: -10.189162254333496
    9. 'lace' → logprob: -10.564162254333496
    10. 'val' → logprob: -11.064162254333496

Token 233: 'aving' (ID: 3025)
  Prédit: 'aving'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aving' → logprob: -0.009858673438429832
    2. 'ave' → logprob: -5.38485860824585
    3. 'e' → logprob: -6.00985860824585
    4. '   ' → logprob: -6.88485860824585
    5. 'av' → logprob: -7.63485860824585
    6. 'aved' → logprob: -8.259859085083008
    7. 'avings' → logprob: -8.509859085083008
    8. 'ving' → logprob: -8.634859085083008
    9. '       ' → logprob: -8.634859085083008
    10. '#' → logprob: -9.259859085083008

Token 234: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045722972601652145
    2. ':' → logprob: -3.9207229614257812
    3. '#' → logprob: -5.045722961425781
    4. 'right' → logprob: -5.170722961425781
    5. ' ' → logprob: -6.295722961425781
    6. ' #' → logprob: -6.795722961425781
    7. ' :' → logprob: -6.795722961425781
    8. ' right' → logprob: -7.045722961425781
    9. '    ' → logprob: -7.295722961425781
    10. 'red' → logprob: -7.670722961425781

Token 235: ' find' (ID: 1646)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.8283477425575256
    2. ' reconstruct' → logprob: -2.078347682952881
    3. ' right' → logprob: -2.453347682952881
    4. 'push' → logprob: -2.828347682952881
    5. 're' → logprob: -3.328347682952881
    6. ' find' → logprob: -3.328347682952881
    7. 'from' → logprob: -3.578347682952881
    8. 'res' → logprob: -3.703347682952881
    9. 'print' → logprob: -3.703347682952881
    10. 'find' → logprob: -4.078347682952881

Token 236: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.09692870825529099
    2. 'the' → logprob: -2.596928596496582
    3. ' all' → logprob: -4.221928596496582
    4. 'all' → logprob: -6.596928596496582
    5. 'right' → logprob: -7.471928596496582
    6. ' right' → logprob: -7.596928596496582
    7. 'def' → logprob: -8.596928596496582
    8. '   ' → logprob: -9.096928596496582
    9. ' a' → logprob: -9.721928596496582
    10. ' ' → logprob: -9.846928596496582

Token 237: ' packages' (ID: 21429)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.012227418832480907
    2. ' right' → logprob: -4.887227535247803
    3. 'next' → logprob: -6.262227535247803
    4. 'rest' → logprob: -7.137227535247803
    5. 'push' → logprob: -7.762227535247803
    6. ' next' → logprob: -8.137227058410645
    7. 'remaining' → logprob: -8.387227058410645
    8. 'positions' → logprob: -8.887227058410645
    9. 'sequence' → logprob: -9.262227058410645
    10. 'result' → logprob: -9.637227058410645

Token 238: ' that' (ID: 484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029227565973997116
    2. 'from' → logprob: -4.0292277336120605
    3. 'right' → logprob: -5.1542277336120605
    4. ' from' → logprob: -7.0292277336120605
    5. ' right' → logprob: -7.5292277336120605
    6. 'import' → logprob: -7.5292277336120605
    7. ')' → logprob: -7.6542277336120605
    8. 's' → logprob: -7.7792277336120605
    9. 'result' → logprob: -7.9042277336120605
    10. 'def' → logprob: -8.029227256774902

Token 239: ' fall' (ID: 5617)
  Prédit: ' went'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' went' → logprob: -0.908663809299469
    2. 'went' → logprob: -2.033663749694824
    3. ' were' → logprob: -2.283663749694824
    4. ' ended' → logprob: -2.533663749694824
    5. 'ended' → logprob: -3.033663749694824
    6. 'were' → logprob: -3.283663749694824
    7. 'p' → logprob: -3.408663749694824
    8. 'got' → logprob: -3.783663749694824
    9. '```' → logprob: -3.908663749694824
    10. 'go' → logprob: -3.908663749694824

Token 240: ' out' (ID: 842)
  Prédit: '_right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.41775795817375183
    2. 'right' → logprob: -1.5427579879760742
    3. '_out' → logprob: -3.167757987976074
    4. '_' → logprob: -3.667757987976074
    5. 'out' → logprob: -4.542757987976074
    6. ' ' → logprob: -4.792757987976074
    7. '   ' → logprob: -5.042757987976074
    8. ' out' → logprob: -5.292757987976074
    9. 'from' → logprob: -5.292757987976074
    10. ')' → logprob: -5.542757987976074

Token 241: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03716525435447693
    2. ':' → logprob: -4.03716516494751
    3. '[' → logprob: -5.66216516494751
    4. '#' → logprob: -5.66216516494751
    5. ' ' → logprob: -6.16216516494751
    6. 'r' → logprob: -6.41216516494751
    7. '    ' → logprob: -6.41216516494751
    8. 'n' → logprob: -6.91216516494751
    9. 'right' → logprob: -7.41216516494751
    10. ' :' → logprob: -7.53716516494751

Token 242: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.07210740447044373
    2. ' the' → logprob: -2.9471073150634766
    3. 'right' → logprob: -4.072107315063477
    4. 'to' → logprob: -10.947107315063477
    5. ' right' → logprob: -11.072107315063477
    6. ' ' → logprob: -14.572107315063477
    7. 'top' → logprob: -14.822107315063477
    8. 'a' → logprob: -15.572107315063477
    9. 'next' → logprob: -15.572107315063477
    10. '```' → logprob: -15.572107315063477

Token 243: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0031848405487835407
    2. ' right' → logprob: -5.753184795379639
    3. 'side' → logprob: -12.253185272216797
    4. '	right' → logprob: -13.753185272216797
    5. ' side' → logprob: -14.378185272216797
    6. '```' → logprob: -15.003185272216797
    7. '_right' → logprob: -16.003185272216797
    8. ' ' → logprob: -16.753185272216797
    9. '.right' → logprob: -16.878185272216797
    10. ' sides' → logprob: -17.003185272216797

Token 244: ' belt' (ID: 28328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09182403236627579
    2. 'right' → logprob: -2.7168240547180176
    3. 'red' → logprob: -4.466824054718018
    4. 'i' → logprob: -5.841824054718018
    5. ' right' → logprob: -6.591824054718018
    6. '#' → logprob: -6.716824054718018
    7. 'def' → logprob: -6.966824054718018
    8. ' red' → logprob: -7.091824054718018
    9. 'pos' → logprob: -7.341824054718018
    10. ' i' → logprob: -7.966824054718018

Token 245: ' (' (ID: 350)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5991384983062744
    2. '   ' → logprob: -1.3491384983062744
    3. 'red' → logprob: -2.9741384983062744
    4. '#' → logprob: -3.0991384983062744
    5. ' right' → logprob: -3.7241384983062744
    6. 'i' → logprob: -3.9741384983062744
    7. 'n' → logprob: -4.724138259887695
    8. 'from' → logprob: -4.849138259887695
    9. ' red' → logprob: -5.099138259887695
    10. 'pos' → logprob: -5.224138259887695

Token 246: 'green' (ID: 22743)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6546807289123535
    2. 'right' → logprob: -1.4046807289123535
    3. 'the' → logprob: -2.2796807289123535
    4. ' the' → logprob: -3.0296807289123535
    5. ' right' → logprob: -3.1546807289123535
    6. '   ' → logprob: -4.2796807289123535
    7. 'green' → logprob: -4.4046807289123535
    8. ').' → logprob: -5.6546807289123535
    9. ' )' → logprob: -5.6546807289123535
    10. ' green' → logprob: -6.0296807289123535

Token 247: ''s' (ID: 885)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.028877854347229
    2. ')' → logprob: -1.278877854347229
    3. '):' → logprob: -1.278877854347229
    4. ':' → logprob: -3.4038777351379395
    5. '_right' → logprob: -3.6538777351379395
    6. '_' → logprob: -4.4038777351379395
    7. '):
' → logprob: -6.6538777351379395
    8. 'right' → logprob: -6.9038777351379395
    9. 'def' → logprob: -7.0288777351379395
    10. ' ' → logprob: -7.1538777351379395

Token 248: ' packages' (ID: 21429)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07330244779586792
    2. 'sequence' → logprob: -3.5733025074005127
    3. 'next' → logprob: -4.448302268981934
    4. 'right' → logprob: -5.073302268981934
    5. ' sequence' → logprob: -5.448302268981934
    6. 'side' → logprob: -5.448302268981934
    7. 'output' → logprob: -5.448302268981934
    8. 'belt' → logprob: -6.323302268981934
    9. '```' → logprob: -6.573302268981934
    10. ' next' → logprob: -6.573302268981934

Token 249: ' order' (ID: 2569)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.048154592514038
    2. '):' → logprob: -1.423154592514038
    3. ':' → logprob: -1.548154592514038
    4. '   ' → logprob: -1.923154592514038
    5. '[' → logprob: -4.423154830932617
    6. ' =' → logprob: -4.798154830932617
    7. ']' → logprob: -5.048154830932617
    8. '=' → logprob: -5.048154830932617
    9. 'right' → logprob: -5.548154830932617
    10. '):
' → logprob: -6.548154830932617

Token 250: ').

' (ID: 3991)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7535294890403748
    2. ':' → logprob: -1.3785295486450195
    3. '):' → logprob: -1.3785295486450195
    4. ')' → logprob: -4.0035295486450195
    5. ' =' → logprob: -5.6285295486450195
    6. '=' → logprob: -7.5035295486450195
    7. '_right' → logprob: -7.5035295486450195
    8. '):
' → logprob: -7.6285295486450195
    9. 'right' → logprob: -8.25352954864502
    10. 's' → logprob: -8.62852954864502

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04893115162849426
    2. 'right' → logprob: -3.298931121826172
    3. ' right' → logprob: -5.173931121826172
    4. 'red' → logprob: -6.548931121826172
    5. ' red' → logprob: -6.923931121826172
    6. '
' → logprob: -6.923931121826172
    7. '```' → logprob: -7.548931121826172
    8. '    
' → logprob: -8.298931121826172
    9. '#' → logprob: -8.923931121826172
    10. 'def' → logprob: -9.048931121826172

Token 252: ' red' (ID: 3592)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.171422079205513
    2. 'right' → logprob: -1.9214221239089966
    3. 'red' (adapté à ' red') → logprob: -5.671422004699707
    4. ' right' → logprob: -6.046422004699707
    5. '#' → logprob: -7.171422004699707
    6. ' red' → logprob: -7.296422004699707
    7. 'from' → logprob: -7.546422004699707
    8. 'n' → logprob: -7.671422004699707
    9. 'push' → logprob: -7.921422004699707
    10. 'pos' → logprob: -8.171422004699707

Token 253: '_index' (ID: 7748)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.3061835765838623
    2. '_index' → logprob: -1.6811835765838623
    3. '_i' → logprob: -3.4311835765838623
    4. '_ptr' → logprob: -3.6811835765838623
    5. '_pos' → logprob: -4.181183815002441
    6. '_len' → logprob: -5.931183815002441
    7. '_' → logprob: -7.056183815002441
    8. '_pointer' → logprob: -7.681183815002441
    9. '_stack' → logprob: -8.431183815002441
    10. ' =' → logprob: -8.806183815002441

Token 254: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197217106819153
    2. '=' → logprob: -2.811972141265869
    3. ',' → logprob: -12.436972618103027
    4. ' +=' → logprob: -15.186972618103027
    5. ' ' → logprob: -16.31197166442871
    6. '0' → logprob: -16.31197166442871
    7. ' ,' → logprob: -16.81197166442871
    8. ')' → logprob: -17.31197166442871
    9. '   ' → logprob: -18.06197166442871
    10. '```' → logprob: -18.31197166442871

Token 255: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012527662329375744
    2. ' ' → logprob: -4.3875274658203125
    3. 'green' → logprob: -11.387527465820312
    4. '   ' → logprob: -12.512527465820312
    5. ' green' → logprob: -13.512527465820312
    6. 'red' → logprob: -14.137527465820312
    7. '  ' → logprob: -14.762527465820312
    8. '1' → logprob: -15.887527465820312
    9. ' red' → logprob: -16.262527465820312
    10. '	' → logprob: -17.450027465820312

Token 256: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001613459608051926
    2. ' ' → logprob: -8.750161170959473
    3. 'green' → logprob: -13.125161170959473
    4. 'red' → logprob: -15.125161170959473
    5. '   ' → logprob: -15.250161170959473
    6. ' green' → logprob: -16.56266212463379
    7. '1' → logprob: -16.87516212463379
    8. '=' → logprob: -17.56266212463379
    9. '  ' → logprob: -17.62516212463379
    10. '-' → logprob: -17.75016212463379

Token 257: '
' (ID: 198)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.7691214680671692
    2. '   ' → logprob: -1.1441214084625244
    3. ' green' → logprob: -1.8941214084625244
    4. '
' → logprob: -3.1441214084625244
    5. ',' → logprob: -4.8941216468811035
    6. 'right' → logprob: -5.1441216468811035
    7. '```' → logprob: -5.7691216468811035
    8. '<|end|>' → logprob: -5.8941216468811035
    9. '    
' → logprob: -6.7691216468811035
    10. ' while' → logprob: -7.1441216468811035

Token 258: '   ' (ID: 271)
  Prédit: ' green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' green' → logprob: -0.17190603911876678
    2. '   ' → logprob: -2.421905994415283
    3. 'green' → logprob: -2.671905994415283
    4. ',' → logprob: -11.046906471252441
    5. '
' → logprob: -11.421906471252441
    6. '.green' → logprob: -11.671906471252441
    7. '<|end|>' → logprob: -12.546906471252441
    8. 'right' → logprob: -12.671906471252441
    9. '    
' → logprob: -12.671906471252441
    10. '_green' → logprob: -12.671906471252441

Token 259: ' green' (ID: 8851)
  Prédit: ' green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' green' → logprob: -0.3879033029079437
    2. 'green' (adapté à ' green') → logprob: -1.1379033327102661
    3. '   ' → logprob: -7.012903213500977
    4. ' right' → logprob: -9.762903213500977
    5. 'right' → logprob: -9.887903213500977
    6. ' red' → logprob: -12.012903213500977
    7. 'red' → logprob: -12.262903213500977
    8. ' ' → logprob: -13.512903213500977
    9. '.green' → logprob: -13.512903213500977
    10. '_green' → logprob: -13.637903213500977

Token 260: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00480271503329277
    2. ' =' → logprob: -5.754802703857422
    3. '_' → logprob: -6.879802703857422
    4. '=' → logprob: -7.754802703857422
    5. 'index' → logprob: -9.629802703857422
    6. '   ' → logprob: -10.004802703857422
    7. ' _' → logprob: -10.879802703857422
    8. 'Index' → logprob: -11.754802703857422
    9. '_indices' → logprob: -12.129802703857422
    10. '_idx' → logprob: -12.129802703857422

Token 261: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014141082763672
    2. '=' → logprob: -1.7014141082763672
    3. ' ' → logprob: -14.326414108276367
    4. '0' → logprob: -16.201414108276367
    5. '   ' → logprob: -16.826414108276367
    6. '<|end|>' → logprob: -16.951414108276367
    7. ',' → logprob: -17.326414108276367
    8. ')' → logprob: -18.826414108276367
    9. 's' → logprob: -18.951414108276367
    10. '```' → logprob: -19.201414108276367

Token 262: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014215784904081374
    2. ' ' → logprob: -8.875142097473145
    3. '-' → logprob: -13.625142097473145
    4. '   ' → logprob: -14.250142097473145
    5. ' -' → logprob: -15.750142097473145
    6. '1' → logprob: -15.875142097473145
    7. '  ' → logprob: -17.37514305114746
    8. '=' → logprob: -18.25014305114746
    9. '[' → logprob: -18.93764305114746
    10. '```' → logprob: -19.00014305114746

Token 263: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.451116051815916e-05
    2. '-' → logprob: -11.125024795532227
    3. ' ' → logprob: -11.625024795532227
    4. ' -' → logprob: -14.750024795532227
    5. '1' → logprob: -15.750024795532227
    6. '   ' → logprob: -16.000024795532227
    7. '=' → logprob: -17.250024795532227
    8. '  ' → logprob: -17.812524795532227
    9. 'len' → logprob: -18.250024795532227
    10. '```' → logprob: -18.250024795532227

Token 264: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3755289316177368
    2. 'right' → logprob: -1.6255289316177368
    3. '
' → logprob: -2.3755288124084473
    4. ' right' → logprob: -4.750528812408447
    5. '    
' → logprob: -5.000528812408447
    6. '```' → logprob: -6.500528812408447
    7. 'result' → logprob: -6.750528812408447
    8. '	right' → logprob: -6.875528812408447
    9. 'while' → logprob: -7.125528812408447
    10. ',' → logprob: -7.625528812408447

Token 265: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09480121731758118
    2. '
' → logprob: -2.969801187515259
    3. 'right' → logprob: -3.344801187515259
    4. ' right' → logprob: -6.719801425933838
    5. '    
' → logprob: -6.844801425933838
    6. 'result' → logprob: -7.719801425933838
    7. '```' → logprob: -8.09480094909668
    8. 'while' → logprob: -8.34480094909668
    9. 'output' → logprob: -9.59480094909668
    10. 'next' → logprob: -9.59480094909668

Token 266: ' down' (ID: 1917)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.141684889793396
    2. '   ' → logprob: -2.6416850090026855
    3. ' right' → logprob: -3.2666850090026855
    4. 'down' (adapté à ' down') → logprob: -4.2666850090026855
    5. '
' → logprob: -5.3916850090026855
    6. 'result' → logprob: -6.7666850090026855
    7. 'red' → logprob: -7.2666850090026855
    8. ' down' → logprob: -7.5166850090026855
    9. '	right' → logprob: -8.141684532165527
    10. 'push' → logprob: -8.266684532165527

Token 267: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.21331310272216797
    2. '_output' → logprob: -2.088313102722168
    3. '_sequence' → logprob: -3.338313102722168
    4. '_seq' → logprob: -4.963313102722168
    5. '_' → logprob: -5.088313102722168
    6. '_result' → logprob: -5.213313102722168
    7. '_right' → logprob: -5.463313102722168
    8. '_out' → logprob: -5.838313102722168
    9. '_list' → logprob: -5.963313102722168
    10. '_packages' → logprob: -6.713313102722168

Token 268: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020732134580612
    2. ' =' → logprob: -2.3502073287963867
    3. '0' → logprob: -14.475207328796387
    4. ' ' → logprob: -15.975207328796387
    5. '=
' → logprob: -17.35020637512207
    6. '<|end|>' → logprob: -17.85020637512207
    7. '   ' → logprob: -18.35020637512207
    8. ' =
' → logprob: -18.72520637512207
    9. '＝' → logprob: -19.35020637512207
    10. '```' → logprob: -19.35020637512207

Token 269: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014025058771949261
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -15.625140190124512
    4. '<|end|>' → logprob: -16.875141143798828
    5. '۰' → logprob: -17.062641143798828
    6. '=' → logprob: -17.250141143798828
    7. '```' → logprob: -17.625141143798828
    8. '1' → logprob: -18.125141143798828
    9. '  ' → logprob: -18.437641143798828
    10. '000' → logprob: -18.875141143798828

Token 270: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -16.125001907348633
    4. '```' → logprob: -16.125001907348633
    5. '=' → logprob: -17.062501907348633
    6. '۰' → logprob: -18.187501907348633
    7. '000' → logprob: -18.437501907348633
    8. '1' → logprob: -18.750001907348633
    9. '{' → logprob: -18.812501907348633
    10. 'len' → logprob: -19.500001907348633

Token 271: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0781206414103508
    2. 'right' → logprob: -3.203120708465576
    3. '
' → logprob: -3.453120708465576
    4. '    
' → logprob: -6.578120708465576
    5. '```' → logprob: -7.203120708465576
    6. ' right' → logprob: -8.203120231628418
    7. 'result' → logprob: -8.828120231628418
    8. 'while' → logprob: -9.328120231628418
    9. 'output' → logprob: -10.078120231628418
    10. '	right' → logprob: -10.328120231628418

Token 272: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17311157286167145
    2. 'right' → logprob: -1.9231115579605103
    3. '
' → logprob: -5.173111438751221
    4. '```' → logprob: -6.048111438751221
    5. 'while' → logprob: -6.423111438751221
    6. '    
' → logprob: -6.673111438751221
    7. 'result' → logprob: -7.298111438751221
    8. ' right' → logprob: -7.423111438751221
    9. '	right' → logprob: -9.048111915588379
    10. ' while' → logprob: -9.673111915588379

Token 273: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.055832985788583755
    2. '   ' → logprob: -3.055833101272583
    3. ' right' → logprob: -5.430832862854004
    4. 'result' → logprob: -6.930832862854004
    5. 'push' → logprob: -7.305832862854004
    6. '
' → logprob: -7.680832862854004
    7. 'while' → logprob: -8.055832862854004
    8. '```' → logprob: -9.680832862854004
    9. 'down' → logprob: -9.805832862854004
    10. '    
' → logprob: -10.055832862854004

Token 274: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6723886728286743
    2. '=' → logprob: -1.7973886728286743
    3. ' =' → logprob: -1.7973886728286743
    4. '_sequence' → logprob: -2.1723885536193848
    5. '_output' → logprob: -3.4223885536193848
    6. '_seq' → logprob: -5.297388553619385
    7. '_sequences' → logprob: -6.172388553619385
    8. '_tokens' → logprob: -6.797388553619385
    9. '_result' → logprob: -7.547388553619385
    10. '_space' → logprob: -7.797388553619385

Token 275: ' ''

' (ID: 107005)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.4209081828594208
    2. '''' → logprob: -1.1709082126617432
    3. '[]' → logprob: -3.420908212661743
    4. '"' → logprob: -7.295907974243164
    5. ' ""' → logprob: -10.170907974243164
    6. ' ''' → logprob: -10.795907974243164
    7. ''' → logprob: -10.920907974243164
    8. '['' → logprob: -11.545907974243164
    9. '["' → logprob: -12.170907974243164
    10. '[]
' → logprob: -12.545907974243164

Token 276: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15143103897571564
    2. 'while' → logprob: -2.026431083679199
    3. ' while' → logprob: -5.276431083679199
    4. '
' → logprob: -6.401431083679199
    5. '    
' → logprob: -7.276431083679199
    6. '```' → logprob: -7.276431083679199
    7. 'push' → logprob: -7.901431083679199
    8. '	while' → logprob: -10.0264310836792
    9. ',' → logprob: -10.7764310836792
    10. '``' → logprob: -10.7764310836792

Token 277: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03301582112908363
    2. 'push' → logprob: -3.658015727996826
    3. 'n' → logprob: -5.658015727996826
    4. 'for' → logprob: -7.033015727996826
    5. 'total' → logprob: -7.283015727996826
    6. 'red' → logprob: -7.283015727996826
    7. '   ' → logprob: -8.283016204833984
    8. 'right' → logprob: -8.533016204833984
    9. 'length' → logprob: -9.533016204833984
    10. 'len' → logprob: -9.783016204833984

Token 278: ' The' (ID: 623)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.012999623082578182
    2. 'for' → logprob: -5.137999534606934
    3. 'push' → logprob: -5.137999534606934
    4. 'n' → logprob: -7.262999534606934
    5. 'from' → logprob: -9.012999534606934
    6. 'red' → logprob: -9.262999534606934
    7. 'total' → logprob: -10.012999534606934
    8. '#' → logprob: -10.137999534606934
    9. 'While' → logprob: -10.387999534606934
    10. 'right' → logprob: -10.512999534606934

Token 279: ' total' (ID: 3609)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1550961434841156
    2. 'push' → logprob: -2.4050960540771484
    3. 'for' → logprob: -3.4050960540771484
    4. 'total' → logprob: -5.030096054077148
    5. 'from' → logprob: -5.530096054077148
    6. 'n' → logprob: -5.655096054077148
    7. 'down' → logprob: -6.405096054077148
    8. '#' → logprob: -7.030096054077148
    9. 'right' → logprob: -7.155096054077148
    10. 'length' → logprob: -7.405096054077148

Token 280: ' output' (ID: 4733)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.47864025831222534
    2. 'length' → logprob: -1.9786403179168701
    3. '_push' → logprob: -1.9786403179168701
    4. '_length' → logprob: -3.10364031791687
    5. '_p' → logprob: -3.22864031791687
    6. '_len' → logprob: -5.478640079498291
    7. 'steps' → logprob: -6.103640079498291
    8. 'p' → logprob: -6.228640079498291
    9. '_ops' → logprob: -6.478640079498291
    10. '_operations' → logprob: -6.478640079498291

Token 281: ' length' (ID: 5517)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.5072346329689026
    2. 'length' → logprob: -1.0072345733642578
    3. '_len' → logprob: -4.132234573364258
    4. '=' → logprob: -4.882234573364258
    5. ' =' → logprob: -5.007234573364258
    6. 'len' → logprob: -6.257234573364258
    7. ' length' → logprob: -9.257234573364258
    8. 'leng' → logprob: -10.257234573364258
    9. '_tokens' → logprob: -10.382234573364258
    10. 'push' → logprob: -10.632234573364258

Token 282: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687923550605774
    2. '=' → logprob: -1.1368792057037354
    3. ' is' → logprob: -12.011878967285156
    4. ' ' → logprob: -14.261878967285156
    5. '   ' → logprob: -14.886878967285156
    6. '=len' → logprob: -15.261878967285156
    7. ',' → logprob: -15.386878967285156
    8. 'total' → logprob: -15.886878967285156
    9. 's' → logprob: -16.136878967285156
    10. ')' → logprob: -16.261878967285156

Token 283: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.25493088364601135
    2. ' len' → logprob: -1.504930853843689
    3. '   ' → logprob: -5.8799309730529785
    4. '(len' → logprob: -8.75493049621582
    5. '=len' → logprob: -10.87993049621582
    6. '	len' → logprob: -11.62993049621582
    7. '[len' → logprob: -12.00493049621582
    8. '    ' → logprob: -12.50493049621582
    9. '```' → logprob: -12.50493049621582
    10. ' ' → logprob: -14.37993049621582

Token 284: '(red' (ID: 83440)
  Prédit: '(red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(red' → logprob: -0.04869455844163895
    2. 'red' → logprob: -3.423694610595703
    3. 'down' → logprob: -4.798694610595703
    4. '(d' → logprob: -5.298694610595703
    5. '(g' → logprob: -6.923694610595703
    6. '(' → logprob: -8.048694610595703
    7. ' red' → logprob: -9.298694610595703
    8. 'green' → logprob: -9.423694610595703
    9. '(right' → logprob: -9.673694610595703
    10. 'd' → logprob: -9.923694610595703

Token 285: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001261067809537053
    2. ')+' → logprob: -7.126261234283447
    3. '+' → logprob: -8.251260757446289
    4. '   ' → logprob: -9.376260757446289
    5. ' +' → logprob: -9.626260757446289
    6. ' )' → logprob: -10.126260757446289
    7. ' ' → logprob: -13.751260757446289
    8. '')' → logprob: -13.751260757446289
    9. '  ' → logprob: -14.876260757446289
    10. '    ' → logprob: -15.251260757446289

Token 286: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0006507210782729089
    2. ' len' → logprob: -7.375650882720947
    3. '1' → logprob: -11.125650405883789
    4. '   ' → logprob: -12.250650405883789
    5. '(len' → logprob: -12.875650405883789
    6. 'green' → logprob: -14.500650405883789
    7. '	len' → logprob: -14.500650405883789
    8. '
' → logprob: -14.625650405883789
    9. ' ' → logprob: -15.375650405883789
    10. '=len' → logprob: -16.00065040588379

Token 287: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -4.842555426876061e-06
    2. '(red' → logprob: -13.125004768371582
    3. 'green' → logprob: -13.125004768371582
    4. '(' → logprob: -14.250004768371582
    5. ' green' → logprob: -16.8750057220459
    6. ' (' → logprob: -17.0000057220459
    7. '(right' → logprob: -17.1250057220459
    8. '```' → logprob: -17.8750057220459
    9. '(G' → logprob: -18.1250057220459
    10. 'g' → logprob: -18.7500057220459

Token 288: 'reen' (ID: 15653)
  Prédit: 'reen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reen' → logprob: -7.672236824873835e-05
    2. 'green' → logprob: -9.500076293945312
    3. 'ree' → logprob: -14.000076293945312
    4. ' green' → logprob: -15.500076293945312
    5. ')' → logprob: -15.625076293945312
    6. 'een' → logprob: -15.875076293945312
    7. 'REEN' → logprob: -16.125076293945312
    8. ' reen' → logprob: -16.125076293945312
    9. 're' → logprob: -16.750076293945312
    10. '
' → logprob: -17.125076293945312

Token 289: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00855807401239872
    2. '+' → logprob: -5.13355827331543
    3. ')+' → logprob: -7.00855827331543
    4. '   ' → logprob: -7.13355827331543
    5. ' +' → logprob: -7.25855827331543
    6. ' )' → logprob: -9.38355827331543
    7. '):' → logprob: -9.88355827331543
    8. ')
' → logprob: -10.63355827331543
    9. '}' → logprob: -11.75855827331543
    10. '```' → logprob: -11.75855827331543

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11812765151262283
    2. 'while' → logprob: -3.3681275844573975
    3. 'for' → logprob: -4.243127822875977
    4. 'push' → logprob: -4.368127822875977
    5. 'total' → logprob: -4.493127822875977
    6. ' while' → logprob: -4.743127822875977
    7. ' for' → logprob: -4.868127822875977
    8. 'n' → logprob: -5.618127822875977
    9. '
' → logprob: -5.618127822875977
    10. ' total' → logprob: -6.118127822875977

Token 291: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.77717524766922
    2. 'while' → logprob: -1.4021751880645752
    3. 'total' → logprob: -2.027175188064575
    4. ' while' → logprob: -2.527175188064575
    5. ' total' → logprob: -3.027175188064575
    6. 'for' → logprob: -4.902175426483154
    7. 'length' → logprob: -5.027175426483154
    8. ' for' → logprob: -5.527175426483154
    9. ' length' → logprob: -5.652175426483154
    10. 'output' → logprob: -6.027175426483154

Token 292: ' down' (ID: 1917)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.689399003982544
    2. 'total' → logprob: -1.189399003982544
    3. '   ' → logprob: -2.689399003982544
    4. 'for' → logprob: -3.064399003982544
    5. ' total' → logprob: -3.064399003982544
    6. ' while' → logprob: -4.064398765563965
    7. 'n' → logprob: -5.189398765563965
    8. ' for' → logprob: -5.689398765563965
    9. 'push' → logprob: -6.189398765563965
    10. 'output' → logprob: -6.689398765563965

Token 293: ' contains' (ID: 8895)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.7241142988204956
    2. '_len' → logprob: -0.7241142988204956
    3. '_total' → logprob: -4.349114418029785
    4. 'len' → logprob: -5.724114418029785
    5. 'length' → logprob: -5.849114418029785
    6. '_index' → logprob: -6.099114418029785
    7. '_count' → logprob: -6.974114418029785
    8. '   ' → logprob: -6.974114418029785
    9. 'for' → logprob: -7.099114418029785
    10. '=' → logprob: -7.099114418029785

Token 294: ' len' (ID: 4631)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.737562894821167
    2. 'len' → logprob: -1.237562894821167
    3. 'down' → logprob: -1.987562894821167
    4. ' red' → logprob: -2.987562894821167
    5. 'the' → logprob: -3.862562894821167
    6. 'all' → logprob: -5.112563133239746
    7. ' len' → logprob: -5.237563133239746
    8. ' the' → logprob: -5.612563133239746
    9. ' down' → logprob: -5.862563133239746
    10. ' all' → logprob: -6.237563133239746

Token 295: '(red' (ID: 83440)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.5763828158378601
    2. '(red' → logprob: -0.8263828158378601
    3. 'down' → logprob: -8.826382637023926
    4. '(' → logprob: -9.201382637023926
    5. '(g' → logprob: -9.826382637023926
    6. 'red' → logprob: -10.076382637023926
    7. '(right' → logprob: -10.201382637023926
    8. '(up' → logprob: -10.826382637023926
    9. 'd' → logprob: -11.951382637023926
    10. ' down' → logprob: -12.576382637023926

Token 296: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009807445108890533
    2. ')+' → logprob: -4.759807586669922
    3. ')
' → logprob: -8.134807586669922
    4. ' )' → logprob: -9.009807586669922
    5. '+' → logprob: -9.384807586669922
    6. '),' → logprob: -9.509807586669922
    7. '))' → logprob: -9.509807586669922
    8. ')-' → logprob: -9.759807586669922
    9. ')]' → logprob: -10.009807586669922
    10. '')' → logprob: -10.259807586669922

Token 297: ' packages' (ID: 21429)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03165334835648537
    2. 'while' → logprob: -3.65665340423584
    3. ' while' → logprob: -6.15665340423584
    4. '
' → logprob: -6.65665340423584
    5. 'total' → logprob: -7.03165340423584
    6. '    
' → logprob: -7.78165340423584
    7. '```' → logprob: -9.15665340423584
    8. ' total' → logprob: -9.40665340423584
    9. 'for' → logprob: -9.40665340423584
    10. ')' → logprob: -10.03165340423584

Token 298: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011793139390647411
    2. 'while' → logprob: -4.76179313659668
    3. ' while' → logprob: -6.01179313659668
    4. '
' → logprob: -7.76179313659668
    5. '    
' → logprob: -8.63679313659668
    6. 'total' → logprob: -9.76179313659668
    7. '	while' → logprob: -11.38679313659668
    8. ' total' → logprob: -11.51179313659668
    9. '```' → logprob: -11.76179313659668
    10. 'for' → logprob: -11.88679313659668

Token 299: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04959658905863762
    2. 'while' → logprob: -3.6745965480804443
    3. 'total' → logprob: -4.174596786499023
    4. 'for' → logprob: -6.174596786499023
    5. ' while' → logprob: -6.674596786499023
    6. 'push' → logprob: -6.799596786499023
    7. 'length' → logprob: -7.174596786499023
    8. ' total' → logprob: -7.299596786499023
    9. ' for' → logprob: -8.049596786499023
    10. 'n' → logprob: -8.049596786499023

Token 300: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.07147588580846786
    2. 'push' → logprob: -3.3214759826660156
    3. 'right' → logprob: -4.446475982666016
    4. 'total' → logprob: -4.571475982666016
    5. 'for' → logprob: -4.696475982666016
    6. 'green' → logprob: -7.321475982666016
    7. 'mixed' → logprob: -8.571475982666016
    8. '   ' → logprob: -9.071475982666016
    9. 'mix' → logprob: -9.071475982666016
    10. 'down' → logprob: -9.196475982666016

Token 301: ' The' (ID: 623)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1549115628004074
    2. 'push' → logprob: -2.904911518096924
    3. 'total' → logprob: -3.154911518096924
    4. 'for' → logprob: -3.404911518096924
    5. 'right' → logprob: -4.779911518096924
    6. 'n' → logprob: -6.154911518096924
    7. '#' → logprob: -7.154911518096924
    8. 'steps' → logprob: -8.529911994934082
    9. 'output' → logprob: -9.029911994934082
    10. 'down' → logprob: -9.154911994934082

Token 302: ' mixed' (ID: 16435)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03257616609334946
    2. 'for' → logprob: -4.032576084136963
    3. 'total' → logprob: -4.657576084136963
    4. 'push' → logprob: -6.157576084136963
    5. ' while' → logprob: -6.657576084136963
    6. 'right' → logprob: -7.657576084136963
    7. 'n' → logprob: -8.032576560974121
    8. 'length' → logprob: -9.032576560974121
    9. '#' → logprob: -9.157576560974121
    10. ' total' → logprob: -9.532576560974121

Token 303: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -1.0019514560699463
    2. 'length' → logprob: -1.7519514560699463
    3. '_length' → logprob: -1.7519514560699463
    4. '_sequence' → logprob: -2.0019514560699463
    5. ' sequence' → logprob: -2.6269514560699463
    6. ' =' → logprob: -3.0019514560699463
    7. 'while' → logprob: -5.251951217651367
    8. '_len' → logprob: -5.876951217651367
    9. '=' → logprob: -5.876951217651367
    10. '_seq' → logprob: -6.001951217651367

Token 304: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4462447762489319
    2. '_length' → logprob: -1.321244716644287
    3. '=' → logprob: -3.196244716644287
    4. 'length' → logprob: -3.446244716644287
    5. '_len' → logprob: -4.446244716644287
    6. ' length' → logprob: -4.946244716644287
    7. 'len' → logprob: -7.696244716644287
    8. ' is' → logprob: -8.196245193481445
    9. 'total' → logprob: -8.946245193481445
    10. 'for' → logprob: -9.071245193481445

Token 305: ' len' (ID: 4631)
  Prédit: ' green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' green' → logprob: -1.0380901098251343
    2. ' red' → logprob: -1.2880901098251343
    3. ' down' → logprob: -1.5380901098251343
    4. ' []' → logprob: -2.913090229034424
    5. 'down' → logprob: -3.038090229034424
    6. '[]' → logprob: -4.163090229034424
    7. 'green' → logprob: -4.538090229034424
    8. 'red' → logprob: -5.163090229034424
    9. ' len' → logprob: -5.413090229034424
    10. ' ' → logprob: -6.038090229034424

Token 306: '(red' (ID: 83440)
  Prédit: '(red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(red' → logprob: -0.00011307948443572968
    2. '(g' → logprob: -9.500113487243652
    3. 'red' → logprob: -10.875113487243652
    4. '(' → logprob: -11.750113487243652
    5. '   ' → logprob: -12.375113487243652
    6. '(right' → logprob: -13.125113487243652
    7. 'down' → logprob: -13.125113487243652
    8. ' (' → logprob: -14.125113487243652
    9. '(d' → logprob: -14.250113487243652
    10. ' red' → logprob: -14.500113487243652

Token 307: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7135063409805298
    2. ')+' → logprob: -0.7135063409805298
    3. '+' → logprob: -3.9635062217712402
    4. ' +' → logprob: -7.08850622177124
    5. '   ' → logprob: -8.588506698608398
    6. ' )' → logprob: -9.463506698608398
    7. ']+' → logprob: -11.213506698608398
    8. ')+(' → logprob: -11.588506698608398
    9. '")+' → logprob: -12.213506698608398
    10. '	' → logprob: -12.463506698608398

Token 308: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.8087270038668066e-05
    2. ' len' → logprob: -10.750027656555176
    3. '1' → logprob: -12.250027656555176
    4. '(len' → logprob: -14.250027656555176
    5. '   ' → logprob: -14.500027656555176
    6. 'green' → logprob: -15.125027656555176
    7. ' ' → logprob: -16.125028610229492
    8. '
' → logprob: -16.125028610229492
    9. '	len' → logprob: -16.375028610229492
    10. '[len' → logprob: -16.750028610229492

Token 309: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.002508951351046562
    2. 'green' → logprob: -6.002509117126465
    3. '(red' → logprob: -10.627509117126465
    4. 'down' → logprob: -13.002509117126465
    5. ' green' → logprob: -13.127509117126465
    6. '(' → logprob: -13.877509117126465
    7. 'g' → logprob: -14.002509117126465
    8. 'red' → logprob: -14.127509117126465
    9. '```' → logprob: -14.752509117126465
    10. '_green' → logprob: -15.127509117126465

Token 310: 'reen' (ID: 15653)
  Prédit: 'reen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reen' → logprob: -0.12863896787166595
    2. 'green' → logprob: -2.128638982772827
    3. '(g' → logprob: -7.878638744354248
    4. ' green' → logprob: -8.628639221191406
    5. 'ree' → logprob: -8.753639221191406
    6. ')' → logprob: -8.878639221191406
    7. 'een' → logprob: -9.128639221191406
    8. '   ' → logprob: -9.378639221191406
    9. 'red' → logprob: -9.628639221191406
    10. '```' → logprob: -9.628639221191406

Token 311: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015350672416388988
    2. ')
' → logprob: -4.890350818634033
    3. '+' → logprob: -6.640350818634033
    4. '   ' → logprob: -6.890350818634033
    5. ')+' → logprob: -7.015350818634033
    6. '#' → logprob: -7.265350818634033
    7. '):' → logprob: -7.265350818634033
    8. ' )' → logprob: -7.515350818634033
    9. '-' → logprob: -7.640350818634033
    10. ')-' → logprob: -7.890350818634033

Token 312: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08857229351997375
    2. ' mixed' → logprob: -4.0885725021362305
    3. 'while' → logprob: -4.0885725021362305
    4. ' for' → logprob: -4.2135725021362305
    5. 'mixed' → logprob: -4.2135725021362305
    6. 'for' → logprob: -4.8385725021362305
    7. ' while' → logprob: -4.8385725021362305
    8. '
' → logprob: -6.2135725021362305
    9. '```' → logprob: -6.7135725021362305
    10. 'total' → logprob: -7.3385725021362305

Token 313: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2868081331253052
    2. 'mixed' → logprob: -1.6618081331253052
    3. '   ' → logprob: -4.036808013916016
    4. 'for' → logprob: -4.286808013916016
    5. 'total' → logprob: -4.411808013916016
    6. 'push' → logprob: -5.161808013916016
    7. ' mixed' → logprob: -5.661808013916016
    8. ' while' → logprob: -5.786808013916016
    9. 'right' → logprob: -7.161808013916016
    10. 'mix' → logprob: -7.411808013916016

Token 314: ' we' (ID: 581)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7186699509620667
    2. 'mixed' → logprob: -0.9686699509620667
    3. 'total' → logprob: -2.843669891357422
    4. 'for' → logprob: -2.843669891357422
    5. 'push' → logprob: -4.593669891357422
    6. 'mix' → logprob: -6.093669891357422
    7. 'right' → logprob: -6.718669891357422
    8. 'n' → logprob: -7.093669891357422
    9. 'length' → logprob: -7.468669891357422
    10. '#' → logprob: -7.468669891357422

Token 315: ' simulate' (ID: 66687)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4609004259109497
    2. ' while' → logprob: -1.2109004259109497
    3. 'for' → logprob: -3.71090030670166
    4. '   ' → logprob: -4.33590030670166
    5. ' for' → logprob: -4.71090030670166
    6. ' need' → logprob: -4.96090030670166
    7. ' can' → logprob: -5.21090030670166
    8. ' =' → logprob: -5.46090030670166
    9. ' continue' → logprob: -6.21090030670166
    10. 'need' → logprob: -6.71090030670166

Token 316: ' selecting' (ID: 31615)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5172188878059387
    2. ' while' → logprob: -1.892218828201294
    3. ' mixed' → logprob: -2.017218828201294
    4. 'while' → logprob: -3.142218828201294
    5. ' for' → logprob: -3.767218828201294
    6. 'mixed' → logprob: -3.767218828201294
    7. ' total' → logprob: -4.642219066619873
    8. ' push' → logprob: -5.267219066619873
    9. 'push' → logprob: -5.642219066619873
    10. 'for' → logprob: -5.767219066619873

Token 317: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6857557892799377
    2. 'from' → logprob: -2.060755729675293
    3. 'tokens' → logprob: -2.810755729675293
    4. 'right' → logprob: -3.060755729675293
    5. ' from' → logprob: -3.185755729675293
    6. ' next' → logprob: -3.435755729675293
    7. 'down' → logprob: -3.685755729675293
    8. 'next' → logprob: -3.685755729675293
    9. ' tokens' → logprob: -3.685755729675293
    10. ' the' → logprob: -3.810755729675293

Token 318: ' red' (ID: 3592)
  Prédit: ' red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.3862777352333069
    2. 'red' → logprob: -1.386277675628662
    3. 'green' → logprob: -3.386277675628662
    4. ' green' → logprob: -3.636277675628662
    5. 'right' → logprob: -5.386277675628662
    6. 'down' → logprob: -6.011277675628662
    7. ' right' → logprob: -6.636277675628662
    8. ''' → logprob: -7.636277675628662
    9. ' down' → logprob: -7.886277675628662
    10. ' the' → logprob: -8.13627815246582

Token 319: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.25422316789627075
    2. 'or' → logprob: -2.754223108291626
    3. ' and' → logprob: -2.879223108291626
    4. ' if' → logprob: -3.754223108291626
    5. ',' → logprob: -3.879223108291626
    6. '   ' → logprob: -4.254223346710205
    7. 'and' → logprob: -4.254223346710205
    8. 'if' → logprob: -5.004223346710205
    9. ' ,' → logprob: -5.129223346710205
    10. '_or' → logprob: -5.129223346710205

Token 320: ' green' (ID: 8851)
  Prédit: ' green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' green' → logprob: -0.2254168838262558
    2. 'green' → logprob: -1.600416898727417
    3. '_green' → logprob: -13.850417137145996
    4. ' ' → logprob: -14.475417137145996
    5. '.green' → logprob: -14.475417137145996
    6. ' ' → logprob: -14.725417137145996
    7. '   ' → logprob: -14.850417137145996
    8. 'red' → logprob: -15.475417137145996
    9. ' red' → logprob: -15.475417137145996
    10. 'from' → logprob: -15.725417137145996

Token 321: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32567986845970154
    2. 'while' → logprob: -1.700679898262024
    3. ' while' → logprob: -2.7006797790527344
    4. ' for' → logprob: -4.075679779052734
    5. 'for' → logprob: -4.825679779052734
    6. ':' → logprob: -7.700679779052734
    7. 'mixed' → logprob: -7.700679779052734
    8. ',' → logprob: -7.825679779052734
    9. '
' → logprob: -8.200679779052734
    10. '```' → logprob: -8.575679779052734

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2741955816745758
    2. ' while' → logprob: -1.6491955518722534
    3. 'while' → logprob: -3.274195671081543
    4. ' for' → logprob: -5.024195671081543
    5. 'for' → logprob: -7.274195671081543
    6. '    
' → logprob: -7.774195671081543
    7. ' 
' → logprob: -8.024195671081543
    8. '       ' → logprob: -8.274195671081543
    9. '    ' → logprob: -8.524195671081543
    10. ' ' → logprob: -8.774195671081543

Token 323: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.9799460172653198
    2. '   ' → logprob: -1.1049460172653198
    3. ' while' → logprob: -1.4799460172653198
    4. ' for' → logprob: -3.7299461364746094
    5. ' mixed' → logprob: -4.354946136474609
    6. 'for' → logprob: -4.479946136474609
    7. ' total' → logprob: -5.104946136474609
    8. 'mixed' → logprob: -5.229946136474609
    9. 'total' → logprob: -5.729946136474609
    10. '```' → logprob: -7.229946136474609

Token 324: ' if' (ID: 538)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6682551503181458
    2. ' while' → logprob: -2.043255090713501
    3. ' mixed' → logprob: -2.293255090713501
    4. 'for' → logprob: -2.293255090713501
    5. 'mixed' → logprob: -2.543255090713501
    6. ' for' → logprob: -2.918255090713501
    7. ' total' → logprob: -4.79325532913208
    8. 'total' → logprob: -5.54325532913208
    9. 'push' → logprob: -5.66825532913208
    10. '   ' → logprob: -5.91825532913208

Token 325: ' down' (ID: 1917)
  Prédit: ' down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' down' → logprob: -0.04493646323680878
    2. 'down' → logprob: -3.294936418533325
    3. ' red' → logprob: -5.044936656951904
    4. 'red' → logprob: -8.794936180114746
    5. ' green' → logprob: -9.169936180114746
    6. ' ' → logprob: -9.669936180114746
    7. '   ' → logprob: -9.794936180114746
    8. '  ' → logprob: -11.607436180114746
    9. ' ' → logprob: -11.857436180114746
    10. ' right' → logprob: -11.982436180114746

Token 326: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0907924473285675
    2. '_index' → logprob: -2.465792417526245
    3. 'down' → logprob: -7.340792655944824
    4. '   ' → logprob: -7.465792655944824
    5. '_down' → logprob: -8.090792655944824
    6. '```' → logprob: -9.715792655944824
    7. ' down' → logprob: -10.465792655944824
    8. '_indices' → logprob: -10.590792655944824
    9. '[d' → logprob: -10.715792655944824
    10. ' [' → logprob: -11.340792655944824

Token 327: 'down' (ID: 4653)
  Prédit: 'down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.00012833021173719317
    2. ' down' → logprob: -9.000128746032715
    3. 'red' → logprob: -13.000128746032715
    4. '   ' → logprob: -14.125128746032715
    5. '
' → logprob: -14.500128746032715
    6. ']' → logprob: -14.625128746032715
    7. 'd' → logprob: -15.500128746032715
    8. ' ' → logprob: -15.750128746032715
    9. 'right' → logprob: -16.1251277923584
    10. '
' → logprob: -16.1251277923584

Token 328: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.021580755710601807
    2. 'down' → logprob: -4.146580696105957
    3. '_down' → logprob: -5.271580696105957
    4. 'index' → logprob: -8.271580696105957
    5. ' down' → logprob: -9.771580696105957
    6. ']' → logprob: -10.521580696105957
    7. '
' → logprob: -11.271580696105957
    8. '```' → logprob: -11.521580696105957
    9. '   ' → logprob: -11.646580696105957
    10. '[' → logprob: -11.646580696105957

Token 329: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013447606936097145
    2. ']==' → logprob: -4.3884477615356445
    3. '==' → logprob: -7.5134477615356445
    4. ' ]' → logprob: -8.263447761535645
    5. ' ==' → logprob: -9.513447761535645
    6. '[' → logprob: -10.513447761535645
    7. ']!=' → logprob: -11.638447761535645
    8. '=' → logprob: -12.263447761535645
    9. ']=='' → logprob: -12.388447761535645
    10. 'in' → logprob: -13.013447761535645

Token 330: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03899675980210304
    2. '==' → logprob: -3.288996696472168
    3. ' in' → logprob: -7.788996696472168
    4. '[' → logprob: -8.413996696472168
    5. ' ' → logprob: -8.663996696472168
    6. '=' → logprob: -9.663996696472168
    7. ']' → logprob: -11.163996696472168
    8. ' =' → logprob: -11.163996696472168
    9. 'in' → logprob: -11.288996696472168
    10. ' !=' → logprob: -11.413996696472168

Token 331: ' red' (ID: 3592)
  Prédit: ' red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.20144939422607422
    2. 'red' → logprob: -1.7014493942260742
    3. ' ' → logprob: -10.951449394226074
    4. '   ' → logprob: -11.201449394226074
    5. ''' → logprob: -13.201449394226074
    6. '(red' → logprob: -13.951449394226074
    7. 'down' → logprob: -14.701449394226074
    8. 'r' → logprob: -14.826449394226074
    9. ' '' → logprob: -14.951449394226074
    10. ' down' → logprob: -14.951449394226074

Token 332: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0683535037969705e-05
    2. '[right' → logprob: -12.50001049041748
    3. '   ' → logprob: -12.87501049041748
    4. ' [' → logprob: -13.25001049041748
    5. '][' → logprob: -14.12501049041748
    6. 'red' → logprob: -15.12501049041748
    7. '```' → logprob: -15.12501049041748
    8. ' ' → logprob: -15.25001049041748
    9. '[
' → logprob: -15.37501049041748
    10. ']' → logprob: -15.37501049041748

Token 333: 'red' (ID: 1291)
  Prédit: 'red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.00023166877508629113
    2. ' red' → logprob: -8.375231742858887
    3. '   ' → logprob: -14.625231742858887
    4. ' ' → logprob: -15.125231742858887
    5. ']' → logprob: -15.625231742858887
    6. '(red' → logprob: -16.12523078918457
    7. 'redd' → logprob: -18.12523078918457
    8. '
' → logprob: -18.50023078918457
    9. '  ' → logprob: -18.75023078918457
    10. '.red' → logprob: -19.12523078918457

Token 334: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -9.491498531133402e-06
    2. 'index' → logprob: -12.375009536743164
    3. 'red' → logprob: -13.250009536743164
    4. '   ' → logprob: -13.375009536743164
    5. '_red' → logprob: -14.375009536743164
    6. '[' → logprob: -15.000009536743164
    7. '_ind' → logprob: -15.625009536743164
    8. ' ' → logprob: -15.875009536743164
    9. '```' → logprob: -16.250009536743164
    10. ' _' → logprob: -16.500009536743164

Token 335: '],' (ID: 2155)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.5657079219818115
    2. ']:
' → logprob: -1.4407079219818115
    3. ']' → logprob: -1.8157079219818115
    4. ':' → logprob: -4.065708160400391
    5. ' and' → logprob: -4.690708160400391
    6. ':
' → logprob: -5.690708160400391
    7. ' ]' → logprob: -6.690708160400391
    8. '   ' → logprob: -7.065708160400391
    9. 'and' → logprob: -7.815708160400391
    10. ']:

' → logprob: -9.94070816040039

Token 336: ' it' (ID: 480)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7182310223579407
    2. '       ' → logprob: -0.9682310223579407
    3. '    ' → logprob: -2.843230962753296
    4. ' right' → logprob: -3.093230962753296
    5. ' red' → logprob: -5.218231201171875
    6. 'right' → logprob: -5.343231201171875
    7. ' if' → logprob: -5.343231201171875
    8. ' ' → logprob: -5.843231201171875
    9. ' 
' → logprob: -6.843231201171875
    10. '     ' → logprob: -6.843231201171875

Token 337: ' means' (ID: 4748)
  Prédit: ' means'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' means' → logprob: -0.5953404307365417
    2. ':' → logprob: -1.3453404903411865
    3. 'means' → logprob: -3.0953404903411865
    4. '   ' → logprob: -3.0953404903411865
    5. ' ' → logprob: -3.4703404903411865
    6. ' red' → logprob: -4.095340251922607
    7. 'red' → logprob: -4.595340251922607
    8. ' =' → logprob: -4.970340251922607
    9. '=' → logprob: -5.220340251922607
    10. ' is' → logprob: -5.470340251922607

Token 338: ' a' (ID: 261)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7410637736320496
    2. ' red' → logprob: -0.8660637736320496
    3. ' we' → logprob: -2.4910638332366943
    4. '   ' → logprob: -4.991063594818115
    5. ' that' → logprob: -5.116063594818115
    6. 'the' → logprob: -5.741063594818115
    7. 'we' → logprob: -6.741063594818115
    8. 'red' → logprob: -6.741063594818115
    9. ' down' → logprob: -6.991063594818115
    10. 'down' → logprob: -8.491064071655273

Token 339: ' push' (ID: 9349)
  Prédit: ' push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' push' → logprob: -1.1281061172485352
    2. ' red' → logprob: -1.2531061172485352
    3. 'push' → logprob: -1.3781061172485352
    4. 'red' → logprob: -2.378106117248535
    5. ' ' → logprob: -4.503106117248535
    6. 'down' → logprob: -4.753106117248535
    7. ' down' → logprob: -5.628106117248535
    8. ' '' → logprob: -5.628106117248535
    9. 'right' → logprob: -6.128106117248535
    10. 'space' → logprob: -6.378106117248535

Token 340: '_down' (ID: 40267)
  Prédit: '_down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_down' → logprob: -0.21217985451221466
    2. '_right' → logprob: -1.9621798992156982
    3. 'down' → logprob: -3.3371798992156982
    4. 'right' → logprob: -4.462179660797119
    5. '   ' → logprob: -5.837179660797119
    6. '_red' → logprob: -7.837179660797119
    7. '_' → logprob: -10.087180137634277
    8. ' ' → logprob: -10.212180137634277
    9. ' down' → logprob: -10.837180137634277
    10. 'red' → logprob: -11.087180137634277

Token 341: ' happened' (ID: 12570)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11579728126525879
    2. '   ' → logprob: -2.490797281265259
    3. ':
' → logprob: -4.36579704284668
    4. ',' → logprob: -5.11579704284668
    5. '):' → logprob: -6.74079704284668
    6. '
' → logprob: -6.86579704284668
    7. '():' → logprob: -7.11579704284668
    8. '    
' → logprob: -7.24079704284668
    9. '[' → logprob: -7.36579704284668
    10. '_token' → logprob: -7.61579704284668

Token 342: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5253875851631165
    2. '   ' → logprob: -1.0253875255584717
    3. ',' → logprob: -3.6503875255584717
    4. ' and' → logprob: -5.275387763977051
    5. ':
' → logprob: -5.525387763977051
    6. '.' → logprob: -6.025387763977051
    7. '
' → logprob: -6.275387763977051
    8. '       ' → logprob: -6.775387763977051
    9. 'if' → logprob: -6.900387763977051
    10. 'and' → logprob: -6.900387763977051

Token 343: 'vertical' (ID: 29475)
  Prédit: ' red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.3447308838367462
    2. 'red' → logprob: -1.7197308540344238
    3. ')' → logprob: -3.344730854034424
    4. '   ' → logprob: -3.469730854034424
    5. '       ' → logprob: -3.469730854034424
    6. '           ' → logprob: -6.219730854034424
    7. 'down' → logprob: -6.219730854034424
    8. '),' → logprob: -6.469730854034424
    9. ' down' → logprob: -6.469730854034424
    10. 'right' → logprob: -6.594730854034424

Token 344: ' belt' (ID: 28328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.142234206199646
    2. '_b' → logprob: -1.767234206199646
    3. ' belt' → logprob: -2.2672343254089355
    4. '_' → logprob: -2.2672343254089355
    5. '   ' → logprob: -2.3922343254089355
    6. ')_' → logprob: -2.8922343254089355
    7. ' )' → logprob: -3.2672343254089355
    8. '_index' → logprob: -3.7672343254089355
    9. ')
' → logprob: -3.7672343254089355
    10. '):
' → logprob: -4.0172343254089355

Token 345: ' package' (ID: 9726)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021833308041095734
    2. '   ' → logprob: -4.771833419799805
    3. '):' → logprob: -4.896833419799805
    4. '),' → logprob: -5.896833419799805
    5. ')
' → logprob: -6.396833419799805
    6. '):
' → logprob: -7.396833419799805
    7. ' )' → logprob: -7.896833419799805
    8. ').' → logprob: -9.396833419799805
    9. ' and' → logprob: -10.021833419799805
    10. ':' → logprob: -11.146833419799805

Token 346: ' emitted' (ID: 98472)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.059770580381155014
    2. '   ' → logprob: -3.6847705841064453
    3. '),' → logprob: -3.9347705841064453
    4. '):' → logprob: -5.059770584106445
    5. ' )' → logprob: -5.434770584106445
    6. ')
' → logprob: -7.059770584106445
    7. '):
' → logprob: -7.309770584106445
    8. ' ),' → logprob: -8.309770584106445
    9. ').' → logprob: -8.434770584106445
    10. ',' → logprob: -8.684770584106445

Token 347: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08026185631752014
    2. ')
' → logprob: -3.4552619457244873
    3. '   ' → logprob: -3.7052619457244873
    4. '),' → logprob: -4.580261707305908
    5. '):' → logprob: -5.705261707305908
    6. ' )' → logprob: -6.080261707305908
    7. '):
' → logprob: -6.080261707305908
    8. ').' → logprob: -7.580261707305908
    9. ' at' → logprob: -7.705261707305908
    10. ' from' → logprob: -8.205262184143066

Token 348: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03953077271580696
    2. ':' → logprob: -3.7895307540893555
    3. ',' → logprob: -4.7895307540893555
    4. '.' → logprob: -6.9145307540893555
    5. ')' → logprob: -7.0395307540893555
    6. '    
' → logprob: -7.0395307540893555
    7. '       ' → logprob: -7.1645307540893555
    8. ' and' → logprob: -7.6645307540893555
    9. 'else' → logprob: -7.7895307540893555
    10. ':
' → logprob: -7.9145307540893555

Token 349: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039575234055519104
    2. ':' → logprob: -3.6645753383636475
    3. 'else' → logprob: -5.664575099945068
    4. ' else' → logprob: -6.664575099945068
    5. '       ' → logprob: -6.664575099945068
    6. '.' → logprob: -6.664575099945068
    7. ',' → logprob: -6.789575099945068
    8. ':
' → logprob: -7.039575099945068
    9. ' or' → logprob: -7.164575099945068
    10. ' and' → logprob: -7.414575099945068

Token 350: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10193677246570587
    2. 'else' → logprob: -3.3519368171691895
    3. ' else' → logprob: -3.4769368171691895
    4. 'elif' → logprob: -4.1019368171691895
    5. ' if' → logprob: -5.2269368171691895
    6. ' elif' → logprob: -5.6019368171691895
    7. 'if' → logprob: -5.9769368171691895
    8. 'while' → logprob: -7.3519368171691895
    9. ' while' → logprob: -7.6019368171691895
    10. '       ' → logprob: -8.601936340332031

Token 351: ' the' (ID: 290)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06228337436914444
    2. '   ' → logprob: -3.3122832775115967
    3. ':
' → logprob: -4.062283515930176
    4. ' if' → logprob: -6.187283515930176
    5. '    ' → logprob: -6.437283515930176
    6. 'if' → logprob: -7.437283515930176
    7. ' :' → logprob: -7.437283515930176
    8. ',' → logprob: -7.562283515930176
    9. ' green' → logprob: -8.187283515930176
    10. '{' → logprob: -8.562283515930176

Token 352: ' emitted' (ID: 98472)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.42262694239616394
    2. ' right' → logprob: -1.1726269721984863
    3. 'green' → logprob: -4.547626972198486
    4. ' green' → logprob: -4.672626972198486
    5. '#' → logprob: -5.422626972198486
    6. '   ' → logprob: -5.922626972198486
    7. 'else' → logprob: -6.297626972198486
    8. ' else' → logprob: -6.797626972198486
    9. ' next' → logprob: -6.922626972198486
    10. ' ' → logprob: -7.172626972198486

Token 353: ' package' (ID: 9726)
  Prédit: 'package'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'package' → logprob: -0.2008928507566452
    2. ' package' → logprob: -1.8258928060531616
    3. '   ' → logprob: -5.450892925262451
    4. 'right' → logprob: -5.950892925262451
    5. ' right' → logprob: -6.325892925262451
    6. ' ' → logprob: -6.450892925262451
    7. 'token' → logprob: -6.450892925262451
    8. ':' → logprob: -6.700892925262451
    9. '#' → logprob: -6.950892925262451
    10. 'char' → logprob: -7.075892925262451

Token 354: ' must' (ID: 2804)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.19376754760742188
    2. ' was' → logprob: -2.193767547607422
    3. ' ==' → logprob: -3.943767547607422
    4. ' must' → logprob: -4.693767547607422
    5. '==' → logprob: -5.068767547607422
    6. '=' → logprob: -5.193767547607422
    7. ' =' → logprob: -5.193767547607422
    8. ' from' → logprob: -5.818767547607422
    9. ' right' → logprob: -5.943767547607422
    10. 'is' → logprob: -6.068767547607422

Token 355: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.016481684520840645
    2. 'be' → logprob: -4.141481876373291
    3. ' come' → logprob: -8.016481399536133
    4. ' have' → logprob: -9.516481399536133
    5. '	be' → logprob: -11.141481399536133
    6. 'come' → logprob: -11.516481399536133
    7. ' equal' → logprob: -12.766481399536133
    8. ' belong' → logprob: -13.016481399536133
    9. 'bel' → logprob: -13.141481399536133
    10. 'have' → logprob: -13.391481399536133

Token 356: ' from' (ID: 591)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.020641623064875603
    2. ' green' → logprob: -3.895641565322876
    3. 'right' → logprob: -9.645641326904297
    4. 'from' → logprob: -10.395641326904297
    5. ' from' → logprob: -13.895641326904297
    6. '   ' → logprob: -14.020641326904297
    7. ' ' → logprob: -14.645641326904297
    8. 'a' → logprob: -14.895641326904297
    9. ' right' → logprob: -15.145641326904297
    10. '.green' → logprob: -15.145641326904297

Token 357: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.251948744058609
    2. ' green' → logprob: -1.5019487142562866
    3. ' the' → logprob: -11.876948356628418
    4. 'the' → logprob: -11.876948356628418
    5. '   ' → logprob: -12.876948356628418
    6. 'right' → logprob: -13.876948356628418
    7. ' ' → logprob: -14.626948356628418
    8. ' right' → logprob: -15.126948356628418
    9. '.green' → logprob: -15.126948356628418
    10. '_green' → logprob: -15.126948356628418

Token 358: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7004581093788147
    2. 'while' → logprob: -1.07545804977417
    3. ' while' → logprob: -2.07545804977417
    4. '
' → logprob: -3.95045804977417
    5. '    
' → logprob: -5.70045804977417
    6. ' 
' → logprob: -6.07545804977417
    7. 'for' → logprob: -6.20045804977417
    8. 'mixed' → logprob: -6.20045804977417
    9. '	while' → logprob: -6.45045804977417
    10. ' ' → logprob: -7.07545804977417

Token 359: 'right' (ID: 2460)
  Prédit: ' green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' green' → logprob: -0.19689801335334778
    2. 'green' → logprob: -1.8218979835510254
    3. ')' → logprob: -5.071897983551025
    4. ' right' → logprob: -5.446897983551025
    5. '   ' → logprob: -5.571897983551025
    6. 'right' → logprob: -6.446897983551025
    7. ' )' → logprob: -7.446897983551025
    8. ' ' → logprob: -9.196898460388184
    9. ')
' → logprob: -9.946898460388184
    10. '  ' → logprob: -9.946898460388184

Token 360: ' belt' (ID: 28328)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.9522562623023987
    2. '   ' → logprob: -1.077256202697754
    3. ')' → logprob: -2.577256202697754
    4. ')_' → logprob: -2.702256202697754
    5. ']_' → logprob: -2.952256202697754
    6. 'belt' → logprob: -3.702256202697754
    7. ']' → logprob: -4.327256202697754
    8. ' belt' → logprob: -4.702256202697754
    9. '_right' → logprob: -5.327256202697754
    10. '])' → logprob: -5.577256202697754

Token 361: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21018777787685394
    2. '   ' → logprob: -1.8351877927780151
    3. '):' → logprob: -3.7101876735687256
    4. ')
' → logprob: -6.460187911987305
    5. ' )' → logprob: -6.710187911987305
    6. '):
' → logprob: -6.960187911987305
    7. '       ' → logprob: -8.085187911987305
    8. '')' → logprob: -8.210187911987305
    9. ']' → logprob: -8.585187911987305
    10. '  ' → logprob: -9.085187911987305

Token 362: ' so' (ID: 813)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01169593632221222
    2. ' while' → logprob: -5.136695861816406
    3. 'while' → logprob: -6.136695861816406
    4. '       ' → logprob: -6.636695861816406
    5. ' if' → logprob: -7.136695861816406
    6. '    
' → logprob: -7.636695861816406
    7. ' for' → logprob: -8.886695861816406
    8. 'if' → logprob: -9.011695861816406
    9. '
' → logprob: -9.386695861816406
    10. ' right' → logprob: -9.386695861816406

Token 363: ' we' (ID: 581)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3826119005680084
    2. ' right' → logprob: -1.257611870765686
    3. '   ' → logprob: -3.5076119899749756
    4. 'green' → logprob: -6.1326117515563965
    5. ' green' → logprob: -6.7576117515563965
    6. '	right' → logprob: -9.132612228393555
    7. '
' → logprob: -9.507612228393555
    8. '   ' → logprob: -10.757612228393555
    9. '    
' → logprob: -10.882612228393555
    10. '  ' → logprob: -11.382612228393555

Token 364: ' output' (ID: 4733)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.6993613243103027
    2. '   ' → logprob: -1.0743613243103027
    3. 'append' → logprob: -2.5743613243103027
    4. ' right' → logprob: -2.8243613243103027
    5. ' add' → logprob: -5.074361324310303
    6. ' append' → logprob: -5.324361324310303
    7. 'add' → logprob: -5.449361324310303
    8. '+' → logprob: -6.199361324310303
    9. '.append' → logprob: -6.324361324310303
    10. '       ' → logprob: -6.824361324310303

Token 365: ' it' (ID: 480)
  Prédit: ' green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' green' → logprob: -0.10869842022657394
    2. 'green' → logprob: -2.3586983680725098
    3. '   ' → logprob: -5.10869836807251
    4. ''' → logprob: -7.35869836807251
    5. ' right' → logprob: -8.108698844909668
    6. '       ' → logprob: -8.358698844909668
    7. ' '' → logprob: -8.608698844909668
    8. 'right' → logprob: -8.733698844909668
    9. '    ' → logprob: -8.858698844909668
    10. ' +' → logprob: -8.858698844909668

Token 366: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22298599779605865
    2. 'while' → logprob: -2.2229859828948975
    3. ' while' → logprob: -2.9729859828948975
    4. 'for' → logprob: -3.9729859828948975
    5. ' for' → logprob: -4.472986221313477
    6. '
' → logprob: -5.347986221313477
    7. '    
' → logprob: -5.847986221313477
    8. ' 
' → logprob: -7.597986221313477
    9. '       ' → logprob: -8.097986221313477
    10. '\n' → logprob: -8.222986221313477

Token 367: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.001170460251159966
    2. ' right' → logprob: -6.751170635223389
    3. '	right' → logprob: -16.251171112060547
    4. 'the' → logprob: -16.626171112060547
    5. '
' → logprob: -17.501171112060547
    6. 'rig' → logprob: -17.626171112060547
    7. '   ' → logprob: -17.751171112060547
    8. 'green' → logprob: -17.751171112060547
    9. ' ' → logprob: -18.126171112060547
    10. 'r' → logprob: -18.376171112060547

Token 368: '

' (ID: 279)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6654279828071594
    2. '   ' → logprob: -0.9154279828071594
    3. 'mixed' → logprob: -3.4154279232025146
    4. 'total' → logprob: -4.165428161621094
    5. '
' → logprob: -4.415428161621094
    6. 'for' → logprob: -4.540428161621094
    7. ' while' → logprob: -4.790428161621094
    8. 'length' → logprob: -6.165428161621094
    9. ' mixed' → logprob: -6.415428161621094
    10. 'mix' → logprob: -7.290428161621094

Token 369: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6221097707748413
    2. 'while' → logprob: -0.8721097707748413
    3. ' while' → logprob: -3.497109889984131
    4. '
' → logprob: -5.122109889984131
    5. '    
' → logprob: -5.497109889984131
    6. 'for' → logprob: -6.372109889984131
    7. ' 
' → logprob: -6.622109889984131
    8. '```' → logprob: -7.372109889984131
    9. '	while' → logprob: -8.622109413146973
    10. '  
' → logprob: -8.872109413146973

Token 370: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0986863374710083
    2. ' while' → logprob: -2.9736862182617188
    3. '   ' → logprob: -3.9736862182617188
    4. 'mixed' → logprob: -4.098686218261719
    5. 'for' → logprob: -5.598686218261719
    6. ' mixed' → logprob: -6.098686218261719
    7. 'total' → logprob: -7.723686218261719
    8. ' for' → logprob: -7.848686218261719
    9. 'mix' → logprob: -8.473686218261719
    10. 'length' → logprob: -8.848686218261719

Token 371: ' Note' (ID: 12225)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.04718750715255737
    2. 'for' → logprob: -3.797187566757202
    3. 'mixed' → logprob: -4.047187328338623
    4. 'total' → logprob: -5.297187328338623
    5. 'length' → logprob: -7.047187328338623
    6. 'n' → logprob: -8.797187805175781
    7. '   ' → logprob: -9.422187805175781
    8. 'mix' → logprob: -10.672187805175781
    9. ' while' → logprob: -11.047187805175781
    10. 'result' → logprob: -11.797187805175781

Token 372: ':' (ID: 25)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8865990042686462
    2. '   ' → logprob: -1.386599063873291
    3. ' while' → logprob: -1.761599063873291
    4. ':' → logprob: -2.511599063873291
    5. ' for' → logprob: -3.386599063873291
    6. 'for' → logprob: -3.511599063873291
    7. ' =' → logprob: -4.386599063873291
    8. '=' → logprob: -6.386599063873291
    9. ' :' → logprob: -6.636599063873291
    10. '#' → logprob: -7.511599063873291

Token 373: ' down' (ID: 1917)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.23082777857780457
    2. 'while' → logprob: -1.730827808380127
    3. '   ' → logprob: -3.605827808380127
    4. '    ' → logprob: -7.480827808380127
    5. ' for' → logprob: -7.730827808380127
    6. ' 
' → logprob: -8.855827331542969
    7. '    
' → logprob: -9.105827331542969
    8. 'for' → logprob: -9.105827331542969
    9. '       ' → logprob: -9.230827331542969
    10. ' ' → logprob: -9.480827331542969

Token 374: ' and' (ID: 326)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.010326357558369637
    2. '_length' → logprob: -5.635326385498047
    3. '_' → logprob: -5.885326385498047
    4. '[' → logprob: -6.010326385498047
    5. '_len' → logprob: -7.510326385498047
    6. '_indices' → logprob: -8.760326385498047
    7. 'index' → logprob: -9.260326385498047
    8. ')' → logprob: -9.510326385498047
    9. '```' → logprob: -9.510326385498047
    10. '   ' → logprob: -9.760326385498047

Token 375: ' right' (ID: 1849)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.6027874946594238
    2. ' red' → logprob: -1.2277874946594238
    3. 'green' → logprob: -2.227787494659424
    4. ' green' → logprob: -3.102787494659424
    5. 'right' → logprob: -5.102787494659424
    6. ' right' → logprob: -7.227787494659424
    7. 'down' → logprob: -9.227787017822266
    8. '   ' → logprob: -9.477787017822266
    9. ' ' → logprob: -10.477787017822266
    10. ' down' → logprob: -10.977787017822266

Token 376: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.5644129514694214
    2. ')' → logprob: -2.689413070678711
    3. '=' → logprob: -2.939413070678711
    4. 'continue' → logprob: -3.439413070678711
    5. '_length' → logprob: -3.439413070678711
    6. 'length' → logprob: -3.814413070678711
    7. '_output' → logprob: -3.814413070678711
    8. '_lengths' → logprob: -3.939413070678711
    9. 'are' → logprob: -4.314413070678711
    10. ' continue' → logprob: -4.314413070678711

Token 377: ' outputs' (ID: 32725)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -1.5804755687713623
    2. 'strings' → logprob: -1.7054755687713623
    3. 'both' → logprob: -2.2054755687713623
    4. ' strings' → logprob: -2.2054755687713623
    5. ' lists' → logprob: -2.7054755687713623
    6. ' initialized' → logprob: -2.8304755687713623
    7. ' both' → logprob: -3.3304755687713623
    8. 'initialized' → logprob: -3.5804755687713623
    9. ' generated' → logprob: -4.205475807189941
    10. 'lists' → logprob: -4.455475807189941

Token 378: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21422405540943146
    2. 'while' → logprob: -2.214224100112915
    3. ' while' → logprob: -2.589224100112915
    4. '    
' → logprob: -5.714223861694336
    5. '
' → logprob: -6.089223861694336
    6. 'for' → logprob: -6.964223861694336
    7. ' for' → logprob: -7.214223861694336
    8. ' 
' → logprob: -7.714223861694336
    9. '	while' → logprob: -8.714223861694336
    10. '\n' → logprob: -9.464223861694336

Token 379: ' red' (ID: 3592)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4104905426502228
    2. 'while' → logprob: -1.7854905128479004
    3. ' while' → logprob: -2.7854905128479004
    4. ' so' → logprob: -3.5354905128479004
    5. 'not' → logprob: -4.4104905128479
    6. ' not' → logprob: -4.6604905128479
    7. ' and' → logprob: -4.7854905128479
    8. 'and' → logprob: -5.0354905128479
    9. 'mixed' → logprob: -5.1604905128479
    10. 'so' → logprob: -5.2854905128479

Token 380: ' and' (ID: 326)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.33608072996139526
    2. ' and' → logprob: -2.46108078956604
    3. '[' → logprob: -2.58608078956604
    4. '   ' → logprob: -3.46108078956604
    5. '_' → logprob: -3.58608078956604
    6. ')' → logprob: -4.336080551147461
    7. ',' → logprob: -4.461080551147461
    8. ' ' → logprob: -4.711080551147461
    9. 'and' → logprob: -4.836080551147461
    10. ' ,' → logprob: -6.211080551147461

Token 381: ' green' (ID: 8851)
  Prédit: ' green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' green' → logprob: -0.6326467394828796
    2. 'green' → logprob: -0.7576467394828796
    3. '   ' → logprob: -10.257646560668945
    4. ' ' → logprob: -12.132646560668945
    5. ' ' → logprob: -13.757646560668945
    6. 'red' → logprob: -14.382646560668945
    7. '  ' → logprob: -14.382646560668945
    8. '
' → logprob: -14.507646560668945
    9. '.green' → logprob: -14.507646560668945
    10. '    ' → logprob: -14.632646560668945

Token 382: ' are' (ID: 553)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5164282917976379
    2. '_index' → logprob: -2.141428232192993
    3. '   ' → logprob: -2.516428232192993
    4. '[' → logprob: -3.016428232192993
    5. '_length' → logprob: -3.016428232192993
    6. ' are' → logprob: -4.141428470611572
    7. '_len' → logprob: -4.766428470611572
    8. 'length' → logprob: -5.016428470611572
    9. '_indices' → logprob: -5.141428470611572
    10. ']' → logprob: -5.266428470611572

Token 383: ' inputs' (ID: 21963)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -0.5804980993270874
    2. 'input' → logprob: -1.7054980993270874
    3. ' inputs' → logprob: -1.9554980993270874
    4. ' input' → logprob: -2.705498218536377
    5. 'strings' → logprob: -4.205498218536377
    6. ' strings' → logprob: -4.330498218536377
    7. 'both' → logprob: -5.955498218536377
    8. 'known' → logprob: -6.205498218536377
    9. 'unique' → logprob: -6.330498218536377
    10. 'the' → logprob: -6.455498218536377

Token 384: '

' (ID: 279)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.34417539834976196
    2. '   ' → logprob: -1.3441753387451172
    3. ' while' → logprob: -3.594175338745117
    4. '
' → logprob: -6.844175338745117
    5. 'for' → logprob: -7.469175338745117
    6. '    
' → logprob: -7.594175338745117
    7. '	while' → logprob: -8.344175338745117
    8. 'length' → logprob: -9.344175338745117
    9. '```' → logprob: -9.344175338745117
    10. 'mixed' → logprob: -9.469175338745117

Token 385: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.621166467666626
    2. 'while' → logprob: -0.871166467666626
    3. ' while' → logprob: -3.371166467666626
    4. 'for' → logprob: -4.996166229248047
    5. ' for' → logprob: -6.496166229248047
    6. '
' → logprob: -7.996166229248047
    7. '    
' → logprob: -7.996166229248047
    8. 'total' → logprob: -8.246166229248047
    9. 'mixed' → logprob: -8.496166229248047
    10. 'length' → logprob: -8.746166229248047

Token 386: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.02828517183661461
    2. ' while' → logprob: -4.528285026550293
    3. '   ' → logprob: -4.653285026550293
    4. 'mixed' → logprob: -5.278285026550293
    5. 'for' → logprob: -6.653285026550293
    6. 'total' → logprob: -8.028285026550293
    7. '
' → logprob: -8.028285026550293
    8. 'length' → logprob: -8.653285026550293
    9. ' mixed' → logprob: -8.778285026550293
    10. 'mix' → logprob: -9.778285026550293

Token 387: ' len' (ID: 4631)
  Prédit: ' down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' down' → logprob: -0.09745299816131592
    2. ' red' → logprob: -2.5974531173706055
    3. 'down' → logprob: -4.3474531173706055
    4. ' green' → logprob: -5.7224531173706055
    5. 'red' → logprob: -7.2224531173706055
    6. ' ' → logprob: -7.2224531173706055
    7. ' right' → logprob: -8.097453117370605
    8. ' True' → logprob: -8.597453117370605
    9. '   ' → logprob: -9.347453117370605
    10. ' (' → logprob: -10.347453117370605

Token 388: '(right' (ID: 52104)
  Prédit: '(right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -0.47837257385253906
    2. '(red' → logprob: -0.9783725738525391
    3. '(' → logprob: -6.478372573852539
    4. '(d' → logprob: -6.853372573852539
    5. ' (' → logprob: -6.978372573852539
    6. 'right' → logprob: -7.728372573852539
    7. '(left' → logprob: -9.353372573852539
    8. 'down' → logprob: -9.728372573852539
    9. '   ' → logprob: -10.728372573852539
    10. ' right' → logprob: -10.853372573852539

Token 389: ')' (ID: 8)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.31600528955459595
    2. '<' → logprob: -1.4410052299499512
    3. ')' → logprob: -3.441005229949951
    4. ')<' → logprob: -6.816005229949951
    5. '<len' → logprob: -7.816005229949951
    6. ' ' → logprob: -7.941005229949951
    7. '   ' → logprob: -9.19100570678711
    8. '()<' → logprob: -9.31600570678711
    9. ' )' → logprob: -9.81600570678711
    10. '()' → logprob: -10.56600570678711

Token 390: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3872578740119934
    2. '<' → logprob: -1.1372578144073486
    3. '<len' → logprob: -8.01225757598877
    4. ' ' → logprob: -10.63725757598877
    5. ' !=' → logprob: -12.01225757598877
    6. '   ' → logprob: -12.38725757598877
    7. '<n' → logprob: -12.51225757598877
    8. ' <=' → logprob: -12.76225757598877
    9. '<size' → logprob: -13.01225757598877
    10. '<=' → logprob: -13.38725757598877

Token 391: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -6.988221684878226e-06
    2. '(len' → logprob: -12.500006675720215
    3. ' len' → logprob: -13.125006675720215
    4. 'green' → logprob: -13.625006675720215
    5. '   ' → logprob: -18.75000762939453
    6. '
' → logprob: -19.62500762939453
    7. '(' → logprob: -20.62500762939453
    8. '=len' → logprob: -20.75000762939453
    9. '[len' → logprob: -20.87500762939453
    10. ' ' → logprob: -21.00000762939453

Token 392: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.25332242250442505
    2. '(red' → logprob: -1.5033223628997803
    3. '(right' → logprob: -6.628322601318359
    4. '(' → logprob: -10.00332260131836
    5. 'green' → logprob: -11.25332260131836
    6. 'red' → logprob: -12.50332260131836
    7. 'right' → logprob: -12.75332260131836
    8. ' (' → logprob: -13.25332260131836
    9. '(left' → logprob: -14.25332260131836
    10. 'g' → logprob: -14.25332260131836

Token 393: 'reen' (ID: 15653)
  Prédit: 'reen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reen' → logprob: -0.009814411401748657
    2. 'green' → logprob: -4.634814262390137
    3. ' green' → logprob: -10.884814262390137
    4. 'right' → logprob: -11.634814262390137
    5. '.green' → logprob: -11.884814262390137
    6. '_green' → logprob: -12.009814262390137
    7. '   ' → logprob: -12.509814262390137
    8. 'ree' → logprob: -13.259814262390137
    9. '(g' → logprob: -13.384814262390137
    10. 're' → logprob: -13.509814262390137

Token 394: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.050748273730278015
    2. ')+' → logprob: -3.300748348236084
    3. '):' → logprob: -4.425748348236084
    4. '):
' → logprob: -7.925748348236084
    5. ' )' → logprob: -9.175747871398926
    6. '+' → logprob: -9.300747871398926
    7. '   ' → logprob: -9.550747871398926
    8. ' +' → logprob: -11.050747871398926
    9. ' ):' → logprob: -12.800747871398926
    10. '+)' → logprob: -12.925747871398926

Token 395: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039495475590229034
    2. '   ' → logprob: -3.6644954681396484
    3. ' if' → logprob: -4.664495468139648
    4. '        
' → logprob: -6.664495468139648
    5. ' 
' → logprob: -7.414495468139648
    6. ',' → logprob: -7.914495468139648
    7. '    
' → logprob: -8.164495468139648
    8. '  
' → logprob: -8.539495468139648
    9. '    ' → logprob: -8.789495468139648
    10. 'if' → logprob: -9.164495468139648

Token 396: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6787594556808472
    2. ' if' → logprob: -0.8037594556808472
    3. '       ' → logprob: -3.1787595748901367
    4. '   ' → logprob: -5.803759574890137
    5. ' mixed' → logprob: -8.928759574890137
    6. 'mixed' → logprob: -9.053759574890137
    7. 'c' → logprob: -9.928759574890137
    8. ' ' → logprob: -10.303759574890137
    9. '	if' → logprob: -10.928759574890137
    10. '```' → logprob: -11.053759574890137

Token 397: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0020614033564925194
    2. '       ' → logprob: -6.502061367034912
    3. '   ' → logprob: -7.752061367034912
    4. ' if' → logprob: -9.37706184387207
    5. 'mixed' → logprob: -11.37706184387207
    6. '           ' → logprob: -12.00206184387207
    7. 'while' → logprob: -12.25206184387207
    8. '#' → logprob: -12.37706184387207
    9. 'next' → logprob: -12.50206184387207
    10. '	if' → logprob: -13.00206184387207

Token 398: ' next' (ID: 2613)
  Prédit: ' down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' down' → logprob: -0.03329188749194145
    2. 'down' → logprob: -3.658291816711426
    3. ' red' → logprob: -5.033291816711426
    4. ' ' → logprob: -9.033291816711426
    5. ' green' → logprob: -9.283291816711426
    6. 'red' → logprob: -9.283291816711426
    7. '   ' → logprob: -9.783291816711426
    8. ' ' → logprob: -10.533291816711426
    9. '  ' → logprob: -10.970791816711426
    10. '    ' → logprob: -11.845791816711426

Token 399: ' down' (ID: 1917)
  Prédit: ' down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' down' → logprob: -0.6240469813346863
    2. 'down' → logprob: -1.374047040939331
    3. ' red' → logprob: -2.374047040939331
    4. '_token' → logprob: -3.874047040939331
    5. '_down' → logprob: -3.874047040939331
    6. 'red' → logprob: -4.124046802520752
    7. ' ' → logprob: -4.249046802520752
    8. ' token' → logprob: -4.499046802520752
    9. ' (' → logprob: -5.124046802520752
    10. ' green' → logprob: -5.624046802520752

Token 400: ' package' (ID: 9726)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6939219832420349
    2. '_index' → logprob: -0.6939219832420349
    3. '==' → logprob: -9.31892204284668
    4. '[_' → logprob: -10.06892204284668
    5. '[d' → logprob: -10.06892204284668
    6. 'index' → logprob: -10.19392204284668
    7. '[left' → logprob: -10.19392204284668
    8. 'Index' → logprob: -10.19392204284668
    9. '   ' → logprob: -10.31892204284668
    10. '_' → logprob: -10.31892204284668

Token 401: ' matches' (ID: 15248)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1317967027425766
    2. '==' → logprob: -2.2567965984344482
    3. '[' → logprob: -4.131796836853027
    4. '   ' → logprob: -7.006796836853027
    5. ' ' → logprob: -7.756796836853027
    6. '=' → logprob: -8.256796836853027
    7. 's' → logprob: -8.381796836853027
    8. ' is' → logprob: -8.506796836853027
    9. ']' → logprob: -8.756796836853027
    10. ']==' → logprob: -8.881796836853027

Token 402: ' next' (ID: 2613)
  Prédit: ' red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.1273997575044632
    2. 'red' → logprob: -2.1273996829986572
    3. '   ' → logprob: -8.627399444580078
    4. '(red' → logprob: -9.002399444580078
    5. ' down' → logprob: -9.377399444580078
    6. 'down' → logprob: -10.002399444580078
    7. '       ' → logprob: -11.502399444580078
    8. '    ' → logprob: -11.627399444580078
    9. ' ' → logprob: -11.877399444580078
    10. ' if' → logprob: -12.502399444580078

Token 403: ' red' (ID: 3592)
  Prédit: ' red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.11863438040018082
    2. 'red' → logprob: -2.2436344623565674
    3. '(red' → logprob: -6.743634223937988
    4. ' down' → logprob: -6.868634223937988
    5. ' package' → logprob: -6.868634223937988
    6. '   ' → logprob: -7.118634223937988
    7. '_red' → logprob: -7.493634223937988
    8. ' ' → logprob: -7.993634223937988
    9. 'down' → logprob: -8.118634223937988
    10. ' character' → logprob: -8.868634223937988

Token 404: ' package' (ID: 9726)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3143804967403412
    2. '_index' → logprob: -1.8143805265426636
    3. '   ' → logprob: -2.314380407333374
    4. '_' → logprob: -5.814380645751953
    5. '       ' → logprob: -6.939380645751953
    6. '[_' → logprob: -7.189380645751953
    7. '```' → logprob: -8.064380645751953
    8. '_token' → logprob: -8.064380645751953
    9. '_package' → logprob: -8.189380645751953
    10. ' ' → logprob: -8.564380645751953

Token 405: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7570006847381592
    2. '       ' → logprob: -1.0070006847381592
    3. ':' → logprob: -2.257000684738159
    4. '   ' → logprob: -4.132000923156738
    5. 'and' → logprob: -4.132000923156738
    6. ',' → logprob: -4.757000923156738
    7. ' if' → logprob: -5.007000923156738
    8. ':
' → logprob: -5.132000923156738
    9. 'if' → logprob: -5.507000923156738
    10. '           ' → logprob: -6.632000923156738

Token 406: ' then' (ID: 1815)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22877010703086853
    2. '       ' → logprob: -1.728770136833191
    3. 'if' → logprob: -4.3537702560424805
    4. '           ' → logprob: -4.6037702560424805
    5. '   ' → logprob: -6.2287702560424805
    6. ' down' → logprob: -7.3537702560424805
    7. ' red' → logprob: -8.22877025604248
    8. '<|end|>' → logprob: -8.60377025604248
    9. ' while' → logprob: -8.72877025604248
    10. '        
' → logprob: -8.97877025604248

Token 407: ' it's' (ID: 4275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9612234830856323
    2. 'down' → logprob: -1.7112234830856323
    3. ' down' → logprob: -2.211223602294922
    4. '       ' → logprob: -2.586223602294922
    5. 'right' → logprob: -2.711223602294922
    6. '           ' → logprob: -2.836223602294922
    7. 'if' → logprob: -3.336223602294922
    8. ' red' → logprob: -3.461223602294922
    9. ' right' → logprob: -3.711223602294922
    10. 'red' → logprob: -4.086223602294922

Token 408: ' a' (ID: 261)
  Prédit: ' down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' down' → logprob: -1.4010934829711914
    2. ' a' → logprob: -1.6510934829711914
    3. 'down' → logprob: -1.6510934829711914
    4. ' red' → logprob: -1.6510934829711914
    5. ' push' → logprob: -2.1510934829711914
    6. 'red' → logprob: -4.026093482971191
    7. 'push' → logprob: -4.026093482971191
    8. 'a' → logprob: -4.401093482971191
    9. ' pushed' → logprob: -5.151093482971191
    10. '   ' → logprob: -6.026093482971191

Token 409: ' push' (ID: 9349)
  Prédit: ' push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' push' → logprob: -0.6474570035934448
    2. 'push' → logprob: -0.7724570035934448
    3. 'down' → logprob: -5.147457122802734
    4. ' ' → logprob: -5.897457122802734
    5. 'p' → logprob: -6.022457122802734
    6. ' down' → logprob: -7.147457122802734
    7. '   ' → logprob: -7.397457122802734
    8. 'd' → logprob: -7.522457122802734
    9. '	push' → logprob: -7.897457122802734
    10. ' p' → logprob: -8.022457122802734

Token 410: '_down' (ID: 40267)
  Prédit: '_down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_down' → logprob: -0.01588784158229828
    2. 'down' → logprob: -4.51588773727417
    3. '_right' → logprob: -6.26588773727417
    4. '   ' → logprob: -6.39088773727417
    5. '       ' → logprob: -6.89088773727417
    6. 'if' → logprob: -9.140888214111328
    7. 'right' → logprob: -10.015888214111328
    8. '_' → logprob: -11.140888214111328
    9. '     ' → logprob: -11.390888214111328
    10. '           ' → logprob: -11.515888214111328

Token 411: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5798369646072388
    2. '   ' → logprob: -1.2048369646072388
    3. '       ' → logprob: -2.329836845397949
    4. ':
' → logprob: -3.704836845397949
    5. ' if' → logprob: -5.454836845397949
    6. ' and' → logprob: -5.454836845397949
    7. ',' → logprob: -5.579836845397949
    8. 'if' → logprob: -6.204836845397949
    9. '           ' → logprob: -7.079836845397949
    10. '<|end|>' → logprob: -7.829836845397949

Token 412: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04688327759504318
    2. ' if' → logprob: -3.7968833446502686
    3. '   ' → logprob: -3.9218833446502686
    4. 'if' → logprob: -5.7968831062316895
    5. ' and' → logprob: -9.171883583068848
    6. ',' → logprob: -9.546883583068848
    7. ' or' → logprob: -9.546883583068848
    8. '           ' → logprob: -10.046883583068848
    9. '	if' → logprob: -10.296883583068848
    10. '        
' → logprob: -10.296883583068848

Token 413: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3568621277809143
    2. ' if' → logprob: -1.3568620681762695
    3. '   ' → logprob: -3.3568620681762695
    4. '       ' → logprob: -4.8568620681762695
    5. '	if' → logprob: -11.23186206817627
    6. 'while' → logprob: -11.85686206817627
    7. '```' → logprob: -12.48186206817627
    8. ' ' → logprob: -12.48186206817627
    9. '  ' → logprob: -12.60686206817627
    10. ' while' → logprob: -13.23186206817627

Token 414: ' down' (ID: 1917)
  Prédit: ' down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' down' → logprob: -0.16762182116508484
    2. 'down' → logprob: -2.4176218509674072
    3. ' red' → logprob: -2.7926218509674072
    4. 'red' → logprob: -5.792621612548828
    5. ' ' → logprob: -7.667621612548828
    6. '   ' → logprob: -8.042621612548828
    7. '  ' → logprob: -9.917621612548828
    8. ' green' → logprob: -11.417621612548828
    9. ' ' → logprob: -11.417621612548828
    10. '    ' → logprob: -12.042621612548828

Token 415: '_index' (ID: 7748)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.014684110297821e-06
    2. ' [' → logprob: -12.375008583068848
    3. '   ' → logprob: -13.125008583068848
    4. '_index' → logprob: -13.500008583068848
    5. '```' → logprob: -15.000008583068848
    6. '       ' → logprob: -15.750008583068848
    7. '[Index' → logprob: -15.875008583068848
    8. '][' → logprob: -15.875008583068848
    9. '[d' → logprob: -16.125009536743164
    10. '[next' → logprob: -16.500009536743164

Token 416: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.01453414000570774
    2. '<' → logprob: -4.264533996582031
    3. '<len' → logprob: -8.014533996582031
    4. '<size' → logprob: -11.014533996582031
    5. ' ==' → logprob: -12.014533996582031
    6. '<n' → logprob: -12.639533996582031
    7. ' ' → logprob: -12.764533996582031
    8. '<th' → logprob: -13.139533996582031
    9. '   ' → logprob: -13.389533996582031
    10. ' <=' → logprob: -13.639533996582031

Token 417: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00012356207298580557
    2. ' len' → logprob: -9.000123977661133
    3. 'red' → logprob: -17.000123977661133
    4. '   ' → logprob: -17.750123977661133
    5. '(len' → logprob: -18.125123977661133
    6. '	len' → logprob: -19.375123977661133
    7. ' ' → logprob: -19.875123977661133
    8. '[len' → logprob: -21.000123977661133
    9. '=len' → logprob: -21.125123977661133
    10. '  ' → logprob: -21.625123977661133

Token 418: '(d' (ID: 2572)
  Prédit: '(red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(red' → logprob: -0.1271173059940338
    2. '(d' → logprob: -2.127117395401001
    3. 'down' → logprob: -9.377117156982422
    4. '(' → logprob: -9.627117156982422
    5. 'red' → logprob: -10.252117156982422
    6. 'd' → logprob: -13.752117156982422
    7. ' red' → logprob: -14.377117156982422
    8. ' (' → logprob: -14.752117156982422
    9. ' down' → logprob: -15.127117156982422
    10. '(
' → logprob: -15.877117156982422

Token 419: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -4.47757811343763e-05
    2. 'ow' → logprob: -10.625044822692871
    3. 'down' → logprob: -11.250044822692871
    4. 'on' → logprob: -12.875044822692871
    5. 'o' → logprob: -13.875044822692871
    6. 'red' → logprob: -14.250044822692871
    7. '   ' → logprob: -14.375044822692871
    8. 'owned' → logprob: -14.500044822692871
    9. '```' → logprob: -15.000044822692871
    10. ' own' → logprob: -15.375044822692871

Token 420: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004250181373208761
    2. 'and' → logprob: -6.0042500495910645
    3. ' and' → logprob: -6.3792500495910645
    4. ' )' → logprob: -9.629250526428223
    5. '   ' → logprob: -12.754250526428223
    6. '')' → logprob: -13.379250526428223
    7. '）' → logprob: -13.504250526428223
    8. ']' → logprob: -13.754250526428223
    9. '`)' → logprob: -13.754250526428223
    10. '")' → logprob: -13.879250526428223

Token 421: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5759447813034058
    2. 'and' → logprob: -0.8259447813034058
    3. '   ' → logprob: -13.200944900512695
    4. '       ' → logprob: -14.200944900512695
    5. '	and' → logprob: -14.325944900512695
    6. ' ' → logprob: -14.450944900512695
    7. '           ' → logprob: -14.700944900512695
    8. '==' → logprob: -14.825944900512695
    9. '    ' → logprob: -15.325944900512695
    10. '        ' → logprob: -15.700944900512695

Token 422: ' red' (ID: 3592)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.22455370426177979
    2. ' down' → logprob: -2.2245535850524902
    3. 'red' → logprob: -2.8495535850524902
    4. ' red' → logprob: -3.3495535850524902
    5. ' ' → logprob: -11.099554061889648
    6. '   ' → logprob: -12.099554061889648
    7. '  ' → logprob: -12.412054061889648
    8. ' ' → logprob: -13.037054061889648
    9. 'dow' → logprob: -13.224554061889648
    10. 'Down' → logprob: -13.349554061889648

Token 423: '_index' (ID: 7748)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.033673129975795746
    2. '_index' → logprob: -3.408673048019409
    3. '   ' → logprob: -11.658673286437988
    4. '```' → logprob: -11.658673286437988
    5. ' [' → logprob: -12.283673286437988
    6. '_red' → logprob: -14.408673286437988
    7. '_idx' → logprob: -14.783673286437988
    8. '_' → logprob: -14.908673286437988
    9. ')[' → logprob: -15.158673286437988
    10. 'index' → logprob: -15.158673286437988

Token 424: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2812708616256714
    2. ' ==' → logprob: -1.7812708616256714
    3. '<' → logprob: -3.031270980834961
    4. '==' → logprob: -3.656270980834961
    5. '[' → logprob: -6.656270980834961
    6. ' <=' → logprob: -8.031270980834961
    7. ' and' → logprob: -8.281270980834961
    8. ' ' → logprob: -8.781270980834961
    9. ']' → logprob: -8.906270980834961
    10. 'and' → logprob: -9.031270980834961

Token 425: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0004306692280806601
    2. ' len' → logprob: -7.750430583953857
    3. '(len' → logprob: -18.000431060791016
    4. '   ' → logprob: -20.000431060791016
    5. '	len' → logprob: -20.625431060791016
    6. '=len' → logprob: -21.000431060791016
    7. '[len' → logprob: -21.125431060791016
    8. '<len' → logprob: -22.125431060791016
    9. ' ' → logprob: -22.625431060791016
    10. 'Len' → logprob: -22.875431060791016

Token 426: '(red' (ID: 83440)
  Prédit: '(red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(red' → logprob: -1.0325924449716695e-05
    2. 'red' → logprob: -11.50001049041748
    3. ' red' → logprob: -16.375009536743164
    4. '(' → logprob: -19.000009536743164
    5. ' (' → logprob: -21.250009536743164
    6. '.red' → logprob: -21.625009536743164
    7. '/red' → logprob: -21.625009536743164
    8. ':red' → logprob: -21.750009536743164
    9. '_red' → logprob: -22.250009536743164
    10. '(r' → logprob: -22.375009536743164

Token 427: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06369807571172714
    2. 'and' → logprob: -2.8136980533599854
    3. ')' → logprob: -6.4386982917785645
    4. '   ' → logprob: -9.688697814941406
    5. '       ' → logprob: -10.438697814941406
    6. '	and' → logprob: -11.563697814941406
    7. ']' → logprob: -11.688697814941406
    8. '           ' → logprob: -11.938697814941406
    9. '):
' → logprob: -12.563697814941406
    10. ' ' → logprob: -12.563697814941406

Token 428: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2521131932735443
    2. 'and' → logprob: -1.5021132230758667
    3. '       ' → logprob: -9.252113342285156
    4. '   ' → logprob: -9.752113342285156
    5. '	and' → logprob: -11.252113342285156
    6. '           ' → logprob: -11.752113342285156
    7. '==' → logprob: -12.752113342285156
    8. ' ' → logprob: -13.127113342285156
    9. '=' → logprob: -14.002113342285156
    10. '    ' → logprob: -14.252113342285156

Token 429: ' down' (ID: 1917)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.01829485408961773
    2. ' down' → logprob: -4.018294811248779
    3. 'red' → logprob: -9.518295288085938
    4. '   ' → logprob: -10.143295288085938
    5. ' red' → logprob: -10.893295288085938
    6. ' ' → logprob: -11.893295288085938
    7. '  ' → logprob: -13.518295288085938
    8. ' ' → logprob: -13.518295288085938
    9. '    ' → logprob: -14.018295288085938
    10. '	' → logprob: -14.268295288085938

Token 430: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00018661346985027194
    2. '_index' → logprob: -9.250186920166016
    3. '   ' → logprob: -10.250186920166016
    4. ' [' → logprob: -11.250186920166016
    5. '```' → logprob: -11.375186920166016
    6. '][' → logprob: -12.250186920166016
    7. '       ' → logprob: -12.500186920166016
    8. '[index' → logprob: -12.875186920166016
    9. '[
' → logprob: -13.375186920166016
    10. ')[' → logprob: -13.500186920166016

Token 431: 'down' (ID: 4653)
  Prédit: 'down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'down' → logprob: -1.9266199160483666e-05
    2. ' down' → logprob: -10.875019073486328
    3. 'index' → logprob: -16.000019073486328
    4. '```' → logprob: -17.500019073486328
    5. '_down' → logprob: -17.625019073486328
    6. '   ' → logprob: -17.625019073486328
    7. ']' → logprob: -17.875019073486328
    8. 'dow' → logprob: -18.250019073486328
    9. '
' → logprob: -18.625019073486328
    10. ' ' → logprob: -18.625019073486328

Token 432: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.019694948568940163
    2. 'index' → logprob: -4.019694805145264
    3. 'ex' → logprob: -7.144694805145264
    4. 'nd' → logprob: -8.144695281982422
    5. 'dex' → logprob: -8.144695281982422
    6. 'x' → logprob: -9.144695281982422
    7. 'd' → logprob: -11.519695281982422
    8. 'Index' → logprob: -11.519695281982422
    9. 'ind' → logprob: -11.644695281982422
    10. ']' → logprob: -11.769695281982422

Token 433: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09617958217859268
    2. ' ==' → logprob: -2.971179485321045
    3. '==' → logprob: -3.721179485321045
    4. ']==' → logprob: -4.221179485321045
    5. ' ]' → logprob: -6.471179485321045
    6. ' ' → logprob: -11.846179962158203
    7. '']' → logprob: -12.596179962158203
    8. '[' → logprob: -12.971179962158203
    9. ')' → logprob: -13.096179962158203
    10. '```' → logprob: -13.096179962158203

Token 434: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16024962067604065
    2. ' ==' → logprob: -1.9102495908737183
    3. '=' → logprob: -11.285249710083008
    4. ']==' → logprob: -11.785249710083008
    5. '==
' → logprob: -13.035249710083008
    6. ')==' → logprob: -13.285249710083008
    7. ')' → logprob: -14.910249710083008
    8. '===' → logprob: -15.285249710083008
    9. ']' → logprob: -15.660249710083008
    10. '[' → logprob: -15.910249710083008

Token 435: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.12692947685718536
    2. ' red' → logprob: -2.126929521560669
    3. ' ' → logprob: -14.62692928314209
    4. '   ' → logprob: -14.75192928314209
    5. '(red' → logprob: -15.12692928314209
    6. '_red' → logprob: -16.626930236816406
    7. '.red' → logprob: -17.001930236816406
    8. '  ' → logprob: -17.501930236816406
    9. '
' → logprob: -17.751930236816406
    10. 'Red' → logprob: -18.001930236816406

Token 436: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.2994620242971e-06
    2. '   ' → logprob: -12.375008583068848
    3. '_index' → logprob: -13.500008583068848
    4. ' [' → logprob: -13.750008583068848
    5. '```' → logprob: -14.125008583068848
    6. '][' → logprob: -15.125008583068848
    7. '       ' → logprob: -15.500008583068848
    8. '_red' → logprob: -16.50000762939453
    9. ' ' → logprob: -16.87500762939453
    10. 'red' → logprob: -17.00000762939453

Token 437: 'red' (ID: 1291)
  Prédit: 'red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.00034142236108891666
    2. '[' → logprob: -8.000341415405273
    3. ' red' → logprob: -12.250341415405273
    4. 'index' → logprob: -14.000341415405273
    5. '   ' → logprob: -15.750341415405273
    6. ' ' → logprob: -16.000341415405273
    7. '_index' → logprob: -17.000341415405273
    8. '
' → logprob: -17.375341415405273
    9. '(red' → logprob: -18.125341415405273
    10. '_red' → logprob: -18.750341415405273

Token 438: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -6.76628842484206e-05
    2. 'index' → logprob: -9.750067710876465
    3. 'ex' → logprob: -12.000067710876465
    4. 'x' → logprob: -13.625067710876465
    5. 'dex' → logprob: -14.500067710876465
    6. ']_' → logprob: -15.000067710876465
    7. ']' → logprob: -15.250067710876465
    8. 'Index' → logprob: -15.625067710876465
    9. '_' → logprob: -15.750067710876465
    10. '[' → logprob: -16.00006675720215

Token 439: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5828709006309509
    2. ':' → logprob: -1.5828709602355957
    3. ']:
' → logprob: -1.5828709602355957
    4. ']:' → logprob: -3.8328709602355957
    5. '):
' → logprob: -5.582870960235596
    6. ']' → logprob: -6.082870960235596
    7. '       ' → logprob: -6.332870960235596
    8. '   ' → logprob: -6.957870960235596
    9. '           ' → logprob: -8.957870483398438
    10. '():
' → logprob: -9.082870483398438

Token 440: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007340277079492807
    2. '       ' → logprob: -5.632340431213379
    3. ':
' → logprob: -6.257340431213379
    4. ':' → logprob: -6.632340431213379
    5. ' red' → logprob: -9.132340431213379
    6. '
' → logprob: -9.382340431213379
    7. '):
' → logprob: -9.632340431213379
    8. '```' → logprob: -9.632340431213379
    9. '            
' → logprob: -10.257340431213379
    10. 'red' → logprob: -10.382340431213379

Token 441: ' red' (ID: 3592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2537248432636261
    2. 'down' → logprob: -2.0037248134613037
    3. ' down' → logprob: -3.5037248134613037
    4. 'red' (adapté à ' red') → logprob: -3.7537248134613037
    5. ' red' → logprob: -4.003725051879883
    6. '
' → logprob: -4.753725051879883
    7. '               ' → logprob: -5.628725051879883
    8. '       ' → logprob: -5.878725051879883
    9. '            
' → logprob: -6.878725051879883
    10. '   ' → logprob: -7.003725051879883

Token 442: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -3.7697225252486533e-06
    2. 'index' → logprob: -13.125003814697266
    3. '   ' → logprob: -13.875003814697266
    4. '_' → logprob: -15.000003814697266
    5. 'Index' → logprob: -16.000003814697266
    6. '       ' → logprob: -16.375003814697266
    7. '```' → logprob: -17.250003814697266
    8. '           ' → logprob: -17.375003814697266
    9. '[index' → logprob: -17.500003814697266
    10. '_INDEX' → logprob: -17.500003814697266

Token 443: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0789266899228096
    2. ' +=' → logprob: -2.5789268016815186
    3. '   ' → logprob: -10.703927040100098
    4. '+' → logprob: -11.578927040100098
    5. '           ' → logprob: -13.203927040100098
    6. '       ' → logprob: -13.828927040100098
    7. '    ' → logprob: -14.078927040100098
    8. ']+=' → logprob: -14.078927040100098
    9. '=' → logprob: -15.453927040100098
    10. '```' → logprob: -15.703927040100098

Token 444: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -20.75
    4. '```' → logprob: -22.25
    5. '2' → logprob: -22.75
    6. '0' → logprob: -22.75
    7. '１' → logprob: -23.25
    8. '3' → logprob: -23.875
    9. '+' → logprob: -24.0
    10. '۱' → logprob: -24.125

Token 445: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '```' → logprob: -20.5
    4. '0' → logprob: -22.5
    5. '   ' → logprob: -22.5
    6. '۱' → logprob: -22.5
    7. '１' → logprob: -23.0
    8. '१' → logprob: -23.4375
    9. '2' → logprob: -23.5625
    10. '+' → logprob: -23.9375

Token 446: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38714757561683655
    2. '
' → logprob: -1.1371475458145142
    3. 'down' → logprob: -9.262147903442383
    4. '       ' → logprob: -9.387147903442383
    5. '
' → logprob: -10.637147903442383
    6. '            
' → logprob: -10.762147903442383
    7. ' down' → logprob: -10.887147903442383
    8. '               ' → logprob: -11.762147903442383
    9. '```' → logprob: -11.887147903442383
    10. ',' → logprob: -12.512147903442383

Token 447: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017215684056282043
    2. '
' → logprob: -4.517215728759766
    3. 'down' → logprob: -5.267215728759766
    4. ' down' → logprob: -7.017215728759766
    5. '       ' → logprob: -10.267215728759766
    6. '            
' → logprob: -10.767215728759766
    7. '
' → logprob: -11.642215728759766
    8. '   ' → logprob: -11.767215728759766
    9. '		' → logprob: -12.267215728759766
    10. ',' → logprob: -12.892215728759766

Token 448: ' down' (ID: 1917)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'down' (adapté à ' down') → logprob: -3.128163257315464e-07
    2. ' down' → logprob: -15.25
    3. '           ' → logprob: -20.625
    4. '
' → logprob: -21.25
    5. '   ' → logprob: -21.25
    6. '       ' → logprob: -22.375
    7. '```' → logprob: -23.125
    8. 'Down' → logprob: -23.625
    9. '.down' → logprob: -23.625
    10. '_down' → logprob: -24.0

Token 449: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -5.512236498361744e-07
    2. 'Index' → logprob: -15.375000953674316
    3. 'index' → logprob: -16.0
    4. '+=' → logprob: -17.375
    5. '```' → logprob: -17.375
    6. '_INDEX' → logprob: -17.625
    7. '+' → logprob: -17.75
    8. '   ' → logprob: -18.0
    9. '_' → logprob: -18.0
    10. '++' → logprob: -18.25

Token 450: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.011058080941438675
    2. ' +=' → logprob: -4.5110578536987305
    3. '+' → logprob: -11.63605785369873
    4. '=' → logprob: -13.76105785369873
    5. ']+=' → logprob: -14.88605785369873
    6. '+='' → logprob: -17.386058807373047
    7. '++' → logprob: -17.511058807373047
    8. ')' → logprob: -17.761058807373047
    9. '```' → logprob: -17.761058807373047
    10. '+="' → logprob: -17.761058807373047

Token 451: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -18.75
    4. '```' → logprob: -19.25
    5. '0' → logprob: -21.5
    6. '１' → logprob: -22.375
    7. '۱' → logprob: -22.375
    8. '2' → logprob: -22.75
    9. '	' → logprob: -23.125
    10. ' ' → logprob: -23.125

Token 452: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '   ' → logprob: -20.5
    4. '2' → logprob: -21.0
    5. '```' → logprob: -21.0
    6. '１' → logprob: -22.5
    7. '۱' → logprob: -23.125
    8. '0' → logprob: -23.25
    9. '१' → logprob: -24.0625
    10. '+' → logprob: -24.125

Token 453: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004623441956937313
    2. 'else' → logprob: -5.5046234130859375
    3. '   ' → logprob: -8.254623413085938
    4. 'elif' → logprob: -8.879623413085938
    5. ' else' → logprob: -8.879623413085938
    6. '<|end|>' → logprob: -13.004623413085938
    7. ' elif' → logprob: -13.504623413085938
    8. ')' → logprob: -14.379623413085938
    9. '           ' → logprob: -14.504623413085938
    10. '```' → logprob: -14.879623413085938

Token 454: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033565396443009377
    2. 'else' → logprob: -5.753356456756592
    3. '   ' → logprob: -9.25335693359375
    4. 'elif' → logprob: -9.62835693359375
    5. ' else' → logprob: -11.00335693359375
    6. '```' → logprob: -15.37835693359375
    7. ' elif' → logprob: -15.87835693359375
    8. '           ' → logprob: -16.50335693359375
    9. 'import' → logprob: -17.50335693359375
    10. '	else' → logprob: -18.25335693359375

Token 455: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7874927520751953
    2. '       ' → logprob: -0.7874927520751953
    3. 'else' (adapté à ' else') → logprob: -2.5374927520751953
    4. 'elif' → logprob: -4.662492752075195
    5. ' else' → logprob: -6.537492752075195
    6. ' elif' → logprob: -9.537492752075195
    7. '           ' → logprob: -14.287492752075195
    8. '	elif' → logprob: -14.287492752075195
    9. ' ' → logprob: -14.412492752075195
    10. '```' → logprob: -14.537492752075195

Token 456: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.921833872795105
    2. '       ' → logprob: -1.171833872795105
    3. ':' → logprob: -1.546833872795105
    4. '           ' → logprob: -2.6718339920043945
    5. ' if' → logprob: -5.1718339920043945
    6. 'if' → logprob: -6.2968339920043945
    7. '   ' → logprob: -7.0468339920043945
    8. '):
' → logprob: -8.546833992004395
    9. '```' → logprob: -8.671833992004395
    10. '
' → logprob: -8.796833992004395

Token 457: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008192665874958038
    2. '           ' → logprob: -5.133192539215088
    3. '   ' → logprob: -6.258192539215088
    4. 'right' → logprob: -8.383193016052246
    5. ' right' → logprob: -9.133193016052246
    6. 'if' → logprob: -12.508193016052246
    7. ' if' → logprob: -13.008193016052246
    8. '```' → logprob: -13.883193016052246
    9. '	right' → logprob: -14.133193016052246
    10. '
' → logprob: -14.633193016052246

Token 458: ' #' (ID: 1069)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.34122809767723083
    2. ' right' → logprob: -1.5912281274795532
    3. '           ' → logprob: -2.5912280082702637
    4. '   ' → logprob: -5.216228008270264
    5. '       ' → logprob: -5.716228008270264
    6. 'if' → logprob: -7.216228008270264
    7. 'green' → logprob: -8.091228485107422
    8. ' if' → logprob: -8.216228485107422
    9. '	right' → logprob: -8.716228485107422
    10. '               ' → logprob: -8.966228485107422

Token 459: ' this' (ID: 495)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.000558512459974736
    2. 'if' → logprob: -8.000558853149414
    3. '           ' → logprob: -9.000558853149414
    4. 'green' → logprob: -10.000558853149414
    5. ' right' → logprob: -10.375558853149414
    6. '   ' → logprob: -11.000558853149414
    7. '#' → logprob: -12.875558853149414
    8. '               ' → logprob: -13.500558853149414
    9. '       ' → logprob: -13.625558853149414
    10. '	right' → logprob: -15.000558853149414

Token 460: ' must' (ID: 2804)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.7493647933006287
    2. '           ' → logprob: -1.7493648529052734
    3. 'green' → logprob: -1.7493648529052734
    4. '   ' → logprob: -2.9993648529052734
    5. ' green' → logprob: -3.9993648529052734
    6. ' right' → logprob: -4.249364852905273
    7. '_right' → logprob: -4.374364852905273
    8. '```' → logprob: -4.374364852905273
    9. 'if' → logprob: -4.999364852905273
    10. 'space' → logprob: -4.999364852905273

Token 461: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.39036327600479126
    2. ' be' → logprob: -1.2653632164001465
    3. '           ' → logprob: -3.3903632164001465
    4. 'right' → logprob: -5.3903632164001465
    5. '               ' → logprob: -7.1403632164001465
    6. 'green' → logprob: -7.6403632164001465
    7. ' right' → logprob: -7.7653632164001465
    8. '	be' → logprob: -8.515363693237305
    9. '   ' → logprob: -9.015363693237305
    10. ' green' → logprob: -9.265363693237305

Token 462: ' a' (ID: 261)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.18846796452999115
    2. ' green' → logprob: -1.8134679794311523
    3. 'right' → logprob: -4.813467979431152
    4. ' right' → logprob: -7.563467979431152
    5. '   ' → logprob: -10.438467979431152
    6. 'a' → logprob: -12.563467979431152
    7. ' ' → logprob: -12.938467979431152
    8. '
' → logprob: -13.563467979431152
    9. 'if' → logprob: -13.938467979431152
    10. 'the' → logprob: -13.938467979431152

Token 463: ' push' (ID: 9349)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.03868875280022621
    2. 'right' → logprob: -3.6636886596679688
    3. ' green' → logprob: -4.538688659667969
    4. 'push' → logprob: -6.538688659667969
    5. ' right' → logprob: -9.413688659667969
    6. ' push' → logprob: -10.913688659667969
    7. '
' → logprob: -11.163688659667969
    8. 'print' → logprob: -11.413688659667969
    9. 'package' → logprob: -11.788688659667969
    10. '   ' → logprob: -12.038688659667969

Token 464: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -9.364928700961173e-05
    2. 'right' → logprob: -9.375093460083008
    3. '           ' → logprob: -12.125093460083008
    4. ' _' → logprob: -14.000093460083008
    5. '   ' → logprob: -14.375093460083008
    6. '_' → logprob: -14.500093460083008
    7. '_RIGHT' → logprob: -15.125093460083008
    8. '```' → logprob: -15.250093460083008
    9. 'Right' → logprob: -15.500093460083008
    10. '               ' → logprob: -15.500093460083008

Token 465: ' output' (ID: 4733)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01424248144030571
    2. 'right' → logprob: -4.514242649078369
    3. ' right' → logprob: -6.014242649078369
    4. '   ' → logprob: -8.264242172241211
    5. 'green' → logprob: -8.514242172241211
    6. '       ' → logprob: -10.014242172241211
    7. ' green' → logprob: -10.139242172241211
    8. '
' → logprob: -10.264242172241211
    9. ' +' → logprob: -10.639242172241211
    10. ',' → logprob: -10.764242172241211

Token 466: ' package' (ID: 9726)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002598484279587865
    2. 'right' → logprob: -6.502598285675049
    3. '
' → logprob: -8.002598762512207
    4. ' right' → logprob: -8.252598762512207
    5. 'green' → logprob: -9.127598762512207
    6. ',' → logprob: -9.627598762512207
    7. '       ' → logprob: -9.752598762512207
    8. '   ' → logprob: -9.877598762512207
    9. '            
' → logprob: -10.002598762512207
    10. ' green' → logprob: -10.002598762512207

Token 467: ' from' (ID: 591)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005605342332273722
    2. 'right' → logprob: -5.380605220794678
    3. ' right' → logprob: -7.380605220794678
    4. 'green' → logprob: -8.880605697631836
    5. '   ' → logprob: -9.630605697631836
    6. '       ' → logprob: -10.005605697631836
    7. ' green' → logprob: -10.630605697631836
    8. '
' → logprob: -10.755605697631836
    9. '	right' → logprob: -11.130605697631836
    10. ',' → logprob: -11.380605697631836

Token 468: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.008646360598504543
    2. ' green' → logprob: -4.758646488189697
    3. 'the' → logprob: -11.258646011352539
    4. 'right' → logprob: -11.883646011352539
    5. '   ' → logprob: -12.258646011352539
    6. '
' → logprob: -13.008646011352539
    7. '.green' → logprob: -13.133646011352539
    8. '_green' → logprob: -14.008646011352539
    9. '```' → logprob: -15.133646011352539
    10. ' the' → logprob: -15.133646011352539

Token 469: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03893988952040672
    2. 'right' → logprob: -3.413939952850342
    3. 'green' → logprob: -5.663939952850342
    4. ' right' → logprob: -6.913939952850342
    5. '
' → logprob: -8.038939476013184
    6. ' green' → logprob: -8.913939476013184
    7. '       ' → logprob: -9.413939476013184
    8. '            
' → logprob: -9.538939476013184
    9. '   ' → logprob: -9.913939476013184
    10. '	right' → logprob: -10.413939476013184

Token 470: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00043817906407639384
    2. 'right' → logprob: -8.87543773651123
    3. '   ' → logprob: -9.50043773651123
    4. 'green' → logprob: -9.75043773651123
    5. ' right' → logprob: -10.62543773651123
    6. '       ' → logprob: -10.75043773651123
    7. ' green' → logprob: -10.75043773651123
    8. '+' → logprob: -11.00043773651123
    9. ' +' → logprob: -11.12543773651123
    10. '```' → logprob: -11.37543773651123

Token 471: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.0015422382857650518
    2. ' right' → logprob: -6.501542091369629
    3. '           ' → logprob: -10.251542091369629
    4. '   ' → logprob: -12.626542091369629
    5. '               ' → logprob: -14.376542091369629
    6. 'if' → logprob: -15.126542091369629
    7. '	right' → logprob: -15.126542091369629
    8. '       ' → logprob: -16.626543045043945
    9. '
' → logprob: -16.751543045043945
    10. '            
' → logprob: -17.626543045043945

Token 472: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004090985283255577
    2. ' +=' → logprob: -5.504090785980225
    3. '+='' → logprob: -11.629091262817383
    4. '+' → logprob: -13.629091262817383
    5. '+="' → logprob: -14.004091262817383
    6. '   ' → logprob: -14.004091262817383
    7. ']+=' → logprob: -14.504091262817383
    8. '=' → logprob: -15.754091262817383
    9. '+=(' → logprob: -16.004091262817383
    10. '	' → logprob: -17.254091262817383

Token 473: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.0028053484857082367
    2. ' green' → logprob: -5.877805233001709
    3. '   ' → logprob: -16.002805709838867
    4. 'gre' → logprob: -16.127805709838867
    5. ' ' → logprob: -16.752805709838867
    6. '.green' → logprob: -17.127805709838867
    7. 'g' → logprob: -17.127805709838867
    8. ' ' → logprob: -17.377805709838867
    9. 'greens' → logprob: -17.502805709838867
    10. 'Green' → logprob: -17.627805709838867

Token 474: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. '[right' → logprob: -14.750000953674316
    3. '```' → logprob: -15.375000953674316
    4. ' [' → logprob: -15.875000953674316
    5. 'green' → logprob: -16.000001907348633
    6. '[
' → logprob: -17.125001907348633
    7. '   ' → logprob: -17.250001907348633
    8. '\[' → logprob: -18.000001907348633
    9. '[left' → logprob: -18.250001907348633
    10. ' ' → logprob: -18.500001907348633

Token 475: 'green' (ID: 22743)
  Prédit: 'green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -1.9361264946837764e-07
    2. ' green' → logprob: -15.75
    3. 'gre' → logprob: -21.5
    4. '_green' → logprob: -22.875
    5. '.green' → logprob: -23.0
    6. '   ' → logprob: -23.25
    7. 'gree' → logprob: -23.375
    8. 'greens' → logprob: -23.5
    9. 'g' → logprob: -23.75
    10. '
' → logprob: -23.875

Token 476: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.011047814972698689
    2. 'index' → logprob: -4.511047840118408
    3. 'Index' → logprob: -16.88604736328125
    4. 'green' → logprob: -17.38604736328125
    5. ' index' → logprob: -19.13604736328125
    6. 'ind' → logprob: -19.26104736328125
    7. '   ' → logprob: -20.13604736328125
    8. '
' → logprob: -20.26104736328125
    9. '_INDEX' → logprob: -20.26104736328125
    10. '_' → logprob: -20.76104736328125

Token 477: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.043032534420490265
    2. ']
' → logprob: -3.168032646179199
    3. ' ]' → logprob: -11.0430326461792
    4. ']
' → logprob: -12.6680326461792
    5. '   ' → logprob: -12.7930326461792
    6. '<|end|>' → logprob: -12.7930326461792
    7. ']

' → logprob: -13.1680326461792
    8. ')' → logprob: -13.4180326461792
    9. ' ]
' → logprob: -14.0430326461792
    10. ']+' → logprob: -14.2930326461792

Token 478: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2191140502691269
    2. '           ' → logprob: -2.219114065170288
    3. '
' → logprob: -3.219114065170288
    4. ' green' → logprob: -3.344114065170288
    5. 'green' → logprob: -5.094113826751709
    6. '```' → logprob: -5.344113826751709
    7. '       ' → logprob: -6.844113826751709
    8. '    
' → logprob: -8.594114303588867
    9. '[' → logprob: -9.344114303588867
    10. '            
' → logprob: -9.469114303588867

Token 479: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' (adapté à ' green') → logprob: -0.5759884119033813
    2. ' green' → logprob: -0.8259884119033813
    3. ' 
' → logprob: -10.82598876953125
    4. '```' → logprob: -11.07598876953125
    5. '
' → logprob: -11.57598876953125
    6. '            
' → logprob: -13.70098876953125
    7. '.green' → logprob: -13.82598876953125
    8. '_green' → logprob: -14.07598876953125
    9. '    
' → logprob: -14.95098876953125
    10. ' Green' → logprob: -15.70098876953125

Token 480: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -5.512236498361744e-07
    2. '+' → logprob: -16.125
    3. 'Index' → logprob: -16.375
    4. 'index' → logprob: -16.375
    5. '_idx' → logprob: -16.75
    6. '_INDEX' → logprob: -18.125
    7. '_' → logprob: -18.125
    8. '```' → logprob: -18.375
    9. '_ind' → logprob: -18.5
    10. '++' → logprob: -18.625

Token 481: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.08046844601631165
    2. ' +=' → logprob: -2.5804684162139893
    3. '+' → logprob: -6.455468654632568
    4. '=' → logprob: -12.95546817779541
    5. ']+=' → logprob: -13.33046817779541
    6. ' +' → logprob: -13.95546817779541
    7. '++' → logprob: -15.58046817779541
    8. '```' → logprob: -15.83046817779541
    9. ')' → logprob: -16.330469131469727
    10. '+='' → logprob: -16.455469131469727

Token 482: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '```' → logprob: -20.125019073486328
    4. '   ' → logprob: -21.750019073486328
    5. ' ' → logprob: -22.125019073486328
    6. '0' → logprob: -22.625019073486328
    7. '１' → logprob: -22.875019073486328
    8. '`' → logprob: -23.125019073486328
    9. '۱' → logprob: -23.500019073486328
    10. '+' → logprob: -23.625019073486328

Token 483: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '```' → logprob: -20.25
    4. '   ' → logprob: -21.375
    5. '１' → logprob: -22.5
    6. '0' → logprob: -23.0
    7. '۱' → logprob: -23.25
    8. '2' → logprob: -23.625
    9. '+' → logprob: -24.3125
    10. '`' → logprob: -24.4375

Token 484: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 485: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.615723192691803
    2. '   ' → logprob: -1.1157231330871582
    3. '<|end|>' → logprob: -2.115723133087158
    4. '
' → logprob: -4.865723133087158
    5. '```' → logprob: -6.615723133087158
    6. '    
' → logprob: -6.615723133087158
    7. ')' → logprob: -7.615723133087158
    8. '#' → logprob: -8.490723609924316
    9. ' print' → logprob: -9.240723609924316
    10. '<|end|>' → logprob: -9.740723609924316

Token 486: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07889650017023087
    2. '   ' → logprob: -2.5788965225219727
    3. '```' → logprob: -12.328896522521973
    4. ' print' → logprob: -13.078896522521973
    5. '
' → logprob: -15.703896522521973
    6. '    
' → logprob: -16.703895568847656
    7. '	print' → logprob: -17.328895568847656
    8. '``' → logprob: -18.078895568847656
    9. '#print' → logprob: -19.328895568847656
    10. '       ' → logprob: -19.328895568847656

Token 487: '(right' (ID: 52104)
  Prédit: '(right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -0.009160923771560192
    2. '('' → logprob: -4.759160995483398
    3. '()' → logprob: -7.759160995483398
    4. '(' → logprob: -9.259160995483398
    5. 'right' → logprob: -11.009160995483398
    6. '("' → logprob: -13.384160995483398
    7. '(len' → logprob: -13.509160995483398
    8. '(left' → logprob: -13.759160995483398
    9. ' (' → logprob: -14.009160995483398
    10. '((' → logprob: -14.634160995483398

Token 488: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -16.375
    3. '())' → logprob: -16.5
    4. ')`' → logprob: -16.75
    5. '()' → logprob: -17.375
    6. ')
' → logprob: -17.625
    7. '))' → logprob: -18.25
    8. '')' → logprob: -18.625
    9. '`)' → logprob: -19.5
    10. ')}' → logprob: -20.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 486
Tokens correctement prédits (1ère position, stricte): 156
Tokens correctement prédits (1ère position, avec adaptation): 164
Tokens correctement prédits (top 10): 313
Précision stricte (1ère position): 32.10%
Précision adaptée (1ère position): 33.74%
Précision (top 10): 64.40%
================================================================================
