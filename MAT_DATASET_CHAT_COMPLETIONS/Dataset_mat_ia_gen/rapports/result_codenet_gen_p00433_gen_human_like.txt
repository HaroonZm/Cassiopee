================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:59:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a_scores = list(map(int, input().split()))
b_scores = list(map(int, input().split()))

sum_a = sum(a_scores)
sum_b = sum(b_scores)

print(sum_a if sum_a >= sum_b else sum_b)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: '_scores' (ID: 63345)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12090803682804108
    2. '{}' → logprob: -2.62090802192688
    3. ' [' → logprob: -3.62090802192688
    4. '[]' → logprob: -4.870908260345459
    5. ' []' → logprob: -5.495908260345459
    6. ' {}' → logprob: -6.245908260345459
    7. ' ' → logprob: -7.745908260345459
    8. '{' → logprob: -9.6209077835083
    9. 'scores' → logprob: -10.2459077835083
    10. 'a' → logprob: -10.4959077835083

Token 4: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03952721878886223
    2. '[' → logprob: -3.289527177810669
    3. '.' → logprob: -7.664527416229248
    4. '(a' → logprob: -8.41452693939209
    5. '```' → logprob: -8.66452693939209
    6. '[(' → logprob: -8.78952693939209
    7. 'a' → logprob: -9.28952693939209
    8. 's' → logprob: -9.91452693939209
    9. '(
' → logprob: -9.91452693939209
    10. '[a' → logprob: -10.28952693939209

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.526404619216919
    2. '(lambda' → logprob: -0.901404619216919
    3. '(str' → logprob: -7.02640438079834
    4. '(eval' → logprob: -7.15140438079834
    5. '<|end|>' → logprob: -8.02640438079834
    6. '(int' → logprob: -8.15140438079834
    7. ')' → logprob: -8.15140438079834
    8. '(operator' → logprob: -9.40140438079834
    9. '(function' → logprob: -9.90140438079834
    10. '(open' → logprob: -10.27640438079834

Token 6: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.054991625249385834
    2. ')' → logprob: -4.054991722106934
    3. '(a' → logprob: -4.054991722106934
    4. '))' → logprob: -4.554991722106934
    5. '(user' → logprob: -6.429991722106934
    6. '```' → logprob: -7.429991722106934
    7. '(data' → logprob: -7.554991722106934
    8. '(input' → logprob: -7.679991722106934
    9. '(range' → logprob: -7.804991722106934
    10. '(token' → logprob: -7.929991722106934

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.316051185131073
    2. ' input' → logprob: -1.9410512447357178
    3. 'a' → logprob: -2.1910512447357178
    4. ' a' → logprob: -4.441051006317139
    5. '(input' → logprob: -5.941051006317139
    6. ')' → logprob: -7.691051006317139
    7. '(a' → logprob: -8.691051483154297
    8. 'scores' → logprob: -8.816051483154297
    9. 'user' → logprob: -9.441051483154297
    10. 'score' → logprob: -10.066051483154297

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1365891396999359
    2. '()' → logprob: -2.6365890502929688
    3. '()))' → logprob: -4.011589050292969
    4. '(()' → logprob: -4.261589050292969
    5. '('' → logprob: -4.636589050292969
    6. '())' → logprob: -6.011589050292969
    7. '())))' → logprob: -6.011589050292969
    8. '()>' → logprob: -6.261589050292969
    9. '("("' → logprob: -6.636589050292969
    10. '()));' → logprob: -6.886589050292969

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002116462419508025
    2. ' split' → logprob: -9.000211715698242
    3. 'strip' → logprob: -9.375211715698242
    4. '(split' → logprob: -13.500211715698242
    5. 'rstrip' → logprob: -13.625211715698242
    6. 'spl' → logprob: -14.500211715698242
    7. 's' → logprob: -16.250211715698242
    8. 'replace' → logprob: -16.875211715698242
    9. 'startswith' → logprob: -17.125211715698242
    10. ')' → logprob: -17.250211715698242

Token 10: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.4788084924221039
    2. '())' → logprob: -1.3538085222244263
    3. '(' → logprob: -2.8538084030151367
    4. '))' → logprob: -3.7288084030151367
    5. '()' → logprob: -3.9788084030151367
    6. ')' → logprob: -4.103808403015137
    7. '())))' → logprob: -5.603808403015137
    8. ')))' → logprob: -6.978808403015137
    9. '('' → logprob: -8.103808403015137
    10. '()));' → logprob: -9.228808403015137

Token 11: 'b' (ID: 65)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7955236434936523
    2. '[' → logprob: -1.1705236434936523
    3. 'a' → logprob: -2.4205236434936523
    4. ')' → logprob: -2.7955236434936523
    5. '#' → logprob: -3.5455236434936523
    6. '```' → logprob: -4.045523643493652
    7. '+' → logprob: -5.170523643493652
    8. '\n' → logprob: -5.420523643493652
    9. ',' → logprob: -5.545523643493652
    10. '`' → logprob: -5.670523643493652

Token 12: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -0.00023488728038500994
    2. '_' → logprob: -8.500234603881836
    3. '_s' → logprob: -10.750234603881836
    4. '_score' → logprob: -12.750234603881836
    5. ' _' → logprob: -13.125234603881836
    6. '_codes' → logprob: -13.625234603881836
    7. ''_' → logprob: -14.125234603881836
    8. 'scores' → logprob: -15.000234603881836
    9. '_tokens' → logprob: -15.125234603881836
    10. '_answers' → logprob: -15.375234603881836

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1925601065158844
    2. '=' → logprob: -1.817560076713562
    3. '[' → logprob: -5.067560195922852
    4. '.' → logprob: -5.442560195922852
    5. ')' → logprob: -6.942560195922852
    6. '_' → logprob: -7.942560195922852
    7. ' +=' → logprob: -8.567560195922852
    8. '[:]' → logprob: -8.942560195922852
    9. '.append' → logprob: -9.442560195922852
    10. '.=' → logprob: -10.067560195922852

Token 14: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3132616877555847
    2. 'list' → logprob: -1.3132617473602295
    3. '=list' → logprob: -18.188261032104492
    4. '(list' → logprob: -18.438261032104492
    5. 'map' → logprob: -19.063261032104492
    6. 'List' → logprob: -19.063261032104492
    7. ' ' → logprob: -19.688261032104492
    8. ' map' → logprob: -19.813261032104492
    9. '_list' → logprob: -20.188261032104492
    10. ' ' → logprob: -20.563261032104492

Token 15: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.08931140601634979
    2. '(' → logprob: -2.464311361312866
    3. '(.' → logprob: -8.339311599731445
    4. ' (' → logprob: -10.839311599731445
    5. '(
' → logprob: -10.964311599731445
    6. '.map' → logprob: -11.089311599731445
    7. '(

' → logprob: -12.089311599731445
    8. '_map' → logprob: -12.214311599731445
    9. '(eval' → logprob: -12.214311599731445
    10. '```' → logprob: -12.214311599731445

Token 16: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.023366253823041916
    2. '(' → logprob: -3.7733662128448486
    3. '<int' → logprob: -9.89836597442627
    4. 'int' → logprob: -10.77336597442627
    5. '(str' → logprob: -10.89836597442627
    6. ' (' → logprob: -11.64836597442627
    7. '(
' → logprob: -12.14836597442627
    8. '[int' → logprob: -12.77336597442627
    9. '```' → logprob: -12.77336597442627
    10. '(lambda' → logprob: -13.02336597442627

Token 17: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001205350155942142
    2. ',input' → logprob: -6.8762054443359375
    3. '(input' → logprob: -9.376205444335938
    4. '(' → logprob: -9.626205444335938
    5. 'input' → logprob: -11.876205444335938
    6. '`,' → logprob: -12.376205444335938
    7. '(),' → logprob: -12.376205444335938
    8. ' ,' → logprob: -12.876205444335938
    9. '',' → logprob: -13.626205444335938
    10. '```' → logprob: -14.376205444335938

Token 18: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.11282933503389359
    2. 'input' → logprob: -2.2378294467926025
    3. '(input' → logprob: -12.362829208374023
    4. ',input' → logprob: -13.987829208374023
    5. '=input' → logprob: -14.487829208374023
    6. 'int' → logprob: -15.237829208374023
    7. '_input' → logprob: -15.987829208374023
    8. '	input' → logprob: -16.112829208374023
    9. ' ' → logprob: -16.112829208374023
    10. '[input' → logprob: -16.112829208374023

Token 19: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.491498531133402e-06
    2. '()' → logprob: -11.625009536743164
    3. ' ().' → logprob: -15.625009536743164
    4. '()).' → logprob: -15.750009536743164
    5. '>().' → logprob: -16.750009536743164
    6. '(' → logprob: -17.375009536743164
    7. '())).' → logprob: -17.750009536743164
    8. '.' → logprob: -17.750009536743164
    9. '().'' → logprob: -18.000009536743164
    10. '().__' → logprob: -18.125009536743164

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.7432603272027336e-06
    2. ' split' → logprob: -13.500001907348633
    3. '(split' → logprob: -15.500001907348633
    4. 'strip' → logprob: -16.750001907348633
    5. 'spl' → logprob: -16.875001907348633
    6. ')' → logprob: -17.000001907348633
    7. 'rstrip' → logprob: -18.375001907348633
    8. '.split' → logprob: -18.500001907348633
    9. 'plit' → logprob: -18.500001907348633
    10. '```' → logprob: -19.625001907348633

Token 21: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.012589705176651478
    2. '())' → logprob: -5.137589931488037
    3. '()' → logprob: -5.387589931488037
    4. '))' → logprob: -6.262589931488037
    5. '()))
' → logprob: -9.762589454650879
    6. '()));' → logprob: -10.262589454650879
    7. ')' → logprob: -10.637589454650879
    8. '()))

' → logprob: -11.387589454650879
    9. '())))' → logprob: -11.887589454650879
    10. '())).' → logprob: -12.262589454650879

Token 22: 'sum' (ID: 12298)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014034219086170197
    2. 'points' → logprob: -5.264034271240234
    3. '```' → logprob: -5.639034271240234
    4. 'result' → logprob: -6.389034271240234
    5. 'n' → logprob: -7.014034271240234
    6. 'p' → logprob: -7.389034271240234
    7. 'c' → logprob: -7.514034271240234
    8. 'for' → logprob: -7.639034271240234
    9. '
' → logprob: -8.389034271240234
    10. 'if' → logprob: -8.639034271240234

Token 23: '_a' (ID: 10852)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03293195739388466
    2. '(a' → logprob: -3.7829320430755615
    3. '_a' → logprob: -5.657931804656982
    4. '_' → logprob: -5.782931804656982
    5. 'a' → logprob: -6.532931804656982
    6. 's' → logprob: -6.907931804656982
    7. '1' → logprob: -8.78293228149414
    8. ')' → logprob: -9.65793228149414
    9. '(_)' → logprob: -9.65793228149414
    10. '_sum' → logprob: -9.90793228149414

Token 24: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005925600882619619
    2. '(a' → logprob: -5.50592565536499
    3. '[' → logprob: -7.75592565536499
    4. '+' → logprob: -8.130925178527832
    5. '(sum' → logprob: -8.255925178527832
    6. ')' → logprob: -8.505925178527832
    7. '()' → logprob: -8.755925178527832
    8. '_' → logprob: -9.130925178527832
    9. '([' → logprob: -9.505925178527832
    10. '_a' → logprob: -9.755925178527832

Token 25: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.12825293838977814
    2. 'sum' → logprob: -2.1282529830932617
    3. '0' → logprob: -6.878252983093262
    4. ' ' → logprob: -8.628252983093262
    5. ' a' → logprob: -9.878252983093262
    6. 'a' → logprob: -10.128252983093262
    7. '(sum' → logprob: -11.003252983093262
    8. ' max' → logprob: -13.003252983093262
    9. '	sum' → logprob: -14.253252983093262
    10. '=sum' → logprob: -14.378252983093262

Token 26: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.02830255776643753
    2. '(' → logprob: -3.6533026695251465
    3. '(_' → logprob: -6.2783026695251465
    4. '_a' → logprob: -9.153302192687988
    5. '(sum' → logprob: -12.778302192687988
    6. '((' → logprob: -12.778302192687988
    7. '```' → logprob: -13.153302192687988
    8. 'a' → logprob: -13.278302192687988
    9. '_' → logprob: -13.528302192687988
    10. ' (' → logprob: -13.778302192687988

Token 27: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -4.274932143744081e-05
    2. '_' → logprob: -10.625042915344238
    3. '_s' → logprob: -11.375042915344238
    4. '_a' → logprob: -12.750042915344238
    5. ')_' → logprob: -13.375042915344238
    6. '_score' → logprob: -13.875042915344238
    7. ')' → logprob: -14.500042915344238
    8. '_)' → logprob: -15.000042915344238
    9. ' _' → logprob: -15.625042915344238
    10. '))' → logprob: -15.875042915344238

Token 28: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010249509941786528
    2. '+' → logprob: -7.5010247230529785
    3. ')
' → logprob: -8.001025199890137
    4. '(' → logprob: -10.376025199890137
    5. 'a' → logprob: -10.876025199890137
    6. '))' → logprob: -11.126025199890137
    7. ' )' → logprob: -11.251025199890137
    8. '(a' → logprob: -11.251025199890137
    9. ' +' → logprob: -11.251025199890137
    10. ',' → logprob: -11.876025199890137

Token 29: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.06814652681350708
    2. 'if' → logprob: -2.9431464672088623
    3. '>' → logprob: -5.818146705627441
    4. '
' → logprob: -6.318146705627441
    5. ' if' → logprob: -6.318146705627441
    6. '+' → logprob: -6.318146705627441
    7. 'diff' → logprob: -7.068146705627441
    8. ' sum' → logprob: -7.318146705627441
    9. '```' → logprob: -7.318146705627441
    10. 'b' → logprob: -7.318146705627441

Token 30: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.4754837453365326
    2. '_' → logprob: -0.975483775138855
    3. '_a' → logprob: -7.1004838943481445
    4. '(' → logprob: -7.6004838943481445
    5. '(_' → logprob: -10.725483894348145
    6. ' _' → logprob: -11.475483894348145
    7. '```' → logprob: -11.725483894348145
    8. '('_' → logprob: -11.850483894348145
    9. ')_' → logprob: -11.975483894348145
    10. '("_' → logprob: -12.350483894348145

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7083567380905151
    2. '=' → logprob: -0.9583567380905151
    3. '_' → logprob: -2.8333568572998047
    4. ')' → logprob: -3.0833568572998047
    5. '+' → logprob: -4.583356857299805
    6. ' +' → logprob: -5.958356857299805
    7. ' ' → logprob: -6.333356857299805
    8. '(' → logprob: -6.583356857299805
    9. ' +=' → logprob: -6.833356857299805
    10. ' ==' → logprob: -6.833356857299805

Token 32: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.4287717640399933
    2. 'sum' → logprob: -1.053771734237671
    3. 'b' → logprob: -10.55377197265625
    4. ' b' → logprob: -10.67877197265625
    5. '(sum' → logprob: -11.05377197265625
    6. ' ' → logprob: -13.30377197265625
    7. '	sum' → logprob: -14.05377197265625
    8. '=sum' → logprob: -14.42877197265625
    9. 's' → logprob: -14.55377197265625
    10. 'int' → logprob: -14.67877197265625

Token 33: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.5896083116531372
    2. '(' → logprob: -0.8396083116531372
    3. '_b' → logprob: -4.839608192443848
    4. '(_' → logprob: -5.339608192443848
    5. '(a' → logprob: -7.214608192443848
    6. '_' → logprob: -9.589608192443848
    7. '(s' → logprob: -11.214608192443848
    8. '_(' → logprob: -11.214608192443848
    9. 'b' → logprob: -11.714608192443848
    10. ' (' → logprob: -11.964608192443848

Token 34: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -0.0008117707911878824
    2. '_b' → logprob: -7.125811576843262
    3. 'b' → logprob: -12.750811576843262
    4. '_a' → logprob: -13.125811576843262
    5. 'a' → logprob: -13.625811576843262
    6. 'scores' → logprob: -15.000811576843262
    7. ')_' → logprob: -15.500811576843262
    8. '_sizes' → logprob: -16.125812530517578
    9. '```' → logprob: -16.250812530517578
    10. '_' → logprob: -16.375812530517578

Token 35: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. '))' → logprob: -13.000003814697266
    3. ')
' → logprob: -14.375003814697266
    4. '()' → logprob: -15.500003814697266
    5. ' )' → logprob: -15.875003814697266
    6. '())' → logprob: -16.250003814697266
    7. '`)' → logprob: -17.375003814697266
    8. '```' → logprob: -17.750003814697266
    9. ')))' → logprob: -18.125003814697266
    10. '')' → logprob: -18.250003814697266

Token 36: 'print' (ID: 1598)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00019257364328950644
    2. 'result' → logprob: -10.000192642211914
    3. 'print' → logprob: -10.000192642211914
    4. 'difference' → logprob: -10.375192642211914
    5. 'for' → logprob: -10.750192642211914
    6. 'diff' → logprob: -11.125192642211914
    7. ' if' → logprob: -11.375192642211914
    8. 'a' → logprob: -11.875192642211914
    9. '```' → logprob: -12.000192642211914
    10. 'i' → logprob: -13.125192642211914

Token 37: '(sum' (ID: 45528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010472775436937809
    2. '(sum' → logprob: -4.635472774505615
    3. '((' → logprob: -7.760472774505615
    4. '(a' → logprob: -9.010473251342773
    5. '(max' → logprob: -9.760473251342773
    6. '()' → logprob: -10.010473251342773
    7. '("("' → logprob: -10.510473251342773
    8. '('' → logprob: -10.760473251342773
    9. '(abs' → logprob: -13.010473251342773
    10. '(s' → logprob: -13.135473251342773

Token 38: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.284196674823761
    2. '_' → logprob: -1.4091966152191162
    3. '(' → logprob: -6.534196853637695
    4. '_)' → logprob: -6.909196853637695
    5. '(a' → logprob: -8.284196853637695
    6. ')_' → logprob: -8.909196853637695
    7. ')' → logprob: -9.784196853637695
    8. '_b' → logprob: -10.034196853637695
    9. '(_' → logprob: -10.409196853637695
    10. '_(' → logprob: -10.409196853637695

Token 39: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09415217489004135
    2. ',' → logprob: -3.2191522121429443
    3. '>' → logprob: -3.8441522121429443
    4. ' >' → logprob: -3.9691522121429443
    5. ' )' → logprob: -5.469151973724365
    6. ' ,' → logprob: -6.094151973724365
    7. '>)' → logprob: -6.594151973724365
    8. ' >=' → logprob: -7.219151973724365
    9. '>=' → logprob: -7.844151973724365
    10. ',)' → logprob: -9.094152450561523

Token 40: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.2820812463760376
    2. ' sum' → logprob: -1.4070812463760376
    3. '>' → logprob: -7.782081127166748
    4. ' >' → logprob: -8.032081604003906
    5. '(sum' → logprob: -9.657081604003906
    6. ')' → logprob: -9.657081604003906
    7. ' ' → logprob: -9.907081604003906
    8. '	sum' → logprob: -12.782081604003906
    9. '">' → logprob: -13.532081604003906
    10. 'a' → logprob: -13.532081604003906

Token 41: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.023255961015820503
    2. '_' → logprob: -3.7732560634613037
    3. '_b' → logprob: -11.898256301879883
    4. '>' → logprob: -12.898256301879883
    5. ' _' → logprob: -15.023256301879883
    6. '__' → logprob: -15.648256301879883
    7. ' >' → logprob: -15.898256301879883
    8. '_g' → logprob: -16.023256301879883
    9. 'a' → logprob: -16.898256301879883
    10. '_e' → logprob: -16.898256301879883

Token 42: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.07906614989042282
    2. ' >' → logprob: -2.579066038131714
    3. '>=' → logprob: -9.079066276550293
    4. ' >=' → logprob: -10.579066276550293
    5. ' ' → logprob: -11.204066276550293
    6. ' ' → logprob: -11.579066276550293
    7. '>b' → logprob: -12.954066276550293
    8. '```' → logprob: -13.204066276550293
    9. '">' → logprob: -13.579066276550293
    10. '<|end|>' → logprob: -13.704066276550293

Token 43: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0076081594452261925
    2. ' sum' → logprob: -4.882607936859131
    3. '(sum' → logprob: -13.882608413696289
    4. '=sum' → logprob: -14.382608413696289
    5. '_sum' → logprob: -15.257608413696289
    6. ' ' → logprob: -16.13260841369629
    7. 's' → logprob: -16.50760841369629
    8. '	sum' → logprob: -16.75760841369629
    9. 'b' → logprob: -17.13260841369629
    10. ' ' → logprob: -17.25760841369629

Token 44: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -5.319370302458992e-06
    2. '_a' → logprob: -12.375005722045898
    3. '_' → logprob: -14.000005722045898
    4. ')_' → logprob: -15.875005722045898
    5. ' _' → logprob: -17.3750057220459
    6. 'b' → logprob: -17.7500057220459
    7. '_)' → logprob: -18.8750057220459
    8. '}_' → logprob: -18.8750057220459
    9. ')' → logprob: -20.0000057220459
    10. '_i' → logprob: -20.1250057220459

Token 45: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0017353941220790148
    2. 'else' → logprob: -6.376735210418701
    3. ')' → logprob: -10.37673568725586
    4. ' )' → logprob: -13.75173568725586
    5. ' ' → logprob: -14.37673568725586
    6. '	else' → logprob: -15.62673568725586
    7. ',' → logprob: -15.87673568725586
    8. '_else' → logprob: -18.00173568725586
    9. '```' → logprob: -19.50173568725586
    10. ' ' → logprob: -19.50173568725586

Token 46: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.16022798418998718
    2. ' sum' → logprob: -1.9102280139923096
    3. '(sum' → logprob: -13.16022777557373
    4. ' ' → logprob: -13.91022777557373
    5. 's' → logprob: -15.16022777557373
    6. ')' → logprob: -15.28522777557373
    7. '=sum' → logprob: -15.91022777557373
    8. 'print' → logprob: -16.410228729248047
    9. '	sum' → logprob: -16.410228729248047
    10. ',sum' → logprob: -16.535228729248047

Token 47: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -5.200166469876422e-06
    2. '_' → logprob: -12.750004768371582
    3. '_a' → logprob: -13.250004768371582
    4. ' _' → logprob: -15.625004768371582
    5. ')_' → logprob: -16.1250057220459
    6. 'b' → logprob: -16.2500057220459
    7. '_f' → logprob: -17.8750057220459
    8. '```' → logprob: -17.8750057220459
    9. '"_' → logprob: -18.1250057220459
    10. '}_' → logprob: -18.3750057220459

Token 48: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. '))' → logprob: -14.125000953674316
    3. '`)' → logprob: -16.250001907348633
    4. ')
' → logprob: -16.375001907348633
    5. '')' → logprob: -16.750001907348633
    6. ' )' → logprob: -17.125001907348633
    7. ')`' → logprob: -17.125001907348633
    8. '```' → logprob: -18.000001907348633
    9. '）' → logprob: -18.750001907348633
    10. ')#' → logprob: -18.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 46
Tokens correctement prédits (1ère position, stricte): 25
Tokens correctement prédits (1ère position, avec adaptation): 25
Tokens correctement prédits (top 10): 36
Précision stricte (1ère position): 54.35%
Précision adaptée (1ère position): 54.35%
Précision (top 10): 78.26%
================================================================================
