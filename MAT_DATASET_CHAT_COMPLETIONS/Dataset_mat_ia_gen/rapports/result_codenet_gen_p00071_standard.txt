================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:17:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n=int(input())
input()
for t in range(1,n+1):
    grid=[list(input()) for _ in range(8)]
    input()
    x,y=int(input())-1,int(input())-1
    from collections import deque
    q=deque()
    if grid[y][x]=='1':
        q.append((x,y))
    exploded=[[False]*8 for _ in range(8)]
    while q:
        cx,cy=q.popleft()
        if exploded[cy][cx]:
            continue
        exploded[cy][cx]=True
        grid[cy][cx]='0'
        for dx,dy in [(1,0),(0,1),(-1,0),(0,-1)]:
            for dist in range(1,4):
                nx=cx+dx*dist
                ny=cy+dy*dist
                if 0<=nx<8 and 0<=ny<8:
                    if grid[ny][nx]=='1' and not exploded[ny][nx]:
                        q.append((nx,ny))
    print(f"Data {t}:")
    for row in grid:
        print(''.join(row))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23070020973682404
    2. ')' → logprob: -1.6057002544403076
    3. '()' → logprob: -5.9807000160217285
    4. '(
' → logprob: -7.1057000160217285
    5. '())' → logprob: -7.2307000160217285
    6. '[' → logprob: -8.730700492858887
    7. '```' → logprob: -8.730700492858887
    8. '`' → logprob: -9.355700492858887
    9. '(

' → logprob: -9.355700492858887
    10. '')' → logprob: -9.605700492858887

Token 4: 'input' (ID: 2586)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7022286057472229
    2. 'i' → logprob: -1.4522285461425781
    3. 'if' → logprob: -2.952228546142578
    4. 's' → logprob: -3.452228546142578
    5. ' ' → logprob: -3.577228546142578
    6. '`' → logprob: -3.577228546142578
    7. '\n' → logprob: -3.702228546142578
    8. '#' → logprob: -3.827228546142578
    9. ''' → logprob: -3.952228546142578
    10. '```' → logprob: -4.702228546142578

Token 5: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43955811858177185
    2. '()' → logprob: -1.0645581483840942
    3. '('' → logprob: -5.814558029174805
    4. '[' → logprob: -6.064558029174805
    5. ''' → logprob: -7.189558029174805
    6. 's' → logprob: -7.189558029174805
    7. '().' → logprob: -7.189558029174805
    8. '(
' → logprob: -7.189558029174805
    9. '("("' → logprob: -7.439558029174805
    10. '"' → logprob: -8.314558029174805

Token 6: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3317730128765106
    2. 'a' → logprob: -2.331773042678833
    3. 'n' → logprob: -2.956773042678833
    4. '[' → logprob: -3.331773042678833
    5. 'data' → logprob: -3.456773042678833
    6. 'x' → logprob: -4.081772804260254
    7. '#' → logprob: -4.581772804260254
    8. 'print' → logprob: -5.206772804260254
    9. 's' → logprob: -5.331772804260254
    10. 't' → logprob: -5.456772804260254

Token 7: ' t' (ID: 260)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.038624417036771774
    2. ' i' → logprob: -3.2886245250701904
    3. '  ' → logprob: -7.788624286651611
    4. ' n' → logprob: -9.41362476348877
    5. 'i' → logprob: -9.78862476348877
    6. ' ‌' → logprob: -11.78862476348877
    7. '_' → logprob: -13.03862476348877
    8. ' t' → logprob: -13.16362476348877
    9. ' x' → logprob: -13.16362476348877
    10. ' ' → logprob: -13.41362476348877

Token 8: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3596179783344269
    2. ' ' → logprob: -1.6096179485321045
    3. 'in' → logprob: -3.1096179485321045
    4. '  ' → logprob: -4.234618186950684
    5. ' i' → logprob: -4.234618186950684
    6. 'i' → logprob: -4.609618186950684
    7. 'n' → logprob: -4.734618186950684
    8. 'o' → logprob: -4.859618186950684
    9. 'e' → logprob: -7.859618186950684
    10. '_' → logprob: -7.984618186950684

Token 9: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4288584887981415
    2. 'range' → logprob: -1.0538585186004639
    3. ' ' → logprob: -9.803858757019043
    4. '	range' → logprob: -10.928858757019043
    5. 'rang' → logprob: -11.053858757019043
    6. 'n' → logprob: -11.428858757019043
    7. 'r' → logprob: -11.803858757019043
    8. 'ra' → logprob: -11.928858757019043
    9. 'ange' → logprob: -12.303858757019043
    10. ' ran' → logprob: -12.303858757019043

Token 10: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007990269223228097
    2. '(n' → logprob: -7.500799179077148
    3. ' (' → logprob: -8.375799179077148
    4. '(len' → logprob: -11.375799179077148
    5. '(t' → logprob: -13.875799179077148
    6. '(
' → logprob: -14.500799179077148
    7. '((' → logprob: -14.625799179077148
    8. '(space' → logprob: -14.625799179077148
    9. '(range' → logprob: -15.000799179077148
    10. '()' → logprob: -15.500799179077148

Token 11: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.066919301403686e-05
    2. '1' → logprob: -9.875090599060059
    3. ' n' → logprob: -10.375090599060059
    4. '0' → logprob: -12.500090599060059
    5. 't' → logprob: -13.500090599060059
    6. '2' → logprob: -13.625090599060059
    7. ')' → logprob: -14.250090599060059
    8. ')n' → logprob: -14.750090599060059
    9. '(n' → logprob: -15.625090599060059
    10. '_n' → logprob: -15.750090599060059

Token 12: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05699394270777702
    2. ',n' → logprob: -2.9319939613342285
    3. ' ,' → logprob: -6.1819939613342285
    4. ',len' → logprob: -10.80699348449707
    5. 'n' → logprob: -12.43199348449707
    6. ',num' → logprob: -12.43199348449707
    7. '+' → logprob: -13.05699348449707
    8. ')' → logprob: -13.05699348449707
    9. ',t' → logprob: -13.55699348449707
    10. ',(' → logprob: -13.93199348449707

Token 13: '+' (ID: 10)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08998425304889679
    2. '+' → logprob: -2.464984178543091
    3. ' ):' → logprob: -7.33998441696167
    4. ')' → logprob: -8.339983940124512
    5. ' +' → logprob: -9.464983940124512
    6. ',' → logprob: -10.464983940124512
    7. '+:' → logprob: -10.839983940124512
    8. ':' → logprob: -11.089983940124512
    9. '):
' → logprob: -11.589983940124512
    10. ')+' → logprob: -13.339983940124512

Token 14: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.723973582556937e-05
    2. ' ' → logprob: -11.375017166137695
    3. '):' → logprob: -12.375017166137695
    4. '```' → logprob: -13.750017166137695
    5. '2' → logprob: -15.375017166137695
    6. '+' → logprob: -17.125017166137695
    7. '(' → logprob: -17.375017166137695
    8. ' ):' → logprob: -17.500017166137695
    9. ')' → logprob: -17.750017166137695
    10. '):
' → logprob: -17.750017166137695

Token 15: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00261703971773386
    2. ':' → logprob: -6.377616882324219
    3. ')' → logprob: -7.002616882324219
    4. ':)' → logprob: -13.002616882324219
    5. '):
' → logprob: -13.502616882324219
    6. ' ):' → logprob: -14.377616882324219
    7. '():' → logprob: -14.877616882324219
    8. ':**' → logprob: -16.50261688232422
    9. '}:' → logprob: -17.50261688232422
    10. ')：' → logprob: -17.50261688232422

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5613378882408142
    2. ' ' → logprob: -2.186337947845459
    3. 'p' → logprob: -2.561337947845459
    4. 'print' → logprob: -2.936337947845459
    5. ' print' → logprob: -3.686337947845459
    6. '	   ' → logprob: -4.311337947845459
    7. 'a' → logprob: -4.311337947845459
    8. '   ' → logprob: -4.311337947845459
    9. '	print' → logprob: -4.436337947845459
    10. '\t' → logprob: -4.436337947845459

Token 17: ' grid' (ID: 10586)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.38990727066993713
    2. ' ' → logprob: -1.5149072408676147
    3. ' p' → logprob: -3.6399073600769043
    4. 'i' → logprob: -4.139907360076904
    5. 'print' → logprob: -4.514907360076904
    6. 'n' → logprob: -4.764907360076904
    7. ' print' → logprob: -4.764907360076904
    8. '   ' → logprob: -5.139907360076904
    9. 'r' → logprob: -5.264907360076904
    10. 's' → logprob: -5.514907360076904

Token 18: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008254681597463787
    2. '.' → logprob: -8.625825881958008
    3. '[t' → logprob: -8.875825881958008
    4. '[i' → logprob: -9.125825881958008
    5. '[row' → logprob: -9.500825881958008
    6. '[
' → logprob: -9.625825881958008
    7. '[]' → logprob: -10.000825881958008
    8. '[:]' → logprob: -10.625825881958008
    9. '\[' → logprob: -10.875825881958008
    10. ']' → logprob: -11.000825881958008

Token 19: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.20335477590560913
    2. '[list' → logprob: -1.953354835510254
    3. '[]' → logprob: -3.703354835510254
    4. '[input' → logprob: -4.578354835510254
    5. ' list' → logprob: -5.203354835510254
    6. '[' → logprob: -6.703354835510254
    7. 'input' → logprob: -8.453354835510254
    8. '   ' → logprob: -9.578354835510254
    9. ' []' → logprob: -9.578354835510254
    10. '[int' → logprob: -9.828354835510254

Token 20: '(input' (ID: 10054)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.026360677555203438
    2. '(input' → logprob: -3.7763607501983643
    3. '(' → logprob: -5.776360511779785
    4. 'map' → logprob: -12.776360511779785
    5. '(int' → logprob: -12.776360511779785
    6. '()' → logprob: -13.401360511779785
    7. '(range' → logprob: -14.276360511779785
    8. '(
' → logprob: -14.401360511779785
    9. '(line' → logprob: -15.276360511779785
    10. ' map' → logprob: -15.276360511779785

Token 21: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.007058830466121435
    2. '()' → logprob: -5.007058620452881
    3. '()]' → logprob: -8.382059097290039
    4. '().' → logprob: -10.132059097290039
    5. '()))' → logprob: -10.257059097290039
    6. '()),' → logprob: -11.132059097290039
    7. ' ())' → logprob: -12.007059097290039
    8. '(' → logprob: -12.507059097290039
    9. '()"' → logprob: -12.882059097290039
    10. '()`' → logprob: -13.132059097290039

Token 22: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8423914313316345
    2. '()' → logprob: -1.0923914909362793
    3. '()]' → logprob: -2.5923914909362793
    4. '())' → logprob: -2.7173914909362793
    5. ')]' → logprob: -3.3423914909362793
    6. '   ' → logprob: -3.5923914909362793
    7. ']' → logprob: -3.9673914909362793
    8. 'for' → logprob: -5.342391490936279
    9. ' for' → logprob: -5.842391490936279
    10. '       ' → logprob: -6.717391490936279

Token 23: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.014539191499352455
    2. ' _' → logprob: -5.0145392417907715
    3. ' ' → logprob: -5.6395392417907715
    4. '_' → logprob: -6.3895392417907715
    5. '(range' → logprob: -6.6395392417907715
    6. ' i' → logprob: -7.5145392417907715
    7. 'range' → logprob: -7.6395392417907715
    8. ' in' → logprob: -9.889538764953613
    9. '(' → logprob: -10.264538764953613
    10. ' (' → logprob: -10.264538764953613

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06237119063735008
    2. 'in' → logprob: -2.812371253967285
    3. 'range' → logprob: -8.062371253967285
    4. '<|end|>' → logprob: -10.312371253967285
    5. ' range' → logprob: -10.812371253967285
    6. ' ' → logprob: -10.937371253967285
    7. 'n' → logprob: -12.062371253967285
    8. '(' → logprob: -12.312371253967285
    9. '<|end|>' → logprob: -14.062371253967285
    10. '	in' → logprob: -14.437371253967285

Token 25: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1604434698820114
    2. ' range' → logprob: -1.9104434251785278
    3. 'grid' → logprob: -9.285443305969238
    4. '(range' → logprob: -10.160443305969238
    5. 'r' → logprob: -11.035443305969238
    6. ' ' → logprob: -11.035443305969238
    7. 'n' → logprob: -11.160443305969238
    8. '[' → logprob: -11.785443305969238
    9. 't' → logprob: -11.910443305969238
    10. ' grid' → logprob: -12.160443305969238

Token 26: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003255719493608922
    2. '(n' → logprob: -8.625325202941895
    3. ' (' → logprob: -9.125325202941895
    4. '(int' → logprob: -12.000325202941895
    5. '4' → logprob: -12.125325202941895
    6. ' ' → logprob: -12.250325202941895
    7. '(len' → logprob: -12.375325202941895
    8. '9' → logprob: -12.750325202941895
    9. '3' → logprob: -13.375325202941895
    10. '(
' → logprob: -13.375325202941895

Token 27: '8' (ID: 23)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.8590622544288635
    2. '5' → logprob: -1.6090621948242188
    3. '9' → logprob: -1.8590621948242188
    4. '6' → logprob: -2.8590621948242188
    5. '10' → logprob: -2.9840621948242188
    6. '3' → logprob: -3.1090621948242188
    7. '8' → logprob: -3.6090621948242188
    8. 'n' → logprob: -3.7340621948242188
    9. ' ' → logprob: -5.484062194824219
    10. '7' → logprob: -5.609062194824219

Token 28: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.052377623040229e-05
    2. ')' → logprob: -10.125070571899414
    3. ']' → logprob: -11.750070571899414
    4. '   ' → logprob: -12.000070571899414
    5. ')]
' → logprob: -12.375070571899414
    6. ' )' → logprob: -13.375070571899414
    7. ')][' → logprob: -13.500070571899414
    8. ')])' → logprob: -13.625070571899414
    9. '+' → logprob: -13.750070571899414
    10. ')],' → logprob: -13.875070571899414

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049518782645463943
    2. '<|end|>' → logprob: -3.6745188236236572
    3. ')' → logprob: -4.799518585205078
    4. ':' → logprob: -5.549518585205078
    5. ' ' → logprob: -6.424518585205078
    6. 'for' → logprob: -6.674518585205078
    7. '```' → logprob: -6.674518585205078
    8. '    ' → logprob: -7.049518585205078
    9. '[' → logprob: -7.174518585205078
    10. ' for' → logprob: -7.174518585205078

Token 30: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6913260817527771
    2. 'r' → logprob: -1.5663261413574219
    3. 'for' → logprob: -2.941326141357422
    4. 'm' → logprob: -3.191326141357422
    5. 's' → logprob: -3.316326141357422
    6. 'c' → logprob: -3.566326141357422
    7. ' for' → logprob: -3.816326141357422
    8. '```' → logprob: -4.191326141357422
    9. 'count' → logprob: -4.191326141357422
    10. 'd' → logprob: -4.941326141357422

Token 31: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.5690089639974758e-05
    2. '()
' → logprob: -11.875015258789062
    3. '().' → logprob: -13.250015258789062
    4. '(' → logprob: -13.375015258789062
    5. '`()' → logprob: -13.500015258789062
    6. '()]' → logprob: -13.875015258789062
    7. '()

' → logprob: -14.125015258789062
    8. '()`' → logprob: -14.125015258789062
    9. '())' → logprob: -14.750015258789062
    10. '()(' → logprob: -15.375015258789062

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18298622965812683
    2. 'for' → logprob: -2.682986259460449
    3. ' for' → logprob: -3.807986259460449
    4. 'r' → logprob: -4.182986259460449
    5. '```' → logprob: -4.307986259460449
    6. 'c' → logprob: -5.182986259460449
    7. 's' → logprob: -5.182986259460449
    8. 'm' → logprob: -5.557986259460449
    9. ' ' → logprob: -5.807986259460449
    10. 'a' → logprob: -5.807986259460449

Token 33: ' x' (ID: 1215)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.989927351474762
    2. 'for' → logprob: -1.4899272918701172
    3. 'm' → logprob: -2.489927291870117
    4. 'c' → logprob: -2.739927291870117
    5. 's' → logprob: -3.114927291870117
    6. 'f' → logprob: -3.614927291870117
    7. 'w' → logprob: -4.239927291870117
    8. 'h' → logprob: -4.239927291870117
    9. 'max' → logprob: -4.239927291870117
    10. 'd' → logprob: -4.489927291870117

Token 34: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.5424715876579285
    2. ',' → logprob: -0.9174715876579285
    3. '=' → logprob: -4.667471408843994
    4. 's' → logprob: -5.417471408843994
    5. ' =' → logprob: -6.667471408843994
    6. ',x' → logprob: -7.542471408843994
    7. '_' → logprob: -7.792471408843994
    8. '0' → logprob: -8.042471885681152
    9. ' ,' → logprob: -8.292471885681152
    10. ',s' → logprob: -8.417471885681152

Token 35: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.131758451461792
    2. ' =' → logprob: -2.381758451461792
    3. ',' → logprob: -3.506758451461792
    4. ')' → logprob: -7.381758689880371
    5. '=input' → logprob: -8.756758689880371
    6. '=int' → logprob: -9.131758689880371
    7. ')=' → logprob: -10.756758689880371
    8. '<|end|>' → logprob: -10.881758689880371
    9. '=line' → logprob: -11.381758689880371
    10. ' ' → logprob: -11.631758689880371

Token 36: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013139050453901291
    2. '(input' → logprob: -4.388139247894287
    3. '('' → logprob: -8.638138771057129
    4. '()' → logprob: -9.138138771057129
    5. '(x' → logprob: -9.138138771057129
    6. ' (' → logprob: -9.888138771057129
    7. '(','' → logprob: -10.013138771057129
    8. 'input' → logprob: -10.388138771057129
    9. '(
' → logprob: -10.513138771057129
    10. '[' → logprob: -11.138138771057129

Token 37: '())' (ID: 3516)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.24701650440692902
    2. '())' → logprob: -1.6220165491104126
    3. '()),' → logprob: -4.747016429901123
    4. '(' → logprob: -5.247016429901123
    5. '(),' → logprob: -5.247016429901123
    6. ')' → logprob: -6.872016429901123
    7. '().' → logprob: -7.872016429901123
    8. '()[' → logprob: -7.997016429901123
    9. '('' → logprob: -9.247016906738281
    10. '()]' → logprob: -9.497016906738281

Token 38: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0992552638053894
    2. ')' → logprob: -2.849255323410034
    3. '<|end|>' → logprob: -3.349255323410034
    4. ',
' → logprob: -7.849255084991455
    5. ',)' → logprob: -8.599255561828613
    6. '+' → logprob: -8.849255561828613
    7. '),' → logprob: -8.974255561828613
    8. ' ,' → logprob: -9.224255561828613
    9. ',y' → logprob: -9.474255561828613
    10. '<|end|>' → logprob: -9.474255561828613

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036036325618624687
    2. ' ' → logprob: -5.628603458404541
    3. '<|end|>' → logprob: -13.2536039352417
    4. '2' → logprob: -14.2536039352417
    5. '[' → logprob: -15.5036039352417
    6. '0' → logprob: -15.6286039352417
    7. ' ' → logprob: -15.8786039352417
    8. '`' → logprob: -16.441102981567383
    9. 's' → logprob: -16.441102981567383
    10. '<|end|>' → logprob: -16.503602981567383

Token 40: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032076577190309763
    2. ',y' → logprob: -6.753207683563232
    3. '<|end|>' → logprob: -6.878207683563232
    4. ' ,' → logprob: -8.378207206726074
    5. ',x' → logprob: -8.753207206726074
    6. ',input' → logprob: -8.753207206726074
    7. ')' → logprob: -10.003207206726074
    8. ',#' → logprob: -10.003207206726074
    9. ',
' → logprob: -10.378207206726074
    10. ',n' → logprob: -10.503207206726074

Token 41: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00033439300023019314
    2. '[input' → logprob: -8.250334739685059
    3. '(' → logprob: -9.875334739685059
    4. 'input' → logprob: -11.125334739685059
    5. '(user' → logprob: -13.500334739685059
    6. '=input' → logprob: -13.500334739685059
    7. '(x' → logprob: -14.125334739685059
    8. '<input' → logprob: -14.125334739685059
    9. ' (' → logprob: -14.375334739685059
    10. ',input' → logprob: -14.750334739685059

Token 42: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.04490900784730911
    2. '()' → logprob: -3.1699090003967285
    3. '()-' → logprob: -6.4199090003967285
    4. ')' → logprob: -8.294909477233887
    5. '()]' → logprob: -12.169909477233887
    6. '())
' → logprob: -12.544909477233887
    7. '()[' → logprob: -12.919909477233887
    8. '()))' → logprob: -12.919909477233887
    9. '(' → logprob: -13.419909477233887
    10. ' ())' → logprob: -13.419909477233887

Token 43: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40667396783828735
    2. '<|end|>' → logprob: -1.1566739082336426
    3. '   ' → logprob: -5.156673908233643
    4. '<|end|>' → logprob: -5.656673908233643
    5. ':' → logprob: -6.281673908233643
    6. ',' → logprob: -6.531673908233643
    7. '
' → logprob: -6.656673908233643
    8. '\n' → logprob: -7.156673908233643
    9. ' ' → logprob: -7.156673908233643
    10. '#' → logprob: -7.281673908233643

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -13.250003814697266
    3. '0' → logprob: -13.375003814697266
    4. '2' → logprob: -15.625003814697266
    5. '<|end|>' → logprob: -15.875003814697266
    6. '```' → logprob: -16.375003814697266
    7. '-' → logprob: -18.000003814697266
    8. '<|end|>' → logprob: -18.750003814697266
    9. '   ' → logprob: -19.562503814697266
    10. '' → logprob: -19.687503814697266

Token 45: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7312407493591309
    2. '<|end|>' → logprob: -1.4812407493591309
    3. '
' → logprob: -1.8562407493591309
    4. '   ' → logprob: -2.981240749359131
    5. ')' → logprob: -3.356240749359131
    6. '\n' → logprob: -4.356240749359131
    7. ':
' → logprob: -4.481240749359131
    8. ' ' → logprob: -4.731240749359131
    9. '#' → logprob: -5.356240749359131
    10. '```' → logprob: -6.106240749359131

Token 47: ' from' (ID: 591)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5742303729057312
    2. '<|end|>' → logprob: -1.699230432510376
    3. '
' → logprob: -2.199230432510376
    4. ')' → logprob: -2.824230432510376
    5. ' ' → logprob: -3.574230432510376
    6. ',' → logprob: -3.824230432510376
    7. '#' → logprob: -4.949230194091797
    8. ':
' → logprob: -5.324230194091797
    9. '\n' → logprob: -5.574230194091797
    10. '.' → logprob: -5.824230194091797

Token 48: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.024145636707544327
    2. 'collections' → logprob: -4.524145603179932
    3. ' itertools' → logprob: -5.024145603179932
    4. ' copy' → logprob: -5.899145603179932
    5. ' math' → logprob: -6.024145603179932
    6. ' sys' → logprob: -7.649145603179932
    7. ' queue' → logprob: -8.27414608001709
    8. '_' → logprob: -8.64914608001709
    9. ' heap' → logprob: -9.39914608001709
    10. ' random' → logprob: -9.52414608001709

Token 49: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.012740714475512505
    2. 'import' → logprob: -4.387740612030029
    3. ' defaultdict' → logprob: -8.887741088867188
    4. ' ' → logprob: -9.512741088867188
    5. ' deque' → logprob: -12.262741088867188
    6. ' ' → logprob: -12.637741088867188
    7. '	import' → logprob: -13.012741088867188
    8. '```' → logprob: -13.387741088867188
    9. '.' → logprob: -13.637741088867188
    10. 'deque' → logprob: -13.887741088867188

Token 50: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.01475145760923624
    2. 'deque' → logprob: -4.514751434326172
    3. ' defaultdict' → logprob: -5.639751434326172
    4. ' Counter' → logprob: -9.139751434326172
    5. ' counter' → logprob: -11.389751434326172
    6. ' de' → logprob: -11.389751434326172
    7. 'de' → logprob: -11.889751434326172
    8. 'default' → logprob: -13.389751434326172
    9. 'Counter' → logprob: -13.514751434326172
    10. ' dequeue' → logprob: -14.014751434326172

Token 51: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1390579491853714
    2. 'd' → logprob: -2.5140578746795654
    3. 'deque' → logprob: -5.0140581130981445
    4. '   ' → logprob: -5.2640581130981445
    5. 'queue' → logprob: -5.2640581130981445
    6. 'q' → logprob: -5.2640581130981445
    7. '    
' → logprob: -5.5140581130981445
    8. 'dq' → logprob: -5.7640581130981445
    9. ' 
' → logprob: -6.0140581130981445
    10. '<|end|>' → logprob: -6.1390581130981445

Token 52: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8429122567176819
    2. '
' → logprob: -0.8429122567176819
    3. '<|end|>' → logprob: -3.217912197113037
    4. 'q' → logprob: -3.967912197113037
    5. 'n' → logprob: -4.092912197113037
    6. 'deque' → logprob: -4.467912197113037
    7. 'b' → logprob: -4.967912197113037
    8. ' 
' → logprob: -5.092912197113037
    9. '' → logprob: -5.342912197113037
    10. '   ' → logprob: -5.592912197113037

Token 53: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.34894275665283203
    2. '   ' → logprob: -2.348942756652832
    3. 'd' → logprob: -2.598942756652832
    4. 'queue' → logprob: -2.848942756652832
    5. 'dq' → logprob: -3.848942756652832
    6. ' q' → logprob: -4.598942756652832
    7. ' queue' → logprob: -4.848942756652832
    8. 'dist' → logprob: -5.473942756652832
    9. 'visited' → logprob: -5.723942756652832
    10. 'Q' → logprob: -5.723942756652832

Token 54: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931617259979248
    2. ' =' → logprob: -0.6931617259979248
    3. '.' → logprob: -11.818161964416504
    4. ' ' → logprob: -13.818161964416504
    5. '=[]' → logprob: -13.943161964416504
    6. ' =
' → logprob: -14.193161964416504
    7. '.=' → logprob: -14.943161964416504
    8. 'u' → logprob: -14.943161964416504
    9. ' =)' → logprob: -14.943161964416504
    10. ' ' → logprob: -15.068161964416504

Token 55: 'deque' (ID: 143563)
  Prédit: 'deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.00012523093027994037
    2. ' deque' → logprob: -9.00012493133545
    3. 'de' → logprob: -13.50012493133545
    4. 'Deque' → logprob: -16.125125885009766
    5. 'collections' → logprob: -16.250125885009766
    6. 'dq' → logprob: -16.500125885009766
    7. '   ' → logprob: -18.375125885009766
    8. 'd' → logprob: -18.625125885009766
    9. '(de' → logprob: -19.750125885009766
    10. ' ' → logprob: -20.125125885009766

Token 56: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06245597451925278
    2. '([(' → logprob: -3.312455892562866
    3. '([]' → logprob: -4.062456130981445
    4. '(' → logprob: -5.187456130981445
    5. '([' → logprob: -6.687456130981445
    6. '((' → logprob: -10.937456130981445
    7. '()
' → logprob: -11.187456130981445
    8. '[(' → logprob: -11.562456130981445
    9. '([
' → logprob: -12.062456130981445
    10. '([[' → logprob: -12.312456130981445

Token 57: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005618496797978878
    2. '(q' → logprob: -5.505618572235107
    3. '[' → logprob: -8.00561809539795
    4. '(
' → logprob: -8.13061809539795
    5. '[(' → logprob: -8.75561809539795
    6. '('' → logprob: -8.75561809539795
    7. 'q' → logprob: -9.00561809539795
    8. ' (' → logprob: -9.00561809539795
    9. '((' → logprob: -9.50561809539795
    10. '([(' → logprob: -9.50561809539795

Token 58: ' if' (ID: 538)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5421108603477478
    2. 'q' → logprob: -1.1671109199523926
    3. ' (' → logprob: -2.7921109199523926
    4. '(q' → logprob: -3.9171109199523926
    5. '   ' → logprob: -5.292110919952393
    6. ')' → logprob: -5.542110919952393
    7. '[' → logprob: -5.667110919952393
    8. ' q' → logprob: -5.792110919952393
    9. '[(' → logprob: -5.917110919952393
    10. '()' → logprob: -6.792110919952393

Token 59: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.1146760806441307
    2. 'grid' → logprob: -2.989675998687744
    3. ' (' → logprob: -3.614675998687744
    4. ' ' → logprob: -4.739675998687744
    5. '(grid' → logprob: -4.739675998687744
    6. '(' → logprob: -5.239675998687744
    7. ' not' → logprob: -5.739675998687744
    8. ' x' → logprob: -5.739675998687744
    9. 'x' → logprob: -7.864675998687744
    10. ' y' → logprob: -7.864675998687744

Token 60: '[y' (ID: 34551)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.01428126823157072
    2. '[y' → logprob: -4.264281272888184
    3. '[' → logprob: -9.764281272888184
    4. '[q' → logprob: -11.264281272888184
    5. '[t' → logprob: -11.389281272888184
    6. '```' → logprob: -12.139281272888184
    7. 'x' → logprob: -12.389281272888184
    8. '[s' → logprob: -12.639281272888184
    9. '[n' → logprob: -12.764281272888184
    10. ' [' → logprob: -12.764281272888184

Token 61: '][' (ID: 2696)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.4394661784172058
    2. '[x' → logprob: -1.4394662380218506
    3. '[' → logprob: -3.0644662380218506
    4. '==' → logprob: -3.3144662380218506
    5. '][' → logprob: -3.8144662380218506
    6. ']==' → logprob: -5.8144659996032715
    7. ']' → logprob: -5.8144659996032715
    8. '[q' → logprob: -6.5644659996032715
    9. '=='' → logprob: -6.9394659996032715
    10. '[t' → logprob: -7.0644659996032715

Token 62: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00011927806917810813
    2. ''x' → logprob: -9.62511920928955
    3. ' x' → logprob: -10.00011920928955
    4. ']' → logprob: -13.12511920928955
    5. ' ' → logprob: -13.37511920928955
    6. '"x' → logprob: -13.75011920928955
    7. '0' → logprob: -14.37511920928955
    8. '	x' → logprob: -14.37511920928955
    9. '   ' → logprob: -14.87511920928955
    10. ''' → logprob: -15.37511920928955

Token 63: ']=='' (ID: 71177)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9365856647491455
    2. ']==' → logprob: -1.1865856647491455
    3. '==' → logprob: -1.8115856647491455
    4. ']=='' → logprob: -2.6865856647491455
    5. '=='' → logprob: -3.6865856647491455
    6. '!=' → logprob: -4.436585426330566
    7. ' ==' → logprob: -4.561585426330566
    8. ']!=' → logprob: -5.311585426330566
    9. ' ]' → logprob: -5.436585426330566
    10. '!='' → logprob: -6.186585426330566

Token 64: '1' (ID: 16)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6495174169540405
    2. '.' → logprob: -1.8995174169540405
    3. 'B' → logprob: -3.02451753616333
    4. 'W' → logprob: -3.14951753616333
    5. '*' → logprob: -3.39951753616333
    6. 'R' → logprob: -4.02451753616333
    7. 'S' → logprob: -4.14951753616333
    8. 'P' → logprob: -4.14951753616333
    9. 'O' → logprob: -4.39951753616333
    10. 'K' → logprob: -4.39951753616333

Token 65: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06981725990772247
    2. '':' → logprob: -3.069817304611206
    3. ' ':' → logprob: -4.569817066192627
    4. ''' → logprob: -5.194817066192627
    5. ' :' → logprob: -6.069817066192627
    6. '):' → logprob: -6.944817066192627
    7. ')' → logprob: -7.319817066192627
    8. ' '' → logprob: -7.444817066192627
    9. ''):' → logprob: -8.819817543029785
    10. ' ):' → logprob: -9.194817543029785

Token 66: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1449224203824997
    2. '   ' → logprob: -2.7699224948883057
    3. '       ' → logprob: -3.3949224948883057
    4. '	q' → logprob: -4.894922256469727
    5. '<|end|>' → logprob: -5.019922256469727
    6. ':q' → logprob: -5.269922256469727
    7. ' q' → logprob: -5.644922256469727
    8. 'q' → logprob: -5.644922256469727
    9. ':
' → logprob: -5.769922256469727
    10. '.' → logprob: -6.019922256469727

Token 67: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.4197109043598175
    2. ' continue' → logprob: -2.169710874557495
    3. 'q' (adapté à ' q') → logprob: -2.294710874557495
    4. ' 
' → logprob: -3.169710874557495
    5. '    ' → logprob: -3.919710874557495
    6. '   ' → logprob: -4.044711112976074
    7. '       ' → logprob: -4.669711112976074
    8. '\n' → logprob: -4.669711112976074
    9. ' ' → logprob: -4.794711112976074
    10. '\' → logprob: -5.669711112976074

Token 68: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.4745651185512543
    2. '.' → logprob: -0.9745651483535767
    3. '.extend' → logprob: -8.724565505981445
    4. '.put' → logprob: -9.099565505981445
    5. '.enqueue' → logprob: -9.349565505981445
    6. '.add' → logprob: -9.599565505981445
    7. '.push' → logprob: -10.724565505981445
    8. '.=' → logprob: -11.474565505981445
    9. '.app' → logprob: -12.599565505981445
    10. '.clear' → logprob: -13.349565505981445

Token 69: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.004649776499718428
    2. '(' → logprob: -5.379649639129639
    3. '(((' → logprob: -11.254650115966797
    4. '([' → logprob: -12.254650115966797
    5. '([(' → logprob: -12.879650115966797
    6. '(
' → logprob: -13.129650115966797
    7. '(('' → logprob: -13.129650115966797
    8. '(([' → logprob: -13.504650115966797
    9. '(()' → logprob: -14.129650115966797
    10. '(y' → logprob: -14.129650115966797

Token 70: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11368749290704727
    2. 'y' → logprob: -2.238687515258789
    3. '0' → logprob: -7.613687515258789
    4. ' x' → logprob: -8.863687515258789
    5. ' y' → logprob: -9.113687515258789
    6. 't' → logprob: -9.988687515258789
    7. '(x' → logprob: -10.363687515258789
    8. '1' → logprob: -11.738687515258789
    9. '(y' → logprob: -11.738687515258789
    10. '(' → logprob: -12.363687515258789

Token 71: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.22606247663497925
    2. ',' → logprob: -1.601062536239624
    3. ' ,' → logprob: -7.851062297821045
    4. '+' → logprob: -9.476062774658203
    5. ',q' → logprob: -9.726062774658203
    6. '-' → logprob: -9.851062774658203
    7. ',j' → logprob: -11.476062774658203
    8. ',n' → logprob: -11.851062774658203
    9. ',x' → logprob: -12.101062774658203
    10. ',t' → logprob: -12.351062774658203

Token 72: '))
' (ID: 2210)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10162171721458435
    2. '))' → logprob: -2.351621627807617
    3. ' ,' → logprob: -7.726621627807617
    4. ' ))' → logprob: -8.226621627807617
    5. ')' → logprob: -8.851621627807617
    6. '))
' → logprob: -8.851621627807617
    7. ',q' → logprob: -9.351621627807617
    8. '0' → logprob: -9.476621627807617
    9. '   ' → logprob: -10.601621627807617
    10. '),' → logprob: -10.851621627807617

Token 73: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' exploded' (ID: 93826)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33685171604156494
    2. '   ' → logprob: -2.2118515968322754
    3. ')' → logprob: -2.5868515968322754
    4. '<|end|>' → logprob: -2.9618515968322754
    5. '\n' → logprob: -4.586851596832275
    6. ' ' → logprob: -4.836851596832275
    7. ',' → logprob: -5.086851596832275
    8. '```' → logprob: -5.586851596832275
    9. '    
' → logprob: -5.836851596832275
    10. '.' → logprob: -5.961851596832275

Token 75: '=[[' (ID: 112637)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6199498176574707
    2. ' =' → logprob: -0.8699498176574707
    3. '=[]' → logprob: -4.119949817657471
    4. '_positions' → logprob: -4.994949817657471
    5. '_' → logprob: -5.619949817657471
    6. '.append' → logprob: -5.744949817657471
    7. '=set' → logprob: -5.994949817657471
    8. '.add' → logprob: -6.244949817657471
    9. '_cells' → logprob: -6.244949817657471
    10. '.' → logprob: -6.869949817657471

Token 76: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0005967585020698607
    2. '0' → logprob: -7.750596523284912
    3. ' False' → logprob: -8.75059700012207
    4. 'True' → logprob: -12.00059700012207
    5. '(False' → logprob: -14.62559700012207
    6. '   ' → logprob: -15.25059700012207
    7. '-' → logprob: -15.62559700012207
    8. 'F' → logprob: -15.75059700012207
    9. '[' → logprob: -16.25059700012207
    10. ']' → logprob: -16.25059700012207

Token 77: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.564872145652771
    2. ' for' → logprob: -1.314872145652771
    3. 'for' → logprob: -2.0648722648620605
    4. ']*' → logprob: -3.8148722648620605
    5. '][' → logprob: -4.4398722648620605
    6. '   ' → logprob: -7.4398722648620605
    7. ']*(' → logprob: -7.4398722648620605
    8. ')' → logprob: -7.8148722648620605
    9. '[' → logprob: -7.8148722648620605
    10. '	for' → logprob: -9.564871788024902

Token 78: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0008060562540777028
    2. '10' → logprob: -7.500805854797363
    3. ' ' → logprob: -8.500805854797363
    4. '9' → logprob: -10.625805854797363
    5. '```' → logprob: -12.125805854797363
    6. '12' → logprob: -12.938305854797363
    7. '   ' → logprob: -13.063305854797363
    8. '(' → logprob: -13.188305854797363
    9. '16' → logprob: -13.250805854797363
    10. '7' → logprob: -13.250805854797363

Token 79: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3137570321559906
    2. 'for' → logprob: -1.313757061958313
    3. '   ' → logprob: -8.563756942749023
    4. ')' → logprob: -9.063756942749023
    5. ']' → logprob: -9.688756942749023
    6. '```' → logprob: -10.063756942749023
    7. '	for' → logprob: -10.438756942749023
    8. ' ' → logprob: -10.438756942749023
    9. '    ' → logprob: -12.313756942749023
    10. '8' → logprob: -12.688756942749023

Token 80: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.693714439868927
    2. ' _' → logprob: -0.693714439868927
    3. ' range' → logprob: -7.568714618682861
    4. ' ' → logprob: -10.943714141845703
    5. '_range' → logprob: -10.943714141845703
    6. '<|end|>' → logprob: -11.568714141845703
    7. 'range' → logprob: -12.318714141845703
    8. ' in' → logprob: -15.318714141845703
    9. '<|end|>' → logprob: -15.318714141845703
    10. ' i' → logprob: -16.443714141845703

Token 81: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.41109755635261536
    2. 'in' → logprob: -1.411097526550293
    3. 'range' → logprob: -2.536097526550293
    4. ' range' → logprob: -4.286097526550293
    5. ' ' → logprob: -8.911097526550293
    6. ' _' → logprob: -9.411097526550293
    7. '_' → logprob: -10.411097526550293
    8. '<|end|>' → logprob: -11.661097526550293
    9. ' xrange' → logprob: -12.536097526550293
    10. '  ' → logprob: -12.786097526550293

Token 82: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14317074418067932
    2. ' range' → logprob: -2.0181708335876465
    3. '_' → logprob: -7.6431708335876465
    4. '_range' → logprob: -11.643170356750488
    5. '[' → logprob: -12.643170356750488
    6. ' _' → logprob: -13.518170356750488
    7. '	range' → logprob: -13.893170356750488
    8. ' ' → logprob: -14.268170356750488
    9. ' xrange' → logprob: -15.143170356750488
    10. '(range' → logprob: -15.268170356750488

Token 83: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00020020268857479095
    2. '8' → logprob: -8.625200271606445
    3. ' (' → logprob: -11.000200271606445
    4. 'range' → logprob: -13.375200271606445
    5. '   ' → logprob: -14.000200271606445
    6. ')' → logprob: -14.750200271606445
    7. ']' → logprob: -15.375200271606445
    8. ' range' → logprob: -15.625200271606445
    9. ' ' → logprob: -15.750200271606445
    10. '(
' → logprob: -15.875200271606445

Token 84: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -4.751746746478602e-05
    2. ' ' → logprob: -10.25004768371582
    3. ')' → logprob: -12.37504768371582
    4. '   ' → logprob: -12.93754768371582
    5. '```' → logprob: -13.81254768371582
    6. ']' → logprob: -14.56254768371582
    7. '  ' → logprob: -15.00004768371582
    8. '1' → logprob: -15.18754768371582
    9. '9' → logprob: -15.50004768371582
    10. '(' → logprob: -15.56254768371582

Token 85: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00035536551149562
    2. ')' → logprob: -8.37535572052002
    3. ']' → logprob: -9.25035572052002
    4. ')]
' → logprob: -11.37535572052002
    5. ')])' → logprob: -12.50035572052002
    6. ' )' → logprob: -12.62535572052002
    7. '])]' → logprob: -13.00035572052002
    8. '')]' → logprob: -13.37535572052002
    9. ')],' → logprob: -13.75035572052002
    10. '   ' → logprob: -13.87535572052002

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19478058815002441
    2. '<|end|>' → logprob: -1.9447805881500244
    3. '    
' → logprob: -4.194780349731445
    4. '
' → logprob: -5.944780349731445
    5. '<|end|>' → logprob: -6.194780349731445
    6. '```' → logprob: -6.319780349731445
    7. ' 
' → logprob: -6.569780349731445
    8. ' ' → logprob: -6.694780349731445
    9. '       ' → logprob: -6.944780349731445
    10. '[' → logprob: -7.069780349731445

Token 87: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1385367512702942
    2. '	while' → logprob: -2.6385366916656494
    3. ' while' → logprob: -4.3885369300842285
    4. 'while' (adapté à ' while') → logprob: -4.5135369300842285
    5. '```' → logprob: -5.0135369300842285
    6. '<|end|>' → logprob: -5.1385369300842285
    7. 'expl' → logprob: -5.2635369300842285
    8. '    
' → logprob: -5.8885369300842285
    9. '	
' → logprob: -6.3885369300842285
    10. ' ' → logprob: -6.5135369300842285

Token 88: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5765946507453918
    2. ' q' → logprob: -0.8265946507453918
    3. ' len' → logprob: -7.826594829559326
    4. 'len' → logprob: -9.076594352722168
    5. '   ' → logprob: -9.576594352722168
    6. ' ' → logprob: -11.201594352722168
    7. ' not' → logprob: -11.451594352722168
    8. '	q' → logprob: -11.451594352722168
    9. 'True' → logprob: -11.701594352722168
    10. ' True' → logprob: -11.701594352722168

Token 89: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003252692986279726
    2. 'and' → logprob: -6.6282525062561035
    3. '>:' → logprob: -7.3782525062561035
    4. ' and' → logprob: -7.5032525062561035
    5. '):' → logprob: -7.5032525062561035
    6. ':
' → logprob: -10.503252983093262
    7. ':not' → logprob: -10.503252983093262
    8. '.' → logprob: -10.628252983093262
    9. ':**' → logprob: -11.003252983093262
    10. '```' → logprob: -11.128252983093262

Token 90: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5315312147140503
    2. ',' → logprob: -1.5315312147140503
    3. '   ' → logprob: -2.03153133392334
    4. '<|end|>' → logprob: -3.40653133392334
    5. '    ' → logprob: -4.53153133392334
    6. ',q' → logprob: -5.28153133392334
    7. '(x' → logprob: -6.03153133392334
    8. ' (' → logprob: -6.40653133392334
    9. ' ,' → logprob: -6.40653133392334
    10. ',x' → logprob: -6.53153133392334

Token 91: ' cx' (ID: 44448)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0006090328097343445
    2. ' x' → logprob: -7.500608921051025
    3. 'qx' → logprob: -10.500609397888184
    4. '   ' → logprob: -11.750609397888184
    5. 'cx' (adapté à ' cx') → logprob: -12.000609397888184
    6. '(x' → logprob: -12.250609397888184
    7. '```' → logprob: -13.250609397888184
    8. 'q' → logprob: -13.625609397888184
    9. ')x' → logprob: -13.625609397888184
    10. 'tx' → logprob: -13.750609397888184

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0071030971594154835
    2. ',c' → logprob: -5.007102966308594
    3. ',y' → logprob: -8.007102966308594
    4. ' ,' → logprob: -10.507102966308594
    5. ',C' → logprob: -11.382102966308594
    6. ',q' → logprob: -12.257102966308594
    7. '_,' → logprob: -12.757102966308594
    8. ',d' → logprob: -13.507102966308594
    9. ',x' → logprob: -13.507102966308594
    10. ',j' → logprob: -13.757102966308594

Token 93: 'cy' (ID: 4523)
  Prédit: 'cy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -6.153795766294934e-06
    2. ' cy' → logprob: -12.250005722045898
    3. '.cy' → logprob: -14.125005722045898
    4. 'cyj' → logprob: -14.375005722045898
    5. '   ' → logprob: -17.3750057220459
    6. 'cych' → logprob: -18.0000057220459
    7. ' ' → logprob: -18.1250057220459
    8. 'cycles' → logprob: -19.5000057220459
    9. 'qy' → logprob: -19.7500057220459
    10. '    ' → logprob: -19.8750057220459

Token 94: '=q' (ID: 151306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03421103209257126
    2. ' =' → logprob: -3.7842109203338623
    3. '=q' → logprob: -4.534211158752441
    4. ')=' → logprob: -10.034211158752441
    5. ')' → logprob: -10.034211158752441
    6. ',q' → logprob: -11.034211158752441
    7. '=query' → logprob: -11.159211158752441
    8. ',' → logprob: -11.284211158752441
    9. '=input' → logprob: -11.784211158752441
    10. '=
' → logprob: -12.784211158752441

Token 95: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0008108171750791371
    2. '.pop' → logprob: -7.125810623168945
    3. '.' → logprob: -12.125810623168945
    4. ' .' → logprob: -15.125810623168945
    5. 'opleft' → logprob: -15.250810623168945
    6. '   ' → logprob: -15.875810623168945
    7. '.append' → logprob: -16.250810623168945
    8. 'p' → logprob: -16.250810623168945
    9. ',p' → logprob: -16.375810623168945
    10. '.dequeue' → logprob: -17.250810623168945

Token 96: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.008702501654624939
    2. 'op' → logprob: -4.758702278137207
    3. 'ople' → logprob: -9.633702278137207
    4. 'opl' → logprob: -10.758702278137207
    5. 'opup' → logprob: -14.633702278137207
    6. 'opf' → logprob: -15.383702278137207
    7. 'oplevel' → logprob: -15.383702278137207
    8. 'opt' → logprob: -15.758702278137207
    9. 'o' → logprob: -17.133703231811523
    10. '```' → logprob: -17.508703231811523

Token 97: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0031838975846767426
    2. '()
' → logprob: -5.753183841705322
    3. '()
' → logprob: -12.87818431854248
    4. '()

' → logprob: -13.62818431854248
    5. '()`' → logprob: -13.87818431854248
    6. '(' → logprob: -14.00318431854248
    7. '()]' → logprob: -16.003183364868164
    8. '()\' → logprob: -16.128183364868164
    9. '();' → logprob: -16.253183364868164
    10. '())' → logprob: -16.378183364868164

Token 98: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03924494981765747
    2. 'expl' → logprob: -3.9142448902130127
    3. ' exploded' → logprob: -5.289245128631592
    4. '<|end|>' → logprob: -5.289245128631592
    5. '
' → logprob: -5.664245128631592
    6. '       ' → logprob: -6.539245128631592
    7. ' if' → logprob: -7.039245128631592
    8. '    
' → logprob: -7.289245128631592
    9. 'if' → logprob: -7.539245128631592
    10. ' for' → logprob: -7.539245128631592

Token 99: ' if' (ID: 538)
  Prédit: 'expl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expl' → logprob: -0.03436020761728287
    2. ' exploded' → logprob: -3.90936017036438
    3. 'if' (adapté à ' if') → logprob: -5.409360408782959
    4. '   ' → logprob: -5.784360408782959
    5. '       ' → logprob: -5.909360408782959
    6. 'for' → logprob: -6.034360408782959
    7. ' for' → logprob: -7.909360408782959
    8. ' if' → logprob: -8.2843599319458
    9. '           ' → logprob: -8.5343599319458
    10. 'explode' → logprob: -9.4093599319458

Token 100: ' exploded' (ID: 93826)
  Prédit: 'expl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expl' → logprob: -0.06239191070199013
    2. ' exploded' → logprob: -3.312391996383667
    3. 'not' → logprob: -4.062391757965088
    4. ' not' → logprob: -5.312391757965088
    5. '0' → logprob: -7.562391757965088
    6. 'grid' → logprob: -8.062392234802246
    7. 'cy' → logprob: -8.062392234802246
    8. 'cx' → logprob: -8.437392234802246
    9. 'ex' → logprob: -8.937392234802246
    10. '   ' → logprob: -9.437392234802246

Token 101: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.8889261304575484e-06
    2. ' [' → logprob: -13.250003814697266
    3. '```' → logprob: -13.875003814697266
    4. 'cy' → logprob: -14.750003814697266
    5. '[c' → logprob: -15.125003814697266
    6. '][' → logprob: -16.000003814697266
    7. '   ' → logprob: -16.250003814697266
    8. '[y' → logprob: -16.250003814697266
    9. '[cur' → logprob: -16.500003814697266
    10. '[
' → logprob: -17.375003814697266

Token 102: 'cy' (ID: 4523)
  Prédit: 'cy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -1.0325924449716695e-05
    2. '[' → logprob: -12.00001049041748
    3. ' cy' → logprob: -12.50001049041748
    4. '   ' → logprob: -15.62501049041748
    5. 'cyj' → logprob: -15.75001049041748
    6. 'cx' → logprob: -16.125009536743164
    7. ' ' → logprob: -16.750009536743164
    8. '.cy' → logprob: -17.000009536743164
    9. 'cpy' → logprob: -18.750009536743164
    10. 'c' → logprob: -19.000009536743164

Token 103: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.012694230303168297
    2. '[' → logprob: -4.387694358825684
    3. ']' → logprob: -9.012694358825684
    4. ' ][' → logprob: -10.137694358825684
    5. '[c' → logprob: -11.887694358825684
    6. ']][' → logprob: -12.512694358825684
    7. '   ' → logprob: -12.762694358825684
    8. '[cur' → logprob: -13.512694358825684
    9. ''][' → logprob: -13.512694358825684
    10. '       ' → logprob: -13.762694358825684

Token 104: 'cx' (ID: 47207)
  Prédit: 'cx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -1.3782830137643032e-05
    2. ' cx' → logprob: -11.25001335144043
    3. '(cx' → logprob: -14.37501335144043
    4. '.cx' → logprob: -16.00001335144043
    5. 'cy' → logprob: -19.37501335144043
    6. '   ' → logprob: -19.75001335144043
    7. ' ' → logprob: -20.62501335144043
    8. 'x' → logprob: -20.62501335144043
    9. 'Cx' → logprob: -21.37501335144043
    10. '```' → logprob: -21.87501335144043

Token 105: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.09100894629955292
    2. ']==' → logprob: -3.2160089015960693
    3. ']:
' → logprob: -3.7160089015960693
    4. ']' → logprob: -3.8410089015960693
    5. ' ]' → logprob: -7.341009140014648
    6. ']=' → logprob: -8.716009140014648
    7. ']!=' → logprob: -9.341009140014648
    8. ']:
' → logprob: -9.591009140014648
    9. ']:

' → logprob: -10.841009140014648
    10. '==' → logprob: -11.091009140014648

Token 106: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.860379159450531
    2. '           ' → logprob: -0.860379159450531
    3. ' continue' → logprob: -1.9853792190551758
    4. 'continue' → logprob: -4.235379219055176
    5. '	continue' → logprob: -6.735379219055176
    6. '_continue' → logprob: -8.110379219055176
    7. '```' → logprob: -8.110379219055176
    8. '   ' → logprob: -8.485379219055176
    9. '               ' → logprob: -9.610379219055176
    10. '	       ' → logprob: -10.235379219055176

Token 107: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5945698022842407
    2. ' continue' → logprob: -1.0945698022842407
    3. 'continue' (adapté à ' continue') → logprob: -2.219569683074951
    4. '	continue' → logprob: -5.594569683074951
    5. '           ' → logprob: -7.094569683074951
    6. '_continue' → logprob: -9.09457015991211
    7. '   ' → logprob: -9.46957015991211
    8. '
' → logprob: -10.21957015991211
    9. '```' → logprob: -10.59457015991211
    10. '               ' → logprob: -10.59457015991211

Token 108: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009404820390045643
    2. '
' → logprob: -5.38440465927124
    3. 'expl' → logprob: -6.25940465927124
    4. '   ' → logprob: -6.38440465927124
    5. '        
' → logprob: -7.25940465927124
    6. '<|end|>' → logprob: -8.634405136108398
    7. '```' → logprob: -9.134405136108398
    8. '    
' → logprob: -9.759405136108398
    9. '           ' → logprob: -10.259405136108398
    10. ' exploded' → logprob: -11.134405136108398

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007354128640145063
    2. 'expl' → logprob: -5.007354259490967
    3. '        
' → logprob: -8.507353782653809
    4. '   ' → logprob: -8.507353782653809
    5. '
' → logprob: -9.132353782653809
    6. '```' → logprob: -10.257353782653809
    7. '<|end|>' → logprob: -10.507353782653809
    8. '           ' → logprob: -11.007353782653809
    9. ' exploded' → logprob: -11.382353782653809
    10. 'ex' → logprob: -11.757353782653809

Token 110: ' exploded' (ID: 93826)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37046366930007935
    2. 'expl' → logprob: -1.3704636096954346
    3. ' exploded' → logprob: -2.9954636096954346
    4. '   ' → logprob: -5.245463848114014
    5. '           ' → logprob: -8.995463371276855
    6. 'ex' → logprob: -10.370463371276855
    7. '
' → logprob: -10.495463371276855
    8. ' expl' → logprob: -10.995463371276855
    9. '```' → logprob: -10.995463371276855
    10. ' ' → logprob: -10.995463371276855

Token 111: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1041145626222715e-05
    2. '][' → logprob: -11.500011444091797
    3. '```' → logprob: -15.250011444091797
    4. ')[' → logprob: -15.500011444091797
    5. ' [' → logprob: -15.500011444091797
    6. ']' → logprob: -17.500011444091797
    7. '>[' → logprob: -17.750011444091797
    8. '}[' → logprob: -17.750011444091797
    9. '   ' → logprob: -17.875011444091797
    10. '
' → logprob: -18.125011444091797

Token 112: 'cy' (ID: 4523)
  Prédit: 'cy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.0004907185211777687
    2. '[' → logprob: -7.625490665435791
    3. '   ' → logprob: -13.25049114227295
    4. ' cy' → logprob: -14.62549114227295
    5. '][' → logprob: -15.75049114227295
    6. ' ' → logprob: -16.125490188598633
    7. ']' → logprob: -16.375490188598633
    8. 'cyj' → logprob: -17.375490188598633
    9. '       ' → logprob: -17.500490188598633
    10. '.cy' → logprob: -18.000490188598633

Token 113: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00012976066500414163
    2. '[' → logprob: -9.125129699707031
    3. ']' → logprob: -11.250129699707031
    4. ' ][' → logprob: -11.875129699707031
    5. '       ' → logprob: -15.375129699707031
    6. '```' → logprob: -15.500129699707031
    7. '   ' → logprob: -15.625129699707031
    8. ']][' → logprob: -16.12512969970703
    9. ''][' → logprob: -16.87512969970703
    10. '"][' → logprob: -16.87512969970703

Token 114: 'cx' (ID: 47207)
  Prédit: 'cx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -1.6240566083070007e-06
    2. ' cx' → logprob: -13.875001907348633
    3. '(cx' → logprob: -14.750001907348633
    4. '.cx' → logprob: -15.875001907348633
    5. 'cy' → logprob: -17.125001907348633
    6. ']' → logprob: -19.250001907348633
    7. 'x' → logprob: -19.500001907348633
    8. '   ' → logprob: -20.000001907348633
    9. '[' → logprob: -20.250001907348633
    10. '```' → logprob: -20.375001907348633

Token 115: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.10021691024303436
    2. ']' → logprob: -2.350216865539551
    3. '=True' → logprob: -12.35021686553955
    4. ' ]' → logprob: -12.85021686553955
    5. ']
' → logprob: -13.47521686553955
    6. '']=' → logprob: -14.97521686553955
    7. ']==' → logprob: -15.22521686553955
    8. ']=(' → logprob: -15.35021686553955
    9. ']='' → logprob: -15.60021686553955
    10. ']+=' → logprob: -15.72521686553955

Token 116: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00033558503491804004
    2. ' True' → logprob: -8.000335693359375
    3. '(True' → logprob: -16.750335693359375
    4. '1' → logprob: -16.875335693359375
    5. 'False' → logprob: -17.250335693359375
    6. '   ' → logprob: -17.250335693359375
    7. '=True' → logprob: -18.250335693359375
    8. 'T' → logprob: -20.375335693359375
    9. '           ' → logprob: -20.750335693359375
    10. '       ' → logprob: -20.750335693359375

Token 117: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27208617329597473
    2. '       ' → logprob: -1.7720861434936523
    3. '<|end|>' → logprob: -2.8970861434936523
    4. ' for' → logprob: -5.397086143493652
    5. '        
' → logprob: -5.522086143493652
    6. 'for' → logprob: -6.897086143493652
    7. '   ' → logprob: -7.022086143493652
    8. '<|end|>' → logprob: -7.272086143493652
    9. ',' → logprob: -7.897086143493652
    10. '
' → logprob: -8.147086143493652

Token 118: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.492154598236084
    2. '       ' → logprob: -1.742154598236084
    3. ' for' → logprob: -1.867154598236084
    4. '<|end|>' → logprob: -3.242154598236084
    5. 'for' → logprob: -4.367154598236084
    6. '
' → logprob: -5.742154598236084
    7. '    ' → logprob: -7.117154598236084
    8. '    
' → logprob: -7.367154598236084
    9. '	for' → logprob: -7.617154598236084
    10. ',' → logprob: -7.617154598236084

Token 119: ' grid' (ID: 10586)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0022536260075867176
    2. '       ' → logprob: -6.252253532409668
    3. ' for' → logprob: -8.627253532409668
    4. 'dire' → logprob: -9.377253532409668
    5. 'dx' → logprob: -10.127253532409668
    6. 'dirs' → logprob: -11.502253532409668
    7. 'if' → logprob: -12.127253532409668
    8. 'd' → logprob: -12.627253532409668
    9. '```' → logprob: -14.752253532409668
    10. '
' → logprob: -14.752253532409668

Token 120: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00020532844064291567
    2. '][' → logprob: -8.625205039978027
    3. ')[' → logprob: -11.875205039978027
    4. ' [' → logprob: -12.125205039978027
    5. '   ' → logprob: -13.250205039978027
    6. ']' → logprob: -13.375205039978027
    7. '[
' → logprob: -13.500205039978027
    8. '[c' → logprob: -13.875205039978027
    9. 'cy' → logprob: -14.250205039978027
    10. '[y' → logprob: -14.250205039978027

Token 121: 'cy' (ID: 4523)
  Prédit: 'cy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.0037760967388749123
    2. '[' → logprob: -5.6287760734558105
    3. '][' → logprob: -9.253776550292969
    4. ']' → logprob: -10.253776550292969
    5. '   ' → logprob: -11.003776550292969
    6. ' cy' → logprob: -11.128776550292969
    7. 'y' → logprob: -11.753776550292969
    8. ' ' → logprob: -14.003776550292969
    9. 'py' → logprob: -14.503776550292969
    10. '```' → logprob: -14.628776550292969

Token 122: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006619225605390966
    2. ']' → logprob: -7.750661849975586
    3. '[' → logprob: -9.250661849975586
    4. ' ][' → logprob: -9.750661849975586
    5. ''][' → logprob: -11.125661849975586
    6. '   ' → logprob: -11.125661849975586
    7. '"][' → logprob: -11.375661849975586
    8. '[c' → logprob: -11.875661849975586
    9. '       ' → logprob: -12.250661849975586
    10. '```' → logprob: -12.375661849975586

Token 123: 'cx' (ID: 47207)
  Prédit: 'cx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -1.3425219549390022e-05
    2. ' cx' → logprob: -12.00001335144043
    3. '(cx' → logprob: -12.00001335144043
    4. '][' → logprob: -15.00001335144043
    5. '.cx' → logprob: -15.12501335144043
    6. ']' → logprob: -15.50001335144043
    7. 'x' → logprob: -16.12501335144043
    8. '[c' → logprob: -17.25001335144043
    9. '[' → logprob: -17.37501335144043
    10. '
' → logprob: -17.75001335144043

Token 124: ']='' (ID: 69193)
  Prédit: ']=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']='' → logprob: -0.030327264219522476
    2. ']' → logprob: -3.905327320098877
    3. ']=' → logprob: -5.280327320098877
    4. ']=='' → logprob: -5.780327320098877
    5. '='' → logprob: -6.530327320098877
    6. ']!='' → logprob: -10.530326843261719
    7. ']="' → logprob: -10.905326843261719
    8. ']'' → logprob: -10.905326843261719
    9. ']==' → logprob: -11.405326843261719
    10. '=='' → logprob: -11.905326843261719

Token 125: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019895033910870552
    2. '.'' → logprob: -4.394895076751709
    3. ' '' → logprob: -5.644895076751709
    4. '.' → logprob: -6.269895076751709
    5. '*' → logprob: -7.269895076751709
    6. '2' → logprob: -7.769895076751709
    7. ''' → logprob: -8.39489459991455
    8. ' ')' → logprob: -9.14489459991455
    9. ' ' → logprob: -9.51989459991455
    10. '#' → logprob: -9.51989459991455

Token 126: ''
' (ID: 2207)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5137709379196167
    2. '
' → logprob: -1.6387709379196167
    3. '   ' → logprob: -2.5137710571289062
    4. '<|end|>' → logprob: -3.1387710571289062
    5. 'for' → logprob: -3.8887710571289062
    6. '')' → logprob: -4.013771057128906
    7. ')' → logprob: -4.138771057128906
    8. ' for' → logprob: -4.638771057128906
    9. ''' → logprob: -4.888771057128906
    10. '           ' → logprob: -5.888771057128906

Token 127: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37988537549972534
    2. '<|end|>' → logprob: -1.5048854351043701
    3. '       ' → logprob: -2.62988543510437
    4. ' for' → logprob: -4.879885196685791
    5. '   ' → logprob: -4.879885196685791
    6. ',' → logprob: -6.379885196685791
    7. '        
' → logprob: -6.629885196685791
    8. '<|end|>' → logprob: -7.129885196685791
    9. '    
' → logprob: -7.629885196685791
    10. '
' → logprob: -8.00488567352295

Token 128: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5788094401359558
    2. 'for' (adapté à ' for') → logprob: -0.8288094401359558
    3. '
' → logprob: -6.4538092613220215
    4. '       ' → logprob: -7.9538092613220215
    5. '	for' → logprob: -8.07880973815918
    6. '   ' → logprob: -8.20380973815918
    7. ' directions' → logprob: -8.32880973815918
    8. 'dire' → logprob: -10.20380973815918
    9. '        
' → logprob: -10.82880973815918
    10. '    
' → logprob: -11.07880973815918

Token 129: ' dx' (ID: 29472)
  Prédit: ' dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.08201771229505539
    2. 'dx' → logprob: -2.832017660140991
    3. ' nx' → logprob: -3.957017660140991
    4. 'nx' → logprob: -7.58201789855957
    5. '(dx' → logprob: -9.20701789855957
    6. '_dx' → logprob: -10.08201789855957
    7. '(nx' → logprob: -10.58201789855957
    8. ' ' → logprob: -10.83201789855957
    9. '```' → logprob: -11.20701789855957
    10. '   ' → logprob: -12.08201789855957

Token 130: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02659612149000168
    2. ',' → logprob: -4.0265960693359375
    3. 'in' → logprob: -4.9015960693359375
    4. ' ,' → logprob: -7.7765960693359375
    5. ',d' → logprob: -8.776596069335938
    6. ',-' → logprob: -9.276596069335938
    7. ',in' → logprob: -9.276596069335938
    8. '<|end|>' → logprob: -10.026596069335938
    9. ',j' → logprob: -10.276596069335938
    10. ',int' → logprob: -11.401596069335938

Token 131: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.008654754608869553
    2. ' dy' → logprob: -4.758654594421387
    3. '(' → logprob: -10.383654594421387
    4. ' (' → logprob: -11.758654594421387
    5. '.dy' → logprob: -15.008654594421387
    6. '(-' → logprob: -15.133654594421387
    7. '(d' → logprob: -15.258654594421387
    8. '```' → logprob: -15.508654594421387
    9. ',' → logprob: -15.883654594421387
    10. 'Dy' → logprob: -15.883654594421387

Token 132: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0032629151828587055
    2. 'in' → logprob: -5.753262996673584
    3. ' ' → logprob: -10.128262519836426
    4. '<|end|>' → logprob: -10.503262519836426
    5. ',' → logprob: -11.628262519836426
    6. ' ,' → logprob: -12.753262519836426
    7. ' =' → logprob: -13.753262519836426
    8. 's' → logprob: -13.878262519836426
    9. '=' → logprob: -14.378262519836426
    10. ')' → logprob: -14.503262519836426

Token 133: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.3913683593273163
    2. '[' → logprob: -1.1413683891296387
    3. ' [' → logprob: -6.141368389129639
    4. ' [(' → logprob: -6.141368389129639
    5. '[-' → logprob: -9.51636791229248
    6. '((' → logprob: -9.51636791229248
    7. '[((' → logprob: -11.14136791229248
    8. ' ((' → logprob: -11.26636791229248
    9. '(' → logprob: -12.39136791229248
    10. '(-' → logprob: -13.14136791229248

Token 134: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8392760157585144
    2. '1' → logprob: -1.0892760753631592
    3. '-' → logprob: -1.4642760753631592
    4. ' ' → logprob: -8.339276313781738
    5. '(' → logprob: -10.964276313781738
    6. ' -' → logprob: -11.589276313781738
    7. '(-' → logprob: -12.964276313781738
    8. '   ' → logprob: -14.214276313781738
    9. '−' → logprob: -14.339276313781738
    10. ',' → logprob: -14.901776313781738

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005211008246988058
    2. ' ,' → logprob: -7.875521183013916
    3. '0' → logprob: -8.875520706176758
    4. ',
' → logprob: -14.125520706176758
    5. '<|end|>' → logprob: -15.875520706176758
    6. ' ' → logprob: -16.625520706176758
    7. '),' → logprob: -16.875520706176758
    8. ',

' → logprob: -16.875520706176758
    9. '),(' → logprob: -17.125520706176758
    10. '‌,' → logprob: -17.250520706176758

Token 136: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.888114098226652e-05
    2. ' ' → logprob: -9.500088691711426
    3. '-' → logprob: -11.250088691711426
    4. ',' → logprob: -15.125088691711426
    5. '   ' → logprob: -15.375088691711426
    6. '1' → logprob: -15.750088691711426
    7. ' -' → logprob: -15.812588691711426
    8. '
' → logprob: -17.125089645385742
    9. '۰' → logprob: -17.187589645385742
    10. '```' → logprob: -17.500089645385742

Token 137: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.16035877168178558
    2. '),' → logprob: -1.9103587865829468
    3. ' ),' → logprob: -9.160358428955078
    4. '),
' → logprob: -10.785358428955078
    5. ',' → logprob: -12.785358428955078
    6. '(' → logprob: -13.160358428955078
    7. ',),' → logprob: -13.410358428955078
    8. ',(' → logprob: -13.910358428955078
    9. '),

' → logprob: -14.535358428955078
    10. ')' → logprob: -14.660358428955078

Token 138: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005929505452513695
    2. '0' → logprob: -5.130929470062256
    3. ' -' → logprob: -14.380929946899414
    4. ' ' → logprob: -15.880929946899414
    5. '−' → logprob: -16.880929946899414
    6. '1' → logprob: -17.505929946899414
    7. '```' → logprob: -17.880929946899414
    8. '‑' → logprob: -18.130929946899414
    9. '   ' → logprob: -18.255929946899414
    10. ')' → logprob: -18.380929946899414

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007655488792806864
    2. ',-' → logprob: -4.882655620574951
    3. '1' → logprob: -10.132655143737793
    4. ' ,' → logprob: -12.007655143737793
    5. '-' → logprob: -13.257655143737793
    6. ',
' → logprob: -14.757655143737793
    7. ',+' → logprob: -15.632655143737793
    8. ' ,-' → logprob: -15.632655143737793
    9. '

' → logprob: -15.757655143737793
    10. ',(' → logprob: -16.25765609741211

Token 140: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3132690191268921
    2. '1' → logprob: -1.313269019126892
    3. '
' → logprob: -13.313268661499023
    4. ' ' → logprob: -13.313268661499023
    5. '0' → logprob: -13.938268661499023
    6. ' -' → logprob: -13.938268661499023
    7. '   ' → logprob: -14.563268661499023
    8. '```' → logprob: -14.563268661499023
    9. '−' → logprob: -14.688268661499023
    10. '-
' → logprob: -15.188268661499023

Token 141: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.14298279583454132
    2. '),(' → logprob: -2.0179827213287354
    3. ' ),' → logprob: -8.142982482910156
    4. ',' → logprob: -12.017982482910156
    5. '),
' → logprob: -13.017982482910156
    6. '(-' → logprob: -13.267982482910156
    7. ',),' → logprob: -13.267982482910156
    8. ')' → logprob: -13.517982482910156
    9. '],' → logprob: -14.392982482910156
    10. ')],' → logprob: -14.392982482910156

Token 142: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -1.6405310816480778e-05
    2. '(' → logprob: -11.500016212463379
    3. ' (-' → logprob: -12.250016212463379
    4. '-' → logprob: -13.625016212463379
    5. '   ' → logprob: -16.000017166137695
    6. ',-' → logprob: -16.875017166137695
    7. '
' → logprob: -17.875017166137695
    8. ',' → logprob: -17.875017166137695
    9. '[-' → logprob: -18.500017166137695
    10. ' ' → logprob: -18.875017166137695

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.75000286102295
    3. '0' → logprob: -14.25000286102295
    4. ',' → logprob: -15.12500286102295
    5. 'x' → logprob: -16.250001907348633
    6. 'dx' → logprob: -16.625001907348633
    7. '```' → logprob: -17.187501907348633
    8. '2' → logprob: -18.250001907348633
    9. '   ' → logprob: -18.437501907348633
    10. '
' → logprob: -18.687501907348633

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043913270928896964
    2. '0' → logprob: -7.875439167022705
    3. ' ,' → logprob: -9.750438690185547
    4. '```' → logprob: -15.750438690185547
    5. '),' → logprob: -15.875438690185547
    6. ' ' → logprob: -16.312938690185547
    7. ',
' → logprob: -16.687938690185547
    8. ')' → logprob: -17.062938690185547
    9. '<|end|>' → logprob: -17.062938690185547
    10. '),(' → logprob: -17.250438690185547

Token 145: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.710618905955926e-05
    2. ' ' → logprob: -9.250097274780273
    3. '-' → logprob: -15.375097274780273
    4. '1' → logprob: -15.750097274780273
    5. '```' → logprob: -16.187597274780273
    6. ',' → logprob: -16.375097274780273
    7. '
' → logprob: -16.750097274780273
    8. '   ' → logprob: -17.062597274780273
    9. ')' → logprob: -17.250097274780273
    10. '(' → logprob: -17.562597274780273

Token 146: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0010431708069518209
    2. ',(' → logprob: -7.251043319702148
    3. '),' → logprob: -8.376043319702148
    4. ',' → logprob: -9.251043319702148
    5. '(' → logprob: -12.751043319702148
    6. ' ),' → logprob: -13.251043319702148
    7. '],[' → logprob: -14.001043319702148
    8. ')' → logprob: -15.001043319702148
    9. ' ,' → logprob: -15.126043319702148
    10. ')]' → logprob: -15.251043319702148

Token 147: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2471589798224159e-05
    2. ' ' → logprob: -11.875012397766113
    3. '(' → logprob: -13.250012397766113
    4. ',' → logprob: -13.375012397766113
    5. '1' → logprob: -14.375012397766113
    6. '```' → logprob: -14.437512397766113
    7. '-' → logprob: -15.062512397766113
    8. '   ' → logprob: -15.375012397766113
    9. '
' → logprob: -15.437512397766113
    10. '``' → logprob: -16.62501335144043

Token 148: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.3132893145084381
    2. ',' → logprob: -1.3132892847061157
    3. ',(' → logprob: -10.813289642333984
    4. ' ,' → logprob: -12.563289642333984
    5. ' ,-' → logprob: -13.063289642333984
    6. ',--' → logprob: -14.688289642333984
    7. ',-

' → logprob: -14.813289642333984
    8. ',
' → logprob: -15.438289642333984
    9. ',+' → logprob: -15.563289642333984
    10. ',-
' → logprob: -16.063289642333984

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ')]' → logprob: -12.625004768371582
    3. ')' → logprob: -14.375004768371582
    4. ' ' → logprob: -14.625004768371582
    5. '```' → logprob: -15.875004768371582
    6. ')])' → logprob: -16.6250057220459
    7. '0' → logprob: -17.2500057220459
    8. ')],' → logprob: -17.8125057220459
    9. ')]
' → logprob: -17.8750057220459
    10. '
' → logprob: -18.0000057220459

Token 150: ')]' (ID: 15710)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23848339915275574
    2. ')]' → logprob: -1.6134834289550781
    3. '),(' → logprob: -5.113483428955078
    4. '),' → logprob: -5.488483428955078
    5. '):' → logprob: -5.988483428955078
    6. ']):' → logprob: -9.863483428955078
    7. ')):' → logprob: -9.863483428955078
    8. ' )' → logprob: -9.988483428955078
    9. ']' → logprob: -10.238483428955078
    10. ')],' → logprob: -10.613483428955078

Token 151: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04455346241593361
    2. ':
' → logprob: -3.544553518295288
    3. '<|end|>' → logprob: -4.794553279876709
    4. ',' → logprob: -5.544553279876709
    5. '       ' → logprob: -6.169553279876709
    6. '<|end|>' → logprob: -8.544553756713867
    7. '   ' → logprob: -9.669553756713867
    8. '):
' → logprob: -10.044553756713867
    9. ',
' → logprob: -10.169553756713867
    10. '):' → logprob: -10.544553756713867

Token 152: '           ' (ID: 352)
  Prédit: ' nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.009198612533509731
    2. '(nx' → logprob: -5.5091986656188965
    3. '       ' → logprob: -6.5091986656188965
    4. 'nx' → logprob: -6.8841986656188965
    5. '        ' → logprob: -6.8841986656188965
    6. ' new' → logprob: -7.7591986656188965
    7. ' nxt' → logprob: -8.259198188781738
    8. ' x' → logprob: -8.259198188781738
    9. '           ' → logprob: -8.884198188781738
    10. ' ny' → logprob: -9.509198188781738

Token 153: ' for' (ID: 395)
  Prédit: ' nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.007740777917206287
    2. 'nx' → logprob: -4.8827409744262695
    3. '(nx' → logprob: -9.75774097442627
    4. ' new' → logprob: -10.25774097442627
    5. ' x' → logprob: -11.50774097442627
    6. ' if' → logprob: -11.50774097442627
    7. ' nxt' → logprob: -12.00774097442627
    8. ' next' → logprob: -13.00774097442627
    9. 'x' → logprob: -13.13274097442627
    10. ' tx' → logprob: -13.25774097442627

Token 154: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -1.3968636989593506
    2. ' step' → logprob: -1.3968636989593506
    3. 'dist' → logprob: -1.3968636989593506
    4. 'step' → logprob: -2.0218636989593506
    5. ' nx' → logprob: -3.7718636989593506
    6. 'nx' → logprob: -4.14686393737793
    7. ' i' → logprob: -4.27186393737793
    8. 'k' → logprob: -4.27186393737793
    9. ' nd' → logprob: -4.39686393737793
    10. 'i' → logprob: -4.52186393737793

Token 155: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16035988926887512
    2. 'in' → logprob: -1.9103598594665527
    3. ' ' → logprob: -9.535360336303711
    4. '1' → logprob: -11.035360336303711
    5. '=' → logprob: -11.410360336303711
    6. 's' → logprob: -11.910360336303711
    7. ',' → logprob: -12.535360336303711
    8. '```' → logprob: -13.160360336303711
    9. '	in' → logprob: -13.160360336303711
    10. 'n' → logprob: -13.285360336303711

Token 156: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.024929184466600418
    2. 'range' → logprob: -4.024929046630859
    3. '[' → logprob: -5.024929046630859
    4. ' [' → logprob: -8.77492904663086
    5. ' ' → logprob: -10.77492904663086
    6. '1' → logprob: -12.52492904663086
    7. '(range' → logprob: -13.14992904663086
    8. '	range' → logprob: -13.89992904663086
    9. '(' → logprob: -14.27492904663086
    10. ' xrange' → logprob: -14.89992904663086

Token 157: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008781121578067541
    2. '1' → logprob: -7.12587833404541
    3. ' (' → logprob: -9.62587833404541
    4. ' ' → logprob: -12.12587833404541
    5. '   ' → logprob: -13.25087833404541
    6. '(
' → logprob: -15.68837833404541
    7. '           ' → logprob: -16.750877380371094
    8. '                   ' → logprob: -16.875877380371094
    9. '               ' → logprob: -17.125877380371094
    10. '    ' → logprob: -17.750877380371094

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038777425652369857
    2. ' ' → logprob: -8.125388145446777
    3. '8' → logprob: -9.750388145446777
    4. '2' → logprob: -11.125388145446777
    5. '(' → logprob: -11.500388145446777
    6. '3' → logprob: -12.750388145446777
    7. '-' → logprob: -13.812888145446777
    8. '4' → logprob: -13.812888145446777
    9. '   ' → logprob: -14.125388145446777
    10. '7' → logprob: -14.187888145446777

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028381571173667908
    2. ' ,' → logprob: -5.877838134765625
    3. '1' → logprob: -11.877838134765625
    4. ',len' → logprob: -12.377838134765625
    5. '2' → logprob: -12.502838134765625
    6. '8' → logprob: -12.627838134765625
    7. ',d' → logprob: -13.002838134765625
    8. '7' → logprob: -13.377838134765625
    9. ',int' → logprob: -13.377838134765625
    10. '3' → logprob: -13.502838134765625

Token 160: '4' (ID: 19)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.5476478934288025
    2. '3' → logprob: -1.4226479530334473
    3. '4' → logprob: -2.0476479530334473
    4. '9' → logprob: -3.7976479530334473
    5. '2' → logprob: -4.797647953033447
    6. '6' → logprob: -4.922647953033447
    7. '5' → logprob: -4.922647953033447
    8. '7' → logprob: -6.297647953033447
    9. ' ' → logprob: -6.422647953033447
    10. 'int' → logprob: -6.672647953033447

Token 161: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.14344416558742523
    2. '):' → logprob: -2.018444061279297
    3. '+' → logprob: -7.893444061279297
    4. ' ):
' → logprob: -8.268444061279297
    5. ' ):' → logprob: -10.268444061279297
    6. '):
' → logprob: -11.018444061279297
    7. '   ' → logprob: -11.393444061279297
    8. ')' → logprob: -11.393444061279297
    9. ':
' → logprob: -11.768444061279297
    10. '       ' → logprob: -11.893444061279297

Token 162: '               ' (ID: 506)
  Prédit: ' nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.3485834300518036
    2. '               ' → logprob: -1.973583459854126
    3. '(nx' → logprob: -2.473583459854126
    4. ' ' → logprob: -3.973583459854126
    5. '                
' → logprob: -4.348583221435547
    6. 'nx' → logprob: -4.848583221435547
    7. '                ' → logprob: -5.473583221435547
    8. '            ' → logprob: -5.473583221435547
    9. '<|end|>' → logprob: -5.473583221435547
    10. '           ' → logprob: -5.598583221435547

Token 163: ' nx' (ID: 50118)
  Prédit: ' nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.058597031980752945
    2. 'nx' (adapté à ' nx') → logprob: -2.9335970878601074
    3. '(nx' → logprob: -5.933597087860107
    4. ' 
' → logprob: -7.683597087860107
    5. '                   ' → logprob: -8.43359661102295
    6. ' new' → logprob: -9.05859661102295
    7. '                    
' → logprob: -9.80859661102295
    8. ' if' → logprob: -10.18359661102295
    9. '                ' → logprob: -10.43359661102295
    10. 'n' → logprob: -11.05859661102295

Token 164: '=c' (ID: 43473)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5322950482368469
    2. '=c' → logprob: -0.9072950482368469
    3. ' =' → logprob: -4.782295227050781
    4. ',' → logprob: -7.657295227050781
    5. ',c' → logprob: -8.532295227050781
    6. '=
' → logprob: -10.282295227050781
    7. '```' → logprob: -11.532295227050781
    8. ' cx' → logprob: -11.907295227050781
    9. '=

' → logprob: -12.157295227050781
    10. '   ' → logprob: -12.407295227050781

Token 165: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0003927808138541877
    2. 'y' → logprob: -7.875392913818359
    3. ' x' → logprob: -12.00039291381836
    4. '   ' → logprob: -13.50039291381836
    5. '               ' → logprob: -14.25039291381836
    6. '	x' → logprob: -14.62539291381836
    7. '       ' → logprob: -15.00039291381836
    8. '=' → logprob: -15.00039291381836
    9. '           ' → logprob: -15.25039291381836
    10. '_x' → logprob: -15.37539291381836

Token 166: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.010740168392658234
    2. ' +' → logprob: -4.760740280151367
    3. '=' → logprob: -6.260740280151367
    4. '+c' → logprob: -9.010740280151367
    5. ' =' → logprob: -10.385740280151367
    6. '+=' → logprob: -10.510740280151367
    7. '+
' → logprob: -11.760740280151367
    8. '+d' → logprob: -12.260740280151367
    9. ',' → logprob: -12.385740280151367
    10. '+x' → logprob: -13.010740280151367

Token 167: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0009146820520982146
    2. ' dx' → logprob: -7.000914573669434
    3. 'dist' → logprob: -13.250914573669434
    4. '(dx' → logprob: -13.750914573669434
    5. '   ' → logprob: -15.250914573669434
    6. '_dx' → logprob: -17.50091552734375
    7. '```' → logprob: -17.75091552734375
    8. '           ' → logprob: -18.00091552734375
    9. 'Dx' → logprob: -18.25091552734375
    10. ' ' → logprob: -18.50091552734375

Token 168: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -3.273621405242011e-05
    2. ' *' → logprob: -10.375032424926758
    3. '*object' → logprob: -14.625032424926758
    4. '*n' → logprob: -14.875032424926758
    5. 'dist' → logprob: -15.500032424926758
    6. '*num' → logprob: -15.625032424926758
    7. '*np' → logprob: -15.875032424926758
    8. '*d' → logprob: -16.250032424926758
    9. '*(' → logprob: -16.375032424926758
    10. '(dist' → logprob: -17.500032424926758

Token 169: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -6.988221684878226e-06
    2. ' dist' → logprob: -11.875006675720215
    3. '(dist' → logprob: -17.50000762939453
    4. '	dist' → logprob: -19.25000762939453
    5. 'Dist' → logprob: -21.50000762939453
    6. '   ' → logprob: -21.62500762939453
    7. '.dist' → logprob: -22.00000762939453
    8. 'distance' → logprob: -22.00000762939453
    9. '```' → logprob: -22.12500762939453
    10. 'd' → logprob: -22.12500762939453

Token 170: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04972284659743309
    2. '<|end|>' → logprob: -3.174722909927368
    3. ',n' → logprob: -6.049722671508789
    4. '                
' → logprob: -6.799722671508789
    5. ',' → logprob: -6.924722671508789
    6. 'if' → logprob: -7.174722671508789
    7. '<|end|>' → logprob: -8.174722671508789
    8. '                               ' → logprob: -8.549722671508789
    9. '
' → logprob: -8.924722671508789
    10. '                ' → logprob: -9.049722671508789

Token 171: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06892561167478561
    2. ' if' → logprob: -3.568925619125366
    3. ' ny' → logprob: -4.318925380706787
    4. '<|end|>' → logprob: -4.318925380706787
    5. '                ' → logprob: -5.318925380706787
    6. ',' → logprob: -5.943925380706787
    7. 'if' → logprob: -6.068925380706787
    8. '                
' → logprob: -8.068925857543945
    9. 'n' → logprob: -8.818925857543945
    10. '                               ' → logprob: -8.943925857543945

Token 172: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' (adapté à ' ny') → logprob: -0.005476363468915224
    2. '0' → logprob: -5.255476474761963
    3. ' ny' → logprob: -8.380475997924805
    4. 'if' → logprob: -12.005475997924805
    5. ' ' → logprob: -12.755475997924805
    6. 'nx' → logprob: -13.505475997924805
    7. '```' → logprob: -13.755475997924805
    8. '   ' → logprob: -14.380475997924805
    9. '
' → logprob: -15.380475997924805
    10. '               ' → logprob: -15.755475997924805

Token 173: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.723973582556937e-05
    2. '=c' → logprob: -11.000017166137695
    3. '=
' → logprob: -15.750017166137695
    4. ' =' → logprob: -16.000017166137695
    5. '=int' → logprob: -16.125017166137695
    6. '=cv' → logprob: -16.125017166137695
    7. '=cut' → logprob: -17.375017166137695
    8. '=

' → logprob: -17.500017166137695
    9. '==' → logprob: -18.250017166137695
    10. '=(' → logprob: -18.250017166137695

Token 174: 'cy' (ID: 4523)
  Prédit: 'cy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -1.5048530030981055e-06
    2. ' cy' → logprob: -13.500001907348633
    3. 'cyj' → logprob: -16.875001907348633
    4. '.cy' → logprob: -17.875001907348633
    5. '
' → logprob: -19.750001907348633
    6. ' ' → logprob: -19.875001907348633
    7. '   ' → logprob: -20.000001907348633
    8. 'cych' → logprob: -20.250001907348633
    9. 'ocy' → logprob: -20.625001907348633
    10. 'cu' → logprob: -21.125001907348633

Token 175: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.7968066206085496e-05
    2. 'cy' → logprob: -10.875027656555176
    3. '=' → logprob: -11.875027656555176
    4. '+
' → logprob: -14.250027656555176
    5. ' +' → logprob: -14.750027656555176
    6. '+c' → logprob: -14.750027656555176
    7. '```' → logprob: -15.750027656555176
    8. '
' → logprob: -16.250028610229492
    9. '+y' → logprob: -16.250028610229492
    10. '+=' → logprob: -16.375028610229492

Token 176: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0003540542966220528
    2. ' dy' → logprob: -8.000353813171387
    3. 'dist' → logprob: -11.125353813171387
    4. 'dx' → logprob: -12.750353813171387
    5. '0' → logprob: -14.625353813171387
    6. 'cy' → logprob: -15.500353813171387
    7. '(d' → logprob: -16.250354766845703
    8. '(' → logprob: -16.250354766845703
    9. '   ' → logprob: -16.625354766845703
    10. 'd' → logprob: -17.000354766845703

Token 177: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.7432603272027336e-06
    2. '+' → logprob: -13.875001907348633
    3. '*(' → logprob: -15.625001907348633
    4. 'dist' → logprob: -15.625001907348633
    5. ')*' → logprob: -16.000001907348633
    6. '[' → logprob: -16.375001907348633
    7. ' *' → logprob: -17.000001907348633
    8. '*object' → logprob: -17.250001907348633
    9. '```' → logprob: -18.500001907348633
    10. '*
' → logprob: -18.750001907348633

Token 178: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -2.696889623621246e-06
    2. ' dist' → logprob: -13.12500286102295
    3. '(dist' → logprob: -14.37500286102295
    4. 'dy' → logprob: -18.375001907348633
    5. '	dist' → logprob: -19.125001907348633
    6. 'dx' → logprob: -19.375001907348633
    7. '0' → logprob: -19.500001907348633
    8. 'd' → logprob: -20.375001907348633
    9. '
' → logprob: -20.500001907348633
    10. '.dist' → logprob: -20.500001907348633

Token 179: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014512984082102776
    2. ' if' → logprob: -5.01451301574707
    3. '<|end|>' → logprob: -5.63951301574707
    4. '                
' → logprob: -6.26451301574707
    5. 'if' → logprob: -6.63951301574707
    6. '                ' → logprob: -8.51451301574707
    7. '       ' → logprob: -8.88951301574707
    8. '	if' → logprob: -9.01451301574707
    9. '	           ' → logprob: -9.63951301574707
    10. '              ' → logprob: -9.88951301574707

Token 180: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19857315719127655
    2. ' if' → logprob: -1.948573112487793
    3. '<|end|>' → logprob: -4.073573112487793
    4. '                ' → logprob: -4.823573112487793
    5. 'if' → logprob: -4.948573112487793
    6. '                
' → logprob: -5.698573112487793
    7. '                   ' → logprob: -8.198573112487793
    8. '  
' → logprob: -8.698573112487793
    9. ' 
' → logprob: -8.823573112487793
    10. '	if' → logprob: -8.823573112487793

Token 181: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07107336819171906
    2. '               ' → logprob: -2.821073293685913
    3. 'if' (adapté à ' if') → logprob: -4.821073532104492
    4. '                ' → logprob: -7.071073532104492
    5. '                
' → logprob: -9.946073532104492
    6. ' ' → logprob: -10.446073532104492
    7. '```' → logprob: -10.821073532104492
    8. '                   ' → logprob: -11.696073532104492
    9. ' 
' → logprob: -11.696073532104492
    10. '       ' → logprob: -11.946073532104492

Token 182: ' ' (ID: 220)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.9275619387626648
    2. '0' → logprob: -1.4275619983673096
    3. ' ' → logprob: -1.8025619983673096
    4. ' nx' → logprob: -1.8025619983673096
    5. 'nx' → logprob: -3.8025619983673096
    6. 'not' → logprob: -4.4275617599487305
    7. '(nx' → logprob: -7.9275617599487305
    8. ' ny' → logprob: -8.92756175994873
    9. 'ny' → logprob: -11.17756175994873
    10. '```' → logprob: -11.36506175994873

Token 183: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5623538494110107
    2. 'nx' → logprob: -1.6873538494110107
    3. ' not' → logprob: -2.1873538494110107
    4. 'not' → logprob: -2.3123538494110107
    5. ' nx' → logprob: -3.5623538494110107
    6. ' ' → logprob: -5.56235408782959
    7. '(nx' → logprob: -7.18735408782959
    8. 'ny' → logprob: -7.31235408782959
    9. ' ny' → logprob: -8.68735408782959
    10. '   ' → logprob: -11.49985408782959

Token 184: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.12723727524280548
    2. ' <=' → logprob: -2.127237319946289
    3. '>' → logprob: -8.252237319946289
    4. ' >' → logprob: -10.877237319946289
    5. '<n' → logprob: -11.627237319946289
    6. '<' → logprob: -11.752237319946289
    7. '>=' → logprob: -11.752237319946289
    8. '<len' → logprob: -12.877237319946289
    9. ' <' → logprob: -14.502237319946289
    10. ' or' → logprob: -14.752237319946289

Token 185: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.04047294706106186
    2. 'ny' → logprob: -3.415472984313965
    3. ' nx' → logprob: -5.040472984313965
    4. ' ny' → logprob: -8.165472984313965
    5. '(nx' → logprob: -10.040472984313965
    6. 'n' → logprob: -13.165472984313965
    7. '
' → logprob: -13.790472984313965
    8. 'nj' → logprob: -14.915472984313965
    9. 'nz' → logprob: -15.290472984313965
    10. '```' → logprob: -15.540472984313965

Token 186: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.00032628714689053595
    2. '<n' → logprob: -8.875326156616211
    3. 'and' → logprob: -9.250326156616211
    4. '<len' → logprob: -10.375326156616211
    5. '[' → logprob: -11.000326156616211
    6. '<[' → logprob: -11.125326156616211
    7. ' <' → logprob: -11.625326156616211
    8. '<size' → logprob: -11.750326156616211
    9. ' and' → logprob: -12.750326156616211
    10. '<x' → logprob: -13.375326156616211

Token 187: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -18.500003814697266
    4. '   ' → logprob: -18.750003814697266
    5. '８' → logprob: -19.250003814697266
    6. '۸' → logprob: -19.312503814697266
    7. '
' → logprob: -19.875003814697266
    8. '८' → logprob: -20.312503814697266
    9. '৮' → logprob: -20.625003814697266
    10. 'eight' → logprob: -20.625003814697266

Token 188: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1602245420217514
    2. 'and' → logprob: -1.9102245569229126
    3. '<|end|>' → logprob: -14.910224914550781
    4. '	and' → logprob: -16.53522491455078
    5. ' ' → logprob: -17.41022491455078
    6. '```' → logprob: -19.28522491455078
    7. ' и' → logprob: -19.41022491455078
    8. '0' → logprob: -19.41022491455078
    9. 'if' → logprob: -20.03522491455078
    10. ' if' → logprob: -20.16022491455078

Token 189: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0040887282229959965
    2. ' ' → logprob: -5.504088878631592
    3. '8' → logprob: -11.504088401794434
    4. '   ' → logprob: -15.254088401794434
    5. '  ' → logprob: -17.62908935546875
    6. '    ' → logprob: -18.87908935546875
    7. '
' → logprob: -18.87908935546875
    8. '       ' → logprob: -19.62908935546875
    9. '               ' → logprob: -19.75408935546875
    10. '     ' → logprob: -20.37908935546875

Token 190: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5438584089279175
    2. '8' → logprob: -0.9188584089279175
    3. 'ny' → logprob: -3.918858528137207
    4. ' ' → logprob: -7.543858528137207
    5. ' ny' → logprob: -9.293858528137207
    6. '   ' → logprob: -11.668858528137207
    7. 'nx' → logprob: -11.668858528137207
    8. '
' → logprob: -12.043858528137207
    9. '7' → logprob: -12.543858528137207
    10. '4' → logprob: -13.293858528137207

Token 191: '<=' (ID: 16672)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.032815106213092804
    2. 'ny' → logprob: -3.6578152179718018
    3. '8' → logprob: -5.407814979553223
    4. ' ' → logprob: -7.282814979553223
    5. ' <' → logprob: -7.282814979553223
    6. '<=' → logprob: -8.157814979553223
    7. ' ny' → logprob: -8.657814979553223
    8. 'and' → logprob: -9.532814979553223
    9. '<n' → logprob: -10.532814979553223
    10. '   ' → logprob: -11.282814979553223

Token 192: 'ny' (ID: 3008)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -5.6457742175552994e-05
    2. ' ' → logprob: -9.875056266784668
    3. '
' → logprob: -13.625056266784668
    4. '   ' → logprob: -13.750056266784668
    5. 'nx' → logprob: -14.125056266784668
    6. 'ny' → logprob: -14.250056266784668
    7. '```' → logprob: -15.187556266784668
    8. '4' → logprob: -16.375057220458984
    9. 'y' → logprob: -16.750057220458984
    10. '1' → logprob: -17.000057220458984

Token 193: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.005319258663803339
    2. '8' → logprob: -5.255319118499756
    3. ' <' → logprob: -9.630319595336914
    4. 'and' → logprob: -11.505319595336914
    5. ' and' → logprob: -11.755319595336914
    6. ' ' → logprob: -13.755319595336914
    7. '[' → logprob: -15.880319595336914
    8. '```' → logprob: -15.880319595336914
    9. '<len' → logprob: -16.005319595336914
    10. '()<' → logprob: -16.505319595336914

Token 194: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.62501335144043
    4. '```' → logprob: -17.06251335144043
    5. '
' → logprob: -18.06251335144043
    6. 'eight' → logprob: -18.93751335144043
    7. '۸' → logprob: -19.12501335144043
    8. '08' → logprob: -19.31251335144043
    9. '<|end|>' → logprob: -19.50001335144043
    10. '৮' → logprob: -19.87501335144043

Token 195: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.11530482023954391
    2. 'and' → logprob: -2.240304708480835
    3. ':
' → logprob: -6.240304946899414
    4. ':' → logprob: -7.740304946899414
    5. '<|end|>' → logprob: -10.240304946899414
    6. '               ' → logprob: -11.365304946899414
    7. '           ' → logprob: -11.615304946899414
    8. '                   ' → logprob: -11.990304946899414
    9. '<|end|>' → logprob: -12.115304946899414
    10. '):
' → logprob: -12.365304946899414

Token 196: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.037960924208164215
    2. ' if' → logprob: -3.662961006164551
    3. 'if' → logprob: -5.037961006164551
    4. '               ' → logprob: -5.662961006164551
    5. '           ' → logprob: -7.037961006164551
    6. '   ' → logprob: -8.16296100616455
    7. '                       ' → logprob: -9.28796100616455
    8. ' ' → logprob: -9.41296100616455
    9. '```' → logprob: -9.53796100616455
    10. '<|end|>' → logprob: -9.91296100616455

Token 197: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00037192381569184363
    2. ' if' → logprob: -8.000371932983398
    3. '                       ' → logprob: -10.500371932983398
    4. '                   ' → logprob: -12.000371932983398
    5. '                        
' → logprob: -14.250371932983398
    6. '```' → logprob: -14.750371932983398
    7. 'elif' → logprob: -15.000371932983398
    8. '   ' → logprob: -15.375371932983398
    9. '	if' → logprob: -15.500371932983398
    10. '<|end|>' → logprob: -15.625371932983398

Token 198: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.34853798151016235
    2. 'grid' → logprob: -1.2235379219055176
    3. ' not' → logprob: -10.098538398742676
    4. '(grid' → logprob: -10.973538398742676
    5. 'expl' → logprob: -11.348538398742676
    6. 'not' → logprob: -11.598538398742676
    7. '	grid' → logprob: -12.473538398742676
    8. ' exploded' → logprob: -12.473538398742676
    9. ':grid' → logprob: -13.473538398742676
    10. '                   ' → logprob: -13.723538398742676

Token 199: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2352385965641588e-05
    2. '```' → logprob: -12.500012397766113
    3. '][' → logprob: -13.500012397766113
    4. ' [' → logprob: -13.500012397766113
    5. 'ny' → logprob: -13.500012397766113
    6. '[n' → logprob: -13.750012397766113
    7. '[
' → logprob: -14.687512397766113
    8. ' ny' → logprob: -15.187512397766113
    9. '   ' → logprob: -15.250012397766113
    10. ')[' → logprob: -15.562512397766113

Token 200: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.00016027313540689647
    2. '[' → logprob: -8.875160217285156
    3. ' ny' → logprob: -11.625160217285156
    4. 'cy' → logprob: -12.500160217285156
    5. ']' → logprob: -13.375160217285156
    6. '   ' → logprob: -13.875160217285156
    7. '
' → logprob: -14.250160217285156
    8. '][' → logprob: -14.375160217285156
    9. 'n' → logprob: -14.500160217285156
    10. 'nyi' → logprob: -14.500160217285156

Token 201: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.018662787973880768
    2. '[n' → logprob: -4.268662929534912
    3. '[' → logprob: -5.768662929534912
    4. ''][' → logprob: -7.018662929534912
    5. '[c' → logprob: -8.643662452697754
    6. ']' → logprob: -9.393662452697754
    7. '"][' → logprob: -9.893662452697754
    8. ''[' → logprob: -10.643662452697754
    9. '}[' → logprob: -11.143662452697754
    10. '>[' → logprob: -11.268662452697754

Token 202: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.00010425841173855588
    2. ' nx' → logprob: -9.250103950500488
    3. '(nx' → logprob: -12.000103950500488
    4. 'cx' → logprob: -14.125103950500488
    5. 'x' → logprob: -14.875103950500488
    6. 'n' → logprob: -14.875103950500488
    7. 'Nx' → logprob: -15.500103950500488
    8. '[n' → logprob: -15.875103950500488
    9. '```' → logprob: -16.375104904174805
    10. 'xn' → logprob: -17.500104904174805

Token 203: ']=='' (ID: 71177)
  Prédit: ']==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=='' → logprob: -0.021768106147646904
    2. '']=='' → logprob: -4.521768093109131
    3. '=='' → logprob: -5.271768093109131
    4. ']==' → logprob: -5.271768093109131
    5. ']' → logprob: -8.271768569946289
    6. ')=='' → logprob: -9.396768569946289
    7. ']!='' → logprob: -10.896768569946289
    8. ']'' → logprob: -11.146768569946289
    9. '']==' → logprob: -11.771768569946289
    10. ']=="' → logprob: -12.396768569946289

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024364276323467493
    2. '0' → logprob: -6.127436637878418
    3. ''' → logprob: -8.377436637878418
    4. ' ' → logprob: -11.377436637878418
    5. '2' → logprob: -13.002436637878418
    6. '')' → logprob: -13.877436637878418
    7. '#' → logprob: -14.064936637878418
    8. ' '' → logprob: -14.127436637878418
    9. '.' → logprob: -14.127436637878418
    10. ''s' → logprob: -14.564936637878418

Token 205: ''' (ID: 6)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43791866302490234
    2. '':' → logprob: -2.1879186630249023
    3. '                       ' → logprob: -2.1879186630249023
    4. ':
' → logprob: -2.3129186630249023
    5. '':
' → logprob: -4.062918663024902
    6. ' and' → logprob: -5.062918663024902
    7. '                           ' → logprob: -6.312918663024902
    8. '                   ' → logprob: -6.437918663024902
    9. '<|end|>' → logprob: -7.187918663024902
    10. ' :' → logprob: -7.812918663024902

Token 206: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24857908487319946
    2. ':
' → logprob: -1.6235790252685547
    3. '                       ' → logprob: -4.123579025268555
    4. ' and' → logprob: -5.248579025268555
    5. '):
' → logprob: -7.748579025268555
    6. '                   ' → logprob: -8.123579025268555
    7. '):' → logprob: -8.873579025268555
    8. 'and' → logprob: -8.873579025268555
    9. '<|end|>' → logprob: -9.248579025268555
    10. '                           ' → logprob: -9.498579025268555

Token 207: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.25198522210121155
    2. 'not' → logprob: -1.5019851922988892
    3. '(not' → logprob: -10.251985549926758
    4. '!' → logprob: -12.251985549926758
    5. 'expl' → logprob: -12.376985549926758
    6. ' exploded' → logprob: -12.501985549926758
    7. ' (' → logprob: -13.126985549926758
    8. 'n' → logprob: -13.626985549926758
    9. 'grid' → logprob: -13.876985549926758
    10. '	not' → logprob: -14.376985549926758

Token 208: ' exploded' (ID: 93826)
  Prédit: 'expl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expl' → logprob: -0.011092156171798706
    2. ' exploded' → logprob: -4.511092185974121
    3. 'explode' → logprob: -10.636092185974121
    4. 'ex' → logprob: -11.136092185974121
    5. ' explored' → logprob: -13.136092185974121
    6. 'expanded' → logprob: -13.386092185974121
    7. ' ' → logprob: -14.636092185974121
    8. '	ex' → logprob: -15.386092185974121
    9. '```' → logprob: -15.886092185974121
    10. ' ' → logprob: -15.886092185974121

Token 209: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. ' [' → logprob: -14.375000953674316
    3. '[
' → logprob: -16.250001907348633
    4. '
' → logprob: -16.500001907348633
    5. '```' → logprob: -16.750001907348633
    6. '][' → logprob: -17.000001907348633
    7. '

' → logprob: -17.000001907348633
    8. ')[' → logprob: -17.875001907348633
    9. '[[' → logprob: -18.062501907348633
    10. '[y' → logprob: -18.250001907348633

Token 210: 'ny' (ID: 3008)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4741056561470032
    2. 'ny' → logprob: -0.9741056561470032
    3. ' ny' → logprob: -11.224105834960938
    4. '][' → logprob: -11.599105834960938
    5. '   ' → logprob: -13.599105834960938
    6. '
' → logprob: -13.724105834960938
    7. ']' → logprob: -14.474105834960938
    8. ' [' → logprob: -14.599105834960938
    9. '```' → logprob: -14.849105834960938
    10. '[
' → logprob: -15.099105834960938

Token 211: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0015431918436661363
    2. '[' → logprob: -7.126543045043945
    3. '[n' → logprob: -7.251543045043945
    4. ' ][' → logprob: -11.501543045043945
    5. '   ' → logprob: -11.626543045043945
    6. ']' → logprob: -12.126543045043945
    7. '       ' → logprob: -13.501543045043945
    8. ''][' → logprob: -13.876543045043945
    9. '         ' → logprob: -14.876543045043945
    10. '	' → logprob: -15.126543045043945

Token 212: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -2.2842308680992573e-05
    2. ' nx' → logprob: -11.375022888183594
    3. '(nx' → logprob: -11.500022888183594
    4. 'cx' → logprob: -14.375022888183594
    5. 'x' → logprob: -14.625022888183594
    6. '
' → logprob: -17.625022888183594
    7. 'n' → logprob: -17.625022888183594
    8. 'ny' → logprob: -17.750022888183594
    9. 'Nx' → logprob: -17.750022888183594
    10. 'nz' → logprob: -19.000022888183594

Token 213: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.0894053727388382
    2. ']:' → logprob: -2.5894052982330322
    3. ':
' → logprob: -5.089405536651611
    4. ':' → logprob: -6.339405536651611
    5. ']' → logprob: -6.589405536651611
    6. '):
' → logprob: -7.339405536651611
    7. '']:
' → logprob: -8.339405059814453
    8. ']:
' → logprob: -9.339405059814453
    9. ']:

' → logprob: -10.089405059814453
    10. '():
' → logprob: -10.714405059814453

Token 214: '                       ' (ID: 968)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7656059861183167
    2. '                       ' → logprob: -0.7656059861183167
    3. ':' → logprob: -2.765605926513672
    4. '                           ' → logprob: -5.890605926513672
    5. '                   ' → logprob: -6.515605926513672
    6. '):
' → logprob: -7.640605926513672
    7. '                        
' → logprob: -7.765605926513672
    8. '                               ' → logprob: -7.890605926513672
    9. ' :
' → logprob: -8.640605926513672
    10. 'q' → logprob: -8.765605926513672

Token 215: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.5777503252029419
    2. 'q' (adapté à ' q') → logprob: -0.8277503252029419
    3. '
' → logprob: -6.702750205993652
    4. '                           ' → logprob: -8.077750205993652
    5. '                               ' → logprob: -9.077750205993652
    6. ',q' → logprob: -9.577750205993652
    7. '	q' → logprob: -9.952750205993652
    8. '                       ' → logprob: -11.327750205993652
    9. '```' → logprob: -12.577750205993652
    10. ' 
' → logprob: -12.952750205993652

Token 216: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00023298001906368881
    2. '.' → logprob: -8.375232696533203
    3. '.extend' → logprob: -14.125232696533203
    4. '.app' → logprob: -14.625232696533203
    5. '.enqueue' → logprob: -15.125232696533203
    6. 'append' → logprob: -15.375232696533203
    7. ').' → logprob: -15.500232696533203
    8. ' .' → logprob: -16.125232696533203
    9. '.Append' → logprob: -16.250232696533203
    10. '.put' → logprob: -16.750232696533203

Token 217: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.318681188422488e-05
    2. '(' → logprob: -11.25001335144043
    3. '(
' → logprob: -16.37501335144043
    4. ' ((' → logprob: -17.75001335144043
    5. '(nx' → logprob: -18.25001335144043
    6. '(((' → logprob: -18.37501335144043
    7. '>((' → logprob: -19.12501335144043
    8. ')((' → logprob: -20.00001335144043
    9. '```' → logprob: -20.12501335144043
    10. '(([' → logprob: -20.25001335144043

Token 218: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.00022535098833031952
    2. '(nx' → logprob: -8.500225067138672
    3. ' nx' → logprob: -10.750225067138672
    4. '
' → logprob: -16.125225067138672
    5. 'n' → logprob: -16.500225067138672
    6. '   ' → logprob: -16.875225067138672
    7. '```' → logprob: -17.375225067138672
    8. 'ny' → logprob: -17.375225067138672
    9. '(n' → logprob: -17.750225067138672
    10. '(' → logprob: -18.250225067138672

Token 219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.676981345459353e-06
    2. ' ,' → logprob: -12.375005722045898
    3. ',
' → logprob: -13.875005722045898
    4. ',n' → logprob: -14.875005722045898
    5. '```' → logprob: -17.3750057220459
    6. '
' → logprob: -17.5000057220459
    7. ',y' → logprob: -18.0000057220459
    8. '<|end|>' → logprob: -18.6250057220459
    9. 'ny' → logprob: -19.6250057220459
    10. '‌,' → logprob: -19.7500057220459

Token 220: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.00016432604752480984
    2. ' ny' → logprob: -8.750164031982422
    3. '
' → logprob: -12.500164031982422
    4. 'nyi' → logprob: -14.125164031982422
    5. ' ' → logprob: -15.125164031982422
    6. 'n' → logprob: -15.375164031982422
    7. '```' → logprob: -15.625164031982422
    8. '   ' → logprob: -15.625164031982422
    9. 'nyt' → logprob: -16.500164031982422
    10. '    
' → logprob: -16.625164031982422

Token 221: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008854701183736324
    2. ')' → logprob: -5.258854866027832
    3. '))
' → logprob: -5.633854866027832
    4. ')))' → logprob: -10.758854866027832
    5. ')
' → logprob: -11.883854866027832
    6. '                       ' → logprob: -12.133854866027832
    7. '                   ' → logprob: -13.258854866027832
    8. '))

' → logprob: -13.758854866027832
    9. '))))' → logprob: -14.258854866027832
    10. '))
' → logprob: -14.883854866027832

Token 222: '   ' (ID: 271)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5063822865486145
    2. 'else' → logprob: -1.2563822269439697
    3. '                   ' → logprob: -2.6313822269439697
    4. ' else' → logprob: -3.2563822269439697
    5. '                ' → logprob: -7.506382465362549
    6. '           ' → logprob: -7.881382465362549
    7. '```' → logprob: -8.63138198852539
    8. '   ' → logprob: -8.75638198852539
    9. '              ' → logprob: -8.75638198852539
    10. 'elif' → logprob: -8.88138198852539

Token 223: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.2537781000137329
    2. '   ' → logprob: -2.1287779808044434
    3. 'for' → logprob: -2.2537779808044434
    4. ' for' → logprob: -9.753778457641602
    5. '    
' → logprob: -10.753778457641602
    6. ' print' → logprob: -11.128778457641602
    7. 'count' → logprob: -11.753778457641602
    8. '#' → logprob: -11.878778457641602
    9. '       ' → logprob: -12.128778457641602
    10. '
' → logprob: -12.128778457641602

Token 224: '(f' (ID: 1526)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.6185100674629211
    2. '(len' → logprob: -1.4935100078582764
    3. '(t' → logprob: -1.9935100078582764
    4. '(' → logprob: -2.9935100078582764
    5. '(f' → logprob: -3.9935100078582764
    6. '('' → logprob: -4.3685102462768555
    7. '((' → logprob: -5.1185102462768555
    8. '()' → logprob: -5.7435102462768555
    9. '(max' → logprob: -5.8685102462768555
    10. '(ex' → logprob: -5.9935102462768555

Token 225: '"' (ID: 1)
  Prédit: '"{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.1473378837108612
    2. ''{' → logprob: -2.5223379135131836
    3. '(f' → logprob: -3.6473379135131836
    4. '"' → logprob: -4.397337913513184
    5. '(t' → logprob: -4.647337913513184
    6. '{' → logprob: -5.897337913513184
    7. 'f' → logprob: -6.897337913513184
    8. 't' → logprob: -6.897337913513184
    9. '(' → logprob: -7.272337913513184
    10. '"#' → logprob: -7.272337913513184

Token 226: 'Data' (ID: 1186)
  Prédit: 'Case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Case' → logprob: -0.05284031108021736
    2. '#{' → logprob: -3.177840232849121
    3. '#' → logprob: -5.927840232849121
    4. 'Boom' → logprob: -6.052840232849121
    5. '"' → logprob: -6.427840232849121
    6. '{' → logprob: -6.802840232849121
    7. 'Data' → logprob: -7.427840232849121
    8. 'Board' → logprob: -8.302840232849121
    9. 'Game' → logprob: -8.302840232849121
    10. 'Scenario' → logprob: -9.052840232849121

Token 227: ' {' (ID: 354)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -1.0977753400802612
    2. 'set' → logprob: -1.2227753400802612
    3. ' {' → logprob: -1.5977753400802612
    4. ' #{' → logprob: -2.847775459289551
    5. '{' → logprob: -3.347775459289551
    6. 'Set' → logprob: -3.472775459289551
    7. ' Set' → logprob: -3.972775459289551
    8. '#{' → logprob: -4.347775459289551
    9. ' #' → logprob: -4.472775459289551
    10. '#' → logprob: -6.722775459289551

Token 228: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.01056454423815012
    2. ' t' → logprob: -4.76056432723999
    3. '{' → logprob: -6.26056432723999
    4. '`t' → logprob: -11.135564804077148
    5. '#' → logprob: -11.635564804077148
    6. ' {' → logprob: -11.760564804077148
    7. ':t' → logprob: -12.510564804077148
    8. '[t' → logprob: -14.385564804077148
    9. '(t' → logprob: -14.635564804077148
    10. '}' → logprob: -14.885564804077148

Token 229: '}:' (ID: 33132)
  Prédit: '}:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}:' → logprob: -0.0014897463843226433
    2. '}' → logprob: -6.751489639282227
    3. ':' → logprob: -9.001489639282227
    4. '}:{' → logprob: -9.376489639282227
    5. '},' → logprob: -9.751489639282227
    6. ':#' → logprob: -10.876489639282227
    7. '#' → logprob: -11.126489639282227
    8. '}.' → logprob: -12.751489639282227
    9. '#:' → logprob: -13.001489639282227
    10. ':d' → logprob: -13.001489639282227

Token 230: '")
' (ID: 1896)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.9367724061012268
    2. '")' → logprob: -1.436772346496582
    3. ' {' → logprob: -1.561772346496582
    4. '")
' → logprob: -2.186772346496582
    5. '{'' → logprob: -4.686772346496582
    6. '"' → logprob: -4.811772346496582
    7. '",' → logprob: -5.436772346496582
    8. '\n' → logprob: -5.561772346496582
    9. '{x' → logprob: -5.811772346496582
    10. 'expl' → logprob: -6.061772346496582

Token 231: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.042201023548841476
    2. ' for' → logprob: -3.417201042175293
    3. '   ' → logprob: -4.917201042175293
    4. 'print' → logprob: -6.917201042175293
    5. 'grid' → logprob: -9.417201042175293
    6. '0' → logprob: -10.542201042175293
    7. 'count' → logprob: -10.792201042175293
    8. '[' → logprob: -11.667201042175293
    9. '    
' → logprob: -11.792201042175293
    10. '#' → logprob: -12.042201042175293

Token 232: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005200081970542669
    2. ' for' → logprob: -5.880199909210205
    3. 'print' → logprob: -6.255199909210205
    4. '   ' → logprob: -8.380200386047363
    5. 'count' → logprob: -9.005200386047363
    6. 'grid' → logprob: -10.255200386047363
    7. 'alive' → logprob: -11.505200386047363
    8. '0' → logprob: -11.630200386047363
    9. '```' → logprob: -12.130200386047363
    10. '.' → logprob: -12.380200386047363

Token 233: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.045521851629018784
    2. 'row' → logprob: -3.9205217361450195
    3. ' y' → logprob: -4.2955217361450195
    4. ' cy' → logprob: -5.1705217361450195
    5. 'cy' → logprob: -6.7955217361450195
    6. 'y' → logprob: -6.7955217361450195
    7. ' line' → logprob: -6.9205217361450195
    8. ' i' → logprob: -7.0455217361450195
    9. ' r' → logprob: -7.5455217361450195
    10. 'r' → logprob: -8.92052173614502

Token 234: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00320563861168921
    2. 'in' → logprob: -5.7532057762146
    3. '   ' → logprob: -10.753205299377441
    4. ' ' → logprob: -13.378205299377441
    5. 'row' → logprob: -13.503205299377441
    6. '	in' → logprob: -14.128205299377441
    7. ',row' → logprob: -14.253205299377441
    8. '  ' → logprob: -14.753205299377441
    9. '_in' → logprob: -15.003205299377441
    10. 'In' → logprob: -15.128205299377441

Token 235: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.49202829599380493
    2. 'expl' → logprob: -1.3670282363891602
    3. ' grid' → logprob: -2.36702823638916
    4. ' exploded' → logprob: -3.24202823638916
    5. 'range' → logprob: -7.99202823638916
    6. ' range' → logprob: -8.11702823638916
    7. '   ' → logprob: -9.36702823638916
    8. 'explode' → logprob: -9.49202823638916
    9. 'ex' → logprob: -9.99202823638916
    10. '(grid' → logprob: -11.11702823638916

Token 236: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06141975149512291
    2. '):' → logprob: -3.436419725418091
    3. '   ' → logprob: -4.81141996383667
    4. ')' → logprob: -4.93641996383667
    5. ':
' → logprob: -5.06141996383667
    6. 'print' → logprob: -5.93641996383667
    7. '       ' → logprob: -6.56141996383667
    8. '):
' → logprob: -7.81141996383667
    9. ',' → logprob: -8.936419486999512
    10. ' print' → logprob: -8.936419486999512

Token 237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00726312818005681
    2. '   ' → logprob: -5.50726318359375
    3. ' print' → logprob: -5.75726318359375
    4. 'print' → logprob: -11.25726318359375
    5. '```' → logprob: -13.50726318359375
    6. '    ' → logprob: -13.88226318359375
    7. '	print' → logprob: -13.88226318359375
    8. '     ' → logprob: -14.50726318359375
    9. '<|end|>' → logprob: -14.50726318359375
    10. '	   ' → logprob: -14.88226318359375

Token 238: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5365731120109558
    2. '   ' → logprob: -1.2865731716156006
    3. 'print' (adapté à ' print') → logprob: -2.2865731716156006
    4. '       ' → logprob: -3.2865731716156006
    5. '	print' → logprob: -11.16157341003418
    6. '           ' → logprob: -11.28657341003418
    7. '    ' → logprob: -12.03657341003418
    8. '```' → logprob: -12.78657341003418
    9. ' ' → logprob: -13.03657341003418
    10. '     ' → logprob: -14.53657341003418

Token 239: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.16041208803653717
    2. '("' → logprob: -1.910412073135376
    3. '(' → logprob: -8.660411834716797
    4. '(*' → logprob: -11.285411834716797
    5. '()' → logprob: -14.785411834716797
    6. '"' → logprob: -14.785411834716797
    7. '(""' → logprob: -14.785411834716797
    8. '''.' → logprob: -15.160411834716797
    9. '("")' → logprob: -15.285411834716797
    10. '('').' → logprob: -16.285411834716797

Token 240: ''.' (ID: 6120)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.01878809742629528
    2. ''.' → logprob: -4.143787860870361
    3. '"' → logprob: -7.018787860870361
    4. '".' → logprob: -7.268787860870361
    5. ' ''.' → logprob: -7.268787860870361
    6. '''' → logprob: -7.893787860870361
    7. ''' → logprob: -10.26878833770752
    8. '('' → logprob: -10.51878833770752
    9. '```' → logprob: -11.51878833770752
    10. '   ' → logprob: -12.14378833770752

Token 241: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.0280383548888494e-06
    2. ' join' → logprob: -14.625000953674316
    3. '''.' → logprob: -15.000000953674316
    4. '(join' → logprob: -17.125001907348633
    5. '.join' → logprob: -17.375001907348633
    6. 'jo' → logprob: -18.125001907348633
    7. ''.' → logprob: -18.250001907348633
    8. 'print' → logprob: -18.250001907348633
    9. '('').' → logprob: -18.250001907348633
    10. '```' → logprob: -18.750001907348633

Token 242: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.011050770990550518
    2. 'row' → logprob: -4.511050701141357
    3. '[row' → logprob: -13.511051177978516
    4. ')' → logprob: -14.511051177978516
    5. ',row' → logprob: -14.636051177978516
    6. '	row' → logprob: -15.386051177978516
    7. ' row' → logprob: -15.386051177978516
    8. '(' → logprob: -15.636051177978516
    9. '=row' → logprob: -17.261051177978516
    10. '$row' → logprob: -17.761051177978516

Token 243: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0067167943343520164
    2. '))' → logprob: -5.006716728210449
    3. ')))' → logprob: -14.25671672821045
    4. '())' → logprob: -15.00671672821045
    5. ')`' → logprob: -15.88171672821045
    6. ')")' → logprob: -15.88171672821045
    7. ')}' → logprob: -16.506717681884766
    8. '})' → logprob: -16.756717681884766
    9. '')' → logprob: -17.006717681884766
    10. ')
' → logprob: -17.131717681884766


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 241
Tokens correctement prédits (1ère position, stricte): 136
Tokens correctement prédits (1ère position, avec adaptation): 141
Tokens correctement prédits (top 10): 217
Précision stricte (1ère position): 56.43%
Précision adaptée (1ère position): 58.51%
Précision (top 10): 90.04%
================================================================================
