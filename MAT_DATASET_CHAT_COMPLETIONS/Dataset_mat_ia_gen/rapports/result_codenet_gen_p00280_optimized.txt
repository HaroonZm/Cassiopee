================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:22:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque

j, y = map(int, input().split())

# 判定関数：現在のスコアが試合終了状態かどうか
def is_game_over(j, y):
    if j >= 5 or y >= 5:
        if (j <= 3 and j == 5 and y <= 3) or (y <= 3 and y == 5 and j <= 3):
            return True
    if j == 6 and y == 4:
        return True
    if y == 6 and j == 4:
        return True
    if j == 4 and y == 4:
        return False
    # 4-4以降の判断
    if j >= 4 and y >= 4:
        diff = abs(j - y)
        if diff == 2:
            return True
        if diff == 1:
            return False
    return False

# 4-4特有の条件判定
def next_states(j, y):
    states = []
    # 試合終了なら戻らない
    if is_game_over(j, y):
        return states
    # 4-4以降のルール
    if j >= 4 and y >= 4:
        # 引き分け条件回避のため特別扱い
        # from 4-4
        if j == 4 and y == 4:
            # Aとった場合5-4、Bとった場合4-5
            states.append((j+1, y, 'A'))
            states.append((j, y+1, 'B'))
            return states
        # それ以降
        diff = j - y
        if diff == 1:  # jが1点リード
            # jがもう1点取れば終了
            if j +1 == 6 and y == 4:
                states.append((j+1, y, 'A'))
            else:
                states.append((j+1, y, 'A'))
                states.append((j, y+1, 'B'))
        elif diff == -1:  # yが1点リード
            if y +1 == 6 and j == 4:
                states.append((j, y+1, 'B'))
            else:
                states.append((j+1, y, 'A'))
                states.append((j, y+1, 'B'))
        else:
            # 引き分けかどうか判定→終わり
            # 4-4で双方が１点ずつとったとき(5-5)は引き分け
            # つまり5-5で終了
            if j == 5 and y == 5:
                return []
            # それ以外は両方加点可能（理論上ないが念のため）
            states.append((j+1, y, 'A'))
            states.append((j, y+1, 'B'))
        return states

    # 通常ルール
    if j <= 3 and y <= 3:
        if not is_game_over(j+1, y):
            states.append((j+1, y, 'A'))
        elif (j+1) == 5 and y <= 3:
            states.append((j+1, y, 'A'))
        if not is_game_over(j, y+1):
            states.append((j, y+1, 'B'))
        elif (y+1) == 5 and j <= 3:
            states.append((j, y+1, 'B'))
        # 追加で終わるケース
        if is_game_over(j+1, y):
            states.append((j+1, y, 'A'))
        if is_game_over(j, y+1):
            states.append((j, y+1, 'B'))
        return states
    # 4未満でも片方が4以上の不正状態はないので
    # 通常追加
    states.append((j+1, y, 'A'))
    states.append((j, y+1, 'B'))
    return states

goal = (j, y)
paths = []

memo = dict()
def dfs(cj, cy, path):
    if (cj, cy) == (0,0):
        paths.append(path[::-1])
        return
    if (cj, cy) in memo:
        for p in memo[(cj, cy)]:
            paths.append((path + p)[::-1])
        return
    res = []
    # 左から来た状態を考える
    if cj > 0:
        pj, py = cj-1, cy
        # ここからの遷移でAで現状態になっているか
        if (pj, py, 'A') in prev[(cj, cy)]:
            dfs(pj, py, path+'A')
    if cy > 0:
        pj, py = cj, cy-1
        if (pj, py, 'B') in prev[(cj, cy)]:
            dfs(pj, py, path+'B')

# 逆方向で前状態を記録
# forward探索でグラフ構築し、逆に探索して列挙
max_score = 7
prev = dict()
for i in range(max_score):
    for k in range(max_score):
        prev[(i,k)] = []

queue = deque()
queue.append((0,0))
visited = set()
visited.add((0,0))

while queue:
    cj, cy = queue.popleft()
    for nj, ny, c in next_states(cj, cy):
        if nj > 6 or ny > 6:
            continue
        if (nj, ny) not in visited:
            visited.add((nj, ny))
            queue.append((nj, ny))
        prev[(nj, ny)].append((cj, cy, c))

# 与えられた得点が探索可能かチェック
if (j,y) not in visited:
    exit()

ans = []
def backtrack(x,y,path):
    if (x,y) == (0,0):
        ans.append(path[::-1])
        return
    for pj, py, c in sorted(prev[(x,y)], key=lambda a: a[2], reverse=True):
        backtrack(pj, py, path+c)

backtrack(j,y,'')

ans.sort()
for a in ans:
    print(a)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.41044583916664124
    2. ' abc' → logprob: -1.9104458093643188
    3. 'deque' → logprob: -2.4104459285736084
    4. ' defaultdict' → logprob: -2.5354459285736084
    5. 'default' → logprob: -4.660445690155029
    6. ' deque' → logprob: -6.035445690155029
    7. 'Counter' → logprob: -6.160445690155029
    8. '```' → logprob: -6.160445690155029
    9. ' Counter' → logprob: -6.660445690155029
    10. ' named' → logprob: -7.035445690155029

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011326847597956657
    2. '\' → logprob: -5.636326789855957
    3. '\n' → logprob: -6.511326789855957
    4. '\(' → logprob: -6.511326789855957
    5. '.' → logprob: -6.761326789855957
    6. '[' → logprob: -7.011326789855957
    7. '```' → logprob: -7.261326789855957
    8. '(
' → logprob: -7.636326789855957
    9. ' (' → logprob: -8.136326789855957
    10. '`' → logprob: -8.386326789855957

Token 5: 'j' (ID: 73)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028613658621907234
    2. '\' → logprob: -4.528613567352295
    3. '\n' → logprob: -5.403613567352295
    4. '\(' → logprob: -5.653613567352295
    5. 'a' → logprob: -6.278613567352295
    6. 'd' → logprob: -6.278613567352295
    7. '[' → logprob: -6.653613567352295
    8. 'newline' → logprob: -6.903613567352295
    9. 'import' → logprob: -7.403613567352295
    10. '.' → logprob: -7.903613567352295

Token 6: ',' (ID: 11)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5213109850883484
    2. 'e' → logprob: -1.6463110446929932
    3. 'a' → logprob: -2.771311044692993
    4. 'o' → logprob: -2.896311044692993
    5. 's' → logprob: -3.146311044692993
    6. ' =' → logprob: -3.646311044692993
    7. '=' → logprob: -4.271310806274414
    8. 'd' → logprob: -4.896310806274414
    9. 'q' → logprob: -6.021310806274414
    10. '   ' → logprob: -7.646310806274414

Token 7: ' y' (ID: 342)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6400928497314453
    2. '=' → logprob: -1.8900928497314453
    3. ' ' → logprob: -2.1400928497314453
    4. ' k' → logprob: -2.7650928497314453
    5. 'k' → logprob: -3.0150928497314453
    6. '_' → logprob: -3.2650928497314453
    7. 'o' → logprob: -4.515092849731445
    8. '    ' → logprob: -5.140092849731445
    9. '  ' → logprob: -5.140092849731445
    10. ' o' → logprob: -5.390092849731445

Token 8: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7325476408004761
    2. ' =' → logprob: -0.9825476408004761
    3. ',' → logprob: -2.7325477600097656
    4. 'u' → logprob: -2.8575477600097656
    5. ')' → logprob: -4.482547760009766
    6. 'o' → logprob: -5.857547760009766
    7. ' ' → logprob: -6.107547760009766
    8. '[' → logprob: -6.232547760009766
    9. 'a' → logprob: -6.982547760009766
    10. '_' → logprob: -7.857547760009766

Token 9: ' map' (ID: 4014)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2506459057331085
    2. ' ' → logprob: -1.7506458759307861
    3. 'deque' → logprob: -3.125645875930786
    4. ' deque' → logprob: -5.875646114349365
    5. '1' → logprob: -7.750646114349365
    6. ' map' → logprob: -8.750645637512207
    7. '[]' → logprob: -9.125645637512207
    8. '10' → logprob: -9.250645637512207
    9. 'map' → logprob: -9.250645637512207
    10. 'range' → logprob: -9.375645637512207

Token 10: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012932199984788895
    2. '(lambda' → logprob: -4.512932300567627
    3. '(str' → logprob: -7.387932300567627
    4. '<|end|>' → logprob: -7.637932300567627
    5. '(int' → logprob: -7.887932300567627
    6. '```' → logprob: -10.012931823730469
    7. '(input' → logprob: -10.137931823730469
    8. '(token' → logprob: -10.262931823730469
    9. '(user' → logprob: -10.262931823730469
    10. '()' → logprob: -10.387931823730469

Token 11: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4220448434352875
    2. ')' → logprob: -1.2970448732376099
    3. '(input' → logprob: -3.0470447540283203
    4. '(token' → logprob: -5.42204475402832
    5. '(data' → logprob: -6.17204475402832
    6. '```' → logprob: -6.67204475402832
    7. '(next' → logprob: -6.79704475402832
    8. '(str' → logprob: -6.92204475402832
    9. '('' → logprob: -6.92204475402832
    10. '(int' → logprob: -7.04704475402832

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12693609297275543
    2. ' input' → logprob: -2.126936197280884
    3. '(input' → logprob: -12.126935958862305
    4. ',input' → logprob: -13.501935958862305
    5. ')' → logprob: -14.626935958862305
    6. '=input' → logprob: -15.376935958862305
    7. '	input' → logprob: -16.001935958862305
    8. ' ' → logprob: -16.251935958862305
    9. '<input' → logprob: -16.376935958862305
    10. 'open' → logprob: -16.626935958862305

Token 13: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18713192641735077
    2. '()' → logprob: -2.312131881713867
    3. '())' → logprob: -3.312131881713867
    4. '('' → logprob: -3.812131881713867
    5. ')' → logprob: -4.812131881713867
    6. '(()' → logprob: -6.437131881713867
    7. '("("' → logprob: -7.812131881713867
    8. '(
' → logprob: -7.937131881713867
    9. '());' → logprob: -7.937131881713867
    10. '(""))' → logprob: -8.437131881713867

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019463682547211647
    2. 'strip' → logprob: -6.251946449279785
    3. ' split' → logprob: -11.751946449279785
    4. 'rstrip' → logprob: -11.876946449279785
    5. '(split' → logprob: -13.001946449279785
    6. 'read' → logprob: -15.001946449279785
    7. ')' → logprob: -16.62694549560547
    8. 'spl' → logprob: -16.62694549560547
    9. ' strip' → logprob: -17.25194549560547
    10. '```' → logprob: -17.75194549560547

Token 15: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03437955304980278
    2. '))' → logprob: -3.409379482269287
    3. '())' → logprob: -7.409379482269287
    4. '(' → logprob: -10.409379959106445
    5. '`)' → logprob: -10.409379959106445
    6. ')`' → logprob: -10.784379959106445
    7. '()' → logprob: -11.034379959106445
    8. ')))' → logprob: -11.659379959106445
    9. '),' → logprob: -11.909379959106445
    10. ' )' → logprob: -12.534379959106445

Token 16: '#' (ID: 2)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.8848747611045837
    2. 'graph' → logprob: -1.2598748207092285
    3. 'd' → logprob: -2.3848748207092285
    4. 'q' → logprob: -2.3848748207092285
    5. 'n' → logprob: -3.7598748207092285
    6. 'dp' → logprob: -3.8848748207092285
    7. 'deque' → logprob: -4.0098748207092285
    8. 'dq' → logprob: -4.0098748207092285
    9. 'a' → logprob: -4.6348748207092285
    10. 'arr' → logprob: -4.7598748207092285

Token 17: ' 判' (ID: 178825)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5606709122657776
    2. 'd' → logprob: -1.9356708526611328
    3. 'queue' → logprob: -2.310670852661133
    4. ' queue' → logprob: -3.435670852661133
    5. 'dq' → logprob: -3.685670852661133
    6. ' q' → logprob: -3.685670852661133
    7. 'graph' → logprob: -4.060670852661133
    8. 's' → logprob: -4.560670852661133
    9. 'a' → logprob: -4.685670852661133
    10. 'Q' → logprob: -4.685670852661133

Token 18: '定' (ID: 8745)
  Prédit: '断'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '断' → logprob: -0.22839440405368805
    2. '定' → logprob: -1.6033943891525269
    3. '\xe6\x96' → logprob: -5.978394508361816
    4. '別' → logprob: -7.853394508361816
    5. '#' → logprob: -11.228394508361816
    6. '決' → logprob: -11.478394508361816
    7. '例' → logprob: -12.228394508361816
    8. 'def' → logprob: -12.353394508361816
    9. '明' → logprob: -12.978394508361816
    10. '```' → logprob: -13.228394508361816

Token 19: '関' (ID: 42366)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08711625635623932
    2. '(' → logprob: -4.212116241455078
    3. ':' → logprob: -4.212116241455078
    4. ' if' → logprob: -4.462116241455078
    5. 'i' → logprob: -4.587116241455078
    6. 'd' → logprob: -4.962116241455078
    7. 'for' → logprob: -5.087116241455078
    8. 'q' → logprob: -5.462116241455078
    9. 's' → logprob: -5.587116241455078
    10. ' ' → logprob: -5.962116241455078

Token 20: '数' (ID: 7135)
  Prédit: '数'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '数' → logprob: -0.0423114113509655
    2. '果' → logprob: -4.292311191558838
    3. '```' → logprob: -4.292311191558838
    4. '続' → logprob: -5.167311191558838
    5. '策' → logprob: -6.542311191558838
    6. '係' → logprob: -7.417311191558838
    7. '断' → logprob: -7.792311191558838
    8. 'して' → logprob: -8.104811668395996
    9. '素' → logprob: -8.417311668395996
    10. '``' → logprob: -8.417311668395996

Token 21: '：' (ID: 1817)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02824113890528679
    2. '(' → logprob: -3.6532411575317383
    3. ' def' → logprob: -6.778241157531738
    4. '(def' → logprob: -7.903241157531738
    5. 'de' → logprob: -8.403241157531738
    6. ')' → logprob: -10.028241157531738
    7. '```' → logprob: -10.153241157531738
    8. ':def' → logprob: -10.403241157531738
    9. 'd' → logprob: -10.903241157531738
    10. '(
' → logprob: -10.903241157531738

Token 22: '現在' (ID: 96436)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00861468818038702
    2. ' def' → logprob: -4.758614540100098
    3. '```' → logprob: -15.633614540100098
    4. '	def' → logprob: -17.508615493774414
    5. ' ' → logprob: -17.633615493774414
    6. 'de' → logprob: -18.633615493774414
    7. 'd' → logprob: -18.758615493774414
    8. 'import' → logprob: -18.883615493774414
    9. ' de' → logprob: -19.258615493774414
    10. ':def' → logprob: -19.508615493774414

Token 23: 'の' (ID: 3385)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.34103867411613464
    2. ')' → logprob: -2.466038703918457
    3. 'deque' → logprob: -3.341038703918457
    4. 'の' → logprob: -3.966038703918457
    5. 'b' → logprob: -4.341038703918457
    6. 'pos' → logprob: -4.716038703918457
    7. 'stack' → logprob: -4.716038703918457
    8. 'token' → logprob: -4.841038703918457
    9. 's' → logprob: -4.966038703918457
    10. 'level' → logprob: -5.216038703918457

Token 24: 'ス' (ID: 5525)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0034476518630981
    2. 'mid' → logprob: -1.3784476518630981
    3. 'k' → logprob: -2.5034475326538086
    4. 'time' → logprob: -3.3784475326538086
    5. 'd' → logprob: -3.5034475326538086
    6. 'm' → logprob: -3.7534475326538086
    7. 'player' → logprob: -3.8784475326538086
    8. 'q' → logprob: -4.003447532653809
    9. 'pos' → logprob: -4.003447532653809
    10. 'j' → logprob: -4.003447532653809

Token 25: 'コ' (ID: 12504)
  Prédit: 'テ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'テ' → logprob: -0.12981055676937103
    2. 'タ' → logprob: -2.6298105716705322
    3. 'コ' → logprob: -3.7548105716705322
    4. 'ター' → logprob: -4.754810333251953
    5. 'ト' → logprob: -5.004810333251953
    6. 'ライ' → logprob: -5.879810333251953
    7. 'キ' → logprob: -6.004810333251953
    8. 't' → logprob: -6.754810333251953
    9. 'ニ' → logprob: -7.379810333251953
    10. 'ペ' → logprob: -7.379810333251953

Token 26: 'ア' (ID: 10398)
  Prédit: 'ア'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ア' → logprob: -0.0005437385407276452
    2. 'ト' → logprob: -7.875543594360352
    3. 'ル' → logprob: -9.750543594360352
    4. '```' → logprob: -9.750543594360352
    5. 'r' → logprob: -11.125543594360352
    6. '#' → logprob: -12.000543594360352
    7. '\xef\xbd' → logprob: -12.125543594360352
    8. 'ン' → logprob: -12.250543594360352
    9. 'コ' → logprob: -12.625543594360352
    10. 'ァ' → logprob: -13.625543594360352

Token 27: 'が' (ID: 6632)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.305040568113327
    2. ' def' → logprob: -2.0550405979156494
    3. 'が' → logprob: -3.5550405979156494
    4. '(' → logprob: -3.9300405979156494
    5. '_' → logprob: -4.05504035949707
    6. 'd' → logprob: -4.30504035949707
    7. ' ' → logprob: -4.68004035949707
    8. ')' → logprob: -4.68004035949707
    9. 's' → logprob: -5.18004035949707
    10. 'を' → logprob: -5.30504035949707

Token 28: '試' (ID: 77641)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.157049298286438
    2. 'j' → logprob: -2.4070491790771484
    3. ' True' → logprob: -2.4070491790771484
    4. ' ' → logprob: -2.5320491790771484
    5. ' x' → logprob: -2.7820491790771484
    6. '0' → logprob: -3.1570491790771484
    7. ' max' → logprob: -3.2820491790771484
    8. 'x' → logprob: -3.4070491790771484
    9. 'max' → logprob: -3.7820491790771484
    10. 's' → logprob: -3.9070491790771484

Token 29: '合' (ID: 4377)
  Prédit: '験'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '験' → logprob: -0.47555193305015564
    2. '合' → logprob: -0.975551962852478
    3. '行' → logprob: -6.975552082061768
    4. '算' → logprob: -7.850552082061768
    5. '{' → logprob: -10.22555160522461
    6. '```' → logprob: -10.85055160522461
    7. '\' → logprob: -11.35055160522461
    8. '_' → logprob: -11.47555160522461
    9. '합' → logprob: -11.72555160522461
    10. '\xe7\xb7' → logprob: -12.10055160522461

Token 30: '終了' (ID: 166212)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.4561409652233124
    2. 'を' → logprob: -1.8311409950256348
    3. '終了' → logprob: -2.5811409950256348
    4. 'で' → logprob: -2.9561409950256348
    5. 'に' → logprob: -2.9561409950256348
    6. 'が' → logprob: -4.581140995025635
    7. '開始' → logprob: -6.456140995025635
    8. ''s' → logprob: -6.581140995025635
    9. '続きを' → logprob: -6.581140995025635
    10. '`' → logprob: -6.706140995025635

Token 31: '状態' (ID: 175682)
  Prédit: 'か'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'か' → logprob: -0.06983093917369843
    2. 'まで' → logprob: -3.319830894470215
    3. '時' → logprob: -4.444830894470215
    4. '条件' → logprob: -5.069830894470215
    5. 'の' → logprob: -5.944830894470215
    6. '後' → logprob: -6.069830894470215
    7. '判' → logprob: -7.069830894470215
    8. 'を' → logprob: -7.194830894470215
    9. '_' → logprob: -7.194830894470215
    10. 'して' → logprob: -7.444830894470215

Token 32: 'か' (ID: 7128)
  Prédit: 'か'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'か' → logprob: -0.21563021838665009
    2. '(' → logprob: -1.8406301736831665
    3. 'def' → logprob: -4.215630054473877
    4. ':' → logprob: -5.340630054473877
    5. 'で' → logprob: -5.715630054473877
    6. ' ' → logprob: -6.215630054473877
    7. 'を' → logprob: -6.590630054473877
    8. '()' → logprob: -6.590630054473877
    9. '_' → logprob: -6.965630054473877
    10. 'd' → logprob: -7.215630054473877

Token 33: 'どう' (ID: 85545)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04535064101219177
    2. ':' → logprob: -3.7953505516052246
    3. ' def' → logprob: -3.9203505516052246
    4. ':def' → logprob: -6.795350551605225
    5. ')' → logprob: -7.670350551605225
    6. '```' → logprob: -9.420351028442383
    7. '(' → logprob: -9.545351028442383
    8. ' :' → logprob: -10.295351028442383
    9. 'd' → logprob: -10.295351028442383
    10. ',' → logprob: -10.295351028442383

Token 34: 'か' (ID: 7128)
  Prédit: 'か'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'か' → logprob: -0.000215457082958892
    2. 'を' → logprob: -9.125215530395508
    3. 'def' → logprob: -10.625215530395508
    4. 'え' → logprob: -10.875215530395508
    5. 'な' → logprob: -11.000215530395508
    6. 'が' → logprob: -11.125215530395508
    7. 'し' → logprob: -12.000215530395508
    8. 'い' → logprob: -12.500215530395508
    9. '#' → logprob: -12.500215530395508
    10. 'き' → logprob: -12.875215530395508

Token 35: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00020091790065634996
    2. ' def' → logprob: -8.625201225280762
    3. ':' → logprob: -11.500201225280762
    4. ':def' → logprob: -12.500201225280762
    5. '```' → logprob: -13.250201225280762
    6. 'd' → logprob: -13.500201225280762
    7. 'の' → logprob: -14.375201225280762
    8. ')' → logprob: -14.500201225280762
    9. '
' → logprob: -14.625201225280762
    10. '\' → logprob: -14.875201225280762

Token 36: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003365216078236699
    2. ' def' → logprob: -5.7533650398254395
    3. '
' → logprob: -9.503365516662598
    4. '```' → logprob: -10.128365516662598
    5. ':def' → logprob: -10.628365516662598
    6. 'd' → logprob: -10.753365516662598
    7. '\' → logprob: -12.128365516662598
    8. '``' → logprob: -12.503365516662598
    9. 'de' → logprob: -12.503365516662598
    10. ':' → logprob: -12.503365516662598

Token 37: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2028207927942276
    2. 'is' → logprob: -1.7028207778930664
    3. ' check' → logprob: -7.202820777893066
    4. ' judge' → logprob: -8.827820777893066
    5. ' ' → logprob: -8.952820777893066
    6. ' game' → logprob: -9.077820777893066
    7. 'check' → logprob: -10.077820777893066
    8. 'judge' → logprob: -10.452820777893066
    9. ' dfs' → logprob: -10.702820777893066
    10. ' i' → logprob: -10.702820777893066

Token 38: '_game' (ID: 41386)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6548644304275513
    2. '_game' → logprob: -1.7798644304275513
    3. '_finished' → logprob: -1.7798644304275513
    4. '_end' → logprob: -2.6548643112182617
    5. '_finish' → logprob: -3.2798643112182617
    6. '_match' → logprob: -3.9048643112182617
    7. '_final' → logprob: -5.654864311218262
    8. '_terminal' → logprob: -6.279864311218262
    9. ' _' → logprob: -6.404864311218262
    10. '_over' → logprob: -6.529864311218262

Token 39: '_over' (ID: 34788)
  Prédit: '_over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_over' → logprob: -0.17311888933181763
    2. '_' → logprob: -1.9231188297271729
    3. '_end' → logprob: -5.298119068145752
    4. 'over' → logprob: -5.548119068145752
    5. '_finished' → logprob: -5.798119068145752
    6. '終了' → logprob: -8.423118591308594
    7. ' _' → logprob: -8.673118591308594
    8. '_finish' → logprob: -8.923118591308594
    9. '_complete' → logprob: -10.048118591308594
    10. ' over' → logprob: -10.173118591308594

Token 40: '(j' (ID: 4997)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.055435746908187866
    2. '(score' → logprob: -3.0554356575012207
    3. ' (' → logprob: -5.555435657501221
    4. '(s' → logprob: -6.180435657501221
    5. '():' → logprob: -8.180436134338379
    6. '(current' → logprob: -8.805436134338379
    7. '(scores' → logprob: -9.430436134338379
    8. '(game' → logprob: -9.930436134338379
    9. '(state' → logprob: -9.930436134338379
    10. '(space' → logprob: -10.680436134338379

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011418196372687817
    2. ',y' → logprob: -5.386418342590332
    3. ',j' → logprob: -6.136418342590332
    4. '_score' → logprob: -6.386418342590332
    5. ',s' → logprob: -6.636418342590332
    6. ' ,' → logprob: -7.761418342590332
    7. ',current' → logprob: -8.011418342590332
    8. 'score' → logprob: -8.136418342590332
    9. '_scores' → logprob: -8.886418342590332
    10. 's' → logprob: -9.136418342590332

Token 42: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4287632405757904
    2. ' y' → logprob: -1.0537632703781128
    3. ' ' → logprob: -10.303763389587402
    4. '	y' → logprob: -12.616263389587402
    5. '   ' → logprob: -12.803763389587402
    6. '  ' → logprob: -12.803763389587402
    7. ',' → logprob: -12.928763389587402
    8. ' ' → logprob: -13.178763389587402
    9. 'j' → logprob: -13.303763389587402
    10. ')' → logprob: -13.553763389587402

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12888871133327484
    2. ',' → logprob: -2.1288886070251465
    3. ')' → logprob: -6.7538886070251465
    4. ',j' → logprob: -7.8788886070251465
    5. ' ):' → logprob: -8.253889083862305
    6. ' ,' → logprob: -10.753889083862305
    7. '):
' → logprob: -10.878889083862305
    8. ')：' → logprob: -11.128889083862305
    9. ':' → logprob: -11.253889083862305
    10. ',y' → logprob: -11.378889083862305

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05918830260634422
    2. ':' → logprob: -2.9341883659362793
    3. ' return' → logprob: -6.559188365936279
    4. ':
' → logprob: -7.059188365936279
    5. ' ' → logprob: -7.684188365936279
    6. ':return' → logprob: -7.809188365936279
    7. '\n' → logprob: -8.059187889099121
    8. ' :' → logprob: -8.934187889099121
    9. '    ' → logprob: -8.934187889099121
    10. '\' → logprob: -9.434187889099121

Token 45: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048017844557762146
    2. ' return' → logprob: -3.173017740249634
    3. 'return' → logprob: -5.423017978668213
    4. ' ' → logprob: -8.923017501831055
    5. ':return' → logprob: -9.173017501831055
    6. ')' → logprob: -9.423017501831055
    7. ':' → logprob: -9.548017501831055
    8. '    ' → logprob: -9.923017501831055
    9. '	return' → logprob: -10.298017501831055
    10. ' if' → logprob: -10.298017501831055

Token 46: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.021613314747810364
    2. 'j' → logprob: -3.896613359451294
    3. ' (' → logprob: -7.771613121032715
    4. ' abs' → logprob: -7.896613121032715
    5. ' y' → logprob: -8.896613121032715
    6. '   ' → logprob: -9.896613121032715
    7. ' ' → logprob: -10.146613121032715
    8. 'abs' → logprob: -11.021613121032715
    9. 'y' → logprob: -11.396613121032715
    10. '(j' → logprob: -12.021613121032715

Token 47: ' >=' (ID: 5064)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.0445281267166138
    2. '>=' → logprob: -1.1695281267166138
    3. ' >=' → logprob: -1.9195281267166138
    4. ' ==' → logprob: -2.044528007507324
    5. '<=' → logprob: -3.294528007507324
    6. '<' → logprob: -4.544528007507324
    7. ' <=' → logprob: -4.669528007507324
    8. ' <' → logprob: -6.169528007507324
    9. '>' → logprob: -6.544528007507324
    10. ' >' → logprob: -7.794528007507324

Token 48: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0763118267059326
    2. '7' → logprob: -1.3263118267059326
    3. '11' → logprob: -1.4513118267059326
    4. '100' → logprob: -2.7013118267059326
    5. '15' → logprob: -3.3263118267059326
    6. '21' → logprob: -4.076312065124512
    7. '4' → logprob: -4.326312065124512
    8. '3' → logprob: -4.576312065124512
    9. '5' → logprob: -5.076312065124512
    10. '25' → logprob: -5.951312065124512

Token 49: '5' (ID: 20)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.376106858253479
    2. '7' → logprob: -1.626106858253479
    3. '100' → logprob: -1.626106858253479
    4. '25' → logprob: -2.3761067390441895
    5. '11' → logprob: -2.6261067390441895
    6. '4' → logprob: -3.0011067390441895
    7. '21' → logprob: -3.0011067390441895
    8. '5' → logprob: -3.6261067390441895
    9. '3' → logprob: -3.7511067390441895
    10. '15' → logprob: -4.1261067390441895

Token 50: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.04677805304527283
    2. ' and' → logprob: -3.1717779636383057
    3. 'or' → logprob: -6.296778202056885
    4. 'and' → logprob: -6.671778202056885
    5. '0' → logprob: -8.296777725219727
    6. ':' → logprob: -9.046777725219727
    7. '   ' → logprob: -9.046777725219727
    8. ' ' → logprob: -9.171777725219727
    9. '    ' → logprob: -10.421777725219727
    10. ':return' → logprob: -12.046777725219727

Token 51: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.011410650797188282
    2. 'y' → logprob: -4.511410713195801
    3. '   ' → logprob: -8.0114107131958
    4. '    ' → logprob: -10.6364107131958
    5. ' ' → logprob: -12.5114107131958
    6. '  ' → logprob: -13.3864107131958
    7. '	y' → logprob: -14.0114107131958
    8. ' j' → logprob: -14.7614107131958
    9. ' ' → logprob: -15.8864107131958
    10. 'j' → logprob: -16.136409759521484

Token 52: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5232796669006348
    2. '>=' → logprob: -0.8982796669006348
    3. '<|end|>' → logprob: -10.273279190063477
    4. ' ' → logprob: -10.398279190063477
    5. ')>=' → logprob: -10.398279190063477
    6. '   ' → logprob: -10.648279190063477
    7. ']>=' → logprob: -11.023279190063477
    8. '<|end|>' → logprob: -11.648279190063477
    9. '>' → logprob: -12.773279190063477
    10. '  ' → logprob: -12.898279190063477

Token 53: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.004805091768503189
    2. ' ' → logprob: -5.379805088043213
    3. '3' → logprob: -9.254805564880371
    4. '  ' → logprob: -11.004805564880371
    5. '   ' → logprob: -11.129805564880371
    6. '10' → logprob: -11.379805564880371
    7. '15' → logprob: -11.754805564880371
    8. '2' → logprob: -12.129805564880371
    9. '25' → logprob: -12.192305564880371
    10. '7' → logprob: -12.317305564880371

Token 54: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00037073178100399673
    2. ' ' → logprob: -8.000370979309082
    3. '1' → logprob: -11.750370979309082
    4. '3' → logprob: -11.750370979309082
    5. '10' → logprob: -12.375370979309082
    6. '15' → logprob: -12.375370979309082
    7. '25' → logprob: -13.250370979309082
    8. '2' → logprob: -13.562870979309082
    9. '５' → logprob: -13.812870979309082
    10. '6' → logprob: -13.875370979309082

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006685059983283281
    2. ':return' → logprob: -5.381685256958008
    3. ' or' → logprob: -7.256685256958008
    4. ' and' → logprob: -7.381685256958008
    5. ' :' → logprob: -8.006685256958008
    6. '   ' → logprob: -8.506685256958008
    7. ':
' → logprob: -9.131685256958008
    8. '):' → logprob: -9.881685256958008
    9. '：' → logprob: -11.631685256958008
    10. 'and' → logprob: -11.756685256958008

Token 56: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08447176963090897
    2. '   ' → logprob: -3.0844717025756836
    3. '       ' → logprob: -3.8344717025756836
    4. ':return' → logprob: -4.584471702575684
    5. ':
' → logprob: -7.084471702575684
    6. ' and' → logprob: -7.209471702575684
    7. ' :' → logprob: -7.459471702575684
    8. '):' → logprob: -7.709471702575684
    9. ' or' → logprob: -8.584471702575684
    10. ' return' → logprob: -8.584471702575684

Token 57: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7546634078025818
    2. '   ' → logprob: -1.5046634674072266
    3. ' return' → logprob: -1.7546634674072266
    4. 'return' → logprob: -2.0046634674072266
    5. ' ' → logprob: -10.129663467407227
    6. '    ' → logprob: -11.629663467407227
    7. '	return' → logprob: -11.879663467407227
    8. '  ' → logprob: -12.879663467407227
    9. '      ' → logprob: -13.504663467407227
    10. '   ' → logprob: -13.504663467407227

Token 58: ' (' (ID: 350)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.20936386287212372
    2. 'abs' → logprob: -1.8343638181686401
    3. ' j' → logprob: -4.08436393737793
    4. 'j' → logprob: -5.08436393737793
    5. '(abs' → logprob: -5.33436393737793
    6. ' (' → logprob: -7.45936393737793
    7. ' ' → logprob: -7.95936393737793
    8. '(j' → logprob: -8.20936393737793
    9. '   ' → logprob: -9.70936393737793
    10. '(' → logprob: -10.45936393737793

Token 59: 'j' (ID: 73)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.4004535675048828
    2. ' abs' → logprob: -1.7754535675048828
    3. 'j' → logprob: -2.025453567504883
    4. ' j' → logprob: -3.775453567504883
    5. '(abs' → logprob: -5.525453567504883
    6. '(j' → logprob: -7.650453567504883
    7. ' (' → logprob: -7.650453567504883
    8. '   ' → logprob: -8.025453567504883
    9. 'max' → logprob: -8.400453567504883
    10. ' ' → logprob: -9.150453567504883

Token 60: ' <=' (ID: 5017)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6968712210655212
    2. '>=' → logprob: -1.196871280670166
    3. ' -' → logprob: -1.696871280670166
    4. '-' → logprob: -5.071871280670166
    5. ' ==' → logprob: -5.321871280670166
    6. '==' → logprob: -5.446871280670166
    7. ' ' → logprob: -7.196871280670166
    8. '   ' → logprob: -9.446870803833008
    9. '+' → logprob: -10.446870803833008
    10. ' !=' → logprob: -10.696870803833008

Token 61: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.970409095287323
    2. '3' → logprob: -1.3454091548919678
    3. '2' → logprob: -1.7204091548919678
    4. '1' → logprob: -1.9704091548919678
    5. ' ' → logprob: -3.8454091548919678
    6. 'y' → logprob: -4.345408916473389
    7. '0' → logprob: -5.345408916473389
    8. ' y' → logprob: -7.095408916473389
    9. '5' → logprob: -7.595408916473389
    10. '6' → logprob: -7.720408916473389

Token 62: '3' (ID: 18)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.7869950532913208
    2. '3' → logprob: -1.4119950532913208
    3. '1' → logprob: -2.1619949340820312
    4. '2' → logprob: -2.1619949340820312
    5. 'y' → logprob: -2.7869949340820312
    6. '0' → logprob: -5.661994934082031
    7. '6' → logprob: -6.411994934082031
    8. '5' → logprob: -7.161994934082031
    9. '9' → logprob: -7.286994934082031
    10. '-' → logprob: -7.661994934082031

Token 63: ' and' (ID: 326)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.5273675918579102
    2. ' and' → logprob: -1.0273675918579102
    3. ')' → logprob: -3.15236759185791
    4. ' )' → logprob: -5.27736759185791
    5. ' ' → logprob: -6.65236759185791
    6. 'and' → logprob: -6.77736759185791
    7. 'or' → logprob: -7.02736759185791
    8. '   ' → logprob: -8.52736759185791
    9. '    ' → logprob: -9.02736759185791
    10. '）' → logprob: -9.15236759185791

Token 64: ' j' (ID: 441)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.182830348610878
    2. 'y' → logprob: -1.8078303337097168
    3. ' j' → logprob: -7.057830333709717
    4. 'j' → logprob: -7.182830333709717
    5. ' ' → logprob: -7.682830333709717
    6. ')' → logprob: -7.932830333709717
    7. '   ' → logprob: -8.557830810546875
    8. '0' → logprob: -9.807830810546875
    9. ' )' → logprob: -9.807830810546875
    10. ' (' → logprob: -9.932830810546875

Token 65: ' ==' (ID: 951)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9765701293945312
    2. ' <=' → logprob: -2.1015701293945312
    3. ' >=' → logprob: -2.2265701293945312
    4. ')' → logprob: -2.3515701293945312
    5. ' +' → logprob: -2.6015701293945312
    6. ' ==' → logprob: -2.8515701293945312
    7. '==' → logprob: -2.9765701293945312
    8. '>=' → logprob: -3.6015701293945312
    9. '<=' → logprob: -3.7265701293945312
    10. ' <' → logprob: -4.226570129394531

Token 66: ' ' (ID: 220)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.7551072835922241
    2. '5' → logprob: -1.2551072835922241
    3. '4' → logprob: -2.1301074028015137
    4. '0' → logprob: -2.7551074028015137
    5. ' ' → logprob: -3.5051074028015137
    6. ' y' → logprob: -3.5051074028015137
    7. '3' → logprob: -6.755107402801514
    8. '2' → logprob: -7.255107402801514
    9. '   ' → logprob: -8.380106925964355
    10. '1' → logprob: -8.567606925964355

Token 67: '5' (ID: 20)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1087881401181221
    2. '5' → logprob: -2.358788251876831
    3. '4' → logprob: -5.108788013458252
    4. '0' → logprob: -6.358788013458252
    5. ' y' → logprob: -7.858788013458252
    6. '3' → logprob: -8.48378849029541
    7. '2' → logprob: -9.35878849029541
    8. ' ' → logprob: -10.10878849029541
    9. '1' → logprob: -10.85878849029541
    10. 'j' → logprob: -12.17128849029541

Token 68: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07815736532211304
    2. ' and' → logprob: -3.078157424926758
    3. ' )' → logprob: -4.453157424926758
    4. 'and' → logprob: -4.828157424926758
    5. ' or' → logprob: -5.203157424926758
    6. '):' → logprob: -6.203157424926758
    7. '）' → logprob: -6.953157424926758
    8. 'or' → logprob: -7.953157424926758
    9. '   ' → logprob: -8.828157424926758
    10. '       ' → logprob: -9.078157424926758

Token 69: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.1457449346780777
    2. 'y' → logprob: -2.020745038986206
    3. ' j' → logprob: -7.645744800567627
    4. '0' → logprob: -7.895744800567627
    5. '   ' → logprob: -7.895744800567627
    6. 'j' → logprob: -8.020745277404785
    7. ' (' → logprob: -8.020745277404785
    8. ' ' → logprob: -8.145745277404785
    9. '5' → logprob: -8.395745277404785
    10. '3' → logprob: -9.145745277404785

Token 70: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.642285943031311
    2. '<=' → logprob: -1.267285943031311
    3. ' <' → logprob: -3.0172858238220215
    4. '<' → logprob: -3.1422858238220215
    5. '==' → logprob: -3.2672858238220215
    6. ' ==' → logprob: -3.7672858238220215
    7. ' >=' → logprob: -3.8922858238220215
    8. '>=' → logprob: -4.5172858238220215
    9. ')' → logprob: -5.7672858238220215
    10. ' !=' → logprob: -6.8922858238220215

Token 71: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.10483773797750473
    2. '2' → logprob: -3.104837656021118
    3. ' ' → logprob: -3.229837656021118
    4. '1' → logprob: -4.354837894439697
    5. '4' → logprob: -6.604837894439697
    6. '0' → logprob: -7.479837894439697
    7. '5' → logprob: -9.229837417602539
    8. '   ' → logprob: -9.292337417602539
    9. 'j' → logprob: -10.042337417602539
    10. '  ' → logprob: -10.167337417602539

Token 72: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.03084561787545681
    2. '2' → logprob: -4.030845642089844
    3. ' ' → logprob: -4.780845642089844
    4. '1' → logprob: -5.780845642089844
    5. '4' → logprob: -6.905845642089844
    6. '5' → logprob: -9.905845642089844
    7. '0' → logprob: -10.093345642089844
    8. 'j' → logprob: -11.905845642089844
    9. '<|end|>' → logprob: -12.405845642089844
    10. '３' → logprob: -12.780845642089844

Token 73: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6460009813308716
    2. ')' → logprob: -0.7710009813308716
    3. ' )' → logprob: -4.771000862121582
    4. ' ):' → logprob: -5.646000862121582
    5. ':' → logprob: -7.396000862121582
    6. '):
' → logprob: -8.521000862121582
    7. ' and' → logprob: -8.896000862121582
    8. ')：' → logprob: -9.146000862121582
    9. '）' → logprob: -9.646000862121582
    10. ')==' → logprob: -10.646000862121582

Token 74: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11745261400938034
    2. '):' → logprob: -2.867452621459961
    3. ')' → logprob: -3.492452621459961
    4. ' and' → logprob: -4.742452621459961
    5. ' or' → logprob: -4.742452621459961
    6. ':return' → logprob: -5.867452621459961
    7. ' :' → logprob: -7.117452621459961
    8. '：' → logprob: -7.492452621459961
    9. ':
' → logprob: -7.617452621459961
    10. '   ' → logprob: -7.867452621459961

Token 75: ' (' (ID: 350)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.761684775352478
    2. ' (' → logprob: -0.761684775352478
    3. ' j' → logprob: -4.261684894561768
    4. 'y' → logprob: -4.511684894561768
    5. '   ' → logprob: -4.761684894561768
    6. ' False' → logprob: -5.136684894561768
    7. '(y' → logprob: -5.136684894561768
    8. ' True' → logprob: -5.511684894561768
    9. '(' → logprob: -5.511684894561768
    10. '    ' → logprob: -5.886684894561768

Token 76: 'y' (ID: 88)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.34911057353019714
    2. 'y' → logprob: -1.2241106033325195
    3. ' (' → logprob: -8.59911060333252
    4. 'j' → logprob: -8.59911060333252
    5. ' j' → logprob: -9.34911060333252
    6. ' ' → logprob: -10.22411060333252
    7. '    ' → logprob: -10.34911060333252
    8. '   ' → logprob: -10.72411060333252
    9. '(y' → logprob: -10.72411060333252
    10. '(' → logprob: -10.97411060333252

Token 77: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.1807357221841812
    2. ' ==' → logprob: -2.4307358264923096
    3. ' >=' → logprob: -3.3057358264923096
    4. '<=' → logprob: -3.5557358264923096
    5. '==' → logprob: -4.5557355880737305
    6. '>=' → logprob: -6.6807355880737305
    7. ' ' → logprob: -8.30573558807373
    8. ' <' → logprob: -10.43073558807373
    9. ')' → logprob: -10.68073558807373
    10. '=' → logprob: -10.80573558807373

Token 78: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6327105164527893
    2. '3' → logprob: -0.7577105164527893
    3. '4' → logprob: -9.757710456848145
    4. '<|end|>' → logprob: -11.570210456848145
    5. 'j' → logprob: -11.695210456848145
    6. '2' → logprob: -11.945210456848145
    7. '  ' → logprob: -12.445210456848145
    8. '5' → logprob: -12.507710456848145
    9. ' j' → logprob: -12.695210456848145
    10. '1' → logprob: -12.882710456848145

Token 79: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0009728021104820073
    2. ' ' → logprob: -7.125972747802734
    3. '4' → logprob: -9.250972747802734
    4. '2' → logprob: -10.125972747802734
    5. '1' → logprob: -11.125972747802734
    6. '5' → logprob: -11.875972747802734
    7. 'j' → logprob: -12.813472747802734
    8. '３' → logprob: -14.500972747802734
    9. '```' → logprob: -14.500972747802734
    10. '<|end|>' → logprob: -14.938472747802734

Token 80: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.012652561068534851
    2. 'and' → logprob: -4.387652397155762
    3. ')' → logprob: -9.262652397155762
    4. '):' → logprob: -10.637652397155762
    5. ' )' → logprob: -11.762652397155762
    6. ' ' → logprob: -12.137652397155762
    7. 'と' → logprob: -12.262652397155762
    8. '   ' → logprob: -13.387652397155762
    9. 'そして' → logprob: -14.262652397155762
    10. ' ):' → logprob: -14.512652397155762

Token 81: ' y' (ID: 342)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.25119584798812866
    2. ' y' → logprob: -1.7511959075927734
    3. 'j' → logprob: -3.1261959075927734
    4. 'y' → logprob: -5.501195907592773
    5. ' ' → logprob: -8.001195907592773
    6. '5' → logprob: -8.751195907592773
    7. ' (' → logprob: -10.626195907592773
    8. ')' → logprob: -10.876195907592773
    9. '	j' → logprob: -11.688695907592773
    10. ' )' → logprob: -11.813695907592773

Token 82: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.029796313494443893
    2. '==' → logprob: -3.5297963619232178
    3. ' >=' → logprob: -10.654796600341797
    4. ' ' → logprob: -11.279796600341797
    5. ')' → logprob: -12.404796600341797
    6. '>=' → logprob: -13.779796600341797
    7. '=' → logprob: -14.279796600341797
    8. '<|end|>' → logprob: -14.654796600341797
    9. ')==' → logprob: -14.779796600341797
    10. ' and' → logprob: -14.904796600341797

Token 83: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.25198978185653687
    2. ' ' → logprob: -1.5019898414611816
    3. '<|end|>' → logprob: -10.126989364624023
    4. 'j' → logprob: -12.126989364624023
    5. '<|end|>' → logprob: -12.876989364624023
    6. ' j' → logprob: -13.001989364624023
    7. '５' → logprob: -13.126989364624023
    8. ' five' → logprob: -13.251989364624023
    9. '  ' → logprob: -13.501989364624023
    10. '4' → logprob: -13.689489364624023

Token 84: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0077051762491464615
    2. ' ' → logprob: -4.882705211639404
    3. '4' → logprob: -9.882704734802246
    4. 'j' → logprob: -10.257704734802246
    5. ' j' → logprob: -12.132704734802246
    6. '<|end|>' → logprob: -13.445204734802246
    7. '５' → logprob: -13.820204734802246
    8. '3' → logprob: -14.132704734802246
    9. 'y' → logprob: -14.882704734802246
    10. '1' → logprob: -14.882704734802246

Token 85: ' and' (ID: 326)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01581098698079586
    2. ')' → logprob: -4.640810966491699
    3. ' ):' → logprob: -5.265810966491699
    4. ':' → logprob: -8.1408109664917
    5. ' )' → logprob: -8.5158109664917
    6. '):
' → logprob: -8.8908109664917
    7. ' and' → logprob: -9.2658109664917
    8. ')：' → logprob: -9.2658109664917
    9. 'and' → logprob: -11.1408109664917
    10. '   ' → logprob: -11.3908109664917

Token 86: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.10044161975383759
    2. 'j' → logprob: -2.3504416942596436
    3. ' ' → logprob: -9.225441932678223
    4. ')' → logprob: -10.350441932678223
    5. ' y' → logprob: -10.350441932678223
    6. '5' → logprob: -10.600441932678223
    7. ' )' → logprob: -11.600441932678223
    8. '	j' → logprob: -11.975441932678223
    9. 'y' → logprob: -12.350441932678223
    10. ' ' → logprob: -12.350441932678223

Token 87: ' <=' (ID: 5017)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.3380790948867798
    2. ' <=' → logprob: -1.5880790948867798
    3. ' ==' → logprob: -1.8380790948867798
    4. ')' → logprob: -1.9630790948867798
    5. ' )' → logprob: -2.2130789756774902
    6. ' <' → logprob: -2.7130789756774902
    7. '==' → logprob: -3.5880789756774902
    8. '>=' → logprob: -4.33807897567749
    9. '<=' → logprob: -4.58807897567749
    10. '<' → logprob: -6.46307897567749

Token 88: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.033796798437833786
    2. ' ' → logprob: -3.408796787261963
    3. '4' → logprob: -9.033797264099121
    4. '2' → logprob: -10.658797264099121
    5. '1' → logprob: -12.283797264099121
    6. '5' → logprob: -13.533797264099121
    7. '  ' → logprob: -15.158797264099121
    8. '３' → logprob: -15.346297264099121
    9. '<|end|>' → logprob: -15.783797264099121
    10. '۳' → logprob: -15.846297264099121

Token 89: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.1318875446449965e-05
    2. '4' → logprob: -11.125041007995605
    3. '2' → logprob: -11.500041007995605
    4. ' ' → logprob: -11.625041007995605
    5. '1' → logprob: -12.375041007995605
    6. '３' → logprob: -14.312541007995605
    7. 'j' → logprob: -14.812541007995605
    8. '5' → logprob: -15.000041007995605
    9. '0' → logprob: -15.187541007995605
    10. '۳' → logprob: -15.187541007995605

Token 90: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006767125800251961
    2. ')' → logprob: -5.131767272949219
    3. ' ):' → logprob: -7.756767272949219
    4. ':' → logprob: -8.506767272949219
    5. '):
' → logprob: -9.256767272949219
    6. ')：' → logprob: -9.381767272949219
    7. ' )' → logprob: -11.256767272949219
    8. '）：' → logprob: -12.381767272949219
    9. '   ' → logprob: -13.131767272949219
    10. ' and' → logprob: -13.381767272949219

Token 91: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4292750060558319
    2. '       ' → logprob: -1.3042750358581543
    3. ':
' → logprob: -3.4292750358581543
    4. '   ' → logprob: -4.304275035858154
    5. '):' → logprob: -4.679275035858154
    6. ':return' → logprob: -4.929275035858154
    7. '
' → logprob: -5.304275035858154
    8. ')' → logprob: -5.679275035858154
    9. '):
' → logprob: -6.429275035858154
    10. ' :' → logprob: -6.804275035858154

Token 92: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8928417563438416
    2. ' return' → logprob: -0.8928417563438416
    3. 'return' (adapté à ' return') → logprob: -1.8928418159484863
    4. '   ' → logprob: -4.267841815948486
    5. ' ' → logprob: -4.892841815948486
    6. '
' → logprob: -6.267841815948486
    7. ' 
' → logprob: -6.517841815948486
    8. ':return' → logprob: -6.767841815948486
    9. '    ' → logprob: -6.892841815948486
    10. ')' → logprob: -7.517841815948486

Token 93: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.5340130925178528
    2. 'False' → logprob: -1.659013032913208
    3. ' True' → logprob: -1.659013032913208
    4. ' False' → logprob: -3.409013032913208
    5. ' ' → logprob: -11.409012794494629
    6. 'None' → logprob: -12.659012794494629
    7. '0' → logprob: -13.221512794494629
    8. '(True' → logprob: -13.534012794494629
    9. '1' → logprob: -13.846512794494629
    10. 'F' → logprob: -13.909012794494629

Token 94: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5676565766334534
    2. '       ' → logprob: -1.3176565170288086
    3. '
' → logprob: -1.9426565170288086
    4. ')' → logprob: -4.567656517028809
    5. '<|end|>' → logprob: -5.442656517028809
    6. '	return' → logprob: -6.942656517028809
    7. ' ' → logprob: -7.317656517028809
    8. ')
' → logprob: -7.442656517028809
    9. '    ' → logprob: -7.442656517028809
    10. '  ' → logprob: -7.567656517028809

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010226069018244743
    2. '
' → logprob: -5.760226249694824
    3. '<|end|>' → logprob: -6.510226249694824
    4. '    
' → logprob: -6.635226249694824
    5. ')' → logprob: -7.135226249694824
    6. '\n' → logprob: -7.260226249694824
    7. ':return' → logprob: -7.510226249694824
    8. '       ' → logprob: -8.135226249694824
    9. ' ' → logprob: -8.635226249694824
    10. 'return' → logprob: -8.635226249694824

Token 96: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003242607053834945
    2. '    
' → logprob: -10.000324249267578
    3. ' return' → logprob: -10.375324249267578
    4. ')' → logprob: -10.375324249267578
    5. 'return' → logprob: -10.375324249267578
    6. ' else' → logprob: -10.625324249267578
    7. ' True' → logprob: -10.875324249267578
    8. 'else' → logprob: -10.875324249267578
    9. 'False' → logprob: -10.875324249267578
    10. ' False' → logprob: -11.000324249267578

Token 97: ' j' (ID: 441)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6395995616912842
    2. ' j' → logprob: -1.1395995616912842
    3. ' abs' → logprob: -2.139599561691284
    4. 'j' → logprob: -4.389599800109863
    5. '(j' → logprob: -4.764599800109863
    6. '(' → logprob: -5.639599800109863
    7. '(abs' → logprob: -5.889599800109863
    8. ' ' → logprob: -6.014599800109863
    9. ' max' → logprob: -6.014599800109863
    10. 'abs' → logprob: -6.264599800109863

Token 98: ' ==' (ID: 951)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.019071178510785103
    2. '>=' → logprob: -4.644071102142334
    3. ' ==' → logprob: -4.769071102142334
    4. ' >' → logprob: -7.894071102142334
    5. '==' → logprob: -8.269071578979492
    6. ' ' → logprob: -9.644071578979492
    7. ' <=' → logprob: -10.269071578979492
    8. ' or' → logprob: -10.894071578979492
    9. '>' → logprob: -11.394071578979492
    10. '   ' → logprob: -12.269071578979492

Token 99: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.2599463164806366
    2. ' ' → logprob: -1.634946346282959
    3. 'y' → logprob: -4.259946346282959
    4. '4' → logprob: -4.259946346282959
    5. ' y' → logprob: -5.884946346282959
    6. '3' → logprob: -6.259946346282959
    7. '0' → logprob: -7.634946346282959
    8. 'j' → logprob: -8.7599458694458
    9. '10' → logprob: -8.8849458694458
    10. '  ' → logprob: -10.0099458694458

Token 100: '6' (ID: 21)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.1646905243396759
    2. 'y' → logprob: -2.1646904945373535
    3. '4' → logprob: -3.9146904945373535
    4. '3' → logprob: -4.9146904945373535
    5. 'j' → logprob: -5.2896904945373535
    6. ' ' → logprob: -6.2896904945373535
    7. '0' → logprob: -6.7896904945373535
    8. '15' → logprob: -7.2896904945373535
    9. '10' → logprob: -7.6646904945373535
    10. '6' → logprob: -9.039690971374512

Token 101: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1923317313194275
    2. ' or' → logprob: -1.8173317909240723
    3. 'and' → logprob: -4.442331790924072
    4. ':' → logprob: -8.067331314086914
    5. '   ' → logprob: -8.442331314086914
    6. 'or' → logprob: -8.817331314086914
    7. ' ' → logprob: -9.817331314086914
    8. '  ' → logprob: -13.317331314086914
    9. '    ' → logprob: -13.442331314086914
    10. ' :' → logprob: -14.067331314086914

Token 102: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.6797976493835449
    2. 'y' → logprob: -0.8047976493835449
    3. ' (' → logprob: -4.054797649383545
    4. '(' → logprob: -4.679797649383545
    5. 'j' → logprob: -5.054797649383545
    6. ' j' → logprob: -5.304797649383545
    7. '(y' → logprob: -5.679797649383545
    8. ' ' → logprob: -6.679797649383545
    9. '5' → logprob: -7.054797649383545
    10. '(j' → logprob: -7.179797649383545

Token 103: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.37958577275276184
    2. ' ==' → logprob: -1.7545857429504395
    3. '>=' → logprob: -2.3795857429504395
    4. ' >=' → logprob: -3.6295857429504395
    5. '<=' → logprob: -4.1295857429504395
    6. ' <=' → logprob: -5.2545857429504395
    7. '<' → logprob: -6.7545857429504395
    8. ' <' → logprob: -8.004586219787598
    9. '!=' → logprob: -8.254586219787598
    10. ' ' → logprob: -8.504586219787598

Token 104: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.17179930210113525
    2. '4' → logprob: -2.2967991828918457
    3. '6' → logprob: -3.5467991828918457
    4. '0' → logprob: -3.7967991828918457
    5. ' ' → logprob: -5.296799182891846
    6. '3' → logprob: -7.796799182891846
    7. '7' → logprob: -8.296799659729004
    8. '1' → logprob: -8.921799659729004
    9. '2' → logprob: -9.484299659729004
    10. '   ' → logprob: -9.984299659729004

Token 105: '4' (ID: 19)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.27058324217796326
    2. '4' → logprob: -1.6455832719802856
    3. '6' → logprob: -3.520583152770996
    4. '0' → logprob: -4.395583152770996
    5. '3' → logprob: -6.520583152770996
    6. '2' → logprob: -8.020583152770996
    7. '1' → logprob: -8.395583152770996
    8. '7' → logprob: -9.333083152770996
    9. 'j' → logprob: -10.270583152770996
    10. '(' → logprob: -11.145583152770996

Token 106: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017472846433520317
    2. ' or' → logprob: -4.267472743988037
    3. ':return' → logprob: -6.517472743988037
    4. ' and' → logprob: -6.767472743988037
    5. '   ' → logprob: -8.267473220825195
    6. ' :' → logprob: -8.767473220825195
    7. ':
' → logprob: -9.017473220825195
    8. '       ' → logprob: -9.892473220825195
    9. 'and' → logprob: -10.392473220825195
    10. 'or' → logprob: -11.017473220825195

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001026258571073413
    2. ' or' → logprob: -7.751026153564453
    3. '   ' → logprob: -8.251026153564453
    4. ':' → logprob: -8.376026153564453
    5. ' return' → logprob: -9.751026153564453
    6. ' ' → logprob: -11.376026153564453
    7. ':return' → logprob: -12.001026153564453
    8. '<|end|>' → logprob: -12.001026153564453
    9. '	' → logprob: -12.376026153564453
    10. ' :' → logprob: -12.626026153564453

Token 108: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6241522431373596
    2. ' return' → logprob: -0.8741522431373596
    3. '       ' → logprob: -3.124152183532715
    4. '   ' → logprob: -5.874152183532715
    5. '	return' → logprob: -8.249152183532715
    6. ' ' → logprob: -11.374152183532715
    7. '           ' → logprob: -12.874152183532715
    8. ':return' → logprob: -13.624152183532715
    9. '
' → logprob: -13.874152183532715
    10. 'eturn' → logprob: -13.999152183532715

Token 109: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0032088463194668293
    2. ' True' → logprob: -5.753208637237549
    3. 'False' → logprob: -10.378209114074707
    4. '(True' → logprob: -17.75320816040039
    5. ' False' → logprob: -18.12820816040039
    6. '   ' → logprob: -18.87820816040039
    7. 'true' → logprob: -19.25320816040039
    8. '1' → logprob: -19.87820816040039
    9. ' ' → logprob: -20.25320816040039
    10. '=True' → logprob: -20.62820816040039

Token 110: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.546478935983032e-05
    2. '    
' → logprob: -11.125025749206543
    3. '<|end|>' → logprob: -12.750025749206543
    4. ' return' → logprob: -13.375025749206543
    5. 'return' → logprob: -13.500025749206543
    6. '	return' → logprob: -14.000025749206543
    7. '\n' → logprob: -14.250025749206543
    8. '    ' → logprob: -14.625025749206543
    9. '\' → logprob: -15.000025749206543
    10. '       ' → logprob: -15.125025749206543

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.5577775128767826e-06
    2. ' return' → logprob: -13.375005722045898
    3. '    
' → logprob: -14.000005722045898
    4. '<|end|>' → logprob: -14.250005722045898
    5. '	return' → logprob: -14.375005722045898
    6. 'return' → logprob: -15.000005722045898
    7. ')' → logprob: -15.500005722045898
    8. ' if' → logprob: -15.625005722045898
    9. '```' → logprob: -15.625005722045898
    10. '    ' → logprob: -15.750005722045898

Token 112: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.2723104848410003e-05
    2. 'return' → logprob: -11.750022888183594
    3. ' if' → logprob: -12.500022888183594
    4. ' return' → logprob: -12.500022888183594
    5. '    
' → logprob: -13.625022888183594
    6. ')' → logprob: -13.875022888183594
    7. '    ' → logprob: -13.875022888183594
    8. '.' → logprob: -14.250022888183594
    9. ' ' → logprob: -14.500022888183594
    10. 'if' (adapté à ' if') → logprob: -14.625022888183594

Token 113: ' y' (ID: 342)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8960545063018799
    2. '(j' → logprob: -0.8960545063018799
    3. ' j' → logprob: -2.27105450630188
    4. 'j' → logprob: -2.77105450630188
    5. '(' → logprob: -4.396054267883301
    6. '(abs' → logprob: -6.146054267883301
    7. '((' → logprob: -6.771054267883301
    8. ' abs' → logprob: -6.896054267883301
    9. ' ' → logprob: -8.1460542678833
    10. 'abs' → logprob: -8.3960542678833

Token 114: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20142687857151031
    2. ' ==' → logprob: -1.7014268636703491
    3. ' ' → logprob: -12.32642650604248
    4. '=' → logprob: -12.95142650604248
    5. '==
' → logprob: -13.07642650604248
    6. '>=' → logprob: -13.32642650604248
    7. '6' → logprob: -13.70142650604248
    8. ']==' → logprob: -15.07642650604248
    9. ' >=' → logprob: -15.32642650604248
    10. '>' → logprob: -15.32642650604248

Token 115: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.003323388285934925
    2. ' ' → logprob: -5.753323554992676
    3. '4' → logprob: -8.878323554992676
    4. '5' → logprob: -12.815823554992676
    5. '   ' → logprob: -14.378323554992676
    6. '  ' → logprob: -14.753323554992676
    7. '۶' → logprob: -15.315823554992676
    8. '６' → logprob: -15.503323554992676
    9. '٦' → logprob: -15.503323554992676
    10. '' → logprob: -15.690823554992676

Token 116: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0003914695407729596
    2. '4' → logprob: -8.000391006469727
    3. '5' → logprob: -10.375391006469727
    4. ' ' → logprob: -10.875391006469727
    5. '６' → logprob: -14.187891006469727
    6. '64' → logprob: -14.625391006469727
    7. '٦' → logprob: -14.750391006469727
    8. '0' → logprob: -15.125391006469727
    9. '۶' → logprob: -15.187891006469727
    10. '६' → logprob: -15.187891006469727

Token 117: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03804585337638855
    2. 'and' → logprob: -3.288045883178711
    3. '   ' → logprob: -13.663045883178711
    4. ' ' → logprob: -13.913045883178711
    5. ' и' → logprob: -14.413045883178711
    6. '==' → logprob: -14.413045883178711
    7. '和' → logprob: -15.288045883178711
    8. '	and' → logprob: -15.538045883178711
    9. ' ==' → logprob: -15.788045883178711
    10. 'と' → logprob: -16.03804588317871

Token 118: ' j' (ID: 441)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.038212697952985764
    2. ' ' → logprob: -3.288212776184082
    3. 'j' → logprob: -8.913212776184082
    4. ' j' → logprob: -10.413212776184082
    5. '6' → logprob: -12.538212776184082
    6. '   ' → logprob: -12.788212776184082
    7. '  ' → logprob: -16.538211822509766
    8. '' → logprob: -16.788211822509766
    9. '４' → logprob: -17.288211822509766
    10. ' four' → logprob: -17.413211822509766

Token 119: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2519506812095642
    2. ' ==' → logprob: -1.501950740814209
    3. '=' → logprob: -11.00195026397705
    4. ' ' → logprob: -12.75195026397705
    5. ' ' → logprob: -14.75195026397705
    6. '==
' → logprob: -15.00195026397705
    7. ']==' → logprob: -15.37695026397705
    8. ' =' → logprob: -15.62695026397705
    9. '===' → logprob: -15.62695026397705
    10. '()==' → logprob: -16.001951217651367

Token 120: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0004892880679108202
    2. ' ' → logprob: -7.625489234924316
    3. '４' → logprob: -15.250489234924316
    4. '۴' → logprob: -15.437989234924316
    5. '```' → logprob: -15.937989234924316
    6. '٤' → logprob: -16.187990188598633
    7. '   ' → logprob: -16.250490188598633
    8. '४' → logprob: -16.312990188598633
    9. '' → logprob: -16.437990188598633
    10. '<|end|>' → logprob: -16.500490188598633

Token 121: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -5.512236498361744e-07
    2. '４' → logprob: -15.375000953674316
    3. ' ' → logprob: -16.0
    4. '۴' → logprob: -16.625
    5. '४' → logprob: -16.875
    6. '৪' → logprob: -16.875
    7. '٤' → logprob: -17.875
    8. '' → logprob: -18.125
    9. '<|end|>' → logprob: -19.5
    10. '464' → logprob: -19.9375

Token 122: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005030240397900343
    2. ':
' → logprob: -5.380030155181885
    3. '       ' → logprob: -8.380030632019043
    4. ':return' → logprob: -9.255030632019043
    5. '   ' → logprob: -10.005030632019043
    6. ' :' → logprob: -10.505030632019043
    7. '：' → logprob: -12.630030632019043
    8. '):' → logprob: -12.755030632019043
    9. ':

' → logprob: -13.880030632019043
    10. ' or' → logprob: -13.880030632019043

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.306760805164231e-05
    2. '   ' → logprob: -11.75001335144043
    3. ' return' → logprob: -12.50001335144043
    4. 'return' → logprob: -13.87501335144043
    5. '           ' → logprob: -15.12501335144043
    6. '     ' → logprob: -16.25001335144043
    7. '	' → logprob: -16.37501335144043
    8. '      ' → logprob: -17.25001335144043
    9. '	return' → logprob: -17.25001335144043
    10. ':return' → logprob: -18.75001335144043

Token 124: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2565710246562958
    2. ' return' → logprob: -1.5065710544586182
    3. '       ' → logprob: -5.381570816040039
    4. 'True' → logprob: -11.006570816040039
    5. '	return' → logprob: -11.756570816040039
    6. 'eturn' → logprob: -13.131570816040039
    7. ':return' → logprob: -13.631570816040039
    8. '   ' → logprob: -13.756570816040039
    9. ' True' → logprob: -14.381570816040039
    10. '           ' → logprob: -14.381570816040039

Token 125: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0001239196863025427
    2. ' True' → logprob: -9.000123977661133
    3. 'False' → logprob: -14.500123977661133
    4. '(True' → logprob: -21.375123977661133
    5. '=True' → logprob: -23.000123977661133
    6. 'Yes' → logprob: -23.625123977661133
    7. '6' → logprob: -24.375123977661133
    8. ' ' → logprob: -24.500123977661133
    9. '1' → logprob: -24.625123977661133
    10. 'true' → logprob: -24.750123977661133

Token 126: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.742448022123426e-05
    2. '    
' → logprob: -10.125067710876465
    3. '	return' → logprob: -11.625067710876465
    4. ' return' → logprob: -12.125067710876465
    5. '<|end|>' → logprob: -13.125067710876465
    6. '\n' → logprob: -13.375067710876465
    7. '
' → logprob: -13.375067710876465
    8. ')' → logprob: -13.625067710876465
    9. '  
' → logprob: -13.625067710876465
    10. '```' → logprob: -13.875067710876465

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.702754474943504e-05
    2. ')' → logprob: -11.25003719329834
    3. '<|end|>' → logprob: -11.75003719329834
    4. ' return' → logprob: -12.25003719329834
    5. '    
' → logprob: -13.25003719329834
    6. ' ' → logprob: -13.50003719329834
    7. '	return' → logprob: -13.62503719329834
    8. '       ' → logprob: -13.87503719329834
    9. '```' → logprob: -14.00003719329834
    10. ':return' → logprob: -14.00003719329834

Token 128: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08955132961273193
    2. 'return' → logprob: -2.4645514488220215
    3. 'if' (adapté à ' if') → logprob: -8.089550971984863
    4. ' return' → logprob: -8.214550971984863
    5. '	return' → logprob: -11.339550971984863
    6. 'False' → logprob: -12.339550971984863
    7. ' if' → logprob: -12.464550971984863
    8. '    
' → logprob: -12.714550971984863
    9. '       ' → logprob: -12.964550971984863
    10. ' ' → logprob: -13.089550971984863

Token 129: ' j' (ID: 441)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.8407537937164307
    2. ' (' → logprob: -0.9657537937164307
    3. ' j' → logprob: -2.3407537937164307
    4. '(j' → logprob: -3.2157537937164307
    5. '(abs' → logprob: -3.5907537937164307
    6. 'abs' → logprob: -4.465753555297852
    7. 'j' → logprob: -4.590753555297852
    8. '(' → logprob: -6.590753555297852
    9. ' ' → logprob: -7.965753555297852
    10. ' max' → logprob: -8.590753555297852

Token 130: ' ==' (ID: 951)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.42739206552505493
    2. ' ==' → logprob: -1.5523920059204102
    3. '>=' → logprob: -2.42739200592041
    4. '==' → logprob: -3.05239200592041
    5. ' >' → logprob: -8.42739200592041
    6. ' ' → logprob: -9.17739200592041
    7. ' -' → logprob: -9.55239200592041
    8. '>' → logprob: -9.55239200592041
    9. ' <=' → logprob: -10.42739200592041
    10. '-' → logprob: -11.17739200592041

Token 131: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.5666135549545288
    2. ' ' → logprob: -1.1916135549545288
    3. '7' → logprob: -2.5666136741638184
    4. '5' → logprob: -3.5666136741638184
    5. '4' → logprob: -3.8166136741638184
    6. 'y' → logprob: -6.816613674163818
    7. ' y' → logprob: -7.566613674163818
    8. '  ' → logprob: -10.37911319732666
    9. 'j' → logprob: -10.56661319732666
    10. '   ' → logprob: -10.69161319732666

Token 132: '4' (ID: 19)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.9172012805938721
    2. '7' → logprob: -1.542201280593872
    3. '4' → logprob: -1.667201280593872
    4. '5' → logprob: -1.667201280593872
    5. 'y' → logprob: -4.792201042175293
    6. 'j' → logprob: -8.417201042175293
    7. ' ' → logprob: -9.479701042175293
    8. '
' → logprob: -10.167201042175293
    9. '3' → logprob: -10.292201042175293
    10. 'x' → logprob: -10.354701042175293

Token 133: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20177581906318665
    2. 'and' → logprob: -1.7017757892608643
    3. ' or' → logprob: -8.076775550842285
    4. 'or' → logprob: -10.826775550842285
    5. ' ' → logprob: -11.076775550842285
    6. '6' → logprob: -12.826775550842285
    7. '   ' → logprob: -13.076775550842285
    8. ')' → logprob: -13.076775550842285
    9. 'と' → logprob: -13.451775550842285
    10. '和' → logprob: -13.451775550842285

Token 134: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.040521252900362015
    2. '6' → logprob: -3.2905211448669434
    3. ' y' → logprob: -6.040521144866943
    4. 'j' → logprob: -10.290521621704102
    5. '4' → logprob: -10.290521621704102
    6. '2' → logprob: -11.415521621704102
    7. ' ' → logprob: -11.415521621704102
    8. '0' → logprob: -13.040521621704102
    9. '   ' → logprob: -13.290521621704102
    10. '	y' → logprob: -14.665521621704102

Token 135: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02078489400446415
    2. ' ==' → logprob: -3.895784854888916
    3. '>=' → logprob: -9.145785331726074
    4. '<=' → logprob: -9.270785331726074
    5. ' ' → logprob: -11.145785331726074
    6. '6' → logprob: -11.770785331726074
    7. ' <=' → logprob: -12.520785331726074
    8. ' >=' → logprob: -12.520785331726074
    9. '=' → logprob: -12.770785331726074
    10. '==
' → logprob: -12.895785331726074

Token 136: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -5.347765181795694e-05
    2. '0' → logprob: -10.625053405761719
    3. '2' → logprob: -11.250053405761719
    4. ' ' → logprob: -12.125053405761719
    5. '4' → logprob: -12.375053405761719
    6. 'j' → logprob: -13.312553405761719
    7. '5' → logprob: -13.500053405761719
    8. '3' → logprob: -13.875053405761719
    9. '６' → logprob: -14.687553405761719
    10. '1' → logprob: -14.875053405761719

Token 137: '4' (ID: 19)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.001298330957069993
    2. '4' → logprob: -7.376298427581787
    3. '0' → logprob: -7.751298427581787
    4. '2' → logprob: -8.751297950744629
    5. '5' → logprob: -10.376297950744629
    6. '3' → logprob: -10.626297950744629
    7. '1' → logprob: -11.376297950744629
    8. 'j' → logprob: -11.688797950744629
    9. '６' → logprob: -13.876297950744629
    10. '```' → logprob: -14.126297950744629

Token 138: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006242787465453148
    2. ':
' → logprob: -5.256242752075195
    3. '   ' → logprob: -7.506242752075195
    4. ':return' → logprob: -8.381242752075195
    5. ' or' → logprob: -9.006242752075195
    6. ' :' → logprob: -10.131242752075195
    7. '       ' → logprob: -10.756242752075195
    8. '：' → logprob: -11.006242752075195
    9. ' and' → logprob: -11.506242752075195
    10. '):' → logprob: -11.631242752075195

Token 139: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019069778500124812
    2. '       ' → logprob: -6.376906871795654
    3. ' return' → logprob: -8.626907348632812
    4. 'return' → logprob: -11.876907348632812
    5. '	return' → logprob: -12.126907348632812
    6. ':' → logprob: -12.376907348632812
    7. '   ' → logprob: -12.751907348632812
    8. ':return' → logprob: -13.876907348632812
    9. ' ' → logprob: -14.126907348632812
    10. '	' → logprob: -14.126907348632812

Token 140: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.43312788009643555
    2. '   ' → logprob: -1.1831278800964355
    3. ' return' → logprob: -3.3081278800964355
    4. '       ' → logprob: -4.8081278800964355
    5. '	return' → logprob: -8.558128356933594
    6. ' ' → logprob: -8.933128356933594
    7. '  ' → logprob: -10.058128356933594
    8. '
' → logprob: -10.683128356933594
    9. 'False' → logprob: -11.183128356933594
    10. '    ' → logprob: -11.308128356933594

Token 141: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -6.384836888173595e-05
    2. 'True' → logprob: -9.7500638961792
    3. ' False' → logprob: -12.1250638961792
    4. '0' → logprob: -17.125062942504883
    5. '(False' → logprob: -17.750062942504883
    6. 'None' → logprob: -18.125062942504883
    7. 'F' → logprob: -18.500062942504883
    8. 'false' → logprob: -19.625062942504883
    9. 'return' → logprob: -19.750062942504883
    10. 'Fl' → logprob: -19.750062942504883

Token 142: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000587821879889816
    2. '<|end|>' → logprob: -8.500587463378906
    3. 'return' → logprob: -9.000587463378906
    4. ' return' → logprob: -9.375587463378906
    5. '	return' → logprob: -9.625587463378906
    6. '    
' → logprob: -10.125587463378906
    7. ' ' → logprob: -11.500587463378906
    8. '
' → logprob: -11.500587463378906
    9. '\n' → logprob: -11.750587463378906
    10. 'if' → logprob: -12.000587463378906

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002807623823173344
    2. ' return' → logprob: -9.000280380249023
    3. 'return' → logprob: -9.625280380249023
    4. ' if' → logprob: -10.875280380249023
    5. '	return' → logprob: -11.125280380249023
    6. 'if' → logprob: -11.125280380249023
    7. '    
' → logprob: -11.625280380249023
    8. ')' → logprob: -11.750280380249023
    9. '.' → logprob: -12.250280380249023
    10. ' ' → logprob: -12.500280380249023

Token 144: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09775001555681229
    2. 'return' → logprob: -2.472749948501587
    3. ' return' → logprob: -5.722750186920166
    4. 'if' → logprob: -5.847750186920166
    5. '    ' → logprob: -7.347750186920166
    6. ' ' → logprob: -7.847750186920166
    7. ' if' → logprob: -8.222749710083008
    8. ')' → logprob: -8.222749710083008
    9. '       ' → logprob: -8.472749710083008
    10. 'else' → logprob: -8.472749710083008

Token 145: ' ' (ID: 220)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1780390441417694
    2. ' return' → logprob: -2.178039073944092
    3. '   ' → logprob: -3.053039073944092
    4. 'if' → logprob: -6.303039073944092
    5. ' if' → logprob: -7.303039073944092
    6. ' ' → logprob: -10.553038597106934
    7. '	return' → logprob: -10.803038597106934
    8. 'else' → logprob: -11.053038597106934
    9. '       ' → logprob: -11.678038597106934
    10. 'elif' → logprob: -11.803038597106934

Token 146: '4' (ID: 19)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6344068646430969
    2. 'if' → logprob: -0.7594068646430969
    3. '   ' → logprob: -7.384407043457031
    4. ' return' → logprob: -7.759407043457031
    5. 'elif' → logprob: -7.759407043457031
    6. ' if' → logprob: -8.634407043457031
    7. 'else' → logprob: -9.759407043457031
    8. '#' → logprob: -10.134407043457031
    9. 'while' → logprob: -10.509407043457031
    10. '       ' → logprob: -11.634407043457031

Token 147: '-' (ID: 12)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6502220034599304
    2. ' >=' → logprob: -1.2752220630645752
    3. ' >' → logprob: -3.400222063064575
    4. '-' → logprob: -3.650222063064575
    5. ' and' → logprob: -4.150221824645996
    6. '<=' → logprob: -4.150221824645996
    7. '>=' → logprob: -4.275221824645996
    8. ' -' → logprob: -4.275221824645996
    9. ' <' → logprob: -4.525221824645996
    10. ' ==' → logprob: -4.525221824645996

Token 148: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.021316934376955032
    2. '3' → logprob: -4.021317005157471
    3. '5' → logprob: -5.896317005157471
    4. 'j' → logprob: -9.021316528320312
    5. '
' → logprob: -10.146316528320312
    6. '-' → logprob: -10.521316528320312
    7. '#' → logprob: -10.896316528320312
    8. '>' → logprob: -11.021316528320312
    9. 'all' → logprob: -11.021316528320312
    10. ')' → logprob: -11.396316528320312

Token 149: '以' (ID: 5924)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.37392282485961914
    2. ' if' → logprob: -1.7489228248596191
    3. '   ' → logprob: -1.9989228248596191
    4. 'return' → logprob: -6.373922824859619
    5. ' return' → logprob: -7.373922824859619
    6. 'elif' → logprob: -9.998922348022461
    7. ' ' → logprob: -10.248922348022461
    8. '    
' → logprob: -10.748922348022461
    9. '```' → logprob: -11.123922348022461
    10. '    ' → logprob: -11.623922348022461

Token 150: '降' (ID: 36722)
  Prédit: '降'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '降' → logprob: -0.019317220896482468
    2. '外' → logprob: -4.519317150115967
    3. '後' → logprob: -5.894317150115967
    4. 'て' → logprob: -6.144317150115967
    5. '上' → logprob: -6.644317150115967
    6. '下' → logprob: -7.269317150115967
    7. '
' → logprob: -8.519317626953125
    8. '1' → logprob: -8.894317626953125
    9. '```' → logprob: -8.894317626953125
    10. '

' → logprob: -9.144317626953125

Token 151: 'の' (ID: 3385)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.48217132687568665
    2. '   ' → logprob: -1.1071712970733643
    3. ' if' → logprob: -2.9821712970733643
    4. 'return' → logprob: -7.107171535491943
    5. 'diff' → logprob: -7.857171535491943
    6. ' return' → logprob: -9.107171058654785
    7. 'elif' → logprob: -11.107171058654785
    8. '  ' → logprob: -12.107171058654785
    9. ' diff' → logprob: -12.107171058654785
    10. ' ' → logprob: -12.232171058654785

Token 152: '判断' (ID: 104512)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03425607830286026
    2. '差' → logprob: -4.6592559814453125
    3. 'diff' → logprob: -4.6592559814453125
    4. 'abs' → logprob: -4.7842559814453125
    5. 'elif' → logprob: -5.2842559814453125
    6. '#' → logprob: -7.9092559814453125
    7. 'min' → logprob: -8.159255981445312
    8. 'difference' → logprob: -8.534255981445312
    9. 'dif' → logprob: -8.909255981445312
    10. 'score' → logprob: -9.284255981445312

Token 153: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2671254873275757
    2. ' if' → logprob: -1.7671254873275757
    3. 'if' → logprob: -2.7671256065368652
    4. ':' → logprob: -8.142125129699707
    5. '    ' → logprob: -8.517125129699707
    6. ',' → logprob: -9.642125129699707
    7. '  ' → logprob: -10.017125129699707
    8. 'diff' → logprob: -10.142125129699707
    9. '```' → logprob: -10.892125129699707
    10. ' ' → logprob: -11.017125129699707

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45712241530418396
    2. ' if' → logprob: -1.2071224451065063
    3. 'if' → logprob: -2.707122325897217
    4. 'diff' → logprob: -7.832122325897217
    5. ' return' → logprob: -8.832122802734375
    6. '    ' → logprob: -9.207122802734375
    7. ' diff' → logprob: -9.582122802734375
    8. ' i' → logprob: -9.582122802734375
    9. 'return' → logprob: -10.207122802734375
    10. '  ' → logprob: -10.332122802734375

Token 155: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11629191786050797
    2. ' if' → logprob: -2.3662919998168945
    3. 'diff' → logprob: -4.4912919998168945
    4. 'return' → logprob: -6.1162919998168945
    5. '   ' → logprob: -6.3662919998168945
    6. ' return' → logprob: -8.241291999816895
    7. 'd' → logprob: -8.741291999816895
    8. ' diff' → logprob: -8.991291999816895
    9. 'elif' → logprob: -9.491291999816895
    10. ' ' → logprob: -10.366291999816895

Token 156: ' j' (ID: 441)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.09579435735940933
    2. 'abs' → logprob: -2.720794439315796
    3. '(abs' → logprob: -4.095794200897217
    4. ' (' → logprob: -5.095794200897217
    5. ' j' → logprob: -6.720794200897217
    6. '(j' → logprob: -7.470794200897217
    7. ' max' → logprob: -7.845794200897217
    8. 'j' → logprob: -8.470794677734375
    9. '(' → logprob: -8.845794677734375
    10. ' ' → logprob: -9.595794677734375

Token 157: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.48856332898139954
    2. '>=' → logprob: -0.9885632991790771
    3. ' ==' → logprob: -5.613563537597656
    4. '==' → logprob: -5.738563537597656
    5. ' >' → logprob: -6.113563537597656
    6. '>' → logprob: -6.113563537597656
    7. ' -' → logprob: -6.363563537597656
    8. '-' → logprob: -6.988563537597656
    9. ' ' → logprob: -8.863563537597656
    10. ' <' → logprob: -9.238563537597656

Token 158: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.4777918756008148
    2. '5' → logprob: -0.9777919054031372
    3. ' ' → logprob: -5.602791786193848
    4. 'y' → logprob: -11.352791786193848
    5. '6' → logprob: -12.352791786193848
    6. ' y' → logprob: -13.977791786193848
    7. 'j' → logprob: -14.227791786193848
    8. '   ' → logprob: -14.477791786193848
    9. '
' → logprob: -14.727791786193848
    10. '7' → logprob: -14.727791786193848

Token 159: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.20142942667007446
    2. '5' → logprob: -1.7014293670654297
    3. 'y' → logprob: -11.32642936706543
    4. '0' → logprob: -13.82642936706543
    5. '４' → logprob: -14.32642936706543
    6. 'j' → logprob: -14.45142936706543
    7. '6' → logprob: -14.82642936706543
    8. ' ' → logprob: -14.82642936706543
    9. '
' → logprob: -14.95142936706543
    10. '3' → logprob: -15.20142936706543

Token 160: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16075757145881653
    2. 'and' → logprob: -1.9107575416564941
    3. ' or' → logprob: -7.785757541656494
    4. '   ' → logprob: -9.535758018493652
    5. ' ' → logprob: -10.910758018493652
    6. 'or' → logprob: -11.160758018493652
    7. ' и' → logprob: -12.785758018493652
    8. '-' → logprob: -13.035758018493652
    9. '+' → logprob: -13.160758018493652
    10. '	and' → logprob: -13.410758018493652

Token 161: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.10023234039545059
    2. 'y' → logprob: -2.3502323627471924
    3. ' ' → logprob: -11.225232124328613
    4. '   ' → logprob: -12.100232124328613
    5. '  ' → logprob: -13.100232124328613
    6. ' (' → logprob: -13.600232124328613
    7. '	y' → logprob: -14.350232124328613
    8. ' ' → logprob: -14.475232124328613
    9. 'j' → logprob: -14.600232124328613
    10. '4' → logprob: -14.725232124328613

Token 162: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.47478145360946655
    2. '>=' → logprob: -0.9747814536094666
    3. 'and' → logprob: -8.099781036376953
    4. '-' → logprob: -9.349781036376953
    5. ' and' → logprob: -9.349781036376953
    6. ')>=' → logprob: -9.849781036376953
    7. '+' → logprob: -9.974781036376953
    8. ')' → logprob: -10.849781036376953
    9. ']>=' → logprob: -10.974781036376953
    10. '   ' → logprob: -11.224781036376953

Token 163: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00103352265432477
    2. ' ' → logprob: -6.876033306121826
    3. '<|end|>' → logprob: -15.376033782958984
    4. '```' → logprob: -15.563533782958984
    5. '４' → logprob: -16.251033782958984
    6. '   ' → logprob: -16.938533782958984
    7. '  ' → logprob: -17.563533782958984
    8. '৪' → logprob: -17.688533782958984
    9. '۴' → logprob: -17.876033782958984
    10. '' → logprob: -17.938533782958984

Token 164: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -9.610702363715973e-06
    2. ' ' → logprob: -11.625009536743164
    3. '４' → logprob: -16.250009536743164
    4. '<|end|>' → logprob: -16.625009536743164
    5. '```' → logprob: -16.687509536743164
    6. '৪' → logprob: -16.937509536743164
    7. '' → logprob: -17.187509536743164
    8. '۴' → logprob: -17.187509536743164
    9. '४' → logprob: -17.437509536743164
    10. '5' → logprob: -17.750009536743164

Token 165: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20567160844802856
    2. ' and' → logprob: -1.9556715488433838
    3. ':
' → logprob: -3.705671548843384
    4. '   ' → logprob: -4.330671787261963
    5. 'and' → logprob: -5.080671787261963
    6. ' :' → logprob: -8.705671310424805
    7. '):' → logprob: -9.205671310424805
    8. ',' → logprob: -9.330671310424805
    9. '):
' → logprob: -9.830671310424805
    10. ' :
' → logprob: -10.955671310424805

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019972586596850306
    2. '   ' → logprob: -8.875199317932129
    3. ' and' → logprob: -10.375199317932129
    4. ' if' → logprob: -10.750199317932129
    5. ' return' → logprob: -13.500199317932129
    6. '      ' → logprob: -13.500199317932129
    7. '     ' → logprob: -14.250199317932129
    8. 'if' → logprob: -14.375199317932129
    9. 'and' → logprob: -14.375199317932129
    10. '
' → logprob: -14.375199317932129

Token 167: ' diff' (ID: 8868)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7174230217933655
    2. '       ' → logprob: -1.0924229621887207
    3. 'return' → logprob: -1.8424229621887207
    4. 'abs' → logprob: -4.592422962188721
    5. '   ' → logprob: -5.217422962188721
    6. ' if' → logprob: -6.342422962188721
    7. ' return' → logprob: -7.342422962188721
    8. '           ' → logprob: -9.342423439025879
    9. ' abs' → logprob: -10.592423439025879
    10. ' ' → logprob: -11.092423439025879

Token 168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14297454059123993
    2. '=' → logprob: -2.017974615097046
    3. 'er' → logprob: -8.517974853515625
    4. '＝' → logprob: -10.017974853515625
    5. '=j' → logprob: -10.767974853515625
    6. '_' → logprob: -11.267974853515625
    7. 'rence' → logprob: -12.392974853515625
    8. ' ' → logprob: -12.517974853515625
    9. '_score' → logprob: -13.642974853515625
    10. '   ' → logprob: -13.767974853515625

Token 169: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.3885675072669983
    2. 'j' → logprob: -1.1385674476623535
    3. ' abs' → logprob: -6.6385674476623535
    4. ' j' → logprob: -7.8885674476623535
    5. '(abs' → logprob: -12.138567924499512
    6. 'max' → logprob: -13.888567924499512
    7. '	j' → logprob: -14.138567924499512
    8. 'Abs' → logprob: -14.138567924499512
    9. '(j' → logprob: -14.576067924499512
    10. '   ' → logprob: -14.763567924499512

Token 170: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -9.253090865968261e-06
    2. 'j' → logprob: -11.625009536743164
    3. '(' → logprob: -15.250009536743164
    4. '	j' → logprob: -18.375009536743164
    5. '[j' → logprob: -20.250009536743164
    6. ',j' → logprob: -20.750009536743164
    7. '((' → logprob: -21.000009536743164
    8. '(i' → logprob: -21.375009536743164
    9. '(k' → logprob: -22.000009536743164
    10. '(
' → logprob: -22.125009536743164

Token 171: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3868938982486725
    2. '-' → logprob: -1.13689386844635
    3. '-y' → logprob: -11.386894226074219
    4. '-j' → logprob: -11.761894226074219
    5. ' ' → logprob: -12.886894226074219
    6. ' y' → logprob: -15.261894226074219
    7. ',' → logprob: -15.886894226074219
    8. '[' → logprob: -16.01189422607422
    9. ')' → logprob: -16.01189422607422
    10. ' ' → logprob: -16.26189422607422

Token 172: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.001930301426909864
    2. ' y' → logprob: -6.251930236816406
    3. ' ' → logprob: -14.751930236816406
    4. '4' → logprob: -14.751930236816406
    5. '<|end|>' → logprob: -14.751930236816406
    6. '   ' → logprob: -15.251930236816406
    7. '	y' → logprob: -16.876930236816406
    8. ')' → logprob: -17.251930236816406
    9. '  ' → logprob: -17.251930236816406
    10. 'user' → logprob: -17.376930236816406

Token 173: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05490800738334656
    2. ')
' → logprob: -2.929908037185669
    3. ' )' → logprob: -11.80490779876709
    4. ')
' → logprob: -11.80490779876709
    5. ')return' → logprob: -12.92990779876709
    6. '       ' → logprob: -13.17990779876709
    7. ')

' → logprob: -13.42990779876709
    8. ' )
' → logprob: -13.42990779876709
    9. '   ' → logprob: -13.80490779876709
    10. ')>' → logprob: -14.67990779876709

Token 174: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009904945269227028
    2. '   ' → logprob: -4.634904861450195
    3. '<|end|>' → logprob: -9.884904861450195
    4. '    ' → logprob: -10.884904861450195
    5. ' if' → logprob: -11.009904861450195
    6. ' ' → logprob: -11.009904861450195
    7. '           ' → logprob: -11.759904861450195
    8. '        ' → logprob: -11.884904861450195
    9. '     ' → logprob: -12.259904861450195
    10. '      ' → logprob: -12.259904861450195

Token 175: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.45615535974502563
    2. ' if' → logprob: -1.0811553001403809
    3. '       ' → logprob: -4.581155300140381
    4. '   ' → logprob: -4.956155300140381
    5. 'return' → logprob: -5.206155300140381
    6. ' return' → logprob: -5.456155300140381
    7. ' ' → logprob: -11.081155776977539
    8. '           ' → logprob: -11.831155776977539
    9. '  ' → logprob: -12.081155776977539
    10. '	if' → logprob: -12.206155776977539

Token 176: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.28128865361213684
    2. ' diff' → logprob: -1.4062886238098145
    3. '	diff' → logprob: -9.406289100646973
    4. '(diff' → logprob: -10.031289100646973
    5. ' ' → logprob: -13.031289100646973
    6. '1' → logprob: -13.406289100646973
    7. ' (' → logprob: -13.531289100646973
    8. '   ' → logprob: -13.656289100646973
    9. 'd' → logprob: -13.906289100646973
    10. '7' → logprob: -14.468789100646973

Token 177: ' ==' (ID: 951)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.043622810393571854
    2. ' >=' → logprob: -3.1686227321624756
    3. '==' → logprob: -7.418622970581055
    4. ' ==' → logprob: -11.543622970581055
    5. ')>=' → logprob: -12.418622970581055
    6. ']>=' → logprob: -12.793622970581055
    7. '≥' → logprob: -13.543622970581055
    8. '>' → logprob: -13.668622970581055
    9. '<' → logprob: -14.043622970581055
    10. '=' → logprob: -14.418622970581055

Token 178: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.749814019713085e-06
    2. '1' → logprob: -12.750006675720215
    3. '0' → logprob: -13.125006675720215
    4. ' ' → logprob: -13.625006675720215
    5. '２' → logprob: -16.00000762939453
    6. '```' → logprob: -16.62500762939453
    7. '>=' → logprob: -16.75000762939453
    8. '   ' → logprob: -16.87500762939453
    9. '
' → logprob: -16.87500762939453
    10. '3' → logprob: -17.00000762939453

Token 179: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8789383830153383e-05
    2. '1' → logprob: -11.125019073486328
    3. '0' → logprob: -13.250019073486328
    4. ' ' → logprob: -13.500019073486328
    5. '２' → logprob: -15.250019073486328
    6. '```' → logprob: -15.687519073486328
    7. '3' → logprob: -16.375019073486328
    8. '-' → logprob: -16.375019073486328
    9. '   ' → logprob: -16.750019073486328
    10. '>=' → logprob: -16.750019073486328

Token 180: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12932747602462769
    2. ':
' → logprob: -2.2543275356292725
    3. ' and' → logprob: -4.879327297210693
    4. ' or' → logprob: -5.379327297210693
    5. ':return' → logprob: -5.754327297210693
    6. '       ' → logprob: -7.754327297210693
    7. 'and' → logprob: -8.754327774047852
    8. '   ' → logprob: -9.129327774047852
    9. ' :' → logprob: -9.379327774047852
    10. '):
' → logprob: -9.629327774047852

Token 181: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003403495065867901
    2. '       ' → logprob: -8.250340461730957
    3. 'return' → logprob: -10.000340461730957
    4. ' return' → logprob: -10.625340461730957
    5. '               ' → logprob: -11.750340461730957
    6. '          ' → logprob: -14.250340461730957
    7. '   ' → logprob: -15.250340461730957
    8. '         ' → logprob: -15.375340461730957
    9. '	       ' → logprob: -16.00033950805664
    10. '                   ' → logprob: -17.12533950805664

Token 182: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2600613534450531
    2. ' return' → logprob: -2.010061264038086
    3. '       ' → logprob: -2.760061264038086
    4. '           ' → logprob: -3.510061264038086
    5. '               ' → logprob: -6.385061264038086
    6. '   ' → logprob: -9.135061264038086
    7. '	return' → logprob: -10.510061264038086
    8. ' ' → logprob: -12.885061264038086
    9. '          ' → logprob: -13.510061264038086
    10. '      ' → logprob: -13.635061264038086

Token 183: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00020354038861114532
    2. ' True' → logprob: -8.500203132629395
    3. 'False' → logprob: -19.50020408630371
    4. '(True' → logprob: -21.25020408630371
    5. '   ' → logprob: -22.37520408630371
    6. '1' → logprob: -23.50020408630371
    7. ' ' → logprob: -23.50020408630371
    8. 'true' → logprob: -23.87520408630371
    9. '=True' → logprob: -24.50020408630371
    10. '
' → logprob: -25.37520408630371

Token 184: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05529249832034111
    2. '       ' → logprob: -2.9302926063537598
    3. '	return' → logprob: -8.555292129516602
    4. 'return' → logprob: -9.555292129516602
    5. ' return' → logprob: -10.430292129516602
    6. 'else' → logprob: -10.930292129516602
    7. '    ' → logprob: -11.305292129516602
    8. '	else' → logprob: -11.430292129516602
    9. '	' → logprob: -11.555292129516602
    10. ' else' → logprob: -11.555292129516602

Token 185: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003589618019759655
    2. '       ' → logprob: -6.128589630126953
    3. ' else' → logprob: -7.378589630126953
    4. ' return' → logprob: -8.128589630126953
    5. '	return' → logprob: -9.128589630126953
    6. 'else' → logprob: -9.128589630126953
    7. 'return' → logprob: -9.128589630126953
    8. '    
' → logprob: -10.253589630126953
    9. '  ' → logprob: -10.628589630126953
    10. '\n' → logprob: -10.878589630126953

Token 186: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20093847811222076
    2. 'elif' → logprob: -2.5759384632110596
    3. '   ' → logprob: -3.2009384632110596
    4. 'if' (adapté à ' if') → logprob: -3.4509384632110596
    5. 'else' → logprob: -3.4509384632110596
    6. ' return' → logprob: -6.450938701629639
    7. ' if' → logprob: -9.57593822479248
    8. ' else' → logprob: -9.82593822479248
    9. ' elif' → logprob: -9.95093822479248
    10. '       ' → logprob: -10.57593822479248

Token 187: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.1320537030696869
    2. ' diff' → logprob: -2.2570536136627197
    3. 'False' → logprob: -4.132053852081299
    4. 'j' → logprob: -6.882053852081299
    5. ' False' → logprob: -7.007053852081299
    6. ' j' → logprob: -7.382053852081299
    7. 'not' → logprob: -9.50705337524414
    8. 'True' → logprob: -9.75705337524414
    9. '	diff' → logprob: -9.75705337524414
    10. 'abs' → logprob: -9.88205337524414

Token 188: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.9122142195701599
    2. ' ==' → logprob: -1.0372142791748047
    3. '<' → logprob: -2.0372142791748047
    4. '==' → logprob: -2.5372142791748047
    5. ' <=' → logprob: -4.037214279174805
    6. ' >=' → logprob: -5.162214279174805
    7. '<=' → logprob: -6.162214279174805
    8. '   ' → logprob: -6.412214279174805
    9. ' !=' → logprob: -6.537214279174805
    10. ' ' → logprob: -6.662214279174805

Token 189: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.022241802886128426
    2. ' ' → logprob: -4.397241592407227
    3. '0' → logprob: -4.647241592407227
    4. '3' → logprob: -9.397241592407227
    5. '2' → logprob: -12.584741592407227
    6. '   ' → logprob: -12.834741592407227
    7. '<' → logprob: -13.022241592407227
    8. '-' → logprob: -14.209741592407227
    9. '  ' → logprob: -14.209741592407227
    10. '4' → logprob: -14.334741592407227

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006911918055266142
    2. '0' → logprob: -5.006911754608154
    3. ' ' → logprob: -9.131912231445312
    4. '3' → logprob: -9.506912231445312
    5. '2' → logprob: -11.756912231445312
    6. '<' → logprob: -12.819412231445312
    7. '   ' → logprob: -15.069412231445312
    8. '-' → logprob: -15.131912231445312
    9. '>' → logprob: -15.194412231445312
    10. '4' → logprob: -15.444412231445312

Token 191: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11627791076898575
    2. ':
' → logprob: -2.6162779331207275
    3. '       ' → logprob: -3.6162779331207275
    4. ':return' → logprob: -5.366277694702148
    5. '           ' → logprob: -5.866277694702148
    6. ' or' → logprob: -7.116277694702148
    7. ' and' → logprob: -7.366277694702148
    8. '   ' → logprob: -7.741277694702148
    9. ',' → logprob: -8.741277694702148
    10. ' :' → logprob: -10.116277694702148

Token 192: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2753646671772003
    2. '           ' → logprob: -1.525364637374878
    3. 'return' → logprob: -3.900364637374878
    4. ' return' → logprob: -5.900364875793457
    5. '   ' → logprob: -8.775364875793457
    6. '               ' → logprob: -11.275364875793457
    7. ':return' → logprob: -11.775364875793457
    8. '	return' → logprob: -12.025364875793457
    9. '	       ' → logprob: -12.775364875793457
    10. '     ' → logprob: -13.650364875793457

Token 193: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004193913657218218
    2. ' return' → logprob: -5.6291937828063965
    3. '           ' → logprob: -7.7541937828063965
    4. '       ' → logprob: -9.004194259643555
    5. '   ' → logprob: -10.379194259643555
    6. '	return' → logprob: -11.754194259643555
    7. '               ' → logprob: -14.129194259643555
    8. ' ' → logprob: -14.754194259643555
    9. 'eturn' → logprob: -14.754194259643555
    10. 'False' → logprob: -14.879194259643555

Token 194: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.580929347255733e-05
    2. ' False' → logprob: -11.125016212463379
    3. 'True' → logprob: -14.000016212463379
    4. 'None' → logprob: -16.750015258789062
    5. '   ' → logprob: -18.375015258789062
    6. '0' → logprob: -19.000015258789062
    7. '(False' → logprob: -19.125015258789062
    8. ' ' → logprob: -20.875015258789062
    9. 'false' → logprob: -21.125015258789062
    10. '```' → logprob: -21.125015258789062

Token 195: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026592286303639412
    2. '<|end|>' → logprob: -4.026592254638672
    3. '       ' → logprob: -5.026592254638672
    4. '	return' → logprob: -7.776592254638672
    5. 'return' → logprob: -8.151592254638672
    6. 'else' → logprob: -8.526592254638672
    7. '	else' → logprob: -8.776592254638672
    8. ' else' → logprob: -8.901592254638672
    9. '.' → logprob: -9.026592254638672
    10. '<|end|>' → logprob: -9.151592254638672

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05499793961644173
    2. 'return' → logprob: -4.05499792098999
    3. '\n' → logprob: -4.42999792098999
    4. '
' → logprob: -4.92999792098999
    5. '<|end|>' → logprob: -5.67999792098999
    6. '	return' → logprob: -5.92999792098999
    7. 'else' → logprob: -6.05499792098999
    8. '    
' → logprob: -6.17999792098999
    9. ' return' → logprob: -6.80499792098999
    10. ' else' → logprob: -7.17999792098999

Token 197: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005046725273132324
    2. '   ' → logprob: -5.505046844482422
    3. ' return' → logprob: -7.630046844482422
    4. 'else' → logprob: -7.755046844482422
    5. '	return' → logprob: -10.130046844482422
    6. '```' → logprob: -12.630046844482422
    7. 'False' → logprob: -13.005046844482422
    8. '       ' → logprob: -13.255046844482422
    9. 'True' → logprob: -13.505046844482422
    10. ' else' → logprob: -13.880046844482422

Token 198: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -7.941850526549388e-06
    2. ' False' → logprob: -11.750007629394531
    3. 'True' → logprob: -21.00000762939453
    4. 'None' → logprob: -21.37500762939453
    5. 'false' → logprob: -22.87500762939453
    6. '(False' → logprob: -23.00000762939453
    7. '   ' → logprob: -24.00000762939453
    8. '0' → logprob: -25.12500762939453
    9. '=False' → logprob: -25.12500762939453
    10. '_false' → logprob: -25.50000762939453

Token 199: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07743167132139206
    2. '<|end|>' → logprob: -3.3274316787719727
    3. ')' → logprob: -4.202431678771973
    4. '
' → logprob: -4.452431678771973
    5. ':return' → logprob: -5.577431678771973
    6. '   ' → logprob: -5.827431678771973
    7. 'def' → logprob: -6.827431678771973
    8. '\n' → logprob: -6.952431678771973
    9. ' ' → logprob: -7.202431678771973
    10. ':
' → logprob: -7.327431678771973

Token 200: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17829222977161407
    2. ')' → logprob: -2.5532922744750977
    3. 'j' → logprob: -3.4282922744750977
    4. '#' → logprob: -4.053292274475098
    5. '
' → logprob: -4.678292274475098
    6. 'def' → logprob: -5.178292274475098
    7. 'n' → logprob: -5.428292274475098
    8. ':
' → logprob: -5.678292274475098
    9. '   ' → logprob: -6.178292274475098
    10. ',' → logprob: -6.553292274475098

Token 201: ' ' (ID: 220)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.3392812013626099
    2. 'queue' → logprob: -1.3392812013626099
    3. 'score' → logprob: -1.8392812013626099
    4. 'd' → logprob: -2.5892810821533203
    5. 'dq' → logprob: -2.9642810821533203
    6. 'if' → logprob: -3.0892810821533203
    7. 'for' → logprob: -3.8392810821533203
    8. 'def' → logprob: -3.9642810821533203
    9. 'dp' → logprob: -4.08928108215332
    10. '#' → logprob: -4.21428108215332

Token 202: '4' (ID: 19)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.7229911088943481
    2. 'score' → logprob: -1.7229911088943481
    3. 'scores' → logprob: -1.9729911088943481
    4. 'n' → logprob: -2.4729909896850586
    5. 'dq' → logprob: -2.4729909896850586
    6. 'queue' → logprob: -3.0979909896850586
    7. 's' → logprob: -3.2229909896850586
    8. 'moves' → logprob: -3.2229909896850586
    9. 'dp' → logprob: -3.5979909896850586
    10. 'while' → logprob: -3.7229909896850586

Token 203: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03370194882154465
    2. ' -' → logprob: -3.9087018966674805
    3. 'def' → logprob: -5.9087018966674805
    4. '#' → logprob: -5.9087018966674805
    5. 'from' → logprob: -6.9087018966674805
    6. '-score' → logprob: -7.1587018966674805
    7. ' #' → logprob: -7.4087018966674805
    8. '4' → logprob: -7.5337018966674805
    9. '-in' → logprob: -7.6587018966674805
    10. ',' → logprob: -7.7837018966674805

Token 204: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.002733785891905427
    2. 'def' → logprob: -6.7527337074279785
    3. '5' → logprob: -7.1277337074279785
    4. '#' → logprob: -8.377734184265137
    5. '3' → logprob: -9.002734184265137
    6. 'j' → logprob: -9.002734184265137
    7. '<|end|>' → logprob: -10.127734184265137
    8. '0' → logprob: -10.502734184265137
    9. '続きを' → logprob: -10.627734184265137
    10. ' ' → logprob: -11.252734184265137

Token 205: '特' (ID: 8176)
  Prédit: '以'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '以' → logprob: -0.04518647864460945
    2. 'から' → logprob: -3.6701865196228027
    3. 'まで' → logprob: -5.045186519622803
    4. 'の' → logprob: -5.420186519622803
    5. '<|end|>' → logprob: -5.920186519622803
    6. '#' → logprob: -6.795186519622803
    7. 'の場合' → logprob: -7.795186519622803
    8. '<|end|>' → logprob: -8.045186042785645
    9. '以上' → logprob: -8.170186042785645
    10. '```' → logprob: -8.295186042785645

Token 206: '有' (ID: 3666)
  Prédit: '徴'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '徴' → logprob: -0.6813414096832275
    2. '殊' → logprob: -1.0563414096832275
    3. '化' → logprob: -2.3063414096832275
    4. '別' → logprob: -4.306341171264648
    5. '記事' → logprob: -4.431341171264648
    6. '```' → logprob: -5.306341171264648
    7. '判' → logprob: -5.431341171264648
    8. '有' → logprob: -5.931341171264648
    9. '#' → logprob: -6.306341171264648
    10. '記' → logprob: -6.681341171264648

Token 207: 'の' (ID: 3385)
  Prédit: 'の'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.0092003857716918
    2. '#' → logprob: -6.009200572967529
    3. 'def' → logprob: -6.384200572967529
    4. ':' → logprob: -6.384200572967529
    5. 'の場合' → logprob: -6.759200572967529
    6. 'な' → logprob: -7.134200572967529
    7. '<|end|>' → logprob: -8.509200096130371
    8. 'if' → logprob: -8.509200096130371
    9. ' の' → logprob: -9.009200096130371
    10. 'for' → logprob: -9.134200096130371

Token 208: '条件' (ID: 59062)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5504880547523499
    2. 'continue' → logprob: -2.425487995147705
    3. 'elif' → logprob: -2.800487995147705
    4. '#' → logprob: -2.925487995147705
    5. 'while' → logprob: -3.300487995147705
    6. '続きを' → logprob: -3.300487995147705
    7. '条件' → logprob: -3.550487995147705
    8. 'def' → logprob: -4.050487995147705
    9. '判' → logprob: -4.175487995147705
    10. '処' → logprob: -4.175487995147705

Token 209: '判' (ID: 47257)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007422514725476503
    2. '#' → logprob: -5.00742244720459
    3. 'if' → logprob: -7.75742244720459
    4. '<|end|>' → logprob: -9.75742244720459
    5. ':' → logprob: -10.00742244720459
    6. '
' → logprob: -10.50742244720459
    7. '<|end|>' → logprob: -10.50742244720459
    8. ' def' → logprob: -10.75742244720459
    9. 'while' → logprob: -10.88242244720459
    10. '```' → logprob: -11.38242244720459

Token 210: '定' (ID: 8745)
  Prédit: '定'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '定' → logprob: -0.1758522242307663
    2. '断' → logprob: -1.9258521795272827
    3. 'def' → logprob: -4.175852298736572
    4. '```' → logprob: -9.925851821899414
    5. '\xe6\x96' → logprob: -10.175851821899414
    6. '#' → logprob: -10.175851821899414
    7. '別' → logprob: -12.800851821899414
    8. '段' → logprob: -12.800851821899414
    9. 'break' → logprob: -13.175851821899414
    10. '=' → logprob: -13.550851821899414

Token 211: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00022642381372861564
    2. ' def' → logprob: -9.125226020812988
    3. 'if' → logprob: -10.125226020812988
    4. '
' → logprob: -10.250226020812988
    5. '<|end|>' → logprob: -10.750226020812988
    6. ':' → logprob: -12.000226020812988
    7. '#' → logprob: -12.375226020812988
    8. ':def' → logprob: -12.750226020812988
    9. '<|end|>' → logprob: -13.125226020812988
    10. 'elif' → logprob: -14.250226020812988

Token 212: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.584239938296378e-06
    2. ' def' → logprob: -12.625007629394531
    3. 'if' → logprob: -13.375007629394531
    4. '#' → logprob: -13.500007629394531
    5. '
' → logprob: -15.000007629394531
    6. 'from' → logprob: -15.625007629394531
    7. '```' → logprob: -15.625007629394531
    8. 'for' → logprob: -15.875007629394531
    9. 'elif' → logprob: -16.75000762939453
    10. '<|end|>' → logprob: -17.00000762939453

Token 213: ' next' (ID: 2613)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.2762582004070282
    2. 'check' → logprob: -1.7762582302093506
    3. 'special' → logprob: -3.5262582302093506
    4. 'can' → logprob: -4.0262579917907715
    5. ' is' → logprob: -5.1512579917907715
    6. 'should' → logprob: -5.5262579917907715
    7. 'judge' → logprob: -5.7762579917907715
    8. 'handle' → logprob: -5.9012579917907715
    9. 'four' → logprob: -6.2762579917907715
    10. ' check' → logprob: -6.5262579917907715

Token 214: '_states' (ID: 53795)
  Prédit: '_score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.6509029865264893
    2. '_move' → logprob: -1.6509029865264893
    3. '_token' → logprob: -2.0259029865264893
    4. '_point' → logprob: -2.6509029865264893
    5. '_step' → logprob: -2.9009029865264893
    6. '_state' → logprob: -3.9009029865264893
    7. '_' → logprob: -5.65090274810791
    8. '_action' → logprob: -6.02590274810791
    9. '_game' → logprob: -7.52590274810791
    10. '_diff' → logprob: -8.15090274810791

Token 215: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0810672864317894
    2. '(' → logprob: -2.5810673236846924
    3. '(s' → logprob: -6.581067085266113
    4. '(state' → logprob: -7.581067085266113
    5. '(current' → logprob: -8.831067085266113
    6. ' (' → logprob: -9.956067085266113
    7. '(states' → logprob: -11.206067085266113
    8. '((' → logprob: -11.331067085266113
    9. '(a' → logprob: -12.581067085266113
    10. '(prev' → logprob: -12.581067085266113

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0069925421848893166
    2. ' ,' → logprob: -5.381992340087891
    3. ',y' → logprob: -6.131992340087891
    4. '):' → logprob: -9.88199234008789
    5. ',j' → logprob: -9.88199234008789
    6. '+' → logprob: -11.00699234008789
    7. '+,' → logprob: -11.00699234008789
    8. '‌,' → logprob: -11.13199234008789
    9. ',
' → logprob: -11.75699234008789
    10. 'y' → logprob: -12.00699234008789

Token 217: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03364938497543335
    2. ' y' → logprob: -3.408649444580078
    3. '   ' → logprob: -13.408649444580078
    4. '	y' → logprob: -13.908649444580078
    5. ' ' → logprob: -14.908649444580078
    6. ',' → logprob: -15.158649444580078
    7. '    ' → logprob: -15.783649444580078
    8. '  ' → logprob: -15.908649444580078
    9. ',y' → logprob: -16.596149444580078
    10. '
' → logprob: -16.908649444580078

Token 218: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08965517580509186
    2. ',' → logprob: -2.4646551609039307
    3. '):
' → logprob: -7.33965539932251
    4. ')' → logprob: -10.839654922485352
    5. ',j' → logprob: -10.964654922485352
    6. ':' → logprob: -11.714654922485352
    7. ' ):' → logprob: -11.714654922485352
    8. ')：' → logprob: -12.714654922485352
    9. '):
' → logprob: -13.089654922485352
    10. '   ' → logprob: -13.589654922485352

Token 219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16706407070159912
    2. ' states' → logprob: -1.9170640707015991
    3. 'states' → logprob: -5.042064189910889
    4. ' next' → logprob: -9.04206371307373
    5. '   ' → logprob: -9.79206371307373
    6. '    ' → logprob: -10.41706371307373
    7. ' return' → logprob: -10.54206371307373
    8. '_states' → logprob: -10.91706371307373
    9. 'next' → logprob: -11.16706371307373
    10. '    
' → logprob: -11.16706371307373

Token 220: ' states' (ID: 9407)
  Prédit: ' states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.2043963372707367
    2. 'states' (adapté à ' states') → logprob: -1.704396367073059
    3. '   ' → logprob: -6.4543962478637695
    4. ' result' → logprob: -8.20439624786377
    5. 'result' → logprob: -8.32939624786377
    6. 'for' → logprob: -8.57939624786377
    7. ' res' → logprob: -8.57939624786377
    8. ' for' → logprob: -8.70439624786377
    9. ' if' → logprob: -9.45439624786377
    10. 'results' → logprob: -10.20439624786377

Token 221: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932241916656494
    2. ' =' → logprob: -0.6932241916656494
    3. '   ' → logprob: -9.81822395324707
    4. '=[]' → logprob: -11.19322395324707
    5. ',' → logprob: -12.94322395324707
    6. 's' → logprob: -13.69322395324707
    7. '＝' → logprob: -14.06822395324707
    8. ' ' → logprob: -14.19322395324707
    9. '.append' → logprob: -14.19322395324707
    10. '=[]
' → logprob: -14.31822395324707

Token 222: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.018639616668224335
    2. '[(' → logprob: -4.76863956451416
    3. 'deque' → logprob: -5.01863956451416
    4. 'set' → logprob: -6.26863956451416
    5. ' []' → logprob: -6.76863956451416
    6. '[' → logprob: -8.64363956451416
    7. ' deque' → logprob: -9.89363956451416
    8. ' set' → logprob: -10.76863956451416
    9. '[]
' → logprob: -10.89363956451416
    10. '{}' → logprob: -11.14363956451416

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0058869607746601105
    2. ' if' → logprob: -5.755887031555176
    3. ' states' → logprob: -6.755887031555176
    4. 'states' → logprob: -6.880887031555176
    5. 'if' → logprob: -8.255887031555176
    6. ' for' → logprob: -9.130887031555176
    7. 'for' → logprob: -9.880887031555176
    8. '    ' → logprob: -10.630887031555176
    9. '    
' → logprob: -10.880887031555176
    10. '_states' → logprob: -11.755887031555176

Token 224: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7544164657592773
    2. 'states' → logprob: -0.7544164657592773
    3. 'for' → logprob: -3.7544164657592773
    4. '   ' → logprob: -4.379416465759277
    5. ' if' → logprob: -4.379416465759277
    6. ' states' → logprob: -4.629416465759277
    7. ' for' → logprob: -7.254416465759277
    8. '#' (adapté à ' #') → logprob: -8.379416465759277
    9. ' ' → logprob: -9.379416465759277
    10. 'state' → logprob: -10.379416465759277

Token 225: ' �' (ID: 93199)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8070317506790161
    2. 'states' → logprob: -0.9320317506790161
    3. 'for' → logprob: -2.5570316314697266
    4. ' if' → logprob: -3.4320316314697266
    5. ' states' → logprob: -3.5570316314697266
    6. '   ' → logprob: -4.307031631469727
    7. ' for' → logprob: -4.932031631469727
    8. '#' → logprob: -7.432031631469727
    9. 'state' → logprob: -9.307031631469727
    10. ' ' → logprob: -9.807031631469727

Token 226: '�' (ID: 99)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.12139414995908737
    2. 'states' → logprob: -2.871394157409668
    3. ' for' → logprob: -3.246394157409668
    4. ' j' → logprob: -5.121394157409668
    5. 'for' → logprob: -5.246394157409668
    6. '   ' → logprob: -5.746394157409668
    7. '(states' → logprob: -6.746394157409668
    8. ' ' → logprob: -6.996394157409668
    9. 'j' → logprob: -7.246394157409668
    10. ' if' → logprob: -7.871394157409668

Token 227: '合' (ID: 4377)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8768625855445862
    2. ' states' → logprob: -1.1268625259399414
    3. 'for' → logprob: -1.7518625259399414
    4. ' if' → logprob: -3.1268625259399414
    5. 'states' → logprob: -3.6268625259399414
    6. 'if' → logprob: -4.376862525939941
    7. '   ' → logprob: -6.251862525939941
    8. ' #' → logprob: -8.251862525939941
    9. ' j' → logprob: -8.376862525939941
    10. '#' → logprob: -9.001862525939941

Token 228: '終了' (ID: 166212)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8202903866767883
    2. '.append' → logprob: -0.9452903866767883
    3. ' states' → logprob: -2.5702903270721436
    4. 'states' → logprob: -4.070290565490723
    5. 'for' → logprob: -4.445290565490723
    6. ' if' → logprob: -4.445290565490723
    7. ',' → logprob: -4.695290565490723
    8. ' for' → logprob: -5.195290565490723
    9. ' j' → logprob: -5.195290565490723
    10. '_states' → logprob: -5.195290565490723

Token 229: 'なら' (ID: 100875)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8764733672142029
    2. 'if' → logprob: -1.0014734268188477
    3. ' if' → logprob: -2.3764734268188477
    4. ' states' → logprob: -3.6264734268188477
    5. 'for' → logprob: -3.8764734268188477
    6. 'の' → logprob: -4.001473426818848
    7. 'を' → logprob: -5.001473426818848
    8. 'return' → logprob: -5.126473426818848
    9. ',' → logprob: -5.251473426818848
    10. ':' → logprob: -5.251473426818848

Token 230: '戻' (ID: 175677)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.30679750442504883
    2. ' return' → logprob: -1.5567975044250488
    3. '   ' → logprob: -2.931797504425049
    4. '	return' → logprob: -9.93179702758789
    5. ' ' → logprob: -10.68179702758789
    6. ':return' → logprob: -12.55679702758789
    7. '       ' → logprob: -12.68179702758789
    8. '  ' → logprob: -12.80679702758789
    9. '    ' → logprob: -12.80679702758789
    10. '{return' → logprob: -13.55679702758789

Token 231: 'ら' (ID: 8870)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.14819829165935516
    2. 'る' → logprob: -2.148198366165161
    3. 'ら' → logprob: -4.148198127746582
    4. 'り' → logprob: -5.773198127746582
    5. 'っ' → logprob: -6.773198127746582
    6. ' return' → logprob: -7.898198127746582
    7. '```' → logprob: -8.398198127746582
    8. 'れ' → logprob: -9.773198127746582
    9. 'って' → logprob: -9.773198127746582
    10. '   ' → logprob: -10.273198127746582

Token 232: 'ない' (ID: 47592)
  Prédit: 'ない'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ない' → logprob: -0.7413230538368225
    2. 'return' → logprob: -1.4913229942321777
    3. 'ず' → logprob: -1.6163229942321777
    4. 'す' → logprob: -2.4913229942321777
    5. 'な' → logprob: -5.616322994232178
    6. '```' → logprob: -5.741322994232178
    7. 'なく' → logprob: -5.866322994232178
    8. 'せ' → logprob: -6.366322994232178
    9. '
' → logprob: -6.616322994232178
    10. '   ' → logprob: -7.241322994232178

Token 233: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7455442547798157
    2. ' if' → logprob: -0.7455442547798157
    3. 'if' → logprob: -4.12054443359375
    4. ' return' → logprob: -4.12054443359375
    5. ' ' → logprob: -4.62054443359375
    6. 'return' → logprob: -5.24554443359375
    7. '
' → logprob: -6.87054443359375
    8. '	if' → logprob: -6.87054443359375
    9. '	return' → logprob: -7.49554443359375
    10. ':return' → logprob: -8.87054443359375

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0954936146736145
    2. ' ' → logprob: -2.7204935550689697
    3. ' if' → logprob: -4.095493793487549
    4. '    ' → logprob: -6.595493793487549
    5. 'if' → logprob: -6.595493793487549
    6. '#' → logprob: -6.845493793487549
    7. ' return' → logprob: -7.470493793487549
    8. ' 
' → logprob: -7.595493793487549
    9. '	if' → logprob: -7.845493793487549
    10. '  ' → logprob: -7.970493793487549

Token 235: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.39856821298599243
    2. ' if' → logprob: -1.1485681533813477
    3. '   ' → logprob: -4.523568153381348
    4. 'return' → logprob: -8.148568153381348
    5. ' return' → logprob: -8.648568153381348
    6. ' ' → logprob: -9.148568153381348
    7. '	if' → logprob: -9.273568153381348
    8. 'i' → logprob: -9.898568153381348
    9. ' i' → logprob: -10.148568153381348
    10. '    ' → logprob: -11.773568153381348

Token 236: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.126929372549057
    2. ' is' → logprob: -2.12692928314209
    3. 'j' → logprob: -15.12692928314209
    4. 'not' → logprob: -15.25192928314209
    5. ' ' → logprob: -15.50192928314209
    6. '	is' → logprob: -15.75192928314209
    7. '   ' → logprob: -15.87692928314209
    8. ' not' → logprob: -16.251930236816406
    9. ' j' → logprob: -16.376930236816406
    10. '(is' → logprob: -17.126930236816406

Token 237: '_game' (ID: 41386)
  Prédit: '_game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_game' → logprob: -2.339278580620885e-06
    2. '_' → logprob: -13.375001907348633
    3. 'game' → logprob: -14.375001907348633
    4. '_games' → logprob: -16.750001907348633
    5. '_GAME' → logprob: -17.500001907348633
    6. '_g' → logprob: -17.750001907348633
    7. ' game' → logprob: -17.750001907348633
    8. '_j' → logprob: -18.625001907348633
    9. 'Game' → logprob: -19.000001907348633
    10. ' _' → logprob: -19.000001907348633

Token 238: '_over' (ID: 34788)
  Prédit: '_over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_over' → logprob: -5.438573680294212e-06
    2. 'over' → logprob: -12.875005722045898
    3. '_' → logprob: -13.625005722045898
    4. ' over' → logprob: -14.375005722045898
    5. '_OVER' → logprob: -15.250005722045898
    6. '_end' → logprob: -16.1250057220459
    7. ' _' → logprob: -16.5000057220459
    8. '_out' → logprob: -16.5000057220459
    9. '_under' → logprob: -16.7500057220459
    10. '_possible' → logprob: -16.8750057220459

Token 239: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.002079240046441555
    2. '(' → logprob: -6.252079010009766
    3. ' (' → logprob: -9.377079010009766
    4. ')' → logprob: -9.752079010009766
    5. ' ' → logprob: -12.752079010009766
    6. ')(' → logprob: -13.752079010009766
    7. ',j' → logprob: -14.002079010009766
    8. ' )' → logprob: -14.502079010009766
    9. '(
' → logprob: -14.502079010009766
    10. '(i' → logprob: -14.877079010009766

Token 240: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010493654757738113
    2. ' ,' → logprob: -4.885493755340576
    3. ',j' → logprob: -6.010493755340576
    4. ',y' → logprob: -7.885493755340576
    5. ' ' → logprob: -11.135493278503418
    6. '   ' → logprob: -11.385493278503418
    7. '‌,' → logprob: -12.260493278503418
    8. ',
' → logprob: -12.385493278503418
    9. ')' → logprob: -13.510493278503418
    10. '，' → logprob: -13.510493278503418

Token 241: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.026303550228476524
    2. ' y' → logprob: -3.65130352973938
    3. '   ' → logprob: -13.5263032913208
    4. ' ' → logprob: -14.4013032913208
    5. 'j' → logprob: -14.5263032913208
    6. '	y' → logprob: -15.2763032913208
    7. '  ' → logprob: -15.9013032913208
    8. '    ' → logprob: -16.026304244995117
    9. ')' → logprob: -16.901304244995117
    10. '
' → logprob: -17.026304244995117

Token 242: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5761768817901611
    2. '):
' → logprob: -0.8261768817901611
    3. ')' → logprob: -8.826176643371582
    4. ')==' → logprob: -10.201176643371582
    5. '   ' → logprob: -10.576176643371582
    6. '):
' → logprob: -11.076176643371582
    7. ')：' → logprob: -12.826176643371582
    8. ' ):' → logprob: -13.076176643371582
    9. '):

' → logprob: -13.451176643371582
    10. ':' → logprob: -13.701176643371582

Token 243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005801965016871691
    2. ' return' → logprob: -8.375579833984375
    3. 'return' → logprob: -8.625579833984375
    4. '	' → logprob: -9.375579833984375
    5. '   ' → logprob: -9.750579833984375
    6. '	return' → logprob: -11.500579833984375
    7. '    ' → logprob: -12.625579833984375
    8. ':return' → logprob: -12.625579833984375
    9. '     ' → logprob: -13.250579833984375
    10. '      ' → logprob: -13.250579833984375

Token 244: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2125602662563324
    2. ' return' → logprob: -2.2125601768493652
    3. '       ' → logprob: -2.5875601768493652
    4. '   ' → logprob: -5.087560176849365
    5. '	return' → logprob: -7.337560176849365
    6. ' ' → logprob: -10.712560653686523
    7. '	' → logprob: -11.837560653686523
    8. '    ' → logprob: -12.712560653686523
    9. ':return' → logprob: -13.337560653686523
    10. '  ' → logprob: -13.587560653686523

Token 245: ' states' (ID: 9407)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.033724889159202576
    2. ' states' → logprob: -3.533724784851074
    3. '[]' → logprob: -5.533724784851074
    4. ' []' → logprob: -11.408724784851074
    5. 'state' → logprob: -13.408724784851074
    6. '.states' → logprob: -14.158724784851074
    7. '(states' → logprob: -14.533724784851074
    8. '[' → logprob: -15.033724784851074
    9. '[]}' → logprob: -15.283724784851074
    10. '_states' → logprob: -15.533724784851074

Token 246: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39109793305397034
    2. '   ' → logprob: -2.2660980224609375
    3. '    
' → logprob: -2.3910980224609375
    4. ' 
' → logprob: -2.3910980224609375
    5. '  
' → logprob: -4.6410980224609375
    6. '   
' → logprob: -5.0160980224609375
    7. 'j' → logprob: -5.6410980224609375
    8. '	
' → logprob: -6.0160980224609375
    9. '\n' → logprob: -6.2660980224609375
    10. '' → logprob: -6.5160980224609375

Token 247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10779133439064026
    2. ' states' → logprob: -3.2327914237976074
    3. '    
' → logprob: -3.9827914237976074
    4. 'states' → logprob: -4.107791423797607
    5. '
' → logprob: -4.482791423797607
    6. 'j' → logprob: -5.107791423797607
    7. ' 
' → logprob: -5.857791423797607
    8. 's' → logprob: -6.482791423797607
    9. '   
' → logprob: -6.482791423797607
    10. ' ' → logprob: -7.357791423797607

Token 248: ' #' (ID: 1069)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.16885873675346375
    2. 'states' → logprob: -2.293858766555786
    3. ' for' → logprob: -3.668858766555786
    4. '   ' → logprob: -4.293858528137207
    5. ' if' → logprob: -4.418858528137207
    6. 'for' → logprob: -6.543858528137207
    7. 'if' → logprob: -7.293858528137207
    8. ' j' → logprob: -7.668858528137207
    9. '
' → logprob: -8.418858528137207
    10. 'j' → logprob: -9.168858528137207

Token 249: ' ' (ID: 220)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.5719286203384399
    2. 'states' → logprob: -0.9469286203384399
    3. ' for' → logprob: -4.07192850112915
    4. ' if' → logprob: -4.69692850112915
    5. 'for' → logprob: -4.69692850112915
    6. '   ' → logprob: -5.07192850112915
    7. 'if' → logprob: -5.32192850112915
    8. ' j' → logprob: -8.071928977966309
    9. 'j' → logprob: -8.446928977966309
    10. 'state' → logprob: -8.946928977966309

Token 250: '4' (ID: 19)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.03557258099317551
    2. 'for' → logprob: -4.035572528839111
    3. ' states' → logprob: -4.285572528839111
    4. 'if' → logprob: -6.410572528839111
    5. '   ' → logprob: -7.035572528839111
    6. ' for' → logprob: -7.160572528839111
    7. ' if' → logprob: -9.28557300567627
    8. 'j' → logprob: -9.91057300567627
    9. 'state' → logprob: -10.41057300567627
    10. ' ' → logprob: -12.16057300567627

Token 251: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.279928594827652
    2. ' -' → logprob: -1.6549285650253296
    3. ' ==' → logprob: -4.154928684234619
    4. ' <=' → logprob: -4.279928684234619
    5. '   ' → logprob: -4.529928684234619
    6. '==' → logprob: -5.279928684234619
    7. '<=' → logprob: -6.279928684234619
    8. 'elif' → logprob: -7.154928684234619
    9. 'if' → logprob: -7.279928684234619
    10. ' >=' → logprob: -7.279928684234619

Token 252: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.003489239141345024
    2. 'y' → logprob: -6.378489017486572
    3. ' ' → logprob: -6.878489017486572
    4. 'j' → logprob: -7.628489017486572
    5. ' y' → logprob: -8.87848949432373
    6. '5' → logprob: -10.00348949432373
    7. 'if' → logprob: -11.12848949432373
    8. ' j' → logprob: -11.62848949432373
    9. '   ' → logprob: -12.00348949432373
    10. '
' → logprob: -12.00348949432373

Token 253: '以' (ID: 5924)
  Prédit: '以'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '以' → logprob: -0.39671000838279724
    2. 'if' → logprob: -2.02170991897583
    3. 'から' → logprob: -2.64670991897583
    4. 'の' → logprob: -3.14670991897583
    5. ',' → logprob: -4.52170991897583
    6. '以上' → logprob: -4.64670991897583
    7. 'の場合' → logprob: -4.64670991897583
    8. 'j' → logprob: -4.89670991897583
    9. '   ' → logprob: -5.39670991897583
    10. 'に' → logprob: -5.52170991897583

Token 254: '降' (ID: 36722)
  Prédit: '降'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '降' → logprob: -0.06267084926366806
    2. '上' → logprob: -3.687670946121216
    3. '外' → logprob: -3.687670946121216
    4. '下' → logprob: -4.812670707702637
    5. '後' → logprob: -6.187670707702637
    6. '以下' → logprob: -8.687670707702637
    7. '```' → logprob: -9.187670707702637
    8. '前' → logprob: -9.937670707702637
    9. '遠' → logprob: -10.562670707702637
    10. '以' → logprob: -11.062670707702637

Token 255: 'の' (ID: 3385)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2030591070652008
    2. 'if' → logprob: -2.203059196472168
    3. ' if' → logprob: -2.703059196472168
    4. ' states' → logprob: -6.078059196472168
    5. '
' → logprob: -6.828059196472168
    6. 'states' → logprob: -7.453059196472168
    7. 'から' → logprob: -7.578059196472168
    8. 'の' → logprob: -7.828059196472168
    9. 'for' → logprob: -7.953059196472168
    10. '    
' → logprob: -8.703059196472168

Token 256: 'ル' (ID: 7052)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5331873297691345
    2. ' j' → logprob: -2.2831873893737793
    3. ' if' → logprob: -2.4081873893737793
    4. 'for' → logprob: -2.6581873893737793
    5. 'j' → logprob: -3.0331873893737793
    6. '   ' → logprob: -3.4081873893737793
    7. ' states' → logprob: -3.5331873893737793
    8. ' for' → logprob: -4.658187389373779
    9. 'states' → logprob: -4.783187389373779
    10. '4' → logprob: -5.158187389373779

Token 257: 'ール' (ID: 27160)
  Prédit: 'ール'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ール' → logprob: -0.017516309395432472
    2. 'ープ' → logprob: -4.267516136169434
    3. 'ー' → logprob: -5.767516136169434
    4. '   ' → logprob: -9.392516136169434
    5. 'ージ' → logprob: -10.267516136169434
    6. '       ' → logprob: -10.517516136169434
    7. '```' → logprob: -10.892516136169434
    8. '#' → logprob: -11.142516136169434
    9. '
' → logprob: -11.892516136169434
    10. '\xe3\x83\xbc\xe3\x83' → logprob: -12.017516136169434

Token 258: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021076751872897148
    2. ' if' → logprob: -4.021076679229736
    3. '    
' → logprob: -6.896076679229736
    4. '
' → logprob: -7.396076679229736
    5. ' for' → logprob: -8.021077156066895
    6. 'if' → logprob: -8.396077156066895
    7. '   ' → logprob: -9.021077156066895
    8. ' ' → logprob: -9.271077156066895
    9. ' states' → logprob: -9.271077156066895
    10. '	if' → logprob: -9.521077156066895

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.186198890209198
    2. ' if' → logprob: -1.8111989498138428
    3. 'if' → logprob: -5.436198711395264
    4. ' for' → logprob: -6.686198711395264
    5. ' states' → logprob: -7.686198711395264
    6. 'for' → logprob: -8.686199188232422
    7. '
' → logprob: -9.811199188232422
    8. '	if' → logprob: -10.061199188232422
    9. '    ' → logprob: -10.686199188232422
    10. 'states' → logprob: -10.811199188232422

Token 260: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3932473957538605
    2. 'if' (adapté à ' if') → logprob: -1.768247365951538
    3. '   ' → logprob: -3.018247365951538
    4. ' states' → logprob: -3.018247365951538
    5. ' for' → logprob: -3.268247365951538
    6. 'for' → logprob: -4.518247604370117
    7. 'states' → logprob: -4.893247604370117
    8. '    ' → logprob: -9.643247604370117
    9. ' ' → logprob: -10.143247604370117
    10. '	if' → logprob: -10.518247604370117

Token 261: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.07982323318719864
    2. ' j' → logprob: -2.5798232555389404
    3. 'max' → logprob: -8.07982349395752
    4. '   ' → logprob: -8.45482349395752
    5. ' (' → logprob: -8.95482349395752
    6. '(j' → logprob: -9.20482349395752
    7. ' max' → logprob: -9.32982349395752
    8. '	j' → logprob: -10.45482349395752
    9. ' ' → logprob: -10.82982349395752
    10. '(' → logprob: -10.82982349395752

Token 262: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.12760302424430847
    2. '>=' → logprob: -2.127603054046631
    3. ' ==' → logprob: -8.377602577209473
    4. ' ' → logprob: -8.627602577209473
    5. '   ' → logprob: -8.752602577209473
    6. '==' → logprob: -9.377602577209473
    7. ' <' → logprob: -12.502602577209473
    8. '  ' → logprob: -12.502602577209473
    9. ')>=' → logprob: -12.752602577209473
    10. ']>=' → logprob: -13.002602577209473

Token 263: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0017030329909175634
    2. ' ' → logprob: -6.376703262329102
    3. '４' → logprob: -15.251703262329102
    4. '5' → logprob: -15.501703262329102
    5. '   ' → logprob: -16.1267032623291
    6. '' → logprob: -16.9392032623291
    7. '  ' → logprob: -17.0642032623291
    8. '۴' → logprob: -17.1892032623291
    9. '3' → logprob: -17.5017032623291
    10. '४' → logprob: -17.6267032623291

Token 264: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.652451464906335e-05
    2. ' ' → logprob: -11.125016212463379
    3. '４' → logprob: -13.750016212463379
    4. '४' → logprob: -15.875016212463379
    5. '۴' → logprob: -15.875016212463379
    6. '' → logprob: -16.000017166137695
    7. '৪' → logprob: -16.187517166137695
    8. '٤' → logprob: -16.937517166137695
    9. '```' → logprob: -17.750017166137695
    10. '   ' → logprob: -18.312517166137695

Token 265: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03796070069074631
    2. 'and' → logprob: -3.4129607677459717
    3. ' or' → logprob: -5.537960529327393
    4. '   ' → logprob: -8.16296100616455
    5. ' ' → logprob: -10.41296100616455
    6. 'or' → logprob: -10.66296100616455
    7. ':' → logprob: -10.91296100616455
    8. ':
' → logprob: -12.78796100616455
    9. ' и' → logprob: -13.16296100616455
    10. '	and' → logprob: -13.28796100616455

Token 266: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.22565332055091858
    2. 'y' → logprob: -1.6006532907485962
    3. '   ' → logprob: -8.475653648376465
    4. '4' → logprob: -11.350653648376465
    5. ' ' → logprob: -11.350653648376465
    6. '	y' → logprob: -12.725653648376465
    7. '  ' → logprob: -13.350653648376465
    8. '    ' → logprob: -13.600653648376465
    9. ' ' → logprob: -14.413153648376465
    10. '       ' → logprob: -14.475653648376465

Token 267: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5234341025352478
    2. ' >=' → logprob: -0.8984341025352478
    3. 'and' → logprob: -8.773433685302734
    4. '+' → logprob: -10.148433685302734
    5. ' ' → logprob: -10.523433685302734
    6. '   ' → logprob: -10.648433685302734
    7. ' and' → logprob: -11.148433685302734
    8. '[' → logprob: -11.398433685302734
    9. '4' → logprob: -11.523433685302734
    10. '≥' → logprob: -12.273433685302734

Token 268: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0017035098280757666
    2. ' ' → logprob: -6.37670373916626
    3. '   ' → logprob: -14.376703262329102
    4. '４' → logprob: -15.751703262329102
    5. '```' → logprob: -15.751703262329102
    6. '' → logprob: -16.1892032623291
    7. '  ' → logprob: -16.3142032623291
    8. '۴' → logprob: -17.1267032623291
    9. ' ' → logprob: -17.6892032623291
    10. '४' → logprob: -17.6892032623291

Token 269: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.9743012671824545e-05
    2. ' ' → logprob: -10.875020027160645
    3. '
' → logprob: -16.250019073486328
    4. '```' → logprob: -16.312519073486328
    5. '４' → logprob: -16.375019073486328
    6. '' → logprob: -16.375019073486328
    7. '४' → logprob: -17.062519073486328
    8. '৪' → logprob: -17.125019073486328
    9. '۴' → logprob: -17.125019073486328
    10. '   ' → logprob: -17.187519073486328

Token 270: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05583309754729271
    2. ':
' → logprob: -2.930833101272583
    3. '   ' → logprob: -7.680832862854004
    4. ' and' → logprob: -7.930832862854004
    5. '       ' → logprob: -9.555832862854004
    6. '):' → logprob: -11.180832862854004
    7. 'and' → logprob: -11.305832862854004
    8. '):
' → logprob: -11.805832862854004
    9. ',' → logprob: -11.930832862854004
    10. ' :' → logprob: -12.055832862854004

Token 271: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2741333246231079
    2. '   ' → logprob: -2.1491332054138184
    3. ' states' → logprob: -2.1491332054138184
    4. 'states' → logprob: -5.149133205413818
    5. ' if' → logprob: -8.524133682250977
    6. ' for' → logprob: -8.649133682250977
    7. ',' → logprob: -9.274133682250977
    8. '(states' → logprob: -9.524133682250977
    9. '
' → logprob: -10.024133682250977
    10. ':
' → logprob: -10.149133682250977

Token 272: ' #' (ID: 1069)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.5856819152832031
    2. '   ' → logprob: -1.5856819152832031
    3. ' states' → logprob: -1.5856819152832031
    4. 'if' → logprob: -3.960681915283203
    5. ' if' → logprob: -4.335681915283203
    6. 'for' → logprob: -7.460681915283203
    7. '       ' → logprob: -7.585681915283203
    8. ' for' → logprob: -8.085681915283203
    9. '#' (adapté à ' #') → logprob: -10.335681915283203
    10. ' ' → logprob: -10.710681915283203

Token 273: ' 引' (ID: 167622)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.42628246545791626
    2. ' states' → logprob: -1.3012824058532715
    3. 'for' → logprob: -3.6762824058532715
    4. '   ' → logprob: -3.6762824058532715
    5. ' for' → logprob: -3.9262824058532715
    6. 'if' → logprob: -6.0512824058532715
    7. ' if' → logprob: -6.3012824058532715
    8. '#' → logprob: -9.80128288269043
    9. 'state' → logprob: -10.05128288269043
    10. '       ' → logprob: -10.17628288269043

Token 274: 'き' (ID: 11852)
  Prédit: 'き'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'き' → logprob: -0.6096816062927246
    2. ' states' → logprob: -2.1096816062927246
    3. '   ' → logprob: -2.8596816062927246
    4. 'く' → logprob: -2.8596816062927246
    5. 'states' → logprob: -3.2346816062927246
    6. 'win' → logprob: -3.7346816062927246
    7. '       ' → logprob: -3.7346816062927246
    8. 'け' → logprob: -3.8596816062927246
    9. 'for' → logprob: -4.484681606292725
    10. 'diff' → logprob: -4.609681606292725

Token 275: '分' (ID: 2957)
  Prédit: '分'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '分' → logprob: -0.002239708323031664
    2. '続' → logprob: -7.25223970413208
    3. 'j' → logprob: -7.37723970413208
    4. '-' → logprob: -7.87723970413208
    5. '#' → logprob: -9.002240180969238
    6. '```' → logprob: -9.377240180969238
    7. 't' → logprob: -9.502240180969238
    8. 'き' → logprob: -9.627240180969238
    9. 'a' → logprob: -10.752240180969238
    10. 'y' → logprob: -11.127240180969238

Token 276: 'け' (ID: 15707)
  Prédit: 'け'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'け' → logprob: -0.011402171105146408
    2. 'き' → logprob: -5.261402130126953
    3. 's' → logprob: -6.636402130126953
    4. 'と' → logprob: -6.761402130126953
    5. 'て' → logprob: -7.761402130126953
    6. '状態' → logprob: -8.011402130126953
    7. 'state' → logprob: -8.636402130126953
    8. 'states' → logprob: -8.636402130126953
    9. 'の' → logprob: -8.761402130126953
    10. 'は' → logprob: -8.761402130126953

Token 277: '条件' (ID: 59062)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.8623334765434265
    2. '   ' → logprob: -1.6123335361480713
    3. 'states' → logprob: -1.8623335361480713
    4. '(states' → logprob: -2.7373335361480713
    5. 'の' → logprob: -3.2373335361480713
    6. 'を' → logprob: -3.6123335361480713
    7. ',' → logprob: -3.8623335361480713
    8. 'として' → logprob: -4.237333297729492
    9. '
' → logprob: -5.237333297729492
    10. 'で' → logprob: -5.487333297729492

Token 278: '回' (ID: 10154)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14084824919700623
    2. '   ' → logprob: -2.265848159790039
    3. ' states' → logprob: -4.515848159790039
    4. ' if' → logprob: -5.765848159790039
    5. '(states' → logprob: -5.765848159790039
    6. ',' → logprob: -5.890848159790039
    7. 'states' → logprob: -6.015848159790039
    8. '
' → logprob: -7.140848159790039
    9. ' =' → logprob: -7.515848159790039
    10. 'if' → logprob: -7.765848159790039

Token 279: '避' (ID: 88569)
  Prédit: '数'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '数' → logprob: -0.46307143568992615
    2. '避' → logprob: -1.2130714654922485
    3. '```' → logprob: -3.588071346282959
    4. 'return' → logprob: -4.088071346282959
    5. '#' → logprob: -4.463071346282959
    6. 's' → logprob: -5.588071346282959
    7. 'count' → logprob: -5.838071346282959
    8. '   ' → logprob: -6.463071346282959
    9. '復' → logprob: -6.713071346282959
    10. '``' → logprob: -7.088071346282959

Token 280: 'の' (ID: 3385)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027825357392430305
    2. '   ' → logprob: -4.777825355529785
    3. '
' → logprob: -5.277825355529785
    4. '        
' → logprob: -5.402825355529785
    5. ' if' → logprob: -6.277825355529785
    6. '<|end|>' → logprob: -6.902825355529785
    7. ',' → logprob: -7.027825355529785
    8. '    ' → logprob: -7.277825355529785
    9. '        ' → logprob: -7.277825355529785
    10. 'if' → logprob: -7.902825355529785

Token 281: 'ため' (ID: 103912)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.246476173400879
    2. ' for' → logprob: -1.371476173400879
    3. ' states' → logprob: -1.621476173400879
    4. 'states' → logprob: -1.996476173400879
    5. '   ' → logprob: -3.121476173400879
    6. ' return' → logprob: -3.621476173400879
    7. 'return' → logprob: -3.996476173400879
    8. 'j' → logprob: -4.246476173400879
    9. ' j' → logprob: -4.621476173400879
    10. 'if' → logprob: -5.871476173400879

Token 282: '特' (ID: 8176)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -1.1077851057052612
    2. ' states' → logprob: -1.4827851057052612
    3. '       ' → logprob: -1.7327851057052612
    4. 'if' → logprob: -2.482785224914551
    5. '   ' → logprob: -2.607785224914551
    6. ' if' → logprob: -3.107785224914551
    7. 'for' → logprob: -3.107785224914551
    8. ' for' → logprob: -3.982785224914551
    9. 'diff' → logprob: -9.35778522491455
    10. '(states' → logprob: -9.60778522491455

Token 283: '別' (ID: 47106)
  Prédit: 'に'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'に' → logprob: -0.6972235441207886
    2. '別' → logprob: -1.4472235441207886
    3. '徴' → logprob: -1.9472235441207886
    4. '   ' → logprob: -2.697223663330078
    5. '殊' → logprob: -3.447223663330078
    6. '定' → logprob: -4.072223663330078
    7. '       ' → logprob: -6.572223663330078
    8. '化' → logprob: -6.697223663330078
    9. '```' → logprob: -6.822223663330078
    10. 'elif' → logprob: -7.197223663330078

Token 284: '扱' (ID: 161953)
  Prédit: '処'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '処' → logprob: -0.5224481821060181
    2. '扱' → logprob: -2.2724480628967285
    3. 'な' → logprob: -2.6474480628967285
    4. 'if' → logprob: -2.8974480628967285
    5. 'に' → logprob: -2.8974480628967285
    6. 'case' → logprob: -3.0224480628967285
    7. 'cases' → logprob: -3.3974480628967285
    8. '対応' → logprob: -5.1474480628967285
    9. '   ' → logprob: -5.3974480628967285
    10. '措' → logprob: -5.5224480628967285

Token 285: 'い' (ID: 3826)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09954138100147247
    2. '           ' → logprob: -3.474541425704956
    3. '   ' → logprob: -3.599541425704956
    4. ':' → logprob: -3.974541425704956
    5. 'い' → logprob: -5.474541187286377
    6. 'if' → logprob: -6.224541187286377
    7. 'し' → logprob: -6.349541187286377
    8. 'う' → logprob: -6.349541187286377
    9. 'け' → logprob: -6.849541187286377
    10. ':
' → logprob: -6.849541187286377

Token 286: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01820063218474388
    2. '
' → logprob: -4.768200397491455
    3. '        
' → logprob: -5.268200397491455
    4. '   ' → logprob: -6.143200397491455
    5. ',' → logprob: -8.018200874328613
    6. '    
' → logprob: -8.143200874328613
    7. ' if' → logprob: -8.643200874328613
    8. '    ' → logprob: -8.768200874328613
    9. '  
' → logprob: -8.893200874328613
    10. '           ' → logprob: -9.143200874328613

Token 287: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01689845696091652
    2. '   ' → logprob: -5.0168986320495605
    3. ' if' → logprob: -5.2668986320495605
    4. ' states' → logprob: -6.0168986320495605
    5. 'if' → logprob: -7.1418986320495605
    6. '        
' → logprob: -7.6418986320495605
    7. '
' → logprob: -8.391898155212402
    8. ' for' → logprob: -8.516898155212402
    9. 'states' → logprob: -8.641898155212402
    10. '           ' → logprob: -8.891898155212402

Token 288: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.3881285190582275
    2. 'if' → logprob: -1.5131285190582275
    3. ' states' → logprob: -1.5131285190582275
    4. 'states' → logprob: -1.8881285190582275
    5. '   ' → logprob: -2.1381285190582275
    6. '       ' → logprob: -3.5131285190582275
    7. 'for' → logprob: -5.388128280639648
    8. ' for' → logprob: -5.638128280639648
    9. 'return' → logprob: -7.888128280639648
    10. 'j' → logprob: -7.888128280639648

Token 289: ' from' (ID: 591)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.4263286292552948
    2. 'states' → logprob: -1.5513286590576172
    3. '   ' → logprob: -2.676328659057617
    4. ' if' → logprob: -3.426328659057617
    5. 'if' → logprob: -4.301328659057617
    6. ' for' → logprob: -4.551328659057617
    7. '       ' → logprob: -5.426328659057617
    8. 'for' → logprob: -5.551328659057617
    9. '    ' → logprob: -8.301328659057617
    10. '           ' → logprob: -8.801328659057617

Token 290: ' ' (ID: 220)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.6301133036613464
    2. ' collections' → logprob: -1.3801133632659912
    3. 'collections' → logprob: -3.005113363265991
    4. 'j' → logprob: -3.130113363265991
    5. '(' → logprob: -3.255113363265991
    6. ' y' → logprob: -4.005113124847412
    7. ' random' → logprob: -4.505113124847412
    8. ' (' → logprob: -4.630113124847412
    9. ' ' → logprob: -5.130113124847412
    10. ' math' → logprob: -5.255113124847412

Token 291: '4' (ID: 19)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1041860580444336
    2. 'collections' → logprob: -1.2291860580444336
    3. '(' → logprob: -2.1041860580444336
    4. '4' → logprob: -2.3541860580444336
    5. '(j' → logprob: -2.6041860580444336
    6. 'y' → logprob: -3.6041860580444336
    7. '(y' → logprob: -4.104186058044434
    8. 'states' → logprob: -5.104186058044434
    9. 'deque' → logprob: -5.604186058044434
    10. '
' → logprob: -5.854186058044434

Token 292: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0951182097196579
    2. '4' → logprob: -2.970118284225464
    3. ' -' → logprob: -3.345118284225464
    4. ',' → logprob: -5.845118045806885
    5. ' ' → logprob: -8.095118522644043
    6. ' to' → logprob: -8.220118522644043
    7. ' ,' → logprob: -8.845118522644043
    8. 'to' → logprob: -9.220118522644043
    9. '-j' → logprob: -9.595118522644043
    10. '-
' → logprob: -9.720118522644043

Token 293: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0002920830447692424
    2. '5' → logprob: -8.37529182434082
    3. ' ' → logprob: -9.75029182434082
    4. '４' → logprob: -14.50029182434082
    5. '-' → logprob: -14.62529182434082
    6. 'from' → logprob: -14.87529182434082
    7. '```' → logprob: -15.50029182434082
    8. '45' → logprob: -16.00029182434082
    9. ',' → logprob: -16.12529182434082
    10. '.' → logprob: -16.18779182434082

Token 294: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7366204261779785
    2. ' states' → logprob: -1.1116204261779785
    3. ' if' → logprob: -2.2366204261779785
    4. 'states' → logprob: -3.1116204261779785
    5. '
' → logprob: -4.3616204261779785
    6. 'if' → logprob: -4.9866204261779785
    7. ' j' → logprob: -5.2366204261779785
    8. ' for' → logprob: -5.6116204261779785
    9. '       ' → logprob: -5.6116204261779785
    10. '    
' → logprob: -6.2366204261779785

Token 295: '       ' (ID: 309)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.459683895111084
    2. '   ' → logprob: -1.584683895111084
    3. '       ' → logprob: -2.084683895111084
    4. ' if' → logprob: -4.209683895111084
    5. 'states' → logprob: -4.209683895111084
    6. ' for' → logprob: -4.959683895111084
    7. 'if' → logprob: -7.834683895111084
    8. '
' → logprob: -7.959683895111084
    9. '(states' → logprob: -8.084684371948242
    10. '    ' → logprob: -8.084684371948242

Token 296: ' if' (ID: 538)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.04935675114393234
    2. ' states' → logprob: -3.674356698989868
    3. '   ' → logprob: -4.174356937408447
    4. 'if' (adapté à ' if') → logprob: -5.174356937408447
    5. 'for' → logprob: -6.924356937408447
    6. ' if' → logprob: -7.799356937408447
    7. '       ' → logprob: -8.924356460571289
    8. ' for' → logprob: -9.424356460571289
    9. '           ' → logprob: -10.424356460571289
    10. 'state' → logprob: -10.924356460571289

Token 297: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.350204199552536
    2. ' j' → logprob: -1.2252042293548584
    3. '(j' → logprob: -6.725203990936279
    4. ' (' → logprob: -8.350204467773438
    5. '   ' → logprob: -9.100204467773438
    6. '(' → logprob: -9.600204467773438
    7. ' not' → logprob: -10.225204467773438
    8. '	j' → logprob: -10.225204467773438
    9. 'not' → logprob: -10.475204467773438
    10. ' ' → logprob: -10.600204467773438

Token 298: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2257182002067566
    2. '==' → logprob: -1.6007182598114014
    3. ' ' → logprob: -9.22571849822998
    4. '-' → logprob: -9.72571849822998
    5. ' -' → logprob: -10.35071849822998
    6. ' >' → logprob: -10.72571849822998
    7. '+' → logprob: -10.85071849822998
    8. '=' → logprob: -11.22571849822998
    9. ']==' → logprob: -11.60071849822998
    10. '>' → logprob: -11.85071849822998

Token 299: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.011563621461391449
    2. 'y' → logprob: -4.636563777923584
    3. ' ' → logprob: -7.011563777923584
    4. ' y' → logprob: -7.011563777923584
    5. '   ' → logprob: -13.761563301086426
    6. '5' → logprob: -14.011563301086426
    7. '  ' → logprob: -14.824063301086426
    8. '	y' → logprob: -15.511563301086426
    9. '４' → logprob: -15.636563301086426
    10. '' → logprob: -16.699064254760742

Token 300: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.9875325708417222e-05
    2. 'y' → logprob: -10.875029563903809
    3. ' ' → logprob: -11.500029563903809
    4. ' y' → logprob: -14.875029563903809
    5. '４' → logprob: -15.750029563903809
    6. '' → logprob: -17.250030517578125
    7. '۴' → logprob: -17.375030517578125
    8. '5' → logprob: -17.500030517578125
    9. 'from' → logprob: -17.875030517578125
    10. '   ' → logprob: -18.000030517578125

Token 301: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06220844015479088
    2. 'and' → logprob: -2.812208414077759
    3. '   ' → logprob: -9.68720817565918
    4. ':' → logprob: -9.93720817565918
    5. ' ' → logprob: -10.06220817565918
    6. '       ' → logprob: -10.68720817565918
    7. ':
' → logprob: -11.18720817565918
    8. '+' → logprob: -11.31220817565918
    9. '	and' → logprob: -11.31220817565918
    10. '    ' → logprob: -12.06220817565918

Token 302: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3136498034000397
    2. 'y' → logprob: -1.3136497735977173
    3. '4' → logprob: -7.938649654388428
    4. ' ' → logprob: -10.938650131225586
    5. '   ' → logprob: -11.813650131225586
    6. '	y' → logprob: -13.438650131225586
    7. '    ' → logprob: -13.688650131225586
    8. '       ' → logprob: -14.563650131225586
    9. '  ' → logprob: -14.938650131225586
    10. '5' → logprob: -15.126150131225586

Token 303: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3869018256664276
    2. ' ==' → logprob: -1.13690185546875
    3. '==
' → logprob: -11.63690185546875
    4. ' ' → logprob: -12.01190185546875
    5. ']==' → logprob: -12.51190185546875
    6. '=' → logprob: -12.88690185546875
    7. '4' → logprob: -13.38690185546875
    8. '[' → logprob: -13.63690185546875
    9. '+' → logprob: -13.63690185546875
    10. ')==' → logprob: -13.76190185546875

Token 304: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00018375257786829025
    2. ' ' → logprob: -8.625184059143066
    3. '5' → logprob: -13.250184059143066
    4. '   ' → logprob: -14.500184059143066
    5. '3' → logprob: -14.625184059143066
    6. '  ' → logprob: -15.000184059143066
    7. '４' → logprob: -15.000184059143066
    8. '```' → logprob: -15.750184059143066
    9. 'from' → logprob: -16.68768310546875
    10. '۴' → logprob: -16.75018310546875

Token 305: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.4617256056226324e-05
    2. ' ' → logprob: -11.500014305114746
    3. '5' → logprob: -12.750014305114746
    4. '４' → logprob: -14.500014305114746
    5. '۴' → logprob: -15.562514305114746
    6. '४' → logprob: -15.750014305114746
    7. '' → logprob: -15.875014305114746
    8. '৪' → logprob: -16.062515258789062
    9. '```' → logprob: -16.437515258789062
    10. '   ' → logprob: -16.687515258789062

Token 306: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17547279596328735
    2. ':
' → logprob: -1.9254727363586426
    3. ' and' → logprob: -4.675472736358643
    4. '       ' → logprob: -5.300472736358643
    5. '):' → logprob: -8.0504732131958
    6. '):
' → logprob: -8.8004732131958
    7. '   ' → logprob: -9.6754732131958
    8. ',' → logprob: -9.8004732131958
    9. 'and' → logprob: -9.8004732131958
    10. ' :' → logprob: -9.9254732131958

Token 307: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11906582117080688
    2. ' states' → logprob: -2.994065761566162
    3. ':
' → logprob: -3.494065761566162
    4. '           ' → logprob: -3.994065761566162
    5. ',' → logprob: -5.494065761566162
    6. ':' → logprob: -6.119065761566162
    7. ' :
' → logprob: -6.244065761566162
    8. 'states' → logprob: -6.619065761566162
    9. '(states' → logprob: -7.119065761566162
    10. '
' → logprob: -7.244065761566162

Token 308: ' #' (ID: 1069)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.35418936610221863
    2. 'states' → logprob: -1.229189395904541
    3. '   ' → logprob: -5.229189395904541
    4. '           ' → logprob: -8.604188919067383
    5. ' return' → logprob: -9.729188919067383
    6. '               ' → logprob: -10.104188919067383
    7. 'return' → logprob: -10.479188919067383
    8. 'state' → logprob: -11.604188919067383
    9. '
' → logprob: -11.604188919067383
    10. '       ' → logprob: -11.729188919067383

Token 309: ' A' (ID: 355)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.1709311455488205
    2. ' states' → logprob: -1.920931100845337
    3. '   ' → logprob: -4.670931339263916
    4. '           ' → logprob: -7.545931339263916
    5. 'for' → logprob: -8.670930862426758
    6. ' for' → logprob: -8.920930862426758
    7. 'return' → logprob: -9.045930862426758
    8. '       ' → logprob: -9.295930862426758
    9. ' return' → logprob: -9.545930862426758
    10. 'state' → logprob: -10.045930862426758

Token 310: 'と' (ID: 5330)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.15342995524406433
    2. '.append' → logprob: -2.5284299850463867
    3. 'states' → logprob: -3.1534299850463867
    4. 'dd' → logprob: -5.153429985046387
    5. ' states' → logprob: -5.528429985046387
    6. '   ' → logprob: -5.903429985046387
    7. '_states' → logprob: -7.278429985046387
    8. ',' → logprob: -7.403429985046387
    9. '  ' → logprob: -7.903429985046387
    10. 'pend' → logprob: -7.903429985046387

Token 311: 'った' (ID: 42917)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.14389373362064362
    2. ' B' → logprob: -2.0188937187194824
    3. 'j' → logprob: -7.393893718719482
    4. ' j' → logprob: -8.51889419555664
    5. ' ' → logprob: -9.39389419555664
    6. ' y' → logprob: -9.64389419555664
    7. 'y' → logprob: -9.64389419555664
    8. '#' → logprob: -10.26889419555664
    9. '   ' → logprob: -10.83139419555664
    10. '
' → logprob: -11.26889419555664

Token 312: '場合' (ID: 72486)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.4335102438926697
    2. ' states' → logprob: -1.0585103034973145
    3. 'for' → logprob: -6.9335103034973145
    4. 'j' → logprob: -7.0585103034973145
    5. ' for' → logprob: -7.3085103034973145
    6. '(states' → logprob: -7.3085103034973145
    7. ' j' → logprob: -7.9335103034973145
    8. ',' → logprob: -8.058509826660156
    9. '#' → logprob: -8.558509826660156
    10. '   ' → logprob: -9.433509826660156

Token 313: '5' (ID: 20)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.31592369079589844
    2. 'states' → logprob: -1.6909236907958984
    3. '           ' → logprob: -2.8159236907958984
    4. '               ' → logprob: -3.8159236907958984
    5. '(states' → logprob: -5.690923690795898
    6. '   ' → logprob: -7.815923690795898
    7. '       ' → logprob: -8.440923690795898
    8. '.states' → logprob: -8.690923690795898
    9. '_states' → logprob: -8.815923690795898
    10. '
' → logprob: -9.190923690795898

Token 314: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.022069118916988373
    2. ',' → logprob: -4.022068977355957
    3. ' -' → logprob: -6.272068977355957
    4. ' ' → logprob: -7.272068977355957
    5. '   ' → logprob: -8.647068977355957
    6. '0' → logprob: -8.772068977355957
    7. '```' → logprob: -8.772068977355957
    8. ' ,' → logprob: -9.022068977355957
    9. '-j' → logprob: -9.147068977355957
    10. '5' → logprob: -9.397068977355957

Token 315: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.875004768371582
    3. '４' → logprob: -13.375004768371582
    4. '۴' → logprob: -15.375004768371582
    5. '४' → logprob: -16.750003814697266
    6. '٤' → logprob: -16.875003814697266
    7. '5' → logprob: -17.000003814697266
    8. '৪' → logprob: -17.250003814697266
    9. '' → logprob: -17.750003814697266
    10. 'four' → logprob: -17.750003814697266

Token 316: '、' (ID: 1395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7831918597221375
    2. 'states' → logprob: -1.4081919193267822
    3. '
' → logprob: -2.0331919193267822
    4. ' states' → logprob: -2.2831919193267822
    5. '   ' → logprob: -3.1581919193267822
    6. '       ' → logprob: -4.033191680908203
    7. '               ' → logprob: -6.283191680908203
    8. '(states' → logprob: -6.783191680908203
    9. ',' → logprob: -7.033191680908203
    10. ',
' → logprob: -8.158191680908203

Token 317: 'B' (ID: 33)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.5905677080154419
    2. 'states' → logprob: -0.8405677080154419
    3. '   ' → logprob: -4.590567588806152
    4. '           ' → logprob: -5.590567588806152
    5. '       ' → logprob: -8.965567588806152
    6. '    ' → logprob: -9.340567588806152
    7. 'j' → logprob: -10.215567588806152
    8. '(states' → logprob: -10.215567588806152
    9. 'state' → logprob: -10.340567588806152
    10. '               ' → logprob: -10.465567588806152

Token 318: 'と' (ID: 5330)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4278605580329895
    2. 'と' → logprob: -1.9278604984283447
    3. 'の場合' → logprob: -2.6778604984283447
    4. 'の' → logprob: -3.8028604984283447
    5. ' and' → logprob: -3.8028604984283447
    6. 'and' → logprob: -3.8028604984283447
    7. 'が' → logprob: -4.677860736846924
    8. ' ' → logprob: -4.677860736846924
    9. ' -' → logprob: -4.802860736846924
    10. ',' → logprob: -5.052860736846924

Token 319: 'った' (ID: 42917)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.30251505970954895
    2. '4' → logprob: -1.5525150299072266
    3. 'y' → logprob: -3.3025150299072266
    4. '3' → logprob: -4.927515029907227
    5. ' y' → logprob: -6.927515029907227
    6. '```' → logprob: -7.177515029907227
    7. 'った' → logprob: -7.427515029907227
    8. '1' → logprob: -7.552515029907227
    9. '6' → logprob: -7.927515029907227
    10. '2' → logprob: -8.427515029907227

Token 320: '場合' (ID: 72486)
  Prédit: '場合'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '場合' → logprob: -0.002645336790010333
    2. 'の場合' → logprob: -6.627645492553711
    3. 'if' → logprob: -8.252645492553711
    4. ' ' → logprob: -9.002645492553711
    5. 'return' → logprob: -9.002645492553711
    6. 'は' → logprob: -9.377645492553711
    7. '状態' → logprob: -9.502645492553711
    8. 'と' → logprob: -9.877645492553711
    9. '   ' → logprob: -9.877645492553711
    10. 'j' → logprob: -10.002645492553711

Token 321: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.006163766607642174
    2. ' ' → logprob: -5.131163597106934
    3. '5' → logprob: -8.756163597106934
    4. '(' → logprob: -10.131163597106934
    5. 'j' → logprob: -11.756163597106934
    6. ' (' → logprob: -11.881163597106934
    7. '   ' → logprob: -12.131163597106934
    8. '４' → logprob: -12.381163597106934
    9. '[' → logprob: -13.131163597106934
    10. ' j' → logprob: -13.131163597106934

Token 322: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.8802491215174086e-05
    2. ' -' → logprob: -10.750028610229492
    3. '5' → logprob: -12.125028610229492
    4. '-
' → logprob: -13.625028610229492
    5. ',' → logprob: -15.875028610229492
    6. '-​' → logprob: -15.875028610229492
    7. ' ' → logprob: -16.375028610229492
    8. '–' → logprob: -16.875028610229492
    9. '```' → logprob: -17.125028610229492
    10. '-

' → logprob: -17.500028610229492

Token 323: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -13.75000286102295
    3. '4' → logprob: -14.62500286102295
    4. '```' → logprob: -14.62500286102295
    5. '6' → logprob: -14.75000286102295
    6. '５' → logprob: -15.25000286102295
    7. '   ' → logprob: -16.125003814697266
    8. 'j' → logprob: -16.750003814697266
    9. '
' → logprob: -17.187503814697266
    10. '-' → logprob: -17.250003814697266

Token 324: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7817735075950623
    2. '           ' → logprob: -1.156773567199707
    3. '       ' → logprob: -2.156773567199707
    4. '
' → logprob: -2.406773567199707
    5. ' states' → logprob: -4.531773567199707
    6. 'states' → logprob: -5.031773567199707
    7. '    
' → logprob: -6.906773567199707
    8. ',' → logprob: -7.406773567199707
    9. '
' → logprob: -7.531773567199707
    10. '(states' → logprob: -7.781773567199707

Token 325: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7961173057556152
    2. '       ' → logprob: -0.9211173057556152
    3. '
' → logprob: -1.9211173057556152
    4. '   ' → logprob: -6.046117305755615
    5. '
' → logprob: -7.046117305755615
    6. ' states' → logprob: -7.796117305755615
    7. '        
' → logprob: -8.921117782592773
    8. ',' → logprob: -9.171117782592773
    9. '	   ' → logprob: -9.921117782592773
    10. '		' → logprob: -9.921117782592773

Token 326: ' states' (ID: 9407)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' (adapté à ' states') → logprob: -0.08948919922113419
    2. ' states' → logprob: -2.464489221572876
    3. '   ' → logprob: -7.589488983154297
    4. 'return' → logprob: -10.464488983154297
    5. ' return' → logprob: -11.839488983154297
    6. 'state' → logprob: -13.339488983154297
    7. '.states' → logprob: -13.589488983154297
    8. '           ' → logprob: -13.714488983154297
    9. '(states' → logprob: -13.964488983154297
    10. '
' → logprob: -14.214488983154297

Token 327: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011740362970158458
    2. '.' → logprob: -6.751173973083496
    3. '.extend' → logprob: -13.001173973083496
    4. ' =' → logprob: -14.626173973083496
    5. ' .' → logprob: -14.626173973083496
    6. '=' → logprob: -14.751173973083496
    7. '.app' → logprob: -15.376173973083496
    8. 'append' → logprob: -16.626174926757812
    9. '.ap' → logprob: -16.751174926757812
    10. '.=' → logprob: -17.376174926757812

Token 328: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0009162207134068012
    2. '(' → logprob: -7.000916004180908
    3. '([' → logprob: -12.250916481018066
    4. '(j' → logprob: -18.12591552734375
    5. '(('' → logprob: -18.50091552734375
    6. ' ((' → logprob: -18.62591552734375
    7. '[(' → logprob: -19.25091552734375
    8. '(("' → logprob: -20.12591552734375
    9. ' (' → logprob: -20.62591552734375
    10. '(((' → logprob: -20.75091552734375

Token 329: 'j' (ID: 73)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.03062732331454754
    2. 'j' → logprob: -3.5306272506713867
    3. '(j' → logprob: -7.155627250671387
    4. '(' → logprob: -9.530627250671387
    5. '6' → logprob: -11.030627250671387
    6. ' j' → logprob: -12.655627250671387
    7. ' ' → logprob: -12.905627250671387
    8. '   ' → logprob: -15.030627250671387
    9. ',j' → logprob: -15.280627250671387
    10. '```' → logprob: -15.780627250671387

Token 330: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3489191234111786
    2. ' +' → logprob: -1.223919153213501
    3. ',' → logprob: -8.223918914794922
    4. ' ,' → logprob: -8.848918914794922
    5. '＋' → logprob: -10.223918914794922
    6. '+,' → logprob: -11.848918914794922
    7. '+
' → logprob: -12.223918914794922
    8. ' ' → logprob: -12.348918914794922
    9. '+j' → logprob: -12.973918914794922
    10. ' +
' → logprob: -13.223918914794922

Token 331: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015024791937321424
    2. ' ' → logprob: -6.501502513885498
    3. '１' → logprob: -16.876502990722656
    4. '  ' → logprob: -17.501502990722656
    5. '   ' → logprob: -17.751502990722656
    6. '0' → logprob: -17.751502990722656
    7. '
' → logprob: -18.126502990722656
    8. '```' → logprob: -18.189002990722656
    9. '-' → logprob: -18.439002990722656
    10. ' 
' → logprob: -18.751502990722656

Token 332: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002727793762460351
    2. ',y' → logprob: -8.875272750854492
    3. ' ,' → logprob: -9.125272750854492
    4. '<|end|>' → logprob: -11.750272750854492
    5. ',
' → logprob: -11.875272750854492
    6. '‌,' → logprob: -12.875272750854492
    7. ',j' → logprob: -13.375272750854492
    8. ')' → logprob: -13.875272750854492
    9. '),' → logprob: -14.250272750854492
    10. ',

' → logprob: -14.500272750854492

Token 333: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.06203983351588249
    2. ' y' → logprob: -2.812039852142334
    3. '4' → logprob: -9.562039375305176
    4. ' ' → logprob: -13.812039375305176
    5. '   ' → logprob: -14.437039375305176
    6. '	y' → logprob: -15.437039375305176
    7. '  ' → logprob: -16.937040328979492
    8. '    ' → logprob: -16.937040328979492
    9. '     ' → logprob: -18.812040328979492
    10. '9' → logprob: -18.937040328979492

Token 334: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.030343100428581238
    2. ')' → logprob: -3.9053430557250977
    3. '+' → logprob: -5.530343055725098
    4. '-' → logprob: -5.655343055725098
    5. ',' → logprob: -6.905343055725098
    6. '))
' → logprob: -7.280343055725098
    7. ' ))' → logprob: -8.780343055725098
    8. ' ' → logprob: -9.155343055725098
    9. ')))' → logprob: -9.280343055725098
    10. '),' → logprob: -9.655343055725098

Token 335: ' '' (ID: 461)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02059759572148323
    2. '))
' → logprob: -4.395597457885742
    3. ' ))' → logprob: -5.645597457885742
    4. '1' → logprob: -7.395597457885742
    5. '0' → logprob: -7.520597457885742
    6. 'True' → logprob: -7.520597457885742
    7. ')' → logprob: -7.520597457885742
    8. 'j' → logprob: -7.770597457885742
    9. ' (' → logprob: -8.145597457885742
    10. ' ' → logprob: -8.270597457885742

Token 336: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4886690378189087
    2. ''A' → logprob: -1.4886690378189087
    3. ''' → logprob: -2.488668918609619
    4. '"A' → logprob: -3.238668918609619
    5. ' A' → logprob: -4.363668918609619
    6. '"' → logprob: -5.238668918609619
    7. ' '' → logprob: -5.488668918609619
    8. 'J' → logprob: -5.863668918609619
    9. '''' → logprob: -5.988668918609619
    10. 'None' → logprob: -5.988668918609619

Token 337: ''))
' (ID: 15277)
  Prédit: ''))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.05790010467171669
    2. ''))
' → logprob: -3.3079001903533936
    3. ')' → logprob: -4.1828999519348145
    4. '))' → logprob: -6.1828999519348145
    5. '')' → logprob: -6.8078999519348145
    6. ''' → logprob: -7.3078999519348145
    7. ''))
' → logprob: -8.807900428771973
    8. ''))

' → logprob: -9.432900428771973
    9. '',' → logprob: -9.932900428771973
    10. 'a' → logprob: -10.182900428771973

Token 338: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16882368922233582
    2. ')
' → logprob: -1.9188237190246582
    3. '   ' → logprob: -4.793823719024658
    4. ' )' → logprob: -9.4188232421875
    5. ' states' → logprob: -9.4188232421875
    6. ' )
' → logprob: -10.4188232421875
    7. 'states' → logprob: -10.4188232421875
    8. '       ' → logprob: -10.9188232421875
    9. 'state' → logprob: -11.5438232421875
    10. '
' → logprob: -11.7938232421875

Token 339: ' states' (ID: 9407)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' (adapté à ' states') → logprob: -0.3137587606906891
    2. ' states' → logprob: -1.3137587308883667
    3. '(states' → logprob: -8.313758850097656
    4. '   ' → logprob: -8.563758850097656
    5. '.states' → logprob: -10.688758850097656
    6. '           ' → logprob: -10.813758850097656
    7. '_states' → logprob: -11.938758850097656
    8. 'state' → logprob: -12.188758850097656
    9. 'States' → logprob: -12.688758850097656
    10. '
' → logprob: -13.688758850097656

Token 340: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002655079588294029
    2. '.' → logprob: -8.250265121459961
    3. 'append' → logprob: -12.625265121459961
    4. ' .' → logprob: -15.125265121459961
    5. '.app' → logprob: -15.250265121459961
    6. '．' → logprob: -15.500265121459961
    7. '.
' → logprob: -17.00026512145996
    8. ').' → logprob: -18.00026512145996
    9. '.Append' → logprob: -18.12526512145996
    10. '.ap' → logprob: -18.37526512145996

Token 341: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -9.9728669738397e-05
    2. '(j' → logprob: -9.250100135803223
    3. '(' → logprob: -12.875100135803223
    4. ' ((' → logprob: -14.000100135803223
    5. '(
' → logprob: -16.500099182128906
    6. ' ' → logprob: -17.500099182128906
    7. ' (' → logprob: -18.375099182128906
    8. '[(' → logprob: -18.500099182128906
    9. '   ' → logprob: -18.875099182128906
    10. '```' → logprob: -19.125099182128906

Token 342: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0009760206448845565
    2. ' j' → logprob: -7.250976085662842
    3. '(j' → logprob: -8.250975608825684
    4. '4' → logprob: -13.500975608825684
    5. ' (' → logprob: -13.500975608825684
    6. ',j' → logprob: -14.000975608825684
    7. '(' → logprob: -14.375975608825684
    8. '	j' → logprob: -14.875975608825684
    9. '   ' → logprob: -15.750975608825684
    10. ' ' → logprob: -15.750975608825684

Token 343: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007375618442893028
    2. ' ,' → logprob: -7.37573766708374
    3. ' ' → logprob: -10.000737190246582
    4. '   ' → logprob: -10.125737190246582
    5. ',j' → logprob: -11.500737190246582
    6. '-' → logprob: -11.625737190246582
    7. ',y' → logprob: -13.125737190246582
    8. '  ' → logprob: -13.500737190246582
    9. '+' → logprob: -13.875737190246582
    10. '```' → logprob: -14.000737190246582

Token 344: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01416398212313652
    2. ' y' → logprob: -4.264163970947266
    3. '	y' → logprob: -15.514163970947266
    4. ' ' → logprob: -15.889163970947266
    5. '   ' → logprob: -16.514163970947266
    6. '(y' → logprob: -17.389163970947266
    7. '  ' → logprob: -17.889163970947266
    8. '+' → logprob: -18.139163970947266
    9. '    ' → logprob: -18.389163970947266
    10. ''y' → logprob: -18.514163970947266

Token 345: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00020389800192788243
    2. ' +' → logprob: -8.500204086303711
    3. '1' → logprob: -16.12520408630371
    4. ',' → logprob: -16.37520408630371
    5. '＋' → logprob: -16.37520408630371
    6. '+
' → logprob: -17.62520408630371
    7. ' ' → logprob: -18.62520408630371
    8. '+,' → logprob: -19.50020408630371
    9. '   ' → logprob: -19.87520408630371
    10. '-' → logprob: -20.25020408630371

Token 346: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.0000057220459
    4. '+' → logprob: -17.1250057220459
    5. '```' → logprob: -17.5625057220459
    6. '１' → logprob: -17.6250057220459
    7. '-' → logprob: -18.4375057220459
    8. '  ' → logprob: -19.1250057220459
    9. '۱' → logprob: -19.3750057220459
    10. '2' → logprob: -19.6250057220459

Token 347: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005253206938505173
    2. ' ,' → logprob: -5.255253314971924
    3. ','' → logprob: -11.630252838134766
    4. '',' → logprob: -12.380252838134766
    5. '),' → logprob: -13.380252838134766
    6. ''' → logprob: -13.505252838134766
    7. '   ' → logprob: -13.880252838134766
    8. ')' → logprob: -14.130252838134766
    9. ' ,'' → logprob: -14.630252838134766
    10. ' ' → logprob: -14.880252838134766

Token 348: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.22607000172138214
    2. ''' → logprob: -1.6010700464248657
    3. ''A' → logprob: -7.601069927215576
    4. ' B' → logprob: -9.351070404052734
    5. ' ' → logprob: -10.101070404052734
    6. 'B' → logprob: -10.976070404052734
    7. '`' → logprob: -12.851070404052734
    8. ' ' → logprob: -12.976070404052734
    9. ')' → logprob: -13.101070404052734
    10. '"' → logprob: -13.351070404052734

Token 349: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -8.160971628967673e-05
    2. ''' → logprob: -9.500082015991211
    3. ' B' → logprob: -12.125082015991211
    4. 'A' → logprob: -14.875082015991211
    5. ')' → logprob: -15.250082015991211
    6. '"B' → logprob: -15.250082015991211
    7. '`' → logprob: -15.750082015991211
    8. '')' → logprob: -15.875082015991211
    9. '	B' → logprob: -16.62508201599121
    10. 'Ｂ' → logprob: -17.75008201599121

Token 350: ''))
' (ID: 15277)
  Prédit: ''))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.007889100350439548
    2. '))' → logprob: -4.882889270782471
    3. ')' → logprob: -8.507888793945312
    4. ''))
' → logprob: -9.882888793945312
    5. '')' → logprob: -11.007888793945312
    6. ''' → logprob: -12.007888793945312
    7. '')))' → logprob: -13.007888793945312
    8. ' ))' → logprob: -13.132888793945312
    9. '"))' → logprob: -14.132888793945312
    10. ' '' → logprob: -14.132888793945312

Token 351: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1433185636997223
    2. ')' → logprob: -2.0183186531066895
    3. '       ' → logprob: -7.7683186531066895
    4. '	return' → logprob: -10.143318176269531
    5. '<|end|>' → logprob: -10.143318176269531
    6. '
' → logprob: -10.893318176269531
    7. ' )' → logprob: -11.018318176269531
    8. ')
' → logprob: -11.018318176269531
    9. ' return' → logprob: -11.018318176269531
    10. ')return' → logprob: -11.143318176269531

Token 352: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21812556684017181
    2. ' return' → logprob: -2.468125581741333
    3. 'return' (adapté à ' return') → logprob: -2.968125581741333
    4. ')' → logprob: -3.593125581741333
    5. '       ' → logprob: -3.843125581741333
    6. '
' → logprob: -5.343125343322754
    7. '	return' → logprob: -5.718125343322754
    8. ')
' → logprob: -6.218125343322754
    9. ')return' → logprob: -8.093125343322754
    10. ':return' → logprob: -9.218125343322754

Token 353: ' states' (ID: 9407)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.07889452576637268
    2. ' states' → logprob: -2.57889461517334
    3. '(states' → logprob: -12.57889461517334
    4. 'state' → logprob: -14.32889461517334
    5. '[' → logprob: -15.70389461517334
    6. '.states' → logprob: -15.95389461517334
    7. ' ' → logprob: -16.828893661499023
    8. 'States' → logprob: -16.953893661499023
    9. ' [' → logprob: -17.328893661499023
    10. '[]' → logprob: -17.453893661499023

Token 354: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.122795581817627
    2. ')' → logprob: -1.372795581817627
    3. '<|end|>' → logprob: -1.497795581817627
    4. '
' → logprob: -1.747795581817627
    5. '\n' → logprob: -5.372795581817627
    6. '  
' → logprob: -5.497795581817627
    7. ')
' → logprob: -5.872795581817627
    8. '    
' → logprob: -5.997795581817627
    9. '       ' → logprob: -6.247795581817627
    10. ',' → logprob: -6.372795581817627

Token 355: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033049776684492826
    2. ' states' → logprob: -7.128304958343506
    3. '    
' → logprob: -7.128304958343506
    4. '<|end|>' → logprob: -7.253304958343506
    5. '
' → logprob: -7.503304958343506
    6. ')' → logprob: -9.128305435180664
    7. 'states' → logprob: -9.878305435180664
    8. '       ' → logprob: -10.003305435180664
    9. ',' → logprob: -10.128305435180664
    10. '  
' → logprob: -10.253305435180664

Token 356: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017049647867679596
    2. '       ' → logprob: -5.267049789428711
    3. ' states' → logprob: -5.642049789428711
    4. 'states' → logprob: -5.892049789428711
    5. '
' → logprob: -6.642049789428711
    6. '	if' → logprob: -7.142049789428711
    7. 'if' → logprob: -7.267049789428711
    8. ' if' → logprob: -7.642049789428711
    9. '\t' → logprob: -7.892049789428711
    10. ')' → logprob: -8.017049789428711

Token 357: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.41917702555656433
    2. ' if' → logprob: -1.4191770553588867
    3. '   ' → logprob: -2.4191770553588867
    4. '#' → logprob: -5.169177055358887
    5. ' states' → logprob: -6.794177055358887
    6. 'for' → logprob: -7.169177055358887
    7. 'elif' → logprob: -7.169177055358887
    8. ' #' → logprob: -7.294177055358887
    9. ' for' → logprob: -7.919177055358887
    10. 'j' → logprob: -7.919177055358887

Token 358: 'それ' (ID: 47334)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.029981648549437523
    2. 'elif' → logprob: -4.52998161315918
    3. '   ' → logprob: -4.77998161315918
    4. '#' → logprob: -5.15498161315918
    5. ' if' → logprob: -5.90498161315918
    6. 'else' → logprob: -7.52998161315918
    7. 'j' → logprob: -7.65498161315918
    8. 'for' → logprob: -7.90498161315918
    9. 'states' → logprob: -9.02998161315918
    10. 'return' → logprob: -9.27998161315918

Token 359: '以' (ID: 5924)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07478402554988861
    2. 'elif' → logprob: -3.19978404045105
    3. 'if' → logprob: -3.82478404045105
    4. '
' → logprob: -6.324783802032471
    5. 'が' → logprob: -6.324783802032471
    6. 'は' → logprob: -6.699783802032471
    7. 'else' → logprob: -7.074783802032471
    8. ' if' → logprob: -7.199783802032471
    9. '#' → logprob: -7.824783802032471
    10. 'から' → logprob: -8.074784278869629

Token 360: '降' (ID: 36722)
  Prédit: 'は'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'は' → logprob: -0.47015872597694397
    2. 'elif' → logprob: -1.2201586961746216
    3. 'ぞ' → logprob: -4.470158576965332
    4. 'if' → logprob: -4.720158576965332
    5. 'else' → logprob: -4.720158576965332
    6. '   ' → logprob: -4.845158576965332
    7. '```' → logprob: -4.970158576965332
    8. 'よ' → logprob: -5.470158576965332
    9. 'is' → logprob: -5.720158576965332
    10. 'れ' → logprob: -6.345158576965332

Token 361: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2979993522167206
    2. ' states' → logprob: -1.797999382019043
    3. '(states' → logprob: -3.672999382019043
    4. 'states' → logprob: -4.422999382019043
    5. ' if' → logprob: -4.672999382019043
    6. '       ' → logprob: -4.797999382019043
    7. '<|end|>' → logprob: -4.922999382019043
    8. '
' → logprob: -4.922999382019043
    9. ':' → logprob: -5.297999382019043
    10. 'if' → logprob: -5.672999382019043

Token 362: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012676804326474667
    2. '   ' → logprob: -4.63767671585083
    3. ' states' → logprob: -6.38767671585083
    4. ' if' → logprob: -7.38767671585083
    5. '           ' → logprob: -8.012677192687988
    6. 'states' → logprob: -9.262677192687988
    7. 'if' → logprob: -9.637677192687988
    8. '
' → logprob: -11.012677192687988
    9. ' ' → logprob: -11.262677192687988
    10. ' for' → logprob: -11.262677192687988

Token 363: ' diff' (ID: 8868)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2842360734939575
    2. ' if' → logprob: -1.7842360734939575
    3. '   ' → logprob: -2.659235954284668
    4. 'diff' (adapté à ' diff') → logprob: -4.909235954284668
    5. '       ' → logprob: -7.159235954284668
    6. ' diff' → logprob: -8.034235954284668
    7. 'winner' → logprob: -8.784235954284668
    8. 'for' → logprob: -8.909235954284668
    9. ' winner' → logprob: -8.909235954284668
    10. ' states' → logprob: -9.409235954284668

Token 364: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020596660673618317
    2. '=' → logprob: -3.895596742630005
    3. '   ' → logprob: -10.520596504211426
    4. ' ' → logprob: -11.520596504211426
    5. '＝' → logprob: -12.895596504211426
    6. ' ==' → logprob: -13.020596504211426
    7. ' +=' → logprob: -13.270596504211426
    8. 's' → logprob: -13.395596504211426
    9. '=int' → logprob: -13.645596504211426
    10. '	' → logprob: -13.770596504211426

Token 365: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8585996031761169
    2. ' j' → logprob: -1.2335996627807617
    3. ' abs' → logprob: -1.8585996627807617
    4. 'abs' → logprob: -2.1085996627807617
    5. '(j' → logprob: -5.233599662780762
    6. ' (' → logprob: -6.858599662780762
    7. '(abs' → logprob: -7.233599662780762
    8. 'max' → logprob: -8.483599662780762
    9. ' max' → logprob: -8.608599662780762
    10. ' ' → logprob: -8.983599662780762

Token 366: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20332179963588715
    2. '-' → logprob: -1.7033218145370483
    3. '+' → logprob: -6.328321933746338
    4. '-y' → logprob: -10.57832145690918
    5. ' +' → logprob: -10.57832145690918
    6. ' >' → logprob: -10.82832145690918
    7. '>' → logprob: -10.95332145690918
    8. '<|end|>' → logprob: -11.82832145690918
    9. '+y' → logprob: -11.82832145690918
    10. ' ' → logprob: -11.95332145690918

Token 367: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0013263145228847861
    2. ' y' → logprob: -6.626326084136963
    3. '<|end|>' → logprob: -15.251326560974121
    4. '	y' → logprob: -16.376325607299805
    5. 'user' → logprob: -18.251325607299805
    6. '4' → logprob: -18.626325607299805
    7. '       ' → logprob: -18.626325607299805
    8. '(y' → logprob: -18.751325607299805
    9. ' ' → logprob: -19.001325607299805
    10. '<|end|>' → logprob: -19.126325607299805

Token 368: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009670860134065151
    2. '   ' → logprob: -5.259670734405518
    3. ' if' → logprob: -6.009670734405518
    4. 'if' → logprob: -6.884670734405518
    5. '
' → logprob: -7.134670734405518
    6. '<|end|>' → logprob: -10.134671211242676
    7. '	if' → logprob: -10.509671211242676
    8. ',' → logprob: -10.759671211242676
    9. ' states' → logprob: -10.884671211242676
    10. ')' → logprob: -11.884671211242676

Token 369: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03389406576752663
    2. '       ' → logprob: -4.033894062042236
    3. '
' → logprob: -4.408894062042236
    4. ' if' → logprob: -6.533894062042236
    5. ',' → logprob: -7.533894062042236
    6. '<|end|>' → logprob: -8.033894538879395
    7. '    
' → logprob: -8.533894538879395
    8. '  
' → logprob: -8.533894538879395
    9. ' ' → logprob: -9.033894538879395
    10. '	if' → logprob: -9.158894538879395

Token 370: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5978090167045593
    2. 'if' (adapté à ' if') → logprob: -0.8478090167045593
    3. '   ' → logprob: -3.847809076309204
    4. '	if' → logprob: -9.472808837890625
    5. ' states' → logprob: -9.847808837890625
    6. 'for' → logprob: -10.222808837890625
    7. ' for' → logprob: -10.472808837890625
    8. '       ' → logprob: -10.847808837890625
    9. ' next' → logprob: -10.847808837890625
    10. 'next' → logprob: -10.847808837890625

Token 371: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.31396248936653137
    2. 'diff' → logprob: -1.313962459564209
    3. '	diff' → logprob: -8.188962936401367
    4. ' abs' → logprob: -8.563962936401367
    5. 'abs' → logprob: -9.438962936401367
    6. 'j' → logprob: -9.813962936401367
    7. ' j' → logprob: -10.313962936401367
    8. ' ' → logprob: -10.313962936401367
    9. '(diff' → logprob: -11.188962936401367
    10. 'd' → logprob: -12.563962936401367

Token 372: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31385326385498047
    2. '==' → logprob: -1.3138532638549805
    3. ' >' → logprob: -8.43885326385498
    4. '>' → logprob: -8.68885326385498
    5. ' <' → logprob: -9.93885326385498
    6. ' >=' → logprob: -10.18885326385498
    7. ' ' → logprob: -10.18885326385498
    8. '>=' → logprob: -11.06385326385498
    9. '<' → logprob: -11.18885326385498
    10. ' in' → logprob: -11.56385326385498

Token 373: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005553185474127531
    2. ' ' → logprob: -5.255553245544434
    3. '0' → logprob: -8.255553245544434
    4. '-' → logprob: -10.130553245544434
    5. '2' → logprob: -11.255553245544434
    6. ' -' → logprob: -12.505553245544434
    7. '   ' → logprob: -13.443053245544434
    8. '  ' → logprob: -14.130553245544434
    9. '
' → logprob: -15.568053245544434
    10. '```' → logprob: -15.755553245544434

Token 374: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010693699587136507
    2. '0' → logprob: -7.12606954574585
    3. ' ' → logprob: -8.376069068908691
    4. '-' → logprob: -10.501069068908691
    5. '2' → logprob: -12.126069068908691
    6. '   ' → logprob: -14.438569068908691
    7. ' -' → logprob: -15.251069068908691
    8. '  ' → logprob: -15.501069068908691
    9. '１' → logprob: -15.688569068908691
    10. '```' → logprob: -16.001070022583008

Token 375: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20711572468280792
    2. ':
' → logprob: -1.7071157693862915
    3. ' and' → logprob: -5.457115650177002
    4. '       ' → logprob: -7.082115650177002
    5. '           ' → logprob: -8.08211612701416
    6. ' or' → logprob: -9.20711612701416
    7. '   ' → logprob: -9.58211612701416
    8. ' :' → logprob: -10.58211612701416
    9. ',' → logprob: -10.70711612701416
    10. ' :
' → logprob: -10.70711612701416

Token 376: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2348090261220932
    2. ' states' → logprob: -2.359808921813965
    3. '           ' → logprob: -2.859808921813965
    4. '   ' → logprob: -3.609808921813965
    5. 'states' → logprob: -3.984808921813965
    6. ':
' → logprob: -5.359808921813965
    7. '
' → logprob: -5.734808921813965
    8. '(states' → logprob: -6.484808921813965
    9. ':' → logprob: -7.234808921813965
    10. ',' → logprob: -7.609808921813965

Token 377: ' #' (ID: 1069)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.19672147929668427
    2. ' states' → logprob: -1.8217214345932007
    3. '           ' → logprob: -5.19672155380249
    4. '       ' → logprob: -5.19672155380249
    5. '   ' → logprob: -5.32172155380249
    6. 'if' → logprob: -8.696721076965332
    7. '(states' → logprob: -8.696721076965332
    8. '
' → logprob: -8.946721076965332
    9. '.states' → logprob: -8.946721076965332
    10. '_states' → logprob: -9.571721076965332

Token 378: ' j' (ID: 441)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.5799281001091003
    2. 'states' → logprob: -0.8299281001091003
    3. '           ' → logprob: -6.829927921295166
    4. '   ' → logprob: -6.954927921295166
    5. 'if' → logprob: -7.079927921295166
    6. '       ' → logprob: -7.704927921295166
    7. ' if' → logprob: -8.204928398132324
    8. '#' → logprob: -9.079928398132324
    9. '
' → logprob: -9.204928398132324
    10. 'state' → logprob: -9.579928398132324

Token 379: 'が' (ID: 6632)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7723438143730164
    2. ' +' → logprob: -1.1473438739776611
    3. ' ==' → logprob: -2.647343873977661
    4. ' +=' → logprob: -2.772343873977661
    5. ' >=' → logprob: -3.397343873977661
    6. ',' → logprob: -4.397343635559082
    7. '+=' → logprob: -4.772343635559082
    8. ':' → logprob: -4.897343635559082
    9. '==' → logprob: -5.147343635559082
    10. ' ' → logprob: -5.272343635559082

Token 380: '1' (ID: 16)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.19745004177093506
    2. '4' → logprob: -2.0724501609802246
    3. '6' → logprob: -3.5724501609802246
    4. ' ' → logprob: -4.322450160980225
    5. 'j' → logprob: -5.822450160980225
    6. ' j' → logprob: -6.572450160980225
    7. 'next' → logprob: -6.697450160980225
    8. ' ahead' → logprob: -6.822450160980225
    9. 'leading' → logprob: -7.197450160980225
    10. '+' → logprob: -7.697450160980225

Token 381: '点' (ID: 8300)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.48082175850868225
    2. ' ' → logprob: -2.6058218479156494
    3. '4' → logprob: -3.3558218479156494
    4. 'つ' → logprob: -3.6058218479156494
    5. '6' → logprob: -3.8558218479156494
    6. '1' → logprob: -3.8558218479156494
    7. '以上' → logprob: -3.9808218479156494
    8. ' ahead' → logprob: -4.10582160949707
    9. '勝' → logprob: -4.10582160949707
    10. '続' → logprob: -4.48082160949707

Token 382: 'リ' (ID: 9007)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.40302926301956177
    2. 'ahead' → logprob: -1.903029203414917
    3. ' ahead' → logprob: -3.153029203414917
    4. 'リ' → logprob: -3.528029203414917
    5. '上' → logprob: -4.028029441833496
    6. ' up' → logprob: -4.403029441833496
    7. 'の' → logprob: -4.528029441833496
    8. 'アップ' → logprob: -4.653029441833496
    9. '先' → logprob: -4.903029441833496
    10. '多' → logprob: -5.028029441833496

Token 383: 'ード' (ID: 31933)
  Prédit: 'ード'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ード' → logprob: -0.0018812811467796564
    2. 'ー' → logprob: -6.501881122589111
    3. '-' → logprob: -8.12688159942627
    4. 'ｰ' → logprob: -11.00188159942627
    5. 'd' → logprob: -11.25188159942627
    6. '1' → logprob: -11.87688159942627
    7. '--' → logprob: -12.25188159942627
    8. '```' → logprob: -12.37688159942627
    9. 'ド' → logprob: -13.00188159942627
    10. '
' → logprob: -13.00188159942627

Token 384: '
' (ID: 198)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8814305663108826
    2. ':' → logprob: -1.0064306259155273
    3. '       ' → logprob: -2.0064306259155273
    4. '   ' → logprob: -2.6314306259155273
    5. ' and' → logprob: -4.756430625915527
    6. ',' → logprob: -6.006430625915527
    7. '           ' → logprob: -7.506430625915527
    8. '):
' → logprob: -8.131430625915527
    9. ' or' → logprob: -8.256430625915527
    10. ' states' → logprob: -8.506430625915527

Token 385: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5454310178756714
    2. ' states' → logprob: -1.5454310178756714
    3. '   ' → logprob: -2.170431137084961
    4. 'states' → logprob: -2.545431137084961
    5. '(states' → logprob: -5.545431137084961
    6. '           ' → logprob: -5.670431137084961
    7. ':
' → logprob: -6.045431137084961
    8. ':' → logprob: -6.295431137084961
    9. ',' → logprob: -7.295431137084961
    10. '.states' → logprob: -7.295431137084961

Token 386: ' #' (ID: 1069)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.08153624832630157
    2. ' states' → logprob: -2.581536293029785
    3. '   ' → logprob: -6.081536293029785
    4. '           ' → logprob: -8.456536293029785
    5. 'if' → logprob: -9.456536293029785
    6. ' if' → logprob: -10.706536293029785
    7. '       ' → logprob: -11.206536293029785
    8. '(states' → logprob: -11.456536293029785
    9. '.states' → logprob: -11.831536293029785
    10. '```' → logprob: -12.831536293029785

Token 387: ' j' (ID: 441)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.20170490443706512
    2. ' states' → logprob: -1.7017048597335815
    3. '   ' → logprob: -8.826704978942871
    4. '           ' → logprob: -9.576704978942871
    5. 'if' → logprob: -10.701704978942871
    6. ' if' → logprob: -11.076704978942871
    7. '```' → logprob: -11.701704978942871
    8. '       ' → logprob: -11.951704978942871
    9. '(states' → logprob: -12.326704978942871
    10. '.states' → logprob: -12.451704978942871

Token 388: 'が' (ID: 6632)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8202933073043823
    2. '.append' → logprob: -1.4452933073043823
    3. ' states' → logprob: -2.445293426513672
    4. ' +=' → logprob: -2.945293426513672
    5. '+=' → logprob: -3.070293426513672
    6. 'states' → logprob: -3.195293426513672
    7. ',' → logprob: -3.320293426513672
    8. '_states' → logprob: -4.445293426513672
    9. 'が' → logprob: -4.695293426513672
    10. ' +' → logprob: -4.945293426513672

Token 389: 'もう' (ID: 114545)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.35712531208992004
    2. '6' → logprob: -1.9821252822875977
    3. ' j' → logprob: -2.2321252822875977
    4. '(j' → logprob: -3.8571252822875977
    5. '5' → logprob: -3.9821252822875977
    6. ' ' → logprob: -5.482125282287598
    7. ' (' → logprob: -5.732125282287598
    8. '4' → logprob: -6.357125282287598
    9. '+' → logprob: -6.482125282287598
    10. 'next' → logprob: -7.107125282287598

Token 390: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009501654654741287
    2. '2' → logprob: -5.0095014572143555
    3. ' ' → logprob: -7.3845014572143555
    4. '6' → logprob: -7.6345014572143555
    5. '１' → logprob: -7.6345014572143555
    6. '一' → logprob: -7.7595014572143555
    7. '+' → logprob: -8.759501457214355
    8. ' one' → logprob: -9.134501457214355
    9. 'one' → logprob: -9.509501457214355
    10. '点' → logprob: -9.884501457214355

Token 391: '点' (ID: 8300)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4511531889438629
    2. '点' → logprob: -2.20115327835083
    3. ' ' → logprob: -2.32615327835083
    4. ' point' → logprob: -3.32615327835083
    5. ' +' → logprob: -3.45115327835083
    6. 'ポイント' → logprob: -3.95115327835083
    7. 'point' → logprob: -4.20115327835083
    8. '   ' → logprob: -4.45115327835083
    9. '1' → logprob: -4.57615327835083
    10. ' 点' → logprob: -5.07615327835083

Token 392: '取' (ID: 11001)
  Prédit: 'を'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'を' → logprob: -0.9140918254852295
    2. '勝' → logprob: -1.5390918254852295
    3. '取' → logprob: -2.4140918254852295
    4. '先' → logprob: -2.4140918254852295
    5. 'リ' → logprob: -3.1640918254852295
    6. 'と' → logprob: -3.5390918254852295
    7. '加' → logprob: -3.7890918254852295
    8. '追加' → logprob: -4.039092063903809
    9. '上' → logprob: -4.414092063903809
    10. '増' → logprob: -4.539092063903809

Token 393: 'れば' (ID: 139693)
  Prédit: 'る'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.5279197096824646
    2. 'れば' → logprob: -1.0279197692871094
    3. 'った' → logprob: -3.1529197692871094
    4. 'って' → logprob: -4.777919769287109
    5. 'り' → logprob: -7.777919769287109
    6. 'っ' → logprob: -7.902919769287109
    7. '得' → logprob: -8.90291976928711
    8. 'て' → logprob: -9.27791976928711
    9. 'た' → logprob: -9.90291976928711
    10. '```' → logprob: -9.90291976928711

Token 394: '終了' (ID: 166212)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.5903969407081604
    2. ' states' → logprob: -0.8403969407081604
    3. '(states' → logprob: -4.965396881103516
    4. ' (' → logprob: -5.965396881103516
    5. '(j' → logprob: -6.215396881103516
    6. 'return' → logprob: -6.715396881103516
    7. '           ' → logprob: -7.215396881103516
    8. ' return' → logprob: -7.465396881103516
    9. '               ' → logprob: -9.340396881103516
    10. '(' → logprob: -9.840396881103516

Token 395: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.039832331240177155
    2. ' states' → logprob: -4.03983211517334
    3. 'states' → logprob: -4.16483211517334
    4. '(states' → logprob: -5.66483211517334
    5. '       ' → logprob: -6.91483211517334
    6. ',' → logprob: -7.03983211517334
    7. '               ' → logprob: -8.03983211517334
    8. '
' → logprob: -9.66483211517334
    9. '   ' → logprob: -10.03983211517334
    10. ' (' → logprob: -10.53983211517334

Token 396: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11482946574687958
    2. 'states' → logprob: -2.8648295402526855
    3. ' states' → logprob: -3.4898295402526855
    4. '(states' → logprob: -3.9898295402526855
    5. '       ' → logprob: -7.3648295402526855
    6. ',' → logprob: -7.4898295402526855
    7. '   ' → logprob: -7.4898295402526855
    8. '.states' → logprob: -8.614829063415527
    9. '               ' → logprob: -8.739829063415527
    10. 'tokens' → logprob: -9.239829063415527

Token 397: ' if' (ID: 538)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.5279992818832397
    2. ' states' → logprob: -1.0279992818832397
    3. 'if' (adapté à ' if') → logprob: -3.7779994010925293
    4. ' if' → logprob: -4.152999401092529
    5. '           ' → logprob: -4.402999401092529
    6. '   ' → logprob: -7.652999401092529
    7. '               ' → logprob: -7.777999401092529
    8. '       ' → logprob: -8.527998924255371
    9. 'return' → logprob: -8.527998924255371
    10. ' return' → logprob: -8.777998924255371

Token 398: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.02314554899930954
    2. 'is' → logprob: -4.39814567565918
    3. 'not' → logprob: -5.39814567565918
    4. ' j' → logprob: -5.52314567565918
    5. '(j' → logprob: -7.39814567565918
    6. 'diff' → logprob: -7.52314567565918
    7. 'y' → logprob: -8.52314567565918
    8. ' is' → logprob: -8.52314567565918
    9. 'True' → logprob: -8.89814567565918
    10. ' not' → logprob: -9.27314567565918

Token 399: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15350522100925446
    2. ' +' → logprob: -2.153505325317383
    3. ' ==' → logprob: -4.153505325317383
    4. '==' → logprob: -4.653505325317383
    5. '>=' → logprob: -7.903505325317383
    6. ' >=' → logprob: -8.028505325317383
    7. '＋' → logprob: -8.903505325317383
    8. ' ' → logprob: -9.903505325317383
    9. '+=' → logprob: -10.653505325317383
    10. '   ' → logprob: -10.778505325317383

Token 400: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1994775377388578e-05
    2. ' ' → logprob: -11.375012397766113
    3. '   ' → logprob: -16.000011444091797
    4. '2' → logprob: -16.625011444091797
    5. '
' → logprob: -16.750011444091797
    6. '<|end|>' → logprob: -16.750011444091797
    7. '  ' → logprob: -17.250011444091797
    8. '<|end|>' → logprob: -17.625011444091797
    9. '```' → logprob: -17.875011444091797
    10. 'from' → logprob: -18.000011444091797

Token 401: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6431575417518616
    2. ' ==' → logprob: -1.3931574821472168
    3. ' >=' → logprob: -2.393157482147217
    4. '>=' → logprob: -2.518157482147217
    5. '<=' → logprob: -3.893157482147217
    6. ' <=' → logprob: -4.018157482147217
    7. ',' → logprob: -4.268157482147217
    8. ' ' → logprob: -7.643157482147217
    9. ')' → logprob: -7.768157482147217
    10. '>' → logprob: -8.268157958984375

Token 402: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -5.2524021157296374e-05
    2. ' ' → logprob: -9.875052452087402
    3. '5' → logprob: -14.875052452087402
    4. '7' → logprob: -15.500052452087402
    5. '  ' → logprob: -16.00005340576172
    6. 'y' → logprob: -16.50005340576172
    7. '   ' → logprob: -16.75005340576172
    8. 'j' → logprob: -16.87505340576172
    9. '```' → logprob: -19.37505340576172
    10. ' y' → logprob: -19.62505340576172

Token 403: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.00013321757433004677
    2. ' ' → logprob: -9.000133514404297
    3. '7' → logprob: -12.000133514404297
    4. 'j' → logprob: -13.000133514404297
    5. '5' → logprob: -14.625133514404297
    6. 'y' → logprob: -14.875133514404297
    7. '  ' → logprob: -15.750133514404297
    8. '   ' → logprob: -15.875133514404297
    9. '６' → logprob: -16.375133514404297
    10. 'win' → logprob: -17.250133514404297

Token 404: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15438753366470337
    2. ' and' → logprob: -2.0293874740600586
    3. ':
' → logprob: -4.654387474060059
    4. '):' → logprob: -7.779387474060059
    5. 'and' → logprob: -7.779387474060059
    6. ':return' → logprob: -7.904387474060059
    7. ',' → logprob: -8.654387474060059
    8. ' or' → logprob: -8.654387474060059
    9. ')' → logprob: -8.654387474060059
    10. '           ' → logprob: -9.154387474060059

Token 405: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.02759183570742607
    2. ' y' → logprob: -3.6525919437408447
    3. '(y' → logprob: -6.902591705322266
    4. ' (' → logprob: -8.902591705322266
    5. 'j' → logprob: -10.652591705322266
    6. '4' → logprob: -10.777591705322266
    7. '(' → logprob: -10.902591705322266
    8. '6' → logprob: -11.277591705322266
    9. '   ' → logprob: -11.277591705322266
    10. 'abs' → logprob: -11.277591705322266

Token 406: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.144003763794899
    2. '<=' → logprob: -2.2690038681030273
    3. ' ==' → logprob: -4.519003868103027
    4. '<|end|>' → logprob: -4.769003868103027
    5. ' <=' → logprob: -4.894003868103027
    6. '>=' → logprob: -6.394003868103027
    7. '=' → logprob: -7.519003868103027
    8. '<' → logprob: -7.519003868103027
    9. ' ' → logprob: -8.269003868103027
    10. '<|end|>' → logprob: -8.519003868103027

Token 407: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.652451464906335e-05
    2. ' ' → logprob: -11.125016212463379
    3. '5' → logprob: -13.500016212463379
    4. '۴' → logprob: -16.250017166137695
    5. '   ' → logprob: -16.375017166137695
    6. '４' → logprob: -16.375017166137695
    7. '' → logprob: -17.125017166137695
    8. '৪' → logprob: -17.250017166137695
    9. '४' → logprob: -17.625017166137695
    10. '  ' → logprob: -18.125017166137695

Token 408: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.9623810658231378e-05
    2. '5' → logprob: -11.500020027160645
    3. ' ' → logprob: -11.625020027160645
    4. '４' → logprob: -15.125020027160645
    5. '۴' → logprob: -16.125019073486328
    6. '४' → logprob: -16.750019073486328
    7. '৪' → logprob: -16.750019073486328
    8. '' → logprob: -17.250019073486328
    9. '   ' → logprob: -17.750019073486328
    10. '٤' → logprob: -18.250019073486328

Token 409: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.033964816480875015
    2. ':
' → logprob: -3.4089648723602295
    3. '               ' → logprob: -9.533965110778809
    4. '       ' → logprob: -9.533965110778809
    5. ':return' → logprob: -9.533965110778809
    6. '           ' → logprob: -10.033965110778809
    7. ' and' → logprob: -10.783965110778809
    8. '):' → logprob: -11.533965110778809
    9. ' :' → logprob: -11.908965110778809
    10. ':
' → logprob: -12.783965110778809

Token 410: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.056097548454999924
    2. ':' → logprob: -3.1810975074768066
    3. ':
' → logprob: -4.556097507476807
    4. '           ' → logprob: -6.306097507476807
    5. ':return' → logprob: -8.056097984313965
    6. '       ' → logprob: -9.056097984313965
    7. ',' → logprob: -9.556097984313965
    8. ' :' → logprob: -9.806097984313965
    9. ' :
' → logprob: -10.681097984313965
    10. '):
' → logprob: -11.181097984313965

Token 411: ' states' (ID: 9407)
  Prédit: ' states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.17299355566501617
    2. '               ' → logprob: -2.1729936599731445
    3. 'states' (adapté à ' states') → logprob: -3.1729936599731445
    4. ' return' → logprob: -6.2979936599731445
    5. '           ' → logprob: -7.0479936599731445
    6. '(states' → logprob: -9.047993659973145
    7. 'return' → logprob: -9.297993659973145
    8. '.states' → logprob: -9.547993659973145
    9. '   ' → logprob: -9.922993659973145
    10. '_states' → logprob: -10.047993659973145

Token 412: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.685467764735222e-05
    2. '.' → logprob: -9.375086784362793
    3. ' .' → logprob: -14.000086784362793
    4. '           ' → logprob: -14.625086784362793
    5. '.extend' → logprob: -15.125086784362793
    6. 'append' → logprob: -16.00008773803711
    7. '.add' → logprob: -16.00008773803711
    8. '.app' → logprob: -16.25008773803711
    9. '               ' → logprob: -17.00008773803711
    10. '.ap' → logprob: -17.12508773803711

Token 413: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00018387178715784103
    2. '(' → logprob: -8.750184059143066
    3. '(j' → logprob: -11.125184059143066
    4. ' ((' → logprob: -11.500184059143066
    5. ' (' → logprob: -15.000184059143066
    6. '(('' → logprob: -16.25018310546875
    7. ' ' → logprob: -16.37518310546875
    8. '(((' → logprob: -18.00018310546875
    9. '   ' → logprob: -18.25018310546875
    10. '  ' → logprob: -18.62518310546875

Token 414: 'j' (ID: 73)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.632780134677887
    2. 'j' → logprob: -0.757780134677887
    3. '5' → logprob: -9.757780075073242
    4. ' j' → logprob: -10.257780075073242
    5. ' ' → logprob: -10.507780075073242
    6. '7' → logprob: -10.757780075073242
    7. '(j' → logprob: -11.132780075073242
    8. '   ' → logprob: -12.132780075073242
    9. '	j' → logprob: -12.257780075073242
    10. '(' → logprob: -13.007780075073242

Token 415: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03810311481356621
    2. ' +' → logprob: -3.2881031036376953
    3. ',' → logprob: -9.788103103637695
    4. '＋' → logprob: -12.663103103637695
    5. '1' → logprob: -14.538103103637695
    6. '+j' → logprob: -14.913103103637695
    7. ' ,' → logprob: -15.038103103637695
    8. ' ' → logprob: -15.788103103637695
    9. ')+' → logprob: -15.788103103637695
    10. '()+' → logprob: -15.913103103637695

Token 416: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8444881536415778e-05
    2. '2' → logprob: -10.625028610229492
    3. ' ' → logprob: -12.875028610229492
    4. '6' → logprob: -14.437528610229492
    5. '+' → logprob: -15.687528610229492
    6. '   ' → logprob: -16.062528610229492
    7. '```' → logprob: -16.125028610229492
    8. '１' → logprob: -16.187528610229492
    9. '0' → logprob: -16.562528610229492
    10. '
' → logprob: -16.750028610229492

Token 417: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021057340200059116
    2. ' ,' → logprob: -9.000210762023926
    3. ',y' → logprob: -9.375210762023926
    4. 'y' → logprob: -13.500210762023926
    5. ' y' → logprob: -14.250210762023926
    6. '   ' → logprob: -17.25020980834961
    7. ',
' → logprob: -17.75020980834961
    8. '‌,' → logprob: -18.00020980834961
    9. ' ' → logprob: -18.25020980834961
    10. '),' → logprob: -18.37520980834961

Token 418: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12693209946155548
    2. ' y' → logprob: -2.126932144165039
    3. '   ' → logprob: -13.251932144165039
    4. '	y' → logprob: -13.876932144165039
    5. ' ' → logprob: -14.376932144165039
    6. '  ' → logprob: -15.251932144165039
    7. '    ' → logprob: -15.376932144165039
    8. '       ' → logprob: -16.75193214416504
    9. ',y' → logprob: -16.75193214416504
    10. '4' → logprob: -17.00193214416504

Token 419: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004722603189293295
    2. ' ,' → logprob: -7.750472068786621
    3. ','' → logprob: -10.625472068786621
    4. '   ' → logprob: -13.000472068786621
    5. ''' → logprob: -13.250472068786621
    6. ''s' → logprob: -13.250472068786621
    7. '),' → logprob: -13.500472068786621
    8. ')' → logprob: -13.500472068786621
    9. '))' → logprob: -13.625472068786621
    10. '',' → logprob: -13.625472068786621

Token 420: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.02078804187476635
    2. ' '' → logprob: -3.8957879543304443
    3. ''' → logprob: -9.145788192749023
    4. 'A' → logprob: -9.395788192749023
    5. '"A' → logprob: -10.895788192749023
    6. ' A' → logprob: -11.395788192749023
    7. ''C' → logprob: -11.520788192749023
    8. ' ' → logprob: -12.395788192749023
    9. ''S' → logprob: -13.020788192749023
    10. '’A' → logprob: -13.145788192749023

Token 421: 'A' (ID: 32)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.28169482946395874
    2. 'A' → logprob: -1.4066948890686035
    3. ''' → logprob: -7.9066948890686035
    4. '"A' → logprob: -9.656694412231445
    5. ' A' → logprob: -10.656694412231445
    6. 'B' → logprob: -10.781694412231445
    7. ' '' → logprob: -11.031694412231445
    8. 'j' → logprob: -11.156694412231445
    9. 'J' → logprob: -12.031694412231445
    10. '	A' → logprob: -12.531694412231445

Token 422: ''))
' (ID: 15277)
  Prédit: ''))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.025745457038283348
    2. ''))
' → logprob: -4.025745391845703
    3. '))' → logprob: -4.900745391845703
    4. ')' → logprob: -9.775745391845703
    5. '))
' → logprob: -10.150745391845703
    6. ''))

' → logprob: -11.400745391845703
    7. ''))
' → logprob: -12.025745391845703
    8. ''' → logprob: -12.275745391845703
    9. '')' → logprob: -12.650745391845703
    10. '"))' → logprob: -13.400745391845703

Token 423: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030265048146247864
    2. '           ' → logprob: -4.155264854431152
    3. ')
' → logprob: -4.405264854431152
    4. '       ' → logprob: -6.405264854431152
    5. '               ' → logprob: -9.280264854431152
    6. '   ' → logprob: -9.405264854431152
    7. ' )' → logprob: -10.405264854431152
    8. '<|end|>' → logprob: -10.780264854431152
    9. ')return' → logprob: -10.905264854431152
    10. '<|end|>' → logprob: -12.780264854431152

Token 424: ' else' (ID: 1203)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31648606061935425
    2. ')' → logprob: -1.941486120223999
    3. ' 
' → logprob: -3.566486120223999
    4. '           ' → logprob: -4.06648588180542
    5. '       ' → logprob: -4.31648588180542
    6. ')
' → logprob: -4.31648588180542
    7. ' ' → logprob: -4.44148588180542
    8. '<|end|>' → logprob: -4.44148588180542
    9. '   ' → logprob: -5.06648588180542
    10. ' return' → logprob: -5.44148588180542

Token 425: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16801834106445312
    2. ' states' → logprob: -2.668018341064453
    3. '(states' → logprob: -3.168018341064453
    4. ':' → logprob: -4.543018341064453
    5. ' if' → logprob: -4.543018341064453
    6. '           ' → logprob: -4.543018341064453
    7. '               ' → logprob: -5.168018341064453
    8. ' :
' → logprob: -6.543018341064453
    9. 'states' → logprob: -6.793018341064453
    10. '   ' → logprob: -7.043018341064453

Token 426: '               ' (ID: 506)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.10121813416481018
    2. '               ' → logprob: -2.8512182235717773
    3. '           ' → logprob: -3.9762182235717773
    4. '(states' → logprob: -4.351218223571777
    5. 'states' → logprob: -5.476218223571777
    6. '   ' → logprob: -6.601218223571777
    7. ' if' → logprob: -7.351218223571777
    8. '_states' → logprob: -8.351218223571777
    9. '.states' → logprob: -9.726218223571777
    10. ' ' → logprob: -9.726218223571777

Token 427: ' states' (ID: 9407)
  Prédit: ' states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.09041876345872879
    2. 'states' (adapté à ' states') → logprob: -2.465418815612793
    3. '(states' → logprob: -6.715418815612793
    4. '   ' → logprob: -8.465418815612793
    5. ' (' → logprob: -11.465418815612793
    6. '_states' → logprob: -11.840418815612793
    7. '               ' → logprob: -11.840418815612793
    8. ' if' → logprob: -12.090418815612793
    9. '.states' → logprob: -12.090418815612793
    10. '           ' → logprob: -12.840418815612793

Token 428: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.180258191714529e-06
    2. '.' → logprob: -12.000008583068848
    3. 'append' → logprob: -13.500008583068848
    4. '.extend' → logprob: -14.875008583068848
    5. ' .' → logprob: -15.625008583068848
    6. '           ' → logprob: -17.87500762939453
    7. '.
' → logprob: -18.62500762939453
    8. '.app' → logprob: -18.62500762939453
    9. '.Append' → logprob: -18.75000762939453
    10. '
' → logprob: -20.00000762939453

Token 429: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -2.2200749754119897e-06
    2. ' ((' → logprob: -13.875001907348633
    3. '(' → logprob: -14.125001907348633
    4. '(j' → logprob: -14.750001907348633
    5. ' ' → logprob: -16.875001907348633
    6. '   ' → logprob: -19.250001907348633
    7. ' (' → logprob: -19.250001907348633
    8. '  ' → logprob: -19.375001907348633
    9. '(
' → logprob: -19.875001907348633
    10. '[(' → logprob: -20.125001907348633

Token 430: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.030566381290555
    2. '(j' → logprob: -3.655566453933716
    3. ' j' → logprob: -5.655566215515137
    4. ' (' → logprob: -7.280566215515137
    5. '   ' → logprob: -11.030566215515137
    6. '	j' → logprob: -11.405566215515137
    7. ' ' → logprob: -11.530566215515137
    8. '[j' → logprob: -11.530566215515137
    9. '(' → logprob: -12.030566215515137
    10. ',j' → logprob: -12.655566215515137

Token 431: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0028534941375255585
    2. ' +' → logprob: -5.8778533935546875
    3. ',' → logprob: -10.002853393554688
    4. ' ,' → logprob: -13.377853393554688
    5. '   ' → logprob: -15.127853393554688
    6. ' ' → logprob: -15.377853393554688
    7. '-' → logprob: -15.627853393554688
    8. '＋' → logprob: -15.627853393554688
    9. '  ' → logprob: -15.877853393554688
    10. '+j' → logprob: -16.002853393554688

Token 432: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002682496269699186
    2. ' ' → logprob: -8.25026798248291
    3. '0' → logprob: -12.62526798248291
    4. '   ' → logprob: -13.50026798248291
    5. '2' → logprob: -14.25026798248291
    6. '	' → logprob: -15.31276798248291
    7. '`' → logprob: -15.31276798248291
    8. '  ' → logprob: -15.43776798248291
    9. '```' → logprob: -16.062768936157227
    10. '+' → logprob: -16.375268936157227

Token 433: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.126521035796031e-05
    2. ' ,' → logprob: -9.750091552734375
    3. ',y' → logprob: -10.375091552734375
    4. ' y' → logprob: -14.500091552734375
    5. ')' → logprob: -15.000091552734375
    6. ',j' → logprob: -15.000091552734375
    7. 'y' → logprob: -15.125091552734375
    8. '(y' → logprob: -16.625091552734375
    9. ' ' → logprob: -17.250091552734375
    10. '‌,' → logprob: -17.625091552734375

Token 434: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5231410264968872
    2. 'y' → logprob: -0.8981410264968872
    3. '	y' → logprob: -12.273140907287598
    4. ' ' → logprob: -12.773140907287598
    5. '   ' → logprob: -12.898140907287598
    6. ')y' → logprob: -13.273140907287598
    7. ')' → logprob: -13.398140907287598
    8. ',y' → logprob: -14.210640907287598
    9. '    ' → logprob: -14.335640907287598
    10. ',' → logprob: -14.460640907287598

Token 435: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007333897519856691
    2. ' ,' → logprob: -7.250733375549316
    3. ')' → logprob: -11.750733375549316
    4. ','' → logprob: -12.125733375549316
    5. '',' → logprob: -13.375733375549316
    6. '),' → logprob: -13.625733375549316
    7. '   ' → logprob: -13.750733375549316
    8. '           ' → logprob: -13.875733375549316
    9. ',
' → logprob: -13.875733375549316
    10. '))' → logprob: -14.500733375549316

Token 436: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.01704917848110199
    2. ' '' → logprob: -4.517049312591553
    3. ''' → logprob: -5.142049312591553
    4. ''C' → logprob: -10.517048835754395
    5. 'None' → logprob: -10.642048835754395
    6. ' ' → logprob: -10.892048835754395
    7. '''' → logprob: -10.892048835754395
    8. '"A' → logprob: -11.267048835754395
    9. 'A' → logprob: -11.392048835754395
    10. '’A' → logprob: -12.517048835754395

Token 437: 'A' (ID: 32)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.2573244571685791
    2. 'A' → logprob: -1.507324457168579
    3. ''' → logprob: -5.38232421875
    4. 'B' → logprob: -7.63232421875
    5. ' '' → logprob: -9.38232421875
    6. '"A' → logprob: -10.00732421875
    7. '')' → logprob: -10.63232421875
    8. ' A' → logprob: -10.75732421875
    9. ''a' → logprob: -10.88232421875
    10. 'None' → logprob: -10.88232421875

Token 438: ''))
' (ID: 15277)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.023555124178528786
    2. '))
' → logprob: -4.148555278778076
    3. ')' → logprob: -5.148555278778076
    4. ' ))' → logprob: -7.148555278778076
    5. ''))' → logprob: -7.273555278778076
    6. ''))
' → logprob: -9.898554801940918
    7. ' ))
' → logprob: -10.023554801940918
    8. '   ' → logprob: -10.773554801940918
    9. ' )' → logprob: -11.148554801940918
    10. '))
' → logprob: -11.398554801940918

Token 439: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06450286507606506
    2. ')
' → logprob: -3.3145029544830322
    3. '           ' → logprob: -4.189502716064453
    4. '<|end|>' → logprob: -5.439502716064453
    5. '   ' → logprob: -5.814502716064453
    6. '       ' → logprob: -5.939502716064453
    7. '
' → logprob: -8.189502716064453
    8. '<|end|>' → logprob: -8.564502716064453
    9. ' states' → logprob: -8.689502716064453
    10. ' ' → logprob: -10.189502716064453

Token 440: ' states' (ID: 9407)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' (adapté à ' states') → logprob: -0.003194589400663972
    2. ' states' → logprob: -5.753194808959961
    3. '   ' → logprob: -12.253194808959961
    4. '(states' → logprob: -12.503194808959961
    5. '               ' → logprob: -12.628194808959961
    6. '.states' → logprob: -13.628194808959961
    7. '           ' → logprob: -13.878194808959961
    8. 'state' → logprob: -14.128194808959961
    9. 'if' → logprob: -14.503194808959961
    10. 'return' → logprob: -14.628194808959961

Token 441: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005552975926548243
    2. '.' → logprob: -7.500555515289307
    3. 'append' → logprob: -13.375555038452148
    4. ' .' → logprob: -14.375555038452148
    5. '.app' → logprob: -15.875555038452148
    6. '.Append' → logprob: -17.62555503845215
    7. '.extend' → logprob: -17.87555503845215
    8. ' append' → logprob: -18.00055503845215
    9. '           ' → logprob: -18.25055503845215
    10. '．' → logprob: -18.62555503845215

Token 442: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -9.996708104154095e-05
    2. '(j' → logprob: -9.250100135803223
    3. '(' → logprob: -12.500100135803223
    4. ' ((' → logprob: -17.000099182128906
    5. '(
' → logprob: -17.125099182128906
    6. '   ' → logprob: -18.625099182128906
    7. '[(' → logprob: -19.000099182128906
    8. ' ' → logprob: -19.125099182128906
    9. '```' → logprob: -19.375099182128906
    10. '(()' → logprob: -20.375099182128906

Token 443: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.5577775128767826e-06
    2. ' j' → logprob: -12.250005722045898
    3. '(j' → logprob: -15.000005722045898
    4. '	j' → logprob: -15.875005722045898
    5. '   ' → logprob: -16.2500057220459
    6. ',j' → logprob: -16.7500057220459
    7. ',' → logprob: -17.8750057220459
    8. ' ' → logprob: -18.2500057220459
    9. ')' → logprob: -18.8750057220459
    10. '```' → logprob: -18.8750057220459

Token 444: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001576506474521011
    2. ' ,' → logprob: -9.125157356262207
    3. '-' → logprob: -10.125157356262207
    4. '+' → logprob: -12.375157356262207
    5. ',y' → logprob: -13.125157356262207
    6. ' ' → logprob: -14.000157356262207
    7. '   ' → logprob: -14.500157356262207
    8. '```' → logprob: -14.625157356262207
    9. ' -' → logprob: -16.000158309936523
    10. '	' → logprob: -16.250158309936523

Token 445: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.008615635335445404
    2. ' y' → logprob: -4.758615493774414
    3. '   ' → logprob: -14.133615493774414
    4. '(y' → logprob: -15.883615493774414
    5. '	y' → logprob: -16.258615493774414
    6. ' ' → logprob: -16.383615493774414
    7. '    ' → logprob: -17.508615493774414
    8. 'x' → logprob: -17.758615493774414
    9. '+' → logprob: -18.383615493774414
    10. ''y' → logprob: -18.758615493774414

Token 446: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.860340752406046e-05
    2. ' +' → logprob: -9.7500581741333
    3. '1' → logprob: -16.125059127807617
    4. '＋' → logprob: -16.875059127807617
    5. ',' → logprob: -17.125059127807617
    6. '+
' → logprob: -17.625059127807617
    7. '   ' → logprob: -18.125059127807617
    8. ')+' → logprob: -18.500059127807617
    9. '+,' → logprob: -19.125059127807617
    10. '```' → logprob: -19.375059127807617

Token 447: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.500003814697266
    3. '+' → logprob: -14.875003814697266
    4. '
' → logprob: -17.625003814697266
    5. '１' → logprob: -17.625003814697266
    6. '```' → logprob: -17.812503814697266
    7. '[' → logprob: -18.000003814697266
    8. '   ' → logprob: -18.000003814697266
    9. '<|end|>' → logprob: -18.250003814697266
    10. ')' → logprob: -18.437503814697266

Token 448: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003442832676228136
    2. ' ,' → logprob: -8.125344276428223
    3. '+' → logprob: -10.125344276428223
    4. ','' → logprob: -12.875344276428223
    5. '(' → logprob: -13.000344276428223
    6. '',' → logprob: -14.500344276428223
    7. '   ' → logprob: -14.500344276428223
    8. ''' → logprob: -14.625344276428223
    9. ' (' → logprob: -14.625344276428223
    10. ' +' → logprob: -15.375344276428223

Token 449: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0020057226065546274
    2. ' '' → logprob: -6.252005577087402
    3. 'B' → logprob: -10.002005577087402
    4. ' ' → logprob: -11.752005577087402
    5. '   ' → logprob: -12.377005577087402
    6. ' B' → logprob: -12.377005577087402
    7. '1' → logprob: -12.627005577087402
    8. ''y' → logprob: -12.877005577087402
    9. '"B' → logprob: -13.002005577087402
    10. '  ' → logprob: -13.502005577087402

Token 450: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -5.5027299822540954e-05
    2. ''' → logprob: -10.375055313110352
    3. ' B' → logprob: -10.875055313110352
    4. 'y' → logprob: -12.625055313110352
    5. '"B' → logprob: -14.250055313110352
    6. '1' → logprob: -15.500055313110352
    7. ')' → logprob: -16.00005531311035
    8. '')' → logprob: -16.50005531311035
    9. ''b' → logprob: -17.00005531311035
    10. '`' → logprob: -17.00005531311035

Token 451: ''))
' (ID: 15277)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10386087000370026
    2. ''))' → logprob: -2.353860855102539
    3. ')' → logprob: -6.478860855102539
    4. '))
' → logprob: -6.728860855102539
    5. ''))
' → logprob: -7.478860855102539
    6. ' ))' → logprob: -8.853860855102539
    7. '"))' → logprob: -9.978860855102539
    8. '           ' → logprob: -9.978860855102539
    9. '   ' → logprob: -10.228860855102539
    10. '               ' → logprob: -10.228860855102539

Token 452: '       ' (ID: 309)
  Prédit: '	return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	return' → logprob: -0.14606522023677826
    2. '   ' → logprob: -2.0210652351379395
    3. '<|end|>' → logprob: -6.3960652351379395
    4. 'return' → logprob: -7.7710652351379395
    5. ' return' → logprob: -8.396064758300781
    6. '       ' → logprob: -8.396064758300781
    7. ')' → logprob: -8.521064758300781
    8. '<|end|>' → logprob: -8.771064758300781
    9. '
' → logprob: -9.646064758300781
    10. '	if' → logprob: -10.146064758300781

Token 453: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14890830218791962
    2. '	return' → logprob: -2.7739083766937256
    3. '       ' → logprob: -3.1489083766937256
    4. '<|end|>' → logprob: -4.6489081382751465
    5. '	else' → logprob: -4.7739081382751465
    6. '	elif' → logprob: -5.3989081382751465
    7. 'else' → logprob: -6.2739081382751465
    8. ' else' → logprob: -6.6489081382751465
    9. ')' → logprob: -6.7739081382751465
    10. 'elif' (adapté à ' elif') → logprob: -6.7739081382751465

Token 454: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.05548524856567383
    2. 'diff' → logprob: -2.930485248565674
    3. '(diff' → logprob: -8.180484771728516
    4. ' y' → logprob: -8.680484771728516
    5. '	diff' → logprob: -9.555484771728516
    6. 'y' → logprob: -10.805484771728516
    7. ' (' → logprob: -11.180484771728516
    8. ' j' → logprob: -11.305484771728516
    9. '   ' → logprob: -11.680484771728516
    10. 'j' → logprob: -11.930484771728516

Token 455: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.055003244429826736
    2. '==' → logprob: -2.9300031661987305
    3. '==-' → logprob: -9.05500316619873
    4. ' ' → logprob: -12.80500316619873
    5. '=' → logprob: -15.05500316619873
    6. '   ' → logprob: -15.30500316619873
    7. ' <' → logprob: -16.555004119873047
    8. '	' → logprob: -16.555004119873047
    9. ')==' → logprob: -16.680004119873047
    10. ' ===' → logprob: -16.680004119873047

Token 456: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.009777575731277466
    2. ' -' → logprob: -4.634777545928955
    3. '0' → logprob: -10.884778022766113
    4. ' ' → logprob: -13.384778022766113
    5. '1' → logprob: -14.134778022766113
    6. '−' → logprob: -14.634778022766113
    7. '   ' → logprob: -17.072277069091797
    8. '
' → logprob: -17.072277069091797
    9. '–' → logprob: -17.572277069091797
    10. '2' → logprob: -17.884777069091797

Token 457: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.000000953674316
    3. '2' → logprob: -16.250001907348633
    4. '<|end|>' → logprob: -16.250001907348633
    5. '１' → logprob: -16.500001907348633
    6. '<|end|>' → logprob: -19.000001907348633
    7. '۱' → logprob: -19.062501907348633
    8. '0' → logprob: -19.250001907348633
    9. '```' → logprob: -19.625001907348633
    10. '१' → logprob: -19.812501907348633

Token 458: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01271094474941492
    2. ':
' → logprob: -4.387711048126221
    3. '   ' → logprob: -8.887710571289062
    4. ' :' → logprob: -10.262710571289062
    5. '       ' → logprob: -10.887710571289062
    6. '           ' → logprob: -12.887710571289062
    7. ',' → logprob: -13.137710571289062
    8. ' :
' → logprob: -13.262710571289062
    9. ' ' → logprob: -13.512710571289062
    10. '  ' → logprob: -14.762710571289062

Token 459: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8328391313552856
    2. ' ' → logprob: -1.0828391313552856
    3. ' states' → logprob: -1.5828391313552856
    4. ' #' → logprob: -5.207839012145996
    5. '       ' → logprob: -5.582839012145996
    6. '           ' → logprob: -5.582839012145996
    7. '(states' → logprob: -5.957839012145996
    8. '#' → logprob: -6.082839012145996
    9. ' ' → logprob: -6.582839012145996
    10. 'states' → logprob: -7.582839012145996

Token 460: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23127134144306183
    2. '#' → logprob: -1.9812713861465454
    3. ' states' → logprob: -3.481271266937256
    4. ' ' → logprob: -3.856271266937256
    5. 'states' → logprob: -4.981271266937256
    6. '           ' → logprob: -5.606271266937256
    7. ' #' → logprob: -5.731271266937256
    8. '       ' → logprob: -6.356271266937256
    9. '(states' → logprob: -7.356271266937256
    10. '
' → logprob: -8.481271743774414

Token 461: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.433866947889328
    2. 'y' → logprob: -1.9338669776916504
    3. ' states' → logprob: -2.1838669776916504
    4. ' j' → logprob: -3.0588669776916504
    5. 'j' → logprob: -3.5588669776916504
    6. 'states' → logprob: -4.30886697769165
    7. '   ' → logprob: -5.80886697769165
    8. '(j' → logprob: -7.18386697769165
    9. '(y' → logprob: -7.18386697769165
    10. '(states' → logprob: -7.55886697769165

Token 462: 'が' (ID: 6632)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7128092050552368
    2. ' +' → logprob: -0.9628092050552368
    3. ' ==' → logprob: -2.5878090858459473
    4. ':' → logprob: -3.9628090858459473
    5. '==' → logprob: -3.9628090858459473
    6. ')' → logprob: -4.837809085845947
    7. ',' → logprob: -6.212809085845947
    8. '):' → logprob: -6.337809085845947
    9. ' ' → logprob: -7.087809085845947
    10. '   ' → logprob: -7.837809085845947

Token 463: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0499768927693367
    2. ' ' → logprob: -3.4249768257141113
    3. '-' → logprob: -4.299976825714111
    4. ' -' → logprob: -6.424976825714111
    5. 'y' → logprob: -7.549976825714111
    6. ' y' → logprob: -7.674976825714111
    7. '+' → logprob: -12.54997730255127
    8. '(' → logprob: -13.04997730255127
    9. '１' → logprob: -13.42497730255127
    10. '(y' → logprob: -13.73747730255127

Token 464: '点' (ID: 8300)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011311526410281658
    2. ' +' → logprob: -5.5113115310668945
    3. '点' → logprob: -5.6363115310668945
    4. 'point' → logprob: -6.0113115310668945
    5. ' point' → logprob: -7.8863115310668945
    6. '1' → logprob: -8.261311531066895
    7. ' ' → logprob: -8.886311531066895
    8. 'score' → logprob: -9.386311531066895
    9. 'points' → logprob: -9.511311531066895
    10. ',' → logprob: -10.261311531066895

Token 465: 'リ' (ID: 9007)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.24356548488140106
    2. ' +' → logprob: -1.6185654401779175
    3. 'lead' → logprob: -4.868565559387207
    4. 'リ' → logprob: -5.368565559387207
    5. ' lead' → logprob: -5.868565559387207
    6. '>' → logprob: -6.868565559387207
    7. '1' → logprob: -8.243565559387207
    8. ' ' → logprob: -8.368565559387207
    9. '<' → logprob: -8.493565559387207
    10. ' >' → logprob: -8.868565559387207

Token 466: 'ード' (ID: 31933)
  Prédit: 'ード'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ード' → logprob: -6.384836888173595e-05
    2. 'ー' → logprob: -10.2500638961792
    3. '-' → logprob: -11.6250638961792
    4. '1' → logprob: -12.3750638961792
    5. '```' → logprob: -12.3750638961792
    6. 'ead' → logprob: -12.8750638961792
    7. 'ド' → logprob: -13.5000638961792
    8. 'ート' → logprob: -13.7500638961792
    9. 'ｰ' → logprob: -13.7500638961792
    10. 'Lead' → logprob: -14.1250638961792

Token 467: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2570528984069824
    2. '   ' → logprob: -2.1320528984069824
    3. ':
' → logprob: -3.1320528984069824
    4. '       ' → logprob: -3.2570528984069824
    5. ':' → logprob: -4.007052898406982
    6. ' states' → logprob: -5.257052898406982
    7. '               ' → logprob: -7.007052898406982
    8. '):
' → logprob: -7.382052898406982
    9. ',' → logprob: -8.38205337524414
    10. '          ' → logprob: -8.75705337524414

Token 468: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01473876740783453
    2. '       ' → logprob: -5.0147385597229
    3. ' states' → logprob: -5.2647385597229
    4. '               ' → logprob: -6.8897385597229
    5. '   ' → logprob: -7.1397385597229
    6. 'states' → logprob: -7.2647385597229
    7. '(states' → logprob: -8.889739036560059
    8. '{
' → logprob: -9.639739036560059
    9. ':
' → logprob: -10.389739036560059
    10. '```' → logprob: -11.639739036560059

Token 469: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39692896604537964
    2. 'states' → logprob: -1.5219290256500244
    3. ' states' → logprob: -2.3969290256500244
    4. '       ' → logprob: -4.771928787231445
    5. '               ' → logprob: -4.771928787231445
    6. '   ' → logprob: -7.146928787231445
    7. '(states' → logprob: -8.521928787231445
    8. 'if' (adapté à ' if') → logprob: -8.521928787231445
    9. '_states' → logprob: -9.646928787231445
    10. '
' → logprob: -10.021928787231445

Token 470: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.10125315189361572
    2. 'y' → logprob: -2.601253032684326
    3. ' j' → logprob: -4.101253032684326
    4. 'j' → logprob: -5.351253032684326
    5. ' (' → logprob: -7.976253032684326
    6. '(y' → logprob: -8.351253509521484
    7. '(j' → logprob: -8.726253509521484
    8. '(' → logprob: -10.726253509521484
    9. ' states' → logprob: -10.726253509521484
    10. '   ' → logprob: -11.351253509521484

Token 471: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47408777475357056
    2. ' +' → logprob: -0.9740877747535706
    3. '＋' → logprob: -11.849087715148926
    4. ' ' → logprob: -14.474087715148926
    5. '1' → logprob: -14.724087715148926
    6. '==' → logprob: -14.974087715148926
    7. ' ==' → logprob: -15.224087715148926
    8. '<' → logprob: -15.474087715148926
    9. ' +=' → logprob: -15.599087715148926
    10. '+=' → logprob: -15.599087715148926

Token 472: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '<|end|>' → logprob: -17.500003814697266
    4. '```' → logprob: -17.875003814697266
    5. '１' → logprob: -19.000003814697266
    6. '2' → logprob: -19.500003814697266
    7. '<|end|>' → logprob: -19.750003814697266
    8. '[' → logprob: -20.125003814697266
    9. '...' → logprob: -20.250003814697266
    10. '+' → logprob: -20.500003814697266

Token 473: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.251930296421051
    2. ' ==' → logprob: -1.5019302368164062
    3. '=' → logprob: -14.876930236816406
    4. '==
' → logprob: -15.376930236816406
    5. '===' → logprob: -15.501930236816406
    6. '()==' → logprob: -15.876930236816406
    7. ')==' → logprob: -15.876930236816406
    8. ' ' → logprob: -16.251930236816406
    9. ']==' → logprob: -16.501930236816406
    10. '```' → logprob: -18.001930236816406

Token 474: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '６' → logprob: -17.00002098083496
    4. '۶' → logprob: -17.43752098083496
    5. '६' → logprob: -17.75002098083496
    6. '৬' → logprob: -17.81252098083496
    7. '٦' → logprob: -17.81252098083496
    8. 'six' → logprob: -18.12502098083496
    9. '   ' → logprob: -18.50002098083496
    10. '<|end|>' → logprob: -18.75002098083496

Token 475: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.00012892624363303185
    2. ' ' → logprob: -9.000128746032715
    3. '5' → logprob: -12.125128746032715
    4. '4' → logprob: -17.75012969970703
    5. '۶' → logprob: -18.00012969970703
    6. '   ' → logprob: -18.25012969970703
    7. '...' → logprob: -18.25012969970703
    8. '[' → logprob: -18.37512969970703
    9. 'six' → logprob: -18.50012969970703
    10. '<|end|>' → logprob: -18.68762969970703

Token 476: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.038084518164396286
    2. 'and' → logprob: -3.2880845069885254
    3. ',' → logprob: -10.163084983825684
    4. ' ' → logprob: -13.788084983825684
    5. '           ' → logprob: -14.038084983825684
    6. '   ' → logprob: -14.038084983825684
    7. '4' → logprob: -14.788084983825684
    8. '	and' → logprob: -14.788084983825684
    9. ' и' → logprob: -14.913084983825684
    10. '6' → logprob: -15.163084983825684

Token 477: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.17316630482673645
    2. ' j' → logprob: -2.423166275024414
    3. '4' → logprob: -2.673166275024414
    4. ' ' → logprob: -6.673166275024414
    5. '   ' → logprob: -9.798166275024414
    6. '	j' → logprob: -12.048166275024414
    7. '```' → logprob: -13.923166275024414
    8. '  ' → logprob: -14.423166275024414
    9. 'x' → logprob: -14.923166275024414
    10. '' → logprob: -15.798166275024414

Token 478: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4288567006587982
    2. ' ==' → logprob: -1.0538567304611206
    3. ' ' → logprob: -9.80385684967041
    4. '=' → logprob: -10.05385684967041
    5. '4' → logprob: -10.67885684967041
    6. '!=' → logprob: -11.55385684967041
    7. ' !=' → logprob: -11.67885684967041
    8. '   ' → logprob: -12.30385684967041
    9. ' <' → logprob: -13.30385684967041
    10. '<=' → logprob: -13.30385684967041

Token 479: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.5690089639974758e-05
    2. ' ' → logprob: -11.125015258789062
    3. '４' → logprob: -14.750015258789062
    4. '۴' → logprob: -15.750015258789062
    5. '४' → logprob: -16.250015258789062
    6. '৪' → logprob: -16.500015258789062
    7. '٤' → logprob: -17.625015258789062
    8. '' → logprob: -17.875015258789062
    9. '   ' → logprob: -18.000015258789062
    10. ' four' → logprob: -18.812515258789062

Token 480: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.250001907348633
    3. '４' → logprob: -16.625001907348633
    4. '۴' → logprob: -16.750001907348633
    5. '४' → logprob: -17.125001907348633
    6. '৪' → logprob: -17.125001907348633
    7. '' → logprob: -17.125001907348633
    8. '٤' → logprob: -18.125001907348633
    9. '   ' → logprob: -18.375001907348633
    10. '```' → logprob: -18.812501907348633

Token 481: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4389996826648712
    2. '               ' → logprob: -1.3139996528625488
    3. ':
' → logprob: -2.688999652862549
    4. '           ' → logprob: -4.063999652862549
    5. ' states' → logprob: -7.563999652862549
    6. ',' → logprob: -7.563999652862549
    7. 'states' → logprob: -8.814000129699707
    8. '):
' → logprob: -9.689000129699707
    9. '(states' → logprob: -9.939000129699707
    10. '):' → logprob: -10.064000129699707

Token 482: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0033648584503680468
    2. ' states' → logprob: -6.5033650398254395
    3. '           ' → logprob: -7.0033650398254395
    4. 'states' → logprob: -7.0033650398254395
    5. '(states' → logprob: -10.503364562988281
    6. '              ' → logprob: -12.628364562988281
    7. '_states' → logprob: -13.253364562988281
    8. '.states' → logprob: -13.378364562988281
    9. '			' → logprob: -13.628364562988281
    10. '   ' → logprob: -14.003364562988281

Token 483: ' states' (ID: 9407)
  Prédit: ' states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.7918315529823303
    2. 'states' (adapté à ' states') → logprob: -1.4168314933776855
    3. '           ' → logprob: -1.6668314933776855
    4. '               ' → logprob: -2.1668314933776855
    5. '   ' → logprob: -7.2918314933776855
    6. '(states' → logprob: -8.041831970214844
    7. '       ' → logprob: -10.166831970214844
    8. '.states' → logprob: -10.666831970214844
    9. ' ' → logprob: -10.791831970214844
    10. '_states' → logprob: -11.541831970214844

Token 484: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00024275471514556557
    2. '.' → logprob: -8.375243186950684
    3. '           ' → logprob: -11.875243186950684
    4. ' .' → logprob: -12.250243186950684
    5. 'append' → logprob: -14.875243186950684
    6. '          ' → logprob: -16.875242233276367
    7. '.app' → logprob: -17.375242233276367
    8. '.extend' → logprob: -18.625242233276367
    9. '.Append' → logprob: -19.125242233276367
    10. '       ' → logprob: -19.125242233276367

Token 485: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0048214648850262165
    2. '(y' → logprob: -5.504821300506592
    3. '(j' → logprob: -7.254821300506592
    4. '(' → logprob: -10.25482177734375
    5. ' (' → logprob: -14.75482177734375
    6. '   ' → logprob: -15.25482177734375
    7. ' ((' → logprob: -16.25482177734375
    8. '(
' → logprob: -17.00482177734375
    9. '[(' → logprob: -17.75482177734375
    10. ' ' → logprob: -17.87982177734375

Token 486: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01880575902760029
    2. 'y' → logprob: -4.018805980682373
    3. '(j' → logprob: -7.393805980682373
    4. ' j' → logprob: -10.643805503845215
    5. '   ' → logprob: -11.643805503845215
    6. '(y' → logprob: -12.518805503845215
    7. ' y' → logprob: -13.018805503845215
    8. '	j' → logprob: -14.393805503845215
    9. ' (' → logprob: -14.643805503845215
    10. '  ' → logprob: -15.643805503845215

Token 487: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.856408536899835e-05
    2. ' ,' → logprob: -10.875028610229492
    3. ',y' → logprob: -12.000028610229492
    4. ',j' → logprob: -13.500028610229492
    5. '+' → logprob: -13.750028610229492
    6. '   ' → logprob: -14.625028610229492
    7. ' ' → logprob: -15.875028610229492
    8. '-' → logprob: -16.125028610229492
    9. 'y' → logprob: -16.375028610229492
    10. '```' → logprob: -17.750028610229492

Token 488: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0005539863486774266
    2. ' y' → logprob: -7.500554084777832
    3. '   ' → logprob: -14.125554084777832
    4. '	y' → logprob: -15.625554084777832
    5. '(y' → logprob: -16.625553131103516
    6. ' ' → logprob: -17.500553131103516
    7. '    ' → logprob: -18.000553131103516
    8. '  ' → logprob: -18.125553131103516
    9. 'j' → logprob: -18.750553131103516
    10. '+' → logprob: -19.125553131103516

Token 489: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.157039049663581e-05
    2. ' +' → logprob: -9.875051498413086
    3. '   ' → logprob: -18.500051498413086
    4. '＋' → logprob: -19.125051498413086
    5. '+
' → logprob: -19.875051498413086
    6. '```' → logprob: -20.750051498413086
    7. ',' → logprob: -21.125051498413086
    8. ' ' → logprob: -21.250051498413086
    9. '1' → logprob: -21.375051498413086
    10. ')+' → logprob: -21.625051498413086

Token 490: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. '+' → logprob: -12.000007629394531
    3. ' ' → logprob: -13.500007629394531
    4. '```' → logprob: -15.875007629394531
    5. '2' → logprob: -16.50000762939453
    6. '   ' → logprob: -17.56250762939453
    7. ' +' → logprob: -17.87500762939453
    8. '
' → logprob: -18.18750762939453
    9. '[' → logprob: -18.18750762939453
    10. '...' → logprob: -18.56250762939453

Token 491: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022117885237094015
    2. ' ,' → logprob: -8.500221252441406
    3. '+' → logprob: -11.375221252441406
    4. ','' → logprob: -12.500221252441406
    5. ''' → logprob: -14.000221252441406
    6. '               ' → logprob: -14.875221252441406
    7. '           ' → logprob: -15.000221252441406
    8. '',' → logprob: -15.125221252441406
    9. '),' → logprob: -16.250221252441406
    10. ' +' → logprob: -16.375221252441406

Token 492: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5761153697967529
    2. ' '' → logprob: -0.8261153697967529
    3. ''A' → logprob: -9.326115608215332
    4. 'B' → logprob: -10.326115608215332
    5. ' ' → logprob: -10.576115608215332
    6. ' B' → logprob: -10.826115608215332
    7. ' ' → logprob: -12.951115608215332
    8. '"B' → logprob: -13.201115608215332
    9. ''S' → logprob: -13.701115608215332
    10. '`' → logprob: -14.326115608215332

Token 493: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00011510594777064398
    2. ''' → logprob: -9.125115394592285
    3. ' B' → logprob: -12.500115394592285
    4. '"B' → logprob: -13.250115394592285
    5. '`' → logprob: -15.125115394592285
    6. 'Ｂ' → logprob: -15.875115394592285
    7. ''b' → logprob: -16.00011444091797
    8. '	B' → logprob: -17.12511444091797
    9. ' '' → logprob: -17.37511444091797
    10. 'Б' → logprob: -17.75011444091797

Token 494: ''))
' (ID: 15277)
  Prédit: ''))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.10971900075674057
    2. ''))
' → logprob: -2.6097190380096436
    3. ')' → logprob: -3.9847190380096436
    4. '))' → logprob: -4.4847187995910645
    5. '')' → logprob: -7.9847187995910645
    6. ')')
' → logprob: -9.734719276428223
    7. '))
' → logprob: -9.984719276428223
    8. ''))
' → logprob: -10.734719276428223
    9. ''' → logprob: -12.859719276428223
    10. '"))' → logprob: -13.234719276428223

Token 495: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006695479387417436
    2. '       ' → logprob: -7.375669479370117
    3. 'else' → logprob: -10.875669479370117
    4. '               ' → logprob: -11.875669479370117
    5. '```' → logprob: -12.375669479370117
    6. ' else' → logprob: -12.625669479370117
    7. '   ' → logprob: -12.875669479370117
    8. ')' → logprob: -12.875669479370117
    9. '		' → logprob: -13.625669479370117
    10. 'return' → logprob: -14.125669479370117

Token 496: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35980454087257385
    2. 'else' (adapté à ' else') → logprob: -1.8598045110702515
    3. '           ' → logprob: -1.9848045110702515
    4. ' else' → logprob: -4.734804630279541
    5. '   ' → logprob: -9.109804153442383
    6. 'elif' → logprob: -10.109804153442383
    7. 'return' → logprob: -10.234804153442383
    8. '               ' → logprob: -10.234804153442383
    9. '	else' → logprob: -10.984804153442383
    10. ')' → logprob: -11.109804153442383

Token 497: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007048417814075947
    2. ':
' → logprob: -5.632048606872559
    3. ':' → logprob: -6.132048606872559
    4. '           ' → logprob: -6.757048606872559
    5. '                   ' → logprob: -10.632048606872559
    6. '):
' → logprob: -11.257048606872559
    7. '              ' → logprob: -11.382048606872559
    8. '{
' → logprob: -11.757048606872559
    9. '```' → logprob: -11.757048606872559
    10. '{' → logprob: -12.007048606872559

Token 498: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01041343156248331
    2. ' states' → logprob: -4.635413646697998
    3. 'states' → logprob: -7.885413646697998
    4. '           ' → logprob: -8.76041316986084
    5. '(states' → logprob: -9.26041316986084
    6. '```' → logprob: -11.51041316986084
    7. '   ' → logprob: -11.76041316986084
    8. '                
' → logprob: -12.76041316986084
    9. '_states' → logprob: -12.76041316986084
    10. ' ' → logprob: -13.88541316986084

Token 499: ' states' (ID: 9407)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' (adapté à ' states') → logprob: -0.49348708987236023
    2. ' states' → logprob: -0.9934871196746826
    3. '               ' → logprob: -3.9934871196746826
    4. '   ' → logprob: -7.7434868812561035
    5. '           ' → logprob: -8.118487358093262
    6. '(states' → logprob: -11.243487358093262
    7. ' ' → logprob: -11.493487358093262
    8. '_states' → logprob: -11.743487358093262
    9. '       ' → logprob: -11.993487358093262
    10. 'state' → logprob: -12.118487358093262

Token 500: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00011319868644932285
    2. '.' → logprob: -9.125113487243652
    3. '           ' → logprob: -12.875113487243652
    4. ' .' → logprob: -13.875113487243652
    5. 'append' → logprob: -14.875113487243652
    6. '.app' → logprob: -15.250113487243652
    7. '.extend' → logprob: -18.125112533569336
    8. '          ' → logprob: -18.250112533569336
    9. '.Append' → logprob: -18.500112533569336
    10. ').' → logprob: -18.750112533569336

Token 501: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.750006675720215
    3. '(j' → logprob: -12.750006675720215
    4. '   ' → logprob: -16.5000057220459
    5. '(
' → logprob: -16.5000057220459
    6. ' ((' → logprob: -16.5000057220459
    7. ' ' → logprob: -17.3750057220459
    8. ' (' → logprob: -18.7500057220459
    9. '[(' → logprob: -18.7500057220459
    10. '  ' → logprob: -19.2500057220459

Token 502: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006589963100850582
    2. '(j' → logprob: -5.131589889526367
    3. ' j' → logprob: -7.381589889526367
    4. ' (' → logprob: -10.881589889526367
    5. '   ' → logprob: -11.631589889526367
    6. '	j' → logprob: -12.631589889526367
    7. '[j' → logprob: -13.006589889526367
    8. ',j' → logprob: -13.756589889526367
    9. '(' → logprob: -14.381589889526367
    10. '```' → logprob: -14.631589889526367

Token 503: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014203863975126296
    2. ',j' → logprob: -9.750142097473145
    3. ' ,' → logprob: -10.000142097473145
    4. '   ' → logprob: -11.375142097473145
    5. ',y' → logprob: -11.750142097473145
    6. '-' → logprob: -11.750142097473145
    7. '+' → logprob: -11.875142097473145
    8. ' ' → logprob: -13.000142097473145
    9. 'j' → logprob: -14.250142097473145
    10. '```' → logprob: -14.500142097473145

Token 504: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.913265239447355e-05
    2. ' ' → logprob: -9.625099182128906
    3. 'y' → logprob: -11.125099182128906
    4. '0' → logprob: -12.125099182128906
    5. ' y' → logprob: -12.125099182128906
    6. '   ' → logprob: -13.375099182128906
    7. '```' → logprob: -13.937599182128906
    8. '+' → logprob: -14.000099182128906
    9. '-' → logprob: -14.250099182128906
    10. 'j' → logprob: -14.937599182128906

Token 505: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001495484757469967
    2. ' ,' → logprob: -8.875149726867676
    3. ',j' → logprob: -11.875149726867676
    4. ',y' → logprob: -13.500149726867676
    5. ')' → logprob: -14.750149726867676
    6. 'j' → logprob: -15.375149726867676
    7. ' ' → logprob: -15.500149726867676
    8. '(' → logprob: -16.37514877319336
    9. '   ' → logprob: -16.62514877319336
    10. '(j' → logprob: -16.87514877319336

Token 506: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.47407835721969604
    2. ' y' → logprob: -0.974078357219696
    3. '	y' → logprob: -13.599078178405762
    4. ',y' → logprob: -17.099079132080078
    5. ' ' → logprob: -17.974079132080078
    6. '   ' → logprob: -18.349079132080078
    7. ')y' → logprob: -18.349079132080078
    8. '(y' → logprob: -18.474079132080078
    9. ',' → logprob: -18.599079132080078
    10. ''y' → logprob: -19.224079132080078

Token 507: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.968312951968983e-06
    2. ' ,' → logprob: -11.750009536743164
    3. ')' → logprob: -13.625009536743164
    4. ' ' → logprob: -14.500009536743164
    5. '   ' → logprob: -15.875009536743164
    6. '	' → logprob: -16.500009536743164
    7. '))' → logprob: -17.125009536743164
    8. '```' → logprob: -17.375009536743164
    9. '  ' → logprob: -17.875009536743164
    10. ',y' → logprob: -18.625009536743164

Token 508: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.01420475635677576
    2. ' '' → logprob: -4.264204978942871
    3. ''' → logprob: -10.514204978942871
    4. 'A' → logprob: -11.514204978942871
    5. ' A' → logprob: -13.514204978942871
    6. '’A' → logprob: -14.014204978942871
    7. '"A' → logprob: -14.014204978942871
    8. ' ' → logprob: -14.264204978942871
    9. '   ' → logprob: -16.014204025268555
    10. ' ' → logprob: -16.514204025268555

Token 509: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.003645210759714246
    2. ''A' → logprob: -5.628645420074463
    3. '"A' → logprob: -10.628644943237305
    4. ''' → logprob: -11.503644943237305
    5. ' A' → logprob: -11.628644943237305
    6. '	A' → logprob: -14.753644943237305
    7. ' ' → logprob: -14.878644943237305
    8. '_A' → logprob: -15.253644943237305
    9. 'a' → logprob: -15.628644943237305
    10. '  ' → logprob: -15.753644943237305

Token 510: ''))
' (ID: 15277)
  Prédit: '))
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.5374208688735962
    2. '))' → logprob: -1.0374208688735962
    3. ')' → logprob: -2.9124207496643066
    4. ''))
' → logprob: -5.412420749664307
    5. ')
' → logprob: -7.287420749664307
    6. ')')
' → logprob: -7.662420749664307
    7. ''))' → logprob: -7.787420749664307
    8. '               ' → logprob: -8.162421226501465
    9. ' ))
' → logprob: -8.162421226501465
    10. '))
' → logprob: -8.537421226501465

Token 511: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0025005098432302475
    2. '           ' → logprob: -6.627500534057617
    3. '<|end|>' → logprob: -7.377500534057617
    4. '                
' → logprob: -8.877500534057617
    5. '       ' → logprob: -9.377500534057617
    6. ')' → logprob: -9.752500534057617
    7. '              ' → logprob: -10.127500534057617
    8. '                ' → logprob: -10.252500534057617
    9. '                   ' → logprob: -10.377500534057617
    10. '   ' → logprob: -10.627500534057617

Token 512: ' states' (ID: 9407)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' (adapté à ' states') → logprob: -0.3144162893295288
    2. ' states' → logprob: -1.3144162893295288
    3. '(states' → logprob: -7.064416408538818
    4. '               ' → logprob: -8.18941593170166
    5. 'States' → logprob: -12.18941593170166
    6. '_states' → logprob: -12.43941593170166
    7. '   ' → logprob: -12.56441593170166
    8. '.states' → logprob: -12.68941593170166
    9. ' (' → logprob: -12.81441593170166
    10. 'state' → logprob: -13.81441593170166

Token 513: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.012960448861122131
    2. ',' → logprob: -4.512960433959961
    3. '.' → logprob: -6.637960433959961
    4. ',(' → logprob: -7.637960433959961
    5. 'append' → logprob: -9.262960433959961
    6. '.,' → logprob: -12.262960433959961
    7. ' ,' → logprob: -12.262960433959961
    8. ' .' → logprob: -12.512960433959961
    9. ',.' → logprob: -12.637960433959961
    10. '.app' → logprob: -13.512960433959961

Token 514: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.9385402993066236e-05
    2. '(j' → logprob: -11.000019073486328
    3. '(' → logprob: -13.125019073486328
    4. '[(' → logprob: -14.875019073486328
    5. ' ((' → logprob: -15.500019073486328
    6. '(
' → logprob: -16.750019073486328
    7. ' (' → logprob: -18.000019073486328
    8. '```' → logprob: -18.500019073486328
    9. '   ' → logprob: -19.125019073486328
    10. ' ' → logprob: -19.750019073486328

Token 515: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0001438266917830333
    2. ' j' → logprob: -9.375144004821777
    3. '(j' → logprob: -9.750144004821777
    4. '   ' → logprob: -15.500144004821777
    5. '```' → logprob: -15.750144004821777
    6. ' (' → logprob: -15.875144004821777
    7. '	j' → logprob: -16.00014305114746
    8. '[j' → logprob: -16.25014305114746
    9. ',j' → logprob: -16.75014305114746
    10. '(' → logprob: -18.37514305114746

Token 516: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2723104848410003e-05
    2. ',y' → logprob: -11.375022888183594
    3. ' ,' → logprob: -11.500022888183594
    4. '+' → logprob: -15.125022888183594
    5. '```' → logprob: -15.375022888183594
    6. '   ' → logprob: -15.375022888183594
    7. ' ' → logprob: -15.625022888183594
    8. '-' → logprob: -16.500022888183594
    9. 'y' → logprob: -16.500022888183594
    10. ',j' → logprob: -16.750022888183594

Token 517: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.1269282102584839
    2. 'y' → logprob: -2.1269283294677734
    3. '	y' → logprob: -16.126928329467773
    4. ' ' → logprob: -17.001928329467773
    5. '   ' → logprob: -17.126928329467773
    6. '(y' → logprob: -17.376928329467773
    7. '    ' → logprob: -18.626928329467773
    8. ',y' → logprob: -18.751928329467773
    9. ' ' → logprob: -18.751928329467773
    10. ''y' → logprob: -19.251928329467773

Token 518: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1875571544806007e-05
    2. ' +' → logprob: -11.500011444091797
    3. '+y' → logprob: -13.875011444091797
    4. '1' → logprob: -14.875011444091797
    5. 'y' → logprob: -15.250011444091797
    6. '   ' → logprob: -16.875011444091797
    7. ',' → logprob: -17.625011444091797
    8. '＋' → logprob: -18.250011444091797
    9. '+
' → logprob: -18.375011444091797
    10. '```' → logprob: -18.375011444091797

Token 519: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011081460979767144
    2. 'y' → logprob: -9.250110626220703
    3. '+' → logprob: -11.250110626220703
    4. ' ' → logprob: -13.625110626220703
    5. ' y' → logprob: -14.875110626220703
    6. '```' → logprob: -16.875110626220703
    7. '(y' → logprob: -16.875110626220703
    8. '   ' → logprob: -17.000110626220703
    9. 'j' → logprob: -17.625110626220703
    10. '(' → logprob: -17.875110626220703

Token 520: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00040290577453561127
    2. '+' → logprob: -8.125402450561523
    3. ' ,' → logprob: -9.500402450561523
    4. ',y' → logprob: -10.625402450561523
    5. ' +' → logprob: -12.250402450561523
    6. '(y' → logprob: -13.750402450561523
    7. ')' → logprob: -14.625402450561523
    8. '(' → logprob: -14.750402450561523
    9. '```' → logprob: -15.250402450561523
    10. '+,' → logprob: -15.750402450561523

Token 521: ' '' (ID: 461)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03869013115763664
    2. ' y' → logprob: -3.2886900901794434
    3. ''y' → logprob: -7.413690090179443
    4. '1' → logprob: -10.288690567016602
    5. ''' → logprob: -11.913690567016602
    6. '   ' → logprob: -13.163690567016602
    7. ' ' → logprob: -13.288690567016602
    8. ' '' → logprob: -14.913690567016602
    9. '‘y' → logprob: -15.163690567016602
    10. ')y' → logprob: -16.0386905670166

Token 522: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -4.36574100604048e-06
    2. ' B' → logprob: -12.875004768371582
    3. ''' → logprob: -13.500004768371582
    4. '   ' → logprob: -16.500003814697266
    5. 'y' → logprob: -17.000003814697266
    6. '"B' → logprob: -17.375003814697266
    7. 'b' → logprob: -17.500003814697266
    8. ')' → logprob: -17.750003814697266
    9. '`' → logprob: -17.750003814697266
    10. '')' → logprob: -18.250003814697266

Token 523: ''))
' (ID: 15277)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.003651741426438093
    2. ''))' → logprob: -5.8786516189575195
    3. ')' → logprob: -7.7536516189575195
    4. '))
' → logprob: -7.8786516189575195
    5. '           ' → logprob: -11.37865161895752
    6. '               ' → logprob: -11.50365161895752
    7. ''))
' → logprob: -11.87865161895752
    8. ' ))' → logprob: -12.25365161895752
    9. '       ' → logprob: -13.25365161895752
    10. '"))' → logprob: -13.50365161895752

Token 524: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001912457519210875
    2. '	return' → logprob: -6.626912593841553
    3. 'return' → logprob: -8.251912117004395
    4. ' return' → logprob: -9.251912117004395
    5. '<|end|>' → logprob: -10.001912117004395
    6. '       ' → logprob: -10.126912117004395
    7. ')' → logprob: -10.126912117004395
    8. '    
' → logprob: -10.501912117004395
    9. '```' → logprob: -11.001912117004395
    10. ':return' → logprob: -11.251912117004395

Token 525: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015558054437860847
    2. 'return' → logprob: -7.001555919647217
    3. '	return' → logprob: -7.876555919647217
    4. ' return' → logprob: -8.376555442810059
    5. '       ' → logprob: -11.251555442810059
    6. ':return' → logprob: -11.876555442810059
    7. ' ' → logprob: -12.626555442810059
    8. '   ' → logprob: -13.126555442810059
    9. 'else' (adapté à ' else') → logprob: -13.626555442810059
    10. '    
' → logprob: -13.626555442810059

Token 526: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03420561924576759
    2. ':
' → logprob: -3.409205675125122
    3. '{' → logprob: -7.909205436706543
    4. '   ' → logprob: -9.784205436706543
    5. '[' → logprob: -10.159205436706543
    6. '       ' → logprob: -10.284205436706543
    7. ':return' → logprob: -11.284205436706543
    8. '{
' → logprob: -11.534205436706543
    9. ':

' → logprob: -11.909205436706543
    10. ' :' → logprob: -12.034205436706543

Token 527: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004587842151522636
    2. '   ' → logprob: -5.879587650299072
    3. '           ' → logprob: -7.004587650299072
    4. ' states' → logprob: -8.50458812713623
    5. '(' → logprob: -9.00458812713623
    6. '(states' → logprob: -9.00458812713623
    7. '[' → logprob: -9.25458812713623
    8. '```' → logprob: -9.87958812713623
    9. '<|end|>' → logprob: -9.87958812713623
    10. 'states' → logprob: -9.87958812713623

Token 528: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16492204368114471
    2. ' states' → logprob: -2.414921998977661
    3. '       ' → logprob: -3.164921998977661
    4. 'states' → logprob: -4.03992223739624
    5. 'return' → logprob: -7.03992223739624
    6. ' return' → logprob: -7.16492223739624
    7. '(states' → logprob: -7.53992223739624
    8. '           ' → logprob: -7.78992223739624
    9. ' pass' → logprob: -9.539921760559082
    10. '               ' → logprob: -10.289921760559082

Token 529: ' 引' (ID: 167622)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -1.0125386714935303
    2. ' states' → logprob: -1.5125386714935303
    3. '   ' → logprob: -1.8875386714935303
    4. '               ' → logprob: -2.0125386714935303
    5. '(states' → logprob: -2.3875386714935303
    6. '           ' → logprob: -3.8875386714935303
    7. 'return' → logprob: -5.387538909912109
    8. 'if' → logprob: -5.637538909912109
    9. '(' → logprob: -5.637538909912109
    10. ' (' → logprob: -6.012538909912109

Token 530: 'き' (ID: 11852)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20585966110229492
    2. 'き' → logprob: -2.205859661102295
    3. '               ' → logprob: -3.580859661102295
    4. '.append' → logprob: -4.205859661102295
    5. ')' → logprob: -4.455859661102295
    6. '   ' → logprob: -4.830859661102295
    7. '```' → logprob: -5.955859661102295
    8. 'append' → logprob: -6.080859661102295
    9. '       ' → logprob: -6.455859661102295
    10. 'states' → logprob: -6.705859661102295

Token 531: '分' (ID: 2957)
  Prédit: 'き'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'き' → logprob: -0.06958111375570297
    2. 'append' → logprob: -3.3195810317993164
    3. '分' → logprob: -4.444581031799316
    4. '.append' → logprob: -4.569581031799316
    5. 'け' → logprob: -5.944581031799316
    6. '           ' → logprob: -6.694581031799316
    7. '       ' → logprob: -7.194581031799316
    8. '```' → logprob: -7.194581031799316
    9. 'return' → logprob: -7.569581031799316
    10. '   ' → logprob: -7.569581031799316

Token 532: 'け' (ID: 15707)
  Prédit: 'け'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'け' → logprob: -0.00010509284038562328
    2. '```' → logprob: -10.375104904174805
    3. '``' → logprob: -11.250104904174805
    4. 'げ' → logprob: -11.375104904174805
    5. 'れ' → logprob: -11.625104904174805
    6. '(' → logprob: -12.000104904174805
    7. '-' → logprob: -12.500104904174805
    8. 'か' → logprob: -12.625104904174805
    9. 'く' → logprob: -12.750104904174805
    10. 'de' → logprob: -12.875104904174805

Token 533: 'か' (ID: 7128)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.09315012395381927
    2. '           ' → logprob: -2.9681501388549805
    3. ' states' → logprob: -4.2181501388549805
    4. 'states' → logprob: -4.9681501388549805
    5. '   ' → logprob: -5.0931501388549805
    6. '(states' → logprob: -5.7181501388549805
    7. ' (' → logprob: -6.7181501388549805
    8. 'append' → logprob: -6.7181501388549805
    9. '(' → logprob: -7.5931501388549805
    10. ')' → logprob: -7.7181501388549805

Token 534: 'どう' (ID: 85545)
  Prédit: '(states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(states' → logprob: -1.19154953956604
    2. ' states' → logprob: -1.31654953956604
    3. '   ' → logprob: -1.44154953956604
    4. '           ' → logprob: -2.19154953956604
    5. 'states' → logprob: -2.94154953956604
    6. ' (' → logprob: -4.941549301147461
    7. 'return' → logprob: -4.941549301147461
    8. '(' → logprob: -5.691549301147461
    9. 'if' → logprob: -6.066549301147461
    10. ' return' → logprob: -6.441549301147461

Token 535: 'か' (ID: 7128)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.834074854850769
    2. 'return' → logprob: -1.834074854850769
    3. ' (' → logprob: -2.2090749740600586
    4. '   ' → logprob: -2.4590749740600586
    5. ':' → logprob: -3.2090749740600586
    6. ')' → logprob: -3.5840749740600586
    7. ' states' → logprob: -3.5840749740600586
    8. ' (
' → logprob: -4.209074974060059
    9. ':
' → logprob: -4.209074974060059
    10. ':return' → logprob: -4.959074974060059

Token 536: '判' (ID: 47257)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08486411720514297
    2. '   ' → logprob: -3.3348641395568848
    3. ' states' → logprob: -3.7098641395568848
    4. '       ' → logprob: -4.209864139556885
    5. ' return' → logprob: -6.334864139556885
    6. '               ' → logprob: -7.084864139556885
    7. 'return' → logprob: -7.459864139556885
    8. '            
' → logprob: -7.459864139556885
    9. ' if' → logprob: -7.584864139556885
    10. 'states' → logprob: -7.834864139556885

Token 537: '定' (ID: 8745)
  Prédit: '定'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '定' → logprob: -0.03826134279370308
    2. '断' → logprob: -3.2882614135742188
    3. '\xe6\x96' → logprob: -9.413261413574219
    4. 'def' → logprob: -10.163261413574219
    5. '```' → logprob: -10.663261413574219
    6. 'て' → logprob: -11.163261413574219
    7. 'return' → logprob: -11.538261413574219
    8. 'is' → logprob: -11.788261413574219
    9. 'if' → logprob: -12.288261413574219
    10. '価' → logprob: -12.413261413574219

Token 538: '→' (ID: 20216)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.060251958668231964
    2. ' states' → logprob: -3.9352519512176514
    3. '       ' → logprob: -4.1852521896362305
    4. '   ' → logprob: -4.4352521896362305
    5. '(states' → logprob: -4.9352521896362305
    6. 'states' → logprob: -6.5602521896362305
    7. 'return' → logprob: -7.1852521896362305
    8. '<|end|>' → logprob: -7.3102521896362305
    9. ' return' → logprob: -7.5602521896362305
    10. ' (' → logprob: -7.6852521896362305

Token 539: '終' (ID: 65491)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.836051881313324
    2. 'states' → logprob: -1.0860519409179688
    3. ' states' → logprob: -2.2110519409179688
    4. '   ' → logprob: -3.2110519409179688
    5. ' return' → logprob: -3.8360519409179688
    6. '(states' → logprob: -3.9610519409179688
    7. 'if' → logprob: -4.586051940917969
    8. 'pass' → logprob: -4.586051940917969
    9. '           ' → logprob: -4.836051940917969
    10. ' pass' → logprob: -5.711051940917969

Token 540: 'わ' (ID: 20473)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9738738536834717
    2. '       ' → logprob: -1.2238738536834717
    3. '   ' → logprob: -1.4738738536834717
    4. 'return' → logprob: -3.2238738536834717
    5. '```' → logprob: -3.2238738536834717
    6. 'if' → logprob: -4.723874092102051
    7. '          ' → logprob: -6.098874092102051
    8. '               ' → logprob: -6.723874092102051
    9. '``' → logprob: -6.973874092102051
    10. ' return' → logprob: -7.348874092102051

Token 541: 'り' (ID: 7297)
  Prédit: 'わ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'わ' → logprob: -0.03181040659546852
    2. '了' → logprob: -3.7818105220794678
    3. '```' → logprob: -5.656810283660889
    4. 'return' → logprob: -5.781810283660889
    5. 'り' → logprob: -7.281810283660889
    6. 'ら' → logprob: -8.156810760498047
    7. 'end' → logprob: -8.656810760498047
    8. 'る' → logprob: -9.031810760498047
    9. 'え' → logprob: -9.031810760498047
    10. '#' → logprob: -9.406810760498047

Token 542: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7186093926429749
    2. '           ' → logprob: -0.9686093926429749
    3. ')' → logprob: -3.34360933303833
    4. '(states' → logprob: -3.46860933303833
    5. '       ' → logprob: -3.71860933303833
    6. ' states' → logprob: -3.96860933303833
    7. '<|end|>' → logprob: -4.71860933303833
    8. 'states' → logprob: -5.34360933303833
    9. '(' → logprob: -6.34360933303833
    10. 'return' → logprob: -6.59360933303833

Token 543: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4766205847263336
    2. '           ' → logprob: -1.1016205549240112
    3. '   ' → logprob: -3.101620674133301
    4. '<|end|>' → logprob: -7.601620674133301
    5. ')' → logprob: -7.726620674133301
    6. 'return' → logprob: -8.3516206741333
    7. ' return' → logprob: -8.7266206741333
    8. ' states' → logprob: -8.7266206741333
    9. '```' → logprob: -10.1016206741333
    10. '(states' → logprob: -10.1016206741333

Token 544: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3713557720184326
    2. '   ' → logprob: -1.6213557720184326
    3. ' return' → logprob: -2.4963557720184326
    4. '       ' → logprob: -3.6213557720184326
    5. '           ' → logprob: -6.996356010437012
    6. 'pass' → logprob: -7.121356010437012
    7. ' pass' → logprob: -7.246356010437012
    8. ' states' → logprob: -7.871356010437012
    9. 'states' → logprob: -8.121356010437012
    10. '	return' → logprob: -8.621356010437012

Token 545: ' ' (ID: 220)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.17275749146938324
    2. '   ' → logprob: -2.297757387161255
    3. ' return' → logprob: -3.172757387161255
    4. 'states' → logprob: -4.547757625579834
    5. ' states' → logprob: -5.422757625579834
    6. '           ' → logprob: -7.672757625579834
    7. '       ' → logprob: -8.547757148742676
    8. '	return' → logprob: -8.547757148742676
    9. 'pass' → logprob: -9.172757148742676
    10. '    ' → logprob: -9.422757148742676

Token 546: '4' (ID: 19)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1469370126724243
    2. '   ' → logprob: -1.1469370126724243
    3. 'return' → logprob: -1.6469370126724243
    4. ' states' → logprob: -2.5219368934631348
    5. 'states' → logprob: -2.8969368934631348
    6. ' return' → logprob: -4.271936893463135
    7. '(states' → logprob: -4.896936893463135
    8. '           ' → logprob: -5.771936893463135
    9. '#' → logprob: -6.646936893463135
    10. '    ' → logprob: -6.896936893463135

Token 547: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0038938994985073805
    2. ',' → logprob: -7.003893852233887
    3. ')' → logprob: -7.128893852233887
    4. 'elif' → logprob: -7.503893852233887
    5. ' -' → logprob: -7.628893852233887
    6. '#' → logprob: -8.128893852233887
    7. '   ' → logprob: -8.378893852233887
    8. '4' → logprob: -9.128893852233887
    9. '[' → logprob: -9.378893852233887
    10. '-
' → logprob: -10.003893852233887

Token 548: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -6.921253225300461e-05
    2. '5' → logprob: -10.500069618225098
    3. ' ' → logprob: -10.750069618225098
    4. 'return' → logprob: -11.625069618225098
    5. '...' → logprob: -13.375069618225098
    6. 'def' → logprob: -13.750069618225098
    7. '４' → logprob: -14.000069618225098
    8. '```' → logprob: -14.125069618225098
    9. '-' → logprob: -14.250069618225098
    10. '<|end|>' → logprob: -14.375069618225098

Token 549: 'で' (ID: 4344)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1419503390789032
    2. ' states' → logprob: -3.3919503688812256
    3. '<|end|>' → logprob: -3.5169503688812256
    4. '           ' → logprob: -4.1419501304626465
    5. '
' → logprob: -4.7669501304626465
    6. 'states' → logprob: -4.8919501304626465
    7. 'return' → logprob: -4.8919501304626465
    8. ')' → logprob: -5.0169501304626465
    9. '       ' → logprob: -5.3919501304626465
    10. ' return' → logprob: -5.5169501304626465

Token 550: '双方' (ID: 158376)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.24413402378559113
    2. ' return' → logprob: -2.619133949279785
    3. 'states' → logprob: -2.619133949279785
    4. ' states' → logprob: -2.994133949279785
    5. '   ' → logprob: -4.244133949279785
    6. '           ' → logprob: -6.244133949279785
    7. '(states' → logprob: -6.494133949279785
    8. '```' → logprob: -7.744133949279785
    9. 'if' → logprob: -7.994133949279785
    10. 'pass' → logprob: -8.119133949279785

Token 551: 'が' (ID: 6632)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.8266792893409729
    2. 'が' → logprob: -1.9516792297363281
    3. 'から' → logprob: -2.201679229736328
    4. ',' → logprob: -2.701679229736328
    5. 'を' → logprob: -3.451679229736328
    6. 'とも' → logprob: -4.076679229736328
    7. '、' → logprob: -4.201679229736328
    8. ' states' → logprob: -4.201679229736328
    9. 'と' → logprob: -4.326679229736328
    10. ')' → logprob: -4.326679229736328

Token 552: '１' (ID: 10888)
  Prédit: '同'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '同' → logprob: -0.32731911540031433
    2. '4' → logprob: -2.4523191452026367
    3. ',' → logprob: -3.8273191452026367
    4. '```' → logprob: -3.8273191452026367
    5. '引' → logprob: -4.202319145202637
    6. '追加' → logprob: -4.452319145202637
    7. '、' → logprob: -4.827319145202637
    8. '続' → logprob: -4.952319145202637
    9. '+' → logprob: -4.952319145202637
    10. '勝' → logprob: -5.077319145202637

Token 553: '点' (ID: 8300)
  Prédit: '点'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '点' → logprob: -0.04982084035873413
    2. 'ポイント' → logprob: -3.674820899963379
    3. 'point' → logprob: -5.799820899963379
    4. ',' → logprob: -5.924820899963379
    5. '-' → logprob: -6.049820899963379
    6. 'ず' → logprob: -6.424820899963379
    7. '差' → logprob: -6.674820899963379
    8. 'points' → logprob: -6.924820899963379
    9. ' point' → logprob: -6.924820899963379
    10. '得' → logprob: -7.049820899963379

Token 554: 'ず' (ID: 36743)
  Prédit: 'ず'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ず' → logprob: -0.874692976474762
    2. ',' → logprob: -1.4996929168701172
    3. 'を' → logprob: -1.8746929168701172
    4. '取' → logprob: -2.874692916870117
    5. 'の' → logprob: -3.499692916870117
    6. 'と' → logprob: -3.624692916870117
    7. '差' → logprob: -3.999692916870117
    8. '、' → logprob: -4.499692916870117
    9. '追加' → logprob: -4.499692916870117
    10. '増' → logprob: -4.499692916870117

Token 555: 'つ' (ID: 18290)
  Prédit: 'つ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'つ' → logprob: -0.01770019717514515
    2. 'る' → logprob: -4.8927001953125
    3. 'り' → logprob: -5.6427001953125
    4. 'け' → logprob: -5.8927001953125
    5. 'れ' → logprob: -6.6427001953125
    6. 'わ' → logprob: -6.7677001953125
    7. 'った' → logprob: -7.7677001953125
    8. 'ん' → logprob: -8.5177001953125
    9. 'く' → logprob: -8.8927001953125
    10. 'れて' → logprob: -9.0177001953125

Token 556: 'と' (ID: 5330)
  Prédit: '取'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '取' → logprob: -0.3736444115638733
    2. 'と' → logprob: -2.8736443519592285
    3. '勝' → logprob: -3.3736443519592285
    4. '追加' → logprob: -3.3736443519592285
    5. '取り' → logprob: -3.7486443519592285
    6. '同' → logprob: -3.9986443519592285
    7. '増' → logprob: -3.9986443519592285
    8. '引' → logprob: -4.2486443519592285
    9. '点' → logprob: -4.2486443519592285
    10. 'の' → logprob: -4.6236443519592285

Token 557: 'った' (ID: 42917)
  Prédit: 'る'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.8519349098205566
    2. 'って' → logprob: -0.9769349098205566
    3. 'った' → logprob: -1.9769349098205566
    4. 'り' → logprob: -3.4769349098205566
    5. 'れば' → logprob: -4.226934909820557
    6. 'も' → logprob: -4.601934909820557
    7. 'っ' → logprob: -7.726934909820557
    8. 'いう' → logprob: -7.976934909820557
    9. 'ても' → logprob: -8.226934432983398
    10. 'た' → logprob: -8.351934432983398

Token 558: 'と' (ID: 5330)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.350556492805481
    2. ' states' → logprob: -1.475556492805481
    3. '(states' → logprob: -1.725556492805481
    4. '(' → logprob: -1.975556492805481
    5. '(
' → logprob: -2.8505563735961914
    6. 'states' → logprob: -3.1005563735961914
    7. '   ' → logprob: -3.4755563735961914
    8. ',' → logprob: -4.350556373596191
    9. ' (' → logprob: -4.725556373596191
    10. '<|end|>' → logprob: -4.725556373596191

Token 559: 'き' (ID: 11852)
  Prédit: 'き'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'き' → logprob: -0.017022570595145226
    2. 'ころ' → logprob: -5.642022609710693
    3. 'いう' → logprob: -5.642022609710693
    4. 'return' → logprob: -5.892022609710693
    5. 'は' → logprob: -6.392022609710693
    6. 'こ' → logprob: -6.642022609710693
    7. '#' → logprob: -6.892022609710693
    8. 'j' → logprob: -7.142022609710693
    9. 'きを' → logprob: -8.017022132873535
    10. '(' → logprob: -8.267022132873535

Token 560: '(' (ID: 7)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6994652152061462
    2. '   ' → logprob: -1.574465274810791
    3. ' states' → logprob: -1.949465274810791
    4. '(states' → logprob: -2.574465274810791
    5. 'states' → logprob: -3.449465274810791
    6. ' return' → logprob: -3.699465274810791
    7. 'return' → logprob: -4.324465274810791
    8. '       ' → logprob: -5.949465274810791
    9. ' if' → logprob: -6.824465274810791
    10. '               ' → logprob: -7.199465274810791

Token 561: '5' (ID: 20)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023636525496840477
    2. 'j' → logprob: -4.523636341094971
    3. '(j' → logprob: -5.898636341094971
    4. '4' → logprob: -6.398636341094971
    5. '   ' → logprob: -6.523636341094971
    6. '           ' → logprob: -7.273636341094971
    7. ' states' → logprob: -7.273636341094971
    8. 'return' → logprob: -7.273636341094971
    9. ' j' → logprob: -7.398636341094971
    10. ')return' → logprob: -7.773636341094971

Token 562: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3296282887458801
    2. '-' → logprob: -1.7046282291412354
    3. ')' → logprob: -2.4546282291412354
    4. '),' → logprob: -5.2046284675598145
    5. ',
' → logprob: -6.4546284675598145
    6. ' ,' → logprob: -6.8296284675598145
    7. '4' → logprob: -6.9546284675598145
    8. '-,' → logprob: -7.3296284675598145
    9. '5' → logprob: -7.7046284675598145
    10. '+' → logprob: -8.079627990722656

Token 563: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0067204674705863
    2. '4' → logprob: -5.006720542907715
    3. ')' → logprob: -13.131720542907715
    4. '6' → logprob: -13.506720542907715
    5. '５' → logprob: -14.506720542907715
    6. ' ' → logprob: -14.631720542907715
    7. '```' → logprob: -15.381720542907715
    8. '0' → logprob: -16.6317195892334
    9. 'y' → logprob: -16.8817195892334
    10. '۵' → logprob: -16.9442195892334

Token 564: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05454494059085846
    2. '):' → logprob: -3.0545449256896973
    3. ',' → logprob: -5.429544925689697
    4. '):
' → logprob: -7.429544925689697
    5. ')：' → logprob: -8.304545402526855
    6. ')
' → logprob: -8.429545402526855
    7. '),' → logprob: -8.929545402526855
    8. ',)' → logprob: -9.179545402526855
    9. ' )' → logprob: -9.929545402526855
    10. '）' → logprob: -10.179545402526855

Token 565: 'は' (ID: 5205)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05002814158797264
    2. ' states' → logprob: -3.550028085708618
    3. 'states' → logprob: -4.925028324127197
    4. '   ' → logprob: -5.050028324127197
    5. '       ' → logprob: -6.050028324127197
    6. '(states' → logprob: -6.175028324127197
    7. ',' → logprob: -7.425028324127197
    8. '<|end|>' → logprob: -7.800028324127197
    9. ')' → logprob: -8.550027847290039
    10. ' if' → logprob: -9.050027847290039

Token 566: '引' (ID: 24371)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.2667025625705719
    2. 'return' → logprob: -1.7667025327682495
    3. ' states' → logprob: -3.016702651977539
    4. '(states' → logprob: -4.891702651977539
    5. ' return' → logprob: -5.266702651977539
    6. '   ' → logprob: -7.891702651977539
    7. 'False' → logprob: -8.266702651977539
    8. '#' → logprob: -8.266702651977539
    9. '(' → logprob: -9.016702651977539
    10. 'pass' → logprob: -9.141702651977539

Token 567: 'き' (ID: 11852)
  Prédit: 'き'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'き' → logprob: -0.0011293789139017463
    2. 'く' → logprob: -8.001129150390625
    3. 'け' → logprob: -8.626129150390625
    4. 'きを' → logprob: -8.751129150390625
    5. '(' → logprob: -9.001129150390625
    6. ')' → logprob: -9.126129150390625
    7. '分' → logprob: -10.126129150390625
    8. '```' → logprob: -10.501129150390625
    9. '-' → logprob: -10.626129150390625
    10. 'か' → logprob: -10.626129150390625

Token 568: '分' (ID: 2957)
  Prédit: 'き'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'き' → logprob: -0.48018690943717957
    2. '分' → logprob: -0.980186939239502
    3. '続' → logprob: -5.730186939239502
    4. 'け' → logprob: -6.980186939239502
    5. 'く' → logprob: -7.355186939239502
    6. '```' → logprob: -7.605186939239502
    7. '-' → logprob: -9.230186462402344
    8. 'score' → logprob: -9.355186462402344
    9. '__' → logprob: -9.480186462402344
    10. 'return' → logprob: -9.480186462402344

Token 569: 'け' (ID: 15707)
  Prédit: 'け'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'け' → logprob: -0.00027897433028556406
    2. '```' → logprob: -9.500279426574707
    3. 'れ' → logprob: -10.125279426574707
    4. 'か' → logprob: -10.375279426574707
    5. '(' → logprob: -10.500279426574707
    6. '``' → logprob: -10.625279426574707
    7. 'く' → logprob: -11.375279426574707
    8. 'と' → logprob: -11.500279426574707
    9. 'げ' → logprob: -11.750279426574707
    10. '-' → logprob: -11.875279426574707

Token 570: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1685742437839508
    2. '           ' → logprob: -2.543574333190918
    3. '<|end|>' → logprob: -3.543574333190918
    4. ' states' → logprob: -3.793574333190918
    5. ')' → logprob: -4.543574333190918
    6. '(states' → logprob: -5.293574333190918
    7. 'states' → logprob: -5.543574333190918
    8. '       ' → logprob: -5.793574333190918
    9. ',' → logprob: -7.918574333190918
    10. '<|end|>' → logprob: -7.918574333190918

Token 571: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22602243721485138
    2. '       ' → logprob: -1.976022481918335
    3. '           ' → logprob: -2.976022481918335
    4. ')' → logprob: -5.226022243499756
    5. '<|end|>' → logprob: -5.351022243499756
    6. ',' → logprob: -8.101022720336914
    7. '    ' → logprob: -8.226022720336914
    8. '(' → logprob: -8.351022720336914
    9. '    
' → logprob: -8.601022720336914
    10. '
' → logprob: -8.726022720336914

Token 572: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2690317630767822
    2. 'return' → logprob: -1.2690317630767822
    3. '   ' → logprob: -2.0190317630767822
    4. ' if' → logprob: -2.2690317630767822
    5. 'states' → logprob: -2.7690317630767822
    6. ' states' → logprob: -2.8940317630767822
    7. ' return' → logprob: -3.3940317630767822
    8. '           ' → logprob: -3.3940317630767822
    9. 'pass' → logprob: -5.019031524658203
    10. ' pass' → logprob: -5.269031524658203

Token 573: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1688677072525024
    2. 'return' → logprob: -1.7938677072525024
    3. '           ' → logprob: -2.168867588043213
    4. 'states' → logprob: -2.168867588043213
    5. ' states' → logprob: -2.418867588043213
    6. '   ' → logprob: -2.418867588043213
    7. ' if' → logprob: -2.543867588043213
    8. ' return' → logprob: -3.418867588043213
    9. '#' → logprob: -5.918867588043213
    10. '```' → logprob: -7.543867588043213

Token 574: 'つまり' (ID: 181067)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.26468217372894287
    2. 'return' → logprob: -1.8896821737289429
    3. 'states' → logprob: -3.2646822929382324
    4. '           ' → logprob: -4.264682292938232
    5. ' if' → logprob: -4.389682292938232
    6. '   ' → logprob: -4.639682292938232
    7. ' return' → logprob: -6.139682292938232
    8. '#' → logprob: -6.139682292938232
    9. ' states' → logprob: -6.514682292938232
    10. '```' → logprob: -8.014681816101074

Token 575: '5' (ID: 20)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11602987349033356
    2. 'return' → logprob: -2.866029977798462
    3. 'states' → logprob: -3.991029977798462
    4. ' if' → logprob: -4.116029739379883
    5. 'diff' → logprob: -4.991029739379883
    6. ' return' → logprob: -5.991029739379883
    7. '(j' → logprob: -6.241029739379883
    8. ' states' → logprob: -6.366029739379883
    9. '(states' → logprob: -6.491029739379883
    10. '#' → logprob: -6.491029739379883

Token 576: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16721485555171967
    2. ',' → logprob: -1.9172148704528809
    3. ' -' → logprob: -5.292214870452881
    4. ' ,' → logprob: -7.167214870452881
    5. '+' → logprob: -7.917214870452881
    6. '==' → logprob: -8.542214393615723
    7. '-,' → logprob: -8.917214393615723
    8. ' ==' → logprob: -9.167214393615723
    9. ' and' → logprob: -10.042214393615723
    10. '<=' → logprob: -10.292214393615723

Token 577: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -2.0100624169572257e-05
    2. ' ' → logprob: -11.500020027160645
    3. '6' → logprob: -12.000020027160645
    4. '4' → logprob: -13.375020027160645
    5. '-' → logprob: -14.500020027160645
    6. '```' → logprob: -15.187520027160645
    7. 'import' → logprob: -15.375020027160645
    8. '(' → logprob: -15.812520027160645
    9. 'j' → logprob: -16.00002098083496
    10. '...' → logprob: -16.31252098083496

Token 578: 'で' (ID: 4344)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6271626949310303
    2. 'states' → logprob: -1.3771626949310303
    3. ' states' → logprob: -2.0021626949310303
    4. 'if' → logprob: -3.5021626949310303
    5. ' if' → logprob: -4.127162933349609
    6. '   ' → logprob: -4.502162933349609
    7. '(states' → logprob: -4.752162933349609
    8. ' and' → logprob: -6.502162933349609
    9. ',' → logprob: -6.502162933349609
    10. ')' → logprob: -6.877162933349609

Token 579: '終了' (ID: 166212)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.6023122668266296
    2. 'return' → logprob: -1.2273123264312744
    3. ' states' → logprob: -2.1023123264312744
    4. ' return' → logprob: -3.3523123264312744
    5. '(states' → logprob: -7.352312088012695
    6. 'False' → logprob: -7.352312088012695
    7. 'True' → logprob: -8.102312088012695
    8. '   ' → logprob: -8.727312088012695
    9. ' True' → logprob: -10.102312088012695
    10. '```' → logprob: -10.102312088012695

Token 580: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41398385167121887
    2. 'states' → logprob: -1.7889838218688965
    3. ' states' → logprob: -1.9139838218688965
    4. '(states' → logprob: -4.5389838218688965
    5. '           ' → logprob: -4.9139838218688965
    6. 'if' → logprob: -6.5389838218688965
    7. '<|end|>' → logprob: -6.7889838218688965
    8. ' if' → logprob: -6.9139838218688965
    9. ')' → logprob: -7.2889838218688965
    10. '       ' → logprob: -7.5389838218688965

Token 581: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5969510674476624
    2. '           ' → logprob: -0.9719510674476624
    3. '       ' → logprob: -2.7219510078430176
    4. ' states' → logprob: -5.846951007843018
    5. 'states' → logprob: -6.346951007843018
    6. '(states' → logprob: -8.346951484680176
    7. ')' → logprob: -8.846951484680176
    8. '<|end|>' → logprob: -9.471951484680176
    9. 'return' → logprob: -10.096951484680176
    10. '```' → logprob: -10.096951484680176

Token 582: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011155110783874989
    2. ' if' → logprob: -5.261155128479004
    3. '           ' → logprob: -6.011155128479004
    4. '       ' → logprob: -6.261155128479004
    5. '   ' → logprob: -6.886155128479004
    6. 'return' → logprob: -7.636155128479004
    7. '	if' → logprob: -10.886155128479004
    8. 'states' → logprob: -11.261155128479004
    9. ' return' → logprob: -13.386155128479004
    10. ' ' → logprob: -13.386155128479004

Token 583: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.08056831359863281
    2. ' j' → logprob: -2.580568313598633
    3. '(j' → logprob: -6.705568313598633
    4. ' (' → logprob: -7.955568313598633
    5. '(' → logprob: -9.705568313598633
    6. '   ' → logprob: -11.080568313598633
    7. ' ' → logprob: -11.705568313598633
    8. 'max' → logprob: -11.830568313598633
    9. '	j' → logprob: -13.205568313598633
    10. ' max' → logprob: -13.330568313598633

Token 584: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5233518481254578
    2. ' ==' → logprob: -0.8983518481254578
    3. '>=' → logprob: -8.773351669311523
    4. ' >=' → logprob: -9.898351669311523
    5. '+' → logprob: -12.398351669311523
    6. ' ' → logprob: -12.398351669311523
    7. '=' → logprob: -12.523351669311523
    8. ')==' → logprob: -13.023351669311523
    9. ']==' → logprob: -13.148351669311523
    10. '==
' → logprob: -13.398351669311523

Token 585: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0006235609762370586
    2. ' ' → logprob: -7.50062370300293
    3. 'y' → logprob: -10.00062370300293
    4. '4' → logprob: -11.12562370300293
    5. ' y' → logprob: -11.50062370300293
    6. '   ' → logprob: -15.87562370300293
    7. '  ' → logprob: -16.75062370300293
    8. '５' → logprob: -17.43812370300293
    9. 'j' → logprob: -17.81312370300293
    10. '<|end|>' → logprob: -17.87562370300293

Token 586: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0008491750340908766
    2. '4' → logprob: -7.12584924697876
    3. 'y' → logprob: -10.125848770141602
    4. ' ' → logprob: -12.500848770141602
    5. ' y' → logprob: -14.250848770141602
    6. 'j' → logprob: -16.1258487701416
    7. '５' → logprob: -16.1258487701416
    8. '6' → logprob: -17.1258487701416
    9. '۵' → logprob: -18.2508487701416
    10. '  ' → logprob: -18.5633487701416

Token 587: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03804183006286621
    2. 'and' → logprob: -3.288041830062866
    3. ' ' → logprob: -15.788042068481445
    4. ' и' → logprob: -16.288042068481445
    5. '```' → logprob: -17.038042068481445
    6. '           ' → logprob: -17.163042068481445
    7. '   ' → logprob: -17.163042068481445
    8. 'そして' → logprob: -17.288042068481445
    9. '和' → logprob: -17.788042068481445
    10. ',' → logprob: -17.788042068481445

Token 588: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.31492745876312256
    2. 'y' → logprob: -1.3149274587631226
    3. '5' → logprob: -6.439927577972412
    4. ' ' → logprob: -9.689927101135254
    5. '   ' → logprob: -12.439927101135254
    6. 'j' → logprob: -14.814927101135254
    7. '    ' → logprob: -14.939927101135254
    8. '           ' → logprob: -15.064927101135254
    9. '  ' → logprob: -15.189927101135254
    10. '	y' → logprob: -15.564927101135254

Token 589: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.38734227418899536
    2. '==' → logprob: -1.1373422145843506
    3. '5' → logprob: -8.38734245300293
    4. ' ' → logprob: -9.38734245300293
    5. ']==' → logprob: -10.26234245300293
    6. '=' → logprob: -10.26234245300293
    7. '<|end|>' → logprob: -10.51234245300293
    8. ')==' → logprob: -10.63734245300293
    9. '[' → logprob: -11.63734245300293
    10. ')' → logprob: -12.26234245300293

Token 590: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0006280870293267071
    2. ' ' → logprob: -7.3756279945373535
    3. '<|end|>' → logprob: -14.375628471374512
    4. '[' → logprob: -15.625628471374512
    5. '```' → logprob: -16.000627517700195
    6. '...' → logprob: -16.375627517700195
    7. '５' → logprob: -16.438127517700195
    8. '۵' → logprob: -16.625627517700195
    9. '५' → logprob: -17.000627517700195
    10. ' five' → logprob: -17.000627517700195

Token 591: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.4378848391061183e-05
    2. ' ' → logprob: -11.250014305114746
    3. '4' → logprob: -15.250014305114746
    4. '<|end|>' → logprob: -15.625014305114746
    5. '...' → logprob: -15.812514305114746
    6. '５' → logprob: -16.375015258789062
    7. '[' → logprob: -16.500015258789062
    8. '۵' → logprob: -16.687515258789062
    9. '```' → logprob: -17.000015258789062
    10. 'j' → logprob: -17.000015258789062

Token 592: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18770831823349
    2. ':
' → logprob: -2.1877083778381348
    3. '       ' → logprob: -2.9377083778381348
    4. ':return' → logprob: -6.062708377838135
    5. ' and' → logprob: -6.312708377838135
    6. '           ' → logprob: -6.937708377838135
    7. '               ' → logprob: -8.562707901000977
    8. '):
' → logprob: -8.562707901000977
    9. '):' → logprob: -8.812707901000977
    10. ',' → logprob: -8.937707901000977

Token 593: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014300311915576458
    2. '               ' → logprob: -4.764300346374512
    3. '           ' → logprob: -5.389300346374512
    4. 'return' → logprob: -7.264300346374512
    5. ' return' → logprob: -8.139300346374512
    6. ':return' → logprob: -10.639300346374512
    7. ',' → logprob: -10.889300346374512
    8. '
' → logprob: -11.264300346374512
    9. '   ' → logprob: -11.389300346374512
    10. ':
' → logprob: -11.514300346374512

Token 594: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.019919339567422867
    2. ' return' → logprob: -4.394919395446777
    3. '           ' → logprob: -5.519919395446777
    4. '       ' → logprob: -6.269919395446777
    5. '   ' → logprob: -6.644919395446777
    6. '               ' → logprob: -9.144919395446777
    7. '	return' → logprob: -9.644919395446777
    8. ' ' → logprob: -12.269919395446777
    9. 'pass' → logprob: -12.894919395446777
    10. '                   ' → logprob: -13.394919395446777

Token 595: ' []
' (ID: 8911)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.1608944833278656
    2. '[]' → logprob: -1.910894513130188
    3. '[(' → logprob: -7.785894393920898
    4. ' states' → logprob: -8.410894393920898
    5. '[' → logprob: -11.285894393920898
    6. ' []' → logprob: -12.285894393920898
    7. '(states' → logprob: -12.285894393920898
    8. '[]}' → logprob: -12.910894393920898
    9. '[]
' → logprob: -13.410894393920898
    10. '[])' → logprob: -13.535894393920898

Token 596: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013483305228874087
    2. ')' → logprob: -7.251348495483398
    3. ' states' → logprob: -8.501348495483398
    4. '	return' → logprob: -9.001348495483398
    5. '       ' → logprob: -9.376348495483398
    6. '.' → logprob: -9.626348495483398
    7. '<|end|>' → logprob: -9.876348495483398
    8. 'states' → logprob: -10.626348495483398
    9. ',' → logprob: -11.626348495483398
    10. '    
' → logprob: -11.626348495483398

Token 597: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17549581825733185
    2. ' states' → logprob: -2.5504958629608154
    3. 'states' → logprob: -2.5504958629608154
    4. '           ' → logprob: -6.050495624542236
    5. '       ' → logprob: -6.425495624542236
    6. '(states' → logprob: -7.425495624542236
    7. ')' → logprob: -9.550496101379395
    8. '.states' → logprob: -10.175496101379395
    9. 'return' → logprob: -10.300496101379395
    10. '               ' → logprob: -10.675496101379395

Token 598: ' ' (ID: 220)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.6889727115631104
    2. '   ' → logprob: -0.9389727115631104
    3. 'states' → logprob: -2.3139727115631104
    4. '(states' → logprob: -6.063972473144531
    5. 'j' → logprob: -7.188972473144531
    6. ' return' → logprob: -7.438972473144531
    7. ' j' → logprob: -7.563972473144531
    8. 'return' → logprob: -7.688972473144531
    9. '           ' → logprob: -7.813972473144531
    10. '    ' → logprob: -7.938972473144531

Token 599: 'それ' (ID: 47334)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.1395353227853775
    2. '   ' → logprob: -2.514535427093506
    3. ' states' → logprob: -3.514535427093506
    4. 'return' → logprob: -4.514535427093506
    5. '           ' → logprob: -5.389535427093506
    6. '(states' → logprob: -6.389535427093506
    7. '       ' → logprob: -7.764535427093506
    8. 'if' → logprob: -7.889535427093506
    9. '               ' → logprob: -7.889535427093506
    10. ' return' → logprob: -8.139534950256348

Token 600: '以' (ID: 5924)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7179593443870544
    2. 'states' → logprob: -1.0929594039916992
    3. ' states' → logprob: -2.342959403991699
    4. '.append' → logprob: -2.717959403991699
    5. '           ' → logprob: -5.342959403991699
    6. 'else' → logprob: -5.467959403991699
    7. '(states' → logprob: -6.592959403991699
    8. '
' → logprob: -6.717959403991699
    9. '.states' → logprob: -7.217959403991699
    10. 'append' → logprob: -7.342959403991699

Token 601: '外' (ID: 10727)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9128462076187134
    2. '           ' → logprob: -1.1628462076187134
    3. '+' → logprob: -2.662846088409424
    4. '
' → logprob: -2.787846088409424
    5. 'return' → logprob: -3.537846088409424
    6. '```' → logprob: -3.662846088409424
    7. 'elif' → logprob: -3.787846088409424
    8. '       ' → logprob: -3.912846088409424
    9. '               ' → logprob: -4.787846088409424
    10. 'else' → logprob: -4.912846088409424

Token 602: 'は' (ID: 5205)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8096262216567993
    2. ' states' → logprob: -1.5596262216567993
    3. '           ' → logprob: -1.6846262216567993
    4. 'states' → logprob: -2.6846261024475098
    5. '   ' → logprob: -3.1846261024475098
    6. ' if' → logprob: -3.8096261024475098
    7. '       ' → logprob: -4.68462610244751
    8. 'if' → logprob: -4.68462610244751
    9. '(states' → logprob: -4.80962610244751
    10. '.states' → logprob: -8.559626579284668

Token 603: '�' (ID: 624)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.5565214157104492
    2. ' states' → logprob: -0.9315214157104492
    3. '   ' → logprob: -4.056521415710449
    4. '               ' → logprob: -4.306521415710449
    5. '(states' → logprob: -6.431521415710449
    6. 'if' → logprob: -8.93152141571045
    7. '           ' → logprob: -9.05652141571045
    8. ' if' → logprob: -9.18152141571045
    9. '_states' → logprob: -11.05652141571045
    10. '       ' → logprob: -11.05652141571045

Token 604: '�' (ID: 94)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.4654026925563812
    2. 'states' → logprob: -1.9654027223587036
    3. '.append' → logprob: -2.090402603149414
    4. '(states' → logprob: -2.965402603149414
    5. '           ' → logprob: -3.590402603149414
    6. '   ' → logprob: -5.215402603149414
    7. '[(' → logprob: -5.340402603149414
    8. 'return' → logprob: -5.715402603149414
    9. '(' → logprob: -5.840402603149414
    10. '[
' → logprob: -6.215402603149414

Token 605: '方' (ID: 4983)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.31749001145362854
    2. ' states' → logprob: -1.9424899816513062
    3. '           ' → logprob: -3.3174901008605957
    4. '               ' → logprob: -3.4424901008605957
    5. '(states' → logprob: -3.5674901008605957
    6. '   ' → logprob: -3.8174901008605957
    7. 'return' → logprob: -5.942490100860596
    8. '.append' → logprob: -6.192490100860596
    9. '```' → logprob: -6.317490100860596
    10. 'append' → logprob: -7.067490100860596

Token 606: '加' (ID: 9116)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.41930481791496277
    2. 'states' → logprob: -2.169304847717285
    3. 'append' → logprob: -2.919304847717285
    4. '(states' → logprob: -3.294304847717285
    5. 'if' → logprob: -3.419304847717285
    6. '           ' → logprob: -3.544304847717285
    7. '   ' → logprob: -3.669304847717285
    8. ' states' → logprob: -3.919304847717285
    9. '(' → logprob: -4.919304847717285
    10. '               ' → logprob: -5.419304847717285

Token 607: '点' (ID: 8300)
  Prédit: 'え'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'え' → logprob: -0.4122074246406555
    2. 'える' → logprob: -1.7872073650360107
    3. 'わ' → logprob: -3.2872073650360107
    4. 'ぜ' → logprob: -3.7872073650360107
    5. 'わせ' → logprob: -4.28720760345459
    6. '(' → logprob: -4.41220760345459
    7. 'す' → logprob: -4.66220760345459
    8. 'る' → logprob: -4.66220760345459
    9. 'った' → logprob: -5.16220760345459
    10. '算' → logprob: -5.41220760345459

Token 608: '可能' (ID: 42043)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.039298415184021
    2. '           ' → logprob: -1.164298415184021
    3. '(states' → logprob: -2.0392985343933105
    4. '               ' → logprob: -2.9142985343933105
    5. 'states' → logprob: -3.1642985343933105
    6. '   ' → logprob: -3.4142985343933105
    7. '(j' → logprob: -4.0392985343933105
    8. ' states' → logprob: -4.1642985343933105
    9. '(' → logprob: -4.6642985343933105
    10. '                   ' → logprob: -5.1642985343933105

Token 609: '（' (ID: 3603)
  Prédit: '(states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(states' → logprob: -0.44437405467033386
    2. '.append' → logprob: -2.1943740844726562
    3. 'states' → logprob: -2.4443740844726562
    4. '(j' → logprob: -3.0693740844726562
    5. ' states' → logprob: -3.0693740844726562
    6. '           ' → logprob: -3.5693740844726562
    7. '   ' → logprob: -3.9443740844726562
    8. ' (' → logprob: -4.819374084472656
    9. '               ' → logprob: -5.319374084472656
    10. '[(' → logprob: -6.069374084472656

Token 610: '理' (ID: 5584)
  Prédit: '(states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(states' → logprob: -0.834380567073822
    2. 'states' → logprob: -1.3343806266784668
    3. ' states' → logprob: -1.5843806266784668
    4. '(j' → logprob: -3.209380626678467
    5. ' (' → logprob: -4.459380626678467
    6. '   ' → logprob: -4.459380626678467
    7. '(' → logprob: -4.459380626678467
    8. '.append' → logprob: -5.209380626678467
    9. '[(' → logprob: -5.584380626678467
    10. ')' → logprob: -5.709380626678467

Token 611: '論' (ID: 46429)
  Prédit: '解'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '解' → logprob: -0.6200070977210999
    2. 'j' → logprob: -1.245007038116455
    3. '論' → logprob: -2.620007038116455
    4. '想' → logprob: -3.495007038116455
    5. '由' → logprob: -3.745007038116455
    6. 'じ' → logprob: -4.495007038116455
    7. '```' → logprob: -4.745007038116455
    8. '[j' → logprob: -5.495007038116455
    9. ' j' → logprob: -5.745007038116455
    10. ')' → logprob: -6.120007038116455

Token 612: '上' (ID: 4286)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.017979485914111137
    2. 'append' → logprob: -4.142979621887207
    3. ')' → logprob: -7.517979621887207
    4. ' append' → logprob: -7.892979621887207
    5. '）' → logprob: -8.642979621887207
    6. '(j' → logprob: -8.892979621887207
    7. 'じ' → logprob: -9.642979621887207
    8. 'として' → logprob: -9.892979621887207
    9. '続' → logprob: -10.017979621887207
    10. 'に' → logprob: -10.017979621887207

Token 613: 'ない' (ID: 47592)
  Prédit: '(states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(states' → logprob: -0.732596218585968
    2. 'states' → logprob: -1.9825961589813232
    3. '(j' → logprob: -2.1075961589813232
    4. ')' → logprob: -2.7325961589813232
    5. ' states' → logprob: -3.2325961589813232
    6. '(' → logprob: -3.6075961589813232
    7. '.append' → logprob: -3.7325961589813232
    8. '               ' → logprob: -3.8575961589813232
    9. ' (' → logprob: -4.232596397399902
    10. '）' → logprob: -4.482596397399902

Token 614: 'が' (ID: 6632)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24351008236408234
    2. '）' → logprob: -1.743510127067566
    3. ')
' → logprob: -4.8685102462768555
    4. ' ' → logprob: -5.6185102462768555
    5. '   ' → logprob: -5.7435102462768555
    6. ',' → logprob: -5.7435102462768555
    7. ' states' → logprob: -6.1185102462768555
    8. '）
' → logprob: -6.1185102462768555
    9. '(j' → logprob: -6.2435102462768555
    10. ' )' → logprob: -6.2435102462768555

Token 615: '念' (ID: 41276)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.48340746760368347
    2. 'states' → logprob: -1.1084074974060059
    3. '   ' → logprob: -3.108407497406006
    4. '(states' → logprob: -5.483407497406006
    5. '               ' → logprob: -6.233407497406006
    6. '           ' → logprob: -6.983407497406006
    7. ')' → logprob: -7.358407497406006
    8. 'return' → logprob: -8.733407020568848
    9. '       ' → logprob: -8.983407020568848
    10. '.states' → logprob: -9.233407020568848

Token 616: 'の' (ID: 3385)
  Prédit: 'じ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'じ' → logprob: -0.4884249269962311
    2. '           ' → logprob: -1.4884248971939087
    3. '外' → logprob: -2.4884250164031982
    4. '       ' → logprob: -3.9884250164031982
    5. '```' → logprob: -4.113424777984619
    6. '               ' → logprob: -4.863424777984619
    7. '.append' → logprob: -5.238424777984619
    8. '続' → logprob: -5.863424777984619
    9. '   ' → logprob: -5.988424777984619
    10. '          ' → logprob: -6.113424777984619

Token 617: 'ため' (ID: 103912)
  Prédit: 'ため'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ため' → logprob: -0.0781245082616806
    2. 'の' → logprob: -2.703124523162842
    3. '為' → logprob: -5.203124523162842
    4. 'for' → logprob: -6.453124523162842
    5. '念' → logprob: -7.703124523162842
    6. 'なし' → logprob: -8.828124046325684
    7. 'い' → logprob: -9.828124046325684
    8. 'す' → logprob: -9.953124046325684
    9. '```' → logprob: -10.203124046325684
    10. '#' → logprob: -10.703124046325684

Token 618: '）
' (ID: 18433)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.8849462866783142
    2. '   ' → logprob: -1.759946346282959
    3. 'states' → logprob: -1.759946346282959
    4. '           ' → logprob: -2.134946346282959
    5. '               ' → logprob: -2.259946346282959
    6. '(states' → logprob: -4.884946346282959
    7. '       ' → logprob: -5.134946346282959
    8. ')' → logprob: -5.884946346282959
    9. '.states' → logprob: -6.509946346282959
    10. '_states' → logprob: -7.509946346282959

Token 619: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1631288528442383
    2. '       ' → logprob: -1.2881288528442383
    3. '   ' → logprob: -1.4131288528442383
    4. '(states' → logprob: -2.5381288528442383
    5. '               ' → logprob: -3.0381288528442383
    6. ' states' → logprob: -3.5381288528442383
    7. 'states' → logprob: -4.538128852844238
    8. '.append' → logprob: -7.913128852844238
    9. ' (' → logprob: -8.163128852844238
    10. '.states' → logprob: -8.663128852844238

Token 620: ' states' (ID: 9407)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' (adapté à ' states') → logprob: -0.5792966485023499
    2. ' states' → logprob: -1.079296588897705
    3. '   ' → logprob: -2.329296588897705
    4. '(states' → logprob: -6.204296588897705
    5. '               ' → logprob: -8.579297065734863
    6. '           ' → logprob: -9.079297065734863
    7. '.states' → logprob: -9.579297065734863
    8. '_states' → logprob: -10.079297065734863
    9. 'if' → logprob: -10.454297065734863
    10. '       ' → logprob: -11.579297065734863

Token 621: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.002522626891732216
    2. '.' → logprob: -6.0025224685668945
    3. '.extend' → logprob: -10.127522468566895
    4. '.app' → logprob: -12.377522468566895
    5. ' .' → logprob: -13.377522468566895
    6. 'append' → logprob: -15.002522468566895
    7. '.ap' → logprob: -15.377522468566895
    8. '．' → logprob: -15.752522468566895
    9. '.add' → logprob: -16.12752342224121
    10. ').' → logprob: -16.12752342224121

Token 622: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -14.375001907348633
    3. ' ((' → logprob: -14.500001907348633
    4. '(j' → logprob: -14.875001907348633
    5. ' ' → logprob: -18.500001907348633
    6. '[(' → logprob: -18.500001907348633
    7. ' (' → logprob: -19.625001907348633
    8. '   ' → logprob: -19.625001907348633
    9. '(
' → logprob: -21.375001907348633
    10. '  ' → logprob: -21.500001907348633

Token 623: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.026716381311416626
    2. '(j' → logprob: -3.651716470718384
    3. ' j' → logprob: -7.901716232299805
    4. ' (' → logprob: -10.151716232299805
    5. ',j' → logprob: -12.901716232299805
    6. '	j' → logprob: -13.776716232299805
    7. '[j' → logprob: -13.776716232299805
    8. '(' → logprob: -13.901716232299805
    9. '   ' → logprob: -14.526716232299805
    10. ' ' → logprob: -16.026716232299805

Token 624: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0021377671509981155
    2. ' +' → logprob: -6.252137660980225
    3. ',' → logprob: -8.502138137817383
    4. ' ,' → logprob: -13.877138137817383
    5. ',j' → logprob: -13.877138137817383
    6. '＋' → logprob: -14.002138137817383
    7. ' ' → logprob: -14.127138137817383
    8. '+,' → logprob: -14.127138137817383
    9. '+j' → logprob: -14.502138137817383
    10. '1' → logprob: -15.002138137817383

Token 625: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.727905979962088e-05
    2. ' ' → logprob: -10.00004768371582
    3. '   ' → logprob: -14.00004768371582
    4. ',' → logprob: -14.75004768371582
    5. '```' → logprob: -15.50004768371582
    6. '１' → logprob: -16.37504768371582
    7. '  ' → logprob: -16.56254768371582
    8. '2' → logprob: -17.00004768371582
    9. '0' → logprob: -17.25004768371582
    10. '
' → logprob: -17.81254768371582

Token 626: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002509687910787761
    2. ' ,' → logprob: -8.375250816345215
    3. ',y' → logprob: -10.875250816345215
    4. ' y' → logprob: -14.875250816345215
    5. ',j' → logprob: -15.000250816345215
    6. 'y' → logprob: -15.625250816345215
    7. ',
' → logprob: -15.875250816345215
    8. ' ' → logprob: -16.25025177001953
    9. '‌,' → logprob: -16.50025177001953
    10. '),' → logprob: -16.62525177001953

Token 627: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.11282464116811752
    2. 'y' → logprob: -2.2378246784210205
    3. '	y' → logprob: -13.612824440002441
    4. ' ' → logprob: -15.112824440002441
    5. '   ' → logprob: -15.362824440002441
    6. ',y' → logprob: -15.612824440002441
    7. '    ' → logprob: -16.362825393676758
    8. '  ' → logprob: -16.362825393676758
    9. ',' → logprob: -16.487825393676758
    10. '(y' → logprob: -16.862825393676758

Token 628: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.388769103679806e-05
    2. ' ,' → logprob: -9.375093460083008
    3. ','' → logprob: -11.875093460083008
    4. '   ' → logprob: -14.500093460083008
    5. '',' → logprob: -14.625093460083008
    6. ''' → logprob: -15.250093460083008
    7. '),' → logprob: -15.500093460083008
    8. ')' → logprob: -15.750093460083008
    9. ' ' → logprob: -16.500093460083008
    10. ' ,'' → logprob: -16.750093460083008

Token 629: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.5760549306869507
    2. ' '' → logprob: -0.8260549306869507
    3. ''' → logprob: -9.326054573059082
    4. 'A' → logprob: -11.326054573059082
    5. ' A' → logprob: -11.701054573059082
    6. '"A' → logprob: -13.201054573059082
    7. ' ' → logprob: -13.326054573059082
    8. '’A' → logprob: -13.576054573059082
    9. ''C' → logprob: -15.076054573059082
    10. ' ' → logprob: -15.326054573059082

Token 630: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0005033504567109048
    2. ''A' → logprob: -7.6255035400390625
    3. ' A' → logprob: -11.375503540039062
    4. ''' → logprob: -13.125503540039062
    5. '"A' → logprob: -14.750503540039062
    6. '  ' → logprob: -15.500503540039062
    7. ')' → logprob: -15.625503540039062
    8. ' '' → logprob: -15.625503540039062
    9. '	A' → logprob: -15.625503540039062
    10. ' ' → logprob: -15.750503540039062

Token 631: ''))
' (ID: 15277)
  Prédit: ''))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.05317632108926773
    2. ''))
' → logprob: -3.0531764030456543
    3. '))' → logprob: -5.428176403045654
    4. ')' → logprob: -9.053175926208496
    5. '))
' → logprob: -10.053175926208496
    6. ''))
' → logprob: -11.428175926208496
    7. ''))

' → logprob: -12.178175926208496
    8. '')' → logprob: -12.303175926208496
    9. ''' → logprob: -12.803175926208496
    10. '"))' → logprob: -13.678175926208496

Token 632: '           ' (ID: 352)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.35892894864082336
    2. 'states' → logprob: -1.358928918838501
    3. '(states' → logprob: -3.358928918838501
    4. ')' → logprob: -5.48392915725708
    5. '   ' → logprob: -5.85892915725708
    6. ',' → logprob: -6.98392915725708
    7. '.states' → logprob: -7.10892915725708
    8. '           ' → logprob: -7.98392915725708
    9. '_states' → logprob: -8.233928680419922
    10. 'States' → logprob: -9.108928680419922

Token 633: ' states' (ID: 9407)
  Prédit: ' states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.6984357833862305
    2. 'states' (adapté à ' states') → logprob: -0.6984357833862305
    3. '(states' → logprob: -5.3234357833862305
    4. '           ' → logprob: -8.94843578338623
    5. ' (' → logprob: -9.82343578338623
    6. '_states' → logprob: -9.94843578338623
    7. 'States' → logprob: -9.94843578338623
    8. '   ' → logprob: -10.32343578338623
    9. '.states' → logprob: -10.69843578338623
    10. '(' → logprob: -11.07343578338623

Token 634: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.07093190401792526
    2. ',' → logprob: -2.820931911468506
    3. '+' → logprob: -5.195931911468506
    4. '.' → logprob: -6.070931911468506
    5. 'append' → logprob: -6.945931911468506
    6. '+,' → logprob: -10.195931434631348
    7. ' ,' → logprob: -10.320931434631348
    8. ' .' → logprob: -11.320931434631348
    9. '+.' → logprob: -11.320931434631348
    10. ',.' → logprob: -12.570931434631348

Token 635: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -9.849109119386412e-06
    2. ' ((' → logprob: -12.250009536743164
    3. '(j' → logprob: -12.875009536743164
    4. '(' → logprob: -13.000009536743164
    5. '(
' → logprob: -17.125009536743164
    6. ' (' → logprob: -17.250009536743164
    7. ',' → logprob: -17.375009536743164
    8. ' ' → logprob: -17.625009536743164
    9. '```' → logprob: -17.875009536743164
    10. '[(' → logprob: -18.000009536743164

Token 636: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0004071971052326262
    2. '(j' → logprob: -8.125407218933105
    3. ' j' → logprob: -9.125407218933105
    4. ' (' → logprob: -13.750407218933105
    5. '(' → logprob: -14.250407218933105
    6. '[j' → logprob: -15.750407218933105
    7. '	j' → logprob: -16.00040626525879
    8. '   ' → logprob: -16.62540626525879
    9. '0' → logprob: -17.00040626525879
    10. '```' → logprob: -17.00040626525879

Token 637: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.686778503237292e-05
    2. ' ,' → logprob: -9.625097274780273
    3. ',y' → logprob: -11.250097274780273
    4. ',j' → logprob: -11.375097274780273
    5. '+' → logprob: -12.375097274780273
    6. '-' → logprob: -14.125097274780273
    7. '```' → logprob: -15.250097274780273
    8. ' ' → logprob: -15.250097274780273
    9. 'j' → logprob: -15.750097274780273
    10. '，' → logprob: -16.250097274780273

Token 638: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.12692873179912567
    2. 'y' → logprob: -2.1269288063049316
    3. ' ' → logprob: -14.876928329467773
    4. ' ' → logprob: -16.126928329467773
    5. '(y' → logprob: -16.876928329467773
    6. '	y' → logprob: -17.001928329467773
    7. ')' → logprob: -17.876928329467773
    8. ''y' → logprob: -18.001928329467773
    9. ',' → logprob: -18.001928329467773
    10. 'x' → logprob: -18.376928329467773

Token 639: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0206720617134124e-05
    2. ' +' → logprob: -11.87501049041748
    3. '+y' → logprob: -13.25001049041748
    4. 'y' → logprob: -14.25001049041748
    5. '＋' → logprob: -14.62501049041748
    6. '[' → logprob: -16.125009536743164
    7. ' y' → logprob: -16.500009536743164
    8. '1' → logprob: -16.750009536743164
    9. ',' → logprob: -17.125009536743164
    10. '   ' → logprob: -17.375009536743164

Token 640: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.8590300139039755e-05
    2. '+' → logprob: -10.500048637390137
    3. ' ' → logprob: -11.375048637390137
    4. 'y' → logprob: -11.625048637390137
    5. ' y' → logprob: -15.250048637390137
    6. '```' → logprob: -16.62504768371582
    7. '5' → logprob: -16.87504768371582
    8. '   ' → logprob: -16.87504768371582
    9. '
' → logprob: -17.25004768371582
    10. ' +' → logprob: -17.68754768371582

Token 641: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027420982951298356
    2. ' ,' → logprob: -8.250274658203125
    3. ','' → logprob: -12.000274658203125
    4. '))' → logprob: -12.375274658203125
    5. '',' → logprob: -13.875274658203125
    6. ''' → logprob: -15.000274658203125
    7. '   ' → logprob: -15.000274658203125
    8. '(' → logprob: -15.750274658203125
    9. ' ,'' → logprob: -15.750274658203125
    10. '('' → logprob: -15.875274658203125

Token 642: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16027134656906128
    2. ' '' → logprob: -1.910271406173706
    3. ' B' → logprob: -11.410271644592285
    4. ' ' → logprob: -11.535271644592285
    5. ''y' → logprob: -11.660271644592285
    6. 'B' → logprob: -11.785271644592285
    7. '   ' → logprob: -13.410271644592285
    8. ''S' → logprob: -13.660271644592285
    9. ')' → logprob: -13.785271644592285
    10. '  ' → logprob: -14.160271644592285

Token 643: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00015538577281404287
    2. ''' → logprob: -9.000155448913574
    3. ' B' → logprob: -10.375155448913574
    4. '"B' → logprob: -15.250155448913574
    5. ')' → logprob: -15.750155448913574
    6. ' '' → logprob: -16.125154495239258
    7. '')' → logprob: -16.250154495239258
    8. ' ' → logprob: -16.875154495239258
    9. '	B' → logprob: -17.125154495239258
    10. '  ' → logprob: -17.125154495239258

Token 644: ''))
' (ID: 15277)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004782069008797407
    2. '))
' → logprob: -5.754782199859619
    3. ''))' → logprob: -6.504782199859619
    4. ')' → logprob: -10.004781723022461
    5. ' ))' → logprob: -10.504781723022461
    6. ''))
' → logprob: -10.629781723022461
    7. '))
' → logprob: -12.629781723022461
    8. '   ' → logprob: -13.004781723022461
    9. '"))' → logprob: -13.129781723022461
    10. '))

' → logprob: -14.004781723022461

Token 645: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030344266444444656
    2. 'return' → logprob: -3.530344247817993
    3. ' return' → logprob: -7.780344486236572
    4. '	return' → logprob: -8.655344009399414
    5. ':return' → logprob: -14.405344009399414
    6. ')return' → logprob: -15.280344009399414
    7. '   ' → logprob: -15.530344009399414
    8. '       ' → logprob: -15.655344009399414
    9. '    
' → logprob: -16.155344009399414
    10. ' ' → logprob: -16.405344009399414

Token 646: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027562035247683525
    2. '	return' → logprob: -4.152562141418457
    3. ' return' → logprob: -4.652562141418457
    4. 'return' (adapté à ' return') → logprob: -6.277562141418457
    5. '
' → logprob: -11.902562141418457
    6. ')' → logprob: -11.902562141418457
    7. ':return' → logprob: -11.902562141418457
    8. '    
' → logprob: -12.277562141418457
    9. ' ' → logprob: -12.277562141418457
    10. '```' → logprob: -12.777562141418457

Token 647: ' states' (ID: 9407)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.0009130131802521646
    2. ' states' → logprob: -7.000913143157959
    3. '(states' → logprob: -13.6259126663208
    4. 'state' → logprob: -15.5009126663208
    5. '.states' → logprob: -16.875913619995117
    6. 'States' → logprob: -18.000913619995117
    7. '_states' → logprob: -18.625913619995117
    8. 'spaces' → logprob: -18.875913619995117
    9. 'stats' → logprob: -19.375913619995117
    10. '[' → logprob: -19.625913619995117

Token 648: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 649: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23306913673877716
    2. ')' → logprob: -2.6080691814422607
    3. ' states' → logprob: -2.9830691814422607
    4. '<|end|>' → logprob: -4.233068943023682
    5. ' ' → logprob: -4.858068943023682
    6. ':' → logprob: -4.983068943023682
    7. '#' → logprob: -5.233068943023682
    8. ',' → logprob: -5.233068943023682
    9. 'states' → logprob: -5.233068943023682
    10. '[' → logprob: -5.358068943023682

Token 650: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05630354955792427
    2. ' states' → logprob: -3.4313035011291504
    3. 'states' → logprob: -4.05630350112915
    4. 'j' → logprob: -6.18130350112915
    5. '       ' → logprob: -7.05630350112915
    6. '(states' → logprob: -7.68130350112915
    7. ')' → logprob: -8.181303977966309
    8. '    
' → logprob: -8.556303977966309
    9. 'else' → logprob: -9.056303977966309
    10. 'for' → logprob: -9.056303977966309

Token 651: ' 通' (ID: 52461)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.5488107204437256
    2. ' states' → logprob: -1.5488107204437256
    3. '   ' → logprob: -1.6738107204437256
    4. 'j' → logprob: -3.9238107204437256
    5. ' j' → logprob: -7.048810958862305
    6. 'for' → logprob: -7.798810958862305
    7. '(states' → logprob: -7.923810958862305
    8. '[j' → logprob: -8.423810958862305
    9. '[' → logprob: -9.173810958862305
    10. '```' → logprob: -9.173810958862305

Token 652: '常' (ID: 17731)
  Prédit: '常'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '常' → logprob: -0.011909529566764832
    2. '   ' → logprob: -4.761909484863281
    3. '```' → logprob: -7.261909484863281
    4. '#' → logprob: -7.636909484863281
    5. 'じ' → logprob: -7.761909484863281
    6. 'u' → logprob: -8.386909484863281
    7. 'states' → logprob: -8.386909484863281
    8. '用' → logprob: -8.511909484863281
    9. ' 常' → logprob: -9.011909484863281
    10. '続きを' → logprob: -9.386909484863281

Token 653: 'ル' (ID: 7052)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.5076305270195007
    2. '   ' → logprob: -1.6326305866241455
    3. 'states' → logprob: -1.7576305866241455
    4. '(states' → logprob: -4.007630348205566
    5. 'if' → logprob: -5.882630348205566
    6. '_states' → logprob: -6.132630348205566
    7. ':' → logprob: -7.007630348205566
    8. ' if' → logprob: -7.007630348205566
    9. ' (' → logprob: -7.132630348205566
    10. '    
' → logprob: -7.507630348205566

Token 654: 'ール' (ID: 27160)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.2605743408203125
    2. ' states' → logprob: -2.0105743408203125
    3. 'turn' → logprob: -4.0105743408203125
    4. '   ' → logprob: -4.1355743408203125
    5. '_states' → logprob: -4.2605743408203125
    6. 'ープ' → logprob: -4.5105743408203125
    7. 'def' → logprob: -4.7605743408203125
    8. 'eturn' → logprob: -5.5105743408203125
    9. 'ート' → logprob: -5.6355743408203125
    10. '状態' → logprob: -6.2605743408203125

Token 655: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13658685982227325
    2. ' states' → logprob: -2.261586904525757
    3. 'states' → logprob: -4.011586666107178
    4. '(states' → logprob: -5.636586666107178
    5. '.append' → logprob: -6.511586666107178
    6. '.states' → logprob: -9.386587142944336
    7. '.' → logprob: -9.886587142944336
    8. '_states' → logprob: -10.386587142944336
    9. '    
' → logprob: -10.511587142944336
    10. '
' → logprob: -10.636587142944336

Token 656: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1290988028049469
    2. ' states' → logprob: -2.379098892211914
    3. 'states' → logprob: -3.629098892211914
    4. '(states' → logprob: -6.504098892211914
    5. '
' → logprob: -8.754098892211914
    6. '_states' → logprob: -9.754098892211914
    7. ' if' → logprob: -9.879098892211914
    8. '.states' → logprob: -10.254098892211914
    9. '    
' → logprob: -10.504098892211914
    10. 'if' → logprob: -11.004098892211914

Token 657: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3653697967529297
    2. ' states' → logprob: -1.3653697967529297
    3. 'states' → logprob: -2.9903697967529297
    4. '(states' → logprob: -8.74036979675293
    5. '
' → logprob: -9.49036979675293
    6. ' if' → logprob: -9.61536979675293
    7. 'if' (adapté à ' if') → logprob: -9.99036979675293
    8. '```' → logprob: -10.24036979675293
    9. '_states' → logprob: -10.36536979675293
    10. ' for' → logprob: -10.49036979675293

Token 658: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1801852434873581
    2. ' j' → logprob: -1.8051851987838745
    3. '(j' → logprob: -9.055185317993164
    4. '   ' → logprob: -9.305185317993164
    5. ' ' → logprob: -9.680185317993164
    6. ' (' → logprob: -10.180185317993164
    7. 'y' → logprob: -10.930185317993164
    8. 'not' → logprob: -10.930185317993164
    9. '	j' → logprob: -11.055185317993164
    10. ' not' → logprob: -11.305185317993164

Token 659: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6204493045806885
    2. '+' → logprob: -1.3704493045806885
    3. ' +' → logprob: -2.3704493045806885
    4. ' >=' → logprob: -2.6204493045806885
    5. ' <=' → logprob: -4.120449066162109
    6. ' +=' → logprob: -4.995449066162109
    7. ' ==' → logprob: -5.245449066162109
    8. ',' → logprob: -5.620449066162109
    9. '<' → logprob: -5.620449066162109
    10. '>=' → logprob: -6.620449066162109

Token 660: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.043919481337070465
    2. ' ' → logprob: -3.168919563293457
    3. '4' → logprob: -7.043919563293457
    4. '6' → logprob: -10.543919563293457
    5. '5' → logprob: -11.418919563293457
    6. '2' → logprob: -12.418919563293457
    7. '   ' → logprob: -13.543919563293457
    8. '  ' → logprob: -13.668919563293457
    9. 'j' → logprob: -14.481419563293457
    10. '7' → logprob: -14.981419563293457

Token 661: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2535342574119568
    2. '4' → logprob: -1.5035343170166016
    3. '5' → logprob: -6.503534317016602
    4. 'j' → logprob: -9.753534317016602
    5. 'y' → logprob: -10.878534317016602
    6. '6' → logprob: -11.253534317016602
    7. '2' → logprob: -11.628534317016602
    8. ' ' → logprob: -12.503534317016602
    9. '
' → logprob: -14.441034317016602
    10. '３' → logprob: -14.441034317016602

Token 662: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.049500852823257446
    2. '   ' → logprob: -4.049500942230225
    3. ':
' → logprob: -4.049500942230225
    4. ':' → logprob: -4.674500942230225
    5. ',' → logprob: -6.549500942230225
    6. 'and' → logprob: -6.799500942230225
    7. ' states' → logprob: -7.299500942230225
    8. '       ' → logprob: -7.924500942230225
    9. ' or' → logprob: -8.674500465393066
    10. '+' → logprob: -8.924500465393066

Token 663: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.07471200823783875
    2. 'y' → logprob: -2.699712038040161
    3. ' (' → logprob: -5.824711799621582
    4. '(y' → logprob: -7.449711799621582
    5. '(' → logprob: -7.699711799621582
    6. ' j' → logprob: -8.074711799621582
    7. '   ' → logprob: -8.699711799621582
    8. 'j' → logprob: -9.074711799621582
    9. '(j' → logprob: -10.199711799621582
    10. ' states' → logprob: -10.324711799621582

Token 664: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.024841155856847763
    2. '<=' → logprob: -4.14984130859375
    3. '+' → logprob: -5.14984130859375
    4. ' <' → logprob: -6.39984130859375
    5. ' +' → logprob: -7.27484130859375
    6. ' +=' → logprob: -7.64984130859375
    7. '   ' → logprob: -10.02484130859375
    8. '+=' → logprob: -10.64984130859375
    9. ' ' → logprob: -10.77484130859375
    10. '<' → logprob: -10.89984130859375

Token 665: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.026302389800548553
    2. ' ' → logprob: -3.6513023376464844
    3. '   ' → logprob: -13.651302337646484
    4. '  ' → logprob: -14.651302337646484
    5. '３' → logprob: -15.401302337646484
    6. '۳' → logprob: -16.338802337646484
    7. '```' → logprob: -17.338802337646484
    8. '    ' → logprob: -17.588802337646484
    9. '4' → logprob: -17.838802337646484
    10. '[' → logprob: -17.963802337646484

Token 666: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0008058178937062621
    2. ' ' → logprob: -7.125805854797363
    3. '   ' → logprob: -14.375805854797363
    4. '4' → logprob: -15.500805854797363
    5. '  ' → logprob: -15.688305854797363
    6. '３' → logprob: -16.063304901123047
    7. '۳' → logprob: -16.813304901123047
    8. '```' → logprob: -16.938304901123047
    9. '
' → logprob: -17.250804901123047
    10. '३' → logprob: -17.813304901123047

Token 667: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29539328813552856
    2. ':
' → logprob: -1.5453932285308838
    3. '   ' → logprob: -3.295393228530884
    4. ' states' → logprob: -5.420393466949463
    5. 'states' → logprob: -7.920393466949463
    6. ' and' → logprob: -8.295392990112305
    7. ',' → logprob: -9.170392990112305
    8. '       ' → logprob: -9.420392990112305
    9. '):
' → logprob: -9.670392990112305
    10. ' :
' → logprob: -10.045392990112305

Token 668: '       ' (ID: 309)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.531627357006073
    2. '   ' → logprob: -0.906627357006073
    3. 'states' → logprob: -4.906627178192139
    4. '(states' → logprob: -7.281627178192139
    5. ':
' → logprob: -9.406627655029297
    6. '.states' → logprob: -9.531627655029297
    7. ':' → logprob: -9.531627655029297
    8. '_states' → logprob: -9.531627655029297
    9. ' and' → logprob: -11.406627655029297
    10. '```' → logprob: -11.656627655029297

Token 669: ' if' (ID: 538)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.052932579070329666
    2. '   ' → logprob: -3.0529325008392334
    3. ' states' → logprob: -5.5529327392578125
    4. 'if' (adapté à ' if') → logprob: -7.8029327392578125
    5. '       ' → logprob: -10.927932739257812
    6. 'for' → logprob: -10.927932739257812
    7. ' if' → logprob: -12.177932739257812
    8. '(states' → logprob: -12.552932739257812
    9. '.states' → logprob: -13.177932739257812
    10. 'state' → logprob: -13.302932739257812

Token 670: ' not' (ID: 625)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.2027537226676941
    2. 'j' → logprob: -1.7027537822723389
    3. '(j' → logprob: -7.20275354385376
    4. ' (' → logprob: -7.70275354385376
    5. '(' → logprob: -9.702754020690918
    6. ' ' → logprob: -10.202754020690918
    7. '	j' → logprob: -10.952754020690918
    8. '   ' → logprob: -11.452754020690918
    9. ' ' → logprob: -12.327754020690918
    10. '  ' → logprob: -12.577754020690918

Token 671: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.6186948418617249
    2. ' is' → logprob: -1.61869478225708
    3. '(j' → logprob: -1.99369478225708
    4. ' (' → logprob: -2.36869478225708
    5. '((' → logprob: -4.74369478225708
    6. '(is' → logprob: -4.74369478225708
    7. 'j' → logprob: -4.86869478225708
    8. ' j' → logprob: -5.24369478225708
    9. '(' → logprob: -6.49369478225708
    10. '(i' → logprob: -7.36869478225708

Token 672: '_game' (ID: 41386)
  Prédit: '_game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_game' → logprob: -6.24179228907451e-05
    2. 'game' → logprob: -10.000061988830566
    3. '_' → logprob: -12.125061988830566
    4. ' game' → logprob: -12.375061988830566
    5. '_j' → logprob: -12.875061988830566
    6. 'Game' → logprob: -13.625061988830566
    7. ' j' → logprob: -14.500061988830566
    8. '_GAME' → logprob: -14.500061988830566
    9. '(game' → logprob: -14.625061988830566
    10. '_g' → logprob: -15.000061988830566

Token 673: '_over' (ID: 34788)
  Prédit: '_over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_over' → logprob: -0.00020008347928524017
    2. 'over' → logprob: -8.625200271606445
    3. '_' → logprob: -11.125200271606445
    4. ' over' → logprob: -13.125200271606445
    5. 'Over' → logprob: -14.625200271606445
    6. '_out' → logprob: -14.875200271606445
    7. '_end' → logprob: -15.000200271606445
    8. '_game' → logprob: -15.125200271606445
    9. ' _' → logprob: -15.375200271606445
    10. '過' → logprob: -15.750200271606445

Token 674: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0018022728618234396
    2. '(' → logprob: -6.376802444458008
    3. ' (' → logprob: -9.251802444458008
    4. ')' → logprob: -13.626802444458008
    5. '((' → logprob: -13.626802444458008
    6. '(i' → logprob: -15.001802444458008
    7. ' ' → logprob: -15.001802444458008
    8. '(
' → logprob: -15.251802444458008
    9. '   ' → logprob: -15.626802444458008
    10. '(J' → logprob: -15.626802444458008

Token 675: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01663551852107048
    2. ' ,' → logprob: -4.766635417938232
    3. '+' → logprob: -5.266635417938232
    4. ',j' → logprob: -6.516635417938232
    5. ',y' → logprob: -7.141635417938232
    6. ' +' → logprob: -7.641635417938232
    7. ' ' → logprob: -10.89163589477539
    8. '   ' → logprob: -11.51663589477539
    9. ',
' → logprob: -12.01663589477539
    10. 'y' → logprob: -12.14163589477539

Token 676: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02301577851176262
    2. ' ' → logprob: -3.8980157375335693
    3. '0' → logprob: -6.148015975952148
    4. 'y' → logprob: -8.648015975952148
    5. ' y' → logprob: -9.648015975952148
    6. ',' → logprob: -10.148015975952148
    7. 'j' → logprob: -10.398015975952148
    8. ' j' → logprob: -12.023015975952148
    9. ' ,' → logprob: -12.523015975952148
    10. '   ' → logprob: -12.898015975952148

Token 677: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009140860638581216
    2. ',j' → logprob: -7.625914096832275
    3. ' ,' → logprob: -7.875914096832275
    4. ')' → logprob: -10.875913619995117
    5. 'j' → logprob: -11.375913619995117
    6. ',y' → logprob: -12.500913619995117
    7. 'y' → logprob: -13.125913619995117
    8. ',
' → logprob: -13.250913619995117
    9. '[' → logprob: -13.375913619995117
    10. ' ' → logprob: -13.875913619995117

Token 678: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.006715967319905758
    2. ' y' → logprob: -5.006715774536133
    3. '   ' → logprob: -15.131715774536133
    4. '	y' → logprob: -15.381715774536133
    5. ' ' → logprob: -16.506715774536133
    6. '  ' → logprob: -18.006715774536133
    7. ')y' → logprob: -18.256715774536133
    8. '    ' → logprob: -18.506715774536133
    9. ''y' → logprob: -18.881715774536133
    10. '(y' → logprob: -19.381715774536133

Token 679: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12720516324043274
    2. '):
' → logprob: -2.1272051334381104
    3. ')' → logprob: -8.627204895019531
    4. '   ' → logprob: -10.252204895019531
    5. ' ):' → logprob: -10.877204895019531
    6. '):
' → logprob: -11.252204895019531
    7. ',' → logprob: -11.377204895019531
    8. '):

' → logprob: -12.252204895019531
    9. '       ' → logprob: -12.377204895019531
    10. ')：' → logprob: -12.627204895019531

Token 680: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09459052234888077
    2. ' states' → logprob: -2.844590425491333
    3. ':
' → logprob: -4.469590663909912
    4. '       ' → logprob: -5.219590663909912
    5. ' and' → logprob: -5.594590663909912
    6. '(states' → logprob: -5.719590663909912
    7. ':' → logprob: -5.844590663909912
    8. 'states' → logprob: -6.594590663909912
    9. '):
' → logprob: -6.844590663909912
    10. '.states' → logprob: -7.594590663909912

Token 681: ' states' (ID: 9407)
  Prédit: ' states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.10284945368766785
    2. 'states' (adapté à ' states') → logprob: -2.3528494834899902
    3. '       ' → logprob: -6.60284948348999
    4. '           ' → logprob: -7.60284948348999
    5. '(states' → logprob: -7.97784948348999
    6. '   ' → logprob: -8.352849006652832
    7. '               ' → logprob: -8.977849006652832
    8. '.states' → logprob: -10.102849006652832
    9. '_states' → logprob: -10.602849006652832
    10. 'States' → logprob: -12.352849006652832

Token 682: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008721405640244484
    2. '.' → logprob: -4.758721351623535
    3. ' .' → logprob: -9.633721351623535
    4. ').' → logprob: -11.133721351623535
    5. '.app' → logprob: -11.133721351623535
    6. '.add' → logprob: -11.758721351623535
    7. '           ' → logprob: -13.633721351623535
    8. '.ap' → logprob: -15.008721351623535
    9. '.setdefault' → logprob: -15.008721351623535
    10. '.extend' → logprob: -15.258721351623535

Token 683: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0039151376113295555
    2. '(j' → logprob: -6.003915309906006
    3. ' ((' → logprob: -6.878915309906006
    4. ' (' → logprob: -8.003914833068848
    5. '(' → logprob: -9.503914833068848
    6. ' ' → logprob: -15.378914833068848
    7. '   ' → logprob: -16.003915786743164
    8. '(
' → logprob: -16.753915786743164
    9. ',' → logprob: -17.128915786743164
    10. ' ' → logprob: -17.378915786743164

Token 684: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.051066520740278e-05
    2. '(j' → logprob: -10.250060081481934
    3. ' j' → logprob: -10.625060081481934
    4. '   ' → logprob: -15.250060081481934
    5. '	j' → logprob: -15.500060081481934
    6. ' (' → logprob: -16.12506103515625
    7. ' ' → logprob: -16.37506103515625
    8. '  ' → logprob: -18.00006103515625
    9. '_j' → logprob: -18.25006103515625
    10. ',j' → logprob: -18.37506103515625

Token 685: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002390594017924741
    2. ' +' → logprob: -8.375239372253418
    3. '+j' → logprob: -11.750239372253418
    4. ',' → logprob: -15.750239372253418
    5. '＋' → logprob: -15.875239372253418
    6. 'j' → logprob: -16.1252384185791
    7. '+,' → logprob: -16.3752384185791
    8. '()+' → logprob: -17.3752384185791
    9. '+
' → logprob: -17.3752384185791
    10. ',j' → logprob: -17.5002384185791

Token 686: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.913265239447355e-05
    2. ' ' → logprob: -9.500099182128906
    3. '+' → logprob: -10.750099182128906
    4. 'j' → logprob: -13.750099182128906
    5. '```' → logprob: -14.625099182128906
    6. '(' → logprob: -14.875099182128906
    7. '   ' → logprob: -15.375099182128906
    8. ' +' → logprob: -15.625099182128906
    9. 'y' → logprob: -16.437599182128906
    10. ',' → logprob: -16.750099182128906

Token 687: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003461905289441347
    2. ' ,' → logprob: -8.500346183776855
    3. ',y' → logprob: -8.875346183776855
    4. '<|end|>' → logprob: -13.625346183776855
    5. ',
' → logprob: -14.750346183776855
    6. 'y' → logprob: -15.250346183776855
    7. ' y' → logprob: -15.375346183776855
    8. ' ' → logprob: -15.750346183776855
    9. ',j' → logprob: -15.750346183776855
    10. '‌,' → logprob: -16.000347137451172

Token 688: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2014138251543045
    2. ' y' → logprob: -1.701413869857788
    3. '	y' → logprob: -14.826414108276367
    4. ')y' → logprob: -16.701414108276367
    5. ' ' → logprob: -17.201414108276367
    6. '<|end|>' → logprob: -17.576414108276367
    7. '    ' → logprob: -18.576414108276367
    8. ',y' → logprob: -18.826414108276367
    9. ')' → logprob: -19.576414108276367
    10. '   ' → logprob: -19.576414108276367

Token 689: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026073982007801533
    2. ' ,' → logprob: -8.375260353088379
    3. ')' → logprob: -11.750260353088379
    4. ','' → logprob: -12.000260353088379
    5. '<|end|>' → logprob: -12.250260353088379
    6. '))' → logprob: -12.625260353088379
    7. '   ' → logprob: -13.125260353088379
    8. '),' → logprob: -13.750260353088379
    9. ' ' → logprob: -14.250260353088379
    10. '	' → logprob: -14.500260353088379

Token 690: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.41635948419570923
    2. ' '' → logprob: -1.1663594245910645
    3. ''A' → logprob: -3.5413594245910645
    4. ' A' → logprob: -9.791359901428223
    5. 'A' → logprob: -11.541359901428223
    6. '`' → logprob: -12.041359901428223
    7. ')' → logprob: -12.416359901428223
    8. '"' → logprob: -12.791359901428223
    9. ' ' → logprob: -13.041359901428223
    10. '"A' → logprob: -13.666359901428223

Token 691: 'A' (ID: 32)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.06731345504522324
    2. 'A' → logprob: -3.0673134326934814
    3. ' '' → logprob: -4.0673136711120605
    4. ' A' → logprob: -6.9423136711120605
    5. ''' → logprob: -8.067313194274902
    6. '"A' → logprob: -9.817313194274902
    7. ' ' → logprob: -10.192313194274902
    8. '’A' → logprob: -10.942313194274902
    9. '	A' → logprob: -11.567313194274902
    10. '   ' → logprob: -11.692313194274902

Token 692: ''))
' (ID: 15277)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0019438649760559201
    2. '))
' → logprob: -6.876944065093994
    3. ''))' → logprob: -7.126944065093994
    4. ')' → logprob: -9.876943588256836
    5. ' ))' → logprob: -10.001943588256836
    6. ''))
' → logprob: -12.126943588256836
    7. '   ' → logprob: -12.626943588256836
    8. '"))' → logprob: -14.751943588256836
    9. '       ' → logprob: -15.001943588256836
    10. ')))' → logprob: -15.001943588256836

Token 693: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7310997843742371
    2. '<|end|>' → logprob: -1.2310998439788818
    3. '       ' → logprob: -1.9810998439788818
    4. ')' → logprob: -2.731099843978882
    5. ' ' → logprob: -4.856099605560303
    6. '    
' → logprob: -5.731099605560303
    7. '  
' → logprob: -5.981099605560303
    8. '
' → logprob: -6.231099605560303
    9. ' 
' → logprob: -6.731099605560303
    10. '        
' → logprob: -6.856099605560303

Token 694: ' elif' (ID: 9497)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3086256980895996
    2. '   ' → logprob: -2.0586256980895996
    3. ' states' → logprob: -2.1836256980895996
    4. '       ' → logprob: -4.1836256980896
    5. 'if' → logprob: -5.6836256980896
    6. '
' → logprob: -6.4336256980896
    7. ' ' → logprob: -6.4336256980896
    8. ' 
' → logprob: -6.5586256980896
    9. 'states' → logprob: -7.0586256980896
    10. '<|end|>' → logprob: -8.308626174926758

Token 695: ' (' (ID: 350)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5597493052482605
    2. ' not' → logprob: -1.9347493648529053
    3. 'is' → logprob: -2.0597493648529053
    4. 'False' → logprob: -2.9347493648529053
    5. 'not' → logprob: -3.3097493648529053
    6. 'j' → logprob: -3.6847493648529053
    7. ' j' → logprob: -4.184749126434326
    8. ' False' → logprob: -4.309749126434326
    9. ' y' → logprob: -5.684749126434326
    10. 'y' → logprob: -5.684749126434326

Token 696: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.09910315275192261
    2. 'not' → logprob: -3.4741032123565674
    3. 'y' → logprob: -3.5991032123565674
    4. ' j' → logprob: -3.9741032123565674
    5. ' not' → logprob: -4.974102973937988
    6. ' y' → logprob: -5.599102973937988
    7. ' (' → logprob: -6.099102973937988
    8. ')' → logprob: -6.474102973937988
    9. '(j' → logprob: -6.974102973937988
    10. 'is' → logprob: -7.599102973937988

Token 697: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026721017435193062
    2. ' +' → logprob: -3.6517210006713867
    3. ',' → logprob: -8.651721000671387
    4. ' ==' → logprob: -10.026721000671387
    5. ' <' → logprob: -10.401721000671387
    6. ' <=' → logprob: -10.526721000671387
    7. '==' → logprob: -10.651721000671387
    8. ')+' → logprob: -10.776721000671387
    9. ')' → logprob: -11.151721000671387
    10. ' ,' → logprob: -11.151721000671387

Token 698: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004988207365386188
    2. ' ' → logprob: -7.7504987716674805
    3. '2' → logprob: -9.87549877166748
    4. '0' → logprob: -11.37549877166748
    5. '```' → logprob: -13.75049877166748
    6. '<|end|>' → logprob: -14.00049877166748
    7. '   ' → logprob: -14.37549877166748
    8. '4' → logprob: -14.62549877166748
    9. ')' → logprob: -14.75049877166748
    10. '
' → logprob: -15.31299877166748

Token 699: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28511714935302734
    2. ' <=' → logprob: -2.5351171493530273
    3. ' ==' → logprob: -2.6601171493530273
    4. ' ,' → logprob: -2.9101171493530273
    5. '==' → logprob: -3.5351171493530273
    6. '<=' → logprob: -4.785117149353027
    7. ')' → logprob: -5.910117149353027
    8. ' <' → logprob: -6.535117149353027
    9. '<' → logprob: -7.910117149353027
    10. '<|end|>' → logprob: -7.910117149353027

Token 700: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.15696609020233154
    2. '==' → logprob: -2.281966209411621
    3. ' <=' → logprob: -3.406966209411621
    4. ' <' → logprob: -5.406966209411621
    5. ',' → logprob: -5.781966209411621
    6. '<=' → logprob: -6.906966209411621
    7. '<' → logprob: -7.781966209411621
    8. ' !=' → logprob: -8.281966209411621
    9. ')' → logprob: -8.656966209411621
    10. ' >=' → logprob: -8.781966209411621

Token 701: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00046153197763487697
    2. ' ' → logprob: -8.00046157836914
    3. '4' → logprob: -9.25046157836914
    4. '3' → logprob: -10.50046157836914
    5. '   ' → logprob: -14.37546157836914
    6. '1' → logprob: -14.37546157836914
    7. 'j' → logprob: -15.12546157836914
    8. '  ' → logprob: -15.25046157836914
    9. '6' → logprob: -15.50046157836914
    10. '2' → logprob: -15.81296157836914

Token 702: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -9.221884101862088e-05
    2. '4' → logprob: -9.375092506408691
    3. '3' → logprob: -12.250092506408691
    4. 'j' → logprob: -13.812592506408691
    5. ' ' → logprob: -14.562592506408691
    6. '５' → logprob: -15.625092506408691
    7. '1' → logprob: -15.875092506408691
    8. '٥' → logprob: -16.437591552734375
    9. '6' → logprob: -16.562591552734375
    10. '५' → logprob: -16.750091552734375

Token 703: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.030316513031721115
    2. 'and' → logprob: -3.6553165912628174
    3. ':' → logprob: -5.905316352844238
    4. ':
' → logprob: -7.405316352844238
    5. '           ' → logprob: -8.280316352844238
    6. ',' → logprob: -8.405316352844238
    7. ')' → logprob: -9.905316352844238
    8. '       ' → logprob: -10.030316352844238
    9. ' or' → logprob: -10.280316352844238
    10. '   ' → logprob: -10.655316352844238

Token 704: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2825007438659668
    2. ' y' → logprob: -1.4075007438659668
    3. '(y' → logprob: -7.407500743865967
    4. '   ' → logprob: -8.407501220703125
    5. '0' → logprob: -8.657501220703125
    6. ' (' → logprob: -9.407501220703125
    7. ' ' → logprob: -9.657501220703125
    8. 'j' → logprob: -10.157501220703125
    9. '4' → logprob: -10.532501220703125
    10. ' not' → logprob: -10.657501220703125

Token 705: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0875217467546463
    2. '<=' → logprob: -3.08752179145813
    3. ' ==' → logprob: -3.71252179145813
    4. '==' → logprob: -5.087521553039551
    5. '+' → logprob: -5.337521553039551
    6. ' <' → logprob: -6.337521553039551
    7. ' +' → logprob: -7.712521553039551
    8. '<|end|>' → logprob: -8.83752155303955
    9. '<' → logprob: -8.96252155303955
    10. ' ' → logprob: -9.21252155303955

Token 706: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -8.7689099018462e-05
    2. ' ' → logprob: -10.00008773803711
    3. '2' → logprob: -10.37508773803711
    4. '4' → logprob: -11.75008773803711
    5. '   ' → logprob: -13.50008773803711
    6. '1' → logprob: -14.00008773803711
    7. '  ' → logprob: -14.87508773803711
    8. '	' → logprob: -15.81258773803711
    9. '
' → logprob: -16.06258773803711
    10. '```' → logprob: -16.62508773803711

Token 707: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00025073037249967456
    2. '4' → logprob: -8.625250816345215
    3. '2' → logprob: -9.625250816345215
    4. ' ' → logprob: -13.500250816345215
    5. '1' → logprob: -13.562750816345215
    6. '３' → logprob: -14.937750816345215
    7. '```' → logprob: -15.125250816345215
    8. '   ' → logprob: -15.250250816345215
    9. '۳' → logprob: -15.562750816345215
    10. '
' → logprob: -15.687750816345215

Token 708: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5322381854057312
    2. ':
' → logprob: -0.9072381854057312
    3. '           ' → logprob: -5.157238006591797
    4. ' and' → logprob: -6.157238006591797
    5. '):
' → logprob: -7.782238006591797
    6. '       ' → logprob: -7.782238006591797
    7. '):' → logprob: -8.782238006591797
    8. ',' → logprob: -9.532238006591797
    9. ')' → logprob: -10.407238006591797
    10. '   ' → logprob: -10.782238006591797

Token 709: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22983916103839874
    2. ':
' → logprob: -2.2298390865325928
    3. ' states' → logprob: -2.8548390865325928
    4. ':' → logprob: -4.354839324951172
    5. '(states' → logprob: -5.104839324951172
    6. '       ' → logprob: -5.229839324951172
    7. '):
' → logprob: -5.354839324951172
    8. ',' → logprob: -5.854839324951172
    9. 'states' → logprob: -6.104839324951172
    10. '   ' → logprob: -6.729839324951172

Token 710: ' states' (ID: 9407)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' (adapté à ' states') → logprob: -0.3708265721797943
    2. ' states' → logprob: -1.2458266019821167
    3. '           ' → logprob: -4.245826721191406
    4. 'return' → logprob: -5.620826721191406
    5. ' return' → logprob: -6.120826721191406
    6. '   ' → logprob: -6.745826721191406
    7. '       ' → logprob: -7.620826721191406
    8. '               ' → logprob: -8.745826721191406
    9. '(states' → logprob: -10.370826721191406
    10. 'state' → logprob: -10.620826721191406

Token 711: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001805377542041242
    2. '.' → logprob: -9.2501802444458
    3. ' .' → logprob: -9.5001802444458
    4. '           ' → logprob: -12.0001802444458
    5. 'append' → logprob: -12.8751802444458
    6. '.clear' → logprob: -15.1251802444458
    7. ' append' → logprob: -16.000181198120117
    8. '          ' → logprob: -16.125181198120117
    9. '.app' → logprob: -17.000181198120117
    10. '	append' → logprob: -17.125181198120117

Token 712: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.750001907348633
    3. '(j' → logprob: -14.250001907348633
    4. ' ((' → logprob: -15.875001907348633
    5. '(((' → logprob: -16.000001907348633
    6. ' ' → logprob: -18.625001907348633
    7. '(
' → logprob: -18.875001907348633
    8. '   ' → logprob: -19.125001907348633
    9. '(('' → logprob: -20.375001907348633
    10. '[(' → logprob: -21.000001907348633

Token 713: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.012797684408724308
    2. '(j' → logprob: -4.387797832489014
    3. '5' → logprob: -8.512797355651855
    4. ' j' → logprob: -9.762797355651855
    5. ' (' → logprob: -11.387797355651855
    6. '   ' → logprob: -12.012797355651855
    7. '(' → logprob: -12.137797355651855
    8. '	j' → logprob: -12.887797355651855
    9. '4' → logprob: -13.762797355651855
    10. '6' → logprob: -14.137797355651855

Token 714: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00013727048644796014
    2. ' +' → logprob: -9.000137329101562
    3. ',' → logprob: -12.625137329101562
    4. '1' → logprob: -12.750137329101562
    5. '+y' → logprob: -13.000137329101562
    6. '+j' → logprob: -13.625137329101562
    7. 'y' → logprob: -13.875137329101562
    8. '<|end|>' → logprob: -14.500137329101562
    9. ')' → logprob: -14.625137329101562
    10. '＋' → logprob: -15.250137329101562

Token 715: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.845798710244708e-05
    2. '2' → logprob: -10.625038146972656
    3. ' ' → logprob: -11.750038146972656
    4. '4' → logprob: -13.000038146972656
    5. '+' → logprob: -13.500038146972656
    6. '5' → logprob: -13.625038146972656
    7. '0' → logprob: -14.937538146972656
    8. '```' → logprob: -15.000038146972656
    9. '   ' → logprob: -15.312538146972656
    10. '
' → logprob: -16.187538146972656

Token 716: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003485745983198285
    2. '+' → logprob: -8.750349044799805
    3. ',y' → logprob: -9.000349044799805
    4. ' ,' → logprob: -9.750349044799805
    5. ' +' → logprob: -12.500349044799805
    6. ' y' → logprob: -13.375349044799805
    7. 'y' → logprob: -13.375349044799805
    8. ',j' → logprob: -14.750349044799805
    9. '+,' → logprob: -14.875349044799805
    10. '+y' → logprob: -16.000349044799805

Token 717: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6931495666503906
    2. ' y' → logprob: -0.6931495666503906
    3. ' ' → logprob: -13.56814956665039
    4. '	y' → logprob: -14.69314956665039
    5. '0' → logprob: -15.56814956665039
    6. '   ' → logprob: -15.81814956665039
    7. '  ' → logprob: -16.56814956665039
    8. ',y' → logprob: -16.81814956665039
    9. ' ' → logprob: -17.06814956665039
    10. ''y' → logprob: -17.19314956665039

Token 718: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1756367712223437e-05
    2. ' ,' → logprob: -12.375011444091797
    3. '))' → logprob: -12.375011444091797
    4. '+' → logprob: -13.375011444091797
    5. ')' → logprob: -14.375011444091797
    6. ','' → logprob: -14.375011444091797
    7. '   ' → logprob: -16.250011444091797
    8. '           ' → logprob: -16.500011444091797
    9. ''' → logprob: -16.875011444091797
    10. '',' → logprob: -17.000011444091797

Token 719: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.027911154553294182
    2. ' '' → logprob: -4.027911186218262
    3. ''' → logprob: -4.652911186218262
    4. '"A' → logprob: -9.777911186218262
    5. 'A' → logprob: -10.277911186218262
    6. ''C' → logprob: -10.402911186218262
    7. 'None' → logprob: -11.277911186218262
    8. ' ' → logprob: -11.902911186218262
    9. ''S' → logprob: -12.277911186218262
    10. 'True' → logprob: -12.652911186218262

Token 720: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.074884332716465
    2. ''A' → logprob: -2.6998844146728516
    3. 'B' → logprob: -5.699884414672852
    4. ''' → logprob: -6.574884414672852
    5. '5' → logprob: -9.949884414672852
    6. ' A' → logprob: -10.199884414672852
    7. '"A' → logprob: -10.324884414672852
    8. ' '' → logprob: -11.324884414672852
    9. 'None' → logprob: -11.699884414672852
    10. ')' → logprob: -11.824884414672852

Token 721: ''))
' (ID: 15277)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.018762357532978058
    2. '))
' → logprob: -4.018762588500977
    3. ')' → logprob: -8.143762588500977
    4. '       ' → logprob: -8.518762588500977
    5. '           ' → logprob: -10.518762588500977
    6. ''))' → logprob: -10.518762588500977
    7. '   ' → logprob: -10.768762588500977
    8. '))
' → logprob: -10.893762588500977
    9. ')))' → logprob: -11.768762588500977
    10. ' ))' → logprob: -11.768762588500977

Token 722: '       ' (ID: 309)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.1848699152469635
    2. '   ' → logprob: -2.1848700046539307
    3. '       ' → logprob: -3.8098700046539307
    4. 'states' → logprob: -4.184869766235352
    5. '
' → logprob: -4.434869766235352
    6. '(states' → logprob: -6.434869766235352
    7. '<|end|>' → logprob: -6.684869766235352
    8. ' ' → logprob: -6.809869766235352
    9. ' 
' → logprob: -6.934869766235352
    10. '    
' → logprob: -7.684869766235352

Token 723: ' if' (ID: 538)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.726240336894989
    2. '   ' → logprob: -0.976240336894989
    3. 'states' → logprob: -2.726240396499634
    4. '       ' → logprob: -3.351240396499634
    5. 'if' (adapté à ' if') → logprob: -3.976240396499634
    6. ' if' → logprob: -4.101240158081055
    7. '
' → logprob: -6.851240158081055
    8. 'return' → logprob: -7.226240158081055
    9. '    
' → logprob: -7.601240158081055
    10. 'elif' → logprob: -8.351240158081055

Token 724: ' not' (ID: 625)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5445100665092468
    2. ' not' → logprob: -1.2945101261138916
    3. '(' → logprob: -2.5445101261138916
    4. ' y' → logprob: -3.1695101261138916
    5. 'not' → logprob: -4.5445098876953125
    6. '(y' → logprob: -4.9195098876953125
    7. '(j' → logprob: -5.4195098876953125
    8. 'y' → logprob: -6.5445098876953125
    9. '(not' → logprob: -6.9195098876953125
    10. ' j' → logprob: -7.9195098876953125

Token 725: ' is' (ID: 382)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.3041224181652069
    2. ' (' → logprob: -1.4291224479675293
    3. '(j' → logprob: -4.179122447967529
    4. '(' → logprob: -5.179122447967529
    5. ' y' → logprob: -7.054122447967529
    6. '(is' → logprob: -8.304121971130371
    7. ' is' → logprob: -8.304121971130371
    8. 'y' → logprob: -8.429121971130371
    9. 'is' → logprob: -9.054121971130371
    10. '(not' → logprob: -10.179121971130371

Token 726: '_game' (ID: 41386)
  Prédit: '_game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_game' → logprob: -0.20193414390087128
    2. 'game' → logprob: -1.7019340991973877
    3. ' y' → logprob: -8.576933860778809
    4. ' game' → logprob: -8.826933860778809
    5. 'Game' → logprob: -9.826933860778809
    6. 'y' → logprob: -10.451933860778809
    7. '(y' → logprob: -10.701933860778809
    8. '-game' → logprob: -11.076933860778809
    9. ' (' → logprob: -11.326933860778809
    10. '(game' → logprob: -11.701933860778809

Token 727: '_over' (ID: 34788)
  Prédit: '_over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_over' → logprob: -0.002811290556564927
    2. 'over' → logprob: -5.877811431884766
    3. 'Over' → logprob: -13.127811431884766
    4. '(y' → logprob: -13.252811431884766
    5. '(j' → logprob: -13.377811431884766
    6. ' over' → logprob: -14.627811431884766
    7. '_out' → logprob: -15.377811431884766
    8. '_OVER' → logprob: -17.002811431884766
    9. 'y' → logprob: -17.252811431884766
    10. '过' → logprob: -17.627811431884766

Token 728: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0007356545538641512
    2. '(' → logprob: -7.250735759735107
    3. ' (' → logprob: -10.62573528289795
    4. '((' → logprob: -14.12573528289795
    5. '(
' → logprob: -15.12573528289795
    6. 'j' → logprob: -16.000736236572266
    7. '(i' → logprob: -16.250736236572266
    8. '(y' → logprob: -16.625736236572266
    9. '```' → logprob: -17.125736236572266
    10. ')' → logprob: -18.250736236572266

Token 729: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04948155954480171
    2. '+' → logprob: -3.0494816303253174
    3. ' ,' → logprob: -7.299481391906738
    4. ',y' → logprob: -9.049481391906738
    5. ' +' → logprob: -9.799481391906738
    6. ',j' → logprob: -10.674481391906738
    7. ' ' → logprob: -12.049481391906738
    8. '```' → logprob: -12.299481391906738
    9. '+,' → logprob: -12.424481391906738
    10. '   ' → logprob: -13.049481391906738

Token 730: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.00861468818038702
    2. 'y' → logprob: -4.758614540100098
    3. '(y' → logprob: -16.008615493774414
    4. ' ' → logprob: -16.758615493774414
    5. ' (' → logprob: -17.633615493774414
    6. ' ' → logprob: -17.633615493774414
    7. '	y' → logprob: -18.383615493774414
    8. ',' → logprob: -20.133615493774414
    9. ',y' → logprob: -20.383615493774414
    10. ')' → logprob: -20.758615493774414

Token 731: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007146967691369355
    2. ' +' → logprob: -7.2507147789001465
    3. ',' → logprob: -12.500714302062988
    4. '   ' → logprob: -14.875714302062988
    5. '+
' → logprob: -15.000714302062988
    6. '+,' → logprob: -15.625714302062988
    7. ' ,' → logprob: -16.125715255737305
    8. '＋' → logprob: -16.625715255737305
    9. ' ' → logprob: -17.000715255737305
    10. '1' → logprob: -17.875715255737305

Token 732: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.919942486798391e-05
    2. ' ' → logprob: -9.750059127807617
    3. '+' → logprob: -14.000059127807617
    4. '   ' → logprob: -17.250059127807617
    5. 'y' → logprob: -18.875059127807617
    6. '```' → logprob: -18.875059127807617
    7. '１' → logprob: -19.125059127807617
    8. ' y' → logprob: -20.000059127807617
    9. ' +' → logprob: -20.500059127807617
    10. '
' → logprob: -20.750059127807617

Token 733: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31556692719459534
    2. '):' → logprob: -1.315566897392273
    3. ',' → logprob: -7.0655670166015625
    4. '   ' → logprob: -7.3155670166015625
    5. ')' → logprob: -8.065567016601562
    6. '):
' → logprob: -8.315567016601562
    7. '       ' → logprob: -9.565567016601562
    8. ' ):
' → logprob: -9.690567016601562
    9. ' ):' → logprob: -9.815567016601562
    10. '):

' → logprob: -11.440567016601562

Token 734: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6492059230804443
    2. '       ' → logprob: -0.8992059230804443
    3. ':' → logprob: -3.3992059230804443
    4. ' states' → logprob: -3.5242059230804443
    5. '(states' → logprob: -6.024206161499023
    6. ':
' → logprob: -6.399206161499023
    7. 'states' → logprob: -6.899206161499023
    8. '   ' → logprob: -7.149206161499023
    9. '.states' → logprob: -7.899206161499023
    10. '.append' → logprob: -8.024206161499023

Token 735: ' states' (ID: 9407)
  Prédit: ' states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.4007614552974701
    2. 'states' (adapté à ' states') → logprob: -1.1507614850997925
    3. '           ' → logprob: -4.400761604309082
    4. '       ' → logprob: -7.150761604309082
    5. '(states' → logprob: -7.275761604309082
    6. '.states' → logprob: -10.775761604309082
    7. '   ' → logprob: -11.400761604309082
    8. '_states' → logprob: -11.900761604309082
    9. '               ' → logprob: -12.150761604309082
    10. ' ' → logprob: -13.275761604309082

Token 736: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.865583706414327e-05
    2. '.' → logprob: -9.25009822845459
    3. ' .' → logprob: -13.12509822845459
    4. 'append' → logprob: -15.25009822845459
    5. '           ' → logprob: -15.62509822845459
    6. '.app' → logprob: -16.500099182128906
    7. '          ' → logprob: -18.375099182128906
    8. ' append' → logprob: -19.750099182128906
    9. '   ' → logprob: -20.125099182128906
    10. '       ' → logprob: -20.500099182128906

Token 737: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -5.796184723294573e-06
    2. ' ((' → logprob: -12.375005722045898
    3. '(j' → logprob: -13.750005722045898
    4. '(' → logprob: -15.000005722045898
    5. '   ' → logprob: -16.5000057220459
    6. ' ' → logprob: -17.3750057220459
    7. '[(' → logprob: -18.5000057220459
    8. '(
' → logprob: -18.5000057220459
    9. ' (' → logprob: -19.1250057220459
    10. '  ' → logprob: -19.8750057220459

Token 738: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.333223139634356e-05
    2. ' j' → logprob: -10.500033378601074
    3. '(j' → logprob: -12.125033378601074
    4. '   ' → logprob: -15.875033378601074
    5. '	j' → logprob: -16.125032424926758
    6. '```' → logprob: -17.125032424926758
    7. ' (' → logprob: -17.375032424926758
    8. ' ' → logprob: -18.750032424926758
    9. '[j' → logprob: -19.000032424926758
    10. '  ' → logprob: -20.000032424926758

Token 739: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01660304144024849
    2. '+' → logprob: -4.141602993011475
    3. ' ,' → logprob: -7.516602993011475
    4. ',y' → logprob: -11.641603469848633
    5. ' +' → logprob: -11.641603469848633
    6. '+,' → logprob: -12.891603469848633
    7. ',j' → logprob: -13.391603469848633
    8. ' ' → logprob: -14.016603469848633
    9. '```' → logprob: -14.266603469848633
    10. ' y' → logprob: -14.766603469848633

Token 740: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.20141392946243286
    2. ' y' → logprob: -1.701413869857788
    3. '+' → logprob: -15.076414108276367
    4. '	y' → logprob: -15.701414108276367
    5. '(y' → logprob: -16.451414108276367
    6. '   ' → logprob: -17.326414108276367
    7. ' ' → logprob: -17.326414108276367
    8. ')y' → logprob: -17.576414108276367
    9. '```' → logprob: -17.576414108276367
    10. '+y' → logprob: -18.201414108276367

Token 741: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.036524842376821e-05
    2. ' +' → logprob: -10.125040054321289
    3. '+y' → logprob: -15.500040054321289
    4. '＋' → logprob: -17.00004005432129
    5. 'y' → logprob: -17.25004005432129
    6. ' y' → logprob: -18.50004005432129
    7. '   ' → logprob: -18.75004005432129
    8. '+
' → logprob: -19.00004005432129
    9. '1' → logprob: -19.12504005432129
    10. '+[' → logprob: -19.25004005432129

Token 742: '1' (ID: 16)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3145129084587097
    2. '1' → logprob: -1.3145129680633545
    3. '+' → logprob: -7.189512729644775
    4. ' y' → logprob: -7.689512729644775
    5. '(y' → logprob: -10.564513206481934
    6. ' ' → logprob: -12.064513206481934
    7. '   ' → logprob: -12.439513206481934
    8. '+y' → logprob: -14.189513206481934
    9. '```' → logprob: -14.814513206481934
    10. '	y' → logprob: -14.939513206481934

Token 743: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014776040916331112
    2. ' ,' → logprob: -9.000147819519043
    3. ')' → logprob: -11.625147819519043
    4. ','' → logprob: -11.750147819519043
    5. '+' → logprob: -13.250147819519043
    6. '```' → logprob: -13.625147819519043
    7. '[' → logprob: -13.875147819519043
    8. '<|end|>' → logprob: -14.000147819519043
    9. ',
' → logprob: -14.500147819519043
    10. '),' → logprob: -14.875147819519043

Token 744: ' '' (ID: 461)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.06687825918197632
    2. 'y' → logprob: -2.816878318786621
    3. ''' → logprob: -5.691878318786621
    4. ' '' → logprob: -6.691878318786621
    5. ''y' → logprob: -8.316878318786621
    6. ')' → logprob: -10.691878318786621
    7. ' B' → logprob: -11.316878318786621
    8. 'B' → logprob: -13.566878318786621
    9. ' ' → logprob: -13.816878318786621
    10. ' ' → logprob: -13.816878318786621

Token 745: 'B' (ID: 33)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.014573482796549797
    2. '1' → logprob: -4.889573574066162
    3. 'B' → logprob: -5.389573574066162
    4. '+' → logprob: -6.764573574066162
    5. ' y' → logprob: -6.889573574066162
    6. 'Y' → logprob: -8.889573097229004
    7. ''' → logprob: -11.389573097229004
    8. ')' → logprob: -11.389573097229004
    9. ''y' → logprob: -11.389573097229004
    10. '   ' → logprob: -11.639573097229004

Token 746: ''))
' (ID: 15277)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.38809189200401306
    2. ''))' → logprob: -1.1380919218063354
    3. ')' → logprob: -7.138092041015625
    4. ''))
' → logprob: -8.138092041015625
    5. '))
' → logprob: -9.388092041015625
    6. '   ' → logprob: -10.888092041015625
    7. '       ' → logprob: -11.263092041015625
    8. '"))' → logprob: -11.513092041015625
    9. '')' → logprob: -12.513092041015625
    10. ' ))' → logprob: -13.513092041015625

Token 747: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36159300804138184
    2. '<|end|>' → logprob: -1.7365930080413818
    3. '   ' → logprob: -2.111593008041382
    4. '<|end|>' → logprob: -5.861593246459961
    5. ')' → logprob: -7.111593246459961
    6. '	return' → logprob: -7.361593246459961
    7. 'return' → logprob: -7.986593246459961
    8. ',' → logprob: -8.361593246459961
    9. ' return' → logprob: -8.611593246459961
    10. '```' → logprob: -8.611593246459961

Token 748: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03199975937604904
    2. ' return' → logprob: -4.656999588012695
    3. 'return' → logprob: -5.281999588012695
    4. ' elif' → logprob: -5.406999588012695
    5. 'elif' (adapté à ' elif') → logprob: -5.781999588012695
    6. '	return' → logprob: -5.781999588012695
    7. '<|end|>' → logprob: -5.781999588012695
    8. '	elif' → logprob: -6.781999588012695
    9. '       ' → logprob: -6.781999588012695
    10. '<|end|>' → logprob: -8.031999588012695

Token 749: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.005981412250548601
    2. '(j' → logprob: -6.0059814453125
    3. ' y' → logprob: -6.3809814453125
    4. '(y' → logprob: -6.3809814453125
    5. '(' → logprob: -9.7559814453125
    6. ' j' → logprob: -10.3809814453125
    7. 'y' → logprob: -10.8809814453125
    8. 'j' → logprob: -13.0059814453125
    9. ' ' → logprob: -13.2559814453125
    10. ' ' → logprob: -15.3809814453125

Token 750: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3895726501941681
    2. 'j' → logprob: -1.1395726203918457
    3. ' y' → logprob: -6.014572620391846
    4. ' j' → logprob: -8.764573097229004
    5. '   ' → logprob: -9.889573097229004
    6. '(j' → logprob: -10.514573097229004
    7. '(y' → logprob: -11.764573097229004
    8. ' (' → logprob: -12.514573097229004
    9. ' ' → logprob: -13.264573097229004
    10. '(' → logprob: -13.514573097229004

Token 751: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03746039792895317
    2. ' +' → logprob: -3.5374603271484375
    3. ' <=' → logprob: -5.0374603271484375
    4. '<=' → logprob: -6.7874603271484375
    5. ')' → logprob: -10.787460327148438
    6. ')<=' → logprob: -12.037460327148438
    7. ' <' → logprob: -12.287460327148438
    8. ' ' → logprob: -12.537460327148438
    9. ')+' → logprob: -12.537460327148438
    10. '<' → logprob: -12.537460327148438

Token 752: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.47757811343763e-05
    2. '+' → logprob: -10.750044822692871
    3. ' ' → logprob: -11.375044822692871
    4. '4' → logprob: -11.750044822692871
    5. '3' → logprob: -13.375044822692871
    6. '0' → logprob: -14.000044822692871
    7. '5' → logprob: -14.875044822692871
    8. '2' → logprob: -15.250044822692871
    9. '```' → logprob: -15.250044822692871
    10. 'y' → logprob: -16.187543869018555

Token 753: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011143434792757034
    2. ' ==' → logprob: -5.261143207550049
    3. ' <=' → logprob: -5.386143207550049
    4. ')==' → logprob: -7.886143207550049
    5. ')<=' → logprob: -8.136143684387207
    6. ' )' → logprob: -8.261143684387207
    7. '==' → logprob: -8.261143684387207
    8. '<=' → logprob: -9.136143684387207
    9. '   ' → logprob: -11.261143684387207
    10. ' ' → logprob: -12.761143684387207

Token 754: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03423026576638222
    2. '==' → logprob: -4.0342302322387695
    3. ' <=' → logprob: -4.1592302322387695
    4. '<=' → logprob: -8.40923023223877
    5. ')' → logprob: -9.28423023223877
    6. ' ' → logprob: -11.78423023223877
    7. ')==' → logprob: -12.03423023223877
    8. '   ' → logprob: -13.40923023223877
    9. ' )' → logprob: -14.78423023223877
    10. ')<=' → logprob: -15.28423023223877

Token 755: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.026381466537714005
    2. ' ' → logprob: -3.651381492614746
    3. '4' → logprob: -9.526381492614746
    4. '3' → logprob: -11.776381492614746
    5. '   ' → logprob: -15.401381492614746
    6. ' ' → logprob: -16.15138053894043
    7. '```' → logprob: -16.27638053894043
    8. '  ' → logprob: -16.83888053894043
    9. '1' → logprob: -17.27638053894043
    10. '6' → logprob: -17.46388053894043

Token 756: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.0564331205387134e-05
    2. ' ' → logprob: -12.12501049041748
    3. '4' → logprob: -12.25001049041748
    4. '3' → logprob: -16.875011444091797
    5. '   ' → logprob: -17.625011444091797
    6. '```' → logprob: -17.875011444091797
    7. '５' → logprob: -18.187511444091797
    8. '[' → logprob: -18.250011444091797
    9. '1' → logprob: -18.687511444091797
    10. 'five' → logprob: -19.000011444091797

Token 757: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06506945192813873
    2. 'and' → logprob: -2.8150694370269775
    3. ' <=' → logprob: -5.940069675445557
    4. '<=' → logprob: -7.690069675445557
    5. ',' → logprob: -12.690069198608398
    6. ' ' → logprob: -13.190069198608398
    7. '```' → logprob: -13.815069198608398
    8. '   ' → logprob: -14.315069198608398
    9. '0' → logprob: -15.815069198608398
    10. ' и' → logprob: -15.940069198608398

Token 758: ' j' (ID: 441)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.0054237195290625095
    2. 'y' → logprob: -5.380423545837402
    3. '3' → logprob: -8.005423545837402
    4. ' ' → logprob: -8.630423545837402
    5. ' j' → logprob: -9.005423545837402
    6. ' x' → logprob: -9.005423545837402
    7. 'j' → logprob: -10.880423545837402
    8. '4' → logprob: -11.630423545837402
    9. 'x' → logprob: -11.755423545837402
    10. '   ' → logprob: -12.130423545837402

Token 759: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.08894339203834534
    2. '<=' → logprob: -2.4639434814453125
    3. ' ' → logprob: -13.838943481445312
    4. '   ' → logprob: -13.838943481445312
    5. ' >=' → logprob: -14.838943481445312
    6. '	' → logprob: -14.963943481445312
    7. ')<=' → logprob: -14.963943481445312
    8. ' ≤' → logprob: -15.588943481445312
    9. '>=' → logprob: -15.963943481445312
    10. '+' → logprob: -15.963943481445312

Token 760: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.50000762939453
    4. '３' → logprob: -17.12500762939453
    5. '۳' → logprob: -18.06250762939453
    6. 'j' → logprob: -18.43750762939453
    7. '4' → logprob: -19.18750762939453
    8. '३' → logprob: -19.31250762939453
    9. '  ' → logprob: -19.31250762939453
    10. '٣' → logprob: -19.43750762939453

Token 761: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '３' → logprob: -17.125011444091797
    4. '   ' → logprob: -17.812511444091797
    5. '۳' → logprob: -18.000011444091797
    6. '4' → logprob: -18.187511444091797
    7. 'j' → logprob: -18.375011444091797
    8. '३' → logprob: -18.687511444091797
    9. '৩' → logprob: -19.000011444091797
    10. '٣' → logprob: -19.437511444091797

Token 762: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.899998664855957
    2. ':
' → logprob: -0.899998664855957
    3. '):' → logprob: -2.399998664855957
    4. '):
' → logprob: -2.399998664855957
    5. '       ' → logprob: -6.149998664855957
    6. ',' → logprob: -6.274998664855957
    7. '   ' → logprob: -7.899998664855957
    8. ')' → logprob: -8.274998664855957
    9. '+' → logprob: -8.524998664855957
    10. '           ' → logprob: -8.774998664855957

Token 763: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005339181981980801
    2. ' states' → logprob: -5.3803391456604
    3. 'states' → logprob: -7.6303391456604
    4. '(states' → logprob: -9.005339622497559
    5. '       ' → logprob: -10.130339622497559
    6. '               ' → logprob: -10.380339622497559
    7. '		' → logprob: -11.880339622497559
    8. '   ' → logprob: -12.005339622497559
    9. '          ' → logprob: -12.130339622497559
    10. '	       ' → logprob: -12.255339622497559

Token 764: ' states' (ID: 9407)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' (adapté à ' states') → logprob: -0.3144698143005371
    2. ' states' → logprob: -1.314469814300537
    3. '           ' → logprob: -6.814469814300537
    4. '   ' → logprob: -9.689470291137695
    5. '               ' → logprob: -10.689470291137695
    6. '       ' → logprob: -11.314470291137695
    7. '(states' → logprob: -12.064470291137695
    8. '.states' → logprob: -12.689470291137695
    9. '_states' → logprob: -12.939470291137695
    10. 'state' → logprob: -14.564470291137695

Token 765: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005622077151201665
    2. '.' → logprob: -7.5005621910095215
    3. ' .' → logprob: -12.00056266784668
    4. '           ' → logprob: -14.00056266784668
    5. '+' → logprob: -14.00056266784668
    6. 'append' → logprob: -14.37556266784668
    7. '+.' → logprob: -14.50056266784668
    8. '.app' → logprob: -16.75056266784668
    9. '.add' → logprob: -16.75056266784668
    10. '．' → logprob: -16.87556266784668

Token 766: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.7432603272027336e-06
    2. '(j' → logprob: -13.500001907348633
    3. '(
' → logprob: -15.625001907348633
    4. '(' → logprob: -15.750001907348633
    5. ' ((' → logprob: -17.500001907348633
    6. '[(' → logprob: -17.750001907348633
    7. '```' → logprob: -18.500001907348633
    8. 'j' → logprob: -20.000001907348633
    9. ' ' → logprob: -20.125001907348633
    10. '   ' → logprob: -20.375001907348633

Token 767: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.4849443838757e-06
    2. 'y' → logprob: -13.000004768371582
    3. ' j' → logprob: -13.125004768371582
    4. '(j' → logprob: -15.875004768371582
    5. '   ' → logprob: -16.750003814697266
    6. '	j' → logprob: -18.000003814697266
    7. '```' → logprob: -18.000003814697266
    8. '    ' → logprob: -20.875003814697266
    9. '[j' → logprob: -20.875003814697266
    10. ' ' → logprob: -21.000003814697266

Token 768: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05018824338912964
    2. ',' → logprob: -3.0501883029937744
    3. ' +' → logprob: -6.550188064575195
    4. ' ,' → logprob: -9.800188064575195
    5. '+,' → logprob: -10.425188064575195
    6. ',y' → logprob: -10.425188064575195
    7. '＋' → logprob: -10.925188064575195
    8. ',j' → logprob: -11.550188064575195
    9. '```' → logprob: -12.175188064575195
    10. '   ' → logprob: -12.175188064575195

Token 769: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.47408369183540344
    2. 'y' → logprob: -0.974083662033081
    3. '   ' → logprob: -13.09908390045166
    4. ' ' → logprob: -13.72408390045166
    5. '+' → logprob: -13.84908390045166
    6. '    ' → logprob: -14.09908390045166
    7. '	y' → logprob: -14.09908390045166
    8. '(y' → logprob: -14.72408390045166
    9. '  ' → logprob: -16.224082946777344
    10. ' ' → logprob: -16.474082946777344

Token 770: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.306760805164231e-05
    2. ' +' → logprob: -11.37501335144043
    3. '+y' → logprob: -14.12501335144043
    4. 'y' → logprob: -15.25001335144043
    5. '＋' → logprob: -15.25001335144043
    6. '+[' → logprob: -16.50001335144043
    7. '[' → logprob: -16.62501335144043
    8. '   ' → logprob: -16.87501335144043
    9. '+
' → logprob: -16.87501335144043
    10. '1' → logprob: -16.87501335144043

Token 771: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1561671495437622
    2. '4' → logprob: -2.1561670303344727
    3. '3' → logprob: -4.406167030334473
    4. 'y' → logprob: -4.406167030334473
    5. '(y' → logprob: -5.781167030334473
    6. '+' → logprob: -6.906167030334473
    7. ' ' → logprob: -9.281167030334473
    8. '(' → logprob: -9.531167030334473
    9. ' y' → logprob: -9.656167030334473
    10. 'j' → logprob: -10.531167030334473

Token 772: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015340241370722651
    2. '+' → logprob: -7.1265339851379395
    3. ' ,' → logprob: -7.7515339851379395
    4. ')' → logprob: -8.251534461975098
    5. ' +' → logprob: -11.001534461975098
    6. '```' → logprob: -12.001534461975098
    7. '<|end|>' → logprob: -12.876534461975098
    8. ',y' → logprob: -13.251534461975098
    9. '，' → logprob: -13.501534461975098
    10. '+,' → logprob: -13.876534461975098

Token 773: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.43357622623443604
    2. ' '' → logprob: -1.058576226234436
    3. ''y' → logprob: -5.5585761070251465
    4. ' y' → logprob: -7.6835761070251465
    5. 'y' → logprob: -8.683576583862305
    6. ' ' → logprob: -9.683576583862305
    7. 'B' → logprob: -9.808576583862305
    8. ')' → logprob: -9.808576583862305
    9. ''b' → logprob: -10.058576583862305
    10. '3' → logprob: -10.058576583862305

Token 774: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.011255542747676373
    2. '3' → logprob: -4.761255741119385
    3. ''' → logprob: -6.011255741119385
    4. '4' → logprob: -10.386255264282227
    5. '"B' → logprob: -10.386255264282227
    6. ')' → logprob: -10.511255264282227
    7. ' B' → logprob: -10.886255264282227
    8. '5' → logprob: -11.261255264282227
    9. '```' → logprob: -11.261255264282227
    10. '   ' → logprob: -11.511255264282227

Token 775: ''))
' (ID: 15277)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03813685104250908
    2. ')' → logprob: -3.2881369590759277
    3. '))
' → logprob: -10.16313648223877
    4. ')))' → logprob: -11.03813648223877
    5. ' ))' → logprob: -11.03813648223877
    6. ''))' → logprob: -11.53813648223877
    7. '）' → logprob: -12.28813648223877
    8. '       ' → logprob: -12.66313648223877
    9. '   ' → logprob: -13.28813648223877
    10. ')
' → logprob: -13.28813648223877

Token 776: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041266098618507385
    2. '	return' → logprob: -3.5412662029266357
    3. 'return' → logprob: -4.541265964508057
    4. ' return' → logprob: -7.291265964508057
    5. '<|end|>' → logprob: -10.416266441345215
    6. '    
' → logprob: -10.791266441345215
    7. ' states' → logprob: -11.291266441345215
    8. '```' → logprob: -11.916266441345215
    9. ':return' → logprob: -11.916266441345215
    10. '
' → logprob: -12.041266441345215

Token 777: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.34272500872612
    2. '   ' → logprob: -1.4677250385284424
    3. '	return' → logprob: -3.3427250385284424
    4. ' return' → logprob: -3.8427250385284424
    5. '```' → logprob: -7.092724800109863
    6. ')' → logprob: -7.467724800109863
    7. ')return' → logprob: -7.592724800109863
    8. ')
' → logprob: -7.967724800109863
    9. '
' → logprob: -8.592724800109863
    10. ':return' → logprob: -8.717724800109863

Token 778: ' ' (ID: 220)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07395262271165848
    2. ' return' → logprob: -2.9489526748657227
    3. '   ' → logprob: -4.448952674865723
    4. '	return' → logprob: -4.948952674865723
    5. ')' → logprob: -10.698952674865723
    6. ' ' → logprob: -10.948952674865723
    7. ')return' → logprob: -11.073952674865723
    8. ':return' → logprob: -11.448952674865723
    9. '<|end|>' → logprob: -11.573952674865723
    10. ' states' → logprob: -11.573952674865723

Token 779: '追加' (ID: 136463)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10063157230615616
    2. ' return' → logprob: -2.4756314754486084
    3. '	return' → logprob: -4.8506317138671875
    4. '   ' → logprob: -5.7256317138671875
    5. ' states' → logprob: -7.7256317138671875
    6. 'states' → logprob: -9.975631713867188
    7. ':return' → logprob: -11.100631713867188
    8. '
' → logprob: -11.975631713867188
    9. ' ' → logprob: -12.100631713867188
    10. 'eturn' → logprob: -12.225631713867188

Token 780: 'で' (ID: 4344)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4501081705093384
    2. '<|end|>' → logprob: -1.4501081705093384
    3. 'return' → logprob: -2.700108051300049
    4. '(' → logprob: -3.825108051300049
    5. '(states' → logprob: -4.575108051300049
    6. '<|end|>' → logprob: -5.075108051300049
    7. 'states' → logprob: -5.450108051300049
    8. ' states' → logprob: -5.700108051300049
    9. '	return' → logprob: -5.825108051300049
    10. ' return' → logprob: -5.950108051300049

Token 781: '終' (ID: 65491)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19787390530109406
    2. ' if' → logprob: -2.572873830795288
    3. 'return' → logprob: -2.947873830795288
    4. '   ' → logprob: -3.697873830795288
    5. 'states' → logprob: -4.947874069213867
    6. ' states' → logprob: -5.447874069213867
    7. '#' → logprob: -5.572874069213867
    8. ' return' → logprob: -5.822874069213867
    9. 'elif' → logprob: -5.822874069213867
    10. '
' → logprob: -6.947874069213867

Token 782: 'わ' (ID: 20473)
  Prédit: '了'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '了' → logprob: -0.537611186504364
    2. 'わ' → logprob: -2.162611246109009
    3. 'return' → logprob: -2.537611246109009
    4. '```' → logprob: -3.287611246109009
    5. 'if' → logprob: -3.537611246109009
    6. '=end' → logprob: -3.537611246109009
    7. '#' → logprob: -4.03761100769043
    8. ')' → logprob: -4.16261100769043
    9. 'def' → logprob: -4.53761100769043
    10. 'end' → logprob: -4.66261100769043

Token 783: 'る' (ID: 6996)
  Prédit: '了'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '了' → logprob: -0.03867018222808838
    2. 'わ' → logprob: -3.288670063018799
    3. 'り' → logprob: -7.913670063018799
    4. '点' → logprob: -9.788670539855957
    5. '端' → logprob: -10.288670539855957
    6. '了解' → logprob: -10.663670539855957
    7. '盤' → logprob: -10.913670539855957
    8. '了一' → logprob: -11.163670539855957
    9. '0' → logprob: -11.288670539855957
    10. 'end' → logprob: -11.413670539855957

Token 784: 'ケース' (ID: 108006)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6567402482032776
    2. ' states' → logprob: -1.2817401885986328
    3. 'states' → logprob: -2.406740188598633
    4. '   ' → logprob: -3.156740188598633
    5. ' return' → logprob: -3.406740188598633
    6. '(states' → logprob: -4.406740188598633
    7. '<|end|>' → logprob: -4.781740188598633
    8. 'if' → logprob: -6.156740188598633
    9. '_states' → logprob: -6.531740188598633
    10. '<|end|>' → logprob: -6.531740188598633

Token 785: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3230259120464325
    2. '(' → logprob: -1.8230259418487549
    3. '(states' → logprob: -3.948025941848755
    4. '       ' → logprob: -4.073025703430176
    5. '	if' → logprob: -4.073025703430176
    6. '<|end|>' → logprob: -4.323025703430176
    7. ' (' → logprob: -4.698025703430176
    8. '	' → logprob: -4.698025703430176
    9. ' states' → logprob: -5.198025703430176
    10. ' if' → logprob: -5.323025703430176

Token 786: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7038573622703552
    2. '<|end|>' → logprob: -0.9538573622703552
    3. '       ' → logprob: -2.328857421875
    4. '<|end|>' → logprob: -4.078857421875
    5. '	return' → logprob: -6.953857421875
    6. '        
' → logprob: -7.328857421875
    7. '    ' → logprob: -7.453857421875
    8. 'return' → logprob: -7.703857421875
    9. '(' → logprob: -7.828857421875
    10. '    
' → logprob: -8.328857421875

Token 787: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8618580102920532
    2. '   ' → logprob: -0.9868580102920532
    3. ' if' → logprob: -1.6118580102920532
    4. '       ' → logprob: -5.986857891082764
    5. '	if' → logprob: -6.361857891082764
    6. 'return' → logprob: -7.486857891082764
    7. ' ' → logprob: -8.611858367919922
    8. ' states' → logprob: -9.236858367919922
    9. 'states' → logprob: -9.486858367919922
    10. '    ' → logprob: -10.111858367919922

Token 788: ' is' (ID: 382)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9456104636192322
    2. '(j' → logprob: -0.9456104636192322
    3. ' j' → logprob: -1.945610523223877
    4. 'j' → logprob: -2.570610523223877
    5. '(' → logprob: -6.445610523223877
    6. '((' → logprob: -6.945610523223877
    7. ' ' → logprob: -8.445610046386719
    8. ' is' → logprob: -8.570610046386719
    9. '   ' → logprob: -8.695610046386719
    10. ' ((' → logprob: -8.945610046386719

Token 789: '_game' (ID: 41386)
  Prédit: '_game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_game' → logprob: -2.546478935983032e-05
    2. 'game' → logprob: -11.500025749206543
    3. 'Game' → logprob: -12.500025749206543
    4. '_GAME' → logprob: -12.750025749206543
    5. '(game' → logprob: -13.125025749206543
    6. '_Game' → logprob: -13.500025749206543
    7. ' game' → logprob: -13.625025749206543
    8. '_j' → logprob: -14.375025749206543
    9. ' Game' → logprob: -14.500025749206543
    10. '_' → logprob: -14.500025749206543

Token 790: '_over' (ID: 34788)
  Prédit: '_over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_over' → logprob: -1.3663626305060461e-05
    2. 'over' → logprob: -11.37501335144043
    3. '_end' → logprob: -13.87501335144043
    4. ' over' → logprob: -15.00001335144043
    5. '_OVER' → logprob: -15.75001335144043
    6. '_' → logprob: -15.87501335144043
    7. 'Over' → logprob: -16.12501335144043
    8. '_out' → logprob: -16.50001335144043
    9. 'お' → logprob: -16.87501335144043
    10. '_finished' → logprob: -17.12501335144043

Token 791: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0024969447404146194
    2. '(' → logprob: -6.002496719360352
    3. ' (' → logprob: -11.377496719360352
    4. '((' → logprob: -11.627496719360352
    5. '(
' → logprob: -14.502496719360352
    6. '(i' → logprob: -15.377496719360352
    7. ')' → logprob: -17.00249671936035
    8. 'j' → logprob: -17.50249671936035
    9. '(k' → logprob: -17.62749671936035
    10. '   ' → logprob: -17.87749671936035

Token 792: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005227002315223217
    2. ',' → logprob: -5.880227088928223
    3. ' +' → logprob: -6.505227088928223
    4. ',j' → logprob: -7.130227088928223
    5. '+j' → logprob: -9.755227088928223
    6. ' ,' → logprob: -10.630227088928223
    7. '+,' → logprob: -11.505227088928223
    8. '   ' → logprob: -11.755227088928223
    9. '＋' → logprob: -11.755227088928223
    10. ',y' → logprob: -12.880227088928223

Token 793: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.933173426659778e-05
    2. '4' → logprob: -10.625069618225098
    3. '5' → logprob: -11.125069618225098
    4. '2' → logprob: -11.250069618225098
    5. ' ' → logprob: -11.250069618225098
    6. '3' → logprob: -14.000069618225098
    7. '```' → logprob: -14.375069618225098
    8. 'j' → logprob: -14.437569618225098
    9. '+' → logprob: -14.562569618225098
    10. '   ' → logprob: -14.875069618225098

Token 794: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005133562372066081
    2. ',j' → logprob: -8.500513076782227
    3. ' ,' → logprob: -8.625513076782227
    4. ',y' → logprob: -9.000513076782227
    5. ')' → logprob: -13.000513076782227
    6. '<|end|>' → logprob: -13.625513076782227
    7. ',
' → logprob: -14.250513076782227
    8. ' ' → logprob: -14.875513076782227
    9. '‌,' → logprob: -15.125513076782227
    10. '，' → logprob: -15.250513076782227

Token 795: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3868737816810608
    2. ' y' → logprob: -1.136873722076416
    3. '   ' → logprob: -13.136874198913574
    4. ' ' → logprob: -14.761874198913574
    5. '	y' → logprob: -15.386874198913574
    6. '    ' → logprob: -15.886874198913574
    7. '  ' → logprob: -16.636873245239258
    8. '       ' → logprob: -17.761873245239258
    9. '(y' → logprob: -18.011873245239258
    10. ')y' → logprob: -18.136873245239258

Token 796: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15565693378448486
    2. ',' → logprob: -2.6556568145751953
    3. ')' → logprob: -3.1556568145751953
    4. '):
' → logprob: -3.5306568145751953
    5. '   ' → logprob: -7.155656814575195
    6. ' ):' → logprob: -8.030656814575195
    7. '       ' → logprob: -8.155656814575195
    8. '[' → logprob: -9.030656814575195
    9. '+' → logprob: -9.530656814575195
    10. ')：' → logprob: -9.530656814575195

Token 797: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7715098857879639
    2. '           ' → logprob: -1.1465098857879639
    3. '   ' → logprob: -2.396509885787964
    4. ':' → logprob: -2.896509885787964
    5. ' and' → logprob: -3.021509885787964
    6. ':
' → logprob: -4.146510124206543
    7. ' or' → logprob: -5.896510124206543
    8. ' states' → logprob: -6.146510124206543
    9. ',' → logprob: -6.896510124206543
    10. '.' → logprob: -7.521510124206543

Token 798: ' states' (ID: 9407)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5617927312850952
    2. ' states' → logprob: -1.0617927312850952
    3. 'states' (adapté à ' states') → logprob: -2.5617928504943848
    4. '       ' → logprob: -5.811792850494385
    5. '   ' → logprob: -5.811792850494385
    6. '(states' → logprob: -7.936792850494385
    7. '               ' → logprob: -8.061792373657227
    8. '.states' → logprob: -9.936792373657227
    9. '	st' → logprob: -11.186792373657227
    10. '_states' → logprob: -11.186792373657227

Token 799: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008623320609331131
    2. '.' → logprob: -4.758623123168945
    3. ' .' → logprob: -12.133623123168945
    4. '           ' → logprob: -13.758623123168945
    5. 'append' → logprob: -14.383623123168945
    6. '.app' → logprob: -14.633623123168945
    7. '   ' → logprob: -14.758623123168945
    8. '.
' → logprob: -15.633623123168945
    9. '.extend' → logprob: -16.133623123168945
    10. ').' → logprob: -16.383623123168945

Token 800: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -5.431207682704553e-05
    2. '(' → logprob: -9.875054359436035
    3. '(
' → logprob: -13.500054359436035
    4. ' ((' → logprob: -13.875054359436035
    5. '(((' → logprob: -15.625054359436035
    6. '(j' → logprob: -16.25005340576172
    7. ' ' → logprob: -17.00005340576172
    8. ' (' → logprob: -17.75005340576172
    9. '   ' → logprob: -17.87505340576172
    10. ',' → logprob: -18.12505340576172

Token 801: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2076038122177124
    2. '(j' → logprob: -1.7076038122177124
    3. ' (' → logprob: -5.582603931427002
    4. ' j' → logprob: -6.082603931427002
    5. '   ' → logprob: -9.457603454589844
    6. '	j' → logprob: -10.832603454589844
    7. ',j' → logprob: -12.082603454589844
    8. ' ' → logprob: -12.082603454589844
    9. '  ' → logprob: -12.457603454589844
    10. '[j' → logprob: -12.707603454589844

Token 802: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00016754455282352865
    2. ' +' → logprob: -8.875167846679688
    3. '+,' → logprob: -11.375167846679688
    4. ',' → logprob: -11.500167846679688
    5. '＋' → logprob: -12.875167846679688
    6. '+
' → logprob: -13.125167846679688
    7. '   ' → logprob: -14.625167846679688
    8. ')+' → logprob: -15.625167846679688
    9. ' ,' → logprob: -16.125167846679688
    10. ' ' → logprob: -16.250167846679688

Token 803: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023154958034865558
    2. '2' → logprob: -8.625231742858887
    3. ' ' → logprob: -10.375231742858887
    4. '0' → logprob: -11.250231742858887
    5. '```' → logprob: -13.125231742858887
    6. '   ' → logprob: -13.375231742858887
    7. '+' → logprob: -14.312731742858887
    8. ')' → logprob: -14.875231742858887
    9. '１' → logprob: -15.562731742858887
    10. '-' → logprob: -15.562731742858887

Token 804: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030817187507636845
    2. ',y' → logprob: -8.2503080368042
    3. ' ,' → logprob: -10.0003080368042
    4. ',j' → logprob: -14.7503080368042
    5. ',
' → logprob: -15.3753080368042
    6. '   ' → logprob: -15.8753080368042
    7. '<|end|>' → logprob: -15.8753080368042
    8. '‌,' → logprob: -16.125308990478516
    9. 'y' → logprob: -16.250308990478516
    10. ' ' → logprob: -16.375308990478516

Token 805: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.06196858361363411
    2. 'y' → logprob: -2.8119685649871826
    3. ',y' → logprob: -14.811968803405762
    4. ',' → logprob: -15.061968803405762
    5. '	y' → logprob: -15.311968803405762
    6. ')y' → logprob: -17.186967849731445
    7. ' ' → logprob: -17.311967849731445
    8. '<|end|>' → logprob: -18.436967849731445
    9. ')' → logprob: -18.686967849731445
    10. '    ' → logprob: -18.686967849731445

Token 806: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.921253225300461e-05
    2. ' ,' → logprob: -10.125069618225098
    3. ')' → logprob: -11.500069618225098
    4. '))' → logprob: -11.875069618225098
    5. '   ' → logprob: -12.000069618225098
    6. ','' → logprob: -12.750069618225098
    7. '           ' → logprob: -14.125069618225098
    8. ' ' → logprob: -14.750069618225098
    9. '       ' → logprob: -15.375069618225098
    10. ',None' → logprob: -15.375069618225098

Token 807: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.32510116696357727
    2. ' '' → logprob: -1.3251011371612549
    3. ''' → logprob: -4.450101375579834
    4. ' ' → logprob: -9.700100898742676
    5. ' A' → logprob: -11.075100898742676
    6. 'A' → logprob: -12.200100898742676
    7. '"A' → logprob: -12.950100898742676
    8. '’A' → logprob: -13.325100898742676
    9. '   ' → logprob: -13.325100898742676
    10. ''C' → logprob: -13.575100898742676

Token 808: 'A' (ID: 32)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.008685601875185966
    2. 'A' → logprob: -4.75868558883667
    3. ' '' → logprob: -10.633686065673828
    4. ''' → logprob: -10.758686065673828
    5. '"A' → logprob: -11.758686065673828
    6. 'B' → logprob: -12.258686065673828
    7. '’A' → logprob: -12.383686065673828
    8. '   ' → logprob: -12.883686065673828
    9. '	A' → logprob: -13.383686065673828
    10. ' A' → logprob: -13.633686065673828

Token 809: ''))
' (ID: 15277)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00046212802408263087
    2. ')' → logprob: -8.125462532043457
    3. '))
' → logprob: -8.750462532043457
    4. ''))' → logprob: -12.500462532043457
    5. ' ))' → logprob: -13.750462532043457
    6. '   ' → logprob: -13.875462532043457
    7. ')))' → logprob: -13.875462532043457
    8. '"))' → logprob: -14.625462532043457
    9. '))

' → logprob: -15.625462532043457
    10. '       ' → logprob: -16.00046157836914

Token 810: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29791662096977234
    2. '<|end|>' → logprob: -1.5479166507720947
    3. '   ' → logprob: -3.4229166507720947
    4. ')' → logprob: -4.672916412353516
    5. '<|end|>' → logprob: -6.922916412353516
    6. '	' → logprob: -7.047916412353516
    7. '[' → logprob: -8.797916412353516
    8. '	return' → logprob: -8.797916412353516
    9. '           ' → logprob: -9.172916412353516
    10. '        ' → logprob: -9.547916412353516

Token 811: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5910496711730957
    2. '       ' → logprob: -1.0910496711730957
    3. '<|end|>' → logprob: -2.5910496711730957
    4. ' if' → logprob: -4.091049671173096
    5. '	if' → logprob: -5.466049671173096
    6. 'if' (adapté à ' if') → logprob: -5.716049671173096
    7. ' ' → logprob: -5.966049671173096
    8. ')' → logprob: -6.091049671173096
    9. '<|end|>' → logprob: -6.216049671173096
    10. '	return' → logprob: -6.466049671173096

Token 812: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.012518009170889854
    2. 'is' → logprob: -4.637517929077148
    3. ' (' → logprob: -6.262517929077148
    4. ' not' → logprob: -8.262517929077148
    5. '(j' → logprob: -8.887517929077148
    6. ' j' → logprob: -8.887517929077148
    7. '   ' → logprob: -9.262517929077148
    8. '(is' → logprob: -9.387517929077148
    9. '(' → logprob: -9.762517929077148
    10. 'not' → logprob: -10.637517929077148

Token 813: '_game' (ID: 41386)
  Prédit: '_game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_game' → logprob: -4.9424725148128346e-05
    2. '_' → logprob: -10.875049591064453
    3. '(j' → logprob: -11.625049591064453
    4. '_j' → logprob: -12.750049591064453
    5. 'game' → logprob: -12.875049591064453
    6. '(' → logprob: -13.125049591064453
    7. '_Game' → logprob: -13.125049591064453
    8. '_games' → logprob: -13.375049591064453
    9. '(game' → logprob: -13.500049591064453
    10. 'Game' → logprob: -13.500049591064453

Token 814: '_over' (ID: 34788)
  Prédit: '_over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_over' → logprob: -6.051066520740278e-05
    2. 'over' → logprob: -10.375060081481934
    3. '(j' → logprob: -10.500060081481934
    4. 'Over' → logprob: -14.875060081481934
    5. '_' → logprob: -15.375060081481934
    6. ' over' → logprob: -15.750060081481934
    7. '_o' → logprob: -15.875060081481934
    8. '(y' → logprob: -15.875060081481934
    9. '_OVER' → logprob: -15.875060081481934
    10. '_off' → logprob: -16.12506103515625

Token 815: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.00016504127415828407
    2. '(' → logprob: -8.750164985656738
    3. ' (' → logprob: -12.000164985656738
    4. 'j' → logprob: -15.875164985656738
    5. '(
' → logprob: -15.875164985656738
    6. ',j' → logprob: -16.875165939331055
    7. '((' → logprob: -18.375165939331055
    8. '	j' → logprob: -19.000165939331055
    9. '   ' → logprob: -19.250165939331055
    10. ',' → logprob: -19.500165939331055

Token 816: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034151703119277954
    2. '+' → logprob: -3.409151792526245
    3. ' ,' → logprob: -8.659152030944824
    4. ',j' → logprob: -8.659152030944824
    5. '+,' → logprob: -9.784152030944824
    6. ',y' → logprob: -10.409152030944824
    7. ' +' → logprob: -10.534152030944824
    8. '   ' → logprob: -10.784152030944824
    9. ' ' → logprob: -11.284152030944824
    10. '```' → logprob: -12.659152030944824

Token 817: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6931559443473816
    2. ' y' → logprob: -0.6931559443473816
    3. '   ' → logprob: -12.443156242370605
    4. '	y' → logprob: -13.568156242370605
    5. ' ' → logprob: -13.818156242370605
    6. '    ' → logprob: -13.818156242370605
    7. '(y' → logprob: -13.818156242370605
    8. '  ' → logprob: -15.693156242370605
    9. ',y' → logprob: -16.19315528869629
    10. '     ' → logprob: -17.06815528869629

Token 818: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.074907287256792e-05
    2. ' +' → logprob: -9.75006103515625
    3. '＋' → logprob: -14.00006103515625
    4. ',' → logprob: -14.12506103515625
    5. '+,' → logprob: -14.75006103515625
    6. '+
' → logprob: -15.75006103515625
    7. '   ' → logprob: -16.00006103515625
    8. ' ' → logprob: -17.12506103515625
    9. '[' → logprob: -17.25006103515625
    10. '+y' → logprob: -17.62506103515625

Token 819: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009184855734929442
    2. '+' → logprob: -7.000918388366699
    3. ' ' → logprob: -12.1259183883667
    4. 'y' → logprob: -14.3759183883667
    5. '   ' → logprob: -15.3759183883667
    6. '１' → logprob: -15.6259183883667
    7. '```' → logprob: -16.063419342041016
    8. '(' → logprob: -16.438419342041016
    9. '+=' → logprob: -16.438419342041016
    10. '-' → logprob: -16.500919342041016

Token 820: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22600217163562775
    2. '):
' → logprob: -1.6010022163391113
    3. ')' → logprob: -7.726002216339111
    4. ',' → logprob: -9.351001739501953
    5. '   ' → logprob: -10.726001739501953
    6. '):
' → logprob: -11.101001739501953
    7. '):

' → logprob: -11.726001739501953
    8. '       ' → logprob: -12.601001739501953
    9. ' ):' → logprob: -12.601001739501953
    10. '+' → logprob: -12.976001739501953

Token 821: '           ' (ID: 352)
  Prédit: '(states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(states' → logprob: -0.12880444526672363
    2. '           ' → logprob: -2.1288044452667236
    3. ' states' → logprob: -6.6288042068481445
    4. 'states' → logprob: -8.003804206848145
    5. ' (' → logprob: -9.378804206848145
    6. '(st' → logprob: -10.253804206848145
    7. '.states' → logprob: -10.628804206848145
    8. '(' → logprob: -10.753804206848145
    9. '.append' → logprob: -11.253804206848145
    10. '               ' → logprob: -11.503804206848145

Token 822: ' states' (ID: 9407)
  Prédit: ' states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.7091271877288818
    2. '(states' → logprob: -0.7091271877288818
    3. 'states' (adapté à ' states') → logprob: -4.209127426147461
    4. ' (' → logprob: -6.959127426147461
    5. '.states' → logprob: -11.084127426147461
    6. '           ' → logprob: -11.709127426147461
    7. '_states' → logprob: -11.834127426147461
    8. 'States' → logprob: -11.959127426147461
    9. '(state' → logprob: -13.334127426147461
    10. ' States' → logprob: -13.584127426147461

Token 823: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0019299437990412116
    2. '.' → logprob: -6.251929759979248
    3. 'append' → logprob: -14.251930236816406
    4. ' .' → logprob: -14.376930236816406
    5. '           ' → logprob: -16.751930236816406
    6. '．' → logprob: -18.251930236816406
    7. '   ' → logprob: -18.376930236816406
    8. '.Append' → logprob: -18.626930236816406
    9. '.add' → logprob: -18.751930236816406
    10. '.app' → logprob: -18.876930236816406

Token 824: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.0280383548888494e-06
    2. ' ((' → logprob: -14.250000953674316
    3. '(' → logprob: -15.375000953674316
    4. '(
' → logprob: -18.125001907348633
    5. '[(' → logprob: -18.875001907348633
    6. '(j' → logprob: -19.000001907348633
    7. '```' → logprob: -19.750001907348633
    8. ' ' → logprob: -19.875001907348633
    9. '`' → logprob: -20.875001907348633
    10. '   ' → logprob: -21.000001907348633

Token 825: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0004125575942452997
    2. '(j' → logprob: -7.875412464141846
    3. ' j' → logprob: -10.375412940979004
    4. '	j' → logprob: -14.500412940979004
    5. 'y' → logprob: -15.375412940979004
    6. '   ' → logprob: -15.750412940979004
    7. ',j' → logprob: -16.250411987304688
    8. ' (' → logprob: -16.500411987304688
    9. '[j' → logprob: -16.750411987304688
    10. '(' → logprob: -18.000411987304688

Token 826: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002378673671046272
    2. '+' → logprob: -9.375237464904785
    3. ' ,' → logprob: -9.500237464904785
    4. ',y' → logprob: -9.500237464904785
    5. ',j' → logprob: -13.375237464904785
    6. ' ' → logprob: -14.500237464904785
    7. '```' → logprob: -15.125237464904785
    8. '+,' → logprob: -15.375237464904785
    9. ' +' → logprob: -15.875237464904785
    10. '   ' → logprob: -16.3752384185791

Token 827: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12692894041538239
    2. ' y' → logprob: -2.1269290447235107
    3. ' ' → logprob: -14.87692928314209
    4. '   ' → logprob: -15.00192928314209
    5. '(y' → logprob: -15.87692928314209
    6. '	y' → logprob: -16.376928329467773
    7. '    ' → logprob: -17.376928329467773
    8. '  ' → logprob: -17.751928329467773
    9. '+' → logprob: -17.751928329467773
    10. '     ' → logprob: -18.751928329467773

Token 828: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.618001053633634e-05
    2. ' +' → logprob: -11.250025749206543
    3. ',' → logprob: -11.500025749206543
    4. '+,' → logprob: -13.375025749206543
    5. '＋' → logprob: -13.875025749206543
    6. '+
' → logprob: -15.375025749206543
    7. '```' → logprob: -16.75002670288086
    8. '1' → logprob: -16.75002670288086
    9. '   ' → logprob: -16.87502670288086
    10. ' ' → logprob: -16.87502670288086

Token 829: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016641122056171298
    2. '+' → logprob: -6.501664161682129
    3. 'y' → logprob: -8.876664161682129
    4. ' ' → logprob: -11.501664161682129
    5. '   ' → logprob: -11.751664161682129
    6. ' y' → logprob: -13.626664161682129
    7. '```' → logprob: -14.001664161682129
    8. '(' → logprob: -15.001664161682129
    9. '(y' → logprob: -15.126664161682129
    10. ' +' → logprob: -15.251664161682129

Token 830: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015741224342491478
    2. '))' → logprob: -9.625157356262207
    3. ' ,' → logprob: -9.750157356262207
    4. ')' → logprob: -10.875157356262207
    5. '           ' → logprob: -11.750157356262207
    6. ',
' → logprob: -13.750157356262207
    7. ')))' → logprob: -13.875157356262207
    8. '),' → logprob: -14.250157356262207
    9. '       ' → logprob: -14.625157356262207
    10. '   ' → logprob: -14.750157356262207

Token 831: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0015087933279573917
    2. ' '' → logprob: -6.501508712768555
    3. 'B' → logprob: -12.751508712768555
    4. ' ' → logprob: -13.376508712768555
    5. '"B' → logprob: -14.126508712768555
    6. '   ' → logprob: -14.501508712768555
    7. ' B' → logprob: -15.001508712768555
    8. ''b' → logprob: -16.376508712768555
    9. '  ' → logprob: -16.501508712768555
    10. ' ' → logprob: -16.876508712768555

Token 832: 'B' (ID: 33)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08910631388425827
    2. 'B' → logprob: -2.464106321334839
    3. ' '' → logprob: -9.089106559753418
    4. ' B' → logprob: -10.464106559753418
    5. '   ' → logprob: -11.589106559753418
    6. '"B' → logprob: -12.214106559753418
    7. ' ' → logprob: -12.839106559753418
    8. '  ' → logprob: -13.464106559753418
    9. ')' → logprob: -13.964106559753418
    10. '`' → logprob: -13.964106559753418

Token 833: ''))
' (ID: 15277)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.020634500309824944
    2. ')' → logprob: -3.895634412765503
    3. ''))' → logprob: -9.895634651184082
    4. '))
' → logprob: -10.645634651184082
    5. ')))' → logprob: -12.020634651184082
    6. '   ' → logprob: -12.145634651184082
    7. ' ))' → logprob: -13.145634651184082
    8. '       ' → logprob: -13.270634651184082
    9. '"))' → logprob: -13.520634651184082
    10. '）' → logprob: -14.770634651184082

Token 834: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0167874526232481
    2. '	return' → logprob: -5.016787528991699
    3. '<|end|>' → logprob: -5.016787528991699
    4. 'return' → logprob: -6.141787528991699
    5. ')' → logprob: -7.516787528991699
    6. '<|end|>' → logprob: -9.0167875289917
    7. ' return' → logprob: -9.1417875289917
    8. '[' → logprob: -9.3917875289917
    9. '```' → logprob: -9.6417875289917
    10. ']' → logprob: -9.8917875289917

Token 835: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08516981452703476
    2. 'return' (adapté à ' return') → logprob: -2.585169792175293
    3. '	return' → logprob: -5.710169792175293
    4. ' return' → logprob: -5.835169792175293
    5. '
' → logprob: -11.335169792175293
    6. '    
' → logprob: -12.710169792175293
    7. '       ' → logprob: -12.710169792175293
    8. ' ' → logprob: -12.960169792175293
    9. ')return' → logprob: -13.960169792175293
    10. '   ' → logprob: -14.085169792175293

Token 836: ' states' (ID: 9407)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.0005532711511477828
    2. ' states' → logprob: -7.500553131103516
    3. 'state' → logprob: -15.625553131103516
    4. '(states' → logprob: -16.500553131103516
    5. '.states' → logprob: -19.875553131103516
    6. 'spaces' → logprob: -20.625553131103516
    7. 'stats' → logprob: -20.750553131103516
    8. '_states' → logprob: -20.875553131103516
    9. 'States' → logprob: -21.000553131103516
    10. 'st' → logprob: -21.875553131103516

Token 837: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 838: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 839: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0254961010068655
    2. ')' → logprob: -5.025496006011963
    3. ' states' → logprob: -5.525496006011963
    4. ' ' → logprob: -5.525496006011963
    5. 'j' → logprob: -6.025496006011963
    6. '[' → logprob: -6.525496006011963
    7. 'states' → logprob: -6.525496006011963
    8. '.' → logprob: -6.900496006011963
    9. '#' (adapté à ' #') → logprob: -7.025496006011963
    10. '```' → logprob: -7.775496006011963

Token 840: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03192979842424393
    2. ' states' → logprob: -4.281929969787598
    3. 'states' → logprob: -5.281929969787598
    4. '       ' → logprob: -6.406929969787598
    5. 'else' → logprob: -6.656929969787598
    6. '    ' → logprob: -6.781929969787598
    7. ' ' → logprob: -6.781929969787598
    8. ')' → logprob: -6.781929969787598
    9. 'return' → logprob: -6.906929969787598
    10. ' else' → logprob: -7.656929969787598

Token 841: '4' (ID: 19)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1677429676055908
    2. 'states' → logprob: -1.4177429676055908
    3. 'if' → logprob: -2.042742967605591
    4. 'else' → logprob: -2.042742967605591
    5. 'j' → logprob: -2.917742967605591
    6. '[]' → logprob: -3.542742967605591
    7. 'elif' → logprob: -3.667742967605591
    8. 'return' → logprob: -4.042742729187012
    9. ' states' → logprob: -4.167742729187012
    10. 'for' → logprob: -4.667742729187012

Token 842: '未' (ID: 16392)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2606571912765503
    2. '<|end|>' → logprob: -2.51065731048584
    3. 'elif' → logprob: -3.13565731048584
    4. '<=' → logprob: -3.26065731048584
    5. '>=' → logprob: -4.26065731048584
    6. ' and' → logprob: -4.88565731048584
    7. '+' → logprob: -4.88565731048584
    8. ' -' → logprob: -5.01065731048584
    9. ' <=' → logprob: -5.13565731048584
    10. '4' → logprob: -5.38565731048584

Token 843: '満' (ID: 103646)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.30170905590057373
    2. '-' → logprob: -1.8017090559005737
    3. '```' → logprob: -3.1767091751098633
    4. '=' → logprob: -5.051709175109863
    5. '満' → logprob: -5.176709175109863
    6. '#' → logprob: -5.551709175109863
    7. '1' → logprob: -5.926709175109863
    8. '3' → logprob: -6.051709175109863
    9. '続きを' → logprob: -6.051709175109863
    10. '<|end|>' → logprob: -6.426709175109863

Token 844: 'でも' (ID: 45996)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.019008127972483635
    2. 'and' → logprob: -4.019008159637451
    3. '<|end|>' → logprob: -8.269007682800293
    4. '   ' → logprob: -8.644007682800293
    5. ':' → logprob: -9.019007682800293
    6. ' or' → logprob: -9.019007682800293
    7. ',' → logprob: -9.019007682800293
    8. '[' → logprob: -11.519007682800293
    9. ' ' → logprob: -11.644007682800293
    10. '<|end|>' → logprob: -11.769007682800293

Token 845: '片' (ID: 4810)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.41154205799102783
    2. ' j' → logprob: -1.9115420579910278
    3. '   ' → logprob: -2.5365419387817383
    4. ' (' → logprob: -3.6615419387817383
    5. 'y' → logprob: -3.7865419387817383
    6. 'j' → logprob: -4.036541938781738
    7. ' if' → logprob: -4.286541938781738
    8. 'elif' → logprob: -4.911541938781738
    9. ' elif' → logprob: -5.411541938781738
    10. '(' → logprob: -5.536541938781738

Token 846: '方' (ID: 4983)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5330859422683716
    2. '<=' → logprob: -1.6580859422683716
    3. ')' → logprob: -2.408085823059082
    4. ' <=' → logprob: -3.158085823059082
    5. '<' → logprob: -3.783085823059082
    6. '   ' → logprob: -3.908085823059082
    7. '>' → logprob: -4.158085823059082
    8. '>=' → logprob: -4.908085823059082
    9. ',' → logprob: -5.283085823059082
    10. '=' → logprob: -5.283085823059082

Token 847: 'が' (ID: 6632)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.2965980768203735
    2. ' <' → logprob: -1.7965980768203735
    3. ' <=' → logprob: -1.9215980768203735
    4. '+' → logprob: -2.296597957611084
    5. ' ==' → logprob: -2.421597957611084
    6. '>=' → logprob: -2.796597957611084
    7. ' >' → logprob: -3.046597957611084
    8. '<=' → logprob: -3.546597957611084
    9. '==' → logprob: -3.796597957611084
    10. '<' → logprob: -3.796597957611084

Token 848: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.008918622508645058
    2. '>=' → logprob: -5.258918762207031
    3. '5' → logprob: -6.133918762207031
    4. '>' → logprob: -7.258918762207031
    5. ' ' → logprob: -8.258918762207031
    6. '==' → logprob: -9.133918762207031
    7. '```' → logprob: -9.258918762207031
    8. '<=' → logprob: -9.508918762207031
    9. '6' → logprob: -9.633918762207031
    10. ' >=' → logprob: -9.883918762207031

Token 849: '以上' (ID: 27177)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.1881412267684937
    2. '>=' → logprob: -1.4381412267684937
    3. ' or' → logprob: -2.313141345977783
    4. '   ' → logprob: -2.438141345977783
    5. '以上' → logprob: -2.938141345977783
    6. 'or' → logprob: -2.938141345977783
    7. '>' → logprob: -3.063141345977783
    8. ',' → logprob: -3.438141345977783
    9. '<=' → logprob: -4.313141345977783
    10. ' >' → logprob: -4.313141345977783

Token 850: 'の' (ID: 3385)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6055670380592346
    2. ':' → logprob: -1.2305669784545898
    3. ' and' → logprob: -2.60556697845459
    4. ':
' → logprob: -2.60556697845459
    5. 'and' → logprob: -4.73056697845459
    6. ' or' → logprob: -6.23056697845459
    7. ',' → logprob: -6.85556697845459
    8. ' states' → logprob: -6.98056697845459
    9. '       ' → logprob: -7.73056697845459
    10. '):
' → logprob: -8.85556697845459

Token 851: '不' (ID: 3428)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.6013873219490051
    2. ' states' → logprob: -1.2263872623443604
    3. 'return' → logprob: -2.8513872623443604
    4. 'if' → logprob: -2.9763872623443604
    5. 'elif' → logprob: -4.7263875007629395
    6. 'else' → logprob: -4.7263875007629395
    7. '```' → logprob: -4.8513875007629395
    8. '状態' → logprob: -5.8513875007629395
    9. '場合' → logprob: -5.9763875007629395
    10. '続きを' → logprob: -5.9763875007629395

Token 852: '正' (ID: 10170)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.031610131263733
    2. 'return' → logprob: -1.906610131263733
    3. '定' → logprob: -2.6566100120544434
    4. '   ' → logprob: -2.7816100120544434
    5. ' return' → logprob: -3.1566100120544434
    6. '完全' → logprob: -3.2816100120544434
    7. '）' → logprob: -3.9066100120544434
    8. '続' → logprob: -3.9066100120544434
    9. '均' → logprob: -4.031610012054443
    10. '当' → logprob: -4.031610012054443

Token 853: '状態' (ID: 175682)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5243430137634277
    2. ')' → logprob: -1.7743430137634277
    3. '):' → logprob: -2.0243430137634277
    4. ' states' → logprob: -3.2743430137634277
    5. 'の場合' → logprob: -4.399343013763428
    6. 'の' → logprob: -4.899343013763428
    7. 'states' → logprob: -4.899343013763428
    8. ' or' → logprob: -5.399343013763428
    9. 'を' → logprob: -5.774343013763428
    10. ':return' → logprob: -5.774343013763428

Token 854: 'は' (ID: 5205)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32845741510391235
    2. '   ' → logprob: -1.9534573554992676
    3. ':
' → logprob: -3.0784573554992676
    4. ' states' → logprob: -3.2034573554992676
    5. ':return' → logprob: -3.3284573554992676
    6. '):' → logprob: -5.453457355499268
    7. '.' → logprob: -6.328457355499268
    8. '<|end|>' → logprob: -6.453457355499268
    9. '(states' → logprob: -6.578457355499268
    10. 'states' → logprob: -6.703457355499268

Token 855: 'ない' (ID: 47592)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2774934768676758
    2. 'return' → logprob: -1.6524934768676758
    3. '   ' → logprob: -3.777493476867676
    4. '[]
' → logprob: -4.152493476867676
    5. ' return' → logprob: -5.652493476867676
    6. 'states' → logprob: -5.652493476867676
    7. ' states' → logprob: -6.027493476867676
    8. ' []' → logprob: -6.152493476867676
    9. ' ' → logprob: -8.777493476867676
    10. '  ' → logprob: -9.152493476867676

Token 856: 'ので' (ID: 69719)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020190998911857605
    2. 'return' → logprob: -5.395191192626953
    3. ' states' → logprob: -5.770191192626953
    4. 'states' → logprob: -5.895191192626953
    5. '<|end|>' → logprob: -6.020191192626953
    6. '[]' → logprob: -6.520191192626953
    7. ':return' → logprob: -6.770191192626953
    8. '```' → logprob: -7.145191192626953
    9. ')' → logprob: -7.395191192626953
    10. '.' → logprob: -7.520191192626953

Token 857: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.010004210285842419
    2. '[]' → logprob: -4.885004043579102
    3. ' return' → logprob: -6.885004043579102
    4. 'pass' → logprob: -7.510004043579102
    5. 'states' → logprob: -7.635004043579102
    6. '   ' → logprob: -8.260004043579102
    7. ' states' → logprob: -10.635004043579102
    8. '	return' → logprob: -11.260004043579102
    9. ' pass' → logprob: -11.635004043579102
    10. '#' → logprob: -11.760004043579102

Token 858: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02599986270070076
    2. '[]' → logprob: -4.276000022888184
    3. 'return' → logprob: -5.401000022888184
    4. '	return' → logprob: -5.901000022888184
    5. 'states' → logprob: -7.026000022888184
    6. ' states' → logprob: -7.151000022888184
    7. '[' → logprob: -7.276000022888184
    8. '\t' → logprob: -7.401000022888184
    9. '	' → logprob: -7.401000022888184
    10. '       ' → logprob: -8.901000022888184

Token 859: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16909320652484894
    2. 'return' → logprob: -2.169093132019043
    3. 'states' → logprob: -3.669093132019043
    4. '[]' → logprob: -5.044093132019043
    5. ' states' → logprob: -5.544093132019043
    6. 'pass' → logprob: -5.919093132019043
    7. ' return' → logprob: -7.419093132019043
    8. ')' → logprob: -7.794093132019043
    9. '	return' → logprob: -7.794093132019043
    10. '       ' → logprob: -8.044093132019043

Token 860: ' 通' (ID: 52461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23944668471813202
    2. 'return' → logprob: -2.1144466400146484
    3. 'states' → logprob: -3.1144466400146484
    4. '[]' → logprob: -3.2394466400146484
    5. ' states' → logprob: -5.364446640014648
    6. '	return' → logprob: -6.989446640014648
    7. 'pass' → logprob: -7.114446640014648
    8. '[' → logprob: -7.614446640014648
    9. ' return' → logprob: -8.239446640014648
    10. '       ' → logprob: -8.614446640014648

Token 861: '常' (ID: 17731)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.55340176820755
    2. '```' → logprob: -1.1784017086029053
    3. 'return' → logprob: -2.6784017086029053
    4. 'inue' → logprob: -3.8034017086029053
    5. '#' → logprob: -5.553401947021484
    6. '常' → logprob: -5.678401947021484
    7. '   ' → logprob: -5.928401947021484
    8. ' return' → logprob: -6.053401947021484
    9. 'in' → logprob: -6.178401947021484
    10. 'ue' → logprob: -6.303401947021484

Token 862: '追加' (ID: 136463)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.9265213012695312
    2. '   ' → logprob: -1.1765213012695312
    3. 'states' → logprob: -1.8015213012695312
    4. '_states' → logprob: -3.0515213012695312
    5. '(states' → logprob: -3.3015213012695312
    6. 'return' → logprob: -3.8015213012695312
    7. ' return' → logprob: -5.551521301269531
    8. ')' → logprob: -5.551521301269531
    9. '_' → logprob: -5.926521301269531
    10. ' (' → logprob: -6.051521301269531

Token 863: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1205357164144516
    2. 'states' → logprob: -3.1205356121063232
    3. '(states' → logprob: -3.6205356121063232
    4. '[]' → logprob: -3.9955356121063232
    5. ' states' → logprob: -4.245535850524902
    6. '(' → logprob: -5.745535850524902
    7. '<|end|>' → logprob: -5.995535850524902
    8. '.' → logprob: -6.620535850524902
    9. '[(' → logprob: -8.120535850524902
    10. '[' → logprob: -8.120535850524902

Token 864: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45757681131362915
    2. ' states' → logprob: -1.5825767517089844
    3. 'states' → logprob: -2.0825767517089844
    4. '(states' → logprob: -3.4575767517089844
    5. '	st' → logprob: -5.332576751708984
    6. '\t' → logprob: -7.832576751708984
    7. '.states' → logprob: -9.207576751708984
    8. '_states' → logprob: -9.707576751708984
    9. '	if' → logprob: -9.957576751708984
    10. '	' → logprob: -10.207576751708984

Token 865: ' states' (ID: 9407)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' (adapté à ' states') → logprob: -0.4131387770175934
    2. '   ' → logprob: -1.663138747215271
    3. ' states' → logprob: -1.913138747215271
    4. '(states' → logprob: -7.1631388664245605
    5. '	st' → logprob: -8.163138389587402
    6. 'if' → logprob: -9.038138389587402
    7. ' if' → logprob: -10.288138389587402
    8. '.states' → logprob: -10.663138389587402
    9. '_states' → logprob: -11.288138389587402
    10. '       ' → logprob: -11.663138389587402

Token 866: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.01106173824518919
    2. '.' → logprob: -4.511061668395996
    3. ' .' → logprob: -11.511061668395996
    4. '.extend' → logprob: -13.011061668395996
    5. '.app' → logprob: -14.261061668395996
    6. '.add' → logprob: -15.261061668395996
    7. 'append' → logprob: -15.386061668395996
    8. '.Append' → logprob: -16.261062622070312
    9. '.setdefault' → logprob: -16.511062622070312
    10. '．' → logprob: -16.636062622070312

Token 867: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.500001907348633
    3. '(j' → logprob: -16.125001907348633
    4. ' ((' → logprob: -16.750001907348633
    5. '   ' → logprob: -17.750001907348633
    6. ' ' → logprob: -19.750001907348633
    7. '  ' → logprob: -20.125001907348633
    8. '[(' → logprob: -20.125001907348633
    9. '(
' → logprob: -21.000001907348633
    10. '(((' → logprob: -21.625001907348633

Token 868: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0056825182400643826
    2. '(j' → logprob: -5.255682468414307
    3. ' j' → logprob: -7.755682468414307
    4. ' (' → logprob: -10.880682945251465
    5. '	j' → logprob: -14.380682945251465
    6. '   ' → logprob: -14.380682945251465
    7. ',j' → logprob: -15.505682945251465
    8. '[j' → logprob: -16.50568199157715
    9. ' ' → logprob: -17.00568199157715
    10. '  ' → logprob: -17.13068199157715

Token 869: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005672106635756791
    2. ' +' → logprob: -7.500567436218262
    3. ',' → logprob: -11.250567436218262
    4. '+j' → logprob: -14.375567436218262
    5. ',j' → logprob: -15.500567436218262
    6. '＋' → logprob: -16.125566482543945
    7. '+,' → logprob: -16.375566482543945
    8. ' ,' → logprob: -16.500566482543945
    9. '   ' → logprob: -16.750566482543945
    10. '()+' → logprob: -16.875566482543945

Token 870: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027503803372383118
    2. 'j' → logprob: -3.652503728866577
    3. '+' → logprob: -6.902503967285156
    4. '4' → logprob: -9.527503967285156
    5. 'y' → logprob: -9.652503967285156
    6. ' j' → logprob: -10.777503967285156
    7. '(j' → logprob: -11.277503967285156
    8. ' ' → logprob: -11.277503967285156
    9. '(' → logprob: -11.777503967285156
    10. ' +' → logprob: -13.652503967285156

Token 871: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020795092859771103
    2. ' ,' → logprob: -8.500207901000977
    3. ',y' → logprob: -12.375207901000977
    4. ',j' → logprob: -16.000207901000977
    5. ',
' → logprob: -17.250207901000977
    6. '‌,' → logprob: -17.250207901000977
    7. ' y' → logprob: -17.500207901000977
    8. '<|end|>' → logprob: -17.500207901000977
    9. ' ' → logprob: -18.250207901000977
    10. 'y' → logprob: -18.500207901000977

Token 872: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.31326258182525635
    2. 'y' → logprob: -1.3132625818252563
    3. ',y' → logprob: -14.563262939453125
    4. ',' → logprob: -15.563262939453125
    5. '	y' → logprob: -15.563262939453125
    6. ')y' → logprob: -17.938262939453125
    7. ' ' → logprob: -18.438262939453125
    8. '(y' → logprob: -18.688262939453125
    9. '   ' → logprob: -18.813262939453125
    10. '    ' → logprob: -19.188262939453125

Token 873: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.706686690449715e-05
    2. ' ,' → logprob: -9.625066757202148
    3. ')' → logprob: -15.125066757202148
    4. ',
' → logprob: -15.875066757202148
    5. '<|end|>' → logprob: -15.875066757202148
    6. '   ' → logprob: -16.37506675720215
    7. '‌,' → logprob: -16.62506675720215
    8. ' ' → logprob: -16.62506675720215
    9. '),' → logprob: -16.62506675720215
    10. ','' → logprob: -17.00006675720215

Token 874: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.014177851378917694
    2. ' '' → logprob: -4.2641777992248535
    3. ''' → logprob: -11.889178276062012
    4. 'A' → logprob: -12.514178276062012
    5. ' A' → logprob: -13.389178276062012
    6. '"A' → logprob: -14.014178276062012
    7. ' ' → logprob: -14.139178276062012
    8. '’A' → logprob: -14.389178276062012
    9. ''S' → logprob: -17.514177322387695
    10. '   ' → logprob: -17.764177322387695

Token 875: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00010878815373871475
    2. ' A' → logprob: -9.87510871887207
    3. ''A' → logprob: -9.87510871887207
    4. ''' → logprob: -12.37510871887207
    5. ' '' → logprob: -14.00010871887207
    6. '"A' → logprob: -15.50010871887207
    7. 'B' → logprob: -15.62510871887207
    8. ')' → logprob: -16.12510871887207
    9. ' ' → logprob: -16.37510871887207
    10. ''))' → logprob: -16.62510871887207

Token 876: ''))
' (ID: 15277)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.051561519503593445
    2. ''))' → logprob: -3.0515615940093994
    3. '))
' → logprob: -6.05156135559082
    4. ''))
' → logprob: -7.42656135559082
    5. ' ))' → logprob: -11.67656135559082
    6. ')' → logprob: -11.80156135559082
    7. '"))' → logprob: -13.05156135559082
    8. '   ' → logprob: -14.42656135559082
    9. ''' → logprob: -15.30156135559082
    10. '))

' → logprob: -15.42656135559082

Token 877: '   ' (ID: 271)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.7693478465080261
    2. 'states' → logprob: -0.7693478465080261
    3. '(states' → logprob: -3.019347906112671
    4. ')
' → logprob: -4.519347667694092
    5. ')' → logprob: -4.894347667694092
    6. '<|end|>' → logprob: -6.269347667694092
    7. '.states' → logprob: -6.644347667694092
    8. '   ' → logprob: -6.769347667694092
    9. '_states' → logprob: -7.269347667694092
    10. '[
' → logprob: -8.26934814453125

Token 878: ' states' (ID: 9407)
  Prédit: ' states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.9988101124763489
    2. 'states' (adapté à ' states') → logprob: -1.123810052871704
    3. '(states' → logprob: -1.998810052871704
    4. ')' → logprob: -2.498810052871704
    5. ')
' → logprob: -2.498810052871704
    6. '<|end|>' → logprob: -6.248810291290283
    7. '
' → logprob: -6.623810291290283
    8. '.states' → logprob: -6.748810291290283
    9. '   ' → logprob: -7.623810291290283
    10. '_states' → logprob: -7.998810291290283

Token 879: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.1604909896850586
    2. ',' → logprob: -1.9104909896850586
    3. '.' → logprob: -9.285490989685059
    4. 'append' → logprob: -9.535490989685059
    5. ' ,' → logprob: -9.785490989685059
    6. '+' → logprob: -11.660490989685059
    7. ',
' → logprob: -11.785490989685059
    8. ')' → logprob: -11.785490989685059
    9. ' .' → logprob: -11.910490989685059
    10. '   ' → logprob: -12.910490989685059

Token 880: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -13.000003814697266
    3. ' ((' → logprob: -14.750003814697266
    4. ',' → logprob: -15.125003814697266
    5. '(j' → logprob: -15.750003814697266
    6. '(
' → logprob: -16.125003814697266
    7. '[(' → logprob: -17.500003814697266
    8. '```' → logprob: -17.500003814697266
    9. ')((' → logprob: -18.000003814697266
    10. ' ' → logprob: -19.000003814697266

Token 881: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0013404814526438713
    2. ' j' → logprob: -6.626340389251709
    3. '(j' → logprob: -11.251340866088867
    4. '(' → logprob: -14.251340866088867
    5. ' (' → logprob: -14.501340866088867
    6. ',' → logprob: -15.376340866088867
    7. ',j' → logprob: -16.001340866088867
    8. '	j' → logprob: -17.376340866088867
    9. ' ' → logprob: -17.501340866088867
    10. ' ' → logprob: -17.501340866088867

Token 882: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002559753193054348
    2. ' ,' → logprob: -8.625255584716797
    3. ',y' → logprob: -9.750255584716797
    4. ',j' → logprob: -11.000255584716797
    5. '+' → logprob: -14.375255584716797
    6. ' y' → logprob: -15.750255584716797
    7. ' (' → logprob: -15.875255584716797
    8. ' ' → logprob: -16.000255584716797
    9. 'y' → logprob: -16.500255584716797
    10. '(' → logprob: -16.625255584716797

Token 883: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.31326231360435486
    2. 'y' → logprob: -1.3132623434066772
    3. '(y' → logprob: -15.063261985778809
    4. ' ' → logprob: -16.063262939453125
    5. '	y' → logprob: -17.063262939453125
    6. '   ' → logprob: -17.438262939453125
    7. ' ' → logprob: -17.688262939453125
    8. 'j' → logprob: -18.063262939453125
    9. 'x' → logprob: -18.313262939453125
    10. ',y' → logprob: -18.313262939453125

Token 884: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.6537622034084052e-05
    2. ' +' → logprob: -10.62502670288086
    3. ',' → logprob: -13.50002670288086
    4. '+,' → logprob: -14.87502670288086
    5. '＋' → logprob: -16.12502670288086
    6. '+y' → logprob: -16.62502670288086
    7. '1' → logprob: -17.00002670288086
    8. '   ' → logprob: -17.00002670288086
    9. '+
' → logprob: -17.37502670288086
    10. ' ' → logprob: -18.00002670288086

Token 885: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -12.500006675720215
    3. '+' → logprob: -12.625006675720215
    4. 'y' → logprob: -17.50000762939453
    5. '   ' → logprob: -17.62500762939453
    6. '```' → logprob: -17.75000762939453
    7. '
' → logprob: -18.00000762939453
    8. '4' → logprob: -19.25000762939453
    9. '１' → logprob: -19.25000762939453
    10. ' +' → logprob: -19.68750762939453

Token 886: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001182052365038544
    2. ' ,' → logprob: -9.125118255615234
    3. '   ' → logprob: -12.750118255615234
    4. ','' → logprob: -12.750118255615234
    5. ')' → logprob: -13.000118255615234
    6. '))' → logprob: -15.000118255615234
    7. '',' → logprob: -15.375118255615234
    8. '),' → logprob: -15.875118255615234
    9. ',
' → logprob: -16.125118255615234
    10. '‌,' → logprob: -16.250118255615234

Token 887: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.029761141166090965
    2. ' '' → logprob: -3.5297610759735107
    3. 'B' → logprob: -12.52976131439209
    4. ' ' → logprob: -12.90476131439209
    5. ''S' → logprob: -14.15476131439209
    6. ')' → logprob: -14.40476131439209
    7. ' ' → logprob: -14.40476131439209
    8. ' B' → logprob: -14.52976131439209
    9. '`' → logprob: -14.77976131439209
    10. '('' → logprob: -15.02976131439209

Token 888: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5767346620559692
    2. ''' → logprob: -0.8267346620559692
    3. ' B' → logprob: -7.45173454284668
    4. ' '' → logprob: -8.57673454284668
    5. '"B' → logprob: -11.07673454284668
    6. ' ' → logprob: -13.07673454284668
    7. '   ' → logprob: -13.32673454284668
    8. '`' → logprob: -13.70173454284668
    9. '  ' → logprob: -13.70173454284668
    10. '_B' → logprob: -13.95173454284668

Token 889: ''))
' (ID: 15277)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00030733743915334344
    2. '))
' → logprob: -8.625307083129883
    3. ')' → logprob: -9.750307083129883
    4. ''))' → logprob: -9.750307083129883
    5. ' ))' → logprob: -11.625307083129883
    6. '   ' → logprob: -14.000307083129883
    7. '"))' → logprob: -14.750307083129883
    8. ')))' → logprob: -14.875307083129883
    9. '))

' → logprob: -15.000307083129883
    10. '))
' → logprob: -15.750307083129883

Token 890: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5680264830589294
    2. '	return' → logprob: -1.3180265426635742
    3. '   ' → logprob: -1.9430265426635742
    4. ' return' → logprob: -4.318026542663574
    5. ':return' → logprob: -5.068026542663574
    6. ')return' → logprob: -6.443026542663574
    7. '
' → logprob: -8.443026542663574
    8. ')' → logprob: -8.693026542663574
    9. '<|end|>' → logprob: -8.693026542663574
    10. '	
' → logprob: -8.943026542663574

Token 891: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00903452280908823
    2. ' return' → logprob: -5.259034633636475
    3. ':return' → logprob: -6.384034633636475
    4. '	return' → logprob: -6.509034633636475
    5. '   ' → logprob: -7.884034633636475
    6. '
' → logprob: -9.384034156799316
    7. ')' → logprob: -10.259034156799316
    8. ')return' → logprob: -11.259034156799316
    9. '(return' → logprob: -11.384034156799316
    10. '.' → logprob: -11.384034156799316

Token 892: ' states' (ID: 9407)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.002476135268807411
    2. ' states' → logprob: -6.002476215362549
    3. '(states' → logprob: -15.12747573852539
    4. 'state' → logprob: -15.50247573852539
    5. 'stats' → logprob: -18.12747573852539
    6. 'States' → logprob: -18.62747573852539
    7. '.states' → logprob: -18.62747573852539
    8. '_states' → logprob: -19.12747573852539
    9. 'st' → logprob: -20.75247573852539
    10. ' estados' → logprob: -21.12747573852539

Token 893: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31880325078964233
    2. ':' → logprob: -1.818803310394287
    3. 'd' → logprob: -3.943803310394287
    4. 'j' → logprob: -4.068803310394287
    5. '#' → logprob: -4.193803310394287
    6. 'for' → logprob: -4.443803310394287
    7. 'q' → logprob: -4.568803310394287
    8. 'n' → logprob: -5.318803310394287
    9. '(' → logprob: -5.443803310394287
    10. 'def' → logprob: -5.693803310394287

Token 894: 'goal' (ID: 47313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20787829160690308
    2. ':' → logprob: -2.207878351211548
    3. '#' → logprob: -3.332878351211548
    4. '<|end|>' → logprob: -4.082878112792969
    5. '[' → logprob: -4.957878112792969
    6. 'j' → logprob: -5.207878112792969
    7. '(' → logprob: -5.832878112792969
    8. 'n' → logprob: -7.082878112792969
    9. '.' → logprob: -7.082878112792969
    10. 'd' → logprob: -7.207878112792969

Token 895: ' =' (ID: 314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26510465145111084
    2. '=' → logprob: -2.6401047706604004
    3. ')' → logprob: -2.8901047706604004
    4. ' =' → logprob: -3.6401047706604004
    5. '_' → logprob: -4.5151047706604
    6. 'def' → logprob: -4.7651047706604
    7. ',' → logprob: -4.7651047706604
    8. '_states' → logprob: -5.1401047706604
    9. '.' → logprob: -5.2651047706604
    10. '(' → logprob: -5.2651047706604

Token 896: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06354281306266785
    2. 'deque' → logprob: -3.0635428428649902
    3. '5' → logprob: -5.43854284286499
    4. '[]' → logprob: -5.81354284286499
    5. '6' → logprob: -6.31354284286499
    6. 'False' → logprob: -6.68854284286499
    7. '(j' → logprob: -6.93854284286499
    8. '{' → logprob: -7.18854284286499
    9. '(de' → logprob: -7.68854284286499
    10. '(False' → logprob: -7.81354284286499

Token 897: 'j' (ID: 73)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.02796667255461216
    2. '6' → logprob: -4.277966499328613
    3. '(' → logprob: -4.777966499328613
    4. '0' → logprob: -6.277966499328613
    5. '4' → logprob: -6.527966499328613
    6. 'j' → logprob: -6.902966499328613
    7. '3' → logprob: -7.277966499328613
    8. '(j' → logprob: -9.277966499328613
    9. ')' → logprob: -9.652966499328613
    10. '1' → logprob: -10.652966499328613

Token 898: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002478273818269372
    2. '+' → logprob: -6.752478122711182
    3. ',y' → logprob: -7.127478122711182
    4. ' ,' → logprob: -8.12747859954834
    5. ' +' → logprob: -8.75247859954834
    6. ',j' → logprob: -10.25247859954834
    7. '+,' → logprob: -12.62747859954834
    8. '-' → logprob: -12.75247859954834
    9. ' ' → logprob: -12.87747859954834
    10. '+y' → logprob: -13.75247859954834

Token 899: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0005078765680082142
    2. ' y' → logprob: -7.750507831573486
    3. '0' → logprob: -10.250508308410645
    4. '5' → logprob: -10.625508308410645
    5. '4' → logprob: -12.125508308410645
    6. 'j' → logprob: -12.250508308410645
    7. '6' → logprob: -12.875508308410645
    8. '   ' → logprob: -13.625508308410645
    9. ' ' → logprob: -13.875508308410645
    10. '    ' → logprob: -14.875508308410645

Token 900: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0445127372804563e-05
    2. ',' → logprob: -12.12501049041748
    3. ')
' → logprob: -13.12501049041748
    4. ' )' → logprob: -13.50001049041748
    5. ',)' → logprob: -14.62501049041748
    6. '))' → logprob: -14.87501049041748
    7. '):' → logprob: -16.000009536743164
    8. ')

' → logprob: -16.250009536743164
    9. ')#' → logprob: -16.250009536743164
    10. ')==' → logprob: -16.625009536743164

Token 901: 'paths' (ID: 43656)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.13191799819469452
    2. 'visited' → logprob: -3.006917953491211
    3. 'q' → logprob: -3.381917953491211
    4. 'dp' → logprob: -3.756917953491211
    5. 'from' → logprob: -5.256917953491211
    6. 'dq' → logprob: -5.631917953491211
    7. 'dist' → logprob: -6.256917953491211
    8. 'que' → logprob: -6.381917953491211
    9. 'if' → logprob: -7.131917953491211
    10. 'deque' → logprob: -7.256917953491211

Token 902: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889452576637268
    2. '=' → logprob: -2.57889461517334
    3. '=[]' → logprob: -13.20389461517334
    4. ',' → logprob: -13.95389461517334
    5. '＝' → logprob: -14.07889461517334
    6. ')' → logprob: -14.70389461517334
    7. ' ' → logprob: -15.07889461517334
    8. 'deque' → logprob: -15.95389461517334
    9. '_queue' → logprob: -16.203893661499023
    10. '[' → logprob: -16.578893661499023

Token 903: ' []

' (ID: 32833)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.014410999603569508
    2. '{' → logprob: -4.264410972595215
    3. ' deque' → logprob: -9.264410972595215
    4. '{}' → logprob: -9.764410972595215
    5. '[(' → logprob: -9.764410972595215
    6. 'set' → logprob: -11.139410972595215
    7. '[[' → logprob: -11.764410972595215
    8. '[]' → logprob: -12.139410972595215
    9. 'dict' → logprob: -12.139410972595215
    10. 'default' → logprob: -14.014410972595215

Token 904: 'memo' (ID: 113822)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.005663667805492878
    2. 'q' → logprob: -5.505663871765137
    3. 'deque' → logprob: -7.255663871765137
    4. 'dq' → logprob: -7.505663871765137
    5. 'stack' → logprob: -8.630663871765137
    6. 'que' → logprob: -9.505663871765137
    7. 'visited' → logprob: -9.880663871765137
    8. ' queue' → logprob: -11.505663871765137
    9. 'Q' → logprob: -11.880663871765137
    10. '```' → logprob: -12.630663871765137

Token 905: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520441710948944
    2. ' =' → logprob: -1.5020442008972168
    3. 'd' → logprob: -9.252043724060059
    4. '={}' → logprob: -12.252043724060059
    5. '=set' → logprob: -12.627043724060059
    6. '[' → logprob: -13.002043724060059
    7. 'ization' → logprob: -13.002043724060059
    8. '＝' → logprob: -13.627043724060059
    9. 'ized' → logprob: -13.877043724060059
    10. 'ed' → logprob: -14.752043724060059

Token 906: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0015174767468124628
    2. 'set' → logprob: -6.501517295837402
    3. 'dict' → logprob: -11.126517295837402
    4. '{' → logprob: -15.626517295837402
    5. '{})' → logprob: -16.12651824951172
    6. '[]' → logprob: -16.87651824951172
    7. '[[' → logprob: -17.50151824951172
    8. '{}

' → logprob: -18.00151824951172
    9. '{},' → logprob: -18.50151824951172
    10. ' set' → logprob: -18.87651824951172

Token 907: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.098748053773306e-05
    2. '()<' → logprob: -12.00006103515625
    3. '()\' → logprob: -12.00006103515625
    4. '()
' → logprob: -12.12506103515625
    5. '()=>' → logprob: -12.12506103515625
    6. '{}' → logprob: -12.25006103515625
    7. '()

' → logprob: -12.50006103515625
    8. '()>' → logprob: -12.75006103515625
    9. '{' → logprob: -12.87506103515625
    10. '()]' → logprob: -13.00006103515625

Token 908: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01979137770831585
    2. 'queue' → logprob: -4.019791603088379
    3. 'stack' → logprob: -7.394791603088379
    4. 'from' → logprob: -7.644791603088379
    5. 'q' → logprob: -8.269791603088379
    6. 'deque' → logprob: -8.394791603088379
    7. 'dq' → logprob: -10.144791603088379
    8. 'que' → logprob: -11.769791603088379
    9. 'dp' → logprob: -12.019791603088379
    10. 'Q' → logprob: -12.519791603088379

Token 909: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.12309035658836365
    2. ' dfs' → logprob: -2.3730902671813965
    3. 'dp' → logprob: -4.2480902671813965
    4. 'b' → logprob: -5.4980902671813965
    5. ' bfs' → logprob: -5.9980902671813965
    6. 'search' → logprob: -6.7480902671813965
    7. 'solve' → logprob: -8.248090744018555
    8. 'count' → logprob: -9.498090744018555
    9. 'f' → logprob: -9.748090744018555
    10. ' search' → logprob: -9.873090744018555

Token 910: '(c' (ID: 2410)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.009272660128772259
    2. '(state' → logprob: -5.384272575378418
    3. '(' → logprob: -5.884272575378418
    4. '(current' → logprob: -7.134272575378418
    5. ' (' → logprob: -7.509272575378418
    6. '(depth' → logprob: -9.259272575378418
    7. '(goal' → logprob: -9.384272575378418
    8. '(next' → logprob: -9.884272575378418
    9. '(game' → logprob: -10.009272575378418
    10. '(node' → logprob: -10.259272575378418

Token 911: 'j' (ID: 73)
  Prédit: 'urrent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrent' → logprob: -0.49263855814933777
    2. '(j' → logprob: -1.2426385879516602
    3. 'j' → logprob: -3.36763858795166
    4. 'urr' → logprob: -3.49263858795166
    5. 'ur' → logprob: -4.11763858795166
    6. 'ount' → logprob: -4.99263858795166
    7. ')' → logprob: -6.49263858795166
    8. '(current' → logprob: -6.49263858795166
    9. '(c' → logprob: -7.11763858795166
    10. 'fs' → logprob: -7.49263858795166

Token 912: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014596428954973817
    2. ',j' → logprob: -7.37645959854126
    3. ' ,' → logprob: -7.62645959854126
    4. ',y' → logprob: -8.001460075378418
    5. 'j' → logprob: -12.751460075378418
    6. 'y' → logprob: -13.126460075378418
    7. '‌,' → logprob: -13.876460075378418
    8. '_,' → logprob: -14.126460075378418
    9. ',k' → logprob: -14.376460075378418
    10. ',c' → logprob: -14.376460075378418

Token 913: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.002351264702156186
    2. 'cyj' → logprob: -6.1273512840271
    3. ' cy' → logprob: -8.752350807189941
    4. '.cy' → logprob: -12.127350807189941
    5. 'c' → logprob: -14.127350807189941
    6. 'cych' → logprob: -14.377350807189941
    7. 'cj' → logprob: -14.752350807189941
    8. '```' → logprob: -15.627350807189941
    9. ' ' → logprob: -16.127351760864258
    10. 'ocy' → logprob: -16.377351760864258

Token 914: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.709589421749115
    2. '):
' → logprob: -0.959589421749115
    3. ',' → logprob: -2.0845894813537598
    4. ')' → logprob: -7.95958948135376
    5. '):
' → logprob: -9.584589004516602
    6. '):

' → logprob: -9.584589004516602
    7. 'def' → logprob: -9.959589004516602
    8. ' ,' → logprob: -10.084589004516602
    9. '   ' → logprob: -10.334589004516602
    10. '),' → logprob: -10.834589004516602

Token 915: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.0066469223238527775
    2. ' path' → logprob: -5.756647109985352
    3. 'visited' → logprob: -6.006647109985352
    4. 'score' → logprob: -8.131647109985352
    5. 'cp' → logprob: -8.881647109985352
    6. 'c' → logprob: -9.131647109985352
    7. 'history' → logprob: -9.256647109985352
    8. 'depth' → logprob: -9.756647109985352
    9. 'ck' → logprob: -10.006647109985352
    10. 'route' → logprob: -10.381647109985352

Token 916: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013276818208396435
    2. ',' → logprob: -4.763277053833008
    3. '):
' → logprob: -5.388277053833008
    4. ')' → logprob: -9.638277053833008
    5. '):
' → logprob: -11.638277053833008
    6. ':' → logprob: -13.138277053833008
    7. '=' → logprob: -13.763277053833008
    8. '   ' → logprob: -13.888277053833008
    9. ' ):' → logprob: -13.888277053833008
    10. '):

' → logprob: -14.888277053833008

Token 917: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011560432612895966
    2. ' if' → logprob: -4.886560440063477
    3. ' tokens' → logprob: -6.386560440063477
    4. '<|end|>' → logprob: -7.511560440063477
    5. '	if' → logprob: -8.136560440063477
    6. 'tokens' → logprob: -8.136560440063477
    7. ' states' → logprob: -8.261560440063477
    8. ' token' → logprob: -8.511560440063477
    9. '	token' → logprob: -8.886560440063477
    10. '    
' → logprob: -9.761560440063477

Token 918: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08728045970201492
    2. ' if' → logprob: -3.087280511856079
    3. 'key' → logprob: -3.337280511856079
    4. ' key' → logprob: -6.2122802734375
    5. '   ' → logprob: -8.0872802734375
    6. 'token' → logprob: -10.0872802734375
    7. 'next' → logprob: -10.0872802734375
    8. 'state' → logprob: -11.5872802734375
    9. 'stack' → logprob: -12.4622802734375
    10. 'for' → logprob: -13.0872802734375

Token 919: ' (' (ID: 350)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.015283406712114811
    2. ' is' → logprob: -4.390283584594727
    3. '(c' → logprob: -6.515283584594727
    4. '(is' → logprob: -7.640283584594727
    5. ' (' → logprob: -7.640283584594727
    6. 'cj' → logprob: -8.265283584594727
    7. '(j' → logprob: -10.765283584594727
    8. ' cj' → logprob: -10.890283584594727
    9. 'c' → logprob: -11.265283584594727
    10. '(' → logprob: -11.265283584594727

Token 920: 'cj' (ID: 173094)
  Prédit: 'cj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cj' → logprob: -0.0013003537897020578
    2. '(c' → logprob: -6.75130033493042
    3. ' cj' → logprob: -9.001300811767578
    4. 'c' → logprob: -12.126300811767578
    5. ' (' → logprob: -14.501300811767578
    6. '   ' → logprob: -15.251300811767578
    7. ')c' → logprob: -16.001300811767578
    8. '(' → logprob: -16.126300811767578
    9. ')' → logprob: -16.876300811767578
    10. ',c' → logprob: -17.001300811767578

Token 921: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.274932143744081e-05
    2. ',c' → logprob: -10.625042915344238
    3. ',j' → logprob: -12.125042915344238
    4. ',y' → logprob: -12.250042915344238
    5. ' ,' → logprob: -12.625042915344238
    6. ',
' → logprob: -13.625042915344238
    7. '<|end|>' → logprob: -13.875042915344238
    8. '‌,' → logprob: -14.375042915344238
    9. ',current' → logprob: -15.250042915344238
    10. ',next' → logprob: -15.250042915344238

Token 922: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -1.0206720617134124e-05
    2. ' cy' → logprob: -11.50001049041748
    3. 'cyj' → logprob: -17.000009536743164
    4. '.cy' → logprob: -18.250009536743164
    5. ' ' → logprob: -19.125009536743164
    6. 'y' → logprob: -20.750009536743164
    7. 'cycles' → logprob: -20.875009536743164
    8. 'c' → logprob: -21.000009536743164
    9. '   ' → logprob: -21.375009536743164
    10. 'cycled' → logprob: -21.875009536743164

Token 923: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005300992634147406
    2. ',' → logprob: -5.255300998687744
    3. ',)' → logprob: -10.255300521850586
    4. ')==' → logprob: -11.005300521850586
    5. ' in' → logprob: -12.130300521850586
    6. ' )' → logprob: -12.505300521850586
    7. '   ' → logprob: -13.255300521850586
    8. 'in' → logprob: -13.880300521850586
    9. '),' → logprob: -14.380300521850586
    10. ',j' → logprob: -14.630300521850586

Token 924: ' ==' (ID: 951)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0647367611527443
    2. ')' → logprob: -3.439736843109131
    3. ' in' → logprob: -3.689736843109131
    4. ',' → logprob: -5.189736843109131
    5. ',in' → logprob: -10.689736366271973
    6. ' ' → logprob: -12.189736366271973
    7. '   ' → logprob: -12.314736366271973
    8. ']' → logprob: -12.439736366271973
    9. '	in' → logprob: -13.189736366271973
    10. ',c' → logprob: -13.189736366271973

Token 925: ' (' (ID: 350)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.0009168167016468942
    2. '(goal' → logprob: -7.000916957855225
    3. '(' → logprob: -12.750916481018066
    4. ' goal' → logprob: -13.250916481018066
    5. '(j' → logprob: -14.625916481018066
    6. 'go' → logprob: -15.875916481018066
    7. '.goal' → logprob: -17.750917434692383
    8. '(g' → logprob: -17.875917434692383
    9. '_goal' → logprob: -18.125917434692383
    10. '(go' → logprob: -18.375917434692383

Token 926: '0' (ID: 15)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.030100924894213676
    2. 'j' → logprob: -3.5301008224487305
    3. '0' → logprob: -9.03010082244873
    4. '5' → logprob: -9.28010082244873
    5. ')' → logprob: -9.65510082244873
    6. '*' → logprob: -10.03010082244873
    7. '(goal' → logprob: -12.28010082244873
    8. ' goal' → logprob: -12.40510082244873
    9. '6' → logprob: -12.78010082244873
    10. 'target' → logprob: -13.15510082244873

Token 927: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1637164789135568e-05
    2. ' ,' → logprob: -11.625011444091797
    3. '0' → logprob: -13.625011444091797
    4. ',
' → logprob: -14.500011444091797
    5. '<|end|>' → logprob: -14.625011444091797
    6. '‌,' → logprob: -16.000011444091797
    7. ',None' → logprob: -16.125011444091797
    8. ',j' → logprob: -17.000011444091797
    9. ' ' → logprob: -17.250011444091797
    10. ',y' → logprob: -17.375011444091797

Token 928: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '1' → logprob: -17.50000762939453
    4. '4' → logprob: -18.75000762939453
    5. '۰' → logprob: -19.00000762939453
    6. ')' → logprob: -19.25000762939453
    7. 'j' → logprob: -19.56250762939453
    8. '5' → logprob: -20.06250762939453
    9. '2' → logprob: -20.12500762939453
    10. '  ' → logprob: -20.31250762939453

Token 929: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47473910450935364
    2. ')' → logprob: -0.9747390747070312
    3. '):
' → logprob: -7.349739074707031
    4. ',' → logprob: -11.974739074707031
    5. '   ' → logprob: -12.724739074707031
    6. ' ):' → logprob: -13.099739074707031
    7. ' or' → logprob: -13.349739074707031
    8. ' )' → logprob: -13.724739074707031
    9. ':' → logprob: -14.099739074707031
    10. '),' → logprob: -14.099739074707031

Token 930: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018982049077749252
    2. '   ' → logprob: -4.51898193359375
    3. ':' → logprob: -5.26898193359375
    4. ':return' → logprob: -6.76898193359375
    5. ':
' → logprob: -7.26898193359375
    6. '	return' → logprob: -8.01898193359375
    7. '	' → logprob: -8.01898193359375
    8. ' return' → logprob: -9.14398193359375
    9. '\t' → logprob: -10.39398193359375
    10. 'return' → logprob: -10.39398193359375

Token 931: ' paths' (ID: 23373)
  Prédit: 'paths'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paths' (adapté à ' paths') → logprob: -0.27603667974472046
    2. ' paths' → logprob: -1.9010367393493652
    3. '   ' → logprob: -2.6510367393493652
    4. '       ' → logprob: -4.026036739349365
    5. 'return' → logprob: -6.276036739349365
    6. 'if' → logprob: -7.401036739349365
    7. ' return' → logprob: -8.026036262512207
    8. ' if' → logprob: -8.151036262512207
    9. '
' → logprob: -8.526036262512207
    10. '           ' → logprob: -10.651036262512207

Token 932: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003334393841214478
    2. '.' → logprob: -8.125333786010742
    3. '.extend' → logprob: -10.875333786010742
    4. 'append' → logprob: -11.000333786010742
    5. '=' → logprob: -14.875333786010742
    6. '.app' → logprob: -15.000333786010742
    7. '.=' → logprob: -15.125333786010742
    8. '<|end|>' → logprob: -15.375333786010742
    9. '_append' → logprob: -16.125333786010742
    10. '.clear' → logprob: -16.250333786010742

Token 933: '(path' (ID: 10993)
  Prédit: '(path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -0.00041243841405957937
    2. '(list' → logprob: -8.125411987304688
    3. '(tuple' → logprob: -9.500411987304688
    4. 'path' → logprob: -10.625411987304688
    5. '(' → logprob: -11.125411987304688
    6. '((' → logprob: -13.750411987304688
    7. '('' → logprob: -14.750411987304688
    8. '([' → logprob: -14.750411987304688
    9. 'list' → logprob: -15.500411987304688
    10. '([]' → logprob: -15.625411987304688

Token 934: '[::-' (ID: 159890)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005558282136917114
    2. ')
' → logprob: -5.255558490753174
    3. ')return' → logprob: -8.380558013916016
    4. '   ' → logprob: -10.130558013916016
    5. '[::-' → logprob: -10.505558013916016
    6. ' )' → logprob: -11.880558013916016
    7. '[:]' → logprob: -12.380558013916016
    8. '[:-' → logprob: -12.630558013916016
    9. ':return' → logprob: -12.755558013916016
    10. '
' → logprob: -13.755558013916016

Token 935: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09305552393198013
    2. 'verse' → logprob: -2.968055486679077
    3. 'v' → logprob: -5.343055725097656
    4. '0' → logprob: -5.843055725097656
    5. 't' → logprob: -5.843055725097656
    6. 'copy' → logprob: -6.093055725097656
    7. 'code' → logprob: -6.343055725097656
    8. '+' → logprob: -6.468055725097656
    9. 'versal' → logprob: -6.468055725097656
    10. 'c' → logprob: -6.593055725097656

Token 936: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010821137111634016
    2. ')
' → logprob: -6.876081943511963
    3. ' )' → logprob: -11.126082420349121
    4. '())' → logprob: -11.251082420349121
    5. '   ' → logprob: -12.126082420349121
    6. ')
' → logprob: -12.376082420349121
    7. '))' → logprob: -12.626082420349121
    8. '')' → logprob: -13.251082420349121
    9. '])' → logprob: -13.626082420349121
    10. '()' → logprob: -13.751082420349121

Token 937: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18052555620670319
    2. '       ' → logprob: -1.805525541305542
    3. '	return' → logprob: -7.305525779724121
    4. ' return' → logprob: -10.305525779724121
    5. '	' → logprob: -10.555525779724121
    6. '   ' → logprob: -11.555525779724121
    7. '	   ' → logprob: -12.055525779724121
    8. '    ' → logprob: -12.305525779724121
    9. 'return' → logprob: -12.430525779724121
    10. '     ' → logprob: -12.430525779724121

Token 938: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4000568389892578
    2. '       ' → logprob: -1.1500568389892578
    3. '   ' → logprob: -4.650056838989258
    4. ' return' → logprob: -5.775056838989258
    5. '	return' → logprob: -7.775056838989258
    6. ':return' → logprob: -12.275056838989258
    7. ' ' → logprob: -12.650056838989258
    8. '	' → logprob: -12.650056838989258
    9. '           ' → logprob: -14.525056838989258
    10. '
' → logprob: -14.775056838989258

Token 939: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009503189474344254
    2. '    
' → logprob: -5.884503364562988
    3. ' if' → logprob: -6.259503364562988
    4. 'if' → logprob: -6.259503364562988
    5. '\n' → logprob: -7.384503364562988
    6. 'tokens' → logprob: -7.509503364562988
    7. '
' → logprob: -8.134503364562988
    8. '\t' → logprob: -8.134503364562988
    9. ' states' → logprob: -8.384503364562988
    10. '	if' → logprob: -8.884503364562988

Token 940: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13962438702583313
    2. ' if' → logprob: -2.7646243572235107
    3. '	if' → logprob: -4.01462459564209
    4. 'if' → logprob: -4.38962459564209
    5. '    
' → logprob: -4.76462459564209
    6. ' states' → logprob: -4.88962459564209
    7. '\t' → logprob: -5.26462459564209
    8. ' 
' → logprob: -6.51462459564209
    9. '\n' → logprob: -6.51462459564209
    10. '
' → logprob: -6.51462459564209

Token 941: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0762370228767395
    2. 'if' (adapté à ' if') → logprob: -3.3262369632720947
    3. 'key' → logprob: -3.3262369632720947
    4. 'states' → logprob: -6.951237201690674
    5. '   ' → logprob: -8.076236724853516
    6. 'next' → logprob: -8.951236724853516
    7. ' for' → logprob: -9.701236724853516
    8. 'state' → logprob: -10.451236724853516
    9. 'stack' → logprob: -10.826236724853516
    10. 'prev' → logprob: -11.076236724853516

Token 942: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0008411920862272382
    2. '(j' → logprob: -7.37584114074707
    3. ' (' → logprob: -9.12584114074707
    4. '(m' → logprob: -9.50084114074707
    5. '(is' → logprob: -11.12584114074707
    6. 'is' → logprob: -11.87584114074707
    7. '(not' → logprob: -12.37584114074707
    8. 'not' → logprob: -13.50084114074707
    9. '(' → logprob: -13.62584114074707
    10. '(C' → logprob: -14.00084114074707

Token 943: 'cj' (ID: 173094)
  Prédit: 'cj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cj' → logprob: -0.006229994352906942
    2. '(c' → logprob: -5.131229877471924
    3. ' cj' → logprob: -8.256230354309082
    4. 'c' → logprob: -10.256230354309082
    5. '   ' → logprob: -13.131230354309082
    6. ' (' → logprob: -13.381230354309082
    7. ')c' → logprob: -14.131230354309082
    8. 'ci' → logprob: -15.006230354309082
    9. 'not' → logprob: -15.381230354309082
    10. '(' → logprob: -15.506230354309082

Token 944: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023166877508629113
    2. ' ,' → logprob: -8.625231742858887
    3. ',c' → logprob: -10.625231742858887
    4. ',j' → logprob: -11.875231742858887
    5. '<|end|>' → logprob: -12.250231742858887
    6. ',y' → logprob: -12.375231742858887
    7. '‌,' → logprob: -12.875231742858887
    8. ',next' → logprob: -13.500231742858887
    9. ',
' → logprob: -14.000231742858887
    10. ',k' → logprob: -14.250231742858887

Token 945: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -2.1008713702030946e-06
    2. ' cy' → logprob: -13.125001907348633
    3. '   ' → logprob: -16.875001907348633
    4. '.cy' → logprob: -18.625001907348633
    5. ' ' → logprob: -19.000001907348633
    6. 'cx' → logprob: -19.750001907348633
    7. 'cyj' → logprob: -19.750001907348633
    8. 'cj' → logprob: -20.000001907348633
    9. 'cycles' → logprob: -20.125001907348633
    10. 'cycl' → logprob: -20.500001907348633

Token 946: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032646958716213703
    2. ',' → logprob: -6.253264904022217
    3. ',)' → logprob: -6.878264904022217
    4. 'in' → logprob: -9.003264427185059
    5. ' in' → logprob: -9.253264427185059
    6. ' )' → logprob: -10.253264427185059
    7. ')==' → logprob: -10.753264427185059
    8. ' not' → logprob: -12.003264427185059
    9. '   ' → logprob: -12.003264427185059
    10. 'not' → logprob: -12.128264427185059

Token 947: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3851138949394226
    2. 'in' → logprob: -2.0101139545440674
    3. ' not' → logprob: -2.0101139545440674
    4. ',' → logprob: -3.7601139545440674
    5. ')' → logprob: -4.010113716125488
    6. 'not' → logprob: -4.635113716125488
    7. ',j' → logprob: -9.510113716125488
    8. '   ' → logprob: -9.760113716125488
    9. ' ,' → logprob: -9.760113716125488
    10. ',(' → logprob: -9.885113716125488

Token 948: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -4.320199877838604e-07
    2. ' memo' → logprob: -14.75
    3. '.memo' → logprob: -18.25
    4. 'memory' → logprob: -18.75
    5. 'mem' → logprob: -18.875
    6. 'm' → logprob: -19.5
    7. 'mutex' → logprob: -20.25
    8. '```' → logprob: -20.5
    9. 'mint' → logprob: -20.625
    10. 'memor' → logprob: -21.375

Token 949: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06427954882383347
    2. ' and' → logprob: -3.564279556274414
    3. ':return' → logprob: -4.064279556274414
    4. ':
' → logprob: -4.314279556274414
    5. 'and' → logprob: -6.064279556274414
    6. '   ' → logprob: -7.314279556274414
    7. '<|end|>' → logprob: -8.689279556274414
    8. '==' → logprob: -10.314279556274414
    9. ' :' → logprob: -10.439279556274414
    10. '):' → logprob: -10.689279556274414

Token 950: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0672807693481445
    2. '   ' → logprob: -1.4422807693481445
    3. ' True' → logprob: -1.6922807693481445
    4. ':' → logprob: -2.6922807693481445
    5. 'True' → logprob: -2.6922807693481445
    6. 'return' → logprob: -3.5672807693481445
    7. ' and' → logprob: -3.5672807693481445
    8. ':
' → logprob: -4.4422807693481445
    9. ':return' → logprob: -4.6922807693481445
    10. ' return' → logprob: -4.9422807693481445

Token 951: ' for' (ID: 395)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.32006603479385376
    2. 'for' (adapté à ' for') → logprob: -1.320065975189209
    3. 'paths' → logprob: -6.320065975189209
    4. ' for' → logprob: -6.570065975189209
    5. 'if' → logprob: -6.820065975189209
    6. 'memo' → logprob: -6.945065975189209
    7. '   ' → logprob: -7.320065975189209
    8. ' return' → logprob: -7.320065975189209
    9. 'path' → logprob: -8.945066452026367
    10. '       ' → logprob: -10.320066452026367

Token 952: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.32003897428512573
    2. 'prev' → logprob: -1.3200390338897705
    3. '(prev' → logprob: -6.195038795471191
    4. 'previous' → logprob: -7.070038795471191
    5. 'pp' → logprob: -7.320038795471191
    6. 'pth' → logprob: -7.570038795471191
    7. 'cached' → logprob: -7.820038795471191
    8. '(p' → logprob: -8.070038795471191
    9. 'saved' → logprob: -8.070038795471191
    10. 'sub' → logprob: -8.070038795471191

Token 953: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006831875070929527
    2. 'in' → logprob: -5.006831645965576
    3. 'token' → logprob: -10.131832122802734
    4. ' ' → logprob: -10.131832122802734
    5. '_in' → logprob: -11.631832122802734
    6. 'p' → logprob: -11.881832122802734
    7. '_' → logprob: -12.881832122802734
    8. '_token' → logprob: -13.131832122802734
    9. ',' → logprob: -13.256832122802734
    10. 't' → logprob: -13.381832122802734

Token 954: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.005236360710114241
    2. ' memo' → logprob: -5.2552361488342285
    3. 'm' → logprob: -13.130236625671387
    4. '.memo' → logprob: -15.005236625671387
    5. '[m' → logprob: -16.50523567199707
    6. 'paths' → logprob: -17.13023567199707
    7. 'mem' → logprob: -18.25523567199707
    8. 'mime' → logprob: -18.38023567199707
    9. '   ' → logprob: -19.25523567199707
    10. '(m' → logprob: -19.50523567199707

Token 955: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.00862143188714981
    2. '[c' → logprob: -4.7586212158203125
    3. '(c' → logprob: -12.883621215820312
    4. '[
' → logprob: -13.008621215820312
    5. '[j' → logprob: -14.133621215820312
    6. '[' → logprob: -14.633621215820312
    7. ',(' → logprob: -14.883621215820312
    8. ',' → logprob: -15.508621215820312
    9. ' [(' → logprob: -16.133621215820312
    10. ',c' → logprob: -16.258621215820312

Token 956: 'cj' (ID: 173094)
  Prédit: 'cj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cj' → logprob: -1.0280383548888494e-06
    2. ' cj' → logprob: -14.250000953674316
    3. '(c' → logprob: -15.500000953674316
    4. '(' → logprob: -16.000001907348633
    5. 'cji' → logprob: -17.875001907348633
    6. '   ' → logprob: -18.625001907348633
    7. 'c' → logprob: -19.000001907348633
    8. '_c' → logprob: -20.125001907348633
    9. ' ' → logprob: -20.125001907348633
    10. 'cq' → logprob: -20.125001907348633

Token 957: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011085901409387589
    2. ',c' → logprob: -4.8860859870910645
    3. 'cy' → logprob: -5.7610859870910645
    4. ' ,' → logprob: -9.386085510253906
    5. 'cj' → logprob: -9.386085510253906
    6. ',j' → logprob: -9.511085510253906
    7. '   ' → logprob: -11.011085510253906
    8. ',n' → logprob: -11.761085510253906
    9. ',p' → logprob: -11.761085510253906
    10. '[' → logprob: -11.886085510253906

Token 958: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.00014203863975126296
    2. 'cj' → logprob: -8.875142097473145
    3. ' cy' → logprob: -13.875142097473145
    4. '   ' → logprob: -14.375142097473145
    5. 'cyj' → logprob: -15.125142097473145
    6. 'cx' → logprob: -16.000141143798828
    7. ' ' → logprob: -16.000141143798828
    8. 'c' → logprob: -17.250141143798828
    9. ' cj' → logprob: -17.250141143798828
    10. '
' → logprob: -17.375141143798828

Token 959: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.12744645774364471
    2. ')' → logprob: -2.127446413040161
    3. ']' → logprob: -7.87744665145874
    4. ']]:
' → logprob: -9.627446174621582
    5. '):
' → logprob: -11.002446174621582
    6. ']):
' → logprob: -11.627446174621582
    7. '):' → logprob: -11.627446174621582
    8. ']:' → logprob: -11.877446174621582
    9. '])' → logprob: -12.127446174621582
    10. '）' → logprob: -12.252446174621582

Token 960: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.698420524597168
    2. ':
' → logprob: -0.698420524597168
    3. '       ' → logprob: -5.823420524597168
    4. '   ' → logprob: -7.823420524597168
    5. ' :' → logprob: -7.948420524597168
    6. '           ' → logprob: -7.948420524597168
    7. ',' → logprob: -8.573420524597168
    8. ':return' → logprob: -8.823420524597168
    9. '+' → logprob: -9.073420524597168
    10. ' in' → logprob: -9.448420524597168

Token 961: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04736386239528656
    2. ':
' → logprob: -3.672363758087158
    3. ':' → logprob: -4.297363758087158
    4. '       ' → logprob: -5.172363758087158
    5. ' for' → logprob: -7.422363758087158
    6. ',' → logprob: -8.672364234924316
    7. '   ' → logprob: -8.922364234924316
    8. ' :' → logprob: -9.172364234924316
    9. '):
' → logprob: -9.672364234924316
    10. '
' → logprob: -9.922364234924316

Token 962: ' paths' (ID: 23373)
  Prédit: 'paths'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paths' (adapté à ' paths') → logprob: -0.05527275800704956
    2. ' paths' → logprob: -2.9302728176116943
    3. '   ' → logprob: -9.055273056030273
    4. '           ' → logprob: -9.055273056030273
    5. 'path' → logprob: -9.055273056030273
    6. '       ' → logprob: -10.805273056030273
    7. '               ' → logprob: -12.180273056030273
    8. '(paths' → logprob: -12.430273056030273
    9. ' path' → logprob: -13.180273056030273
    10. '.paths' → logprob: -13.305273056030273

Token 963: '.append' (ID: 3709)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.2519940435886383
    2. '.append' → logprob: -1.501994013786316
    3. '.' → logprob: -10.001994132995605
    4. '+=' → logprob: -11.001994132995605
    5. 'extend' → logprob: -13.501994132995605
    6. '.app' → logprob: -14.501994132995605
    7. 'append' → logprob: -15.001994132995605
    8. ' +=' → logprob: -15.001994132995605
    9. '.ext' → logprob: -15.876994132995605
    10. '.ap' → logprob: -16.25199317932129

Token 964: '((' (ID: 2054)
  Prédit: '(path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -0.0033059201668947935
    2. '(p' → logprob: -5.753305912017822
    3. '(' → logprob: -9.62830638885498
    4. 'path' → logprob: -9.87830638885498
    5. '((' → logprob: -11.50330638885498
    6. 'p' → logprob: -15.12830638885498
    7. ' (' → logprob: -15.25330638885498
    8. '(Path' → logprob: -16.003305435180664
    9. ' path' → logprob: -16.128305435180664
    10. '(
' → logprob: -17.003305435180664

Token 965: 'path' (ID: 4189)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.20248153805732727
    2. 'path' → logprob: -1.7024815082550049
    3. ')' → logprob: -7.827481746673584
    4. ')p' → logprob: -8.327481269836426
    5. ' p' → logprob: -9.077481269836426
    6. '(p' → logprob: -9.702481269836426
    7. ' path' → logprob: -9.952481269836426
    8. 'cj' → logprob: -10.577481269836426
    9. 'c' → logprob: -10.702481269836426
    10. '))' → logprob: -11.077481269836426

Token 966: ' +' (ID: 659)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.7960981130599976
    2. '+' → logprob: -0.9210981130599976
    3. ' +' → logprob: -1.9210981130599976
    4. '+p' → logprob: -5.921098232269287
    5. ')[' → logprob: -7.171098232269287
    6. '+[' → logprob: -7.421098232269287
    7. '[:-' → logprob: -9.171097755432129
    8. ' ' → logprob: -10.421097755432129
    9. ')' → logprob: -10.546097755432129
    10. '[:' → logprob: -10.796097755432129

Token 967: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01815626211464405
    2. ' p' → logprob: -4.018156051635742
    3. '(p' → logprob: -13.393156051635742
    4. '[p' → logprob: -13.643156051635742
    5. ' ' → logprob: -14.018156051635742
    6. 'list' → logprob: -14.143156051635742
    7. '[' → logprob: -14.643156051635742
    8. '   ' → logprob: -15.143156051635742
    9. '	p' → logprob: -15.768156051635742
    10. ')' → logprob: -15.768156051635742

Token 968: ')[' (ID: 13637)
  Prédit: ')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.04758577421307564
    2. '))' → logprob: -3.4225857257843018
    3. '[::-' → logprob: -4.547585964202881
    4. ')' → logprob: -5.797585964202881
    5. ').' → logprob: -8.672585487365723
    6. '))[' → logprob: -10.922585487365723
    7. ').__' → logprob: -11.172585487365723
    8. '))
' → logprob: -12.547585487365723
    9. ')))' → logprob: -13.172585487365723
    10. ' )[' → logprob: -13.922585487365723

Token 969: '::-' (ID: 96612)
  Prédit: '::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::-' → logprob: -0.34980064630508423
    2. '[::-' → logprob: -1.2248005867004395
    3. ':' → logprob: -7.5998005867004395
    4. '])' → logprob: -7.9748005867004395
    5. '::' → logprob: -8.849801063537598
    6. ')' → logprob: -9.099801063537598
    7. ':])
' → logprob: -9.349801063537598
    8. '
' → logprob: -9.599801063537598
    9. '])
' → logprob: -10.599801063537598
    10. '1' → logprob: -11.224801063537598

Token 970: '1' (ID: 16)
  Prédit: '::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::-' → logprob: -0.04972069337964058
    2. ':' → logprob: -3.5497207641601562
    3. '1' → logprob: -4.549720764160156
    4. '[::-' → logprob: -5.549720764160156
    5. '-' → logprob: -6.424720764160156
    6. '])' → logprob: -6.799720764160156
    7. ')' → logprob: -7.174720764160156
    8. ':-' → logprob: -7.549720764160156
    9. ')]' → logprob: -7.924720764160156
    10. '::' → logprob: -7.924720764160156

Token 971: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2902367115020752
    2. '])' → logprob: -1.4152367115020752
    3. '           ' → logprob: -5.290236473083496
    4. '])
' → logprob: -6.915236473083496
    5. ')])' → logprob: -7.040236473083496
    6. ')
' → logprob: -7.165236473083496
    7. '       ' → logprob: -7.540236473083496
    8. '))' → logprob: -7.665236473083496
    9. ' )' → logprob: -9.415236473083496
    10. '               ' → logprob: -9.665236473083496

Token 972: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005420696688815951
    2. '           ' → logprob: -8.000541687011719
    3. '   ' → logprob: -8.500541687011719
    4. '	' → logprob: -13.000541687011719
    5. '               ' → logprob: -14.875541687011719
    6. '	   ' → logprob: -15.375541687011719
    7. '<|end|>' → logprob: -16.62554168701172
    8. ',' → logprob: -16.75054168701172
    9. '     ' → logprob: -17.00054168701172
    10. '	       ' → logprob: -17.12554168701172

Token 973: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024923032615333796
    2. '   ' → logprob: -6.002492427825928
    3. '           ' → logprob: -11.37749195098877
    4. 'return' (adapté à ' return') → logprob: -12.62749195098877
    5. '	return' → logprob: -14.75249195098877
    6. '	' → logprob: -15.25249195098877
    7. '     ' → logprob: -15.25249195098877
    8. ')' → logprob: -15.37749195098877
    9. ' return' → logprob: -15.50249195098877
    10. '	   ' → logprob: -16.252492904663086

Token 974: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008690441958606243
    2. ' states' → logprob: -5.258690357208252
    3. '    
' → logprob: -6.758690357208252
    4. 'states' → logprob: -7.133690357208252
    5. 'tokens' → logprob: -7.508690357208252
    6. ' 
' → logprob: -9.00869083404541
    7. '
' → logprob: -9.38369083404541
    8. ' tokens' → logprob: -9.63369083404541
    9. '<|end|>' → logprob: -9.75869083404541
    10. '.' → logprob: -10.00869083404541

Token 975: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6891605257987976
    2. 'states' → logprob: -1.4391605854034424
    3. ' states' → logprob: -1.9391605854034424
    4. ' next' → logprob: -2.6891605854034424
    5. 'next' → logprob: -3.4391605854034424
    6. ' for' → logprob: -5.564160346984863
    7. 'for' → logprob: -5.689160346984863
    8. 'n' → logprob: -6.064160346984863
    9. 'state' → logprob: -6.064160346984863
    10. 's' → logprob: -6.314160346984863

Token 976: ' res' (ID: 694)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04333085939288139
    2. 'states' → logprob: -3.6683309078216553
    3. '   ' → logprob: -4.543330669403076
    4. 'next' → logprob: -5.293330669403076
    5. 'prev' → logprob: -7.668330669403076
    6. 'queue' → logprob: -8.418331146240234
    7. '#' → logprob: -8.918331146240234
    8. ' for' → logprob: -9.043331146240234
    9. 'stack' → logprob: -9.543331146240234
    10. 'if' → logprob: -9.918331146240234

Token 977: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16029135882854462
    2. '=' → logprob: -2.0352914333343506
    3. 'ults' → logprob: -4.4102911949157715
    4. 'ult' → logprob: -6.0352911949157715
    5. 'states' → logprob: -6.9102911949157715
    6. ' states' → logprob: -7.6602911949157715
    7. '=[]' → logprob: -7.9102911949157715
    8. '_states' → logprob: -8.03529167175293
    9. 's' → logprob: -8.28529167175293
    10. '   ' → logprob: -8.53529167175293

Token 978: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -4.56102097814437e-05
    2. '[]
' → logprob: -10.000045776367188
    3. 'deque' → logprob: -16.625045776367188
    4. '[]

' → logprob: -16.750045776367188
    5. ' []' → logprob: -17.125045776367188
    6. '[' → logprob: -17.125045776367188
    7. '{}' → logprob: -17.875045776367188
    8. 'set' → logprob: -18.000045776367188
    9. '[])' → logprob: -18.875045776367188
    10. '[]}' → logprob: -19.875045776367188

Token 979: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10861651599407196
    2. ' for' → logprob: -2.733616590499878
    3. 'for' → logprob: -4.108616352081299
    4. ' states' → logprob: -4.858616352081299
    5. 'states' → logprob: -4.858616352081299
    6. ' next' → logprob: -5.733616352081299
    7. 'next' → logprob: -6.608616352081299
    8. '	for' → logprob: -7.358616352081299
    9. '	next' → logprob: -8.733616828918457
    10. '    
' → logprob: -8.733616828918457

Token 980: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010496005415916443
    2. 'if' → logprob: -7.501049518585205
    3. 'states' → logprob: -8.626049995422363
    4. '   ' → logprob: -8.751049995422363
    5. ' for' → logprob: -9.251049995422363
    6. 'prev' → logprob: -9.876049995422363
    7. 'next' → logprob: -11.876049995422363
    8. 'current' → logprob: -13.251049995422363
    9. 'possible' → logprob: -14.251049995422363
    10. '#' (adapté à ' #') → logprob: -14.376049995422363

Token 981: ' 左' (ID: 166070)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007069839630275965
    2. 'prev' → logprob: -5.257070064544678
    3. 'states' → logprob: -7.132070064544678
    4. 'if' → logprob: -7.382070064544678
    5. '   ' → logprob: -8.25706958770752
    6. 'next' → logprob: -9.63206958770752
    7. ' for' → logprob: -10.13206958770752
    8. '#' → logprob: -11.75706958770752
    9. 'c' → logprob: -11.75706958770752
    10. 'possible' → logprob: -11.75706958770752

Token 982: 'から' (ID: 27500)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10959357768297195
    2. 'states' → logprob: -3.109593629837036
    3. 'right' → logprob: -4.109593391418457
    4. ' for' → logprob: -4.734593391418457
    5. '_states' → logprob: -5.234593391418457
    6. 'token' → logprob: -5.734593391418457
    7. '   ' → logprob: -5.734593391418457
    8. 'tokens' → logprob: -6.109593391418457
    9. 'neighbors' → logprob: -6.109593391418457
    10. ' states' → logprob: -6.109593391418457

Token 983: '来' (ID: 6727)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05004515498876572
    2. 'next' → logprob: -3.9250452518463135
    3. ' for' → logprob: -4.675045013427734
    4. 'states' → logprob: -4.925045013427734
    5. '*' → logprob: -5.675045013427734
    6. 'j' → logprob: -5.925045013427734
    7. 'def' → logprob: -6.675045013427734
    8. 'if' → logprob: -7.300045013427734
    9. '*j' → logprob: -7.300045013427734
    10. 'state' → logprob: -7.300045013427734

Token 984: 'た' (ID: 5598)
  Prédit: 'る'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.5501678586006165
    2. 'た' → logprob: -1.0501677989959717
    3. 'て' → logprob: -2.8001677989959717
    4. '(' → logprob: -5.675168037414551
    5. 'の' → logprob: -5.925168037414551
    6. '(j' → logprob: -7.300168037414551
    7. '((' → logprob: -7.425168037414551
    8. 'り' → logprob: -7.425168037414551
    9. '[(' → logprob: -7.925168037414551
    10. 'from' → logprob: -8.05016803741455

Token 985: '状態' (ID: 175682)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2725936770439148
    2. ' for' → logprob: -2.3975937366485596
    3. 'states' → logprob: -2.5225937366485596
    4. 'state' → logprob: -4.2725934982299805
    5. 'next' → logprob: -4.3975934982299805
    6. ' states' → logprob: -4.6475934982299805
    7. 'score' → logprob: -5.1475934982299805
    8. 'if' → logprob: -5.1475934982299805
    9. 'prev' → logprob: -5.5225934982299805
    10. '(j' → logprob: -6.1475934982299805

Token 986: 'を' (ID: 7277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2714807987213135
    2. 'for' → logprob: -1.5214807987213135
    3. ' for' → logprob: -1.6464807987213135
    4. ',' → logprob: -2.2714807987213135
    5. 'states' → logprob: -2.2714807987213135
    6. ' =' → logprob: -3.6464807987213135
    7. ' states' → logprob: -3.7714807987213135
    8. ' in' → logprob: -4.271480560302734
    9. '_states' → logprob: -5.146480560302734
    10. '(states' → logprob: -5.271480560302734

Token 987: '考' (ID: 18056)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.1576264351606369
    2. '[]' → logprob: -2.5326263904571533
    3. '[]
' → logprob: -3.1576263904571533
    4. ' next' → logprob: -4.032626628875732
    5. 'deque' → logprob: -5.657626628875732
    6. ' []' → logprob: -7.907626628875732
    7. 'states' → logprob: -7.907626628875732
    8. 'for' → logprob: -8.032626152038574
    9. '[(' → logprob: -8.532626152038574
    10. '[next' → logprob: -8.532626152038574

Token 988: 'える' (ID: 133169)
  Prédit: 'え'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'え' → logprob: -0.2845194339752197
    2. 'える' → logprob: -2.0345194339752197
    3. 'えて' → logprob: -2.1595194339752197
    4. '\xe6\x85' → logprob: -6.909519195556641
    5. '察' → logprob: -8.15951919555664
    6. '   ' → logprob: -9.28451919555664
    7. '```' → logprob: -9.78451919555664
    8. 'て' → logprob: -10.78451919555664
    9. 'る' → logprob: -11.78451919555664
    10. '
' → logprob: -11.90951919555664

Token 989: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03422566503286362
    2. '   ' → logprob: -3.7842257022857666
    3. 'states' → logprob: -5.2842254638671875
    4. 'if' → logprob: -5.7842254638671875
    5. 'next' → logprob: -6.2842254638671875
    6. ' for' → logprob: -7.5342254638671875
    7. 'prev' → logprob: -8.534225463867188
    8. 'left' → logprob: -9.159225463867188
    9. 'from' → logprob: -11.534225463867188
    10. 'queue' → logprob: -11.784225463867188

Token 990: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.208001047372818
    2. ' for' → logprob: -2.333001136779785
    3. '   ' → logprob: -2.458001136779785
    4. 'states' → logprob: -6.083001136779785
    5. 'next' → logprob: -6.208001136779785
    6. ' next' → logprob: -8.208001136779785
    7. 'if' → logprob: -8.333001136779785
    8. ' states' → logprob: -8.458001136779785
    9. 'prev' → logprob: -9.708001136779785
    10. ' if' → logprob: -10.208001136779785

Token 991: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0021832152269780636
    2. 'prev' → logprob: -6.877183437347412
    3. 'if' (adapté à ' if') → logprob: -7.627183437347412
    4. 'states' → logprob: -8.002182960510254
    5. 'next' → logprob: -8.502182960510254
    6. ' for' → logprob: -9.502182960510254
    7. '   ' → logprob: -10.502182960510254
    8. 'left' → logprob: -12.002182960510254
    9. 'c' → logprob: -12.377182960510254
    10. 'possible' → logprob: -12.627182960510254

Token 992: ' cj' (ID: 184717)
  Prédit: 'cj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cj' → logprob: -0.0021763122640550137
    2. 'j' → logprob: -7.127176284790039
    3. 'not' → logprob: -7.627176284790039
    4. '(c' → logprob: -8.627176284790039
    5. ' cj' → logprob: -8.627176284790039
    6. 'is' → logprob: -8.752176284790039
    7. '(' → logprob: -9.002176284790039
    8. '(j' → logprob: -9.002176284790039
    9. 'cy' → logprob: -9.627176284790039
    10. '(not' → logprob: -10.502176284790039

Token 993: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.19418978691101074
    2. ' >' → logprob: -1.9441897869110107
    3. '-' → logprob: -3.4441897869110107
    4. ' -' → logprob: -6.69419002532959
    5. '>=' → logprob: -9.06919002532959
    6. '   ' → logprob: -9.81919002532959
    7. ' ' → logprob: -11.19419002532959
    8. ' >=' → logprob: -11.31919002532959
    9. ')>' → logprob: -12.31919002532959
    10. 'and' → logprob: -12.44419002532959

Token 994: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.125005722045898
    3. '=' → logprob: -15.750005722045898
    4. '4' → logprob: -16.2500057220459
    5. '０' → logprob: -16.8750057220459
    6. 'j' → logprob: -17.0000057220459
    7. '1' → logprob: -17.6875057220459
    8. '۰' → logprob: -17.8750057220459
    9. '   ' → logprob: -18.6250057220459
    10. ' ' → logprob: -19.0000057220459

Token 995: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -14.000001907348633
    3. 'j' → logprob: -15.250001907348633
    4. 'y' → logprob: -15.500001907348633
    5. '０' → logprob: -16.250001907348633
    6. '4' → logprob: -16.562501907348633
    7. '۰' → logprob: -16.812501907348633
    8. '1' → logprob: -18.062501907348633
    9. '=' → logprob: -18.187501907348633
    10. '{' → logprob: -18.875001907348633

Token 996: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07127808034420013
    2. 'and' → logprob: -2.8212780952453613
    3. ':
' → logprob: -5.071278095245361
    4. '   ' → logprob: -6.071278095245361
    5. ':' → logprob: -7.321278095245361
    6. '	and' → logprob: -11.446277618408203
    7. ' и' → logprob: -12.446277618408203
    8. '       ' → logprob: -13.071277618408203
    9. ',' → logprob: -13.196277618408203
    10. '):
' → logprob: -14.321277618408203

Token 997: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0707616806030273
    2. ' if' → logprob: -1.4457616806030273
    3. '   ' → logprob: -1.6957616806030273
    4. 'if' → logprob: -2.5707616806030273
    5. 'res' → logprob: -2.9457616806030273
    6. ' for' → logprob: -3.1957616806030273
    7. ' res' → logprob: -3.5707616806030273
    8. 'for' → logprob: -4.195761680603027
    9. 'states' → logprob: -4.945761680603027
    10. ' states' → logprob: -5.070761680603027

Token 998: ' pj' (ID: 110041)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5567066669464111
    2. 'if' → logprob: -1.1817066669464111
    3. 'for' → logprob: -2.431706666946411
    4. 'prev' → logprob: -4.181706428527832
    5. 'states' → logprob: -4.806706428527832
    6. 'dfs' → logprob: -4.931706428527832
    7. '#' → logprob: -7.556706428527832
    8. 'left' → logprob: -8.556706428527832
    9. '   ' → logprob: -8.681706428527832
    10. ' if' → logprob: -9.431706428527832

Token 999: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08370394259691238
    2. ',' → logprob: -2.7087039947509766
    3. ' =' → logprob: -4.833703994750977
    4. ',j' → logprob: -5.708703994750977
    5. '=j' → logprob: -6.083703994750977
    6. ',p' → logprob: -10.208703994750977
    7. 'j' → logprob: -10.458703994750977
    8. '=p' → logprob: -11.208703994750977
    9. '=
' → logprob: -11.458703994750977
    10. ' ,' → logprob: -11.708703994750977

Token 1000: ' py' (ID: 13104)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.8586990237236023
    2. ' cy' → logprob: -0.8586990237236023
    3. ' y' → logprob: -2.108699083328247
    4. 'y' → logprob: -3.733699083328247
    5. ' py' → logprob: -5.108698844909668
    6. 'py' → logprob: -6.733698844909668
    7. '    ' → logprob: -12.108698844909668
    8. '   ' → logprob: -12.108698844909668
    9. 'yc' → logprob: -12.483698844909668
    10. '(py' → logprob: -12.608698844909668

Token 1001: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0896071344614029
    2. ' =' → logprob: -2.4646072387695312
    3. ',' → logprob: -7.339607238769531
    4. '=j' → logprob: -11.339607238769531
    5. ' ,' → logprob: -12.964607238769531
    6. ',j' → logprob: -13.339607238769531
    7. '＝' → logprob: -14.339607238769531
    8. '=p' → logprob: -14.839607238769531
    9. ' ' → logprob: -15.464607238769531
    10. ',p' → logprob: -15.714607238769531

Token 1002: ' cj' (ID: 184717)
  Prédit: 'cj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cj' → logprob: -0.00034237600630149245
    2. ' cj' → logprob: -8.12534236907959
    3. '(c' → logprob: -10.25034236907959
    4. 'cq' → logprob: -12.75034236907959
    5. '(j' → logprob: -12.75034236907959
    6. '   ' → logprob: -13.37534236907959
    7. 'jc' → logprob: -14.62534236907959
    8. '(' → logprob: -14.75034236907959
    9. 'c' → logprob: -14.87534236907959
    10. 'j' → logprob: -15.00034236907959

Token 1003: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0013370281085371971
    2. ' -' → logprob: -7.251337051391602
    3. ',' → logprob: -7.376337051391602
    4. ' ,' → logprob: -14.751337051391602
    5. '   ' → logprob: -15.626337051391602
    6. ',y' → logprob: -16.0013370513916
    7. ' ' → logprob: -16.2513370513916
    8. '−' → logprob: -16.3763370513916
    9. ',j' → logprob: -16.8763370513916
    10. '-,' → logprob: -17.7513370513916

Token 1004: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.6250057220459
    4. ' y' → logprob: -17.7500057220459
    5. '<|end|>' → logprob: -17.8750057220459
    6. 'y' → logprob: -18.0000057220459
    7. ',' → logprob: -18.2500057220459
    8. '0' → logprob: -18.2500057220459
    9. ' j' → logprob: -18.3750057220459
    10. 'j' → logprob: -19.7500057220459

Token 1005: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039647609810344875
    2. ',y' → logprob: -8.375396728515625
    3. ' ,' → logprob: -8.875396728515625
    4. ',j' → logprob: -11.375396728515625
    5. ',p' → logprob: -12.250396728515625
    6. 'y' → logprob: -12.750396728515625
    7. ',None' → logprob: -13.000396728515625
    8. ',
' → logprob: -13.500396728515625
    9. '
' → logprob: -14.125396728515625
    10. '```' → logprob: -14.625396728515625

Token 1006: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.00020389800192788243
    2. ' cy' → logprob: -8.500204086303711
    3. 'y' → logprob: -15.125204086303711
    4. '.cy' → logprob: -16.25020408630371
    5. ' y' → logprob: -17.00020408630371
    6. 'cyj' → logprob: -17.50020408630371
    7. '   ' → logprob: -18.75020408630371
    8. ' ' → logprob: -19.37520408630371
    9. 'cycl' → logprob: -19.87520408630371
    10. 'Cy' → logprob: -20.25020408630371

Token 1007: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19671522080898285
    2. '<|end|>' → logprob: -2.5717151165008545
    3. 'if' → logprob: -3.0717151165008545
    4. ' if' → logprob: -3.5717151165008545
    5. '
' → logprob: -4.446715354919434
    6. '   ' → logprob: -6.071715354919434
    7. '<|end|>' → logprob: -6.196715354919434
    8. '+' → logprob: -6.321715354919434
    9. '       ' → logprob: -6.696715354919434
    10. '        
' → logprob: -6.821715354919434

Token 1008: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014884350821375847
    2. 'if' → logprob: -7.876488208770752
    3. ' if' → logprob: -7.876488208770752
    4. ',' → logprob: -8.75148868560791
    5. 'state' → logprob: -9.00148868560791
    6. '        
' → logprob: -9.25148868560791
    7. ' states' → logprob: -9.37648868560791
    8. 'tokens' → logprob: -9.87648868560791
    9. 'states' → logprob: -10.50148868560791
    10. ',state' → logprob: -10.50148868560791

Token 1009: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21013861894607544
    2. 'res' → logprob: -2.2101385593414307
    3. 'for' → logprob: -3.8351385593414307
    4. 'states' → logprob: -3.8351385593414307
    5. '#' (adapté à ' #') → logprob: -4.21013879776001
    6. 'prev' → logprob: -4.33513879776001
    7. 'score' → logprob: -6.08513879776001
    8. 'token' → logprob: -6.21013879776001
    9. 'state' → logprob: -6.83513879776001
    10. 'paths' → logprob: -7.96013879776001

Token 1010: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17735160887241364
    2. '       ' → logprob: -2.427351713180542
    3. 'prev' → logprob: -3.427351713180542
    4. 'for' → logprob: -3.677351713180542
    5. '#' → logprob: -4.802351474761963
    6. 'states' → logprob: -5.427351474761963
    7. 'next' → logprob: -7.302351474761963
    8. 'possible' → logprob: -7.427351474761963
    9. 'new' → logprob: -7.677351474761963
    10. 'from' → logprob: -8.052351951599121

Token 1011: 'ここ' (ID: 109418)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.41787204146385193
    2. 'for' → logprob: -1.2928720712661743
    3. 'prev' → logprob: -3.9178719520568848
    4. 'states' → logprob: -3.9178719520568848
    5. '#' → logprob: -4.292871952056885
    6. 'possible' → logprob: -5.417871952056885
    7. 'next' → logprob: -5.542871952056885
    8. 'rev' → logprob: -6.917871952056885
    9. 'reverse' → logprob: -7.167871952056885
    10. 'poss' → logprob: -8.417872428894043

Token 1012: 'から' (ID: 27500)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10559142380952835
    2. 'if' → logprob: -3.4805915355682373
    3. ' =' → logprob: -4.230591297149658
    4. 'states' → logprob: -4.355591297149658
    5. '=' → logprob: -4.855591297149658
    6. ' if' → logprob: -4.980591297149658
    7. 'の' → logprob: -4.980591297149658
    8. 'for' → logprob: -5.355591297149658
    9. ' states' → logprob: -5.855591297149658
    10. '   ' → logprob: -6.855591297149658

Token 1013: 'の' (ID: 3385)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9583193063735962
    2. 'if' → logprob: -1.2083193063735962
    3. 'prev' → logprob: -1.8333193063735962
    4. 'states' → logprob: -3.2083191871643066
    5. '       ' → logprob: -3.3333191871643066
    6. 'next' → logprob: -3.4583191871643066
    7. 'possible' → logprob: -3.4583191871643066
    8. '#' → logprob: -4.833319187164307
    9. 'previous' → logprob: -6.708319187164307
    10. ' if' → logprob: -6.958319187164307

Token 1014: '�' (ID: 4978)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -1.3741779327392578
    2. 'prev' → logprob: -1.6241779327392578
    3. 'next' → logprob: -1.8741779327392578
    4. 'for' → logprob: -1.8741779327392578
    5. 'possible' → logprob: -2.249177932739258
    6. 'if' → logprob: -2.249177932739258
    7. '#' → logprob: -4.874177932739258
    8. 'paths' → logprob: -5.499177932739258
    9. 'poss' → logprob: -5.749177932739258
    10. 'previous' → logprob: -5.749177932739258

Token 1015: '�' (ID: 115)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -1.0253362655639648
    2. '_' → logprob: -1.7753362655639648
    3. '_states' → logprob: -2.400336265563965
    4. ' states' → logprob: -2.400336265563965
    5. 'next' → logprob: -2.650336265563965
    6. ')' → logprob: -3.400336265563965
    7. 'j' → logprob: -3.775336265563965
    8. '_j' → logprob: -3.775336265563965
    9. 's' → logprob: -4.025336265563965
    10. ' next' → logprob: -4.150336265563965

Token 1016: '移' (ID: 43290)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.20972658693790436
    2. 'if' → logprob: -2.209726572036743
    3. 'next' → logprob: -3.084726572036743
    4. ' states' → logprob: -4.584726810455322
    5. 'paths' → logprob: -5.584726810455322
    6. ' if' → logprob: -5.584726810455322
    7. 'for' → logprob: -5.834726810455322
    8. 'prev' → logprob: -6.084726810455322
    9. '       ' → logprob: -6.084726810455322
    10. 'path' → logprob: -7.084726810455322

Token 1017: 'で' (ID: 4344)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.7785384654998779
    2. '   ' → logprob: -2.528538465499878
    3. 'を' → logprob: -2.778538465499878
    4. 'for' → logprob: -2.903538465499878
    5. '点' → logprob: -3.153538465499878
    6. 'def' → logprob: -3.403538465499878
    7. 'り' → logprob: -3.528538465499878
    8. '       ' → logprob: -3.653538465499878
    9. '_states' → logprob: -3.903538465499878
    10. 's' → logprob: -3.903538465499878

Token 1018: 'A' (ID: 32)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7700261473655701
    2. 'states' → logprob: -1.3950262069702148
    3. 'res' → logprob: -2.520026206970215
    4. 'dfs' → logprob: -2.895026206970215
    5. 'paths' → logprob: -3.520026206970215
    6. ' states' → logprob: -3.770026206970215
    7. 'next' → logprob: -3.770026206970215
    8. 'path' → logprob: -4.270026206970215
    9. ' if' → logprob: -4.520026206970215
    10. 'is' → logprob: -4.770026206970215

Token 1019: 'で' (ID: 4344)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9669089317321777
    2. '_taken' → logprob: -1.9669089317321777
    3. 'points' → logprob: -2.4669089317321777
    4. ' took' → logprob: -2.7169089317321777
    5. ',' → logprob: -3.4669089317321777
    6. ' states' → logprob: -3.5919089317321777
    7. '.append' → logprob: -4.091908931732178
    8. ' taken' → logprob: -4.091908931732178
    9. 'states' → logprob: -4.341908931732178
    10. 't' → logprob: -4.341908931732178

Token 1020: '現' (ID: 44159)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.0704575777053833
    2. 'は' → logprob: -1.3204575777053833
    3. 'す' → logprob: -2.4454574584960938
    4. ')' → logprob: -2.9454574584960938
    5. 'states' → logprob: -3.0704574584960938
    6. 'した' → logprob: -3.4454574584960938
    7. '追加' → logprob: -4.070457458496094
    8. 'き' → logprob: -4.820457458496094
    9. '勝' → logprob: -4.945457458496094
    10. 'の' → logprob: -4.945457458496094

Token 1021: '状態' (ID: 175682)
  Prédit: '点'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '点' → logprob: -0.8873401880264282
    2. 'た' → logprob: -1.1373401880264282
    3. 'じ' → logprob: -2.7623400688171387
    4. 'れ' → logprob: -3.2623400688171387
    5. 'った' → logprob: -3.5123400688171387
    6. 'る' → logprob: -3.6373400688171387
    7. '```' → logprob: -4.137340068817139
    8. 'した' → logprob: -5.012340068817139
    9. '加' → logprob: -5.262340068817139
    10. '_score' → logprob: -5.387340068817139

Token 1022: 'にな' (ID: 66082)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.4788305163383484
    2. 'の' → logprob: -2.353830575942993
    3. ' states' → logprob: -2.478830575942993
    4. '.append' → logprob: -2.728830575942993
    5. 'を' → logprob: -3.228830575942993
    6. 'と' → logprob: -3.728830575942993
    7. ')' → logprob: -5.103830337524414
    8. '           ' → logprob: -5.103830337524414
    9. 'とな' → logprob: -5.103830337524414
    10. 'append' → logprob: -5.228830337524414

Token 1023: 'って' (ID: 30677)
  Prédit: 'った'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'った' → logprob: -0.44022682309150696
    2. 'る' → logprob: -1.0652267932891846
    3. 'り' → logprob: -4.690227031707764
    4. 'っ' → logprob: -6.940227031707764
    5. 'って' → logprob: -7.190227031707764
    6. 'た' → logprob: -9.065226554870605
    7. 'て' → logprob: -9.065226554870605
    8. 'りました' → logprob: -9.065226554870605
    9. 'す' → logprob: -9.565226554870605
    10. 'ります' → logprob: -10.565226554870605

Token 1024: 'いる' (ID: 86169)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5982145071029663
    2. 'states' → logprob: -1.4732145071029663
    3. 'す' → logprob: -2.473214626312256
    4. 'ます' → logprob: -3.848214626312256
    5. 'る' → logprob: -3.973214626312256
    6. 'paths' → logprob: -4.098214626312256
    7. 'は' → logprob: -4.223214626312256
    8. 'いる' → logprob: -4.348214626312256
    9. ' states' → logprob: -5.223214626312256
    10. 'dfs' → logprob: -5.223214626312256

Token 1025: 'か' (ID: 7128)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28999385237693787
    2. 'if' → logprob: -2.5399937629699707
    3. '           ' → logprob: -2.6649937629699707
    4. ' if' → logprob: -3.4149937629699707
    5. '):
' → logprob: -4.164993762969971
    6. ')' → logprob: -4.539993762969971
    7. ' and' → logprob: -5.164993762969971
    8. ':
' → logprob: -5.414993762969971
    9. 'と' → logprob: -5.539993762969971
    10. ':' → logprob: -5.789993762969971

Token 1026: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007083564531058073
    2. ' if' → logprob: -5.257083415985107
    3. 'if' → logprob: -6.507083415985107
    4. ',' → logprob: -9.257083892822266
    5. ')' → logprob: -9.882083892822266
    6. '        
' → logprob: -10.132083892822266
    7. '<|end|>' → logprob: -10.132083892822266
    8. '<|end|>' → logprob: -10.882083892822266
    9. '           ' → logprob: -11.132083892822266
    10. '   ' → logprob: -12.007083892822266

Token 1027: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004732364788651466
    2. ' if' → logprob: -6.379732131958008
    3. '<|end|>' → logprob: -6.379732131958008
    4. '<|end|>' → logprob: -7.754732131958008
    5. ')' → logprob: -8.254732131958008
    6. ',' → logprob: -9.004732131958008
    7. '           ' → logprob: -9.629732131958008
    8. '        
' → logprob: -10.004732131958008
    9. 'if' → logprob: -10.129732131958008
    10. '	' → logprob: -10.254732131958008

Token 1028: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13450457155704498
    2. '       ' → logprob: -3.009504556655884
    3. ' if' → logprob: -3.009504556655884
    4. 'states' → logprob: -4.384504795074463
    5. 'for' → logprob: -4.884504795074463
    6. ' states' → logprob: -6.259504795074463
    7. 'next' → logprob: -6.259504795074463
    8. 'prev' → logprob: -7.134504795074463
    9. ' for' → logprob: -7.509504795074463
    10. 'tokens' → logprob: -7.759504795074463

Token 1029: ' (' (ID: 350)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.5277174115180969
    2. 'not' → logprob: -1.4027173519134521
    3. 'pj' → logprob: -2.527717351913452
    4. '(j' → logprob: -3.777717351913452
    5. 'next' → logprob: -4.527717590332031
    6. '(not' → logprob: -4.777717590332031
    7. '(p' → logprob: -4.777717590332031
    8. '(is' → logprob: -4.902717590332031
    9. '(next' → logprob: -5.402717590332031
    10. ' not' → logprob: -5.402717590332031

Token 1030: 'pj' (ID: 54765)
  Prédit: 'pj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pj' → logprob: -0.032375726848840714
    2. 'is' → logprob: -4.032375812530518
    3. 'not' → logprob: -5.032375812530518
    4. 'cj' → logprob: -6.282375812530518
    5. 'j' → logprob: -6.407375812530518
    6. ' pj' → logprob: -6.782375812530518
    7. 'next' → logprob: -7.282375812530518
    8. '(' → logprob: -7.407375812530518
    9. '(j' → logprob: -7.657375812530518
    10. 'py' → logprob: -8.90737533569336

Token 1031: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14138180017471313
    2. '+' → logprob: -2.3913817405700684
    3. ',j' → logprob: -3.8913817405700684
    4. ' ,' → logprob: -4.641381740570068
    5. ' +' → logprob: -4.766381740570068
    6. ',p' → logprob: -7.641381740570068
    7. '>=' → logprob: -8.391382217407227
    8. ')' → logprob: -8.516382217407227
    9. ',y' → logprob: -9.016382217407227
    10. ')>=' → logprob: -9.141382217407227

Token 1032: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.0019293478690087795
    2. ' py' → logprob: -6.25192928314209
    3. '(py' → logprob: -14.62692928314209
    4. '_py' → logprob: -15.87692928314209
    5. '   ' → logprob: -16.876930236816406
    6. 'Py' → logprob: -17.626930236816406
    7. ' ' → logprob: -18.001930236816406
    8. '
' → logprob: -19.251930236816406
    9. '       ' → logprob: -19.376930236816406
    10. '  ' → logprob: -19.376930236816406

Token 1033: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24695970118045807
    2. ',' → logprob: -1.9969596862792969
    3. ',j' → logprob: -2.621959686279297
    4. ')!=' → logprob: -5.996959686279297
    5. ')!' → logprob: -6.621959686279297
    6. '),' → logprob: -6.621959686279297
    7. ' ,' → logprob: -6.871959686279297
    8. '),(' → logprob: -7.746959686279297
    9. ' )' → logprob: -7.746959686279297
    10. ')==' → logprob: -7.746959686279297

Token 1034: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.0005959240952506661
    2. ' '' → logprob: -8.000596046447754
    3. 'A' → logprob: -8.375596046447754
    4. ''' → logprob: -11.250596046447754
    5. '"A' → logprob: -11.750596046447754
    6. '’A' → logprob: -13.250596046447754
    7. ''C' → logprob: -13.500596046447754
    8. ' A' → logprob: -13.625596046447754
    9. '   ' → logprob: -13.625596046447754
    10. ' ' → logprob: -14.125596046447754

Token 1035: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.002894513076171279
    2. ''A' → logprob: -5.877894401550293
    3. ''' → logprob: -10.002894401550293
    4. 'B' → logprob: -10.752894401550293
    5. ' A' → logprob: -11.252894401550293
    6. ')' → logprob: -12.502894401550293
    7. ' '' → logprob: -13.252894401550293
    8. '"A' → logprob: -13.377894401550293
    9. '')' → logprob: -14.127894401550293
    10. '	A' → logprob: -14.752894401550293

Token 1036: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009993441635742784
    2. '')' → logprob: -7.000999450683594
    3. ' )' → logprob: -9.625999450683594
    4. '）' → logprob: -11.750999450683594
    5. '")' → logprob: -13.000999450683594
    6. '))' → logprob: -13.125999450683594
    7. ',)' → logprob: -13.375999450683594
    8. '`)' → logprob: -13.500999450683594
    9. ')
' → logprob: -13.625999450683594
    10. ')")' → logprob: -14.000999450683594

Token 1037: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.25290367007255554
    2. ' in' → logprob: -1.502903699874878
    3. ')' → logprob: -7.627903461456299
    4. '==' → logprob: -8.627903938293457
    5. ' not' → logprob: -9.127903938293457
    6. 'not' → logprob: -9.627903938293457
    7. ' ==' → logprob: -9.877903938293457
    8. '	in' → logprob: -10.877903938293457
    9. ' ' → logprob: -11.377903938293457
    10. ' )' → logprob: -11.377903938293457

Token 1038: ' prev' (ID: 10258)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.010875551030039787
    2. '[next' → logprob: -5.385875701904297
    3. '[(' → logprob: -5.760875701904297
    4. 'states' → logprob: -6.135875701904297
    5. ' next' → logprob: -8.385875701904297
    6. '[' → logprob: -8.510875701904297
    7. '{' → logprob: -8.760875701904297
    8. 'state' → logprob: -9.385875701904297
    9. 'set' → logprob: -9.510875701904297
    10. '(next' → logprob: -9.760875701904297

Token 1039: '[(' (ID: 20542)
  Prédit: '_states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.14732089638710022
    2. 'states' → logprob: -2.0223209857940674
    3. ':' → logprob: -5.897320747375488
    4. ':
' → logprob: -6.897320747375488
    5. 'States' → logprob: -8.397320747375488
    6. ' states' → logprob: -8.647320747375488
    7. 'paths' → logprob: -8.772320747375488
    8. '_paths' → logprob: -9.272320747375488
    9. '_state' → logprob: -10.022320747375488
    10. 's' → logprob: -10.522320747375488

Token 1040: 'cj' (ID: 173094)
  Prédit: 'cj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cj' → logprob: -0.0030865666922181845
    2. 'pj' → logprob: -5.878086566925049
    3. ' cj' → logprob: -8.50308609008789
    4. 'j' → logprob: -10.25308609008789
    5. '(' → logprob: -12.00308609008789
    6. ' ' → logprob: -12.25308609008789
    7. '
' → logprob: -12.50308609008789
    8. '0' → logprob: -12.50308609008789
    9. 'jc' → logprob: -12.87808609008789
    10. '   ' → logprob: -13.00308609008789

Token 1041: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012057077838107944
    2. ' ,' → logprob: -7.251205921173096
    3. ',j' → logprob: -7.751205921173096
    4. ',y' → logprob: -11.001205444335938
    5. ' ' → logprob: -11.251205444335938
    6. '-' → logprob: -11.376205444335938
    7. 'py' → logprob: -12.001205444335938
    8. '   ' → logprob: -12.376205444335938
    9. '',' → logprob: -13.251205444335938
    10. ')][' → logprob: -13.376205444335938

Token 1042: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.0004485461104195565
    2. 'py' → logprob: -7.750448703765869
    3. ' cy' → logprob: -11.375448226928711
    4. '   ' → logprob: -12.750448226928711
    5. 'y' → logprob: -13.125448226928711
    6. ' ' → logprob: -14.250448226928711
    7. ' py' → logprob: -15.000448226928711
    8. 'jy' → logprob: -16.12544822692871
    9. '  ' → logprob: -16.37544822692871
    10. '(py' → logprob: -16.87544822692871

Token 1043: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.06528154760599136
    2. ')' → logprob: -3.065281629562378
    3. ']' → logprob: -4.315281391143799
    4. ']]:
' → logprob: -7.440281391143799
    5. ')][' → logprob: -7.690281391143799
    6. ']):
' → logprob: -8.190281867980957
    7. '):
' → logprob: -8.315281867980957
    8. ']):' → logprob: -8.315281867980957
    9. ']:
' → logprob: -8.440281867980957
    10. '])' → logprob: -8.565281867980957

Token 1044: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.061714429408311844
    2. ':
' → logprob: -3.6867144107818604
    3. '):' → logprob: -4.0617146492004395
    4. ' and' → logprob: -4.6867146492004395
    5. '       ' → logprob: -6.4367146492004395
    6. '):
' → logprob: -6.9367146492004395
    7. '           ' → logprob: -6.9367146492004395
    8. ' or' → logprob: -7.0617146492004395
    9. '   ' → logprob: -7.0617146492004395
    10. ')' → logprob: -7.4367146492004395

Token 1045: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38062262535095215
    2. '           ' → logprob: -1.6306226253509521
    3. ':
' → logprob: -2.880622625350952
    4. '       ' → logprob: -3.630622625350952
    5. '):' → logprob: -4.755622863769531
    6. ' and' → logprob: -4.880622863769531
    7. '               ' → logprob: -5.255622863769531
    8. '):
' → logprob: -5.380622863769531
    9. '<|end|>' → logprob: -6.005622863769531
    10. ')' → logprob: -6.005622863769531

Token 1046: ' dfs' (ID: 51252)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5781614184379578
    2. '           ' → logprob: -0.9531614184379578
    3. ' res' → logprob: -4.078161239624023
    4. 'res' → logprob: -4.328161239624023
    5. ' dfs' → logprob: -5.078161239624023
    6. 'dfs' (adapté à ' dfs') → logprob: -5.453161239624023
    7. 'path' → logprob: -5.578161239624023
    8. ' path' → logprob: -5.953161239624023
    9. 'prev' → logprob: -6.203161239624023
    10. '                   ' → logprob: -6.578161239624023

Token 1047: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -4.9424725148128346e-05
    2. 'pj' → logprob: -10.125049591064453
    3. ' pj' → logprob: -12.000049591064453
    4. '(' → logprob: -13.125049591064453
    5. ' (' → logprob: -14.750049591064453
    6. '(j' → logprob: -15.375049591064453
    7. '(
' → logprob: -15.375049591064453
    8. '(py' → logprob: -15.750049591064453
    9. '```' → logprob: -17.500049591064453
    10. '(P' → logprob: -18.000049591064453

Token 1048: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.339278580620885e-06
    2. 'pj' → logprob: -14.250001907348633
    3. '(j' → logprob: -14.625001907348633
    4. ',j' → logprob: -16.000001907348633
    5. '_j' → logprob: -16.000001907348633
    6. '(p' → logprob: -16.000001907348633
    7. '(' → logprob: -16.375001907348633
    8. '	j' → logprob: -16.500001907348633
    9. 'r' → logprob: -16.750001907348633
    10. 'jp' → logprob: -16.875001907348633

Token 1049: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011904643615707755
    2. ' ,' → logprob: -7.501190662384033
    3. '(py' → logprob: -7.626190662384033
    4. ',j' → logprob: -9.251190185546875
    5. ',p' → logprob: -11.126190185546875
    6. 'py' → logprob: -11.501190185546875
    7. ' py' → logprob: -12.001190185546875
    8. '<|end|>' → logprob: -12.501190185546875
    9. ')' → logprob: -13.001190185546875
    10. '_py' → logprob: -13.126190185546875

Token 1050: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.0003065030323341489
    2. ' py' → logprob: -8.250306129455566
    3. 'cy' → logprob: -10.125306129455566
    4. '(py' → logprob: -12.250306129455566
    5. '_py' → logprob: -14.875306129455566
    6. 'Py' → logprob: -17.125307083129883
    7. '.py' → logprob: -17.625307083129883
    8. '   ' → logprob: -18.000307083129883
    9. ' cy' → logprob: -19.250307083129883
    10. '    ' → logprob: -19.625307083129883

Token 1051: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009070566738955677
    2. ' ,' → logprob: -7.375906944274902
    3. '           ' → logprob: -8.750906944274902
    4. ')' → logprob: -10.000906944274902
    5. ',path' → logprob: -10.250906944274902
    6. ',p' → logprob: -10.750906944274902
    7. '   ' → logprob: -12.250906944274902
    8. ',
' → logprob: -13.125906944274902
    9. '          ' → logprob: -13.125906944274902
    10. '       ' → logprob: -13.375906944274902

Token 1052: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.2875003516674042
    2. ' path' → logprob: -1.4125003814697266
    3. ''A' → logprob: -6.412500381469727
    4. ' [' → logprob: -6.912500381469727
    5. ' '' → logprob: -7.162500381469727
    6. '['' → logprob: -7.287500381469727
    7. ''' → logprob: -7.412500381469727
    8. ' ['' → logprob: -7.787500381469727
    9. '[A' → logprob: -8.287500381469727
    10. '[' → logprob: -8.537500381469727

Token 1053: '+'' (ID: 14403)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16023662686347961
    2. '+' → logprob: -1.9102365970611572
    3. '+[' → logprob: -12.285236358642578
    4. '＋' → logprob: -12.785236358642578
    5. '+(' → logprob: -13.660236358642578
    6. '+'' → logprob: -13.910236358642578
    7. '    ' → logprob: -14.285236358642578
    8. ')' → logprob: -14.535236358642578
    9. '   ' → logprob: -14.535236358642578
    10. '           ' → logprob: -15.910236358642578

Token 1054: 'A' (ID: 32)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.5760920643806458
    2. 'A' → logprob: -0.8260920643806458
    3. ''' → logprob: -10.201091766357422
    4. '"A' → logprob: -10.201091766357422
    5. '('' → logprob: -10.701091766357422
    6. '’A' → logprob: -10.951091766357422
    7. ' '' → logprob: -12.076091766357422
    8. ' A' → logprob: -12.076091766357422
    9. ''a' → logprob: -12.326091766357422
    10. 'a' → logprob: -12.826091766357422

Token 1055: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.002683256519958377
    2. ')' → logprob: -6.002683162689209
    3. '')
' → logprob: -8.502683639526367
    4. '")' → logprob: -13.377683639526367
    5. ''' → logprob: -13.877683639526367
    6. '')
' → logprob: -14.627683639526367
    7. ' ')' → logprob: -15.002683639526367
    8. '+')' → logprob: -15.502683639526367
    9. '')"' → logprob: -15.627683639526367
    10. ')
' → logprob: -15.752683639526367

Token 1056: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7592942118644714
    2. '<|end|>' → logprob: -1.1342942714691162
    3. '       ' → logprob: -2.134294271469116
    4. ')' → logprob: -2.634294271469116
    5. '           ' → logprob: -4.884294033050537
    6. '
' → logprob: -5.009294033050537
    7. '<|end|>' → logprob: -5.634294033050537
    8. '    
' → logprob: -7.634294033050537
    9. ' ' → logprob: -8.384294509887695
    10. ')
' → logprob: -8.759294509887695

Token 1057: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.886803359724581e-05
    2. ' if' → logprob: -10.500079154968262
    3. 'if' (adapté à ' if') → logprob: -11.250079154968262
    4. '<|end|>' → logprob: -11.250079154968262
    5. ' ' → logprob: -11.750079154968262
    6. 'elif' → logprob: -12.125079154968262
    7. ' elif' → logprob: -12.500079154968262
    8. '	if' → logprob: -13.125079154968262
    9. '       ' → logprob: -13.625079154968262
    10. '	elif' → logprob: -13.875079154968262

Token 1058: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.35802093148231506
    2. 'cj' → logprob: -1.9830209016799927
    3. ' cj' → logprob: -2.3580210208892822
    4. ' cy' → logprob: -2.7330210208892822
    5. ' (' → logprob: -6.483020782470703
    6. '(' → logprob: -6.858020782470703
    7. '(c' → logprob: -7.483020782470703
    8. ' ' → logprob: -8.358020782470703
    9. 'cx' → logprob: -9.608020782470703
    10. 'j' → logprob: -9.983020782470703

Token 1059: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3868727385997772
    2. '>' → logprob: -1.1368727684020996
    3. ' ' → logprob: -14.136872291564941
    4. '＞' → logprob: -15.386872291564941
    5. ',' → logprob: -15.636872291564941
    6. '()>' → logprob: -16.136873245239258
    7. ' ' → logprob: -16.261873245239258
    8. ')>' → logprob: -16.511873245239258
    9. ' >
' → logprob: -17.011873245239258
    10. '   ' → logprob: -17.136873245239258

Token 1060: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16022859513759613
    2. ' ' → logprob: -1.9102286100387573
    3. '   ' → logprob: -12.660228729248047
    4. '=' → logprob: -14.160228729248047
    5. '>' → logprob: -15.660228729248047
    6. '1' → logprob: -16.660228729248047
    7. ' ' → logprob: -16.785228729248047
    8. '  ' → logprob: -16.910228729248047
    9. '(' → logprob: -17.535228729248047
    10. '۰' → logprob: -17.535228729248047

Token 1061: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.875335693359375
    4. '=' → logprob: -18.125335693359375
    5. '1' → logprob: -18.250335693359375
    6. '  ' → logprob: -19.375335693359375
    7. '０' → logprob: -19.750335693359375
    8. '۰' → logprob: -19.750335693359375
    9. 'prev' → logprob: -19.875335693359375
    10. ' ' → logprob: -20.125335693359375

Token 1062: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2979922592639923
    2. ':
' → logprob: -1.54799222946167
    3. '       ' → logprob: -3.17299222946167
    4. ',' → logprob: -6.04799222946167
    5. '   ' → logprob: -7.79799222946167
    6. '<|end|>' → logprob: -9.172992706298828
    7. ' and' → logprob: -9.422992706298828
    8. '):
' → logprob: -9.922992706298828
    9. '	' → logprob: -10.797992706298828
    10. '      ' → logprob: -11.422992706298828

Token 1063: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000496436667162925
    2. '   ' → logprob: -7.7504963874816895
    3. '	' → logprob: -11.000496864318848
    4. '<|end|>' → logprob: -11.625496864318848
    5. ' ' → logprob: -12.250496864318848
    6. 'py' → logprob: -12.625496864318848
    7. '[' → logprob: -12.750496864318848
    8. ' ' → logprob: -13.125496864318848
    9. '    ' → logprob: -13.125496864318848
    10. ' py' → logprob: -13.125496864318848

Token 1064: ' pj' (ID: 110041)
  Prédit: ' py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' py' → logprob: -0.6465844511985779
    2. '       ' → logprob: -1.2715845108032227
    3. 'py' → logprob: -1.6465845108032227
    4. '   ' → logprob: -6.896584510803223
    5. ' ' → logprob: -7.146584510803223
    6. '_py' → logprob: -8.021584510803223
    7. ' px' → logprob: -8.146584510803223
    8. '(py' → logprob: -8.396584510803223
    9. '     ' → logprob: -9.646584510803223
    10. ' p' → logprob: -9.896584510803223

Token 1065: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008939516264945269
    2. ',p' → logprob: -7.375894069671631
    3. ' ,' → logprob: -9.000893592834473
    4. ',j' → logprob: -9.125893592834473
    5. '=' → logprob: -10.500893592834473
    6. ',c' → logprob: -12.250893592834473
    7. ' =' → logprob: -13.750893592834473
    8. ',y' → logprob: -14.875893592834473
    9. ',n' → logprob: -14.875893592834473
    10. ',user' → logprob: -15.500893592834473

Token 1066: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.5759612321853638
    2. ' py' → logprob: -0.8259612321853638
    3. 'cy' → logprob: -11.700961112976074
    4. '(py' → logprob: -11.950961112976074
    5. ' cy' → logprob: -12.325961112976074
    6. '_py' → logprob: -12.950961112976074
    7. '.py' → logprob: -15.950961112976074
    8. 'Py' → logprob: -16.95096206665039
    9. ' ' → logprob: -17.32596206665039
    10. '   ' → logprob: -18.07596206665039

Token 1067: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07964964956045151
    2. ' =' → logprob: -2.5796496868133545
    3. ',' → logprob: -7.204649448394775
    4. '=c' → logprob: -11.329649925231934
    5. '=j' → logprob: -13.204649925231934
    6. ',c' → logprob: -13.329649925231934
    7. ',j' → logprob: -14.704649925231934
    8. ' ,' → logprob: -15.579649925231934
    9. '＝' → logprob: -15.579649925231934
    10. '=C' → logprob: -17.079648971557617

Token 1068: ' cj' (ID: 184717)
  Prédit: 'cj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cj' → logprob: -0.01105170976370573
    2. ' cj' → logprob: -4.511051654815674
    3. '   ' → logprob: -13.011052131652832
    4. 'c' → logprob: -14.386052131652832
    5. ' ' → logprob: -14.886052131652832
    6. 'cq' → logprob: -15.886052131652832
    7. '(c' → logprob: -16.011051177978516
    8. 'jc' → logprob: -16.136051177978516
    9. '	c' → logprob: -16.886051177978516
    10. '  ' → logprob: -17.011051177978516

Token 1069: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004268219694495201
    2. 'cj' → logprob: -5.629268169403076
    3. ',c' → logprob: -8.129268646240234
    4. 'cy' → logprob: -9.004268646240234
    5. ' ,' → logprob: -9.504268646240234
    6. ' cj' → logprob: -9.629268646240234
    7. '   ' → logprob: -9.879268646240234
    8. 'pj' → logprob: -10.629268646240234
    9. ',j' → logprob: -11.254268646240234
    10. 'j' → logprob: -11.379268646240234

Token 1070: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -4.7159857786027715e-05
    2. ' cy' → logprob: -10.000046730041504
    3. 'py' → logprob: -13.875046730041504
    4. '   ' → logprob: -14.500046730041504
    5. ' ' → logprob: -16.37504768371582
    6. '  ' → logprob: -16.87504768371582
    7. 'cyj' → logprob: -16.87504768371582
    8. '    ' → logprob: -18.25004768371582
    9. ' py' → logprob: -19.12504768371582
    10. '     ' → logprob: -19.12504768371582

Token 1071: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.615255839889869e-05
    2. ' -' → logprob: -9.250096321105957
    3. '−' → logprob: -21.37509536743164
    4. 'py' → logprob: -21.62509536743164
    5. '   ' → logprob: -21.87509536743164
    6. '1' → logprob: -23.25009536743164
    7. '()-' → logprob: -23.62509536743164
    8. 'y' → logprob: -23.62509536743164
    9. '-y' → logprob: -23.75009536743164
    10. '       ' → logprob: -24.00009536743164

Token 1072: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.045816559344530106
    2. '0' → logprob: -3.170816659927368
    3. ' ' → logprob: -6.545816421508789
    4. 'py' → logprob: -7.295816421508789
    5. '   ' → logprob: -7.420816421508789
    6. 'y' → logprob: -9.795816421508789
    7. 'prev' → logprob: -11.295816421508789
    8. '       ' → logprob: -12.170816421508789
    9. ' y' → logprob: -12.295816421508789
    10. '```' → logprob: -12.545816421508789

Token 1073: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013715495588257909
    2. ',' → logprob: -6.626371383666992
    3. 'if' → logprob: -10.876371383666992
    4. '   ' → logprob: -11.376371383666992
    5. '
' → logprob: -12.126371383666992
    6. ' if' → logprob: -12.251371383666992
    7. '	' → logprob: -13.626371383666992
    8. ' ,' → logprob: -14.251371383666992
    9. '      ' → logprob: -14.626371383666992
    10. '	   ' → logprob: -14.626371383666992

Token 1074: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012886864133179188
    2. 'if' → logprob: -6.876288890838623
    3. ' if' → logprob: -8.376288414001465
    4. '   ' → logprob: -11.501288414001465
    5. '	' → logprob: -12.376288414001465
    6. ' ' → logprob: -12.626288414001465
    7. '#' → logprob: -12.876288414001465
    8. '	if' → logprob: -13.126288414001465
    9. '      ' → logprob: -14.001288414001465
    10. '	   ' → logprob: -14.751288414001465

Token 1075: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2420654147863388
    2. '       ' → logprob: -1.7420654296875
    3. '#' → logprob: -3.2420654296875
    4. ' if' → logprob: -7.2420654296875
    5. ' #' → logprob: -10.3670654296875
    6. '   ' → logprob: -12.6170654296875
    7. '	if' → logprob: -13.4920654296875
    8. '
' → logprob: -14.1170654296875
    9. ' ' → logprob: -14.7420654296875
    10. '           ' → logprob: -15.3670654296875

Token 1076: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.7353672385215759
    2. '(py' → logprob: -1.2353672981262207
    3. ' (' → logprob: -1.4853672981262207
    4. '(c' → logprob: -5.735367298126221
    5. '(prev' → logprob: -9.110366821289062
    6. '(j' → logprob: -9.235366821289062
    7. '(Py' → logprob: -10.360366821289062
    8. '(ps' → logprob: -11.860366821289062
    9. '(P' → logprob: -12.110366821289062
    10. '   ' → logprob: -12.235366821289062

Token 1077: 'pj' (ID: 54765)
  Prédit: 'pj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pj' → logprob: -3.666993507067673e-05
    2. ' pj' → logprob: -10.375036239624023
    3. 'py' → logprob: -12.500036239624023
    4. '(p' → logprob: -13.875036239624023
    5. 'prev' → logprob: -15.375036239624023
    6. 'cj' → logprob: -15.500036239624023
    7. ' (' → logprob: -16.750036239624023
    8. '   ' → logprob: -16.875036239624023
    9. '           ' → logprob: -17.000036239624023
    10. '(c' → logprob: -17.250036239624023

Token 1078: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.236549335066229e-05
    2. ' ,' → logprob: -10.750021934509277
    3. '(py' → logprob: -14.625021934509277
    4. ' py' → logprob: -15.875021934509277
    5. 'py' → logprob: -15.875021934509277
    6. ',p' → logprob: -16.500022888183594
    7. '_py' → logprob: -17.000022888183594
    8. ',
' → logprob: -18.000022888183594
    9. '<|end|>' → logprob: -18.500022888183594
    10. ',y' → logprob: -18.625022888183594

Token 1079: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.005238856188952923
    2. ' py' → logprob: -5.255239009857178
    3. '(py' → logprob: -12.25523853302002
    4. '_py' → logprob: -15.38023853302002
    5. '.py' → logprob: -17.755239486694336
    6. 'cy' → logprob: -18.505239486694336
    7. 'Py' → logprob: -18.755239486694336
    8. ' ' → logprob: -19.130239486694336
    9. ',' → logprob: -19.380239486694336
    10. '...' → logprob: -19.755239486694336

Token 1080: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016229959146585315
    2. ' ,' → logprob: -9.375162124633789
    3. ','' → logprob: -9.500162124633789
    4. '',' → logprob: -14.500162124633789
    5. '<|end|>' → logprob: -14.625162124633789
    6. '       ' → logprob: -14.750162124633789
    7. ''' → logprob: -15.125162124633789
    8. ')' → logprob: -15.250162124633789
    9. '   ' → logprob: -15.625162124633789
    10. ',['' → logprob: -16.12516212463379

Token 1081: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02329951710999012
    2. ' '' → logprob: -3.7732994556427
    3. 'B' → logprob: -10.148299217224121
    4. ' B' → logprob: -11.398299217224121
    5. ' ' → logprob: -13.648299217224121
    6. '('' → logprob: -13.898299217224121
    7. ''A' → logprob: -15.023299217224121
    8. ' ' → logprob: -15.523299217224121
    9. '"B' → logprob: -15.523299217224121
    10. ''S' → logprob: -15.898299217224121

Token 1082: 'B' (ID: 33)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0011752246646210551
    2. 'B' → logprob: -6.751175403594971
    3. ' '' → logprob: -12.626174926757812
    4. '"B' → logprob: -13.751174926757812
    5. '('' → logprob: -15.126174926757812
    6. ' B' → logprob: -16.376174926757812
    7. '’' → logprob: -16.501174926757812
    8. '')' → logprob: -16.751174926757812
    9. '['' → logprob: -17.126174926757812
    10. '`' → logprob: -17.126174926757812

Token 1083: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14277921617031097
    2. '')' → logprob: -2.0177791118621826
    3. ' )' → logprob: -10.267779350280762
    4. ' in' → logprob: -10.892779350280762
    5. '']' → logprob: -11.517779350280762
    6. ']' → logprob: -11.767779350280762
    7. ''' → logprob: -12.017779350280762
    8. '])' → logprob: -12.517779350280762
    9. ''])' → logprob: -12.517779350280762
    10. ')]' → logprob: -12.642779350280762

Token 1084: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016036950051784515
    2. 'in' → logprob: -4.1410369873046875
    3. '<|end|>' → logprob: -13.641036987304688
    4. ' ' → logprob: -14.641036987304688
    5. ')' → logprob: -14.641036987304688
    6. '<|end|>' → logprob: -15.641036987304688
    7. ']' → logprob: -15.891036987304688
    8. '	in' → logprob: -16.266036987304688
    9. ' ' → logprob: -16.891036987304688
    10. ' not' → logprob: -18.016036987304688

Token 1085: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.004078639671206474
    2. ' prev' → logprob: -5.5040788650512695
    3. '	prev' → logprob: -15.75407886505127
    4. '.prev' → logprob: -17.504077911376953
    5. 'previous' → logprob: -18.129077911376953
    6. '(prev' → logprob: -18.754077911376953
    7. '_prev' → logprob: -18.879077911376953
    8. '
' → logprob: -19.629077911376953
    9. '```' → logprob: -20.379077911376953
    10. 'pre' → logprob: -20.879077911376953

Token 1086: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -2.45848218582978e-06
    2. '.get' → logprob: -13.12500286102295
    3. '[c' → logprob: -15.37500286102295
    4. ' [(' → logprob: -16.750001907348633
    5. '[
' → logprob: -17.250001907348633
    6. '```' → logprob: -17.625001907348633
    7. '   ' → logprob: -17.875001907348633
    8. ',' → logprob: -18.000001907348633
    9. '[' → logprob: -18.125001907348633
    10. '.setdefault' → logprob: -18.250001907348633

Token 1087: 'cj' (ID: 173094)
  Prédit: 'cj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cj' → logprob: -5.5577775128767826e-06
    2. ' cj' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.6250057220459
    4. 'cy' → logprob: -17.8750057220459
    5. 'cq' → logprob: -17.8750057220459
    6. ' ' → logprob: -18.5000057220459
    7. '(c' → logprob: -18.7500057220459
    8. 'cyj' → logprob: -18.8750057220459
    9. 'cji' → logprob: -19.0000057220459
    10. '```' → logprob: -19.3750057220459

Token 1088: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031200747936964035
    2. 'cy' → logprob: -3.656200647354126
    3. ',c' → logprob: -5.906200885772705
    4. ' cy' → logprob: -6.406200885772705
    5. ' ,' → logprob: -7.781200885772705
    6. 'cj' → logprob: -10.281200408935547
    7. '(c' → logprob: -11.031200408935547
    8. ',j' → logprob: -11.156200408935547
    9. '.cy' → logprob: -11.406200408935547
    10. ' cj' → logprob: -12.406200408935547

Token 1089: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.00029613598599098623
    2. ' cy' → logprob: -8.125296592712402
    3. ' ' → logprob: -16.625295639038086
    4. 'cj' → logprob: -16.750295639038086
    5. 'cyj' → logprob: -16.750295639038086
    6. '.cy' → logprob: -17.875295639038086
    7. '   ' → logprob: -18.375295639038086
    8. '```' → logprob: -18.750295639038086
    9. ',' → logprob: -19.000295639038086
    10. 'cx' → logprob: -19.250295639038086

Token 1090: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2681935429573059
    2. ']:' → logprob: -2.143193483352661
    3. ')]' → logprob: -2.268193483352661
    4. ')' → logprob: -4.89319372177124
    5. ']):' → logprob: -5.89319372177124
    6. ']:
' → logprob: -6.01819372177124
    7. '):' → logprob: -7.26819372177124
    8. ']]:
' → logprob: -7.76819372177124
    9. ' ]' → logprob: -8.893193244934082
    10. ']):
' → logprob: -9.268193244934082

Token 1091: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43198180198669434
    2. ':
' → logprob: -1.0569818019866943
    3. '       ' → logprob: -6.431982040405273
    4. '):
' → logprob: -7.306982040405273
    5. '<|end|>' → logprob: -7.556982040405273
    6. '[' → logprob: -9.181982040405273
    7. '   ' → logprob: -9.306982040405273
    8. '<|end|>' → logprob: -9.931982040405273
    9. ',' → logprob: -10.056982040405273
    10. '):' → logprob: -10.181982040405273

Token 1092: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022369924932718277
    2. ':
' → logprob: -4.897369861602783
    3. ':' → logprob: -5.147369861602783
    4. '           ' → logprob: -5.522369861602783
    5. '   ' → logprob: -6.147369861602783
    6. '):
' → logprob: -6.897369861602783
    7. '[' → logprob: -7.147369861602783
    8. 'dfs' → logprob: -8.272370338439941
    9. ' ' → logprob: -9.272370338439941
    10. ')' → logprob: -9.522370338439941

Token 1093: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -1.3856492842023727e-06
    2. ' dfs' → logprob: -13.750000953674316
    3. 'df' → logprob: -15.250000953674316
    4. '   ' → logprob: -19.625001907348633
    5. 'dfa' → logprob: -20.125001907348633
    6. '
' → logprob: -20.625001907348633
    7. 'def' → logprob: -21.750001907348633
    8. '           ' → logprob: -22.750001907348633
    9. '       ' → logprob: -23.125001907348633
    10. ' ' → logprob: -23.125001907348633

Token 1094: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0025562841910868883
    2. 'pj' → logprob: -6.002556324005127
    3. ' pj' → logprob: -9.877555847167969
    4. '(py' → logprob: -10.502555847167969
    5. ' (' → logprob: -14.252555847167969
    6. 'p' → logprob: -14.752555847167969
    7. '   ' → logprob: -15.377555847167969
    8. '       ' → logprob: -15.877555847167969
    9. 'py' → logprob: -16.12755584716797
    10. '(' → logprob: -16.50255584716797

Token 1095: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.000579719664528966
    2. 'pj' → logprob: -7.500579833984375
    3. ' pj' → logprob: -11.750579833984375
    4. ',j' → logprob: -12.500579833984375
    5. 'cj' → logprob: -13.000579833984375
    6. '_j' → logprob: -13.125579833984375
    7. '(p' → logprob: -13.250579833984375
    8. ',' → logprob: -13.250579833984375
    9. '(j' → logprob: -13.500579833984375
    10. 'p' → logprob: -13.625579833984375

Token 1096: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7616821527481079
    2. 'pj' → logprob: -0.8866821527481079
    3. ' pj' → logprob: -2.6366820335388184
    4. '(p' → logprob: -3.7616820335388184
    5. ',p' → logprob: -4.136682033538818
    6. '(py' → logprob: -5.511682033538818
    7. '       ' → logprob: -5.886682033538818
    8. 'py' → logprob: -6.886682033538818
    9. '   ' → logprob: -7.011682033538818
    10. 'j' → logprob: -8.136682510375977

Token 1097: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.0011144968448206782
    2. 'pj' → logprob: -7.001114368438721
    3. ' py' → logprob: -8.876114845275879
    4. 'cy' → logprob: -9.751114845275879
    5. '(py' → logprob: -12.876114845275879
    6. '   ' → logprob: -13.626114845275879
    7. '       ' → logprob: -15.001114845275879
    8. ' pj' → logprob: -15.251114845275879
    9. 'cj' → logprob: -15.501114845275879
    10. '     ' → logprob: -15.876114845275879

Token 1098: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002258277963846922
    2. ',path' → logprob: -8.625226020812988
    3. ' ,' → logprob: -10.000226020812988
    4. '(path' → logprob: -15.000226020812988
    5. 'path' → logprob: -15.125226020812988
    6. ',p' → logprob: -16.000225067138672
    7. '           ' → logprob: -16.750225067138672
    8. ' path' → logprob: -18.000225067138672
    9. '   ' → logprob: -18.250225067138672
    10. '       ' → logprob: -18.250225067138672

Token 1099: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.014167623594403267
    2. ' path' → logprob: -4.264167785644531
    3. '   ' → logprob: -13.139167785644531
    4. ' ' → logprob: -13.889167785644531
    5. '    ' → logprob: -14.764167785644531
    6. 'py' → logprob: -15.514167785644531
    7. '  ' → logprob: -15.889167785644531
    8. 'pj' → logprob: -15.889167785644531
    9. '       ' → logprob: -16.13916778564453
    10. '     ' → logprob: -16.76416778564453

Token 1100: '+'' (ID: 14403)
  Prédit: '+''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+'' → logprob: -0.028710614889860153
    2. '+' → logprob: -4.028710842132568
    3. ' +' → logprob: -4.653710842132568
    4. '+(' → logprob: -7.153710842132568
    5. '+')' → logprob: -9.15371036529541
    6. ' +'' → logprob: -10.15371036529541
    7. '+"' → logprob: -11.27871036529541
    8. ')+'' → logprob: -11.52871036529541
    9. '+'\' → logprob: -11.77871036529541
    10. '+'_' → logprob: -11.90371036529541

Token 1101: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0002036595979006961
    2. ''' → logprob: -8.500204086303711
    3. '"B' → logprob: -16.50020408630371
    4. ' B' → logprob: -17.50020408630371
    5. '')' → logprob: -20.00020408630371
    6. '"' → logprob: -21.00020408630371
    7. '`' → logprob: -21.25020408630371
    8. 'b' → logprob: -21.25020408630371
    9. 'Ｂ' → logprob: -21.50020408630371
    10. '   ' → logprob: -21.62520408630371

Token 1102: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015514736878685653
    2. '')' → logprob: -9.125155448913574
    3. '")' → logprob: -11.000155448913574
    4. ')
' → logprob: -11.375155448913574
    5. '）' → logprob: -11.750155448913574
    6. ' )' → logprob: -12.375155448913574
    7. '   ' → logprob: -13.125155448913574
    8. '`)' → logprob: -13.500155448913574
    9. '       ' → logprob: -14.375155448913574
    10. ')}' → logprob: -14.750155448913574

Token 1103: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1104: ' ' (ID: 220)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.01052090059965849
    2. 'from' → logprob: -4.760520935058594
    3. 'default' → logprob: -6.760520935058594
    4. 'import' → logprob: -7.635520935058594
    5. 'memo' → logprob: -8.760520935058594
    6. '#' → logprob: -10.135520935058594
    7. ' prev' → logprob: -11.260520935058594
    8. 'for' → logprob: -11.510520935058594
    9. '(prev' → logprob: -11.760520935058594
    10. 'deque' → logprob: -12.260520935058594

Token 1105: '逆' (ID: 89037)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.0013094058958813548
    2. 'from' → logprob: -7.126309394836426
    3. 'import' → logprob: -8.751309394836426
    4. 'default' → logprob: -9.001309394836426
    5. 'memo' → logprob: -10.126309394836426
    6. '(prev' → logprob: -10.501309394836426
    7. '#' → logprob: -10.626309394836426
    8. 'for' → logprob: -10.751309394836426
    9. '[' → logprob: -10.876309394836426
    10. 'def' → logprob: -11.126309394836426

Token 1106: '方向' (ID: 101892)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.16860154271125793
    2. '方向' → logprob: -3.4186015129089355
    3. 'direction' → logprob: -3.5436015129089355
    4. 'mapping' → logprob: -4.1686015129089355
    5. 'states' → logprob: -4.2936015129089355
    6. '
' → logprob: -4.2936015129089355
    7. 'edges' → logprob: -5.1686015129089355
    8. 'dict' → logprob: -5.5436015129089355
    9. '向' → logprob: -5.6686015129089355
    10. 'の' → logprob: -5.7936015129089355

Token 1107: 'で' (ID: 4344)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.069539189338684
    2. 'prev' → logprob: -1.194539189338684
    3. '=' → logprob: -2.0695390701293945
    4. 'def' → logprob: -2.1945390701293945
    5. '#' → logprob: -3.5695390701293945
    6. 'の' → logprob: -4.1945390701293945
    7. 'dfs' → logprob: -4.3195390701293945
    8. 'from' → logprob: -4.5695390701293945
    9. 'states' → logprob: -4.5695390701293945
    10. 'から' → logprob: -4.9445390701293945

Token 1108: '前' (ID: 7660)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.018281398341059685
    2. 'states' → logprob: -4.51828145980835
    3. 'for' → logprob: -5.39328145980835
    4. 'queue' → logprob: -7.14328145980835
    5. 'from' → logprob: -7.14328145980835
    6. '#' → logprob: -7.26828145980835
    7. 'deque' → logprob: -8.893280982971191
    8. 'next' → logprob: -10.393280982971191
    9. 'paths' → logprob: -10.518280982971191
    10. 'stack' → logprob: -10.518280982971191

Token 1109: '状態' (ID: 175682)
  Prédit: '方向'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '方向' → logprob: -0.21474352478981018
    2. '向' → logprob: -2.8397436141967773
    3. 'の' → logprob: -3.3397436141967773
    4. 'direction' → logprob: -3.5897436141967773
    5. 'states' → logprob: -4.214743614196777
    6. '方' → logprob: -4.214743614196777
    7. '状態' → logprob: -4.464743614196777
    8. 'state' → logprob: -4.964743614196777
    9. '回' → logprob: -5.339743614196777
    10. 'from' → logprob: -5.464743614196777

Token 1110: 'を' (ID: 7277)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03164792060852051
    2. ' =' → logprob: -3.5316479206085205
    3. 'prev' → logprob: -7.031647682189941
    4. '=
' → logprob: -8.406647682189941
    5. 'from' → logprob: -8.906647682189941
    6. 'states' → logprob: -9.156647682189941
    7. ']' → logprob: -9.281647682189941
    8. 'def' → logprob: -9.281647682189941
    9. '＝' → logprob: -9.656647682189941
    10. '_states' → logprob: -9.781647682189941

Token 1111: '記' (ID: 22926)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.05891850218176842
    2. '{}' → logprob: -3.3089184761047363
    3. 'dict' → logprob: -4.683918476104736
    4. 'deque' → logprob: -4.683918476104736
    5. 'collections' → logprob: -6.558918476104736
    6. '{' → logprob: -7.558918476104736
    7. ' defaultdict' → logprob: -8.933918952941895
    8. 'prev' → logprob: -9.683918952941895
    9. '[]' → logprob: -10.808918952941895
    10. '{}
' → logprob: -11.933918952941895

Token 1112: '録' (ID: 69332)
  Prédit: '述'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '述' → logprob: -0.32019057869911194
    2. 'prev' → logprob: -1.6951905488967896
    3. '録' → logprob: -3.445190668106079
    4. '載' → logprob: -4.0701904296875
    5. '入' → logprob: -4.8201904296875
    6. '\xe6\x86' → logprob: -5.0701904296875
    7. '号' → logprob: -5.3201904296875
    8. 'pr' → logprob: -6.1951904296875
    9. 'e' → logprob: -6.5701904296875
    10. 'r' → logprob: -6.6951904296875

Token 1113: '
' (ID: 198)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.0024819616228342056
    2. '
' → logprob: -6.002481937408447
    3. '(prev' → logprob: -13.502482414245605
    4. '	prev' → logprob: -13.627482414245605
    5. '=' → logprob: -14.002482414245605
    6. '
' → logprob: -14.127482414245605
    7. ' prev' → logprob: -14.377482414245605
    8. ' =' → logprob: -15.002482414245605
    9. '.prev' → logprob: -15.127482414245605
    10. '_prev' → logprob: -15.252482414245605

Token 1114: '#' (ID: 2)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -1.0280383548888494e-06
    2. 'from' → logprob: -14.000000953674316
    3. ' prev' → logprob: -16.125001907348633
    4. 'pre' → logprob: -16.875001907348633
    5. '	prev' → logprob: -17.750001907348633
    6. '(prev' → logprob: -18.875001907348633
    7. '.prev' → logprob: -20.000001907348633
    8. '```' → logprob: -20.125001907348633
    9. '_prev' → logprob: -20.375001907348633
    10. 'default' → logprob: -20.750001907348633

Token 1115: ' forward' (ID: 6687)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -4.127333340875339e-06
    2. 'from' → logprob: -12.625003814697266
    3. '#' → logprob: -14.875003814697266
    4. ' prev' → logprob: -15.000003814697266
    5. 'pre' → logprob: -16.875003814697266
    6. '	prev' → logprob: -17.125003814697266
    7. '(prev' → logprob: -18.000003814697266
    8. '.prev' → logprob: -19.375003814697266
    9. '
' → logprob: -19.375003814697266
    10. 'def' → logprob: -19.625003814697266

Token 1116: '探索' (ID: 191406)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003137197345495224
    2. ' =' → logprob: -6.753137111663818
    3. 'states' → logprob: -7.003137111663818
    4. 'prev' → logprob: -7.128137111663818
    5. 'from' → logprob: -8.878137588500977
    6. 'queue' → logprob: -9.878137588500977
    7. '＝' → logprob: -11.003137588500977
    8. '_states' → logprob: -11.628137588500977
    9. '={' → logprob: -12.253137588500977
    10. '={}' → logprob: -12.253137588500977

Token 1117: 'で' (ID: 4344)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -2.3676733690081164e-05
    2. 'from' → logprob: -12.12502384185791
    3. ' prev' → logprob: -12.12502384185791
    4. 'queue' → logprob: -12.87502384185791
    5. 'def' → logprob: -13.00002384185791
    6. '#' → logprob: -13.37502384185791
    7. '=' → logprob: -13.50002384185791
    8. 'visited' → logprob: -13.75002384185791
    9. ' =' → logprob: -14.12502384185791
    10. '(prev' → logprob: -14.25002384185791

Token 1118: 'グ' (ID: 13094)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.00011272187111899257
    2. 'from' → logprob: -9.250112533569336
    3. ' prev' → logprob: -12.125112533569336
    4. 'queue' → logprob: -12.500112533569336
    5. 'deque' → logprob: -13.000112533569336
    6. 'default' → logprob: -13.375112533569336
    7. '(prev' → logprob: -14.375112533569336
    8. 'start' → logprob: -14.375112533569336
    9. '
' → logprob: -14.500112533569336
    10. '```' → logprob: -14.625112533569336

Token 1119: 'ラ' (ID: 8547)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.41874971985816956
    2. 'raph' → logprob: -1.7937496900558472
    3. 'from' → logprob: -2.0437498092651367
    4. '=' → logprob: -4.668749809265137
    5. 'default' → logprob: -4.918749809265137
    6. '#' → logprob: -5.043749809265137
    7. 'visited' → logprob: -5.418749809265137
    8. 'ph' → logprob: -6.043749809265137
    9. 'aph' → logprob: -6.043749809265137
    10. '(prev' → logprob: -6.043749809265137

Token 1120: 'フ' (ID: 13548)
  Prédit: 'aph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aph' → logprob: -0.42161938548088074
    2. 'ラ' → logprob: -1.5466194152832031
    3. 'raph' → logprob: -2.171619415283203
    4. 'raf' → logprob: -4.421619415283203
    5. 'ph' → logprob: -5.421619415283203
    6. 'раф' → logprob: -8.796619415283203
    7. 'rah' → logprob: -9.546619415283203
    8. 'rap' → logprob: -9.796619415283203
    9. 'r' → logprob: -10.421619415283203
    10. 'raphic' → logprob: -10.421619415283203

Token 1121: '構' (ID: 115981)
  Prédit: 'を'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'を' → logprob: -0.2999497950077057
    2. ' =' → logprob: -2.674949884414673
    3. '=' → logprob: -2.924949884414673
    4. 'prev' → logprob: -3.299949884414673
    5. 'の' → logprob: -3.799949884414673
    6. '#' → logprob: -4.549949645996094
    7. 'で' → logprob: -4.799949645996094
    8. 'edges' → logprob: -4.799949645996094
    9. 'が' → logprob: -4.924949645996094
    10. 'for' → logprob: -5.174949645996094

Token 1122: '築' (ID: 147796)
  Prédit: '築'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '築' → logprob: -0.12865090370178223
    2. '成' → logprob: -2.1286509037017822
    3. '造' → logprob: -6.378650665283203
    4. '```' → logprob: -11.378650665283203
    5. '筑' → logprob: -11.878650665283203
    6. '#' → logprob: -13.503650665283203
    7. '
' → logprob: -14.253650665283203
    8. '=' → logprob: -14.753650665283203
    9. '``' → logprob: -14.878650665283203
    10. '\xe7\xb9' → logprob: -15.128650665283203

Token 1123: 'し' (ID: 3829)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -2.2246291337069124e-05
    2. 'from' → logprob: -10.875021934509277
    3. '#' → logprob: -13.750021934509277
    4. ' prev' → logprob: -14.625021934509277
    5. 'def' → logprob: -14.750021934509277
    6. 'deque' → logprob: -14.875021934509277
    7. '
' → logprob: -15.375021934509277
    8. '(prev' → logprob: -15.500021934509277
    9. '	prev' → logprob: -15.750021934509277
    10. 'pre' → logprob: -15.875021934509277

Token 1124: '、' (ID: 1395)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.0007331513334065676
    2. ' prev' → logprob: -7.500733375549316
    3. '
' → logprob: -9.875733375549316
    4. 'deque' → logprob: -10.000733375549316
    5. 'queue' → logprob: -10.250733375549316
    6. 'from' → logprob: -10.500733375549316
    7. '```' → logprob: -12.375733375549316
    8. 'visited' → logprob: -12.500733375549316
    9. 'default' → logprob: -13.000733375549316
    10. '(prev' → logprob: -13.000733375549316

Token 1125: '逆' (ID: 89037)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.0008143932209350169
    2. 'deque' → logprob: -7.250814437866211
    3. 'queue' → logprob: -9.750814437866211
    4. 'from' → logprob: -10.750814437866211
    5. 'visited' → logprob: -11.625814437866211
    6. 'front' → logprob: -12.625814437866211
    7. ' prev' → logprob: -13.125814437866211
    8. '#' → logprob: -13.375814437866211
    9. '```' → logprob: -13.375814437866211
    10. 'default' → logprob: -13.625814437866211

Token 1126: 'に' (ID: 5280)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.08609084784984589
    2. '方向' → logprob: -3.2110908031463623
    3. 'direction' → logprob: -3.5860908031463623
    4. '
' → logprob: -5.336091041564941
    5. '```' → logprob: -5.461091041564941
    6. '_direction' → logprob: -6.586091041564941
    7. '_states' → logprob: -6.836091041564941
    8. 'from' → logprob: -6.961091041564941
    9. 'states' → logprob: -8.086091041564941
    10. '#' → logprob: -8.086091041564941

Token 1127: '探索' (ID: 191406)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.003591756336390972
    2. '#' → logprob: -6.003591537475586
    3. 'from' → logprob: -7.878591537475586
    4. 'for' → logprob: -8.253591537475586
    5. 'deque' → logprob: -8.628591537475586
    6. 'back' → logprob: -9.253591537475586
    7. 'visited' → logprob: -10.503591537475586
    8. 'queue' → logprob: -10.753591537475586
    9. '前' → logprob: -10.878591537475586
    10. 'reverse' → logprob: -11.003591537475586

Token 1128: 'して' (ID: 22440)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.3735659420490265
    2. 'from' → logprob: -1.373565912246704
    3. 'queue' → logprob: -3.873565912246704
    4. '
' → logprob: -4.123566150665283
    5. 'visited' → logprob: -4.373566150665283
    6. 'for' → logprob: -5.998566150665283
    7. '#' → logprob: -6.248566150665283
    8. 'deque' → logprob: -6.623566150665283
    9. 'q' → logprob: -7.248566150665283
    10. 'states' → logprob: -7.873566150665283

Token 1129: '列' (ID: 19047)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6579943895339966
    2. 'prev' → logprob: -0.7829943895339966
    3. 'while' → logprob: -4.782994270324707
    4. 'visited' → logprob: -5.282994270324707
    5. 'paths' → logprob: -6.032994270324707
    6. 'for' → logprob: -6.532994270324707
    7. 'memo' → logprob: -6.907994270324707
    8. '```' → logprob: -7.032994270324707
    9. '
' → logprob: -7.532994270324707
    10. 'path' → logprob: -7.657994270324707

Token 1130: '�' (ID: 6695)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\xe6\x8c' → logprob: -0.0012660634238272905
    2. '推' → logprob: -7.751266002655029
    3. '伝' → logprob: -9.126266479492188
    4. 'queue' → logprob: -9.376266479492188
    5. '結' → logprob: -9.876266479492188
    6. '車' → logprob: -10.001266479492188
    7. '移' → logprob: -10.126266479492188
    8. '幅' → logprob: -10.251266479492188
    9. '構' → logprob: -10.251266479492188
    10. '補' → logprob: -10.626266479492188

Token 1131: '�' (ID: 247)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.0952324867248535
    2. 'd' → logprob: -2.5952324867248535
    3. 'e' → logprob: -2.7202324867248535
    4. '```' → logprob: -2.8452324867248535
    5. '{' → logprob: -2.9702324867248535
    6. '）' → logprob: -2.9702324867248535
    7. '字' → logprob: -3.2202324867248535
    8. '
' → logprob: -3.3452324867248535
    9. 'p' → logprob: -3.3452324867248535
    10. 'a' → logprob: -3.5952324867248535

Token 1132: '
' (ID: 198)
  Prédit: '方向'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '方向' → logprob: -1.525357961654663
    2. '記' → logprob: -2.275357961654663
    3. '探索' → logprob: -2.525357961654663
    4. '構' → logprob: -2.775357961654663
    5. '#' → logprob: -2.900357961654663
    6. 'states' → logprob: -3.025357961654663
    7. 'prev' → logprob: -3.400357961654663
    8. 'visited' → logprob: -4.025358200073242
    9. 'for' → logprob: -4.025358200073242
    10. '続' → logprob: -4.025358200073242

Token 1133: 'max' (ID: 3228)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.0003421375877223909
    2. 'from' → logprob: -8.75034236907959
    3. 'default' → logprob: -9.25034236907959
    4. 'deque' → logprob: -10.75034236907959
    5. '```' → logprob: -11.00034236907959
    6. '{' → logprob: -11.00034236907959
    7. ' prev' → logprob: -11.75034236907959
    8. '
' → logprob: -11.87534236907959
    9. '{
' → logprob: -12.37534236907959
    10. 'import' → logprob: -12.37534236907959

Token 1134: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.09622549265623093
    2. '_j' → logprob: -3.2212255001068115
    3. 'score' → logprob: -3.4712255001068115
    4. '_queue' → logprob: -5.096225261688232
    5. '_depth' → logprob: -5.721225261688232
    6. '_states' → logprob: -5.971225261688232
    7. '_scores' → logprob: -6.221225261688232
    8. '_points' → logprob: -6.721225261688232
    9. '_' → logprob: -6.846225261688232
    10. ' =' → logprob: -6.971225261688232

Token 1135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22556637227535248
    2. '=' → logprob: -1.6005663871765137
    3. '_j' → logprob: -9.725565910339355
    4. '＝' → logprob: -10.475565910339355
    5. ',' → logprob: -10.725565910339355
    6. '=j' → logprob: -11.225565910339355
    7. ',j' → logprob: -11.975565910339355
    8. '_' → logprob: -12.350565910339355
    9. '_score' → logprob: -12.600565910339355
    10. 'j' → logprob: -12.850565910339355

Token 1136: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.43949025869369507
    2. '7' → logprob: -1.1894903182983398
    3. '10' → logprob: -3.81449031829834
    4. '(' → logprob: -4.06449031829834
    5. '12' → logprob: -5.81449031829834
    6. '11' → logprob: -5.93949031829834
    7. '5' → logprob: -5.93949031829834
    8. '8' → logprob: -6.43949031829834
    9. '9' → logprob: -7.56449031829834
    10. '15' → logprob: -8.18949031829834

Token 1137: '7' (ID: 22)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7619295120239258
    2. '6' → logprob: -1.3869295120239258
    3. '7' → logprob: -1.5119295120239258
    4. '12' → logprob: -4.261929512023926
    5. '20' → logprob: -4.511929512023926
    6. '8' → logprob: -4.761929512023926
    7. '11' → logprob: -4.886929512023926
    8. '100' → logprob: -5.011929512023926
    9. '15' → logprob: -5.136929512023926
    10. '(' → logprob: -5.636929512023926

Token 1138: '
' (ID: 198)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.4435858428478241
    2. '
' → logprob: -1.0685858726501465
    3. 'from' → logprob: -5.4435858726501465
    4. 'max' → logprob: -5.6935858726501465
    5. '
' → logprob: -6.5685858726501465
    6. 'j' → logprob: -6.8185858726501465
    7. ',' → logprob: -7.0685858726501465
    8. '#' → logprob: -7.3185858726501465
    9. ' prev' → logprob: -7.8185858726501465
    10. '' → logprob: -7.9435858726501465

Token 1139: 'prev' (ID: 15969)
  Prédit: 'prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.0032788405660539865
    2. 'from' → logprob: -5.753278732299805
    3. '
' → logprob: -10.628278732299805
    4. 'queue' → logprob: -10.628278732299805
    5. 'visited' → logprob: -11.003278732299805
    6. '#' → logprob: -11.253278732299805
    7. '```' → logprob: -12.128278732299805
    8. 'def' → logprob: -12.628278732299805
    9. 'q' → logprob: -13.128278732299805
    10. 'max' → logprob: -13.253278732299805

Token 1140: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269349306821823
    2. ' =' → logprob: -2.1269350051879883
    3. '={}' → logprob: -12.126935005187988
    4. '＝' → logprob: -13.876935005187988
    5. '={' → logprob: -15.501935005187988
    6. '=[]' → logprob: -16.126934051513672
    7. ' ' → logprob: -16.751934051513672
    8. '={'' → logprob: -17.126934051513672
    9. '={}
' → logprob: -17.376934051513672
    10. '=dict' → logprob: -17.501934051513672

Token 1141: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.33890169858932495
    2. '{' → logprob: -1.3389017581939697
    3. 'default' → logprob: -3.8389017581939697
    4. 'dict' → logprob: -5.588901519775391
    5. '[' → logprob: -11.08890151977539
    6. '{}
' → logprob: -11.21390151977539
    7. ' defaultdict' → logprob: -11.46390151977539
    8. ' {}' → logprob: -12.08890151977539
    9. ' {' → logprob: -12.46390151977539
    10. '{}

' → logprob: -12.71390151977539

Token 1142: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.3086543083190918
    2. ' =' → logprob: -1.6836543083190918
    3. '<|end|>' → logprob: -2.183654308319092
    4. '{' → logprob: -2.558654308319092
    5. '([(' → logprob: -2.683654308319092
    6. '=' → logprob: -3.058654308319092
    7. '()
' → logprob: -3.058654308319092
    8. '[(' → logprob: -3.308654308319092
    9. 'for' → logprob: -3.433654308319092
    10. '<|end|>' → logprob: -3.808654308319092

Token 1143: 'for' (ID: 1938)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.3763124644756317
    2. 'for' → logprob: -1.376312494277954
    3. 'q' → logprob: -2.876312494277954
    4. 'from' → logprob: -6.251312255859375
    5. 'que' → logprob: -6.876312255859375
    6. 'stack' → logprob: -7.376312255859375
    7. 'score' → logprob: -7.751312255859375
    8. 'dq' → logprob: -8.251312255859375
    9. 'deque' → logprob: -8.376312255859375
    10. 'Q' → logprob: -9.501312255859375

Token 1144: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.465019553899765
    2. 'score' → logprob: -1.2150195837020874
    3. 'i' → logprob: -3.090019464492798
    4. 'curr' → logprob: -4.715019702911377
    5. 'cur' → logprob: -5.215019702911377
    6. 'current' → logprob: -5.215019702911377
    7. 'jj' → logprob: -5.965019702911377
    8. 's' → logprob: -6.590019702911377
    9. 'x' → logprob: -6.840019702911377
    10. 'a' → logprob: -6.965019702911377

Token 1145: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22565236687660217
    2. 'in' → logprob: -1.6006523370742798
    3. 'n' → logprob: -8.975652694702148
    4. '0' → logprob: -10.725652694702148
    5. 'range' → logprob: -10.725652694702148
    6. ' ' → logprob: -11.100652694702148
    7. '1' → logprob: -11.850652694702148
    8. 'space' → logprob: -12.100652694702148
    9. '   ' → logprob: -12.100652694702148
    10. '　' → logprob: -12.350652694702148

Token 1146: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.935296834039036e-06
    2. ' range' → logprob: -12.75000286102295
    3. '(range' → logprob: -17.625003814697266
    4. 'j' → logprob: -20.125003814697266
    5. 'in' → logprob: -21.125003814697266
    6. '(' → logprob: -21.125003814697266
    7. '0' → logprob: -21.500003814697266
    8. '	range' → logprob: -22.250003814697266
    9. 'r' → logprob: -22.625003814697266
    10. '[(' → logprob: -23.250003814697266

Token 1147: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.004207444377243519
    2. '(' → logprob: -5.504207611083984
    3. '((' → logprob: -9.004207611083984
    4. '(j' → logprob: -12.379207611083984
    5. 'max' → logprob: -13.504207611083984
    6. '1' → logprob: -15.004207611083984
    7. ' (' → logprob: -16.754207611083984
    8. '(m' → logprob: -17.129207611083984
    9. '0' → logprob: -17.254207611083984
    10. '(min' → logprob: -17.379207611083984

Token 1148: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -4.811348480870947e-05
    2. '_' → logprob: -10.87504768371582
    3. 'score' → logprob: -11.00004768371582
    4. '7' → logprob: -12.62504768371582
    5. ' _' → logprob: -13.62504768371582
    6. '_scores' → logprob: -13.62504768371582
    7. '_SCORE' → logprob: -13.75004768371582
    8. '+' → logprob: -13.75004768371582
    9. 'max' → logprob: -14.00004768371582
    10. '6' → logprob: -14.37504768371582

Token 1149: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00713020795956254
    2. ' +' → logprob: -5.007130146026611
    3. '):
' → logprob: -8.13213062286377
    4. '):' → logprob: -9.25713062286377
    5. '(' → logprob: -11.25713062286377
    6. ')' → logprob: -13.00713062286377
    7. '7' → logprob: -13.38213062286377
    8. '   ' → logprob: -13.75713062286377
    9. '＋' → logprob: -13.75713062286377
    10. '1' → logprob: -13.88213062286377

Token 1150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020253973081707954
    2. ' for' → logprob: -4.020254135131836
    3. '	for' → logprob: -6.395254135131836
    4. 'for' → logprob: -7.895254135131836
    5. ' ' → logprob: -10.645254135131836
    6. '	prev' → logprob: -10.645254135131836
    7. '   ' → logprob: -12.395254135131836
    8. ' prev' → logprob: -12.770254135131836
    9. ' ' → logprob: -13.645254135131836
    10. 'prev' → logprob: -13.645254135131836

Token 1151: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06672448664903641
    2. 'prev' → logprob: -3.0667245388031006
    3. '   ' → logprob: -4.0667243003845215
    4. ' for' → logprob: -7.1917243003845215
    5. ' prev' → logprob: -10.31672477722168
    6. '	for' → logprob: -10.81672477722168
    7. ' ' → logprob: -10.94172477722168
    8. '	prev' → logprob: -11.44172477722168
    9. '    
' → logprob: -13.44172477722168
    10. '  ' → logprob: -13.81672477722168

Token 1152: ' k' (ID: 372)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0003442832676228136
    2. ' j' → logprob: -8.000344276428223
    3. '   ' → logprob: -12.000344276428223
    4. '	j' → logprob: -13.375344276428223
    5. 'k' → logprob: -14.125344276428223
    6. '0' → logprob: -15.875344276428223
    7. 'y' → logprob: -15.875344276428223
    8. '_j' → logprob: -16.37534523010254
    9. ' ' → logprob: -17.87534523010254
    10. '    
' → logprob: -18.00034523010254

Token 1153: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07892239838838577
    2. 'in' → logprob: -2.5789225101470947
    3. '   ' → logprob: -11.453922271728516
    4. 'n' → logprob: -11.703922271728516
    5. 'k' → logprob: -12.328922271728516
    6. ',' → logprob: -13.078922271728516
    7. ' ' → logprob: -13.328922271728516
    8. '	in' → logprob: -13.953922271728516
    9. 'range' → logprob: -13.953922271728516
    10. 'i' → logprob: -14.078922271728516

Token 1154: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00015943869948387146
    2. ' range' → logprob: -8.75015926361084
    3. '(range' → logprob: -14.37515926361084
    4. 'i' → logprob: -15.75015926361084
    5. '   ' → logprob: -16.250160217285156
    6. '0' → logprob: -17.000160217285156
    7. 'j' → logprob: -18.875160217285156
    8. ' ' → logprob: -18.875160217285156
    9. '(i' → logprob: -19.750160217285156
    10. '	range' → logprob: -20.000160217285156

Token 1155: '(max' (ID: 17178)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.013126585632562637
    2. '(max' → logprob: -4.888126373291016
    3. '7' → logprob: -6.388126373291016
    4. 'i' → logprob: -6.638126373291016
    5. '0' → logprob: -6.763126373291016
    6. '(i' → logprob: -6.888126373291016
    7. ' max' → logprob: -8.263126373291016
    8. '(' → logprob: -9.763126373291016
    9. '   ' → logprob: -11.638126373291016
    10. 'k' → logprob: -12.138126373291016

Token 1156: '_score' (ID: 22555)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.24984675645828247
    2. 'i' → logprob: -2.3748466968536377
    3. '_score' → logprob: -2.3748466968536377
    4. '7' → logprob: -3.3748466968536377
    5. 'k' → logprob: -8.249846458435059
    6. 'score' → logprob: -8.499846458435059
    7. ' max' → logprob: -8.999846458435059
    8. '(i' → logprob: -9.499846458435059
    9. 'Score' → logprob: -9.874846458435059
    10. '(max' → logprob: -10.624846458435059

Token 1157: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3825121223926544
    2. '+' → logprob: -1.632512092590332
    3. '):
' → logprob: -2.132512092590332
    4. '   ' → logprob: -6.382512092590332
    5. ',' → logprob: -7.007512092590332
    6. ' +' → logprob: -8.257512092590332
    7. ':' → logprob: -8.382512092590332
    8. '+i' → logprob: -8.632512092590332
    9. ')' → logprob: -9.007512092590332
    10. '	' → logprob: -9.757512092590332

Token 1158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0704164057970047
    2. '   ' → logprob: -2.6954164505004883
    3. 'prev' → logprob: -8.320416450500488
    4. ' prev' → logprob: -8.570416450500488
    5. '	prev' → logprob: -10.945416450500488
    6. ' for' → logprob: -11.695416450500488
    7. '           ' → logprob: -12.195416450500488
    8. '	   ' → logprob: -12.445416450500488
    9. ' ' → logprob: -12.820416450500488
    10. '	' → logprob: -12.945416450500488

Token 1159: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -0.04643478989601135
    2. '   ' → logprob: -3.1714348793029785
    3. '           ' → logprob: -6.2964348793029785
    4. ' prev' → logprob: -6.7964348793029785
    5. '       ' → logprob: -7.9214348793029785
    6. '	prev' → logprob: -9.42143440246582
    7. ' ' → logprob: -11.54643440246582
    8. 'for' → logprob: -11.92143440246582
    9. 'if' → logprob: -12.42143440246582
    10. '               ' → logprob: -13.79643440246582

Token 1160: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -2.339278580620885e-06
    2. '[i' → logprob: -13.500001907348633
    3. '[' → logprob: -14.375001907348633
    4. '.setdefault' → logprob: -15.250001907348633
    5. '[((' → logprob: -17.500001907348633
    6. '[j' → logprob: -17.750001907348633
    7. ' [(' → logprob: -18.875001907348633
    8. '   ' → logprob: -21.000001907348633
    9. '((' → logprob: -21.500001907348633
    10. '
' → logprob: -21.750001907348633

Token 1161: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0280383548888494e-06
    2. ' i' → logprob: -13.875000953674316
    3. '(i' → logprob: -17.125001907348633
    4. '   ' → logprob: -17.625001907348633
    5. ')i' → logprob: -17.750001907348633
    6. '	i' → logprob: -19.125001907348633
    7. '{i' → logprob: -19.125001907348633
    8. ')' → logprob: -20.000001907348633
    9. ',i' → logprob: -20.000001907348633
    10. '       ' → logprob: -21.250001907348633

Token 1162: ',k' (ID: 35155)
  Prédit: ',k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.5878519415855408
    2. ',' → logprob: -0.8378519415855408
    3. 'k' → logprob: -4.4628520011901855
    4. ' ,' → logprob: -8.212851524353027
    5. '   ' → logprob: -10.837851524353027
    6. ' k' → logprob: -12.087851524353027
    7. ',j' → logprob: -12.462851524353027
    8. ')]' → logprob: -13.212851524353027
    9. '+' → logprob: -13.712851524353027
    10. ' ' → logprob: -13.712851524353027

Token 1163: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6342513561248779
    2. ')]' → logprob: -0.7592513561248779
    3. ')' → logprob: -7.009251594543457
    4. ']=' → logprob: -7.259251594543457
    5. '   ' → logprob: -11.134251594543457
    6. ']]' → logprob: -12.134251594543457
    7. '])' → logprob: -12.259251594543457
    8. ' ]' → logprob: -12.384251594543457
    9. '=' → logprob: -12.759251594543457
    10. '       ' → logprob: -13.259251594543457

Token 1164: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.5776860184123507e-06
    2. '=[]' → logprob: -13.25000286102295
    3. '=set' → logprob: -14.25000286102295
    4. ' =' → logprob: -16.125001907348633
    5. '＝' → logprob: -18.625001907348633
    6. '={}' → logprob: -19.000001907348633
    7. ']=' → logprob: -20.250001907348633
    8. '=[]
' → logprob: -20.750001907348633
    9. '.=' → logprob: -20.875001907348633
    10. '=}' → logprob: -21.000001907348633

Token 1165: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.12694554030895233
    2. 'set' → logprob: -2.1269454956054688
    3. 'deque' → logprob: -11.126945495605469
    4. '{}' → logprob: -13.751945495605469
    5. '[]}' → logprob: -14.001945495605469
    6. ' []' → logprob: -14.876945495605469
    7. '[])' → logprob: -15.876945495605469
    8. '[]
' → logprob: -16.00194549560547
    9. 'list' → logprob: -16.25194549560547
    10. ' set' → logprob: -16.37694549560547

Token 1166: 'queue' (ID: 9409)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005018008523620665
    2. ' for' → logprob: -7.87550163269043
    3. '   ' → logprob: -9.25050163269043
    4. '```' → logprob: -10.87550163269043
    5. 'states' → logprob: -12.25050163269043
    6. '	for' → logprob: -14.12550163269043
    7. 'if' → logprob: -15.37550163269043
    8. '       ' → logprob: -15.50050163269043
    9. ' ' → logprob: -16.12550163269043
    10. '``' → logprob: -16.37550163269043

Token 1167: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602325439453125
    2. ' =' → logprob: -1.9102325439453125
    3. '＝' → logprob: -12.910232543945312
    4. 'deque' → logprob: -12.910232543945312
    5. '.append' → logprob: -13.035232543945312
    6. ' ' → logprob: -15.035232543945312
    7. '(queue' → logprob: -15.035232543945312
    8. '(de' → logprob: -16.410232543945312
    9. '=[]' → logprob: -16.660232543945312
    10. ')' → logprob: -17.535232543945312

Token 1168: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -7.941850526549388e-06
    2. ' deque' → logprob: -11.750007629394531
    3. '   ' → logprob: -21.37500762939453
    4. 'collections' → logprob: -21.62500762939453
    5. '[(' → logprob: -22.00000762939453
    6. '```' → logprob: -22.87500762939453
    7. 'Deque' → logprob: -23.25000762939453
    8. '
' → logprob: -23.75000762939453
    9. 'from' → logprob: -24.25000762939453
    10. 'de' → logprob: -24.87500762939453

Token 1169: '()
' (ID: 1234)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.04419746249914169
    2. '(' → logprob: -4.0441975593566895
    3. '()' → logprob: -4.2941975593566895
    4. '([' → logprob: -4.5441975593566895
    5. '((' → logprob: -7.2941975593566895
    6. '([
' → logprob: -8.044197082519531
    7. '([]' → logprob: -8.169197082519531
    8. '[(' → logprob: -9.044197082519531
    9. '([...' → logprob: -11.794197082519531
    10. '(['' → logprob: -11.919197082519531

Token 1170: 'queue' (ID: 9409)
  Prédit: 'queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.1756367712223437e-05
    2. ' queue' → logprob: -11.375011444091797
    3. '(queue' → logprob: -15.875011444091797
    4. '	queue' → logprob: -17.250011444091797
    5. '```' → logprob: -17.375011444091797
    6. '
' → logprob: -17.750011444091797
    7. '.queue' → logprob: -17.750011444091797
    8. 'for' → logprob: -19.125011444091797
    9. '_queue' → logprob: -20.000011444091797
    10. 'deque' → logprob: -20.500011444091797

Token 1171: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0022354244720190763
    2. '.' → logprob: -6.127235412597656
    3. 'append' → logprob: -10.502235412597656
    4. '=' → logprob: -12.377235412597656
    5. '.extend' → logprob: -12.377235412597656
    6. '.enqueue' → logprob: -12.627235412597656
    7. '．' → logprob: -12.877235412597656
    8. ' .' → logprob: -13.252235412597656
    9. '.app' → logprob: -13.627235412597656
    10. ').' → logprob: -13.877235412597656

Token 1172: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -4.56102097814437e-05
    2. '(' → logprob: -10.000045776367188
    3. '(((' → logprob: -16.500045776367188
    4. '[(' → logprob: -17.750045776367188
    5. ' ((' → logprob: -18.875045776367188
    6. '([(' → logprob: -19.125045776367188
    7. '```' → logprob: -20.500045776367188
    8. '([' → logprob: -21.625045776367188
    9. '(('' → logprob: -21.750045776367188
    10. ' (' → logprob: -21.875045776367188

Token 1173: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036006635054945946
    2. '(' → logprob: -5.628600597381592
    3. ' ' → logprob: -15.62860107421875
    4. 'j' → logprob: -15.87860107421875
    5. ' (' → logprob: -16.00360107421875
    6. '(j' → logprob: -16.25360107421875
    7. '((' → logprob: -16.87860107421875
    8. ')' → logprob: -17.12860107421875
    9. '   ' → logprob: -18.37860107421875
    10. '1' → logprob: -18.94110107421875

Token 1174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002795703476294875
    2. ' ,' → logprob: -8.375279426574707
    3. '0' → logprob: -10.750279426574707
    4. ',j' → logprob: -11.125279426574707
    5. '<|end|>' → logprob: -12.250279426574707
    6. ',
' → logprob: -13.125279426574707
    7. '```' → logprob: -13.750279426574707
    8. ')' → logprob: -13.875279426574707
    9. ',None' → logprob: -14.000279426574707
    10. '<|end|>' → logprob: -14.500279426574707

Token 1175: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '۰' → logprob: -18.250017166137695
    4. '   ' → logprob: -18.500017166137695
    5. '```' → logprob: -18.562517166137695
    6. ',' → logprob: -18.812517166137695
    7. '  ' → logprob: -19.000017166137695
    8. '
' → logprob: -19.000017166137695
    9. ')' → logprob: -19.125017166137695
    10. '1' → logprob: -19.312517166137695

Token 1176: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0007352970424108207
    2. ')' → logprob: -7.375735282897949
    3. ',' → logprob: -9.25073528289795
    4. ' ))' → logprob: -12.12573528289795
    5. '))
' → logprob: -12.25073528289795
    6. ')))' → logprob: -13.62573528289795
    7. '),' → logprob: -14.37573528289795
    8. '));' → logprob: -15.37573528289795
    9. '))

' → logprob: -15.87573528289795
    10. ' )' → logprob: -16.625736236572266

Token 1177: 'visited' (ID: 52453)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -7.505351095460355e-05
    2. 'visited' → logprob: -10.000075340270996
    3. '```' → logprob: -10.500075340270996
    4. ' while' → logprob: -13.500075340270996
    5. '
' → logprob: -14.875075340270996
    6. 'for' → logprob: -15.250075340270996
    7. '``' → logprob: -17.00007438659668
    8. 'seen' → logprob: -18.00007438659668
    9. 'While' → logprob: -18.62507438659668
    10. 'prev' → logprob: -19.12507438659668

Token 1178: ' =' (ID: 314)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.020303966477513313
    2. '.append' → logprob: -4.770304203033447
    3. ' =' → logprob: -4.895304203033447
    4. '<|end|>' → logprob: -6.270304203033447
    5. ' .' → logprob: -7.270304203033447
    6. '.' → logprob: -7.395304203033447
    7. '.setdefault' → logprob: -8.020303726196289
    8. '.clear' → logprob: -8.895303726196289
    9. ')' → logprob: -9.020303726196289
    10. '=' → logprob: -9.895303726196289

Token 1179: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0009328982559964061
    2. '{' → logprob: -7.000932693481445
    3. ' set' → logprob: -10.750932693481445
    4. ' {(' → logprob: -17.625932693481445
    5. '	set' → logprob: -18.500932693481445
    6. ' {' → logprob: -19.500932693481445
    7. '(set' → logprob: -19.875932693481445
    8. '=set' → logprob: -20.000932693481445
    9. '{
' → logprob: -20.250932693481445
    10. '{s' → logprob: -21.125932693481445

Token 1180: '()
' (ID: 1234)
  Prédit: '(queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(queue' → logprob: -0.9229652285575867
    2. '()' → logprob: -1.0479652881622314
    3. '()
' → logprob: -1.4229652881622314
    4. '```' → logprob: -4.797965049743652
    5. '((' → logprob: -6.797965049743652
    6. 'queue' → logprob: -7.797965049743652
    7. 'while' → logprob: -8.297965049743652
    8. '
' → logprob: -8.672965049743652
    9. ' =' → logprob: -9.047965049743652
    10. '``' → logprob: -9.172965049743652

Token 1181: 'visited' (ID: 52453)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3653918206691742
    2. 'visited' → logprob: -1.2403918504714966
    3. ' while' → logprob: -4.490391731262207
    4. 'queue' → logprob: -5.490391731262207
    5. '```' → logprob: -6.990391731262207
    6. ' visited' → logprob: -8.115391731262207
    7. ' 
' → logprob: -9.240391731262207
    8. ' queue' → logprob: -10.240391731262207
    9. '	while' → logprob: -10.365391731262207
    10. '
' → logprob: -10.365391731262207

Token 1182: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.07900567352771759
    2. '.' → logprob: -2.579005718231201
    3. '=' → logprob: -9.954005241394043
    4. ' .' → logprob: -10.954005241394043
    5. ' =' → logprob: -11.454005241394043
    6. '.=' → logprob: -11.829005241394043
    7. '.clear' → logprob: -11.954005241394043
    8. 'add' → logprob: -11.954005241394043
    9. '().' → logprob: -12.454005241394043
    10. '_add' → logprob: -12.579005241394043

Token 1183: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.375001907348633
    3. ' ((' → logprob: -16.875001907348633
    4. '(
' → logprob: -19.750001907348633
    5. '(((' → logprob: -20.125001907348633
    6. ' ' → logprob: -20.500001907348633
    7. ' (' → logprob: -20.625001907348633
    8. '(('' → logprob: -21.875001907348633
    9. '[(' → logprob: -22.125001907348633
    10. '(("' → logprob: -22.375001907348633

Token 1184: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.668304245569743e-05
    2. '(' → logprob: -10.500046730041504
    3. ' ' → logprob: -10.875046730041504
    4. ' (' → logprob: -16.875045776367188
    5. '   ' → logprob: -18.000045776367188
    6. '
' → logprob: -18.750045776367188
    7. '０' → logprob: -19.125045776367188
    8. '  ' → logprob: -19.500045776367188
    9. '۰' → logprob: -20.125045776367188
    10. ')' → logprob: -21.375045776367188

Token 1185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043698702938854694
    2. ' ,' → logprob: -7.750436782836914
    3. '0' → logprob: -12.875436782836914
    4. ',
' → logprob: -13.375436782836914
    5. ')' → logprob: -13.500436782836914
    6. ' ' → logprob: -15.000436782836914
    7. '
' → logprob: -15.750436782836914
    8. '```' → logprob: -16.875436782836914
    9. '‌,' → logprob: -17.000436782836914
    10. ' ,
' → logprob: -17.125436782836914

Token 1186: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '۰' → logprob: -19.250001907348633
    4. '
' → logprob: -19.500001907348633
    5. '０' → logprob: -20.250001907348633
    6. '```' → logprob: -21.375001907348633
    7. '  ' → logprob: -21.562501907348633
    8. '   ' → logprob: -21.937501907348633
    9. '०' → logprob: -22.250001907348633
    10. '00' → logprob: -22.312501907348633

Token 1187: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9266199160483666e-05
    2. '))' → logprob: -10.875019073486328
    3. ')`' → logprob: -16.375019073486328
    4. ' )' → logprob: -16.500019073486328
    5. ')
' → logprob: -16.625019073486328
    6. ')))' → logprob: -18.000019073486328
    7. ')}' → logprob: -18.125019073486328
    8. '）' → logprob: -18.375019073486328
    9. '),' → logprob: -18.750019073486328
    10. '())' → logprob: -19.125019073486328

Token 1188: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.001178439473733306
    2. '```' → logprob: -6.75117826461792
    3. ' while' → logprob: -11.876178741455078
    4. '``' → logprob: -14.251178741455078
    5. 'While' → logprob: -15.126178741455078
    6. '	while' → logprob: -15.751178741455078
    7. 'for' → logprob: -16.501178741455078
    8. '
' → logprob: -16.501178741455078
    9. 'next' → logprob: -16.751178741455078
    10. '   ' → logprob: -17.501178741455078

Token 1189: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.0006002153968438506
    2. ' queue' → logprob: -7.500600337982178
    3. 'len' → logprob: -10.00059986114502
    4. '(queue' → logprob: -13.50059986114502
    5. 'True' → logprob: -15.00059986114502
    6. '	queue' → logprob: -15.50059986114502
    7. ' len' → logprob: -17.125600814819336
    8. '.queue' → logprob: -18.750600814819336
    9. '   ' → logprob: -18.875600814819336
    10. '```' → logprob: -19.000600814819336

Token 1190: ':
' (ID: 734)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.5325542092323303
    2. ':
' → logprob: -0.9075542092323303
    3. '.pop' → logprob: -5.6575541496276855
    4. ':' → logprob: -6.0325541496276855
    5. '):
' → logprob: -6.5325541496276855
    6. '.append' → logprob: -6.6575541496276855
    7. '.' → logprob: -8.407554626464844
    8. '   ' → logprob: -8.532554626464844
    9. '```' → logprob: -8.657554626464844
    10. '.dequeue' → logprob: -10.282554626464844

Token 1191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32929521799087524
    2. 'cj' → logprob: -1.4542951583862305
    3. 'i' → logprob: -3.8292951583862305
    4. 'j' → logprob: -4.2042951583862305
    5. ' cj' → logprob: -5.5792951583862305
    6. 'current' → logprob: -6.2042951583862305
    7. ' i' → logprob: -6.4542951583862305
    8. 'c' → logprob: -6.8292951583862305
    9. ' current' → logprob: -7.2042951583862305
    10. 'cur' → logprob: -8.32929515838623

Token 1192: ' cj' (ID: 184717)
  Prédit: 'cj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cj' (adapté à ' cj') → logprob: -0.21110588312149048
    2. 'j' → logprob: -1.7111058235168457
    3. 'i' → logprob: -5.586105823516846
    4. '   ' → logprob: -6.086105823516846
    5. 'cur' → logprob: -6.211105823516846
    6. 'current' → logprob: -7.086105823516846
    7. 'curr' → logprob: -8.086106300354004
    8. ' cj' → logprob: -8.211106300354004
    9. 'ci' → logprob: -9.086106300354004
    10. 'c' → logprob: -10.211106300354004

Token 1193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014269632287323475
    2. ',j' → logprob: -4.889269828796387
    3. ',c' → logprob: -5.139269828796387
    4. ' ,' → logprob: -7.514269828796387
    5. '=' → logprob: -9.264269828796387
    6. '_,' → logprob: -9.514269828796387
    7. ',next' → logprob: -10.764269828796387
    8. '   ' → logprob: -11.389269828796387
    9. ' =' → logprob: -11.889269828796387
    10. ',k' → logprob: -12.139269828796387

Token 1194: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -4.842555426876061e-06
    2. ' cy' → logprob: -12.250004768371582
    3. '   ' → logprob: -19.8750057220459
    4. '
' → logprob: -21.7500057220459
    5. '.cy' → logprob: -22.2500057220459
    6. ' ' → logprob: -22.7500057220459
    7. 'cyj' → logprob: -23.0000057220459
    8. 'cs' → logprob: -23.2500057220459
    9. 'ck' → logprob: -23.3750057220459
    10. 'cx' → logprob: -23.6250057220459

Token 1195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25201091170310974
    2. '=' → logprob: -1.5020109415054321
    3. '   ' → logprob: -9.5020112991333
    4. ')' → logprob: -12.8770112991333
    5. ' ' → logprob: -13.3770112991333
    6. ')=' → logprob: -13.5020112991333
    7. '    ' → logprob: -14.8770112991333
    8. ',' → logprob: -14.8770112991333
    9. '＝' → logprob: -15.1270112991333
    10. '=c' → logprob: -15.3770112991333

Token 1196: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.0024762547109276056
    2. ' queue' → logprob: -6.002476215362549
    3. '	queue' → logprob: -14.502476692199707
    4. '   ' → logprob: -16.87747573852539
    5. '
' → logprob: -17.00247573852539
    6. 'que' → logprob: -18.25247573852539
    7. '(queue' → logprob: -18.50247573852539
    8. '.queue' → logprob: -18.50247573852539
    9. ' ' → logprob: -20.00247573852539
    10. 'deque' → logprob: -20.25247573852539

Token 1197: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.10721492767333984
    2. '.pop' → logprob: -2.73221492767334
    3. '=' → logprob: -3.48221492767334
    4. ' =' → logprob: -5.23221492767334
    5. '.' → logprob: -8.23221492767334
    6. '   ' → logprob: -9.23221492767334
    7. '.append' → logprob: -9.98221492767334
    8. ' .' → logprob: -10.35721492767334
    9. '.dequeue' → logprob: -11.10721492767334
    10. '=p' → logprob: -11.60721492767334

Token 1198: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -8.876193169271573e-05
    2. 'op' → logprob: -9.375088691711426
    3. 'ople' → logprob: -12.500088691711426
    4. 'opl' → logprob: -16.000089645385742
    5. 'p' → logprob: -17.750089645385742
    6. 'ple' → logprob: -18.375089645385742
    7. 'oplevel' → logprob: -18.875089645385742
    8. 'opt' → logprob: -19.375089645385742
    9. 'opped' → logprob: -19.500089645385742
    10. '```' → logprob: -19.500089645385742

Token 1199: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02734874002635479
    2. '    
' → logprob: -3.652348756790161
    3. '   
' → logprob: -7.652348518371582
    4. '
' → logprob: -8.652348518371582
    5. ',' → logprob: -9.152348518371582
    6. '  
' → logprob: -9.277348518371582
    7. '<|end|>' → logprob: -9.652348518371582
    8. ')' → logprob: -10.777348518371582
    9. '        
' → logprob: -11.152348518371582
    10. ' 
' → logprob: -11.402348518371582

Token 1200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2144801765680313
    2. 'for' → logprob: -1.7144801616668701
    3. ' for' → logprob: -5.214480400085449
    4. 'next' → logprob: -5.214480400085449
    5. 'states' → logprob: -6.464480400085449
    6. '```' → logprob: -9.08948040008545
    7. ' next' → logprob: -9.21448040008545
    8. 'ns' → logprob: -9.58948040008545
    9. ' states' → logprob: -10.33948040008545
    10. '	for' → logprob: -10.33948040008545

Token 1201: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0012595182051882148
    2. 'next' → logprob: -6.7512593269348145
    3. '   ' → logprob: -10.126259803771973
    4. 'states' → logprob: -10.501259803771973
    5. ' for' → logprob: -11.626259803771973
    6. 'ns' → logprob: -11.751259803771973
    7. 'n' → logprob: -13.626259803771973
    8. '	for' → logprob: -13.751259803771973
    9. 'nst' → logprob: -14.376259803771973
    10. 'if' → logprob: -14.626259803771973

Token 1202: ' nj' (ID: 8979)
  Prédit: 'nj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -0.06866231560707092
    2. 'next' → logprob: -2.943662405014038
    3. 'state' → logprob: -5.193662166595459
    4. ' nj' → logprob: -6.068662166595459
    5. 'ns' → logprob: -6.443662166595459
    6. 'n' → logprob: -6.943662166595459
    7. '*' → logprob: -7.318662166595459
    8. 'nx' → logprob: -7.568662166595459
    9. '(next' → logprob: -7.818662166595459
    10. '(n' → logprob: -8.068662643432617

Token 1203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013524403038900346
    2. ',j' → logprob: -9.37513542175293
    3. ',n' → logprob: -10.37513542175293
    4. ' ,' → logprob: -11.12513542175293
    5. ',k' → logprob: -13.25013542175293
    6. ',c' → logprob: -13.50013542175293
    7. '_,' → logprob: -14.75013542175293
    8. 'j' → logprob: -15.00013542175293
    9. ',y' → logprob: -15.25013542175293
    10. 'c' → logprob: -16.37513542175293

Token 1204: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.023277975618839264
    2. ' ny' → logprob: -3.773277997970581
    3. 'n' → logprob: -11.02327823638916
    4. 'nk' → logprob: -12.14827823638916
    5. 'nyt' → logprob: -13.27327823638916
    6. '   ' → logprob: -13.52327823638916
    7. 'nyi' → logprob: -13.77327823638916
    8. 'nx' → logprob: -13.77327823638916
    9. ' n' → logprob: -14.02327823638916
    10. ''ny' → logprob: -14.39827823638916

Token 1205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5816144943237305
    2. ' in' → logprob: -0.8316144943237305
    3. 'in' → logprob: -5.7066144943237305
    4. ' ,' → logprob: -6.2066144943237305
    5. ')' → logprob: -8.83161449432373
    6. ',n' → logprob: -9.45661449432373
    7. '   ' → logprob: -10.08161449432373
    8. ',state' → logprob: -11.83161449432373
    9. ',next' → logprob: -11.83161449432373
    10. '    ' → logprob: -11.95661449432373

Token 1206: ' c' (ID: 274)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9164230823516846
    2. 's' → logprob: -1.2914230823516846
    3. 'c' → logprob: -2.1664230823516846
    4. 'pt' → logprob: -3.4164230823516846
    5. 'point' → logprob: -3.5414230823516846
    6. 'sc' → logprob: -3.5414230823516846
    7. 'player' → logprob: -3.5414230823516846
    8. 'winner' → logprob: -4.1664228439331055
    9. 'ch' → logprob: -4.4164228439331055
    10. 'score' → logprob: -4.4164228439331055

Token 1207: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013378916308283806
    2. 'in' → logprob: -5.263379096984863
    3. ' ' → logprob: -5.638379096984863
    4. '_' → logprob: -6.013379096984863
    5. ',' → logprob: -7.888379096984863
    6. '  ' → logprob: -8.138379096984863
    7. 'n' → logprob: -8.513379096984863
    8. 'c' → logprob: -8.513379096984863
    9. '_in' → logprob: -8.513379096984863
    10. ' _' → logprob: -9.138379096984863

Token 1208: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.4740784466266632
    2. ' next' → logprob: -0.9740784168243408
    3. '(next' → logprob: -13.849078178405762
    4. ' in' → logprob: -15.474078178405762
    5. '[next' → logprob: -15.974078178405762
    6. '	next' → logprob: -16.724079132080078
    7. 'in' → logprob: -17.099079132080078
    8. '_next' → logprob: -18.099079132080078
    9. ' states' → logprob: -18.599079132080078
    10. '.next' → logprob: -19.224079132080078

Token 1209: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.10129613429307938
    2. '_' → logprob: -2.3512961864471436
    3. '_state' → logprob: -7.9762959480285645
    4. '_,' → logprob: -8.351296424865723
    5. '(j' → logprob: -8.851296424865723
    6. ')' → logprob: -10.226296424865723
    7. '(c' → logprob: -10.226296424865723
    8. '(' → logprob: -10.226296424865723
    9. '_scores' → logprob: -10.226296424865723
    10. '_j' → logprob: -10.476296424865723

Token 1210: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00011808603449026123
    2. '(j' → logprob: -9.250118255615234
    3. '(' → logprob: -11.375118255615234
    4. ' (' → logprob: -11.500118255615234
    5. 'cj' → logprob: -16.375118255615234
    6. '(ci' → logprob: -17.125118255615234
    7. '(
' → logprob: -17.500118255615234
    8. '(C' → logprob: -17.500118255615234
    9. '=c' → logprob: -17.625118255615234
    10. ')c' → logprob: -17.875118255615234

Token 1211: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0012980925384908915
    2. ',j' → logprob: -7.626297950744629
    3. ',' → logprob: -7.751297950744629
    4. 'cj' → logprob: -8.126297950744629
    5. '(j' → logprob: -10.251297950744629
    6. ')' → logprob: -10.876297950744629
    7. 'nj' → logprob: -12.251297950744629
    8. ',c' → logprob: -12.251297950744629
    9. '(c' → logprob: -12.751297950744629
    10. ' j' → logprob: -12.876297950744629

Token 1212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00032962486147880554
    2. ' ,' → logprob: -8.125329971313477
    3. ',y' → logprob: -10.625329971313477
    4. ',n' → logprob: -11.875329971313477
    5. ',c' → logprob: -14.375329971313477
    6. '‌,' → logprob: -14.750329971313477
    7. '   ' → logprob: -15.125329971313477
    8. ',j' → logprob: -15.250329971313477
    9. ',
' → logprob: -15.875329971313477
    10. ',next' → logprob: -16.375329971313477

Token 1213: ' cy' (ID: 5504)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.12766525149345398
    2. 'cy' → logprob: -2.3776652812957764
    3. ' ny' → logprob: -3.6276652812957764
    4. ' cy' → logprob: -8.002665519714355
    5. ' ' → logprob: -10.002665519714355
    6. '   ' → logprob: -10.252665519714355
    7. 'ky' → logprob: -10.377665519714355
    8. 'y' → logprob: -11.002665519714355
    9. 'py' → logprob: -11.752665519714355
    10. '  ' → logprob: -12.002665519714355

Token 1214: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5759730339050293
    2. '):
' → logprob: -0.8259730339050293
    3. '   ' → logprob: -11.075973510742188
    4. '):
' → logprob: -11.700973510742188
    5. ')' → logprob: -13.075973510742188
    6. '():
' → logprob: -13.325973510742188
    7. ':' → logprob: -13.700973510742188
    8. ' ):' → logprob: -13.825973510742188
    9. '()):
' → logprob: -14.200973510742188
    10. '):

' → logprob: -14.325973510742188

Token 1215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014461874961853027
    2. ' if' → logprob: -7.25144624710083
    3. 'if' → logprob: -8.126445770263672
    4. 'prev' → logprob: -8.251445770263672
    5. '   ' → logprob: -9.251445770263672
    6. ' prev' → logprob: -9.626445770263672
    7. '           ' → logprob: -11.626445770263672
    8. '	prev' → logprob: -12.626445770263672
    9. '```' → logprob: -13.001445770263672
    10. ' key' → logprob: -13.126445770263672

Token 1216: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1945856213569641
    2. 'prev' → logprob: -1.9445855617523193
    3. 'key' → logprob: -4.194585800170898
    4. ' if' → logprob: -4.194585800170898
    5. ' key' → logprob: -6.194585800170898
    6. ' prev' → logprob: -7.194585800170898
    7. '       ' → logprob: -7.444585800170898
    8. '           ' → logprob: -9.069585800170898
    9. '   ' → logprob: -9.319585800170898
    10. 'state' → logprob: -10.694585800170898

Token 1217: ' nj' (ID: 8979)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.008336314000189304
    2. '(' → logprob: -6.133336544036865
    3. '(not' → logprob: -6.258336544036865
    4. 'not' → logprob: -6.383336544036865
    5. ' (' → logprob: -6.508336544036865
    6. '(c' → logprob: -7.508336544036865
    7. ' not' → logprob: -8.258336067199707
    8. 'nj' → logprob: -9.383336067199707
    9. '(j' → logprob: -9.508336067199707
    10. '0' → logprob: -10.383336067199707

Token 1218: ' >' (ID: 1424)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0725066140294075
    2. ' not' → logprob: -2.9475066661834717
    3. ' ,' → logprob: -5.197506427764893
    4. ',n' → logprob: -5.197506427764893
    5. ' <=' → logprob: -6.072506427764893
    6. ' <' → logprob: -6.447506427764893
    7. ',j' → logprob: -6.947506427764893
    8. '<=' → logprob: -7.572506427764893
    9. '<' → logprob: -8.07250690460205
    10. ',k' → logprob: -9.19750690460205

Token 1219: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.4591293931007385
    2. 'max' → logprob: -1.0841293334960938
    3. '7' → logprob: -3.5841293334960938
    4. ' max' → logprob: -6.584129333496094
    5. ' ' → logprob: -7.334129333496094
    6. 'j' → logprob: -9.709129333496094
    7. '=max' → logprob: -9.834129333496094
    8. '=' → logprob: -10.334129333496094
    9. '   ' → logprob: -11.209129333496094
    10. '	max' → logprob: -12.459129333496094

Token 1220: '6' (ID: 21)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.010571273043751717
    2. '7' → logprob: -4.760571479797363
    3. '6' → logprob: -6.260571479797363
    4. ' max' → logprob: -10.260571479797363
    5. 'j' → logprob: -12.385571479797363
    6. '=max' → logprob: -13.135571479797363
    7. '	max' → logprob: -14.010571479797363
    8. ' ' → logprob: -14.635571479797363
    9. '(max' → logprob: -15.010571479797363
    10. '   ' → logprob: -15.385571479797363

Token 1221: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.014279971830546856
    2. 'or' → logprob: -4.889279842376709
    3. ' and' → logprob: -5.139279842376709
    4. 'and' → logprob: -7.389279842376709
    5. '       ' → logprob: -9.389280319213867
    6. ',' → logprob: -10.389280319213867
    7. '	or' → logprob: -10.514280319213867
    8. '   ' → logprob: -11.889280319213867
    9. '           ' → logprob: -11.889280319213867
    10. ' ' → logprob: -12.264280319213867

Token 1222: ' ny' (ID: 4423)
  Prédit: ' ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ny' → logprob: -0.5759482979774475
    2. 'ny' → logprob: -0.8259482979774475
    3. ' ' → logprob: -12.825948715209961
    4. '   ' → logprob: -13.575948715209961
    5. 'n' → logprob: -13.950948715209961
    6. 'nyt' → logprob: -13.950948715209961
    7. '
' → logprob: -14.575948715209961
    8. ' ' → logprob: -15.575948715209961
    9. 'NY' → logprob: -15.700948715209961
    10. '       ' → logprob: -15.825948715209961

Token 1223: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.22545848786830902
    2. '>' → logprob: -1.6004585027694702
    3. ' ' → logprob: -10.850458145141602
    4. '[' → logprob: -11.350458145141602
    5. ' >
' → logprob: -13.225458145141602
    6. ')' → logprob: -13.225458145141602
    7. '<|end|>' → logprob: -13.225458145141602
    8. '   ' → logprob: -13.475458145141602
    9. ')>' → logprob: -13.850458145141602
    10. '6' → logprob: -13.975458145141602

Token 1224: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.006720347795635462
    2. ' ' → logprob: -5.006720542907715
    3. '7' → logprob: -12.506720542907715
    4. '   ' → logprob: -14.006720542907715
    5. '  ' → logprob: -15.944220542907715
    6. '۶' → logprob: -16.5692195892334
    7. '```' → logprob: -16.6942195892334
    8. '     ' → logprob: -16.9442195892334
    9. '<|end|>' → logprob: -17.4442195892334
    10. '    ' → logprob: -17.7567195892334

Token 1225: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -2.045823566731997e-05
    2. '7' → logprob: -11.500020027160645
    3. ' ' → logprob: -11.500020027160645
    4. '۶' → logprob: -16.81252098083496
    5. '٦' → logprob: -17.56252098083496
    6. '६' → logprob: -18.00002098083496
    7. '' → logprob: -18.06252098083496
    8. '６' → logprob: -18.31252098083496
    9. '৬' → logprob: -18.37502098083496
    10. '   ' → logprob: -18.56252098083496

Token 1226: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5631185173988342
    2. ':' → logprob: -1.4381184577941895
    3. ':
' → logprob: -1.9381184577941895
    4. ' or' → logprob: -3.0631184577941895
    5. '   ' → logprob: -7.0631184577941895
    6. '       ' → logprob: -7.5631184577941895
    7. ' continue' → logprob: -8.063118934631348
    8. '	continue' → logprob: -8.438118934631348
    9. '		' → logprob: -8.938118934631348
    10. ':
' → logprob: -9.938118934631348

Token 1227: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2093406617641449
    2. ' continue' → logprob: -1.7093406915664673
    3. 'continue' → logprob: -5.459340572357178
    4. ' or' → logprob: -6.334340572357178
    5. '	continue' → logprob: -7.334340572357178
    6. ':' → logprob: -7.709340572357178
    7. ':
' → logprob: -7.709340572357178
    8. ' continues' → logprob: -8.834341049194336
    9. '               ' → logprob: -10.209341049194336
    10. ' and' → logprob: -10.334341049194336

Token 1228: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0229928493499756
    2. ' continue' → logprob: -1.0229928493499756
    3. 'continue' (adapté à ' continue') → logprob: -1.2729928493499756
    4. '	continue' → logprob: -7.272993087768555
    5. '               ' → logprob: -9.022993087768555
    6. '       ' → logprob: -9.522993087768555
    7. '   ' → logprob: -9.772993087768555
    8. '```' → logprob: -11.397993087768555
    9. ' ' → logprob: -12.647993087768555
    10. '		' → logprob: -12.647993087768555

Token 1229: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016265720478259027
    2. '
' → logprob: -9.750163078308105
    3. ' if' → logprob: -9.875163078308105
    4. '	' → logprob: -10.500163078308105
    5. '        
' → logprob: -11.750163078308105
    6. '	if' → logprob: -12.375163078308105
    7. 'if' → logprob: -12.625163078308105
    8. '           ' → logprob: -13.000163078308105
    9. '   ' → logprob: -13.750163078308105
    10. '<|end|>' → logprob: -13.875163078308105

Token 1230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004248355980962515
    2. '           ' → logprob: -9.0004243850708
    3. '        
' → logprob: -9.3754243850708
    4. '```' → logprob: -9.3754243850708
    5. ' if' → logprob: -9.8754243850708
    6. '               ' → logprob: -10.6254243850708
    7. '	' → logprob: -10.8754243850708
    8. '
' → logprob: -11.7504243850708
    9. 'if' → logprob: -12.0004243850708
    10. ' ' → logprob: -12.3754243850708

Token 1231: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.17048844695091248
    2. 'prev' → logprob: -2.4204883575439453
    3. '       ' → logprob: -2.7954883575439453
    4. 'key' → logprob: -5.170488357543945
    5. ' if' → logprob: -7.170488357543945
    6. '   ' → logprob: -8.920488357543945
    7. 'state' → logprob: -9.795488357543945
    8. '           ' → logprob: -10.295488357543945
    9. ' prev' → logprob: -10.545488357543945
    10. ' key' → logprob: -10.795488357543945

Token 1232: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.022400813177227974
    2. ' (' → logprob: -4.022400856018066
    3. '(not' → logprob: -5.522400856018066
    4. '   ' → logprob: -8.772400856018066
    5. '       ' → logprob: -10.147400856018066
    6. '(next' → logprob: -10.647400856018066
    7. '(prev' → logprob: -12.147400856018066
    8. '(j' → logprob: -12.522400856018066
    9. ' ' → logprob: -12.647400856018066
    10. '(nx' → logprob: -12.647400856018066

Token 1233: 'nj' (ID: 30318)
  Prédit: 'nj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -3.249780638725497e-05
    2. ' nj' → logprob: -11.000032424926758
    3. '   ' → logprob: -11.875032424926758
    4. 'n' → logprob: -12.625032424926758
    5. 'nij' → logprob: -13.375032424926758
    6. '(n' → logprob: -14.125032424926758
    7. 'cj' → logprob: -14.500032424926758
    8. '       ' → logprob: -14.500032424926758
    9. '           ' → logprob: -15.000032424926758
    10. 'nje' → logprob: -15.500032424926758

Token 1234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.280175097752362e-05
    2. ' ,' → logprob: -9.625082969665527
    3. ',n' → logprob: -11.250082969665527
    4. ',
' → logprob: -13.875082969665527
    5. ',y' → logprob: -14.125082969665527
    6. 'ny' → logprob: -14.375082969665527
    7. '
' → logprob: -15.125082969665527
    8. '   ' → logprob: -15.125082969665527
    9. ' ny' → logprob: -15.875082969665527
    10. 'n' → logprob: -16.00008201599121

Token 1235: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.00862131267786026
    2. ' ny' → logprob: -4.7586212158203125
    3. '
' → logprob: -13.383621215820312
    4. 'n' → logprob: -13.383621215820312
    5. 'nyt' → logprob: -14.258621215820312
    6. '   ' → logprob: -14.383621215820312
    7. 'nyi' → logprob: -15.258621215820312
    8. ' ' → logprob: -15.383621215820312
    9. 'Ny' → logprob: -15.508621215820312
    10. 'nj' → logprob: -15.508621215820312

Token 1236: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022739621344953775
    2. ' )' → logprob: -7.002274036407471
    3. ' not' → logprob: -7.252274036407471
    4. 'not' → logprob: -7.377274036407471
    5. ',)' → logprob: -12.002273559570312
    6. '   ' → logprob: -12.127273559570312
    7. ')==' → logprob: -12.252273559570312
    8. 'in' → logprob: -12.877273559570312
    9. '）' → logprob: -12.877273559570312
    10. ']' → logprob: -13.877273559570312

Token 1237: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.10135506093502045
    2. 'not' → logprob: -2.3513550758361816
    3. 'in' → logprob: -7.476355075836182
    4. ' in' → logprob: -7.476355075836182
    5. ')' → logprob: -11.476354598999023
    6. '	not' → logprob: -12.351354598999023
    7. '==' → logprob: -16.351354598999023
    8. '_not' → logprob: -16.476354598999023
    9. ']' → logprob: -16.601354598999023
    10. '   ' → logprob: -17.226354598999023

Token 1238: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5231382846832275
    2. ' in' → logprob: -0.8981382846832275
    3. ' not' → logprob: -12.148138046264648
    4. 'visited' → logprob: -13.148138046264648
    5. 'not' → logprob: -13.273138046264648
    6. ' ' → logprob: -13.648138046264648
    7. '<|end|>' → logprob: -13.648138046264648
    8. '   ' → logprob: -14.523138046264648
    9. '        
' → logprob: -15.273138046264648
    10. '       ' → logprob: -15.273138046264648

Token 1239: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0015048631466925144
    2. ' visited' → logprob: -6.501504898071289
    3. 'prev' → logprob: -13.251504898071289
    4. '
' → logprob: -14.376504898071289
    5. 'queue' → logprob: -16.00150489807129
    6. '   ' → logprob: -17.87650489807129
    7. 'seen' → logprob: -18.62650489807129
    8. ' prev' → logprob: -19.37650489807129
    9. '
' → logprob: -19.50150489807129
    10. 'queued' → logprob: -19.62650489807129

Token 1240: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5542426109313965
    2. ':' → logprob: -1.1792426109313965
    3. '           ' → logprob: -2.1792426109313965
    4. '<|end|>' → logprob: -6.9292426109313965
    5. '):
' → logprob: -7.1792426109313965
    6. '       ' → logprob: -7.1792426109313965
    7. ' and' → logprob: -7.5542426109313965
    8. ',' → logprob: -7.8042426109313965
    9. '<|end|>' → logprob: -8.554243087768555
    10. '=' → logprob: -8.679243087768555

Token 1241: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00261703971773386
    2. '```' → logprob: -6.627616882324219
    3. '	       ' → logprob: -7.252616882324219
    4. '       ' → logprob: -9.252616882324219
    5. ' continue' → logprob: -9.377616882324219
    6. 'visited' → logprob: -9.377616882324219
    7. 'continue' → logprob: -9.752616882324219
    8. '               ' → logprob: -9.877616882324219
    9. ' visited' → logprob: -9.877616882324219
    10. '		' → logprob: -10.127616882324219

Token 1242: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.057585615664720535
    2. 'queue' → logprob: -3.0575857162475586
    3. '           ' → logprob: -4.807585716247559
    4. '   ' → logprob: -8.182585716247559
    5. ' visited' → logprob: -8.432585716247559
    6. '       ' → logprob: -8.557585716247559
    7. ' queue' → logprob: -9.432585716247559
    8. '               ' → logprob: -11.807585716247559
    9. 'prev' → logprob: -12.307585716247559
    10. ' ' → logprob: -12.682585716247559

Token 1243: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -1.3425219549390022e-05
    2. '.' → logprob: -12.00001335144043
    3. ' .' → logprob: -12.62501335144043
    4. 'add' → logprob: -12.75001335144043
    5. '           ' → logprob: -14.37501335144043
    6. ' add' → logprob: -15.37501335144043
    7. '.Add' → logprob: -16.62501335144043
    8. ')add' → logprob: -17.37501335144043
    9. '   ' → logprob: -17.50001335144043
    10. ' =' → logprob: -17.62501335144043

Token 1244: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -7.73183855926618e-05
    2. '(' → logprob: -9.500077247619629
    3. ' ((' → logprob: -13.375077247619629
    4. '(((' → logprob: -14.500077247619629
    5. '(
' → logprob: -16.000078201293945
    6. '({' → logprob: -16.375078201293945
    7. '(n' → logprob: -16.500078201293945
    8. '(({' → logprob: -17.375078201293945
    9. '([(' → logprob: -17.625078201293945
    10. '(('' → logprob: -18.500078201293945

Token 1245: 'nj' (ID: 30318)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00034237600630149245
    2. ' (' → logprob: -8.00034236907959
    3. '   ' → logprob: -12.87534236907959
    4. '(' → logprob: -13.12534236907959
    5. '(j' → logprob: -14.37534236907959
    6. '(N' → logprob: -14.87534236907959
    7. 'nj' → logprob: -14.87534236907959
    8. ' nj' → logprob: -15.50034236907959
    9. ' ' → logprob: -15.62534236907959
    10. '((' → logprob: -15.75034236907959

Token 1246: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4742491543292999
    2. ',' → logprob: -1.0992491245269775
    3. ',j' → logprob: -4.349249362945557
    4. ',n' → logprob: -4.474249362945557
    5. '(' → logprob: -4.849249362945557
    6. ' (' → logprob: -4.974249362945557
    7. ')' → logprob: -6.349249362945557
    8. '(j' → logprob: -6.724249362945557
    9. '           ' → logprob: -7.224249362945557
    10. ',(' → logprob: -7.474249362945557

Token 1247: ' ny' (ID: 4423)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002846483374014497
    2. ' (' → logprob: -6.502846717834473
    3. '(' → logprob: -6.627846717834473
    4. 'nj' → logprob: -12.127846717834473
    5. '   ' → logprob: -12.502846717834473
    6. '(nx' → logprob: -12.752846717834473
    7. 'ny' → logprob: -13.002846717834473
    8. '
' → logprob: -13.377846717834473
    9. ' ' → logprob: -14.252846717834473
    10. '(N' → logprob: -14.502846717834473

Token 1248: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.627020001411438
    2. ')
' → logprob: -0.877020001411438
    3. '           ' → logprob: -3.0020198822021484
    4. '       ' → logprob: -10.127019882202148
    5. ')
' → logprob: -10.502019882202148
    6. '               ' → logprob: -10.877019882202148
    7. '          ' → logprob: -12.127019882202148
    8. '                   ' → logprob: -12.877019882202148
    9. ' )
' → logprob: -13.002019882202148
    10. '         ' → logprob: -13.252019882202148

Token 1249: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.081584716506768e-05
    2. 'prev' → logprob: -11.125020980834961
    3. '```' → logprob: -13.375020980834961
    4. '       ' → logprob: -13.750020980834961
    5. '   ' → logprob: -14.250020980834961
    6. ' prev' → logprob: -14.500020980834961
    7. '		' → logprob: -14.500020980834961
    8. 'queue' → logprob: -14.500020980834961
    9. '               ' → logprob: -14.750020980834961
    10. '<|end|>' → logprob: -16.00002098083496

Token 1250: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.011084488593041897
    2. 'prev' → logprob: -4.51108455657959
    3. ' queue' → logprob: -10.88608455657959
    4. '```' → logprob: -11.76108455657959
    5. '           ' → logprob: -12.01108455657959
    6. '       ' → logprob: -12.76108455657959
    7. '   ' → logprob: -14.88608455657959
    8. ' prev' → logprob: -14.88608455657959
    9. '	queue' → logprob: -15.38608455657959
    10. '``' → logprob: -15.38608455657959

Token 1251: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.1472419600977446e-06
    2. '.' → logprob: -14.250000953674316
    3. '.enqueue' → logprob: -15.625000953674316
    4. 'append' → logprob: -16.125001907348633
    5. ' .' → logprob: -17.000001907348633
    6. '.extend' → logprob: -17.250001907348633
    7. '.add' → logprob: -17.875001907348633
    8. '.app' → logprob: -18.000001907348633
    9. '.put' → logprob: -18.500001907348633
    10. ').' → logprob: -18.500001907348633

Token 1252: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -3.643152740551159e-05
    2. '(' → logprob: -10.250036239624023
    3. '(n' → logprob: -14.375036239624023
    4. ' ((' → logprob: -15.125036239624023
    5. '(((' → logprob: -17.500036239624023
    6. ' (' → logprob: -17.500036239624023
    7. '(
' → logprob: -17.625036239624023
    8. ' ' → logprob: -20.250036239624023
    9. '(j' → logprob: -21.000036239624023
    10. '[(' → logprob: -21.500036239624023

Token 1253: 'nj' (ID: 30318)
  Prédit: 'nj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -0.08916062861680984
    2. '(n' → logprob: -2.464160680770874
    3. ' nj' → logprob: -8.839160919189453
    4. '(j' → logprob: -10.464160919189453
    5. ' (' → logprob: -11.214160919189453
    6. 'n' → logprob: -11.839160919189453
    7. '   ' → logprob: -12.214160919189453
    8. '(' → logprob: -12.339160919189453
    9. ')' → logprob: -12.464160919189453
    10. 'nij' → logprob: -13.589160919189453

Token 1254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1637260764837265
    2. ',n' → logprob: -1.9137260913848877
    3. ',j' → logprob: -5.913725852966309
    4. ',y' → logprob: -8.038725852966309
    5. ' ,' → logprob: -8.538725852966309
    6. '(n' → logprob: -8.913725852966309
    7. ',k' → logprob: -9.663725852966309
    8. ',c' → logprob: -11.163725852966309
    9. ')' → logprob: -11.413725852966309
    10. '       ' → logprob: -11.913725852966309

Token 1255: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.2552946209907532
    2. 'nj' → logprob: -2.1302945613861084
    3. '(n' → logprob: -2.2552945613861084
    4. '(c' → logprob: -7.2552947998046875
    5. '(' → logprob: -8.630294799804688
    6. ' ny' → logprob: -8.755294799804688
    7. 'n' → logprob: -9.005294799804688
    8. ' nj' → logprob: -9.130294799804688
    9. 'c' → logprob: -9.255294799804688
    10. 'cy' → logprob: -9.505294799804688

Token 1256: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.051890257745981216
    2. '       ' → logprob: -3.4268903732299805
    3. ')
' → logprob: -4.0518903732299805
    4. '           ' → logprob: -7.4268903732299805
    5. ')
' → logprob: -10.42689037322998
    6. '()' → logprob: -10.80189037322998
    7. '   ' → logprob: -11.30189037322998
    8. '))' → logprob: -11.67689037322998
    9. ')`
' → logprob: -12.30189037322998
    10. ')`' → logprob: -12.55189037322998

Token 1257: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015390269691124558
    2. 'prev' → logprob: -7.00153923034668
    3. '           ' → logprob: -7.37653923034668
    4. '   ' → logprob: -14.37653923034668
    5. ' prev' → logprob: -15.00153923034668
    6. '	prev' → logprob: -15.62653923034668
    7. '(prev' → logprob: -15.75153923034668
    8. '```' → logprob: -15.87653923034668
    9. '
' → logprob: -16.12653923034668
    10. '_prev' → logprob: -17.37653923034668

Token 1258: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -0.00016635251813568175
    2. '       ' → logprob: -8.750165939331055
    3. 'if' → logprob: -12.250165939331055
    4. ' prev' → logprob: -12.750165939331055
    5. '	prev' → logprob: -16.125165939331055
    6. '   ' → logprob: -17.750165939331055
    7. '           ' → logprob: -18.625165939331055
    8. '(prev' → logprob: -18.875165939331055
    9. '.prev' → logprob: -19.250165939331055
    10. '_prev' → logprob: -19.625165939331055

Token 1259: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.875
    3. '.setdefault' → logprob: -16.375
    4. '[n' → logprob: -17.625
    5. '[((' → logprob: -18.5
    6. '   ' → logprob: -19.125
    7. ' [(' → logprob: -19.125
    8. '[[' → logprob: -19.75
    9. '
' → logprob: -20.0
    10. '```' → logprob: -20.125

Token 1260: 'nj' (ID: 30318)
  Prédit: 'nj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -2.5107177862082608e-05
    2. '(n' → logprob: -10.750024795532227
    3. ' nj' → logprob: -12.625024795532227
    4. '(' → logprob: -15.875024795532227
    5. 'n' → logprob: -16.125024795532227
    6. 'nij' → logprob: -17.375024795532227
    7. '   ' → logprob: -17.500024795532227
    8. '
' → logprob: -18.250024795532227
    9. '[n' → logprob: -18.500024795532227
    10. ',n' → logprob: -19.000024795532227

Token 1261: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007831838447600603
    2. ',c' → logprob: -7.2507829666137695
    3. ',j' → logprob: -10.25078296661377
    4. ' ,' → logprob: -10.50078296661377
    5. ',y' → logprob: -12.75078296661377
    6. ',n' → logprob: -13.37578296661377
    7. '(c' → logprob: -13.50078296661377
    8. ',k' → logprob: -13.50078296661377
    9. 'cy' → logprob: -13.62578296661377
    10. 'j' → logprob: -15.00078296661377

Token 1262: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -1.9146995327901095e-05
    2. ' ny' → logprob: -10.875019073486328
    3. 'n' → logprob: -17.375019073486328
    4. 'nyt' → logprob: -17.875019073486328
    5. 'nyi' → logprob: -18.000019073486328
    6. '
' → logprob: -18.125019073486328
    7. '   ' → logprob: -18.250019073486328
    8. 'nym' → logprob: -18.875019073486328
    9. '(' → logprob: -19.125019073486328
    10. ' ' → logprob: -19.250019073486328

Token 1263: ')].' (ID: 58800)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0013577328063547611
    2. ')].' → logprob: -7.001357555389404
    3. ').' → logprob: -7.751357555389404
    4. '.append' → logprob: -11.626358032226562
    5. ' ].' → logprob: -12.876358032226562
    6. ']].' → logprob: -13.376358032226562
    7. ']' → logprob: -13.501358032226562
    8. ']).' → logprob: -13.751358032226562
    9. 'append' → logprob: -15.501358032226562
    10. '   ' → logprob: -16.126358032226562

Token 1264: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.512236498361744e-07
    2. '.append' → logprob: -14.500000953674316
    3. ' append' → logprob: -18.25
    4. 'appen' → logprob: -19.25
    5. 'app' → logprob: -19.625
    6. '	append' → logprob: -20.0
    7. '_append' → logprob: -20.875
    8. 'Append' → logprob: -21.25
    9. 'add' → logprob: -23.125
    10. 'ap' → logprob: -24.625

Token 1265: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.0206720617134124e-05
    2. '(' → logprob: -11.50001049041748
    3. ' ((' → logprob: -17.750009536743164
    4. '(((' → logprob: -17.875009536743164
    5. '[(' → logprob: -20.500009536743164
    6. ' (' → logprob: -22.750009536743164
    7. '   ' → logprob: -23.000009536743164
    8. ' ' → logprob: -23.750009536743164
    9. '(
' → logprob: -24.125009536743164
    10. '`' → logprob: -24.375009536743164

Token 1266: 'cj' (ID: 173094)
  Prédit: 'cj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cj' → logprob: -0.0014372545992955565
    2. ' cj' → logprob: -6.751437187194824
    3. '(c' → logprob: -8.251437187194824
    4. '   ' → logprob: -13.126437187194824
    5. ' (' → logprob: -13.501437187194824
    6. 'c' → logprob: -13.751437187194824
    7. 'cq' → logprob: -14.251437187194824
    8. ',c' → logprob: -15.876437187194824
    9. ' ' → logprob: -16.12643814086914
    10. '[c' → logprob: -16.12643814086914

Token 1267: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010032468708232045
    2. ',n' → logprob: -9.500100135803223
    3. ' ,' → logprob: -10.750100135803223
    4. ',
' → logprob: -14.000100135803223
    5. ',k' → logprob: -14.000100135803223
    6. ',c' → logprob: -14.250100135803223
    7. ',y' → logprob: -14.375100135803223
    8. ',j' → logprob: -14.625100135803223
    9. '‌,' → logprob: -15.750100135803223
    10. ',next' → logprob: -16.25010108947754

Token 1268: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -7.517272024415433e-05
    2. ' cy' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.500075340270996
    4. ' ' → logprob: -18.25007438659668
    5. '       ' → logprob: -19.00007438659668
    6. '  ' → logprob: -19.12507438659668
    7. '     ' → logprob: -19.37507438659668
    8. '
' → logprob: -19.50007438659668
    9. '    ' → logprob: -19.50007438659668
    10. 'cycl' → logprob: -19.62507438659668

Token 1269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0182301327586174
    2. ',c' → logprob: -4.018229961395264
    3. ' ,' → logprob: -9.518230438232422
    4. ',n' → logprob: -13.393230438232422
    5. '),' → logprob: -13.893230438232422
    6. 'c' → logprob: -14.393230438232422
    7. ',t' → logprob: -14.518230438232422
    8. '',' → logprob: -14.893230438232422
    9. ',p' → logprob: -14.893230438232422
    10. '   ' → logprob: -15.018230438232422

Token 1270: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00026169343618676066
    2. ' c' → logprob: -8.250261306762695
    3. ')c' → logprob: -15.125261306762695
    4. '	c' → logprob: -15.875261306762695
    5. '   ' → logprob: -17.250261306762695
    6. ''' → logprob: -18.125261306762695
    7. ')' → logprob: -18.375261306762695
    8. ' ' → logprob: -18.750261306762695
    9. '    ' → logprob: -20.000261306762695
    10. '       ' → logprob: -20.500261306762695

Token 1271: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3132645785808563
    2. '))' → logprob: -1.3132646083831787
    3. ')))' → logprob: -13.313264846801758
    4. ' )' → logprob: -14.688264846801758
    5. ')}' → logprob: -15.063264846801758
    6. '))
' → logprob: -16.063264846801758
    7. '})' → logprob: -16.313264846801758
    8. ')
' → logprob: -16.563264846801758
    9. '])' → logprob: -16.563264846801758
    10. ' ))' → logprob: -16.688264846801758

Token 1272: '#' (ID: 2)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.010609022341668606
    2. 'while' → logprob: -5.635609149932861
    3. 'for' → logprob: -6.135609149932861
    4. 'memo' → logprob: -6.385609149932861
    5. 'if' → logprob: -6.510609149932861
    6. 'paths' → logprob: -6.635609149932861
    7. '```' → logprob: -8.760608673095703
    8. ')' → logprob: -9.760608673095703
    9. 'path' → logprob: -10.260608673095703
    10. ' dfs' → logprob: -10.760608673095703

Token 1273: ' 与' (ID: 179672)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.014885232783854008
    2. 'if' → logprob: -4.264885425567627
    3. 'memo' → logprob: -8.139884948730469
    4. 'for' → logprob: -8.514884948730469
    5. 'paths' → logprob: -8.639884948730469
    6. ' dfs' → logprob: -11.264884948730469
    7. '#' → logprob: -11.389884948730469
    8. 'print' → logprob: -12.014884948730469
    9. 'path' → logprob: -12.764884948730469
    10. 'def' → logprob: -12.889884948730469

Token 1274: 'え' (ID: 18606)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0339587926864624
    2. 'え' → logprob: -1.0339587926864624
    3. '(j' → logprob: -2.783958911895752
    4. 'j' → logprob: -3.158958911895752
    5. 'えて' → logprob: -3.533958911895752
    6. 'input' → logprob: -4.033958911895752
    7. '```' → logprob: -4.033958911895752
    8. '((' → logprob: -4.033958911895752
    9. '果' → logprob: -4.158958911895752
    10. '#' → logprob: -4.283958911895752

Token 1275: 'ら' (ID: 8870)
  Prédit: 'え'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'え' → logprob: -0.000688486616127193
    2. 'e' → logprob: -9.250688552856445
    3. 'j' → logprob: -9.250688552856445
    4. 'ら' → logprob: -9.375688552856445
    5. '```' → logprob: -9.500688552856445
    6. '#' → logprob: -9.750688552856445
    7. 'えて' → logprob: -9.875688552856445
    8. 'える' → logprob: -10.125688552856445
    9. 'a' → logprob: -10.750688552856445
    10. 'f' → logprob: -11.125688552856445

Token 1276: 'れ' (ID: 9472)
  Prédit: 'え'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'え' → logprob: -0.14830507338047028
    2. '=' → logprob: -3.0233051776885986
    3. 'a' → logprob: -3.6483051776885986
    4. 'れ' → logprob: -4.3983049392700195
    5. 'ら' → logprob: -4.3983049392700195
    6. '=(' → logprob: -5.7733049392700195
    7. 'e' → logprob: -5.7733049392700195
    8. 'f' → logprob: -5.8983049392700195
    9. '(
' → logprob: -5.8983049392700195
    10. '```' → logprob: -5.8983049392700195

Token 1277: 'た' (ID: 5598)
  Prédit: 'た'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'た' → logprob: -0.34998515248298645
    2. 'れ' → logprob: -1.349985122680664
    3. 'ら' → logprob: -3.599985122680664
    4. 'a' → logprob: -5.724985122680664
    5. 't' → logprob: -6.474985122680664
    6. 'された' → logprob: -6.974985122680664
    7. 'input' → logprob: -7.224985122680664
    8. 'score' → logprob: -8.599985122680664
    9. 'て' → logprob: -8.974985122680664
    10. 'd' → logprob: -9.099985122680664

Token 1278: '得' (ID: 11789)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.41554132103919983
    2. 'goal' → logprob: -1.5405412912368774
    3. 'ス' → logprob: -3.540541410446167
    4. 'if' → logprob: -3.915541410446167
    5. 'state' → logprob: -3.915541410446167
    6. '状態' → logprob: -4.415541172027588
    7. 'while' → logprob: -5.040541172027588
    8. 'scores' → logprob: -5.290541172027588
    9. 'path' → logprob: -5.540541172027588
    10. 'コード' → logprob: -5.665541172027588

Token 1279: '点' (ID: 8300)
  Prédit: '点'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '点' → logprob: -0.0007566197891719639
    2. 'ら' → logprob: -8.50075626373291
    3. '점' → logprob: -8.75075626373291
    4. 'score' → logprob: -9.00075626373291
    5. '分' → logprob: -9.12575626373291
    6. 'scores' → logprob: -9.50075626373291
    7. 'points' → logprob: -10.25075626373291
    8. '票' → logprob: -11.75075626373291
    9. '```' → logprob: -11.87575626373291
    10. ' points' → logprob: -12.37575626373291

Token 1280: 'が' (ID: 6632)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.112442970275879
    2. 'から' → logprob: -2.112442970275879
    3. ' =' → logprob: -2.237442970275879
    4. 'の' → logprob: -2.487442970275879
    5. 'を' → logprob: -2.612442970275879
    6. ',' → logprob: -3.112442970275879
    7. 'まで' → logprob: -3.487442970275879
    8. 'for' → logprob: -3.737442970275879
    9. 'print' → logprob: -3.987442970275879
    10. 'に' → logprob: -3.987442970275879

Token 1281: '探索' (ID: 191406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24918588995933533
    2. '(j' → logprob: -1.7491859197616577
    3. 'not' → logprob: -3.499185800552368
    4. 'if' → logprob: -5.124186038970947
    5. '(c' → logprob: -5.874186038970947
    6. '(len' → logprob: -6.749186038970947
    7. 'in' → logprob: -6.999186038970947
    8. ' (' → logprob: -7.249186038970947
    9. '((' → logprob: -7.374186038970947
    10. '(not' → logprob: -7.374186038970947

Token 1282: '可能' (ID: 42043)
  Prédit: 'が'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'が' → logprob: -0.8548876643180847
    2. 'の' → logprob: -1.1048877239227295
    3. 'に' → logprob: -2.6048877239227295
    4. 'in' → logprob: -2.8548877239227295
    5. 'if' → logprob: -3.4798877239227295
    6. 'され' → logprob: -3.8548877239227295
    7. 'for' → logprob: -4.35488748550415
    8. 'でき' → logprob: -4.60488748550415
    9. '```' → logprob: -5.47988748550415
    10. 'まで' → logprob: -5.60488748550415

Token 1283: 'か' (ID: 7128)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01378969568759203
    2. 'and' → logprob: -4.388789653778076
    3. '#' → logprob: -7.513789653778076
    4. ' and' → logprob: -8.513790130615234
    5. 'と' → logprob: -8.513790130615234
    6. ' if' → logprob: -8.638790130615234
    7. 'か' → logprob: -9.513790130615234
    8. 'の' → logprob: -11.388790130615234
    9. 'で' → logprob: -11.388790130615234
    10. 'for' → logprob: -11.513790130615234

Token 1284: 'チェック' (ID: 168248)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00034023032640106976
    2. 'dfs' → logprob: -8.625340461730957
    3. '#' → logprob: -9.875340461730957
    4. ' if' → logprob: -10.500340461730957
    5. 'for' → logprob: -10.750340461730957
    6. 'def' → logprob: -10.750340461730957
    7. 'paths' → logprob: -12.000340461730957
    8. 'possible' → logprob: -12.125340461730957
    9. 'memo' → logprob: -12.250340461730957
    10. 'key' → logprob: -12.375340461730957

Token 1285: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00020711649267468601
    2. 'for' → logprob: -9.37520694732666
    3. 'def' → logprob: -10.25020694732666
    4. 'result' → logprob: -11.00020694732666
    5. 'possible' → logprob: -11.00020694732666
    6. 'found' → logprob: -11.12520694732666
    7. 'visited' → logprob: -11.87520694732666
    8. '```' → logprob: -12.50020694732666
    9. 'from' → logprob: -12.62520694732666
    10. 'answer' → logprob: -12.62520694732666

Token 1286: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -9.925185440806672e-05
    2. 'for' → logprob: -10.500099182128906
    3. 'def' → logprob: -10.500099182128906
    4. '```' → logprob: -11.000099182128906
    5. 'dfs' → logprob: -11.125099182128906
    6. 'visited' → logprob: -12.750099182128906
    7. 'paths' → logprob: -13.125099182128906
    8. 'from' → logprob: -13.500099182128906
    9. 'found' → logprob: -13.625099182128906
    10. ' if' → logprob: -13.875099182128906

Token 1287: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.08285213261842728
    2. '(goal' → logprob: -2.8328521251678467
    3. 'not' → logprob: -4.582852363586426
    4. 'goal' → logprob: -4.957852363586426
    5. 'is' → logprob: -6.207852363586426
    6. '(not' → logprob: -7.082852363586426
    7. '(is' → logprob: -9.082852363586426
    8. 'j' → logprob: -9.207852363586426
    9. ' (' → logprob: -9.332852363586426
    10. '(' → logprob: -9.457852363586426

Token 1288: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.36975526809692383
    2. 'goal' → logprob: -1.3697552680969238
    3. '(j' → logprob: -3.744755268096924
    4. '(goal' → logprob: -3.994755268096924
    5. 'not' → logprob: -4.994755268096924
    6. 'is' → logprob: -5.369755268096924
    7. '0' → logprob: -6.869755268096924
    8. '(' → logprob: -9.619754791259766
    9. '(not' → logprob: -9.744754791259766
    10. '(is' → logprob: -10.119754791259766

Token 1289: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5770440697669983
    2. ',y' → logprob: -0.8270440697669983
    3. ',j' → logprob: -7.0770440101623535
    4. ',k' → logprob: -8.452044486999512
    5. ',x' → logprob: -11.327044486999512
    6. ' ,' → logprob: -11.452044486999512
    7. ',n' → logprob: -12.077044486999512
    8. ',c' → logprob: -13.327044486999512
    9. ',v' → logprob: -13.327044486999512
    10. ',i' → logprob: -13.452044486999512

Token 1290: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.184812031686306e-05
    2. 'in' → logprob: -10.750082015991211
    3. 'not' → logprob: -11.000082015991211
    4. ' )' → logprob: -11.375082015991211
    5. ' not' → logprob: -11.375082015991211
    6. '）' → logprob: -11.625082015991211
    7. ' in' → logprob: -12.250082015991211
    8. ')==' → logprob: -12.250082015991211
    9. ',)' → logprob: -14.375082015991211
    10. '))' → logprob: -15.375082015991211

Token 1291: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.10936855524778366
    2. 'not' → logprob: -2.8593685626983643
    3. ' in' → logprob: -3.2343685626983643
    4. 'in' → logprob: -4.984368324279785
    5. '==' → logprob: -9.859368324279785
    6. ')' → logprob: -11.734368324279785
    7. ' ==' → logprob: -12.984368324279785
    8. '	not' → logprob: -13.859368324279785
    9. '```' → logprob: -14.484368324279785
    10. '!=' → logprob: -14.609368324279785

Token 1292: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2814328074455261
    2. ' in' → logprob: -1.406432867050171
    3. ' not' → logprob: -8.78143310546875
    4. 'not' → logprob: -9.53143310546875
    5. 'visited' → logprob: -10.40643310546875
    6. ')' → logprob: -11.03143310546875
    7. '<|end|>' → logprob: -12.78143310546875
    8. ' visited' → logprob: -13.40643310546875
    9. '.' → logprob: -14.28143310546875
    10. ']' → logprob: -14.90643310546875

Token 1293: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.015713833272457123
    2. ' visited' → logprob: -4.390713691711426
    3. 'prev' → logprob: -5.765713691711426
    4. ' prev' → logprob: -9.640713691711426
    5. '   ' → logprob: -15.390713691711426
    6. 'vis' → logprob: -16.015714645385742
    7. 'visit' → logprob: -16.140714645385742
    8. 'seen' → logprob: -16.265714645385742
    9. '	prev' → logprob: -16.390714645385742
    10. '```' → logprob: -16.515714645385742

Token 1294: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1271791309118271
    2. ':
' → logprob: -2.1271791458129883
    3. ':return' → logprob: -9.002179145812988
    4. ' or' → logprob: -10.127179145812988
    5. '):
' → logprob: -10.627179145812988
    6. '):' → logprob: -11.002179145812988
    7. '   ' → logprob: -11.252179145812988
    8. ' and' → logprob: -11.377179145812988
    9. '():
' → logprob: -12.627179145812988
    10. ':
' → logprob: -12.877179145812988

Token 1295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39478224515914917
    2. 'print' → logprob: -1.269782304763794
    3. ' print' → logprob: -3.269782304763794
    4. ':' → logprob: -5.894782066345215
    5. '```' → logprob: -6.769782066345215
    6. ':
' → logprob: -7.269782066345215
    7. '[
' → logprob: -8.144782066345215
    8. '[' → logprob: -8.269782066345215
    9. '[]' → logprob: -8.644782066345215
    10. '<|end|>' → logprob: -8.644782066345215

Token 1296: ' exit' (ID: 10654)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.790129555156454e-05
    2. ' print' → logprob: -9.750067710876465
    3. 'exit' (adapté à ' exit') → logprob: -12.625067710876465
    4. '   ' → logprob: -12.625067710876465
    5. '
' → logprob: -13.125067710876465
    6. 'quit' → logprob: -15.125067710876465
    7. '```' → logprob: -15.250067710876465
    8. 'import' → logprob: -16.25006866455078
    9. '  
' → logprob: -16.37506866455078
    10. '    
' → logprob: -16.62506866455078

Token 1297: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04859213903546333
    2. '(' → logprob: -3.0485920906066895
    3. '()
' → logprob: -12.673592567443848
    4. '()(' → logprob: -15.048592567443848
    5. '()`' → logprob: -15.298592567443848
    6. '())' → logprob: -15.548592567443848
    7. ' ()' → logprob: -15.923592567443848
    8. '()"' → logprob: -16.04859161376953
    9. '()]' → logprob: -16.04859161376953
    10. '（）' → logprob: -16.42359161376953

Token 1298: 'ans' (ID: 616)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.00024192029377445579
    2. 'memo' → logprob: -8.375242233276367
    3. '
' → logprob: -12.625242233276367
    4. 'def' → logprob: -12.625242233276367
    5. '#' → logprob: -13.500242233276367
    6. ' dfs' → logprob: -13.875242233276367
    7. 'for' → logprob: -14.000242233276367
    8. 'paths' → logprob: -14.375242233276367
    9. '```' → logprob: -14.750242233276367
    10. '    
' → logprob: -15.625242233276367

Token 1299: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4642511010169983
    2. ' =' → logprob: -1.4642510414123535
    3. '_paths' → logprob: -2.0892510414123535
    4. '_' → logprob: -5.0892510414123535
    5. '_path' → logprob: -5.3392510414123535
    6. 's' → logprob: -6.0892510414123535
    7. '=[]' → logprob: -6.8392510414123535
    8. '＝' → logprob: -7.2142510414123535
    9. 'paths' → logprob: -8.089251518249512
    10. 'path' → logprob: -8.589251518249512

Token 1300: ' []
' (ID: 8911)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.4072614312171936
    2. '[]' → logprob: -1.5322613716125488
    3. '''' → logprob: -2.157261371612549
    4. '"' → logprob: -7.157261371612549
    5. 'set' → logprob: -7.407261371612549
    6. '[]
' → logprob: -7.407261371612549
    7. ''' → logprob: -7.907261371612549
    8. 'None' → logprob: -8.282261848449707
    9. 'deque' → logprob: -9.157261848449707
    10. '''
' → logprob: -10.782261848449707

Token 1301: 'def' (ID: 1314)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.01824687235057354
    2. 'def' → logprob: -4.018246650695801
    3. 'memo' → logprob: -9.8932466506958
    4. 'for' → logprob: -10.1432466506958
    5. 'stack' → logprob: -13.2682466506958
    6. ' dfs' → logprob: -13.3932466506958
    7. '```' → logprob: -13.5182466506958
    8. '
' → logprob: -14.0182466506958
    9. 'deque' → logprob: -15.0182466506958
    10. 'df' → logprob: -15.2682466506958

Token 1302: ' back' (ID: 1602)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0016814864939078689
    2. 're' → logprob: -6.626681327819824
    3. 'back' → logprob: -9.376681327819824
    4. 'build' → logprob: -9.626681327819824
    5. 'construct' → logprob: -9.626681327819824
    6. 'solve' → logprob: -10.376681327819824
    7. 'print' → logprob: -10.751681327819824
    8. ' dfs' → logprob: -10.751681327819824
    9. 'b' → logprob: -11.251681327819824
    10. 'generate' → logprob: -12.001681327819824

Token 1303: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -0.06208677962422371
    2. 'trace' → logprob: -3.062086820602417
    3. 'tracking' → logprob: -4.437086582183838
    4. 'tr' → logprob: -6.687086582183838
    5. '_track' → logprob: -8.812087059020996
    6. 'tract' → logprob: -9.437087059020996
    7. 'ward' → logprob: -10.687087059020996
    8. '_trace' → logprob: -11.312087059020996
    9. 'tracker' → logprob: -11.312087059020996
    10. 'tracks' → logprob: -11.312087059020996

Token 1304: '(x' (ID: 4061)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.5766540765762329
    2. '(j' → logprob: -0.8266540765762329
    3. '(' → logprob: -7.451653957366943
    4. '(n' → logprob: -10.201654434204102
    5. '(i' → logprob: -10.326654434204102
    6. '(s' → logprob: -10.951654434204102
    7. '(a' → logprob: -11.326654434204102
    8. '(k' → logprob: -12.201654434204102
    9. '(t' → logprob: -12.326654434204102
    10. '(d' → logprob: -12.451654434204102

Token 1305: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3815579116344452
    2. '):' → logprob: -1.2565579414367676
    3. ',j' → logprob: -3.7565579414367676
    4. '(j' → logprob: -5.381557941436768
    5. '):
' → logprob: -5.881557941436768
    6. 'j' → logprob: -7.006557941436768
    7. 'cj' → logprob: -8.00655746459961
    8. ')' → logprob: -9.00655746459961
    9. ' ,' → logprob: -9.13155746459961
    10. ',c' → logprob: -9.25655746459961

Token 1306: ',path' (ID: 188146)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006143859936855733
    2. ',' → logprob: -7.875614166259766
    3. '):
' → logprob: -8.500614166259766
    4. ')' → logprob: -10.750614166259766
    5. '   ' → logprob: -12.500614166259766
    6. ' ):' → logprob: -13.250614166259766
    7. ':' → logprob: -13.500614166259766
    8. ')：' → logprob: -14.125614166259766
    9. '）：' → logprob: -15.000614166259766
    10. '}:' → logprob: -15.125614166259766

Token 1307: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00016325322212651372
    2. '):
' → logprob: -8.750163078308105
    3. '   ' → logprob: -13.250163078308105
    4. ')' → logprob: -14.000163078308105
    5. '):
' → logprob: -14.625163078308105
    6. ' ):' → logprob: -14.625163078308105
    7. ')：' → logprob: -15.000163078308105
    8. '=' → logprob: -15.250163078308105
    9. '）：' → logprob: -15.375163078308105
    10. '():' → logprob: -15.500163078308105

Token 1308: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00025942857610061765
    2. ' if' → logprob: -8.750259399414062
    3. '<|end|>' → logprob: -10.125259399414062
    4. '   ' → logprob: -10.625259399414062
    5. '	if' → logprob: -10.750259399414062
    6. '    
' → logprob: -12.750259399414062
    7. '\t' → logprob: -13.000259399414062
    8. '    ' → logprob: -13.125259399414062
    9. '```' → logprob: -13.250259399414062
    10. '       ' → logprob: -13.750259399414062

Token 1309: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08922603726387024
    2. ' if' → logprob: -2.589226007461548
    3. 'if' (adapté à ' if') → logprob: -4.589226245880127
    4. '	if' → logprob: -9.089225769042969
    5. '   ' → logprob: -12.339225769042969
    6. '    ' → logprob: -13.339225769042969
    7. '  ' → logprob: -14.464225769042969
    8. '```' → logprob: -14.714225769042969
    9. ' ' → logprob: -15.089225769042969
    10. '\t' → logprob: -15.214225769042969

Token 1310: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10975467413663864
    2. ' x' → logprob: -2.3597545623779297
    3. '(x' → logprob: -4.85975456237793
    4. ' (' → logprob: -6.35975456237793
    5. '(' → logprob: -11.35975456237793
    6. '   ' → logprob: -11.73475456237793
    7. '	x' → logprob: -14.73475456237793
    8. ' ' → logprob: -14.98475456237793
    9. '  ' → logprob: -17.23475456237793
    10. '_x' → logprob: -17.35975456237793

Token 1311: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.166338137816638e-05
    2. ' x' → logprob: -10.375031471252441
    3. ')x' → logprob: -15.625031471252441
    4. '(x' → logprob: -16.250032424926758
    5. '   ' → logprob: -16.500032424926758
    6. ')' → logprob: -18.000032424926758
    7. '_x' → logprob: -18.000032424926758
    8. '	x' → logprob: -18.375032424926758
    9. 'not' → logprob: -19.000032424926758
    10. ''x' → logprob: -19.125032424926758

Token 1312: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24703894555568695
    2. ',y' → logprob: -1.6220389604568481
    3. '==' → logprob: -4.247038841247559
    4. ',x' → logprob: -5.997038841247559
    5. ' ==' → logprob: -6.247038841247559
    6. ',j' → logprob: -6.497038841247559
    7. ' ,' → logprob: -7.372038841247559
    8. ',n' → logprob: -8.872038841247559
    9. ')==' → logprob: -9.372038841247559
    10. ')' → logprob: -9.622038841247559

Token 1313: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03827144205570221
    2. ')==' → logprob: -3.288271427154541
    3. '==' → logprob: -8.4132719039917
    4. ' ==' → logprob: -12.5382719039917
    5. '）' → logprob: -13.1632719039917
    6. ']==' → logprob: -14.2882719039917
    7. '   ' → logprob: -14.5382719039917
    8. ')=='' → logprob: -14.9132719039917
    9. ' )' → logprob: -15.2882719039917
    10. ')=' → logprob: -15.6632719039917

Token 1314: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0028650204185396433
    2. ' ==' → logprob: -5.877864837646484
    3. ')==' → logprob: -10.752864837646484
    4. '==(' → logprob: -11.127864837646484
    5. '==
' → logprob: -11.627864837646484
    6. '()==' → logprob: -12.252864837646484
    7. ']==' → logprob: -12.377864837646484
    8. '===' → logprob: -12.752864837646484
    9. '=' → logprob: -14.002864837646484
    10. '```' → logprob: -14.377864837646484

Token 1315: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001934469910338521
    2. ' (' → logprob: -6.25193452835083
    3. '0' → logprob: -12.251934051513672
    4. '   ' → logprob: -14.126934051513672
    5. ' ' → logprob: -15.001934051513672
    6. '（' → logprob: -19.376934051513672
    7. '  ' → logprob: -19.876934051513672
    8. '
' → logprob: -21.126934051513672
    9. ')' → logprob: -21.376934051513672
    10. '    
' → logprob: -21.376934051513672

Token 1316: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.56102097814437e-05
    2. '(' → logprob: -10.000045776367188
    3. ' ' → logprob: -16.125045776367188
    4. ')' → logprob: -18.125045776367188
    5. '   ' → logprob: -19.000045776367188
    6. ' (' → logprob: -19.125045776367188
    7. '０' → logprob: -20.250045776367188
    8. '۰' → logprob: -20.625045776367188
    9. '```' → logprob: -21.125045776367188
    10. '
' → logprob: -22.000045776367188

Token 1317: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2723104848410003e-05
    2. ' ,' → logprob: -10.750022888183594
    3. '0' → logprob: -14.000022888183594
    4. ',
' → logprob: -15.375022888183594
    5. '‌,' → logprob: -16.875022888183594
    6. '   ' → logprob: -17.375022888183594
    7. ',None' → logprob: -17.625022888183594
    8. ',int' → logprob: -18.000022888183594
    9. '，' → logprob: -18.125022888183594
    10. '،' → logprob: -19.125022888183594

Token 1318: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -20.375
    4. '```' → logprob: -20.75
    5. '۰' → logprob: -21.0
    6. ',' → logprob: -21.25
    7. '  ' → logprob: -22.125
    8. '０' → logprob: -22.25
    9. '``' → logprob: -23.25
    10. ')' → logprob: -23.5

Token 1319: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11373580247163773
    2. '):
' → logprob: -2.2387359142303467
    3. '   ' → logprob: -7.488735675811768
    4. ')' → logprob: -8.113736152648926
    5. ':' → logprob: -10.363736152648926
    6. '):
' → logprob: -11.738736152648926
    7. '       ' → logprob: -11.863736152648926
    8. ':
' → logprob: -12.863736152648926
    9. '):

' → logprob: -13.863736152648926
    10. ' ):' → logprob: -14.238736152648926

Token 1320: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3868960440158844
    2. '   ' → logprob: -1.136896014213562
    3. '
' → logprob: -11.636896133422852
    4. '	return' → logprob: -12.011896133422852
    5. ' return' → logprob: -12.261896133422852
    6. '<|end|>' → logprob: -13.886896133422852
    7. '     ' → logprob: -14.136896133422852
    8. '	   ' → logprob: -14.261896133422852
    9. '    
' → logprob: -14.511896133422852
    10. ':return' → logprob: -14.636896133422852

Token 1321: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006310911849141121
    2. 'ans' (adapté à ' ans') → logprob: -5.131310939788818
    3. ' ans' → logprob: -8.63131046295166
    4. '	ans' → logprob: -8.63131046295166
    5. 'return' → logprob: -11.13131046295166
    6. 'print' → logprob: -12.50631046295166
    7. '   ' → logprob: -12.75631046295166
    8. ' return' → logprob: -13.50631046295166
    9. '       ' → logprob: -13.75631046295166
    10. '```' → logprob: -14.38131046295166

Token 1322: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00864187441766262
    2. '.' → logprob: -4.758641719818115
    3. 'append' → logprob: -11.133642196655273
    4. '.app' → logprob: -11.883642196655273
    5. '.extend' → logprob: -12.258642196655273
    6. '.ap' → logprob: -15.133642196655273
    7. '.Append' → logprob: -15.258642196655273
    8. ' append' → logprob: -15.883642196655273
    9. '.clear' → logprob: -16.258642196655273
    10. ' .' → logprob: -16.758642196655273

Token 1323: '(path' (ID: 10993)
  Prédit: '(path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -0.00020377879263833165
    2. 'path' → logprob: -8.500204086303711
    3. '(' → logprob: -15.750204086303711
    4. '('' → logprob: -16.50020408630371
    5. ' path' → logprob: -17.87520408630371
    6. '((' → logprob: -18.12520408630371
    7. ',path' → logprob: -18.75020408630371
    8. '[path' → logprob: -19.00020408630371
    9. '(
' → logprob: -19.25020408630371
    10. '	path' → logprob: -20.00020408630371

Token 1324: '[::-' (ID: 159890)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.577576220035553
    2. ')' → logprob: -0.827576220035553
    3. '[::-' → logprob: -6.452576160430908
    4. ')return' → logprob: -10.452576637268066
    5. ')
' → logprob: -11.077576637268066
    6. '):
' → logprob: -12.452576637268066
    7. '   ' → logprob: -12.827576637268066
    8. ');' → logprob: -13.077576637268066
    9. ')`
' → logprob: -13.327576637268066
    10. ' )
' → logprob: -14.202576637268066

Token 1325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09561474621295929
    2. 'r' → logprob: -3.3456146717071533
    3. ')' → logprob: -4.345614910125732
    4. '-' → logprob: -4.470614910125732
    5. '_' → logprob: -4.470614910125732
    6. '```' → logprob: -5.720614910125732
    7. '())' → logprob: -6.345614910125732
    8. '``' → logprob: -6.345614910125732
    9. 'def' → logprob: -6.970614910125732
    10. ')
' → logprob: -7.345614910125732

Token 1326: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.049027636647224426
    2. ')
' → logprob: -3.049027681350708
    3. '   ' → logprob: -7.924027442932129
    4. '       ' → logprob: -9.799027442932129
    5. ')return' → logprob: -12.299027442932129
    6. '())' → logprob: -12.424027442932129
    7. ')`
' → logprob: -13.049027442932129
    8. '')' → logprob: -13.424027442932129
    9. ' )' → logprob: -13.424027442932129
    10. '))' → logprob: -13.424027442932129

Token 1327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036017363891005516
    2. '   ' → logprob: -5.628601551055908
    3. '<|end|>' → logprob: -13.753602027893066
    4. '           ' → logprob: -16.00360107421875
    5. '     ' → logprob: -16.25360107421875
    6. '      ' → logprob: -16.62860107421875
    7. '	' → logprob: -16.87860107421875
    8. '	return' → logprob: -17.00360107421875
    9. '
' → logprob: -17.37860107421875
    10. '	   ' → logprob: -17.62860107421875

Token 1328: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00388689199462533
    2. 'return' (adapté à ' return') → logprob: -5.878886699676514
    3. '   ' → logprob: -6.878886699676514
    4. ' return' → logprob: -10.003887176513672
    5. '	return' → logprob: -12.128887176513672
    6. ' ' → logprob: -14.378887176513672
    7. '<|end|>' → logprob: -15.128887176513672
    8. '     ' → logprob: -15.753887176513672
    9. '           ' → logprob: -16.128887176513672
    10. '	' → logprob: -16.128887176513672

Token 1329: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.703443770878948e-06
    2. '    
' → logprob: -12.750007629394531
    3. '
' → logprob: -13.000007629394531
    4. '   ' → logprob: -14.625007629394531
    5. 'if' → logprob: -14.875007629394531
    6. '```' → logprob: -14.875007629394531
    7. '<|end|>' → logprob: -15.000007629394531
    8. 'b' → logprob: -15.625007629394531
    9. 'n' → logprob: -16.00000762939453
    10. ' if' → logprob: -16.12500762939453

Token 1330: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.7432603272027336e-06
    2. '    
' → logprob: -14.000001907348633
    3. '
' → logprob: -14.500001907348633
    4. 'if' → logprob: -15.375001907348633
    5. 'for' → logprob: -17.625001907348633
    6. '       ' → logprob: -17.875001907348633
    7. '```' → logprob: -18.375001907348633
    8. ' if' → logprob: -18.500001907348633
    9. '   ' → logprob: -18.750001907348633
    10. ' ' → logprob: -18.750001907348633

Token 1331: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002924468135461211
    2. '   ' → logprob: -6.25292444229126
    3. 'for' (adapté à ' for') → logprob: -7.00292444229126
    4. ' if' → logprob: -10.127924919128418
    5. '```' → logprob: -10.377924919128418
    6. 'prev' → logprob: -11.627924919128418
    7. '	if' → logprob: -12.752924919128418
    8. 'states' → logprob: -14.127924919128418
    9. '    
' → logprob: -14.627924919128418
    10. '#' → logprob: -15.002924919128418

Token 1332: ' pj' (ID: 110041)
  Prédit: 'pj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pj' → logprob: -0.4528839886188507
    2. 'px' → logprob: -1.2028839588165283
    3. 'nj' → logprob: -3.4528839588165283
    4. 'nx' → logprob: -3.5778839588165283
    5. 'prev' → logprob: -5.702884197235107
    6. '(px' → logprob: -7.827884197235107
    7. 'p' → logprob: -8.82788372039795
    8. 'pn' → logprob: -9.07788372039795
    9. '(p' → logprob: -9.32788372039795
    10. '(n' → logprob: -9.57788372039795

Token 1333: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6988087892532349
    2. ',p' → logprob: -0.6988087892532349
    3. ',j' → logprob: -5.573808670043945
    4. ',y' → logprob: -6.948808670043945
    5. ' ,' → logprob: -8.073808670043945
    6. ',x' → logprob: -8.448808670043945
    7. ',n' → logprob: -8.948808670043945
    8. ',(' → logprob: -9.323808670043945
    9. 'in' → logprob: -9.698808670043945
    10. ' in' → logprob: -10.823808670043945

Token 1334: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -4.4060561776859686e-05
    2. ' py' → logprob: -10.250043869018555
    3. ',' → logprob: -11.750043869018555
    4. 'px' → logprob: -15.250043869018555
    5. 'p' → logprob: -15.750043869018555
    6. 'pc' → logprob: -15.875043869018555
    7. '(py' → logprob: -16.875043869018555
    8. '_py' → logprob: -17.250043869018555
    9. 'Py' → logprob: -18.125043869018555
    10. '```' → logprob: -18.375043869018555

Token 1335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30041706562042236
    2. 'in' → logprob: -1.4254170656204224
    3. ' in' → logprob: -4.550416946411133
    4. ',p' → logprob: -5.050416946411133
    5. ',path' → logprob: -6.800416946411133
    6. ' ,' → logprob: -7.425416946411133
    7. ',y' → logprob: -8.925416946411133
    8. ',in' → logprob: -9.425416946411133
    9. ',j' → logprob: -10.050416946411133
    10. ',user' → logprob: -10.175416946411133

Token 1336: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001498314319178462
    2. 'pc' → logprob: -6.626498222351074
    3. 'sc' → logprob: -9.376498222351074
    4. 'p' → logprob: -10.376498222351074
    5. ' c' → logprob: -10.501498222351074
    6. 'player' → logprob: -11.001498222351074
    7. 'pt' → logprob: -13.251498222351074
    8. 'ch' → logprob: -13.376498222351074
    9. 'score' → logprob: -13.501498222351074
    10. 'pm' → logprob: -13.751498222351074

Token 1337: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.14267782866954803
    2. ' in' → logprob: -2.0176777839660645
    3. 'n' → logprob: -14.767678260803223
    4. '	in' → logprob: -14.767678260803223
    5. ')' → logprob: -14.892678260803223
    6. ' ' → logprob: -15.017678260803223
    7. '_in' → logprob: -15.017678260803223
    8. 'prev' → logprob: -15.142678260803223
    9. 'In' → logprob: -15.767678260803223
    10. '
' → logprob: -16.392677307128906

Token 1338: ' sorted' (ID: 20099)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -3.547789674485102e-05
    2. ' prev' → logprob: -10.250035285949707
    3. '	prev' → logprob: -17.875036239624023
    4. '
' → logprob: -18.625036239624023
    5. '(prev' → logprob: -18.875036239624023
    6. '   ' → logprob: -19.000036239624023
    7. 'rev' → logprob: -19.500036239624023
    8. '.prev' → logprob: -19.500036239624023
    9. 'pre' → logprob: -19.625036239624023
    10. 'next' → logprob: -20.250036239624023

Token 1339: '(prev' (ID: 59594)
  Prédit: '(prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prev' → logprob: -0.0067161982879042625
    2. 'prev' → logprob: -5.006716251373291
    3. '	prev' → logprob: -14.256715774536133
    4. ' prev' → logprob: -16.006715774536133
    5. '_prev' → logprob: -16.756715774536133
    6. '(previous' → logprob: -17.756715774536133
    7. '```' → logprob: -17.881715774536133
    8. '.prev' → logprob: -18.131715774536133
    9. 'Prev' → logprob: -18.256715774536133
    10. '((' → logprob: -18.506715774536133

Token 1340: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -2.45848218582978e-06
    2. '(x' → logprob: -13.37500286102295
    3. '((' → logprob: -14.12500286102295
    4. '[x' → logprob: -16.625001907348633
    5. '   ' → logprob: -16.875001907348633
    6. ',' → logprob: -18.375001907348633
    7. ')' → logprob: -18.500001907348633
    8. '[
' → logprob: -18.500001907348633
    9. '[' → logprob: -19.000001907348633
    10. '```' → logprob: -19.125001907348633

Token 1341: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.584239938296378e-06
    2. '(x' → logprob: -12.125007629394531
    3. ' x' → logprob: -13.125007629394531
    4. '   ' → logprob: -18.00000762939453
    5. ')x' → logprob: -19.75000762939453
    6. '	x' → logprob: -20.25000762939453
    7. '
' → logprob: -20.37500762939453
    8. ',x' → logprob: -21.00000762939453
    9. 'j' → logprob: -21.12500762939453
    10. ')' → logprob: -21.62500762939453

Token 1342: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.48792654275894165
    2. ',' → logprob: -0.9879265427589417
    3. 'y' → logprob: -4.487926483154297
    4. ',j' → logprob: -6.862926483154297
    5. '(y' → logprob: -7.612926483154297
    6. 'j' → logprob: -7.737926483154297
    7. '[y' → logprob: -7.862926483154297
    8. ' ,' → logprob: -9.362926483154297
    9. '[j' → logprob: -10.862926483154297
    10. ' y' → logprob: -11.362926483154297

Token 1343: ')],' (ID: 60559)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.04989297315478325
    2. '])' → logprob: -3.7998929023742676
    3. ')' → logprob: -4.424892902374268
    4. ')],' → logprob: -5.049892902374268
    5. ']):' → logprob: -5.299892902374268
    6. ']):
' → logprob: -6.924892902374268
    7. ')])' → logprob: -7.174892902374268
    8. '],' → logprob: -7.299892902374268
    9. ']' → logprob: -8.674893379211426
    10. '])):
' → logprob: -9.174893379211426

Token 1344: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.04322480782866478
    2. '(key' → logprob: -3.918224811553955
    3. ' key' → logprob: -3.918224811553955
    4. 'reverse' → logprob: -6.293224811553955
    5. '       ' → logprob: -7.918224811553955
    6. '           ' → logprob: -9.168224334716797
    7. 'pj' → logprob: -9.793224334716797
    8. '   ' → logprob: -10.418224334716797
    9. ' reverse' → logprob: -10.668224334716797
    10. '               ' → logprob: -11.043224334716797

Token 1345: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -2.8206473871250637e-05
    2. 'lambda' → logprob: -10.500028610229492
    3. '=' → logprob: -14.250028610229492
    4. '(lambda' → logprob: -17.500028610229492
    5. ' lambda' → logprob: -19.250028610229492
    6. '_lambda' → logprob: -20.750028610229492
    7. '```' → logprob: -21.250028610229492
    8. '=len' → logprob: -21.625028610229492
    9. 'ambda' → logprob: -22.375028610229492
    10. '=
' → logprob: -22.375028610229492

Token 1346: ' a' (ID: 261)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.011165844276547432
    2. '=lambda' → logprob: -4.511165618896484
    3. '(lambda' → logprob: -9.261165618896484
    4. ' lambda' → logprob: -11.386165618896484
    5. '_lambda' → logprob: -12.636165618896484
    6. 'λ' → logprob: -12.761165618896484
    7. '   ' → logprob: -13.011165618896484
    8. 'x' → logprob: -13.261165618896484
    9. ':' → logprob: -14.761165618896484
    10. '```' → logprob: -15.136165618896484

Token 1347: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.044022832065820694
    2. ':a' → logprob: -3.794022798538208
    3. 'a' → logprob: -4.419023036956787
    4. 'lambda' → logprob: -4.919023036956787
    5. ':(' → logprob: -7.294023036956787
    6. '=lambda' → logprob: -8.544022560119629
    7. ' lambda' → logprob: -8.669022560119629
    8. ' a' → logprob: -9.919022560119629
    9. ' :' → logprob: -10.044022560119629
    10. '(a' → logprob: -10.294022560119629

Token 1348: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0016007984522730112
    2. '(a' → logprob: -6.626600742340088
    3. '(' → logprob: -9.251601219177246
    4. 'c' → logprob: -9.876601219177246
    5. '(-' → logprob: -9.876601219177246
    6. ' a' → logprob: -10.251601219177246
    7. 'lambda' → logprob: -11.126601219177246
    8. '-' → logprob: -11.876601219177246
    9. '(lambda' → logprob: -12.501601219177246
    10. '   ' → logprob: -13.251601219177246

Token 1349: '[' (ID: 58)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2726683020591736
    2. '[' → logprob: -1.8976683616638184
    3. 'c' → logprob: -3.8976683616638184
    4. 'a' → logprob: -4.022668361663818
    5. ':c' → logprob: -4.147668361663818
    6. ':a' → logprob: -4.272668361663818
    7. '[-' → logprob: -4.647668361663818
    8. ':(' → logprob: -5.522668361663818
    9. '[a' → logprob: -5.772668361663818
    10. ':[' → logprob: -6.147668361663818

Token 1350: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0029372870922088623
    2. ':' → logprob: -6.127937316894531
    3. '(' → logprob: -7.752937316894531
    4. '-' → logprob: -8.627937316894531
    5. '0' → logprob: -10.252937316894531
    6. 'a' → logprob: -10.252937316894531
    7. 'c' → logprob: -10.502937316894531
    8. '[' → logprob: -12.252937316894531
    9. '```' → logprob: -12.252937316894531
    10. '   ' → logprob: -12.502937316894531

Token 1351: '],' (ID: 2155)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.8447661995887756
    2. ']):
' → logprob: -1.3447661399841309
    3. ',' → logprob: -1.9697661399841309
    4. ':' → logprob: -2.969766139984131
    5. '):
' → logprob: -3.594766139984131
    6. '],' → logprob: -3.594766139984131
    7. '):' → logprob: -3.969766139984131
    8. '=='' → logprob: -4.219766139984131
    9. '[' → logprob: -5.344766139984131
    10. '[::-' → logprob: -5.844766139984131

Token 1352: ' reverse' (ID: 18199)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -1.0122876167297363
    2. 'c' → logprob: -1.1372876167297363
    3. 'a' → logprob: -1.5122876167297363
    4. 'reverse' → logprob: -3.0122876167297363
    5. ' lambda' → logprob: -4.012287616729736
    6. 'True' → logprob: -4.637287616729736
    7. 'False' → logprob: -5.012287616729736
    8. '   ' → logprob: -5.637287616729736
    9. ' c' → logprob: -6.637287616729736
    10. '           ' → logprob: -6.637287616729736

Token 1353: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.11133253574371338
    2. '=' → logprob: -2.486332416534424
    3. '=a' → logprob: -4.111332416534424
    4. '=False' → logprob: -5.736332416534424
    5. '=c' → logprob: -6.611332416534424
    6. '=lambda' → logprob: -7.236332416534424
    7. 'a' → logprob: -7.861332416534424
    8. 'c' → logprob: -9.861332893371582
    9. '(a' → logprob: -11.611332893371582
    10. 'not' → logprob: -11.986332893371582

Token 1354: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08911710977554321
    2. '):' → logprob: -2.4641170501708984
    3. '   ' → logprob: -9.589117050170898
    4. '):
' → logprob: -9.714117050170898
    5. ' ):
' → logprob: -10.714117050170898
    6. ')' → logprob: -12.339117050170898
    7. ' ):' → logprob: -12.464117050170898
    8. '       ' → logprob: -12.589117050170898
    9. '()):
' → logprob: -12.589117050170898
    10. ':' → logprob: -13.714117050170898

Token 1355: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027402082923799753
    2. ':' → logprob: -7.002740383148193
    3. '   ' → logprob: -7.502740383148193
    4. '<|end|>' → logprob: -7.877740383148193
    5. '        
' → logprob: -8.002739906311035
    6. ' if' → logprob: -8.377739906311035
    7. '```' → logprob: -9.127739906311035
    8. ',' → logprob: -9.877739906311035
    9. '	if' → logprob: -10.752739906311035
    10. '<|end|>' → logprob: -10.752739906311035

Token 1356: ' back' (ID: 1602)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'back' (adapté à ' back') → logprob: -0.145958811044693
    2. '       ' → logprob: -2.39595890045166
    3. 'if' → logprob: -3.64595890045166
    4. ' back' → logprob: -4.02095890045166
    5. ' if' → logprob: -7.64595890045166
    6. '           ' → logprob: -9.39595890045166
    7. '	back' → logprob: -9.52095890045166
    8. '   ' → logprob: -10.02095890045166
    9. '```' → logprob: -12.27095890045166
    10. '_back' → logprob: -13.27095890045166

Token 1357: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -1.8624639324116288e-06
    2. 'tract' → logprob: -14.375001907348633
    3. 'tracking' → logprob: -14.750001907348633
    4. 'trace' → logprob: -15.125001907348633
    5. 'tr' → logprob: -15.250001907348633
    6. '(track' → logprob: -15.625001907348633
    7. 't' → logprob: -15.875001907348633
    8. 'tracked' → logprob: -17.000001907348633
    9. '(p' → logprob: -17.500001907348633
    10. 'tracker' → logprob: -18.000001907348633

Token 1358: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00011796683247666806
    2. '(j' → logprob: -9.250118255615234
    3. '(' → logprob: -11.875118255615234
    4. '(px' → logprob: -11.875118255615234
    5. '(x' → logprob: -12.750118255615234
    6. '(py' → logprob: -12.875118255615234
    7. ' (' → logprob: -13.750118255615234
    8. 'pj' → logprob: -14.625118255615234
    9. ' pj' → logprob: -15.125118255615234
    10. '((' → logprob: -15.375118255615234

Token 1359: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.6166903151315637e-05
    2. ',j' → logprob: -11.125016212463379
    3. ',' → logprob: -14.375016212463379
    4. '(j' → logprob: -15.500016212463379
    5. '	j' → logprob: -15.500016212463379
    6. '_j' → logprob: -16.000015258789062
    7. 'x' → logprob: -16.125015258789062
    8. ' j' → logprob: -16.875015258789062
    9. '(p' → logprob: -17.625015258789062
    10. 'pj' → logprob: -17.750015258789062

Token 1360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004903609515167773
    2. ' ,' → logprob: -8.125490188598633
    3. ',p' → logprob: -8.875490188598633
    4. '       ' → logprob: -10.625490188598633
    5. '(py' → logprob: -11.375490188598633
    6. ',
' → logprob: -12.125490188598633
    7. '```' → logprob: -12.500490188598633
    8. '.py' → logprob: -13.500490188598633
    9. 'py' → logprob: -13.625490188598633
    10. '_py' → logprob: -13.625490188598633

Token 1361: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.000553151941858232
    2. ' py' → logprob: -7.500553131103516
    3. '(py' → logprob: -15.750553131103516
    4. '_py' → logprob: -17.250553131103516
    5. '       ' → logprob: -18.500553131103516
    6. 'Py' → logprob: -18.500553131103516
    7. '     ' → logprob: -18.500553131103516
    8. '    ' → logprob: -18.625553131103516
    9. '   ' → logprob: -18.750553131103516
    10. '           ' → logprob: -19.375553131103516

Token 1362: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003592471592128277
    2. ',x' → logprob: -5.753592491149902
    3. ' ,' → logprob: -8.378592491149902
    4. ',y' → logprob: -9.503592491149902
    5. ',p' → logprob: -9.753592491149902
    6. ',c' → logprob: -10.878592491149902
    7. '       ' → logprob: -11.378592491149902
    8. '           ' → logprob: -12.003592491149902
    9. ',j' → logprob: -12.878592491149902
    10. '   ' → logprob: -13.128592491149902

Token 1363: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.002552242483943701
    2. ' path' → logprob: -6.502552032470703
    3. 'c' → logprob: -6.877552032470703
    4. '   ' → logprob: -11.252552032470703
    5. ' c' → logprob: -12.502552032470703
    6. '(path' → logprob: -14.127552032470703
    7. ' ' → logprob: -14.252552032470703
    8. '  ' → logprob: -14.877552032470703
    9. '    ' → logprob: -17.127552032470703
    10. '_path' → logprob: -17.252552032470703

Token 1364: '+c' (ID: 114860)
  Prédit: '+c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -0.024748938158154488
    2. ' +' → logprob: -4.024748802185059
    3. '+' → logprob: -5.024748802185059
    4. 'c' → logprob: -12.899748802185059
    5. '+C' → logprob: -14.024748802185059
    6. '＋' → logprob: -14.899748802185059
    7. '+[' → logprob: -15.774748802185059
    8. '   ' → logprob: -16.524749755859375
    9. '+p' → logprob: -16.899749755859375
    10. '+(' → logprob: -17.024749755859375

Token 1365: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. '   ' → logprob: -14.375001907348633
    3. ' )' → logprob: -14.625001907348633
    4. '')' → logprob: -15.250001907348633
    5. ')
' → logprob: -16.000001907348633
    6. '       ' → logprob: -16.125001907348633
    7. '))' → logprob: -16.625001907348633
    8. '())' → logprob: -17.125001907348633
    9. '")' → logprob: -17.250001907348633
    10. '）' → logprob: -17.750001907348633

Token 1366: 'back' (ID: 2205)
  Prédit: 'back'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.0005550591740757227
    2. '
' → logprob: -7.500555038452148
    3. ' back' → logprob: -14.250555038452148
    4. '```' → logprob: -14.375555038452148
    5. 'for' → logprob: -15.000555038452148
    6. '#' → logprob: -15.750555038452148
    7. '(back' → logprob: -16.00055503845215
    8. '    
' → logprob: -16.12555503845215
    9. '
' → logprob: -16.62555503845215
    10. 'print' → logprob: -17.12555503845215

Token 1367: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -1.9743012671824545e-05
    2. 't' → logprob: -11.250020027160645
    3. 'tract' → logprob: -12.125020027160645
    4. 'tracking' → logprob: -14.500020027160645
    5. 'tr' → logprob: -15.125020027160645
    6. '_track' → logprob: -15.500020027160645
    7. '(track' → logprob: -16.375019073486328
    8. 'rack' → logprob: -16.625019073486328
    9. 'trace' → logprob: -17.000019073486328
    10. 'tracked' → logprob: -18.125019073486328

Token 1368: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -1.9361264946837764e-07
    2. ' (' → logprob: -16.875
    3. 'j' → logprob: -17.125
    4. '(' → logprob: -18.125
    5. '((' → logprob: -18.625
    6. ',j' → logprob: -20.125
    7. '(goal' → logprob: -20.125
    8. '[j' → logprob: -20.5
    9. '(job' → logprob: -21.125
    10. '(J' → logprob: -21.5

Token 1369: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018349992111325264
    2. ',y' → logprob: -4.018350124359131
    3. ' ,' → logprob: -8.518349647521973
    4. ',
' → logprob: -15.518349647521973
    5. 'y' → logprob: -16.76835060119629
    6. ',j' → logprob: -17.39335060119629
    7. ',Y' → logprob: -17.39335060119629
    8. ' y' → logprob: -17.51835060119629
    9. '   ' → logprob: -18.51835060119629
    10. ',user' → logprob: -19.01835060119629

Token 1370: ',''' (ID: 106868)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015451394952833652
    2. ',"' → logprob: -4.765451431274414
    3. ','' → logprob: -5.390451431274414
    4. ',''' → logprob: -6.140451431274414
    5. ',)' → logprob: -9.390451431274414
    6. ',:)' → logprob: -12.015451431274414
    7. ')' → logprob: -12.515451431274414
    8. ',",' → logprob: -13.140451431274414
    9. ' ,' → logprob: -14.015451431274414
    10. ','"' → logprob: -14.265451431274414

Token 1371: ')

' (ID: 1029)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6218764185905457
    2. ')' → logprob: -0.8718764185905457
    3. ')

' → logprob: -3.1218764781951904
    4. 'print' → logprob: -7.121876239776611
    5. ')
' → logprob: -11.37187671661377
    6. 'for' → logprob: -12.87187671661377
    7. ')

' → logprob: -13.62187671661377
    8. ')#' → logprob: -15.62187671661377
    9. ')


' → logprob: -15.87187671661377
    10. 'if' → logprob: -16.246875762939453

Token 1372: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0020886387210339308
    2. 'for' → logprob: -6.25208854675293
    3. 'if' → logprob: -9.37708854675293
    4. 'ans' → logprob: -9.50208854675293
    5. '```' → logprob: -14.62708854675293
    6. '#print' → logprob: -16.25208854675293
    7. ' print' → logprob: -16.75208854675293
    8. 'answer' → logprob: -17.25208854675293
    9. '#' → logprob: -18.00208854675293
    10. '[' → logprob: -18.62708854675293

Token 1373: '.sort' (ID: 19551)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.744702160358429
    2. '<|end|>' → logprob: -0.744702160358429
    3. '[' → logprob: -3.744702100753784
    4. '['' → logprob: -3.994702100753784
    5. '#' → logprob: -5.619702339172363
    6. '[len' → logprob: -6.994702339172363
    7. '```' → logprob: -6.994702339172363
    8. '[:]' → logprob: -7.494702339172363
    9. '<|end|>' → logprob: -7.869702339172363
    10. '[:' → logprob: -7.994702339172363

Token 1374: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009724332019686699
    2. '(reverse' → logprob: -4.759724140167236
    3. '()
' → logprob: -7.134724140167236
    4. '(key' → logprob: -8.259724617004395
    5. 'reverse' → logprob: -10.509724617004395
    6. 'key' → logprob: -11.259724617004395
    7. '(' → logprob: -12.009724617004395
    8. '()\' → logprob: -13.509724617004395
    9. '()[' → logprob: -13.759724617004395
    10. '();' → logprob: -14.134724617004395

Token 1375: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00905921682715416
    2. 'if' → logprob: -4.759059429168701
    3. 'for' → logprob: -7.759059429168701
    4. '```' → logprob: -11.009058952331543
    5. '``' → logprob: -14.634058952331543
    6. 'try' → logprob: -15.009058952331543
    7. '#print' → logprob: -15.759058952331543
    8. '#' → logprob: -15.759058952331543
    9. ' print' → logprob: -16.13405990600586
    10. '[' → logprob: -18.50905990600586

Token 1376: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.25580888986587524
    2. 's' → logprob: -2.0058088302612305
    3. 'p' → logprob: -3.1308088302612305
    4. 'path' → logprob: -3.6308088302612305
    5. 'seq' → logprob: -4.1308088302612305
    6. 'route' → logprob: -6.7558088302612305
    7. 'res' → logprob: -7.0058088302612305
    8. 'ans' → logprob: -7.1308088302612305
    9. 'sequence' → logprob: -7.2558088302612305
    10. 'score' → logprob: -7.5058088302612305

Token 1377: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.16175477206707
    2. ' in' → logprob: -1.9117547273635864
    3. 'n' → logprob: -6.536754608154297
    4. 'a' → logprob: -10.661754608154297
    5. 'print' → logprob: -11.036754608154297
    6. '()' → logprob: -11.161754608154297
    7. 'ine' → logprob: -12.161754608154297
    8. 'e' → logprob: -12.411754608154297
    9. 'nt' → logprob: -12.911754608154297
    10. ' ' → logprob: -13.411754608154297

Token 1378: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.9027791495318525e-05
    2. ' ans' → logprob: -11.000019073486328
    3. '(ans' → logprob: -13.375019073486328
    4. 'a' → logprob: -14.750019073486328
    5. 'print' → logprob: -15.125019073486328
    6. '	ans' → logprob: -16.375019073486328
    7. 'range' → logprob: -18.125019073486328
    8. 'answer' → logprob: -18.875019073486328
    9. 'an' → logprob: -19.125019073486328
    10. '_ans' → logprob: -19.625019073486328

Token 1379: ':
' (ID: 734)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.435560405254364
    2. ':' → logprob: -1.1855604648590088
    3. '(a' → logprob: -3.685560464859009
    4. '(print' → logprob: -4.18556022644043
    5. '   ' → logprob: -6.18556022644043
    6. ':
' → logprob: -6.56056022644043
    7. '(' → logprob: -7.18556022644043
    8. ')' → logprob: -7.43556022644043
    9. '.print' → logprob: -8.06056022644043
    10. ' print' → logprob: -8.31056022644043

Token 1380: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00010676169040380046
    2. '   ' → logprob: -9.250106811523438
    3. ' print' → logprob: -11.500106811523438
    4. '	print' → logprob: -15.250106811523438
    5. '```' → logprob: -15.375106811523438
    6. '#print' → logprob: -20.625106811523438
    7. ' ' → logprob: -21.000106811523438
    8. '(print' → logprob: -21.125106811523438
    9. '``' → logprob: -21.375106811523438
    10. 'printf' → logprob: -21.750106811523438

Token 1381: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.5
    3. '   ' → logprob: -18.25
    4. '```' → logprob: -21.25
    5. '	print' → logprob: -21.875
    6. 'for' → logprob: -23.625
    7. 'println' → logprob: -24.125
    8. '#print' → logprob: -24.25
    9. 'printf' → logprob: -24.5
    10. 'import' → logprob: -25.0

Token 1382: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.2729995988775045e-06
    2. 'a' → logprob: -12.000006675720215
    3. '()' → logprob: -19.2500057220459
    4. '(ans' → logprob: -19.8750057220459
    5. '(' → logprob: -20.0000057220459
    6. '(*' → logprob: -22.1250057220459
    7. ' a' → logprob: -22.8750057220459
    8. '(an' → logprob: -23.2500057220459
    9. '(
' → logprob: -23.3750057220459
    10. '	a' → logprob: -23.7500057220459

Token 1383: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.061054359131958e-06
    2. '()' → logprob: -13.000007629394531
    3. '())' → logprob: -13.125007629394531
    4. '')' → logprob: -13.500007629394531
    5. '))' → logprob: -14.125007629394531
    6. ')`' → logprob: -14.125007629394531
    7. ')
' → logprob: -15.625007629394531
    8. '`)' → logprob: -15.750007629394531
    9. ')")' → logprob: -15.875007629394531
    10. ' )' → logprob: -15.875007629394531


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1381
Tokens correctement prédits (1ère position, stricte): 551
Tokens correctement prédits (1ère position, avec adaptation): 592
Tokens correctement prédits (top 10): 1090
Précision stricte (1ère position): 39.90%
Précision adaptée (1ère position): 42.87%
Précision (top 10): 78.93%
================================================================================
