================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:09:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

value = {'I':1,'V':5,'X':10,'L':50,'C':100,'D':500,'M':1000}

for line in sys.stdin:
    s = line.strip()
    if not s:
        continue
    total = 0
    prev = 0
    for c in reversed(s):
        curr = value[c]
        if curr < prev:
            total -= curr
        else:
            total += curr
        prev = curr
    print(total)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'value' (ID: 1594)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18268179893493652
    2. '\n' → logprob: -2.1826817989349365
    3. 'import' → logprob: -3.5576817989349365
    4. '<|end|>' → logprob: -4.932682037353516
    5. '' → logprob: -5.807682037353516
    6. 'newline' → logprob: -5.932682037353516
    7. '\' → logprob: -6.057682037353516
    8. 'print' → logprob: -6.432682037353516
    9. '[' → logprob: -6.557682037353516
    10. '<|end|>' → logprob: -6.807682037353516

Token 4: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1235828399658203
    2. '=' → logprob: -1.1235828399658203
    3. ')' → logprob: -1.8735828399658203
    4. ' =' → logprob: -1.9985828399658203
    5. ' ' → logprob: -3.6235828399658203
    6. '_' → logprob: -3.7485828399658203
    7. 's' → logprob: -5.49858283996582
    8. '[' → logprob: -5.87358283996582
    9. '(' → logprob: -7.24858283996582
    10. ',' → logprob: -7.74858283996582

Token 5: ' {'' (ID: 11881)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.047563374042510986
    2. ' sys' → logprob: -4.422563552856445
    3. ' input' → logprob: -4.547563552856445
    4. '"' → logprob: -4.672563552856445
    5. ' int' → logprob: -5.422563552856445
    6. 'input' → logprob: -5.547563552856445
    7. ' "' → logprob: -6.672563552856445
    8. '0' → logprob: -6.797563552856445
    9. 'int' → logprob: -7.172563552856445
    10. ' None' → logprob: -7.172563552856445

Token 6: 'I' (ID: 40)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.7579260468482971
    2. '}' → logprob: -1.8829259872436523
    3. 'a' → logprob: -2.1329259872436523
    4. ''' → logprob: -2.7579259872436523
    5. ''a' → logprob: -3.1329259872436523
    6. '"' → logprob: -3.3829259872436523
    7. 'user' → logprob: -4.257925987243652
    8. ''s' → logprob: -4.257925987243652
    9. 'apple' → logprob: -4.382925987243652
    10. 'name' → logprob: -4.632925987243652

Token 7: '':' (ID: 2337)
  Prédit: ''}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''}' → logprob: -0.8696820735931396
    2. '':' → logprob: -1.1196820735931396
    3. ''m' → logprob: -2.2446820735931396
    4. ''' → logprob: -2.3696820735931396
    5. 'n' → logprob: -4.119682312011719
    6. '':'' → logprob: -5.119682312011719
    7. '}' → logprob: -5.744682312011719
    8. ''am' → logprob: -5.869682312011719
    9. ''d' → logprob: -6.119682312011719
    10. 'T' → logprob: -6.119682312011719

Token 8: '1' (ID: 16)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09123779833316803
    2. '1' → logprob: -2.466237783432007
    3. '0' → logprob: -6.841238021850586
    4. ''' → logprob: -7.841238021850586
    5. ' '' → logprob: -8.091238021850586
    6. '100' → logprob: -9.278738021850586
    7. '5' → logprob: -9.403738021850586
    8. '4' → logprob: -10.278738021850586
    9. '   ' → logprob: -10.466238021850586
    10. '  ' → logprob: -10.716238021850586

Token 9: ','' (ID: 6620)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3136996328830719
    2. '}' → logprob: -1.3136996030807495
    3. ',
' → logprob: -8.688699722290039
    4. ' }' → logprob: -8.813699722290039
    5. ','' → logprob: -10.188699722290039
    6. ''}' → logprob: -10.313699722290039
    7. ' ,' → logprob: -10.438699722290039
    8. ',

' → logprob: -11.688699722290039
    9. ',
' → logprob: -12.813699722290039
    10. '`}' → logprob: -13.063699722290039

Token 10: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.00745766144245863
    2. ' V' → logprob: -5.007457733154297
    3. 'II' → logprob: -8.132457733154297
    4. ' ' → logprob: -8.757457733154297
    5. ''' → logprob: -9.882457733154297
    6. 'v' → logprob: -10.132457733154297
    7. 'I' → logprob: -10.257457733154297
    8. 'IV' → logprob: -10.257457733154297
    9. 'l' → logprob: -10.757457733154297
    10. ' '' → logprob: -11.007457733154297

Token 11: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.3403753936290741
    2. '':'' → logprob: -1.3403754234313965
    3. ''}' → logprob: -4.8403754234313965
    4. ''' → logprob: -4.8403754234313965
    5. '','' → logprob: -5.0903754234313965
    6. '',' → logprob: -6.0903754234313965
    7. '```' → logprob: -6.9653754234313965
    8. ''},' → logprob: -7.3403754234313965
    9. ':' → logprob: -7.9653754234313965
    10. 'I' → logprob: -8.215374946594238

Token 12: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.47615930438041687
    2. ' ' → logprob: -0.9761593341827393
    3. ''' → logprob: -6.22615909576416
    4. ' '' → logprob: -9.85115909576416
    5. '50' → logprob: -10.10115909576416
    6. '4' → logprob: -13.10115909576416
    7. '1' → logprob: -13.47615909576416
    8. '10' → logprob: -13.72615909576416
    9. ' V' → logprob: -13.97615909576416
    10. '0' → logprob: -14.47615909576416

Token 13: ','' (ID: 6620)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03374217078089714
    2. ','' → logprob: -3.5337421894073486
    3. '}' → logprob: -5.5337419509887695
    4. '','' → logprob: -11.40874195098877
    5. ''}' → logprob: -12.15874195098877
    6. ' ,' → logprob: -12.40874195098877
    7. ',"' → logprob: -12.78374195098877
    8. '',' → logprob: -12.90874195098877
    9. ',
' → logprob: -13.15874195098877
    10. ',...' → logprob: -13.53374195098877

Token 14: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.001150578842498362
    2. ' X' → logprob: -7.376150608062744
    3. ''' → logprob: -7.626150608062744
    4. '10' → logprob: -12.001150131225586
    5. 'I' → logprob: -12.251150131225586
    6. '```' → logprob: -12.251150131225586
    7. '`' → logprob: -12.626150131225586
    8. ' ' → logprob: -12.626150131225586
    9. '	X' → logprob: -12.626150131225586
    10. ''s' → logprob: -13.251150131225586

Token 15: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.001999654108658433
    2. '':'' → logprob: -6.501999855041504
    3. ':' → logprob: -8.126999855041504
    4. '```' → logprob: -9.501999855041504
    5. ''' → logprob: -9.626999855041504
    6. ''}' → logprob: -10.501999855041504
    7. ' ':' → logprob: -11.751999855041504
    8. '’:' → logprob: -12.376999855041504
    9. 'I' → logprob: -12.626999855041504
    10. '',' → logprob: -12.751999855041504

Token 16: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00024548539659008384
    2. ' ' → logprob: -8.375245094299316
    3. ''' → logprob: -11.375245094299316
    4. '```' → logprob: -13.750245094299316
    5. '`' → logprob: -14.750245094299316
    6. '	' → logprob: -14.750245094299316
    7. '{'' → logprob: -15.125245094299316
    8. '"' → logprob: -15.375245094299316
    9. '{' → logprob: -15.625245094299316
    10. '1' → logprob: -15.750245094299316

Token 17: ','' (ID: 6620)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13019020855426788
    2. ','' → logprob: -2.130190134048462
    3. '}' → logprob: -5.755190372467041
    4. '','' → logprob: -10.130189895629883
    5. ''}' → logprob: -10.880189895629883
    6. ',"' → logprob: -11.505189895629883
    7. '',' → logprob: -12.255189895629883
    8. ' ,' → logprob: -12.255189895629883
    9. ',
' → logprob: -12.755189895629883
    10. ',''' → logprob: -13.130189895629883

Token 18: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0009527906076982617
    2. ' L' → logprob: -7.00095272064209
    3. ''L' → logprob: -10.12595272064209
    4. '50' → logprob: -15.00095272064209
    5. '	L' → logprob: -15.37595272064209
    6. ''' → logprob: -15.62595272064209
    7. 'I' → logprob: -16.000953674316406
    8. '"L' → logprob: -16.000953674316406
    9. 'C' → logprob: -16.125953674316406
    10. ' ' → logprob: -16.375953674316406

Token 19: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0002387018030276522
    2. ':' → logprob: -8.875238418579102
    3. ''' → logprob: -9.500238418579102
    4. '':'' → logprob: -11.375238418579102
    5. ' ':' → logprob: -12.125238418579102
    6. '```' → logprob: -13.625238418579102
    7. '<|end|>' → logprob: -13.875238418579102
    8. '":' → logprob: -14.250238418579102
    9. '':''' → logprob: -14.250238418579102
    10. '')' → logprob: -14.375238418579102

Token 20: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -2.1888679839321412e-05
    2. ' ' → logprob: -10.750021934509277
    3. ''' → logprob: -16.12502098083496
    4. '{' → logprob: -16.87502098083496
    5. '```' → logprob: -16.87502098083496
    6. '5' → logprob: -17.50002098083496
    7. '40' → logprob: -18.50002098083496
    8. '   ' → logprob: -18.62502098083496
    9. '{'' → logprob: -18.68752098083496
    10. '５０' → logprob: -18.68752098083496

Token 21: ','' (ID: 6620)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06845727562904358
    2. ','' → logprob: -2.8184573650360107
    3. '}' → logprob: -5.068457126617432
    4. '','' → logprob: -8.94345760345459
    5. ''}' → logprob: -10.94345760345459
    6. '',' → logprob: -11.81845760345459
    7. ' ,' → logprob: -12.06845760345459
    8. ',"' → logprob: -12.69345760345459
    9. ',
' → logprob: -13.31845760345459
    10. ',''' → logprob: -13.31845760345459

Token 22: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0009277798235416412
    2. ''C' → logprob: -7.000927925109863
    3. ' C' → logprob: -11.875927925109863
    4. ''' → logprob: -12.000927925109863
    5. '100' → logprob: -13.375927925109863
    6. '"C' → logprob: -14.125927925109863
    7. '```' → logprob: -15.625927925109863
    8. '')' → logprob: -16.563426971435547
    9. ' ' → logprob: -16.563426971435547
    10. '>C' → logprob: -16.625926971435547

Token 23: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0002158146962756291
    2. ':' → logprob: -8.625215530395508
    3. ''' → logprob: -10.750215530395508
    4. '100' → logprob: -12.375215530395508
    5. '```' → logprob: -12.500215530395508
    6. '',' → logprob: -13.375215530395508
    7. '’:' → logprob: -13.500215530395508
    8. '":' → logprob: -13.875215530395508
    9. ' ':' → logprob: -14.000215530395508
    10. '`:' → logprob: -14.125215530395508

Token 24: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.750008583068848
    3. '```' → logprob: -16.00000762939453
    4. '   ' → logprob: -17.75000762939453
    5. '	' → logprob: -18.50000762939453
    6. '  ' → logprob: -18.75000762939453
    7. '1' → logprob: -18.75000762939453
    8. '0' → logprob: -19.12500762939453
    9. ' hundred' → logprob: -19.37500762939453
    10. '{' → logprob: -19.37500762939453

Token 25: ','' (ID: 6620)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4750189185142517
    2. ','' → logprob: -0.9750189185142517
    3. '}' → logprob: -7.3500189781188965
    4. '','' → logprob: -8.350018501281738
    5. '',' → logprob: -11.100018501281738
    6. ',"' → logprob: -11.350018501281738
    7. ' ,' → logprob: -11.350018501281738
    8. ' ,'' → logprob: -12.100018501281738
    9. ''}' → logprob: -12.225018501281738
    10. ',’' → logprob: -12.725018501281738

Token 26: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.282920129597187e-05
    2. ''D' → logprob: -11.625012397766113
    3. ' D' → logprob: -13.625012397766113
    4. '"D' → logprob: -14.500012397766113
    5. ''' → logprob: -14.750012397766113
    6. '>D' → logprob: -15.250012397766113
    7. '```' → logprob: -15.375012397766113
    8. '100' → logprob: -15.500012397766113
    9. '500' → logprob: -15.625012397766113
    10. '50' → logprob: -15.937512397766113

Token 27: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0013657122617587447
    2. ':' → logprob: -6.626365661621094
    3. ''' → logprob: -10.876365661621094
    4. ' ':' → logprob: -11.501365661621094
    5. '":' → logprob: -12.251365661621094
    6. '’:' → logprob: -13.501365661621094
    7. '<|end|>' → logprob: -14.126365661621094
    8. '```' → logprob: -14.126365661621094
    9. '',' → logprob: -14.501365661621094
    10. ' :' → logprob: -14.876365661621094

Token 28: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -5.860340752406046e-05
    2. ' ' → logprob: -9.7500581741333
    3. '50' → logprob: -16.750059127807617
    4. '}' → logprob: -16.875059127807617
    5. '```' → logprob: -17.750059127807617
    6. ''' → logprob: -18.125059127807617
    7. '{' → logprob: -18.625059127807617
    8. '{'' → logprob: -19.125059127807617
    9. '`' → logprob: -19.375059127807617
    10. '400' → logprob: -19.750059127807617

Token 29: ','' (ID: 6620)
  Prédit: ',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ','' → logprob: -0.03467966616153717
    2. ',' → logprob: -3.409679651260376
    3. '}' → logprob: -6.909679889678955
    4. '','' → logprob: -11.034679412841797
    5. ',"' → logprob: -11.784679412841797
    6. ' ,'' → logprob: -12.409679412841797
    7. ',’' → logprob: -13.159679412841797
    8. ''}' → logprob: -13.284679412841797
    9. '',' → logprob: -13.784679412841797
    10. ',''' → logprob: -13.909679412841797

Token 30: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -9.13388703338569e-06
    2. ''M' → logprob: -12.250009536743164
    3. ' M' → logprob: -12.500009536743164
    4. ''' → logprob: -14.500009536743164
    5. 'CM' → logprob: -17.000009536743164
    6. '"M' → logprob: -17.375009536743164
    7. '```' → logprob: -17.750009536743164
    8. '500' → logprob: -18.000009536743164
    9. 'C' → logprob: -18.000009536743164
    10. '}' → logprob: -18.625009536743164

Token 31: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0033052158541977406
    2. ''}' → logprob: -5.878305435180664
    3. ':' → logprob: -8.003305435180664
    4. ''' → logprob: -9.128305435180664
    5. '}' → logprob: -10.503305435180664
    6. '':'' → logprob: -10.753305435180664
    7. '```' → logprob: -13.128305435180664
    8. '}:' → logprob: -13.628305435180664
    9. '':''' → logprob: -14.128305435180664
    10. '']' → logprob: -14.253305435180664

Token 32: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '1' → logprob: -16.875
    4. '}' → logprob: -16.875
    5. ''' → logprob: -17.125
    6. '```' → logprob: -17.625
    7. '"' → logprob: -19.625
    8. '0' → logprob: -19.75
    9. '900' → logprob: -19.75
    10. 'M' → logprob: -19.875

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '}' → logprob: -15.625
    3. '۰' → logprob: -17.5
    4. ' ' → logprob: -18.5
    5. '０' → logprob: -19.125
    6. '```' → logprob: -19.125
    7. '०' → logprob: -20.0
    8. '٠' → logprob: -20.0
    9. ''}' → logprob: -20.875
    10. ''' → logprob: -21.125

Token 34: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -2.816093228830141e-06
    2. ',' → logprob: -13.62500286102295
    3. ' }' → logprob: -13.87500286102295
    4. ''}' → logprob: -14.62500286102295
    5. '`}' → logprob: -15.75000286102295
    6. '}
' → logprob: -17.125001907348633
    7. '```' → logprob: -17.625001907348633
    8. '"}' → logprob: -17.750001907348633
    9. '}}' → logprob: -18.000001907348633
    10. '}

' → logprob: -18.250001907348633

Token 35: 'for' (ID: 1938)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011120800860226154
    2. 's' → logprob: -5.386120796203613
    3. 'r' → logprob: -5.886120796203613
    4. 'roman' → logprob: -6.886120796203613
    5. ' ' → logprob: -7.511120796203613
    6. '#' → logprob: -7.636120796203613
    7. ',' → logprob: -8.136120796203613
    8. 'n' → logprob: -8.386120796203613
    9. ' def' → logprob: -8.511120796203613
    10. '_' → logprob: -8.886120796203613

Token 36: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19229348003864288
    2. ' c' → logprob: -2.442293405532837
    3. ' i' → logprob: -3.442293405532837
    4. ' char' → logprob: -3.692293405532837
    5. ' token' → logprob: -4.317293643951416
    6. ' s' → logprob: -5.442293643951416
    7. ' symbol' → logprob: -5.442293643951416
    8. ' ch' → logprob: -6.567293643951416
    9. 'c' → logprob: -6.817293643951416
    10. 'symbol' → logprob: -6.942293643951416

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03521852567791939
    2. 'in' → logprob: -3.4102184772491455
    3. ' ' → logprob: -6.660218715667725
    4. '[' → logprob: -9.410218238830566
    5. '  ' → logprob: -10.160218238830566
    6. '(' → logprob: -10.660218238830566
    7. ':' → logprob: -11.035218238830566
    8. 's' → logprob: -11.285218238830566
    9. 'import' → logprob: -11.660218238830566
    10. '<|end|>' → logprob: -11.660218238830566

Token 38: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3868866562843323
    2. ' sys' → logprob: -1.1368865966796875
    3. '	sys' → logprob: -11.886886596679688
    4. '=sys' → logprob: -12.511886596679688
    5. '(sys' → logprob: -12.761886596679688
    6. '```' → logprob: -14.011886596679688
    7. 'stdin' → logprob: -15.011886596679688
    8. ' ' → logprob: -15.261886596679688
    9. 'iter' → logprob: -15.886886596679688
    10. 'input' → logprob: -15.886886596679688

Token 39: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.38936319947242737
    2. '.stdin' → logprob: -1.139363169670105
    3. '.argv' → logprob: -6.3893632888793945
    4. '.readline' → logprob: -7.2643632888793945
    5. '.stdout' → logprob: -9.764363288879395
    6. ' .' → logprob: -10.514363288879395
    7. 'stdin' → logprob: -12.139363288879395
    8. '.input' → logprob: -12.639363288879395
    9. '.std' → logprob: -13.264363288879395
    10. '.readlines' → logprob: -13.389363288879395

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008145838975906372
    2. '.readline' → logprob: -5.383145809173584
    3. '.' → logprob: -5.758145809173584
    4. '.readlines' → logprob: -9.258146286010742
    5. '[:]' → logprob: -9.508146286010742
    6. ':
' → logprob: -9.883146286010742
    7. ' :' → logprob: -10.508146286010742
    8. ':**' → logprob: -10.883146286010742
    9. '.strip' → logprob: -11.258146286010742
    10. '.:' → logprob: -11.383146286010742

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22991181910037994
    2. ' line' → logprob: -1.6049118041992188
    3. ' tokens' → logprob: -6.229911804199219
    4. ' text' → logprob: -7.229911804199219
    5. ' if' → logprob: -7.604911804199219
    6. ' lines' → logprob: -8.104911804199219
    7. '    
' → logprob: -8.854911804199219
    8. ' token' → logprob: -8.854911804199219
    9. ' for' → logprob: -8.979911804199219
    10. ' result' → logprob: -9.229911804199219

Token 42: ' s' (ID: 265)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.1409619301557541
    2. '   ' → logprob: -2.2659618854522705
    3. 'line' → logprob: -4.01596212387085
    4. ' stripped' → logprob: -6.26596212387085
    5. ' value' → logprob: -6.39096212387085
    6. ' text' → logprob: -6.51596212387085
    7. ' s' → logprob: -6.64096212387085
    8. ' val' → logprob: -7.51596212387085
    9. ' for' → logprob: -7.51596212387085
    10. ' roman' → logprob: -7.51596212387085

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6096863746643066
    2. '=' → logprob: -0.8596863746643066
    3. 'trip' → logprob: -3.4846863746643066
    4. ' ' → logprob: -7.109686374664307
    5. '.strip' → logprob: -7.234686374664307
    6. '   ' → logprob: -7.984686374664307
    7. ' trip' → logprob: -8.859685897827148
    8. '.' → logprob: -9.359685897827148
    9. 'tr' → logprob: -9.359685897827148
    10. 'p' → logprob: -10.234685897827148

Token 44: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.006716913543641567
    2. ' line' → logprob: -5.006716728210449
    3. '	line' → logprob: -14.88171672821045
    4. '=line' → logprob: -15.13171672821045
    5. '(line' → logprob: -15.25671672821045
    6. '#line' → logprob: -15.50671672821045
    7. '[line' → logprob: -16.006717681884766
    8. 's' → logprob: -16.006717681884766
    9. '   ' → logprob: -16.131717681884766
    10. ' ' → logprob: -16.131717681884766

Token 45: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0014661770546808839
    2. '.rstrip' → logprob: -7.001466274261475
    3. '.' → logprob: -7.501466274261475
    4. 'strip' → logprob: -13.251465797424316
    5. ' .' → logprob: -15.626465797424316
    6. '.readline' → logprob: -16.251466751098633
    7. '.split' → logprob: -16.501466751098633
    8. '[:-' → logprob: -16.501466751098633
    9. 'rstrip' → logprob: -16.501466751098633
    10. '.replace' → logprob: -16.751466751098633

Token 46: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002210596576333046
    2. '(' → logprob: -8.750221252441406
    3. '()`' → logprob: -10.625221252441406
    4. ' ()' → logprob: -11.625221252441406
    5. '`()' → logprob: -12.000221252441406
    6. '()"' → logprob: -12.125221252441406
    7. '()
' → logprob: -12.750221252441406
    8. '().' → logprob: -13.000221252441406
    9. '()+' → logprob: -13.125221252441406
    10. '())' → logprob: -13.500221252441406

Token 47: '   ' (ID: 271)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.0218231678009033
    2. '   ' → logprob: -1.1468231678009033
    3. 'result' → logprob: -1.5218231678009033
    4. ' if' → logprob: -3.7718231678009033
    5. ' total' → logprob: -4.021822929382324
    6. ' i' → logprob: -4.146822929382324
    7. 'total' → logprob: -4.646822929382324
    8. ' ' → logprob: -5.021822929382324
    9. 'n' → logprob: -5.146822929382324
    10. 'i' → logprob: -5.271822929382324

Token 48: ' if' (ID: 538)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.23939575254917145
    2. 'total' → logprob: -1.7393957376480103
    3. 'res' → logprob: -4.864395618438721
    4. ' result' → logprob: -5.114395618438721
    5. 'num' → logprob: -5.239395618438721
    6. 'n' → logprob: -5.364395618438721
    7. 'i' → logprob: -5.614395618438721
    8. 'if' (adapté à ' if') → logprob: -5.864395618438721
    9. ' total' → logprob: -6.114395618438721
    10. 'value' → logprob: -6.239395618438721

Token 49: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.026101257652044296
    2. ' s' → logprob: -3.9011013507843018
    3. 'not' → logprob: -5.651101112365723
    4. 's' → logprob: -6.276101112365723
    5. ' ' → logprob: -8.901101112365723
    6. ' len' → logprob: -12.151101112365723
    7. ' ' → logprob: -12.401101112365723
    8. 'n't' → logprob: -14.401101112365723
    9. '	not' → logprob: -14.776101112365723
    10. 'len' → logprob: -14.776101112365723

Token 50: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.003189478302374482
    2. 's' → logprob: -5.753189563751221
    3. ' ' → logprob: -11.378189086914062
    4. ' ' → logprob: -16.128189086914062
    5. '<|end|>' → logprob: -16.753189086914062
    6. '_s' → logprob: -17.253189086914062
    7. '	s' → logprob: -17.628189086914062
    8. '<s' → logprob: -18.753189086914062
    9. ' line' → logprob: -19.003189086914062
    10. '<|end|>' → logprob: -19.690689086914062

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0026509284507483244
    2. ' :' → logprob: -6.002650737762451
    3. ':
' → logprob: -8.75265121459961
    4. ':return' → logprob: -11.62765121459961
    5. ' or' → logprob: -13.25265121459961
    6. ' break' → logprob: -13.50265121459961
    7. '.' → logprob: -13.87765121459961
    8. '```' → logprob: -14.00265121459961
    9. ' :
' → logprob: -14.37765121459961
    10. '):' → logprob: -15.37765121459961

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003231878508813679
    2. '   ' → logprob: -8.750323295593262
    3. ' break' → logprob: -9.625323295593262
    4. ':' → logprob: -10.000323295593262
    5. '    ' → logprob: -10.875323295593262
    6. '      ' → logprob: -12.375323295593262
    7. 'break' → logprob: -12.375323295593262
    8. '<|end|>' → logprob: -12.375323295593262
    9. '	break' → logprob: -12.875323295593262
    10. '    ' → logprob: -13.000323295593262

Token 53: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.03857635334134102
    2. 'break' → logprob: -3.288576364517212
    3. '   ' → logprob: -7.663576126098633
    4. '	break' → logprob: -10.163576126098633
    5. '    ' → logprob: -11.413576126098633
    6. ' continue' → logprob: -12.038576126098633
    7. '       ' → logprob: -12.538576126098633
    8. '```' → logprob: -12.663576126098633
    9. 'continue' (adapté à ' continue') → logprob: -13.413576126098633
    10. '_break' → logprob: -14.538576126098633

Token 54: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005761811044067144
    2. '    
' → logprob: -5.255761623382568
    3. '    ' → logprob: -8.005762100219727
    4. '   
' → logprob: -10.380762100219727
    5. '  ' → logprob: -10.505762100219727
    6. '
' → logprob: -10.880762100219727
    7. ':' → logprob: -11.005762100219727
    8. '<|end|>' → logprob: -11.005762100219727
    9. '     
' → logprob: -11.505762100219727
    10. '```' → logprob: -11.630762100219727

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026649056002497673
    2. '    
' → logprob: -4.026648998260498
    3. '    ' → logprob: -5.151648998260498
    4. 'n' → logprob: -7.901648998260498
    5. ' ' → logprob: -8.026649475097656
    6. '  ' → logprob: -8.151649475097656
    7. '   
' → logprob: -8.276649475097656
    8. '     
' → logprob: -8.401649475097656
    9. '<|end|>' → logprob: -8.526649475097656
    10. ' 
' → logprob: -8.776649475097656

Token 56: ' total' (ID: 3609)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.771305501461029
    2. 'total' (adapté à ' total') → logprob: -1.1463055610656738
    3. ' result' → logprob: -2.146305561065674
    4. ' total' → logprob: -2.646305561065674
    5. 'num' → logprob: -4.521305561065674
    6. 'res' → logprob: -4.771305561065674
    7. '   ' → logprob: -5.146305561065674
    8. 'n' → logprob: -6.521305561065674
    9. 'sum' → logprob: -6.896305561065674
    10. ' num' → logprob: -6.896305561065674

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3508981466293335
    2. ' +=' → logprob: -1.3508981466293335
    3. '=' → logprob: -3.350898265838623
    4. ' ' → logprob: -6.600898265838623
    5. '+=' → logprob: -7.850898265838623
    6. '<|end|>' → logprob: -10.100897789001465
    7. ' =)' → logprob: -10.850897789001465
    8. ' |=' → logprob: -10.975897789001465
    9. ' -=' → logprob: -11.975897789001465
    10. ' .=' → logprob: -12.100897789001465

Token 58: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011077186092734337
    2. ' ' → logprob: -4.511077404022217
    3. 'value' → logprob: -10.636076927185059
    4. ' value' → logprob: -12.511076927185059
    5. 'v' → logprob: -15.136076927185059
    6. '   ' → logprob: -15.261076927185059
    7. 'len' → logprob: -15.948576927185059
    8. 'sum' → logprob: -16.011077880859375
    9. 'val' → logprob: -16.073577880859375
    10. '  ' → logprob: -16.261077880859375

Token 59: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010597254149615765
    2. 'value' → logprob: -6.876059532165527
    3. ' ' → logprob: -10.626059532165527
    4. ' value' → logprob: -13.876059532165527
    5. 'len' → logprob: -14.876059532165527
    6. 'val' → logprob: -15.126059532165527
    7. '   ' → logprob: -15.251059532165527
    8. 'sum' → logprob: -15.626059532165527
    9. 'v' → logprob: -15.938559532165527
    10. '```' → logprob: -16.188560485839844

Token 60: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2386125326156616
    2. '   ' → logprob: -1.4886125326156616
    3. ' ' → logprob: -1.6136125326156616
    4. '<|end|>' → logprob: -2.238612651824951
    5. 'for' → logprob: -2.488612651824951
    6. ' i' → logprob: -2.988612651824951
    7. 'i' → logprob: -4.238612651824951
    8. '    ' → logprob: -5.113612651824951
    9. '_' → logprob: -5.238612651824951
    10. ' 
' → logprob: -5.363612651824951

Token 61: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1226056814193726
    2. ' for' → logprob: -1.7476056814193726
    3. '   ' → logprob: -1.9976056814193726
    4. '_' → logprob: -2.122605800628662
    5. 'for' → logprob: -2.497605800628662
    6. ' i' → logprob: -2.622605800628662
    7. 'i' → logprob: -2.997605800628662
    8. '<|end|>' → logprob: -3.997605800628662
    9. ' 
' → logprob: -5.372605800628662
    10. '    ' → logprob: -5.497605800628662

Token 62: ' prev' (ID: 10258)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08199881762266159
    2. 'i' → logprob: -2.581998825073242
    3. ' for' → logprob: -6.206998825073242
    4. 'prev' (adapté à ' prev') → logprob: -6.956998825073242
    5. ' i' → logprob: -9.081998825073242
    6. 'n' → logprob: -11.706998825073242
    7. 'previous' → logprob: -11.831998825073242
    8. '   ' → logprob: -13.081998825073242
    9. ' prev' → logprob: -14.081998825073242
    10. '_' → logprob: -14.206998825073242

Token 63: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.512985110282898
    2. '=' → logprob: -1.512985110282898
    3. '_val' → logprob: -2.1379852294921875
    4. ' =' → logprob: -3.2629852294921875
    5. '_value' → logprob: -4.1379852294921875
    6. '_=' → logprob: -5.1379852294921875
    7. '_char' → logprob: -5.8879852294921875
    8. '_v' → logprob: -9.137985229492188
    9. '=value' → logprob: -10.637985229492188
    10. 'value' → logprob: -10.762985229492188

Token 64: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.08944896562025e-05
    2. ' ' → logprob: -9.625081062316895
    3. '100' → logprob: -11.375081062316895
    4. 'value' → logprob: -13.750081062316895
    5. 'None' → logprob: -13.875081062316895
    6. 'float' → logprob: -14.500081062316895
    7. '-' → logprob: -15.750081062316895
    8. '1' → logprob: -16.000080108642578
    9. '10' → logprob: -16.125080108642578
    10. '999' → logprob: -16.250080108642578

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004665385349653661
    2. '100' → logprob: -7.750466346740723
    3. ' ' → logprob: -11.000466346740723
    4. 'float' → logprob: -11.500466346740723
    5. 'None' → logprob: -12.375466346740723
    6. '-' → logprob: -14.125466346740723
    7. '10' → logprob: -14.375466346740723
    8. ''' → logprob: -14.625466346740723
    9. 'M' → logprob: -14.625466346740723
    10. '1' → logprob: -14.750466346740723

Token 66: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21059563755989075
    2. '
' → logprob: -1.9605956077575684
    3. '    
' → logprob: -3.0855956077575684
    4. ' for' → logprob: -7.210595607757568
    5. '   
' → logprob: -7.210595607757568
    6. '<|end|>' → logprob: -7.585595607757568
    7. '  
' → logprob: -7.710595607757568
    8. 'for' → logprob: -8.085596084594727
    9. ' 
' → logprob: -8.710596084594727
    10. '
' → logprob: -8.960596084594727

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03762596845626831
    2. '    
' → logprob: -3.787626028060913
    3. '
' → logprob: -4.662625789642334
    4. ' for' → logprob: -6.537625789642334
    5. 'for' → logprob: -6.537625789642334
    6. '   
' → logprob: -6.912625789642334
    7. '<|end|>' → logprob: -8.412626266479492
    8. '' → logprob: -8.912626266479492
    9. '```' → logprob: -9.287626266479492
    10. '  
' → logprob: -9.412626266479492

Token 68: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004633995704352856
    2. ' for' → logprob: -5.629633903503418
    3. '   ' → logprob: -6.879633903503418
    4. '    
' → logprob: -13.879633903503418
    5. '```' → logprob: -13.879633903503418
    6. 'i' → logprob: -14.004633903503418
    7. '	for' → logprob: -14.504633903503418
    8. '
' → logprob: -15.004633903503418
    9. ' ' → logprob: -15.004633903503418
    10. 'n' → logprob: -15.254633903503418

Token 69: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.4484917223453522
    2. 'c' → logprob: -1.4484916925430298
    3. ' i' → logprob: -2.6984918117523193
    4. 'char' → logprob: -4.07349157333374
    5. ' char' → logprob: -4.19849157333374
    6. 'i' → logprob: -4.19849157333374
    7. 'ch' → logprob: -5.32349157333374
    8. ' ' → logprob: -5.57349157333374
    9. ' ch' → logprob: -6.19849157333374
    10. '  ' → logprob: -8.323492050170898

Token 70: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048906631767749786
    2. 'in' → logprob: -3.0489065647125244
    3. ' ' → logprob: -8.548906326293945
    4. 'n' → logprob: -9.923906326293945
    5. 's' → logprob: -10.798906326293945
    6. '  ' → logprob: -10.798906326293945
    7. ' i' → logprob: -11.673906326293945
    8. '	in' → logprob: -12.173906326293945
    9. 'i' → logprob: -12.548906326293945
    10. '   ' → logprob: -12.548906326293945

Token 71: ' reversed' (ID: 57184)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3542631268501282
    2. ' s' → logprob: -1.2292630672454834
    3. ' reversed' → logprob: -5.2292633056640625
    4. 're' → logprob: -7.8542633056640625
    5. ' range' → logprob: -10.979263305664062
    6. 'range' → logprob: -11.104263305664062
    7. ' ' → logprob: -11.854263305664062
    8. '[::-' → logprob: -12.104263305664062
    9. '	s' → logprob: -13.041763305664062
    10. 'reverse' → logprob: -13.291763305664062

Token 72: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -6.992775888647884e-05
    2. 's' → logprob: -10.250069618225098
    3. '(' → logprob: -10.375069618225098
    4. ' (' → logprob: -13.000069618225098
    5. ' s' → logprob: -13.875069618225098
    6. '(
' → logprob: -17.125070571899414
    7. ' ' → logprob: -18.125070571899414
    8. ')' → logprob: -18.625070571899414
    9. '   ' → logprob: -19.000070571899414
    10. '(str' → logprob: -19.250070571899414

Token 73: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00021021578868385404
    2. '):
' → logprob: -9.00020980834961
    3. ')' → logprob: -9.87520980834961
    4. ' ):' → logprob: -10.75020980834961
    5. ':' → logprob: -11.87520980834961
    6. '   ' → logprob: -12.50020980834961
    7. ''):' → logprob: -14.25020980834961
    8. '}:' → logprob: -14.37520980834961
    9. '):
' → logprob: -14.75020980834961
    10. '>):' → logprob: -15.75020980834961

Token 74: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5111973881721497
    2. '       ' → logprob: -1.3861973285675049
    3. '<|end|>' → logprob: -2.386197328567505
    4. '    ' → logprob: -3.511197328567505
    5. '```' → logprob: -5.011197566986084
    6. '    
' → logprob: -5.136197566986084
    7. ' token' → logprob: -5.636197566986084
    8. 'token' → logprob: -6.386197566986084
    9. '  ' → logprob: -6.511197566986084
    10. ' ' → logprob: -6.511197566986084

Token 75: ' curr' (ID: 10495)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5553773641586304
    2. ' v' → logprob: -2.30537748336792
    3. 'val' → logprob: -2.55537748336792
    4. '   ' → logprob: -2.68037748336792
    5. 'curr' (adapté à ' curr') → logprob: -2.80537748336792
    6. 'cur' → logprob: -3.05537748336792
    7. ' val' → logprob: -3.93037748336792
    8. 'current' → logprob: -4.05537748336792
    9. ' curr' → logprob: -4.68037748336792
    10. 'num' → logprob: -4.93037748336792

Token 76: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16025103628635406
    2. ' =' → logprob: -1.9102510213851929
    3. '=value' → logprob: -10.535250663757324
    4. '=int' → logprob: -16.03525161743164
    5. 'value' → logprob: -16.28525161743164
    6. '=

' → logprob: -17.41025161743164
    7. ' ' → logprob: -17.53525161743164
    8. '＝' → logprob: -17.53525161743164
    9. '=}' → logprob: -18.16025161743164
    10. ')' → logprob: -18.53525161743164

Token 77: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.28115198016166687
    2. 'value' → logprob: -1.4061520099639893
    3. ' ' → logprob: -14.65615177154541
    4. ')value' → logprob: -15.15615177154541
    5. ''value' → logprob: -15.28115177154541
    6. '"value' → logprob: -15.40615177154541
    7. '	value' → logprob: -16.031152725219727
    8. '$value' → logprob: -16.281152725219727
    9. '```' → logprob: -16.531152725219727
    10. 'Value' → logprob: -16.531152725219727

Token 78: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -7.896309739408025e-07
    2. '.get' → logprob: -14.625000953674316
    3. '[' → logprob: -15.500000953674316
    4. '[get' → logprob: -17.375
    5. '[C' → logprob: -20.25
    6. '[value' → logprob: -20.75
    7. '[s' → logprob: -20.75
    8. ' [' → logprob: -21.25
    9. '[f' → logprob: -21.25
    10. '```' → logprob: -21.5

Token 79: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0063315145671367645
    2. ' ]' → logprob: -5.506331443786621
    3. ']
' → logprob: -6.131331443786621
    4. ' ]
' → logprob: -10.131331443786621
    5. ']
' → logprob: -11.131331443786621
    6. '']' → logprob: -11.381331443786621
    7. ']

' → logprob: -12.006331443786621
    8. ')' → logprob: -13.506331443786621
    9. ' ]
' → logprob: -14.381331443786621
    10. ']>' → logprob: -14.631331443786621

Token 80: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21621407568454742
    2. '       ' → logprob: -1.7162140607833862
    3. '<|end|>' → logprob: -5.216214179992676
    4. ' if' → logprob: -5.341214179992676
    5. '
' → logprob: -6.341214179992676
    6. 'if' → logprob: -6.966214179992676
    7. '    ' → logprob: -7.466214179992676
    8. '  ' → logprob: -8.466214179992676
    9. '           ' → logprob: -8.591214179992676
    10. '    
' → logprob: -8.716214179992676

Token 81: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03619995713233948
    2. ' if' → logprob: -3.6612000465393066
    3. '       ' → logprob: -5.411200046539307
    4. '   ' → logprob: -5.411200046539307
    5. '<|end|>' → logprob: -7.661200046539307
    6. '    ' → logprob: -9.286199569702148
    7. ')' → logprob: -9.661199569702148
    8. '```' → logprob: -9.786199569702148
    9. '           ' → logprob: -10.036199569702148
    10. '	if' → logprob: -10.161199569702148

Token 82: ' curr' (ID: 10495)
  Prédit: ' curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' curr' → logprob: -0.062118254601955414
    2. 'curr' → logprob: -2.8121182918548584
    3. '	curr' → logprob: -8.937118530273438
    4. '(curr' → logprob: -11.812118530273438
    5. '[curr' → logprob: -12.312118530273438
    6. ' ' → logprob: -12.562118530273438
    7. '_curr' → logprob: -13.937118530273438
    8. 'Curr' → logprob: -14.437118530273438
    9. '.curr' → logprob: -14.812118530273438
    10. ' ' → logprob: -14.812118530273438

Token 83: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3551514148712158
    2. '>=' → logprob: -1.6051514148712158
    3. ' <' → logprob: -2.605151414871216
    4. ' >=' → logprob: -3.730151414871216
    5. ']>=' → logprob: -10.230151176452637
    6. '>' → logprob: -10.605151176452637
    7. '<int' → logprob: -10.730151176452637
    8. ' ' → logprob: -10.855151176452637
    9. '```' → logprob: -10.855151176452637
    10. ')>=' → logprob: -10.980151176452637

Token 84: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.0007156503852456808
    2. ' prev' → logprob: -7.250715732574463
    3. '	prev' → logprob: -12.125715255737305
    4. '(prev' → logprob: -16.375715255737305
    5. '_prev' → logprob: -16.375715255737305
    6. ' ' → logprob: -17.750715255737305
    7. '.prev' → logprob: -17.875715255737305
    8. 'previous' → logprob: -18.875715255737305
    9. 'pre' → logprob: -19.375715255737305
    10. 'Prev' → logprob: -19.375715255737305

Token 85: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017488420708104968
    2. ':
' → logprob: -6.501749038696289
    3. ' :' → logprob: -8.376749038696289
    4. '):' → logprob: -12.001749038696289
    5. '<|end|>' → logprob: -13.251749038696289
    6. '>:' → logprob: -13.501749038696289
    7. ':return' → logprob: -13.501749038696289
    8. ':
' → logprob: -13.876749038696289
    9. '_:' → logprob: -14.001749038696289
    10. ':

' → logprob: -14.376749038696289

Token 86: '           ' (ID: 352)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.45201653242111206
    2. '-' → logprob: -1.4520165920257568
    3. '           ' → logprob: -2.327016592025757
    4. '       ' → logprob: -4.702016353607178
    5. 'total' → logprob: -4.952016353607178
    6. '<|end|>' → logprob: -5.077016353607178
    7. ' total' → logprob: -5.577016353607178
    8. '-total' → logprob: -6.202016353607178
    9. ':' → logprob: -7.202016353607178
    10. '<|end|>' → logprob: -7.577016353607178

Token 87: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.45237618684768677
    2. ' total' → logprob: -1.327376127243042
    3. '-' → logprob: -2.577376127243042
    4. ' -' → logprob: -4.202376365661621
    5. '-total' → logprob: -4.952376365661621
    6. '           ' → logprob: -8.702376365661621
    7. '	total' → logprob: -8.827376365661621
    8. '<|end|>' → logprob: -9.202376365661621
    9. ' -=' → logprob: -9.577376365661621
    10. '(total' → logprob: -9.702376365661621

Token 88: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.013448080979287624
    2. '-=' → logprob: -4.388448238372803
    3. '<|end|>' → logprob: -7.763448238372803
    4. '-' → logprob: -8.263447761535645
    5. ' -' → logprob: -8.388447761535645
    6. '<|end|>' → logprob: -11.638447761535645
    7. ' +=' → logprob: -12.388447761535645
    8. ')' → logprob: -13.388447761535645
    9. '```' → logprob: -13.388447761535645
    10. 'subtract' → logprob: -13.513447761535645

Token 89: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.005945391021668911
    2. ' curr' → logprob: -5.130945205688477
    3. '	curr' → logprob: -11.380945205688477
    4. '[curr' → logprob: -12.630945205688477
    5. '(curr' → logprob: -13.880945205688477
    6. '_curr' → logprob: -14.505945205688477
    7. 'c' → logprob: -15.380945205688477
    8. '<|end|>' → logprob: -15.630945205688477
    9. '.curr' → logprob: -15.880945205688477
    10. ' ' → logprob: -16.380945205688477

Token 90: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41451701521873474
    2. 'else' → logprob: -1.7895170450210571
    3. ' else' → logprob: -1.7895170450210571
    4. '<|end|>' → logprob: -5.414516925811768
    5. '   ' → logprob: -8.414517402648926
    6. '
' → logprob: -8.789517402648926
    7. ')' → logprob: -9.289517402648926
    8. '	else' → logprob: -9.289517402648926
    9. '```' → logprob: -9.914517402648926
    10. ' 
' → logprob: -10.414517402648926

Token 91: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3651885390281677
    2. 'else' → logprob: -1.6151885986328125
    3. ' else' → logprob: -2.2401885986328125
    4. '   ' → logprob: -7.9901885986328125
    5. '```' → logprob: -8.740188598632812
    6. '	else' → logprob: -9.990188598632812
    7. '<|end|>' → logprob: -10.365188598632812
    8. '
' → logprob: -10.615188598632812
    9. '}else' → logprob: -12.490188598632812
    10. '	' → logprob: -12.490188598632812

Token 92: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.08812576532363892
    2. ' else' → logprob: -2.588125705718994
    3. '       ' → logprob: -4.713125705718994
    4. '   ' → logprob: -8.463126182556152
    5. '	else' → logprob: -12.463126182556152
    6. '```' → logprob: -13.713126182556152
    7. '_else' → logprob: -15.963126182556152
    8. ':
' → logprob: -16.338125228881836
    9. '           ' → logprob: -16.713125228881836
    10. '<|end|>' → logprob: -16.713125228881836

Token 93: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.042633261531591415
    2. ':
' → logprob: -3.292633295059204
    3. '           ' → logprob: -6.292633056640625
    4. '<|end|>' → logprob: -6.542633056640625
    5. ' :' → logprob: -7.667633056640625
    6. '       ' → logprob: -8.417633056640625
    7. ' :
' → logprob: -8.667633056640625
    8. ' total' → logprob: -8.917633056640625
    9. '        ' → logprob: -9.167633056640625
    10. '   ' → logprob: -10.167633056640625

Token 94: '           ' (ID: 352)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.6269265413284302
    2. '           ' → logprob: -0.8769265413284302
    3. 'total' → logprob: -3.0019264221191406
    4. '   ' → logprob: -12.25192642211914
    5. '	total' → logprob: -12.50192642211914
    6. ' ' → logprob: -13.12692642211914
    7. ' ' → logprob: -13.62692642211914
    8. '       ' → logprob: -13.87692642211914
    9. '          ' → logprob: -14.00192642211914
    10. '               ' → logprob: -14.12692642211914

Token 95: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.011116914451122284
    2. ' total' → logprob: -4.511116981506348
    3. '           ' → logprob: -9.636116981506348
    4. '       ' → logprob: -13.136116981506348
    5. '	total' → logprob: -13.761116981506348
    6. '   ' → logprob: -14.761116981506348
    7. ' ' → logprob: -14.886116981506348
    8. 'Total' → logprob: -17.26111602783203
    9. '  ' → logprob: -17.51111602783203
    10. '$total' → logprob: -18.51111602783203

Token 96: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31423747539520264
    2. ' +=' → logprob: -1.3142374753952026
    3. '=' → logprob: -6.939237594604492
    4. ' =' → logprob: -12.064237594604492
    5. ']+=' → logprob: -15.689237594604492
    6. '+' → logprob: -16.064237594604492
    7. ' ' → logprob: -16.439237594604492
    8. '+=(' → logprob: -17.564237594604492
    9. '+="' → logprob: -17.939237594604492
    10. ' ' → logprob: -18.064237594604492

Token 97: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.0007099286303855479
    2. ' curr' → logprob: -7.2507100105285645
    3. '	curr' → logprob: -16.875709533691406
    4. '(curr' → logprob: -18.125709533691406
    5. '[curr' → logprob: -19.500709533691406
    6. 'c' → logprob: -19.875709533691406
    7. 'cur' → logprob: -20.250709533691406
    8. ' ' → logprob: -20.375709533691406
    9. '   ' → logprob: -20.625709533691406
    10. '_curr' → logprob: -21.125709533691406

Token 98: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010207825107499957
    2. '   ' → logprob: -7.751020908355713
    3. 'prev' → logprob: -7.876020908355713
    4. '           ' → logprob: -8.626020431518555
    5. ' prev' → logprob: -10.501020431518555
    6. '	prev' → logprob: -14.251020431518555
    7. '      ' → logprob: -14.376020431518555
    8. '
' → logprob: -14.876020431518555
    9. '     ' → logprob: -15.251020431518555
    10. ' ' → logprob: -15.251020431518555

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014342490583658218
    2. '   ' → logprob: -4.389342308044434
    3. 'prev' → logprob: -6.514342308044434
    4. ' prev' → logprob: -8.514342308044434
    5. '           ' → logprob: -8.889342308044434
    6. '	prev' → logprob: -12.764342308044434
    7. ' ' → logprob: -13.514342308044434
    8. '      ' → logprob: -13.514342308044434
    9. '     ' → logprob: -13.889342308044434
    10. '    ' → logprob: -14.264342308044434

Token 100: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -0.45088067650794983
    2. '       ' → logprob: -1.4508806467056274
    3. ' prev' → logprob: -2.575880765914917
    4. '   ' → logprob: -2.950880765914917
    5. '	prev' → logprob: -9.200881004333496
    6. ' ' → logprob: -10.450881004333496
    7. '           ' → logprob: -10.825881004333496
    8. '  ' → logprob: -11.450881004333496
    9. '.prev' → logprob: -11.575881004333496
    10. '(prev' → logprob: -12.200881004333496

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011047814972698689
    2. '=' → logprob: -4.511047840118408
    3. ' ' → logprob: -17.76104736328125
    4. '＝' → logprob: -19.01104736328125
    5. ' =
' → logprob: -20.51104736328125
    6. ' =)' → logprob: -20.63604736328125
    7. ' ' → logprob: -21.38604736328125
    8. '<|end|>' → logprob: -21.38604736328125
    9. ',' → logprob: -21.63604736328125
    10. ' |=' → logprob: -21.63604736328125

Token 102: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.0009118211455643177
    2. ' curr' → logprob: -7.000911712646484
    3. '	curr' → logprob: -15.500911712646484
    4. '[curr' → logprob: -16.625911712646484
    5. '(curr' → logprob: -17.125911712646484
    6. '   ' → logprob: -19.000911712646484
    7. ' ' → logprob: -19.250911712646484
    8. 'c' → logprob: -19.375911712646484
    9. 'Curr' → logprob: -19.750911712646484
    10. 'cur' → logprob: -20.000911712646484

Token 103: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4231593608856201
    2. 'print' → logprob: -1.2981593608856201
    3. '   ' → logprob: -2.67315936088562
    4. ' print' → logprob: -6.423159599304199
    5. '```' → logprob: -7.048159599304199
    6. '
' → logprob: -8.6731595993042
    7. '    
' → logprob: -8.9231595993042
    8. '<|end|>' → logprob: -9.5481595993042
    9. '  
' → logprob: -10.1731595993042
    10. '\n' → logprob: -11.0481595993042

Token 104: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016031786799430847
    2. '   ' → logprob: -4.266031742095947
    3. ' print' → logprob: -6.516031742095947
    4. '```' → logprob: -8.391032218933105
    5. '
' → logprob: -8.766032218933105
    6. '    
' → logprob: -13.266032218933105
    7. '	print' → logprob: -14.516032218933105
    8. '``' → logprob: -14.641032218933105
    9. '#print' → logprob: -15.516032218933105
    10. '  
' → logprob: -15.516032218933105

Token 105: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00044103997061029077
    2. '   ' → logprob: -7.750441074371338
    3. ' print' → logprob: -11.50044059753418
    4. '```' → logprob: -15.37544059753418
    5. '	print' → logprob: -20.12544059753418
    6. '
' → logprob: -21.00044059753418
    7. '``' → logprob: -21.37544059753418
    8. '#print' → logprob: -21.50044059753418
    9. '    
' → logprob: -21.62544059753418
    10. ' ' → logprob: -21.87544059753418

Token 106: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.0004444931691978127
    2. '(' → logprob: -7.750444412231445
    3. 'total' → logprob: -11.250444412231445
    4. '()' → logprob: -14.875444412231445
    5. ' (' → logprob: -15.750444412231445
    6. ' total' → logprob: -16.000444412231445
    7. '(f' → logprob: -16.375444412231445
    8. '(t' → logprob: -17.500444412231445
    9. '('' → logprob: -17.750444412231445
    10. '(int' → logprob: -17.875444412231445

Token 107: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -14.750000953674316
    3. ')
' → logprob: -15.750000953674316
    4. ')`' → logprob: -17.25
    5. '))' → logprob: -18.375
    6. '`)' → logprob: -19.25
    7. '')' → logprob: -20.375
    8. ')}' → logprob: -20.625
    9. ')**' → logprob: -21.0
    10. '()' → logprob: -21.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 105
Tokens correctement prédits (1ère position, stricte): 45
Tokens correctement prédits (1ère position, avec adaptation): 52
Tokens correctement prédits (top 10): 99
Précision stricte (1ère position): 42.86%
Précision adaptée (1ère position): 49.52%
Précision (top 10): 94.29%
================================================================================
