================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
m=int(input())
for _ in range(m):
    s=input()
    n=len(s)
    res=set()
    for i in range(1,n):
        a,b=s[:i],s[i:]
        a_rev,a_flip=a,a[::-1]
        b_rev,b_flip=b,b[::-1]
        res.add(a+b)
        res.add(a+b_rev)
        res.add(a_rev+b)
        res.add(a_rev+b_rev)
        res.add(b+a)
        res.add(b+a_rev)
        res.add(b_rev+a)
        res.add(b_rev+a_rev)
    print(len(res))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'm' (ID: 76)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5081713199615479
    2. '(' → logprob: -1.0081713199615479
    3. '()' → logprob: -3.883171319961548
    4. '())' → logprob: -5.258171081542969
    5. '```' → logprob: -6.383171081542969
    6. '")' → logprob: -6.633171081542969
    7. '(
' → logprob: -6.883171081542969
    8. '`' → logprob: -7.508171081542969
    9. '')' → logprob: -7.633171081542969
    10. ''' → logprob: -7.633171081542969

Token 4: 'for' (ID: 1938)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7348745465278625
    2. '*' → logprob: -1.7348744869232178
    3. '\n' → logprob: -1.8598744869232178
    4. '#' → logprob: -3.1098744869232178
    5. 'if' → logprob: -3.4848744869232178
    6. 'i' → logprob: -3.8598744869232178
    7. ''' → logprob: -4.359874725341797
    8. ' ' → logprob: -4.359874725341797
    9. '%' → logprob: -4.484874725341797
    10. '`' → logprob: -4.734874725341797

Token 5: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01426446158438921
    2. '  ' → logprob: -4.5142645835876465
    3. ' i' → logprob: -5.7642645835876465
    4. ' m' → logprob: -11.139264106750488
    5. 'i' → logprob: -11.139264106750488
    6. ' ' → logprob: -11.764264106750488
    7. ' n' → logprob: -11.889264106750488
    8. '_' → logprob: -12.264264106750488
    9. ' ‌' → logprob: -12.389264106750488
    10. ''' → logprob: -12.889264106750488

Token 6: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008888612501323223
    2. 'in' → logprob: -4.7588887214660645
    3. ' ' → logprob: -8.258888244628906
    4. 'range' → logprob: -12.508888244628906
    5. '  ' → logprob: -13.008888244628906
    6. ' i' → logprob: -13.133888244628906
    7. 'n' → logprob: -13.758888244628906
    8. 'space' → logprob: -14.258888244628906
    9. 'import' → logprob: -14.258888244628906
    10. ' range' → logprob: -14.383888244628906

Token 7: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759485960006714
    2. 'range' → logprob: -0.8259485960006714
    3. ' ' → logprob: -12.075948715209961
    4. '	range' → logprob: -13.200948715209961
    5. '_range' → logprob: -14.700948715209961
    6. '(range' → logprob: -15.075948715209961
    7. ' m' → logprob: -15.200948715209961
    8. 'm' → logprob: -15.575948715209961
    9. ' xrange' → logprob: -15.700948715209961
    10. 'rang' → logprob: -16.20094871520996

Token 8: '(m' (ID: 2145)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009240844519808888
    2. ' (' → logprob: -7.250924110412598
    3. '(m' → logprob: -8.500924110412598
    4. '(n' → logprob: -11.750924110412598
    5. '(range' → logprob: -13.125924110412598
    6. '(
' → logprob: -15.125924110412598
    7. '(len' → logprob: -15.125924110412598
    8. '((' → logprob: -16.87592315673828
    9. '(int' → logprob: -17.00092315673828
    10. '(s' → logprob: -17.12592315673828

Token 9: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12007150799036026
    2. ')' → logprob: -2.4950714111328125
    3. ':' → logprob: -3.4950714111328125
    4. ':)' → logprob: -8.245071411132812
    5. ' ):' → logprob: -11.120071411132812
    6. '):
' → logprob: -12.120071411132812
    7. ' :' → logprob: -12.495071411132812
    8. ' )' → logprob: -12.995071411132812
    9. ''):' → logprob: -13.370071411132812
    10. ':**' → logprob: -13.370071411132812

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016261448618024588
    2. '    
' → logprob: -7.001626014709473
    3. 'n' → logprob: -8.751626014709473
    4. ' ' → logprob: -9.251626014709473
    5. '```' → logprob: -9.376626014709473
    6. 'input' → logprob: -9.626626014709473
    7. ' input' → logprob: -9.626626014709473
    8. '    ' → logprob: -9.876626014709473
    9. 'a' → logprob: -10.376626014709473
    10. '  ' → logprob: -10.751626014709473

Token 11: ' s' (ID: 265)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.525061309337616
    2. '   ' → logprob: -1.6500613689422607
    3. 'x' → logprob: -2.0250613689422607
    4. 'a' → logprob: -3.1500613689422607
    5. ' n' → logprob: -4.400061130523682
    6. 'i' → logprob: -4.900061130523682
    7. 'num' → logprob: -5.275061130523682
    8. 's' (adapté à ' s') → logprob: -6.025061130523682
    9. 'data' → logprob: -6.275061130523682
    10. 't' → logprob: -6.400061130523682

Token 12: '=input' (ID: 87911)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6343806385993958
    2. '=input' → logprob: -1.259380578994751
    3. ' =' → logprob: -2.009380578994751
    4. '.' → logprob: -3.509380578994751
    5. 'tr' → logprob: -4.50938081741333
    6. 'trip' → logprob: -5.63438081741333
    7. ',' → logprob: -6.38438081741333
    8. ' ' → logprob: -6.50938081741333
    9. 'input' → logprob: -6.88438081741333
    10. '[' → logprob: -8.009380340576172

Token 13: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2533642053604126
    2. '()' → logprob: -1.5033642053604126
    3. '('' → logprob: -7.753364086151123
    4. ')' → logprob: -7.753364086151123
    5. '("("' → logprob: -9.003364562988281
    6. ' ' → logprob: -9.503364562988281
    7. '```' → logprob: -9.878364562988281
    8. '().' → logprob: -10.128364562988281
    9. '   ' → logprob: -10.128364562988281
    10. '())' → logprob: -10.253364562988281

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09107445925474167
    2. ' if' → logprob: -3.2160744667053223
    3. 'if' → logprob: -3.9660744667053223
    4. ' ' → logprob: -4.966074466705322
    5. 'i' → logprob: -5.841074466705322
    6. '    ' → logprob: -5.966074466705322
    7. '[' → logprob: -5.966074466705322
    8. ')' → logprob: -6.341074466705322
    9. 'a' → logprob: -6.466074466705322
    10. ':' → logprob: -6.591074466705322

Token 15: ' n' (ID: 297)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6686314940452576
    2. 'i' → logprob: -2.4186315536499023
    3. 'n' (adapté à ' n') → logprob: -2.5436315536499023
    4. 'count' → logprob: -2.9186315536499023
    5. 'a' → logprob: -3.0436315536499023
    6. 'c' → logprob: -3.5436315536499023
    7. '=' → logprob: -3.7936315536499023
    8. ' if' → logprob: -3.9186315536499023
    9. '   ' → logprob: -4.043631553649902
    10. 'd' → logprob: -4.043631553649902

Token 16: '=len' (ID: 114011)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01607859693467617
    2. ' =' → logprob: -4.641078472137451
    3. '=int' → logprob: -5.766078472137451
    4. '=len' → logprob: -5.766078472137451
    5. '_' → logprob: -12.01607894897461
    6. '=n' → logprob: -12.14107894897461
    7. '=[]' → logprob: -12.64107894897461
    8. ' ' → logprob: -13.01607894897461
    9. '=i' → logprob: -13.01607894897461
    10. '=input' → logprob: -13.01607894897461

Token 17: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.002479700604453683
    2. '(' → logprob: -6.002479553222656
    3. 's' → logprob: -13.002479553222656
    4. '(n' → logprob: -13.502479553222656
    5. '(
' → logprob: -15.752479553222656
    6. ' (' → logprob: -15.877479553222656
    7. '(S' → logprob: -18.002479553222656
    8. '(

' → logprob: -18.127479553222656
    9. '(x' → logprob: -18.252479553222656
    10. '(str' → logprob: -18.377479553222656

Token 18: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9623810658231378e-05
    2. ' )' → logprob: -12.000020027160645
    3. ')
' → logprob: -12.625020027160645
    4. '   ' → logprob: -12.875020027160645
    5. ')n' → logprob: -13.250020027160645
    6. '))' → logprob: -13.625020027160645
    7. '[' → logprob: -14.000020027160645
    8. '+' → logprob: -15.000020027160645
    9. '`)' → logprob: -15.000020027160645
    10. '-' → logprob: -15.000020027160645

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060573793947696686
    2. ')' → logprob: -3.8105738162994385
    3. '_' → logprob: -4.185573577880859
    4. ' ' → logprob: -5.185573577880859
    5. 'for' → logprob: -6.060573577880859
    6. 'i' → logprob: -6.435573577880859
    7. '[' → logprob: -6.560573577880859
    8. 'if' → logprob: -6.560573577880859
    9. 'dp' → logprob: -7.060573577880859
    10. '    ' → logprob: -7.060573577880859

Token 20: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45439568161964417
    2. 'i' → logprob: -2.0793957710266113
    3. '_' → logprob: -2.3293957710266113
    4. 'd' → logprob: -3.0793957710266113
    5. 'if' → logprob: -4.079395771026611
    6. 'p' → logprob: -4.079395771026611
    7. 'a' → logprob: -4.079395771026611
    8. 'for' → logprob: -4.704395771026611
    9. ')' → logprob: -4.829395771026611
    10. 'c' → logprob: -5.204395771026611

Token 21: '=set' (ID: 166509)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1576492339372635
    2. ' =' → logprob: -2.157649278640747
    3. '=[]' → logprob: -3.532649278640747
    4. '={}' → logprob: -7.157649040222168
    5. '=[' → logprob: -9.907649040222168
    6. ' =[' → logprob: -10.407649040222168
    7. '=''' → logprob: -10.782649040222168
    8. '=[]
' → logprob: -10.907649040222168
    9. ' +=' → logprob: -10.907649040222168
    10. '=""' → logprob: -10.907649040222168

Token 22: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06209899112582207
    2. '(' → logprob: -2.812098979949951
    3. '(s' → logprob: -9.43709945678711
    4. '([]' → logprob: -11.18709945678711
    5. '([' → logprob: -11.56209945678711
    6. ' ()' → logprob: -12.31209945678711
    7. '((' → logprob: -12.68709945678711
    8. '()
' → logprob: -13.06209945678711
    9. '([(' → logprob: -13.18709945678711
    10. '(),' → logprob: -13.43709945678711

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03243134543299675
    2. '<|end|>' → logprob: -3.7824313640594482
    3. ' ' → logprob: -6.407431125640869
    4. '    
' → logprob: -6.657431125640869
    5. 'for' → logprob: -7.032431125640869
    6. ' for' → logprob: -7.032431125640869
    7. ')' → logprob: -7.032431125640869
    8. '  ' → logprob: -7.157431125640869
    9. '<|end|>' → logprob: -7.407431125640869
    10. '    ' → logprob: -7.782431125640869

Token 24: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.48074212670326233
    2. ' for' → logprob: -1.23074209690094
    3. '   ' → logprob: -2.6057422161102295
    4. ')' → logprob: -4.73074197769165
    5. ' ' → logprob: -5.85574197769165
    6. ':' → logprob: -7.60574197769165
    7. '<|end|>' → logprob: -7.73074197769165
    8. '_' → logprob: -7.85574197769165
    9. '(' → logprob: -7.98074197769165
    10. '```' → logprob: -8.105742454528809

Token 25: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.024800579994916916
    2. ' j' → logprob: -3.7748005390167236
    3. 'i' → logprob: -6.899800777435303
    4. 'j' → logprob: -8.524800300598145
    5. ' ' → logprob: -8.774800300598145
    6. ' l' → logprob: -8.899800300598145
    7. ' length' → logprob: -10.524800300598145
    8. ' _' → logprob: -11.899800300598145
    9. ' L' → logprob: -12.899800300598145
    10. ' range' → logprob: -13.024800300598145

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25682055950164795
    2. 'in' → logprob: -1.506820559501648
    3. ' ' → logprob: -5.3818206787109375
    4. ')' → logprob: -9.256820678710938
    5. '  ' → logprob: -9.381820678710938
    6. '<|end|>' → logprob: -10.881820678710938
    7. '	in' → logprob: -11.506820678710938
    8. '   ' → logprob: -11.756820678710938
    9. 'range' → logprob: -11.756820678710938
    10. '(' → logprob: -12.256820678710938

Token 27: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2519383430480957
    2. 'range' → logprob: -1.5019383430480957
    3. ' ' → logprob: -12.001937866210938
    4. 'n' → logprob: -13.501937866210938
    5. 's' → logprob: -14.501937866210938
    6. ' n' → logprob: -15.126937866210938
    7. '	range' → logprob: -15.501937866210938
    8. '   ' → logprob: -15.751937866210938
    9. ' s' → logprob: -15.876937866210938
    10. ')' → logprob: -16.001937866210938

Token 28: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.07905921339988708
    2. '(' → logprob: -2.57905912399292
    3. ' (' → logprob: -8.704059600830078
    4. ' ' → logprob: -13.579059600830078
    5. 'n' → logprob: -14.079059600830078
    6. '(i' → logprob: -14.579059600830078
    7. ' n' → logprob: -15.454059600830078
    8. '(s' → logprob: -15.579059600830078
    9. '(len' → logprob: -15.704059600830078
    10. '()' → logprob: -15.829059600830078

Token 29: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001508674118667841
    2. '1' → logprob: -7.251508712768555
    3. ' n' → logprob: -7.251508712768555
    4. '0' → logprob: -9.626508712768555
    5. '(n' → logprob: -12.001508712768555
    6. ' ' → logprob: -12.126508712768555
    7. '   ' → logprob: -12.251508712768555
    8. ')n' → logprob: -12.751508712768555
    9. '	n' → logprob: -13.626508712768555
    10. ')' → logprob: -13.751508712768555

Token 30: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11024699360132217
    2. ',n' → logprob: -2.3602468967437744
    3. ' ,' → logprob: -4.6102471351623535
    4. ',len' → logprob: -10.485246658325195
    5. '   ' → logprob: -12.610246658325195
    6. ' ' → logprob: -12.610246658325195
    7. 'n' → logprob: -13.235246658325195
    8. ' n' → logprob: -14.235246658325195
    9. '  ' → logprob: -14.860246658325195
    10. ',
' → logprob: -14.985246658325195

Token 31: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07083151489496231
    2. '+' → logprob: -2.820831537246704
    3. '-' → logprob: -5.695831298828125
    4. '//' → logprob: -5.820831298828125
    5. '):
' → logprob: -6.445831298828125
    6. ' ):' → logprob: -7.570831298828125
    7. '   ' → logprob: -8.820831298828125
    8. ' +' → logprob: -9.445831298828125
    9. ' //' → logprob: -10.445831298828125
    10. ':' → logprob: -10.445831298828125

Token 32: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20000655949115753
    2. ' for' → logprob: -2.4500064849853516
    3. '   ' → logprob: -3.0750064849853516
    4. '    ' → logprob: -3.3250064849853516
    5. 'for' → logprob: -5.200006484985352
    6. ' ' → logprob: -5.825006484985352
    7. ' if' → logprob: -6.325006484985352
    8. '<|end|>' → logprob: -7.200006484985352
    9. 'if' → logprob: -8.075006484985352
    10. '  ' → logprob: -8.200006484985352

Token 33: ' a' (ID: 261)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3439461290836334
    2. ' if' → logprob: -2.0939462184906006
    3. 'for' → logprob: -2.2189462184906006
    4. 'if' → logprob: -3.4689462184906006
    5. '   ' → logprob: -4.2189459800720215
    6. ' res' → logprob: -5.0939459800720215
    7. 'res' → logprob: -6.7189459800720215
    8. '    ' → logprob: -6.7189459800720215
    9. '       ' → logprob: -7.0939459800720215
    10. ' s' → logprob: -7.2189459800720215

Token 34: ',b' (ID: 17568)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24679289758205414
    2. '=' → logprob: -1.7467929124832153
    3. '=s' → logprob: -3.996792793273926
    4. ',' → logprob: -4.121792793273926
    5. '=a' → logprob: -5.246792793273926
    6. ',b' → logprob: -6.621792793273926
    7. ',s' → logprob: -7.496792793273926
    8. '=b' → logprob: -7.621792793273926
    9. ' ' → logprob: -7.746792793273926
    10. ' ,' → logprob: -7.871792793273926

Token 35: '=s' (ID: 32455)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0362621434032917
    2. '=s' → logprob: -3.911262035369873
    3. ' =' → logprob: -4.161262035369873
    4. '=a' → logprob: -12.286262512207031
    5. '=b' → logprob: -13.536262512207031
    6. '=i' → logprob: -14.786262512207031
    7. '=(' → logprob: -15.036262512207031
    8. '=f' → logprob: -15.161262512207031
    9. '=c' → logprob: -15.536262512207031
    10. '=j' → logprob: -15.536262512207031

Token 36: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.027675211429595947
    2. '.split' → logprob: -3.652675151824951
    3. 'split' → logprob: -6.777675151824951
    4. '[i' → logprob: -9.40267562866211
    5. '.' → logprob: -10.15267562866211
    6. '[' → logprob: -10.40267562866211
    7. ' split' → logprob: -10.77767562866211
    8. '[:]' → logprob: -11.27767562866211
    9. '_split' → logprob: -11.52767562866211
    10. '[:,' → logprob: -11.65267562866211

Token 37: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.093505099765025e-05
    2. ' i' → logprob: -10.875020980834961
    3. '-i' → logprob: -14.375020980834961
    4. ' ' → logprob: -14.375020980834961
    5. '   ' → logprob: -14.625020980834961
    6. '	i' → logprob: -15.125020980834961
    7. '-' → logprob: -17.37502098083496
    8. ' -' → logprob: -17.37502098083496
    9. '  ' → logprob: -17.62502098083496
    10. 'n' → logprob: -17.87502098083496

Token 38: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09297774732112885
    2. ',s' → logprob: -2.84297776222229
    3. '],' → logprob: -4.092977523803711
    4. ' ,' → logprob: -4.342977523803711
    5. ']' → logprob: -8.592977523803711
    6. ',b' → logprob: -8.592977523803711
    7. ' ],' → logprob: -8.842977523803711
    8. ' ' → logprob: -9.217977523803711
    9. '),' → logprob: -9.967977523803711
    10. ',i' → logprob: -10.592977523803711

Token 39: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.026302501559257507
    2. ' s' → logprob: -3.6513025760650635
    3. ' ' → logprob: -13.776302337646484
    4. '<|end|>' → logprob: -14.901302337646484
    5. '	s' → logprob: -15.776302337646484
    6. '(s' → logprob: -16.026302337646484
    7. '>s' → logprob: -16.713802337646484
    8. '`s' → logprob: -16.776302337646484
    9. ''s' → logprob: -16.838802337646484
    10. '_s' → logprob: -17.026302337646484

Token 40: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2948405128554441e-05
    2. '[' → logprob: -12.37501335144043
    3. '[-' → logprob: -12.87501335144043
    4. '[:' → logprob: -13.50001335144043
    5. '[n' → logprob: -13.50001335144043
    6. 'i' → logprob: -13.50001335144043
    7. '```' → logprob: -14.75001335144043
    8. '[:]' → logprob: -15.25001335144043
    9. '[I' → logprob: -15.37501335144043
    10. '[a' → logprob: -15.75001335144043

Token 41: ':]
' (ID: 61598)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16044123470783234
    2. ':]' → logprob: -1.910441279411316
    3. ')]' → logprob: -9.785441398620605
    4. '()]' → logprob: -10.285441398620605
    5. ' ]' → logprob: -10.410441398620605
    6. '+]' → logprob: -10.535441398620605
    7. ' :]' → logprob: -11.285441398620605
    8. ']
' → logprob: -11.785441398620605
    9. ':]
' → logprob: -11.910441398620605
    10. '])' → logprob: -12.035441398620605

Token 42: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021885682363063097
    2. '
' → logprob: -7.377188682556152
    3. '<|end|>' → logprob: -7.877188682556152
    4. '        
' → logprob: -8.127188682556152
    5. '   ' → logprob: -8.252188682556152
    6. '  
' → logprob: -8.627188682556152
    7. ' if' → logprob: -8.877188682556152
    8. ',' → logprob: -9.627188682556152
    9. ' ' → logprob: -10.002188682556152
    10. '    
' → logprob: -10.377188682556152

Token 43: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8938068747520447
    2. 'if' → logprob: -0.8938068747520447
    3. ' if' → logprob: -1.7688069343566895
    4. '   ' → logprob: -4.6438069343566895
    5. 'for' → logprob: -7.5188069343566895
    6. ' ' → logprob: -8.018806457519531
    7. ' for' → logprob: -8.268806457519531
    8. '```' → logprob: -8.393806457519531
    9. 'res' → logprob: -9.393806457519531
    10. '           ' → logprob: -9.893806457519531

Token 44: '_rev' (ID: 99394)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7369646430015564
    2. '[::-' → logprob: -1.7369647026062012
    3. '==' → logprob: -1.9869647026062012
    4. 'in' → logprob: -2.986964702606201
    5. '+=' → logprob: -3.486964702606201
    6. '+b' → logprob: -3.611964702606201
    7. ' in' → logprob: -3.736964702606201
    8. 'a' → logprob: -4.111964702606201
    9. '=' → logprob: -4.236964702606201
    10. '!=' → logprob: -4.486964702606201

Token 45: ',a' (ID: 26776)
  Prédit: '=a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=a' → logprob: -0.03297532722353935
    2. '=' → logprob: -3.532975435256958
    3. 'a' → logprob: -6.532975196838379
    4. '=s' → logprob: -6.657975196838379
    5. '=b' → logprob: -8.657975196838379
    6. ' =' → logprob: -8.907975196838379
    7. 's' → logprob: -10.407975196838379
    8. 'rs' → logprob: -10.657975196838379
    9. '=v' → logprob: -10.782975196838379
    10. '[::-' → logprob: -11.157975196838379

Token 46: '_flip' (ID: 150878)
  Prédit: '_rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_rev' → logprob: -0.6760671138763428
    2. '=' → logprob: -1.4260671138763428
    3. '=_' → logprob: -1.5510671138763428
    4. '=a' → logprob: -3.5510671138763428
    5. '=s' → logprob: -5.676067352294922
    6. 'v' → logprob: -6.551067352294922
    7. ' =' → logprob: -6.551067352294922
    8. 's' → logprob: -7.426067352294922
    9. 'a' → logprob: -7.551067352294922
    10. '=b' → logprob: -7.926067352294922

Token 47: '=a' (ID: 53088)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21118386089801788
    2. '=s' → logprob: -1.7111839056015015
    3. '=a' → logprob: -5.336184024810791
    4. ' =' → logprob: -5.586184024810791
    5. '=b' → logprob: -6.961184024810791
    6. '=_' → logprob: -9.836183547973633
    7. '=f' → logprob: -10.586183547973633
    8. '=[' → logprob: -10.836183547973633
    9. '=

' → logprob: -11.086183547973633
    10. '=i' → logprob: -11.336183547973633

Token 48: ',a' (ID: 26776)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -9.17420256882906e-05
    2. '[' → logprob: -9.375091552734375
    3. '[-' → logprob: -12.750091552734375
    4. '[:-' → logprob: -13.625091552734375
    5. '```' → logprob: -14.750091552734375
    6. ' [' → logprob: -15.000091552734375
    7. '[:' → logprob: -15.250091552734375
    8. '   ' → logprob: -15.500091552734375
    9. '-' → logprob: -15.500091552734375
    10. '_rev' → logprob: -15.625091552734375

Token 49: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.0033306374680250883
    2. '.replace' → logprob: -6.253330707550049
    3. '.translate' → logprob: -7.128330707550049
    4. '.swap' → logprob: -8.12833023071289
    5. '_rev' → logprob: -9.87833023071289
    6. '.flip' → logprob: -10.12833023071289
    7. '[' → logprob: -10.12833023071289
    8. '[:]' → logprob: -10.12833023071289
    9. '_flip' → logprob: -10.37833023071289
    10. '.' → logprob: -10.75333023071289

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019498213659971952
    2. '-' → logprob: -6.251949787139893
    3. 'replace' → logprob: -13.00195026397705
    4. 'm' → logprob: -13.25195026397705
    5. 'translate' → logprob: -13.50195026397705
    6. '+' → logprob: -13.62695026397705
    7. 'join' → logprob: -13.75195026397705
    8. 'swap' → logprob: -13.87695026397705
    9. '–' → logprob: -14.12695026397705
    10. '−' → logprob: -14.12695026397705

Token 51: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7104823589324951
    2. '<|end|>' → logprob: -0.9604823589324951
    3. '.replace' → logprob: -2.335482358932495
    4. ']' → logprob: -4.335482597351074
    5. ')
' → logprob: -5.710482597351074
    6. '[::-' → logprob: -5.835482597351074
    7. '       ' → logprob: -5.960482597351074
    8. '<|end|>' → logprob: -6.085482597351074
    9. '.swap' → logprob: -6.585482597351074
    10. ').' → logprob: -6.835482597351074

Token 52: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8765890002250671
    2. 'flip' → logprob: -2.251589059829712
    3. '<|end|>' → logprob: -2.376589059829712
    4. 'b' (adapté à ' b') → logprob: -2.501589059829712
    5. '_flip' → logprob: -2.501589059829712
    6. '[::-' → logprob: -2.876589059829712
    7. '.replace' → logprob: -3.251589059829712
    8. 'replace' → logprob: -3.501589059829712
    9. 's' → logprob: -3.501589059829712
    10. 'swap' → logprob: -4.376588821411133

Token 54: '_rev' (ID: 99394)
  Prédit: '_rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rev' → logprob: -0.5471517443656921
    2. '_flip' → logprob: -1.047151803970337
    3. ',b' → logprob: -3.922151803970337
    4. 'b' → logprob: -4.547151565551758
    5. '=' → logprob: -4.672151565551758
    6. '=b' → logprob: -5.047151565551758
    7. '_reverse' → logprob: -5.172151565551758
    8. ',' → logprob: -5.672151565551758
    9. '_b' → logprob: -5.797151565551758
    10. '_re' → logprob: -6.047151565551758

Token 55: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.04288499802350998
    2. '=b' → logprob: -3.2928850650787354
    3. ',' → logprob: -5.917884826660156
    4. '=' → logprob: -6.167884826660156
    5. 'b' → logprob: -10.917884826660156
    6. ' ,' → logprob: -11.792884826660156
    7. ' =' → logprob: -12.042884826660156
    8. ',a' → logprob: -12.917884826660156
    9. ',s' → logprob: -13.792884826660156
    10. '=a' → logprob: -13.917884826660156

Token 56: '_flip' (ID: 150878)
  Prédit: ',b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.04806453362107277
    2. '=b' → logprob: -3.2980644702911377
    3. '_flip' → logprob: -5.048064708709717
    4. ',' → logprob: -6.423064708709717
    5. 'b' → logprob: -7.048064708709717
    6. '=' → logprob: -7.423064708709717
    7. '_rev' → logprob: -9.173064231872559
    8. ',a' → logprob: -9.298064231872559
    9. '[::-' → logprob: -9.798064231872559
    10. ' =' → logprob: -10.298064231872559

Token 57: '=b' (ID: 49769)
  Prédit: '=b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=b' → logprob: -0.07131360471248627
    2. '=' → logprob: -3.0713136196136475
    3. ',b' → logprob: -3.8213136196136475
    4. ',' → logprob: -7.696313381195068
    5. 'b' → logprob: -9.696313858032227
    6. ' =' → logprob: -10.571313858032227
    7. '=s' → logprob: -10.946313858032227
    8. '=

' → logprob: -13.321313858032227
    9. '=a' → logprob: -13.446313858032227
    10. '=
' → logprob: -13.821313858032227

Token 58: ',b' (ID: 17568)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.49324676394462585
    2. ',b' → logprob: -0.9932467937469482
    3. 'b' → logprob: -3.9932467937469482
    4. ',' → logprob: -8.493247032165527
    5. ',[' → logprob: -8.868247032165527
    6. '[' → logprob: -9.993247032165527
    7. '[b' → logprob: -10.368247032165527
    8. ' b' → logprob: -10.618247032165527
    9. '[:-' → logprob: -10.868247032165527
    10. ',"' → logprob: -11.868247032165527

Token 59: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -1.759734732331708e-05
    2. '[' → logprob: -12.000017166137695
    3. '[:-' → logprob: -12.000017166137695
    4. '[:' → logprob: -13.500017166137695
    5. '::-' → logprob: -13.750017166137695
    6. '[-' → logprob: -14.250017166137695
    7. '[:]' → logprob: -14.500017166137695
    8. '.flip' → logprob: -14.500017166137695
    9. '_flip' → logprob: -15.250017166137695
    10. '.replace' → logprob: -15.875017166137695

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. '::-' → logprob: -12.375007629394531
    3. '```' → logprob: -13.812507629394531
    4. '[::-' → logprob: -14.812507629394531
    5. ']' → logprob: -15.125007629394531
    6. ' ' → logprob: -15.250007629394531
    7. '-' → logprob: -15.437507629394531
    8. ':' → logprob: -15.750007629394531
    9. '2' → logprob: -15.875007629394531
    10. '#' → logprob: -16.18750762939453

Token 61: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1084085702896118
    2. ')
' → logprob: -1.4834085702896118
    3. '       ' → logprob: -1.8584085702896118
    4. ']' → logprob: -1.8584085702896118
    5. '[::-' → logprob: -2.6084084510803223
    6. ']
' → logprob: -2.9834084510803223
    7. ')[' → logprob: -6.858408451080322
    8. '<|end|>' → logprob: -6.983408451080322
    9. '   ' → logprob: -7.108408451080322
    10. '.replace' → logprob: -7.358408451080322

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034956444054841995
    2. '<|end|>' → logprob: -3.784956455230713
    3. ' if' → logprob: -4.784956455230713
    4. ' for' → logprob: -7.034956455230713
    5. 'if' → logprob: -7.034956455230713
    6. '   ' → logprob: -7.284956455230713
    7. '
' → logprob: -8.534955978393555
    8. ' ' → logprob: -8.659955978393555
    9. '        
' → logprob: -9.159955978393555
    10. 'for' → logprob: -9.159955978393555

Token 63: ' res' (ID: 694)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24433644115924835
    2. 'a' → logprob: -2.4943363666534424
    3. '       ' → logprob: -2.4943363666534424
    4. 'if' → logprob: -3.6193363666534424
    5. ' for' → logprob: -3.8693363666534424
    6. '   ' → logprob: -7.4943366050720215
    7. 's' → logprob: -7.6193366050720215
    8. 'flip' → logprob: -7.7443366050720215
    9. 'c' → logprob: -8.369336128234863
    10. 'i' → logprob: -8.369336128234863

Token 64: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0723949670791626
    2. '.' → logprob: -2.822394847869873
    3. '.update' → logprob: -4.572394847869873
    4. '.union' → logprob: -11.197395324707031
    5. ' .' → logprob: -11.822395324707031
    6. 'add' → logprob: -11.947395324707031
    7. '.setdefault' → logprob: -12.322395324707031
    8. '.=' → logprob: -12.572395324707031
    9. '.append' → logprob: -13.697395324707031
    10. '.Add' → logprob: -14.322395324707031

Token 65: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.045749858021736145
    2. '((' → logprob: -3.1707499027252197
    3. '(' → logprob: -6.420749664306641
    4. '(b' → logprob: -7.670749664306641
    5. '(s' → logprob: -8.29574966430664
    6. '(len' → logprob: -9.04574966430664
    7. '(f' → logprob: -9.04574966430664
    8. ' (' → logprob: -9.92074966430664
    9. '('' → logprob: -10.17074966430664
    10. '(('' → logprob: -10.79574966430664

Token 66: '+b' (ID: 76609)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4988611042499542
    2. '+b' → logprob: -1.6238610744476318
    3. '_flip' → logprob: -2.623861074447632
    4. ' +' → logprob: -2.748861074447632
    5. '[::-' → logprob: -3.623861074447632
    6. ')' → logprob: -4.373861312866211
    7. '+a' → logprob: -4.748861312866211
    8. '+"_' → logprob: -5.623861312866211
    9. '+'_' → logprob: -6.248861312866211
    10. '_rev' → logprob: -6.998861312866211

Token 67: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6336571574211121
    2. ')' → logprob: -0.7586571574211121
    3. ')
' → logprob: -7.633656978607178
    4. '[::-' → logprob: -8.508657455444336
    5. ')a' → logprob: -9.008657455444336
    6. ' )
' → logprob: -9.133657455444336
    7. ')b' → logprob: -9.883657455444336
    8. ' )' → logprob: -10.633657455444336
    9. ')

' → logprob: -11.633657455444336
    10. '.flip' → logprob: -11.758657455444336

Token 68: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: ' res' (ID: 694)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.117246113717556
    2. 'b' → logprob: -2.242246150970459
    3. '(a' → logprob: -5.992246150970459
    4. ' a' → logprob: -7.367246150970459
    5. '(b' → logprob: -8.2422456741333
    6. 's' → logprob: -8.6172456741333
    7. 'rev' → logprob: -8.7422456741333
    8. '_flip' → logprob: -9.2422456741333
    9. 'flip' → logprob: -9.3672456741333
    10. '(' → logprob: -9.3672456741333

Token 70: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.006798495072871447
    2. '.' → logprob: -5.006798267364502
    3. '<|end|>' → logprob: -10.50679874420166
    4. '.setdefault' → logprob: -10.63179874420166
    5. '.update' → logprob: -11.38179874420166
    6. 'add' → logprob: -12.88179874420166
    7. '.union' → logprob: -13.00679874420166
    8. ' .' → logprob: -13.13179874420166
    9. '.remove' → logprob: -13.50679874420166
    10. '{}.' → logprob: -13.63179874420166

Token 71: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.20148468017578125
    2. '(b' → logprob: -1.7014846801757812
    3. '(' → logprob: -10.951484680175781
    4. 'a' → logprob: -11.076484680175781
    5. '(f' → logprob: -11.451484680175781
    6. '(s' → logprob: -11.451484680175781
    7. '((' → logprob: -12.201484680175781
    8. 'b' → logprob: -12.576484680175781
    9. ' (' → logprob: -13.826484680175781
    10. '("("' → logprob: -14.201484680175781

Token 72: '+b' (ID: 76609)
  Prédit: '_flip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flip' → logprob: -0.10836965590715408
    2. '_rev' → logprob: -2.9833695888519287
    3. '[::-' → logprob: -3.1083695888519287
    4. '+' → logprob: -5.108369827270508
    5. '+b' → logprob: -7.858369827270508
    6. '_reverse' → logprob: -8.358369827270508
    7. ' +' → logprob: -8.608369827270508
    8. '+"_' → logprob: -8.858369827270508
    9. '[' → logprob: -9.608369827270508
    10. 'Flip' → logprob: -9.608369827270508

Token 73: '_rev' (ID: 99394)
  Prédit: '_rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rev' → logprob: -0.45379936695098877
    2. '[::-' → logprob: -1.7037993669509888
    3. '_flip' → logprob: -1.7037993669509888
    4. '[' → logprob: -8.2037992477417
    5. '_reverse' → logprob: -8.8287992477417
    6. ')' → logprob: -8.9537992477417
    7. '[_' → logprob: -9.9537992477417
    8. '_swap' → logprob: -10.2037992477417
    9. '[-' → logprob: -10.8287992477417
    10. '[:-' → logprob: -10.8287992477417

Token 74: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6932995319366455
    2. ')
' → logprob: -0.6932995319366455
    3. ')b' → logprob: -9.568299293518066
    4. '       ' → logprob: -10.318299293518066
    5. ')
' → logprob: -10.693299293518066
    6. ')a' → logprob: -11.693299293518066
    7. '   ' → logprob: -12.193299293518066
    8. ')

' → logprob: -12.443299293518066
    9. ' )
' → logprob: -13.193299293518066
    10. ' )' → logprob: -13.443299293518066

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015032376162707806
    2. '<|end|>' → logprob: -4.7650322914123535
    3. '
' → logprob: -5.7650322914123535
    4. 'b' → logprob: -6.6400322914123535
    5. '        
' → logprob: -7.1400322914123535
    6. '\n' → logprob: -8.515032768249512
    7. '```' → logprob: -8.765032768249512
    8. '\' → logprob: -8.890032768249512
    9. '   ' → logprob: -9.390032768249512
    10. ')
' → logprob: -9.640032768249512

Token 76: ' res' (ID: 694)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1177515834569931
    2. 'res' (adapté à ' res') → logprob: -2.9927515983581543
    3. 'b' → logprob: -3.1177515983581543
    4. '       ' → logprob: -4.742751598358154
    5. ' a' → logprob: -5.492751598358154
    6. '   ' → logprob: -7.367751598358154
    7. ' res' → logprob: -7.492751598358154
    8. ' b' → logprob: -7.742751598358154
    9. 's' → logprob: -8.117751121520996
    10. ' ' → logprob: -8.492751121520996

Token 77: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0011873723706230521
    2. '.' → logprob: -6.751187324523926
    3. '.update' → logprob: -12.001187324523926
    4. '.setdefault' → logprob: -13.126187324523926
    5. '<|end|>' → logprob: -13.126187324523926
    6. ' .' → logprob: -13.376187324523926
    7. 'add' → logprob: -13.501187324523926
    8. '`.' → logprob: -14.376187324523926
    9. '.flip' → logprob: -14.376187324523926
    10. '```' → logprob: -14.626187324523926

Token 78: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0001955537445610389
    2. '(b' → logprob: -9.250195503234863
    3. '(' → logprob: -9.500195503234863
    4. '((' → logprob: -11.375195503234863
    5. 'a' → logprob: -12.125195503234863
    6. ' (' → logprob: -12.375195503234863
    7. '(f' → logprob: -14.375195503234863
    8. '('' → logprob: -14.875195503234863
    9. '(s' → logprob: -14.875195503234863
    10. '("("' → logprob: -15.125195503234863

Token 79: '_rev' (ID: 99394)
  Prédit: '+b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+b' → logprob: -0.523969292640686
    2. '+' → logprob: -1.273969292640686
    3. '_flip' → logprob: -2.1489691734313965
    4. '_rev' → logprob: -4.6489691734313965
    5. 'b' → logprob: -7.5239691734313965
    6. ' +' → logprob: -7.7739691734313965
    7. '+"_' → logprob: -8.023969650268555
    8. '[::-' → logprob: -8.898969650268555
    9. '+'_' → logprob: -9.273969650268555
    10. '_reverse' → logprob: -9.773969650268555

Token 80: '+b' (ID: 76609)
  Prédit: '+b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+b' → logprob: -0.005339181981980801
    2. '+' → logprob: -5.2553391456604
    3. ' +' → logprob: -9.380339622497559
    4. ')+' → logprob: -12.130339622497559
    5. 'b' → logprob: -13.005339622497559
    6. '+B' → logprob: -13.005339622497559
    7. '+a' → logprob: -13.130339622497559
    8. '+s' → logprob: -13.630339622497559
    9. '++' → logprob: -14.005339622497559
    10. '"+"' → logprob: -14.130339622497559

Token 81: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3449743092060089
    2. '_flip' → logprob: -1.7199742794036865
    3. '_rev' → logprob: -2.4699742794036865
    4. ')
' → logprob: -3.7199742794036865
    5. ')b' → logprob: -6.469974517822266
    6. ')_' → logprob: -6.719974517822266
    7. 'b' → logprob: -7.094974517822266
    8. ')
' → logprob: -9.969974517822266
    9. '[::-' → logprob: -10.094974517822266
    10. ')

' → logprob: -10.219974517822266

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0065801311284303665
    2. '<|end|>' → logprob: -5.881580352783203
    3. '        
' → logprob: -6.506580352783203
    4. '```' → logprob: -7.131580352783203
    5. '``' → logprob: -7.381580352783203
    6. '   ' → logprob: -8.756580352783203
    7. '\' → logprob: -8.756580352783203
    8. '\
' → logprob: -9.131580352783203
    9. '
' → logprob: -9.506580352783203
    10. '`
' → logprob: -9.881580352783203

Token 83: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.007249392103403807
    2. 'b' → logprob: -5.507249355316162
    3. 's' → logprob: -6.257249355316162
    4. 'a' → logprob: -7.007249355316162
    5. '_res' → logprob: -8.88224983215332
    6. 'rev' → logprob: -9.38224983215332
    7. ' res' → logprob: -9.50724983215332
    8. '_rev' → logprob: -10.50724983215332
    9. '_flip' → logprob: -13.00724983215332
    10. '(res' → logprob: -13.13224983215332

Token 84: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.001943395473062992
    2. '.' → logprob: -6.251943588256836
    3. '.setdefault' → logprob: -12.501943588256836
    4. '<|end|>' → logprob: -12.751943588256836
    5. ').' → logprob: -13.501943588256836
    6. '`.' → logprob: -13.751943588256836
    7. '```' → logprob: -14.001943588256836
    8. '>.' → logprob: -14.126943588256836
    9. ' .' → logprob: -14.501943588256836
    10. 'add' → logprob: -14.626943588256836

Token 85: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00318912067450583
    2. '(b' → logprob: -5.7531890869140625
    3. '(' → logprob: -11.628189086914062
    4. '((' → logprob: -13.628189086914062
    5. '(f' → logprob: -15.003189086914062
    6. '(ab' → logprob: -15.253189086914062
    7. 'a' → logprob: -15.628189086914062
    8. 'b' → logprob: -16.003189086914062
    9. ' (' → logprob: -16.003189086914062
    10. '(s' → logprob: -16.128189086914062

Token 86: '_rev' (ID: 99394)
  Prédit: '_rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rev' → logprob: -0.06199446693062782
    2. '_flip' → logprob: -2.8119945526123047
    3. 'rev' → logprob: -11.186994552612305
    4. '_fl' → logprob: -12.436994552612305
    5. '[::-' → logprob: -12.936994552612305
    6. '_reverse' → logprob: -13.311994552612305
    7. '_inv' → logprob: -13.811994552612305
    8. 'flip' → logprob: -13.936994552612305
    9. '+' → logprob: -14.061994552612305
    10. ''_' → logprob: -14.811994552612305

Token 87: '+b' (ID: 76609)
  Prédit: '+b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+b' → logprob: -0.0002668192028068006
    2. '+' → logprob: -8.250267028808594
    3. ' +' → logprob: -12.875267028808594
    4. '+"' → logprob: -14.000267028808594
    5. 'b' → logprob: -14.625267028808594
    6. '"+"' → logprob: -15.250267028808594
    7. '+c' → logprob: -15.375267028808594
    8. '+B' → logprob: -15.500267028808594
    9. '+a' → logprob: -15.625267028808594
    10. ')+' → logprob: -15.750267028808594

Token 88: '_rev' (ID: 99394)
  Prédit: '_rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rev' → logprob: -0.04867229983210564
    2. '_flip' → logprob: -3.0486721992492676
    3. '[::-' → logprob: -10.673672676086426
    4. 'rev' → logprob: -10.798672676086426
    5. ')' → logprob: -11.673672676086426
    6. '_fl' → logprob: -12.048672676086426
    7. 'b' → logprob: -12.798672676086426
    8. ')_' → logprob: -12.923672676086426
    9. 'flip' → logprob: -13.048672676086426
    10. '```' → logprob: -13.048672676086426

Token 89: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.055340997874736786
    2. ')
' → logprob: -2.9303410053253174
    3. '       ' → logprob: -7.805340766906738
    4. '   ' → logprob: -10.180340766906738
    5. ')
' → logprob: -11.930340766906738
    6. ' )' → logprob: -13.305340766906738
    7. '()' → logprob: -14.055340766906738
    8. ' ' → logprob: -14.555340766906738
    9. '))' → logprob: -14.680340766906738
    10. '```' → logprob: -14.805340766906738

Token 90: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19022871553897858
    2. 'print' → logprob: -2.0652287006378174
    3. '   ' → logprob: -3.1902287006378174
    4. '<|end|>' → logprob: -6.3152289390563965
    5. 'for' → logprob: -6.8152289390563965
    6. '```' → logprob: -7.0652289390563965
    7. '
' → logprob: -7.8152289390563965
    8. ')
' → logprob: -8.440228462219238
    9. ' for' → logprob: -8.565228462219238
    10. ' ' → logprob: -8.815228462219238

Token 91: ' res' (ID: 694)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15055307745933533
    2. '       ' → logprob: -2.025552988052368
    3. 'res' (adapté à ' res') → logprob: -5.025553226470947
    4. '   ' → logprob: -7.775553226470947
    5. 'for' → logprob: -8.025552749633789
    6. '```' → logprob: -8.150552749633789
    7. 'b' → logprob: -9.400552749633789
    8. ' res' → logprob: -9.775552749633789
    9. ' print' → logprob: -10.025552749633789
    10. 'a' → logprob: -11.525552749633789

Token 92: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.005988877732306719
    2. '.' → logprob: -5.255989074707031
    3. '.update' → logprob: -7.255989074707031
    4. '.clear' → logprob: -11.255989074707031
    5. '.union' → logprob: -11.880989074707031
    6. '.setdefault' → logprob: -12.130989074707031
    7. ' .' → logprob: -12.505989074707031
    8. '.extend' → logprob: -13.005989074707031
    9. '.
' → logprob: -13.130989074707031
    10. 'add' → logprob: -13.255989074707031

Token 93: '(b' (ID: 3229)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.008129963040119e-06
    2. '(' → logprob: -13.125003814697266
    3. '((' → logprob: -14.000003814697266
    4. '(f' → logprob: -15.000003814697266
    5. ' (' → logprob: -15.375003814697266
    6. '(s' → logprob: -15.625003814697266
    7. 'a' → logprob: -16.125003814697266
    8. '(b' → logprob: -16.125003814697266
    9. '('(' → logprob: -16.750003814697266
    10. '(x' → logprob: -17.375003814697266

Token 94: '+a' (ID: 142749)
  Prédit: '_flip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flip' → logprob: -0.0024003859143704176
    2. '[::-' → logprob: -6.8774003982543945
    3. '_rev' → logprob: -7.2524003982543945
    4. '+' → logprob: -7.6274003982543945
    5. '+b' → logprob: -9.877400398254395
    6. '+a' → logprob: -10.627400398254395
    7. '_fl' → logprob: -10.752400398254395
    8. 'flip' → logprob: -10.877400398254395
    9. ')' → logprob: -11.377400398254395
    10. 'Flip' → logprob: -11.377400398254395

Token 95: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05002961680293083
    2. ')
' → logprob: -3.4250295162200928
    3. '_flip' → logprob: -4.550029754638672
    4. '_rev' → logprob: -6.050029754638672
    5. 'b' → logprob: -6.425029754638672
    6. ')b' → logprob: -6.550029754638672
    7. ')_' → logprob: -9.175029754638672
    8. '[::-' → logprob: -9.925029754638672
    9. ')a' → logprob: -10.425029754638672
    10. ')
' → logprob: -10.550029754638672

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012032082304358482
    2. 'res' → logprob: -7.0012030601501465
    3. '<|end|>' → logprob: -8.626203536987305
    4. '```' → logprob: -10.626203536987305
    5. '        
' → logprob: -10.751203536987305
    6. '   ' → logprob: -10.876203536987305
    7. ' ' → logprob: -11.251203536987305
    8. '      ' → logprob: -11.751203536987305
    9. ' res' → logprob: -12.001203536987305
    10. '``' → logprob: -12.876203536987305

Token 97: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0099698631092906
    2. '       ' → logprob: -4.634969711303711
    3. ' res' → logprob: -8.509969711303711
    4. 'b' → logprob: -12.634969711303711
    5. '<|end|>' → logprob: -12.759969711303711
    6. '```' → logprob: -13.634969711303711
    7. '   ' → logprob: -14.134969711303711
    8. '        ' → logprob: -14.259969711303711
    9. '	res' → logprob: -14.634969711303711
    10. '$res' → logprob: -14.759969711303711

Token 98: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0017206385964527726
    2. '.' → logprob: -6.376720428466797
    3. '.update' → logprob: -11.751720428466797
    4. ' .' → logprob: -12.501720428466797
    5. 'add' → logprob: -13.626720428466797
    6. '`.' → logprob: -13.751720428466797
    7. '.setdefault' → logprob: -14.126720428466797
    8. '<|end|>' → logprob: -14.751720428466797
    9. '>.' → logprob: -14.876720428466797
    10. '{}.' → logprob: -15.376720428466797

Token 99: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0015791363548487425
    2. '(a' → logprob: -6.501579284667969
    3. '(' → logprob: -9.626579284667969
    4. '(s' → logprob: -11.876579284667969
    5. '((' → logprob: -13.376579284667969
    6. ' (' → logprob: -13.501579284667969
    7. 'b' → logprob: -15.251579284667969
    8. '(B' → logprob: -15.751579284667969
    9. '(f' → logprob: -16.50157928466797
    10. '(res' → logprob: -16.62657928466797

Token 100: '+a' (ID: 142749)
  Prédit: '+a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+a' → logprob: -0.6803573369979858
    2. '_rev' → logprob: -1.1803573369979858
    3. '_flip' → logprob: -1.9303573369979858
    4. '+' → logprob: -3.3053574562072754
    5. '[::-' → logprob: -6.055357456207275
    6. '_a' → logprob: -7.555357456207275
    7. '+b' → logprob: -7.555357456207275
    8. '+)' → logprob: -8.055356979370117
    9. '_fl' → logprob: -8.430356979370117
    10. ')' → logprob: -9.055356979370117

Token 101: '_rev' (ID: 99394)
  Prédit: '_rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rev' → logprob: -0.015730613842606544
    2. '_flip' → logprob: -4.265730381011963
    3. ')' → logprob: -7.015730381011963
    4. '[::-' → logprob: -7.890730381011963
    5. 'b' → logprob: -8.390730857849121
    6. '[' → logprob: -11.015730857849121
    7. ')
' → logprob: -11.015730857849121
    8. 'rev' → logprob: -11.515730857849121
    9. '_fl' → logprob: -12.640730857849121
    10. '   ' → logprob: -12.890730857849121

Token 102: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31343135237693787
    2. ')' → logprob: -1.3134313821792603
    3. ')b' → logprob: -9.688431739807129
    4. ')
' → logprob: -10.813431739807129
    5. '())
' → logprob: -10.813431739807129
    6. '       ' → logprob: -11.313431739807129
    7. 'b' → logprob: -11.313431739807129
    8. '+' → logprob: -11.563431739807129
    9. '))' → logprob: -11.938431739807129
    10. '))
' → logprob: -12.188431739807129

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010300694266334176
    2. 'res' → logprob: -7.626029968261719
    3. '```' → logprob: -8.251029968261719
    4. '``' → logprob: -9.376029968261719
    5. '<|end|>' → logprob: -10.001029968261719
    6. '   ' → logprob: -10.126029968261719
    7. 'b' → logprob: -10.376029968261719
    8. '        
' → logprob: -10.876029968261719
    9. '[' → logprob: -11.751029968261719
    10. '\' → logprob: -11.876029968261719

Token 104: ' res' (ID: 694)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.46709883213043213
    2. 'res' (adapté à ' res') → logprob: -1.2170988321304321
    3. '       ' → logprob: -2.5920987129211426
    4. '(b' → logprob: -7.092098712921143
    5. ' b' → logprob: -7.342098712921143
    6. 's' → logprob: -8.3420991897583
    7. ' res' → logprob: -8.4670991897583
    8. '(' → logprob: -9.0920991897583
    9. '(res' → logprob: -9.0920991897583
    10. '   ' → logprob: -11.0920991897583

Token 105: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.01821093261241913
    2. '.' → logprob: -4.0182108879089355
    3. 'add' → logprob: -11.018211364746094
    4. ' .' → logprob: -11.143211364746094
    5. '.clear' → logprob: -11.643211364746094
    6. '.remove' → logprob: -12.018211364746094
    7. '.update' → logprob: -12.393211364746094
    8. '.setdefault' → logprob: -13.143211364746094
    9. '<|end|>' → logprob: -13.518211364746094
    10. '​.' → logprob: -13.768211364746094

Token 106: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0009214656893163919
    2. '(a' → logprob: -7.000921249389648
    3. '(' → logprob: -12.000921249389648
    4. '(s' → logprob: -12.625921249389648
    5. ' (' → logprob: -15.500921249389648
    6. '((' → logprob: -16.12592124938965
    7. '(res' → logprob: -16.50092124938965
    8. 'b' → logprob: -16.62592124938965
    9. '(B' → logprob: -17.62592124938965
    10. 'a' → logprob: -17.62592124938965

Token 107: '_rev' (ID: 99394)
  Prédit: '_flip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flip' → logprob: -0.5772979855537415
    2. '_rev' → logprob: -0.8272979855537415
    3. '+' → logprob: -7.327298164367676
    4. '[::-' → logprob: -7.577298164367676
    5. '_fl' → logprob: -9.452298164367676
    6. '+b' → logprob: -10.077298164367676
    7. '+a' → logprob: -10.327298164367676
    8. '_reverse' → logprob: -11.827298164367676
    9. '+"_' → logprob: -12.327298164367676
    10. '_inv' → logprob: -12.327298164367676

Token 108: '+a' (ID: 142749)
  Prédit: '+a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+a' → logprob: -0.00040457461727783084
    2. '+b' → logprob: -8.125404357910156
    3. '+' → logprob: -9.250404357910156
    4. ' +' → logprob: -11.875404357910156
    5. '+A' → logprob: -13.500404357910156
    6. '+s' → logprob: -13.625404357910156
    7. '+t' → logprob: -14.625404357910156
    8. '+)' → logprob: -15.000404357910156
    9. '+c' → logprob: -15.250404357910156
    10. ')+' → logprob: -15.375404357910156

Token 109: ')
' (ID: 446)
  Prédit: '_rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rev' → logprob: -0.4071861505508423
    2. ')' → logprob: -1.5321861505508423
    3. '_flip' → logprob: -2.1571860313415527
    4. 'b' → logprob: -7.032186031341553
    5. 'a' → logprob: -7.407186031341553
    6. ')
' → logprob: -8.157186508178711
    7. ')_' → logprob: -8.657186508178711
    8. '_fl' → logprob: -8.907186508178711
    9. 'rev' → logprob: -8.907186508178711
    10. ')b' → logprob: -9.532186508178711

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006460758158937097
    2. '   ' → logprob: -7.750646114349365
    3. '<|end|>' → logprob: -9.250645637512207
    4. '```' → logprob: -9.875645637512207
    5. '``' → logprob: -10.750645637512207
    6. '        
' → logprob: -11.625645637512207
    7. '      ' → logprob: -12.000645637512207
    8. '\' → logprob: -12.250645637512207
    9. 'res' → logprob: -12.375645637512207
    10. '{' → logprob: -12.500645637512207

Token 111: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -5.633853652398102e-05
    2. ' res' → logprob: -9.875056266784668
    3. 'set' → logprob: -12.500056266784668
    4. 'b' → logprob: -14.375056266784668
    5. '	res' → logprob: -15.750056266784668
    6. '{' → logprob: -16.000057220458984
    7. 's' → logprob: -16.125057220458984
    8. '(res' → logprob: -17.125057220458984
    9. '       ' → logprob: -17.375057220458984
    10. 'ress' → logprob: -17.500057220458984

Token 112: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -8.637786231702194e-05
    2. '.' → logprob: -9.500086784362793
    3. 'add' → logprob: -12.000086784362793
    4. '_add' → logprob: -13.750086784362793
    5. '.remove' → logprob: -13.875086784362793
    6. ' .' → logprob: -14.375086784362793
    7. '.update' → logprob: -14.375086784362793
    8. '.setdefault' → logprob: -14.375086784362793
    9. '\.' → logprob: -15.250086784362793
    10. '.flip' → logprob: -15.250086784362793

Token 113: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -4.894790981779806e-05
    2. '(a' → logprob: -10.000048637390137
    3. '(' → logprob: -12.750048637390137
    4. '(s' → logprob: -15.125048637390137
    5. '((' → logprob: -16.250049591064453
    6. 'b' → logprob: -16.625049591064453
    7. ' (' → logprob: -16.750049591064453
    8. '(B' → logprob: -18.875049591064453
    9. 'a' → logprob: -19.625049591064453
    10. '(res' → logprob: -19.875049591064453

Token 114: '_rev' (ID: 99394)
  Prédit: '_rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rev' → logprob: -0.02342773787677288
    2. '_flip' → logprob: -3.773427724838257
    3. '[::-' → logprob: -8.648427963256836
    4. '_fl' → logprob: -12.898427963256836
    5. 'rev' → logprob: -13.898427963256836
    6. '_inv' → logprob: -14.523427963256836
    7. '_reverse' → logprob: -14.648427963256836
    8. 'Rev' → logprob: -14.773427963256836
    9. ')' → logprob: -15.273427963256836
    10. '.flip' → logprob: -15.523427963256836

Token 115: '+a' (ID: 142749)
  Prédit: '+a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+a' → logprob: -0.01382472738623619
    2. '+b' → logprob: -4.638824939727783
    3. '+' → logprob: -5.513824939727783
    4. '_flip' → logprob: -12.138824462890625
    5. '+)' → logprob: -12.388824462890625
    6. 'a' → logprob: -12.638824462890625
    7. '+s' → logprob: -12.888824462890625
    8. '+A' → logprob: -13.013824462890625
    9. ')+' → logprob: -13.138824462890625
    10. '+
' → logprob: -13.763824462890625

Token 116: '_rev' (ID: 99394)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5211734771728516
    2. '_flip' → logprob: -1.0211734771728516
    3. '_rev' → logprob: -3.1461734771728516
    4. ')
' → logprob: -6.646173477172852
    5. ')_' → logprob: -7.021173477172852
    6. '))' → logprob: -8.771173477172852
    7. 'rev' → logprob: -9.271173477172852
    8. '+' → logprob: -9.521173477172852
    9. 'flip' → logprob: -9.896173477172852
    10. '_)' → logprob: -9.896173477172852

Token 117: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.429896944202483e-05
    2. ')
' → logprob: -10.500043869018555
    3. '       ' → logprob: -11.250043869018555
    4. '()' → logprob: -13.875043869018555
    5. '())' → logprob: -14.000043869018555
    6. '))' → logprob: -14.250043869018555
    7. ' )' → logprob: -14.875043869018555
    8. '   ' → logprob: -15.000043869018555
    9. ')}' → logprob: -15.625043869018555
    10. '`)' → logprob: -16.375043869018555

Token 118: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.25497162342071533
    2. '   ' → logprob: -1.5049716234207153
    3. 'for' → logprob: -5.879971504211426
    4. '       ' → logprob: -9.629971504211426
    5. '
' → logprob: -9.879971504211426
    6. '```' → logprob: -9.879971504211426
    7. ' print' → logprob: -10.754971504211426
    8. '    
' → logprob: -11.129971504211426
    9. ' for' → logprob: -11.504971504211426
    10. ')' → logprob: -12.379971504211426

Token 119: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03062327764928341
    2. '   ' → logprob: -3.530623197555542
    3. ')' → logprob: -7.780623435974121
    4. ')
' → logprob: -8.530623435974121
    5. ' print' → logprob: -9.030623435974121
    6. '```' → logprob: -9.655623435974121
    7. 'if' → logprob: -10.780623435974121
    8. '
' → logprob: -11.155623435974121
    9. 'for' → logprob: -11.655623435974121
    10. '       ' → logprob: -12.030623435974121

Token 120: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0002856497303582728
    2. '(' → logprob: -8.500286102294922
    3. '(max' → logprob: -9.500286102294922
    4. 'len' → logprob: -13.000286102294922
    5. '(sorted' → logprob: -13.125286102294922
    6. '(min' → logprob: -13.500286102294922
    7. '()' → logprob: -13.625286102294922
    8. '(sum' → logprob: -15.500286102294922
    9. '('' → logprob: -15.500286102294922
    10. '(
' → logprob: -17.250286102294922

Token 121: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0015046248445287347
    2. '(' → logprob: -6.501504421234131
    3. 'res' → logprob: -13.251504898071289
    4. '(
' → logprob: -15.001504898071289
    5. ' (' → logprob: -15.876504898071289
    6. ')' → logprob: -17.37650489807129
    7. '(s' → logprob: -17.87650489807129
    8. '(

' → logprob: -17.87650489807129
    9. '(rest' → logprob: -18.37650489807129
    10. '	res' → logprob: -18.37650489807129

Token 122: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007141007808968425
    2. '))' → logprob: -7.250714302062988
    3. '())' → logprob: -12.625714302062988
    4. '()' → logprob: -15.500714302062988
    5. ')))' → logprob: -15.750714302062988
    6. ' )' → logprob: -16.000713348388672
    7. '`)' → logprob: -16.500713348388672
    8. '})' → logprob: -16.750713348388672
    9. ')`' → logprob: -16.750713348388672
    10. ')}' → logprob: -17.000713348388672


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 120
Tokens correctement prédits (1ère position, stricte): 59
Tokens correctement prédits (1ère position, avec adaptation): 64
Tokens correctement prédits (top 10): 103
Précision stricte (1ère position): 49.17%
Précision adaptée (1ère position): 53.33%
Précision (top 10): 85.83%
================================================================================
