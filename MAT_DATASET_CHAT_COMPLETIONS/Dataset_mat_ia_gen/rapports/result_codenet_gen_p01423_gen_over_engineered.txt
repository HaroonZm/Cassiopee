================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Rabbit:
    def __init__(self, id_):
        self.id = id_
        self.friends = {}
    
    def add_friend(self, other, friendliness):
        self.friends[other] = friendliness
    
    def potential_satisfaction(self, group):
        # Calculate minimal friendliness with other guests in the group
        if len(group) <= 1:
            return 0
        relevant = [self.friends.get(r.id, 0) for r in group if r != self]
        if 0 in relevant:
            return 0
        return min(relevant)

class Party:
    def __init__(self, rabbits):
        self.rabbits = rabbits
    
    def satisfaction(self, group):
        return sum(r.potential_satisfaction(group) for r in group)
    
    def max_satisfaction(self):
        # We seek subset of rabbits maximizing satisfaction score
        # Given n up to 100, we try advanced branch and bound with abstractions
        
        from itertools import combinations
        
        class CandidateGroup:
            def __init__(self, members):
                self.members = members
                self.score = None
            
            def compute_score(self):
                if self.score is not None:
                    return self.score
                if len(self.members) == 0:
                    self.score = 0
                    return 0
                self.score = sum(r.potential_satisfaction(self.members) for r in self.members)
                return self.score
        
        class Solver:
            def __init__(self, rabbits):
                self.rabbits = rabbits
                self.n = len(rabbits)
                self.best_score = 0
                self.best_group = []
            
            def _improve(self, group):
                score = group.compute_score()
                if score > self.best_score:
                    self.best_score = score
                    self.best_group = group.members[:]
            
            def _recursive_search(self, group, index):
                # Pruning: estimate maximum possible score from remaining rabbits
                self._improve(group)
                
                if index >= self.n:
                    return
                
                # Try excluding current rabbit
                self._recursive_search(group, index+1)
                
                # Try including current rabbit
                new_members = group.members + [self.rabbits[index]]
                new_group = CandidateGroup(new_members)
                
                # Heuristic pruning: if any in new_members has 0 friendship with others, skip
                # But allow single member groups (score=0)
                # relaxed to not prune here because 0 minimal would yield 0 satisfaction for that rabbit, but maybe group still improves overall
                self._recursive_search(new_group, index+1)
            
            def solve(self):
                initial_group = CandidateGroup([])
                self._recursive_search(initial_group, 0)
                return self.best_score
        
        solver = Solver(self.rabbits)
        return solver.solve()

class RabbitGraph:
    def __init__(self, n):
        self.rabbits = [Rabbit(i+1) for i in range(n)]
    
    def add_edge(self, u, v, f):
        self.rabbits[u-1].add_friend(self.rabbits[v-1], f)
        self.rabbits[v-1].add_friend(self.rabbits[u-1], f)
    
    def solve(self):
        party = Party(self.rabbits)
        return party.max_satisfaction()

def main():
    import sys
    input = sys.stdin.readline
    n,m = map(int, input().split())
    graph = RabbitGraph(n)
    for _ in range(m):
        u,v,f = map(int, input().split())
        graph.add_edge(u,v,f)
    print(graph.solve())

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Rabbit' (ID: 79131)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12942646443843842
    2. '```' → logprob: -2.8794264793395996
    3. '(' → logprob: -3.3794264793395996
    4. '   ' → logprob: -4.6294264793396
    5. '.' → logprob: -4.7544264793396
    6. ''' → logprob: -5.7544264793396
    7. '\' → logprob: -6.2544264793396
    8. '`' → logprob: -6.2544264793396
    9. ':
' → logprob: -6.5044264793396
    10. '    ' → logprob: -7.1294264793396

Token 4: ' def' (ID: 1056)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.513016402721405
    2. '   ' → logprob: -2.26301646232605
    3. '_' → logprob: -2.63801646232605
    4. 'def' (adapté à ' def') → logprob: -2.76301646232605
    5. '`' → logprob: -3.01301646232605
    6. '\' → logprob: -3.63801646232605
    7. '(' → logprob: -3.76301646232605
    8. 's' → logprob: -4.263016223907471
    9. '\n' → logprob: -5.013016223907471
    10. ' def' → logprob: -5.013016223907471

Token 5: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07681310921907425
    2. ' __' → logprob: -2.951813220977783
    3. '__' → logprob: -5.076813220977783
    4. ' ' → logprob: -5.826813220977783
    5. ' init' → logprob: -5.951813220977783
    6. '<|end|>' → logprob: -6.076813220977783
    7. ' )' → logprob: -6.451813220977783
    8. '    ' → logprob: -7.451813220977783
    9. ' def' → logprob: -7.576813220977783
    10. ')' → logprob: -7.701813220977783

Token 6: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.127333340875339e-06
    2. '_init' → logprob: -13.125003814697266
    3. ' init' → logprob: -13.375003814697266
    4. '_' → logprob: -15.375003814697266
    5. 'ini' → logprob: -15.750003814697266
    6. '	init' → logprob: -17.500003814697266
    7. 'in' → logprob: -18.250003814697266
    8. '__' → logprob: -18.375003814697266
    9. 'innit' → logprob: -18.625003814697266
    10. 'inite' → logprob: -18.875003814697266

Token 7: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.5803901553153992
    2. '__' → logprob: -0.8303901553153992
    3. '_' → logprob: -5.580389976501465
    4. '__(
' → logprob: -8.205389976501465
    5. '(' → logprob: -8.330389976501465
    6. '__((' → logprob: -10.080389976501465
    7. '_(' → logprob: -10.330389976501465
    8. '___' → logprob: -10.705389976501465
    9. '__('' → logprob: -10.705389976501465
    10. '```' → logprob: -11.455389976501465

Token 8: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008079635445028543
    2. ' self' → logprob: -7.125807762145996
    3. '(self' → logprob: -13.125807762145996
    4. ')' → logprob: -14.000807762145996
    5. ' ' → logprob: -15.875807762145996
    6. '_self' → logprob: -15.875807762145996
    7. '       ' → logprob: -16.625808715820312
    8. 's' → logprob: -16.750808715820312
    9. ',self' → logprob: -17.000808715820312
    10. '   ' → logprob: -17.000808715820312

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6795746684074402
    2. ')' → logprob: -1.054574728012085
    3. 'self' → logprob: -3.054574728012085
    4. '_' → logprob: -3.304574728012085
    5. '):' → logprob: -3.804574728012085
    6. '(' → logprob: -3.929574728012085
    7. '(self' → logprob: -5.429574489593506
    8. '<|end|>' → logprob: -5.554574489593506
    9. '_self' → logprob: -6.304574489593506
    10. ' )' → logprob: -7.054574489593506

Token 10: ' id' (ID: 1211)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.21527348458766937
    2. ' )' → logprob: -2.340273380279541
    3. ' self' → logprob: -2.715273380279541
    4. ')' → logprob: -4.090273380279541
    5. 'name' → logprob: -4.590273380279541
    6. ' name' → logprob: -6.090273380279541
    7. ' rabbit' → logprob: -7.090273380279541
    8. 'rabbit' → logprob: -8.5902738571167
    9. '<|end|>' → logprob: -9.3402738571167
    10. 'r' → logprob: -9.4652738571167

Token 11: '_' (ID: 62)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4385787844657898
    2. ')' → logprob: -1.0635788440704346
    3. '_' → logprob: -5.1885786056518555
    4. ',' → logprob: -5.5635786056518555
    5. ':' → logprob: -8.563578605651855
    6. '=' → logprob: -10.313578605651855
    7. 's' → logprob: -10.438578605651855
    8. '):
' → logprob: -10.938578605651855
    9. '```' → logprob: -11.063578605651855
    10. '_r' → logprob: -11.313578605651855

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21320146322250366
    2. ')' → logprob: -1.7132015228271484
    3. ',' → logprob: -4.463201522827148
    4. ':' → logprob: -9.463201522827148
    5. '_' → logprob: -10.088201522827148
    6. ' ):' → logprob: -11.088201522827148
    7. '):
' → logprob: -11.213201522827148
    8. ' ,' → logprob: -12.088201522827148
    9. ' )' → logprob: -12.213201522827148
    10. 'a' → logprob: -12.588201522827148

Token 13: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029080640524625778
    2. '    ' → logprob: -4.404080867767334
    3. '   ' → logprob: -4.654080867767334
    4. '(' → logprob: -6.904080867767334
    5. ':' → logprob: -7.029080867767334
    6. '     ' → logprob: -7.154080867767334
    7. '\' → logprob: -7.404080867767334
    8. ' :' → logprob: -7.404080867767334
    9. '        ' → logprob: -7.779080867767334
    10. ' ' → logprob: -7.904080867767334

Token 14: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.24028468132019043
    2. ' self' → logprob: -1.6152846813201904
    3. '       ' → logprob: -5.2402849197387695
    4. 's' → logprob: -5.7402849197387695
    5. ' ' → logprob: -5.9902849197387695
    6. '_' → logprob: -6.3652849197387695
    7. '        ' → logprob: -7.2402849197387695
    8. '   ' → logprob: -7.3652849197387695
    9. '    ' → logprob: -7.9902849197387695
    10. ' ' → logprob: -8.99028491973877

Token 15: '.id' (ID: 2858)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.014354129321873188
    2. '.id' → logprob: -4.264354228973389
    3. ' .' → logprob: -9.13935375213623
    4. '.name' → logprob: -10.88935375213623
    5. ' ' → logprob: -11.38935375213623
    6. 'id' → logprob: -11.51435375213623
    7. '._' → logprob: -11.63935375213623
    8. '   ' → logprob: -11.88935375213623
    9. ' id' → logprob: -12.63935375213623
    10. '_id' → logprob: -12.63935375213623

Token 16: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014606967568397522
    2. '_=' → logprob: -4.764606952667236
    3. '=' → logprob: -5.139606952667236
    4. ' =' → logprob: -9.889607429504395
    5. '_)' → logprob: -11.139607429504395
    6. '__' → logprob: -11.264607429504395
    7. ')' → logprob: -11.889607429504395
    8. '_

' → logprob: -12.014607429504395
    9. '<|end|>' → logprob: -12.264607429504395
    10. ' _' → logprob: -12.889607429504395

Token 17: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.16022473573684692
    2. ' id' → logprob: -1.9102246761322021
    3. ' ' → logprob: -15.285224914550781
    4. '(id' → logprob: -15.910224914550781
    5. '	id' → logprob: -16.03522491455078
    6. '_id' → logprob: -16.78522491455078
    7. '_' → logprob: -17.78522491455078
    8. ' ' → logprob: -18.03522491455078
    9. '=id' → logprob: -18.16022491455078
    10. '[id' → logprob: -19.03522491455078

Token 18: '_
' (ID: 27437)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.5491004129871726e-05
    2. '_
' → logprob: -10.625045776367188
    3. '_)' → logprob: -11.000045776367188
    4. '_

' → logprob: -12.625045776367188
    5. '_]' → logprob: -14.500045776367188
    6. '_
' → logprob: -15.500045776367188
    7. '__' → logprob: -15.750045776367188
    8. ' _' → logprob: -16.250045776367188
    9. '_;' → logprob: -17.250045776367188
    10. '_##' → logprob: -17.250045776367188

Token 19: '       ' (ID: 309)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.626055121421814
    2. '\' → logprob: -2.0010552406311035
    3. '
' → logprob: -2.3760552406311035
    4. '\n' → logprob: -2.6260552406311035
    5. '<|end|>' → logprob: -3.3760552406311035
    6. ',' → logprob: -4.0010552406311035
    7. ':' → logprob: -4.0010552406311035
    8. '   ' → logprob: -4.3760552406311035
    9. '```' → logprob: -4.3760552406311035
    10. ''' → logprob: -4.7510552406311035

Token 20: ' self' (ID: 1051)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.33351171016693115
    2. 'def' → logprob: -2.3335118293762207
    3. ' ' → logprob: -2.9585118293762207
    4. '\' → logprob: -3.5835118293762207
    5. '       ' → logprob: -4.083511829376221
    6. '
' → logprob: -4.333511829376221
    7. '   ' → logprob: -4.333511829376221
    8. '<|end|>' → logprob: -4.458511829376221
    9. ' 
' → logprob: -4.583511829376221
    10. '\r' → logprob: -4.708511829376221

Token 21: '.f' (ID: 1196)
  Prédit: '_name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_name' → logprob: -0.9701594710350037
    2. '._' → logprob: -1.2201595306396484
    3. ' .' → logprob: -2.2201595306396484
    4. '.' → logprob: -2.5951595306396484
    5. ' _' → logprob: -3.3451595306396484
    6. '.name' → logprob: -3.8451595306396484
    7. '_' → logprob: -3.9701595306396484
    8. 's' → logprob: -4.595159530639648
    9. '_tags' → logprob: -4.720159530639648
    10. 'name' → logprob: -5.470159530639648

Token 22: 'riends' (ID: 16678)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.8931662440299988
    2. 'riends' → logprob: -1.1431663036346436
    3. 'e' → logprob: -2.5181663036346436
    4. 'amily' → logprob: -3.3931663036346436
    5. 'ood' → logprob: -3.8931663036346436
    6. 'riend' → logprob: -4.0181660652160645
    7. 'a' → logprob: -4.1431660652160645
    8. 'r' → logprob: -4.2681660652160645
    9. 'u' → logprob: -4.7681660652160645
    10. 'o' → logprob: -4.8931660652160645

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05587346851825714
    2. '=' → logprob: -2.930873394012451
    3. '=[]' → logprob: -8.18087387084961
    4. '_' → logprob: -8.30587387084961
    5. '.' → logprob: -8.43087387084961
    6. '   ' → logprob: -9.55587387084961
    7. ' ' → logprob: -10.05587387084961
    8. ')' → logprob: -10.68087387084961
    9. '_ids' → logprob: -10.80587387084961
    10. '_list' → logprob: -11.18087387084961

Token 24: ' {}
' (ID: 11421)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.05563804507255554
    2. ' []' → logprob: -3.305638074874878
    3. 'set' → logprob: -4.305637836456299
    4. ' set' → logprob: -5.680637836456299
    5. '{}' → logprob: -7.555637836456299
    6. ' {}' → logprob: -11.805638313293457
    7. '[]}' → logprob: -12.305638313293457
    8. '[' → logprob: -13.430638313293457
    9. ' ' → logprob: -14.055638313293457
    10. '[]
' → logprob: -14.180638313293457

Token 25: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20729681849479675
    2. ' ' → logprob: -2.832296848297119
    3. '.' → logprob: -3.457296848297119
    4. '
' → logprob: -3.707296848297119
    5. '[' → logprob: -4.207296848297119
    6. '    
' → logprob: -4.332296848297119
    7. '\' → logprob: -4.707296848297119
    8. ' 
' → logprob: -5.082296848297119
    9. '<|end|>' → logprob: -5.082296848297119
    10. 'def' → logprob: -5.582296848297119

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05043628066778183
    2. ' def' → logprob: -3.42543625831604
    3. 'def' → logprob: -5.050436496734619
    4. '    
' → logprob: -5.175436496734619
    5. ' ' → logprob: -6.675436496734619
    6. ' 
' → logprob: -6.925436496734619
    7. '    ' → logprob: -7.050436496734619
    8. '        
' → logprob: -7.550436496734619
    9. '       ' → logprob: -8.800436019897461
    10. '     
' → logprob: -8.800436019897461

Token 27: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.017360862344503403
    2. ' def' → logprob: -4.142360687255859
    3. '   ' → logprob: -6.892360687255859
    4. ' ' → logprob: -9.01736068725586
    5. 'd' → logprob: -9.89236068725586
    6. '    
' → logprob: -10.76736068725586
    7. 'space' → logprob: -10.89236068725586
    8. '    ' → logprob: -10.89236068725586
    9. ' 
' → logprob: -11.26736068725586
    10. '        
' → logprob: -11.39236068725586

Token 28: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.024291321635246277
    2. ' ' → logprob: -4.649291515350342
    3. ' make' → logprob: -4.649291515350342
    4. 'add' → logprob: -5.649291515350342
    5. ' find' → logprob: -8.024291038513184
    6. ' __' → logprob: -8.399291038513184
    7. ' space' → logprob: -8.524291038513184
    8. ' get' → logprob: -9.024291038513184
    9. ' have' → logprob: -9.149291038513184
    10. 'make' → logprob: -9.399291038513184

Token 29: '_friend' (ID: 156782)
  Prédit: '_friend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_friend' → logprob: -0.012616774067282677
    2. '_' → logprob: -5.0126166343688965
    3. '_f' → logprob: -5.1376166343688965
    4. '(' → logprob: -12.887617111206055
    5. '_user' → logprob: -13.637617111206055
    6. ' ' → logprob: -13.637617111206055
    7. '_fr' → logprob: -13.762617111206055
    8. 'Friend' → logprob: -13.887617111206055
    9. '_peer' → logprob: -14.137617111206055
    10. 'friend' → logprob: -14.137617111206055

Token 30: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002192256273701787
    2. ' (' → logprob: -6.62719202041626
    3. '(self' → logprob: -7.50219202041626
    4. 's' → logprob: -9.502192497253418
    5. ')' → logprob: -9.752192497253418
    6. '(s' → logprob: -9.877192497253418
    7. '(
' → logprob: -10.502192497253418
    8. '<|end|>' → logprob: -10.502192497253418
    9. '_' → logprob: -10.877192497253418
    10. ' ' → logprob: -11.377192497253418

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012057597748935223
    2. ' ,' → logprob: -4.637057781219482
    3. ')' → logprob: -6.512057781219482
    4. 'self' → logprob: -7.637057781219482
    5. ' )' → logprob: -8.512057304382324
    6. ',self' → logprob: -10.012057304382324
    7. '   ' → logprob: -11.137057304382324
    8. ' ' → logprob: -11.387057304382324
    9. ',r' → logprob: -11.387057304382324
    10. '_,' → logprob: -12.262057304382324

Token 32: ' other' (ID: 1273)
  Prédit: ' friend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' friend' → logprob: -0.6929656267166138
    2. ' rabbit' → logprob: -0.9429656267166138
    3. 'friend' → logprob: -2.442965507507324
    4. ' other' → logprob: -3.942965507507324
    5. 'rabbit' → logprob: -6.317965507507324
    6. 'other' → logprob: -6.567965507507324
    7. ' id' → logprob: -8.567965507507324
    8. ' name' → logprob: -9.192965507507324
    9. 'id' → logprob: -9.567965507507324
    10. ' self' → logprob: -9.567965507507324

Token 33: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5447813272476196
    2. ')' → logprob: -1.0447813272476196
    3. '_r' → logprob: -2.79478120803833
    4. ',' → logprob: -5.79478120803833
    5. ' ):' → logprob: -6.54478120803833
    6. ' )' → logprob: -6.91978120803833
    7. ':' → logprob: -7.91978120803833
    8. ' ' → logprob: -8.044781684875488
    9. '_' → logprob: -8.169781684875488
    10. '):
' → logprob: -8.544781684875488

Token 34: ' friendliness' (ID: 184361)
  Prédit: ' weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' weight' → logprob: -1.6079188585281372
    2. ' strength' → logprob: -1.8579188585281372
    3. ' mutual' → logprob: -2.4829187393188477
    4. ' count' → logprob: -2.8579187393188477
    5. ' distance' → logprob: -2.8579187393188477
    6. 'weight' → logprob: -2.8579187393188477
    7. ')' → logprob: -2.9829187393188477
    8. ' None' → logprob: -3.4829187393188477
    9. 'distance' → logprob: -3.4829187393188477
    10. ' )' → logprob: -3.7329187393188477

Token 35: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11525150388479233
    2. '=' → logprob: -2.2402515411376953
    3. ')' → logprob: -6.365251541137695
    4. ' ):' → logprob: -7.990251541137695
    5. '_level' → logprob: -8.865251541137695
    6. '_score' → logprob: -8.990251541137695
    7. ':' → logprob: -10.490251541137695
    8. ' ' → logprob: -10.990251541137695
    9. ',' → logprob: -11.115251541137695
    10. '):
' → logprob: -11.115251541137695

Token 36: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2942960262298584
    2. '       ' → logprob: -2.2942960262298584
    3. '):' → logprob: -2.5442960262298584
    4. ' :' → logprob: -2.9192960262298584
    5. ' ):' → logprob: -5.1692962646484375
    6. '():' → logprob: -5.5442962646484375
    7. ')' → logprob: -6.0442962646484375
    8. '\' → logprob: -6.4192962646484375
    9. '    ' → logprob: -6.6692962646484375
    10. ' ' → logprob: -7.0442962646484375

Token 37: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39052847027778625
    2. ' ' → logprob: -1.6405284404754639
    3. 'self' (adapté à ' self') → logprob: -2.765528440475464
    4. '        ' → logprob: -3.765528440475464
    5. ' self' → logprob: -4.015528678894043
    6. ' )' → logprob: -5.265528678894043
    7. ')' → logprob: -5.390528678894043
    8. '\' → logprob: -5.765528678894043
    9. '        
' → logprob: -6.390528678894043
    10. '    ' → logprob: -6.765528678894043

Token 38: '.f' (ID: 1196)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.35019949078559875
    2. '.f' → logprob: -1.2251994609832764
    3. '.friend' → logprob: -6.8501996994018555
    4. '.fre' → logprob: -7.4751996994018555
    5. ').' → logprob: -10.475199699401855
    6. '.user' → logprob: -11.100199699401855
    7. ' .' → logprob: -11.350199699401855
    8. '.users' → logprob: -11.975199699401855
    9. '.social' → logprob: -12.100199699401855
    10. '.add' → logprob: -12.475199699401855

Token 39: 'riends' (ID: 16678)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.285096675157547
    2. 'riends' → logprob: -1.7850966453552246
    3. 'riend' → logprob: -3.2850966453552246
    4. 'rie' → logprob: -3.5350966453552246
    5. '.' → logprob: -4.785096645355225
    6. '.r' → logprob: -5.285096645355225
    7. 'ri' → logprob: -8.910097122192383
    8. 'a' → logprob: -10.660097122192383
    9. '._' → logprob: -11.535097122192383
    10. '.add' → logprob: -11.535097122192383

Token 40: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '[new' → logprob: -16.375
    3. '[self' → logprob: -16.75
    4. '[to' → logprob: -16.875
    5. 'other' → logprob: -17.125
    6. '[...]' → logprob: -17.375
    7. ' [' → logprob: -17.375
    8. ' ' → logprob: -17.5
    9. '.setdefault' → logprob: -17.5
    10. '.' → logprob: -17.5

Token 41: 'other' (ID: 2141)
  Prédit: 'other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -7.896309739408025e-07
    2. 'othe' → logprob: -14.875000953674316
    3. ' other' → logprob: -15.125000953674316
    4. 'oth' → logprob: -16.625
    5. 'o' → logprob: -19.875
    6. '(other' → logprob: -20.125
    7. 'ot' → logprob: -20.75
    8. '   ' → logprob: -21.125
    9. '.other' → logprob: -21.25
    10. 'Other' → logprob: -21.5

Token 42: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.847109812544659e-05
    2. ' ]' → logprob: -10.375048637390137
    3. ']=' → logprob: -11.000048637390137
    4. ')]' → logprob: -15.250048637390137
    5. ')' → logprob: -15.375048637390137
    6. '']' → logprob: -17.00004768371582
    7. ',' → logprob: -17.50004768371582
    8. '.' → logprob: -17.62504768371582
    9. '   ' → logprob: -17.87504768371582
    10. '`]' → logprob: -17.87504768371582

Token 43: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22542385756969452
    2. ' =' → logprob: -1.600423812866211
    3. ' ' → logprob: -12.850423812866211
    4. ')' → logprob: -13.100423812866211
    5. '.' → logprob: -13.350423812866211
    6. ']' → logprob: -13.475423812866211
    7. '[' → logprob: -13.975423812866211
    8. ',' → logprob: -14.350423812866211
    9. ':' → logprob: -15.100423812866211
    10. '<|end|>' → logprob: -15.100423812866211

Token 44: ' friendliness' (ID: 184361)
  Prédit: 'friend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'friend' → logprob: -0.22776295244693756
    2. ' friendliness' → logprob: -1.6027629375457764
    3. ' friend' → logprob: -6.7277631759643555
    4. 'friendly' → logprob: -7.1027631759643555
    5. ' friendly' → logprob: -8.727763175964355
    6. '_friend' → logprob: -10.602763175964355
    7. ' kindness' → logprob: -10.602763175964355
    8. ' ' → logprob: -10.977763175964355
    9. 'freund' → logprob: -11.102763175964355
    10. ' friendship' → logprob: -11.352763175964355

Token 45: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3062208890914917
    2. '\n' → logprob: -2.4312210083007812
    3. '<|end|>' → logprob: -2.5562210083007812
    4. '    
' → logprob: -3.3062210083007812
    5. ' 
' → logprob: -3.6812210083007812
    6. '   ' → logprob: -4.306221008300781
    7. '\' → logprob: -5.056221008300781
    8. '  
' → logprob: -5.556221008300781
    9. 'newline' → logprob: -6.556221008300781
    10. '<|end|>' → logprob: -6.556221008300781

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1911855787038803
    2. 'def' → logprob: -2.441185474395752
    3. '    
' → logprob: -2.941185474395752
    4. '
' → logprob: -3.816185474395752
    5. ' def' → logprob: -5.816185474395752
    6. ' 
' → logprob: -6.316185474395752
    7. ' ' → logprob: -6.441185474395752
    8. '  
' → logprob: -6.441185474395752
    9. '        
' → logprob: -6.941185474395752
    10. '   
' → logprob: -7.191185474395752

Token 47: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.001772638875991106
    2. '   ' → logprob: -6.751772403717041
    3. ' def' → logprob: -7.501772403717041
    4. ' ' → logprob: -11.3767728805542
    5. 'return' → logprob: -11.7517728805542
    6. '```' → logprob: -11.7517728805542
    7. '@' → logprob: -12.0017728805542
    8. '       ' → logprob: -12.2517728805542
    9. 'd' → logprob: -13.0017728805542
    10. '    
' → logprob: -13.1267728805542

Token 48: ' potential' (ID: 6451)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.04585720971226692
    2. ' friend' → logprob: -4.0458574295043945
    3. ' remove' → logprob: -4.4208574295043945
    4. ' friends' → logprob: -5.5458574295043945
    5. ' def' → logprob: -6.1708574295043945
    6. ' find' → logprob: -6.2958574295043945
    7. ' __' → logprob: -6.2958574295043945
    8. ' is' → logprob: -7.4208574295043945
    9. ' friendly' → logprob: -7.4208574295043945
    10. ' ' → logprob: -7.5458574295043945

Token 49: '_s' (ID: 1278)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.4056883752346039
    2. '_' → logprob: -1.2806884050369263
    3. '_friend' → logprob: -2.9056882858276367
    4. '_fr' → logprob: -8.530688285827637
    5. ' _' → logprob: -9.155688285827637
    6. '_r' → logprob: -9.280688285827637
    7. '_p' → logprob: -9.655688285827637
    8. '_connections' → logprob: -10.405688285827637
    9. '_helpers' → logprob: -10.405688285827637
    10. '_rewards' → logprob: -10.655688285827637

Token 50: 'atisfaction' (ID: 60876)
  Prédit: 'uccess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uccess' → logprob: -1.4560061693191528
    2. 'core' → logprob: -1.5810061693191528
    3. 'ources' → logprob: -1.9560061693191528
    4. 'ource' → logprob: -2.3310060501098633
    5. 'u' → logprob: -2.9560060501098633
    6. 't' → logprob: -3.2060060501098633
    7. 'olutions' → logprob: -3.2060060501098633
    8. 'ocial' → logprob: -3.8310060501098633
    9. 'uggestions' → logprob: -3.8310060501098633
    10. 'olution' → logprob: -3.8310060501098633

Token 51: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.38705506920814514
    2. '(' → logprob: -1.1370550394058228
    3. '(s' → logprob: -10.137055397033691
    4. 'self' → logprob: -10.137055397033691
    5. ' (' → logprob: -10.637055397033691
    6. '(
' → logprob: -10.887055397033691
    7. 's' → logprob: -11.012055397033691
    8. '   ' → logprob: -11.387055397033691
    9. ')' → logprob: -11.387055397033691
    10. '(Self' → logprob: -12.387055397033691

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3908768892288208
    2. '):' → logprob: -1.1408768892288208
    3. 'self' → logprob: -5.890876770019531
    4. ')' → logprob: -7.265876770019531
    5. ' ,' → logprob: -8.515876770019531
    6. '):
' → logprob: -9.390876770019531
    7. '(self' → logprob: -10.390876770019531
    8. ' ):' → logprob: -10.390876770019531
    9. 's' → logprob: -10.515876770019531
    10. ',self' → logprob: -10.640876770019531

Token 53: ' group' (ID: 3566)
  Prédit: ' other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.6045199036598206
    2. ' rabbit' → logprob: -1.9795198440551758
    3. ' self' → logprob: -2.104519844055176
    4. 'other' → logprob: -3.479519844055176
    5. ' friend' → logprob: -3.479519844055176
    6. ' )' → logprob: -3.604519844055176
    7. 'self' → logprob: -3.979519844055176
    8. ' new' → logprob: -4.354519844055176
    9. 'friend' → logprob: -4.479519844055176
    10. ')' → logprob: -4.479519844055176

Token 54: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5850459337234497
    2. ',' → logprob: -0.8350459337234497
    3. ')' → logprob: -5.58504581451416
    4. ' ,' → logprob: -6.33504581451416
    5. '):
' → logprob: -6.46004581451416
    6. '   ' → logprob: -7.21004581451416
    7. '       ' → logprob: -8.08504581451416
    8. ' ):' → logprob: -8.33504581451416
    9. ')=' → logprob: -9.58504581451416
    10. 's' → logprob: -9.58504581451416

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19307579100131989
    2. ':' → logprob: -1.8180757761001587
    3. ':
' → logprob: -5.818075656890869
    4. '):' → logprob: -5.943075656890869
    5. '(' → logprob: -6.193075656890869
    6. '   ' → logprob: -6.443075656890869
    7. ')' → logprob: -7.068075656890869
    8. ' :' → logprob: -7.193075656890869
    9. '[' → logprob: -8.193076133728027
    10. '.' → logprob: -8.443076133728027

Token 56: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48047205805778503
    2. 's' → logprob: -1.6054720878601074
    3. 'total' → logprob: -2.9804720878601074
    4. 'return' → logprob: -3.2304720878601074
    5. 'sum' → logprob: -3.3554720878601074
    6. '   ' → logprob: -4.605472087860107
    7. ' total' → logprob: -4.605472087860107
    8. ' return' → logprob: -4.980472087860107
    9. 'max' → logprob: -5.605472087860107
    10. 'score' → logprob: -5.855472087860107

Token 57: ' Calculate' (ID: 38942)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.4019743204116821
    2. ' return' → logprob: -2.1519742012023926
    3. ' ' → logprob: -2.2769742012023926
    4. 'sum' → logprob: -2.2769742012023926
    5. 'return' → logprob: -2.7769742012023926
    6. '       ' → logprob: -2.7769742012023926
    7. ' max' → logprob: -3.1519742012023926
    8. ' total' → logprob: -3.2769742012023926
    9. 's' → logprob: -3.4019742012023926
    10. '   ' → logprob: -3.5269742012023926

Token 58: ' minimal' (ID: 19957)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -1.2517532110214233
    2. 'sum' → logprob: -1.2517532110214233
    3. ' total' → logprob: -1.6267532110214233
    4. '       ' → logprob: -2.751753330230713
    5. 'total' → logprob: -3.251753330230713
    6. 's' → logprob: -3.376753330230713
    7. ' potential' → logprob: -3.501753330230713
    8. '   ' → logprob: -4.001753330230713
    9. '    ' → logprob: -4.501753330230713
    10. ' satisfaction' → logprob: -4.751753330230713

Token 59: ' friendliness' (ID: 184361)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2687831223011017
    2. '_friend' → logprob: -2.0187830924987793
    3. '_s' → logprob: -3.2687830924987793
    4. '_f' → logprob: -3.8937830924987793
    5. ' ' → logprob: -4.018783092498779
    6. ' _' → logprob: -4.518783092498779
    7. ' =' → logprob: -5.018783092498779
    8. '(' → logprob: -5.768783092498779
    9. 's' → logprob: -6.768783092498779
    10. '   ' → logprob: -6.893783092498779

Token 60: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1807379126548767
    2. '_' → logprob: -2.3057379722595215
    3. '=' → logprob: -3.6807379722595215
    4. ' ' → logprob: -3.6807379722595215
    5. '_score' → logprob: -5.8057379722595215
    6. ':' → logprob: -6.0557379722595215
    7. '   ' → logprob: -6.1807379722595215
    8. ')' → logprob: -6.4307379722595215
    9. '       ' → logprob: -6.6807379722595215
    10. '    ' → logprob: -6.8057379722595215

Token 61: ' other' (ID: 1273)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4431573152542114
    2. ' group' → logprob: -2.318157196044922
    3. ' min' → logprob: -2.568157196044922
    4. ' the' → logprob: -3.318157196044922
    5. 'min' → logprob: -3.568157196044922
    6. '   ' → logprob: -3.693157196044922
    7. ' ' → logprob: -4.193157196044922
    8. ' max' → logprob: -4.318157196044922
    9. 'group' → logprob: -4.818157196044922
    10. ' self' → logprob: -5.193157196044922

Token 62: ' guests' (ID: 13705)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3880537152290344
    2. ' ' → logprob: -2.0130536556243896
    3. ')' → logprob: -3.0130536556243896
    4. '_' → logprob: -3.2630536556243896
    5. ' in' → logprob: -3.3880536556243896
    6. '_r' → logprob: -4.013053894042969
    7. 'r' → logprob: -4.763053894042969
    8. ' s' → logprob: -5.263053894042969
    9. '   ' → logprob: -5.263053894042969
    10. ' =' → logprob: -5.763053894042969

Token 63: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5818739533424377
    2. ':' → logprob: -1.206873893737793
    3. ' =' → logprob: -3.581873893737793
    4. '   ' → logprob: -3.706873893737793
    5. ' ' → logprob: -3.706873893737793
    6. '_' → logprob: -4.581873893737793
    7. '=' → logprob: -4.706873893737793
    8. '    ' → logprob: -4.956873893737793
    9. ')' → logprob: -5.081873893737793
    10. '(' → logprob: -5.081873893737793

Token 64: ' the' (ID: 290)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.015260516665875912
    2. 'group' → logprob: -5.015260696411133
    3. ' ' → logprob: -5.140260696411133
    4. ' the' → logprob: -6.140260696411133
    5. '   ' → logprob: -8.515260696411133
    6. 'the' → logprob: -9.140260696411133
    7. '    ' → logprob: -10.140260696411133
    8. '"group' → logprob: -10.640260696411133
    9. '[group' → logprob: -10.890260696411133
    10. ' a' → logprob: -10.890260696411133

Token 65: ' group' (ID: 3566)
  Prédit: ' group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.012897484935820103
    2. 'group' → logprob: -4.512897491455078
    3. ' ' → logprob: -6.387897491455078
    4. '   ' → logprob: -9.887897491455078
    5. '_' → logprob: -10.887897491455078
    6. '_group' → logprob: -10.887897491455078
    7. ')' → logprob: -11.262897491455078
    8. '"group' → logprob: -11.637897491455078
    9. '	group' → logprob: -11.887897491455078
    10. '[group' → logprob: -12.012897491455078

Token 66: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1967555582523346
    2. ':' → logprob: -1.8217555284500122
    3. ' :' → logprob: -6.071755409240723
    4. '   ' → logprob: -6.196755409240723
    5. ' =' → logprob: -6.571755409240723
    6. ' ' → logprob: -6.571755409240723
    7. '=' → logprob: -6.571755409240723
    8. '<|end|>' → logprob: -6.571755409240723
    9. '.' → logprob: -7.071755409240723
    10. '        
' → logprob: -7.196755409240723

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.366122841835022
    2. ':' → logprob: -1.241122841835022
    3. '   ' → logprob: -5.116122722625732
    4. '=' → logprob: -6.116122722625732
    5. ' =' → logprob: -6.616122722625732
    6. '        
' → logprob: -6.866122722625732
    7. ' ' → logprob: -6.991122722625732
    8. ')' → logprob: -7.116122722625732
    9. ',' → logprob: -7.241122722625732
    10. ':
' → logprob: -7.741122722625732

Token 68: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3385247588157654
    2. 'min' → logprob: -2.33852481842041
    3. ' min' → logprob: -2.83852481842041
    4. 'm' → logprob: -3.46352481842041
    5. ' max' → logprob: -3.58852481842041
    6. 'max' → logprob: -3.58852481842041
    7. '   ' → logprob: -4.46352481842041
    8. ' if' → logprob: -4.96352481842041
    9. 's' → logprob: -5.08852481842041
    10. '        
' → logprob: -5.58852481842041

Token 69: ' len' (ID: 4631)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.8125245571136475
    2. ' self' → logprob: -0.9375245571136475
    3. ' ' → logprob: -2.1875245571136475
    4. ' len' → logprob: -3.1875245571136475
    5. 'self' → logprob: -4.562524795532227
    6. ' other' → logprob: -8.312524795532227
    7. 'len' → logprob: -8.437524795532227
    8. 'not' → logprob: -8.562524795532227
    9. ' ' → logprob: -10.562524795532227
    10. '```' → logprob: -10.812524795532227

Token 70: '(group' (ID: 36416)
  Prédit: '(group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(group' → logprob: -0.07922805100679398
    2. '(' → logprob: -2.579228162765503
    3. ' (' → logprob: -8.204228401184082
    4. '(self' → logprob: -9.954228401184082
    5. ' group' → logprob: -11.454228401184082
    6. ' ' → logprob: -13.329228401184082
    7. '(
' → logprob: -13.579228401184082
    8. '(g' → logprob: -14.079228401184082
    9. '(groups' → logprob: -14.079228401184082
    10. 'group' → logprob: -14.579228401184082

Token 71: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03678993135690689
    2. ' )' → logprob: -3.536789894104004
    3. ' <=' → logprob: -5.536789894104004
    4. ' ==' → logprob: -6.786789894104004
    5. ' <' → logprob: -7.286789894104004
    6. ')<=' → logprob: -7.661789894104004
    7. ')==' → logprob: -7.911789894104004
    8. ' ' → logprob: -8.661789894104004
    9. '==' → logprob: -9.036789894104004
    10. ')<' → logprob: -9.911789894104004

Token 72: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.32771655917167664
    2. ' ==' → logprob: -1.577716588973999
    3. ' <' → logprob: -3.077716588973999
    4. '==' → logprob: -4.57771635055542
    5. ' ' → logprob: -4.95271635055542
    6. '<=' → logprob: -5.20271635055542
    7. ' >' → logprob: -6.07771635055542
    8. '<' → logprob: -6.95271635055542
    9. '   ' → logprob: -8.577716827392578
    10. '>' → logprob: -8.702716827392578

Token 73: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029720881138928235
    2. ' ' → logprob: -8.125297546386719
    3. '   ' → logprob: -14.500297546386719
    4. '```' → logprob: -15.750297546386719
    5. '
' → logprob: -16.25029754638672
    6. '2' → logprob: -16.25029754638672
    7. '

' → logprob: -16.37529754638672
    8. '  ' → logprob: -16.50029754638672
    9. '{' → logprob: -17.37529754638672
    10. '>' → logprob: -17.75029754638672

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '```' → logprob: -16.37504005432129
    4. '   ' → logprob: -16.75004005432129
    5. '2' → logprob: -17.00004005432129
    6. '۱' → logprob: -17.87504005432129
    7. '{' → logprob: -18.12504005432129
    8. '１' → logprob: -18.56254005432129
    9. '  ' → logprob: -18.56254005432129
    10. '' → logprob: -18.56254005432129

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0038398560136556625
    2. ':
' → logprob: -5.75383996963501
    3. ':return' → logprob: -7.37883996963501
    4. ' or' → logprob: -11.128839492797852
    5. '):' → logprob: -12.003839492797852
    6. ',' → logprob: -12.253839492797852
    7. ' :' → logprob: -12.378839492797852
    8. '       ' → logprob: -12.503839492797852
    9. ')' → logprob: -14.003839492797852
    10. '.' → logprob: -14.378839492797852

Token 76: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4901055097579956
    2. ':' → logprob: -1.1151055097579956
    3. '
' → logprob: -3.990105628967285
    4. ':
' → logprob: -4.115105628967285
    5. '       ' → logprob: -4.115105628967285
    6. '\n' → logprob: -5.740105628967285
    7. ':return' → logprob: -6.115105628967285
    8. ' return' → logprob: -7.115105628967285
    9. 'return' → logprob: -7.740105628967285
    10. ' 
' → logprob: -8.365105628967285

Token 77: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2089804410934448
    2. ' return' → logprob: -1.5839804410934448
    3. '           ' → logprob: -1.5839804410934448
    4. 'return' (adapté à ' return') → logprob: -1.7089804410934448
    5. ' 
' → logprob: -2.9589805603027344
    6. '       ' → logprob: -3.8339805603027344
    7. ' ' → logprob: -4.083980560302734
    8. '
' → logprob: -4.208980560302734
    9. '   ' → logprob: -6.708980560302734
    10. '1' → logprob: -7.083980560302734

Token 78: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07935018092393875
    2. '0' → logprob: -2.579350233078003
    3. ' None' → logprob: -7.954349994659424
    4. '1' → logprob: -10.329350471496582
    5. 'None' → logprob: -10.329350471496582
    6. ' ' → logprob: -10.579350471496582
    7. ' 
' → logprob: -12.079350471496582
    8. '        ' → logprob: -12.641850471496582
    9. '10' → logprob: -13.516850471496582
    10. '  ' → logprob: -13.516850471496582

Token 79: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0041051157750189304
    2. '1' → logprob: -6.129105091094971
    3. 'float' → logprob: -6.379105091094971
    4. ' ' → logprob: -9.004105567932129
    5. 'None' → logprob: -9.879105567932129
    6. '-' → logprob: -11.504105567932129
    7. '   ' → logprob: -11.754105567932129
    8. '       ' → logprob: -12.004105567932129
    9. ' float' → logprob: -12.254105567932129
    10. 'self' → logprob: -12.629105567932129

Token 80: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06898479908704758
    2. '\n' → logprob: -3.3189847469329834
    3. '       ' → logprob: -3.8189847469329834
    4. '        
' → logprob: -5.8189849853515625
    5. '    
' → logprob: -5.9439849853515625
    6. ' 
' → logprob: -6.9439849853515625
    7. '' → logprob: -7.9439849853515625
    8. '<|end|>' → logprob: -8.068984985351562
    9. '
' → logprob: -8.193984985351562
    10. '

' → logprob: -8.693984985351562

Token 81: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3015652596950531
    2. '       ' → logprob: -2.051565170288086
    3. '\n' → logprob: -2.801565170288086
    4. '    
' → logprob: -3.426565170288086
    5. '   ' → logprob: -4.676565170288086
    6. '' → logprob: -4.801565170288086
    7. '        
' → logprob: -5.051565170288086
    8. 'n' → logprob: -5.676565170288086
    9. '  
' → logprob: -5.676565170288086
    10. ' 
' → logprob: -6.176565170288086

Token 82: ' relevant' (ID: 12331)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1474246084690094
    2. 'min' → logprob: -2.8974246978759766
    3. 'max' → logprob: -3.8974246978759766
    4. ' min' → logprob: -3.8974246978759766
    5. ' max' → logprob: -4.397424697875977
    6. 's' → logprob: -4.772424697875977
    7. '        
' → logprob: -5.022424697875977
    8. 'm' → logprob: -5.897424697875977
    9. '   ' → logprob: -6.147424697875977
    10. ' minimal' → logprob: -6.772424697875977

Token 83: ' =' (ID: 314)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.6693766117095947
    2. '_' → logprob: -0.9193766117095947
    3. '_friend' → logprob: -2.7943766117095947
    4. ' =' → logprob: -4.044376373291016
    5. '=' → logprob: -5.544376373291016
    6. 's' → logprob: -6.419376373291016
    7. '_values' → logprob: -6.544376373291016
    8. '_scores' → logprob: -7.169376373291016
    9. '_s' → logprob: -7.544376373291016
    10. '_r' → logprob: -7.669376373291016

Token 84: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.027538955211639404
    2. '[min' → logprob: -4.902538776397705
    3. '[' → logprob: -5.152538776397705
    4. ' [
' → logprob: -5.277538776397705
    5. ' []' → logprob: -5.777538776397705
    6. '[max' → logprob: -6.277538776397705
    7. '[
' → logprob: -6.652538776397705
    8. '[]' → logprob: -7.027538776397705
    9. '[self' → logprob: -7.777538776397705
    10. ' ' → logprob: -8.027539253234863

Token 85: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0161479189991951
    2. ' self' → logprob: -4.266148090362549
    3. '           ' → logprob: -6.516148090362549
    4. '       ' → logprob: -8.14114761352539
    5. '(self' → logprob: -10.01614761352539
    6. '   ' → logprob: -10.26614761352539
    7. 'min' → logprob: -10.51614761352539
    8. '```' → logprob: -10.51614761352539
    9. '
' → logprob: -11.26614761352539
    10. '               ' → logprob: -11.39114761352539

Token 86: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.008333359844982624
    2. 'friends' → logprob: -5.133333206176758
    3. '.' → logprob: -6.758333206176758
    4. ']' → logprob: -7.633333206176758
    5. ' friends' → logprob: -8.633333206176758
    6. '.friend' → logprob: -8.883333206176758
    7. '].' → logprob: -9.758333206176758
    8. 'riends' → logprob: -10.008333206176758
    9. '.]' → logprob: -10.008333206176758
    10. 'Friends' → logprob: -10.133333206176758

Token 87: 'riends' (ID: 16678)
  Prédit: 'riends'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'riends' → logprob: -0.004799157381057739
    2. '.' → logprob: -6.2547993659973145
    3. 'r' → logprob: -7.0047993659973145
    4. 'riend' → logprob: -7.2547993659973145
    5. '.r' → logprob: -7.8797993659973145
    6. '.f' → logprob: -8.129798889160156
    7. 'ri' → logprob: -8.254798889160156
    8. 'friends' → logprob: -8.754798889160156
    9. 'rie' → logprob: -10.504798889160156
    10. '```' → logprob: -10.629798889160156

Token 88: '.get' (ID: 775)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3165142238140106
    2. '.get' → logprob: -1.316514253616333
    3. '[g' → logprob: -6.691514015197754
    4. '[r' → logprob: -6.941514015197754
    5. '[o' → logprob: -8.066514015197754
    6. '[obj' → logprob: -8.316514015197754
    7. '[f' → logprob: -8.566514015197754
    8. '[get' → logprob: -8.941514015197754
    9. '[b' → logprob: -10.191514015197754
    10. '[token' → logprob: -10.816514015197754

Token 89: '(r' (ID: 4729)
  Prédit: '(friend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(friend' → logprob: -0.9225128293037415
    2. '(' → logprob: -1.1725127696990967
    3. '(other' → logprob: -1.9225127696990967
    4. '(r' → logprob: -2.4225127696990967
    5. '(g' → logprob: -3.6725127696990967
    6. '(o' → logprob: -3.6725127696990967
    7. '(member' → logprob: -5.422513008117676
    8. '(f' → logprob: -6.547513008117676
    9. '(x' → logprob: -7.422513008117676
    10. '(i' → logprob: -8.297513008117676

Token 90: '.id' (ID: 2858)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18702057003974915
    2. 'abbit' → logprob: -1.8120205402374268
    3. ')' → logprob: -5.062020778656006
    4. 'ab' → logprob: -7.437020778656006
    5. ',)' → logprob: -8.812020301818848
    6. 'abb' → logprob: -10.062020301818848
    7. ')
' → logprob: -10.062020301818848
    8. 'a' → logprob: -11.062020301818848
    9. ',
' → logprob: -11.187020301818848
    10. '),' → logprob: -11.437020301818848

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04656723514199257
    2. ')' → logprob: -3.17156720161438
    3. ' ,' → logprob: -6.046567440032959
    4. '(),' → logprob: -7.671567440032959
    5. ' ' → logprob: -8.4215669631958
    6. 'for' → logprob: -9.0465669631958
    7. ',)' → logprob: -9.7965669631958
    8. '   ' → logprob: -10.1715669631958
    9. '())' → logprob: -10.2965669631958
    10. ' )' → logprob: -10.2965669631958

Token 92: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09523428976535797
    2. ' ' → logprob: -2.4702343940734863
    3. ' float' → logprob: -5.970234394073486
    4. 'float' → logprob: -6.345234394073486
    5. '-' → logprob: -7.345234394073486
    6. ')' → logprob: -7.970234394073486
    7. ' -' → logprob: -8.095233917236328
    8. '1' → logprob: -8.345233917236328
    9. '        ' → logprob: -8.845233917236328
    10. '           ' → logprob: -9.720233917236328

Token 93: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005051117856055498
    2. '-' → logprob: -5.380051136016846
    3. ' ' → logprob: -8.005050659179688
    4. 'float' → logprob: -9.880050659179688
    5. 'None' → logprob: -11.380050659179688
    6. ' -' → logprob: -11.630050659179688
    7. ')' → logprob: -11.630050659179688
    8. '   ' → logprob: -12.380050659179688
    9. '       ' → logprob: -13.380050659179688
    10. '           ' → logprob: -13.380050659179688

Token 94: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018341571558266878
    2. '       ' → logprob: -7.376834392547607
    3. ' )' → logprob: -7.876834392547607
    4. ' for' → logprob: -8.00183391571045
    5. '        ' → logprob: -9.37683391571045
    6. ',' → logprob: -9.50183391571045
    7. '())' → logprob: -9.87683391571045
    8. 'for' → logprob: -10.00183391571045
    9. ')]' → logprob: -10.25183391571045
    10. '           ' → logprob: -10.25183391571045

Token 95: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.016594013199210167
    2. 'for' → logprob: -4.266593933105469
    3. ' ' → logprob: -7.016593933105469
    4. '        ' → logprob: -7.766593933105469
    5. '()' → logprob: -7.766593933105469
    6. '    ' → logprob: -7.891593933105469
    7. ')' → logprob: -9.516593933105469
    8. '       ' → logprob: -10.391593933105469
    9. '         ' → logprob: -10.391593933105469
    10. '           ' → logprob: -10.516593933105469

Token 96: ' r' (ID: 428)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.2367469072341919
    2. ' r' → logprob: -1.861746907234192
    3. 'r' → logprob: -3.3617467880249023
    4. ' ' → logprob: -4.611746788024902
    5. 'group' → logprob: -4.611746788024902
    6. ' rabbit' → logprob: -8.736746788024902
    7. '<|end|>' → logprob: -8.736746788024902
    8. ' roup' → logprob: -8.861746788024902
    9. '	group' → logprob: -9.611746788024902
    10. '<|end|>' → logprob: -9.861746788024902

Token 97: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08029486238956451
    2. ' ' → logprob: -2.5802948474884033
    3. 'in' → logprob: -7.080295085906982
    4. '<|end|>' → logprob: -7.830295085906982
    5. ' group' → logprob: -9.830294609069824
    6. '<|end|>' → logprob: -9.955294609069824
    7. '  ' → logprob: -10.955294609069824
    8. ' ' → logprob: -11.955294609069824
    9. 'group' → logprob: -12.080294609069824
    10. ' i' → logprob: -12.330294609069824

Token 98: ' group' (ID: 3566)
  Prédit: ' group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.007612066809087992
    2. 'group' → logprob: -4.882612228393555
    3. '[group' → logprob: -13.507612228393555
    4. '"group' → logprob: -13.632612228393555
    5. '	group' → logprob: -13.757612228393555
    6. ' ' → logprob: -13.882612228393555
    7. '(group' → logprob: -14.757612228393555
    8. ' [' → logprob: -15.132612228393555
    9. 'roup' → logprob: -15.257612228393555
    10. '[' → logprob: -15.632612228393555

Token 99: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0024559148587286472
    2. 'if' → logprob: -6.127455711364746
    3. '        ' → logprob: -9.002455711364746
    4. '       ' → logprob: -9.002455711364746
    5. ']' → logprob: -11.752455711364746
    6. '    ' → logprob: -12.127455711364746
    7. '           ' → logprob: -12.752455711364746
    8. '   ' → logprob: -12.877455711364746
    9. ' ' → logprob: -13.002455711364746
    10. '            ' → logprob: -13.877455711364746

Token 100: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.02630552463233471
    2. 'r' → logprob: -3.6513054370880127
    3. ' ' → logprob: -12.776305198669434
    4. '    ' → logprob: -14.276305198669434
    5. '   ' → logprob: -14.776305198669434
    6. ' ' → logprob: -15.088805198669434
    7. ' (' → logprob: -15.588805198669434
    8. '```' → logprob: -15.651305198669434
    9. '	r' → logprob: -16.15130615234375
    10. ' not' → logprob: -16.65130615234375

Token 101: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2704460024833679
    2. '.id' → logprob: -1.6454460620880127
    3. '!=' → logprob: -4.145445823669434
    4. ' ' → logprob: -4.270445823669434
    5. ' is' → logprob: -4.645445823669434
    6. 'id' → logprob: -6.270445823669434
    7. '.' → logprob: -6.395445823669434
    8. ' id' → logprob: -7.020445823669434
    9. ' .' → logprob: -10.270445823669434
    10. 'is' → logprob: -10.520445823669434

Token 102: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6327422857284546
    2. 'self' → logprob: -0.7577422857284546
    3. ' ' → logprob: -9.007741928100586
    4. '   ' → logprob: -12.382741928100586
    5. '	self' → logprob: -12.507741928100586
    6. '    ' → logprob: -13.132741928100586
    7. '  ' → logprob: -13.257741928100586
    8. '
' → logprob: -13.882741928100586
    9. '(self' → logprob: -13.882741928100586
    10. '```' → logprob: -13.882741928100586

Token 103: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00040242893737740815
    2. ' ]' → logprob: -8.000402450561523
    3. '       ' → logprob: -9.750402450561523
    4. ']
' → logprob: -12.375402450561523
    5. ']

' → logprob: -13.125402450561523
    6. '   ' → logprob: -14.250402450561523
    7. ')]' → logprob: -14.375402450561523
    8. ')' → logprob: -15.500402450561523
    9. '()]' → logprob: -15.625402450561523
    10. ']
' → logprob: -16.125402450561523

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46519818902015686
    2. '
' → logprob: -1.0901981592178345
    3. ')' → logprob: -3.965198278427124
    4. '<|end|>' → logprob: -5.090198040008545
    5. '        
' → logprob: -5.965198040008545
    6. ')
' → logprob: -6.340198040008545
    7. 'return' → logprob: -6.840198040008545
    8. ',' → logprob: -7.090198040008545
    9. ' 
' → logprob: -7.590198040008545
    10. ',
' → logprob: -7.590198040008545

Token 105: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7675955891609192
    2. ' if' → logprob: -0.8925955891609192
    3. 'return' → logprob: -2.6425955295562744
    4. ' return' → logprob: -3.1425955295562744
    5. 'if' (adapté à ' if') → logprob: -4.5175957679748535
    6. '   ' → logprob: -7.7675957679748535
    7. '        
' → logprob: -8.142595291137695
    8. '
' → logprob: -8.392595291137695
    9. '    
' → logprob: -11.142595291137695
    10. '           ' → logprob: -11.267595291137695

Token 106: ' ' (ID: 220)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.26652249693870544
    2. ' relevant' → logprob: -1.6415225267410278
    3. 'not' → logprob: -3.2665224075317383
    4. 're' → logprob: -6.516522407531738
    5. ' len' → logprob: -7.641522407531738
    6. 'len' → logprob: -9.141522407531738
    7. ' ' → logprob: -10.266522407531738
    8. '   ' → logprob: -11.141522407531738
    9. '    ' → logprob: -12.391522407531738
    10. '	not' → logprob: -12.704022407531738

Token 107: '0' (ID: 15)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.10153396427631378
    2. ' not' → logprob: -2.476533889770508
    3. 're' → logprob: -4.726533889770508
    4. ' relevant' → logprob: -5.726533889770508
    5. 'len' → logprob: -8.226533889770508
    6. '   ' → logprob: -9.976533889770508
    7. ' ' → logprob: -10.226533889770508
    8. ' len' → logprob: -10.476533889770508
    9. '0' → logprob: -12.601533889770508
    10. '	not' → logprob: -12.726533889770508

Token 108: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11111985892057419
    2. ' not' → logprob: -2.4861197471618652
    3. 'in' → logprob: -3.8611197471618652
    4. 'not' → logprob: -7.361119747161865
    5. ':' → logprob: -8.986120223999023
    6. ' ' → logprob: -10.486120223999023
    7. ')' → logprob: -10.486120223999023
    8. ' ==' → logprob: -10.986120223999023
    9. 'min' → logprob: -11.111120223999023
    10. '==' → logprob: -11.486120223999023

Token 109: ' relevant' (ID: 12331)
  Prédit: ' relevant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' relevant' → logprob: -0.22543156147003174
    2. 're' → logprob: -1.6004315614700317
    3. ' ' → logprob: -12.350431442260742
    4. ' relevante' → logprob: -12.350431442260742
    5. 'Relevant' → logprob: -12.975431442260742
    6. '
' → logprob: -13.975431442260742
    7. '	re' → logprob: -14.100431442260742
    8. 'related' → logprob: -14.412931442260742
    9. '   ' → logprob: -14.475431442260742
    10. 'rel' → logprob: -14.600431442260742

Token 110: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1249801442027092
    2. ':
' → logprob: -2.2499802112579346
    3. ' or' → logprob: -4.4999799728393555
    4. ':return' → logprob: -7.4999799728393555
    5. '       ' → logprob: -8.624979972839355
    6. ' :' → logprob: -9.749979972839355
    7. '           ' → logprob: -10.124979972839355
    8. '):
' → logprob: -10.249979972839355
    9. '   ' → logprob: -10.749979972839355
    10. ' and' → logprob: -10.749979972839355

Token 111: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003858031937852502
    2. ':' → logprob: -6.1288580894470215
    3. 'return' → logprob: -7.3788580894470215
    4. ':
' → logprob: -8.003857612609863
    5. ' return' → logprob: -8.503857612609863
    6. '       ' → logprob: -8.628857612609863
    7. '
' → logprob: -9.128857612609863
    8. ':return' → logprob: -9.753857612609863
    9. ' or' → logprob: -10.003857612609863
    10. ',' → logprob: -10.628857612609863

Token 112: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7139738202095032
    2. '           ' → logprob: -0.8389738202095032
    3. ' return' → logprob: -2.7139737606048584
    4. '
' → logprob: -4.9639739990234375
    5. '   ' → logprob: -5.8389739990234375
    6. '       ' → logprob: -6.5889739990234375
    7. '	return' → logprob: -8.338973999023438
    8. '    
' → logprob: -8.963973999023438
    9. ' 
' → logprob: -9.713973999023438
    10. '            
' → logprob: -10.088973999023438

Token 113: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3484653830528259
    2. ' ' → logprob: -1.2234654426574707
    3. '   ' → logprob: -11.848464965820312
    4. ' min' → logprob: -12.473464965820312
    5. '  ' → logprob: -12.848464965820312
    6. 'min' → logprob: -12.973464965820312
    7. ' ' → logprob: -13.348464965820312
    8. '           ' → logprob: -14.223464965820312
    9. '    ' → logprob: -14.848464965820312
    10. '       ' → logprob: -14.973464965820312

Token 114: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002338144404347986
    2. ' ' → logprob: -8.37523365020752
    3. '-' → logprob: -13.75023365020752
    4. 'min' → logprob: -13.87523365020752
    5. '  ' → logprob: -14.87523365020752
    6. '   ' → logprob: -15.12523365020752
    7. ' -' → logprob: -16.125234603881836
    8. 'float' → logprob: -16.562734603881836
    9. '1' → logprob: -17.062734603881836
    10. '       ' → logprob: -17.125234603881836

Token 115: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005407711490988731
    2. '
' → logprob: -5.380407810211182
    3. '   ' → logprob: -8.505407333374023
    4. '    
' → logprob: -8.505407333374023
    5. '        
' → logprob: -8.630407333374023
    6. 'return' → logprob: -9.755407333374023
    7. '<|end|>' → logprob: -9.880407333374023
    8. '  
' → logprob: -10.255407333374023
    9. ',' → logprob: -10.755407333374023
    10. ' return' → logprob: -11.380407333374023

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04250897094607353
    2. '
' → logprob: -3.542509078979492
    3. '    
' → logprob: -4.917509078979492
    4. '        
' → logprob: -5.917509078979492
    5. '   ' → logprob: -6.542509078979492
    6. '  
' → logprob: -7.542509078979492
    7. 'return' → logprob: -8.417509078979492
    8. ' return' → logprob: -9.042509078979492
    9. '<|end|>' → logprob: -9.542509078979492
    10. ' 
' → logprob: -9.667509078979492

Token 117: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10359150916337967
    2. 'return' (adapté à ' return') → logprob: -2.6035914421081543
    3. '   ' → logprob: -4.103591442108154
    4. ' return' → logprob: -4.853591442108154
    5. ' ' → logprob: -10.728591918945312
    6. '
' → logprob: -11.228591918945312
    7. '	return' → logprob: -11.728591918945312
    8. '           ' → logprob: -11.978591918945312
    9. '  ' → logprob: -12.103591918945312
    10. '        
' → logprob: -12.228591918945312

Token 118: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.023253049701452255
    2. 'min' → logprob: -3.7732529640197754
    3. '   ' → logprob: -12.523253440856934
    4. '	min' → logprob: -13.273253440856934
    5. ' minimal' → logprob: -14.398253440856934
    6. ' minimum' → logprob: -14.648253440856934
    7. ' max' → logprob: -14.898253440856934
    8. '(min' → logprob: -15.148253440856934
    9. ' ' → logprob: -15.898253440856934
    10. ' sum' → logprob: -16.773252487182617

Token 119: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.16023945808410645
    2. '(' → logprob: -1.9102394580841064
    3. ' (' → logprob: -11.535239219665527
    4. '(
' → logprob: -13.035239219665527
    5. 're' → logprob: -13.285239219665527
    6. '(

' → logprob: -14.660239219665527
    7. '(r' → logprob: -14.785239219665527
    8. '(Re' → logprob: -15.535239219665527
    9. '(rel' → logprob: -15.910239219665527
    10. '((' → logprob: -16.285240173339844

Token 120: 'levant' (ID: 37477)
  Prédit: 'levant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'levant' → logprob: -3.047134305234067e-05
    2. 're' → logprob: -10.875030517578125
    3. 'le' → logprob: -12.000030517578125
    4. 'lev' → logprob: -12.375030517578125
    5. ' relevant' → logprob: -15.375030517578125
    6. 'vel' → logprob: -15.500030517578125
    7. 'l' → logprob: -15.500030517578125
    8. 'lated' → logprob: -15.750030517578125
    9. ' levant' → logprob: -15.875030517578125
    10. '   ' → logprob: -16.125030517578125

Token 121: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009348054882138968
    2. '       ' → logprob: -7.250934600830078
    3. ' )' → logprob: -9.625934600830078
    4. '   ' → logprob: -9.750934600830078
    5. ')
' → logprob: -9.750934600830078
    6. '<|end|>' → logprob: -10.875934600830078
    7. '())' → logprob: -12.375934600830078
    8. '[' → logprob: -12.625934600830078
    9. ')

' → logprob: -13.125934600830078
    10. ')return' → logprob: -13.375934600830078

Token 122: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ' Party' (ID: 15703)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42749062180519104
    2. ' Rabbit' → logprob: -2.802490711212158
    3. ' Dog' → logprob: -2.927490711212158
    4. ' Sheep' → logprob: -3.302490711212158
    5. ' Car' → logprob: -3.427490711212158
    6. ' Table' → logprob: -3.927490711212158
    7. ' Party' → logprob: -3.927490711212158
    8. ' Group' → logprob: -4.052490711212158
    9. ' Room' → logprob: -4.677490711212158
    10. ' Social' → logprob: -4.802490711212158

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0052874768152832985
    2. '(' → logprob: -5.5052876472473145
    3. ':
' → logprob: -6.8802876472473145
    4. '(object' → logprob: -10.130287170410156
    5. '):' → logprob: -10.380287170410156
    6. '():' → logprob: -10.380287170410156
    7. 'Party' → logprob: -12.005287170410156
    8. '(
' → logprob: -12.130287170410156
    9. 'Planner' → logprob: -12.380287170410156
    10. ' :' → logprob: -12.755287170410156

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011537936516106129
    2. '    
' → logprob: -7.501153945922852
    3. ' def' → logprob: -8.751153945922852
    4. ':' → logprob: -9.126153945922852
    5. '
' → logprob: -9.251153945922852
    6. ':
' → logprob: -9.501153945922852
    7. 'def' → logprob: -9.626153945922852
    8. '(' → logprob: -10.126153945922852
    9. '    ' → logprob: -11.501153945922852
    10. '       ' → logprob: -12.001153945922852

Token 126: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.39701491594314575
    2. ' def' → logprob: -1.397014856338501
    3. '   ' → logprob: -2.522014856338501
    4. ' ' → logprob: -10.897014617919922
    5. '    ' → logprob: -12.022014617919922
    6. 'class' → logprob: -12.022014617919922
    7. '  ' → logprob: -12.522014617919922
    8. '	def' → logprob: -12.647014617919922
    9. '```' → logprob: -12.772014617919922
    10. ':def' → logprob: -14.022014617919922

Token 127: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.02851564809679985
    2. 'init' → logprob: -4.403515815734863
    3. ' init' → logprob: -4.653515815734863
    4. '_init' → logprob: -5.278515815734863
    5. ' ' → logprob: -7.528515815734863
    6. '__' → logprob: -7.778515815734863
    7. ' def' → logprob: -8.778515815734863
    8. ' _' → logprob: -9.903515815734863
    9. ' ' → logprob: -10.778515815734863
    10. ' ___' → logprob: -11.153515815734863

Token 128: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.069664333248511e-05
    2. 'i' → logprob: -12.625020980834961
    3. ' init' → logprob: -12.750020980834961
    4. 'in' → logprob: -13.000020980834961
    5. '_init' → logprob: -13.250020980834961
    6. 'class' → logprob: -13.375020980834961
    7. 'ini' → logprob: -13.375020980834961
    8. '```' → logprob: -13.500020980834961
    9. 'initi' → logprob: -13.750020980834961
    10. 'new' → logprob: -14.125020980834961

Token 129: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00698519591242075
    2. '(self' → logprob: -5.006985187530518
    3. '_(' → logprob: -9.006985664367676
    4. '__' → logprob: -9.631985664367676
    5. '(' → logprob: -9.881985664367676
    6. '__(
' → logprob: -10.881985664367676
    7. ' (' → logprob: -12.006985664367676
    8. 'self' → logprob: -12.756985664367676
    9. '__((' → logprob: -14.256985664367676
    10. '_' → logprob: -14.256985664367676

Token 130: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0017739501781761646
    2. ' self' → logprob: -6.751773834228516
    3. ')' → logprob: -7.501773834228516
    4. '   ' → logprob: -11.001773834228516
    5. '):
' → logprob: -11.376773834228516
    6. '       ' → logprob: -12.251773834228516
    7. '
' → logprob: -12.501773834228516
    8. ',' → logprob: -13.001773834228516
    9. '(self' → logprob: -13.001773834228516
    10. ' ' → logprob: -13.126773834228516

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19304022192955017
    2. '):' → logprob: -2.318040132522583
    3. 'self' → logprob: -2.818040132522583
    4. ')' → logprob: -4.818040370941162
    5. '):
' → logprob: -5.443040370941162
    6. ' ,' → logprob: -6.443040370941162
    7. ' self' → logprob: -6.568040370941162
    8. ' ):' → logprob: -7.693040370941162
    9. '   ' → logprob: -8.443039894104004
    10. ' ' → logprob: -8.443039894104004

Token 132: ' rabbits' (ID: 122309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.27732086181640625
    2. 'max' → logprob: -3.0273208618164062
    3. ')' → logprob: -3.1523208618164062
    4. 'capacity' → logprob: -3.5273208618164062
    5. 'gu' → logprob: -3.7773208618164062
    6. ' self' → logprob: -3.9023208618164062
    7. '):
' → logprob: -4.027320861816406
    8. '   ' → logprob: -4.402320861816406
    9. 'size' → logprob: -4.902320861816406
    10. 'friends' → logprob: -5.402320861816406

Token 133: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0507478192448616
    2. ',' → logprob: -3.550747871398926
    3. '):
' → logprob: -3.925747871398926
    4. '   ' → logprob: -8.425747871398926
    5. '[]):' → logprob: -8.550747871398926
    6. ':' → logprob: -8.800747871398926
    7. ' ):' → logprob: -8.925747871398926
    8. '=[]' → logprob: -9.050747871398926
    9. ')' → logprob: -9.425747871398926
    10. '       ' → logprob: -10.675747871398926

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002368393586948514
    2. '   ' → logprob: -7.002368450164795
    3. ' self' → logprob: -7.002368450164795
    4. 'self' → logprob: -8.002367973327637
    5. ',' → logprob: -9.252367973327637
    6. '        
' → logprob: -10.502367973327637
    7. 'r' → logprob: -10.752367973327637
    8. '[' → logprob: -11.752367973327637
    9. '(self' → logprob: -11.752367973327637
    10. '      ' → logprob: -12.127367973327637

Token 135: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3153568506240845
    2. 'self' (adapté à ' self') → logprob: -1.3153568506240845
    3. '       ' → logprob: -6.190356731414795
    4. '   ' → logprob: -10.315357208251953
    5. ' ' → logprob: -11.815357208251953
    6. '	self' → logprob: -13.190357208251953
    7. '    ' → logprob: -15.190357208251953
    8. '        ' → logprob: -15.565357208251953
    9. '[self' → logprob: -15.565357208251953
    10. '     ' → logprob: -15.690357208251953

Token 136: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.0014327395474538207
    2. '.' → logprob: -7.1264328956604
    3. 'r' → logprob: -8.251432418823242
    4. ' .' → logprob: -8.376432418823242
    5. '.rabbit' → logprob: -9.126432418823242
    6. '._' → logprob: -11.626432418823242
    7. ' rabbits' → logprob: -12.001432418823242
    8. '   ' → logprob: -13.126432418823242
    9. ' ' → logprob: -13.501432418823242
    10. '.runners' → logprob: -14.001432418823242

Token 137: 'abb' (ID: 13538)
  Prédit: 'abb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abb' → logprob: -1.3425219549390022e-05
    2. 'ab' → logprob: -12.00001335144043
    3. 'abbit' → logprob: -12.62501335144043
    4. 'r' → logprob: -13.25001335144043
    5. 'a' → logprob: -13.75001335144043
    6. '   ' → logprob: -15.12501335144043
    7. 'abbr' → logprob: -15.62501335144043
    8. ' rabbits' → logprob: -16.12501335144043
    9. '##' → logprob: -16.37501335144043
    10. '__' → logprob: -16.50001335144043

Token 138: 'its' (ID: 1348)
  Prédit: 'its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'its' → logprob: -1.5570885807392187e-05
    2. 'it' → logprob: -12.625015258789062
    3. 'bits' → logprob: -12.625015258789062
    4. ' its' → logprob: -12.875015258789062
    5. '   ' → logprob: -13.500015258789062
    6. '...' → logprob: -14.125015258789062
    7. '_' → logprob: -14.375015258789062
    8. '**' → logprob: -14.625015258789062
    9. '\' → logprob: -14.875015258789062
    10. '"' → logprob: -15.000015258789062

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4287542998790741
    2. '=' → logprob: -1.0537543296813965
    3. '   ' → logprob: -11.178753852844238
    4. ' ' → logprob: -11.553753852844238
    5. '[' → logprob: -11.678753852844238
    6. '=[]' → logprob: -12.053753852844238
    7. ')' → logprob: -12.428753852844238
    8. '[:]' → logprob: -12.803753852844238
    9. 's' → logprob: -13.303753852844238
    10. '_' → logprob: -13.303753852844238

Token 140: ' rabbits' (ID: 122309)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.20217929780483246
    2. ' rabbits' → logprob: -1.7021793127059937
    3. '{' → logprob: -7.577179431915283
    4. '[r' → logprob: -8.702178955078125
    5. ' ' → logprob: -10.827178955078125
    6. ' {' → logprob: -11.202178955078125
    7. 'list' → logprob: -11.452178955078125
    8. 'rabbit' → logprob: -11.827178955078125
    9. ' list' → logprob: -11.952178955078125
    10. '{}' → logprob: -12.077178955078125

Token 141: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12580661475658417
    2. '<|end|>' → logprob: -2.3758065700531006
    3. '    
' → logprob: -4.37580680847168
    4. '   ' → logprob: -4.50080680847168
    5. '<|end|>' → logprob: -7.25080680847168
    6. '  
' → logprob: -8.25080680847168
    7. 'def' → logprob: -8.37580680847168
    8. '        
' → logprob: -9.62580680847168
    9. ' 
' → logprob: -9.62580680847168
    10. '       ' → logprob: -9.75080680847168

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3345806300640106
    2. 'def' → logprob: -1.459580659866333
    3. ' def' → logprob: -2.959580659866333
    4. '
' → logprob: -8.959580421447754
    5. '	def' → logprob: -10.459580421447754
    6. ' ' → logprob: -10.709580421447754
    7. '  ' → logprob: -13.084580421447754
    8. '       ' → logprob: -13.459580421447754
    9. '    
' → logprob: -13.834580421447754
    10. ')' → logprob: -14.459580421447754

Token 143: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.12728053331375122
    2. 'max' → logprob: -3.6272804737091064
    3. 'add' → logprob: -4.1272807121276855
    4. 'best' → logprob: -4.2522807121276855
    5. 'calculate' → logprob: -5.0022807121276855
    6. 'possible' → logprob: -5.0022807121276855
    7. 'potential' → logprob: -5.0022807121276855
    8. 'can' → logprob: -5.1272807121276855
    9. 'get' → logprob: -5.1272807121276855
    10. 'find' → logprob: -5.2522807121276855

Token 144: ' satisfaction' (ID: 24333)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -1.18488609790802
    2. 'max' → logprob: -1.80988609790802
    3. ' best' → logprob: -2.0598859786987305
    4. ' max' → logprob: -2.9348859786987305
    5. 'invite' → logprob: -3.0598859786987305
    6. 'maximize' → logprob: -3.1848859786987305
    7. ' invite' → logprob: -3.3098859786987305
    8. 'find' → logprob: -3.4348859786987305
    9. ' potential' → logprob: -3.6848859786987305
    10. ' find' → logprob: -3.8098859786987305

Token 145: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.05581190809607506
    2. '(' → logprob: -2.930811882019043
    3. ' (' → logprob: -7.180811882019043
    4. '_' → logprob: -9.805811882019043
    5. '(
' → logprob: -10.555811882019043
    6. '_max' → logprob: -10.805811882019043
    7. '   ' → logprob: -10.805811882019043
    8. 'self' → logprob: -11.305811882019043
    9. '_score' → logprob: -11.930811882019043
    10. ' =' → logprob: -12.180811882019043

Token 146: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15071091055870056
    2. '):
' → logprob: -3.0257108211517334
    3. ',' → logprob: -3.5257108211517334
    4. 'self' → logprob: -3.7757108211517334
    5. '(self' → logprob: -4.2757110595703125
    6. ')' → logprob: -5.0257110595703125
    7. ' ):' → logprob: -5.2757110595703125
    8. '       ' → logprob: -5.4007110595703125
    9. '   ' → logprob: -5.5257110595703125
    10. '_' → logprob: -7.2757110595703125

Token 147: ' group' (ID: 3566)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.24242693185806274
    2. ' self' → logprob: -1.992426872253418
    3. 'group' → logprob: -3.117426872253418
    4. ' group' → logprob: -3.742426872253418
    5. '       ' → logprob: -4.867426872253418
    6. '   ' → logprob: -5.867426872253418
    7. ')' → logprob: -9.117426872253418
    8. ' ' → logprob: -9.617426872253418
    9. 'r' → logprob: -9.992426872253418
    10. '(self' → logprob: -10.992426872253418

Token 148: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.062101349234580994
    2. '):
' → logprob: -2.812101364135742
    3. '       ' → logprob: -9.812101364135742
    4. '   ' → logprob: -10.562101364135742
    5. '):
' → logprob: -10.812101364135742
    6. ')' → logprob: -11.437101364135742
    7. ' ):' → logprob: -11.437101364135742
    8. '):

' → logprob: -12.187101364135742
    9. ',' → logprob: -12.937101364135742
    10. ':' → logprob: -13.437101364135742

Token 149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.360996485454962e-05
    2. 'return' → logprob: -11.2500638961792
    3. '        
' → logprob: -11.8750638961792
    4. ':' → logprob: -12.1250638961792
    5. 'self' → logprob: -12.5000638961792
    6. '0' → logprob: -12.5000638961792
    7. '(self' → logprob: -12.5000638961792
    8. ' return' → logprob: -12.8750638961792
    9. '(' → logprob: -12.8750638961792
    10. '[' → logprob: -12.8750638961792

Token 150: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14263835549354553
    2. ' if' → logprob: -2.3926384449005127
    3. 'if' → logprob: -4.392638206481934
    4. 'return' (adapté à ' return') → logprob: -4.642638206481934
    5. ' return' → logprob: -5.392638206481934
    6. 'score' → logprob: -5.517638206481934
    7. 'total' → logprob: -5.767638206481934
    8. 'result' → logprob: -6.267638206481934
    9. 'sum' → logprob: -6.517638206481934
    10. ' total' → logprob: -6.642638206481934

Token 151: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.356955349445343
    2. ' max' → logprob: -1.7319552898406982
    3. 'sum' → logprob: -2.2319552898406982
    4. 'max' → logprob: -4.606955528259277
    5. ' min' → logprob: -5.231955528259277
    6. '   ' → logprob: -7.981955528259277
    7. 'min' → logprob: -8.481955528259277
    8. ' self' → logprob: -10.981955528259277
    9. ' ' → logprob: -11.231955528259277
    10. 'self' → logprob: -11.731955528259277

Token 152: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.01295315008610487
    2. '([' → logprob: -4.887953281402588
    3. '(' → logprob: -5.262953281402588
    4. '(
' → logprob: -9.88795280456543
    5. '(self' → logprob: -10.38795280456543
    6. 'r' → logprob: -10.51295280456543
    7. 'rabbit' → logprob: -11.01295280456543
    8. '[r' → logprob: -11.76295280456543
    9. '(

' → logprob: -12.13795280456543
    10. '((' → logprob: -12.76295280456543

Token 153: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0009795783553272486
    2. '.r' → logprob: -7.875979423522949
    3. 'otential' → logprob: -8.50097942352295
    4. '.' → logprob: -8.87597942352295
    5. '   ' → logprob: -8.87597942352295
    6. 'potential' → logprob: -9.75097942352295
    7. 'abbit' → logprob: -11.62597942352295
    8. '.rabbit' → logprob: -12.00097942352295
    9. ').' → logprob: -12.50097942352295
    10. ' .' → logprob: -13.00097942352295

Token 154: 'otential' (ID: 132479)
  Prédit: 'otential'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'otential' → logprob: -3.4121114822482923e-06
    2. 'ot' → logprob: -13.375003814697266
    3. 'potential' → logprob: -13.375003814697266
    4. 'oten' → logprob: -16.000003814697266
    5. '```' → logprob: -16.375003814697266
    6. '

' → logprob: -18.500003814697266
    7. '
' → logprob: -18.750003814697266
    8. '   ' → logprob: -19.000003814697266
    9. '[' → logprob: -19.250003814697266
    10. '``' → logprob: -19.625003814697266

Token 155: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0005566088366322219
    2. '_' → logprob: -7.500556468963623
    3. ' _' → logprob: -13.250556945800781
    4. 's' → logprob: -14.375556945800781
    5. ')' → logprob: -15.125556945800781
    6. '_p' → logprob: -15.250556945800781
    7. ')_' → logprob: -15.375556945800781
    8. '_f' → logprob: -15.750556945800781
    9. '_sat' → logprob: -15.875556945800781
    10. '_sn' → logprob: -16.62555694580078

Token 156: 'atisfaction' (ID: 60876)
  Prédit: 'atisfaction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atisfaction' → logprob: -0.0006532243569381535
    2. 'atisf' → logprob: -7.750653266906738
    3. 'at' → logprob: -9.625653266906738
    4. 'group' → logprob: -9.625653266906738
    5. ' at' → logprob: -10.625653266906738
    6. 'atis' → logprob: -10.750653266906738
    7. 's' → logprob: -11.125653266906738
    8. '_group' → logprob: -11.750653266906738
    9. '   ' → logprob: -12.375653266906738
    10. 'atif' → logprob: -12.875653266906738

Token 157: '(group' (ID: 36416)
  Prédit: '(group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(group' → logprob: -0.003210395807400346
    2. '(' → logprob: -6.253210544586182
    3. '(g' → logprob: -7.128210544586182
    4. ' (' → logprob: -8.003210067749023
    5. '(r' → logprob: -8.878210067749023
    6. '((' → logprob: -13.503210067749023
    7. ' ' → logprob: -14.503210067749023
    8. '(gr' → logprob: -14.628210067749023
    9. ')(' → logprob: -14.878210067749023
    10. ')' → logprob: -15.128210067749023

Token 158: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007136239437386394
    2. '       ' → logprob: -7.62571382522583
    3. '   ' → logprob: -9.125713348388672
    4. ' )' → logprob: -9.625713348388672
    5. ')
' → logprob: -11.500713348388672
    6. '))' → logprob: -11.750713348388672
    7. '           ' → logprob: -12.250713348388672
    8. '    ' → logprob: -12.500713348388672
    9. '        ' → logprob: -12.875713348388672
    10. '      ' → logprob: -13.000713348388672

Token 159: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003488129877950996
    2. ' ' → logprob: -9.500349044799805
    3. ',' → logprob: -9.625349044799805
    4. ' )' → logprob: -9.625349044799805
    5. '   ' → logprob: -9.750349044799805
    6. 'for' → logprob: -10.125349044799805
    7. ' for' → logprob: -10.875349044799805
    8. '       ' → logprob: -12.375349044799805
    9. ')
' → logprob: -12.375349044799805
    10. '  ' → logprob: -12.750349044799805

Token 160: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.03865687549114227
    2. 'r' → logprob: -3.2886569499969482
    3. ' group' → logprob: -7.413656711578369
    4. ' ' → logprob: -11.663657188415527
    5. 'group' → logprob: -13.413657188415527
    6. ')' → logprob: -14.288657188415527
    7. '_r' → logprob: -14.413657188415527
    8. ' ' → logprob: -14.663657188415527
    9. '	r' → logprob: -14.913657188415527
    10. ' р' → logprob: -16.16365623474121

Token 161: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04362543672323227
    2. ' ' → logprob: -3.4186253547668457
    3. 'in' → logprob: -4.668625354766846
    4. ' group' → logprob: -8.543625831604004
    5. 'r' → logprob: -9.418625831604004
    6. 'group' → logprob: -9.543625831604004
    7. ')' → logprob: -9.793625831604004
    8. ' r' → logprob: -9.918625831604004
    9. '  ' → logprob: -10.418625831604004
    10. '   ' → logprob: -11.543625831604004

Token 162: ' group' (ID: 3566)
  Prédit: ' group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.38687965273857117
    2. 'group' → logprob: -1.1368796825408936
    3. '   ' → logprob: -12.136879920959473
    4. '	group' → logprob: -13.386879920959473
    5. '[group' → logprob: -14.261879920959473
    6. '"group' → logprob: -14.386879920959473
    7. ' ' → logprob: -15.386879920959473
    8. '    ' → logprob: -16.761878967285156
    9. '(group' → logprob: -16.761878967285156
    10. '  ' → logprob: -16.886878967285156

Token 163: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003222342347726226
    2. '       ' → logprob: -8.250322341918945
    3. ' )' → logprob: -10.250322341918945
    4. '   ' → logprob: -11.375322341918945
    5. ')
' → logprob: -11.375322341918945
    6. ' ' → logprob: -14.500322341918945
    7. '        ' → logprob: -15.000322341918945
    8. ')

' → logprob: -15.250322341918945
    9. '      ' → logprob: -15.500322341918945
    10. '))' → logprob: -15.500322341918945

Token 164: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5735589861869812
    2. '    
' → logprob: -1.073559045791626
    3. '   ' → logprob: -2.573559045791626
    4. 'def' → logprob: -4.823558807373047
    5. '  
' → logprob: -5.823558807373047
    6. ' 
' → logprob: -6.073558807373047
    7. '        
' → logprob: -6.573558807373047
    8. '<|end|>' → logprob: -6.823558807373047
    9. ' def' → logprob: -7.448558807373047
    10. '_' → logprob: -7.823558807373047

Token 165: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04208409786224365
    2. '   ' → logprob: -3.292084217071533
    3. ' def' → logprob: -5.542084217071533
    4. '
' → logprob: -9.667083740234375
    5. ' ' → logprob: -10.917083740234375
    6. '    
' → logprob: -11.042083740234375
    7. '	def' → logprob: -11.542083740234375
    8. '  ' → logprob: -12.667083740234375
    9. 'from' → logprob: -14.167083740234375
    10. '    ' → logprob: -14.167083740234375

Token 166: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -8.232493564719334e-05
    2. ' def' → logprob: -9.750082015991211
    3. '   ' → logprob: -11.250082015991211
    4. 'from' → logprob: -11.625082015991211
    5. '    
' → logprob: -14.250082015991211
    6. '#' → logprob: -14.625082015991211
    7. '
' → logprob: -15.125082015991211
    8. 'import' → logprob: -15.375082015991211
    9. '	def' → logprob: -16.50008201599121
    10. 'class' → logprob: -16.62508201599121

Token 167: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.0304288864135742
    2. ' best' → logprob: -1.5304288864135742
    3. 'max' → logprob: -1.6554288864135742
    4. ' find' → logprob: -2.280428886413574
    5. 'best' → logprob: -2.780428886413574
    6. ' maximize' → logprob: -3.280428886413574
    7. 'maximize' → logprob: -4.530428886413574
    8. 'find' → logprob: -5.280428886413574
    9. 'optimal' → logprob: -5.780428886413574
    10. ' maximum' → logprob: -5.905428886413574

Token 168: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.2723456919193268
    2. '_group' → logprob: -1.5223456621170044
    3. '_h' → logprob: -4.522345542907715
    4. '_subset' → logprob: -6.272345542907715
    5. 'imum' → logprob: -6.522345542907715
    6. '_party' → logprob: -6.772345542907715
    7. '_' → logprob: -7.022345542907715
    8. 'imize' → logprob: -7.022345542907715
    9. '_sub' → logprob: -7.522345542907715
    10. 'imal' → logprob: -7.897345542907715

Token 169: 'atisfaction' (ID: 60876)
  Prédit: 'atisf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atisf' → logprob: -0.638820230960846
    2. 'atisfaction' → logprob: -1.8888201713562012
    3. 'at' → logprob: -2.263820171356201
    4. 'e' → logprob: -2.513820171356201
    5. 'ize' → logprob: -3.138820171356201
    6. 'eat' → logprob: -3.638820171356201
    7. '_' → logprob: -3.888820171356201
    8. 'atis' → logprob: -5.138820171356201
    9. 'elect' → logprob: -5.263820171356201
    10. '_e' → logprob: -5.388820171356201

Token 170: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0013827363727614284
    2. '(' → logprob: -7.001382827758789
    3. ' (' → logprob: -7.876382827758789
    4. '_group' → logprob: -9.876382827758789
    5. '   ' → logprob: -10.876382827758789
    6. '_(' → logprob: -12.126382827758789
    7. 'self' → logprob: -12.126382827758789
    8. '_' → logprob: -12.876382827758789
    9. '_self' → logprob: -12.876382827758789
    10. '       ' → logprob: -13.501382827758789

Token 171: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03380117937922478
    2. ' ,' → logprob: -3.6588010787963867
    3. '(self' → logprob: -6.158801078796387
    4. '_group' → logprob: -6.533801078796387
    5. 'self' → logprob: -6.658801078796387
    6. '):' → logprob: -6.908801078796387
    7. '_' → logprob: -8.033801078796387
    8. '   ' → logprob: -8.158801078796387
    9. ',self' → logprob: -8.158801078796387
    10. '_,' → logprob: -8.658801078796387

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003459775587543845
    2. '(' → logprob: -6.878459930419922
    3. '   ' → logprob: -7.128459930419922
    4. '        
' → logprob: -7.253459930419922
    5. '    ' → logprob: -8.003459930419922
    6. '(n' → logprob: -9.253459930419922
    7. '      ' → logprob: -9.628459930419922
    8. '    
' → logprob: -10.128459930419922
    9. ':' → logprob: -10.253459930419922
    10. ' 
' → logprob: -10.253459930419922

Token 173: ' #' (ID: 1069)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.0079493522644043
    2. ' best' → logprob: -1.2579493522644043
    3. 'max' → logprob: -2.1329493522644043
    4. ' from' → logprob: -2.7579493522644043
    5. 'best' → logprob: -2.8829493522644043
    6. 'from' → logprob: -3.2579493522644043
    7. ' result' → logprob: -3.7579493522644043
    8. ' n' → logprob: -4.382949352264404
    9. 'import' → logprob: -4.382949352264404
    10. ' import' → logprob: -4.507949352264404

Token 174: ' We' (ID: 1416)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8825442790985107
    2. ' from' → logprob: -1.3825442790985107
    3. 'import' → logprob: -2.0075442790985107
    4. ' best' → logprob: -2.5075442790985107
    5. 'best' → logprob: -3.1325442790985107
    6. ' import' → logprob: -3.3825442790985107
    7. ' max' → logprob: -4.38254451751709
    8. 'max' → logprob: -4.63254451751709
    9. 'n' → logprob: -5.63254451751709
    10. ' n' → logprob: -5.63254451751709

Token 175: ' seek' (ID: 8142)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.14097478985786438
    2. '   ' → logprob: -2.265974760055542
    3. 'import' → logprob: -4.640974998474121
    4. '       ' → logprob: -5.140974998474121
    5. ' ' → logprob: -6.265974998474121
    6. ' from' → logprob: -6.390974998474121
    7. '    ' → logprob: -6.515974998474121
    8. ' need' → logprob: -6.640974998474121
    9. ' can' → logprob: -7.015974998474121
    10. ' want' → logprob: -7.015974998474121

Token 176: ' subset' (ID: 58845)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.17407359182834625
    2. ' all' → logprob: -2.7990736961364746
    3. ' max' → logprob: -3.1740736961364746
    4. 'max' → logprob: -4.299073696136475
    5. ' best' → logprob: -4.924073696136475
    6. '       ' → logprob: -5.049073696136475
    7. ' the' → logprob: -5.549073696136475
    8. 'to' → logprob: -5.549073696136475
    9. '   ' → logprob: -5.674073696136475
    10. ' a' → logprob: -5.674073696136475

Token 177: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6278123259544373
    2. ' ' → logprob: -1.627812385559082
    3. ' of' → logprob: -2.127812385559082
    4. '_' → logprob: -2.877812385559082
    5. ' s' → logprob: -3.502812385559082
    6. '(s' → logprob: -4.127812385559082
    7. '       ' → logprob: -4.627812385559082
    8. '(' → logprob: -5.252812385559082
    9. '[' → logprob: -5.377812385559082
    10. ',' → logprob: -5.877812385559082

Token 178: ' rabbits' (ID: 122309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.038812603801488876
    2. ' self' → logprob: -3.2888126373291016
    3. 'r' → logprob: -7.288812637329102
    4. 'range' → logprob: -10.538812637329102
    5. '       ' → logprob: -11.038812637329102
    6. '   ' → logprob: -11.663812637329102
    7. 's' → logprob: -11.788812637329102
    8. '(self' → logprob: -12.163812637329102
    9. ' rabbits' → logprob: -12.163812637329102
    10. '[self' → logprob: -12.788812637329102

Token 179: ' maximizing' (ID: 130999)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2069674730300903
    2. ',' → logprob: -1.5819674730300903
    3. ' from' → logprob: -2.206967353820801
    4. ' in' → logprob: -2.581967353820801
    5. ' that' → logprob: -2.831967353820801
    6. ' with' → logprob: -3.206967353820801
    7. '       ' → logprob: -3.206967353820801
    8. ' of' → logprob: -3.581967353820801
    9. ' for' → logprob: -3.831967353820801
    10. ':' → logprob: -4.081967353820801

Token 180: ' satisfaction' (ID: 24333)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.8521502017974854
    2. 'self' → logprob: -1.2271502017974854
    3. ' the' → logprob: -2.1021502017974854
    4. 's' → logprob: -2.4771502017974854
    5. '   ' → logprob: -3.6021502017974854
    6. ' satisfaction' → logprob: -4.352149963378906
    7. 'the' → logprob: -4.727149963378906
    8. ' ' → logprob: -5.602149963378906
    9. '       ' → logprob: -5.727149963378906
    10. 'sum' → logprob: -5.852149963378906

Token 181: ' score' (ID: 8429)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32951733469963074
    2. '(self' → logprob: -1.5795173645019531
    3. '   ' → logprob: -3.704517364501953
    4. '(' → logprob: -4.079517364501953
    5. ',' → logprob: -4.579517364501953
    6. ' ' → logprob: -5.329517364501953
    7. '        
' → logprob: -5.579517364501953
    8. ' (' → logprob: -5.579517364501953
    9. '.' → logprob: -5.954517364501953
    10. '(
' → logprob: -6.829517364501953

Token 182: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10676044970750809
    2. '   ' → logprob: -2.9817605018615723
    3. '(self' → logprob: -3.7317605018615723
    4. '(' → logprob: -4.606760501861572
    5. '        
' → logprob: -5.606760501861572
    6. ',' → logprob: -5.731760501861572
    7. ' ' → logprob: -6.106760501861572
    8. '
' → logprob: -6.481760501861572
    9. ' (' → logprob: -6.606760501861572
    10. 'import' → logprob: -6.856760501861572

Token 183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011645288206636906
    2. '   ' → logprob: -5.136645317077637
    3. '(' → logprob: -6.511645317077637
    4. ',' → logprob: -6.761645317077637
    5. '(self' → logprob: -7.511645317077637
    6. ' ' → logprob: -7.636645317077637
    7. '        
' → logprob: -7.761645317077637
    8. '        ' → logprob: -7.886645317077637
    9. ' (' → logprob: -8.636645317077637
    10. '      ' → logprob: -8.886645317077637

Token 184: ' #' (ID: 1069)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.8980469107627869
    2. ' best' → logprob: -1.5230469703674316
    3. '       ' → logprob: -1.6480469703674316
    4. 'from' → logprob: -2.2730469703674316
    5. ' from' → logprob: -3.3980469703674316
    6. 'max' → logprob: -4.148046970367432
    7. 'n' → logprob: -4.648046970367432
    8. 'import' → logprob: -4.773046970367432
    9. ' max' → logprob: -5.398046970367432
    10. ' n' → logprob: -5.773046970367432

Token 185: ' Given' (ID: 29844)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -1.0412359237670898
    2. ' n' → logprob: -1.2912359237670898
    3. ' best' → logprob: -2.16623592376709
    4. 'from' → logprob: -2.16623592376709
    5. ' import' → logprob: -3.41623592376709
    6. 'import' → logprob: -3.66623592376709
    7. 'n' → logprob: -3.66623592376709
    8. ' max' → logprob: -3.79123592376709
    9. ' result' → logprob: -4.04123592376709
    10. 'best' → logprob: -4.79123592376709

Token 186: ' n' (ID: 297)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.7617387175559998
    2. ' the' → logprob: -1.0117387771606445
    3. ' self' → logprob: -2.1367387771606445
    4. ' that' → logprob: -3.0117387771606445
    5. ' from' → logprob: -7.1367387771606445
    6. '   ' → logprob: -7.7617387771606445
    7. ' import' → logprob: -8.136738777160645
    8. ' a' → logprob: -8.761738777160645
    9. ' your' → logprob: -8.761738777160645
    10. ' ' → logprob: -9.011738777160645

Token 187: ' up' (ID: 869)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24775798618793488
    2. '=' → logprob: -1.9977580308914185
    3. ' <=' → logprob: -2.622757911682129
    4. 'r' → logprob: -5.997757911682129
    5. '_r' → logprob: -5.997757911682129
    6. ' ' → logprob: -6.872757911682129
    7. '<=' → logprob: -6.997757911682129
    8. ' rabbits' → logprob: -7.497757911682129
    9. '=len' → logprob: -7.497757911682129
    10. ' >' → logprob: -7.622757911682129

Token 188: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.00910800788551569
    2. '_to' → logprob: -4.884108066558838
    3. ' to' → logprob: -7.884108066558838
    4. '   ' → logprob: -7.884108066558838
    5. 'To' → logprob: -8.25910758972168
    6. 'from' → logprob: -9.00910758972168
    7. 'on' → logprob: -9.25910758972168
    8. '       ' → logprob: -9.63410758972168
    9. ' ' → logprob: -10.75910758972168
    10. 'oints' → logprob: -10.88410758972168

Token 189: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.04612065851688385
    2. '15' → logprob: -3.4211206436157227
    3. ' ' → logprob: -5.421120643615723
    4. '10' → logprob: -5.921120643615723
    5. '16' → logprob: -6.046120643615723
    6. '18' → logprob: -6.171120643615723
    7. '12' → logprob: -7.546120643615723
    8. '30' → logprob: -9.171120643615723
    9. '25' → logprob: -9.796120643615723
    10. 'len' → logprob: -10.296120643615723

Token 190: '100' (ID: 1353)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '20' → logprob: -0.03490418568253517
    2. '15' → logprob: -4.1599040031433105
    3. '16' → logprob: -4.7849040031433105
    4. 'len' → logprob: -4.9099040031433105
    5. '10' → logprob: -6.4099040031433105
    6. '18' → logprob: -7.1599040031433105
    7. '12' → logprob: -8.034904479980469
    8. ' ' → logprob: -9.784904479980469
    9. '30' → logprob: -10.159904479980469
    10. '14' → logprob: -10.409904479980469

Token 191: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6731286644935608
    2. '
' → logprob: -1.423128604888916
    3. ',' → logprob: -1.548128604888916
    4. ',
' → logprob: -4.173128604888916
    5. '        
' → logprob: -4.798128604888916
    6. ':' → logprob: -5.923128604888916
    7. 'import' → logprob: -6.173128604888916
    8. '<|end|>' → logprob: -6.423128604888916
    9. ' from' → logprob: -6.923128604888916
    10. ':
' → logprob: -7.173128604888916

Token 192: ' we' (ID: 581)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.31673622131347656
    2. ' import' → logprob: -1.6917362213134766
    3. '       ' → logprob: -3.3167362213134766
    4. ' we' → logprob: -4.316736221313477
    5. 'from' → logprob: -4.566736221313477
    6. ' return' → logprob: -4.816736221313477
    7. 'import' → logprob: -5.316736221313477
    8. ' the' → logprob: -5.816736221313477
    9. ' best' → logprob: -5.816736221313477
    10. '   ' → logprob: -6.566736221313477

Token 193: ' try' (ID: 2075)
  Prédit: ' cannot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cannot' → logprob: -0.5419417023658752
    2. ' can' → logprob: -1.9169416427612305
    3. ' need' → logprob: -2.0419416427612305
    4. ' can't' → logprob: -3.1669416427612305
    5. ' should' → logprob: -3.7919416427612305
    6. ' may' → logprob: -3.7919416427612305
    7. ' have' → logprob: -4.5419416427612305
    8. ' could' → logprob: -4.9169416427612305
    9. ' might' → logprob: -5.0419416427612305
    10. 'import' → logprob: -5.4169416427612305

Token 194: ' advanced' (ID: 12990)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.03792155906558037
    2. 'all' → logprob: -3.662921667098999
    3. ' subsets' → logprob: -5.41292142868042
    4. '   ' → logprob: -5.66292142868042
    5. ' combinations' → logprob: -7.28792142868042
    6. ' to' → logprob: -7.28792142868042
    7. '       ' → logprob: -7.53792142868042
    8. ' a' → logprob: -7.66292142868042
    9. ' from' → logprob: -7.78792142868042
    10. '```' → logprob: -8.287921905517578

Token 195: ' branch' (ID: 14338)
  Prédit: ' dynamic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dynamic' → logprob: -1.3679497241973877
    2. ' techniques' → logprob: -1.9929497241973877
    3. ' approaches' → logprob: -2.1179497241973877
    4. ' algorithms' → logprob: -2.1179497241973877
    5. ' optimization' → logprob: -2.3679497241973877
    6. ' search' → logprob: -2.4929497241973877
    7. ' back' → logprob: -2.6179497241973877
    8. ' algorithm' → logprob: -3.2429497241973877
    9. ' methods' → logprob: -3.9929497241973877
    10. 'search' → logprob: -4.617949485778809

Token 196: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.3798506259918213
    2. '_and' → logprob: -1.6298506259918213
    3. ' and' → logprob: -2.6298506259918213
    4. '-and' → logprob: -3.5048506259918213
    5. '   ' → logprob: -5.004850387573242
    6. '       ' → logprob: -5.879850387573242
    7. '-' → logprob: -6.129850387573242
    8. ' ' → logprob: -6.379850387573242
    9. 'ing' → logprob: -7.004850387573242
    10. '_' → logprob: -7.004850387573242

Token 197: ' bound' (ID: 11608)
  Prédit: 'bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bound' → logprob: -0.00012892624363303185
    2. '_bound' → logprob: -9.375128746032715
    3. 'cut' → logprob: -11.250128746032715
    4. 'bounds' → logprob: -11.625128746032715
    5. '-bound' → logprob: -12.000128746032715
    6. 'b' → logprob: -12.375128746032715
    7. 'bounded' → logprob: -12.500128746032715
    8. ' bound' → logprob: -12.750128746032715
    9. '   ' → logprob: -13.125128746032715
    10. '    
' → logprob: -14.625128746032715

Token 198: ' with' (ID: 483)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.956880509853363
    2. '       ' → logprob: -1.2068805694580078
    3. '   ' → logprob: -1.4568805694580078
    4. '(' → logprob: -3.456880569458008
    5. '
' → logprob: -4.081880569458008
    6. ',' → logprob: -4.706880569458008
    7. 'def' → logprob: -5.081880569458008
    8. '(
' → logprob: -5.706880569458008
    9. '        
' → logprob: -5.831880569458008
    10. ' def' → logprob: -5.956880569458008

Token 199: ' abstra' (ID: 186216)
  Prédit: ' memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' memo' → logprob: -1.1115949153900146
    2. 'memo' → logprob: -1.2365949153900146
    3. ' back' → logprob: -1.6115949153900146
    4. ' pruning' → logprob: -2.1115949153900146
    5. ' itertools' → logprob: -3.3615949153900146
    6. 'back' → logprob: -4.111595153808594
    7. ' bit' → logprob: -6.361595153808594
    8. 'bit' → logprob: -6.361595153808594
    9. 'dfs' → logprob: -6.361595153808594
    10. 'pr' → logprob: -6.361595153808594

Token 200: 'ctions' (ID: 2620)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.01733391545712948
    2. 'ction' → logprob: -4.142333984375
    3. 'ctions' → logprob: -6.892333984375
    4. 'cts' → logprob: -8.267333984375
    5. '
' → logprob: -11.392333984375
    6. '```' → logprob: -12.142333984375
    7. 'ck' → logprob: -12.767333984375
    8. '#' → logprob: -13.892333984375
    9. '

' → logprob: -14.017333984375
    10. '``' → logprob: -14.017333984375

Token 201: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46438226103782654
    2. '   ' → logprob: -2.4643821716308594
    3. ':' → logprob: -2.5893821716308594
    4. '<|end|>' → logprob: -2.5893821716308594
    5. ' ' → logprob: -3.4643821716308594
    6. '
' → logprob: -3.4643821716308594
    7. '<|end|>' → logprob: -3.9643821716308594
    8. '        
' → logprob: -4.089382171630859
    9. ',' → logprob: -4.714382171630859
    10. '    ' → logprob: -4.964382171630859

Token 202: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020047295838594437
    2. '   ' → logprob: -4.270047187805176
    3. '    ' → logprob: -6.270047187805176
    4. '        ' → logprob: -6.895047187805176
    5. 'n' → logprob: -7.395047187805176
    6. ' ' → logprob: -7.520047187805176
    7. '        
' → logprob: -7.520047187805176
    8. 'import' → logprob: -8.645047187805176
    9. ' n' → logprob: -9.145047187805176
    10. '     ' → logprob: -9.270047187805176

Token 203: ' from' (ID: 591)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.49551475048065186
    2. 'pass' → logprob: -1.7455147504806519
    3. 'n' → logprob: -2.4955148696899414
    4. '       ' → logprob: -2.9955148696899414
    5. 'from' (adapté à ' from') → logprob: -3.2455148696899414
    6. 'import' → logprob: -3.9955148696899414
    7. ' best' → logprob: -4.870514869689941
    8. 'max' → logprob: -5.120514869689941
    9. ' pass' → logprob: -5.495514869689941
    10. '#' → logprob: -6.120514869689941

Token 204: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.0005165747134014964
    2. 'it' → logprob: -7.625516414642334
    3. ' math' → logprob: -12.000516891479492
    4. 'collections' → logprob: -12.125516891479492
    5. 'heap' → logprob: -12.250516891479492
    6. ' functools' → logprob: -12.500516891479492
    7. 'copy' → logprob: -13.375516891479492
    8. 'math' → logprob: -13.375516891479492
    9. ' heap' → logprob: -13.875516891479492
    10. ' ' → logprob: -13.875516891479492

Token 205: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6345347762107849
    2. 'import' → logprob: -0.7595347762107849
    3. '_import' → logprob: -7.25953483581543
    4. '	import' → logprob: -7.88453483581543
    5. 'ertools' → logprob: -7.88453483581543
    6. '<|end|>' → logprob: -8.75953483581543
    7. '.com' → logprob: -9.00953483581543
    8. ' itertools' → logprob: -9.38453483581543
    9. '.import' → logprob: -10.38453483581543
    10. '.' → logprob: -10.75953483581543

Token 206: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.5759427547454834
    2. ' combinations' → logprob: -0.8259427547454834
    3. ' chain' → logprob: -13.575942993164062
    4. '	com' → logprob: -14.075942993164062
    5. 'comb' → logprob: -14.825942993164062
    6. 'chain' → logprob: -15.200942993164062
    7. '_com' → logprob: -15.450942993164062
    8. '(com' → logprob: -15.700942993164062
    9. '.com' → logprob: -16.200942993164062
    10. '-com' → logprob: -16.575942993164062

Token 207: '
        
' (ID: 20417)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14510194957256317
    2. ',' → logprob: -2.395102024078369
    3. '       ' → logprob: -3.395102024078369
    4. '        
' → logprob: -5.520102024078369
    5. '<|end|>' → logprob: -6.270102024078369
    6. ',
' → logprob: -6.520102024078369
    7. '(n' → logprob: -7.270102024078369
    8. '
        
' → logprob: -8.020101547241211
    9. ',n' → logprob: -8.145101547241211
    10. 'n' → logprob: -8.145101547241211

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21069230139255524
    2. 'n' → logprob: -1.710692286491394
    3. ' n' → logprob: -4.710692405700684
    4. 'best' → logprob: -10.085692405700684
    5. 'r' → logprob: -10.210692405700684
    6. 'max' → logprob: -10.335692405700684
    7. '   ' → logprob: -10.460692405700684
    8. ' for' → logprob: -10.710692405700684
    9. ' best' → logprob: -10.835692405700684
    10. 'result' → logprob: -11.210692405700684

Token 209: ' class' (ID: 744)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.6396967172622681
    2. 'n' → logprob: -1.639696717262268
    3. 'max' → logprob: -1.639696717262268
    4. ' best' → logprob: -2.7646965980529785
    5. ' max' → logprob: -4.5146965980529785
    6. ' n' → logprob: -4.7646965980529785
    7. 'result' → logprob: -7.2646965980529785
    8. 'r' → logprob: -7.6396965980529785
    9. 'def' → logprob: -8.514697074890137
    10. '   ' → logprob: -8.639697074890137

Token 210: ' Candidate' (ID: 81541)
  Prédit: ' Branch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Branch' → logprob: -0.8841016888618469
    2. ' Party' → logprob: -1.6341016292572021
    3. ' Solution' → logprob: -1.8841016292572021
    4. ' Node' → logprob: -2.134101629257202
    5. ' Candidate' → logprob: -4.009101867675781
    6. ' Rabbit' → logprob: -4.134101867675781
    7. ' Sub' → logprob: -4.259101867675781
    8. ' Solver' → logprob: -4.509101867675781
    9. ' Group' → logprob: -4.759101867675781
    10. ' Br' → logprob: -4.884101867675781

Token 211: 'Group' (ID: 2748)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5238111615180969
    2. ':
' → logprob: -0.8988111615180969
    3. '(object' → logprob: -7.398811340332031
    4. '   ' → logprob: -11.398811340332031
    5. '(C' → logprob: -11.398811340332031
    6. '(' → logprob: -11.648811340332031
    7. ':
' → logprob: -11.898811340332031
    8. ':

' → logprob: -12.148811340332031
    9. '):
' → logprob: -12.398811340332031
    10. '():
' → logprob: -12.398811340332031

Token 212: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11500203609466553
    2. ':
' → logprob: -2.240002155303955
    3. '(list' → logprob: -6.490002155303955
    4. '(object' → logprob: -7.865002155303955
    5. ' :' → logprob: -8.740001678466797
    6. ' :
' → logprob: -10.615001678466797
    7. ':list' → logprob: -10.615001678466797
    8. '(set' → logprob: -11.240001678466797
    9. ':
' → logprob: -11.740001678466797
    10. '(dict' → logprob: -11.865001678466797

Token 213: '           ' (ID: 352)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4388320744037628
    2. ':' → logprob: -1.3138320446014404
    3. '       ' → logprob: -2.9388320446014404
    4. '(object' → logprob: -3.9388320446014404
    5. '   ' → logprob: -5.3138322830200195
    6. '<|end|>' → logprob: -5.9388322830200195
    7. '           ' → logprob: -6.1888322830200195
    8. '(' → logprob: -6.8138322830200195
    9. '        
' → logprob: -7.3138322830200195
    10. '        ' → logprob: -7.6888322830200195

Token 214: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.2827741801738739
    2. 'def' (adapté à ' def') → logprob: -1.4077742099761963
    3. ' __' → logprob: -7.782773971557617
    4. '   ' → logprob: -7.907773971557617
    5. '__' → logprob: -8.032773971557617
    6. '           ' → logprob: -8.282773971557617
    7. '       ' → logprob: -8.532773971557617
    8. '	def' → logprob: -10.782773971557617
    9. ' ' → logprob: -10.907773971557617
    10. '               ' → logprob: -11.407773971557617

Token 215: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16313941776752472
    2. ' __' → logprob: -1.9131394624710083
    3. 'init' → logprob: -5.913139343261719
    4. '_init' → logprob: -9.038139343261719
    5. '___' → logprob: -10.038139343261719
    6. '____' → logprob: -10.288139343261719
    7. '```' → logprob: -12.913139343261719
    8. '__(' → logprob: -13.538139343261719
    9. 'def' → logprob: -13.663139343261719
    10. '**' → logprob: -13.913139343261719

Token 216: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.7432603272027336e-06
    2. ' init' → logprob: -13.625001907348633
    3. '```' → logprob: -16.250001907348633
    4. 'int' → logprob: -16.500001907348633
    5. 'class' → logprob: -16.500001907348633
    6. 'new' → logprob: -16.625001907348633
    7. '`' → logprob: -17.250001907348633
    8. '__' → logprob: -17.500001907348633
    9. '_init' → logprob: -17.500001907348633
    10. '   ' → logprob: -18.125001907348633

Token 217: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0031080730259418488
    2. '__' → logprob: -6.003108024597168
    3. '(self' → logprob: -7.628108024597168
    4. '_(' → logprob: -9.253108024597168
    5. '__(
' → logprob: -11.003108024597168
    6. '(' → logprob: -11.128108024597168
    7. '__((' → logprob: -11.878108024597168
    8. ' (' → logprob: -12.253108024597168
    9. '___' → logprob: -13.003108024597168
    10. '_' → logprob: -13.753108024597168

Token 218: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005722135538235307
    2. ' self' → logprob: -7.875572204589844
    3. '(self' → logprob: -9.500572204589844
    4. ',' → logprob: -10.000572204589844
    5. '           ' → logprob: -10.000572204589844
    6. '               ' → logprob: -11.250572204589844
    7. ',self' → logprob: -12.000572204589844
    8. 'group' → logprob: -13.125572204589844
    9. ')' → logprob: -13.625572204589844
    10. '```' → logprob: -14.250572204589844

Token 219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03387804329395294
    2. ' ,' → logprob: -3.4088780879974365
    3. 'self' → logprob: -8.533878326416016
    4. ',self' → logprob: -11.033878326416016
    5. '_,' → logprob: -12.283878326416016
    6. '__,' → logprob: -12.533878326416016
    7. '(self' → logprob: -12.533878326416016
    8. '               ' → logprob: -13.783878326416016
    9. '           ' → logprob: -13.783878326416016
    10. ' ' → logprob: -14.033878326416016

Token 220: ' members' (ID: 5000)
  Prédit: 'members'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'members' → logprob: -0.1975536346435547
    2. 'r' → logprob: -2.1975536346435547
    3. ' members' → logprob: -2.9475536346435547
    4. ' rabbits' → logprob: -4.697553634643555
    5. 'group' → logprob: -5.572553634643555
    6. 'self' → logprob: -6.447553634643555
    7. 'ids' → logprob: -7.947553634643555
    8. ' group' → logprob: -7.947553634643555
    9. 'selected' → logprob: -9.572553634643555
    10. ' r' → logprob: -9.697553634643555

Token 221: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12166883796453476
    2. '):
' → logprob: -2.871668815612793
    3. ',' → logprob: -3.121668815612793
    4. ' ):' → logprob: -4.496668815612793
    5. '=set' → logprob: -7.121668815612793
    6. ' ,' → logprob: -7.621668815612793
    7. ' ):
' → logprob: -8.496668815612793
    8. '):
' → logprob: -8.621668815612793
    9. '=None' → logprob: -8.621668815612793
    10. ',set' → logprob: -8.621668815612793

Token 222: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005937209352850914
    2. ',' → logprob: -5.880937099456787
    3. ':' → logprob: -6.630937099456787
    4. '                
' → logprob: -7.630937099456787
    5. '                ' → logprob: -7.880937099456787
    6. '<|end|>' → logprob: -8.005937576293945
    7. '              ' → logprob: -8.755937576293945
    8. '           ' → logprob: -9.505937576293945
    9. '            ' → logprob: -9.755937576293945
    10. ':
' → logprob: -10.130937576293945

Token 223: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6058796644210815
    2. 'self' (adapté à ' self') → logprob: -1.1058796644210815
    3. ' members' → logprob: -2.730879783630371
    4. 'members' → logprob: -2.855879783630371
    5. '               ' → logprob: -7.730879783630371
    6. ' set' → logprob: -8.355879783630371
    7. 'set' → logprob: -9.605879783630371
    8. '                   ' → logprob: -10.605879783630371
    9. '   ' → logprob: -10.980879783630371
    10. ' ' → logprob: -11.605879783630371

Token 224: '.members' (ID: 96660)
  Prédit: '.members'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.members' → logprob: -0.02140982635319233
    2. ' .' → logprob: -4.77140998840332
    3. '.' → logprob: -5.02140998840332
    4. '.m' → logprob: -5.39640998840332
    5. ' =' → logprob: -7.27140998840332
    6. 'members' → logprob: -7.89640998840332
    7. '=' → logprob: -8.52140998840332
    8. ' ' → logprob: -9.27140998840332
    9. ':' → logprob: -10.27140998840332
    10. '_members' → logprob: -10.64640998840332

Token 225: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18020565807819366
    2. '=' → logprob: -1.8052057027816772
    3. '=set' → logprob: -7.805205821990967
    4. ' ' → logprob: -10.555205345153809
    5. '   ' → logprob: -11.430205345153809
    6. ',' → logprob: -12.555205345153809
    7. ')' → logprob: -13.055205345153809
    8. '    ' → logprob: -13.180205345153809
    9. ' =
' → logprob: -13.805205345153809
    10. 'set' → logprob: -13.930205345153809

Token 226: ' members' (ID: 5000)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.25501781702041626
    2. 'members' → logprob: -1.6300177574157715
    3. ' set' → logprob: -3.6300177574157715
    4. ' members' → logprob: -6.0050177574157715
    5. 'list' → logprob: -8.88001823425293
    6. '   ' → logprob: -11.38001823425293
    7. 'fro' → logprob: -11.38001823425293
    8. 'tuple' → logprob: -12.38001823425293
    9. ' list' → logprob: -12.50501823425293
    10. ' ' → logprob: -12.75501823425293

Token 227: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 228: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.050897497683763504
    2. '<|end|>' → logprob: -3.1758975982666016
    3. '
' → logprob: -5.050897598266602
    4. '           ' → logprob: -7.300897598266602
    5. '            
' → logprob: -8.300897598266602
    6. '<|end|>' → logprob: -8.800897598266602
    7. '                
' → logprob: -8.925897598266602
    8. '                ' → logprob: -9.675897598266602
    9. ')' → logprob: -10.675897598266602
    10. ' ' → logprob: -10.675897598266602

Token 229: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00533206295222044
    2. '           ' → logprob: -6.255331993103027
    3. '               ' → logprob: -6.380331993103027
    4. ' self' → logprob: -7.005331993103027
    5. 's' → logprob: -8.005331993103027
    6. 'def' → logprob: -8.380331993103027
    7. '       ' → logprob: -9.505331993103027
    8. '   ' → logprob: -10.130331993103027
    9. 'score' → logprob: -10.630331993103027
    10. '_' → logprob: -11.130331993103027

Token 230: '.score' (ID: 42441)
  Prédit: '.s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.11124220490455627
    2. '.score' → logprob: -3.1112422943115234
    3. '._' → logprob: -3.4862422943115234
    4. '_score' → logprob: -5.111242294311523
    5. ' .' → logprob: -5.361242294311523
    6. '.size' → logprob: -5.736242294311523
    7. 's' → logprob: -5.861242294311523
    8. 'score' → logprob: -6.236242294311523
    9. '.max' → logprob: -6.236242294311523
    10. '           ' → logprob: -6.361242294311523

Token 231: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25204381346702576
    2. '=' → logprob: -1.5020438432693481
    3. ' ' → logprob: -9.627043724060059
    4. '<|end|>' → logprob: -10.502043724060059
    5. '<|end|>' → logprob: -12.502043724060059
    6. '_' → logprob: -12.502043724060059
    7. '=None' → logprob: -12.627043724060059
    8. 's' → logprob: -12.877043724060059
    9. '  ' → logprob: -13.127043724060059
    10. '=sum' → logprob: -13.627043724060059

Token 232: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4241521656513214
    2. 'self' → logprob: -1.424152135848999
    3. 'Party' → logprob: -3.299152135848999
    4. ' self' → logprob: -3.424152135848999
    5. 'sum' → logprob: -4.424152374267578
    6. ' ' → logprob: -4.799152374267578
    7. ' Party' → logprob: -5.299152374267578
    8. 'None' → logprob: -5.924152374267578
    9. ' sum' → logprob: -6.049152374267578
    10. '           ' → logprob: -6.799152374267578

Token 233: '
            
' (ID: 45334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 234: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04479172080755234
    2. '            
' → logprob: -3.2947916984558105
    3. '
' → logprob: -6.0447916984558105
    4. '        
' → logprob: -6.2947916984558105
    5. '       ' → logprob: -7.2947916984558105
    6. '<|end|>' → logprob: -7.4197916984558105
    7. '            ' → logprob: -8.294792175292969
    8. '<|end|>' → logprob: -8.419792175292969
    9. '    
' → logprob: -8.544792175292969
    10. '               ' → logprob: -8.794792175292969

Token 235: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.6259500980377197
    2. ' def' → logprob: -1.3759500980377197
    3. '           ' → logprob: -1.8759500980377197
    4. '       ' → logprob: -2.8759500980377197
    5. '   ' → logprob: -5.875949859619141
    6. ' ' → logprob: -9.50094985961914
    7. '        ' → logprob: -10.00094985961914
    8. '          ' → logprob: -10.75094985961914
    9. '        
' → logprob: -10.87594985961914
    10. '    ' → logprob: -10.87594985961914

Token 236: ' compute' (ID: 23864)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -1.0166293382644653
    2. ' calculate' → logprob: -1.3916293382644653
    3. ' potential' → logprob: -1.6416293382644653
    4. 'compute' → logprob: -2.516629219055176
    5. ' compute' → logprob: -3.141629219055176
    6. 'potential' → logprob: -3.516629219055176
    7. 'evaluate' → logprob: -3.766629219055176
    8. ' evaluate' → logprob: -4.266629219055176
    9. ' update' → logprob: -6.766629219055176
    10. 'update' → logprob: -6.891629219055176

Token 237: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.3162366449832916
    2. '_s' → logprob: -1.3162366151809692
    3. '_' → logprob: -6.06623649597168
    4. '_p' → logprob: -7.44123649597168
    5. '_value' → logprob: -11.31623649597168
    6. '_self' → logprob: -11.44123649597168
    7. '_max' → logprob: -11.56623649597168
    8. 's' → logprob: -11.56623649597168
    9. '_scores' → logprob: -12.06623649597168
    10. 'score' → logprob: -12.44123649597168

Token 238: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002052954863756895
    2. '(' → logprob: -6.2520527839660645
    3. ' (' → logprob: -9.002053260803223
    4. 'self' → logprob: -14.877053260803223
    5. '(
' → logprob: -15.002053260803223
    6. '(s' → logprob: -15.252053260803223
    7. ' self' → logprob: -16.877052307128906
    8. '(Self' → logprob: -16.877052307128906
    9. '(sel' → logprob: -17.002052307128906
    10. '(se' → logprob: -17.752052307128906

Token 239: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6760194301605225
    2. '(self' → logprob: -1.0510194301605225
    3. ',' → logprob: -3.0510194301605225
    4. ')' → logprob: -3.6760194301605225
    5. 'self' → logprob: -4.051019668579102
    6. '(' → logprob: -4.176019668579102
    7. '):
' → logprob: -4.301019668579102
    8. ')(' → logprob: -4.801019668579102
    9. '()' → logprob: -4.926019668579102
    10. '():' → logprob: -6.051019668579102

Token 240: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.27920255064964294
    2. '       ' → logprob: -1.9042025804519653
    3. 'self' → logprob: -2.404202461242676
    4. ' self' → logprob: -6.404202461242676
    5. 'score' → logprob: -6.529202461242676
    6. 'total' → logprob: -7.904202461242676
    7. '           ' → logprob: -8.029202461242676
    8. 's' → logprob: -8.904202461242676
    9. 'return' → logprob: -9.029202461242676
    10. ' score' → logprob: -10.654202461242676

Token 241: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01304457988590002
    2. '               ' → logprob: -4.763044357299805
    3. ' self' → logprob: -5.638044357299805
    4. 'score' → logprob: -8.263044357299805
    5. '           ' → logprob: -8.638044357299805
    6. '       ' → logprob: -9.013044357299805
    7. 'total' → logprob: -9.013044357299805
    8. 'if' (adapté à ' if') → logprob: -9.513044357299805
    9. 's' → logprob: -9.638044357299805
    10. 'group' → logprob: -11.138044357299805

Token 242: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2532128393650055
    2. 'self' → logprob: -1.503212809562683
    3. ' not' → logprob: -7.003212928771973
    4. ' len' → logprob: -8.378212928771973
    5. ' ' → logprob: -9.628212928771973
    6. 'len' → logprob: -10.128212928771973
    7. 'not' → logprob: -10.628212928771973
    8. '   ' → logprob: -11.878212928771973
    9. ' any' → logprob: -12.878212928771973
    10. '  ' → logprob: -13.503212928771973

Token 243: '.score' (ID: 42441)
  Prédit: '.score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.score' → logprob: -0.0012549920938909054
    2. 'score' → logprob: -6.876255035400391
    3. '.' → logprob: -8.75125503540039
    4. ' .' → logprob: -9.87625503540039
    5. ' score' → logprob: -12.00125503540039
    6. '           ' → logprob: -13.25125503540039
    7. '	score' → logprob: -13.50125503540039
    8. '.members' → logprob: -14.25125503540039
    9. '               ' → logprob: -14.37625503540039
    10. '.s' → logprob: -14.50125503540039

Token 244: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0008161775767803192
    2. 'is' → logprob: -7.125816345214844
    3. ' ' → logprob: -11.375816345214844
    4. ')' → logprob: -16.875816345214844
    5. ' )' → logprob: -16.875816345214844
    6. '	is' → logprob: -17.125816345214844
    7. '=' → logprob: -17.750816345214844
    8. '==' → logprob: -18.125816345214844
    9. '===' → logprob: -18.125816345214844
    10. '  ' → logprob: -18.500816345214844

Token 245: ' not' (ID: 625)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.6589121222496033
    2. ' not' → logprob: -1.408912181854248
    3. 'None' → logprob: -1.908912181854248
    4. 'not' → logprob: -2.408912181854248
    5. '   ' → logprob: -10.90891170501709
    6. '	not' → logprob: -13.40891170501709
    7. '    ' → logprob: -14.03391170501709
    8. ' ' → logprob: -14.28391170501709
    9. 'Not' → logprob: -14.65891170501709
    10. '_None' → logprob: -15.03391170501709

Token 246: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -4.584861744660884e-05
    2. ' None' → logprob: -10.000045776367188
    3. 'none' → logprob: -15.375045776367188
    4. '   ' → logprob: -16.000045776367188
    5. '_None' → logprob: -16.625045776367188
    6. '       ' → logprob: -17.125045776367188
    7. '           ' → logprob: -17.375045776367188
    8. 'not' → logprob: -17.375045776367188
    9. '=None' → logprob: -17.750045776367188
    10. '  ' → logprob: -18.125045776367188

Token 247: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09799756109714508
    2. ':
' → logprob: -2.4729976654052734
    3. '                   ' → logprob: -5.222997665405273
    4. ':return' → logprob: -5.972997665405273
    5. '               ' → logprob: -7.722997665405273
    6. '           ' → logprob: -8.847997665405273
    7. ' :' → logprob: -9.222997665405273
    8. '<|end|>' → logprob: -9.472997665405273
    9. '):
' → logprob: -9.972997665405273
    10. ' or' → logprob: -10.097997665405273

Token 248: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0020809052512049675
    2. 'return' → logprob: -6.627080917358398
    3. '           ' → logprob: -7.752080917358398
    4. ' return' → logprob: -8.752080917358398
    5. '               ' → logprob: -8.877080917358398
    6. '   ' → logprob: -11.377080917358398
    7. '                  ' → logprob: -12.752080917358398
    8. '                       ' → logprob: -13.127080917358398
    9. ':' → logprob: -13.252080917358398
    10. ':
' → logprob: -13.377080917358398

Token 249: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.11475080996751785
    2. '                   ' → logprob: -2.614750862121582
    3. 'return' (adapté à ' return') → logprob: -3.364750862121582
    4. '               ' → logprob: -7.989750862121582
    5. ' ' → logprob: -9.364750862121582
    6. '           ' → logprob: -9.489750862121582
    7. '
' → logprob: -10.239750862121582
    8. '                    ' → logprob: -10.614750862121582
    9. '	return' → logprob: -10.614750862121582
    10. ' self' → logprob: -11.114750862121582

Token 250: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12694837152957916
    2. ' self' → logprob: -2.126948356628418
    3. '               ' → logprob: -11.251948356628418
    4. '                   ' → logprob: -12.376948356628418
    5. ' ' → logprob: -13.376948356628418
    6. '
' → logprob: -14.376948356628418
    7. '           ' → logprob: -15.251948356628418
    8. '   ' → logprob: -15.376948356628418
    9. '	self' → logprob: -15.501948356628418
    10. '0' → logprob: -16.251949310302734

Token 251: '.score' (ID: 42441)
  Prédit: '.score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.score' → logprob: -0.0003442832676228136
    2. '.' → logprob: -8.000344276428223
    3. 'score' → logprob: -11.875344276428223
    4. ' .' → logprob: -13.375344276428223
    5. '.s' → logprob: -15.875344276428223
    6. '	score' → logprob: -16.00034523010254
    7. ' score' → logprob: -16.37534523010254
    8. '.status' → logprob: -18.00034523010254
    9. '.Score' → logprob: -18.62534523010254
    10. '.sc' → logprob: -19.12534523010254

Token 252: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13538868725299835
    2. '
' → logprob: -2.2603886127471924
    3. '                
' → logprob: -4.0103888511657715
    4. '            
' → logprob: -7.1353888511657715
    5. '           ' → logprob: -7.3853888511657715
    6. '        
' → logprob: -7.6353888511657715
    7. '                ' → logprob: -7.6353888511657715
    8. '    
' → logprob: -7.8853888511657715
    9. '  
' → logprob: -8.135388374328613
    10. ' 
' → logprob: -8.385388374328613

Token 253: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003476293757557869
    2. '                
' → logprob: -6.503476142883301
    3. '
' → logprob: -7.503476142883301
    4. '           ' → logprob: -8.0034761428833
    5. '        
' → logprob: -8.0034761428833
    6. '            
' → logprob: -8.1284761428833
    7. '                ' → logprob: -8.7534761428833
    8. '       ' → logprob: -8.8784761428833
    9. 'self' → logprob: -10.5034761428833
    10. '              ' → logprob: -10.6284761428833

Token 254: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1822013556957245
    2. '               ' → logprob: -2.182201385498047
    3. '       ' → logprob: -3.307201385498047
    4. '           ' → logprob: -4.182201385498047
    5. ' self' → logprob: -6.557201385498047
    6. 'score' → logprob: -8.182201385498047
    7. 's' → logprob: -9.307201385498047
    8. 'group' → logprob: -10.182201385498047
    9. '
' → logprob: -11.432201385498047
    10. '   ' → logprob: -11.557201385498047

Token 255: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.1609615683555603
    2. 'len' → logprob: -1.910961627960205
    3. ' not' → logprob: -7.285961627960205
    4. 'not' → logprob: -10.285961151123047
    5. '               ' → logprob: -11.160961151123047
    6. '           ' → logprob: -13.535961151123047
    7. '                   ' → logprob: -13.660961151123047
    8. '(len' → logprob: -14.160961151123047
    9. '   ' → logprob: -15.285961151123047
    10. ' ' → logprob: -16.535961151123047

Token 256: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.992775888647884e-05
    2. '(' → logprob: -9.625069618225098
    3. 'self' → logprob: -12.625069618225098
    4. ' (' → logprob: -14.750069618225098
    5. '(
' → logprob: -15.875069618225098
    6. ' self' → logprob: -17.375070571899414
    7. '(this' → logprob: -17.750070571899414
    8. '(set' → logprob: -17.750070571899414
    9. '(s' → logprob: -18.000070571899414
    10. '[self' → logprob: -18.875070571899414

Token 257: '.members' (ID: 96660)
  Prédit: '.members'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.members' → logprob: -4.751746746478602e-05
    2. 'members' → logprob: -10.12504768371582
    3. '.' → logprob: -13.25004768371582
    4. ' .' → logprob: -13.62504768371582
    5. '.m' → logprob: -13.75004768371582
    6. ')' → logprob: -13.75004768371582
    7. 'self' → logprob: -14.62504768371582
    8. '_members' → logprob: -14.75004768371582
    9. ' members' → logprob: -15.25004768371582
    10. '           ' → logprob: -15.75004768371582

Token 258: ')' (ID: 8)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5814226865768433
    2. '<=' → logprob: -1.5814226865768433
    3. ')' → logprob: -1.9564226865768433
    4. ' ==' → logprob: -3.206422805786133
    5. '==' → logprob: -3.581422805786133
    6. ' <' → logprob: -4.206422805786133
    7. '<' → logprob: -4.706422805786133
    8. ')<=' → logprob: -6.956422805786133
    9. ' )' → logprob: -8.456422805786133
    10. '()' → logprob: -8.831422805786133

Token 259: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.8083090782165527
    2. '<=' → logprob: -0.8083090782165527
    3. ' <=' → logprob: -2.9333090782165527
    4. ' <' → logprob: -3.5583090782165527
    5. '==' → logprob: -3.6833090782165527
    6. ' ==' → logprob: -6.308309078216553
    7. ')<=' → logprob: -10.308309555053711
    8. ')' → logprob: -10.683309555053711
    9. ' ' → logprob: -11.433309555053711
    10. '()<' → logprob: -11.683309555053711

Token 260: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20567741990089417
    2. '1' → logprob: -2.2056775093078613
    3. ' ' → logprob: -2.5806775093078613
    4. '   ' → logprob: -12.580677032470703
    5. '  ' → logprob: -14.330677032470703
    6. '```' → logprob: -14.830677032470703
    7. '<' → logprob: -15.143177032470703
    8. '<=' → logprob: -15.205677032470703
    9. '2' → logprob: -15.393177032470703
    10. '    ' → logprob: -16.143177032470703

Token 261: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008233297849074006
    2. '1' → logprob: -7.125823497772217
    3. ' ' → logprob: -10.875823020935059
    4. '   ' → logprob: -17.625823974609375
    5. '۰' → logprob: -17.750823974609375
    6. '```' → logprob: -18.438323974609375
    7. '<' → logprob: -18.938323974609375
    8. '０' → logprob: -19.125823974609375
    9. '

' → logprob: -19.813323974609375
    10. '  ' → logprob: -20.313323974609375

Token 262: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.062087904661893845
    2. ':' → logprob: -2.8120880126953125
    3. '                   ' → logprob: -9.687088012695312
    4. ' or' → logprob: -10.812088012695312
    5. '               ' → logprob: -11.062088012695312
    6. ':return' → logprob: -11.687088012695312
    7. '):
' → logprob: -12.562088012695312
    8. '           ' → logprob: -12.687088012695312
    9. ' :
' → logprob: -12.687088012695312
    10. ':
' → logprob: -13.562088012695312

Token 263: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.057909782975912094
    2. '           ' → logprob: -3.0579097270965576
    3. '
' → logprob: -5.557909965515137
    4. '               ' → logprob: -5.807909965515137
    5. 'self' → logprob: -6.932909965515137
    6. ',' → logprob: -8.057909965515137
    7. '    
' → logprob: -8.432909965515137
    8. ' self' → logprob: -8.557909965515137
    9. ':
' → logprob: -8.807909965515137
    10. '                       ' → logprob: -9.182909965515137

Token 264: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4667261242866516
    2. '                   ' → logprob: -1.2167260646820068
    3. 'return' → logprob: -2.716726064682007
    4. ' self' → logprob: -5.091726303100586
    5. '               ' → logprob: -6.466726303100586
    6. ' return' → logprob: -6.591726303100586
    7. '           ' → logprob: -7.591726303100586
    8. '0' → logprob: -7.591726303100586
    9. '   ' → logprob: -8.341726303100586
    10. '
' → logprob: -8.716726303100586

Token 265: '.score' (ID: 42441)
  Prédit: '.score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.score' → logprob: -0.00016659092216286808
    2. '.' → logprob: -8.750166893005371
    3. 'score' → logprob: -12.250166893005371
    4. ' .' → logprob: -12.875166893005371
    5. '	score' → logprob: -15.000166893005371
    6. ' score' → logprob: -16.000165939331055
    7. '.s' → logprob: -16.000165939331055
    8. '   ' → logprob: -17.375165939331055
    9. '           ' → logprob: -17.750165939331055
    10. '.Score' → logprob: -18.500165939331055

Token 266: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693104147911072
    2. ' =' → logprob: -2.1269309520721436
    3. ' ' → logprob: -14.376931190490723
    4. '               ' → logprob: -14.501931190490723
    5. '==' → logprob: -14.751931190490723
    6. '=

' → logprob: -14.751931190490723
    7. '=
' → logprob: -15.126931190490723
    8. 'return' → logprob: -15.126931190490723
    9. '           ' → logprob: -16.001930236816406
    10. ')' → logprob: -16.251930236816406

Token 267: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.62502098083496
    4. '  ' → logprob: -18.00002098083496
    5. '                   ' → logprob: -18.25002098083496
    6. '               ' → logprob: -19.12502098083496
    7. '۰' → logprob: -19.37502098083496
    8. '           ' → logprob: -19.75002098083496
    9. '
' → logprob: -20.12502098083496
    10. '00' → logprob: -20.25002098083496

Token 268: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.750009536743164
    4. '  ' → logprob: -17.625009536743164
    5. '۰' → logprob: -17.625009536743164
    6. '000' → logprob: -19.250009536743164
    7. '０' → logprob: -19.500009536743164
    8. '00' → logprob: -19.500009536743164
    9. '           ' → logprob: -19.750009536743164
    10. '```' → logprob: -20.000009536743164

Token 269: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.039861537516117096
    2. '                   ' → logprob: -3.2898614406585693
    3. '           ' → logprob: -6.914861679077148
    4. 'return' → logprob: -7.414861679077148
    5. '       ' → logprob: -9.664861679077148
    6. '                ' → logprob: -10.289861679077148
    7. '<|end|>' → logprob: -10.289861679077148
    8. '
' → logprob: -10.664861679077148
    9. ' return' → logprob: -11.789861679077148
    10. '   ' → logprob: -12.039861679077148

Token 270: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06227956339716911
    2. '                   ' → logprob: -2.812279462814331
    3. '           ' → logprob: -8.31227970123291
    4. 'return' → logprob: -9.93727970123291
    5. '       ' → logprob: -11.81227970123291
    6. '
' → logprob: -13.06227970123291
    7. '   ' → logprob: -13.43727970123291
    8. '                ' → logprob: -13.56227970123291
    9. '                       ' → logprob: -13.56227970123291
    10. 'import' → logprob: -14.06227970123291

Token 271: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.35492387413978577
    2. '                   ' → logprob: -1.3549238443374634
    3. ' return' → logprob: -3.729923963546753
    4. '               ' → logprob: -4.104923725128174
    5. '           ' → logprob: -8.479924201965332
    6. '
' → logprob: -10.104924201965332
    7. '       ' → logprob: -10.479924201965332
    8. '   ' → logprob: -11.229924201965332
    9. '	return' → logprob: -12.229924201965332
    10. '                       ' → logprob: -12.479924201965332

Token 272: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.192833811044693
    2. ' ' → logprob: -2.56783390045166
    3. 'self' → logprob: -2.56783390045166
    4. ' self' → logprob: -3.81783390045166
    5. '  ' → logprob: -14.31783390045166
    6. '
' → logprob: -14.31783390045166
    7. '   ' → logprob: -15.31783390045166
    8. ' 
' → logprob: -15.81783390045166
    9. '	self' → logprob: -15.81783390045166
    10. 's' → logprob: -16.005332946777344

Token 273: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006731830071657896
    2. 'self' → logprob: -5.006731986999512
    3. ' ' → logprob: -11.256731986999512
    4. ' self' → logprob: -12.631731986999512
    5. '   ' → logprob: -16.506731033325195
    6. '(self' → logprob: -17.006731033325195
    7. '           ' → logprob: -17.756731033325195
    8. '       ' → logprob: -18.131731033325195
    9. '  ' → logprob: -18.256731033325195
    10. 's' → logprob: -18.319231033325195

Token 274: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.047690898180007935
    2. '
' → logprob: -3.2976908683776855
    3. '                
' → logprob: -5.0476908683776855
    4. '            
' → logprob: -6.2976908683776855
    5. '           ' → logprob: -7.4226908683776855
    6. '        
' → logprob: -8.047691345214844
    7. '              ' → logprob: -8.922691345214844
    8. '    
' → logprob: -9.297691345214844
    9. '                ' → logprob: -9.922691345214844
    10. '            ' → logprob: -10.297691345214844

Token 275: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010960565879940987
    2. '
' → logprob: -4.885960578918457
    3. '                
' → logprob: -6.260960578918457
    4. '            
' → logprob: -6.760960578918457
    5. '           ' → logprob: -8.885960578918457
    6. 'self' → logprob: -9.635960578918457
    7. '        
' → logprob: -11.010960578918457
    8. 'import' → logprob: -11.010960578918457
    9. '    
' → logprob: -11.510960578918457
    10. '              ' → logprob: -12.260960578918457

Token 276: ' self' (ID: 1051)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1499779224395752
    2. '           ' → logprob: -1.6499779224395752
    3. 'score' → logprob: -1.8999779224395752
    4. 'self' (adapté à ' self') → logprob: -2.024977922439575
    5. '
' → logprob: -2.774977922439575
    6. '       ' → logprob: -2.899977922439575
    7. 'total' → logprob: -3.274977922439575
    8. 's' → logprob: -3.399977922439575
    9. 'group' → logprob: -5.149977684020996
    10. '                
' → logprob: -6.149977684020996

Token 277: '.score' (ID: 42441)
  Prédit: '.score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.score' → logprob: -0.0019666971638798714
    2. 'score' → logprob: -6.25196647644043
    3. '.' → logprob: -11.25196647644043
    4. '.members' → logprob: -11.75196647644043
    5. '.s' → logprob: -12.75196647644043
    6. ' score' → logprob: -12.87696647644043
    7. '	score' → logprob: -12.87696647644043
    8. ' .' → logprob: -13.25196647644043
    9. 'self' → logprob: -13.25196647644043
    10. '_score' → logprob: -13.75196647644043

Token 278: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759504437446594
    2. ' =' → logprob: -0.8259504437446594
    3. '=self' → logprob: -11.575950622558594
    4. '           ' → logprob: -14.325950622558594
    5. '       ' → logprob: -14.950950622558594
    6. '        ' → logprob: -15.950950622558594
    7. '   ' → logprob: -16.075950622558594
    8. ' ' → logprob: -16.325950622558594
    9. 'self' → logprob: -16.325950622558594
    10. '=
' → logprob: -16.325950622558594

Token 279: ' sum' (ID: 4215)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.39024779200553894
    2. 'sum' → logprob: -1.5152478218078613
    3. 'Party' → logprob: -3.2652478218078613
    4. ' self' → logprob: -3.5152478218078613
    5. ' sum' → logprob: -3.8902478218078613
    6. ' Party' → logprob: -5.140247821807861
    7. 'party' → logprob: -5.265247821807861
    8. '           ' → logprob: -6.765247821807861
    9. 'max' → logprob: -6.890247821807861
    10. '               ' → logprob: -7.890247821807861

Token 280: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.2035229504108429
    2. '(m' → logprob: -1.7035229206085205
    3. '(member' → logprob: -6.7035231590271
    4. 'm' → logprob: -7.8285231590271
    5. 'r' → logprob: -8.578522682189941
    6. '(self' → logprob: -8.953522682189941
    7. '(
' → logprob: -9.578522682189941
    8. '(' → logprob: -10.078522682189941
    9. 'member' → logprob: -10.703522682189941
    10. '([' → logprob: -10.828522682189941

Token 281: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00014728360110893846
    2. '.' → logprob: -9.500146865844727
    3. ' .' → logprob: -10.125146865844727
    4. 'otential' → logprob: -11.875146865844727
    5. '   ' → logprob: -12.000146865844727
    6. '.r' → logprob: -12.125146865844727
    7. '           ' → logprob: -12.500146865844727
    8. 'potential' → logprob: -13.000146865844727
    9. '       ' → logprob: -13.625146865844727
    10. ').' → logprob: -13.750146865844727

Token 282: 'otential' (ID: 132479)
  Prédit: 'otential'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'otential' → logprob: -3.173704271830502e-06
    2. 'potential' → logprob: -12.87500286102295
    3. '```' → logprob: -14.87500286102295
    4. 'ot' → logprob: -16.000003814697266
    5. 'oten' → logprob: -17.500003814697266
    6. '[' → logprob: -18.000003814697266
    7. '   ' → logprob: -18.000003814697266
    8. '
' → logprob: -18.500003814697266
    9. 'Potential' → logprob: -18.500003814697266
    10. '_' → logprob: -18.625003814697266

Token 283: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0003404687449801713
    2. '_' → logprob: -8.000340461730957
    3. 's' → logprob: -13.375340461730957
    4. ' _' → logprob: -13.625340461730957
    5. '_p' → logprob: -14.500340461730957
    6. '_f' → logprob: -14.750340461730957
    7. ')' → logprob: -15.250340461730957
    8. '<|end|>' → logprob: -15.375340461730957
    9. '```' → logprob: -15.625340461730957
    10. '_sat' → logprob: -16.375341415405273

Token 284: 'atisfaction' (ID: 60876)
  Prédit: 'atisfaction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atisfaction' → logprob: -0.001948271761648357
    2. 'atisf' → logprob: -7.251948356628418
    3. 'at' → logprob: -7.376948356628418
    4. 's' → logprob: -7.626948356628418
    5. '_s' → logprob: -10.126948356628418
    6. '_' → logprob: -11.001948356628418
    7. 'group' → logprob: -11.626948356628418
    8. 'atisfactory' → logprob: -11.626948356628418
    9. 'atis' → logprob: -11.751948356628418
    10. '_group' → logprob: -12.001948356628418

Token 285: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.19143278896808624
    2. '(' → logprob: -1.8164328336715698
    3. '(group' → logprob: -4.566432952880859
    4. '(
' → logprob: -7.191432952880859
    5. '([' → logprob: -8.06643295288086
    6. ' (' → logprob: -9.81643295288086
    7. ')' → logprob: -10.56643295288086
    8. '([
' → logprob: -11.19143295288086
    9. '({' → logprob: -11.31643295288086
    10. '(

' → logprob: -11.44143295288086

Token 286: '.members' (ID: 96660)
  Prédit: '.members'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.members' → logprob: -0.00036049127811565995
    2. '.m' → logprob: -8.875360488891602
    3. '.' → logprob: -9.750360488891602
    4. 'members' → logprob: -10.000360488891602
    5. ' .' → logprob: -10.125360488891602
    6. '(self' → logprob: -10.875360488891602
    7. 'self' → logprob: -10.875360488891602
    8. ')' → logprob: -11.875360488891602
    9. ').' → logprob: -12.125360488891602
    10. '.self' → logprob: -12.375360488891602

Token 287: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015467056073248386
    2. '())' → logprob: -9.250154495239258
    3. '))' → logprob: -10.125154495239258
    4. ' )' → logprob: -11.750154495239258
    5. ')
' → logprob: -12.125154495239258
    6. '()' → logprob: -13.000154495239258
    7. ')}' → logprob: -14.125154495239258
    8. ')`' → logprob: -14.500154495239258
    9. ')))' → logprob: -15.250154495239258
    10. 'for' → logprob: -15.250154495239258

Token 288: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004351078998297453
    2. 'for' → logprob: -6.2543511390686035
    3. ')
' → logprob: -6.8793511390686035
    4. ' for' → logprob: -6.8793511390686035
    5. ' )' → logprob: -8.254350662231445
    6. '           ' → logprob: -10.129350662231445
    7. '())' → logprob: -10.504350662231445
    8. '       ' → logprob: -11.254350662231445
    9. '               ' → logprob: -12.879350662231445
    10. '()' → logprob: -12.879350662231445

Token 289: ' r' (ID: 428)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1131477952003479
    2. 'self' → logprob: -2.238147735595703
    3. 'r' → logprob: -8.738147735595703
    4. ' r' → logprob: -8.863147735595703
    5. ' ' → logprob: -10.988147735595703
    6. '   ' → logprob: -12.488147735595703
    7. '	self' → logprob: -13.238147735595703
    8. '  ' → logprob: -14.738147735595703
    9. ' ' → logprob: -15.363147735595703
    10. ' s' → logprob: -15.738147735595703

Token 290: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2526789903640747
    2. ' in' → logprob: -1.5026789903640747
    3. 'self' → logprob: -8.252678871154785
    4. 'members' → logprob: -9.127678871154785
    5. ' ' → logprob: -9.377678871154785
    6. '.members' → logprob: -9.502678871154785
    7. '           ' → logprob: -9.752678871154785
    8. '               ' → logprob: -10.002678871154785
    9. '.' → logprob: -10.502678871154785
    10. 'embers' → logprob: -11.127678871154785

Token 291: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889761030673981
    2. ' self' → logprob: -2.578897714614868
    3. '
' → logprob: -12.828897476196289
    4. '   ' → logprob: -13.453897476196289
    5. ' ' → logprob: -13.703897476196289
    6. '(self' → logprob: -14.328897476196289
    7. '	self' → logprob: -14.703897476196289
    8. '           ' → logprob: -14.953897476196289
    9. 'elf' → logprob: -15.203897476196289
    10. '[self' → logprob: -15.328897476196289

Token 292: '.members' (ID: 96660)
  Prédit: '.members'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.members' → logprob: -1.4498052223643754e-05
    2. 'members' → logprob: -11.625014305114746
    3. '.' → logprob: -12.375014305114746
    4. 'embers' → logprob: -14.250014305114746
    5. ' .' → logprob: -15.750014305114746
    6. '_members' → logprob: -15.875014305114746
    7. '.m' → logprob: -16.125015258789062
    8. '.member' → logprob: -16.250015258789062
    9. 'Members' → logprob: -16.500015258789062
    10. ' members' → logprob: -16.625015258789062

Token 293: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11663155257701874
    2. '               ' → logprob: -2.491631507873535
    3. ')
' → logprob: -3.616631507873535
    4. '           ' → logprob: -7.866631507873535
    5. ')
' → logprob: -10.366631507873535
    6. ' )' → logprob: -11.366631507873535
    7. ' )
' → logprob: -13.241631507873535
    8. '                   ' → logprob: -13.366631507873535
    9. '                ' → logprob: -13.366631507873535
    10. '            ' → logprob: -13.741631507873535

Token 294: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00015693542081862688
    2. 'return' → logprob: -9.500157356262207
    3. '			' → logprob: -9.750157356262207
    4. '           ' → logprob: -12.125157356262207
    5. '	return' → logprob: -12.375157356262207
    6. '	           ' → logprob: -12.875157356262207
    7. ' return' → logprob: -12.875157356262207
    8. '		       ' → logprob: -12.875157356262207
    9. '       ' → logprob: -13.000157356262207
    10. '	' → logprob: -13.875157356262207

Token 295: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002015240490436554
    2. 'return' (adapté à ' return') → logprob: -6.252015113830566
    3. ' return' → logprob: -10.127015113830566
    4. '           ' → logprob: -10.502015113830566
    5. '       ' → logprob: -11.627015113830566
    6. '                   ' → logprob: -12.752015113830566
    7. '              ' → logprob: -13.002015113830566
    8. '   ' → logprob: -13.502015113830566
    9. '
' → logprob: -13.752015113830566
    10. '	return' → logprob: -14.377015113830566

Token 296: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018151700496673584
    2. ' self' → logprob: -4.018151760101318
    3. '               ' → logprob: -13.64315128326416
    4. '(self' → logprob: -14.39315128326416
    5. '           ' → logprob: -17.268152236938477
    6. '	self' → logprob: -19.268152236938477
    7. '[self' → logprob: -19.893152236938477
    8. '                   ' → logprob: -20.643152236938477
    9. '       ' → logprob: -20.893152236938477
    10. '   ' → logprob: -20.893152236938477

Token 297: '.score' (ID: 42441)
  Prédit: '.score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.score' → logprob: -0.00034893216798081994
    2. 'score' → logprob: -8.000349044799805
    3. '.' → logprob: -11.250349044799805
    4. ' .' → logprob: -15.125349044799805
    5. '	score' → logprob: -15.750349044799805
    6. ' score' → logprob: -16.125349044799805
    7. '.s' → logprob: -18.000349044799805
    8. '_score' → logprob: -19.625349044799805
    9. 'Score' → logprob: -19.625349044799805
    10. '.code' → logprob: -20.625349044799805

Token 298: '
        
' (ID: 20417)
  Prédit: '            
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '            
' → logprob: -0.598600447177887
    2. '        
' → logprob: -1.0986003875732422
    3. '
' → logprob: -2.598600387573242
    4. '<|end|>' → logprob: -4.098600387573242
    5. '           ' → logprob: -4.848600387573242
    6. '       ' → logprob: -4.973600387573242
    7. '<|end|>' → logprob: -5.973600387573242
    8. '        ' → logprob: -5.973600387573242
    9. '            ' → logprob: -6.098600387573242
    10. '    
' → logprob: -6.473600387573242

Token 299: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023886336013674736
    2. '       ' → logprob: -3.7738864421844482
    3. '            
' → logprob: -7.648886203765869
    4. '        
' → logprob: -8.898886680603027
    5. 'def' → logprob: -11.773886680603027
    6. '               ' → logprob: -12.023886680603027
    7. '          ' → logprob: -12.398886680603027
    8. '```' → logprob: -13.273886680603027
    9. 'from' → logprob: -13.523886680603027
    10. '    
' → logprob: -13.773886680603027

Token 300: ' class' (ID: 744)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.13639527559280396
    2. '       ' → logprob: -2.261395215988159
    3. 'r' → logprob: -4.886395454406738
    4. 'def' → logprob: -5.261395454406738
    5. 'all' → logprob: -5.511395454406738
    6. 'n' → logprob: -5.636395454406738
    7. 'c' → logprob: -6.761395454406738
    8. ' best' → logprob: -7.011395454406738
    9. 'max' → logprob: -8.011395454406738
    10. 'result' → logprob: -8.636395454406738

Token 301: ' Solver' (ID: 141655)
  Prédit: ' Candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Candidate' → logprob: -0.7072089910507202
    2. ' Branch' → logprob: -1.5822089910507202
    3. ' Solution' → logprob: -2.7072091102600098
    4. ' Node' → logprob: -3.2072091102600098
    5. ' Solver' → logprob: -3.3322091102600098
    6. 'Branch' → logprob: -3.4572091102600098
    7. 'Candidate' → logprob: -3.9572091102600098
    8. ' State' → logprob: -4.20720911026001
    9. ' Partial' → logprob: -4.70720911026001
    10. ' Search' → logprob: -4.83220911026001

Token 302: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022247217129915953
    2. ':
' → logprob: -6.127224922180176
    3. '(' → logprob: -10.752224922180176
    4. ' :' → logprob: -11.877224922180176
    5. '(object' → logprob: -12.252224922180176
    6. '):' → logprob: -13.252224922180176
    7. '<|end|>' → logprob: -13.377224922180176
    8. ':

' → logprob: -14.127224922180176
    9. '(P' → logprob: -14.877224922180176
    10. '():' → logprob: -15.002224922180176

Token 303: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2892448902130127
    2. '       ' → logprob: -1.5392448902130127
    3. '        
' → logprob: -4.039244651794434
    4. '        ' → logprob: -5.164244651794434
    5. '
' → logprob: -5.414244651794434
    6. '   ' → logprob: -6.414244651794434
    7. '<|end|>' → logprob: -6.539244651794434
    8. ' def' → logprob: -6.789244651794434
    9. '    
' → logprob: -7.164244651794434
    10. '(
' → logprob: -7.539244651794434

Token 304: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0031886440701782703
    2. 'def' (adapté à ' def') → logprob: -5.753188610076904
    3. '           ' → logprob: -12.753189086914062
    4. '   ' → logprob: -12.878189086914062
    5. ' ' → logprob: -13.503189086914062
    6. '        ' → logprob: -13.503189086914062
    7. '    ' → logprob: -13.753189086914062
    8. '       ' → logprob: -14.128189086914062
    9. '	def' → logprob: -14.378189086914062
    10. '            ' → logprob: -15.878189086914062

Token 305: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.22815321385860443
    2. ' __' → logprob: -1.8531532287597656
    3. '__' → logprob: -3.1031532287597656
    4. ' init' → logprob: -7.103153228759766
    5. '_init' → logprob: -7.228153228759766
    6. 'def' → logprob: -7.728153228759766
    7. ' def' → logprob: -8.228153228759766
    8. '___' → logprob: -10.978153228759766
    9. '   ' → logprob: -11.103153228759766
    10. '____' → logprob: -11.228153228759766

Token 306: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0030872784554958344
    2. 'it' → logprob: -5.878087043762207
    3. 'nit' → logprob: -8.503087043762207
    4. 'int' → logprob: -10.753087043762207
    5. 'def' → logprob: -11.003087043762207
    6. '__' → logprob: -11.503087043762207
    7. '   ' → logprob: -11.878087043762207
    8. 'class' → logprob: -12.253087043762207
    9. '```' → logprob: -12.503087043762207
    10. '(init' → logprob: -13.003087043762207

Token 307: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.008847730234265327
    2. '(self' → logprob: -4.758847713470459
    3. ' (' → logprob: -8.758848190307617
    4. '__(
' → logprob: -10.133848190307617
    5. '__' → logprob: -10.758848190307617
    6. '(' → logprob: -11.758848190307617
    7. '_(' → logprob: -12.383848190307617
    8. 'self' → logprob: -13.883848190307617
    9. '__((' → logprob: -14.508848190307617
    10. '           ' → logprob: -14.883848190307617

Token 308: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005628037615679204
    2. '               ' → logprob: -8.00056266784668
    3. ',' → logprob: -9.62556266784668
    4. '           ' → logprob: -9.62556266784668
    5. ' self' → logprob: -9.62556266784668
    6. '(self' → logprob: -11.12556266784668
    7. '                   ' → logprob: -12.00056266784668
    8. ',self' → logprob: -12.62556266784668
    9. 's' → logprob: -13.62556266784668
    10. '```' → logprob: -13.87556266784668

Token 309: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009566014050506055
    2. ' ,' → logprob: -7.3759565353393555
    3. 'self' → logprob: -8.250956535339355
    4. ',self' → logprob: -10.125956535339355
    5. '(self' → logprob: -11.250956535339355
    6. ' self' → logprob: -12.000956535339355
    7. ',
' → logprob: -12.625956535339355
    8. '           ' → logprob: -13.250956535339355
    9. ' (' → logprob: -13.750956535339355
    10. '__,' → logprob: -14.000956535339355

Token 310: ' rabbits' (ID: 122309)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3170560896396637
    2. 'party' → logprob: -2.067056179046631
    3. 'self' → logprob: -2.692056179046631
    4. ' rabbits' → logprob: -2.817056179046631
    5. ' party' → logprob: -4.192056179046631
    6. ' self' → logprob: -6.442056179046631
    7. 'rabbit' → logprob: -8.692055702209473
    8. '       ' → logprob: -8.692055702209473
    9. '   ' → logprob: -8.817055702209473
    10. '           ' → logprob: -9.942055702209473

Token 311: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20416687428951263
    2. '):
' → logprob: -2.079166889190674
    3. ',' → logprob: -2.829166889190674
    4. ' ):' → logprob: -7.954166889190674
    5. '):
' → logprob: -9.704166412353516
    6. '           ' → logprob: -10.204166412353516
    7. ')' → logprob: -10.454166412353516
    8. ' ):
' → logprob: -10.954166412353516
    9. '               ' → logprob: -11.079166412353516
    10. '       ' → logprob: -11.329166412353516

Token 312: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0044658430851995945
    2. '<|end|>' → logprob: -6.1294660568237305
    3. '       ' → logprob: -7.0044660568237305
    4. '           ' → logprob: -8.50446605682373
    5. ',' → logprob: -8.62946605682373
    6. '                
' → logprob: -9.00446605682373
    7. '		       ' → logprob: -9.12946605682373
    8. '<|end|>' → logprob: -9.12946605682373
    9. ' ' → logprob: -9.37946605682373
    10. '[' → logprob: -9.37946605682373

Token 313: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2536870241165161
    2. 'self' (adapté à ' self') → logprob: -1.5036870241165161
    3. '               ' → logprob: -6.378686904907227
    4. '   ' → logprob: -10.753686904907227
    5. '       ' → logprob: -11.253686904907227
    6. ' ' → logprob: -11.503686904907227
    7. 'import' → logprob: -12.003686904907227
    8. '           ' → logprob: -12.628686904907227
    9. '	self' → logprob: -13.878686904907227
    10. '                   ' → logprob: -14.503686904907227

Token 314: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.01661113277077675
    2. 'r' → logprob: -4.641611099243164
    3. '.' → logprob: -6.141611099243164
    4. ' .' → logprob: -6.266611099243164
    5. ' rabbits' → logprob: -6.266611099243164
    6. ' ' → logprob: -8.016611099243164
    7. '   ' → logprob: -9.016611099243164
    8. 's' → logprob: -9.266611099243164
    9. '.rabbit' → logprob: -9.391611099243164
    10. '_r' → logprob: -10.391611099243164

Token 315: 'abb' (ID: 13538)
  Prédit: 'abb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abb' → logprob: -6.630610641877865e-06
    2. 'abbit' → logprob: -12.375006675720215
    3. 'ab' → logprob: -14.000006675720215
    4. 'a' → logprob: -14.750006675720215
    5. '   ' → logprob: -15.375006675720215
    6. 'abbr' → logprob: -15.375006675720215
    7. '##' → logprob: -15.750006675720215
    8. ' rabbits' → logprob: -16.1250057220459
    9. '``' → logprob: -16.5000057220459
    10. '```' → logprob: -17.3750057220459

Token 316: 'its' (ID: 1348)
  Prédit: 'its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'its' → logprob: -8.983476436696947e-05
    2. 'bits' → logprob: -9.625089645385742
    3. '...' → logprob: -11.625089645385742
    4. '   ' → logprob: -12.625089645385742
    5. 'ots' → logprob: -13.000089645385742
    6. ' its' → logprob: -13.375089645385742
    7. 's' → logprob: -13.500089645385742
    8. 'itso' → logprob: -13.875089645385742
    9. '
' → logprob: -14.375089645385742
    10. '[' → logprob: -14.625089645385742

Token 317: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023279258981347084
    2. '=' → logprob: -3.7732791900634766
    3. ' ' → logprob: -11.148279190063477
    4. '<|end|>' → logprob: -12.148279190063477
    5. ')' → logprob: -12.523279190063477
    6. ',' → logprob: -12.898279190063477
    7. '   ' → logprob: -13.398279190063477
    8. ' =
' → logprob: -13.523279190063477
    9. '    ' → logprob: -13.648279190063477
    10. '        ' → logprob: -14.023279190063477

Token 318: ' rabbits' (ID: 122309)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01104935072362423
    2. ' rabbits' → logprob: -4.511049270629883
    3. '[r' → logprob: -14.511049270629883
    4. 'rabbit' → logprob: -14.886049270629883
    5. ' r' → logprob: -15.136049270629883
    6. ' ' → logprob: -15.261049270629883
    7. '   ' → logprob: -16.761049270629883
    8. '	r' → logprob: -16.886049270629883
    9. ' rabb' → logprob: -17.136049270629883
    10. 'rats' → logprob: -17.886049270629883

Token 319: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5834176540374756
    2. '<|end|>' → logprob: -1.4584176540374756
    3. '
' → logprob: -1.5834176540374756
    4. '<|end|>' → logprob: -6.083417892456055
    5. '           ' → logprob: -8.083417892456055
    6. '                ' → logprob: -8.083417892456055
    7. ',' → logprob: -8.458417892456055
    8. '       ' → logprob: -8.583417892456055
    9. '                
' → logprob: -8.833417892456055
    10. ',
' → logprob: -8.958417892456055

Token 320: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016579361632466316
    2. '
' → logprob: -4.1415791511535645
    3. '<|end|>' → logprob: -7.8915791511535645
    4. '       ' → logprob: -9.891579627990723
    5. '           ' → logprob: -10.266579627990723
    6. '                
' → logprob: -10.891579627990723
    7. 'self' → logprob: -11.266579627990723
    8. '                ' → logprob: -11.516579627990723
    9. ',' → logprob: -11.891579627990723
    10. ' self' → logprob: -12.016579627990723

Token 321: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3905116319656372
    2. ' self' → logprob: -1.1405116319656372
    3. '               ' → logprob: -5.640511512756348
    4. '           ' → logprob: -10.515511512756348
    5. '
' → logprob: -11.140511512756348
    6. '   ' → logprob: -11.515511512756348
    7. '       ' → logprob: -11.765511512756348
    8. '                   ' → logprob: -12.140511512756348
    9. ' ' → logprob: -12.765511512756348
    10. 'import' → logprob: -13.015511512756348

Token 322: '.n' (ID: 1835)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.951856791973114
    2. '.best' → logprob: -1.2018568515777588
    3. ' best' → logprob: -1.5768568515777588
    4. 'max' → logprob: -3.076856851577759
    5. ' max' → logprob: -3.576856851577759
    6. 'n' → logprob: -4.45185661315918
    7. ' n' → logprob: -4.57685661315918
    8. '.max' → logprob: -5.07685661315918
    9. '.n' → logprob: -5.70185661315918
    10. '_best' → logprob: -7.95185661315918

Token 323: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08916062861680984
    2. '=' → logprob: -2.464160680770874
    3. '<|end|>' → logprob: -8.589160919189453
    4. ' ' → logprob: -11.089160919189453
    5. '<|end|>' → logprob: -12.214160919189453
    6. ')' → logprob: -12.714160919189453
    7. ',' → logprob: -12.839160919189453
    8. ' =
' → logprob: -13.339160919189453
    9. '    ' → logprob: -13.714160919189453
    10. '_' → logprob: -14.339160919189453

Token 324: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.10020720958709717
    2. 'len' → logprob: -2.3502073287963867
    3. '(len' → logprob: -15.100207328796387
    4. '=len' → logprob: -16.35020637512207
    5. ' ' → logprob: -16.85020637512207
    6. '[len' → logprob: -17.35020637512207
    7. '100' → logprob: -17.47520637512207
    8. '	len' → logprob: -17.85020637512207
    9. '   ' → logprob: -18.60020637512207
    10. ' n' → logprob: -19.97520637512207

Token 325: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0013398852897807956
    2. '(self' → logprob: -7.251339912414551
    3. '(' → logprob: -7.376339912414551
    4. 'r' → logprob: -13.00133991241455
    5. 'self' → logprob: -14.12633991241455
    6. ' (' → logprob: -14.75133991241455
    7. '(
' → logprob: -14.87633991241455
    8. '	r' → logprob: -17.876338958740234
    9. '(s' → logprob: -18.126338958740234
    10. '(

' → logprob: -18.126338958740234

Token 326: 'abb' (ID: 13538)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.17036911845207214
    2. 'self' → logprob: -2.2953691482543945
    3. ' rabbits' → logprob: -3.5453691482543945
    4. ' self' → logprob: -4.7953691482543945
    5. '(self' → logprob: -5.4203691482543945
    6. 'abbit' → logprob: -5.5453691482543945
    7. '(r' → logprob: -5.6703691482543945
    8. 'abb' → logprob: -5.9203691482543945
    9. ' r' → logprob: -6.9203691482543945
    10. '   ' → logprob: -7.0453691482543945

Token 327: 'its' (ID: 1348)
  Prédit: 'its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'its' → logprob: -0.01067295204848051
    2. 's' → logprob: -5.5106730461120605
    3. 'ats' → logprob: -6.1356730461120605
    4. 'bits' → logprob: -6.5106730461120605
    5. '```' → logprob: -7.2606730461120605
    6. '   ' → logprob: -8.135672569274902
    7. 'a' → logprob: -8.510672569274902
    8. '**' → logprob: -8.510672569274902
    9. '
' → logprob: -8.885672569274902
    10. ')' → logprob: -8.885672569274902

Token 328: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011760591296479106
    2. ' )' → logprob: -6.751175880432129
    3. ')
' → logprob: -12.251175880432129
    4. '       ' → logprob: -14.126175880432129
    5. ' ' → logprob: -16.001176834106445
    6. ' )
' → logprob: -16.751176834106445
    7. '   ' → logprob: -17.126176834106445
    8. ')

' → logprob: -17.251176834106445
    9. '),' → logprob: -17.751176834106445
    10. ')#' → logprob: -17.751176834106445

Token 329: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 330: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0021175467409193516
    2. ' self' → logprob: -6.37711763381958
    3. '
' → logprob: -8.252117156982422
    4. '           ' → logprob: -9.877117156982422
    5. '       ' → logprob: -10.002117156982422
    6. '               ' → logprob: -10.252117156982422
    7. 'from' → logprob: -11.377117156982422
    8. 'import' → logprob: -12.502117156982422
    9. 'def' → logprob: -13.627117156982422
    10. '0' → logprob: -13.627117156982422

Token 331: '.best' (ID: 95548)
  Prédit: '.best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.best' → logprob: -0.027624765411019325
    2. '.max' → logprob: -3.9026248455047607
    3. ' best' → logprob: -5.652624607086182
    4. 'best' → logprob: -6.652624607086182
    5. '.current' → logprob: -8.02762508392334
    6. ' max' → logprob: -8.15262508392334
    7. '.' → logprob: -8.15262508392334
    8. '.memo' → logprob: -8.27762508392334
    9. '.r' → logprob: -8.77762508392334
    10. '.b' → logprob: -8.90262508392334

Token 332: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.0009276605560444295
    2. '_group' → logprob: -7.125927448272705
    3. '_' → logprob: -9.250927925109863
    4. '_s' → logprob: -11.625927925109863
    5. 'score' → logprob: -11.750927925109863
    6. 'Score' → logprob: -13.000927925109863
    7. '=' → logprob: -13.250927925109863
    8. '_solution' → logprob: -13.375927925109863
    9. ' =' → logprob: -13.500927925109863
    10. '_value' → logprob: -13.875927925109863

Token 333: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022492945194244
    2. '=' → logprob: -1.9102249145507812
    3. ' ' → logprob: -14.410224914550781
    4. '=None' → logprob: -16.16022491455078
    5. '<|end|>' → logprob: -17.03522491455078
    6. ',' → logprob: -17.28522491455078
    7. '  ' → logprob: -17.41022491455078
    8. '   ' → logprob: -17.66022491455078
    9. ')' → logprob: -17.91022491455078
    10. ' =
' → logprob: -18.53522491455078

Token 334: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0162894856184721
    2. ' ' → logprob: -4.391289710998535
    3. '-' → logprob: -6.016289710998535
    4. 'float' → logprob: -7.266289710998535
    5. ' float' → logprob: -7.891289710998535
    6. ' -' → logprob: -8.266289710998535
    7. 'None' → logprob: -13.141289710998535
    8. ' None' → logprob: -13.516289710998535
    9. '   ' → logprob: -14.641289710998535
    10. '<float' → logprob: -15.766289710998535

Token 335: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03969886153936386
    2. '-' → logprob: -3.289698839187622
    3. 'float' → logprob: -6.414699077606201
    4. ' ' → logprob: -11.789698600769043
    5. ' float' → logprob: -12.664698600769043
    6. '-f' → logprob: -12.664698600769043
    7. ' -' → logprob: -12.914698600769043
    8. 'None' → logprob: -13.664698600769043
    9. '-s' → logprob: -15.164698600769043
    10. '-m' → logprob: -15.664698600769043

Token 336: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2483978569507599
    2. '
' → logprob: -1.7483978271484375
    3. '<|end|>' → logprob: -3.3733978271484375
    4. '       ' → logprob: -5.3733978271484375
    5. '           ' → logprob: -6.3733978271484375
    6. 'self' → logprob: -7.1233978271484375
    7. '    
' → logprob: -7.2483978271484375
    8. '        
' → logprob: -7.2483978271484375
    9. '                
' → logprob: -7.4983978271484375
    10. '                ' → logprob: -7.8733978271484375

Token 337: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06368174403905869
    2. '       ' → logprob: -3.5636818408966064
    3. '
' → logprob: -4.813681602478027
    4. '<|end|>' → logprob: -4.813681602478027
    5. '           ' → logprob: -5.313681602478027
    6. '    
' → logprob: -5.938681602478027
    7. '        
' → logprob: -6.063681602478027
    8. 'self' → logprob: -6.313681602478027
    9. '                ' → logprob: -7.188681602478027
    10. '            
' → logprob: -7.313681602478027

Token 338: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0008990773931145668
    2. ' self' → logprob: -7.125899314880371
    3. '[]' → logprob: -10.000899314880371
    4. '       ' → logprob: -11.125899314880371
    5. '               ' → logprob: -11.375899314880371
    6. '           ' → logprob: -11.500899314880371
    7. '
' → logprob: -12.500899314880371
    8. '0' → logprob: -12.875899314880371
    9. '[]
' → logprob: -12.875899314880371
    10. 'None' → logprob: -14.500899314880371

Token 339: '.best' (ID: 95548)
  Prédit: '.best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.best' → logprob: -0.0016701804706826806
    2. ' best' → logprob: -7.0016703605651855
    3. 'best' → logprob: -7.6266703605651855
    4. '.' → logprob: -8.501669883728027
    5. '	best' → logprob: -10.501669883728027
    6. ' .' → logprob: -10.501669883728027
    7. '_best' → logprob: -12.001669883728027
    8. '.b' → logprob: -13.001669883728027
    9. '.current' → logprob: -13.626669883728027
    10. ':' → logprob: -14.251669883728027

Token 340: '_group' (ID: 15990)
  Prédit: '_group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -6.20603168499656e-05
    2. '_members' → logprob: -11.125061988830566
    3. 'group' → logprob: -11.375061988830566
    4. '_set' → logprob: -11.875061988830566
    5. '_' → logprob: -12.000061988830566
    6. '_subset' → logprob: -12.000061988830566
    7. '<|end|>' → logprob: -12.250061988830566
    8. ' group' → logprob: -12.750061988830566
    9. '_solution' → logprob: -13.125061988830566
    10. '_groups' → logprob: -13.250061988830566

Token 341: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740820825099945
    2. '=' → logprob: -0.9740821123123169
    3. '=[]' → logprob: -13.099081993103027
    4. ' ' → logprob: -13.474081993103027
    5. '=None' → logprob: -13.599081993103027
    6. '  ' → logprob: -15.974081993103027
    7. '<|end|>' → logprob: -16.849082946777344
    8. ':' → logprob: -17.224082946777344
    9. '   ' → logprob: -17.599082946777344
    10. ',' → logprob: -17.724082946777344

Token 342: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.000271706550847739
    2. ' []' → logprob: -8.250271797180176
    3. 'set' → logprob: -12.000271797180176
    4. '[]}' → logprob: -13.250271797180176
    5. 'None' → logprob: -13.750271797180176
    6. '[]
' → logprob: -14.125271797180176
    7. '[])' → logprob: -16.00027084350586
    8. '([]' → logprob: -16.00027084350586
    9. '[]>' → logprob: -16.12527084350586
    10. '   ' → logprob: -16.37527084350586

Token 343: '            
' (ID: 7048)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8406721949577332
    2. '
' → logprob: -0.9656721949577332
    3. '        
' → logprob: -2.090672254562378
    4. '       ' → logprob: -3.590672254562378
    5. '            
' → logprob: -3.590672254562378
    6. '    
' → logprob: -4.840672016143799
    7. '               ' → logprob: -8.090672492980957
    8. '		
' → logprob: -8.215672492980957
    9. '   ' → logprob: -8.590672492980957
    10. 'def' → logprob: -9.215672492980957

Token 344: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010381818749010563
    2. 'def' → logprob: -5.010381698608398
    3. '       ' → logprob: -5.760381698608398
    4. '   ' → logprob: -7.635381698608398
    5. '
' → logprob: -10.885381698608398
    6. ' def' → logprob: -12.260381698608398
    7. '         ' → logprob: -14.135381698608398
    8. '          ' → logprob: -14.385381698608398
    9. '            
' → logprob: -14.385381698608398
    10. '     ' → logprob: -14.885381698608398

Token 345: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0040823169983923435
    2. ' def' → logprob: -5.504082202911377
    3. '   ' → logprob: -13.004082679748535
    4. '       ' → logprob: -13.754082679748535
    5. '           ' → logprob: -14.504082679748535
    6. '
' → logprob: -16.87908172607422
    7. '	def' → logprob: -17.00408172607422
    8. ' ' → logprob: -17.12908172607422
    9. 'from' → logprob: -18.62908172607422
    10. 'import' → logprob: -19.00408172607422

Token 346: ' _' (ID: 1175)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.46279409527778625
    2. 'solve' → logprob: -1.4627940654754639
    3. ' search' → logprob: -2.712794065475464
    4. ' solve' → logprob: -3.962794065475464
    5. 'dfs' → logprob: -4.087794303894043
    6. ' back' → logprob: -4.087794303894043
    7. 'back' → logprob: -4.587794303894043
    8. 'branch' → logprob: -5.587794303894043
    9. ' dfs' → logprob: -5.712794303894043
    10. ' branch' → logprob: -6.212794303894043

Token 347: 'im' (ID: 321)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.15227197110652924
    2. 'dfs' → logprob: -3.0272719860076904
    3. 'solve' → logprob: -3.4022719860076904
    4. 'branch' → logprob: -3.4022719860076904
    5. 'back' → logprob: -3.9022719860076904
    6. 'max' → logprob: -5.777271747589111
    7. 'br' → logprob: -7.402271747589111
    8. 'select' → logprob: -7.777271747589111
    9. 'expand' → logprob: -8.15227222442627
    10. 'bound' → logprob: -8.27727222442627

Token 348: 'prove' (ID: 48190)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.25844258069992065
    2. 'prove' → logprob: -2.0084426403045654
    3. 'plement' → logprob: -2.3834426403045654
    4. 'pl' → logprob: -6.883442401885986
    5. 'p' → logprob: -9.508442878723145
    6. 'ple' → logprob: -10.258442878723145
    7. 'pro' → logprob: -10.383442878723145
    8. 'it' → logprob: -10.508442878723145
    9. 'ports' → logprob: -10.883442878723145
    10. 'proved' → logprob: -11.008442878723145

Token 349: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.038577958941459656
    2. '_group' → logprob: -3.7885780334472656
    3. '(' → logprob: -4.788578033447266
    4. '_' → logprob: -5.413578033447266
    5. 'self' → logprob: -6.788578033447266
    6. '_(' → logprob: -8.163578033447266
    7. '_best' → logprob: -8.163578033447266
    8. '_score' → logprob: -8.788578033447266
    9. '_candidate' → logprob: -8.913578033447266
    10. ' (' → logprob: -9.663578033447266

Token 350: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19929911196231842
    2. '_group' → logprob: -2.6992990970611572
    3. '(self' → logprob: -2.6992990970611572
    4. 'self' → logprob: -3.5742990970611572
    5. ' ,' → logprob: -5.199299335479736
    6. ')(' → logprob: -5.699299335479736
    7. 'group' → logprob: -5.699299335479736
    8. '(group' → logprob: -6.699299335479736
    9. ')' → logprob: -6.824299335479736
    10. '_,' → logprob: -7.199299335479736

Token 351: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.6221478581428528
    2. 'index' → logprob: -2.247147798538208
    3. ' group' → logprob: -2.247147798538208
    4. 'idx' → logprob: -2.622147798538208
    5. 'current' → logprob: -3.122147798538208
    6. ' idx' → logprob: -3.497147798538208
    7. ' current' → logprob: -3.747147798538208
    8. 'self' → logprob: -3.997147798538208
    9. 'candidate' → logprob: -4.122148036956787
    10. 'members' → logprob: -4.247148036956787

Token 352: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028624574770219624
    2. '):' → logprob: -8.750286102294922
    3. ' ,' → logprob: -9.375286102294922
    4. '               ' → logprob: -11.500286102294922
    5. '           ' → logprob: -11.875286102294922
    6. '):
' → logprob: -11.875286102294922
    7. ':' → logprob: -12.125286102294922
    8. '       ' → logprob: -12.750286102294922
    9. 'self' → logprob: -13.750286102294922
    10. ',self' → logprob: -14.125286102294922

Token 353: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.031159840524196625
    2. '<|end|>' → logprob: -4.0311598777771
    3. ':' → logprob: -5.2811598777771
    4. '       ' → logprob: -5.5311598777771
    5. ',' → logprob: -7.2811598777771
    6. '   ' → logprob: -7.4061598777771
    7. '<|end|>' → logprob: -7.6561598777771
    8. ' (' → logprob: -8.906159400939941
    9. '                
' → logprob: -8.906159400939941
    10. ':
' → logprob: -9.031159400939941

Token 354: ' score' (ID: 8429)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011580830439925194
    2. ' if' → logprob: -4.886580944061279
    3. ' return' → logprob: -7.136580944061279
    4. ' self' → logprob: -7.636580944061279
    5. 'return' → logprob: -8.011580467224121
    6. 'if' → logprob: -8.136580467224121
    7. ' score' → logprob: -8.386580467224121
    8. ' for' → logprob: -8.386580467224121
    9. '       ' → logprob: -8.511580467224121
    10. 'self' → logprob: -8.511580467224121

Token 355: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016207978129386902
    2. '=' → logprob: -4.141208171844482
    3. '   ' → logprob: -8.891207695007324
    4. '    ' → logprob: -11.516207695007324
    5. '  ' → logprob: -12.016207695007324
    6. '           ' → logprob: -12.266207695007324
    7. ' ' → logprob: -12.766207695007324
    8. '       ' → logprob: -12.891207695007324
    9. ')' → logprob: -13.266207695007324
    10. ',' → logprob: -13.391207695007324

Token 356: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.27536702156066895
    2. 'self' → logprob: -1.900367021560669
    3. ' group' → logprob: -2.525367021560669
    4. ' self' → logprob: -4.52536678314209
    5. 'sum' → logprob: -8.90036678314209
    6. 'Candidate' → logprob: -9.90036678314209
    7. 'Group' → logprob: -10.15036678314209
    8. 'score' → logprob: -10.77536678314209
    9. '           ' → logprob: -11.02536678314209
    10. 'candidate' → logprob: -11.40036678314209

Token 357: '.compute' (ID: 60156)
  Prédit: '.compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compute' → logprob: -0.014580178074538708
    2. '.' → logprob: -4.264580249786377
    3. '.score' → logprob: -7.889580249786377
    4. '.calculate' → logprob: -10.889579772949219
    5. '.
' → logprob: -11.764579772949219
    6. 'compute' → logprob: -12.764579772949219
    7. '       ' → logprob: -12.889579772949219
    8. '   ' → logprob: -13.389579772949219
    9. ' ' → logprob: -13.639579772949219
    10. '.

' → logprob: -14.014579772949219

Token 358: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -1.2352385965641588e-05
    2. '_' → logprob: -11.375012397766113
    3. 'score' → logprob: -14.625012397766113
    4. '_s' → logprob: -16.125011444091797
    5. ' _' → logprob: -16.250011444091797
    6. '_code' → logprob: -16.625011444091797
    7. 's' → logprob: -18.125011444091797
    8. '_sc' → logprob: -18.125011444091797
    9. '_scores' → logprob: -18.375011444091797
    10. '()' → logprob: -18.500011444091797

Token 359: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01739155873656273
    2. '<|end|>' → logprob: -4.392391681671143
    3. '
' → logprob: -6.767391681671143
    4. ')' → logprob: -6.892391681671143
    5. '<|end|>' → logprob: -6.892391681671143
    6. '()' → logprob: -7.392391681671143
    7. '                ' → logprob: -7.767391681671143
    8. '                
' → logprob: -8.267391204833984
    9. '           ' → logprob: -9.517391204833984
    10. '       ' → logprob: -9.892391204833984

Token 360: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019628548994660378
    2. '<|end|>' → logprob: -4.269628524780273
    3. '
' → logprob: -5.394628524780273
    4. '<|end|>' → logprob: -8.144628524780273
    5. '       ' → logprob: -8.394628524780273
    6. '                
' → logprob: -9.144628524780273
    7. '           ' → logprob: -9.644628524780273
    8. ' if' → logprob: -10.269628524780273
    9. '  
' → logprob: -10.644628524780273
    10. '                   ' → logprob: -10.644628524780273

Token 361: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14312776923179626
    2. 'if' (adapté à ' if') → logprob: -2.393127679824829
    3. ' if' → logprob: -3.518127679824829
    4. '
' → logprob: -4.893127918243408
    5. '<|end|>' → logprob: -6.018127918243408
    6. '                
' → logprob: -7.018127918243408
    7. '           ' → logprob: -7.768127918243408
    8. '       ' → logprob: -7.893127918243408
    9. '                ' → logprob: -8.89312744140625
    10. '                   ' → logprob: -9.26812744140625

Token 362: ' score' (ID: 8429)
  Prédit: ' score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.07889033854007721
    2. 'score' → logprob: -2.578890323638916
    3. '(score' → logprob: -14.578890800476074
    4. '	score' → logprob: -15.953890800476074
    5. '               ' → logprob: -18.203889846801758
    6. '                   ' → logprob: -19.078889846801758
    7. '_score' → logprob: -19.953889846801758
    8. '.score' → logprob: -20.953889846801758
    9. '   ' → logprob: -21.203889846801758
    10. ' ' → logprob: -21.328889846801758

Token 363: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.03365145996212959
    2. '>' → logprob: -3.408651351928711
    3. ' ' → logprob: -13.283651351928711
    4. ' >=' → logprob: -13.533651351928711
    5. ' <=' → logprob: -14.283651351928711
    6. '   ' → logprob: -14.533651351928711
    7. ' ' → logprob: -15.283651351928711
    8. ')' → logprob: -15.783651351928711
    9. ' />' → logprob: -15.908651351928711
    10. ',' → logprob: -16.03365135192871

Token 364: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014184542931616306
    2. ' self' → logprob: -4.264184474945068
    3. '               ' → logprob: -10.889184951782227
    4. '                   ' → logprob: -13.139184951782227
    5. '(self' → logprob: -16.139184951782227
    6. '
' → logprob: -16.389184951782227
    7. '	self' → logprob: -16.764184951782227
    8. '   ' → logprob: -16.889184951782227
    9. '           ' → logprob: -16.889184951782227
    10. '0' → logprob: -18.389184951782227

Token 365: '.best' (ID: 95548)
  Prédit: '.best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.best' → logprob: -0.00010711929644457996
    2. '.' → logprob: -9.375106811523438
    3. ' .' → logprob: -11.000106811523438
    4. 'best' → logprob: -12.375106811523438
    5. ' best' → logprob: -14.125106811523438
    6. '	best' → logprob: -15.125106811523438
    7. '.b' → logprob: -16.250106811523438
    8. '.user' → logprob: -16.375106811523438
    9. '
' → logprob: -16.750106811523438
    10. '           ' → logprob: -17.375106811523438

Token 366: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -3.6550729419104755e-05
    2. '_group' → logprob: -10.250036239624023
    3. 'score' → logprob: -14.125036239624023
    4. '_' → logprob: -16.375036239624023
    5. '_scores' → logprob: -16.625036239624023
    6. '_s' → logprob: -16.750036239624023
    7. '_sc' → logprob: -19.125036239624023
    8. '_SCORE' → logprob: -19.500036239624023
    9. ' _' → logprob: -20.000036239624023
    10. '_code' → logprob: -20.250036239624023

Token 367: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18310463428497314
    2. ':
' → logprob: -1.8081046342849731
    3. '               ' → logprob: -6.683104515075684
    4. ' and' → logprob: -7.058104515075684
    5. '<|end|>' → logprob: -7.308104515075684
    6. '                   ' → logprob: -8.558104515075684
    7. '):
' → logprob: -9.308104515075684
    8. 'and' → logprob: -9.933104515075684
    9. '<|end|>' → logprob: -10.183104515075684
    10. '           ' → logprob: -10.558104515075684

Token 368: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.30033400654792786
    2. ':
' → logprob: -1.5503339767456055
    3. ':' → logprob: -3.4253339767456055
    4. '               ' → logprob: -4.4253339767456055
    5. '                    ' → logprob: -7.8003339767456055
    6. '                    
' → logprob: -7.9253339767456055
    7. '                ' → logprob: -8.050333976745605
    8. '                       ' → logprob: -8.175333976745605
    9. ' and' → logprob: -8.300333976745605
    10. ' :
' → logprob: -8.425333976745605

Token 369: ' self' (ID: 1051)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07413659989833832
    2. ' self' → logprob: -2.69913649559021
    3. 'self' (adapté à ' self') → logprob: -5.699136734008789
    4. '               ' → logprob: -7.824136734008789
    5. '                       ' → logprob: -8.074136734008789
    6. '           ' → logprob: -9.699136734008789
    7. '   ' → logprob: -10.699136734008789
    8. '       ' → logprob: -10.824136734008789
    9. '                    ' → logprob: -11.699136734008789
    10. '(self' → logprob: -12.699136734008789

Token 370: '.best' (ID: 95548)
  Prédit: '.best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.best' → logprob: -0.0007990269223228097
    2. 'best' → logprob: -7.875799179077148
    3. '.' → logprob: -8.375799179077148
    4. ' best' → logprob: -9.250799179077148
    5. '	best' → logprob: -10.250799179077148
    6. '.user' → logprob: -10.375799179077148
    7. '_best' → logprob: -11.750799179077148
    8. ' .' → logprob: -11.750799179077148
    9. '
' → logprob: -13.500799179077148
    10. '.b' → logprob: -13.750799179077148

Token 371: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.0004311460361350328
    2. '_group' → logprob: -7.750431060791016
    3. 'score' → logprob: -14.875431060791016
    4. '_' → logprob: -16.125431060791016
    5. '_scores' → logprob: -17.125431060791016
    6. '_s' → logprob: -18.000431060791016
    7. '   ' → logprob: -18.500431060791016
    8. 'Score' → logprob: -18.625431060791016
    9. '_SCORE' → logprob: -19.125431060791016
    10. '_code' → logprob: -19.750431060791016

Token 372: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519329786300659
    2. '=' → logprob: -1.501932978630066
    3. ' =
' → logprob: -13.751933097839355
    4. ',' → logprob: -14.501933097839355
    5. '=

' → logprob: -14.501933097839355
    6. '=
' → logprob: -14.626933097839355
    7. ' ' → logprob: -15.126933097839355
    8. 'score' → logprob: -15.251933097839355
    9. '.=' → logprob: -15.876933097839355
    10. 's' → logprob: -16.75193214416504

Token 373: ' score' (ID: 8429)
  Prédit: ' score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.6931471824645996
    2. 'score' → logprob: -0.6931471824645996
    3. '(score' → logprob: -18.193147659301758
    4. '	score' → logprob: -18.568147659301758
    5. '_score' → logprob: -20.568147659301758
    6. ' code' → logprob: -20.568147659301758
    7. '                   ' → logprob: -20.693147659301758
    8. 'code' → logprob: -21.068147659301758
    9. '.score' → logprob: -21.693147659301758
    10. '
' → logprob: -22.693147659301758

Token 374: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -5.2166411478538066e-05
    2. '           ' → logprob: -10.875052452087402
    3. '               ' → logprob: -10.875052452087402
    4. 'self' → logprob: -12.125052452087402
    5. '       ' → logprob: -12.875052452087402
    6. '                    
' → logprob: -13.375052452087402
    7. '   ' → logprob: -13.750052452087402
    8. '
' → logprob: -14.125052452087402
    9. '                    ' → logprob: -14.125052452087402
    10. '                  ' → logprob: -14.375052452087402

Token 375: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -9.233804303221405e-05
    2. '           ' → logprob: -9.875092506408691
    3. '               ' → logprob: -10.625092506408691
    4. 'self' → logprob: -12.250092506408691
    5. '                    ' → logprob: -12.500092506408691
    6. '                    
' → logprob: -13.250092506408691
    7. '                  ' → logprob: -13.375092506408691
    8. '       ' → logprob: -13.375092506408691
    9. '                       ' → logprob: -14.000092506408691
    10. '
' → logprob: -14.375092506408691

Token 376: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.06434190273284912
    2. '                   ' → logprob: -2.8143420219421387
    3. ' self' → logprob: -6.064342021942139
    4. '               ' → logprob: -10.68934154510498
    5. '           ' → logprob: -11.18934154510498
    6. '   ' → logprob: -12.18934154510498
    7. '       ' → logprob: -12.56434154510498
    8. '                       ' → logprob: -14.06434154510498
    9. '[self' → logprob: -15.31434154510498
    10. '	self' → logprob: -15.43934154510498

Token 377: '.best' (ID: 95548)
  Prédit: '.best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.best' → logprob: -0.04322173073887825
    2. 'best' → logprob: -3.1682217121124268
    3. ' best' → logprob: -8.668221473693848
    4. '	best' → logprob: -10.543221473693848
    5. '_best' → logprob: -11.668221473693848
    6. '.' → logprob: -12.293221473693848
    7. '
' → logprob: -12.543221473693848
    8. '                   ' → logprob: -12.793221473693848
    9. '               ' → logprob: -14.043221473693848
    10. '           ' → logprob: -14.043221473693848

Token 378: '_group' (ID: 15990)
  Prédit: '_group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -0.00010115911572938785
    2. 'group' → logprob: -9.250101089477539
    3. 'Group' → logprob: -12.750101089477539
    4. '_score' → logprob: -14.750101089477539
    5. '           ' → logprob: -15.125101089477539
    6. '_' → logprob: -15.250101089477539
    7. '               ' → logprob: -15.875101089477539
    8. '=' → logprob: -16.12510108947754
    9. '"group' → logprob: -16.12510108947754
    10. 'roup' → logprob: -16.12510108947754

Token 379: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141352713108063
    2. '=' → logprob: -1.7014135122299194
    3. '[:]' → logprob: -15.57641315460205
    4. ' ' → logprob: -16.576414108276367
    5. ',' → logprob: -18.076414108276367
    6. '＝' → logprob: -18.201414108276367
    7. '<|end|>' → logprob: -18.201414108276367
    8. ')' → logprob: -18.326414108276367
    9. '.=' → logprob: -18.576414108276367
    10. ' =)' → logprob: -18.826414108276367

Token 380: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.02753756009042263
    2. ' group' → logprob: -3.6525375843048096
    3. 'list' → logprob: -6.7775373458862305
    4. ' list' → logprob: -9.27753734588623
    5. '[group' → logprob: -13.15253734588623
    6. '   ' → logprob: -14.52753734588623
    7. '	group' → logprob: -15.02753734588623
    8. '[' → logprob: -15.15253734588623
    9. 'groups' → logprob: -15.52753734588623
    10. '"group' → logprob: -15.52753734588623

Token 381: '.members' (ID: 96660)
  Prédit: '.members'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.members' → logprob: -2.069664333248511e-05
    2. '.' → logprob: -11.375020980834961
    3. ' .' → logprob: -11.750020980834961
    4. 'members' → logprob: -13.875020980834961
    5. '.tokens' → logprob: -16.37502098083496
    6. '```' → logprob: -17.25002098083496
    7. '
' → logprob: -17.37502098083496
    8. '.characters' → logprob: -17.37502098083496
    9. '.m' → logprob: -17.75002098083496
    10. '.players' → logprob: -17.75002098083496

Token 382: '[:' (ID: 7808)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06944989413022995
    2. '    
' → logprob: -3.6944499015808105
    3. '            
' → logprob: -4.0694499015808105
    4. '        
' → logprob: -4.5694499015808105
    5. '<|end|>' → logprob: -4.8194499015808105
    6. '               ' → logprob: -6.4444499015808105
    7. '           ' → logprob: -6.6944499015808105
    8. '  
' → logprob: -6.6944499015808105
    9. '                   ' → logprob: -7.4444499015808105
    10. '                
' → logprob: -7.6944499015808105

Token 383: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006938508013263345
    2. ']
' → logprob: -7.8756937980651855
    3. '<|end|>' → logprob: -9.000694274902344
    4. ' ]' → logprob: -9.125694274902344
    5. ']

' → logprob: -10.125694274902344
    6. ']()' → logprob: -11.250694274902344
    7. '<|end|>' → logprob: -12.000694274902344
    8. ']>' → logprob: -12.250694274902344
    9. ')' → logprob: -12.375694274902344
    10. '()]' → logprob: -12.750694274902344

Token 384: '            
' (ID: 7048)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4814252257347107
    2. '            
' → logprob: -1.1064252853393555
    3. '           ' → logprob: -3.6064252853393555
    4. '    
' → logprob: -4.4814252853393555
    5. '        
' → logprob: -4.8564252853393555
    6. '
            
' → logprob: -6.1064252853393555
    7. '               ' → logprob: -6.8564252853393555
    8. '<|end|>' → logprob: -7.6064252853393555
    9. '            
            
' → logprob: -8.481425285339355
    10. '                    
' → logprob: -8.606425285339355

Token 385: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00014251544780563563
    2. 'def' → logprob: -9.375142097473145
    3. '       ' → logprob: -10.000142097473145
    4. '
' → logprob: -12.000142097473145
    5. '            
' → logprob: -12.500142097473145
    6. '        
' → logprob: -14.125142097473145
    7. '   ' → logprob: -14.125142097473145
    8. '          ' → logprob: -15.375142097473145
    9. '               ' → logprob: -15.500142097473145
    10. '    
' → logprob: -15.875142097473145

Token 386: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01861950382590294
    2. '           ' → logprob: -4.018619537353516
    3. '       ' → logprob: -8.393619537353516
    4. ' def' → logprob: -8.393619537353516
    5. '   ' → logprob: -11.143619537353516
    6. '            
' → logprob: -14.018619537353516
    7. ' ' → logprob: -14.643619537353516
    8. '
' → logprob: -15.143619537353516
    9. '         ' → logprob: -15.768619537353516
    10. '     ' → logprob: -15.893619537353516

Token 387: ' _' (ID: 1175)
  Prédit: ' search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.9205229878425598
    2. 'search' → logprob: -1.045522928237915
    3. 'solve' → logprob: -2.670522928237915
    4. ' solve' → logprob: -2.920522928237915
    5. ' back' → logprob: -3.170522928237915
    6. '_' → logprob: -3.545522928237915
    7. '_search' → logprob: -4.420523166656494
    8. ' _' → logprob: -4.670523166656494
    9. ' branch' → logprob: -4.920523166656494
    10. 'back' → logprob: -4.920523166656494

Token 388: 'recursive' (ID: 129128)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.1426485776901245
    2. 'branch' → logprob: -3.017648696899414
    3. 'dfs' → logprob: -3.392648696899414
    4. 'back' → logprob: -3.642648696899414
    5. 'expand' → logprob: -4.642648696899414
    6. 'solve' → logprob: -5.642648696899414
    7. 'try' → logprob: -5.892648696899414
    8. 'max' → logprob: -6.517648696899414
    9. 'choose' → logprob: -6.767648696899414
    10. 'bound' → logprob: -7.017648696899414

Token 389: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.07752511650323868
    2. '(self' → logprob: -2.8275251388549805
    3. '_s' → logprob: -5.4525251388549805
    4. '(' → logprob: -5.7025251388549805
    5. '_select' → logprob: -6.2025251388549805
    6. '_add' → logprob: -6.4525251388549805
    7. '_choose' → logprob: -6.5775251388549805
    8. 'search' → logprob: -7.0775251388549805
    9. '_find' → logprob: -8.20252513885498
    10. '_include' → logprob: -8.20252513885498

Token 390: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.229872087715194e-05
    2. '(' → logprob: -9.750061988830566
    3. ' (' → logprob: -12.875061988830566
    4. '           ' → logprob: -14.750061988830566
    5. '(
' → logprob: -15.000061988830566
    6. '               ' → logprob: -15.500061988830566
    7. 'self' → logprob: -15.750061988830566
    8. '   ' → logprob: -16.000062942504883
    9. '(sel' → logprob: -16.750062942504883
    10. '       ' → logprob: -16.875062942504883

Token 391: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009240844519808888
    2. ' ,' → logprob: -7.000924110412598
    3. ',self' → logprob: -11.750924110412598
    4. '(self' → logprob: -12.750924110412598
    5. 'self' → logprob: -13.875924110412598
    6. '_,' → logprob: -15.125924110412598
    7. ',
' → logprob: -15.500924110412598
    8. '           ' → logprob: -15.875924110412598
    9. ')(' → logprob: -16.50092315673828
    10. '               ' → logprob: -16.87592315673828

Token 392: ' group' (ID: 3566)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.06668222695589066
    2. 'idx' → logprob: -2.8166823387145996
    3. ' index' → logprob: -6.0666823387146
    4. ' idx' → logprob: -6.6916823387146
    5. 'start' → logprob: -7.4416823387146
    6. 'pos' → logprob: -8.191681861877441
    7. 'current' → logprob: -8.816681861877441
    8. 'i' → logprob: -10.316681861877441
    9. 'subset' → logprob: -10.566681861877441
    10. 'depth' → logprob: -10.691681861877441

Token 393: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.423219696851447e-05
    2. ' ,' → logprob: -9.500083923339844
    3. '):' → logprob: -12.875083923339844
    4. '           ' → logprob: -13.000083923339844
    5. '               ' → logprob: -13.375083923339844
    6. '   ' → logprob: -14.250083923339844
    7. '       ' → logprob: -15.250083923339844
    8. ':' → logprob: -15.375083923339844
    9. ',current' → logprob: -15.375083923339844
    10. '):
' → logprob: -15.625083923339844

Token 394: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.2446267008781433
    2. ' index' → logprob: -2.119626760482788
    3. 'start' → logprob: -3.244626760482788
    4. ' start' → logprob: -3.869626760482788
    5. 'idx' → logprob: -4.119626522064209
    6. ' idx' → logprob: -4.744626522064209
    7. 'c' → logprob: -4.744626522064209
    8. 'pos' → logprob: -6.494626522064209
    9. ' candidates' → logprob: -6.994626522064209
    10. 'remaining' → logprob: -7.869626522064209

Token 395: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14804449677467346
    2. ',' → logprob: -2.5230445861816406
    3. '):
' → logprob: -2.8980445861816406
    4. ' ):' → logprob: -6.773044586181641
    5. '+' → logprob: -7.023044586181641
    6. ' ,' → logprob: -9.89804458618164
    7. ')' → logprob: -10.02304458618164
    8. '   ' → logprob: -10.52304458618164
    9. ' ):
' → logprob: -11.02304458618164
    10. '       ' → logprob: -11.02304458618164

Token 396: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8770117163658142
    2. ':' → logprob: -1.002011775970459
    3. ',' → logprob: -2.502011775970459
    4. '       ' → logprob: -2.627011775970459
    5. ' :' → logprob: -4.127011775970459
    6. ' ' → logprob: -5.002011775970459
    7. '<|end|>' → logprob: -5.002011775970459
    8. '):' → logprob: -5.377011775970459
    9. '   ' → logprob: -5.502011775970459
    10. '                ' → logprob: -5.627011775970459

Token 397: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4890584647655487
    2. ' if' → logprob: -0.9890584945678711
    3. '               ' → logprob: -4.239058494567871
    4. '       ' → logprob: -8.114058494567871
    5. '           ' → logprob: -9.989058494567871
    6. '
' → logprob: -9.989058494567871
    7. '   ' → logprob: -10.489058494567871
    8. 'for' → logprob: -11.989058494567871
    9. '                
' → logprob: -12.114058494567871
    10. '```' → logprob: -12.364058494567871

Token 398: ' Pr' (ID: 2284)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0003517894074320793
    2. ' if' → logprob: -8.000351905822754
    3. '               ' → logprob: -11.125351905822754
    4. 'for' → logprob: -13.625351905822754
    5. '```' → logprob: -16.125350952148438
    6. 'while' → logprob: -16.250350952148438
    7. '           ' → logprob: -16.625350952148438
    8. '       ' → logprob: -18.125350952148438
    9. '   ' → logprob: -18.250350952148438
    10. '                   ' → logprob: -18.750350952148438

Token 399: 'uning' (ID: 30541)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.7225504517555237
    2. 'ef' → logprob: -1.097550392150879
    3. 'e' → logprob: -1.847550392150879
    4. 'ev' → logprob: -5.472550392150879
    5. 'em' → logprob: -5.597550392150879
    6. 'ed' → logprob: -5.722550392150879
    7. 'esent' → logprob: -5.722550392150879
    8. 'edict' → logprob: -5.972550392150879
    9. 'ec' → logprob: -6.472550392150879
    10. '#' → logprob: -6.972550392150879

Token 400: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 401: ' estimate' (ID: 24572)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.44398605823516846
    2. 'if' → logprob: -1.0689860582351685
    3. '               ' → logprob: -4.193985939025879
    4. '           ' → logprob: -11.068985939025879
    5. ' max' → logprob: -11.943985939025879
    6. '       ' → logprob: -12.068985939025879
    7. 'max' → logprob: -12.193985939025879
    8. '                
' → logprob: -12.193985939025879
    9. 'return' → logprob: -12.318985939025879
    10. 'n' → logprob: -12.318985939025879

Token 402: ' maximum' (ID: 10562)
  Prédit: ' potential'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' potential' → logprob: -0.962656557559967
    2. ' possible' → logprob: -1.5876564979553223
    3. ' max' → logprob: -1.8376564979553223
    4. ' if' → logprob: -2.2126564979553223
    5. 'possible' → logprob: -2.9626564979553223
    6. 'max' → logprob: -3.3376564979553223
    7. 'potential' → logprob: -4.087656497955322
    8. '<|end|>' → logprob: -4.087656497955322
    9. ' maximum' → logprob: -5.837656497955322
    10. '       ' → logprob: -5.837656497955322

Token 403: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -1.0327720642089844
    2. 'possible' → logprob: -1.1577720642089844
    3. ' potential' → logprob: -1.4077720642089844
    4. 'potential' → logprob: -2.5327720642089844
    5. '_possible' → logprob: -6.032772064208984
    6. 'remaining' → logprob: -6.657772064208984
    7. ' remaining' → logprob: -7.782772064208984
    8. 'additional' → logprob: -7.907772064208984
    9. ' additional' → logprob: -8.407772064208984
    10. ' achievable' → logprob: -8.657772064208984

Token 404: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.9711928367614746
    2. ' score' → logprob: -1.0961928367614746
    3. ' additional' → logprob: -2.7211928367614746
    4. ' remaining' → logprob: -2.9711928367614746
    5. ' potential' → logprob: -3.2211928367614746
    6. 'additional' → logprob: -3.4711928367614746
    7. ' future' → logprob: -3.5961928367614746
    8. 's' → logprob: -3.7211928367614746
    9. 'remaining' → logprob: -4.346192836761475
    10. '_score' → logprob: -4.346192836761475

Token 405: ' from' (ID: 591)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005305858328938484
    2. ',' → logprob: -6.505305767059326
    3. '<|end|>' → logprob: -6.880305767059326
    4. ')' → logprob: -7.755305767059326
    5. '                
' → logprob: -7.755305767059326
    6. ' if' → logprob: -7.880305767059326
    7. '<|end|>' → logprob: -8.380306243896484
    8. ' =' → logprob: -8.630306243896484
    9. '                ' → logprob: -8.880306243896484
    10. ' based' → logprob: -8.880306243896484

Token 406: ' remaining' (ID: 15448)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.7294867634773254
    2. ' index' → logprob: -0.7294867634773254
    3. ' here' → logprob: -3.6044867038726807
    4. 'here' → logprob: -5.35448694229126
    5. ' current' → logprob: -6.35448694229126
    6. ' the' → logprob: -7.85448694229126
    7. 'remaining' → logprob: -8.104486465454102
    8. 'self' → logprob: -8.229486465454102
    9. ' remaining' → logprob: -8.229486465454102
    10. 'current' → logprob: -8.604486465454102

Token 407: ' rabbits' (ID: 122309)
  Prédit: ' rabbits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rabbits' → logprob: -0.602407693862915
    2. 'r' → logprob: -0.852407693862915
    3. 's' → logprob: -5.602407455444336
    4. ' members' → logprob: -5.727407455444336
    5. '   ' → logprob: -5.977407455444336
    6. '_r' → logprob: -6.102407455444336
    7. ' candidates' → logprob: -6.477407455444336
    8. ' elements' → logprob: -6.602407455444336
    9. ' r' → logprob: -6.727407455444336
    10. 'c' → logprob: -6.727407455444336

Token 408: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.028993669897317886
    2. '<|end|>' → logprob: -4.278993606567383
    3. '                
' → logprob: -5.153993606567383
    4. ',' → logprob: -5.403993606567383
    5. '                ' → logprob: -6.528993606567383
    6. '<|end|>' → logprob: -6.778993606567383
    7. '       ' → logprob: -8.403993606567383
    8. ')' → logprob: -8.528993606567383
    9. '                   ' → logprob: -8.778993606567383
    10. '           ' → logprob: -8.903993606567383

Token 409: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04826265200972557
    2. '                
' → logprob: -3.173262596130371
    3. '                ' → logprob: -5.923262596130371
    4. ',' → logprob: -7.173262596130371
    5. ')' → logprob: -7.798262596130371
    6. '                
                
' → logprob: -8.673262596130371
    7. '                 
' → logprob: -8.923262596130371
    8. '<|end|>' → logprob: -8.923262596130371
    9. '               
' → logprob: -9.173262596130371
    10. ' 
' → logprob: -9.173262596130371

Token 410: ' self' (ID: 1051)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.029796313494443893
    2. '       ' → logprob: -5.029796123504639
    3. ' if' → logprob: -5.029796123504639
    4. '<|end|>' → logprob: -5.154796123504639
    5. '                
' → logprob: -5.529796123504639
    6. ' ' → logprob: -6.529796123504639
    7. 'if' → logprob: -6.529796123504639
    8. ' 
' → logprob: -7.279796123504639
    9. '
' → logprob: -7.279796123504639
    10. '           ' → logprob: -8.029796600341797

Token 411: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.14416684210300446
    2. '.best' → logprob: -2.519166946411133
    3. '.n' → logprob: -4.019166946411133
    4. '           ' → logprob: -4.394166946411133
    5. '<|end|>' → logprob: -4.769166946411133
    6. '<|end|>' → logprob: -5.519166946411133
    7. '.r' → logprob: -5.519166946411133
    8. 'n' → logprob: -6.769166946411133
    9. 'best' → logprob: -7.394166946411133
    10. '.score' → logprob: -7.644166946411133

Token 412: 'im' (ID: 321)
  Prédit: 'im'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.00015538577281404287
    2. 'recursive' → logprob: -8.875155448913574
    3. '_im' → logprob: -12.000155448913574
    4. '.im' → logprob: -12.500155448913574
    5. '
' → logprob: -13.750155448913574
    6. 'pr' → logprob: -14.000155448913574
    7. 'best' → logprob: -15.500155448913574
    8. ' improve' → logprob: -15.500155448913574
    9. '	im' → logprob: -15.625155448913574
    10. '   ' → logprob: -15.750155448913574

Token 413: 'prove' (ID: 48190)
  Prédit: 'prove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prove' → logprob: -0.0008854917832650244
    2. 'rove' → logprob: -7.250885486602783
    3. '_' → logprob: -9.625885963439941
    4. '_pro' → logprob: -10.000885963439941
    5. 'p' → logprob: -11.000885963439941
    6. ' prove' → logprob: -11.500885963439941
    7. '```' → logprob: -12.250885963439941
    8. 'ove' → logprob: -12.375885963439941
    9. '   ' → logprob: -12.875885963439941
    10. 'pro' → logprob: -13.000885963439941

Token 414: '(group' (ID: 36416)
  Prédit: '(group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(group' → logprob: -6.194110756041482e-05
    2. '(' → logprob: -9.750061988830566
    3. 'group' → logprob: -13.375061988830566
    4. '(g' → logprob: -13.875061988830566
    5. '(
' → logprob: -14.375061988830566
    6. ' group' → logprob: -16.00006103515625
    7. ' (' → logprob: -16.12506103515625
    8. '(groups' → logprob: -16.12506103515625
    9. '(Group' → logprob: -16.12506103515625
    10. '[group' → logprob: -16.87506103515625

Token 415: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31421762704849243
    2. ')' → logprob: -1.3142175674438477
    3. ')

' → logprob: -7.439217567443848
    4. ')
' → logprob: -7.939217567443848
    5. ' )
' → logprob: -11.939217567443848
    6. '
' → logprob: -13.689217567443848
    7. ' )' → logprob: -13.689217567443848
    8. '       ' → logprob: -14.314217567443848
    9. ')

' → logprob: -14.314217567443848
    10. '               ' → logprob: -15.064217567443848

Token 416: '                
' (ID: 13466)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.058194924145936966
    2. '
' → logprob: -2.933194875717163
    3. '                
' → logprob: -5.933195114135742
    4. '<|end|>' → logprob: -8.058195114135742
    5. '        
' → logprob: -9.183195114135742
    6. '```' → logprob: -9.683195114135742
    7. '       ' → logprob: -10.058195114135742
    8. '  
' → logprob: -10.433195114135742
    9. '    
' → logprob: -10.558195114135742
    10. ' if' → logprob: -11.183195114135742

Token 417: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009598947130143642
    2. 'if' → logprob: -4.884598731994629
    3. ' if' → logprob: -6.259598731994629
    4. '       ' → logprob: -9.759598731994629
    5. '                
' → logprob: -11.759598731994629
    6. '           ' → logprob: -12.134598731994629
    7. '   ' → logprob: -13.134598731994629
    8. '
' → logprob: -13.634598731994629
    9. '```' → logprob: -14.009598731994629
    10. 'next' → logprob: -14.134598731994629

Token 418: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0002518031978979707
    2. 'for' → logprob: -8.750251770019531
    3. ' if' → logprob: -9.375251770019531
    4. '               ' → logprob: -11.875251770019531
    5. 'i' → logprob: -13.750251770019531
    6. '       ' → logprob: -14.625251770019531
    7. '           ' → logprob: -16.25025177001953
    8. '   ' → logprob: -16.87525177001953
    9. '```' → logprob: -16.87525177001953
    10. '                
' → logprob: -17.62525177001953

Token 419: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.6931478977203369
    2. ' index' → logprob: -0.6931478977203369
    3. '	index' → logprob: -15.193147659301758
    4. ' ' → logprob: -15.693147659301758
    5. '   ' → logprob: -16.193147659301758
    6. '(index' → logprob: -16.693147659301758
    7. '
' → logprob: -17.443147659301758
    8. '  ' → logprob: -18.068147659301758
    9. '#index' → logprob: -18.193147659301758
    10. '=index' → logprob: -18.193147659301758

Token 420: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5570938587188721
    2. ' ==' → logprob: -0.9320938587188721
    3. '==' → logprob: -4.057093620300293
    4. '>=' → logprob: -4.182093620300293
    5. ' <' → logprob: -7.557093620300293
    6. ' ' → logprob: -8.182093620300293
    7. '<|end|>' → logprob: -12.307093620300293
    8. '=' → logprob: -12.432093620300293
    9. '<' → logprob: -12.432093620300293
    10. ')>=' → logprob: -12.682093620300293

Token 421: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0052354102954268456
    2. ' self' → logprob: -5.255235195159912
    3. 'len' → logprob: -13.88023567199707
    4. '               ' → logprob: -14.50523567199707
    5. '           ' → logprob: -16.13023567199707
    6. '
' → logprob: -16.13023567199707
    7. ' len' → logprob: -17.75523567199707
    8. '                   ' → logprob: -18.25523567199707
    9. '   ' → logprob: -18.88023567199707
    10. '       ' → logprob: -18.88023567199707

Token 422: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -2.696889623621246e-06
    2. 'n' → logprob: -13.00000286102295
    3. '.' → logprob: -15.50000286102295
    4. ' .' → logprob: -16.250001907348633
    5. 'self' → logprob: -16.875001907348633
    6. '<n' → logprob: -17.875001907348633
    7. '_n' → logprob: -18.250001907348633
    8. '           ' → logprob: -18.625001907348633
    9. ',n' → logprob: -19.000001907348633
    10. '	n' → logprob: -19.375001907348633

Token 423: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02402484230697155
    2. ':
' → logprob: -3.774024724960327
    3. ' or' → logprob: -7.524024963378906
    4. ':return' → logprob: -8.399024963378906
    5. '):' → logprob: -12.274024963378906
    6. ')' → logprob: -13.024024963378906
    7. '):
' → logprob: -13.399024963378906
    8. 'or' → logprob: -13.649024963378906
    9. ' :' → logprob: -14.024024963378906
    10. '<|end|>' → logprob: -14.524024963378906

Token 424: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0047683110460639
    2. 'return' → logprob: -5.629768371582031
    3. '               ' → logprob: -8.004768371582031
    4. ' return' → logprob: -8.129768371582031
    5. ':
' → logprob: -8.629768371582031
    6. ':return' → logprob: -8.879768371582031
    7. ':' → logprob: -9.254768371582031
    8. '           ' → logprob: -9.504768371582031
    9. '   ' → logprob: -11.254768371582031
    10. '
' → logprob: -11.379768371582031

Token 425: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01936386711895466
    2. '                   ' → logprob: -4.269363880157471
    3. ' return' → logprob: -5.269363880157471
    4. '               ' → logprob: -10.769363403320312
    5. '   ' → logprob: -11.519363403320312
    6. '	return' → logprob: -12.644363403320312
    7. '
' → logprob: -12.769363403320312
    8. '       ' → logprob: -14.019363403320312
    9. '           ' → logprob: -14.144363403320312
    10. '                       ' → logprob: -14.269363403320312

Token 426: '
                
' (ID: 84151)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2262420952320099
    2. '                
' → logprob: -1.7262420654296875
    3. '               ' → logprob: -3.8512420654296875
    4. '
                
' → logprob: -6.3512420654296875
    5. '            
' → logprob: -7.7262420654296875
    6. '                
                
' → logprob: -8.101242065429688
    7. '        
' → logprob: -8.476242065429688
    8. '  
' → logprob: -8.851242065429688
    9. '    
' → logprob: -9.101242065429688
    10. '

' → logprob: -9.226242065429688

Token 427: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.050230544060468674
    2. '                
' → logprob: -3.1752305030822754
    3. '
' → logprob: -5.050230503082275
    4. '        
' → logprob: -8.675230979919434
    5. '            
' → logprob: -8.800230979919434
    6. 'r' → logprob: -8.925230979919434
    7. '    
' → logprob: -9.175230979919434
    8. '       ' → logprob: -10.300230979919434
    9. '  
' → logprob: -10.425230979919434
    10. '           ' → logprob: -10.550230979919434

Token 428: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.08638480305671692
    2. 'self' → logprob: -3.0863847732543945
    3. 'r' → logprob: -4.2113847732543945
    4. 'for' → logprob: -5.3363847732543945
    5. 'next' → logprob: -5.4613847732543945
    6. 'group' → logprob: -5.5863847732543945
    7. '               ' → logprob: -5.9613847732543945
    8. 'current' → logprob: -6.4613847732543945
    9. 'candidate' → logprob: -6.5863847732543945
    10. 'new' → logprob: -7.0863847732543945

Token 429: ' Try' (ID: 14720)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5845727920532227
    2. 'for' → logprob: -1.9595727920532227
    3. 'next' → logprob: -2.0845727920532227
    4. 'include' → logprob: -2.4595727920532227
    5. 'self' → logprob: -3.4595727920532227
    6. 'group' → logprob: -3.8345727920532227
    7. 'with' → logprob: -4.959572792053223
    8. 'candidate' → logprob: -4.959572792053223
    9. 'Include' → logprob: -5.084572792053223
    10. 'r' → logprob: -5.709572792053223

Token 430: ' excluding' (ID: 76651)
  Prédit: 'including'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'including' → logprob: -0.9618116617202759
    2. ' including' → logprob: -1.2118116617202759
    3. 'adding' → logprob: -1.8368116617202759
    4. ' adding' → logprob: -2.3368115425109863
    5. ':
' → logprob: -3.8368115425109863
    6. 'to' → logprob: -4.211811542510986
    7. ' to' → logprob: -4.586811542510986
    8. ':' → logprob: -5.336811542510986
    9. '   ' → logprob: -5.836811542510986
    10. '           ' → logprob: -5.961811542510986

Token 431: ' current' (ID: 2208)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9747011065483093
    2. 'r' → logprob: -1.349701166152954
    3. 'the' → logprob: -1.599701166152954
    4. ' the' → logprob: -1.974701166152954
    5. ' self' → logprob: -4.099700927734375
    6. ' current' → logprob: -6.599700927734375
    7. 'index' → logprob: -6.599700927734375
    8. '<|end|>' → logprob: -7.474700927734375
    9. '<|end|>' → logprob: -7.474700927734375
    10. 'current' → logprob: -7.599700927734375

Token 432: ' rabbit' (ID: 67153)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.21133694052696228
    2. 'self' → logprob: -1.8363369703292847
    3. 'rabbit' → logprob: -3.711336851119995
    4. 'index' → logprob: -6.336337089538574
    5. '               ' → logprob: -6.586337089538574
    6. '                
' → logprob: -7.336337089538574
    7. ' rabbit' → logprob: -7.836337089538574
    8. '_r' → logprob: -7.836337089538574
    9. '
                
' → logprob: -7.961337089538574
    10. 's' → logprob: -7.961337089538574

Token 433: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07137254625558853
    2. '                
' → logprob: -2.6963725090026855
    3. '
' → logprob: -7.3213725090026855
    4. ',' → logprob: -7.8213725090026855
    5. '                
                
' → logprob: -10.071372985839844
    6. 'self' → logprob: -10.071372985839844
    7. 'r' → logprob: -10.196372985839844
    8. '```' → logprob: -10.571372985839844
    9. '                ' → logprob: -10.696372985839844
    10. '<|end|>' → logprob: -10.696372985839844

Token 434: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06336615234613419
    2. '                
' → logprob: -2.813366174697876
    3. ',' → logprob: -7.563365936279297
    4. '
' → logprob: -8.563365936279297
    5. '.' → logprob: -9.188365936279297
    6. '                ' → logprob: -9.438365936279297
    7. 'r' → logprob: -9.563365936279297
    8. ' and' → logprob: -9.563365936279297
    9. '```' → logprob: -9.938365936279297
    10. '<|end|>' → logprob: -9.938365936279297

Token 435: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1646861732006073
    2. '               ' → logprob: -1.9146862030029297
    3. ' self' → logprob: -5.41468620300293
    4. '	self' → logprob: -14.78968620300293
    5. '(self' → logprob: -14.78968620300293
    6. '           ' → logprob: -15.66468620300293
    7. '```' → logprob: -16.03968620300293
    8. '                
' → logprob: -16.16468620300293
    9. 'this' → logprob: -17.03968620300293
    10. '[self' → logprob: -17.16468620300293

Token 436: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0002715873415581882
    2. '_recursive' → logprob: -8.375271797180176
    3. '_rec' → logprob: -10.750271797180176
    4. '.' → logprob: -11.250271797180176
    5. '   ' → logprob: -13.750271797180176
    6. ' .' → logprob: -13.875271797180176
    7. '.rec' → logprob: -14.125271797180176
    8. ']._' → logprob: -14.250271797180176
    9. ')._' → logprob: -14.500271797180176
    10. '_' → logprob: -14.500271797180176

Token 437: 'recursive' (ID: 129128)
  Prédit: 'recursive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'recursive' → logprob: -1.981667537620524e-06
    2. 'im' → logprob: -13.750001907348633
    3. '_recursive' → logprob: -14.500001907348633
    4. '
' → logprob: -16.375001907348633
    5. ' recursive' → logprob: -16.375001907348633
    6. '_' → logprob: -17.750001907348633
    7. 'exclude' → logprob: -17.750001907348633
    8. '```' → logprob: -17.875001907348633
    9. 'r' → logprob: -18.875001907348633
    10. 're' → logprob: -19.000001907348633

Token 438: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -4.008129963040119e-06
    2. 'search' → logprob: -12.625003814697266
    3. ' _' → logprob: -15.625003814697266
    4. '_se' → logprob: -16.750003814697266
    5. 'Search' → logprob: -17.000003814697266
    6. '_' → logprob: -17.125003814697266
    7. '_s' → logprob: -17.375003814697266
    8. '```' → logprob: -17.500003814697266
    9. '._' → logprob: -17.625003814697266
    10. '"_' → logprob: -18.250003814697266

Token 439: '(group' (ID: 36416)
  Prédit: '(group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(group' → logprob: -7.576873758807778e-05
    2. '(' → logprob: -9.500075340270996
    3. '(
' → logprob: -14.375075340270996
    4. 'group' → logprob: -16.375076293945312
    5. '(g' → logprob: -16.875076293945312
    6. ' (' → logprob: -17.375076293945312
    7. ' group' → logprob: -17.375076293945312
    8. '(groups' → logprob: -17.375076293945312
    9. '[group' → logprob: -17.625076293945312
    10. '"group' → logprob: -18.750076293945312

Token 440: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000636308453977108
    2. ',index' → logprob: -7.375636100769043
    3. ' ,' → logprob: -12.500636100769043
    4. ')' → logprob: -12.750636100769043
    5. ',None' → logprob: -13.875636100769043
    6. ',
' → logprob: -14.500636100769043
    7. ',self' → logprob: -15.625636100769043
    8. ',)' → logprob: -15.875636100769043
    9. ',current' → logprob: -16.00063705444336
    10. ',new' → logprob: -16.00063705444336

Token 441: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.00861528143286705
    2. ' index' → logprob: -4.758615493774414
    3. '               ' → logprob: -15.258615493774414
    4. '   ' → logprob: -15.883615493774414
    5. '                   ' → logprob: -16.633615493774414
    6. '
' → logprob: -16.758615493774414
    7. '	index' → logprob: -16.883615493774414
    8. '(index' → logprob: -17.008615493774414
    9. '           ' → logprob: -17.258615493774414
    10. ' ' → logprob: -18.133615493774414

Token 442: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0040785204619169235
    2. ' +' → logprob: -5.504078388214111
    3. '+
' → logprob: -15.75407886505127
    4. '+)' → logprob: -19.254077911376953
    5. ')' → logprob: -19.379077911376953
    6. '＋' → logprob: -20.629077911376953
    7. '()+' → logprob: -20.879077911376953
    8. ' +
' → logprob: -21.129077911376953
    9. '+=' → logprob: -22.004077911376953
    10. '+[' → logprob: -22.004077911376953

Token 443: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.87502098083496
    4. '```' → logprob: -17.50002098083496
    5. '
' → logprob: -17.87502098083496
    6. ')' → logprob: -18.25002098083496
    7. '  ' → logprob: -19.62502098083496
    8. '0' → logprob: -19.75002098083496
    9. '           ' → logprob: -20.25002098083496
    10. '     ' → logprob: -20.50002098083496

Token 444: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00036216014996171
    2. ')
' → logprob: -8.250362396240234
    3. '               ' → logprob: -9.500362396240234
    4. ')

' → logprob: -10.875362396240234
    5. ' )' → logprob: -12.125362396240234
    6. '                
' → logprob: -14.250362396240234
    7. '       ' → logprob: -15.375362396240234
    8. '           ' → logprob: -15.375362396240234
    9. '
' → logprob: -15.375362396240234
    10. '                ' → logprob: -16.500362396240234

Token 445: '                
' (ID: 13466)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3510395586490631
    2. '                
' → logprob: -1.2260395288467407
    3. '            
' → logprob: -6.601039409637451
    4. '```' → logprob: -7.476039409637451
    5. '    
' → logprob: -8.72603988647461
    6. '               
' → logprob: -9.47603988647461
    7. '                ' → logprob: -9.60103988647461
    8. '                    
' → logprob: -10.10103988647461
    9. '  
' → logprob: -10.10103988647461
    10. '           ' → logprob: -10.22603988647461

Token 446: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1272100955247879
    2. '                
' → logprob: -2.1272101402282715
    3. '
' → logprob: -8.752209663391113
    4. '                

' → logprob: -10.252209663391113
    5. '            
' → logprob: -10.502209663391113
    6. '               
' → logprob: -11.127209663391113
    7. '                
                
' → logprob: -11.377209663391113
    8. '```' → logprob: -11.627209663391113
    9. '    
' → logprob: -11.752209663391113
    10. '              ' → logprob: -12.627209663391113

Token 447: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.2848295569419861
    2. '               ' → logprob: -1.4098296165466309
    3. '
' → logprob: -6.784829616546631
    4. 'r' → logprob: -7.034829616546631
    5. '                
' → logprob: -7.409829616546631
    6. ' #' → logprob: -8.034829139709473
    7. 'if' → logprob: -8.659829139709473
    8. 'group' → logprob: -9.034829139709473
    9. '           ' → logprob: -9.284829139709473
    10. 'current' → logprob: -9.784829139709473

Token 448: ' Try' (ID: 14720)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1135311871767044
    2. 'group' → logprob: -3.4885311126708984
    3. ' #' → logprob: -3.6135311126708984
    4. 'try' → logprob: -4.738531112670898
    5. 'Try' → logprob: -4.988531112670898
    6. 'new' → logprob: -5.113531112670898
    7. 'r' → logprob: -5.113531112670898
    8. '               ' → logprob: -5.238531112670898
    9. ' group' → logprob: -5.863531112670898
    10. 'Add' → logprob: -5.863531112670898

Token 449: ' including' (ID: 3463)
  Prédit: ' including'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' including' → logprob: -0.5738919973373413
    2. 'including' → logprob: -1.3238919973373413
    3. ' adding' → logprob: -2.198892116546631
    4. 'adding' → logprob: -3.698892116546631
    5. 'group' → logprob: -4.698892116546631
    6. ':' → logprob: -4.823892116546631
    7. 'Including' → logprob: -5.073892116546631
    8. '               ' → logprob: -6.073892116546631
    9. ' group' → logprob: -6.573892116546631
    10. ':
' → logprob: -6.573892116546631

Token 450: ' current' (ID: 2208)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.6303079724311829
    2. 'self' → logprob: -1.755307912826538
    3. 'group' → logprob: -1.755307912826538
    4. ' self' → logprob: -2.505307912826538
    5. 'r' → logprob: -3.505307912826538
    6. '(self' → logprob: -5.630308151245117
    7. '(group' → logprob: -6.005308151245117
    8. ' r' → logprob: -7.755308151245117
    9. 'index' → logprob: -7.755308151245117
    10. ' rabbit' → logprob: -7.880308151245117

Token 451: ' rabbit' (ID: 67153)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9306765198707581
    2. ' self' → logprob: -1.5556764602661133
    3. 'Rabbit' → logprob: -2.0556764602661133
    4. ' rabbit' → logprob: -2.3056764602661133
    5. 'r' → logprob: -2.4306764602661133
    6. 'rabbit' → logprob: -3.1806764602661133
    7. ' Rabbit' → logprob: -4.430676460266113
    8. '_r' → logprob: -4.430676460266113
    9. '(self' → logprob: -5.930676460266113
    10. ')' → logprob: -6.055676460266113

Token 452: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04653572291135788
    2. ',' → logprob: -3.9215357303619385
    3. '                
' → logprob: -4.296535491943359
    4. '
' → logprob: -5.421535491943359
    5. ':
' → logprob: -6.671535491943359
    6. ')' → logprob: -6.671535491943359
    7. ',
' → logprob: -6.796535491943359
    8. ':' → logprob: -7.421535491943359
    9. ' if' → logprob: -8.04653549194336
    10. '                ' → logprob: -8.04653549194336

Token 453: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017785802483558655
    2. '                
' → logprob: -4.142786026000977
    3. ',' → logprob: -7.392786026000977
    4. '
' → logprob: -8.267786026000977
    5. '(group' → logprob: -8.642786026000977
    6. '(
' → logprob: -9.267786026000977
    7. ':
' → logprob: -9.517786026000977
    8. ',
' → logprob: -9.892786026000977
    9. 'r' → logprob: -10.017786026000977
    10. '(r' → logprob: -10.142786026000977

Token 454: ' new' (ID: 620)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.28091365098953247
    2. 'group' → logprob: -1.7809135913848877
    3. '               ' → logprob: -3.4059135913848877
    4. ' if' → logprob: -4.155913829803467
    5. 'r' → logprob: -4.780913829803467
    6. ' self' → logprob: -5.280913829803467
    7. 'self' → logprob: -5.530913829803467
    8. 'if' → logprob: -5.655913829803467
    9. ' r' → logprob: -6.905913829803467
    10. ' rabbit' → logprob: -7.030913829803467

Token 455: '_members' (ID: 75388)
  Prédit: '_group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -0.35942286252975464
    2. '_members' → logprob: -1.2344229221343994
    3. 'members' → logprob: -5.85942268371582
    4. 'group' → logprob: -6.10942268371582
    5. '.members' → logprob: -6.60942268371582
    6. 'Group' → logprob: -6.73442268371582
    7. '_member' → logprob: -7.23442268371582
    8. '.' → logprob: -7.73442268371582
    9. '_groups' → logprob: -8.10942268371582
    10. ' group' → logprob: -8.35942268371582

Token 456: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868713676929474
    2. ' =' → logprob: -1.136871337890625
    3. ')' → logprob: -15.886871337890625
    4. '.append' → logprob: -16.386871337890625
    5. '＝' → logprob: -18.011871337890625
    6. '=
' → logprob: -18.011871337890625
    7. ':' → logprob: -18.261871337890625
    8. ',' → logprob: -18.261871337890625
    9. ' ' → logprob: -18.511871337890625
    10. '=list' → logprob: -18.636871337890625

Token 457: ' group' (ID: 3566)
  Prédit: ' group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.47407761216163635
    2. 'group' → logprob: -0.974077582359314
    3. '[group' → logprob: -14.849077224731445
    4. '	group' → logprob: -15.974077224731445
    5. '(group' → logprob: -16.849077224731445
    6. '"group' → logprob: -16.849077224731445
    7. '   ' → logprob: -17.599077224731445
    8. ' ' → logprob: -18.974077224731445
    9. '.group' → logprob: -19.599077224731445
    10. 'list' → logprob: -19.849077224731445

Token 458: '.members' (ID: 96660)
  Prédit: '.members'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.members' → logprob: -0.0004430627159308642
    2. '.' → logprob: -7.750442981719971
    3. ' .' → logprob: -12.000443458557129
    4. 'members' → logprob: -12.500443458557129
    5. ').' → logprob: -14.125443458557129
    6. '.m' → logprob: -15.125443458557129
    7. '           ' → logprob: -15.625443458557129
    8. '.member' → logprob: -15.625443458557129
    9. '```' → logprob: -15.625443458557129
    10. '.mem' → logprob: -16.000442504882812

Token 459: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04798875376582146
    2. ' +' → logprob: -3.2979886531829834
    3. '[:]' → logprob: -5.0479888916015625
    4. '+[' → logprob: -5.6729888916015625
    5. '[:' → logprob: -10.297988891601562
    6. '[' → logprob: -13.047988891601562
    7. '+
' → logprob: -13.297988891601562
    8. '.copy' → logprob: -15.422988891601562
    9. '＋' → logprob: -15.547988891601562
    10. '+

' → logprob: -16.797988891601562

Token 460: ' [' (ID: 723)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.03952733427286148
    2. ' [' → logprob: -3.289527416229248
    3. '[r' → logprob: -7.164527416229248
    4. '[' → logprob: -7.289527416229248
    5. '[new' → logprob: -11.53952693939209
    6. '[this' → logprob: -12.78952693939209
    7. '[class' → logprob: -13.28952693939209
    8. '[random' → logprob: -13.41452693939209
    9. '[index' → logprob: -13.66452693939209
    10. '[user' → logprob: -13.78952693939209

Token 461: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007145775598473847
    2. ' self' → logprob: -7.2507147789001465
    3. '           ' → logprob: -12.625714302062988
    4. '               ' → logprob: -14.125714302062988
    5. '(self' → logprob: -15.375714302062988
    6. '[self' → logprob: -15.750714302062988
    7. '                   ' → logprob: -16.375715255737305
    8. '   ' → logprob: -16.500715255737305
    9. '       ' → logprob: -16.750715255737305
    10. '	self' → logprob: -16.875715255737305

Token 462: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.00012987985974177718
    2. 'self' → logprob: -9.875129699707031
    3. '.' → logprob: -10.375129699707031
    4. 'r' → logprob: -11.000129699707031
    5. ' rabbits' → logprob: -11.250129699707031
    6. '.rabbit' → logprob: -11.625129699707031
    7. 'abbit' → logprob: -12.875129699707031
    8. '].' → logprob: -13.125129699707031
    9. ' .' → logprob: -14.250129699707031
    10. 's' → logprob: -14.500129699707031

Token 463: 'abb' (ID: 13538)
  Prédit: 'abb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abb' → logprob: -0.0009058646392077208
    2. 'r' → logprob: -7.125905990600586
    3. '.r' → logprob: -9.875905990600586
    4. 'abbit' → logprob: -10.750905990600586
    5. ' rabbits' → logprob: -12.375905990600586
    6. 'ab' → logprob: -12.750905990600586
    7. 'a' → logprob: -12.750905990600586
    8. 'bb' → logprob: -13.375905990600586
    9. '##' → logprob: -13.500905990600586
    10. '``' → logprob: -13.750905990600586

Token 464: 'its' (ID: 1348)
  Prédit: 'its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'its' → logprob: -1.1160349458805285e-05
    2. '   ' → logprob: -13.000011444091797
    3. 'Its' → logprob: -13.500011444091797
    4. 'it' → logprob: -13.625011444091797
    5. '...' → logprob: -13.875011444091797
    6. '```' → logprob: -14.375011444091797
    7. '[' → logprob: -14.500011444091797
    8. 'i' → logprob: -14.875011444091797
    9. ']' → logprob: -15.125011444091797
    10. '#' → logprob: -15.125011444091797

Token 465: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.750000953674316
    3. 'index' → logprob: -15.250000953674316
    4. '[ind' → logprob: -18.0
    5. '[
' → logprob: -18.5
    6. ' index' → logprob: -18.625
    7. '[self' → logprob: -19.125
    8. '[Index' → logprob: -19.125
    9. '(index' → logprob: -19.375
    10. '```' → logprob: -19.5

Token 466: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002198313595727086
    2. ' ]' → logprob: -6.252198219299316
    3. ')]' → logprob: -8.252198219299316
    4. ']
' → logprob: -12.752198219299316
    5. '])' → logprob: -13.002198219299316
    6. ']]' → logprob: -13.627198219299316
    7. ')' → logprob: -13.877198219299316
    8. ']

' → logprob: -14.127198219299316
    9. '`]' → logprob: -15.377198219299316
    10. '()]' → logprob: -15.502198219299316

Token 467: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09276840835809708
    2. '
' → logprob: -2.717768430709839
    3. '                
' → logprob: -3.967768430709839
    4. ' new' → logprob: -6.71776819229126
    5. '                ' → logprob: -7.84276819229126
    6. '            
' → logprob: -7.96776819229126
    7. 'new' → logprob: -8.217768669128418
    8. '    
' → logprob: -8.592768669128418
    9. '           ' → logprob: -8.592768669128418
    10. '  
' → logprob: -8.967768669128418

Token 468: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.18451175093650818
    2. 'new' (adapté à ' new') → logprob: -1.8095117807388306
    3. '               ' → logprob: -5.684511661529541
    4. 'group' → logprob: -8.0595121383667
    5. ' group' → logprob: -8.1845121383667
    6. ' self' → logprob: -8.5595121383667
    7. ' if' → logprob: -8.8095121383667
    8. '
' → logprob: -8.9345121383667
    9. 'self' → logprob: -9.0595121383667
    10. '           ' → logprob: -10.0595121383667

Token 469: '_group' (ID: 15990)
  Prédit: '_group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -0.08629153668880463
    2. '_members' → logprob: -2.586291551589966
    3. 'group' → logprob: -6.086291313171387
    4. 'Group' → logprob: -6.336291313171387
    5. '._' → logprob: -6.461291313171387
    6. '_candidates' → logprob: -7.711291313171387
    7. '_groups' → logprob: -8.461291313171387
    8. '_member' → logprob: -8.711291313171387
    9. '.group' → logprob: -8.711291313171387
    10. 'Members' → logprob: -8.836291313171387

Token 470: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42898309230804443
    2. '=' → logprob: -1.0539830923080444
    3. '.' → logprob: -9.303982734680176
    4. '.compute' → logprob: -9.303982734680176
    5. ')' → logprob: -9.553982734680176
    6. '.=' → logprob: -11.928982734680176
    7. ')=' → logprob: -12.678982734680176
    8. '   ' → logprob: -12.678982734680176
    9. ' ' → logprob: -12.678982734680176
    10. ').' → logprob: -12.928982734680176

Token 471: ' Candidate' (ID: 81541)
  Prédit: 'Candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Candidate' → logprob: -0.16022545099258423
    2. ' Candidate' → logprob: -1.9102253913879395
    3. '               ' → logprob: -14.285225868225098
    4. ' candidate' → logprob: -15.160225868225098
    5. '_candidate' → logprob: -15.785225868225098
    6. '           ' → logprob: -16.41022491455078
    7. '   ' → logprob: -17.16022491455078
    8. '                   ' → logprob: -17.16022491455078
    9. ' ' → logprob: -17.16022491455078
    10. 'candidate' → logprob: -17.28522491455078

Token 472: 'Group' (ID: 2748)
  Prédit: 'Group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Group' → logprob: -4.320199877838604e-07
    2. 'G' → logprob: -15.75
    3. ' Group' → logprob: -16.625
    4. 'Gro' → logprob: -17.5
    5. '<Group' → logprob: -17.875
    6. '(Group' → logprob: -18.125
    7. 'group' → logprob: -18.25
    8. '	Group' → logprob: -18.75
    9. '_group' → logprob: -19.0
    10. ' group' → logprob: -19.5

Token 473: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -7.3458322731312364e-06
    2. '(' → logprob: -12.125007629394531
    3. 'new' → logprob: -13.250007629394531
    4. '(
' → logprob: -17.62500762939453
    5. ')new' → logprob: -18.00000762939453
    6. ' new' → logprob: -18.37500762939453
    7. ',new' → logprob: -18.50000762939453
    8. '[new' → logprob: -18.75000762939453
    9. '(n' → logprob: -19.37500762939453
    10. '=new' → logprob: -19.87500762939453

Token 474: '_members' (ID: 75388)
  Prédit: '_members'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_members' → logprob: -0.00012701898231171072
    2. 'members' → logprob: -9.000126838684082
    3. '_member' → logprob: -15.000126838684082
    4. 'new' → logprob: -15.000126838684082
    5. '_groups' → logprob: -15.125126838684082
    6. '_mem' → logprob: -15.250126838684082
    7. 'Members' → logprob: -15.250126838684082
    8. ')' → logprob: -15.250126838684082
    9. '.members' → logprob: -15.375126838684082
    10. '_' → logprob: -15.625126838684082

Token 475: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03826421499252319
    2. ')
' → logprob: -3.288264274597168
    3. '               ' → logprob: -8.538264274597168
    4. ')
' → logprob: -10.663264274597168
    5. '           ' → logprob: -13.038264274597168
    6. ')

' → logprob: -14.913264274597168
    7. '       ' → logprob: -15.538264274597168
    8. ')`
' → logprob: -15.538264274597168
    9. '                   ' → logprob: -16.16326332092285
    10. ' )' → logprob: -16.28826332092285

Token 476: '                
' (ID: 13466)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00010759611177491024
    2. '                
' → logprob: -9.375107765197754
    3. 'self' → logprob: -11.125107765197754
    4. ' self' → logprob: -12.500107765197754
    5. '```' → logprob: -13.625107765197754
    6. 'new' → logprob: -13.750107765197754
    7. '
' → logprob: -14.750107765197754
    8. ' new' → logprob: -15.375107765197754
    9. '       ' → logprob: -15.750107765197754
    10. '                   ' → logprob: -16.000106811523438

Token 477: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.026572320610284805
    2. 'self' → logprob: -3.6515722274780273
    3. ' self' → logprob: -8.276572227478027
    4. 'if' → logprob: -11.776572227478027
    5. '   ' → logprob: -12.776572227478027
    6. '           ' → logprob: -13.151572227478027
    7. '                
' → logprob: -13.151572227478027
    8. '       ' → logprob: -14.026572227478027
    9. '                   ' → logprob: -14.151572227478027
    10. ' if' → logprob: -14.151572227478027

Token 478: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3167719841003418
    2. 'if' → logprob: -1.3167719841003418
    3. '               ' → logprob: -6.316771984100342
    4. '#' (adapté à ' #') → logprob: -7.066771984100342
    5. 'score' → logprob: -7.941771984100342
    6. 'new' → logprob: -8.4417724609375
    7. 'max' → logprob: -9.5667724609375
    8. 'current' → logprob: -9.6917724609375
    9. ' if' → logprob: -10.1917724609375
    10. ' self' → logprob: -10.5667724609375

Token 479: ' He' (ID: 1679)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0205889530479908
    2. 'self' → logprob: -4.1455888748168945
    3. '#' → logprob: -5.7705888748168945
    4. 'score' → logprob: -7.6455888748168945
    5. 'new' → logprob: -7.6455888748168945
    6. 'max' → logprob: -8.645588874816895
    7. ' if' → logprob: -9.395588874816895
    8. 'current' → logprob: -10.270588874816895
    9. 'estimated' → logprob: -10.645588874816895
    10. '               ' → logprob: -10.895588874816895

Token 480: 'uristic' (ID: 92961)
  Prédit: 'uristic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uristic' → logprob: -0.5091447234153748
    2. 'ur' → logprob: -1.0091447830200195
    3. 'ight' → logprob: -4.0091447830200195
    4. 'lp' → logprob: -5.0091447830200195
    5. 'l' → logprob: -6.5091447830200195
    6. 'urst' → logprob: -6.6341447830200195
    7. '#' → logprob: -6.6341447830200195
    8. 're' → logprob: -6.7591447830200195
    9. 'avy' → logprob: -6.8841447830200195
    10. 'ss' → logprob: -7.5091447830200195

Token 481: ' pruning' (ID: 135775)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -1.385328769683838
    2. ':' → logprob: -1.760328769683838
    3. '               ' → logprob: -1.885328769683838
    4. ' if' → logprob: -2.010328769683838
    5. 'if' → logprob: -2.010328769683838
    6. 'estimate' → logprob: -2.760328769683838
    7. ' =' → logprob: -4.010328769683838
    8. ' score' → logprob: -4.385328769683838
    9. 'max' → logprob: -4.385328769683838
    10. '=' → logprob: -4.760328769683838

Token 482: ':' (ID: 25)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16116401553153992
    2. '                
' → logprob: -2.0361640453338623
    3. ' if' → logprob: -4.661163806915283
    4. '
' → logprob: -5.411163806915283
    5. 'if' → logprob: -6.536163806915283
    6. ':' → logprob: -6.911163806915283
    7. '                ' → logprob: -7.286163806915283
    8. ',' → logprob: -8.036164283752441
    9. ':
' → logprob: -8.536164283752441
    10. '                
                
' → logprob: -8.911164283752441

Token 483: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09109285473823547
    2. '               ' → logprob: -2.966092824935913
    3. ' if' → logprob: -3.841092824935913
    4. 'max' → logprob: -5.216093063354492
    5. 'current' → logprob: -5.591093063354492
    6. 'score' → logprob: -6.591093063354492
    7. 'possible' → logprob: -7.091093063354492
    8. 'potential' → logprob: -7.216093063354492
    9. 'new' → logprob: -7.466093063354492
    10. ' max' → logprob: -8.466093063354492

Token 484: ' any' (ID: 1062)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.34847474098205566
    2. ' new' → logprob: -1.2234747409820557
    3. '(new' → logprob: -11.223474502563477
    4. '   ' → logprob: -12.598474502563477
    5. 'not' → logprob: -12.598474502563477
    6. 'self' → logprob: -13.348474502563477
    7. ' not' → logprob: -13.598474502563477
    8. 'group' → logprob: -13.598474502563477
    9. ' ' → logprob: -13.723474502563477
    10. '
' → logprob: -14.348474502563477

Token 485: ' in' (ID: 306)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.298685908317566
    2. '(new' → logprob: -1.673685908317566
    3. 'member' → logprob: -1.798685908317566
    4. '(r' → logprob: -2.5486860275268555
    5. 'token' → logprob: -2.5486860275268555
    6. '(
' → logprob: -3.1736860275268555
    7. 'r' → logprob: -3.4236860275268555
    8. 'friend' → logprob: -3.5486860275268555
    9. ' new' → logprob: -3.6736860275268555
    10. '(' → logprob: -3.6736860275268555

Token 486: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.02516845427453518
    2. 'group' → logprob: -4.525168418884277
    3. '(new' → logprob: -4.650168418884277
    4. 'range' → logprob: -6.525168418884277
    5. '[new' → logprob: -7.025168418884277
    6. 'r' → logprob: -7.775168418884277
    7. ' new' → logprob: -8.025168418884277
    8. '[' → logprob: -8.150168418884277
    9. '(group' → logprob: -8.525168418884277
    10. '([' → logprob: -8.775168418884277

Token 487: '_members' (ID: 75388)
  Prédit: '_group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -0.026568137109279633
    2. '_members' → logprob: -3.6515681743621826
    3. 'group' → logprob: -9.026568412780762
    4. '_member' → logprob: -10.401568412780762
    5. 'members' → logprob: -10.651568412780762
    6. 'Group' → logprob: -10.901568412780762
    7. '_groups' → logprob: -11.026568412780762
    8. '   ' → logprob: -11.651568412780762
    9. '```' → logprob: -12.276568412780762
    10. '
' → logprob: -12.276568412780762

Token 488: ' has' (ID: 853)
  Prédit: ' has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.6429184079170227
    2. ' have' → logprob: -1.642918348312378
    3. 'has' → logprob: -2.017918348312378
    4. 'have' → logprob: -2.767918348312378
    5. 'potential' → logprob: -3.642918348312378
    6. ''s' → logprob: -4.642918586730957
    7. '   ' → logprob: -4.892918586730957
    8. '.p' → logprob: -5.517918586730957
    9. 'p' → logprob: -5.892918586730957
    10. ' potential' → logprob: -6.017918586730957

Token 489: ' ' (ID: 220)
  Prédit: 'potential'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'potential' → logprob: -0.05515194311738014
    2. ' potential' → logprob: -4.05515193939209
    3. 'score' → logprob: -4.18015193939209
    4. '0' → logprob: -4.55515193939209
    5. 'self' → logprob: -5.68015193939209
    6. 'a' → logprob: -6.68015193939209
    7. 'friends' → logprob: -6.80515193939209
    8. ' ' → logprob: -6.80515193939209
    9. '
' → logprob: -7.43015193939209
    10. 'p' → logprob: -7.68015193939209

Token 490: '0' (ID: 15)
  Prédit: 'potential'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'potential' → logprob: -0.0698382779955864
    2. '0' → logprob: -2.944838285446167
    3. 'self' → logprob: -4.944838047027588
    4. 'score' → logprob: -6.069838047027588
    5. 'friends' → logprob: -6.069838047027588
    6. ' potential' → logprob: -6.569838047027588
    7. 'zero' → logprob: -7.444838047027588
    8. 'a' → logprob: -8.319838523864746
    9. ' ' → logprob: -8.694838523864746
    10. '   ' → logprob: -9.319838523864746

Token 491: ' friendship' (ID: 38020)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0052084922790527
    2. ' potential' → logprob: -1.0052084922790527
    3. 'potential' → logprob: -1.5052084922790527
    4. 'in' → logprob: -4.380208492279053
    5. 'friend' → logprob: -4.505208492279053
    6. ' or' → logprob: -5.380208492279053
    7. ' for' → logprob: -5.630208492279053
    8. '_f' → logprob: -6.130208492279053
    9. '_friend' → logprob: -6.380208492279053
    10. ' ' → logprob: -6.755208492279053

Token 492: ' with' (ID: 483)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.9717325568199158
    2. '               ' → logprob: -1.9717326164245605
    3. ',' → logprob: -2.5967326164245605
    4. '           ' → logprob: -2.7217326164245605
    5. '_score' → logprob: -2.8467326164245605
    6. ' in' → logprob: -2.8467326164245605
    7. '                   ' → logprob: -3.2217326164245605
    8. 'value' → logprob: -3.7217326164245605
    9. 'and' → logprob: -3.8467326164245605
    10. '   ' → logprob: -3.9717326164245605

Token 493: ' others' (ID: 5036)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.35020002722740173
    2. 'new' → logprob: -1.3502000570297241
    3. ' new' → logprob: -3.9751999378204346
    4. ' self' → logprob: -4.600200176239014
    5. 'any' → logprob: -5.850200176239014
    6. 'other' → logprob: -6.225200176239014
    7. 'r' → logprob: -6.600200176239014
    8. ' other' → logprob: -8.725199699401855
    9. 'all' → logprob: -8.850199699401855
    10. ' any' → logprob: -8.975199699401855

Token 494: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.0735321044921875
    2. ' or' → logprob: -1.6985321044921875
    3. '               ' → logprob: -1.8235321044921875
    4. ' in' → logprob: -2.3235321044921875
    5. ':' → logprob: -2.4485321044921875
    6. ',' → logprob: -2.5735321044921875
    7. 'and' → logprob: -3.8235321044921875
    8. '                   ' → logprob: -3.8235321044921875
    9. 'in' → logprob: -5.9485321044921875
    10. ':
' → logprob: -6.3235321044921875

Token 495: ' skip' (ID: 16677)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.40188735723495483
    2. ' return' → logprob: -1.4018874168395996
    3. 'return' → logprob: -2.5268874168395996
    4. '   ' → logprob: -5.7768874168396
    5. '               ' → logprob: -6.6518874168396
    6. ' ' → logprob: -9.526886940002441
    7. '    ' → logprob: -9.776886940002441
    8. '                  ' → logprob: -9.776886940002441
    9. 'self' → logprob: -10.026886940002441
    10. '                ' → logprob: -10.026886940002441

Token 496: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023147763684391975
    2. '                
' → logprob: -4.5231475830078125
    3. '                   ' → logprob: -4.6481475830078125
    4. ':' → logprob: -6.6481475830078125
    5. '                ' → logprob: -8.523147583007812
    6. '           ' → logprob: -8.648147583007812
    7. '                    
' → logprob: -8.773147583007812
    8. '
' → logprob: -8.773147583007812
    9. ' if' → logprob: -9.148147583007812
    10. ':
' → logprob: -9.273147583007812

Token 497: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008212173357605934
    2. '                
' → logprob: -5.133212089538574
    3. ':' → logprob: -7.008212089538574
    4. ' if' → logprob: -7.258212089538574
    5. '                   ' → logprob: -8.383212089538574
    6. ' and' → logprob: -9.133212089538574
    7. '                ' → logprob: -9.258212089538574
    8. '.' → logprob: -9.758212089538574
    9. ' or' → logprob: -10.383212089538574
    10. ',' → logprob: -10.883212089538574

Token 498: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0912243127822876
    2. ' for' → logprob: -3.591224193572998
    3. 'for' → logprob: -3.716224193572998
    4. 'if' → logprob: -4.091224193572998
    5. ' if' → logprob: -4.091224193572998
    6. 'friend' → logprob: -7.341224193572998
    7. 'all' → logprob: -8.091224670410156
    8. '                
' → logprob: -8.591224670410156
    9. 'friends' → logprob: -8.716224670410156
    10. ' has' → logprob: -9.216224670410156

Token 499: ' But' (ID: 3072)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07604160904884338
    2. 'for' → logprob: -3.2010416984558105
    3. ' for' → logprob: -4.0760416984558105
    4. 'if' → logprob: -4.8260416984558105
    5. ' if' → logprob: -5.7010416984558105
    6. 'friend' → logprob: -5.9510416984558105
    7. 'friends' → logprob: -7.0760416984558105
    8. '                
' → logprob: -8.701041221618652
    9. ' friends' → logprob: -8.951041221618652
    10. 'members' → logprob: -9.451041221618652

Token 500: ' allow' (ID: 3763)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.6248632669448853
    2. 'any' → logprob: -1.6248632669448853
    3. ' True' → logprob: -1.6248632669448853
    4. 'True' → logprob: -3.2498631477355957
    5. ' all' → logprob: -4.624863147735596
    6. 'len' → logprob: -4.999863147735596
    7. 'all' → logprob: -5.124863147735596
    8. 'if' → logprob: -6.624863147735596
    9. ' not' → logprob: -6.624863147735596
    10. ' len' → logprob: -6.874863147735596

Token 501: ' single' (ID: 4590)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8816026449203491
    2. ' len' → logprob: -1.7566026449203491
    3. 'len' → logprob: -1.7566026449203491
    4. ' for' → logprob: -2.5066027641296387
    5. 'if' → logprob: -2.7566027641296387
    6. 'for' → logprob: -3.5066027641296387
    7. ' new' → logprob: -3.6316027641296387
    8. 'new' → logprob: -4.631602764129639
    9. ' all' → logprob: -4.881602764129639
    10. 'all' → logprob: -5.381602764129639

Token 502: ' member' (ID: 6027)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.467608243227005
    2. '               ' → logprob: -2.3426082134246826
    3. 'ton' → logprob: -2.7176082134246826
    4. 'if' → logprob: -3.0926082134246826
    5. '_' → logprob: -3.5926082134246826
    6. '_members' → logprob: -3.8426082134246826
    7. '-member' → logprob: -3.9676082134246826
    8. '           ' → logprob: -4.342608451843262
    9. '_member' → logprob: -4.467608451843262
    10. '-' → logprob: -4.717608451843262

Token 503: ' groups' (ID: 8896)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13432073593139648
    2. '                
' → logprob: -2.2593207359313965
    3. ' if' → logprob: -4.7593207359313965
    4. '
' → logprob: -4.7593207359313965
    5. 'if' → logprob: -6.3843207359313965
    6. '           ' → logprob: -8.009321212768555
    7. '            
' → logprob: -8.134321212768555
    8. '               
' → logprob: -8.134321212768555
    9. '    
' → logprob: -8.384321212768555
    10. '
                
' → logprob: -8.634321212768555

Token 504: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13749386370182037
    2. '                
' → logprob: -2.262493848800659
    3. '
' → logprob: -3.762493848800659
    4. ' if' → logprob: -8.512494087219238
    5. '               
' → logprob: -8.512494087219238
    6. '    
' → logprob: -9.137494087219238
    7. '                
                
' → logprob: -9.137494087219238
    8. '            
' → logprob: -9.387494087219238
    9. 'if' → logprob: -9.512494087219238
    10. '  
' → logprob: -10.137494087219238

Token 505: 'score' (ID: 21200)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.02191098779439926
    2. 'if' → logprob: -4.521911144256592
    3. ' len' → logprob: -4.646911144256592
    4. ' if' → logprob: -7.896911144256592
    5. '(len' → logprob: -8.021910667419434
    6. ')' → logprob: -8.521910667419434
    7. 'new' → logprob: -9.271910667419434
    8. '               ' → logprob: -9.396910667419434
    9. ')
' → logprob: -10.021910667419434
    10. '
' → logprob: -10.271910667419434

Token 506: '=' (ID: 28)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.1505190134048462
    2. '=' → logprob: -1.2755190134048462
    3. '==' → logprob: -1.2755190134048462
    4. '>=' → logprob: -3.6505188941955566
    5. 'if' → logprob: -3.7755188941955566
    6. ' ==' → logprob: -4.525518894195557
    7. ' if' → logprob: -4.525518894195557
    8. ')' → logprob: -4.775518894195557
    9. ' >' → logprob: -5.025518894195557
    10. 'len' → logprob: -5.150518894195557

Token 507: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006659600418061018
    2. ' ' → logprob: -5.131659507751465
    3. '1' → logprob: -7.881659507751465
    4. 'new' → logprob: -8.881659507751465
    5. '>' → logprob: -9.881659507751465
    6. '   ' → logprob: -10.506659507751465
    7. ')' → logprob: -10.631659507751465
    8. ' new' → logprob: -10.881659507751465
    9. '```' → logprob: -10.881659507751465
    10. '=' → logprob: -11.631659507751465

Token 508: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34165069460868835
    2. ')
' → logprob: -1.3416507244110107
    3. '               ' → logprob: -4.216650485992432
    4. ' or' → logprob: -5.091650485992432
    5. ' if' → logprob: -5.341650485992432
    6. 'if' → logprob: -6.466650485992432
    7. ')

' → logprob: -8.46665096282959
    8. '           ' → logprob: -9.09165096282959
    9. '),' → logprob: -9.46665096282959
    10. ' and' → logprob: -9.71665096282959

Token 509: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004804495722055435
    2. '                
' → logprob: -5.379804611206055
    3. '
' → logprob: -9.004804611206055
    4. '               
' → logprob: -11.004804611206055
    5. '       ' → logprob: -11.504804611206055
    6. '                
                
' → logprob: -11.754804611206055
    7. '              ' → logprob: -12.254804611206055
    8. '                ' → logprob: -12.379804611206055
    9. '    
' → logprob: -12.879804611206055
    10. '                   ' → logprob: -13.129804611206055

Token 510: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.061513133347034454
    2. 'if' → logprob: -3.1865131855010986
    3. 'for' → logprob: -4.3115129470825195
    4. 'friend' → logprob: -5.9365129470825195
    5. ' if' → logprob: -6.9365129470825195
    6. ' for' → logprob: -7.3115129470825195
    7. '                
' → logprob: -8.06151294708252
    8. 'friendly' → logprob: -8.93651294708252
    9. 'friends' → logprob: -9.43651294708252
    10. '                   ' → logprob: -10.68651294708252

Token 511: ' relaxed' (ID: 37021)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4671064019203186
    2. ' for' → logprob: -1.9671063423156738
    3. 'for' → logprob: -1.9671063423156738
    4. 'if' → logprob: -3.092106342315674
    5. ' if' → logprob: -3.342106342315674
    6. 'friend' → logprob: -4.842106342315674
    7. '                
' → logprob: -6.842106342315674
    8. 'all' → logprob: -7.092106342315674
    9. 'members' → logprob: -7.717106342315674
    10. 'friends' → logprob: -7.717106342315674

Token 512: ' to' (ID: 316)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.664645791053772
    2. 'if' → logprob: -0.789645791053772
    3. ':' → logprob: -4.664645671844482
    4. ' =' → logprob: -5.664645671844482
    5. '               ' → logprob: -5.789645671844482
    6. '_' → logprob: -5.914645671844482
    7. '            
' → logprob: -6.664645671844482
    8. '                
' → logprob: -6.789645671844482
    9. ' for' → logprob: -6.789645671844482
    10. '           ' → logprob: -6.914645671844482

Token 513: ' not' (ID: 625)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.0000187158584595
    2. 'all' → logprob: -1.1250187158584595
    3. ' True' → logprob: -2.00001859664917
    4. ' all' → logprob: -2.50001859664917
    5. 'if' → logprob: -3.50001859664917
    6. 'len' → logprob: -3.62501859664917
    7. 'any' → logprob: -4.37501859664917
    8. 'not' → logprob: -5.25001859664917
    9. ' len' → logprob: -5.62501859664917
    10. ' any' → logprob: -5.87501859664917

Token 514: ' prune' (ID: 140388)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.894099771976471
    2. 'any' → logprob: -1.3940997123718262
    3. ' all' → logprob: -1.6440997123718262
    4. ' any' → logprob: -3.144099712371826
    5. 'new' → logprob: -3.644099712371826
    6. '(new' → logprob: -4.269099712371826
    7. '(all' → logprob: -4.394099712371826
    8. ' new' → logprob: -4.644099712371826
    9. ' (' → logprob: -4.894099712371826
    10. 'include' → logprob: -5.269099712371826

Token 515: ' here' (ID: 2105)
  Prédit: '                
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                
' → logprob: -0.29743364453315735
    2. '               ' → logprob: -1.547433614730835
    3. '
' → logprob: -4.047433853149414
    4. '<|end|>' → logprob: -5.547433853149414
    5. '                
                
' → logprob: -5.672433853149414
    6. '                ' → logprob: -5.672433853149414
    7. '  
' → logprob: -5.797433853149414
    8. ' 
' → logprob: -5.922433853149414
    9. '\' → logprob: -6.797433853149414
    10. '                 
' → logprob: -6.797433853149414

Token 516: ' because' (ID: 2236)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023388847708702087
    2. '                
' → logprob: -3.7733888626098633
    3. '                
                
' → logprob: -9.773388862609863
    4. '#' → logprob: -10.523388862609863
    5. '                ' → logprob: -11.148388862609863
    6. '                

' → logprob: -11.523388862609863
    7. '               
' → logprob: -11.898388862609863
    8. '              ' → logprob: -12.148388862609863
    9. '```' → logprob: -12.648388862609863
    10. '\' → logprob: -13.023388862609863

Token 517: ' ' (ID: 220)
  Prédit: 'friend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'friend' → logprob: -0.9320906400680542
    2. 'potential' → logprob: -1.5570906400680542
    3. 'the' → logprob: -2.3070907592773438
    4. 'some' → logprob: -2.9320907592773438
    5. 'self' → logprob: -3.8070907592773438
    6. 'we' → logprob: -3.8070907592773438
    7. 'pr' → logprob: -3.8070907592773438
    8. '0' → logprob: -4.057090759277344
    9. 'mut' → logprob: -4.307090759277344
    10. ' the' → logprob: -4.307090759277344

Token 518: '0' (ID: 15)
  Prédit: 'potential'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'potential' → logprob: -0.7788991928100586
    2. 'we' → logprob: -2.0288991928100586
    3. 'some' → logprob: -2.6538991928100586
    4. 'the' → logprob: -3.1538991928100586
    5. 'minimal' → logprob: -3.1538991928100586
    6. 'friend' → logprob: -3.1538991928100586
    7. 'self' → logprob: -3.7788991928100586
    8. 'it' → logprob: -3.7788991928100586
    9. 'of' → logprob: -3.7788991928100586
    10. 'it's' → logprob: -3.9038991928100586

Token 519: ' minimal' (ID: 19957)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.844641923904419
    2. 'friend' → logprob: -1.219641923904419
    3. 'in' → logprob: -2.594641923904419
    4. 'potential' → logprob: -2.594641923904419
    5. ' potential' → logprob: -2.844641923904419
    6. ' friendship' → logprob: -4.71964168548584
    7. ')' → logprob: -4.96964168548584
    8. ' not' → logprob: -5.34464168548584
    9. 's' → logprob: -5.46964168548584
    10. ' is' → logprob: -5.59464168548584

Token 520: ' would' (ID: 1481)
  Prédit: 'friend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'friend' → logprob: -0.019298745319247246
    2. ' friendliness' → logprob: -4.769298553466797
    3. ')' → logprob: -5.769298553466797
    4. 'friendly' → logprob: -6.394298553466797
    5. '_friend' → logprob: -7.144298553466797
    6. 'friends' → logprob: -7.269298553466797
    7. 's' → logprob: -7.519298553466797
    8. 'value' → logprob: -8.019298553466797
    9. 'for' → logprob: -8.019298553466797
    10. '   ' → logprob: -8.144298553466797

Token 521: ' yield' (ID: 14376)
  Prédit: 'mean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mean' → logprob: -1.8300297260284424
    2. 'allow' → logprob: -1.9550297260284424
    3. 'make' → logprob: -2.4550297260284424
    4. ' mean' → logprob: -2.4550297260284424
    5. 'cause' → logprob: -2.8300297260284424
    6. ' lead' → logprob: -2.9550297260284424
    7. ' cause' → logprob: -2.9550297260284424
    8. 'reduce' → logprob: -3.3300297260284424
    9. 'be' → logprob: -3.5800297260284424
    10. ' not' → logprob: -3.7050297260284424

Token 522: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016716759651899338
    2. 'score' → logprob: -4.266716957092285
    3. 'zero' → logprob: -7.516716957092285
    4. 'lower' → logprob: -7.516716957092285
    5. 'no' → logprob: -7.891716957092285
    6. 'a' → logprob: -8.016716957092285
    7. ' ' → logprob: -8.141716957092285
    8. 'low' → logprob: -8.266716957092285
    9. ' score' → logprob: -9.891716957092285
    10. '   ' → logprob: -10.266716957092285

Token 523: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010626942850649357
    2. 'score' → logprob: -4.635626792907715
    3. 'zero' → logprob: -7.510626792907715
    4. 'no' → logprob: -9.135626792907715
    5. ' ' → logprob: -10.010626792907715
    6. 's' → logprob: -10.010626792907715
    7. '```' → logprob: -10.885626792907715
    8. '<=' → logprob: -11.010626792907715
    9. 'im' → logprob: -11.135626792907715
    10. 'new' → logprob: -11.510626792907715

Token 524: ' satisfaction' (ID: 24333)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20430274307727814
    2. '                
' → logprob: -1.7043027877807617
    3. ',' → logprob: -6.454302787780762
    4. '                ' → logprob: -8.204302787780762
    5. '.' → logprob: -8.329302787780762
    6. '                
                
' → logprob: -9.204302787780762
    7. '               
' → logprob: -9.329302787780762
    8. '                    
' → logprob: -9.579302787780762
    9. '            
' → logprob: -9.704302787780762
    10. '                        
' → logprob: -9.829302787780762

Token 525: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001965627772733569
    2. '                
' → logprob: -6.251965522766113
    3. ',' → logprob: -11.626965522766113
    4. 'self' → logprob: -11.876965522766113
    5. '                
                
' → logprob: -12.126965522766113
    6. '                ' → logprob: -12.751965522766113
    7. '#' → logprob: -12.876965522766113
    8. '              ' → logprob: -13.626965522766113
    9. 'new' → logprob: -13.626965522766113
    10. '       ' → logprob: -13.876965522766113

Token 526: ' that' (ID: 484)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.6433660984039307
    2. 'new' → logprob: -1.8933660984039307
    3. 'that' → logprob: -2.2683660984039307
    4. 'any' → logprob: -2.3933660984039307
    5. 'some' → logprob: -2.3933660984039307
    6. 'this' → logprob: -2.6433660984039307
    7. 'group' → logprob: -2.6433660984039307
    8. 'multiple' → logprob: -2.7683660984039307
    9. 'groups' → logprob: -3.2683660984039307
    10. 'now' → logprob: -3.6433660984039307

Token 527: ' rabbit' (ID: 67153)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.10343652963638306
    2. 'token' → logprob: -3.3534364700317383
    3. 'subset' → logprob: -3.6034364700317383
    4. 'candidate' → logprob: -4.478436470031738
    5. ' group' → logprob: -4.728436470031738
    6. 'new' → logprob: -5.603436470031738
    7. 'member' → logprob: -5.853436470031738
    8. 'class' → logprob: -6.853436470031738
    9. 'branch' → logprob: -7.103436470031738
    10. 'iteration' → logprob: -7.103436470031738

Token 528: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009967735037207603
    2. '                
' → logprob: -4.634967803955078
    3. ',' → logprob: -9.134967803955078
    4. '                
                
' → logprob: -10.384967803955078
    5. '<|end|>' → logprob: -10.759967803955078
    6. ')' → logprob: -12.009967803955078
    7. '#' → logprob: -12.134967803955078
    8. '                ' → logprob: -12.134967803955078
    9. '              ' → logprob: -12.384967803955078
    10. '\' → logprob: -12.509967803955078

Token 529: ' but' (ID: 889)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18152283132076263
    2. '                
' → logprob: -2.681522846221924
    3. '#' → logprob: -3.556522846221924
    4. ' but' → logprob: -3.806522846221924
    5. ' and' → logprob: -4.181522846221924
    6. '                ' → logprob: -5.056522846221924
    7. ' 
' → logprob: -5.181522846221924
    8. '.' → logprob: -6.306522846221924
    9. ')' → logprob: -6.431522846221924
    10. '    
' → logprob: -6.431522846221924

Token 530: ' maybe' (ID: 10112)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'we' → logprob: -1.597063422203064
    2. 'other' → logprob: -1.847063422203064
    3. 'including' → logprob: -2.3470635414123535
    4. 'overall' → logprob: -2.3470635414123535
    5. 'the' → logprob: -2.4720635414123535
    6. 'might' → logprob: -3.2220635414123535
    7. 'still' → logprob: -3.3470635414123535
    8. 'group' → logprob: -3.4720635414123535
    9. 'some' → logprob: -3.7220635414123535
    10. 'may' → logprob: -3.7220635414123535

Token 531: ' group' (ID: 3566)
  Prédit: 'some'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'some' → logprob: -1.3987376689910889
    2. 'other' → logprob: -1.7737376689910889
    3. 'including' → logprob: -2.148737668991089
    4. 'the' → logprob: -2.273737668991089
    5. 'better' → logprob: -2.898737668991089
    6. 'overall' → logprob: -3.148737668991089
    7. 'group' → logprob: -3.398737668991089
    8. 'others' → logprob: -3.523737668991089
    9. 'new' → logprob: -3.523737668991089
    10. 'someone' → logprob: -3.773737668991089

Token 532: ' still' (ID: 2928)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.4710185527801514
    2. 'members' → logprob: -1.8460185527801514
    3. ' still' → logprob: -2.4710185527801514
    4. ' could' → logprob: -2.5960185527801514
    5. ' might' → logprob: -2.7210185527801514
    6. ' continues' → logprob: -2.7210185527801514
    7. ' is' → logprob: -2.8460185527801514
    8. ' may' → logprob: -3.4710185527801514
    9. 'score' → logprob: -3.5960185527801514
    10. ' members' → logprob: -3.5960185527801514

Token 533: ' improves' (ID: 45865)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.7773910760879517
    2. 'score' → logprob: -2.152390956878662
    3. 'can' → logprob: -2.277390956878662
    4. 'scores' → logprob: -2.527390956878662
    5. 'could' → logprob: -2.902390956878662
    6. 's' → logprob: -3.027390956878662
    7. 'might' → logprob: -3.277390956878662
    8. 'works' → logprob: -4.277390956878662
    9. 'max' → logprob: -4.527390956878662
    10. 'have' → logprob: -4.902390956878662

Token 534: ' overall' (ID: 10705)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07511967420578003
    2. '                
' → logprob: -2.825119733810425
    3. '
' → logprob: -4.450119495391846
    4. 'new' → logprob: -7.700119495391846
    5. ',' → logprob: -8.575119972229004
    6. '                
                
' → logprob: -8.575119972229004
    7. '                ' → logprob: -9.450119972229004
    8. '  
' → logprob: -9.825119972229004
    9. '<|end|>' → logprob: -9.825119972229004
    10. ' 
' → logprob: -9.950119972229004

Token 535: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10277287662029266
    2. '                
' → logprob: -2.3527729511260986
    3. '
' → logprob: -7.2277727127075195
    4. '                
                
' → logprob: -7.9777727127075195
    5. '\' → logprob: -8.10277271270752
    6. ',' → logprob: -8.47777271270752
    7. '<|end|>' → logprob: -8.60277271270752
    8. '  
' → logprob: -8.85277271270752
    9. 'new' → logprob: -8.97777271270752
    10. '                ' → logprob: -9.22777271270752

Token 536: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006826075259596109
    2. '                
' → logprob: -5.006825923919678
    3. '                
                
' → logprob: -11.006826400756836
    4. ',' → logprob: -11.256826400756836
    5. 'self' → logprob: -11.256826400756836
    6. '
' → logprob: -11.256826400756836
    7. '       ' → logprob: -11.381826400756836
    8. 'new' → logprob: -11.631826400756836
    9. '                ' → logprob: -12.631826400756836
    10. '<|end|>' → logprob: -12.881826400756836

Token 537: ' self' (ID: 1051)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.44957488775253296
    2. 'self' (adapté à ' self') → logprob: -1.1995749473571777
    3. ' self' → logprob: -3.3245749473571777
    4. '                
' → logprob: -3.8245749473571777
    5. '
' → logprob: -6.199574947357178
    6. '#' → logprob: -8.19957447052002
    7. 'new' → logprob: -9.07457447052002
    8. 'if' → logprob: -9.19957447052002
    9. '                
                
' → logprob: -9.19957447052002
    10. '\' → logprob: -10.57457447052002

Token 538: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.747814349073451e-05
    2. '.' → logprob: -12.000017166137695
    3. '_recursive' → logprob: -12.000017166137695
    4. ']._' → logprob: -14.125017166137695
    5. '_' → logprob: -14.625017166137695
    6. '           ' → logprob: -14.750017166137695
    7. ')._' → logprob: -14.750017166137695
    8. ' .' → logprob: -14.750017166137695
    9. '_rec' → logprob: -15.375017166137695
    10. '               ' → logprob: -15.625017166137695

Token 539: 'recursive' (ID: 129128)
  Prédit: 'recursive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'recursive' → logprob: -0.10020925104618073
    2. 'im' → logprob: -2.3502092361450195
    3. 'rec' → logprob: -14.85020923614502
    4. ' recursive' → logprob: -14.85020923614502
    5. '_recursive' → logprob: -14.85020923614502
    6. 'Recursive' → logprob: -15.47520923614502
    7. '_im' → logprob: -15.97520923614502
    8. 're' → logprob: -16.225210189819336
    9. 'iter' → logprob: -16.350210189819336
    10. 'heur' → logprob: -16.475210189819336

Token 540: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.0008065330912359059
    2. 'search' → logprob: -7.1258063316345215
    3. 'Search' → logprob: -13.25080680847168
    4. 'earch' → logprob: -16.75080680847168
    5. '_include' → logprob: -17.00080680847168
    6. '_call' → logprob: -17.50080680847168
    7. '_check' → logprob: -17.50080680847168
    8. '-search' → logprob: -17.75080680847168
    9. ' search' → logprob: -17.87580680847168
    10. '_SEARCH' → logprob: -18.00080680847168

Token 541: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -6.704273118884885e-07
    2. 'new' → logprob: -14.875000953674316
    3. '(' → logprob: -16.0
    4. ',new' → logprob: -16.375
    5. ' new' → logprob: -18.875
    6. '(
' → logprob: -19.0
    7. ')new' → logprob: -19.5
    8. '```' → logprob: -19.625
    9. ' (' → logprob: -19.75
    10. '=new' → logprob: -20.25

Token 542: '_group' (ID: 15990)
  Prédit: '_group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -0.004246623255312443
    2. '_members' → logprob: -5.504246711730957
    3. 'Group' → logprob: -9.504246711730957
    4. 'group' → logprob: -10.504246711730957
    5. '_groups' → logprob: -10.754246711730957
    6. 'roup' → logprob: -11.004246711730957
    7. 'members' → logprob: -11.754246711730957
    8. 'new' → logprob: -12.254246711730957
    9. 'Members' → logprob: -12.879246711730957
    10. '_index' → logprob: -13.379246711730957

Token 543: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001939938636496663
    2. ',index' → logprob: -6.25193977355957
    3. ' ,' → logprob: -11.50193977355957
    4. '(index' → logprob: -14.50193977355957
    5. 'index' → logprob: -14.62693977355957
    6. ',
' → logprob: -15.87693977355957
    7. ',new' → logprob: -17.37693977355957
    8. '=index' → logprob: -17.50193977355957
    9. '[index' → logprob: -17.62693977355957
    10. '           ' → logprob: -17.62693977355957

Token 544: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.2014143168926239
    2. ' index' → logprob: -1.7014143466949463
    3. '   ' → logprob: -14.701414108276367
    4. ' ' → logprob: -15.076414108276367
    5. '               ' → logprob: -16.076414108276367
    6. '                   ' → logprob: -16.076414108276367
    7. '           ' → logprob: -17.576414108276367
    8. '  ' → logprob: -17.576414108276367
    9. '       ' → logprob: -17.951414108276367
    10. '(index' → logprob: -17.951414108276367

Token 545: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015030752401798964
    2. ' +' → logprob: -6.501502990722656
    3. '+
' → logprob: -14.876502990722656
    4. '+)' → logprob: -14.876502990722656
    5. ')' → logprob: -17.501502990722656
    6. '1' → logprob: -18.001502990722656
    7. ')+' → logprob: -18.251502990722656
    8. '＋' → logprob: -18.376502990722656
    9. '()+' → logprob: -19.126502990722656
    10. ' +
' → logprob: -19.251502990722656

Token 546: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.750003814697266
    3. '2' → logprob: -14.125003814697266
    4. '   ' → logprob: -16.375003814697266
    5. '```' → logprob: -16.625003814697266
    6. '0' → logprob: -17.187503814697266
    7. '
' → logprob: -17.375003814697266
    8. '               ' → logprob: -17.500003814697266
    9. '           ' → logprob: -17.500003814697266
    10. ')' → logprob: -17.687503814697266

Token 547: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.13388703338569e-06
    2. '       ' → logprob: -12.625009536743164
    3. '               ' → logprob: -13.000009536743164
    4. ' )' → logprob: -13.500009536743164
    5. ')
' → logprob: -13.625009536743164
    6. '<|end|>' → logprob: -14.375009536743164
    7. '           ' → logprob: -15.875009536743164
    8. '   ' → logprob: -16.375009536743164
    9. ')return' → logprob: -17.625009536743164
    10. ')#' → logprob: -17.625009536743164

Token 548: '            
' (ID: 7048)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2599799931049347
    2. '<|end|>' → logprob: -1.5099799633026123
    3. '<|end|>' → logprob: -5.509980201721191
    4. 'return' → logprob: -7.134980201721191
    5. ')' → logprob: -7.259980201721191
    6. '        ' → logprob: -7.259980201721191
    7. '        
' → logprob: -7.384980201721191
    8. '   ' → logprob: -8.384980201721191
    9. '```' → logprob: -8.509980201721191
    10. '      ' → logprob: -9.259980201721191

Token 549: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0061278678476810455
    2. '   ' → logprob: -5.631127834320068
    3. '<|end|>' → logprob: -7.006127834320068
    4. 'return' → logprob: -7.631127834320068
    5. ')' → logprob: -7.881127834320068
    6. '        
' → logprob: -8.881128311157227
    7. 'solver' → logprob: -9.256128311157227
    8. '           ' → logprob: -9.631128311157227
    9. 'def' → logprob: -9.756128311157227
    10. '        ' → logprob: -9.881128311157227

Token 550: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.474356472492218
    2. '       ' → logprob: -0.974356472492218
    3. '   ' → logprob: -8.724356651306152
    4. '        
' → logprob: -9.849356651306152
    5. '           ' → logprob: -10.224356651306152
    6. ' def' → logprob: -11.099356651306152
    7. 'return' → logprob: -12.349356651306152
    8. '	def' → logprob: -12.724356651306152
    9. '            
' → logprob: -13.599356651306152
    10. '        ' → logprob: -14.224356651306152

Token 551: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.23673902451992035
    2. ' solve' → logprob: -2.861738920211792
    3. 'run' → logprob: -2.986738920211792
    4. 'get' → logprob: -2.986738920211792
    5. 'max' → logprob: -3.486738920211792
    6. ' run' → logprob: -4.986739158630371
    7. 'find' → logprob: -5.361739158630371
    8. ' max' → logprob: -5.611739158630371
    9. ' get' → logprob: -5.736739158630371
    10. 'maximize' → logprob: -6.486739158630371

Token 552: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005787697155028582
    2. '(' → logprob: -7.500578880310059
    3. ' (' → logprob: -10.625578880310059
    4. '(s' → logprob: -14.250578880310059
    5. 'self' → logprob: -14.875578880310059
    6. '(
' → logprob: -15.750578880310059
    7. '       ' → logprob: -16.250577926635742
    8. '(sel' → logprob: -16.250577926635742
    9. '   ' → logprob: -16.500577926635742
    10. '(Self' → logprob: -16.875577926635742

Token 553: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.032123178243637085
    2. ',' → logprob: -3.78212308883667
    3. 'self' → logprob: -5.03212308883667
    4. '(self' → logprob: -6.78212308883667
    5. '):
' → logprob: -6.78212308883667
    6. ',self' → logprob: -11.407123565673828
    7. ' ):' → logprob: -11.657123565673828
    8. ' self' → logprob: -12.032123565673828
    9. '   ' → logprob: -12.532123565673828
    10. ')' → logprob: -12.657123565673828

Token 554: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11572889983654022
    2. '       ' → logprob: -2.3657288551330566
    3. 'return' → logprob: -4.365728855133057
    4. ' return' → logprob: -6.615728855133057
    5. 'self' → logprob: -7.115728855133057
    6. '```' → logprob: -7.990728855133057
    7. '
' → logprob: -9.115729331970215
    8. 'result' → logprob: -10.490729331970215
    9. ' self' → logprob: -10.990729331970215
    10. '   ' → logprob: -11.990729331970215

Token 555: ' initial' (ID: 4871)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3474707305431366
    2. 'self' → logprob: -1.347470760345459
    3. 'group' → logprob: -4.222470760345459
    4. 'initial' (adapté à ' initial') → logprob: -5.097470760345459
    5. 'start' → logprob: -5.222470760345459
    6. '               ' → logprob: -5.347470760345459
    7. 'best' → logprob: -6.347470760345459
    8. ' return' → logprob: -7.347470760345459
    9. 'root' → logprob: -9.3474702835083
    10. ' self' → logprob: -9.3474702835083

Token 556: '_group' (ID: 15990)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5244022011756897
    2. '_group' → logprob: -1.524402141571045
    3. 'Group' → logprob: -2.149402141571045
    4. '=' → logprob: -2.649402141571045
    5. ' Group' → logprob: -6.774402141571045
    6. 'Candidate' → logprob: -7.149402141571045
    7. '_candidate' → logprob: -7.274402141571045
    8. '_Group' → logprob: -8.899402618408203
    9. ' group' → logprob: -9.274402618408203
    10. 'group' → logprob: -9.274402618408203

Token 557: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47439536452293396
    2. ' =' → logprob: -0.9743953943252563
    3. '=[]' → logprob: -8.099395751953125
    4. '=C' → logprob: -11.474395751953125
    5. '(' → logprob: -14.224395751953125
    6. ')' → logprob: -14.474395751953125
    7. '[]' → logprob: -14.599395751953125
    8. '()' → logprob: -14.599395751953125
    9. '=None' → logprob: -14.849395751953125
    10. '(C' → logprob: -14.849395751953125

Token 558: ' Candidate' (ID: 81541)
  Prédit: 'Candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Candidate' → logprob: -0.03804149478673935
    2. ' Candidate' → logprob: -3.288041591644287
    3. '_candidate' → logprob: -18.663042068481445
    4. '           ' → logprob: -19.288042068481445
    5. ' candidate' → logprob: -19.413042068481445
    6. 'Cand' → logprob: -20.538042068481445
    7. 'candidate' → logprob: -20.788042068481445
    8. 'Candidates' → logprob: -20.913042068481445
    9. ' ' → logprob: -21.163042068481445
    10. '   ' → logprob: -22.038042068481445

Token 559: 'Group' (ID: 2748)
  Prédit: 'Group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Group' → logprob: 0.0
    2. '_group' → logprob: -19.125
    3. 'group' → logprob: -19.375
    4. ' Group' → logprob: -19.75
    5. 'roup' → logprob: -19.875
    6. '<Group' → logprob: -20.125
    7. '	Group' → logprob: -20.875
    8. '(Group' → logprob: -20.875
    9. 'Groups' → logprob: -21.0
    10. 'G' → logprob: -21.625

Token 560: '([])
' (ID: 91082)
  Prédit: '([]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([]' → logprob: -5.073596548754722e-05
    2. '[]' → logprob: -10.25005054473877
    3. '([])
' → logprob: -11.12505054473877
    4. '(' → logprob: -14.75005054473877
    5. '([' → logprob: -16.250051498413086
    6. '([],' → logprob: -16.750051498413086
    7. '()' → logprob: -19.750051498413086
    8. '([]);
' → logprob: -20.000051498413086
    9. '[]}' → logprob: -20.000051498413086
    10. '=[]' → logprob: -20.250051498413086

Token 561: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00027933192905038595
    2. '       ' → logprob: -8.250279426574707
    3. 'self' → logprob: -12.375279426574707
    4. ')' → logprob: -12.625279426574707
    5. ',' → logprob: -13.125279426574707
    6. '           ' → logprob: -13.250279426574707
    7. '              ' → logprob: -13.625279426574707
    8. 'return' → logprob: -13.625279426574707
    9. '		       ' → logprob: -13.875279426574707
    10. '			' → logprob: -14.250279426574707

Token 562: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.027276240289211273
    2. '               ' → logprob: -3.7772762775421143
    3. 'return' → logprob: -5.527276039123535
    4. ' self' → logprob: -10.027276039123535
    5. '       ' → logprob: -13.652276039123535
    6. '           ' → logprob: -16.40227699279785
    7. ' return' → logprob: -16.52727699279785
    8. '	self' → logprob: -16.65227699279785
    9. '(self' → logprob: -16.77727699279785
    10. '```' → logprob: -16.90227699279785

Token 563: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -2.534558552724775e-05
    2. '.solve' → logprob: -11.375025749206543
    3. '_recursive' → logprob: -12.125025749206543
    4. '.' → logprob: -12.750025749206543
    5. ' .' → logprob: -12.750025749206543
    6. ')._' → logprob: -14.500025749206543
    7. '.\' → logprob: -14.500025749206543
    8. ']._' → logprob: -14.500025749206543
    9. '.rec' → logprob: -15.000025749206543
    10. 'solve' → logprob: -16.000024795532227

Token 564: 'recursive' (ID: 129128)
  Prédit: 'recursive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'recursive' → logprob: -4.320199877838604e-07
    2. '_recursive' → logprob: -14.875
    3. '```' → logprob: -17.25
    4. ' recursive' → logprob: -17.75
    5. '
' → logprob: -19.125
    6. 'im' → logprob: -19.875
    7. '

' → logprob: -20.375
    8. '递' → logprob: -20.5
    9. '`' → logprob: -20.625
    10. 'Recursive' → logprob: -21.375

Token 565: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.0001093841710826382
    2. 'search' → logprob: -9.125109672546387
    3. 'Search' → logprob: -15.125109672546387
    4. 'earch' → logprob: -16.75010871887207
    5. '_group' → logprob: -18.75010871887207
    6. '_SEARCH' → logprob: -19.25010871887207
    7. 'group' → logprob: -20.12510871887207
    8. '搜索' → logprob: -20.37510871887207
    9. '_Search' → logprob: -20.37510871887207
    10. '_check' → logprob: -20.62510871887207

Token 566: '(initial' (ID: 63456)
  Prédit: '(initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(initial' → logprob: -2.1008713702030946e-06
    2. 'initial' → logprob: -13.375001907348633
    3. '(' → logprob: -14.750001907348633
    4. ' (' → logprob: -17.250001907348633
    5. ' initial' → logprob: -17.250001907348633
    6. '(
' → logprob: -17.375001907348633
    7. '(original' → logprob: -18.500001907348633
    8. '(existing' → logprob: -18.875001907348633
    9. '	initial' → logprob: -19.125001907348633
    10. '(empty' → logprob: -19.750001907348633

Token 567: '_group' (ID: 15990)
  Prédit: '_group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -1.981667537620524e-06
    2. 'group' → logprob: -13.500001907348633
    3. 'Group' → logprob: -15.375001907348633
    4. '_index' → logprob: -16.125001907348633
    5. 'roup' → logprob: -16.500001907348633
    6. '_groups' → logprob: -17.375001907348633
    7. ' group' → logprob: -17.500001907348633
    8. '_Group' → logprob: -17.625001907348633
    9. '_GROUP' → logprob: -17.750001907348633
    10. ',' → logprob: -18.000001907348633

Token 568: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023417205375153571
    2. '0' → logprob: -8.375234603881836
    3. ' ,' → logprob: -12.750234603881836
    4. ',
' → logprob: -15.250234603881836
    5. '               ' → logprob: -15.375234603881836
    6. '1' → logprob: -16.000234603881836
    7. ' ' → logprob: -17.500234603881836
    8. '           ' → logprob: -17.875234603881836
    9. '```' → logprob: -17.875234603881836
    10. '   ' → logprob: -18.000234603881836

Token 569: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '           ' → logprob: -17.2500057220459
    4. '   ' → logprob: -17.8750057220459
    5. '۰' → logprob: -19.2500057220459
    6. '               ' → logprob: -19.5000057220459
    7. '       ' → logprob: -19.5000057220459
    8. ')' → logprob: -20.0000057220459
    9. '00' → logprob: -20.3125057220459
    10. '                   ' → logprob: -20.3750057220459

Token 570: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '           ' → logprob: -18.25
    4. '   ' → logprob: -19.0
    5. '00' → logprob: -19.75
    6. '       ' → logprob: -19.75
    7. '۰' → logprob: -20.375
    8. '000' → logprob: -20.625
    9. '               ' → logprob: -20.875
    10. '```' → logprob: -21.25

Token 571: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004133968614041805
    2. ')
' → logprob: -5.504134178161621
    3. '               ' → logprob: -9.879134178161621
    4. '       ' → logprob: -13.004134178161621
    5. ' )' → logprob: -13.754134178161621
    6. ')
' → logprob: -14.879134178161621
    7. ')return' → logprob: -15.254134178161621
    8. '           ' → logprob: -16.004133224487305
    9. ')

' → logprob: -16.504133224487305
    10. ' )
' → logprob: -17.629133224487305

Token 572: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007282786536961794
    2. 'return' → logprob: -7.250728130340576
    3. ' return' → logprob: -11.750728607177734
    4. '           ' → logprob: -11.875728607177734
    5. '       ' → logprob: -13.500728607177734
    6. '                   ' → logprob: -14.250728607177734
    7. '
' → logprob: -14.500728607177734
    8. '```' → logprob: -14.625728607177734
    9. '                
' → logprob: -16.125728607177734
    10. '              ' → logprob: -16.375728607177734

Token 573: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0030285713728517294
    2. '               ' → logprob: -6.003028392791748
    3. ' return' → logprob: -7.503028392791748
    4. '       ' → logprob: -13.628028869628906
    5. '	return' → logprob: -17.878028869628906
    6. '   ' → logprob: -18.878028869628906
    7. '           ' → logprob: -19.003028869628906
    8. '{return' → logprob: -19.628028869628906
    9. '```' → logprob: -20.628028869628906
    10. 'eturn' → logprob: -20.878028869628906

Token 574: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00338114146143198
    2. ' self' → logprob: -5.753381252288818
    3. '(self' → logprob: -8.50338077545166
    4. ' (' → logprob: -15.00338077545166
    5. '   ' → logprob: -15.37838077545166
    6. '[self' → logprob: -16.128381729125977
    7. '	self' → logprob: -17.378381729125977
    8. ' ' → logprob: -18.378381729125977
    9. '           ' → logprob: -18.628381729125977
    10. '       ' → logprob: -19.128381729125977

Token 575: '.best' (ID: 95548)
  Prédit: '.best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.best' → logprob: -2.546478935983032e-05
    2. 'best' → logprob: -10.875025749206543
    3. '	best' → logprob: -13.000025749206543
    4. '           ' → logprob: -14.375025749206543
    5. ').' → logprob: -14.375025749206543
    6. ' best' → logprob: -14.500025749206543
    7. '_best' → logprob: -14.750025749206543
    8. ' .' → logprob: -15.125025749206543
    9. '.' → logprob: -15.625025749206543
    10. '<|end|>' → logprob: -15.625025749206543

Token 576: '_score' (ID: 22555)
  Prédit: '_group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -0.011048054322600365
    2. '_score' → logprob: -4.511047840118408
    3. 'Group' → logprob: -15.636048316955566
    4. '_groups' → logprob: -17.76104736328125
    5. '_Group' → logprob: -18.01104736328125
    6. '_best' → logprob: -18.38604736328125
    7. '_result' → logprob: -18.51104736328125
    8. 'group' → logprob: -18.51104736328125
    9. 'score' → logprob: -19.13604736328125
    10. 'Score' → logprob: -19.26104736328125

Token 577: '
        
' (ID: 20417)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016249842941761017
    2. ',
' → logprob: -5.391249656677246
    3. '               ' → logprob: -5.391249656677246
    4. '           ' → logprob: -5.516249656677246
    5. '       ' → logprob: -6.391249656677246
    6. '<|end|>' → logprob: -7.516249656677246
    7. ' ,' → logprob: -8.516249656677246
    8. 'return' → logprob: -8.891249656677246
    9. '            
' → logprob: -9.266249656677246
    10. ' and' → logprob: -9.641249656677246

Token 578: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009005005122162402
    2. '   ' → logprob: -7.7509002685546875
    3. 'def' → logprob: -8.875900268554688
    4. '           ' → logprob: -9.000900268554688
    5. 'return' → logprob: -9.375900268554688
    6. 'r' → logprob: -9.875900268554688
    7. '        
' → logprob: -10.500900268554688
    8. '      ' → logprob: -11.500900268554688
    9. '    
' → logprob: -12.125900268554688
    10. '        ' → logprob: -12.250900268554688

Token 579: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.1156025379896164
    2. '       ' → logprob: -2.615602493286133
    3. 'return' → logprob: -3.365602493286133
    4. ' solver' → logprob: -6.990602493286133
    5. 'solution' → logprob: -7.740602493286133
    6. ' return' → logprob: -9.990602493286133
    7. 's' → logprob: -10.115602493286133
    8. 'result' → logprob: -10.365602493286133
    9. 'sol' → logprob: -11.865602493286133
    10. 'resolver' → logprob: -12.240602493286133

Token 580: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007607100997120142
    2. '=' → logprob: -4.8826069831848145
    3. '.' → logprob: -15.382607460021973
    4. ' ' → logprob: -15.507607460021973
    5. '(' → logprob: -16.257606506347656
    6. '        ' → logprob: -16.382606506347656
    7. '   ' → logprob: -16.507606506347656
    8. '    ' → logprob: -16.757606506347656
    9. '.solve' → logprob: -16.757606506347656
    10. '=s' → logprob: -17.257606506347656

Token 581: ' Solver' (ID: 141655)
  Prédit: 'Solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -0.04858816787600517
    2. ' Solver' → logprob: -3.048588275909424
    3. '       ' → logprob: -15.298587799072266
    4. 'Scheduler' → logprob: -15.548587799072266
    5. 'Solution' → logprob: -15.923587799072266
    6. ' solver' → logprob: -16.298587799072266
    7. '_solver' → logprob: -16.798587799072266
    8. 'solver' → logprob: -17.548587799072266
    9. 'Sol' → logprob: -17.673587799072266
    10. '           ' → logprob: -18.173587799072266

Token 582: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.375004768371582
    3. ' (' → logprob: -17.750003814697266
    4. '(
' → logprob: -17.875003814697266
    5. '(this' → logprob: -17.875003814697266
    6. '[self' → logprob: -18.500003814697266
    7. '       ' → logprob: -18.875003814697266
    8. '(s' → logprob: -19.375003814697266
    9. ',self' → logprob: -19.500003814697266
    10. '((' → logprob: -19.625003814697266

Token 583: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -5.991464786347933e-05
    2. '.' → logprob: -9.750060081481934
    3. ' .' → logprob: -14.250060081481934
    4. 'r' → logprob: -14.875060081481934
    5. ').' → logprob: -15.000060081481934
    6. '.rabbit' → logprob: -15.125060081481934
    7. 'abbit' → logprob: -18.250059127807617
    8. ')' → logprob: -18.500059127807617
    9. ' rabbits' → logprob: -19.000059127807617
    10. '.R' → logprob: -19.125059127807617

Token 584: 'abb' (ID: 13538)
  Prédit: 'abb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abb' → logprob: -0.00036953974631614983
    2. 'ab' → logprob: -8.12536907196045
    3. 'abbit' → logprob: -9.75036907196045
    4. 'bb' → logprob: -12.00036907196045
    5. 'b' → logprob: -12.37536907196045
    6. 'a' → logprob: -14.00036907196045
    7. 'e' → logprob: -14.37536907196045
    8. 'bits' → logprob: -14.62536907196045
    9. '   ' → logprob: -15.00036907196045
    10. '``' → logprob: -15.25036907196045

Token 585: 'its' (ID: 1348)
  Prédit: 'its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'its' → logprob: -2.0339031834737398e-05
    2. 'bits' → logprob: -12.375020027160645
    3. 'it' → logprob: -12.750020027160645
    4. '
' → logprob: -13.375020027160645
    5. '...' → logprob: -13.500020027160645
    6. '   ' → logprob: -13.750020027160645
    7. ' its' → logprob: -13.875020027160645
    8. '#' → logprob: -14.000020027160645
    9. 'itso' → logprob: -14.375020027160645
    10. '_' → logprob: -14.500020027160645

Token 586: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25194844603538513
    2. ')
' → logprob: -1.5019484758377075
    3. ')
' → logprob: -11.501948356628418
    4. '       ' → logprob: -12.501948356628418
    5. ' )' → logprob: -12.876948356628418
    6. ' )
' → logprob: -13.251948356628418
    7. ').' → logprob: -14.626948356628418
    8. '   ' → logprob: -15.001948356628418
    9. ')

' → logprob: -15.251948356628418
    10. ' ' → logprob: -17.501949310302734

Token 587: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21653610467910767
    2. 'return' → logprob: -1.716536045074463
    3. ' return' → logprob: -4.216536045074463
    4. '
' → logprob: -9.216536521911621
    5. 'result' → logprob: -10.091536521911621
    6. '{return' → logprob: -10.216536521911621
    7. '<|end|>' → logprob: -10.841536521911621
    8. '	return' → logprob: -11.216536521911621
    9. '        
' → logprob: -11.466536521911621
    10. '```' → logprob: -11.591536521911621

Token 588: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0001105762057704851
    2. 'result' → logprob: -9.500110626220703
    3. '       ' → logprob: -10.750110626220703
    4. ' return' → logprob: -11.250110626220703
    5. 'score' → logprob: -14.750110626220703
    6. 'self' → logprob: -14.875110626220703
    7. 'best' → logprob: -15.500110626220703
    8. 'res' → logprob: -16.000110626220703
    9. '```' → logprob: -16.625110626220703
    10. 'answer' → logprob: -17.875110626220703

Token 589: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.3868713676929474
    2. ' solver' → logprob: -1.136871337890625
    3. 'sol' → logprob: -15.761871337890625
    4. 's' → logprob: -16.761871337890625
    5. '_solver' → logprob: -17.261871337890625
    6. '(s' → logprob: -17.386871337890625
    7. ' ' → logprob: -18.511871337890625
    8. 'olver' → logprob: -19.636871337890625
    9. 'scheduler' → logprob: -19.761871337890625
    10. 'Solver' → logprob: -19.761871337890625

Token 590: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -0.01725669950246811
    2. '<|end|>' → logprob: -4.267256736755371
    3. '.' → logprob: -5.892256736755371
    4. '.s' → logprob: -8.392256736755371
    5. 'solve' → logprob: -10.142256736755371
    6. '<|end|>' → logprob: -10.267256736755371
    7. '.S' → logprob: -11.517256736755371
    8. '.sol' → logprob: -12.767256736755371
    9. '
' → logprob: -13.392256736755371
    10. ')' → logprob: -13.392256736755371

Token 591: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007040124852210283
    2. '()
' → logprob: -5.632040023803711
    3. '<|end|>' → logprob: -6.132040023803711
    4. '
' → logprob: -7.257040023803711
    5. '(' → logprob: -8.007040023803711
    6. '(
' → logprob: -9.382040023803711
    7. '\n' → logprob: -9.632040023803711
    8. '()\' → logprob: -10.132040023803711
    9. '```' → logprob: -12.257040023803711
    10. '()

' → logprob: -12.382040023803711

Token 592: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 593: ' Rabbit' (ID: 79131)
  Prédit: ' Party'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Party' → logprob: -0.805846095085144
    2. ' Rabbit' → logprob: -1.055846095085144
    3. 'Party' → logprob: -2.4308462142944336
    4. 'Rabbit' → logprob: -2.8058462142944336
    5. ' Test' → logprob: -4.805846214294434
    6. ' Solution' → logprob: -5.055846214294434
    7. ' Dog' → logprob: -5.680846214294434
    8. 'Test' → logprob: -5.805846214294434
    9. ' ' → logprob: -5.930846214294434
    10. ' Guest' → logprob: -6.180846214294434

Token 594: 'Graph' (ID: 9922)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1134301945567131
    2. '(' → logprob: -2.6134302616119385
    3. ':
' → logprob: -4.613430023193359
    4. 'Friend' → logprob: -4.863430023193359
    5. 'Party' → logprob: -5.238430023193359
    6. '<|end|>' → logprob: -5.988430023193359
    7. 'Manager' → logprob: -6.363430023193359
    8. 'Group' → logprob: -6.988430023193359
    9. 's' → logprob: -7.238430023193359
    10. '(
' → logprob: -7.738430023193359

Token 595: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002694416616577655
    2. '(' → logprob: -8.625269889831543
    3. ':
' → logprob: -9.875269889831543
    4. '(R' → logprob: -10.625269889831543
    5. '():' → logprob: -12.625269889831543
    6. '(object' → logprob: -12.750269889831543
    7. ' :' → logprob: -13.500269889831543
    8. '(Graph' → logprob: -13.750269889831543
    9. '<|end|>' → logprob: -15.000269889831543
    10. '{' → logprob: -15.125269889831543

Token 596: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4729350805282593
    2. ':' → logprob: -1.7229350805282593
    3. ':
' → logprob: -1.7229350805282593
    4. '<|end|>' → logprob: -4.972935199737549
    5. '(object' → logprob: -5.597935199737549
    6. ' def' → logprob: -5.597935199737549
    7. '    ' → logprob: -6.347935199737549
    8. 'def' → logprob: -6.722935199737549
    9. '):
' → logprob: -7.722935199737549
    10. '```' → logprob: -7.847935199737549

Token 597: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5972170233726501
    2. 'def' (adapté à ' def') → logprob: -0.8472170233726501
    3. ':' → logprob: -4.597217082977295
    4. '   ' → logprob: -5.097217082977295
    5. ':
' → logprob: -6.222217082977295
    6. 'class' → logprob: -6.222217082977295
    7. ' ' → logprob: -7.722217082977295
    8. ':def' → logprob: -9.222216606140137
    9. '):
' → logprob: -10.347216606140137
    10. '<|end|>' → logprob: -10.347216606140137

Token 598: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.09551972895860672
    2. ' def' → logprob: -3.470519781112671
    3. 'def' → logprob: -3.720519781112671
    4. 'object' → logprob: -3.720519781112671
    5. ' __' → logprob: -4.970519542694092
    6. '```' → logprob: -6.970519542694092
    7. 'classmethod' → logprob: -7.095519542694092
    8. '___' → logprob: -7.345519542694092
    9. '   ' → logprob: -7.470519542694092
    10. 'staticmethod' → logprob: -8.22052001953125

Token 599: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. ' init' → logprob: -15.625
    3. '_init' → logprob: -17.5
    4. '```' → logprob: -18.375
    5. 'int' → logprob: -18.75
    6. '(init' → logprob: -19.375
    7. '__' → logprob: -19.75
    8. 'def' → logprob: -19.75
    9. '	init' → logprob: -19.75
    10. 'ini' → logprob: -20.875

Token 600: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -6.277553620748222e-05
    2. '__' → logprob: -10.000062942504883
    3. '(self' → logprob: -11.625062942504883
    4. '__(
' → logprob: -12.125062942504883
    5. '(' → logprob: -13.625062942504883
    6. '__((' → logprob: -14.000062942504883
    7. '_(' → logprob: -14.125062942504883
    8. '__('' → logprob: -16.500062942504883
    9. '__("' → logprob: -16.750062942504883
    10. '<>(' → logprob: -17.125062942504883

Token 601: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00012237003829795867
    2. ')' → logprob: -10.0001220703125
    3. '):
' → logprob: -10.3751220703125
    4. '   ' → logprob: -11.2501220703125
    5. ' self' → logprob: -11.3751220703125
    6. '
' → logprob: -11.5001220703125
    7. '       ' → logprob: -12.3751220703125
    8. ',' → logprob: -12.5001220703125
    9. ')(' → logprob: -14.0001220703125
    10. '(self' → logprob: -14.2501220703125

Token 602: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000913370808120817
    2. 'self' → logprob: -7.250913143157959
    3. '(self' → logprob: -9.250913619995117
    4. '__(' → logprob: -10.500913619995117
    5. ' ,' → logprob: -10.875913619995117
    6. ',self' → logprob: -11.375913619995117
    7. ' (' → logprob: -11.500913619995117
    8. '_,' → logprob: -11.875913619995117
    9. '       ' → logprob: -12.000913619995117
    10. '):
' → logprob: -12.000913619995117

Token 603: ' n' (ID: 297)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7081281542778015
    2. 'self' → logprob: -0.7081281542778015
    3. ' rabbits' → logprob: -5.083127975463867
    4. 'n' → logprob: -5.208127975463867
    5. '):
' → logprob: -6.833127975463867
    6. ' self' → logprob: -7.333127975463867
    7. ')' → logprob: -7.958127975463867
    8. 'rabbit' → logprob: -8.208127975463867
    9. '   ' → logprob: -8.583127975463867
    10. 'num' → logprob: -8.958127975463867

Token 604: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20201849937438965
    2. '):' → logprob: -1.7020184993743896
    3. '):
' → logprob: -7.702018737792969
    4. ' ,' → logprob: -9.327018737792969
    5. '   ' → logprob: -10.952018737792969
    6. ' ):' → logprob: -11.202018737792969
    7. ':' → logprob: -11.702018737792969
    8. ',n' → logprob: -11.702018737792969
    9. '       ' → logprob: -12.452018737792969
    10. ')' → logprob: -13.202018737792969

Token 605: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005135946557857096
    2. 'self' → logprob: -8.375514030456543
    3. ' self' → logprob: -9.375514030456543
    4. '(self' → logprob: -9.625514030456543
    5. '(n' → logprob: -10.125514030456543
    6. '   ' → logprob: -10.125514030456543
    7. '<|end|>' → logprob: -11.125514030456543
    8. 'n' → logprob: -11.250514030456543
    9. ',' → logprob: -11.500514030456543
    10. '	self' → logprob: -12.750514030456543

Token 606: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.019300149753689766
    2. ' self' → logprob: -4.0192999839782715
    3. '       ' → logprob: -6.7692999839782715
    4. '   ' → logprob: -14.39430046081543
    5. '	self' → logprob: -14.89430046081543
    6. '(self' → logprob: -16.89430046081543
    7. 'class' → logprob: -17.26930046081543
    8. 'from' → logprob: -18.26930046081543
    9. 'import' → logprob: -18.89430046081543
    10. '
' → logprob: -18.89430046081543

Token 607: '.r' (ID: 2951)
  Prédit: '.n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.9416761994361877
    2. '.r' → logprob: -1.066676139831543
    3. '.ad' → logprob: -1.566676139831543
    4. '.nodes' → logprob: -3.691676139831543
    5. '.' → logprob: -4.316676139831543
    6. '.ids' → logprob: -4.816676139831543
    7. '.vertices' → logprob: -5.441676139831543
    8. '.edges' → logprob: -6.316676139831543
    9. '.num' → logprob: -6.941676139831543
    10. '.connections' → logprob: -7.066676139831543

Token 608: 'abb' (ID: 13538)
  Prédit: 'abbit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abbit' → logprob: -0.6208446621894836
    2. 'abb' → logprob: -0.8708446621894836
    3. 'abs' → logprob: -4.370844841003418
    4. 'ab' → logprob: -4.495844841003418
    5. 'a' → logprob: -5.370844841003418
    6. 'ats' → logprob: -6.245844841003418
    7. '   ' → logprob: -6.370844841003418
    8. '=' → logprob: -6.870844841003418
    9. 'n' → logprob: -7.245844841003418
    10. '_n' → logprob: -7.370844841003418

Token 609: 'its' (ID: 1348)
  Prédit: 'its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'its' → logprob: -1.0921942703134846e-05
    2. '...' → logprob: -12.75001049041748
    3. '   ' → logprob: -13.25001049041748
    4. '_' → logprob: -13.62501049041748
    5. ' its' → logprob: -13.62501049041748
    6. '=' → logprob: -14.12501049041748
    7. 'it' → logprob: -14.50001049041748
    8. 'bits' → logprob: -14.75001049041748
    9. 'itso' → logprob: -15.00001049041748
    10. '#' → logprob: -15.12501049041748

Token 610: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47409504652023315
    2. ' =' → logprob: -0.9740950465202332
    3. '=[]' → logprob: -11.474095344543457
    4. '   ' → logprob: -12.474095344543457
    5. ' ' → logprob: -13.099095344543457
    6. '=[' → logprob: -14.599095344543457
    7. '[' → logprob: -14.974095344543457
    8. ':' → logprob: -15.599095344543457
    9. ' =[' → logprob: -15.599095344543457
    10. ',' → logprob: -15.974095344543457

Token 611: ' [' (ID: 723)
  Prédit: '[R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[R' → logprob: -0.015520304441452026
    2. '[' → logprob: -4.765520095825195
    3. '[n' → logprob: -5.515520095825195
    4. '[r' → logprob: -6.515520095825195
    5. ' [' → logprob: -7.515520095825195
    6. '[id' → logprob: -8.015520095825195
    7. '[class' → logprob: -8.015520095825195
    8. '[]' → logprob: -9.015520095825195
    9. '[list' → logprob: -11.765520095825195
    10. '[name' → logprob: -11.765520095825195

Token 612: 'Rabbit' (ID: 154677)
  Prédit: 'Rabbit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rabbit' → logprob: -0.0005532711511477828
    2. ' Rabbit' → logprob: -7.500553131103516
    3. 'Rab' → logprob: -15.375553131103516
    4. 'None' → logprob: -16.625553131103516
    5. '   ' → logprob: -17.625553131103516
    6. ' ' → logprob: -17.750553131103516
    7. 'R' → logprob: -18.000553131103516
    8. 'rabbit' → logprob: -18.125553131103516
    9. '  ' → logprob: -19.750553131103516
    10. 'class' → logprob: -20.125553131103516

Token 613: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0005129986093379557
    2. 'i' → logprob: -7.625513076782227
    3. '(str' → logprob: -11.250513076782227
    4. '(' → logprob: -11.750513076782227
    5. '(_)' → logprob: -13.375513076782227
    6. '(id' → logprob: -14.375513076782227
    7. '(_' → logprob: -14.625513076782227
    8. 'str' → logprob: -14.875513076782227
    9. '_' → logprob: -15.000513076782227
    10. '_(' → logprob: -15.500513076782227

Token 614: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023699395824223757
    2. '(i' → logprob: -6.5023698806762695
    3. '(n' → logprob: -7.2523698806762695
    4. '(' → logprob: -9.75236988067627
    5. 'i' → logprob: -10.75236988067627
    6. ' )' → logprob: -11.00236988067627
    7. 'for' → logprob: -11.25236988067627
    8. '   ' → logprob: -11.25236988067627
    9. ' i' → logprob: -11.62736988067627
    10. ')
' → logprob: -12.25236988067627

Token 615: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008594118990004063
    2. ' ' → logprob: -7.500859260559082
    3. '0' → logprob: -8.125859260559082
    4. '   ' → logprob: -11.500859260559082
    5. '=' → logprob: -16.0008602142334
    6. ')' → logprob: -16.2508602142334
    7. '```' → logprob: -16.7508602142334
    8. '  ' → logprob: -17.6258602142334
    9. '
' → logprob: -17.7508602142334
    10. '_' → logprob: -18.0008602142334

Token 616: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.429896944202483e-05
    2. ')]' → logprob: -10.375043869018555
    3. ' )' → logprob: -11.375043869018555
    4. ')
' → logprob: -14.000043869018555
    5. ')])' → logprob: -15.875043869018555
    6. '   ' → logprob: -16.000043869018555
    7. ' ' → logprob: -16.250043869018555
    8. '))' → logprob: -16.500043869018555
    9. '()' → logprob: -16.500043869018555
    10. '())' → logprob: -17.375043869018555

Token 617: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0871102437376976
    2. 'for' → logprob: -2.8371102809906006
    3. ')' → logprob: -3.7121102809906006
    4. ' ' → logprob: -8.46211051940918
    5. '   ' → logprob: -8.83711051940918
    6. ' )' → logprob: -10.83711051940918
    7. '       ' → logprob: -11.96211051940918
    8. '	for' → logprob: -11.96211051940918
    9. '    ' → logprob: -12.58711051940918
    10. ']' → logprob: -13.08711051940918

Token 618: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5777875781059265
    2. 'range' → logprob: -0.8277875781059265
    3. '_' → logprob: -6.702787399291992
    4. 'i' → logprob: -7.577787399291992
    5. ' i' → logprob: -9.327787399291992
    6. '_range' → logprob: -11.827787399291992
    7. ' ' → logprob: -12.202787399291992
    8. '	range' → logprob: -13.077787399291992
    9. ' _' → logprob: -13.327787399291992
    10. '_i' → logprob: -14.327787399291992

Token 619: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12695708870887756
    2. ' range' → logprob: -2.1269571781158447
    3. '(range' → logprob: -11.376956939697266
    4. ' in' → logprob: -11.626956939697266
    5. 'in' → logprob: -12.126956939697266
    6. '   ' → logprob: -13.251956939697266
    7. ' ' → logprob: -14.001956939697266
    8. '  ' → logprob: -15.126956939697266
    9. '	range' → logprob: -15.501956939697266
    10. ' xrange' → logprob: -16.501956939697266

Token 620: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005530327325686812
    2. ' range' → logprob: -7.500553131103516
    3. '   ' → logprob: -20.000553131103516
    4. ' ' → logprob: -20.125553131103516
    5. '	range' → logprob: -20.500553131103516
    6. '(range' → logprob: -20.625553131103516
    7. '  ' → logprob: -22.625553131103516
    8. '    ' → logprob: -24.125553131103516
    9. '
' → logprob: -24.625553131103516
    10. 'rang' → logprob: -24.750553131103516

Token 621: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01817476563155651
    2. 'n' → logprob: -4.018174648284912
    3. ' n' → logprob: -11.01817512512207
    4. '(' → logprob: -11.76817512512207
    5. ')n' → logprob: -14.76817512512207
    6. ' (' → logprob: -15.39317512512207
    7. '
' → logprob: -17.01817512512207
    8. '	n' → logprob: -17.51817512512207
    9. '(
' → logprob: -17.64317512512207
    10. '   ' → logprob: -17.76817512512207

Token 622: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.8889261304575484e-06
    2. ')' → logprob: -13.375003814697266
    3. ']' → logprob: -13.500003814697266
    4. ')]
' → logprob: -15.000003814697266
    5. ' )' → logprob: -15.875003814697266
    6. '])]' → logprob: -16.000003814697266
    7. ')])' → logprob: -16.750003814697266
    8. '       ' → logprob: -17.250003814697266
    9. '])' → logprob: -17.250003814697266
    10. '   ' → logprob: -17.250003814697266

Token 623: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 624: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016246207058429718
    2. '   ' → logprob: -4.516246318817139
    3. ' def' → logprob: -5.266246318817139
    4. '	def' → logprob: -11.51624584197998
    5. '
' → logprob: -11.89124584197998
    6. '<|end|>' → logprob: -12.51624584197998
    7. '    
' → logprob: -14.14124584197998
    8. '<|end|>' → logprob: -15.26624584197998
    9. ' ' → logprob: -15.51624584197998
    10. '  ' → logprob: -16.391246795654297

Token 625: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.8889261304575484e-06
    2. ' def' → logprob: -12.625003814697266
    3. '   ' → logprob: -14.500003814697266
    4. '	def' → logprob: -18.125003814697266
    5. '
' → logprob: -19.000003814697266
    6. 'import' → logprob: -20.875003814697266
    7. '    
' → logprob: -20.875003814697266
    8. ' ' → logprob: -22.625003814697266
    9. 'from' → logprob: -22.750003814697266
    10. 'de' → logprob: -23.375003814697266

Token 626: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.2866874039173126
    2. 'add' → logprob: -1.4116873741149902
    3. ' set' → logprob: -5.78668737411499
    4. ' connect' → logprob: -7.03668737411499
    5. 'set' → logprob: -7.28668737411499
    6. 'connect' → logprob: -7.41168737411499
    7. ' get' → logprob: -8.661687850952148
    8. 'get' → logprob: -9.786687850952148
    9. 'friend' → logprob: -11.161687850952148
    10. ' build' → logprob: -11.411687850952148

Token 627: '_edge' (ID: 43226)
  Prédit: '_friend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_friend' → logprob: -0.003444334026426077
    2. '_' → logprob: -5.753444194793701
    3. '_edge' → logprob: -9.12844467163086
    4. '_f' → logprob: -9.62844467163086
    5. '_connection' → logprob: -9.75344467163086
    6. '_r' → logprob: -11.12844467163086
    7. '_relation' → logprob: -11.12844467163086
    8. '_relationship' → logprob: -13.75344467163086
    9. 'friend' → logprob: -13.87844467163086
    10. '_link' → logprob: -14.37844467163086

Token 628: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006056066602468491
    2. '(' → logprob: -5.38105583190918
    3. ' (' → logprob: -6.63105583190918
    4. 'self' → logprob: -10.63105583190918
    5. '<|end|>' → logprob: -10.63105583190918
    6. ')(' → logprob: -11.00605583190918
    7. '(
' → logprob: -11.50605583190918
    8. '(s' → logprob: -11.63105583190918
    9. '(r' → logprob: -12.25605583190918
    10. '((' → logprob: -12.25605583190918

Token 629: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019073976203799248
    2. ' ,' → logprob: -4.144073963165283
    3. '(self' → logprob: -6.394073963165283
    4. 'self' → logprob: -6.894073963165283
    5. ',self' → logprob: -8.519074440002441
    6. '       ' → logprob: -9.519074440002441
    7. '   ' → logprob: -10.394074440002441
    8. ' (' → logprob: -11.019074440002441
    9. ' self' → logprob: -11.644074440002441
    10. '(' → logprob: -12.644074440002441

Token 630: ' u' (ID: 337)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9734245538711548
    2. 'u' → logprob: -1.3484245538711548
    3. ' self' → logprob: -1.4734245538711548
    4. ' u' → logprob: -2.3484244346618652
    5. 'a' → logprob: -3.5984244346618652
    6. ' a' → logprob: -5.848424434661865
    7. ')' → logprob: -6.473424434661865
    8. '   ' → logprob: -6.598424434661865
    9. 'from' → logprob: -6.598424434661865
    10. 'r' → logprob: -7.098424434661865

Token 631: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009498104336671531
    2. ' ,' → logprob: -7.125949859619141
    3. ',u' → logprob: -9.37594985961914
    4. '-' → logprob: -9.87594985961914
    5. ' -' → logprob: -12.37594985961914
    6. '_,' → logprob: -12.87594985961914
    7. '   ' → logprob: -13.87594985961914
    8. 'u' → logprob: -15.00094985961914
    9. '-,' → logprob: -15.00094985961914
    10. '‌,' → logprob: -16.12594985961914

Token 632: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3132634460926056
    2. ' v' → logprob: -1.3132634162902832
    3. '   ' → logprob: -14.188263893127441
    4. ' ' → logprob: -15.438263893127441
    5. '    ' → logprob: -15.688263893127441
    6. '(v' → logprob: -15.813263893127441
    7. ',v' → logprob: -15.938263893127441
    8. '	v' → logprob: -16.438262939453125
    9. 'u' → logprob: -16.563262939453125
    10. '
' → logprob: -16.813262939453125

Token 633: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.047134305234067e-05
    2. ' ,' → logprob: -10.500030517578125
    3. ',u' → logprob: -13.125030517578125
    4. '   ' → logprob: -14.875030517578125
    5. '       ' → logprob: -15.000030517578125
    6. '_,' → logprob: -16.375030517578125
    7. '),' → logprob: -16.375030517578125
    8. ')' → logprob: -16.750030517578125
    9. ',
' → logprob: -17.125030517578125
    10. '    ' → logprob: -17.875030517578125

Token 634: ' f' (ID: 285)
  Prédit: ' friendliness'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' friendliness' → logprob: -1.184401273727417
    2. 'friend' → logprob: -1.684401273727417
    3. 'f' → logprob: -1.934401273727417
    4. 'w' → logprob: -2.059401273727417
    5. ')' → logprob: -3.059401273727417
    6. '1' → logprob: -3.309401273727417
    7. ' w' → logprob: -3.434401273727417
    8. ' f' → logprob: -3.434401273727417
    9. 'friendly' → logprob: -3.559401273727417
    10. ' )' → logprob: -3.559401273727417

Token 635: '):
' (ID: 1883)
  Prédit: 'riend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'riend' → logprob: -0.0015009368071332574
    2. 'riendly' → logprob: -6.626501083374023
    3. 'r' → logprob: -9.501501083374023
    4. 'riends' → logprob: -9.626501083374023
    5. 'ri' → logprob: -10.751501083374023
    6. ')' → logprob: -12.501501083374023
    7. '):
' → logprob: -12.751501083374023
    8. ')
' → logprob: -13.501501083374023
    9. 'RIEND' → logprob: -13.876501083374023
    10. 'iend' → logprob: -14.376501083374023

Token 636: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001916200271807611
    2. '   ' → logprob: -9.125191688537598
    3. '):
' → logprob: -11.000191688537598
    4. ',' → logprob: -11.625191688537598
    5. ':' → logprob: -11.625191688537598
    6. '```' → logprob: -11.750191688537598
    7. ' self' → logprob: -11.875191688537598
    8. '        
' → logprob: -12.000191688537598
    9. '<|end|>' → logprob: -12.250191688537598
    10. 'self' → logprob: -12.500191688537598

Token 637: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03065021149814129
    2. ' self' → logprob: -4.1556501388549805
    3. '       ' → logprob: -4.2806501388549805
    4. 'r' → logprob: -7.9056501388549805
    5. 'u' → logprob: -8.15565013885498
    6. ' u' → logprob: -11.78065013885498
    7. '   ' → logprob: -12.28065013885498
    8. 'rabbit' → logprob: -12.90565013885498
    9. 'ru' → logprob: -13.53065013885498
    10. ' r' → logprob: -14.03065013885498

Token 638: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.0032475856132805347
    2. '.' → logprob: -5.7532477378845215
    3. 'r' → logprob: -10.128247261047363
    4. '=' → logprob: -11.253247261047363
    5. ' .' → logprob: -12.628247261047363
    6. ').' → logprob: -13.003247261047363
    7. '=r' → logprob: -13.128247261047363
    8. '.
' → logprob: -13.378247261047363
    9. ' =' → logprob: -13.503247261047363
    10. '.rabbit' → logprob: -13.753247261047363

Token 639: 'abb' (ID: 13538)
  Prédit: 'abb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abb' → logprob: -0.00015586259542033076
    2. 'a' → logprob: -9.375155448913574
    3. 'abbit' → logprob: -9.750155448913574
    4. 'ab' → logprob: -11.750155448913574
    5. 'r' → logprob: -13.375155448913574
    6. '   ' → logprob: -14.375155448913574
    7. '[' → logprob: -14.375155448913574
    8. 'abbr' → logprob: -14.625155448913574
    9. ' abb' → logprob: -15.125155448913574
    10. '.r' → logprob: -15.875155448913574

Token 640: 'its' (ID: 1348)
  Prédit: 'its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'its' → logprob: -7.896309739408025e-07
    2. '...' → logprob: -15.250000953674316
    3. 'bits' → logprob: -16.5
    4. '[' → logprob: -17.0
    5. '   ' → logprob: -17.0
    6. 'it' → logprob: -17.0
    7. ' its' → logprob: -17.0
    8. 'ats' → logprob: -17.375
    9. 'itsin' → logprob: -17.875
    10. 'itso' → logprob: -17.875

Token 641: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.128163257315464e-07
    2. 'u' → logprob: -16.375
    3. '[v' → logprob: -16.75
    4. '[' → logprob: -17.0
    5. '   ' → logprob: -17.875
    6. ')[' → logprob: -18.5
    7. '[
' → logprob: -18.625
    8. '[int' → logprob: -18.625
    9. '[self' → logprob: -19.25
    10. '[f' → logprob: -19.375

Token 642: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.038979556411504745
    2. ' -' → logprob: -3.2889795303344727
    3. '].' → logprob: -7.038979530334473
    4. ']' → logprob: -11.288979530334473
    5. '1' → logprob: -11.413979530334473
    6. '   ' → logprob: -11.538979530334473
    7. ' ].' → logprob: -11.538979530334473
    8. '.id' → logprob: -11.788979530334473
    9. '.' → logprob: -12.413979530334473
    10. ' ' → logprob: -12.913979530334473

Token 643: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '2' → logprob: -17.375019073486328
    4. '   ' → logprob: -17.750019073486328
    5. '0' → logprob: -19.375019073486328
    6. ')' → logprob: -20.000019073486328
    7. '```' → logprob: -20.562519073486328
    8. '  ' → logprob: -20.750019073486328
    9. '１' → logprob: -20.937519073486328
    10. ']' → logprob: -21.250019073486328

Token 644: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -3.9650025428272784e-05
    2. ']' → logprob: -10.500040054321289
    3. '.' → logprob: -11.875040054321289
    4. ' ].' → logprob: -12.500040054321289
    5. ').' → logprob: -14.000040054321289
    6. '.add' → logprob: -15.750040054321289
    7. '   ' → logprob: -15.875040054321289
    8. ']._' → logprob: -16.87504005432129
    9. '       ' → logprob: -17.12504005432129
    10. '}.' → logprob: -18.25004005432129

Token 645: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -4.320199877838604e-07
    2. 'friends' → logprob: -14.75
    3. ' add' → logprob: -19.75
    4. 'friend' → logprob: -20.375
    5. '.add' → logprob: -20.75
    6. '	add' → logprob: -22.875
    7. '   ' → logprob: -23.125
    8. 'adde' → logprob: -23.25
    9. '_add' → logprob: -23.5
    10. 'ad' → logprob: -23.75

Token 646: '_friend' (ID: 156782)
  Prédit: '_friend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_friend' → logprob: -3.166338137816638e-05
    2. 'friend' → logprob: -10.375031471252441
    3. '_f' → logprob: -15.250031471252441
    4. 'riend' → logprob: -16.250032424926758
    5. 'Friend' → logprob: -16.750032424926758
    6. '_r' → logprob: -17.000032424926758
    7. ' friend' → logprob: -17.125032424926758
    8. 'f' → logprob: -17.500032424926758
    9. '_' → logprob: -17.625032424926758
    10. '(friend' → logprob: -18.125032424926758

Token 647: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.246537173457909e-06
    2. '(' → logprob: -12.875003814697266
    3. 'self' → logprob: -13.375003814697266
    4. '(r' → logprob: -18.125003814697266
    5. '(
' → logprob: -18.375003814697266
    6. '((' → logprob: -19.375003814697266
    7. ' self' → logprob: -20.250003814697266
    8. ',self' → logprob: -20.500003814697266
    9. '(this' → logprob: -20.750003814697266
    10. ' (' → logprob: -20.750003814697266

Token 648: '.r' (ID: 2951)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.12852145731449127
    2. '.r' → logprob: -2.12852144241333
    3. 'self' → logprob: -6.75352144241333
    4. '(r' → logprob: -8.753521919250488
    5. 'raph' → logprob: -9.128521919250488
    6. 's' → logprob: -10.128521919250488
    7. '(self' → logprob: -10.253521919250488
    8. '_r' → logprob: -10.503521919250488
    9. 'graph' → logprob: -11.003521919250488
    10. '   ' → logprob: -11.253521919250488

Token 649: 'abb' (ID: 13538)
  Prédit: 'abb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abb' → logprob: -0.0022806229535490274
    2. 'b' → logprob: -6.7522807121276855
    3. 'r' → logprob: -7.7522807121276855
    4. 'ab' → logprob: -8.127280235290527
    5. '.r' → logprob: -9.127280235290527
    6. 'abbit' → logprob: -9.377280235290527
    7. 'bb' → logprob: -9.627280235290527
    8. ' rabbits' → logprob: -9.877280235290527
    9. 'abs' → logprob: -10.252280235290527
    10. '.b' → logprob: -11.377280235290527

Token 650: 'its' (ID: 1348)
  Prédit: 'its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'its' → logprob: -6.706686690449715e-05
    2. 'it' → logprob: -10.625066757202148
    3. 'ts' → logprob: -11.250066757202148
    4. 'ats' → logprob: -11.500066757202148
    5. 'r' → logprob: -12.625066757202148
    6. 'ots' → logprob: -12.750066757202148
    7. 'ants' → logprob: -13.250066757202148
    8. 'Its' → logprob: -13.625066757202148
    9. 's' → logprob: -14.000066757202148
    10. '   ' → logprob: -14.125066757202148

Token 651: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.512236498361744e-07
    2. 'v' → logprob: -15.250000953674316
    3. '[u' → logprob: -15.500000953674316
    4. '[' → logprob: -18.25
    5. '(v' → logprob: -18.75
    6. '   ' → logprob: -19.0
    7. '	v' → logprob: -20.625
    8. '[
' → logprob: -21.0
    9. '<v' → logprob: -21.0
    10. '[r' → logprob: -21.125

Token 652: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00013929695705883205
    2. '[' → logprob: -9.125139236450195
    3. '1' → logprob: -10.625139236450195
    4. ' -' → logprob: -12.250139236450195
    5. 'u' → logprob: -15.500139236450195
    6. ']' → logprob: -15.500139236450195
    7. '   ' → logprob: -15.750139236450195
    8. ']-' → logprob: -15.875139236450195
    9. '()-' → logprob: -16.500139236450195
    10. '[u' → logprob: -16.625139236450195

Token 653: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.25000286102295
    3. '2' → logprob: -14.37500286102295
    4. '   ' → logprob: -15.75000286102295
    5. '```' → logprob: -17.000001907348633
    6. '
' → logprob: -17.562501907348633
    7. '-' → logprob: -18.125001907348633
    8. '11' → logprob: -18.187501907348633
    9. '0' → logprob: -18.312501907348633
    10. '

' → logprob: -18.687501907348633

Token 654: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.04317023232579231
    2. ',' → logprob: -3.168170213699341
    3. ' ],' → logprob: -8.918169975280762
    4. ' ,' → logprob: -11.043169975280762
    5. ']' → logprob: -11.668169975280762
    6. '   ' → logprob: -12.668169975280762
    7. '),' → logprob: -12.668169975280762
    8. ''],' → logprob: -13.543169975280762
    9. '`,' → logprob: -14.543169975280762
    10. ',f' → logprob: -14.793169975280762

Token 655: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.306760805164231e-05
    2. ' f' → logprob: -11.25001335144043
    3. '   ' → logprob: -20.37501335144043
    4. '	f' → logprob: -21.50001335144043
    5. '
' → logprob: -22.50001335144043
    6. '       ' → logprob: -22.75001335144043
    7. ' ' → logprob: -23.12501335144043
    8. '_f' → logprob: -23.25001335144043
    9. '           ' → logprob: -23.75001335144043
    10. '    ' → logprob: -23.75001335144043

Token 656: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0380522795021534
    2. ')
' → logprob: -3.2880523204803467
    3. ')
' → logprob: -11.913052558898926
    4. ' )' → logprob: -13.288052558898926
    5. ')

' → logprob: -13.788052558898926
    6. '       ' → logprob: -13.913052558898926
    7. ' )
' → logprob: -15.163052558898926
    8. '   ' → logprob: -15.788052558898926
    9. '),' → logprob: -15.788052558898926
    10. ')\' → logprob: -17.03805160522461

Token 657: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10094111412763596
    2. 'self' → logprob: -2.3509411811828613
    3. '   ' → logprob: -7.475941181182861
    4. ' self' → logprob: -8.725940704345703
    5. '           ' → logprob: -13.475940704345703
    6. '[self' → logprob: -13.600940704345703
    7. '	self' → logprob: -13.850940704345703
    8. ' ' → logprob: -14.600940704345703
    9. '      ' → logprob: -15.100940704345703
    10. '<|end|>' → logprob: -15.725940704345703

Token 658: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -6.704273118884885e-07
    2. '       ' → logprob: -14.500000953674316
    3. ' self' → logprob: -15.875000953674316
    4. '   ' → logprob: -18.125
    5. '        
' → logprob: -20.25
    6. '           ' → logprob: -20.5
    7. '[self' → logprob: -21.625
    8. '```' → logprob: -21.75
    9. '#' → logprob: -22.125
    10. 's' → logprob: -22.375

Token 659: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -1.6240566083070007e-06
    2. '.' → logprob: -13.750001907348633
    3. 'r' → logprob: -14.750001907348633
    4. '.rabbit' → logprob: -17.375001907348633
    5. ' .' → logprob: -18.250001907348633
    6. '.v' → logprob: -19.000001907348633
    7. '	r' → logprob: -20.250001907348633
    8. '[r' → logprob: -20.750001907348633
    9. '.t' → logprob: -20.875001907348633
    10. '].' → logprob: -20.875001907348633

Token 660: 'abb' (ID: 13538)
  Prédit: 'abb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abb' → logprob: -0.00010747690976131707
    2. 'r' → logprob: -9.250107765197754
    3. 'b' → logprob: -11.875107765197754
    4. 'ab' → logprob: -13.250107765197754
    5. 'a' → logprob: -13.875107765197754
    6. 'bb' → logprob: -14.000107765197754
    7. 'abbit' → logprob: -14.625107765197754
    8. 's' → logprob: -15.750107765197754
    9. ' rabbits' → logprob: -16.500106811523438
    10. 'abs' → logprob: -17.500106811523438

Token 661: 'its' (ID: 1348)
  Prédit: 'its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'its' → logprob: -9.13388703338569e-06
    2. 'bits' → logprob: -12.625009536743164
    3. 'itsin' → logprob: -13.375009536743164
    4. 'itso' → logprob: -13.625009536743164
    5. '...' → logprob: -13.750009536743164
    6. 'it' → logprob: -14.875009536743164
    7. '[' → logprob: -15.250009536743164
    8. '\' → logprob: -15.500009536743164
    9. '_' → logprob: -15.875009536743164
    10. ' its' → logprob: -16.375009536743164

Token 662: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0067154900170862675
    2. '[u' → logprob: -5.006715297698975
    3. '[r' → logprob: -16.756715774536133
    4. '[' → logprob: -18.381715774536133
    5. '[self' → logprob: -18.631715774536133
    6. 'v' → logprob: -19.131715774536133
    7. '[w' → logprob: -19.881715774536133
    8. '   ' → logprob: -20.631715774536133
    9. ' [' → logprob: -20.881715774536133
    10. '[t' → logprob: -21.631715774536133

Token 663: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09807731956243515
    2. '[' → logprob: -2.4730772972106934
    3. '[u' → logprob: -4.723077297210693
    4. '[-' → logprob: -9.223077774047852
    5. '-u' → logprob: -10.473077774047852
    6. '[self' → logprob: -11.098077774047852
    7. '-[' → logprob: -11.223077774047852
    8. '   ' → logprob: -11.223077774047852
    9. 'u' → logprob: -11.348077774047852
    10. ' -' → logprob: -11.348077774047852

Token 664: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.25
    3. '[' → logprob: -17.0
    4. '   ' → logprob: -17.125
    5. '```' → logprob: -17.625
    6. '-' → logprob: -18.0
    7. '2' → logprob: -18.4375
    8. '0' → logprob: -19.1875
    9. '
' → logprob: -19.1875
    10. 'def' → logprob: -19.3125

Token 665: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0008284482173621655
    2. '.' → logprob: -7.625828266143799
    3. ' ].' → logprob: -8.750828742980957
    4. '   ' → logprob: -9.625828742980957
    5. ').' → logprob: -10.375828742980957
    6. '[' → logprob: -10.500828742980957
    7. '-' → logprob: -10.875828742980957
    8. '       ' → logprob: -11.250828742980957
    9. '           ' → logprob: -11.625828742980957
    10. ']' → logprob: -12.125828742980957

Token 666: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -7.896309739408025e-07
    2. ' add' → logprob: -14.500000953674316
    3. 'friends' → logprob: -15.625000953674316
    4. '.add' → logprob: -17.0
    5. '_add' → logprob: -19.0
    6. '	add' → logprob: -19.125
    7. '   ' → logprob: -19.625
    8. 'friend' → logprob: -20.375
    9. 'Add' → logprob: -20.375
    10. 'id' → logprob: -20.625

Token 667: '_friend' (ID: 156782)
  Prédit: '_friend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_friend' → logprob: -9.13388703338569e-06
    2. 'friend' → logprob: -11.625009536743164
    3. '_f' → logprob: -16.500009536743164
    4. '(friend' → logprob: -16.625009536743164
    5. 'Friend' → logprob: -17.250009536743164
    6. ' friend' → logprob: -17.875009536743164
    7. 'riend' → logprob: -19.125009536743164
    8. '	friend' → logprob: -19.375009536743164
    9. 'self' → logprob: -20.125009536743164
    10. '.friend' → logprob: -20.750009536743164

Token 668: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.816093228830141e-06
    2. 'self' → logprob: -13.25000286102295
    3. '(' → logprob: -13.87500286102295
    4. ' (' → logprob: -19.250001907348633
    5. '(
' → logprob: -19.250001907348633
    6. ' self' → logprob: -19.500001907348633
    7. '[self' → logprob: -19.500001907348633
    8. '=self' → logprob: -21.250001907348633
    9. ',self' → logprob: -21.250001907348633
    10. '	self' → logprob: -21.250001907348633

Token 669: '.r' (ID: 2951)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0014651041710749269
    2. ' self' → logprob: -6.626465320587158
    3. 'r' → logprob: -9.12646484375
    4. '(self' → logprob: -11.00146484375
    5. '.r' → logprob: -11.87646484375
    6. '[self' → logprob: -12.25146484375
    7. '=self' → logprob: -14.62646484375
    8. '	self' → logprob: -14.75146484375
    9. '.self' → logprob: -15.12646484375
    10. '   ' → logprob: -15.37646484375

Token 670: 'abb' (ID: 13538)
  Prédit: 'abb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abb' → logprob: -0.004121973179280758
    2. '.r' → logprob: -6.504121780395508
    3. 'abbit' → logprob: -6.879121780395508
    4. 'r' → logprob: -7.379121780395508
    5. 'b' → logprob: -7.879121780395508
    6. ' rabbits' → logprob: -8.379121780395508
    7. '.b' → logprob: -9.254121780395508
    8. 'bb' → logprob: -10.629121780395508
    9. 'ab' → logprob: -10.754121780395508
    10. 'self' → logprob: -10.879121780395508

Token 671: 'its' (ID: 1348)
  Prédit: 'its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'its' → logprob: -5.204720582696609e-05
    2. 's' → logprob: -11.375052452087402
    3. 'ats' → logprob: -11.750052452087402
    4. 'it' → logprob: -11.875052452087402
    5. '[' → logprob: -12.000052452087402
    6. 'ts' → logprob: -12.750052452087402
    7. '...' → logprob: -12.750052452087402
    8. 'ots' → logprob: -12.875052452087402
    9. '   ' → logprob: -13.000052452087402
    10. 'bits' → logprob: -13.250052452087402

Token 672: '[u' (ID: 48750)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.007785954512655735
    2. '[u' → logprob: -5.007785797119141
    3. '[r' → logprob: -7.007785797119141
    4. 'self' → logprob: -8.75778579711914
    5. '(self' → logprob: -12.75778579711914
    6. 'r' → logprob: -13.50778579711914
    7. ' self' → logprob: -13.75778579711914
    8. '[' → logprob: -14.00778579711914
    9. '[
' → logprob: -14.50778579711914
    10. '.r' → logprob: -14.88278579711914

Token 673: '-' (ID: 12)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.07948186993598938
    2. '-' → logprob: -2.579481840133667
    3. 'v' → logprob: -7.579482078552246
    4. '[u' → logprob: -10.454482078552246
    5. '-v' → logprob: -10.579482078552246
    6. '[' → logprob: -10.954482078552246
    7. '(v' → logprob: -11.954482078552246
    8. ' -' → logprob: -14.579482078552246
    9. '   ' → logprob: -14.579482078552246
    10. ' v' → logprob: -14.704482078552246

Token 674: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016611411410849541
    2. 'v' → logprob: -8.750165939331055
    3. '-' → logprob: -12.125165939331055
    4. ' v' → logprob: -14.375165939331055
    5. '(v' → logprob: -14.500165939331055
    6. '[v' → logprob: -14.625165939331055
    7. ' ' → logprob: -15.375165939331055
    8. '   ' → logprob: -16.125165939331055
    9. 'u' → logprob: -16.125165939331055
    10. '```' → logprob: -17.125165939331055

Token 675: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0003837213444057852
    2. ',' → logprob: -8.000383377075195
    3. ' ],' → logprob: -10.500383377075195
    4. '),' → logprob: -11.000383377075195
    5. ']' → logprob: -12.750383377075195
    6. ' ,' → logprob: -15.125383377075195
    7. '   ' → logprob: -15.250383377075195
    8. '},' → logprob: -16.125383377075195
    9. '>,' → logprob: -16.125383377075195
    10. '],
' → logprob: -16.125383377075195

Token 676: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.006715370807796717
    2. ' f' → logprob: -5.006715297698975
    3. '   ' → logprob: -18.131715774536133
    4. '       ' → logprob: -18.756715774536133
    5. '	f' → logprob: -19.881715774536133
    6. ')' → logprob: -20.006715774536133
    7. '           ' → logprob: -20.256715774536133
    8. ' ' → logprob: -20.506715774536133
    9. ' ' → logprob: -20.756715774536133
    10. '    ' → logprob: -21.506715774536133

Token 677: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.73183855926618e-05
    2. ')
' → logprob: -9.500077247619629
    3. '       ' → logprob: -13.625077247619629
    4. '<|end|>' → logprob: -14.875077247619629
    5. '   ' → logprob: -15.000077247619629
    6. ')

' → logprob: -15.500077247619629
    7. ' )' → logprob: -15.500077247619629
    8. ')
' → logprob: -17.250078201293945
    9. '))' → logprob: -17.750078201293945
    10. ')}' → logprob: -18.000078201293945

Token 678: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 679: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0013705958845093846
    2. '   ' → logprob: -6.876370429992676
    3. '<|end|>' → logprob: -8.251370429992676
    4. ' def' → logprob: -9.876370429992676
    5. '#' → logprob: -11.501370429992676
    6. '	def' → logprob: -12.251370429992676
    7. '<|end|>' → logprob: -12.626370429992676
    8. '```' → logprob: -12.876370429992676
    9. 'r' → logprob: -13.251370429992676
    10. '
' → logprob: -13.376370429992676

Token 680: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.15310683415737e-05
    2. ' def' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.25002098083496
    4. 'd' → logprob: -18.25002098083496
    5. 'from' → logprob: -18.75002098083496
    6. '
' → logprob: -18.87502098083496
    7. '	def' → logprob: -18.87502098083496
    8. 'de' → logprob: -19.25002098083496
    9. '<|end|>' → logprob: -19.25002098083496
    10. '```' → logprob: -19.62502098083496

Token 681: ' solve' (ID: 17722)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6778359413146973
    2. 'get' → logprob: -1.1778359413146973
    3. ' get' → logprob: -2.5528359413146973
    4. ' max' → logprob: -2.9278359413146973
    5. 'best' → logprob: -4.302835941314697
    6. 'all' → logprob: -4.802835941314697
    7. ' potential' → logprob: -4.927835941314697
    8. 'potential' → logprob: -5.177835941314697
    9. 'maximum' → logprob: -5.927835941314697
    10. 'find' → logprob: -5.927835941314697

Token 682: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0022102047223597765
    2. '(' → logprob: -6.1272101402282715
    3. 'self' → logprob: -11.25221061706543
    4. ' (' → logprob: -12.12721061706543
    5. '(s' → logprob: -12.75221061706543
    6. '()' → logprob: -13.00221061706543
    7. '(
' → logprob: -14.75221061706543
    8. '```' → logprob: -15.62721061706543
    9. '_' → logprob: -15.75221061706543
    10. '(sel' → logprob: -15.87721061706543

Token 683: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.41954657435417175
    2. '(self' → logprob: -1.2945466041564941
    3. 'self' → logprob: -3.294546604156494
    4. '):
' → logprob: -3.669546604156494
    5. ')' → logprob: -6.294546604156494
    6. '       ' → logprob: -6.294546604156494
    7. '   ' → logprob: -6.544546604156494
    8. ' ):' → logprob: -8.419546127319336
    9. '():' → logprob: -8.919546127319336
    10. '()' → logprob: -9.044546127319336

Token 684: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009226491674780846
    2. '   ' → logprob: -4.884226322174072
    3. ' return' → logprob: -6.634226322174072
    4. 'return' → logprob: -8.13422679901123
    5. ' party' → logprob: -12.25922679901123
    6. '```' → logprob: -13.50922679901123
    7. 'party' → logprob: -13.63422679901123
    8. '
' → logprob: -14.13422679901123
    9. '           ' → logprob: -14.25922679901123
    10. 'self' → logprob: -14.88422679901123

Token 685: ' party' (ID: 7362)
  Prédit: 'party'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'party' (adapté à ' party') → logprob: -0.04892604425549507
    2. ' party' → logprob: -3.0489261150360107
    3. 'return' → logprob: -8.42392635345459
    4. '       ' → logprob: -9.29892635345459
    5. ' return' → logprob: -11.42392635345459
    6. 'p' → logprob: -11.54892635345459
    7. 'part' → logprob: -12.29892635345459
    8. ' p' → logprob: -13.79892635345459
    9. '_party' → logprob: -14.04892635345459
    10. 'Party' → logprob: -15.04892635345459

Token 686: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.252422958612442
    2. ' =' → logprob: -1.5024229288101196
    3. '(self' → logprob: -8.752423286437988
    4. '(' → logprob: -9.127423286437988
    5. '.' → logprob: -9.252423286437988
    6. '=self' → logprob: -9.502423286437988
    7. '   ' → logprob: -11.252423286437988
    8. '=max' → logprob: -11.752423286437988
    9. '.=' → logprob: -11.877423286437988
    10. '(max' → logprob: -12.127423286437988

Token 687: ' Party' (ID: 15703)
  Prédit: 'Party'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Party' → logprob: -0.0015023599844425917
    2. ' Party' → logprob: -6.501502513885498
    3. '       ' → logprob: -16.626502990722656
    4. 'Part' → logprob: -17.876502990722656
    5. '   ' → logprob: -18.626502990722656
    6. '_party' → logprob: -20.001502990722656
    7. 'self' → logprob: -20.126502990722656
    8. 'party' → logprob: -20.876502990722656
    9. '(' → logprob: -21.376502990722656
    10. 'Particle' → logprob: -21.626502990722656

Token 688: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.848420551046729e-05
    2. 'self' → logprob: -9.7500581741333
    3. '[self' → logprob: -16.500059127807617
    4. '(' → logprob: -17.875059127807617
    5. ' self' → logprob: -18.000059127807617
    6. '([' → logprob: -18.625059127807617
    7. '=self' → logprob: -18.875059127807617
    8. '```' → logprob: -19.125059127807617
    9. '	self' → logprob: -19.375059127807617
    10. '   ' → logprob: -19.625059127807617

Token 689: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -8.494741632603109e-05
    2. 'r' → logprob: -9.50008487701416
    3. '.rabbit' → logprob: -11.75008487701416
    4. '.' → logprob: -13.37508487701416
    5. ' rabbits' → logprob: -15.25008487701416
    6. ' .' → logprob: -16.250085830688477
    7. 'self' → logprob: -16.250085830688477
    8. ').' → logprob: -17.625085830688477
    9. '	r' → logprob: -17.750085830688477
    10. '   ' → logprob: -17.875085830688477

Token 690: 'abb' (ID: 13538)
  Prédit: 'abb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abb' → logprob: -0.0009253957541659474
    2. 'ab' → logprob: -8.000925064086914
    3. 'r' → logprob: -8.250925064086914
    4. 'abbit' → logprob: -8.875925064086914
    5. 'abs' → logprob: -9.375925064086914
    6. 'b' → logprob: -10.125925064086914
    7. 'self' → logprob: -11.000925064086914
    8. ' rabbits' → logprob: -11.250925064086914
    9. 's' → logprob: -11.500925064086914
    10. 'bb' → logprob: -12.625925064086914

Token 691: 'its' (ID: 1348)
  Prédit: 'its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'its' → logprob: -2.8444881536415778e-05
    2. 'bits' → logprob: -11.125028610229492
    3. 'it' → logprob: -12.250028610229492
    4. '...' → logprob: -13.250028610229492
    5. '   ' → logprob: -13.625028610229492
    6. '
' → logprob: -14.125028610229492
    7. 's' → logprob: -14.375028610229492
    8. 'ots' → logprob: -14.500028610229492
    9. 'ts' → logprob: -14.750028610229492
    10. '#' → logprob: -15.000028610229492

Token 692: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.02330499142408371
    2. ')' → logprob: -3.7733049392700195
    3. '       ' → logprob: -10.27330493927002
    4. ')
' → logprob: -10.89830493927002
    5. ').' → logprob: -12.27330493927002
    6. '   ' → logprob: -13.89830493927002
    7. ' )
' → logprob: -14.77330493927002
    8. ')

' → logprob: -15.77330493927002
    9. '())
' → logprob: -15.89830493927002
    10. '")
' → logprob: -16.898305892944336

Token 693: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20691995322704315
    2. 'return' → logprob: -1.7069199085235596
    3. ' return' → logprob: -5.331920146942139
    4. '
' → logprob: -7.831920146942139
    5. '   ' → logprob: -8.70691967010498
    6. '.return' → logprob: -10.58191967010498
    7. '	return' → logprob: -10.70691967010498
    8. ':return' → logprob: -11.20691967010498
    9. ')return' → logprob: -11.45691967010498
    10. '{return' → logprob: -11.95691967010498

Token 694: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -8.0536883615423e-05
    2. '       ' → logprob: -9.875080108642578
    3. ' return' → logprob: -10.500080108642578
    4. 'result' → logprob: -14.250080108642578
    5. '   ' → logprob: -14.875080108642578
    6. '
' → logprob: -15.875080108642578
    7. 'party' → logprob: -15.875080108642578
    8. 'print' → logprob: -15.875080108642578
    9. '```' → logprob: -16.875080108642578
    10. '	return' → logprob: -17.750080108642578

Token 695: ' party' (ID: 7362)
  Prédit: ' party'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' party' → logprob: -0.3132617771625519
    2. 'party' → logprob: -1.3132617473602295
    3. '.party' → logprob: -17.938261032104492
    4. '_party' → logprob: -18.063261032104492
    5. 'part' → logprob: -18.188261032104492
    6. ' ' → logprob: -19.438261032104492
    7. 'Party' → logprob: -21.063261032104492
    8. '   ' → logprob: -21.438261032104492
    9. ' parties' → logprob: -21.438261032104492
    10. '-party' → logprob: -21.688261032104492

Token 696: '.max' (ID: 11883)
  Prédit: '.solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.solve' → logprob: -0.004893111996352673
    2. '.' → logprob: -5.3798933029174805
    3. '.s' → logprob: -9.12989330291748
    4. '<|end|>' → logprob: -9.75489330291748
    5. '.sol' → logprob: -10.00489330291748
    6. '.party' → logprob: -10.75489330291748
    7. '.run' → logprob: -11.62989330291748
    8. 'solve' → logprob: -12.00489330291748
    9. ' .' → logprob: -12.62989330291748
    10. '.perform' → logprob: -12.75489330291748

Token 697: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.125000953674316
    3. 's' → logprob: -15.750000953674316
    4. ' _' → logprob: -17.250001907348633
    5. '_score' → logprob: -17.250001907348633
    6. 'atisfaction' → logprob: -18.500001907348633
    7. '\' → logprob: -18.750001907348633
    8. '()' → logprob: -19.125001907348633
    9. 'S' → logprob: -19.625001907348633
    10. '_f' → logprob: -19.875001907348633

Token 698: 'atisfaction' (ID: 60876)
  Prédit: 'atisfaction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atisfaction' → logprob: -8.2994620242971e-06
    2. 'atisf' → logprob: -12.125008583068848
    3. 'atis' → logprob: -13.500008583068848
    4. 'at' → logprob: -14.000008583068848
    5. 's' → logprob: -15.500008583068848
    6. 'atif' → logprob: -15.875008583068848
    7. 'ats' → logprob: -16.87500762939453
    8. 'core' → logprob: -17.62500762939453
    9. '_' → logprob: -17.87500762939453
    10. 'atisation' → logprob: -17.87500762939453

Token 699: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0013588056899607182
    2. '()
' → logprob: -6.626358985900879
    3. '()\' → logprob: -11.626358985900879
    4. '()

' → logprob: -11.751358985900879
    5. '()+' → logprob: -11.751358985900879
    6. '())' → logprob: -13.751358985900879
    7. '().' → logprob: -13.876358985900879
    8. '()%' → logprob: -14.001358985900879
    9. '()<' → logprob: -14.126358985900879
    10. '()?' → logprob: -14.126358985900879

Token 700: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1244269385933876
    2. '<|end|>' → logprob: -2.49942684173584
    3. '```' → logprob: -4.12442684173584
    4. 'n' → logprob: -4.24942684173584
    5. '<|end|>' → logprob: -6.12442684173584
    6. 'a' → logprob: -6.99942684173584
    7. 'r' → logprob: -7.37442684173584
    8. '
' → logprob: -9.37442684173584
    9. '\' → logprob: -9.49942684173584
    10. '\n' → logprob: -9.49942684173584

Token 701: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1648888736963272
    2. 'main' → logprob: -1.914888858795166
    3. ' run' → logprob: -5.664888858795166
    4. 'run' → logprob: -7.164888858795166
    5. ' solve' → logprob: -8.789889335632324
    6. 'solve' → logprob: -9.414889335632324
    7. 'read' → logprob: -10.414889335632324
    8. ' read' → logprob: -10.414889335632324
    9. 'example' → logprob: -10.539889335632324
    10. ' parse' → logprob: -10.789889335632324

Token 702: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -8.673547563375905e-05
    2. '():
' → logprob: -9.375086784362793
    3. ' ():' → logprob: -13.875086784362793
    4. '()' → logprob: -14.125086784362793
    5. '():
' → logprob: -15.750086784362793
    6. '(' → logprob: -17.375085830688477
    7. '():

' → logprob: -17.750085830688477
    8. '_' → logprob: -17.875085830688477
    9. '().' → logprob: -18.750085830688477
    10. ':' → logprob: -19.250085830688477

Token 703: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05521150678396225
    2. ' import' → logprob: -3.1802115440368652
    3. 'import' → logprob: -4.805211544036865
    4. ' n' → logprob: -5.680211544036865
    5. 'n' → logprob: -7.555211544036865
    6. '	import' → logprob: -11.680211067199707
    7. '```' → logprob: -13.180211067199707
    8. '   ' → logprob: -13.680211067199707
    9. ' input' → logprob: -13.805211067199707
    10. '	n' → logprob: -14.055211067199707

Token 704: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.7573863863945007
    2. ' n' → logprob: -1.7573864459991455
    3. 'import' (adapté à ' import') → logprob: -1.7573864459991455
    4. 'n' → logprob: -2.2573864459991455
    5. '   ' → logprob: -2.5073864459991455
    6. '	n' → logprob: -12.007386207580566
    7. '```' → logprob: -12.382386207580566
    8. '	import' → logprob: -12.757386207580566
    9. 't' → logprob: -14.882386207580566
    10. '   ' → logprob: -15.257386207580566

Token 705: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.12693031132221222
    2. ' sys' → logprob: -2.1269302368164062
    3. '=sys' → logprob: -13.126930236816406
    4. '	sys' → logprob: -16.126930236816406
    5. '(sys' → logprob: -16.251930236816406
    6. '_sys' → logprob: -16.876930236816406
    7. '.sys' → logprob: -19.501930236816406
    8. '_' → logprob: -20.501930236816406
    9. 'random' → logprob: -20.501930236816406
    10. '/sys' → logprob: -20.751930236816406

Token 706: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02540789730846882
    2. 'n' → logprob: -4.400407791137695
    3. 'input' → logprob: -4.775407791137695
    4. 'data' → logprob: -6.150407791137695
    5. '    
' → logprob: -6.900407791137695
    6. ' input' → logprob: -8.400407791137695
    7. '
' → logprob: -8.650407791137695
    8. ' n' → logprob: -8.900407791137695
    9. '(n' → logprob: -8.900407791137695
    10. '.readline' → logprob: -8.900407791137695

Token 707: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03605404123663902
    2. 'input' → logprob: -3.6610541343688965
    3. ' input' → logprob: -4.6610541343688965
    4. 'n' → logprob: -9.036053657531738
    5. 'data' → logprob: -9.286053657531738
    6. ' lines' → logprob: -11.536053657531738
    7. ' data' → logprob: -11.911053657531738
    8. ' n' → logprob: -12.161053657531738
    9. ' readline' → logprob: -12.286053657531738
    10. '
' → logprob: -12.786053657531738

Token 708: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.5445716977119446
    2. '   ' → logprob: -1.2945716381072998
    3. ' input' → logprob: -2.0445716381073
    4. 'n' → logprob: -4.294571876525879
    5. ' n' → logprob: -6.669571876525879
    6. 'data' → logprob: -6.669571876525879
    7. ' lines' → logprob: -9.294571876525879
    8. '
' → logprob: -9.419571876525879
    9. ' data' → logprob: -9.794571876525879
    10. ' readline' → logprob: -11.169571876525879

Token 709: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0722960233688354
    2. '()' → logprob: -1.0722960233688354
    3. ' =' → logprob: -1.9472960233688354
    4. '_line' → logprob: -2.197296142578125
    5. '_data' → logprob: -3.322296142578125
    6. '_lines' → logprob: -4.947296142578125
    7. '_' → logprob: -4.947296142578125
    8. '().' → logprob: -5.197296142578125
    9. 'data' → logprob: -6.322296142578125
    10. '.readline' → logprob: -6.322296142578125

Token 710: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.03804286941885948
    2. ' sys' → logprob: -3.2880427837371826
    3. '=sys' → logprob: -14.163043022155762
    4. '	sys' → logprob: -14.538043022155762
    5. 'input' → logprob: -16.163042068481445
    6. '(sys' → logprob: -16.538042068481445
    7. 'lambda' → logprob: -18.663042068481445
    8. '_sys' → logprob: -20.288042068481445
    9. ' input' → logprob: -21.038042068481445
    10. ' ' → logprob: -21.038042068481445

Token 711: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.07016239315271378
    2. '.readline' → logprob: -2.695162296295166
    3. 'stdin' → logprob: -9.695162773132324
    4. '.stdout' → logprob: -9.820162773132324
    5. '.' → logprob: -10.570162773132324
    6. '.read' → logprob: -11.445162773132324
    7. '.input' → logprob: -11.570162773132324
    8. 'import' → logprob: -11.570162773132324
    9. 's' → logprob: -12.070162773132324
    10. 'n' → logprob: -12.070162773132324

Token 712: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.026755603030323982
    2. 'read' → logprob: -3.6517555713653564
    3. '.read' → logprob: -8.526755332946777
    4. 'buffer' → logprob: -9.401755332946777
    5. '.readlines' → logprob: -9.526755332946777
    6. '_read' → logprob: -10.026755332946777
    7. 'reader' → logprob: -10.651755332946777
    8. ' readline' → logprob: -10.901755332946777
    9. '_reader' → logprob: -12.651755332946777
    10. '.' → logprob: -12.651755332946777

Token 713: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003586295060813427
    2. 'n' → logprob: -5.878586292266846
    3. '(n' → logprob: -7.628586292266846
    4. '()' → logprob: -9.003586769104004
    5. '    
' → logprob: -9.128586769104004
    6. ' n' → logprob: -10.753586769104004
    7. '
' → logprob: -11.253586769104004
    8. 'def' → logprob: -11.628586769104004
    9. '(' → logprob: -12.503586769104004
    10. '	n' → logprob: -12.753586769104004

Token 714: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004916716367006302
    2. 'n' → logprob: -5.379916667938232
    3. '    
' → logprob: -8.50491714477539
    4. '
' → logprob: -9.75491714477539
    5. ' n' → logprob: -10.62991714477539
    6. '(n' → logprob: -12.25491714477539
    7. '	n' → logprob: -13.00491714477539
    8. 'num' → logprob: -13.37991714477539
    9. 'def' → logprob: -13.75491714477539
    10. 't' → logprob: -15.00491714477539

Token 715: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0016465028747916222
    2. '   ' → logprob: -6.501646518707275
    3. 't' → logprob: -9.001646041870117
    4. ' n' → logprob: -11.501646041870117
    5. 'N' → logprob: -11.751646041870117
    6. 'T' → logprob: -13.251646041870117
    7. '
' → logprob: -14.626646041870117
    8. '    
' → logprob: -14.626646041870117
    9. '```' → logprob: -15.876646041870117
    10. 'num' → logprob: -16.376646041870117

Token 716: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008333319565281272
    2. ' =' → logprob: -7.750833511352539
    3. ' ,' → logprob: -8.625833511352539
    4. ',m' → logprob: -9.125833511352539
    5. '=' → logprob: -9.250833511352539
    6. ',s' → logprob: -12.000833511352539
    7. ',k' → logprob: -12.875833511352539
    8. ',n' → logprob: -12.875833511352539
    9. ',q' → logprob: -13.500833511352539
    10. ',f' → logprob: -13.750833511352539

Token 717: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47827640175819397
    2. ' =' → logprob: -0.9782763719558716
    3. ',' → logprob: -5.478276252746582
    4. '=input' → logprob: -12.228276252746582
    5. '=int' → logprob: -12.603276252746582
    6. '   ' → logprob: -13.603276252746582
    7. ' ,' → logprob: -14.103276252746582
    8. '=line' → logprob: -14.228276252746582
    9. ',n' → logprob: -14.353276252746582
    10. ' ' → logprob: -14.978276252746582

Token 718: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.01814994215965271
    2. 'map' → logprob: -4.0181498527526855
    3. '(map' → logprob: -19.143150329589844
    4. ' list' → logprob: -19.393150329589844
    5. '	map' → logprob: -19.768150329589844
    6. '[' → logprob: -20.393150329589844
    7. '_map' → logprob: -20.893150329589844
    8. ' input' → logprob: -21.393150329589844
    9. '.map' → logprob: -21.393150329589844
    10. 'input' → logprob: -21.643150329589844

Token 719: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002392302267253399
    2. '(input' → logprob: -6.502392292022705
    3. '(str' → logprob: -7.752392292022705
    4. '(' → logprob: -7.752392292022705
    5. '(lambda' → logprob: -10.877392768859863
    6. 'int' → logprob: -11.752392768859863
    7. 'input' → logprob: -13.627392768859863
    8. '(list' → logprob: -14.002392768859863
    9. '=int' → logprob: -15.377392768859863
    10. '(in' → logprob: -15.502392768859863

Token 720: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.014678152278065681
    2. '(' → logprob: -4.514678001403809
    3. ',input' → logprob: -6.139678001403809
    4. 'input' → logprob: -6.764678001403809
    5. ',' → logprob: -8.764678001403809
    6. ')' → logprob: -9.514678001403809
    7. '=input' → logprob: -10.514678001403809
    8. ' input' → logprob: -10.889678001403809
    9. '(int' → logprob: -11.514678001403809
    10. ' (' → logprob: -11.764678001403809

Token 721: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00020354038861114532
    2. ' input' → logprob: -8.500203132629395
    3. 'int' → logprob: -20.12520408630371
    4. 'str' → logprob: -20.87520408630371
    5. '(input' → logprob: -20.87520408630371
    6. '=input' → logprob: -21.87520408630371
    7. ',input' → logprob: -22.12520408630371
    8. '<input' → logprob: -23.62520408630371
    9. ' ' → logprob: -23.62520408630371
    10. '	input' → logprob: -23.75020408630371

Token 722: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.56102097814437e-05
    2. '()' → logprob: -10.000045776367188
    3. ' ().' → logprob: -16.375045776367188
    4. '())' → logprob: -17.000045776367188
    5. '()
' → logprob: -17.500045776367188
    6. '(' → logprob: -17.875045776367188
    7. '()[' → logprob: -18.875045776367188
    8. 'split' → logprob: -19.625045776367188
    9. '().'' → logprob: -19.625045776367188
    10. '('').' → logprob: -19.750045776367188

Token 723: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.20460087060928345
    2. 'strip' → logprob: -1.7046008110046387
    3. 'rstrip' → logprob: -6.329600811004639
    4. 'read' → logprob: -6.579600811004639
    5. '().' → logprob: -12.454601287841797
    6. '.readline' → logprob: -12.954601287841797
    7. '(split' → logprob: -13.204601287841797
    8. ')' → logprob: -14.454601287841797
    9. ' strip' → logprob: -14.579601287841797
    10. ' split' → logprob: -14.704601287841797

Token 724: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7150287628173828
    2. '())' → logprob: -0.7150287628173828
    3. '()' → logprob: -3.840028762817383
    4. '(' → logprob: -8.965028762817383
    5. '())
' → logprob: -11.840028762817383
    6. '('' → logprob: -12.465028762817383
    7. '(','' → logprob: -12.965028762817383
    8. '().' → logprob: -13.340028762817383
    9. '(),' → logprob: -13.340028762817383
    10. '))' → logprob: -13.840028762817383

Token 725: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41498449444770813
    2. 'r' → logprob: -1.1649844646453857
    3. 'for' → logprob: -4.414984703063965
    4. '    
' → logprob: -5.539984703063965
    5. 'graph' → logprob: -5.664984703063965
    6. 'edges' → logprob: -6.164984703063965
    7. ' for' → logprob: -6.164984703063965
    8. ' r' → logprob: -6.539984703063965
    9. 'raph' → logprob: -7.664984703063965
    10. ' rabbits' → logprob: -7.664984703063965

Token 726: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.017540089786052704
    2. 'g' → logprob: -4.892539978027344
    3. 'rg' → logprob: -5.517539978027344
    4. 'rabbit' → logprob: -5.767539978027344
    5. 'for' → logprob: -6.517539978027344
    6. 'r' → logprob: -7.267539978027344
    7. ' graph' → logprob: -8.142539978027344
    8. 'raph' → logprob: -9.017539978027344
    9. 'edges' → logprob: -9.642539978027344
    10. 'graf' → logprob: -10.892539978027344

Token 727: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07691356539726257
    2. '=' → logprob: -2.701913595199585
    3. '.' → logprob: -5.076913356781006
    4. '.add' → logprob: -7.951913356781006
    5. '<|end|>' → logprob: -8.826913833618164
    6. '   ' → logprob: -10.201913833618164
    7. '<|end|>' → logprob: -10.451913833618164
    8. ')' → logprob: -10.576913833618164
    9. ',' → logprob: -10.576913833618164
    10. '.=' → logprob: -11.076913833618164

Token 728: ' Rabbit' (ID: 79131)
  Prédit: 'Rabbit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rabbit' → logprob: -0.0067176250740885735
    2. ' Rabbit' → logprob: -5.006717681884766
    3. 'Graph' → logprob: -13.256717681884766
    4. 'R' → logprob: -14.881717681884766
    5. 'Rab' → logprob: -16.006717681884766
    6. '   ' → logprob: -17.506717681884766
    7. ' rabbit' → logprob: -18.006717681884766
    8. 'Ruby' → logprob: -19.381717681884766
    9. 'rabbit' → logprob: -19.506717681884766
    10. ' ' → logprob: -20.256717681884766

Token 729: 'Graph' (ID: 9922)
  Prédit: 'Graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Graph' → logprob: -1.2664456789934775e-06
    2. '(n' → logprob: -14.625000953674316
    3. 'graph' → logprob: -14.750000953674316
    4. 'raph' → logprob: -14.875000953674316
    5. '(Graph' → logprob: -18.250001907348633
    6. 'Graphs' → logprob: -19.250001907348633
    7. '(' → logprob: -19.375001907348633
    8. '_graph' → logprob: -20.000001907348633
    9. 'GRAPH' → logprob: -20.250001907348633
    10. '(graph' → logprob: -20.375001907348633

Token 730: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.872261317563243e-05
    2. 'n' → logprob: -9.750059127807617
    3. '(' → logprob: -14.750059127807617
    4. '(
' → logprob: -17.875059127807617
    5. ' n' → logprob: -19.125059127807617
    6. '[n' → logprob: -19.500059127807617
    7. ' (' → logprob: -20.000059127807617
    8. '	n' → logprob: -20.625059127807617
    9. '<n' → logprob: -21.250059127807617
    10. 'N' → logprob: -21.625059127807617

Token 731: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14331504702568054
    2. ')
' → logprob: -2.018315076828003
    3. '   ' → logprob: -7.518314838409424
    4. '<|end|>' → logprob: -10.143315315246582
    5. ')m' → logprob: -10.643315315246582
    6. 'for' → logprob: -12.143315315246582
    7. ')
' → logprob: -12.393315315246582
    8. ')

' → logprob: -12.518315315246582
    9. ')n' → logprob: -12.768315315246582
    10. '
' → logprob: -12.768315315246582

Token 732: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3870530426502228
    2. 'for' → logprob: -1.1370530128479004
    3. ' for' → logprob: -8.637053489685059
    4. '	for' → logprob: -12.512053489685059
    5. '
' → logprob: -14.637053489685059
    6. '    
' → logprob: -14.887053489685059
    7. '<|end|>' → logprob: -17.387052536010742
    8. '```' → logprob: -17.762052536010742
    9. '       ' → logprob: -18.387052536010742
    10. '  ' → logprob: -18.887052536010742

Token 733: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.1279553291387856e-05
    2. ' for' → logprob: -11.500011444091797
    3. '   ' → logprob: -13.875011444091797
    4. '	for' → logprob: -15.875011444091797
    5. '    
' → logprob: -17.125011444091797
    6. '
' → logprob: -17.250011444091797
    7. '```' → logprob: -21.875011444091797
    8. '<|end|>' → logprob: -22.250011444091797
    9. 'For' → logprob: -22.375011444091797
    10. 'while' → logprob: -22.500011444091797

Token 734: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0802738870552275e-05
    2. ' _' → logprob: -12.00001049041748
    3. '_i' → logprob: -12.37501049041748
    4. '_range' → logprob: -15.50001049041748
    5. '_in' → logprob: -16.500011444091797
    6. '_line' → logprob: -16.500011444091797
    7. '_=' → logprob: -18.125011444091797
    8. '_

' → logprob: -18.875011444091797
    9. '_j' → logprob: -19.125011444091797
    10. '_
' → logprob: -19.750011444091797

Token 735: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4743702709674835
    2. ' in' → logprob: -0.9743702411651611
    3. 'range' → logprob: -8.599370002746582
    4. ' ' → logprob: -10.099370002746582
    5. 'i' → logprob: -10.474370002746582
    6. '```' → logprob: -11.224370002746582
    7. '_' → logprob: -12.224370002746582
    8. '  ' → logprob: -12.349370002746582
    9. '   ' → logprob: -12.849370002746582
    10. '``' → logprob: -12.974370002746582

Token 736: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.941850526549388e-06
    2. ' range' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.75000762939453
    4. '  ' → logprob: -19.00000762939453
    5. '(range' → logprob: -19.25000762939453
    6. ' ' → logprob: -19.37500762939453
    7. '	range' → logprob: -19.75000762939453
    8. 'input' → logprob: -20.25000762939453
    9. 'in' → logprob: -20.50000762939453
    10. '    ' → logprob: -21.00000762939453

Token 737: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -3.8889261304575484e-06
    2. 'm' → logprob: -12.500003814697266
    3. ' (' → logprob: -16.375003814697266
    4. '(' → logprob: -17.750003814697266
    5. ' m' → logprob: -19.375003814697266
    6. ',m' → logprob: -21.000003814697266
    7. '(M' → logprob: -21.500003814697266
    8. '	m' → logprob: -21.625003814697266
    9. '(n' → logprob: -22.000003814697266
    10. '   ' → logprob: -22.125003814697266

Token 738: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.1126302480697632
    2. ':' → logprob: -1.3626302480697632
    3. '):' → logprob: -1.3626302480697632
    4. '   ' → logprob: -2.8626303672790527
    5. '():
' → logprob: -3.2376303672790527
    6. ',' → logprob: -3.9876303672790527
    7. '(n' → logprob: -4.362630367279053
    8. ':
' → logprob: -4.612630367279053
    9. '():' → logprob: -4.612630367279053
    10. 'n' → logprob: -6.112630367279053

Token 739: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16642263531684875
    2. '       ' → logprob: -2.1664226055145264
    3. 'u' → logprob: -3.5414226055145264
    4. ' u' → logprob: -5.2914228439331055
    5. '(u' → logprob: -6.9164228439331055
    6. '        
' → logprob: -7.0414228439331055
    7. '```' → logprob: -7.0414228439331055
    8. '    
' → logprob: -7.2914228439331055
    9. '
' → logprob: -8.041422843933105
    10. '	u' → logprob: -8.166422843933105

Token 740: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.005244310479611158
    2. ' u' → logprob: -5.255244255065918
    3. '   ' → logprob: -11.630244255065918
    4. '	u' → logprob: -13.630244255065918
    5. '(u' → logprob: -16.630245208740234
    6. '*u' → logprob: -16.630245208740234
    7. '_u' → logprob: -16.755245208740234
    8. ' line' → logprob: -16.755245208740234
    9. '    
' → logprob: -16.755245208740234
    10. 'line' → logprob: -16.880245208740234

Token 741: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07024873048067093
    2. ',v' → logprob: -2.69524884223938
    3. ' ,' → logprob: -8.1952486038208
    4. ',u' → logprob: -11.1952486038208
    5. ',user' → logprob: -12.5702486038208
    6. ',int' → logprob: -12.9452486038208
    7. ',c' → logprob: -12.9452486038208
    8. 'v' → logprob: -13.5702486038208
    9. ',f' → logprob: -13.8202486038208
    10. ',b' → logprob: -13.9452486038208

Token 742: ',f' (ID: 38733)
  Prédit: ',f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',f' → logprob: -0.4742223024368286
    2. ',' → logprob: -0.9742223024368286
    3. ',w' → logprob: -9.724222183227539
    4. ' ,' → logprob: -10.849222183227539
    5. 'f' → logprob: -10.849222183227539
    6. ',v' → logprob: -10.974222183227539
    7. ',_' → logprob: -12.474222183227539
    8. '=' → logprob: -12.599222183227539
    9. ',c' → logprob: -12.724222183227539
    10. ',d' → logprob: -13.099222183227539

Token 743: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011048170737922192
    2. ' =' → logprob: -4.511048316955566
    3. '=input' → logprob: -15.386048316955566
    4. ',' → logprob: -16.26104736328125
    5. '=int' → logprob: -17.13604736328125
    6. '=line' → logprob: -17.26104736328125
    7. '=f' → logprob: -18.13604736328125
    8. ' ' → logprob: -18.63604736328125
    9. '   ' → logprob: -18.88604736328125
    10. ')=' → logprob: -18.88604736328125

Token 744: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.014163628220558167
    2. ' map' → logprob: -4.264163494110107
    3. '   ' → logprob: -16.639163970947266
    4. '	map' → logprob: -17.514163970947266
    5. '    ' → logprob: -19.514163970947266
    6. '  ' → logprob: -20.264163970947266
    7. 'm' → logprob: -20.639163970947266
    8. ' ' → logprob: -21.389163970947266
    9. '(map' → logprob: -22.764163970947266
    10. '_map' → logprob: -23.389163970947266

Token 745: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000273971410933882
    2. 'int' → logprob: -8.250273704528809
    3. '(input' → logprob: -11.500273704528809
    4. '(' → logprob: -13.250273704528809
    5. '[int' → logprob: -15.625273704528809
    6. '(str' → logprob: -15.750273704528809
    7. 'input' → logprob: -16.000274658203125
    8. '<int' → logprob: -16.250274658203125
    9. ',int' → logprob: -16.625274658203125
    10. ' int' → logprob: -16.875274658203125

Token 746: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7055774927139282
    2. ',input' → logprob: -0.7055774927139282
    3. '(input' → logprob: -4.580577373504639
    4. 'input' → logprob: -6.955577373504639
    5. ',int' → logprob: -7.205577373504639
    6. '(' → logprob: -8.205577850341797
    7. '(),' → logprob: -9.955577850341797
    8. '(int' → logprob: -10.455577850341797
    9. ')' → logprob: -10.580577850341797
    10. '   ' → logprob: -12.205577850341797

Token 747: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0007099286303855479
    2. ' input' → logprob: -7.2507100105285645
    3. ',input' → logprob: -21.625709533691406
    4. '(input' → logprob: -21.750709533691406
    5. '_input' → logprob: -23.250709533691406
    6. '   ' → logprob: -23.375709533691406
    7. '	input' → logprob: -23.375709533691406
    8. '=input' → logprob: -23.750709533691406
    9. '<input' → logprob: -23.875709533691406
    10. 'Input' → logprob: -24.125709533691406

Token 748: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.650518920039758e-06
    2. '()' → logprob: -12.625003814697266
    3. '.readline' → logprob: -16.000003814697266
    4. '(' → logprob: -16.875003814697266
    5. '   ' → logprob: -17.625003814697266
    6. ' ().' → logprob: -17.625003814697266
    7. '.split' → logprob: -17.875003814697266
    8. '())' → logprob: -18.375003814697266
    9. '.' → logprob: -18.500003814697266
    10. '()[' → logprob: -19.000003814697266

Token 749: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.981667537620524e-06
    2. 'strip' → logprob: -13.250001907348633
    3. '(split' → logprob: -16.500001907348633
    4. '().' → logprob: -16.750001907348633
    5. ' split' → logprob: -17.000001907348633
    6. '.split' → logprob: -18.500001907348633
    7. 'rstrip' → logprob: -18.750001907348633
    8. 'read' → logprob: -20.250001907348633
    9. 'spl' → logprob: -20.500001907348633
    10. ')' → logprob: -21.625001907348633

Token 750: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005972880870103836
    2. ')
' → logprob: -5.130972862243652
    3. '   ' → logprob: -10.755972862243652
    4. '())' → logprob: -11.380972862243652
    5. ')
' → logprob: -12.380972862243652
    6. '()' → logprob: -12.630972862243652
    7. '       ' → logprob: -13.755972862243652
    8. '())
' → logprob: -14.255972862243652
    9. ' )' → logprob: -14.505972862243652
    10. ')`
' → logprob: -14.505972862243652

Token 751: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036216892767697573
    2. 'graph' → logprob: -6.503621578216553
    3. '       ' → logprob: -7.128621578216553
    4. '	graph' → logprob: -7.128621578216553
    5. ' graph' → logprob: -8.253622055053711
    6. '<|end|>' → logprob: -8.753622055053711
    7. '
' → logprob: -10.253622055053711
    8. '(graph' → logprob: -10.628622055053711
    9. '    
' → logprob: -11.003622055053711
    10. '  ' → logprob: -12.628622055053711

Token 752: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.005787769798189402
    2. ' graph' → logprob: -5.2557878494262695
    3. '   ' → logprob: -7.7557878494262695
    4. '	graph' → logprob: -9.38078784942627
    5. '       ' → logprob: -10.13078784942627
    6. '(graph' → logprob: -14.13078784942627
    7. '
' → logprob: -15.75578784942627
    8. '.graph' → logprob: -16.505786895751953
    9. '_graph' → logprob: -16.630786895751953
    10. '           ' → logprob: -16.630786895751953

Token 753: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -5.9795445849886164e-05
    2. '.' → logprob: -9.750060081481934
    3. '.solve' → logprob: -14.500060081481934
    4. '.ad' → logprob: -14.875060081481934
    5. '.append' → logprob: -15.625060081481934
    6. '.Add' → logprob: -16.250059127807617
    7. ' .' → logprob: -16.250059127807617
    8. '.setdefault' → logprob: -16.875059127807617
    9. '\.' → logprob: -17.375059127807617
    10. '.create' → logprob: -17.625059127807617

Token 754: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: 0.0
    2. '_' → logprob: -18.125
    3. '_ed' → logprob: -18.625
    4. 'edge' → logprob: -18.75
    5. '_edges' → logprob: -19.5
    6. '_EDGE' → logprob: -19.875
    7. '_e' → logprob: -21.25
    8. ' edge' → logprob: -21.375
    9. '_friend' → logprob: -21.375
    10. '_line' → logprob: -21.5

Token 755: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -6.988221684878226e-06
    2. '(' → logprob: -11.875006675720215
    3. ' (' → logprob: -18.62500762939453
    4. 'u' → logprob: -18.87500762939453
    5. '(
' → logprob: -19.37500762939453
    6. '(user' → logprob: -20.12500762939453
    7. '[u' → logprob: -20.75000762939453
    8. '(ui' → logprob: -20.87500762939453
    9. ',u' → logprob: -21.00000762939453
    10. '(v' → logprob: -21.25000762939453

Token 756: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06294244527816772
    2. ',v' → logprob: -2.8129425048828125
    3. ' ,' → logprob: -6.9379425048828125
    4. ',u' → logprob: -12.812942504882812
    5. '-' → logprob: -14.562942504882812
    6. 'v' → logprob: -15.062942504882812
    7. '   ' → logprob: -16.187942504882812
    8. '-,' → logprob: -16.187942504882812
    9. ',user' → logprob: -16.562942504882812
    10. ',b' → logprob: -17.312942504882812

Token 757: ',f' (ID: 38733)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006755394395440817
    2. ',f' → logprob: -5.006755352020264
    3. ' ,' → logprob: -10.131755828857422
    4. 'f' → logprob: -16.006755828857422
    5. ' f' → logprob: -17.006755828857422
    6. '   ' → logprob: -17.881755828857422
    7. ')' → logprob: -18.631755828857422
    8. ',v' → logprob: -18.756755828857422
    9. ',
' → logprob: -19.256755828857422
    10. ',p' → logprob: -19.631755828857422

Token 758: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0683535037969705e-05
    2. ')
' → logprob: -12.12501049041748
    3. '<|end|>' → logprob: -12.37501049041748
    4. '   ' → logprob: -14.62501049041748
    5. ' )' → logprob: -15.50001049041748
    6. ')return' → logprob: -16.000011444091797
    7. '       ' → logprob: -16.875011444091797
    8. '),' → logprob: -17.500011444091797
    9. '<|end|>' → logprob: -17.875011444091797
    10. ')#' → logprob: -17.875011444091797

Token 759: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.21788612008094788
    2. 'return' → logprob: -2.717886209487915
    3. 'result' → logprob: -2.717886209487915
    4. '   ' → logprob: -3.217886209487915
    5. '
' → logprob: -4.467885971069336
    6. ' return' → logprob: -5.217885971069336
    7. ' print' → logprob: -5.467885971069336
    8. ' result' → logprob: -6.592885971069336
    9. 'graph' → logprob: -7.717885971069336
    10. '    
' → logprob: -8.592885971069336

Token 760: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -7.195421494543552e-05
    2. 'result' → logprob: -10.25007152557373
    3. 'res' → logprob: -10.50007152557373
    4. '   ' → logprob: -11.75007152557373
    5. ' print' → logprob: -14.12507152557373
    6. 'ans' → logprob: -14.87507152557373
    7. '    
' → logprob: -17.000072479248047
    8. 'score' → logprob: -17.000072479248047
    9. 'answer' → logprob: -17.500072479248047
    10. '```' → logprob: -18.125072479248047

Token 761: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.002482315758243203
    2. '(' → logprob: -6.0024824142456055
    3. 'graph' → logprob: -12.377482414245605
    4. '(
' → logprob: -13.252482414245605
    5. '()' → logprob: -14.627482414245605
    6. '(Graph' → logprob: -16.12748146057129
    7. '	graph' → logprob: -17.12748146057129
    8. '((' → logprob: -17.12748146057129
    9. '(gr' → logprob: -17.37748146057129
    10. ' graph' → logprob: -17.62748146057129

Token 762: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -1.3306015716807451e-05
    2. '.' → logprob: -11.50001335144043
    3. '.s' → logprob: -13.37501335144043
    4. '.sol' → logprob: -13.75001335144043
    5. ' .' → logprob: -15.25001335144043
    6. ').' → logprob: -15.62501335144043
    7. 'solve' → logprob: -17.87501335144043
    8. '.resolve' → logprob: -18.12501335144043
    9. ')' → logprob: -18.62501335144043
    10. '.solution' → logprob: -18.75001335144043

Token 763: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00012654215970542282
    2. '()' → logprob: -9.000126838684082
    3. '())
' → logprob: -13.625126838684082
    4. ')' → logprob: -13.750126838684082
    5. ' ())' → logprob: -14.250126838684082
    6. '();)' → logprob: -16.875125885009766
    7. '()))' → logprob: -18.125125885009766
    8. '()
' → logprob: -18.750125885009766
    9. '())

' → logprob: -19.000125885009766
    10. '(' → logprob: -19.250125885009766

Token 764: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.5690089639974758e-05
    2. ' if' → logprob: -11.125015258789062
    3. 'main' → logprob: -14.875015258789062
    4. '```' → logprob: -14.875015258789062
    5. '#' → logprob: -16.250015258789062
    6. '
' → logprob: -16.375015258789062
    7. '<|end|>' → logprob: -17.500015258789062
    8. '    
' → logprob: -18.875015258789062
    9. '\' → logprob: -19.000015258789062
    10. 'If' → logprob: -19.000015258789062

Token 765: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2519803047180176
    2. '__' → logprob: -1.5019803047180176
    3. 'name' → logprob: -10.37697982788086
    4. '_name' → logprob: -11.25197982788086
    5. '_' → logprob: -12.37697982788086
    6. '___' → logprob: -13.37697982788086
    7. 'Name' → logprob: -14.75197982788086
    8. '____' → logprob: -15.25197982788086
    9. ' "__' → logprob: -15.75197982788086
    10. '.__' → logprob: -16.12697982788086

Token 766: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.009313415735960007
    2. ' ==' → logprob: -5.384313583374023
    3. '==' → logprob: -5.509313583374023
    4. '=="' → logprob: -8.009313583374023
    5. ' __' → logprob: -9.259313583374023
    6. 'name' → logprob: -9.509313583374023
    7. '__.__' → logprob: -9.759313583374023
    8. '.__' → logprob: -10.509313583374023
    9. '=='' → logprob: -11.509313583374023
    10. '__.' → logprob: -11.759313583374023

Token 767: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.292907877039397e-06
    2. '__.__' → logprob: -12.75000286102295
    3. '__.' → logprob: -15.75000286102295
    4. '==' → logprob: -16.000003814697266
    5. '__('' → logprob: -17.625003814697266
    6. '__
' → logprob: -17.625003814697266
    7. '____' → logprob: -17.625003814697266
    8. '___' → logprob: -17.625003814697266
    9. '__["' → logprob: -18.750003814697266
    10. 'name' → logprob: -19.125003814697266

Token 768: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2768177092075348
    2. '==' → logprob: -1.5268176794052124
    3. ' ==' → logprob: -4.401817798614502
    4. '=="' → logprob: -4.651817798614502
    5. '=='' → logprob: -5.901817798614502
    6. '__.__' → logprob: -11.276817321777344
    7. '===' → logprob: -11.276817321777344
    8. '"' → logprob: -12.276817321777344
    9. '=' → logprob: -12.276817321777344
    10. '___' → logprob: -13.401817321777344

Token 769: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04859680309891701
    2. ''' → logprob: -3.0485968589782715
    3. ' "__' → logprob: -11.798596382141113
    4. '__' → logprob: -13.673596382141113
    5. ' '__' → logprob: -15.173596382141113
    6. ''"' → logprob: -16.29859733581543
    7. '"user' → logprob: -16.42359733581543
    8. '"name' → logprob: -16.67359733581543
    9. '"class' → logprob: -17.04859733581543
    10. '("__' → logprob: -17.67359733581543

Token 770: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3021005094051361
    2. 'main' → logprob: -1.5521005392074585
    3. '"' → logprob: -3.052100419998169
    4. ''' → logprob: -6.427100658416748
    5. 'name' → logprob: -10.17710018157959
    6. '__":
' → logprob: -12.30210018157959
    7. '_main' → logprob: -12.55210018157959
    8. '__
' → logprob: -13.17710018157959
    9. '"name' → logprob: -13.42710018157959
    10. '___' → logprob: -13.55210018157959

Token 771: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0899834930896759
    2. '__":
' → logprob: -2.4649834632873535
    3. '__.__' → logprob: -7.8399834632873535
    4. '__.' → logprob: -8.089983940124512
    5. '__["' → logprob: -8.964983940124512
    6. '__':
' → logprob: -9.214983940124512
    7. '__
' → logprob: -9.339983940124512
    8. '__
' → logprob: -11.714983940124512
    9. '__[' → logprob: -12.214983940124512
    10. '__",' → logprob: -12.964983940124512

Token 772: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.017080694437026978
    2. '   ' → logprob: -4.642080783843994
    3. '__' → logprob: -5.017080783843994
    4. ' main' → logprob: -7.517080783843994
    5. '	main' → logprob: -9.392080307006836
    6. '    
' → logprob: -10.892080307006836
    7. '_main' → logprob: -12.267080307006836
    8. '```' → logprob: -12.392080307006836
    9. 'run' → logprob: -12.642080307006836
    10. '"' → logprob: -12.767080307006836

Token 773: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.320199877838604e-07
    2. ' main' → logprob: -14.75
    3. '	main' → logprob: -18.25
    4. '   ' → logprob: -19.0
    5. 'import' → logprob: -21.125
    6. '_main' → logprob: -24.5
    7. '(main' → logprob: -24.75
    8. '.main' → logprob: -24.75
    9. '  ' → logprob: -26.875
    10. ' ' → logprob: -27.125

Token 774: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 772
Tokens correctement prédits (1ère position, stricte): 349
Tokens correctement prédits (1ère position, avec adaptation): 391
Tokens correctement prédits (top 10): 649
Précision stricte (1ère position): 45.21%
Précision adaptée (1ère position): 50.65%
Précision (top 10): 84.07%
================================================================================
