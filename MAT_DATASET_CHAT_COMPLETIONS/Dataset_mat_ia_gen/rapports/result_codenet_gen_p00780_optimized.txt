================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

MAX = 2**15
sieve = [True]*(MAX+1)
sieve[0] = sieve[1] = False
for i in range(2,int(MAX**0.5)+1):
    if sieve[i]:
        for j in range(i*i,MAX+1,i):
            sieve[j] = False

for line in sys.stdin:
    n = int(line)
    if n == 0:
        break
    count = 0
    for p in range(2, n//2+1):
        if sieve[p] and sieve[n-p]:
            count += 1
    print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'MAX' (ID: 21911)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06740830093622208
    2. '\n' → logprob: -3.442408323287964
    3. 'import' → logprob: -3.817408323287964
    4. '<|end|>' → logprob: -5.942408084869385
    5. '\' → logprob: -6.317408084869385
    6. 'newline' → logprob: -6.692408084869385
    7. ',' → logprob: -6.942408084869385
    8. '' → logprob: -7.317408084869385
    9. '
' → logprob: -7.692408084869385
    10. '<|end|>' → logprob: -7.692408084869385

Token 4: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.022884469479322433
    2. '_LENGTH' → logprob: -4.897884368896484
    3. '_SIZE' → logprob: -5.272884368896484
    4. '_LINE' → logprob: -5.897884368896484
    5. '_SPACE' → logprob: -6.647884368896484
    6. '_CAP' → logprob: -6.897884368896484
    7. '_LEN' → logprob: -7.397884368896484
    8. ' _' → logprob: -7.522884368896484
    9. '_CHAR' → logprob: -7.647884368896484
    10. '_VALUE' → logprob: -8.022884368896484

Token 5: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005449328105896711
    2. '100' → logprob: -5.505449295043945
    3. '10' → logprob: -6.630449295043945
    4. ' sys' → logprob: -10.130449295043945
    5. 'sys' → logprob: -12.755449295043945
    6. '999' → logprob: -13.380449295043945
    7. 'int' → logprob: -13.880449295043945
    8. '1' → logprob: -14.005449295043945
    9. '  ' → logprob: -14.005449295043945
    10. '256' → logprob: -14.505449295043945

Token 6: '2' (ID: 17)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.06667542457580566
    2. '10' → logprob: -2.8166754245758057
    3. ' ' → logprob: -5.441675186157227
    4. '1' → logprob: -9.316675186157227
    5. '999' → logprob: -9.441675186157227
    6. '256' → logprob: -9.816675186157227
    7. '102' → logprob: -9.941675186157227
    8. '255' → logprob: -10.191675186157227
    9. '2' → logprob: -11.316675186157227
    10. 'sys' → logprob: -11.316675186157227

Token 7: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.8091552257537842
    2. '0' → logprob: -1.0591552257537842
    3. ' **' → logprob: -1.6841552257537842
    4. '*' → logprob: -4.434155464172363
    5. ' *' → logprob: -5.559155464172363
    6. ' ' → logprob: -6.309155464172363
    7. '_' → logprob: -6.809155464172363
    8. '00' → logprob: -7.059155464172363
    9. '\' → logprob: -7.434155464172363
    10. '6' → logprob: -7.809155464172363

Token 8: '15' (ID: 1055)
  Prédit: '31'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '31' → logprob: -0.005749725736677647
    2. '63' → logprob: -5.255749702453613
    3. '32' → logprob: -7.880749702453613
    4. '30' → logprob: -9.880749702453613
    5. '64' → logprob: -10.505749702453613
    6. '16' → logprob: -10.630749702453613
    7. ' ' → logprob: -10.880749702453613
    8. '10' → logprob: -11.505749702453613
    9. '128' → logprob: -13.755749702453613
    10. '7' → logprob: -13.755749702453613

Token 9: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0937929153442383
    2. '
' → logprob: -1.7187929153442383
    3. '  
' → logprob: -2.0937929153442383
    4. '' → logprob: -2.5937929153442383
    5. '#' → logprob: -2.8437929153442383
    6. '\' → logprob: -2.9687929153442383
    7. '+' → logprob: -3.0937929153442383
    8. ' 
' → logprob: -3.2187929153442383
    9. '-' → logprob: -3.7187929153442383
    10. '**' → logprob: -4.093792915344238

Token 10: 's' (ID: 82)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8906504511833191
    2. '_' → logprob: -1.7656505107879639
    3. '
' → logprob: -2.140650510787964
    4. '```' → logprob: -2.765650510787964
    5. '\n' → logprob: -3.265650510787964
    6. '\' → logprob: -3.390650510787964
    7. 'newline' → logprob: -3.390650510787964
    8. '+' → logprob: -3.390650510787964
    9. '**' → logprob: -4.140650272369385
    10. '#' → logprob: -4.265650272369385

Token 11: 'ieve' (ID: 3703)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.14340831339359283
    2. 'y' → logprob: -2.3934082984924316
    3. 'tr' → logprob: -4.268408298492432
    4. 'um' → logprob: -4.393408298492432
    5. 'et' → logprob: -5.768408298492432
    6. 't' → logprob: -5.893408298492432
    7. ' =' → logprob: -6.018408298492432
    8. 'ize' → logprob: -6.268408298492432
    9. '=' → logprob: -6.893408298492432
    10. 'tring' → logprob: -7.518408298492432

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2884869873523712
    2. '_' → logprob: -1.7884869575500488
    3. '(' → logprob: -2.913486957550049
    4. '=' → logprob: -3.913486957550049
    5. ' =' → logprob: -5.538486957550049
    6. '[]' → logprob: -6.038486957550049
    7. '_s' → logprob: -7.038486957550049
    8. '[:]' → logprob: -7.538486957550049
    9. '()' → logprob: -8.288487434387207
    10. '```' → logprob: -8.788487434387207

Token 13: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.0181703120470047
    2. '[' → logprob: -4.018170356750488
    3. ' ' → logprob: -11.768170356750488
    4. '[s' → logprob: -12.643170356750488
    5. '[int' → logprob: -13.268170356750488
    6. '[MAX' → logprob: -13.518170356750488
    7. ' []' → logprob: -13.768170356750488
    8. '[]' → logprob: -13.893170356750488
    9. '[a' → logprob: -14.268170356750488
    10. '[max' → logprob: -14.643170356750488

Token 14: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.22034457325935364
    2. ' True' → logprob: -1.7203445434570312
    3. 'False' → logprob: -4.095344543457031
    4. '1' → logprob: -6.595344543457031
    5. ' False' → logprob: -7.595344543457031
    6. '0' → logprob: -8.470344543457031
    7. '(True' → logprob: -11.095344543457031
    8. ' ' → logprob: -11.845344543457031
    9. '   ' → logprob: -14.220344543457031
    10. 'Tr' → logprob: -15.220344543457031

Token 15: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5014668107032776
    2. ' for' → logprob: -1.0014667510986328
    3. '[' → logprob: -4.126466751098633
    4. ',' → logprob: -5.251466751098633
    5. ' ]' → logprob: -6.001466751098633
    6. 'for' → logprob: -6.376466751098633
    7. ']*' → logprob: -6.876466751098633
    8. ' ' → logprob: -9.001466751098633
    9. '[]' → logprob: -9.876466751098633
    10. ')' → logprob: -10.376466751098633

Token 16: 'MAX' (ID: 21911)
  Prédit: 'MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -1.3663626305060461e-05
    2. ' MAX' → logprob: -11.37501335144043
    3. '(MAX' → logprob: -13.12501335144043
    4. 'max' → logprob: -16.62501335144043
    5. 'Max' → logprob: -17.25001335144043
    6. '_MAX' → logprob: -18.12501335144043
    7. 'MA' → logprob: -18.12501335144043
    8. 'M' → logprob: -19.00001335144043
    9. '655' → logprob: -19.62501335144043
    10. 'MX' → logprob: -19.75001335144043

Token 17: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020474824123084545
    2. ' )' → logprob: -6.502047538757324
    3. '+' → logprob: -7.877047538757324
    4. '-' → logprob: -9.002047538757324
    5. '))' → logprob: -10.877047538757324
    6. ' -' → logprob: -11.752047538757324
    7. '//' → logprob: -12.877047538757324
    8. '+)' → logprob: -13.377047538757324
    9. ')+' → logprob: -13.502047538757324
    10. ' +' → logprob: -13.627047538757324

Token 18: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011236425780225545
    2. ' ' → logprob: -9.125112533569336
    3. '0' → logprob: -12.750112533569336
    4. '  ' → logprob: -16.125112533569336
    5. '2' → logprob: -16.625112533569336
    6. '5' → logprob: -16.875112533569336
    7. '   ' → logprob: -16.875112533569336
    8. '15' → logprob: -17.375112533569336
    9. '```' → logprob: -17.625112533569336
    10. '10' → logprob: -17.750112533569336

Token 19: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.057743949990254e-05
    2. ' )' → logprob: -10.875020980834961
    3. ')
' → logprob: -14.000020980834961
    4. ']' → logprob: -15.625020980834961
    5. '[' → logprob: -15.625020980834961
    6. ')

' → logprob: -16.62502098083496
    7. '))' → logprob: -16.75002098083496
    8. '),' → logprob: -17.12502098083496
    9. '`)' → logprob: -17.12502098083496
    10. ')#' → logprob: -17.12502098083496

Token 20: 's' (ID: 82)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0144437551498413
    2. '
' → logprob: -1.5144437551498413
    3. 'for' → logprob: -1.7644437551498413
    4. '#' → logprob: -2.889443874359131
    5. ' 
' → logprob: -2.889443874359131
    6. ' for' → logprob: -3.264443874359131
    7. '  
' → logprob: -3.389443874359131
    8. 's' → logprob: -3.639443874359131
    9. '\' → logprob: -4.889443874359131
    10. '' → logprob: -5.514443874359131

Token 21: 'ieve' (ID: 3703)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07159816473722458
    2. 'ieve' → logprob: -2.6965980529785156
    3. 'iev' → logprob: -7.071598052978516
    4. 'ie' → logprob: -7.696598052978516
    5. ' i' → logprob: -9.446598052978516
    6. ' ' → logprob: -9.696598052978516
    7. 'iv' → logprob: -10.196598052978516
    8. 'ive' → logprob: -10.696598052978516
    9. '[i' → logprob: -10.696598052978516
    10. 't' → logprob: -11.071598052978516

Token 22: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0028246084693819284
    2. '[:]' → logprob: -6.127824783325195
    3. '\[' → logprob: -8.127824783325195
    4. '[]' → logprob: -9.377824783325195
    5. '[
' → logprob: -9.502824783325195
    6. '<|end|>' → logprob: -9.877824783325195
    7. '```' → logprob: -9.877824783325195
    8. '[...]' → logprob: -10.627824783325195
    9. '\' → logprob: -11.502824783325195
    10. ']' → logprob: -11.877824783325195

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028109403792768717
    2. ' ' → logprob: -5.877810955047607
    3. '   ' → logprob: -13.12781047821045
    4. '  ' → logprob: -13.25281047821045
    5. '1' → logprob: -13.37781047821045
    6. ':' → logprob: -16.002811431884766
    7. '2' → logprob: -16.065311431884766
    8. '```' → logprob: -16.252811431884766
    9. '00' → logprob: -16.315311431884766
    10. ')' → logprob: -16.377811431884766

Token 24: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0021776235662400723
    2. ' ]' → logprob: -6.252177715301514
    3. ']=' → logprob: -8.377177238464355
    4. '],' → logprob: -11.252177238464355
    5. ' ' → logprob: -13.127177238464355
    6. ',' → logprob: -14.002177238464355
    7. '=' → logprob: -14.127177238464355
    8. ')' → logprob: -14.377177238464355
    9. ']==' → logprob: -14.627177238464355
    10. ':' → logprob: -14.877177238464355

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03368834778666496
    2. '=' → logprob: -3.4086883068084717
    3. ' ' → logprob: -11.28368854522705
    4. ',' → logprob: -11.28368854522705
    5. ' =
' → logprob: -11.90868854522705
    6. '=False' → logprob: -12.28368854522705
    7. ' ==' → logprob: -13.65868854522705
    8. ' =
' → logprob: -13.65868854522705
    9. ' ,' → logprob: -13.90868854522705
    10. ' |=' → logprob: -14.15868854522705

Token 26: ' sieve' (ID: 142781)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.04862483590841293
    2. ' False' → logprob: -3.0486247539520264
    3. 's' → logprob: -10.298624992370605
    4. ' sieve' → logprob: -13.423624992370605
    5. '(False' → logprob: -14.048624992370605
    6. ' ' → logprob: -14.673624992370605
    7. '.False' → logprob: -15.423624992370605
    8. 'F' → logprob: -15.423624992370605
    9. '=False' → logprob: -15.548624992370605
    10. 'Falsy' → logprob: -16.17362403869629

Token 27: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009500489104539156
    2. 'False' → logprob: -7.000949859619141
    3. '=False' → logprob: -10.75094985961914
    4. '(False' → logprob: -12.37594985961914
    5. ' False' → logprob: -12.62594985961914
    6. ' =' → logprob: -12.62594985961914
    7. '1' → logprob: -13.00094985961914
    8. '```' → logprob: -13.62594985961914
    9. '.False' → logprob: -14.50094985961914
    10. '_false' → logprob: -14.50094985961914

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016039233014453202
    2. ' ' → logprob: -8.750160217285156
    3. 'False' → logprob: -13.250160217285156
    4. '  ' → logprob: -16.625160217285156
    5. '0' → logprob: -17.312660217285156
    6. ' False' → logprob: -17.375160217285156
    7. '```' → logprob: -18.500160217285156
    8. '   ' → logprob: -18.562660217285156
    9. '۱' → logprob: -18.687660217285156
    10. 'True' → logprob: -18.937660217285156

Token 29: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06340306997299194
    2. '=' → logprob: -3.1884031295776367
    3. ' =' → logprob: -3.9384031295776367
    4. ']=' → logprob: -7.938403129577637
    5. ' ]' → logprob: -8.188403129577637
    6. ')' → logprob: -10.313403129577637
    7. 'False' → logprob: -10.813403129577637
    8. ' ' → logprob: -10.938403129577637
    9. '=False' → logprob: -11.688403129577637
    10. ' False' → logprob: -13.563403129577637

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2019835263490677
    2. '=' → logprob: -1.7019835710525513
    3. '=False' → logprob: -7.576983451843262
    4. 'False' → logprob: -9.826983451843262
    5. ' False' → logprob: -12.576983451843262
    6. '=True' → logprob: -16.076984405517578
    7. ' ' → logprob: -16.076984405517578
    8. '=false' → logprob: -16.576984405517578
    9. 'false' → logprob: -16.951984405517578
    10. ' =
' → logprob: -17.201984405517578

Token 31: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.25192907452583313
    2. ' False' → logprob: -1.5019290447235107
    3. '(False' → logprob: -18.376928329467773
    4. ' ' → logprob: -18.501928329467773
    5. '=False' → logprob: -18.626928329467773
    6. '_false' → logprob: -19.626928329467773
    7. '.False' → logprob: -19.876928329467773
    8. 'F' → logprob: -21.376928329467773
    9. ' false' → logprob: -22.001928329467773
    10. 'Falsy' → logprob: -22.251928329467773

Token 32: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01191165391355753
    2. 'for' → logprob: -4.761911869049072
    3. ' 
' → logprob: -7.011911869049072
    4. ' for' → logprob: -7.136911869049072
    5. '

' → logprob: -7.511911869049072
    6. '\n' → logprob: -7.761911869049072
    7. '
' → logprob: -8.261911392211914
    8. '  
' → logprob: -8.886911392211914
    9. '```' → logprob: -9.011911392211914
    10. '' → logprob: -10.386911392211914

Token 33: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3289378881454468
    2. '
' → logprob: -1.5789378881454468
    3. ' for' → logprob: -2.8289380073547363
    4. '\n' → logprob: -4.578938007354736
    5. '```' → logprob: -5.953938007354736
    6. ' 
' → logprob: -7.453938007354736
    7. '
' → logprob: -7.828938007354736
    8. 'n' → logprob: -7.828938007354736
    9. '\' → logprob: -8.703937530517578
    10. '

' → logprob: -8.953937530517578

Token 34: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6936042904853821
    2. ' i' → logprob: -0.6936042904853821
    3. ' n' → logprob: -8.568604469299316
    4. 'i' → logprob: -9.443604469299316
    5. ' _' → logprob: -9.943604469299316
    6. '  ' → logprob: -10.068604469299316
    7. ' num' → logprob: -10.318604469299316
    8. ' number' → logprob: -10.818604469299316
    9. ' x' → logprob: -11.068604469299316
    10. ' p' → logprob: -11.943604469299316

Token 35: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028695426881313324
    2. 'in' → logprob: -6.002869606018066
    3. ' ' → logprob: -7.877869606018066
    4. 'n' → logprob: -12.252869606018066
    5. '  ' → logprob: -13.252869606018066
    6. ' i' → logprob: -13.252869606018066
    7. '	in' → logprob: -14.002869606018066
    8. ' =' → logprob: -14.127869606018066
    9. '=' → logprob: -14.127869606018066
    10. ',' → logprob: -14.252869606018066

Token 36: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.32441246509552
    2. ' ' → logprob: -1.32441246509552
    3. 'range' → logprob: -4.5744123458862305
    4. '2' → logprob: -7.1994123458862305
    5. ' xrange' → logprob: -11.82441234588623
    6. ' in' → logprob: -12.32441234588623
    7. '(range' → logprob: -12.32441234588623
    8. '	range' → logprob: -12.57441234588623
    9. '(' → logprob: -12.69941234588623
    10. '  ' → logprob: -12.94941234588623

Token 37: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003134168218821287
    2. ' (' → logprob: -8.375313758850098
    3. ' ' → logprob: -9.625313758850098
    4. '2' → logprob: -11.000313758850098
    5. '(
' → logprob: -16.00031280517578
    6. '  ' → logprob: -18.25031280517578
    7. ' (
' → logprob: -19.37531280517578
    8. '1' → logprob: -19.75031280517578
    9. '3' → logprob: -19.75031280517578
    10. '<|end|>' → logprob: -19.87531280517578

Token 38: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012510236352682114
    2. ' ' → logprob: -4.387510299682617
    3. '   ' → logprob: -14.762510299682617
    4. '  ' → logprob: -15.387510299682617
    5. '(' → logprob: -17.012510299682617
    6. '    ' → logprob: -18.012510299682617
    7. '２' → logprob: -18.512510299682617
    8. ')' → logprob: -18.575010299682617
    9. '```' → logprob: -18.575010299682617
    10. '	' → logprob: -18.950010299682617

Token 39: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012523902580142021
    2. ' ,' → logprob: -4.387524127960205
    3. ' ' → logprob: -12.137523651123047
    4. ',
' → logprob: -12.762523651123047
    5. ')' → logprob: -13.012523651123047
    6. ',)' → logprob: -13.887523651123047
    7. ' )' → logprob: -14.262523651123047
    8. ' ,
' → logprob: -14.512523651123047
    9. ',len' → logprob: -14.762523651123047
    10. ',int' → logprob: -15.137523651123047

Token 40: '(MAX' (ID: 129209)
  Prédit: '(MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(MAX' → logprob: -0.2533988058567047
    2. '(' → logprob: -1.5033987760543823
    3. '(s' → logprob: -6.878398895263672
    4. '((' → logprob: -8.003398895263672
    5. '(M' → logprob: -10.128398895263672
    6. '(
' → logprob: -10.628398895263672
    7. ' (' → logprob: -11.003398895263672
    8. '(len' → logprob: -12.378398895263672
    9. '(max' → logprob: -12.628398895263672
    10. '(i' → logprob: -12.753398895263672

Token 41: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.016080355271697044
    2. '(' → logprob: -4.391080379486084
    3. ' **' → logprob: -6.016080379486084
    4. '(MAX' → logprob: -7.766080379486084
    5. '*' → logprob: -9.016079902648926
    6. '.sqrt' → logprob: -9.141079902648926
    7. ')' → logprob: -9.141079902648926
    8. ')**' → logprob: -9.266079902648926
    9. ' ' → logprob: -9.516079902648926
    10. ' (' → logprob: -9.516079902648926

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011927806917810813
    2. '.' → logprob: -9.12511920928955
    3. ' ' → logprob: -11.50011920928955
    4. ' .' → logprob: -17.375120162963867
    5. '```' → logprob: -17.750120162963867
    6. '**' → logprob: -18.250120162963867
    7. '(' → logprob: -18.500120162963867
    8. ' ' → logprob: -18.625120162963867
    9. '50' → logprob: -19.875120162963867
    10. '​' → logprob: -19.875120162963867

Token 43: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.127333340875339e-06
    2. '5' → logprob: -13.625003814697266
    3. '```' → logprob: -14.000003814697266
    4. '0' → logprob: -14.625003814697266
    5. ' .' → logprob: -15.687503814697266
    6. '1' → logprob: -15.812503814697266
    7. '50' → logprob: -15.937503814697266
    8. ' ' → logprob: -16.000003814697266
    9. '`.' → logprob: -16.187503814697266
    10. '2' → logprob: -16.562503814697266

Token 44: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -5.796184723294573e-06
    2. '.' → logprob: -13.250005722045898
    3. '   ' → logprob: -14.250005722045898
    4. '```' → logprob: -14.250005722045898
    5. '``' → logprob: -15.250005722045898
    6. 'five' → logprob: -15.250005722045898
    7. '0' → logprob: -15.437505722045898
    8. '4' → logprob: -15.500005722045898
    9. '25' → logprob: -15.812505722045898
    10. ' ' → logprob: -16.0000057220459

Token 45: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.031175903975963593
    2. ')' → logprob: -3.5311758518218994
    3. '+' → logprob: -7.1561760902404785
    4. ' )' → logprob: -7.9061760902404785
    5. '()+' → logprob: -8.40617561340332
    6. ' +' → logprob: -10.90617561340332
    7. '()' → logprob: -11.53117561340332
    8. '(' → logprob: -12.03117561340332
    9. '())' → logprob: -12.40617561340332
    10. '))+' → logprob: -12.78117561340332

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014164102263748646
    2. ' ' → logprob: -4.264163970947266
    3. '  ' → logprob: -15.389163970947266
    4. '```' → logprob: -15.639163970947266
    5. '   ' → logprob: -16.389163970947266
    6. ')' → logprob: -16.764163970947266
    7. '(' → logprob: -16.764163970947266
    8. '2' → logprob: -17.264163970947266
    9. ' )' → logprob: -17.639163970947266
    10. ' ' → logprob: -17.826663970947266

Token 47: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0055068302899599075
    2. ':' → logprob: -5.255506992340088
    3. ')' → logprob: -8.63050651550293
    4. ' ):' → logprob: -9.50550651550293
    5. '):
' → logprob: -11.00550651550293
    6. ':)' → logprob: -14.13050651550293
    7. ' :' → logprob: -14.75550651550293
    8. ']:' → logprob: -14.88050651550293
    9. '+:' → logprob: -15.00550651550293
    10. '}:' → logprob: -15.13050651550293

Token 48: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12430492788553238
    2. ':' → logprob: -3.249305009841919
    3. '   ' → logprob: -3.249305009841919
    4. ' if' → logprob: -4.12430477142334
    5. '<|end|>' → logprob: -4.87430477142334
    6. '    ' → logprob: -5.12430477142334
    7. ' :' → logprob: -5.49930477142334
    8. '  ' → logprob: -5.62430477142334
    9. ' :
' → logprob: -7.74930477142334
    10. 's' → logprob: -8.24930477142334

Token 49: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.056930553168058395
    2. ' if' → logprob: -2.9319305419921875
    3. '    ' → logprob: -7.1819305419921875
    4. '   ' → logprob: -7.4319305419921875
    5. 'if' (adapté à ' if') → logprob: -8.056930541992188
    6. '  ' → logprob: -8.681930541992188
    7. '<|end|>' → logprob: -9.181930541992188
    8. ' 
' → logprob: -10.681930541992188
    9. ' i' → logprob: -11.306930541992188
    10. 's' → logprob: -11.431930541992188

Token 50: ' sieve' (ID: 142781)
  Prédit: ' sieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sieve' → logprob: -0.34380245208740234
    2. ' ' → logprob: -1.7188024520874023
    3. 's' → logprob: -2.2188024520874023
    4. ' ' → logprob: -6.343802452087402
    5. ' s' → logprob: -7.093802452087402
    6. '  ' → logprob: -8.593802452087402
    7. '	s' → logprob: -9.218802452087402
    8. ' space' → logprob: -11.468802452087402
    9. ' ‌' → logprob: -12.093802452087402
    10. '(s' → logprob: -12.218802452087402

Token 51: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.018195830285549164
    2. '[' → logprob: -4.018195629119873
    3. '[I' → logprob: -10.518196105957031
    4. '```' → logprob: -12.018196105957031
    5. '\[' → logprob: -12.643196105957031
    6. '[ip' → logprob: -12.768196105957031
    7. '[int' → logprob: -13.768196105957031
    8. '[
' → logprob: -14.018196105957031
    9. '[ii' → logprob: -14.518196105957031
    10. '[token' → logprob: -14.768196105957031

Token 52: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019754324108362198
    2. ']:' → logprob: -4.394754409790039
    3. ':' → logprob: -5.019754409790039
    4. ')' → logprob: -8.269754409790039
    5. '):
' → logprob: -8.769754409790039
    6. ']' → logprob: -9.144754409790039
    7. ' ):' → logprob: -10.269754409790039
    8. ']==' → logprob: -10.769754409790039
    9. ']):' → logprob: -10.894754409790039
    10. '==' → logprob: -12.269754409790039

Token 53: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.7513865828514099
    2. '       ' → logprob: -1.1263866424560547
    3. '   ' → logprob: -2.2513866424560547
    4. ' ' → logprob: -2.6263866424560547
    5. '    
' → logprob: -5.501386642456055
    6. '<|end|>' → logprob: -5.626386642456055
    7. ':' → logprob: -5.751386642456055
    8. '     
' → logprob: -6.126386642456055
    9. ' i' → logprob: -6.251386642456055
    10. ' for' → logprob: -6.251386642456055

Token 54: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18700248003005981
    2. ' ' → logprob: -2.562002420425415
    3. '    ' → logprob: -3.812002420425415
    4. 'for' (adapté à ' for') → logprob: -3.812002420425415
    5. '   ' → logprob: -3.937002420425415
    6. ' j' → logprob: -4.062002658843994
    7. ' i' → logprob: -4.937002658843994
    8. ' s' → logprob: -6.312002658843994
    9. 's' → logprob: -6.562002658843994
    10. 'i' → logprob: -7.937002658843994

Token 55: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.14280670881271362
    2. 'j' → logprob: -2.0178067684173584
    3. ' ' → logprob: -9.017807006835938
    4. '	j' → logprob: -11.892807006835938
    5. ' x' → logprob: -13.767807006835938
    6. 'x' → logprob: -14.517807006835938
    7. '<|end|>' → logprob: -14.642807006835938
    8. '*j' → logprob: -15.142807006835938
    9. '   ' → logprob: -15.267807006835938
    10. ' multiple' → logprob: -15.642807006835938

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.056136541068553925
    2. 'in' → logprob: -2.9311366081237793
    3. ' i' → logprob: -7.056136608123779
    4. ' ' → logprob: -8.556136131286621
    5. '	in' → logprob: -10.056136131286621
    6. ' =' → logprob: -10.056136131286621
    7. '=' → logprob: -10.306136131286621
    8. '=i' → logprob: -10.556136131286621
    9. '    ' → logprob: -10.931136131286621
    10. 'i' → logprob: -11.431136131286621

Token 57: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2014298141002655
    2. ' range' → logprob: -1.701429843902588
    3. '	range' → logprob: -11.82642936706543
    4. ' ' → logprob: -12.57642936706543
    5. '   ' → logprob: -12.70142936706543
    6. '(range' → logprob: -13.57642936706543
    7. ' xrange' → logprob: -14.82642936706543
    8. '  ' → logprob: -14.95142936706543
    9. 'rang' → logprob: -15.57642936706543
    10. '    ' → logprob: -15.70142936706543

Token 58: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0005547016044147313
    2. '(' → logprob: -7.62555456161499
    3. ' i' → logprob: -10.125555038452148
    4. 'i' → logprob: -10.625555038452148
    5. ' (' → logprob: -13.500555038452148
    6. '	i' → logprob: -15.625555038452148
    7. '   ' → logprob: -15.750555038452148
    8. '(I' → logprob: -16.12555503845215
    9. ')' → logprob: -16.25055503845215
    10. '(
' → logprob: -16.25055503845215

Token 59: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.005253918468952179
    2. '*' → logprob: -5.255253791809082
    3. 'i' → logprob: -11.255253791809082
    4. ' *' → logprob: -11.880253791809082
    5. '*,' → logprob: -16.0052547454834
    6. '**' → logprob: -16.3802547454834
    7. ' i' → logprob: -17.2552547454834
    8. '*j' → logprob: -17.8802547454834
    9. '*
' → logprob: -18.0052547454834
    10. ',' → logprob: -18.1302547454834

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011236425780225545
    2. ' ,' → logprob: -9.750112533569336
    3. '(MAX' → logprob: -10.500112533569336
    4. 'MAX' → logprob: -11.250112533569336
    5. ',max' → logprob: -12.250112533569336
    6. '[MAX' → logprob: -13.000112533569336
    7. ',
' → logprob: -13.375112533569336
    8. '/MAX' → logprob: -13.625112533569336
    9. ' MAX' → logprob: -13.875112533569336
    10. '   ' → logprob: -14.250112533569336

Token 61: 'MAX' (ID: 21911)
  Prédit: 'MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.01417702715843916
    2. ' MAX' → logprob: -4.264176845550537
    3. '(MAX' → logprob: -11.264177322387695
    4. '   ' → logprob: -14.764177322387695
    5. '_MAX' → logprob: -16.514177322387695
    6. ' ' → logprob: -16.639177322387695
    7. '/MAX' → logprob: -16.889177322387695
    8. 'Max' → logprob: -17.264177322387695
    9. '    ' → logprob: -17.514177322387695
    10. 'max' → logprob: -17.639177322387695

Token 62: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.8624639324116288e-06
    2. ' +' → logprob: -13.250001907348633
    3. '+
' → logprob: -17.250001907348633
    4. '+i' → logprob: -17.875001907348633
    5. '+,' → logprob: -18.625001907348633
    6. '1' → logprob: -19.000001907348633
    7. '+j' → logprob: -19.250001907348633
    8. '```' → logprob: -19.250001907348633
    9. ',' → logprob: -20.250001907348633
    10. '＋' → logprob: -21.250001907348633

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -15.375001907348633
    4. ',' → logprob: -16.000001907348633
    5. '+' → logprob: -16.375001907348633
    6. '   ' → logprob: -17.750001907348633
    7. ')' → logprob: -18.000001907348633
    8. '),' → logprob: -19.000001907348633
    9. '-' → logprob: -19.000001907348633
    10. '１' → logprob: -19.750001907348633

Token 64: ',i' (ID: 25032)
  Prédit: ',i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.12709610164165497
    2. ',' → logprob: -2.127096176147461
    3. ' ,' → logprob: -9.252096176147461
    4. ' i' → logprob: -10.252096176147461
    5. ',j' → logprob: -10.752096176147461
    6. 'i' → logprob: -11.752096176147461
    7. ':i' → logprob: -12.377096176147461
    8. '   ' → logprob: -14.002096176147461
    9. ';i' → logprob: -14.002096176147461
    10. '(i' → logprob: -15.252096176147461

Token 65: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00020008347928524017
    2. ')' → logprob: -8.750200271606445
    3. '):
' → logprob: -10.500200271606445
    4. ' ):' → logprob: -11.875200271606445
    5. ':' → logprob: -12.000200271606445
    6. ']:' → logprob: -15.125200271606445
    7. '+' → logprob: -15.125200271606445
    8. '):
' → logprob: -16.375200271606445
    9. ',' → logprob: -16.625200271606445
    10. ' ' → logprob: -16.875200271606445

Token 66: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029431303963065147
    2. 's' → logprob: -3.6544313430786133
    3. '               ' → logprob: -5.904431343078613
    4. ' sieve' → logprob: -8.404431343078613
    5. '          ' → logprob: -10.404431343078613
    6. '            
' → logprob: -10.779431343078613
    7. '<|end|>' → logprob: -10.904431343078613
    8. '              ' → logprob: -11.154431343078613
    9. '                   ' → logprob: -11.154431343078613
    10. '       ' → logprob: -11.654431343078613

Token 67: ' sieve' (ID: 142781)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0004305500478949398
    2. '               ' → logprob: -8.1254301071167
    3. ' sieve' → logprob: -9.3754301071167
    4. '           ' → logprob: -10.3754301071167
    5. '                   ' → logprob: -12.2504301071167
    6. '   ' → logprob: -13.0004301071167
    7. '              ' → logprob: -13.0004301071167
    8. ' ' → logprob: -13.0004301071167
    9. '       ' → logprob: -13.3754301071167
    10. '  ' → logprob: -13.8754301071167

Token 68: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00023178798437584192
    2. '[' → logprob: -8.375231742858887
    3. '[J' → logprob: -14.625231742858887
    4. '[js' → logprob: -15.250231742858887
    5. '```' → logprob: -15.500231742858887
    6. '[i' → logprob: -16.000232696533203
    7. '\[' → logprob: -16.000232696533203
    8. ' [' → logprob: -17.000232696533203
    9. '[...]' → logprob: -17.375232696533203
    10. '[int' → logprob: -18.250232696533203

Token 69: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002022497123107314
    2. ']=' → logprob: -6.2520222663879395
    3. '=' → logprob: -9.377022743225098
    4. ' ]' → logprob: -11.752022743225098
    5. ')' → logprob: -13.877022743225098
    6. ' =' → logprob: -15.127022743225098
    7. '=False' → logprob: -17.50202178955078
    8. ']==' → logprob: -17.62702178955078
    9. ')=' → logprob: -17.75202178955078
    10. ']
' → logprob: -18.62702178955078

Token 70: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859202727675438
    2. ' =' → logprob: -3.0485920906066895
    3. '=False' → logprob: -12.298591613769531
    4. '=True' → logprob: -17.04859161376953
    5. '＝' → logprob: -17.54859161376953
    6. '=
' → logprob: -18.17359161376953
    7. '=

' → logprob: -18.17359161376953
    8. ' ' → logprob: -18.54859161376953
    9. ' =
' → logprob: -19.04859161376953
    10. '=false' → logprob: -19.29859161376953

Token 71: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.07888989895582199
    2. ' False' → logprob: -2.578889846801758
    3. '(False' → logprob: -16.578889846801758
    4. '=False' → logprob: -18.453889846801758
    5. '.False' → logprob: -20.078889846801758
    6. 'F' → logprob: -20.328889846801758
    7. '_false' → logprob: -21.328889846801758
    8. ' ' → logprob: -21.953889846801758
    9. '   ' → logprob: -22.078889846801758
    10. 'Falsy' → logprob: -22.453889846801758

Token 72: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4866959750652313
    2. '
' → logprob: -1.1116960048675537
    3. '<|end|>' → logprob: -3.6116960048675537
    4. 'n' → logprob: -4.236695766448975
    5. '#' → logprob: -6.111695766448975
    6. '

' → logprob: -6.361695766448975
    7. '```' → logprob: -6.361695766448975
    8. 'newline' → logprob: -6.361695766448975
    9. 'print' → logprob: -6.611695766448975
    10. '' → logprob: -6.736695766448975

Token 73: 'for' (ID: 1938)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31024840474128723
    2. 'def' → logprob: -2.435248374938965
    3. 'p' → logprob: -3.310248374938965
    4. '#' → logprob: -3.560248374938965
    5. 'print' → logprob: -3.685248374938965
    6. 'for' → logprob: -4.060248374938965
    7. 'x' → logprob: -4.685248374938965
    8. '\n' → logprob: -4.810248374938965
    9. '
' → logprob: -4.935248374938965
    10. 'i' → logprob: -5.185248374938965

Token 74: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11596024036407471
    2. ' i' → logprob: -2.240960121154785
    3. '  ' → logprob: -6.240960121154785
    4. ' n' → logprob: -7.615960121154785
    5. 'i' → logprob: -8.490960121154785
    6. ' num' → logprob: -8.865960121154785
    7. ' x' → logprob: -8.990960121154785
    8. ' _' → logprob: -9.115960121154785
    9. '_' → logprob: -9.990960121154785
    10. ' number' → logprob: -10.865960121154785

Token 75: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020713554695248604
    2. 'in' → logprob: -3.8957135677337646
    3. ' ' → logprob: -9.145713806152344
    4. '(' → logprob: -11.270713806152344
    5. 's' → logprob: -11.395713806152344
    6. ' i' → logprob: -11.895713806152344
    7. 'import' → logprob: -12.395713806152344
    8. '()' → logprob: -12.645713806152344
    9. '  ' → logprob: -12.895713806152344
    10. '[' → logprob: -12.895713806152344

Token 76: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.16023895144462585
    2. 'sys' → logprob: -1.9102389812469482
    3. '=sys' → logprob: -11.535239219665527
    4. '	sys' → logprob: -12.785239219665527
    5. '(sys' → logprob: -13.410239219665527
    6. 'stdin' → logprob: -15.535239219665527
    7. ' ' → logprob: -15.660239219665527
    8. 's' → logprob: -15.910239219665527
    9. ' iter' → logprob: -16.78523826599121
    10. 'iter' → logprob: -17.16023826599121

Token 77: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0035033728927373886
    2. '.readline' → logprob: -5.878503322601318
    3. '.' → logprob: -7.628503322601318
    4. 'stdin' → logprob: -8.628503799438477
    5. '.readlines' → logprob: -11.628503799438477
    6. '.stdout' → logprob: -11.628503799438477
    7. '.argv' → logprob: -12.628503799438477
    8. '.input' → logprob: -12.878503799438477
    9. '(stdin' → logprob: -13.003503799438477
    10. ' stdin' → logprob: -13.128503799438477

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020076850429177284
    2. '.readline' → logprob: -4.020076751708984
    3. '.' → logprob: -6.645076751708984
    4. '.strip' → logprob: -8.145076751708984
    5. '.readlines' → logprob: -9.395076751708984
    6. ':
' → logprob: -9.520076751708984
    7. ' :' → logprob: -9.895076751708984
    8. '.rstrip' → logprob: -10.270076751708984
    9. 'rstrip' → logprob: -11.020076751708984
    10. ':**' → logprob: -11.395076751708984

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003369135083630681
    2. ' line' → logprob: -6.753369331359863
    3. '    
' → logprob: -6.753369331359863
    4. ' if' → logprob: -8.378369331359863
    5. '.strip' → logprob: -8.628369331359863
    6. ' readline' → logprob: -8.628369331359863
    7. '.rstrip' → logprob: -9.378369331359863
    8. ' ' → logprob: -9.753369331359863
    9. '    ' → logprob: -9.753369331359863
    10. '```' → logprob: -10.378369331359863

Token 80: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.05809583142399788
    2. 'n' (adapté à ' n') → logprob: -2.933095932006836
    3. '   ' → logprob: -6.183095932006836
    4. ' num' → logprob: -7.308095932006836
    5. 'num' → logprob: -8.683095932006836
    6. ' number' → logprob: -9.183095932006836
    7. ' x' → logprob: -9.308095932006836
    8. ' line' → logprob: -10.058095932006836
    9. 'x' → logprob: -11.058095932006836
    10. ' N' → logprob: -11.183095932006836

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014190302230417728
    2. '=' → logprob: -4.264190196990967
    3. ' ' → logprob: -11.014190673828125
    4. '=int' → logprob: -11.639190673828125
    5. ' =
' → logprob: -14.389190673828125
    6. ',' → logprob: -14.889190673828125
    7. '  ' → logprob: -15.389190673828125
    8. '   ' → logprob: -16.389190673828125
    9. ' =)' → logprob: -16.389190673828125
    10. '.' → logprob: -17.014190673828125

Token 82: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6931552886962891
    2. ' int' → logprob: -0.6931552886962891
    3. ' ' → logprob: -12.818155288696289
    4. ' line' → logprob: -13.068155288696289
    5. 'line' → logprob: -13.318155288696289
    6. '=int' → logprob: -14.568155288696289
    7. 'len' → logprob: -14.943155288696289
    8. '(int' → logprob: -15.443155288696289
    9. ' len' → logprob: -15.693155288696289
    10. '   ' → logprob: -15.693155288696289

Token 83: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.029752222821116447
    2. '(' → logprob: -3.529752254486084
    3. '(n' → logprob: -14.029751777648926
    4. ' (' → logprob: -15.404751777648926
    5. '('' → logprob: -16.029752731323242
    6. '(
' → logprob: -16.404752731323242
    7. '(l' → logprob: -16.529752731323242
    8. 'line' → logprob: -16.904752731323242
    9. ' line' → logprob: -16.904752731323242
    10. '[line' → logprob: -16.904752731323242

Token 84: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04370144382119179
    2. '.strip' → logprob: -3.168701410293579
    3. '.rstrip' → logprob: -7.418701648712158
    4. '.readline' → logprob: -9.793701171875
    5. 'rstrip' → logprob: -11.293701171875
    6. ' )' → logprob: -11.543701171875
    7. '.' → logprob: -12.293701171875
    8. 'strip' → logprob: -12.543701171875
    9. '())' → logprob: -12.543701171875
    10. ')
' → logprob: -12.793701171875

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6849920749664307
    2. ' if' → logprob: -1.0599920749664307
    3. 'if' → logprob: -3.1849920749664307
    4. '
' → logprob: -3.6849920749664307
    5. '    ' → logprob: -3.8099920749664307
    6. '    
' → logprob: -4.184991836547852
    7. ' 
' → logprob: -4.184991836547852
    8. ' ' → logprob: -4.684991836547852
    9. '     
' → logprob: -5.559991836547852
    10. '   
' → logprob: -5.809991836547852

Token 86: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.18127843737602234
    2. ' if' → logprob: -2.1812784671783447
    3. 'found' → logprob: -3.9312784671783447
    4. 'for' → logprob: -4.056278228759766
    5. 'count' → logprob: -5.556278228759766
    6. ' for' → logprob: -6.306278228759766
    7. ' found' → logprob: -6.306278228759766
    8. 'break' → logprob: -6.681278228759766
    9. '   ' → logprob: -7.056278228759766
    10. 'result' → logprob: -7.181278228759766

Token 87: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04790693148970604
    2. ' ' → logprob: -3.1729068756103516
    3. 'n' → logprob: -5.672906875610352
    4. ' not' → logprob: -6.922906875610352
    5. ' sieve' → logprob: -8.297906875610352
    6. '  ' → logprob: -8.797906875610352
    7. '   ' → logprob: -10.547906875610352
    8. 's' → logprob: -11.922906875610352
    9. ' MAX' → logprob: -11.922906875610352
    10. ' s' → logprob: -11.922906875610352

Token 88: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.12855321168899536
    2. ' %' → logprob: -3.6285531520843506
    3. ' ' → logprob: -3.7535531520843506
    4. '%' → logprob: -4.12855339050293
    5. '>' → logprob: -4.12855339050293
    6. ' <' → logprob: -4.50355339050293
    7. ' <=' → logprob: -4.62855339050293
    8. ' >=' → logprob: -4.62855339050293
    9. ' ==' → logprob: -5.00355339050293
    10. '==' → logprob: -7.62855339050293

Token 89: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2519311308860779
    2. '0' → logprob: -1.5019311904907227
    3. '  ' → logprob: -14.251931190490723
    4. ' ' → logprob: -14.876931190490723
    5. ' -' → logprob: -15.501931190490723
    6. '   ' → logprob: -15.689431190490723
    7. '1' → logprob: -16.126930236816406
    8. '_' → logprob: -16.314430236816406
    9. '-' → logprob: -16.564430236816406
    10. '7' → logprob: -17.314430236816406

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014168919064104557
    2. ' ' → logprob: -4.264168739318848
    3. '-' → logprob: -13.014168739318848
    4. ' -' → logprob: -13.514168739318848
    5. '1' → logprob: -14.576668739318848
    6. '  ' → logprob: -14.826668739318848
    7. '   ' → logprob: -14.826668739318848
    8. '6' → logprob: -16.201669692993164
    9. '_' → logprob: -16.201669692993164
    10. '    ' → logprob: -16.639169692993164

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025338062550872564
    2. ':
' → logprob: -6.002533912658691
    3. ' :' → logprob: -10.127533912658691
    4. '   ' → logprob: -11.002533912658691
    5. ' :
' → logprob: -14.627533912658691
    6. ':return' → logprob: -14.877533912658691
    7. '       ' → logprob: -15.127533912658691
    8. ':
' → logprob: -15.627533912658691
    9. '.' → logprob: -15.752533912658691
    10. ':

' → logprob: -16.627532958984375

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011173378676176071
    2. '   ' → logprob: -4.511173248291016
    3. '    ' → logprob: -10.511173248291016
    4. ':' → logprob: -10.886173248291016
    5. '	' → logprob: -11.136173248291016
    6. '     ' → logprob: -11.261173248291016
    7. '      ' → logprob: -11.386173248291016
    8. '\t' → logprob: -11.636173248291016
    9. '	break' → logprob: -11.886173248291016
    10. ' ' → logprob: -11.886173248291016

Token 93: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5515035390853882
    2. ' break' → logprob: -1.0515035390853882
    3. 'break' (adapté à ' break') → logprob: -2.6765036582946777
    4. '   ' → logprob: -5.301503658294678
    5. '	break' → logprob: -7.926503658294678
    6. '           ' → logprob: -8.05150318145752
    7. ' ' → logprob: -11.80150318145752
    8. 'b' → logprob: -12.05150318145752
    9. '_break' → logprob: -12.17650318145752
    10. '```' → logprob: -12.80150318145752

Token 94: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6778814792633057
    2. '   ' → logprob: -1.4278814792633057
    3. '    
' → logprob: -1.9278814792633057
    4. '<|end|>' → logprob: -2.5528814792633057
    5. '  
' → logprob: -4.677881240844727
    6. ' 
' → logprob: -4.927881240844727
    7. '\n' → logprob: -5.427881240844727
    8. '   
' → logprob: -5.927881240844727
    9. '<|end|>' → logprob: -6.177881240844727
    10. 'n' → logprob: -7.302881240844727

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02284799888730049
    2. '    
' → logprob: -3.897847890853882
    3. '    ' → logprob: -6.897848129272461
    4. ' 
' → logprob: -8.272848129272461
    5. '     
' → logprob: -8.522848129272461
    6. '
' → logprob: -8.772848129272461
    7. '   ' → logprob: -9.272848129272461
    8. '<|end|>' → logprob: -9.397848129272461
    9. '   
' → logprob: -9.522848129272461
    10. ' for' → logprob: -9.772848129272461

Token 96: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42948269844055176
    2. 'for' → logprob: -1.9294826984405518
    3. 'count' (adapté à ' count') → logprob: -2.5544826984405518
    4. ' for' → logprob: -2.8044826984405518
    5. 'found' → logprob: -3.3044826984405518
    6. ' found' → logprob: -4.429482460021973
    7. 'cnt' → logprob: -4.804482460021973
    8. ' count' → logprob: -5.804482460021973
    9. '    
' → logprob: -6.179482460021973
    10. 'answer' → logprob: -6.429482460021973

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008247886784374714
    2. '=' → logprob: -4.8832478523254395
    3. ' ' → logprob: -7.5082478523254395
    4. '_' → logprob: -10.008248329162598
    5. '(' → logprob: -11.383248329162598
    6. '   ' → logprob: -11.883248329162598
    7. ' +=' → logprob: -12.258248329162598
    8. '  ' → logprob: -12.258248329162598
    9. ',' → logprob: -12.383248329162598
    10. '    ' → logprob: -12.383248329162598

Token 98: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07891358435153961
    2. ' ' → logprob: -2.578913688659668
    3. '1' → logprob: -11.578913688659668
    4. 's' → logprob: -11.953913688659668
    5. 'sum' → logprob: -13.078913688659668
    6. ' sum' → logprob: -13.828913688659668
    7. '   ' → logprob: -14.266413688659668
    8. '2' → logprob: -14.453913688659668
    9. ' [' → logprob: -14.641413688659668
    10. ' ' → logprob: -14.703913688659668

Token 99: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005956856766715646
    2. ' ' → logprob: -7.500595569610596
    3. 'sum' → logprob: -10.375596046447754
    4. '1' → logprob: -12.125596046447754
    5. 's' → logprob: -13.625596046447754
    6. '2' → logprob: -13.625596046447754
    7. ' sum' → logprob: -13.875596046447754
    8. '   ' → logprob: -14.000596046447754
    9. '[' → logprob: -14.500596046447754
    10. 'max' → logprob: -15.813096046447754

Token 100: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6828004121780396
    2. '<|end|>' → logprob: -0.8078004121780396
    3. '   ' → logprob: -3.55780029296875
    4. '    ' → logprob: -4.18280029296875
    5. ' for' → logprob: -6.18280029296875
    6. '<|end|>' → logprob: -6.68280029296875
    7. '  ' → logprob: -7.05780029296875
    8. '    
' → logprob: -7.80780029296875
    9. ' 
' → logprob: -8.18280029296875
    10. 'for' → logprob: -9.68280029296875

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43212440609931946
    2. ' ' → logprob: -1.807124376296997
    3. '    ' → logprob: -2.307124376296997
    4. '<|end|>' → logprob: -3.182124376296997
    5. ' for' → logprob: -3.307124376296997
    6. '    
' → logprob: -5.557124614715576
    7. '  ' → logprob: -6.432124614715576
    8. ' 
' → logprob: -6.807124614715576
    9. 'for' → logprob: -7.307124614715576
    10. '     
' → logprob: -7.432124614715576

Token 102: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0014230913948267698
    2. ' for' → logprob: -6.626422882080078
    3. '   ' → logprob: -9.251422882080078
    4. '```' → logprob: -14.626422882080078
    5. 'print' → logprob: -15.376422882080078
    6. '	for' → logprob: -15.376422882080078
    7. '    ' → logprob: -16.876422882080078
    8. 'i' → logprob: -16.876422882080078
    9. '  ' → logprob: -16.876422882080078
    10. '<|end|>' → logprob: -17.001422882080078

Token 103: ' p' (ID: 275)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0126795107498765
    2. 'i' → logprob: -4.512679576873779
    3. ' p' → logprob: -6.887679576873779
    4. ' a' → logprob: -8.262679100036621
    5. ' x' → logprob: -9.012679100036621
    6. 'a' → logprob: -9.762679100036621
    7. ' prime' → logprob: -9.887679100036621
    8. ' num' → logprob: -10.512679100036621
    9. 'p' → logprob: -10.512679100036621
    10. ' ' → logprob: -11.512679100036621

Token 104: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019973928574472666
    2. 'in' → logprob: -6.251997470855713
    3. ' ' → logprob: -10.376996994018555
    4. '  ' → logprob: -12.001996994018555
    5. 'range' → logprob: -12.001996994018555
    6. 'i' → logprob: -12.126996994018555
    7. ' i' → logprob: -12.376996994018555
    8. '1' → logprob: -12.376996994018555
    9. '   ' → logprob: -12.626996994018555
    10. 'p' → logprob: -13.001996994018555

Token 105: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5760557055473328
    2. 'range' → logprob: -0.8260557055473328
    3. '[' → logprob: -9.701055526733398
    4. '(range' → logprob: -10.576055526733398
    5. '	range' → logprob: -11.201055526733398
    6. ' ' → logprob: -11.826055526733398
    7. '   ' → logprob: -13.326055526733398
    8. ' [' → logprob: -13.826055526733398
    9. '  ' → logprob: -13.951055526733398
    10. 'r' → logprob: -13.951055526733398

Token 106: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0272417850792408
    2. '2' → logprob: -3.6522417068481445
    3. '(n' → logprob: -7.0272417068481445
    4. ' ' → logprob: -10.527241706848145
    5. 'n' → logprob: -12.027241706848145
    6. '1' → logprob: -12.152241706848145
    7. '   ' → logprob: -12.152241706848145
    8. ' (' → logprob: -12.652241706848145
    9. '[' → logprob: -13.277241706848145
    10. '(max' → logprob: -13.902241706848145

Token 107: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00275602238252759
    2. '1' → logprob: -6.627756118774414
    3. 'n' → logprob: -6.627756118774414
    4. '3' → logprob: -10.252756118774414
    5. '(' → logprob: -10.627756118774414
    6. ' ' → logprob: -10.627756118774414
    7. 'MAX' → logprob: -11.252756118774414
    8. '(n' → logprob: -12.502756118774414
    9. '   ' → logprob: -13.377756118774414
    10. ' n' → logprob: -13.877756118774414

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16214124858379364
    2. ',n' → logprob: -1.91214120388031
    3. ' ,' → logprob: -6.2871413230896
    4. '   ' → logprob: -10.037140846252441
    5. ',len' → logprob: -12.537140846252441
    6. ',p' → logprob: -12.787140846252441
    7. ',(' → logprob: -13.287140846252441
    8. 'n' → logprob: -13.662140846252441
    9. '    ' → logprob: -14.412140846252441
    10. ',max' → logprob: -14.662140846252441

Token 109: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00021021578868385404
    2. ' n' → logprob: -8.62520980834961
    3. '   ' → logprob: -10.87520980834961
    4. '(n' → logprob: -12.00020980834961
    5. '(' → logprob: -12.87520980834961
    6. '	n' → logprob: -12.87520980834961
    7. ' ' → logprob: -15.25020980834961
    8. ' (' → logprob: -16.37520980834961
    9. '  ' → logprob: -17.00020980834961
    10. '2' → logprob: -18.00020980834961

Token 110: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0006087943911552429
    2. ' //' → logprob: -8.000608444213867
    3. '):' → logprob: -8.250608444213867
    4. '):
' → logprob: -11.625608444213867
    5. '   ' → logprob: -13.250608444213867
    6. ' ):' → logprob: -14.625608444213867
    7. ')' → logprob: -14.875608444213867
    8. ' ' → logprob: -15.250608444213867
    9. '+' → logprob: -16.500608444213867
    10. '):

' → logprob: -16.625608444213867

Token 111: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.572941179503687e-05
    2. ' ' → logprob: -10.000045776367188
    3. '1' → logprob: -15.500045776367188
    4. '   ' → logprob: -18.000045776367188
    5. '```' → logprob: -18.250045776367188
    6. '  ' → logprob: -19.750045776367188
    7. ')' → logprob: -20.312545776367188
    8. '２' → logprob: -20.312545776367188
    9. '3' → logprob: -20.375045776367188
    10. '

' → logprob: -20.437545776367188

Token 112: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02630552463233471
    2. ' +' → logprob: -3.6513054370880127
    3. ' ' → logprob: -13.276305198669434
    4. ')+' → logprob: -13.776305198669434
    5. '   ' → logprob: -14.026305198669434
    6. '1' → logprob: -14.901305198669434
    7. '):
' → logprob: -15.401305198669434
    8. '```' → logprob: -15.526305198669434
    9. '+n' → logprob: -15.526305198669434
    10. ')' → logprob: -15.651305198669434

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.1318875446449965e-05
    2. ' ' → logprob: -10.125041007995605
    3. '2' → logprob: -14.000041007995605
    4. '   ' → logprob: -15.875041007995605
    5. '+' → logprob: -16.375041961669922
    6. ')' → logprob: -17.062541961669922
    7. '  ' → logprob: -17.625041961669922
    8. '```' → logprob: -17.875041961669922
    9. '
' → logprob: -18.437541961669922
    10. '１' → logprob: -18.625041961669922

Token 114: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.23726561665534973
    2. '):' → logprob: -1.6122655868530273
    3. '   ' → logprob: -4.737265586853027
    4. ':' → logprob: -6.862265586853027
    5. '       ' → logprob: -7.112265586853027
    6. '):
' → logprob: -7.237265586853027
    7. ' ):
' → logprob: -8.112265586853027
    8. '    ' → logprob: -10.612265586853027
    9. ' ):' → logprob: -10.612265586853027
    10. ':
' → logprob: -10.612265586853027

Token 115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001870902779046446
    2. '<|end|>' → logprob: -9.500186920166016
    3. '   ' → logprob: -9.875186920166016
    4. '    ' → logprob: -10.125186920166016
    5. ' if' → logprob: -11.750186920166016
    6. '      ' → logprob: -12.625186920166016
    7. ' ' → logprob: -12.750186920166016
    8. '        
' → logprob: -13.000186920166016
    9. '     ' → logprob: -13.750186920166016
    10. '           ' → logprob: -14.125186920166016

Token 116: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18813903629779816
    2. ' if' → logprob: -1.9381390810012817
    3. 'if' (adapté à ' if') → logprob: -3.688138961791992
    4. '   ' → logprob: -6.063138961791992
    5. '    ' → logprob: -9.313138961791992
    6. ' ' → logprob: -10.188138961791992
    7. '     ' → logprob: -10.813138961791992
    8. '      ' → logprob: -11.688138961791992
    9. '	if' → logprob: -11.938138961791992
    10. '           ' → logprob: -12.188138961791992

Token 117: ' sieve' (ID: 142781)
  Prédit: ' sieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sieve' → logprob: -0.5767595171928406
    2. 's' → logprob: -0.8267595171928406
    3. ' ' → logprob: -8.326759338378906
    4. 'p' → logprob: -8.576759338378906
    5. '   ' → logprob: -8.701759338378906
    6. ' p' → logprob: -9.701759338378906
    7. '	s' → logprob: -9.951759338378906
    8. '  ' → logprob: -10.576759338378906
    9. 'n' → logprob: -10.951759338378906
    10. ' s' → logprob: -11.076759338378906

Token 118: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -2.1054253011243418e-05
    2. '[' → logprob: -11.125020980834961
    3. 'p' → logprob: -12.125020980834961
    4. '[n' → logprob: -15.125020980834961
    5. ' [' → logprob: -15.875020980834961
    6. '[i' → logprob: -16.50002098083496
    7. '	p' → logprob: -16.87502098083496
    8. '[s' → logprob: -17.00002098083496
    9. '```' → logprob: -17.00002098083496
    10. '   ' → logprob: -17.25002098083496

Token 119: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04858975484967232
    2. 'and' → logprob: -3.0485897064208984
    3. ' ' → logprob: -13.673589706420898
    4. 'a' → logprob: -14.673589706420898
    5. '    ' → logprob: -15.048589706420898
    6. ' a' → logprob: -16.4235897064209
    7. '   ' → logprob: -16.5485897064209
    8. '	and' → logprob: -16.5485897064209
    9. ' и' → logprob: -17.1735897064209
    10. ' an' → logprob: -17.2985897064209

Token 120: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3132622241973877
    2. 'and' → logprob: -1.3132622241973877
    3. ' ' → logprob: -14.688261985778809
    4. '	and' → logprob: -17.438262939453125
    5. 'a' → logprob: -17.688262939453125
    6. ' a' → logprob: -17.938262939453125
    7. '==' → logprob: -17.938262939453125
    8. '    ' → logprob: -18.188262939453125
    9. '   ' → logprob: -18.188262939453125
    10. ' ' → logprob: -18.438262939453125

Token 121: ' sieve' (ID: 142781)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006948856636881828
    2. ' sieve' → logprob: -5.006948947906494
    3. '   ' → logprob: -8.881948471069336
    4. '  ' → logprob: -10.506948471069336
    5. ' ' → logprob: -10.506948471069336
    6. '	s' → logprob: -11.381948471069336
    7. '       ' → logprob: -11.756948471069336
    8. ' s' → logprob: -11.881948471069336
    9. '    ' → logprob: -12.006948471069336
    10. '     ' → logprob: -13.131948471069336

Token 122: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -6.670925358776003e-05
    2. '[' → logprob: -9.625066757202148
    3. ' [' → logprob: -15.000066757202148
    4. '[N' → logprob: -16.25006675720215
    5. '```' → logprob: -16.87506675720215
    6. 'n' → logprob: -17.25006675720215
    7. '[p' → logprob: -17.37506675720215
    8. '(n' → logprob: -17.37506675720215
    9. '[
' → logprob: -17.62506675720215
    10. '   ' → logprob: -18.75006675720215

Token 123: '-p' (ID: 3161)
  Prédit: '-p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-p' → logprob: -0.9390732049942017
    2. '-' → logprob: -1.1890732049942017
    3. ' -' → logprob: -1.1890732049942017
    4. ' ' → logprob: -12.93907356262207
    5. '   ' → logprob: -15.18907356262207
    6. 'p' → logprob: -15.18907356262207
    7. '  ' → logprob: -16.43907356262207
    8. '-P' → logprob: -16.68907356262207
    9. ' p' → logprob: -17.18907356262207
    10. '```' → logprob: -17.31407356262207

Token 124: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0021123127080500126
    2. ']:
' → logprob: -6.37711238861084
    3. ']' → logprob: -7.87711238861084
    4. ' ]' → logprob: -11.62711238861084
    5. ']:
' → logprob: -11.75211238861084
    6. ':' → logprob: -12.00211238861084
    7. '"]:' → logprob: -13.00211238861084
    8. '']:' → logprob: -13.50211238861084
    9. ']:

' → logprob: -13.50211238861084
    10. '   ' → logprob: -14.00211238861084

Token 125: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11419935524463654
    2. '           ' → logprob: -2.23919939994812
    3. '               ' → logprob: -6.989199161529541
    4. ':
' → logprob: -8.6141996383667
    5. ':' → logprob: -9.1141996383667
    6. '	       ' → logprob: -10.6141996383667
    7. '<|end|>' → logprob: -10.8641996383667
    8. '   ' → logprob: -10.8641996383667
    9. 'count' → logprob: -11.1141996383667
    10. ',' → logprob: -11.3641996383667

Token 126: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18528254330158234
    2. '               ' → logprob: -2.0602824687957764
    3. 'count' (adapté à ' count') → logprob: -3.6852824687957764
    4. ' count' → logprob: -4.8102827072143555
    5. '           ' → logprob: -4.9352827072143555
    6. '   ' → logprob: -6.6852827072143555
    7. '	count' → logprob: -11.185282707214355
    8. '      ' → logprob: -11.685282707214355
    9. ' ' → logprob: -12.435282707214355
    10. '                   ' → logprob: -13.060282707214355

Token 127: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20159021019935608
    2. '+=' → logprob: -1.7015901803970337
    3. '+' → logprob: -8.826590538024902
    4. ']+=' → logprob: -11.576590538024902
    5. '   ' → logprob: -12.201590538024902
    6. '<|end|>' → logprob: -12.576590538024902
    7. '++' → logprob: -12.826590538024902
    8. ')' → logprob: -13.576590538024902
    9. '  ' → logprob: -13.576590538024902
    10. '=' → logprob: -13.701590538024902

Token 128: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.505351095460355e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.25007438659668
    4. '```' → logprob: -18.75007438659668
    5. '  ' → logprob: -20.12507438659668
    6. '           ' → logprob: -20.50007438659668
    7. '１' → logprob: -20.75007438659668
    8. '2' → logprob: -21.31257438659668
    9. '<|end|>' → logprob: -21.37507438659668
    10. '	' → logprob: -21.43757438659668

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -18.750001907348633
    4. '```' → logprob: -19.062501907348633
    5. '<|end|>' → logprob: -19.312501907348633
    6. '１' → logprob: -20.000001907348633
    7. '۱' → logprob: -20.250001907348633
    8. '2' → logprob: -20.500001907348633
    9. '१' → logprob: -21.312501907348633
    10. '!' → logprob: -21.312501907348633

Token 130: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023045314010232687
    2. 'print' → logprob: -6.127304553985596
    3. '
' → logprob: -9.252304077148438
    4. ' print' → logprob: -11.627304077148438
    5. '    
' → logprob: -11.752304077148438
    6. '```' → logprob: -12.127304077148438
    7. '	print' → logprob: -14.627304077148438
    8. '       ' → logprob: -15.252304077148438
    9. '<|end|>' → logprob: -15.877304077148438
    10. '
' → logprob: -15.877304077148438

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014356116764247417
    2. 'print' → logprob: -4.2643561363220215
    3. '
' → logprob: -9.139355659484863
    4. ' print' → logprob: -9.514355659484863
    5. '```' → logprob: -11.639355659484863
    6. '    
' → logprob: -13.264355659484863
    7. '	print' → logprob: -14.389355659484863
    8. '
' → logprob: -16.13935661315918
    9. '       ' → logprob: -16.38935661315918
    10. '<|end|>' → logprob: -17.13935661315918

Token 132: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00039385363925248384
    2. ' print' → logprob: -8.000393867492676
    3. '   ' → logprob: -9.750393867492676
    4. '```' → logprob: -16.00039291381836
    5. '	print' → logprob: -18.62539291381836
    6. ' ' → logprob: -20.37539291381836
    7. '#print' → logprob: -20.62539291381836
    8. 'printf' → logprob: -21.00039291381836
    9. '
' → logprob: -21.37539291381836
    10. '  ' → logprob: -21.50039291381836

Token 133: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.0025028903037309647
    2. '(' → logprob: -6.002502918243408
    3. '(f' → logprob: -10.75250244140625
    4. ' (' → logprob: -12.75250244140625
    5. 'count' → logprob: -13.87750244140625
    6. '()' → logprob: -13.87750244140625
    7. '((' → logprob: -15.00250244140625
    8. '(c' → logprob: -15.25250244140625
    9. '('' → logprob: -16.00250244140625
    10. '(cnt' → logprob: -16.25250244140625

Token 134: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ' )' → logprob: -13.125001907348633
    3. ')`' → logprob: -17.125001907348633
    4. '))' → logprob: -17.875001907348633
    5. ')
' → logprob: -17.875001907348633
    6. '')' → logprob: -18.125001907348633
    7. '`)' → logprob: -18.125001907348633
    8. '()' → logprob: -19.625001907348633
    9. '```' → logprob: -19.875001907348633
    10. '")' → logprob: -20.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 132
Tokens correctement prédits (1ère position, stricte): 80
Tokens correctement prédits (1ère position, avec adaptation): 83
Tokens correctement prédits (top 10): 122
Précision stricte (1ère position): 60.61%
Précision adaptée (1ère position): 62.88%
Précision (top 10): 92.42%
================================================================================
