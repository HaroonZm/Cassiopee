================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N=int(input())
probs=[tuple(map(int,input().split())) for _ in range(N)]
probs.sort(key=lambda x:x[1])
time=0
count=0
for a,b in probs:
    time+=a
    if time<=b:
        count+=1
print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4663958251476288
    2. ')' → logprob: -1.0913958549499512
    3. '()' → logprob: -3.841395854949951
    4. '())' → logprob: -4.466395854949951
    5. '(
' → logprob: -7.341395854949951
    6. '```' → logprob: -7.591395854949951
    7. '')' → logprob: -7.841395854949951
    8. '")' → logprob: -7.841395854949951
    9. '`)' → logprob: -7.966395854949951
    10. '<|end|>' → logprob: -8.466395378112793

Token 4: 'pro' (ID: 823)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.47875475883483887
    2. 'for' → logprob: -2.103754758834839
    3. '#' → logprob: -2.978754758834839
    4. '\n' → logprob: -3.103754758834839
    5. ')' → logprob: -3.478754758834839
    6. 's' → logprob: -3.603754758834839
    7. '+' → logprob: -3.978754758834839
    8. 'if' → logprob: -4.228754997253418
    9. '\' → logprob: -4.353754997253418
    10. 'a' → logprob: -4.853754997253418

Token 5: 'bs' (ID: 6229)
  Prédit: 'cess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cess' → logprob: -0.08236601203680038
    2. 'd' → logprob: -3.0823659896850586
    3. 'm' → logprob: -4.707365989685059
    4. 'print' → logprob: -5.082365989685059
    5. 'fit' → logprob: -5.332365989685059
    6. 'c' → logprob: -5.957365989685059
    7. 'duct' → logprob: -6.082365989685059
    8. 'b' → logprob: -6.207365989685059
    9. 'f' → logprob: -6.332365989685059
    10. 'gram' → logprob: -6.957365989685059

Token 6: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0027655328158289194
    2. ')' → logprob: -6.127765655517578
    3. '=' → logprob: -8.877765655517578
    4. '\[' → logprob: -9.127765655517578
    5. '.' → logprob: -9.752765655517578
    6. '[:]' → logprob: -9.877765655517578
    7. 's' → logprob: -10.127765655517578
    8. '[]' → logprob: -10.377765655517578
    9. ']' → logprob: -10.627765655517578
    10. '_' → logprob: -10.752765655517578

Token 7: 'tuple' (ID: 52834)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.07294778525829315
    2. '0' → logprob: -2.6979477405548096
    3. ' float' → logprob: -6.697947978973389
    4. 'list' → logprob: -7.197947978973389
    5. ']' → logprob: -7.572947978973389
    6. '(float' → logprob: -7.822947978973389
    7. '1' → logprob: -10.57294750213623
    8. '[]' → logprob: -10.82294750213623
    9. ' ' → logprob: -11.19794750213623
    10. ')' → logprob: -11.44794750213623

Token 8: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.023118868470191956
    2. '(int' → logprob: -4.52311897277832
    3. '(' → logprob: -5.02311897277832
    4. '(input' → logprob: -5.27311897277832
    5. '(float' → logprob: -8.64811897277832
    6. 'map' → logprob: -10.14811897277832
    7. '(
' → logprob: -10.52311897277832
    8. '(i' → logprob: -10.89811897277832
    9. '(eval' → logprob: -11.89811897277832
    10. '(range' → logprob: -13.02311897277832

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004953139461576939
    2. '(str' → logprob: -5.754952907562256
    3. 'int' → logprob: -7.379952907562256
    4. '(' → logprob: -7.379952907562256
    5. '(lambda' → logprob: -9.129953384399414
    6. '(input' → logprob: -9.254953384399414
    7. 'str' → logprob: -9.629953384399414
    8. '<int' → logprob: -9.754953384399414
    9. '=int' → logprob: -10.379953384399414
    10. ')' → logprob: -10.504953384399414

Token 10: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.005779238883405924
    2. '(' → logprob: -5.880779266357422
    3. ',input' → logprob: -6.380779266357422
    4. ')' → logprob: -7.630779266357422
    5. 'input' → logprob: -8.380779266357422
    6. '<|end|>' → logprob: -8.755779266357422
    7. '=input' → logprob: -8.880779266357422
    8. '))' → logprob: -9.505779266357422
    9. '(x' → logprob: -10.380779266357422
    10. '[input' → logprob: -10.505779266357422

Token 11: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.269565634895116e-05
    2. '()' → logprob: -9.750092506408691
    3. '()))' → logprob: -10.500092506408691
    4. '())' → logprob: -13.000092506408691
    5. ')' → logprob: -13.875092506408691
    6. '()));' → logprob: -14.000092506408691
    7. '))' → logprob: -14.125092506408691
    8. ' ().' → logprob: -14.375092506408691
    9. '.split' → logprob: -14.875092506408691
    10. '())))' → logprob: -15.125092506408691

Token 12: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.664371848164592e-05
    2. 'strip' → logprob: -11.125016212463379
    3. 'rstrip' → logprob: -13.750016212463379
    4. '(split' → logprob: -14.625016212463379
    5. ' split' → logprob: -15.500016212463379
    6. 'spl' → logprob: -18.250017166137695
    7. '.split' → logprob: -19.500017166137695
    8. 's' → logprob: -19.750017166137695
    9. 'read' → logprob: -20.375017166137695
    10. 'plit' → logprob: -20.500017166137695

Token 13: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.014853173866868019
    2. '())' → logprob: -4.389853000640869
    3. '))' → logprob: -6.764853000640869
    4. '()' → logprob: -7.514853000640869
    5. '('' → logprob: -8.264853477478027
    6. '())))' → logprob: -8.639853477478027
    7. '()))
' → logprob: -8.889853477478027
    8. '(' → logprob: -10.264853477478027
    9. '()));' → logprob: -12.139853477478027
    10. ')' → logprob: -12.264853477478027

Token 14: ' for' (ID: 395)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.4268094003200531
    2. ')' → logprob: -1.1768094301223755
    3. ']' → logprob: -3.426809310913086
    4. '()]' → logprob: -6.551809310913086
    5. ')])' → logprob: -6.801809310913086
    6. '),' → logprob: -7.051809310913086
    7. 'for' → logprob: -7.301809310913086
    8. '])' → logprob: -7.301809310913086
    9. ')],' → logprob: -7.676809310913086
    10. ',' → logprob: -7.926809310913086

Token 15: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.007424299139529467
    2. '_' → logprob: -5.257424354553223
    3. 'range' → logprob: -7.007424354553223
    4. '_range' → logprob: -7.382424354553223
    5. '(range' → logprob: -7.757424354553223
    6. ' ' → logprob: -9.257424354553223
    7. ' _' → logprob: -9.632424354553223
    8. '	range' → logprob: -10.132424354553223
    9. ' i' → logprob: -11.132424354553223
    10. '(' → logprob: -12.007424354553223

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22482489049434662
    2. 'in' → logprob: -1.7248249053955078
    3. 'range' → logprob: -3.849824905395508
    4. ' range' → logprob: -6.474824905395508
    5. 'i' → logprob: -8.974824905395508
    6. ' ' → logprob: -9.724824905395508
    7. 'n' → logprob: -10.974824905395508
    8. 'for' → logprob: -11.224824905395508
    9. '(range' → logprob: -11.349824905395508
    10. 'import' → logprob: -11.599824905395508

Token 17: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020389800192788243
    2. ' range' → logprob: -8.500204086303711
    3. '	range' → logprob: -15.625204086303711
    4. '(range' → logprob: -16.87520408630371
    5. '[' → logprob: -17.50020408630371
    6. '_range' → logprob: -17.87520408630371
    7. '.range' → logprob: -18.25020408630371
    8. 'rang' → logprob: -18.37520408630371
    9. 'pro' → logprob: -18.87520408630371
    10. '```' → logprob: -19.75020408630371

Token 18: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0031944699585437775
    2. '(' → logprob: -5.753194332122803
    3. '(n' → logprob: -11.253194808959961
    4. '(len' → logprob: -13.378194808959961
    5. 'N' → logprob: -13.503194808959961
    6. '(
' → logprob: -15.128194808959961
    7. '(I' → logprob: -15.503194808959961
    8. ')' → logprob: -16.12819480895996
    9. '(M' → logprob: -16.87819480895996
    10. '(T' → logprob: -17.00319480895996

Token 19: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.266944157890975e-05
    2. ')' → logprob: -10.250072479248047
    3. ')])' → logprob: -10.625072479248047
    4. '])]' → logprob: -12.375072479248047
    5. ']' → logprob: -12.625072479248047
    6. '')]' → logprob: -13.500072479248047
    7. ')]
' → logprob: -13.750072479248047
    8. '])' → logprob: -14.375072479248047
    9. '))' → logprob: -14.875072479248047
    10. ')],' → logprob: -15.000072479248047

Token 20: 'pro' (ID: 823)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9513059854507446
    2. 's' → logprob: -1.8263059854507446
    3. 'result' → logprob: -2.076305866241455
    4. 'p' → logprob: -2.201305866241455
    5. '
' → logprob: -2.826305866241455
    6. 'pro' → logprob: -4.076305866241455
    7. 'prob' → logprob: -4.076305866241455
    8. 'c' → logprob: -4.201305866241455
    9. 'd' → logprob: -4.576305866241455
    10. 'res' → logprob: -4.701305866241455

Token 21: 'bs' (ID: 6229)
  Prédit: 'bs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bs' → logprob: -0.04301232099533081
    2. 'b' → logprob: -3.1680123805999756
    3. 'bps' → logprob: -12.668012619018555
    4. 'ps' → logprob: -13.168012619018555
    5. 's' → logprob: -13.418012619018555
    6. 'ba' → logprob: -13.543012619018555
    7. '[b' → logprob: -14.418012619018555
    8. ' bs' → logprob: -14.668012619018555
    9. ' b' → logprob: -14.918012619018555
    10. 'fs' → logprob: -14.918012619018555

Token 22: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 23: '(key' (ID: 8932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08402710407972336
    2. '()' → logprob: -2.584027051925659
    3. '((' → logprob: -5.709027290344238
    4. '(()' → logprob: -7.459027290344238
    5. '```' → logprob: -7.709027290344238
    6. '(`' → logprob: -8.834027290344238
    7. '(
' → logprob: -9.584027290344238
    8. '("("' → logprob: -9.834027290344238
    9. '(.' → logprob: -9.959027290344238
    10. '`' → logprob: -10.084027290344238

Token 24: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0019289902411401272
    2. '=' → logprob: -6.251928806304932
    3. '=(' → logprob: -16.251928329467773
    4. '=len' → logprob: -16.501928329467773
    5. '=item' → logprob: -16.501928329467773
    6. '=str' → logprob: -17.126928329467773
    7. '=int' → logprob: -17.626928329467773
    8. 'lambda' → logprob: -18.126928329467773
    9. '=

' → logprob: -18.501928329467773
    10. '=sys' → logprob: -18.626928329467773

Token 25: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2255173623561859
    2. 'x' → logprob: -1.6005173921585083
    3. ' p' → logprob: -9.600517272949219
    4. 'p' → logprob: -11.100517272949219
    5. 'pro' → logprob: -11.600517272949219
    6. 'prob' → logprob: -12.225517272949219
    7. 'a' → logprob: -12.850517272949219
    8. ' a' → logprob: -13.475517272949219
    9. ' pro' → logprob: -13.850517272949219
    10. 'y' → logprob: -14.725517272949219

Token 26: ':x' (ID: 73587)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16036853194236755
    2. ':x' → logprob: -1.91036856174469
    3. ' :' → logprob: -8.910368919372559
    4. 'x' → logprob: -12.910368919372559
    5. ':(' → logprob: -13.160368919372559
    6. ':
' → logprob: -13.660368919372559
    7. '：' → logprob: -14.285368919372559
    8. ':`' → logprob: -14.785368919372559
    9. ':

' → logprob: -14.910368919372559
    10. ':int' → logprob: -15.535368919372559

Token 27: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4140441635390744e-05
    2. ')' → logprob: -11.750014305114746
    3. '[-' → logprob: -13.125014305114746
    4. '-' → logprob: -13.875014305114746
    5. '.' → logprob: -13.875014305114746
    6. ' [' → logprob: -14.625014305114746
    7. '[]' → logprob: -15.125014305114746
    8. ':' → logprob: -15.250014305114746
    9. '[::-' → logprob: -15.375014305114746
    10. '0' → logprob: -15.375014305114746

Token 28: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3874167203903198
    2. '1' → logprob: -1.1374167203903198
    3. ' ' → logprob: -8.01241683959961
    4. '2' → logprob: -9.01241683959961
    5. '-' → logprob: -9.38741683959961
    6. '[' → logprob: -13.63741683959961
    7. '   ' → logprob: -14.19991683959961
    8. ' -' → logprob: -14.19991683959961
    9. '3' → logprob: -14.26241683959961
    10. '::-' → logprob: -14.26241683959961

Token 29: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028759613633155823
    2. '))' → logprob: -6.127875804901123
    3. ' )' → logprob: -8.127876281738281
    4. ',' → logprob: -8.252876281738281
    5. '),' → logprob: -10.002876281738281
    6. ')])' → logprob: -10.377876281738281
    7. '])' → logprob: -11.252876281738281
    8. ')]' → logprob: -11.752876281738281
    9. '})' → logprob: -11.877876281738281
    10. ')#' → logprob: -12.127876281738281

Token 30: 'time' (ID: 4580)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13243459165096283
    2. 'print' → logprob: -3.132434606552124
    3. 'p' → logprob: -3.632434606552124
    4. 'result' → logprob: -5.257434368133545
    5. 'sum' → logprob: -5.257434368133545
    6. 'dp' → logprob: -5.257434368133545
    7. 'total' → logprob: -5.507434368133545
    8. 'f' → logprob: -5.632434368133545
    9. 'a' → logprob: -5.632434368133545
    10. 'i' → logprob: -6.007434368133545

Token 31: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7063822746276855
    2. '=' → logprob: -0.9563822746276855
    3. ' +=' → logprob: -2.3313822746276855
    4. '+=' → logprob: -4.2063822746276855
    5. '_' → logprob: -5.2063822746276855
    6. 's' → logprob: -6.2063822746276855
    7. '+' → logprob: -6.4563822746276855
    8. '_=' → logprob: -8.581382751464844
    9. '<|end|>' → logprob: -8.956382751464844
    10. '_acc' → logprob: -9.081382751464844

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9266199160483666e-05
    2. 'pro' → logprob: -11.375019073486328
    3. ' ' → logprob: -12.000019073486328
    4. 'prob' → logprob: -13.750019073486328
    5. '-' → logprob: -15.625019073486328
    6. '-pro' → logprob: -16.125019073486328
    7. 'p' → logprob: -16.875019073486328
    8. 'x' → logprob: -16.875019073486328
    9. '1' → logprob: -17.125019073486328
    10. 't' → logprob: -17.375019073486328

Token 33: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4177238941192627
    2. 'prob' → logprob: -1.4177238941192627
    3. ',' → logprob: -1.9177238941192627
    4. '+' → logprob: -2.4177238941192627
    5. '<|end|>' → logprob: -2.6677238941192627
    6. ' total' → logprob: -2.9177238941192627
    7. 'total' → logprob: -3.2927238941192627
    8. ',total' → logprob: -3.7927238941192627
    9. '=' → logprob: -4.042723655700684
    10. ' probability' → logprob: -4.292723655700684

Token 34: 'count' (ID: 5420)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.504948616027832
    2. 'max' → logprob: -2.129948616027832
    3. 'res' → logprob: -2.504948616027832
    4. 'result' → logprob: -2.629948616027832
    5. 'total' → logprob: -2.879948616027832
    6. 'for' → logprob: -3.754948616027832
    7. 'answer' → logprob: -4.004948616027832
    8. 'profit' → logprob: -4.629948616027832
    9. ' ans' → logprob: -5.504948616027832
    10. 'score' → logprob: -5.754948616027832

Token 35: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.024296557530760765
    2. ' =' → logprob: -3.774296522140503
    3. '+=' → logprob: -7.274296760559082
    4. ' +=' → logprob: -8.024296760559082
    5. '+' → logprob: -11.899296760559082
    6. '=int' → logprob: -12.149296760559082
    7. '=count' → logprob: -12.899296760559082
    8. ' ' → logprob: -13.149296760559082
    9. '=max' → logprob: -13.524296760559082
    10. '<|end|>' → logprob: -14.024296760559082

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.15441757265944e-05
    2. ' ' → logprob: -10.375031471252441
    3. '1' → logprob: -15.500031471252441
    4. '```' → logprob: -16.750032424926758
    5. '۰' → logprob: -17.812532424926758
    6. '<|end|>' → logprob: -18.000032424926758
    7. '+' → logprob: -18.875032424926758
    8. '`' → logprob: -18.937532424926758
    9. '   ' → logprob: -19.250032424926758
    10. ')' → logprob: -19.250032424926758

Token 37: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9166336059570312
    2. '<|end|>' → logprob: -1.1666336059570312
    3. 'for' → logprob: -1.6666336059570312
    4. '
' → logprob: -2.9166336059570312
    5. '\n' → logprob: -3.4166336059570312
    6. ' 
' → logprob: -5.291633605957031
    7. '<|end|>' → logprob: -5.291633605957031
    8. '```' → logprob: -7.541633605957031
    9. ' ' → logprob: -7.791633605957031
    10. '\' → logprob: -7.916633605957031

Token 38: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006198487710207701
    2. ' for' → logprob: -5.131198406219482
    3. '\n' → logprob: -8.50619888305664
    4. '
' → logprob: -10.13119888305664
    5. '<|end|>' → logprob: -11.13119888305664
    6. '```' → logprob: -12.38119888305664
    7. '	for' → logprob: -12.88119888305664
    8. '\' → logprob: -13.63119888305664
    9. 'For' → logprob: -13.75619888305664
    10. '' → logprob: -13.88119888305664

Token 39: ' a' (ID: 261)
  Prédit: ' prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prob' → logprob: -0.9264774918556213
    2. ' p' → logprob: -1.1764774322509766
    3. 'prob' → logprob: -1.8014774322509766
    4. 'p' → logprob: -2.6764774322509766
    5. ' i' → logprob: -3.5514774322509766
    6. 'i' → logprob: -4.051477432250977
    7. ' problem' → logprob: -5.426477432250977
    8. 'problem' → logprob: -5.676477432250977
    9. ' task' → logprob: -6.801477432250977
    10. 'pro' → logprob: -6.926477432250977

Token 40: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038977958261966705
    2. ' in' → logprob: -3.913977861404419
    3. ',b' → logprob: -4.288978099822998
    4. ' ,' → logprob: -5.913978099822998
    5. 'in' → logprob: -6.913978099822998
    6. ',i' → logprob: -8.28897762298584
    7. ',_' → logprob: -9.03897762298584
    8. ',in' → logprob: -9.16397762298584
    9. ',count' → logprob: -9.91397762298584
    10. 'i' → logprob: -10.28897762298584

Token 41: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06996533274650574
    2. 'in' → logprob: -2.694965362548828
    3. '	in' → logprob: -11.069965362548828
    4. ' ' → logprob: -12.319965362548828
    5. ',' → logprob: -12.444965362548828
    6. ',in' → logprob: -13.444965362548828
    7. '```' → logprob: -13.569965362548828
    8. 'import' → logprob: -14.694965362548828
    9. '_in' → logprob: -15.194965362548828
    10. 'a' → logprob: -15.444965362548828

Token 42: ' probs' (ID: 167628)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.0013415542198345065
    2. ' probs' → logprob: -6.626341342926025
    3. 'prob' → logprob: -11.376341819763184
    4. '_probs' → logprob: -13.251341819763184
    5. ' prob' → logprob: -14.876341819763184
    6. ' pro' → logprob: -14.876341819763184
    7. 'Pro' → logprob: -14.876341819763184
    8. ' ' → logprob: -15.001341819763184
    9. '	pro' → logprob: -15.251341819763184
    10. 'pr' → logprob: -15.376341819763184

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003377270477358252
    2. ':
' → logprob: -8.000337600708008
    3. '>' → logprob: -14.125337600708008
    4. ':
' → logprob: -14.750337600708008
    5. ':**' → logprob: -15.375337600708008
    6. ':

' → logprob: -15.500337600708008
    7. ',' → logprob: -16.125337600708008
    8. '<|end|>' → logprob: -16.500337600708008
    9. '):' → logprob: -16.625337600708008
    10. ':list' → logprob: -17.000337600708008

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06144048646092415
    2. ' if' → logprob: -3.6864404678344727
    3. '	if' → logprob: -4.811440467834473
    4. ' time' → logprob: -4.936440467834473
    5. '	time' → logprob: -4.936440467834473
    6. '<|end|>' → logprob: -5.561440467834473
    7. '    ' → logprob: -5.686440467834473
    8. ' 
' → logprob: -6.686440467834473
    9. '```' → logprob: -6.811440467834473
    10. '    
' → logprob: -7.561440467834473

Token 45: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.3362298607826233
    2. ' if' → logprob: -1.4612298011779785
    3. 'time' (adapté à ' time') → logprob: -3.4612298011779785
    4. '   ' → logprob: -3.9612298011779785
    5. '    ' → logprob: -5.9612298011779785
    6. 'if' → logprob: -8.086230278015137
    7. '```' → logprob: -10.086230278015137
    8. ' ' → logprob: -10.336230278015137
    9. ' ```' → logprob: -10.461230278015137
    10. ' times' → logprob: -10.711230278015137

Token 46: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00835877563804388
    2. '+' → logprob: -5.508358955383301
    3. ' +=' → logprob: -5.508358955383301
    4. '=' → logprob: -9.1333589553833
    5. ']+=' → logprob: -10.3833589553833
    6. '<=' → logprob: -10.3833589553833
    7. '+=(' → logprob: -11.2583589553833
    8. '+='' → logprob: -11.2583589553833
    9. '+a' → logprob: -11.6333589553833
    10. '+="' → logprob: -12.1333589553833

Token 47: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.128163257315464e-07
    2. ' a' → logprob: -15.25
    3. '	a' → logprob: -18.875
    4. '1' → logprob: -21.0
    5. 'а' → logprob: -21.125
    6. '   ' → logprob: -21.375
    7. '_a' → logprob: -21.625
    8. ' ' → logprob: -21.875
    9. '>a' → logprob: -21.875
    10. '+a' → logprob: -22.0

Token 48: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1335809826850891
    2. ' <=' → logprob: -2.3835809230804443
    3. '   ' → logprob: -4.383581161499023
    4. '<=' → logprob: -4.383581161499023
    5. 'if' → logprob: -5.133581161499023
    6. '    ' → logprob: -7.758581161499023
    7. '<|end|>' → logprob: -7.758581161499023
    8. '```' → logprob: -8.383581161499023
    9. ' <' → logprob: -8.633581161499023
    10. '>' → logprob: -8.883581161499023

Token 50: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07915624976158142
    2. ' if' → logprob: -2.5791561603546143
    3. '   ' → logprob: -8.954155921936035
    4. '```' → logprob: -10.329155921936035
    5. '
' → logprob: -11.079155921936035
    6. '<' → logprob: -11.079155921936035
    7. '<|end|>' → logprob: -11.204155921936035
    8. '    
' → logprob: -11.454155921936035
    9. '<=' → logprob: -11.954155921936035
    10. '\n' → logprob: -12.079155921936035

Token 51: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.4740796685218811
    2. 'time' → logprob: -0.9740796685218811
    3. 'b' → logprob: -13.724080085754395
    4. '(time' → logprob: -14.349080085754395
    5. '	time' → logprob: -14.974080085754395
    6. '"time' → logprob: -15.349080085754395
    7. '<=' → logprob: -15.599080085754395
    8. 'Time' → logprob: -16.849079132080078
    9. ' <=' → logprob: -17.349079132080078
    10. '<' → logprob: -17.474079132080078

Token 52: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.04377298429608345
    2. ' <=' → logprob: -3.1687729358673096
    3. '>' → logprob: -7.293773174285889
    4. '<' → logprob: -10.04377269744873
    5. ' >' → logprob: -10.29377269744873
    6. '>b' → logprob: -11.41877269744873
    7. ')<=' → logprob: -14.04377269744873
    8. '">' → logprob: -14.41877269744873
    9. '<b' → logprob: -14.66877269744873
    10. ']<=' → logprob: -14.73127269744873

Token 53: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00029613598599098623
    2. ' b' → logprob: -8.125296592712402
    3. '   ' → logprob: -17.375295639038086
    4. '	b' → logprob: -17.750295639038086
    5. ' ' → logprob: -18.625295639038086
    6. ')b' → logprob: -19.500295639038086
    7. '  ' → logprob: -19.750295639038086
    8. '*b' → logprob: -20.625295639038086
    9. '>b' → logprob: -20.625295639038086
    10. '_b' → logprob: -20.875295639038086

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004625222180038691
    2. ':
' → logprob: -5.37962532043457
    3. '   ' → logprob: -13.00462532043457
    4. '):' → logprob: -14.37962532043457
    5. ':
' → logprob: -14.62962532043457
    6. '       ' → logprob: -15.12962532043457
    7. ':\' → logprob: -15.50462532043457
    8. ':

' → logprob: -15.62962532043457
    9. 'count' → logprob: -15.75462532043457
    10. ':return' → logprob: -15.75462532043457

Token 55: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6460453271865845
    2. 'count' → logprob: -1.1460453271865845
    3. '
' → logprob: -2.146045207977295
    4. ' count' → logprob: -3.771045207977295
    5. '       ' → logprob: -4.271045207977295
    6. '	count' → logprob: -6.771045207977295
    7. '\n' → logprob: -7.021045207977295
    8. '    
' → logprob: -7.146045207977295
    9. ':
' → logprob: -7.396045207977295
    10. '.count' → logprob: -9.271045684814453

Token 56: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -1.318681188422488e-05
    2. ' count' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.25001335144043
    4. '1' → logprob: -18.00001335144043
    5. '       ' → logprob: -18.12501335144043
    6. '	count' → logprob: -18.12501335144043
    7. '
' → logprob: -18.25001335144043
    8. '.count' → logprob: -19.00001335144043
    9. '<count' → logprob: -19.25001335144043
    10. '$count' → logprob: -19.75001335144043

Token 57: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.02170814946293831
    2. '+' → logprob: -3.8967082500457764
    3. ' +=' → logprob: -6.771708011627197
    4. '+="' → logprob: -12.021708488464355
    5. ']+=' → logprob: -12.146708488464355
    6. '+='' → logprob: -12.771708488464355
    7. '=' → logprob: -12.896708488464355
    8. '++' → logprob: -13.896708488464355
    9. '<|end|>' → logprob: -14.021708488464355
    10. '+=(' → logprob: -14.146708488464355

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '１' → logprob: -21.125
    4. '<|end|>' → logprob: -21.125
    5. '۱' → logprob: -22.75
    6. 'a' → logprob: -23.125
    7. '```' → logprob: -23.125
    8. '+' → logprob: -23.375
    9. '१' → logprob: -23.5
    10. '১' → logprob: -24.25

Token 59: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2026035189628601
    2. '
' → logprob: -1.7026035785675049
    3. '<|end|>' → logprob: -7.327603340148926
    4. 'else' → logprob: -8.452603340148926
    5. '\n' → logprob: -9.077603340148926
    6. ' print' → logprob: -9.202603340148926
    7. '
' → logprob: -10.202603340148926
    8. '```' → logprob: -11.202603340148926
    9. ' 
' → logprob: -11.327603340148926
    10. '0' → logprob: -11.952603340148926

Token 60: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00023572170175611973
    2. '
' → logprob: -8.750235557556152
    3. ' print' → logprob: -9.875235557556152
    4. '<|end|>' → logprob: -11.375235557556152
    5. '\n' → logprob: -12.125235557556152
    6. '```' → logprob: -12.750235557556152
    7. 'else' → logprob: -13.375235557556152
    8. ' 
' → logprob: -13.375235557556152
    9. '\' → logprob: -14.250235557556152
    10. '  
' → logprob: -14.750235557556152

Token 61: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.07889099419116974
    2. '(' → logprob: -2.5788910388946533
    3. 'count' → logprob: -15.078890800476074
    4. '('' → logprob: -15.328890800476074
    5. '()' → logprob: -16.20389175415039
    6. '("("' → logprob: -16.20389175415039
    7. ' (' → logprob: -16.32889175415039
    8. '(cnt' → logprob: -16.45389175415039
    9. '(max' → logprob: -16.45389175415039
    10. '((' → logprob: -16.70389175415039

Token 62: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.0
    3. '))' → logprob: -17.0
    4. ')`' → logprob: -18.25
    5. ')
' → logprob: -18.75
    6. '）' → logprob: -19.25
    7. '')' → logprob: -19.375
    8. '`)' → logprob: -19.625
    9. ')}' → logprob: -20.5
    10. ')#' → logprob: -20.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 60
Tokens correctement prédits (1ère position, stricte): 28
Tokens correctement prédits (1ère position, avec adaptation): 30
Tokens correctement prédits (top 10): 46
Précision stricte (1ère position): 46.67%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 76.67%
================================================================================
