================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:19:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    line = input()
    if line == '0':
        break
    cards = list(map(int, line.split()))
    total = 0
    num_ones = 0
    for c in cards:
        if c == 1:
            num_ones += 1
            total += 1
        elif 2 <= c <= 9:
            total += c
        else:
            total += 10
    # essayer avec les uns comptés comme 11 quand possible
    for _ in range(num_ones):
        if total + 10 <= 21:
            total += 10
    if total > 21:
        total = 0
    print(total)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11692515015602112
    2. '\n' → logprob: -3.6169252395629883
    3. '    ' → logprob: -4.241925239562988
    4. ' ' → logprob: -4.241925239562988
    5. '    
' → logprob: -4.366925239562988
    6. ' 
' → logprob: -4.491925239562988
    7. '\' → logprob: -4.616925239562988
    8. ':' → logprob: -5.366925239562988
    9. '```' → logprob: -5.616925239562988
    10. '<|end|>' → logprob: -5.741925239562988

Token 4: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24734942615032196
    2. '    ' → logprob: -1.8723493814468384
    3. '```' → logprob: -3.372349500656128
    4. ' ' → logprob: -3.997349500656128
    5. '    
' → logprob: -6.122349262237549
    6. ' pass' → logprob: -6.372349262237549
    7. '  ' → logprob: -6.622349262237549
    8. '       ' → logprob: -6.872349262237549
    9. 'pass' → logprob: -6.872349262237549
    10. '\' → logprob: -7.872349262237549

Token 5: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12187442928552628
    2. '=' → logprob: -2.3718743324279785
    3. 's' → logprob: -4.6218743324279785
    4. '.' → logprob: -5.4968743324279785
    5. '.startswith' → logprob: -6.1218743324279785
    6. '[:]' → logprob: -7.1218743324279785
    7. '_' → logprob: -7.3718743324279785
    8. '.readline' → logprob: -7.3718743324279785
    9. '[' → logprob: -7.3718743324279785
    10. '.strip' → logprob: -7.6218743324279785

Token 6: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.22574634850025177
    2. 'input' → logprob: -1.6007463932037354
    3. ' ' → logprob: -8.225746154785156
    4. ' f' → logprob: -10.350746154785156
    5. ' file' → logprob: -11.975746154785156
    6. ' readline' → logprob: -12.475746154785156
    7. 'file' → logprob: -12.600746154785156
    8. '   ' → logprob: -12.725746154785156
    9. '=input' → logprob: -12.850746154785156
    10. ' raw' → logprob: -12.850746154785156

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003016214817762375
    2. '('' → logprob: -6.378015995025635
    3. '()' → logprob: -7.003015995025635
    4. '("("' → logprob: -8.378016471862793
    5. ''' → logprob: -9.753016471862793
    6. '```' → logprob: -10.128016471862793
    7. ')' → logprob: -11.003016471862793
    8. '("")' → logprob: -11.628016471862793
    9. ''s' → logprob: -11.753016471862793
    10. '(
' → logprob: -12.253016471862793

Token 8: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8667309284210205
    2. ' if' → logprob: -1.4917309284210205
    3. '<|end|>' → logprob: -2.2417309284210205
    4. '.' → logprob: -2.3667309284210205
    5. '   ' → logprob: -3.1167309284210205
    6. '    ' → logprob: -3.2417309284210205
    7. ':' → logprob: -4.366730690002441
    8. 'if' → logprob: -4.741730690002441
    9. '\n' → logprob: -5.116730690002441
    10. '  
' → logprob: -5.116730690002441

Token 9: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11822997033596039
    2. '   ' → logprob: -2.993229866027832
    3. 'if' (adapté à ' if') → logprob: -3.368229866027832
    4. ' ' → logprob: -4.118229866027832
    5. '    ' → logprob: -5.243229866027832
    6. '.' → logprob: -5.743229866027832
    7. '  ' → logprob: -8.243229866027832
    8. '\n' → logprob: -8.368229866027832
    9. '=' → logprob: -8.493229866027832
    10. 'i' → logprob: -8.743229866027832

Token 10: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5367226004600525
    2. ' not' → logprob: -1.1617226600646973
    3. ' ' → logprob: -2.2867226600646973
    4. 'line' → logprob: -8.286722183227539
    5. ' len' → logprob: -8.536722183227539
    6. 'not' → logprob: -9.036722183227539
    7. '  ' → logprob: -9.036722183227539
    8. ' lines' → logprob: -10.786722183227539
    9. '(line' → logprob: -11.286722183227539
    10. '    ' → logprob: -11.411722183227539

Token 11: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5538973808288574
    2. '.' → logprob: -1.1788973808288574
    3. '.startswith' → logprob: -2.4288973808288574
    4. '==' → logprob: -4.053897380828857
    5. '.strip' → logprob: -4.928897380828857
    6. ' .' → logprob: -5.803897380828857
    7. '.endswith' → logprob: -7.553897380828857
    8. ' ' → logprob: -8.053897857666016
    9. '<|end|>' → logprob: -8.303897857666016
    10. '<|end|>' → logprob: -8.553897857666016

Token 12: ' '' (ID: 461)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.3430653512477875
    2. '''' → logprob: -1.8430653810501099
    3. '"' → logprob: -2.7180652618408203
    4. ''' → logprob: -3.0930652618408203
    5. ' ""' → logprob: -4.09306526184082
    6. ' ''' → logprob: -5.84306526184082
    7. '"":' → logprob: -7.34306526184082
    8. ' "' → logprob: -8.46806526184082
    9. ' '' → logprob: -9.21806526184082
    10. ''ex' → logprob: -11.21806526184082

Token 13: '0' (ID: 15)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -1.2588083744049072
    2. ''' → logprob: -1.5088083744049072
    3. '':' → logprob: -1.5088083744049072
    4. 'quit' → logprob: -1.5088083744049072
    5. '\n' → logprob: -3.2588083744049072
    6. ''\' → logprob: -5.883808135986328
    7. 'break' → logprob: -6.258808135986328
    8. ''ex' → logprob: -6.258808135986328
    9. '```' → logprob: -7.133808135986328
    10. '"' → logprob: -7.258808135986328

Token 14: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.17393113672733307
    2. ''' → logprob: -2.048931121826172
    3. ':' → logprob: -3.798931121826172
    4. '\n' → logprob: -4.923931121826172
    5. ' ':' → logprob: -7.923931121826172
    6. ''):' → logprob: -9.173931121826172
    7. ' '' → logprob: -9.548931121826172
    8. ' or' → logprob: -9.548931121826172
    9. '0' → logprob: -9.798931121826172
    10. '':
' → logprob: -9.798931121826172

Token 15: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009189624106511474
    2. ' break' → logprob: -7.625918865203857
    3. '    ' → logprob: -8.750919342041016
    4. '\n' → logprob: -9.625919342041016
    5. '   ' → logprob: -9.750919342041016
    6. '        ' → logprob: -10.125919342041016
    7. '      ' → logprob: -11.000919342041016
    8. '\' → logprob: -11.250919342041016
    9. '<|end|>' → logprob: -11.375919342041016
    10. '        
' → logprob: -11.500919342041016

Token 16: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6357433795928955
    2. ' break' → logprob: -0.7607433795928955
    3. '   ' → logprob: -6.135743141174316
    4. 'break' (adapté à ' break') → logprob: -7.385743141174316
    5. '\n' → logprob: -8.885743141174316
    6. '	break' → logprob: -9.135743141174316
    7. '           ' → logprob: -10.635743141174316
    8. ' ' → logprob: -11.260743141174316
    9. '_break' → logprob: -11.385743141174316
    10. '```' → logprob: -11.385743141174316

Token 17: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1820942461490631
    2. '    
' → logprob: -2.6820943355560303
    3. '
' → logprob: -3.3070943355560303
    4. '\n' → logprob: -3.9320943355560303
    5. ':' → logprob: -4.432094097137451
    6. '<|end|>' → logprob: -4.682094097137451
    7. ' ' → logprob: -5.557094097137451
    8. '  
' → logprob: -5.682094097137451
    9. '\' → logprob: -6.182094097137451
    10. ')' → logprob: -6.307094097137451

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038279939442873
    2. '    
' → logprob: -3.6632800102233887
    3. '
' → logprob: -5.413280010223389
    4. '<|end|>' → logprob: -5.663280010223389
    5. '\n' → logprob: -6.538280010223389
    6. 'print' → logprob: -6.663280010223389
    7. '    ' → logprob: -8.28827953338623
    8. '  
' → logprob: -8.66327953338623
    9. ' ' → logprob: -8.91327953338623
    10. '<|end|>' → logprob: -9.28827953338623

Token 19: ' cards' (ID: 10541)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6992754936218262
    2. '\n' → logprob: -2.074275493621826
    3. 'print' → logprob: -2.199275493621826
    4. '    
' → logprob: -2.949275493621826
    5. ' 
' → logprob: -3.199275493621826
    6. '    ' → logprob: -3.324275493621826
    7. ' ' → logprob: -3.574275493621826
    8. '
' → logprob: -3.699275493621826
    9. ' print' → logprob: -4.324275493621826
    10. 'n' → logprob: -4.324275493621826

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08533533662557602
    2. '=' → logprob: -3.0853352546691895
    3. '.' → logprob: -3.4603352546691895
    4. '[' → logprob: -6.8353352546691895
    5. '.split' → logprob: -7.3353352546691895
    6. '.append' → logprob: -7.4603352546691895
    7. '[:]' → logprob: -7.5853352546691895
    8. '_' → logprob: -7.8353352546691895
    9. ' ' → logprob: -7.9603352546691895
    10. '_count' → logprob: -8.710335731506348

Token 21: ' list' (ID: 1562)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.32531067728996277
    2. ' list' → logprob: -1.4503107070922852
    3. 'line' → logprob: -3.325310707092285
    4. 'list' → logprob: -5.325310707092285
    5. ' [' → logprob: -6.825310707092285
    6. ' set' → logprob: -7.950310707092285
    7. '[line' → logprob: -8.575310707092285
    8. '[' → logprob: -8.700310707092285
    9. ' map' → logprob: -8.950310707092285
    10. ' input' → logprob: -8.950310707092285

Token 22: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03815073519945145
    2. '(line' → logprob: -3.2881507873535156
    3. '(cards' → logprob: -10.038150787353516
    4. '()' → logprob: -11.163150787353516
    5. '(range' → logprob: -11.288150787353516
    6. '(map' → logprob: -12.288150787353516
    7. '(input' → logprob: -12.413150787353516
    8. '(
' → logprob: -12.663150787353516
    9. '(int' → logprob: -12.663150787353516
    10. ' (' → logprob: -12.788150787353516

Token 23: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.04053327813744545
    2. '(str' → logprob: -3.4155333042144775
    3. '(' → logprob: -5.040533065795898
    4. 'int' → logprob: -8.415533065795898
    5. 'str' → logprob: -9.290533065795898
    6. '(lambda' → logprob: -9.790533065795898
    7. ' int' → logprob: -12.540533065795898
    8. ' str' → logprob: -12.540533065795898
    9. '<int' → logprob: -12.540533065795898
    10. '(
' → logprob: -12.915533065795898

Token 24: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.1345789432525635
    2. ',' → logprob: -1.2595789432525635
    3. '(' → logprob: -1.3845789432525635
    4. '(line' → logprob: -2.3845789432525635
    5. ',input' → logprob: -3.1345789432525635
    6. ',line' → logprob: -5.509578704833984
    7. ' ,' → logprob: -6.509578704833984
    8. '   ' → logprob: -6.634578704833984
    9. ' (' → logprob: -7.634578704833984
    10. '(
' → logprob: -7.634578704833984

Token 25: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.3811713755130768
    2. ' line' → logprob: -1.2561713457107544
    3. 'input' → logprob: -3.756171464920044
    4. ' input' → logprob: -4.881171226501465
    5. '   ' → logprob: -7.131171226501465
    6. '(line' → logprob: -8.381171226501465
    7. '	line' → logprob: -9.881171226501465
    8. ')' → logprob: -10.381171226501465
    9. ' ' → logprob: -10.381171226501465
    10. '[line' → logprob: -10.631171226501465

Token 26: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.38068944215774536
    2. '.' → logprob: -1.6306893825531006
    3. '.strip' → logprob: -2.1306893825531006
    4. '().' → logprob: -6.50568962097168
    5. ' .' → logprob: -7.88068962097168
    6. '.rstrip' → logprob: -9.00568962097168
    7. 'split' → logprob: -10.75568962097168
    8. ')' → logprob: -11.00568962097168
    9. '))' → logprob: -11.88068962097168
    10. '.readline' → logprob: -12.50568962097168

Token 27: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.1573702096939087
    2. '())' → logprob: -2.657370090484619
    3. '('' → logprob: -2.907370090484619
    4. '))' → logprob: -4.407370090484619
    5. '()' → logprob: -5.532370090484619
    6. '(' → logprob: -5.657370090484619
    7. ')' → logprob: -7.532370090484619
    8. '(','' → logprob: -8.282370567321777
    9. '()))
' → logprob: -8.782370567321777
    10. '())))' → logprob: -9.032370567321777

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3570866584777832
    2. '
' → logprob: -1.6070866584777832
    3. '[' → logprob: -1.9820866584777832
    4. ' ' → logprob: -2.232086658477783
    5. ':' → logprob: -2.482086658477783
    6. '\n' → logprob: -2.857086658477783
    7. ')' → logprob: -3.232086658477783
    8. '<|end|>' → logprob: -3.482086658477783
    9. ' 
' → logprob: -4.357086658477783
    10. '    
' → logprob: -4.357086658477783

Token 29: ' total' (ID: 3609)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0851526260375977
    2. ' ' → logprob: -1.8351526260375977
    3. '[' → logprob: -2.4601526260375977
    4. ':' → logprob: -2.5851526260375977
    5. ' if' → logprob: -2.7101526260375977
    6. '   ' → logprob: -2.7101526260375977
    7. ')' → logprob: -2.8351526260375977
    8. 'if' → logprob: -3.2101526260375977
    9. 's' → logprob: -4.335152626037598
    10. ',' → logprob: -4.960152626037598

Token 30: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.41535115242004395
    2. ' =' → logprob: -1.415351152420044
    3. ' +=' → logprob: -3.415351152420044
    4. '=' → logprob: -3.915351152420044
    5. '_cards' → logprob: -4.165350914001465
    6. '_sum' → logprob: -4.415350914001465
    7. ' ' → logprob: -5.040350914001465
    8. '_count' → logprob: -5.790350914001465
    9. '_score' → logprob: -6.790350914001465
    10. ')' → logprob: -7.165350914001465

Token 31: ' ' (ID: 220)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.049160655587911606
    2. 'sum' → logprob: -3.5491607189178467
    3. '0' → logprob: -4.549160480499268
    4. ' ' → logprob: -5.299160480499268
    5. ' cards' → logprob: -5.674160480499268
    6. 'cards' → logprob: -9.049160957336426
    7. '(sum' → logprob: -10.924160957336426
    8. ' max' → logprob: -11.174160957336426
    9. ' len' → logprob: -11.299160957336426
    10. '   ' → logprob: -11.611660957336426

Token 32: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.42568859457969666
    2. ' sum' → logprob: -1.175688624382019
    3. '0' → logprob: -3.5506885051727295
    4. 'cards' → logprob: -5.300688743591309
    5. ' cards' → logprob: -5.675688743591309
    6. ' ' → logprob: -7.925688743591309
    7. '   ' → logprob: -8.550688743591309
    8. 'max' → logprob: -9.550688743591309
    9. '(sum' → logprob: -9.675688743591309
    10. ' max' → logprob: -10.050688743591309

Token 33: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19282850623130798
    2. '+' → logprob: -2.817828416824341
    3. ' ' → logprob: -3.442828416824341
    4. '[' → logprob: -3.442828416824341
    5. '<|end|>' → logprob: -3.817828416824341
    6. ')' → logprob: -4.69282865524292
    7. '    ' → logprob: -5.06782865524292
    8. '    
' → logprob: -5.56782865524292
    9. '
' → logprob: -6.06782865524292
    10. '  ' → logprob: -6.31782865524292

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5305549502372742
    2. '<|end|>' → logprob: -2.030555009841919
    3. ' ' → logprob: -2.280555009841919
    4. 'for' → logprob: -2.780555009841919
    5. ' for' → logprob: -2.780555009841919
    6. '+' → logprob: -3.280555009841919
    7. '
' → logprob: -5.90555477142334
    8. '  ' → logprob: -6.28055477142334
    9. '<|end|>' → logprob: -6.28055477142334
    10. '    ' → logprob: -6.40555477142334

Token 35: ' num' (ID: 2269)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03204190731048584
    2. ' for' → logprob: -3.5320420265197754
    3. '   ' → logprob: -6.282042026519775
    4. ' ' → logprob: -8.407041549682617
    5. ')' → logprob: -10.657041549682617
    6. 'n' → logprob: -10.907041549682617
    7. '	for' → logprob: -10.907041549682617
    8. '[' → logprob: -11.157041549682617
    9. 'total' → logprob: -11.282041549682617
    10. '    ' → logprob: -11.282041549682617

Token 36: '_' (ID: 62)
  Prédit: '_cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.018238909542560577
    2. '_' → logprob: -4.7682390213012695
    3. ' =' → logprob: -4.8932390213012695
    4. 's' → logprob: -7.1432390213012695
    5. '=' → logprob: -7.3932390213012695
    6. ' ' → logprob: -9.01823902130127
    7. '_pairs' → logprob: -9.39323902130127
    8. '_of' → logprob: -9.76823902130127
    9. '_players' → logprob: -9.76823902130127
    10. '_c' → logprob: -10.14323902130127

Token 37: 'ones' (ID: 3617)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.06127915903925896
    2. 'aces' → logprob: -3.061279058456421
    3. 'ace' → logprob: -5.311279296875
    4. 'pairs' → logprob: -6.186279296875
    5. '_cards' → logprob: -7.061279296875
    6. 'players' → logprob: -7.311279296875
    7. 'a' → logprob: -7.561279296875
    8. 'of' → logprob: -7.686279296875
    9. 'A' → logprob: -8.561279296875
    10. 'red' → logprob: -8.561279296875

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0739065632224083
    2. '=' → logprob: -2.698906660079956
    3. ' +=' → logprob: -5.573906421661377
    4. '+=' → logprob: -9.448906898498535
    5. ' ' → logprob: -10.198906898498535
    6. '_' → logprob: -11.073906898498535
    7. ')' → logprob: -11.573906898498535
    8. ' *=' → logprob: -12.198906898498535
    9. '   ' → logprob: -13.073906898498535
    10. ' -=' → logprob: -13.073906898498535

Token 39: ' ' (ID: 220)
  Prédit: ' cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.12896385788917542
    2. 'cards' → logprob: -2.1289639472961426
    3. '0' → logprob: -6.753963947296143
    4. ' ' → logprob: -7.753963947296143
    5. '(cards' → logprob: -8.128963470458984
    6. '   ' → logprob: -10.003963470458984
    7. ' sum' → logprob: -10.378963470458984
    8. 'sum' → logprob: -11.503963470458984
    9. 'card' → logprob: -11.628963470458984
    10. '.cards' → logprob: -11.628963470458984

Token 40: '0' (ID: 15)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.055206771939992905
    2. ' cards' → logprob: -2.930206775665283
    3. '   ' → logprob: -9.180206298828125
    4. '(cards' → logprob: -9.305206298828125
    5. 'sum' → logprob: -9.805206298828125
    6. '0' → logprob: -10.430206298828125
    7. 'card' → logprob: -11.180206298828125
    8. ' sum' → logprob: -12.055206298828125
    9. ' ' → logprob: -12.180206298828125
    10. '.cards' → logprob: -12.305206298828125

Token 41: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26763907074928284
    2. '<|end|>' → logprob: -2.14263916015625
    3. ' for' → logprob: -2.39263916015625
    4. 'for' → logprob: -4.89263916015625
    5. ' ' → logprob: -4.89263916015625
    6. ' 
' → logprob: -5.26763916015625
    7. '  ' → logprob: -6.39263916015625
    8. '    
' → logprob: -6.89263916015625
    9. '<|end|>' → logprob: -7.14263916015625
    10. '    ' → logprob: -7.64263916015625

Token 43: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10779925435781479
    2. ' for' → logprob: -2.3577992916107178
    3. '   ' → logprob: -4.982799053192139
    4. ' ' → logprob: -7.857799053192139
    5. '<|end|>' → logprob: -9.107799530029297
    6. '	for' → logprob: -9.482799530029297
    7. '
' → logprob: -9.982799530029297
    8. '  ' → logprob: -10.732799530029297
    9. '```' → logprob: -10.732799530029297
    10. '    ' → logprob: -11.982799530029297

Token 44: ' c' (ID: 274)
  Prédit: ' card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.00725744292140007
    2. ' c' → logprob: -5.882257461547852
    3. 'card' → logprob: -6.132257461547852
    4. ' x' → logprob: -6.632257461547852
    5. ' i' → logprob: -8.132257461547852
    6. ' num' → logprob: -8.632257461547852
    7. ' ' → logprob: -8.882257461547852
    8. '	card' → logprob: -9.132257461547852
    9. ' value' → logprob: -10.007257461547852
    10. 'c' → logprob: -10.132257461547852

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008580770343542099
    2. 'in' → logprob: -4.883580684661865
    3. ' ' → logprob: -7.133580684661865
    4. '  ' → logprob: -9.883581161499023
    5. '   ' → logprob: -10.383581161499023
    6. 's' → logprob: -10.508581161499023
    7. ' i' → logprob: -10.508581161499023
    8. 'i' → logprob: -10.758581161499023
    9. '_' → logprob: -12.258581161499023
    10. '	in' → logprob: -12.508581161499023

Token 46: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.2833921015262604
    2. ' cards' → logprob: -1.408392071723938
    3. '(cards' → logprob: -6.158391952514648
    4. '.cards' → logprob: -10.283391952514648
    5. 'c' → logprob: -10.908391952514648
    6. 'ards' → logprob: -11.033391952514648
    7. ' ' → logprob: -11.533391952514648
    8. '_cards' → logprob: -11.533391952514648
    9. 's' → logprob: -11.658391952514648
    10. '/cards' → logprob: -11.908391952514648

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011689399980241433
    2. '<|end|>' → logprob: -10.250117301940918
    3. ':
' → logprob: -10.625117301940918
    4. '<|end|>' → logprob: -11.250117301940918
    5. ' :' → logprob: -11.375117301940918
    6. ':**' → logprob: -11.750117301940918
    7. '>' → logprob: -12.375117301940918
    8. '   ' → logprob: -12.375117301940918
    9. '=' → logprob: -12.500117301940918
    10. ',' → logprob: -12.500117301940918

Token 48: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7535823583602905
    2. '<|end|>' → logprob: -1.2535823583602905
    3. ' ' → logprob: -2.12858247756958
    4. '   ' → logprob: -2.62858247756958
    5. '    ' → logprob: -3.75358247756958
    6. ':' → logprob: -4.00358247756958
    7. '<|end|>' → logprob: -5.87858247756958
    8. ' if' → logprob: -6.37858247756958
    9. ' 
' → logprob: -6.50358247756958
    10. '+' → logprob: -7.12858247756958

Token 49: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4392048716545105
    2. ' ' → logprob: -1.1892049312591553
    3. '    ' → logprob: -3.8142049312591553
    4. '       ' → logprob: -4.439204692840576
    5. ' total' → logprob: -4.814204692840576
    6. '        ' → logprob: -6.064204692840576
    7. 'if' (adapté à ' if') → logprob: -6.189204692840576
    8. '   ' → logprob: -6.564204692840576
    9. '```' → logprob: -6.814204692840576
    10. ' 
' → logprob: -7.189204692840576

Token 50: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.001341792638413608
    2. 'c' → logprob: -6.626341819763184
    3. ' ' → logprob: -11.126341819763184
    4. ' ' → logprob: -13.876341819763184
    5. '<|end|>' → logprob: -16.501340866088867
    6. '_' → logprob: -17.626340866088867
    7. ' isinstance' → logprob: -17.688840866088867
    8. '    ' → logprob: -17.688840866088867
    9. '	c' → logprob: -17.688840866088867
    10. ' (' → logprob: -18.063840866088867

Token 51: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0891113355755806
    2. '==' → logprob: -2.464111328125
    3. ' ' → logprob: -9.339111328125
    4. '=' → logprob: -10.714111328125
    5. '>' → logprob: -11.089111328125
    6. ' in' → logprob: -11.089111328125
    7. ' >' → logprob: -12.214111328125
    8. ' >=' → logprob: -12.464111328125
    9. ' !=' → logprob: -12.589111328125
    10. ' =' → logprob: -12.964111328125

Token 52: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16025561094284058
    2. '1' → logprob: -1.9102556705474854
    3. '0' → logprob: -11.035255432128906
    4. '  ' → logprob: -12.285255432128906
    5. '2' → logprob: -13.347755432128906
    6. ' ' → logprob: -13.410255432128906
    7. 's' → logprob: -13.660255432128906
    8. '4' → logprob: -14.035255432128906
    9. '   ' → logprob: -14.160255432128906
    10. '<|end|>' → logprob: -14.660255432128906

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000629279064014554
    2. ' ' → logprob: -7.750629425048828
    3. '0' → logprob: -9.875629425048828
    4. '2' → logprob: -10.000629425048828
    5. '10' → logprob: -10.625629425048828
    6. '100' → logprob: -11.688129425048828
    7. '4' → logprob: -11.750629425048828
    8. '6' → logprob: -11.875629425048828
    9. '5' → logprob: -11.875629425048828
    10. '3' → logprob: -12.000629425048828

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02347944676876068
    2. ':
' → logprob: -3.773479461669922
    3. ' :' → logprob: -9.273479461669922
    4. ' or' → logprob: -9.523479461669922
    5. '       ' → logprob: -11.148479461669922
    6. ':
' → logprob: -11.523479461669922
    7. ' and' → logprob: -11.773479461669922
    8. ':num' → logprob: -11.898479461669922
    9. '):' → logprob: -12.273479461669922
    10. '           ' → logprob: -12.273479461669922

Token 55: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3093101978302002
    2. '           ' → logprob: -2.0593101978302
    3. ':
' → logprob: -2.6843101978302
    4. '       ' → logprob: -2.8093101978302
    5. '        ' → logprob: -6.559309959411621
    6. ' and' → logprob: -6.684309959411621
    7. ' or' → logprob: -7.059309959411621
    8. '<|end|>' → logprob: -7.059309959411621
    9. '   ' → logprob: -7.309309959411621
    10. '0' → logprob: -7.559309959411621

Token 56: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.09555310010910034
    2. 'num' (adapté à ' num') → logprob: -2.470553159713745
    3. ' total' → logprob: -5.720552921295166
    4. '           ' → logprob: -6.345552921295166
    5. 'total' → logprob: -7.970552921295166
    6. '	num' → logprob: -8.345553398132324
    7. '   ' → logprob: -8.595553398132324
    8. '               ' → logprob: -8.720553398132324
    9. ' ' → logprob: -8.970553398132324
    10. '            ' → logprob: -9.470553398132324

Token 57: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0280383548888494e-06
    2. ' _' → logprob: -14.875000953674316
    3. '_s' → logprob: -15.750000953674316
    4. 's' → logprob: -15.750000953674316
    5. '_one' → logprob: -17.000001907348633
    6. ' +=' → logprob: -17.375001907348633
    7. '```' → logprob: -17.500001907348633
    8. '+' → logprob: -17.750001907348633
    9. ' ' → logprob: -17.750001907348633
    10. '+=' → logprob: -18.125001907348633

Token 58: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -1.3425219549390022e-05
    2. 'one' → logprob: -11.87501335144043
    3. ' ones' → logprob: -12.87501335144043
    4. '_' → logprob: -13.37501335144043
    5. '1' → logprob: -13.87501335144043
    6. 's' → logprob: -14.37501335144043
    7. '.ones' → logprob: -15.87501335144043
    8. '```' → logprob: -16.12501335144043
    9. 'ons' → logprob: -16.87501335144043
    10. 'ONES' → logprob: -17.00001335144043

Token 59: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.002476604888215661
    2. '+=' → logprob: -6.002476692199707
    3. ' =' → logprob: -14.877476692199707
    4. '+' → logprob: -14.877476692199707
    5. ' ' → logprob: -16.00247573852539
    6. '<|end|>' → logprob: -16.37747573852539
    7. '=' → logprob: -16.62747573852539
    8. ' +' → logprob: -17.12747573852539
    9. ' -=' → logprob: -17.75247573852539
    10. ' ' → logprob: -18.62747573852539

Token 60: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029750484973192215
    2. ' ' → logprob: -3.5297505855560303
    3. '<|end|>' → logprob: -18.40475082397461
    4. ' ' → logprob: -18.65475082397461
    5. '   ' → logprob: -20.02975082397461
    6. '```' → logprob: -20.65475082397461
    7. '۱' → logprob: -20.90475082397461
    8. '１' → logprob: -21.15475082397461
    9. '  ' → logprob: -21.27975082397461
    10. '    ' → logprob: -21.90475082397461

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -18.500019073486328
    4. '2' → logprob: -20.125019073486328
    5. '  ' → logprob: -20.375019073486328
    6. '```' → logprob: -20.750019073486328
    7. '+' → logprob: -21.437519073486328
    8. '１' → logprob: -21.625019073486328
    9. '-' → logprob: -22.000019073486328
    10. '۱' → logprob: -22.125019073486328

Token 62: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: '           ' (ID: 352)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.8158797025680542
    2. ' ' → logprob: -1.3158797025680542
    3. '       ' → logprob: -2.3158798217773438
    4. 'else' → logprob: -3.1908798217773438
    5. ' elif' → logprob: -3.1908798217773438
    6. '<|end|>' → logprob: -3.1908798217773438
    7. '    ' → logprob: -3.5658798217773438
    8. 'elif' → logprob: -4.690879821777344
    9. '        ' → logprob: -4.815879821777344
    10. '   ' → logprob: -4.815879821777344

Token 64: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -1.358001708984375
    2. 'total' (adapté à ' total') → logprob: -1.608001708984375
    3. ' else' → logprob: -1.858001708984375
    4. 'else' → logprob: -1.858001708984375
    5. '   ' → logprob: -2.983001708984375
    6. '    ' → logprob: -3.358001708984375
    7. 'continue' → logprob: -3.608001708984375
    8. '       ' → logprob: -3.733001708984375
    9. ' ' → logprob: -3.733001708984375
    10. ' continue' → logprob: -3.983001708984375

Token 65: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07906967401504517
    2. '+=' → logprob: -2.7040696144104004
    3. '+' → logprob: -4.7040696144104
    4. ' +' → logprob: -10.829070091247559
    5. '<|end|>' → logprob: -12.454070091247559
    6. ' ' → logprob: -12.954070091247559
    7. '++' → logprob: -13.454070091247559
    8. ' -=' → logprob: -13.704070091247559
    9. '=' → logprob: -13.829070091247559
    10. '+='' → logprob: -14.079070091247559

Token 66: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10816468298435211
    2. '11' → logprob: -3.1081647872924805
    3. '100' → logprob: -3.6081647872924805
    4. '10' → logprob: -4.1081647872924805
    5. '3' → logprob: -6.3581647872924805
    6. '5' → logprob: -6.6081647872924805
    7. ' ' → logprob: -6.6081647872924805
    8. '300' → logprob: -6.6081647872924805
    9. '2' → logprob: -6.7331647872924805
    10. '15' → logprob: -6.8581647872924805

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.33160141110420227
    2. '11' → logprob: -1.5816013813018799
    3. '100' → logprob: -3.58160138130188
    4. '10' → logprob: -3.58160138130188
    5. '15' → logprob: -5.581601619720459
    6. '3' → logprob: -5.956601619720459
    7. '2' → logprob: -6.206601619720459
    8. '14' → logprob: -6.206601619720459
    9. '5' → logprob: -6.331601619720459
    10. '4' → logprob: -6.456601619720459

Token 68: '
' (ID: 198)
  Prédit: ' elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.9730725884437561
    2. 'elif' → logprob: -1.2230725288391113
    3. '       ' → logprob: -2.0980725288391113
    4. ' else' → logprob: -2.4730725288391113
    5. '<|end|>' → logprob: -2.5980725288391113
    6. '   ' → logprob: -3.7230725288391113
    7. 'else' → logprob: -4.348072528839111
    8. ' ' → logprob: -5.723072528839111
    9. '
' → logprob: -6.098072528839111
    10. '	elif' → logprob: -6.973072528839111

Token 69: '       ' (ID: 309)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.5427212119102478
    2. ' elif' → logprob: -1.1677212715148926
    3. '   ' → logprob: -3.2927212715148926
    4. ' else' → logprob: -3.2927212715148926
    5. '<|end|>' → logprob: -4.167721271514893
    6. 'else' → logprob: -4.417721271514893
    7. '       ' → logprob: -5.417721271514893
    8. ' ' → logprob: -7.792721271514893
    9. '	elif' → logprob: -7.917721271514893
    10. '  ' → logprob: -8.667720794677734

Token 70: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.3808300495147705
    2. ' elif' → logprob: -1.3808300495147705
    3. ' else' → logprob: -3.3808300495147705
    4. 'else' → logprob: -3.6308300495147705
    5. '   ' → logprob: -6.130829811096191
    6. '       ' → logprob: -6.255829811096191
    7. '<|end|>' → logprob: -7.880829811096191
    8. '	elif' → logprob: -8.505829811096191
    9. ')' → logprob: -10.255829811096191
    10. ' ' → logprob: -10.755829811096191

Token 71: ' ' (ID: 220)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.11520952731370926
    2. ' ' → logprob: -2.3652095794677734
    3. 'c' → logprob: -4.365209579467773
    4. '2' → logprob: -7.490209579467773
    5. '7' → logprob: -8.615209579467773
    6. ' total' → logprob: -8.802709579467773
    7. '6' → logprob: -8.990209579467773
    8. '4' → logprob: -8.990209579467773
    9. '1' → logprob: -8.990209579467773
    10. '  ' → logprob: -9.177709579467773

Token 72: '2' (ID: 17)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.14617440104484558
    2. ' c' → logprob: -2.396174430847168
    3. '2' → logprob: -3.771174430847168
    4. ' ' → logprob: -4.396174430847168
    5. '7' → logprob: -6.521174430847168
    6. '10' → logprob: -6.646174430847168
    7. '5' → logprob: -6.646174430847168
    8. '4' → logprob: -6.771174430847168
    9. '3' → logprob: -6.896174430847168
    10. '6' → logprob: -7.271174430847168

Token 73: ' <=' (ID: 5017)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7299063801765442
    2. ' <=' → logprob: -0.8549063801765442
    3. ' ' → logprob: -3.6049063205718994
    4. ' *' → logprob: -3.8549063205718994
    5. '==' → logprob: -4.3549065589904785
    6. '*' → logprob: -4.7299065589904785
    7. ':' → logprob: -4.9799065589904785
    8. ' in' → logprob: -5.7299065589904785
    9. '<=' → logprob: -5.8549065589904785
    10. ' >=' → logprob: -5.9799065589904785

Token 74: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2811650335788727
    2. ' c' → logprob: -1.4061650037765503
    3. ' ' → logprob: -11.53116512298584
    4. '<|end|>' → logprob: -13.28116512298584
    5. '	c' → logprob: -13.78116512298584
    6. ' ' → logprob: -13.90616512298584
    7. '   ' → logprob: -15.46866512298584
    8. ')c' → logprob: -16.093664169311523
    9. '7' → logprob: -16.281164169311523
    10. '```' → logprob: -16.781164169311523

Token 75: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.08685705810785294
    2. '<=' → logprob: -2.7118570804595947
    3. ' and' → logprob: -4.211856842041016
    4. 'and' → logprob: -6.586856842041016
    5. ' ' → logprob: -7.961856842041016
    6. ' <' → logprob: -9.461856842041016
    7. '<|end|>' → logprob: -9.961856842041016
    8. '*' → logprob: -10.586856842041016
    9. ':' → logprob: -11.211856842041016
    10. '<' → logprob: -11.336856842041016

Token 76: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.8263949155807495
    2. '9' → logprob: -1.3263949155807495
    3. '6' → logprob: -2.326395034790039
    4. '5' → logprob: -2.451395034790039
    5. '7' → logprob: -2.701395034790039
    6. '11' → logprob: -3.951395034790039
    7. '4' → logprob: -4.826395034790039
    8. '20' → logprob: -5.326395034790039
    9. '12' → logprob: -5.826395034790039
    10. '8' → logprob: -5.826395034790039

Token 77: '9' (ID: 24)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.937804102897644
    2. '9' → logprob: -1.312804102897644
    3. '6' → logprob: -1.937804102897644
    4. '5' → logprob: -2.4378042221069336
    5. '7' → logprob: -2.8128042221069336
    6. '4' → logprob: -4.312804222106934
    7. '11' → logprob: -4.312804222106934
    8. '8' → logprob: -5.062804222106934
    9. '3' → logprob: -5.062804222106934
    10. '12' → logprob: -5.937804222106934

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016219237819314003
    2. ':
' → logprob: -4.141219139099121
    3. ' :' → logprob: -9.641219139099121
    4. ' and' → logprob: -9.766219139099121
    5. '           ' → logprob: -11.391219139099121
    6. '       ' → logprob: -11.391219139099121
    7. ' :
' → logprob: -12.016219139099121
    8. ':
' → logprob: -12.266219139099121
    9. '   ' → logprob: -12.391219139099121
    10. ' or' → logprob: -12.516219139099121

Token 79: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6293057203292847
    2. '           ' → logprob: -1.0043057203292847
    3. ':
' → logprob: -2.504305839538574
    4. '<|end|>' → logprob: -5.379305839538574
    5. '       ' → logprob: -5.629305839538574
    6. '+' → logprob: -6.379305839538574
    7. '               ' → logprob: -7.004305839538574
    8. ' total' → logprob: -7.004305839538574
    9. ' ' → logprob: -7.129305839538574
    10. '        ' → logprob: -7.254305839538574

Token 80: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.017554959282279015
    2. ' total' → logprob: -4.142554759979248
    3. '10' → logprob: -7.642554759979248
    4. '           ' → logprob: -7.767554759979248
    5. 'c' → logprob: -8.142555236816406
    6. '0' → logprob: -9.392555236816406
    7. '2' → logprob: -9.892555236816406
    8. ' c' → logprob: -10.142555236816406
    9. '1' → logprob: -10.642555236816406
    10. '9' → logprob: -10.642555236816406

Token 81: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.08900555223226547
    2. '+=' → logprob: -2.464005470275879
    3. '+' → logprob: -9.714005470275879
    4. ' +' → logprob: -13.089005470275879
    5. '+=(' → logprob: -14.214005470275879
    6. ']+=' → logprob: -14.214005470275879
    7. '+='' → logprob: -14.464005470275879
    8. '    ' → logprob: -14.589005470275879
    9. ' -=' → logprob: -15.089005470275879
    10. '+="' → logprob: -15.714005470275879

Token 82: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0032689759973436594
    2. '10' → logprob: -6.503269195556641
    3. '2' → logprob: -7.128269195556641
    4. ' c' → logprob: -8.00326919555664
    5. '1' → logprob: -8.12826919555664
    6. '5' → logprob: -9.37826919555664
    7. '0' → logprob: -9.50326919555664
    8. '9' → logprob: -10.25326919555664
    9. 'int' → logprob: -10.75326919555664
    10. ' ' → logprob: -11.25326919555664

Token 83: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: '       ' (ID: 309)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.8442896008491516
    2. ' else' → logprob: -1.5942895412445068
    3. ' elif' → logprob: -1.9692895412445068
    4. '   ' → logprob: -2.219289541244507
    5. 'else' → logprob: -2.344289541244507
    6. '<|end|>' → logprob: -4.469289779663086
    7. '       ' → logprob: -4.719289779663086
    8. '	elif' → logprob: -6.469289779663086
    9. ' ' → logprob: -8.344289779663086
    10. ')' → logprob: -8.969289779663086

Token 85: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.8369200825691223
    2. ' else' → logprob: -1.2119200229644775
    3. 'else' (adapté à ' else') → logprob: -1.9619200229644775
    4. ' elif' → logprob: -2.0869200229644775
    5. '   ' → logprob: -6.461920261383057
    6. '	elif' → logprob: -6.586920261383057
    7. '<|end|>' → logprob: -6.586920261383057
    8. '	else' → logprob: -8.961919784545898
    9. '       ' → logprob: -9.836919784545898
    10. ')' → logprob: -10.086919784545898

Token 86: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008860878297127783
    2. ':
' → logprob: -7.500885963439941
    3. ' :' → logprob: -8.500885963439941
    4. '<|end|>' → logprob: -9.875885963439941
    5. '           ' → logprob: -10.750885963439941
    6. '       ' → logprob: -11.125885963439941
    7. '   ' → logprob: -11.625885963439941
    8. '        ' → logprob: -11.875885963439941
    9. ' if' → logprob: -12.750885963439941
    10. '[' → logprob: -12.875885963439941

Token 87: '           ' (ID: 352)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.3571704626083374
    2. 'total' → logprob: -2.232170581817627
    3. '           ' → logprob: -2.607170581817627
    4. '   ' → logprob: -3.357170581817627
    5. '       ' → logprob: -3.857170581817627
    6. '    ' → logprob: -3.857170581817627
    7. ' pass' → logprob: -3.982170581817627
    8. '0' → logprob: -5.357170581817627
    9. ' continue' → logprob: -5.357170581817627
    10. 'pass' → logprob: -5.732170581817627

Token 88: ' total' (ID: 3609)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.02232796512544155
    2. 'total' (adapté à ' total') → logprob: -4.147327899932861
    3. '1' → logprob: -5.522327899932861
    4. ' ' → logprob: -6.897327899932861
    5. '11' → logprob: -7.897327899932861
    6. '   ' → logprob: -8.14732837677002
    7. '0' → logprob: -8.77232837677002
    8. ' total' → logprob: -9.14732837677002
    9. '```' → logprob: -9.95982837677002
    10. '12' → logprob: -9.95982837677002

Token 89: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06229604035615921
    2. ' +=' → logprob: -2.812296152114868
    3. '+' → logprob: -8.312295913696289
    4. '=' → logprob: -9.437295913696289
    5. ']+=' → logprob: -13.812295913696289
    6. '+='' → logprob: -14.437295913696289
    7. ')' → logprob: -14.562295913696289
    8. ' ' → logprob: -14.937295913696289
    9. '+="' → logprob: -15.312295913696289
    10. '+=(' → logprob: -15.812295913696289

Token 90: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004137291572988033
    2. '0' → logprob: -5.6291375160217285
    3. '1' → logprob: -8.00413703918457
    4. '11' → logprob: -9.50413703918457
    5. ' ' → logprob: -10.00413703918457
    6. '5' → logprob: -10.62913703918457
    7. '2' → logprob: -11.75413703918457
    8. '4' → logprob: -11.75413703918457
    9. '3' → logprob: -11.75413703918457
    10. '7' → logprob: -12.56663703918457

Token 91: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0020951840560883284
    2. '0' → logprob: -6.2520952224731445
    3. '1' → logprob: -9.002095222473145
    4. '11' → logprob: -11.502095222473145
    5. ' ' → logprob: -11.627095222473145
    6. '5' → logprob: -12.314595222473145
    7. '```' → logprob: -12.939595222473145
    8. ''' → logprob: -13.127095222473145
    9. '-' → logprob: -13.252095222473145
    10. '   ' → logprob: -13.564595222473145

Token 92: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7255068421363831
    2. '
' → logprob: -0.8505068421363831
    3. ' if' → logprob: -3.4755067825317383
    4. '    
' → logprob: -4.475506782531738
    5. ' 
' → logprob: -4.600506782531738
    6. ' ' → logprob: -4.725506782531738
    7. '  
' → logprob: -4.850506782531738
    8. '<|end|>' → logprob: -4.850506782531738
    9. 'if' → logprob: -4.975506782531738
    10. '  ' → logprob: -7.100506782531738

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5777484178543091
    2. '
' → logprob: -0.9527484178543091
    3. ' if' → logprob: -3.8277482986450195
    4. '<|end|>' → logprob: -4.5777482986450195
    5. '    
' → logprob: -4.9527482986450195
    6. ' 
' → logprob: -5.3277482986450195
    7. '  
' → logprob: -5.9527482986450195
    8. ' ' → logprob: -6.0777482986450195
    9. 'if' → logprob: -7.0777482986450195
    10. '```' → logprob: -7.2027482986450195

Token 94: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1715478003025055
    2. '   ' → logprob: -2.0465478897094727
    3. 'if' → logprob: -4.171547889709473
    4. ' 
' → logprob: -5.421547889709473
    5. '    
' → logprob: -6.421547889709473
    6. ' ' → logprob: -6.546547889709473
    7. '
' → logprob: -6.921547889709473
    8. '    ' → logprob: -7.046547889709473
    9. ' while' → logprob: -7.296547889709473
    10. '```' → logprob: -7.671547889709473

Token 95: ' essayer' (ID: 92713)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09284250438213348
    2. 'if' → logprob: -2.8428425788879395
    3. ' while' → logprob: -4.5928425788879395
    4. ' num' → logprob: -5.3428425788879395
    5. '   ' → logprob: -6.3428425788879395
    6. ' #' → logprob: -6.7178425788879395
    7. ' for' → logprob: -6.8428425788879395
    8. ' result' → logprob: -6.8428425788879395
    9. ' score' → logprob: -6.9678425788879395
    10. ' ac' → logprob: -7.3428425788879395

Token 96: ' avec' (ID: 3937)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019440922886133194
    2. '<|end|>' → logprob: -4.5194411277771
    3. ':
' → logprob: -5.2694411277771
    4. ' :' → logprob: -7.3944411277771
    5. ' ' → logprob: -7.3944411277771
    6. 's' → logprob: -7.5194411277771
    7. 'if' → logprob: -8.019440650939941
    8. ' if' → logprob: -8.144440650939941
    9. '
' → logprob: -9.144440650939941
    10. '   ' → logprob: -9.269440650939941

Token 97: ' les' (ID: 1341)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.3179599642753601
    2. ' num' → logprob: -2.317960023880005
    3. '1' → logprob: -3.317960023880005
    4. ' ' → logprob: -3.567960023880005
    5. 'total' → logprob: -4.192959785461426
    6. 'aces' → logprob: -4.442959785461426
    7. 'for' → logprob: -4.567959785461426
    8. 'if' → logprob: -4.942959785461426
    9. '10' → logprob: -5.192959785461426
    10. '2' → logprob: -5.317959785461426

Token 98: ' uns' (ID: 3975)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6480330228805542
    2. ' num' → logprob: -1.8980330228805542
    3. 'As' → logprob: -2.2730331420898438
    4. 'aces' → logprob: -2.5230331420898438
    5. ' ' → logprob: -2.6480331420898438
    6. 'as' → logprob: -2.6480331420898438
    7. ' as' → logprob: -2.7730331420898438
    8. ' As' → logprob: -3.2730331420898438
    9. 'A' → logprob: -3.3980331420898438
    10. 'num' → logprob: -3.3980331420898438

Token 99: ' compt' (ID: 39238)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.945020318031311
    2. '<|end|>' → logprob: -1.445020318031311
    3. '   ' → logprob: -2.5700201988220215
    4. ' if' → logprob: -2.5700201988220215
    5. ' 
' → logprob: -2.6950201988220215
    6. '    
' → logprob: -2.8200201988220215
    7. ' for' → logprob: -3.4450201988220215
    8. 's' → logprob: -4.6950201988220215
    9. ' ' → logprob: -4.8200201988220215
    10. ',' → logprob: -5.0700201988220215

Token 100: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.022145962342619896
    2. 'es' → logprob: -4.522145748138428
    3. 'é' → logprob: -4.772145748138428
    4. 'er' → logprob: -6.272145748138428
    5. 'ant' → logprob: -8.147146224975586
    6. 'ed' → logprob: -8.772146224975586
    7. 's' → logprob: -9.772146224975586
    8. 'e' → logprob: -9.897146224975586
    9. 'ées' → logprob: -10.522146224975586
    10. 'u' → logprob: -11.272146224975586

Token 101: ' comme' (ID: 7971)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9021738171577454
    2. ' if' → logprob: -1.4021737575531006
    3. '   ' → logprob: -1.9021737575531006
    4. 'for' → logprob: -3.1521737575531006
    5. ',' → logprob: -3.4021737575531006
    6. ' ' → logprob: -3.5271737575531006
    7. 'if' → logprob: -4.02717399597168
    8. ':' → logprob: -4.40217399597168
    9. '    ' → logprob: -4.77717399597168
    10. ' total' → logprob: -5.02717399597168

Token 102: ' ' (ID: 220)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.002620370127260685
    2. '1' → logprob: -6.002620220184326
    3. '0' → logprob: -9.752620697021484
    4. '[' → logprob: -10.377620697021484
    5. ' ' → logprob: -10.502620697021484
    6. 'ele' → logprob: -11.002620697021484
    7. '10' → logprob: -12.252620697021484
    8. '   ' → logprob: -13.127620697021484
    9. '7' → logprob: -14.127620697021484
    10. '(' → logprob: -14.377620697021484

Token 103: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.0019360085716471076
    2. '1' → logprob: -6.251935958862305
    3. 'ele' → logprob: -12.876935958862305
    4. '0' → logprob: -13.126935958862305
    5. '10' → logprob: -14.126935958862305
    6. '[' → logprob: -14.626935958862305
    7. ' ' → logprob: -15.251935958862305
    8. 'un' → logprob: -15.501935958862305
    9. ' onze' → logprob: -15.501935958862305
    10. '{' → logprob: -15.876935958862305

Token 104: ' quand' (ID: 18026)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5115199089050293
    2. '   ' → logprob: -1.0115199089050293
    3. ' for' → logprob: -4.011519908905029
    4. 'if' → logprob: -4.761519908905029
    5. '    ' → logprob: -5.386519908905029
    6. ' while' → logprob: -6.261519908905029
    7. '    
' → logprob: -7.511519908905029
    8. ' 
' → logprob: -7.636519908905029
    9. '
' → logprob: -7.761519908905029
    10. 'for' → logprob: -7.761519908905029

Token 105: ' possible' (ID: 4149)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.1705201119184494
    2. 'num' → logprob: -1.9205200672149658
    3. ' possible' → logprob: -5.295520305633545
    4. ' total' → logprob: -5.795520305633545
    5. 'possible' → logprob: -7.545520305633545
    6. ' il' → logprob: -7.795520305633545
    7. ' ils' → logprob: -8.045519828796387
    8. 'total' → logprob: -8.295519828796387
    9. '	num' → logprob: -8.795519828796387
    10. '(num' → logprob: -8.920519828796387

Token 106: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.708437979221344
    2. '   ' → logprob: -0.833437979221344
    3. ' while' → logprob: -3.458437919616699
    4. ' for' → logprob: -3.708437919616699
    5. 'if' → logprob: -4.583437919616699
    6. '    ' → logprob: -5.708437919616699
    7. 'while' → logprob: -6.583437919616699
    8. ' i' → logprob: -7.333437919616699
    9. 'for' → logprob: -7.583437919616699
    10. '    
' → logprob: -8.5834379196167

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8430952429771423
    2. ' while' → logprob: -0.8430952429771423
    3. ' for' → logprob: -2.468095302581787
    4. ' if' → logprob: -3.718095302581787
    5. 'while' → logprob: -3.843095302581787
    6. 'for' → logprob: -5.843095302581787
    7. '
' → logprob: -5.843095302581787
    8. 'if' → logprob: -6.468095302581787
    9. '    
' → logprob: -7.593095302581787
    10. '    ' → logprob: -8.093094825744629

Token 108: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3028019368648529
    2. ' while' → logprob: -1.8028019666671753
    3. 'for' (adapté à ' for') → logprob: -3.3028018474578857
    4. ' if' → logprob: -3.8028018474578857
    5. '   ' → logprob: -3.9278018474578857
    6. 'while' → logprob: -4.302802085876465
    7. 'if' → logprob: -6.302802085876465
    8. ' i' → logprob: -7.302802085876465
    9. '    
' → logprob: -8.302802085876465
    10. '    ' → logprob: -8.552802085876465

Token 109: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.3998068869113922
    2. '_' → logprob: -1.2748068571090698
    3. ' i' → logprob: -3.0248069763183594
    4. 'i' → logprob: -6.899806976318359
    5. '_i' → logprob: -7.649806976318359
    6. ' ' → logprob: -11.77480697631836
    7. '	i' → logprob: -12.89980697631836
    8. ' ' → logprob: -14.39980697631836
    9. 's' → logprob: -14.52480697631836
    10. '   ' → logprob: -15.14980697631836

Token 110: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00035214703530073166
    2. 'in' → logprob: -8.250351905822754
    3. ' ' → logprob: -9.375351905822754
    4. ' i' → logprob: -13.250351905822754
    5. 'range' → logprob: -13.625351905822754
    6. ' _' → logprob: -13.875351905822754
    7. '  ' → logprob: -13.875351905822754
    8. '   ' → logprob: -14.875351905822754
    9. ' range' → logprob: -14.875351905822754
    10. '_' → logprob: -15.375351905822754

Token 111: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2519741952419281
    2. 'range' → logprob: -1.5019742250442505
    3. ' ' → logprob: -10.751974105834961
    4. 'rang' → logprob: -12.126974105834961
    5. '(range' → logprob: -12.626974105834961
    6. '	range' → logprob: -12.626974105834961
    7. ' xrange' → logprob: -13.126974105834961
    8. 'ange' → logprob: -13.501974105834961
    9. '  ' → logprob: -13.626974105834961
    10. '   ' → logprob: -13.626974105834961

Token 112: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.007231759373098612
    2. ' num' → logprob: -5.007231712341309
    3. '(' → logprob: -8.382231712341309
    4. ' (' → logprob: -8.632231712341309
    5. 'num' → logprob: -9.132231712341309
    6. ',num' → logprob: -15.007231712341309
    7. '	num' → logprob: -15.257231712341309
    8. '<num' → logprob: -15.882231712341309
    9. '(n' → logprob: -16.007232666015625
    10. ' ' → logprob: -16.382232666015625

Token 113: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.9361264946837764e-07
    2. ' _' → logprob: -17.25
    3. '_one' → logprob: -17.75
    4. '__' → logprob: -18.0
    5. '_
' → logprob: -18.75
    6. 's' → logprob: -19.125
    7. '```' → logprob: -19.125
    8. '_once' → logprob: -19.375
    9. '_)' → logprob: -19.5
    10. '1' → logprob: -19.625

Token 114: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -8.895480277715251e-06
    2. '1' → logprob: -12.625008583068848
    3. ' ones' → logprob: -12.750008583068848
    4. '_' → logprob: -13.000008583068848
    5. 'one' → logprob: -15.750008583068848
    6. '.ones' → logprob: -16.375009536743164
    7. 'ines' → logprob: -17.250009536743164
    8. 'oes' → logprob: -17.875009536743164
    9. 's' → logprob: -18.125009536743164
    10. '```' → logprob: -18.125009536743164

Token 115: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005877026706002653
    2. '):
' → logprob: -7.6255879402160645
    3. ' ):' → logprob: -9.250587463378906
    4. ':' → logprob: -13.250587463378906
    5. '}:' → logprob: -14.250587463378906
    6. ']:' → logprob: -14.750587463378906
    7. '):
' → logprob: -14.875587463378906
    8. ' ):
' → logprob: -16.000587463378906
    9. '   ' → logprob: -16.250587463378906
    10. '>:' → logprob: -16.625587463378906

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6702849268913269
    2. '   ' → logprob: -1.1702849864959717
    3. '<|end|>' → logprob: -2.4202849864959717
    4. ':' → logprob: -3.1702849864959717
    5. ' if' → logprob: -4.295284748077393
    6. ' ' → logprob: -4.795284748077393
    7. '    ' → logprob: -4.920284748077393
    8. ':
' → logprob: -5.295284748077393
    9. ' :' → logprob: -5.420284748077393
    10. ' :
' → logprob: -6.045284748077393

Token 117: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0750032290816307
    2. '   ' → logprob: -3.575003147125244
    3. 'if' (adapté à ' if') → logprob: -3.950003147125244
    4. '    ' → logprob: -3.950003147125244
    5. '       ' → logprob: -5.825003147125244
    6. '    
' → logprob: -7.450003147125244
    7. ' 
' → logprob: -7.575003147125244
    8. '<|end|>' → logprob: -7.700003147125244
    9. '
' → logprob: -7.825003147125244
    10. ' ' → logprob: -8.325003623962402

Token 118: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.026305755600333214
    2. 'total' → logprob: -3.651305675506592
    3. '   ' → logprob: -13.15130615234375
    4. ' ' → logprob: -13.52630615234375
    5. '(total' → logprob: -13.52630615234375
    6. '	total' → logprob: -14.52630615234375
    7. ' tota' → logprob: -16.65130615234375
    8. 'Total' → logprob: -16.65130615234375
    9. '_total' → logprob: -16.77630615234375
    10. '$total' → logprob: -16.90130615234375

Token 119: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.19206754863262177
    2. ' +' → logprob: -2.0670676231384277
    3. '<=' → logprob: -3.0670676231384277
    4. ' <=' → logprob: -6.442067623138428
    5. '+=' → logprob: -10.31706714630127
    6. '＋' → logprob: -12.81706714630127
    7. ' +=' → logprob: -13.44206714630127
    8. 'plus' → logprob: -13.69206714630127
    9. ' plus' → logprob: -13.81706714630127
    10. ' ' → logprob: -13.94206714630127

Token 120: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00029613598599098623
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -17.375295639038086
    4. '1' → logprob: -17.500295639038086
    5. '```' → logprob: -18.375295639038086
    6. '  ' → logprob: -19.375295639038086
    7. ' ' → logprob: -19.375295639038086
    8. '
' → logprob: -19.625295639038086
    9. '۱۰' → logprob: -19.750295639038086
    10. '１０' → logprob: -19.875295639038086

Token 121: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.75
    3. '
' → logprob: -18.375
    4. '

' → logprob: -19.125
    5. '１０' → logprob: -19.375
    6. '```' → logprob: -19.375
    7. '   ' → logprob: -19.875
    8. '۱۰' → logprob: -20.75
    9. '1' → logprob: -20.875
    10. '१०' → logprob: -21.125

Token 122: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.020548781380057335
    2. '<=' → logprob: -3.8955488204956055
    3. ' ' → logprob: -12.770548820495605
    4. ' <' → logprob: -14.020548820495605
    5. '<' → logprob: -14.145548820495605
    6. '<|end|>' → logprob: -14.270548820495605
    7. ')<=' → logprob: -14.520548820495605
    8. 'le' → logprob: -14.520548820495605
    9. '0' → logprob: -15.520548820495605
    10. ' ' → logprob: -15.895548820495605

Token 123: ' ' (ID: 220)
  Prédit: '21'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -0.0024816039949655533
    2. ' ' → logprob: -6.002481460571289
    3. '2' → logprob: -12.752481460571289
    4. '20' → logprob: -13.127481460571289
    5. '31' → logprob: -14.377481460571289
    6. '   ' → logprob: -16.25248146057129
    7. '11' → logprob: -16.75248146057129
    8. '210' → logprob: -16.81498146057129
    9. '  ' → logprob: -16.93998146057129
    10. '```' → logprob: -17.25248146057129

Token 124: '21' (ID: 2040)
  Prédit: '21'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -0.00010020548506872728
    2. ' ' → logprob: -9.625100135803223
    3. '2' → logprob: -10.375100135803223
    4. '31' → logprob: -13.500100135803223
    5. '20' → logprob: -14.375100135803223
    6. '1' → logprob: -15.375100135803223
    7. '211' → logprob: -16.12510108947754
    8. '  ' → logprob: -16.50010108947754
    9. '210' → logprob: -16.56260108947754
    10. '```' → logprob: -16.62510108947754

Token 125: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12729522585868835
    2. ':
' → logprob: -2.1272952556610107
    3. ' :' → logprob: -8.62729549407959
    4. ' :
' → logprob: -9.12729549407959
    5. '       ' → logprob: -9.87729549407959
    6. '           ' → logprob: -11.37729549407959
    7. '   ' → logprob: -11.87729549407959
    8. '):
' → logprob: -12.75229549407959
    9. ':
' → logprob: -12.87729549407959
    10. '):' → logprob: -13.00229549407959

Token 126: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013388125225901604
    2. '       ' → logprob: -7.376338958740234
    3. ':
' → logprob: -7.876338958740234
    4. '   ' → logprob: -9.001338958740234
    5. ':' → logprob: -9.626338958740234
    6. ' total' → logprob: -10.376338958740234
    7. '            
' → logprob: -10.501338958740234
    8. '               ' → logprob: -10.751338958740234
    9. '	       ' → logprob: -11.376338958740234
    10. 'total' → logprob: -11.751338958740234

Token 127: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.05290443077683449
    2. 'total' (adapté à ' total') → logprob: -3.0529043674468994
    3. '       ' → logprob: -6.3029046058654785
    4. '           ' → logprob: -6.6779046058654785
    5. '               ' → logprob: -7.5529046058654785
    6. ' ' → logprob: -8.55290412902832
    7. '   ' → logprob: -8.80290412902832
    8. '	total' → logprob: -9.05290412902832
    9. ' ' → logprob: -9.17790412902832
    10. ' 
' → logprob: -10.30290412902832

Token 128: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.006720229052007198
    2. '+=' → logprob: -5.006720066070557
    3. ' ' → logprob: -13.506720542907715
    4. '+' → logprob: -13.631720542907715
    5. ' +' → logprob: -13.631720542907715
    6. ' =' → logprob: -14.006720542907715
    7. '=' → logprob: -15.631720542907715
    8. '    ' → logprob: -17.1317195892334
    9. ']+=' → logprob: -17.5067195892334
    10. '   ' → logprob: -17.7567195892334

Token 129: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0009119403548538685
    2. ' ' → logprob: -7.000911712646484
    3. '1' → logprob: -14.625911712646484
    4. '１０' → logprob: -18.125911712646484
    5. '   ' → logprob: -18.375911712646484
    6. '۱۰' → logprob: -18.750911712646484
    7. '```' → logprob: -19.000911712646484
    8. '  ' → logprob: -19.500911712646484
    9. ' ' → logprob: -19.688411712646484
    10. '
' → logprob: -20.938411712646484

Token 130: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.625004768371582
    3. '1' → logprob: -13.750004768371582
    4. '۱۰' → logprob: -17.625003814697266
    5. '１０' → logprob: -17.750003814697266
    6. '0' → logprob: -18.375003814697266
    7. '```' → logprob: -18.750003814697266
    8. '१०' → logprob: -19.875003814697266
    9. '
' → logprob: -20.125003814697266
    10. '১০' → logprob: -20.250003814697266

Token 131: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5787051320075989
    2. '       ' → logprob: -1.578705072402954
    3. 'print' → logprob: -1.578705072402954
    4. 'else' → logprob: -4.078705310821533
    5. ' else' → logprob: -5.078705310821533
    6. ' print' → logprob: -6.328705310821533
    7. 'while' → logprob: -6.953705310821533
    8. 'continue' → logprob: -8.703704833984375
    9. '    ' → logprob: -8.828704833984375
    10. '<|end|>' → logprob: -8.953704833984375

Token 132: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04383528232574463
    2. '   ' → logprob: -3.168835163116455
    3. '       ' → logprob: -7.793835163116455
    4. ' print' → logprob: -8.293835639953613
    5. 'while' → logprob: -9.543835639953613
    6. 'else' → logprob: -9.668835639953613
    7. 'continue' → logprob: -11.043835639953613
    8. 'if' → logprob: -12.293835639953613
    9. '```' → logprob: -12.543835639953613
    10. 'for' → logprob: -12.918835639953613

Token 133: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05672445148229599
    2. '   ' → logprob: -3.4317245483398438
    3. ' print' → logprob: -3.8067245483398438
    4. ' if' → logprob: -8.306724548339844
    5. 'if' (adapté à ' if') → logprob: -8.681724548339844
    6. 'else' → logprob: -9.306724548339844
    7. ' else' → logprob: -10.306724548339844
    8. '       ' → logprob: -10.556724548339844
    9. ' ' → logprob: -12.181724548339844
    10. '```' → logprob: -12.306724548339844

Token 134: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.01252284087240696
    2. 'total' → logprob: -4.3875226974487305
    3. ' ' → logprob: -11.63752269744873
    4. '(total' → logprob: -12.76252269744873
    5. '	total' → logprob: -14.26252269744873
    6. ' tota' → logprob: -15.26252269744873
    7. 'Total' → logprob: -16.387523651123047
    8. ' ' → logprob: -16.762523651123047
    9. ' tot' → logprob: -16.762523651123047
    10. '  ' → logprob: -17.137523651123047

Token 135: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.9481648206710815
    2. '>' → logprob: -1.0731648206710815
    3. ' <=' → logprob: -2.073164939880371
    4. '<=' → logprob: -2.198164939880371
    5. '<' → logprob: -4.073164939880371
    6. ' <' → logprob: -4.323164939880371
    7. '==' → logprob: -6.073164939880371
    8. ' ==' → logprob: -6.823164939880371
    9. ' ' → logprob: -9.948164939880371
    10. '>=' → logprob: -10.198164939880371

Token 136: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25196245312690735
    2. '21' → logprob: -1.501962423324585
    3. '20' → logprob: -10.501962661743164
    4. '2' → logprob: -13.501962661743164
    5. '9' → logprob: -13.876962661743164
    6. '19' → logprob: -14.501962661743164
    7. '1' → logprob: -14.626962661743164
    8. '22' → logprob: -14.751962661743164
    9. '  ' → logprob: -15.439462661743164
    10. '0' → logprob: -15.439462661743164

Token 137: '21' (ID: 2040)
  Prédit: '21'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -0.014178323559463024
    2. ' ' → logprob: -4.264178276062012
    3. '2' → logprob: -11.514178276062012
    4. '20' → logprob: -13.514178276062012
    5. '1' → logprob: -13.889178276062012
    6. '```' → logprob: -14.764178276062012
    7. '	' → logprob: -14.951678276062012
    8. '   ' → logprob: -15.264178276062012
    9. '  ' → logprob: -15.514178276062012
    10. '9' → logprob: -15.576678276062012

Token 138: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2525736093521118
    2. ':
' → logprob: -1.5025736093521118
    3. '   ' → logprob: -8.12757396697998
    4. '       ' → logprob: -8.37757396697998
    5. ':
' → logprob: -10.25257396697998
    6. '):
' → logprob: -11.12757396697998
    7. ':

' → logprob: -11.12757396697998
    8. ' and' → logprob: -11.50257396697998
    9. ' :
' → logprob: -11.50257396697998
    10. ' :' → logprob: -12.00257396697998

Token 139: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1328904777765274
    2. 'print' → logprob: -2.882890462875366
    3. '       ' → logprob: -3.257890462875366
    4. ' print' → logprob: -3.507890462875366
    5. '	print' → logprob: -10.882890701293945
    6. '   ' → logprob: -12.257890701293945
    7. ' ' → logprob: -12.507890701293945
    8. '```' → logprob: -13.820390701293945
    9. ':' → logprob: -13.945390701293945
    10. '    ' → logprob: -14.070390701293945

Token 140: ' total' (ID: 3609)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06765799969434738
    2. ' print' → logprob: -2.817657947540283
    3. '   ' → logprob: -5.192657947540283
    4. '       ' → logprob: -9.817658424377441
    5. '	print' → logprob: -11.067658424377441
    6. ' ' → logprob: -11.317658424377441
    7. '  ' → logprob: -11.942658424377441
    8. 'prin' → logprob: -12.380158424377441
    9. '```' → logprob: -12.442658424377441
    10. 'Print' → logprob: -12.880158424377441

Token 141: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18443602323532104
    2. 'print' → logprob: -2.434436082839966
    3. ',' → logprob: -3.059436082839966
    4. ' =' → logprob: -3.559436082839966
    5. ' print' → logprob: -5.934435844421387
    6. '+=' → logprob: -6.934435844421387
    7. ' +=' → logprob: -7.184435844421387
    8. ')' → logprob: -8.934435844421387
    9. ' ,' → logprob: -8.934435844421387
    10. ' ' → logprob: -9.059435844421387

Token 142: ' ' (ID: 220)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.9134270548820496
    2. '0' → logprob: -1.0384271144866943
    3. ''' → logprob: -1.5384271144866943
    4. ' ' → logprob: -4.038426876068115
    5. ''b' → logprob: -5.538426876068115
    6. '"B' → logprob: -5.788426876068115
    7. ' "' → logprob: -6.163426876068115
    8. ' '' → logprob: -6.913426876068115
    9. 'b' → logprob: -7.288426876068115
    10. '21' → logprob: -9.038427352905273

Token 143: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5208860039710999
    2. '"' → logprob: -1.520885944366455
    3. ''' → logprob: -1.770885944366455
    4. ''b' → logprob: -5.020885944366455
    5. '"B' → logprob: -5.770885944366455
    6. 'b' → logprob: -6.270885944366455
    7. ' ' → logprob: -6.520885944366455
    8. '-' → logprob: -7.145885944366455
    9. ' "' → logprob: -7.645885944366455
    10. '22' → logprob: -8.645886421203613

Token 144: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033317103516310453
    2. 'print' → logprob: -5.753331661224365
    3. '    
' → logprob: -9.628332138061523
    4. '
' → logprob: -9.628332138061523
    5. ' print' → logprob: -11.253332138061523
    6. '<|end|>' → logprob: -12.503332138061523
    7. '```' → logprob: -12.878332138061523
    8. '        
' → logprob: -13.878332138061523
    9. '       ' → logprob: -14.503332138061523
    10. '  
' → logprob: -15.003332138061523

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028117671608924866
    2. 'print' → logprob: -5.877811908721924
    3. ' print' → logprob: -12.752811431884766
    4. '    
' → logprob: -13.752811431884766
    5. '```' → logprob: -13.752811431884766
    6. '<|end|>' → logprob: -14.377811431884766
    7. '       ' → logprob: -14.752811431884766
    8. 'else' → logprob: -14.877811431884766
    9. 'elif' → logprob: -15.752811431884766
    10. '
' → logprob: -16.877811431884766

Token 146: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.027234358713030815
    2. '   ' → logprob: -3.7772343158721924
    3. ' print' → logprob: -5.5272345542907715
    4. '	print' → logprob: -14.027234077453613
    5. '```' → logprob: -14.027234077453613
    6. 'if' → logprob: -14.277234077453613
    7. '    
' → logprob: -14.902234077453613
    8. 'for' → logprob: -15.152234077453613
    9. '#print' → logprob: -15.527234077453613
    10. ' ' → logprob: -16.15223503112793

Token 147: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.0382382795214653
    2. '(' → logprob: -3.288238286972046
    3. '('' → logprob: -8.913238525390625
    4. '(f' → logprob: -10.163238525390625
    5. '()' → logprob: -11.288238525390625
    6. 'total' → logprob: -12.288238525390625
    7. ' (' → logprob: -12.413238525390625
    8. '((' → logprob: -14.288238525390625
    9. '(t' → logprob: -14.663238525390625
    10. '("("' → logprob: -15.038238525390625

Token 148: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.125000953674316
    3. ')
' → logprob: -16.375001907348633
    4. ')`' → logprob: -16.375001907348633
    5. '))' → logprob: -17.125001907348633
    6. '`)' → logprob: -18.500001907348633
    7. '')' → logprob: -19.250001907348633
    8. ')}' → logprob: -20.750001907348633
    9. '),' → logprob: -21.125001907348633
    10. '}' → logprob: -21.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 146
Tokens correctement prédits (1ère position, stricte): 62
Tokens correctement prédits (1ère position, avec adaptation): 66
Tokens correctement prédits (top 10): 123
Précision stricte (1ère position): 42.47%
Précision adaptée (1ère position): 45.21%
Précision (top 10): 84.25%
================================================================================
