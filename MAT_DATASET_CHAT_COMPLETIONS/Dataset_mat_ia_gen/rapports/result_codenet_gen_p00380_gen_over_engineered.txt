================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:13:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class SequenceState:
    def __init__(self, elements):
        self.elements = elements
        self.n = len(elements)
        self.inversion_tracker = InversionTracker(elements)

    def swap(self, i, j):
        # i and j are 1-based indices
        # Update inversions before swap
        self.inversion_tracker.update_before_swap(i - 1, j - 1)
        # Perform swap in elements
        self.elements[i - 1], self.elements[j - 1] = self.elements[j - 1], self.elements[i - 1]
        # Update inversions after swap
        self.inversion_tracker.update_after_swap(i - 1, j - 1)

    def is_sorted(self):
        return self.inversion_tracker.total_inversions == 0


class InversionTracker:
    def __init__(self, elements):
        self.elements = elements
        self.n = len(elements)
        # We track the number of adjacent inversions in the sequence
        self.adj_inversions = self._calculate_adjacent_inversions()
        self.total_inversions = self.adj_inversions

    def _calculate_adjacent_inversions(self):
        count = 0
        for i in range(self.n - 1):
            if self.elements[i] > self.elements[i + 1]:
                count += 1
        return count

    def _check_pair(self, i):
        # Check adjacent pair (i, i+1) if valid
        if 0 <= i < self.n - 1:
            return 1 if self.elements[i] > self.elements[i + 1] else 0
        return 0

    def update_before_swap(self, i, j):
        # remove inversions for all pairs that could be affected by elements i and j before swap
        # affected indices are neighbors of i and j, plus i and j themselves
        affected = set()
        for idx in (i - 1, i, j - 1, j):
            if 0 <= idx < self.n - 1:
                affected.add(idx)
        for idx in affected:
            self.total_inversions -= self._check_pair(idx)

    def update_after_swap(self, i, j):
        # after the swap, add back inversion counts for affected pairs
        affected = set()
        for idx in (i - 1, i, j - 1, j):
            if 0 <= idx < self.n - 1:
                affected.add(idx)
        for idx in affected:
            self.total_inversions += self._check_pair(idx)


class BozosortSimulation:
    def __init__(self, sequence, commands):
        self.state = SequenceState(sequence)
        self.commands = commands

    def run(self):
        if self.state.is_sorted():
            return 0
        for t, (x, y) in enumerate(self.commands, 1):
            self.state.swap(x, y)
            if self.state.is_sorted():
                return t
        return -1


class InputParser:
    def __init__(self):
        self.N = 0
        self.sequence = []
        self.Q = 0
        self.commands = []

    def parse(self):
        import sys
        reader = sys.stdin
        self.N = int(reader.readline())
        if self.N > 0:
            self.sequence = list(map(int, reader.readline().split()))
        else:
            self.sequence = []
        self.Q = int(reader.readline())
        self.commands = [tuple(map(int, reader.readline().split())) for _ in range(self.Q)]


def main():
    parser = InputParser()
    parser.parse()
    simulation = BozosortSimulation(parser.sequence, parser.commands)
    result = simulation.run()
    print(result)


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Sequence' (ID: 57144)
  → Token d'amorce (pas de prédiction)

Token 2: 'State' (ID: 1881)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18516050279140472
    2. '(' → logprob: -1.810160517692566
    3. '{' → logprob: -5.4351606369018555
    4. '.' → logprob: -7.1851606369018555
    5. '(:' → logprob: -8.560160636901855
    6. ' :' → logprob: -10.185160636901855
    7. '[' → logprob: -11.185160636901855
    8. '():' → logprob: -11.560160636901855
    9. '(
' → logprob: -12.560160636901855
    10. '_' → logprob: -12.810160636901855

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007315307855606079
    2. '```' → logprob: -5.507315158843994
    3. '(' → logprob: -6.507315158843994
    4. ':
' → logprob: -6.882315158843994
    5. '   ' → logprob: -7.632315158843994
    6. '(
' → logprob: -9.632315635681152
    7. '():' → logprob: -9.757315635681152
    8. '.' → logprob: -10.507315635681152
    9. '``' → logprob: -10.632315635681152
    10. ''' → logprob: -11.757315635681152

Token 5: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7293896079063416
    2. '_' → logprob: -1.6043896675109863
    3. ':' → logprob: -2.3543896675109863
    4. '(' → logprob: -2.6043896675109863
    5. '```' → logprob: -2.9793896675109863
    6. ' ' → logprob: -3.1043896675109863
    7. '    ' → logprob: -4.229389667510986
    8. '\' → logprob: -4.979389667510986
    9. '[' → logprob: -5.104389667510986
    10. '.' → logprob: -5.354389667510986

Token 6: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2609981894493103
    2. '__' → logprob: -1.760998249053955
    3. ' ' → logprob: -3.010998249053955
    4. ' init' → logprob: -5.635998249053955
    5. ' ' → logprob: -5.635998249053955
    6. ' def' → logprob: -7.635998249053955
    7. '_' → logprob: -8.885997772216797
    8. '  ' → logprob: -9.260997772216797
    9. '_init' → logprob: -9.510997772216797
    10. '  ' → logprob: -9.760997772216797

Token 7: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -9.088346359931165e-07
    2. ' init' → logprob: -14.000000953674316
    3. '_init' → logprob: -16.75
    4. 'ini' → logprob: -18.25
    5. 'in' → logprob: -20.5
    6. '	init' → logprob: -20.625
    7. 'i' → logprob: -21.375
    8. 'int' → logprob: -21.625
    9. 'new' → logprob: -22.5
    10. '_' → logprob: -22.5

Token 8: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.4767224192619324
    2. '(' → logprob: -1.2267224788665771
    3. '__' → logprob: -2.601722478866577
    4. '__(
' → logprob: -5.476722240447998
    5. '_' → logprob: -5.601722240447998
    6. ' (' → logprob: -6.476722240447998
    7. '(self' → logprob: -7.226722240447998
    8. '__((' → logprob: -7.726722240447998
    9. '_(' → logprob: -7.726722240447998
    10. '```' → logprob: -8.601722717285156

Token 9: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010359067237004638
    2. ' self' → logprob: -6.876035690307617
    3. ')' → logprob: -13.251035690307617
    4. '(self' → logprob: -14.001035690307617
    5. '       ' → logprob: -16.126035690307617
    6. '   ' → logprob: -17.126035690307617
    7. '	self' → logprob: -17.251035690307617
    8. ' ' → logprob: -17.376035690307617
    9. '_self' → logprob: -17.501035690307617
    10. 'sequence' → logprob: -17.626035690307617

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17348626255989075
    2. 'self' → logprob: -2.4234862327575684
    3. ')' → logprob: -3.7984862327575684
    4. '_' → logprob: -3.9234862327575684
    5. ' ,' → logprob: -4.673486232757568
    6. ' self' → logprob: -5.673486232757568
    7. '<|end|>' → logprob: -5.798486232757568
    8. '):' → logprob: -6.048486232757568
    9. '_self' → logprob: -6.048486232757568
    10. ' ' → logprob: -6.423486232757568

Token 11: ' elements' (ID: 8632)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.22215546667575836
    2. 'self' → logprob: -1.7221554517745972
    3. ' sequence' → logprob: -4.222155570983887
    4. ' state' → logprob: -6.472155570983887
    5. ' initial' → logprob: -6.722155570983887
    6. 'sequence' → logprob: -7.222155570983887
    7. 'state' → logprob: -7.972155570983887
    8. ' data' → logprob: -8.222155570983887
    9. ' current' → logprob: -8.222155570983887
    10. '       ' → logprob: -8.347155570983887

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011826719157397747
    2. ':' → logprob: -5.511826515197754
    3. ',' → logprob: -5.636826515197754
    4. '=' → logprob: -6.261826515197754
    5. '):
' → logprob: -6.511826515197754
    6. ')' → logprob: -7.636826515197754
    7. '   ' → logprob: -9.136826515197754
    8. '[' → logprob: -10.511826515197754
    9. '<|end|>' → logprob: -10.636826515197754
    10. '.' → logprob: -10.886826515197754

Token 13: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029172444716095924
    2. ':' → logprob: -4.279172420501709
    3. '   ' → logprob: -5.779172420501709
    4. '(' → logprob: -6.154172420501709
    5. '    ' → logprob: -6.154172420501709
    6. 'self' → logprob: -6.529172420501709
    7. '.' → logprob: -6.779172420501709
    8. '```' → logprob: -7.279172420501709
    9. '        ' → logprob: -7.529172420501709
    10. '<|end|>' → logprob: -7.529172420501709

Token 14: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.49816739559173584
    2. ' self' → logprob: -0.9981673955917358
    3. '       ' → logprob: -3.7481675148010254
    4. ' ' → logprob: -9.373167037963867
    5. '        ' → logprob: -10.123167037963867
    6. ' ' → logprob: -10.873167037963867
    7. '           ' → logprob: -10.873167037963867
    8. '   ' → logprob: -10.998167037963867
    9. '	self' → logprob: -11.248167037963867
    10. '_self' → logprob: -11.373167037963867

Token 15: '.elements' (ID: 58318)
  Prédit: '.elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.elements' → logprob: -0.3137049973011017
    2. '.' → logprob: -1.3137049674987793
    3. 'elements' → logprob: -8.813705444335938
    4. ' .' → logprob: -9.063705444335938
    5. '._' → logprob: -9.813705444335938
    6. '.e' → logprob: -9.938705444335938
    7. ' elements' → logprob: -11.313705444335938
    8. 'self' → logprob: -11.313705444335938
    9. '.self' → logprob: -11.813705444335938
    10. '   ' → logprob: -11.938705444335938

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3202246129512787
    2. '=' → logprob: -1.320224642753601
    3. '<|end|>' → logprob: -5.195224761962891
    4. '.' → logprob: -7.195224761962891
    5. '<|end|>' → logprob: -8.94522476196289
    6. ')' → logprob: -9.19522476196289
    7. '=[]' → logprob: -9.57022476196289
    8. '[' → logprob: -9.57022476196289
    9. '   ' → logprob: -10.07022476196289
    10. '.append' → logprob: -10.32022476196289

Token 17: ' elements' (ID: 8632)
  Prédit: ' elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.1002136841416359
    2. 'elements' → logprob: -2.3502137660980225
    3. '(elements' → logprob: -12.725214004516602
    4. '[]' → logprob: -13.725214004516602
    5. ' []' → logprob: -13.850214004516602
    6. '.elements' → logprob: -14.100214004516602
    7. '_elements' → logprob: -14.475214004516602
    8. '[' → logprob: -14.975214004516602
    9. ' list' → logprob: -15.600214004516602
    10. 'list' → logprob: -16.4752140045166

Token 18: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.021905619651079178
    2. '[' → logprob: -4.896905422210693
    3. '<|end|>' → logprob: -5.021905422210693
    4. '.
' → logprob: -6.396905422210693
    5. '\' → logprob: -6.521905422210693
    6. '
' → logprob: -7.021905422210693
    7. '   ' → logprob: -7.021905422210693
    8. '[
' → logprob: -7.771905422210693
    9. ',' → logprob: -8.021905899047852
    10. '_' → logprob: -8.021905899047852

Token 19: '       ' (ID: 309)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04309133440256119
    2. '[' → logprob: -4.543091297149658
    3. '<|end|>' → logprob: -4.543091297149658
    4. '\' → logprob: -5.418091297149658
    5. '   ' → logprob: -5.543091297149658
    6. '_' → logprob: -5.668091297149658
    7. ':' → logprob: -6.043091297149658
    8. '\n' → logprob: -6.168091297149658
    9. '```' → logprob: -6.668091297149658
    10. '
' → logprob: -6.793091297149658

Token 20: ' self' (ID: 1051)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18558914959430695
    2. '<|end|>' → logprob: -2.560589075088501
    3. '   ' → logprob: -3.435589075088501
    4. '
' → logprob: -3.935589075088501
    5. '\' → logprob: -4.43558931350708
    6. 'def' → logprob: -5.06058931350708
    7. '\n' → logprob: -5.06058931350708
    8. '```' → logprob: -5.56058931350708
    9. ',' → logprob: -6.56058931350708
    10. ' ' → logprob: -6.56058931350708

Token 21: '.n' (ID: 1835)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005614238791167736
    2. '._' → logprob: -5.880614280700684
    3. '.current' → logprob: -7.005614280700684
    4. '.count' → logprob: -8.380614280700684
    5. '.is' → logprob: -8.755614280700684
    6. '_count' → logprob: -8.755614280700684
    7. '.states' → logprob: -8.880614280700684
    8. '_' → logprob: -9.005614280700684
    9. '_state' → logprob: -9.005614280700684
    10. ' .' → logprob: -9.380614280700684

Token 22: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03229481726884842
    2. 'um' → logprob: -3.907294750213623
    3. '_elements' → logprob: -5.032294750213623
    4. 'umber' → logprob: -6.157294750213623
    5. 'ext' → logprob: -6.282294750213623
    6. '_ext' → logprob: -8.032295227050781
    7. 'o' → logprob: -8.532295227050781
    8. 'a' → logprob: -8.782295227050781
    9. 'u' → logprob: -9.657295227050781
    10. ' =' → logprob: -9.657295227050781

Token 23: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.03804321587085724
    2. 'len' → logprob: -3.288043260574341
    3. '0' → logprob: -13.913043022155762
    4. ' ' → logprob: -15.038043022155762
    5. '(len' → logprob: -15.163043022155762
    6. '=len' → logprob: -15.163043022155762
    7. '	len' → logprob: -16.913043975830078
    8. '[len' → logprob: -17.038043975830078
    9. '   ' → logprob: -18.163043975830078
    10. ' None' → logprob: -19.038043975830078

Token 24: '(elements' (ID: 120313)
  Prédit: '(elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(elements' → logprob: -0.20177419483661652
    2. '(self' → logprob: -1.9517742395401
    3. '(' → logprob: -3.2017741203308105
    4. 'elements' → logprob: -11.951774597167969
    5. 'self' → logprob: -14.076774597167969
    6. '(
' → logprob: -14.326774597167969
    7. '(e' → logprob: -15.326774597167969
    8. '(s' → logprob: -16.07677459716797
    9. '(this' → logprob: -16.32677459716797
    10. ' elements' → logprob: -16.45177459716797

Token 25: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. '   ' → logprob: -14.000001907348633
    3. ' )' → logprob: -14.750001907348633
    4. ')
' → logprob: -15.125001907348633
    5. '       ' → logprob: -15.500001907348633
    6. '```' → logprob: -16.125001907348633
    7. '`)' → logprob: -16.500001907348633
    8. ')n' → logprob: -17.750001907348633
    9. '')' → logprob: -17.875001907348633
    10. ' ' → logprob: -18.125001907348633

Token 26: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28374338150024414
    2. '   ' → logprob: -2.408743381500244
    3. '<|end|>' → logprob: -2.533743381500244
    4. 'def' → logprob: -3.033743381500244
    5. '    
' → logprob: -5.283743381500244
    6. '\' → logprob: -5.533743381500244
    7. ' 
' → logprob: -5.658743381500244
    8. ' ' → logprob: -6.283743381500244
    9. '\n' → logprob: -6.283743381500244
    10. '       ' → logprob: -6.408743381500244

Token 28: '.in' (ID: 2250)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005552593618631363
    2. '.current' → logprob: -5.755552768707275
    3. '._' → logprob: -7.630552768707275
    4. '.is' → logprob: -7.630552768707275
    5. '.elements' → logprob: -8.380552291870117
    6. '.next' → logprob: -8.880552291870117
    7. '.count' → logprob: -9.255552291870117
    8. ' .' → logprob: -9.380552291870117
    9. '.initial' → logprob: -9.380552291870117
    10. '.max' → logprob: -9.505552291870117

Token 29: 'version' (ID: 8924)
  Prédit: 'dex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dex' → logprob: -0.0679808109998703
    2. 'd' → logprob: -3.1929807662963867
    3. 'it' → logprob: -4.192980766296387
    4. 'itial' → logprob: -6.317980766296387
    5. 'de' → logprob: -6.942980766296387
    6. '_' → logprob: -6.942980766296387
    7. 'ter' → logprob: -7.317980766296387
    8. 'put' → logprob: -7.317980766296387
    9. 'ternal' → logprob: -7.442980766296387
    10. 'verted' → logprob: -7.567980766296387

Token 30: '_tracker' (ID: 124388)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5893161296844482
    2. '_count' → logprob: -0.8393161296844482
    3. '_counts' → logprob: -4.589316368103027
    4. '_' → logprob: -6.089316368103027
    5. '_s' → logprob: -7.089316368103027
    6. ' s' → logprob: -12.589316368103027
    7. 'Count' → logprob: -12.839316368103027
    8. '_map' → logprob: -12.839316368103027
    9. '_positions' → logprob: -13.214316368103027
    10. '_indices' → logprob: -13.464316368103027

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01678018644452095
    2. '=' → logprob: -4.141780376434326
    3. '_' → logprob: -7.891780376434326
    4. 's' → logprob: -8.141779899597168
    5. '.' → logprob: -9.766779899597168
    6. ' ' → logprob: -11.516779899597168
    7. '  ' → logprob: -13.016779899597168
    8. '   ' → logprob: -13.016779899597168
    9. '_counts' → logprob: -13.891779899597168
    10. '_count' → logprob: -14.141779899597168

Token 32: ' In' (ID: 730)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3263610601425171
    2. ' set' → logprob: -1.951361060142517
    3. ' []' → logprob: -2.3263611793518066
    4. 'set' → logprob: -4.451361179351807
    5. ' {}' → logprob: -4.701361179351807
    6. '[' → logprob: -5.201361179351807
    7. '[]' → logprob: -5.451361179351807
    8. '0' → logprob: -5.701361179351807
    9. ' ' → logprob: -5.701361179351807
    10. ' defaultdict' → logprob: -7.701361179351807

Token 33: 'version' (ID: 8924)
  Prédit: 'version'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'version' → logprob: -0.010447641834616661
    2. 'sertion' → logprob: -5.0104475021362305
    3. 'v' → logprob: -6.5104475021362305
    4. 'versions' → logprob: -7.3854475021362305
    5. 'ver' → logprob: -8.13544750213623
    6. '[' → logprob: -8.26044750213623
    7. 't' → logprob: -8.26044750213623
    8. 'itial' → logprob: -8.76044750213623
    9. 'verse' → logprob: -9.13544750213623
    10. 'it' → logprob: -9.38544750213623

Token 34: 'Tracker' (ID: 30021)
  Prédit: 'Tracker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tracker' → logprob: -0.017203737050294876
    2. '_' → logprob: -4.3922038078308105
    3. '_tracker' → logprob: -5.6422038078308105
    4. 'Counter' → logprob: -6.8922038078308105
    5. 'Tracking' → logprob: -10.392203330993652
    6. 'Count' → logprob: -10.517203330993652
    7. 's' → logprob: -11.392203330993652
    8. ' Tracker' → logprob: -11.392203330993652
    9. 'tracker' → logprob: -11.767203330993652
    10. '_counter' → logprob: -12.142203330993652

Token 35: '(elements' (ID: 120313)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20226800441741943
    2. '(' → logprob: -1.7022680044174194
    3. '.' → logprob: -7.827268123626709
    4. '(
' → logprob: -8.82726764678955
    5. '().' → logprob: -9.20226764678955
    6. '```' → logprob: -10.45226764678955
    7. '(self' → logprob: -10.70226764678955
    8. '(

' → logprob: -10.70226764678955
    9. '()
' → logprob: -10.82726764678955
    10. '()(' → logprob: -10.95226764678955

Token 36: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.726595241460018e-05
    2. ' )' → logprob: -10.50003719329834
    3. '   ' → logprob: -12.37503719329834
    4. '       ' → logprob: -12.37503719329834
    5. ',' → logprob: -15.00003719329834
    6. ')
' → logprob: -15.50003719329834
    7. '))' → logprob: -16.000038146972656
    8. '),' → logprob: -16.250038146972656
    9. '.' → logprob: -16.375038146972656
    10. ' ' → logprob: -16.625038146972656

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8434206247329712
    2. '
' → logprob: -1.7184206247329712
    3. '.' → logprob: -2.2184205055236816
    4. 'def' → logprob: -2.3434205055236816
    5. '<|end|>' → logprob: -2.7184205055236816
    6. '_' → logprob: -2.8434205055236816
    7. '```' → logprob: -4.468420505523682
    8. ' def' → logprob: -4.593420505523682
    9. '    
' → logprob: -4.718420505523682
    10. ')' → logprob: -5.093420505523682

Token 38: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14337071776390076
    2. ' def' → logprob: -2.7683706283569336
    3. 'def' (adapté à ' def') → logprob: -3.1433706283569336
    4. '
' → logprob: -4.893370628356934
    5. '```' → logprob: -5.018370628356934
    6. '    
' → logprob: -5.643370628356934
    7. '<|end|>' → logprob: -5.643370628356934
    8. ' ' → logprob: -6.518370628356934
    9. '       ' → logprob: -6.768370628356934
    10. '    ' → logprob: -6.893370628356934

Token 39: ' swap' (ID: 25489)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.7082599401473999
    2. ' _' → logprob: -2.2082600593566895
    3. ' ' → logprob: -2.5832600593566895
    4. ' update' → logprob: -2.5832600593566895
    5. ' space' → logprob: -3.2082600593566895
    6. ' add' → logprob: -3.3332600593566895
    7. ' advance' → logprob: -3.8332600593566895
    8. '_' → logprob: -4.2082600593566895
    9. ' count' → logprob: -4.3332600593566895
    10. ' next' → logprob: -4.4582600593566895

Token 40: '(self' (ID: 2402)
  Prédit: '_elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.3494586944580078
    2. '(' → logprob: -1.7244586944580078
    3. '(self' → logprob: -2.849458694458008
    4. '_items' → logprob: -3.474458694458008
    5. '_tokens' → logprob: -4.724458694458008
    6. '_positions' → logprob: -4.849458694458008
    7. '_' → logprob: -5.349458694458008
    8. '_s' → logprob: -6.349458694458008
    9. '_self' → logprob: -6.849458694458008
    10. '_indices' → logprob: -7.474458694458008

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006675589829683304
    2. 'self' → logprob: -6.256675720214844
    3. '_elements' → logprob: -6.631675720214844
    4. ' ,' → logprob: -6.881675720214844
    5. '[' → logprob: -7.256675720214844
    6. ')' → logprob: -7.506675720214844
    7. '_,' → logprob: -8.006675720214844
    8. '_tokens' → logprob: -9.256675720214844
    9. '_positions' → logprob: -9.256675720214844
    10. 'elements' → logprob: -9.631675720214844

Token 42: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0556630864739418
    2. 'i' → logprob: -2.9306631088256836
    3. ' a' → logprob: -8.430663108825684
    4. ' self' → logprob: -8.555663108825684
    5. 'a' → logprob: -9.055663108825684
    6. ' idx' → logprob: -9.180663108825684
    7. ' index' → logprob: -9.555663108825684
    8. 'self' → logprob: -10.305663108825684
    9. 'index' → logprob: -11.055663108825684
    10. ')' → logprob: -11.180663108825684

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007135047344490886
    2. ' ,' → logprob: -7.750713348388672
    3. ',i' → logprob: -9.125713348388672
    4. '+' → logprob: -9.250713348388672
    5. ')' → logprob: -9.750713348388672
    6. '1' → logprob: -11.875713348388672
    7. ',j' → logprob: -13.000713348388672
    8. ',)' → logprob: -13.250713348388672
    9. ' )' → logprob: -13.500713348388672
    10. '   ' → logprob: -14.000713348388672

Token 44: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6391514539718628
    2. ' j' → logprob: -0.7641514539718628
    3. 'i' → logprob: -5.514151573181152
    4. ' i' → logprob: -6.014151573181152
    5. ' ' → logprob: -11.014151573181152
    6. '    ' → logprob: -11.264151573181152
    7. '	j' → logprob: -11.514151573181152
    8. '   ' → logprob: -12.139151573181152
    9. ')' → logprob: -12.389151573181152
    10. '<|end|>' → logprob: -13.014151573181152

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022467232774943113
    2. ')' → logprob: -6.127246856689453
    3. ',' → logprob: -10.377246856689453
    4. ':' → logprob: -11.502246856689453
    5. '):
' → logprob: -11.502246856689453
    6. ' ):' → logprob: -11.752246856689453
    7. '   ' → logprob: -14.002246856689453
    8. ''):' → logprob: -15.377246856689453
    9. '),' → logprob: -15.502246856689453
    10. '       ' → logprob: -15.877246856689453

Token 46: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03842035308480263
    2. '<|end|>' → logprob: -3.9134204387664795
    3. '
' → logprob: -4.6634202003479
    4. '   ' → logprob: -6.5384202003479
    5. 'self' → logprob: -6.6634202003479
    6. ')' → logprob: -6.7884202003479
    7. ',' → logprob: -7.2884202003479
    8. '```' → logprob: -7.4134202003479
    9. '<|end|>' → logprob: -7.6634202003479
    10. '        
' → logprob: -7.7884202003479

Token 47: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.055440902709961
    2. ' self' → logprob: -1.055440902709961
    3. 'self' → logprob: -1.305440902709961
    4. '        ' → logprob: -4.805440902709961
    5. ' 
' → logprob: -5.180440902709961
    6. 'elements' → logprob: -5.805440902709961
    7. ' elements' → logprob: -5.930440902709961
    8. '        
' → logprob: -6.680440902709961
    9. '```' → logprob: -6.680440902709961
    10. ' if' → logprob: -7.055440902709961

Token 48: ' i' (ID: 575)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.29513922333717346
    2. 'self' → logprob: -1.545139193534851
    3. '       ' → logprob: -4.670139312744141
    4. ' if' → logprob: -4.670139312744141
    5. ' old' → logprob: -5.670139312744141
    6. ' temp' → logprob: -5.920139312744141
    7. 'e' → logprob: -6.170139312744141
    8. ' tmp' → logprob: -6.420139312744141
    9. 'if' → logprob: -6.670139312744141
    10. ' s' → logprob: -6.920139312744141

Token 49: ' and' (ID: 326)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.04300205409526825
    2. 'j' → logprob: -3.168002128601074
    3. '<|end|>' → logprob: -13.418002128601074
    4. '	j' → logprob: -14.918002128601074
    5. ' ' → logprob: -15.043002128601074
    6. '    ' → logprob: -15.668002128601074
    7. ' ' → logprob: -16.043001174926758
    8. '$j' → logprob: -16.668001174926758
    9. '```' → logprob: -16.793001174926758
    10. '<|end|>' → logprob: -16.918001174926758

Token 51: ' are' (ID: 553)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: ' ' (ID: 220)
  Prédit: ' indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' indices' → logprob: -0.007469501346349716
    2. 'indices' → logprob: -5.757469654083252
    3. ' positions' → logprob: -6.382469654083252
    4. ' indexes' → logprob: -7.007469654083252
    5. ' the' → logprob: -7.382469654083252
    6. ' valid' → logprob: -8.132469177246094
    7. ' integers' → logprob: -8.257469177246094
    8. ' elements' → logprob: -8.882469177246094
    9. ' index' → logprob: -9.257469177246094
    10. ' self' → logprob: -9.507469177246094

Token 53: '1' (ID: 16)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.4071469306945801
    2. ' indices' → logprob: -1.15714693069458
    3. 'indexes' → logprob: -4.40714693069458
    4. 'inte' → logprob: -5.53214693069458
    5. ' integers' → logprob: -6.78214693069458
    6. ' indexes' → logprob: -7.03214693069458
    7. 'int' → logprob: -7.40714693069458
    8. '0' → logprob: -7.53214693069458
    9. ' ' → logprob: -9.157146453857422
    10. ' valid' → logprob: -9.282146453857422

Token 54: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.0769166648387909
    2. ' -' → logprob: -3.0769166946411133
    3. '-index' → logprob: -3.7019166946411133
    4. '-' → logprob: -6.076916694641113
    5. 'based' → logprob: -7.201916694641113
    6. '-base' → logprob: -8.826916694641113
    7. ' based' → logprob: -10.451916694641113
    8. '-Based' → logprob: -11.701916694641113
    9. '_based' → logprob: -11.826916694641113
    10. ' ' → logprob: -12.201916694641113

Token 55: ' indices' (ID: 30378)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06610070168972015
    2. '        
' → logprob: -3.566100597381592
    3. '
' → logprob: -4.066100597381592
    4. '<|end|>' → logprob: -4.941100597381592
    5. ',' → logprob: -6.316100597381592
    6. '\n' → logprob: -6.566100597381592
    7. '\' → logprob: -6.691100597381592
    8. '```' → logprob: -6.691100597381592
    9. '    
' → logprob: -6.816100597381592
    10. '<|end|>' → logprob: -6.941100597381592

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3660019636154175
    2. '<|end|>' → logprob: -1.2410019636154175
    3. '
' → logprob: -5.116002082824707
    4. '   ' → logprob: -6.116002082824707
    5. ',' → logprob: -6.116002082824707
    6. '<|end|>' → logprob: -6.241002082824707
    7. ')' → logprob: -6.366002082824707
    8. '        
' → logprob: -6.616002082824707
    9. '```' → logprob: -7.741002082824707
    10. '\n' → logprob: -8.491002082824707

Token 58: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23235180974006653
    2. 'i' → logprob: -2.732351779937744
    3. 'self' → logprob: -3.357351779937744
    4. 'n' → logprob: -3.607351779937744
    5. ' i' → logprob: -4.607351779937744
    6. '        
' → logprob: -4.607351779937744
    7. ' 
' → logprob: -4.857351779937744
    8. '        ' → logprob: -4.982351779937744
    9. 's' → logprob: -5.107351779937744
    10. '\' → logprob: -5.357351779937744

Token 59: ' Update' (ID: 9152)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3948296308517456
    2. ' self' → logprob: -1.3948296308517456
    3. '       ' → logprob: -1.7698296308517456
    4. ' i' → logprob: -2.019829750061035
    5. ' old' → logprob: -2.644829750061035
    6. 'self' → logprob: -2.894829750061035
    7. 'old' → logprob: -3.894829750061035
    8. ' inv' → logprob: -4.894829750061035
    9. ' a' → logprob: -5.019829750061035
    10. 'a' → logprob: -5.269829750061035

Token 60: ' invers' (ID: 38721)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.16074630618095398
    2. 'self' → logprob: -2.5357463359832764
    3. ' elements' → logprob: -3.2857463359832764
    4. '       ' → logprob: -3.9107463359832764
    5. ' the' → logprob: -5.285746097564697
    6. '        ' → logprob: -6.285746097564697
    7. '(self' → logprob: -6.660746097564697
    8. 'elements' → logprob: -6.785746097564697
    9. ' ' → logprob: -8.535746574401855
    10. '   ' → logprob: -8.535746574401855

Token 61: 'ions' (ID: 756)
  Prédit: 'ion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.020642094314098358
    2. 'ions' → logprob: -4.020642280578613
    3. '       ' → logprob: -6.270642280578613
    4. '   ' → logprob: -7.895642280578613
    5. '           ' → logprob: -9.770642280578613
    6. ' ' → logprob: -9.895642280578613
    7. 's' → logprob: -11.020642280578613
    8. 'ersion' → logprob: -11.270642280578613
    9. '    ' → logprob: -11.395642280578613
    10. 'tion' → logprob: -11.520642280578613

Token 62: ' before' (ID: 2254)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09277014434337616
    2. '        ' → logprob: -3.2177700996398926
    3. '
' → logprob: -4.467770099639893
    4. '<|end|>' → logprob: -4.467770099639893
    5. '        
' → logprob: -5.092770099639893
    6. ',' → logprob: -5.092770099639893
    7. 'self' → logprob: -5.842770099639893
    8. ')' → logprob: -6.092770099639893
    9. '<|end|>' → logprob: -6.092770099639893
    10. ' and' → logprob: -6.717770099639893

Token 63: ' swap' (ID: 25489)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25571271777153015
    2. 'self' → logprob: -2.5057127475738525
    3. ' self' → logprob: -2.6307127475738525
    4. '   ' → logprob: -3.5057127475738525
    5. '        ' → logprob: -4.630712509155273
    6. ' and' → logprob: -4.630712509155273
    7. ')' → logprob: -5.255712509155273
    8. '    ' → logprob: -5.380712509155273
    9. ' the' → logprob: -6.005712509155273
    10. ' ' → logprob: -6.255712509155273

Token 64: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10365942865610123
    2. '        ' → logprob: -3.2286593914031982
    3. ',' → logprob: -3.7286593914031982
    4. '        
' → logprob: -4.228659629821777
    5. '
' → logprob: -5.478659629821777
    6. '<|end|>' → logprob: -5.478659629821777
    7. 'self' → logprob: -5.728659629821777
    8. ')' → logprob: -6.228659629821777
    9. '    ' → logprob: -6.978659629821777
    10. ' 
' → logprob: -6.978659629821777

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06381528824567795
    2. '        ' → logprob: -3.1888153553009033
    3. '<|end|>' → logprob: -4.563815116882324
    4. ',' → logprob: -5.563815116882324
    5. '        
' → logprob: -5.813815116882324
    6. ')' → logprob: -7.438815116882324
    7. '   ' → logprob: -7.563815116882324
    8. '    ' → logprob: -7.813815116882324
    9. '
' → logprob: -8.063815116882324
    10. '      ' → logprob: -8.313815116882324

Token 66: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2646021246910095
    2. ' self' → logprob: -2.1396021842956543
    3. 'self' (adapté à ' self') → logprob: -2.6396021842956543
    4. '        ' → logprob: -3.8896021842956543
    5. '\' → logprob: -4.764602184295654
    6. ',' → logprob: -6.139602184295654
    7. '        
' → logprob: -6.139602184295654
    8. '   ' → logprob: -6.389602184295654
    9. '```' → logprob: -6.514602184295654
    10. '    ' → logprob: -7.014602184295654

Token 67: '.in' (ID: 2250)
  Prédit: '.in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -0.05495167896151543
    2. '.' → logprob: -2.9299516677856445
    3. '.n' → logprob: -11.179951667785645
    4. '.i' → logprob: -11.179951667785645
    5. '.swap' → logprob: -11.554951667785645
    6. ' .' → logprob: -11.929951667785645
    7. '..' → logprob: -12.679951667785645
    8. '.inv' → logprob: -12.679951667785645
    9. '.s' → logprob: -12.929951667785645
    10. '.elements' → logprob: -13.179951667785645

Token 68: 'version' (ID: 8924)
  Prédit: 'ersion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ersion' → logprob: -0.3132867217063904
    2. 'version' → logprob: -1.3132867813110352
    3. 'ervation' → logprob: -11.563286781311035
    4. 'ers' → logprob: -12.313286781311035
    5. 'ursion' → logprob: -13.063286781311035
    6. 'ver' → logprob: -13.188286781311035
    7. '_version' → logprob: -13.313286781311035
    8. '   ' → logprob: -13.938286781311035
    9. 'Version' → logprob: -14.313286781311035
    10. 'versions' → logprob: -14.313286781311035

Token 69: '_tracker' (ID: 124388)
  Prédit: '_tracker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tracker' → logprob: -7.465036105713807e-06
    2. '_' → logprob: -13.000007629394531
    3. '_tracking' → logprob: -13.125007629394531
    4. '_checker' → logprob: -14.500007629394531
    5. ' _' → logprob: -14.750007629394531
    6. '_manager' → logprob: -14.875007629394531
    7. '_track' → logprob: -15.375007629394531
    8. '_writer' → logprob: -15.625007629394531
    9. '_optimizer' → logprob: -15.875007629394531
    10. '_detector' → logprob: -16.00000762939453

Token 70: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.38265982270240784
    2. '.remove' → logprob: -1.2576597929000854
    3. '.' → logprob: -4.382659912109375
    4. '.de' → logprob: -4.507659912109375
    5. '.subtract' → logprob: -5.007659912109375
    6. '.rem' → logprob: -7.507659912109375
    7. '.swap' → logprob: -7.507659912109375
    8. '.add' → logprob: -8.132659912109375
    9. '.delete' → logprob: -8.382659912109375
    10. '.increment' → logprob: -8.632659912109375

Token 71: '_before' (ID: 56638)
  Prédit: '_swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_swap' → logprob: -0.4215909242630005
    2. '(' → logprob: -1.5465909242630005
    3. '(i' → logprob: -2.671590805053711
    4. '((' → logprob: -4.046590805053711
    5. '_sw' → logprob: -4.546590805053711
    6. '_remove' → logprob: -4.546590805053711
    7. '_before' → logprob: -4.671590805053711
    8. '_rem' → logprob: -5.796590805053711
    9. '_elements' → logprob: -6.171590805053711
    10. '_positions' → logprob: -6.296590805053711

Token 72: '_swap' (ID: 103784)
  Prédit: '_swap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_swap' → logprob: -0.00013285996101330966
    2. 'swap' → logprob: -10.12513256072998
    3. '_sw' → logprob: -10.50013256072998
    4. '_' → logprob: -10.62513256072998
    5. '(i' → logprob: -11.00013256072998
    6. 'Swap' → logprob: -11.62513256072998
    7. '(' → logprob: -11.87513256072998
    8. '_exchange' → logprob: -13.37513256072998
    9. '_remove' → logprob: -13.50013256072998
    10. '(_' → logprob: -14.12513256072998

Token 73: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.011210862547159195
    2. '(' → logprob: -4.511210918426514
    3. '((' → logprob: -8.886210441589355
    4. '(self' → logprob: -11.386210441589355
    5. ' (' → logprob: -11.636210441589355
    6. '(I' → logprob: -13.136210441589355
    7. '(
' → logprob: -13.511210441589355
    8. '(ii' → logprob: -15.011210441589355
    9. ' ' → logprob: -15.511210441589355
    10. '(s' → logprob: -16.511211395263672

Token 74: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002370297210291028
    2. ' ,' → logprob: -6.252370357513428
    3. '-' → logprob: -8.37736988067627
    4. ',j' → logprob: -8.75236988067627
    5. ')' → logprob: -11.25236988067627
    6. ' -' → logprob: -11.25236988067627
    7. ',i' → logprob: -11.87736988067627
    8. ',
' → logprob: -12.00236988067627
    9. ' ' → logprob: -12.12736988067627
    10. '   ' → logprob: -13.62736988067627

Token 75: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015041481237858534
    2. ' ' → logprob: -6.501503944396973
    3. '2' → logprob: -13.751503944396973
    4. '<|end|>' → logprob: -15.501503944396973
    5. '-' → logprob: -15.751503944396973
    6. '    ' → logprob: -16.37650489807129
    7. ',' → logprob: -16.62650489807129
    8. ')' → logprob: -16.87650489807129
    9. '=' → logprob: -16.87650489807129
    10. '```' → logprob: -17.00150489807129

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '2' → logprob: -17.000003814697266
    4. '   ' → logprob: -17.125003814697266
    5. '```' → logprob: -18.125003814697266
    6. '-' → logprob: -18.750003814697266
    7. ')' → logprob: -18.875003814697266
    8. '0' → logprob: -19.312503814697266
    9. ',' → logprob: -19.687503814697266
    10. '<|end|>' → logprob: -19.812503814697266

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005792465526610613
    2. ' ,' → logprob: -7.625579357147217
    3. ',j' → logprob: -9.875578880310059
    4. ')' → logprob: -10.375578880310059
    5. '<|end|>' → logprob: -13.000578880310059
    6. ',
' → logprob: -13.375578880310059
    7. ',i' → logprob: -13.750578880310059
    8. '`,' → logprob: -13.875578880310059
    9. ' ' → logprob: -14.625578880310059
    10. '),' → logprob: -14.875578880310059

Token 78: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.34855690598487854
    2. ' j' → logprob: -1.2235568761825562
    3. '    ' → logprob: -9.348556518554688
    4. '   ' → logprob: -11.348556518554688
    5. '	j' → logprob: -11.723556518554688
    6. ' ' → logprob: -13.098556518554688
    7. ')' → logprob: -14.098556518554688
    8. ' ' → logprob: -14.348556518554688
    9. '     ' → logprob: -14.598556518554688
    10. '  ' → logprob: -14.973556518554688

Token 79: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1275871843099594
    2. '-' → logprob: -2.127587080001831
    3. ' ' → logprob: -7.87758731842041
    4. ')' → logprob: -8.62758731842041
    5. '   ' → logprob: -10.25258731842041
    6. '    ' → logprob: -10.62758731842041
    7. '1' → logprob: -12.12758731842041
    8. '  ' → logprob: -12.25258731842041
    9. '       ' → logprob: -12.37758731842041
    10. '<|end|>' → logprob: -12.37758731842041

Token 80: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.517272024415433e-05
    2. ' ' → logprob: -9.500075340270996
    3. ')' → logprob: -15.875075340270996
    4. '   ' → logprob: -16.81257438659668
    5. '-' → logprob: -17.43757438659668
    6. '```' → logprob: -17.50007438659668
    7. '0' → logprob: -17.81257438659668
    8. '       ' → logprob: -18.12507438659668
    9. '<|end|>' → logprob: -18.25007438659668
    10. '           ' → logprob: -18.43757438659668

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '<|end|>' → logprob: -17.625003814697266
    4. ')' → logprob: -17.750003814697266
    5. '```' → logprob: -18.062503814697266
    6. '   ' → logprob: -18.500003814697266
    7. '0' → logprob: -18.812503814697266
    8. '<|end|>' → logprob: -18.937503814697266
    9. '۱' → logprob: -19.000003814697266
    10. '           ' → logprob: -19.125003814697266

Token 82: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.217951886355877e-05
    2. '       ' → logprob: -10.375061988830566
    3. ')
' → logprob: -10.500061988830566
    4. ' )' → logprob: -13.000061988830566
    5. '))' → logprob: -14.750061988830566
    6. '),' → logprob: -15.375061988830566
    7. '   ' → logprob: -16.125062942504883
    8. ',' → logprob: -16.125062942504883
    9. ')\' → logprob: -16.375062942504883
    10. ')`' → logprob: -16.875062942504883

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006014074315316975
    2. '
' → logprob: -7.750601291656494
    3. 'self' → logprob: -9.125601768493652
    4. '        
' → logprob: -10.000601768493652
    5. '   ' → logprob: -12.000601768493652
    6. ' self' → logprob: -13.250601768493652
    7. '```' → logprob: -13.500601768493652
    8. '\' → logprob: -13.750601768493652
    9. '           ' → logprob: -13.875601768493652
    10. '  
' → logprob: -14.125601768493652

Token 84: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009726693853735924
    2. 'self' → logprob: -4.884726524353027
    3. '
' → logprob: -6.634726524353027
    4. '        
' → logprob: -7.759726524353027
    5. ' self' → logprob: -8.759726524353027
    6. '   ' → logprob: -9.134726524353027
    7. '```' → logprob: -10.759726524353027
    8. '\' → logprob: -10.884726524353027
    9. '#' (adapté à ' #') → logprob: -11.384726524353027
    10. '    
' → logprob: -11.509726524353027

Token 85: ' Perform' (ID: 36780)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009233581833541393
    2. ' self' → logprob: -5.134233474731445
    3. '       ' → logprob: -6.259233474731445
    4. '#' → logprob: -6.634233474731445
    5. 'temp' → logprob: -11.009233474731445
    6. 'tmp' → logprob: -11.384233474731445
    7. '(self' → logprob: -11.759233474731445
    8. 'elements' → logprob: -11.759233474731445
    9. ' #' → logprob: -11.884233474731445
    10. '   ' → logprob: -12.759233474731445

Token 86: ' swap' (ID: 25489)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.38806867599487305
    2. 'self' → logprob: -1.138068675994873
    3. '       ' → logprob: -7.263068675994873
    4. ' the' → logprob: -7.888068675994873
    5. '   ' → logprob: -10.263069152832031
    6. ' elements' → logprob: -10.888069152832031
    7. ' ' → logprob: -11.388069152832031
    8. ' a' → logprob: -11.888069152832031
    9. 'tmp' → logprob: -12.138069152832031
    10. 'elements' → logprob: -12.138069152832031

Token 87: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031692035496234894
    2. 'self' → logprob: -3.5316920280456543
    3. ' self' → logprob: -7.531692028045654
    4. '
' → logprob: -7.656692028045654
    5. '<|end|>' → logprob: -8.406692504882812
    6. '        
' → logprob: -8.656692504882812
    7. '   ' → logprob: -9.156692504882812
    8. 'elements' → logprob: -9.406692504882812
    9. ',' → logprob: -9.656692504882812
    10. 's' → logprob: -9.781692504882812

Token 88: ' elements' (ID: 8632)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.0162335392087698
    2. 'self' → logprob: -4.141233444213867
    3. ' the' → logprob: -8.766233444213867
    4. ' ' → logprob: -10.891233444213867
    5. ' elements' → logprob: -11.641233444213867
    6. '   ' → logprob: -12.391233444213867
    7. '    ' → logprob: -12.641233444213867
    8. 'the' → logprob: -13.516233444213867
    9. '	self' → logprob: -13.641233444213867
    10. 'elf' → logprob: -14.016233444213867

Token 89: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023861145600676537
    2. 'self' → logprob: -6.252386093139648
    3. '   ' → logprob: -9.252386093139648
    4. ',' → logprob: -9.252386093139648
    5. ' self' → logprob: -9.502386093139648
    6. '<|end|>' → logprob: -9.752386093139648
    7. '```' → logprob: -10.627386093139648
    8. '        
' → logprob: -11.127386093139648
    9. '
' → logprob: -11.252386093139648
    10. 'elements' → logprob: -11.502386093139648

Token 90: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03591224178671837
    2. 'self' → logprob: -3.410912275314331
    3. ' self' → logprob: -6.160912036895752
    4. '   ' → logprob: -10.41091251373291
    5. '        
' → logprob: -10.41091251373291
    6. '```' → logprob: -10.41091251373291
    7. 'elements' → logprob: -11.03591251373291
    8. ',' → logprob: -11.16091251373291
    9. '[self' → logprob: -12.41091251373291
    10. '``' → logprob: -12.53591251373291

Token 91: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6953129172325134
    2. 'self' (adapté à ' self') → logprob: -0.6953129172325134
    3. '       ' → logprob: -6.195312976837158
    4. 'elements' → logprob: -10.1953125
    5. ' elements' → logprob: -10.4453125
    6. 'temp' → logprob: -11.3203125
    7. '   ' → logprob: -11.5703125
    8. 'tmp' → logprob: -11.8203125
    9. 's' → logprob: -12.3203125
    10. ' temp' → logprob: -12.3203125

Token 92: '.elements' (ID: 58318)
  Prédit: '.elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.elements' → logprob: -0.11304367333650589
    2. '.' → logprob: -2.238043785095215
    3. ' .' → logprob: -8.863043785095215
    4. '[' → logprob: -10.488043785095215
    5. 'elements' → logprob: -10.863043785095215
    6. '.user' → logprob: -11.988043785095215
    7. '.Elements' → logprob: -12.113043785095215
    8. '.e' → logprob: -12.488043785095215
    9. '.tokens' → logprob: -12.738043785095215
    10. '.swap' → logprob: -12.988043785095215

Token 93: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3133610486984253
    2. '[i' → logprob: -1.3133610486984253
    3. '[self' → logprob: -9.688361167907715
    4. '[j' → logprob: -10.688361167907715
    5. '[
' → logprob: -12.563361167907715
    6. '[int' → logprob: -12.688361167907715
    7. '```' → logprob: -12.688361167907715
    8. '[...]' → logprob: -14.313361167907715
    9. '[s' → logprob: -14.813361167907715
    10. '[]' → logprob: -14.938361167907715

Token 94: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.22836242616176605
    2. '-' → logprob: -1.6033624410629272
    3. ']' → logprob: -6.103362560272217
    4. '[' → logprob: -7.853362560272217
    5. ' ' → logprob: -8.728362083435059
    6. ' ]' → logprob: -9.478362083435059
    7. ')' → logprob: -10.978362083435059
    8. '<|end|>' → logprob: -11.228362083435059
    9. '1' → logprob: -11.603362083435059
    10. ' -
' → logprob: -11.728362083435059

Token 95: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.043093856424093246
    2. ' ' → logprob: -3.1680939197540283
    3. ']' → logprob: -9.91809368133545
    4. '<|end|>' → logprob: -11.04309368133545
    5. ')' → logprob: -11.16809368133545
    6. '_' → logprob: -12.66809368133545
    7. ' ]' → logprob: -13.04309368133545
    8. 'space' → logprob: -13.41809368133545
    9. '2' → logprob: -13.54309368133545
    10. '>' → logprob: -13.66809368133545

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003357006062287837
    2. ' ' → logprob: -8.000335693359375
    3. ']' → logprob: -16.125335693359375
    4. '```' → logprob: -16.937835693359375
    5. '１' → logprob: -17.562835693359375
    6. '<|end|>' → logprob: -17.750335693359375
    7. '۱' → logprob: -17.812835693359375
    8. '  ' → logprob: -18.125335693359375
    9. '   ' → logprob: -18.250335693359375
    10. ')' → logprob: -18.687835693359375

Token 97: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0004094619944225997
    2. ']' → logprob: -8.250409126281738
    3. ',' → logprob: -8.875409126281738
    4. ' ],' → logprob: -11.875409126281738
    5. '],
' → logprob: -14.000409126281738
    6. '>,' → logprob: -15.250409126281738
    7. ''],' → logprob: -15.625409126281738
    8. '},' → logprob: -16.250410079956055
    9. '"],' → logprob: -16.625410079956055
    10. '],[' → logprob: -17.125410079956055

Token 98: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.05496566742658615
    2. 'self' → logprob: -2.9299657344818115
    3. '<|end|>' → logprob: -9.55496597290039
    4. ' ' → logprob: -12.17996597290039
    5. '	self' → logprob: -12.55496597290039
    6. ' ' → logprob: -13.17996597290039
    7. '=self' → logprob: -14.67996597290039
    8. '[self' → logprob: -15.05496597290039
    9. '<|end|>' → logprob: -15.30496597290039
    10. 'Self' → logprob: -15.30496597290039

Token 99: '.elements' (ID: 58318)
  Prédit: '.elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.elements' → logprob: -5.598092684522271e-05
    2. '.' → logprob: -10.500056266784668
    3. 'elements' → logprob: -10.500056266784668
    4. ' .' → logprob: -14.625056266784668
    5. '.Elements' → logprob: -16.12505531311035
    6. '.
' → logprob: -16.87505531311035
    7. ' elements' → logprob: -17.25005531311035
    8. '.e' → logprob: -17.37505531311035
    9. '(elements' → logprob: -17.37505531311035
    10. '.components' → logprob: -17.37505531311035

Token 100: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0004341261519584805
    2. '[' → logprob: -7.750433921813965
    3. '[
' → logprob: -13.250433921813965
    4. ' [' → logprob: -14.500433921813965
    5. '```' → logprob: -14.625433921813965
    6. 'j' → logprob: -14.750433921813965
    7. '[i' → logprob: -15.375433921813965
    8. '	j' → logprob: -17.75043487548828
    9. '[js' → logprob: -17.75043487548828
    10. '   ' → logprob: -18.12543487548828

Token 101: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07896006852388382
    2. '-' → logprob: -2.5789601802825928
    3. '[' → logprob: -10.078960418701172
    4. ' ' → logprob: -10.953960418701172
    5. ']' → logprob: -12.203960418701172
    6. '   ' → logprob: -13.578960418701172
    7. '<|end|>' → logprob: -13.953960418701172
    8. '<|end|>' → logprob: -13.953960418701172
    9. ')' → logprob: -14.453960418701172
    10. 'user' → logprob: -15.391460418701172

Token 102: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002186307217925787
    2. ' ' → logprob: -6.127186298370361
    3. '-' → logprob: -14.87718677520752
    4. '```' → logprob: -15.43968677520752
    5. '   ' → logprob: -15.50218677520752
    6. ']' → logprob: -16.127185821533203
    7. '１' → logprob: -16.627185821533203
    8. ')' → logprob: -16.689685821533203
    9. '`' → logprob: -17.814685821533203
    10. '  ' → logprob: -17.814685821533203

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005543439765460789
    2. ' ' → logprob: -7.50055456161499
    3. '   ' → logprob: -15.000554084777832
    4. '```' → logprob: -15.000554084777832
    5. '１' → logprob: -16.56305503845215
    6. '۱' → logprob: -16.81305503845215
    7. '-' → logprob: -17.00055503845215
    8. '  ' → logprob: -17.06305503845215
    9. '2' → logprob: -17.06305503845215
    10. ']' → logprob: -17.18805503845215

Token 104: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017019602237269282
    2. ']=' → logprob: -7.001701831817627
    3. ')' → logprob: -7.751701831817627
    4. '=' → logprob: -8.376702308654785
    5. ' ]' → logprob: -9.001702308654785
    6. ' =' → logprob: -12.501702308654785
    7. ')=' → logprob: -13.501702308654785
    8. '']' → logprob: -14.626702308654785
    9. ' )' → logprob: -15.001702308654785
    10. '<|end|>' → logprob: -15.126702308654785

Token 105: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00020449401927180588
    2. ' =' → logprob: -8.500204086303711
    3. '=
' → logprob: -14.500204086303711
    4. ',' → logprob: -15.125204086303711
    5. '=

' → logprob: -15.375204086303711
    6. '<|end|>' → logprob: -19.12520408630371
    7. '.=' → logprob: -19.25020408630371
    8. '=}' → logprob: -19.25020408630371
    9. ')=' → logprob: -19.37520408630371
    10. '=s' → logprob: -19.75020408630371

Token 106: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0788901224732399
    2. ' self' → logprob: -2.578890085220337
    3. '	self' → logprob: -15.203889846801758
    4. '   ' → logprob: -17.078889846801758
    5. '(self' → logprob: -17.703889846801758
    6. ' ' → logprob: -17.828889846801758
    7. '=self' → logprob: -18.453889846801758
    8. '_self' → logprob: -18.453889846801758
    9. ' ' → logprob: -18.703889846801758
    10. 'Self' → logprob: -18.953889846801758

Token 107: '.elements' (ID: 58318)
  Prédit: '.elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.elements' → logprob: -0.000217006730963476
    2. 'elements' → logprob: -8.50021743774414
    3. '.' → logprob: -11.25021743774414
    4. ' .' → logprob: -16.00021743774414
    5. ' elements' → logprob: -16.25021743774414
    6. '_elements' → logprob: -16.75021743774414
    7. '.j' → logprob: -17.25021743774414
    8. '_ELEMENTS' → logprob: -17.25021743774414
    9. '.Elements' → logprob: -17.75021743774414
    10. 'lements' → logprob: -17.75021743774414

Token 108: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.803360495017841e-05
    2. 'j' → logprob: -10.000078201293945
    3. '[i' → logprob: -10.375078201293945
    4. '[' → logprob: -13.750078201293945
    5. 'i' → logprob: -16.250078201293945
    6. ' j' → logprob: -16.375078201293945
    7. '	j' → logprob: -17.250078201293945
    8. ',j' → logprob: -18.250078201293945
    9. '```' → logprob: -18.375078201293945
    10. '(j' → logprob: -18.500078201293945

Token 109: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0233075562864542
    2. '-' → logprob: -3.7733075618743896
    3. '[' → logprob: -9.898307800292969
    4. ' ' → logprob: -11.898307800292969
    5. '   ' → logprob: -12.648307800292969
    6. ' [' → logprob: -15.273307800292969
    7. '<|end|>' → logprob: -15.273307800292969
    8. '[i' → logprob: -15.523307800292969
    9. '<|end|>' → logprob: -15.648307800292969
    10. '[-' → logprob: -15.773307800292969

Token 110: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10022435337305069
    2. ' ' → logprob: -2.350224256515503
    3. '   ' → logprob: -12.100224494934082
    4. '-' → logprob: -12.350224494934082
    5. ' -' → logprob: -12.600224494934082
    6. '<|end|>' → logprob: -12.975224494934082
    7. '  ' → logprob: -14.475224494934082
    8. '```' → logprob: -15.162724494934082
    9. '<|end|>' → logprob: -15.350224494934082
    10. '[' → logprob: -15.662724494934082

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. '-' → logprob: -13.000004768371582
    3. ' ' → logprob: -13.125004768371582
    4. '```' → logprob: -16.250003814697266
    5. 'i' → logprob: -17.250003814697266
    6. '[' → logprob: -17.500003814697266
    7. '   ' → logprob: -17.875003814697266
    8. ']' → logprob: -17.875003814697266
    9. '<|end|>' → logprob: -18.125003814697266
    10. 'user' → logprob: -18.500003814697266

Token 112: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1820884793996811
    2. '],' → logprob: -1.8070884943008423
    3. ']' → logprob: -6.432088375091553
    4. ' ,' → logprob: -7.307088375091553
    5. ' ],' → logprob: -9.932088851928711
    6. '[i' → logprob: -12.807088851928711
    7. ',i' → logprob: -13.057088851928711
    8. ' ' → logprob: -13.557088851928711
    9. ',
' → logprob: -13.557088851928711
    10. '],
' → logprob: -14.057088851928711

Token 113: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2014143168926239
    2. 'self' → logprob: -1.7014143466949463
    3. ' ' → logprob: -15.201414108276367
    4. '	self' → logprob: -15.451414108276367
    5. '<|end|>' → logprob: -15.826414108276367
    6. '(self' → logprob: -16.326414108276367
    7. ' ' → logprob: -16.701414108276367
    8. '[self' → logprob: -17.076414108276367
    9. ' 
' → logprob: -17.201414108276367
    10. '```' → logprob: -17.701414108276367

Token 114: '.elements' (ID: 58318)
  Prédit: '.elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.elements' → logprob: -0.06354112923145294
    2. 'elements' → logprob: -3.4385411739349365
    3. '[i' → logprob: -4.188540935516357
    4. '[' → logprob: -4.938540935516357
    5. '_elements' → logprob: -5.563540935516357
    6. '.' → logprob: -6.063540935516357
    7. ' elements' → logprob: -7.813540935516357
    8. ']' → logprob: -8.813541412353516
    9. '.Elements' → logprob: -9.813541412353516
    10. '-elements' → logprob: -9.938541412353516

Token 115: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001137358252890408
    2. '[' → logprob: -7.1261372566223145
    3. 'elements' → logprob: -8.501137733459473
    4. '[j' → logprob: -9.876137733459473
    5. '_elements' → logprob: -10.126137733459473
    6. '.elements' → logprob: -11.001137733459473
    7. ' elements' → logprob: -11.751137733459473
    8. '[
' → logprob: -12.126137733459473
    9. ']' → logprob: -12.876137733459473
    10. '```' → logprob: -13.501137733459473

Token 116: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1270715296268463
    2. '-' → logprob: -2.1270716190338135
    3. '[' → logprob: -9.377071380615234
    4. ' ' → logprob: -10.377071380615234
    5. '   ' → logprob: -11.252071380615234
    6. '<|end|>' → logprob: -12.377071380615234
    7. '<|end|>' → logprob: -13.502071380615234
    8. ']' → logprob: -13.627071380615234
    9. '_' → logprob: -13.877071380615234
    10. ')' → logprob: -14.002071380615234

Token 117: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00032235344406217337
    2. ' ' → logprob: -8.125322341918945
    3. ']' → logprob: -10.625322341918945
    4. '<|end|>' → logprob: -14.000322341918945
    5. '-' → logprob: -14.500322341918945
    6. ' ]' → logprob: -16.125322341918945
    7. '```' → logprob: -16.125322341918945
    8. '<|end|>' → logprob: -16.125322341918945
    9. '   ' → logprob: -16.250322341918945
    10. ')' → logprob: -16.750322341918945

Token 118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011105302110081539
    2. '-' → logprob: -9.375110626220703
    3. ' ' → logprob: -11.000110626220703
    4. ']' → logprob: -11.875110626220703
    5. 'i' → logprob: -13.875110626220703
    6. '   ' → logprob: -14.500110626220703
    7. ')' → logprob: -14.875110626220703
    8. '```' → logprob: -15.375110626220703
    9. '])' → logprob: -15.625110626220703
    10. '0' → logprob: -16.625110626220703

Token 119: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026097820955328643
    2. '<|end|>' → logprob: -8.875261306762695
    3. ')
' → logprob: -9.125261306762695
    4. '       ' → logprob: -11.875261306762695
    5. ' )' → logprob: -13.375261306762695
    6. '<|end|>' → logprob: -14.125261306762695
    7. ')return' → logprob: -14.500261306762695
    8. '}' → logprob: -14.875261306762695
    9. '   ' → logprob: -15.000261306762695
    10. '```' → logprob: -15.000261306762695

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006028342177160084
    2. '
' → logprob: -8.625602722167969
    3. '        
' → logprob: -8.750602722167969
    4. '<|end|>' → logprob: -8.875602722167969
    5. '   ' → logprob: -10.375602722167969
    6. '```' → logprob: -11.125602722167969
    7. '\' → logprob: -11.500602722167969
    8. 'newline' → logprob: -11.500602722167969
    9. '  
' → logprob: -11.625602722167969
    10. '\n' → logprob: -11.750602722167969

Token 121: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07199958711862564
    2. 'self' → logprob: -2.8219995498657227
    3. '#' (adapté à ' #') → logprob: -4.696999549865723
    4. ' self' → logprob: -7.321999549865723
    5. ' #' → logprob: -8.946999549865723
    6. '   ' → logprob: -10.446999549865723
    7. ' ' → logprob: -10.946999549865723
    8. '```' → logprob: -11.321999549865723
    9. '
' → logprob: -12.946999549865723
    10. '        
' → logprob: -13.196999549865723

Token 122: ' Update' (ID: 9152)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6971912384033203
    2. 'self' → logprob: -1.3221912384033203
    3. '       ' → logprob: -1.4471912384033203
    4. ' ' → logprob: -9.07219123840332
    5. '   ' → logprob: -10.44719123840332
    6. '
' → logprob: -10.69719123840332
    7. '	self' → logprob: -11.07219123840332
    8. '        
' → logprob: -11.19719123840332
    9. '```' → logprob: -11.44719123840332
    10. '        ' → logprob: -12.07219123840332

Token 123: ' invers' (ID: 38721)
  Prédit: '_after'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_after' → logprob: -0.22076860070228577
    2. '_in' → logprob: -2.220768690109253
    3. 'in' → logprob: -2.595768690109253
    4. 'after' → logprob: -5.345768451690674
    5. 'self' → logprob: -5.720768451690674
    6. 'After' → logprob: -5.970768451690674
    7. ' after' → logprob: -6.220768451690674
    8. '_before' → logprob: -7.595768451690674
    9. ' self' → logprob: -7.720768451690674
    10. ' invers' → logprob: -8.095768928527832

Token 124: 'ions' (ID: 756)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22256536781787872
    2. 'ion' → logprob: -1.7225654125213623
    3. 'ions' → logprob: -4.722565174102783
    4. 'ersion' → logprob: -4.722565174102783
    5. '_tracker' → logprob: -6.472565174102783
    6. 'tion' → logprob: -7.472565174102783
    7. 'version' → logprob: -8.097565650939941
    8. 'ision' → logprob: -8.097565650939941
    9. '   ' → logprob: -9.347565650939941
    10. 'on' → logprob: -9.347565650939941

Token 125: ' after' (ID: 1934)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013637886382639408
    2. 'self' → logprob: -4.513638019561768
    3. '_' → logprob: -7.513638019561768
    4. '        
' → logprob: -7.763638019561768
    5. '.' → logprob: -8.51363754272461
    6. '
' → logprob: -8.51363754272461
    7. ' self' → logprob: -8.63863754272461
    8. '_after' → logprob: -8.63863754272461
    9. '(self' → logprob: -8.76363754272461
    10. '   ' → logprob: -8.88863754272461

Token 126: ' swap' (ID: 25489)
  Prédit: '_swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_swap' → logprob: -0.0006578696193173528
    2. '_' → logprob: -8.00065803527832
    3. '_after' → logprob: -8.37565803527832
    4. 'swap' → logprob: -9.75065803527832
    5. '_sw' → logprob: -11.37565803527832
    6. ' swap' → logprob: -11.87565803527832
    7. ' _' → logprob: -12.37565803527832
    8. '_before' → logprob: -13.62565803527832
    9. '_update' → logprob: -13.75065803527832
    10. '```' → logprob: -13.87565803527832

Token 127: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013798571308143437
    2. 'self' → logprob: -9.125138282775879
    3. '
' → logprob: -11.250138282775879
    4. '<|end|>' → logprob: -12.250138282775879
    5. '        
' → logprob: -13.000138282775879
    6. ' self' → logprob: -13.000138282775879
    7. ',' → logprob: -13.125138282775879
    8. '   ' → logprob: -14.000138282775879
    9. '      ' → logprob: -14.250138282775879
    10. '```' → logprob: -14.625138282775879

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001370320824207738
    2. 'self' → logprob: -9.000137329101562
    3. '
' → logprob: -12.500137329101562
    4. '        
' → logprob: -12.750137329101562
    5. ' self' → logprob: -13.000137329101562
    6. '```' → logprob: -13.250137329101562
    7. '   ' → logprob: -14.375137329101562
    8. '      ' → logprob: -14.750137329101562
    9. '           ' → logprob: -15.125137329101562
    10. ',' → logprob: -15.250137329101562

Token 129: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33428847789764404
    2. 'self' (adapté à ' self') → logprob: -1.834288477897644
    3. ' self' → logprob: -2.0842885971069336
    4. ' ' → logprob: -11.209288597106934
    5. ' ' → logprob: -12.209288597106934
    6. '   ' → logprob: -12.959288597106934
    7. '```' → logprob: -12.959288597106934
    8. '
' → logprob: -13.334288597106934
    9. '	self' → logprob: -13.459288597106934
    10. '           ' → logprob: -14.084288597106934

Token 130: '.in' (ID: 2250)
  Prédit: '.in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -0.0019310165662318468
    2. '.' → logprob: -6.251931190490723
    3. ' .' → logprob: -13.251931190490723
    4. 'in' → logprob: -14.876931190490723
    5. '.i' → logprob: -17.001930236816406
    6. '.inv' → logprob: -17.001930236816406
    7. '._' → logprob: -17.501930236816406
    8. '.infinity' → logprob: -17.626930236816406
    9. '	in' → logprob: -17.751930236816406
    10. '.inverse' → logprob: -17.751930236816406

Token 131: 'version' (ID: 8924)
  Prédit: 'version'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'version' → logprob: -0.10096041113138199
    2. 'ersion' → logprob: -2.3509604930877686
    3. '_version' → logprob: -7.4759602546691895
    4. 'Version' → logprob: -9.475960731506348
    5. 'ervation' → logprob: -10.725960731506348
    6. 'ver' → logprob: -11.350960731506348
    7. 'ers' → logprob: -11.475960731506348
    8. '[' → logprob: -11.600960731506348
    9. '   ' → logprob: -11.600960731506348
    10. 'v' → logprob: -11.850960731506348

Token 132: '_tracker' (ID: 124388)
  Prédit: '_tracker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tracker' → logprob: -7.822646693966817e-06
    2. 's' → logprob: -12.250007629394531
    3. '_tracking' → logprob: -14.625007629394531
    4. '_manager' → logprob: -15.125007629394531
    5. '_writer' → logprob: -15.125007629394531
    6. 'tracker' → logprob: -15.500007629394531
    7. '_' → logprob: -15.625007629394531
    8. '_track' → logprob: -15.625007629394531
    9. '_counter' → logprob: -15.750007629394531
    10. '_checker' → logprob: -15.875007629394531

Token 133: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -7.465036105713807e-06
    2. '.' → logprob: -11.875007629394531
    3. 'update' → logprob: -15.875007629394531
    4. '.updated' → logprob: -16.37500762939453
    5. '.reset' → logprob: -16.62500762939453
    6. ' .' → logprob: -16.87500762939453
    7. '`.' → logprob: -17.62500762939453
    8. '.swap' → logprob: -17.75000762939453
    9. '.after' → logprob: -17.87500762939453
    10. '.up' → logprob: -18.12500762939453

Token 134: '_after' (ID: 46788)
  Prédit: '_after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_after' → logprob: -1.1041145626222715e-05
    2. '_before' → logprob: -11.500011444091797
    3. '_a' → logprob: -16.375011444091797
    4. '_for' → logprob: -16.500011444091797
    5. '_post' → logprob: -16.625011444091797
    6. '_AFTER' → logprob: -16.750011444091797
    7. '_' → logprob: -16.875011444091797
    8. '_on' → logprob: -16.875011444091797
    9. '_between' → logprob: -17.000011444091797
    10. '_from' → logprob: -17.250011444091797

Token 135: '_swap' (ID: 103784)
  Prédit: '_swap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_swap' → logprob: -4.4849443838757e-06
    2. 'swap' → logprob: -12.625004768371582
    3. '_' → logprob: -14.375004768371582
    4. '_sw' → logprob: -15.125004768371582
    5. '_after' → logprob: -16.250003814697266
    6. '```' → logprob: -17.625003814697266
    7. '_SWAP' → logprob: -18.125003814697266
    8. '_update' → logprob: -18.625003814697266
    9. ' _' → logprob: -18.875003814697266
    10. '_before' → logprob: -19.625003814697266

Token 136: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.001010184409096837
    2. '()' → logprob: -7.126010417938232
    3. '(' → logprob: -8.501009941101074
    4. '(I' → logprob: -14.126009941101074
    5. '(self' → logprob: -14.876009941101074
    6. '(ii' → logprob: -15.126009941101074
    7. ' (' → logprob: -15.501009941101074
    8. '(
' → logprob: -15.626009941101074
    9. '(j' → logprob: -16.37601089477539
    10. '()

' → logprob: -16.50101089477539

Token 137: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04863244667649269
    2. '-' → logprob: -3.0486323833465576
    3. ' ' → logprob: -10.673632621765137
    4. ',' → logprob: -10.923632621765137
    5. '   ' → logprob: -13.423632621765137
    6. '       ' → logprob: -13.923632621765137
    7. ')' → logprob: -14.798632621765137
    8. ' ,' → logprob: -15.048632621765137
    9. ' ' → logprob: -15.923632621765137
    10. '  ' → logprob: -16.17363166809082

Token 138: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021895181853324175
    2. ' ' → logprob: -6.127189636230469
    3. '<|end|>' → logprob: -13.627189636230469
    4. '   ' → logprob: -14.002189636230469
    5. '```' → logprob: -14.814689636230469
    6. ',' → logprob: -14.877189636230469
    7. ')' → logprob: -15.002189636230469
    8. '-' → logprob: -15.252189636230469
    9. '<|end|>' → logprob: -15.377189636230469
    10. '0' → logprob: -16.56468963623047

Token 139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005580356228165329
    2. ' ' → logprob: -7.500557899475098
    3. '   ' → logprob: -13.563057899475098
    4. '<|end|>' → logprob: -14.000557899475098
    5. ',' → logprob: -14.500557899475098
    6. '<|end|>' → logprob: -14.625557899475098
    7. '-' → logprob: -15.000557899475098
    8. ')' → logprob: -15.500557899475098
    9. '```' → logprob: -15.500557899475098
    10. '  ' → logprob: -15.938057899475098

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.084206375409849e-05
    2. ' ,' → logprob: -10.375041007995605
    3. ',j' → logprob: -11.625041007995605
    4. ',
' → logprob: -14.750041007995605
    5. ')' → logprob: -16.00004005432129
    6. '‌,' → logprob: -17.12504005432129
    7. '`,' → logprob: -18.00004005432129
    8. '   ' → logprob: -18.62504005432129
    9. '<|end|>' → logprob: -18.62504005432129
    10. '),' → logprob: -19.00004005432129

Token 141: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.003179259831085801
    2. ' j' → logprob: -5.75317907333374
    3. '   ' → logprob: -14.378179550170898
    4. 'i' → logprob: -15.128179550170898
    5. '       ' → logprob: -15.128179550170898
    6. '	j' → logprob: -15.878179550170898
    7. ')' → logprob: -16.0031795501709
    8. '    ' → logprob: -16.2531795501709
    9. '           ' → logprob: -17.2531795501709
    10. ' ' → logprob: -17.2531795501709

Token 142: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.47547096014022827
    2. ' -' → logprob: -0.9754709601402283
    3. ')' → logprob: -6.600471019744873
    4. ' ' → logprob: -11.475470542907715
    5. '[' → logprob: -11.975470542907715
    6. ',' → logprob: -12.225470542907715
    7. '-)' → logprob: -12.850470542907715
    8. '   ' → logprob: -13.350470542907715
    9. ' )' → logprob: -13.350470542907715
    10. '<|end|>' → logprob: -13.850470542907715

Token 143: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013774730905424803
    2. ' ' → logprob: -9.000137329101562
    3. ')' → logprob: -11.250137329101562
    4. '<|end|>' → logprob: -14.125137329101562
    5. '```' → logprob: -16.000137329101562
    6. '<|end|>' → logprob: -16.125137329101562
    7. '   ' → logprob: -16.125137329101562
    8. '-' → logprob: -16.875137329101562
    9. ',' → logprob: -17.562637329101562
    10. '  ' → logprob: -17.687637329101562

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013905855303164572
    2. ' ' → logprob: -9.250139236450195
    3. ')' → logprob: -10.500139236450195
    4. '-' → logprob: -11.375139236450195
    5. '<|end|>' → logprob: -13.500139236450195
    6. '   ' → logprob: -14.250139236450195
    7. '```' → logprob: -14.500139236450195
    8. ' -' → logprob: -14.750139236450195
    9. '<|end|>' → logprob: -15.625139236450195
    10. '0' → logprob: -16.000139236450195

Token 145: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.811348480870947e-05
    2. ')
' → logprob: -10.00004768371582
    3. '       ' → logprob: -13.50004768371582
    4. ' )' → logprob: -14.37504768371582
    5. '<|end|>' → logprob: -14.37504768371582
    6. ')return' → logprob: -16.62504768371582
    7. '   ' → logprob: -17.25004768371582
    8. ')#' → logprob: -17.37504768371582
    9. ')

' → logprob: -17.75004768371582
    10. ')
' → logprob: -18.12504768371582

Token 146: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: ' is' (ID: 382)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.3105102479457855
    2. ' count' → logprob: -1.435510277748108
    3. 'get' → logprob: -4.310510158538818
    4. 'count' → logprob: -4.810510158538818
    5. ' current' → logprob: -6.560510158538818
    6. ' __' → logprob: -7.185510158538818
    7. ' update' → logprob: -7.185510158538818
    8. ' calculate' → logprob: -7.185510158538818
    9. ' total' → logprob: -7.560510158538818
    10. ' compute' → logprob: -7.560510158538818

Token 149: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.2322237640619278
    2. '_' → logprob: -1.6072237491607666
    3. '_valid' → logprob: -5.857223987579346
    4. ' _' → logprob: -6.732223987579346
    5. '_in' → logprob: -6.982223987579346
    6. '_empty' → logprob: -7.607223987579346
    7. '_pal' → logprob: -8.107223510742188
    8. '_order' → logprob: -8.357223510742188
    9. '_equal' → logprob: -8.482223510742188
    10. '_bal' → logprob: -9.232223510742188

Token 150: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00409502349793911
    2. '(' → logprob: -5.504095077514648
    3. 'self' → logprob: -11.129095077514648
    4. '   ' → logprob: -14.254095077514648
    5. 'def' → logprob: -15.129095077514648
    6. '()' → logprob: -15.129095077514648
    7. ' (' → logprob: -15.254095077514648
    8. '(
' → logprob: -15.254095077514648
    9. '       ' → logprob: -17.12909507751465
    10. ' ' → logprob: -17.12909507751465

Token 151: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.48613813519477844
    2. 'self' → logprob: -1.736138105392456
    3. '):
' → logprob: -2.236138105392456
    4. '(self' → logprob: -2.486138105392456
    5. ')' → logprob: -4.236138343811035
    6. ',' → logprob: -5.986138343811035
    7. '):

' → logprob: -6.736138343811035
    8. '   ' → logprob: -8.486138343811035
    9. '(' → logprob: -9.236138343811035
    10. ' ' → logprob: -9.736138343811035

Token 152: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025538407266139984
    2. 'return' → logprob: -3.775538444519043
    3. ' return' → logprob: -7.150538444519043
    4. 'self' → logprob: -7.650538444519043
    5. '(self' → logprob: -7.900538444519043
    6. '()' → logprob: -8.025538444519043
    7. '   ' → logprob: -8.650538444519043
    8. '(' → logprob: -9.025538444519043
    9. ' self' → logprob: -11.025538444519043
    10. '        ' → logprob: -12.650538444519043

Token 153: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3534422218799591
    2. ' return' → logprob: -1.8534421920776367
    3. 'return' (adapté à ' return') → logprob: -2.8534421920776367
    4. '   ' → logprob: -2.9784421920776367
    5. ' for' → logprob: -3.4784421920776367
    6. 'for' → logprob: -6.728442192077637
    7. '    ' → logprob: -7.978442192077637
    8. ' ' → logprob: -9.853442192077637
    9. '  ' → logprob: -11.228442192077637
    10. '	return' → logprob: -11.728442192077637

Token 154: ' self' (ID: 1051)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.08722617477178574
    2. ' all' → logprob: -2.712226152420044
    3. 'self' → logprob: -4.087226390838623
    4. ' self' → logprob: -7.962226390838623
    5. '   ' → logprob: -12.587225914001465
    6. ' ' → logprob: -13.462225914001465
    7. '	all' → logprob: -13.962225914001465
    8. '(all' → logprob: -15.087225914001465
    9. '  ' → logprob: -15.337225914001465
    10. '.all' → logprob: -15.587225914001465

Token 155: '.in' (ID: 2250)
  Prédit: '.elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.elements' → logprob: -0.0011166424956172705
    2. '.' → logprob: -7.001116752624512
    3. 'elements' → logprob: -8.626116752624512
    4. '.n' → logprob: -11.501116752624512
    5. ' .' → logprob: -11.751116752624512
    6. '.sorted' → logprob: -13.126116752624512
    7. '.is' → logprob: -14.251116752624512
    8. '`.' → logprob: -14.376116752624512
    9. '.tokens' → logprob: -14.501116752624512
    10. '.e' → logprob: -14.626116752624512

Token 156: 'version' (ID: 8924)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9751648306846619
    2. 'sorted' → logprob: -1.6001648902893066
    3. 'elements' → logprob: -2.1001648902893066
    4. 't' → logprob: -2.1001648902893066
    5. 'len' → logprob: -2.8501648902893066
    6. '_sorted' → logprob: -3.6001648902893066
    7. 'versions' → logprob: -3.8501648902893066
    8. 'v' → logprob: -4.350164890289307
    9. 'verted' → logprob: -4.600164890289307
    10. 'lements' → logprob: -4.850164890289307

Token 157: '_tracker' (ID: 124388)
  Prédit: '_tracker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tracker' → logprob: -7.465036105713807e-06
    2. 's' → logprob: -12.750007629394531
    3. '_count' → logprob: -12.875007629394531
    4. '_counter' → logprob: -14.375007629394531
    5. '._' → logprob: -15.000007629394531
    6. '_checker' → logprob: -15.125007629394531
    7. 'tracker' → logprob: -15.250007629394531
    8. '_manager' → logprob: -15.875007629394531
    9. '_track' → logprob: -17.12500762939453
    10. '_tracking' → logprob: -17.12500762939453

Token 158: '.total' (ID: 23374)
  Prédit: '.count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.1137886717915535
    2. '.in' → logprob: -2.863788604736328
    3. '.total' → logprob: -3.113788604736328
    4. '.is' → logprob: -5.988788604736328
    5. '.current' → logprob: -6.488788604736328
    6. '.num' → logprob: -6.863788604736328
    7. '.get' → logprob: -7.363788604736328
    8. '.n' → logprob: -9.488788604736328
    9. '.inv' → logprob: -9.613788604736328
    10. '.size' → logprob: -10.113788604736328

Token 159: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -1.1410170793533325
    2. '_count' → logprob: -1.1410170793533325
    3. '==' → logprob: -1.2660170793533325
    4. ' ==' → logprob: -2.641016960144043
    5. '()' → logprob: -5.516016960144043
    6. '()==' → logprob: -6.391016960144043
    7. 'in' → logprob: -6.891016960144043
    8. 'count' → logprob: -7.766016960144043
    9. '_sorted' → logprob: -8.641016960144043
    10. 'In' → logprob: -9.516016960144043

Token 160: 'versions' (ID: 48579)
  Prédit: 'versions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versions' → logprob: -0.0004883344518020749
    2. 'version' → logprob: -8.12548828125
    3. 'v' → logprob: -8.75048828125
    4. '>' → logprob: -11.87548828125
    5. '==' → logprob: -12.25048828125
    6. 'ers' → logprob: -12.37548828125
    7. 't' → logprob: -12.62548828125
    8. '=' → logprob: -13.00048828125
    9. '```' → logprob: -13.25048828125
    10. 'vs' → logprob: -13.37548828125

Token 161: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.19836261868476868
    2. '==' → logprob: -1.8233625888824463
    3. '()' → logprob: -4.073362827301025
    4. '()==' → logprob: -6.573362827301025
    5. '=' → logprob: -11.323362350463867
    6. ' ()' → logprob: -12.448362350463867
    7. ')' → logprob: -12.698362350463867
    8. ')==' → logprob: -13.323362350463867
    9. '[' → logprob: -13.823362350463867
    10. ' =' → logprob: -13.823362350463867

Token 162: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000488110730657354
    2. ' ' → logprob: -7.62548828125
    3. '   ' → logprob: -16.62548828125
    4. ' ' → logprob: -20.12548828125
    5. '  ' → logprob: -20.25048828125
    6. '000' → logprob: -20.50048828125
    7. '۰' → logprob: -20.75048828125
    8. '00' → logprob: -20.87548828125
    9. ' zero' → logprob: -21.12548828125
    10. '    ' → logprob: -21.50048828125

Token 163: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -19.000001907348633
    4. '000' → logprob: -21.375001907348633
    5. 'zero' → logprob: -21.625001907348633
    6. '۰' → logprob: -21.875001907348633
    7. '00' → logprob: -22.125001907348633
    8. '  ' → logprob: -22.250001907348633
    9. '<|end|>' → logprob: -22.875001907348633
    10. '```' → logprob: -23.375001907348633

Token 164: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 165: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.004109392408281565
    2. ' class' → logprob: -5.7541093826293945
    3. '
' → logprob: -7.3791093826293945
    4. '```' → logprob: -8.879109382629395
    5. '   ' → logprob: -9.004109382629395
    6. '<|end|>' → logprob: -11.004109382629395
    7. '#' → logprob: -12.004109382629395
    8. 'import' → logprob: -12.629109382629395
    9. ',' → logprob: -12.879109382629395
    10. '       ' → logprob: -13.379109382629395

Token 166: ' In' (ID: 730)
  Prédit: ' In'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' In' → logprob: -0.02067011594772339
    2. 'In' → logprob: -3.895670175552368
    3. ' Sequence' → logprob: -9.645669937133789
    4. 'Insertion' → logprob: -11.645669937133789
    5. 'Sequence' → logprob: -11.770669937133789
    6. ' Sorted' → logprob: -12.145669937133789
    7. ' Binary' → logprob: -12.145669937133789
    8. ' Merge' → logprob: -12.520669937133789
    9. ' Bubble' → logprob: -12.645669937133789
    10. ' ' → logprob: -12.770669937133789

Token 167: 'version' (ID: 8924)
  Prédit: 'Tracker'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tracker' → logprob: -0.014616480097174644
    2. 'version' → logprob: -4.2646164894104
    3. ' Tracker' → logprob: -8.139616012573242
    4. 'Tracking' → logprob: -8.889616012573242
    5. 'tracker' → logprob: -11.764616012573242
    6. '_tracker' → logprob: -12.014616012573242
    7. 'Version' → logprob: -12.389616012573242
    8. 'T' → logprob: -13.764616012573242
    9. 'VERSION' → logprob: -14.139616012573242
    10. 'v' → logprob: -14.264616012573242

Token 168: 'Tracker' (ID: 30021)
  Prédit: 'Tracker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tracker' → logprob: -1.5048530030981055e-06
    2. '_tracker' → logprob: -13.750001907348633
    3. ' Tracker' → logprob: -15.250001907348633
    4. 'tracker' → logprob: -17.125001907348633
    5. 'Tracking' → logprob: -17.750001907348633
    6. 'Track' → logprob: -17.875001907348633
    7. '_' → logprob: -18.125001907348633
    8. 'Counter' → logprob: -18.250001907348633
    9. 'Tracked' → logprob: -19.500001907348633
    10. 'T' → logprob: -20.000001907348633

Token 169: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002075933152809739
    2. ':
' → logprob: -9.375207901000977
    3. '(' → logprob: -9.625207901000977
    4. '<|end|>' → logprob: -10.625207901000977
    5. ' :' → logprob: -11.750207901000977
    6. '(object' → logprob: -11.750207901000977
    7. ':**' → logprob: -12.625207901000977
    8. ':def' → logprob: -12.875207901000977
    9. '>:' → logprob: -13.000207901000977
    10. '):' → logprob: -13.125207901000977

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24208301305770874
    2. ' def' → logprob: -1.7420830726623535
    3. ' ' → logprob: -3.7420830726623535
    4. '<|end|>' → logprob: -4.9920830726623535
    5. ' class' → logprob: -5.4920830726623535
    6. '(' → logprob: -6.6170830726623535
    7. 'class' → logprob: -7.1170830726623535
    8. 'def' → logprob: -7.2420830726623535
    9. '    ' → logprob: -7.3670830726623535
    10. '  ' → logprob: -8.117082595825195

Token 171: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.048698872327804565
    2. 'def' (adapté à ' def') → logprob: -3.048698902130127
    3. '   ' → logprob: -9.173698425292969
    4. 'class' → logprob: -12.173698425292969
    5. ' class' → logprob: -14.048698425292969
    6. 'import' → logprob: -14.298698425292969
    7. '```' → logprob: -14.423698425292969
    8. '	def' → logprob: -15.048698425292969
    9. ' ' → logprob: -15.923698425292969
    10. ' import' → logprob: -16.29869842529297

Token 172: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.20256945490837097
    2. ' __' → logprob: -1.7025694847106934
    3. 'init' → logprob: -7.327569484710693
    4. ' def' → logprob: -8.327569007873535
    5. '_init' → logprob: -8.827569007873535
    6. 'def' → logprob: -9.577569007873535
    7. '```' → logprob: -10.452569007873535
    8. '.__' → logprob: -12.577569007873535
    9. ' init' → logprob: -12.827569007873535
    10. '___' → logprob: -13.077569007873535

Token 173: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.512236498361744e-07
    2. ' init' → logprob: -14.500000953674316
    3. 'def' → logprob: -17.125
    4. 'int' → logprob: -18.25
    5. '_init' → logprob: -18.75
    6. 'in' → logprob: -19.875
    7. 'ini' → logprob: -20.0
    8. 'i' → logprob: -20.25
    9. '   ' → logprob: -20.25
    10. '	init' → logprob: -20.625

Token 174: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.18019002676010132
    2. '__(' → logprob: -1.805190086364746
    3. ' (' → logprob: -8.430190086364746
    4. 'self' → logprob: -8.805190086364746
    5. '__(
' → logprob: -10.805190086364746
    6. '_(' → logprob: -11.305190086364746
    7. '<|end|>' → logprob: -11.805190086364746
    8. ' self' → logprob: -11.930190086364746
    9. 'def' → logprob: -11.930190086364746
    10. '__' → logprob: -12.055190086364746

Token 175: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.7689099018462e-05
    2. ' self' → logprob: -9.37508773803711
    3. ',' → logprob: -13.50008773803711
    4. '(self' → logprob: -14.75008773803711
    5. '       ' → logprob: -15.00008773803711
    6. '   ' → logprob: -15.25008773803711
    7. '
' → logprob: -15.50008773803711
    8. ',self' → logprob: -16.37508773803711
    9. '	self' → logprob: -17.12508773803711
    10. ')' → logprob: -17.87508773803711

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023100038524717093
    2. 'self' → logprob: -6.502309799194336
    3. ' ,' → logprob: -7.252309799194336
    4. ',self' → logprob: -9.502309799194336
    5. ' self' → logprob: -11.377309799194336
    6. '(self' → logprob: -11.877309799194336
    7. ',
' → logprob: -13.252309799194336
    8. ' (' → logprob: -13.877309799194336
    9. 'elements' → logprob: -14.127309799194336
    10. ' ' → logprob: -14.377309799194336

Token 177: ' elements' (ID: 8632)
  Prédit: ' elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.13167141377925873
    2. 'elements' → logprob: -2.13167142868042
    3. 'self' → logprob: -6.13167142868042
    4. ' self' → logprob: -6.50667142868042
    5. 'arr' → logprob: -7.13167142868042
    6. ' arr' → logprob: -9.006670951843262
    7. 'array' → logprob: -10.256670951843262
    8. ' array' → logprob: -10.256670951843262
    9. ' data' → logprob: -10.506670951843262
    10. 'data' → logprob: -11.256670951843262

Token 178: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11297627538442612
    2. '):
' → logprob: -2.237976312637329
    3. ',' → logprob: -9.73797607421875
    4. ' ):' → logprob: -9.73797607421875
    5. '):
' → logprob: -10.86297607421875
    6. ' ):
' → logprob: -12.23797607421875
    7. '   ' → logprob: -12.48797607421875
    8. '       ' → logprob: -12.61297607421875
    9. '):

' → logprob: -12.86297607421875
    10. ':' → logprob: -13.73797607421875

Token 179: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002141458389814943
    2. 'self' → logprob: -9.250214576721191
    3. ',' → logprob: -9.875214576721191
    4. '):
' → logprob: -10.625214576721191
    5. ' self' → logprob: -11.750214576721191
    6. '<|end|>' → logprob: -11.750214576721191
    7. '):' → logprob: -12.250214576721191
    8. ':' → logprob: -12.375214576721191
    9. '(self' → logprob: -12.625214576721191
    10. ')' → logprob: -12.750214576721191

Token 180: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6737855076789856
    2. ' self' → logprob: -0.7987855076789856
    3. '       ' → logprob: -3.423785448074341
    4. 'from' → logprob: -5.17378568649292
    5. ' from' → logprob: -6.54878568649292
    6. 'import' → logprob: -7.67378568649292
    7. '   ' → logprob: -9.798785209655762
    8. 'pass' → logprob: -10.173785209655762
    9. ' pass' → logprob: -10.423785209655762
    10. ' ' → logprob: -10.673785209655762

Token 181: '.elements' (ID: 58318)
  Prédit: '.elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.elements' → logprob: -0.0014573780354112387
    2. '.' → logprob: -7.251457214355469
    3. ' =' → logprob: -8.501457214355469
    4. '.n' → logprob: -8.751457214355469
    5. '.sorted' → logprob: -8.751457214355469
    6. 'elements' → logprob: -9.501457214355469
    7. '=' → logprob: -9.751457214355469
    8. '.values' → logprob: -10.501457214355469
    9. '.total' → logprob: -10.751457214355469
    10. '.e' → logprob: -11.626457214355469

Token 182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06254611909389496
    2. '=' → logprob: -2.8125460147857666
    3. ')' → logprob: -7.937546253204346
    4. ',' → logprob: -8.812545776367188
    5. '<|end|>' → logprob: -10.062545776367188
    6. '.' → logprob: -11.812545776367188
    7. '<|end|>' → logprob: -11.937545776367188
    8. '),' → logprob: -13.437545776367188
    9. '   ' → logprob: -13.562545776367188
    10. ' )' → logprob: -13.687545776367188

Token 183: ' elements' (ID: 8632)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.1317152976989746
    2. ' elements' → logprob: -2.1317152976989746
    3. 'list' → logprob: -5.506715297698975
    4. ' list' → logprob: -7.256715297698975
    5. '[' → logprob: -12.006715774536133
    6. '(elements' → logprob: -13.256715774536133
    7. '[]' → logprob: -13.881715774536133
    8. 'element' → logprob: -14.006715774536133
    9. '.elements' → logprob: -14.631715774536133
    10. ' [' → logprob: -15.131715774536133

Token 184: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010542375966906548
    2. '
' → logprob: -4.635542392730713
    3. 'self' → logprob: -7.885542392730713
    4. '<|end|>' → logprob: -8.760541915893555
    5. ' self' → logprob: -9.385541915893555
    6. ',' → logprob: -9.635541915893555
    7. 'import' → logprob: -10.885541915893555
    8. '   ' → logprob: -11.010541915893555
    9. '        
' → logprob: -11.385541915893555
    10. ' ' → logprob: -11.510541915893555

Token 185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007795536890625954
    2. '
' → logprob: -5.007795333862305
    3. 'self' → logprob: -7.382795333862305
    4. ' self' → logprob: -8.507795333862305
    5. ',' → logprob: -9.132795333862305
    6. 'import' → logprob: -9.507795333862305
    7. '<|end|>' → logprob: -10.632795333862305
    8. 'from' → logprob: -10.757795333862305
    9. '        
' → logprob: -12.382795333862305
    10. '   ' → logprob: -12.507795333862305

Token 186: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.007944568060338497
    2. '       ' → logprob: -5.507944583892822
    3. ' self' → logprob: -5.632944583892822
    4. 'from' → logprob: -8.382944107055664
    5. '   ' → logprob: -10.257944107055664
    6. 'n' → logprob: -12.257944107055664
    7. 'import' → logprob: -12.257944107055664
    8. ' ' → logprob: -13.257944107055664
    9. ' from' → logprob: -13.382944107055664
    10. '	self' → logprob: -13.382944107055664

Token 187: '.n' (ID: 1835)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.8461332321166992
    2. '.n' → logprob: -1.2211332321166992
    3. 'n' → logprob: -1.5961332321166992
    4. '.total' → logprob: -3.596133232116699
    5. '.sorted' → logprob: -3.971133232116699
    6. 'sorted' → logprob: -4.221133232116699
    7. 'size' → logprob: -5.971133232116699
    8. 'bit' → logprob: -6.721133232116699
    9. ' n' → logprob: -6.721133232116699
    10. '.bit' → logprob: -7.096133232116699

Token 188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07040151953697205
    2. '=' → logprob: -2.695401430130005
    3. ' ' → logprob: -7.945401668548584
    4. ',' → logprob: -10.070401191711426
    5. '<|end|>' → logprob: -10.195401191711426
    6. '   ' → logprob: -11.945401191711426
    7. ')' → logprob: -11.945401191711426
    8. '  ' → logprob: -12.695401191711426
    9. '    ' → logprob: -12.820401191711426
    10. '<|end|>' → logprob: -12.945401191711426

Token 189: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.029754191637039185
    2. 'len' → logprob: -3.529754161834717
    3. ' self' → logprob: -12.654754638671875
    4. 'self' → logprob: -14.779754638671875
    5. '	len' → logprob: -16.154754638671875
    6. '(len' → logprob: -16.779754638671875
    7. '=len' → logprob: -17.154754638671875
    8. '[len' → logprob: -18.029754638671875
    9. ',len' → logprob: -19.154754638671875
    10. '   ' → logprob: -19.654754638671875

Token 190: '(elements' (ID: 120313)
  Prédit: '(elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(elements' → logprob: -2.176947600673884e-05
    2. 'elements' → logprob: -11.000021934509277
    3. '(' → logprob: -12.250021934509277
    4. '(self' → logprob: -16.00002098083496
    5. '(
' → logprob: -17.12502098083496
    6. ' elements' → logprob: -17.37502098083496
    7. ' (' → logprob: -18.62502098083496
    8. '(element' → logprob: -18.87502098083496
    9. '(points' → logprob: -19.50002098083496
    10. '.elements' → logprob: -20.00002098083496

Token 191: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07064981013536453
    2. ')
' → logprob: -2.6956498622894287
    3. '       ' → logprob: -7.69564962387085
    4. '<|end|>' → logprob: -9.070650100708008
    5. '
' → logprob: -9.445650100708008
    6. ' )' → logprob: -10.570650100708008
    7. ',' → logprob: -11.320650100708008
    8. ')

' → logprob: -12.320650100708008
    9. ' )
' → logprob: -12.320650100708008
    10. 'self' → logprob: -12.570650100708008

Token 192: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020673491526395082
    2. 'self' → logprob: -6.252067565917969
    3. '   ' → logprob: -9.752067565917969
    4. ' self' → logprob: -10.002067565917969
    5. 'from' → logprob: -10.502067565917969
    6. 'import' → logprob: -13.502067565917969
    7. 'def' → logprob: -13.627067565917969
    8. '```' → logprob: -13.752067565917969
    9. ' ' → logprob: -14.252067565917969
    10. '<|end|>' → logprob: -14.377067565917969

Token 193: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.013900915160775185
    2. '       ' → logprob: -4.3889007568359375
    3. ' self' → logprob: -7.6389007568359375
    4. 'from' → logprob: -8.013900756835938
    5. '   ' → logprob: -8.138900756835938
    6. 'def' → logprob: -8.888900756835938
    7. 'class' → logprob: -9.763900756835938
    8. '#' (adapté à ' #') → logprob: -10.138900756835938
    9. 'import' → logprob: -10.638900756835938
    10. '
' → logprob: -11.513900756835938

Token 194: ' We' (ID: 1416)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.043025560677051544
    2. 'from' → logprob: -3.918025493621826
    3. '#' → logprob: -4.043025493621826
    4. 'def' → logprob: -6.293025493621826
    5. 'total' → logprob: -6.793025493621826
    6. 'import' → logprob: -6.918025493621826
    7. ' self' → logprob: -8.168025970458984
    8. 'Initialize' → logprob: -9.293025970458984
    9. 'sorted' → logprob: -9.543025970458984
    10. 'class' → logprob: -9.668025970458984

Token 195: ' track' (ID: 5290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1717509031295776
    2. ' need' → logprob: -1.5467509031295776
    3. '       ' → logprob: -1.7967509031295776
    4. ' initialize' → logprob: -2.046751022338867
    5. 'initialize' → logprob: -3.296751022338867
    6. ' will' → logprob: -3.671751022338867
    7. 'need' → logprob: -3.921751022338867
    8. ' self' → logprob: -3.921751022338867
    9. 'def' → logprob: -4.546751022338867
    10. '   ' → logprob: -4.546751022338867

Token 196: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01482051145285368
    2. ' self' → logprob: -4.889820575714111
    3. 'total' → logprob: -6.139820575714111
    4. 'in' → logprob: -6.139820575714111
    5. 'the' → logprob: -6.264820575714111
    6. ' the' → logprob: -7.764820575714111
    7. 'positions' → logprob: -9.014820098876953
    8. ' total' → logprob: -9.264820098876953
    9. 'current' → logprob: -10.014820098876953
    10. 'a' → logprob: -10.264820098876953

Token 197: ' number' (ID: 2086)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.008471131324768
    2. 'total' → logprob: -1.008471131324768
    3. 'positions' → logprob: -2.0084710121154785
    4. 'self' → logprob: -2.7584710121154785
    5. 'current' → logprob: -3.6334710121154785
    6. ' total' → logprob: -4.7584710121154785
    7. 'bit' → logprob: -4.8834710121154785
    8. ' positions' → logprob: -5.3834710121154785
    9. 'indices' → logprob: -5.5084710121154785
    10. 'position' → logprob: -5.8834710121154785

Token 198: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.5287994146347046
    2. ' of' → logprob: -0.9037994146347046
    3. '_of' → logprob: -5.528799533843994
    4. 's' → logprob: -7.028799533843994
    5. 'self' → logprob: -7.778799533843994
    6. '<|end|>' → logprob: -9.028799057006836
    7. 'ofday' → logprob: -10.153799057006836
    8. '	of' → logprob: -10.278799057006836
    9. ' ' → logprob: -10.778799057006836
    10. '_' → logprob: -10.778799057006836

Token 199: ' adjacent' (ID: 39069)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0446331650018692
    2. 'self' → logprob: -3.669633150100708
    3. 'total' → logprob: -4.544633388519287
    4. ' total' → logprob: -5.919633388519287
    5. ' invers' → logprob: -6.169633388519287
    6. ' self' → logprob: -6.419633388519287
    7. ' in' → logprob: -8.169632911682129
    8. '_in' → logprob: -8.544632911682129
    9. 'elements' → logprob: -9.044632911682129
    10. 'current' → logprob: -9.294632911682129

Token 200: ' invers' (ID: 38721)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.003239505458623171
    2. ' pairs' → logprob: -6.503239631652832
    3. 'pairs' → logprob: -6.628239631652832
    4. ' invers' → logprob: -8.628239631652832
    5. '_in' → logprob: -9.378239631652832
    6. 'elements' → logprob: -9.753239631652832
    7. '-in' → logprob: -10.003239631652832
    8. ' elements' → logprob: -11.378239631652832
    9. 'element' → logprob: -11.753239631652832
    10. '_pairs' → logprob: -12.128239631652832

Token 201: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -3.2855416066013277e-05
    2. 'ion' → logprob: -10.875032424926758
    3. 's' → logprob: -12.000032424926758
    4. 'ers' → logprob: -12.625032424926758
    5. '```' → logprob: -13.250032424926758
    6. 'ors' → logprob: -14.625032424926758
    7. '   ' → logprob: -14.875032424926758
    8. 'es' → logprob: -15.625032424926758
    9. 'ections' → logprob: -16.000032424926758
    10. 'ed' → logprob: -16.000032424926758

Token 202: ' in' (ID: 306)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6316638588905334
    2. ',' → logprob: -1.5066637992858887
    3. ' self' → logprob: -2.3816637992858887
    4. '       ' → logprob: -3.3816637992858887
    5. ' in' → logprob: -3.5066637992858887
    6. ' as' → logprob: -4.131663799285889
    7. ' between' → logprob: -4.131663799285889
    8. ':' → logprob: -4.506663799285889
    9. '(self' → logprob: -4.631663799285889
    10. '.' → logprob: -4.756663799285889

Token 203: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.33609631657600403
    2. 'the' → logprob: -1.7110962867736816
    3. ' the' → logprob: -2.4610962867736816
    4. ' self' → logprob: -4.086096286773682
    5. 'a' → logprob: -7.836096286773682
    6. 'each' → logprob: -7.961096286773682
    7. 'pairs' → logprob: -8.08609676361084
    8. ' a' → logprob: -8.33609676361084
    9. 'total' → logprob: -8.33609676361084
    10. 'O' → logprob: -8.83609676361084

Token 204: ' sequence' (ID: 16281)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.23008903861045837
    2. 'sequence' → logprob: -2.480088949203491
    3. 'self' → logprob: -2.855088949203491
    4. 'initial' → logprob: -3.980088949203491
    5. ' elements' → logprob: -4.35508918762207
    6. 'array' → logprob: -4.60508918762207
    7. 'adj' → logprob: -4.73008918762207
    8. ' sequence' → logprob: -5.35508918762207
    9. 'element' → logprob: -6.85508918762207
    10. 'list' → logprob: -6.85508918762207

Token 205: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03470787778496742
    2. '
' → logprob: -4.284708023071289
    3. 'self' → logprob: -4.784708023071289
    4. ',' → logprob: -5.034708023071289
    5. ' self' → logprob: -5.909708023071289
    6. '<|end|>' → logprob: -6.284708023071289
    7. ',
' → logprob: -8.534708023071289
    8. '.' → logprob: -8.784708023071289
    9. ' and' → logprob: -9.159708023071289
    10. '   ' → logprob: -9.659708023071289

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00997776910662651
    2. '
' → logprob: -5.0099778175354
    3. 'self' → logprob: -6.2599778175354
    4. '<|end|>' → logprob: -7.5099778175354
    5. ' self' → logprob: -8.009977340698242
    6. ',' → logprob: -8.009977340698242
    7. '   ' → logprob: -10.384977340698242
    8. '        
' → logprob: -10.884977340698242
    9. '<|end|>' → logprob: -11.759977340698242
    10. ' ' → logprob: -12.009977340698242

Token 207: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0015542630571871996
    2. '       ' → logprob: -6.876554489135742
    3. ' self' → logprob: -7.751554489135742
    4. '   ' → logprob: -10.126554489135742
    5. 'from' → logprob: -10.251554489135742
    6. 'def' → logprob: -11.626554489135742
    7. '
' → logprob: -12.876554489135742
    8. 'class' → logprob: -13.376554489135742
    9. 'import' → logprob: -14.001554489135742
    10. ' ' → logprob: -14.751554489135742

Token 208: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.09428627043962479
    2. '.total' → logprob: -2.4692862033843994
    3. '.in' → logprob: -5.4692864418029785
    4. 'adj' → logprob: -8.09428596496582
    5. '.' → logprob: -8.84428596496582
    6. '.inv' → logprob: -9.09428596496582
    7. '.positions' → logprob: -9.09428596496582
    8. 'total' → logprob: -9.46928596496582
    9. '.count' → logprob: -9.59428596496582
    10. '.p' → logprob: -10.21928596496582

Token 209: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0036195507273077965
    2. 'jac' → logprob: -5.62861967086792
    3. 'ja' → logprob: -11.253619194030762
    4. '_j' → logprob: -12.628619194030762
    5. 'jec' → logprob: -13.128619194030762
    6. 'acent' → logprob: -15.003619194030762
    7. '
' → logprob: -16.128620147705078
    8. '_' → logprob: -16.378620147705078
    9. '	j' → logprob: -16.378620147705078
    10. '

' → logprob: -16.503620147705078

Token 210: '_in' (ID: 2267)
  Prédit: 'acent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.013092353008687496
    2. 'acency' → logprob: -5.013092517852783
    3. 'ac' → logprob: -5.138092517852783
    4. '_in' → logprob: -9.388092041015625
    5. 'acen' → logprob: -9.638092041015625
    6. '_' → logprob: -10.138092041015625
    7. '_count' → logprob: -10.263092041015625
    8. '```' → logprob: -10.513092041015625
    9. '   ' → logprob: -11.013092041015625
    10. '_ac' → logprob: -11.013092041015625

Token 211: 'versions' (ID: 48579)
  Prédit: 'versions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versions' → logprob: -0.32245874404907227
    2. 'ers' → logprob: -1.4474587440490723
    3. 'version' → logprob: -4.072458744049072
    4. 'ersion' → logprob: -4.197458744049072
    5. 'ex' → logprob: -6.197458744049072
    6. 'v' → logprob: -6.197458744049072
    7. '_versions' → logprob: -7.197458744049072
    8. 'erv' → logprob: -7.322458744049072
    9. 'erse' → logprob: -7.697458744049072
    10. 'er' → logprob: -7.947458744049072

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519516944885254
    2. '=' → logprob: -1.5019516944885254
    3. ' ' → logprob: -10.751951217651367
    4. ',' → logprob: -15.501951217651367
    5. 's' → logprob: -15.501951217651367
    6. '=[]' → logprob: -15.751951217651367
    7. '.' → logprob: -15.876951217651367
    8. '   ' → logprob: -16.376951217651367
    9. '_count' → logprob: -16.376951217651367
    10. '=int' → logprob: -16.626951217651367

Token 213: ' self' (ID: 1051)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1702803373336792
    2. '[' → logprob: -1.9202803373336792
    3. 'set' → logprob: -5.295280456542969
    4. ' ' → logprob: -5.920280456542969
    5. '{}' → logprob: -7.170280456542969
    6. ' [' → logprob: -7.295280456542969
    7. 'sum' → logprob: -7.920280456542969
    8. '[self' → logprob: -8.920280456542969
    9. 'self' → logprob: -9.045280456542969
    10. ' set' → logprob: -9.295280456542969

Token 214: '._' (ID: 2697)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0809009075164795
    2. '.n' → logprob: -1.4559009075164795
    3. '0' → logprob: -2.0809009075164795
    4. '._' → logprob: -2.5809009075164795
    5. '.count' → logprob: -2.7059009075164795
    6. '.ad' → logprob: -2.8309009075164795
    7. '.sum' → logprob: -3.7059009075164795
    8. '.elements' → logprob: -3.8309009075164795
    9. '.' → logprob: -4.080901145935059
    10. '.compute' → logprob: -4.705901145935059

Token 215: 'calculate' (ID: 58453)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.18203392624855042
    2. 'compute' → logprob: -2.0570340156555176
    3. 'calculate' → logprob: -3.3070340156555176
    4. 'initialize' → logprob: -7.057034015655518
    5. 'initial' → logprob: -7.557034015655518
    6. 'init' → logprob: -7.932034015655518
    7. 'pre' → logprob: -9.43203353881836
    8. 'calc' → logprob: -10.18203353881836
    9. 'sum' → logprob: -10.30703353881836
    10. '[' → logprob: -10.43203353881836

Token 216: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.009332549758255482
    2. '_initial' → logprob: -5.884332656860352
    3. '_' → logprob: -6.134332656860352
    4. '_ad' → logprob: -6.384332656860352
    5. '_total' → logprob: -6.634332656860352
    6. '(' → logprob: -7.509332656860352
    7. 'adj' → logprob: -8.009332656860352
    8. '()' → logprob: -8.134332656860352
    9. '_all' → logprob: -9.384332656860352
    10. '_self' → logprob: -10.759332656860352

Token 217: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.013824369758367538
    2. '_in' → logprob: -4.638824462890625
    3. 'ac' → logprob: -6.013824462890625
    4. 'in' → logprob: -7.013824462890625
    5. 'acency' → logprob: -7.763824462890625
    6. 'oint' → logprob: -8.888824462890625
    7. 'ent' → logprob: -10.388824462890625
    8. '   ' → logprob: -10.763824462890625
    9. '```' → logprob: -11.763824462890625
    10. 'adj' → logprob: -11.763824462890625

Token 218: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.018300127238035202
    2. 'in' → logprob: -4.0183000564575195
    3. '_' → logprob: -8.89330005645752
    4. '_ad' → logprob: -12.64330005645752
    5. '_inv' → logprob: -12.89330005645752
    6. ' _' → logprob: -13.01830005645752
    7. 'In' → logprob: -14.14330005645752
    8. '_pairs' → logprob: -14.14330005645752
    9. '_inverse' → logprob: -14.39330005645752
    10. '_adj' → logprob: -14.89330005645752

Token 219: 'versions' (ID: 48579)
  Prédit: 'versions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versions' → logprob: -1.700132997939363e-05
    2. 'v' → logprob: -11.875017166137695
    3. 'vers' → logprob: -12.500017166137695
    4. 'version' → logprob: -13.500017166137695
    5. 'ers' → logprob: -13.875017166137695
    6. '```' → logprob: -14.125017166137695
    7. '_versions' → logprob: -14.250017166137695
    8. 'vs' → logprob: -14.875017166137695
    9. '[' → logprob: -15.125017166137695
    10. '   ' → logprob: -15.250017166137695

Token 220: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.338466093642637e-05
    2. '(' → logprob: -10.125073432922363
    3. '()
' → logprob: -10.750073432922363
    4. ' ()' → logprob: -12.875073432922363
    5. '()

' → logprob: -13.125073432922363
    6. '(elements' → logprob: -13.500073432922363
    7. '()?' → logprob: -13.875073432922363
    8. '().' → logprob: -14.125073432922363
    9. '();' → logprob: -14.250073432922363
    10. '(),' → logprob: -14.375073432922363

Token 221: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7763835787773132
    2. 'def' → logprob: -1.276383638381958
    3. '   ' → logprob: -1.401383638381958
    4. ' def' → logprob: -4.901383399963379
    5. '    
' → logprob: -5.651383399963379
    6. '

' → logprob: -6.901383399963379
    7. '```' → logprob: -7.026383399963379
    8. '	def' → logprob: -7.276383399963379
    9. '<|end|>' → logprob: -7.901383399963379
    10. ' ' → logprob: -8.401383399963379

Token 222: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.496820330619812
    2. 'self' (adapté à ' self') → logprob: -0.996820330619812
    3. '   ' → logprob: -3.9968204498291016
    4. ' self' → logprob: -5.871820449829102
    5. 'def' → logprob: -6.871820449829102
    6. ' ' → logprob: -9.246820449829102
    7. '	self' → logprob: -9.621820449829102
    8. '
' → logprob: -10.746820449829102
    9. '  ' → logprob: -11.621820449829102
    10. '```' → logprob: -11.746820449829102

Token 223: '.total' (ID: 23374)
  Prédit: '.total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -0.0010518652852624655
    2. '.' → logprob: -6.876051902770996
    3. 'total' → logprob: -12.126051902770996
    4. ' .' → logprob: -12.376051902770996
    5. '.current' → logprob: -13.001051902770996
    6. '.next' → logprob: -14.376051902770996
    7. '.tokens' → logprob: -14.376051902770996
    8. '.user' → logprob: -14.501051902770996
    9. '.remaining' → logprob: -15.001051902770996
    10. '   ' → logprob: -15.251051902770996

Token 224: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.00010044389637187123
    2. '_' → logprob: -9.375100135803223
    3. '_ad' → logprob: -12.250100135803223
    4. '_total' → logprob: -13.000100135803223
    5. 'in' → logprob: -13.125100135803223
    6. '_inv' → logprob: -14.000100135803223
    7. ' _' → logprob: -14.125100135803223
    8. 'In' → logprob: -14.375100135803223
    9. '_count' → logprob: -14.375100135803223
    10. '_con' → logprob: -14.750100135803223

Token 225: 'versions' (ID: 48579)
  Prédit: 'versions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versions' → logprob: -0.0019569406285881996
    2. 'v' → logprob: -7.001956939697266
    3. 'version' → logprob: -7.626956939697266
    4. 'in' → logprob: -8.126956939697266
    5. '_versions' → logprob: -9.001956939697266
    6. '_in' → logprob: -9.626956939697266
    7. 'vers' → logprob: -11.001956939697266
    8. '_' → logprob: -11.126956939697266
    9. '_version' → logprob: -11.251956939697266
    10. 'ver' → logprob: -11.751956939697266

Token 226: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006717743817716837
    2. '=' → logprob: -5.006717681884766
    3. ' ' → logprob: -13.256717681884766
    4. '<|end|>' → logprob: -14.881717681884766
    5. ')' → logprob: -16.256717681884766
    6. ',' → logprob: -16.506717681884766
    7. ' +=' → logprob: -16.756717681884766
    8. '<|end|>' → logprob: -17.256717681884766
    9. '=None' → logprob: -17.756717681884766
    10. ':' → logprob: -18.006717681884766

Token 227: ' self' (ID: 1051)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7549628615379333
    2. 'sum' → logprob: -1.1299629211425781
    3. 'self' → logprob: -2.129962921142578
    4. ' sum' → logprob: -2.879962921142578
    5. ' self' → logprob: -3.629962921142578
    6. ' ' → logprob: -5.504962921142578
    7. 'len' → logprob: -6.879962921142578
    8. ' len' → logprob: -9.004962921142578
    9. '(sum' → logprob: -9.754962921142578
    10. '
' → logprob: -10.379962921142578

Token 228: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.01453355047851801
    2. '._' → logprob: -5.014533519744873
    3. '.n' → logprob: -5.764533519744873
    4. 'adj' → logprob: -6.014533519744873
    5. '.elements' → logprob: -7.264533519744873
    6. 'n' → logprob: -7.764533519744873
    7. '_ad' → logprob: -8.389533996582031
    8. 'elements' → logprob: -8.639533996582031
    9. '_adj' → logprob: -8.764533996582031
    10. '.calculate' → logprob: -9.139533996582031

Token 229: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00020401719666551799
    2. 'jac' → logprob: -8.750204086303711
    3. 'jc' → logprob: -10.750204086303711
    4. '_j' → logprob: -12.375204086303711
    5. 'just' → logprob: -12.500204086303711
    6. 'dj' → logprob: -12.875204086303711
    7. '_count' → logprob: -13.250204086303711
    8. 'jec' → logprob: -13.625204086303711
    9. 'jm' → logprob: -13.875204086303711
    10. '_init' → logprob: -14.000204086303711

Token 230: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.0003433296224102378
    2. '_count' → logprob: -8.875343322753906
    3. '_' → logprob: -9.750343322753906
    4. ' _' → logprob: -10.750343322753906
    5. 'in' → logprob: -11.000343322753906
    6. '       ' → logprob: -11.250343322753906
    7. 'acent' → logprob: -11.500343322753906
    8. '_adj' → logprob: -11.750343322753906
    9. '_inv' → logprob: -11.875343322753906
    10. '_tracking' → logprob: -12.125343322753906

Token 231: 'versions' (ID: 48579)
  Prédit: 'versions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versions' → logprob: -0.0018798507517203689
    2. 'version' → logprob: -7.501879692077637
    3. '_versions' → logprob: -7.876879692077637
    4. 'v' → logprob: -8.376879692077637
    5. '   ' → logprob: -9.376879692077637
    6. '_' → logprob: -9.376879692077637
    7. '       ' → logprob: -10.126879692077637
    8. 'ers' → logprob: -10.251879692077637
    9. 'tracker' → logprob: -10.501879692077637
    10. '_tracker' → logprob: -10.626879692077637

Token 232: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36024391651153564
    2. '   ' → logprob: -1.2352439165115356
    3. 'def' → logprob: -4.860243797302246
    4. '

' → logprob: -6.610243797302246
    5. '    
' → logprob: -6.985243797302246
    6. ' def' → logprob: -7.235243797302246
    7. '<|end|>' → logprob: -7.360243797302246
    8. '<|end|>' → logprob: -8.360243797302246
    9. '	def' → logprob: -9.610243797302246
    10. '  
' → logprob: -11.735243797302246

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7689959406852722
    2. '
' → logprob: -0.8939959406852722
    3. 'def' → logprob: -2.143996000289917
    4. '    
' → logprob: -4.893995761871338
    5. ' def' → logprob: -6.393995761871338
    6. '<|end|>' → logprob: -7.518995761871338
    7. '

' → logprob: -7.768995761871338
    8. '        
' → logprob: -9.893996238708496
    9. '	def' → logprob: -10.143996238708496
    10. '<|end|>' → logprob: -10.268996238708496

Token 234: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.059883084148168564
    2. ' def' → logprob: -3.0598831176757812
    3. '   ' → logprob: -4.559883117675781
    4. '
' → logprob: -7.309883117675781
    5. '

' → logprob: -10.059883117675781
    6. ' ' → logprob: -10.559883117675781
    7. '	def' → logprob: -11.184883117675781
    8. '    
' → logprob: -11.434883117675781
    9. '_def' → logprob: -12.809883117675781
    10. '_' → logprob: -13.809883117675781

Token 235: ' _' (ID: 1175)
  Prédit: '_cal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cal' → logprob: -0.004760480485856533
    2. ' _' → logprob: -5.504760265350342
    3. '_update' → logprob: -8.2547607421875
    4. '_' → logprob: -8.5047607421875
    5. '_calc' → logprob: -8.8797607421875
    6. '_get' → logprob: -11.0047607421875
    7. '_find' → logprob: -11.6297607421875
    8. '_add' → logprob: -12.1297607421875
    9. '_continue' → logprob: -12.6297607421875
    10. '_generate' → logprob: -12.8797607421875

Token 236: 'calculate' (ID: 58453)
  Prédit: 'calculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -1.2664456789934775e-06
    2. ' calculate' → logprob: -14.375000953674316
    3. '.calculate' → logprob: -16.000001907348633
    4. 'initialize' → logprob: -16.250001907348633
    5. '_' → logprob: -16.625001907348633
    6. 'compute' → logprob: -16.875001907348633
    7. 'count' → logprob: -16.875001907348633
    8. '```' → logprob: -17.000001907348633
    9. 'def' → logprob: -17.375001907348633
    10. 'calc' → logprob: -17.500001907348633

Token 237: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -2.6895233531831764e-05
    2. '_ad' → logprob: -10.87502670288086
    3. 'adj' → logprob: -12.25002670288086
    4. '_' → logprob: -13.50002670288086
    5. '_total' → logprob: -14.25002670288086
    6. '_self' → logprob: -15.25002670288086
    7. 'self' → logprob: -16.00002670288086
    8. '_in' → logprob: -16.12502670288086
    9. '_initial' → logprob: -16.12502670288086
    10. '_all' → logprob: -16.75002670288086

Token 238: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -5.538490950129926e-05
    2. 'acency' → logprob: -10.250055313110352
    3. 'ac' → logprob: -11.375055313110352
    4. '   ' → logprob: -12.875055313110352
    5. 'acenter' → logprob: -14.000055313110352
    6. 'acet' → logprob: -14.000055313110352
    7. 'acen' → logprob: -14.125055313110352
    8. 'aculate' → logprob: -14.625055313110352
    9. '```' → logprob: -14.750055313110352
    10. '(self' → logprob: -15.125055313110352

Token 239: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.000565541791729629
    2. '_ad' → logprob: -8.000565528869629
    3. '_adj' → logprob: -8.500565528869629
    4. '_inv' → logprob: -11.250565528869629
    5. '_' → logprob: -12.250565528869629
    6. '_inverse' → logprob: -13.750565528869629
    7. '_inter' → logprob: -13.875565528869629
    8. '_dist' → logprob: -14.125565528869629
    9. '_def' → logprob: -14.250565528869629
    10. '_elements' → logprob: -14.625565528869629

Token 240: 'versions' (ID: 48579)
  Prédit: 'versions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versions' → logprob: -0.0018854460213333368
    2. 'ers' → logprob: -6.501885414123535
    3. '_versions' → logprob: -8.876885414123535
    4. '_in' → logprob: -9.126885414123535
    5. '_' → logprob: -9.501885414123535
    6. 'in' → logprob: -10.876885414123535
    7. 'version' → logprob: -11.751885414123535
    8. 'erv' → logprob: -11.751885414123535
    9. 'vers' → logprob: -12.001885414123535
    10. '```' → logprob: -12.876885414123535

Token 241: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00012821101699955761
    2. '(' → logprob: -9.000127792358398
    3. 'self' → logprob: -12.625127792358398
    4. ' (' → logprob: -13.625127792358398
    5. '   ' → logprob: -16.3751277923584
    6. '(Self' → logprob: -16.3751277923584
    7. ' ' → logprob: -17.0001277923584
    8. '(s' → logprob: -17.5001277923584
    9. 'def' → logprob: -17.6251277923584
    10. '(
' → logprob: -17.7501277923584

Token 242: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.23478828370571136
    2. '):' → logprob: -1.7347882986068726
    3. 'self' → logprob: -3.734788179397583
    4. '(self' → logprob: -4.734788417816162
    5. 'def' → logprob: -9.484787940979004
    6. '   ' → logprob: -11.109787940979004
    7. '):
' → logprob: -11.109787940979004
    8. '):

' → logprob: -11.234787940979004
    9. ' ):
' → logprob: -11.484787940979004
    10. ' ' → logprob: -12.109787940979004

Token 243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017667051404714584
    2. 'count' → logprob: -4.642666816711426
    3. '0' → logprob: -5.017666816711426
    4. 'sum' → logprob: -7.642666816711426
    5. ' count' → logprob: -8.892666816711426
    6. 'return' → logprob: -9.142666816711426
    7. 'total' → logprob: -9.267666816711426
    8. '1' → logprob: -9.267666816711426
    9. '   ' → logprob: -9.517666816711426
    10. 'n' → logprob: -9.767666816711426

Token 244: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.03286159783601761
    2. '       ' → logprob: -4.157861709594727
    3. ' count' → logprob: -5.032861709594727
    4. 'inv' → logprob: -5.157861709594727
    5. 'adj' → logprob: -6.532861709594727
    6. 'total' → logprob: -6.657861709594727
    7. 'return' → logprob: -6.907861709594727
    8. 'cnt' → logprob: -8.157861709594727
    9. 'sum' → logprob: -9.032861709594727
    10. ' inv' → logprob: -9.157861709594727

Token 245: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740773141384125
    2. '=' → logprob: -0.9740773439407349
    3. ' ' → logprob: -15.349077224731445
    4. '   ' → logprob: -16.974077224731445
    5. ' =
' → logprob: -18.349077224731445
    6. '_' → logprob: -18.474077224731445
    7. 'def' → logprob: -19.224077224731445
    8. 's' → logprob: -19.599077224731445
    9. '_=' → logprob: -19.599077224731445
    10. '=int' → logprob: -19.724077224731445

Token 246: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018153101205825806
    2. ' ' → logprob: -4.018153190612793
    3. 'sum' → logprob: -12.893153190612793
    4. ' sum' → logprob: -14.268153190612793
    5. '   ' → logprob: -17.393152236938477
    6. '1' → logprob: -18.393152236938477
    7. ' ' → logprob: -18.518152236938477
    8. '  ' → logprob: -19.330652236938477
    9. '
' → logprob: -20.143152236938477
    10. '```' → logprob: -20.143152236938477

Token 247: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0802738870552275e-05
    2. 'sum' → logprob: -11.50001049041748
    3. ' ' → logprob: -14.37501049041748
    4. '1' → logprob: -19.625011444091797
    5. '   ' → logprob: -20.250011444091797
    6. ' sum' → logprob: -20.500011444091797
    7. '
' → logprob: -20.875011444091797
    8. '```' → logprob: -21.250011444091797
    9. '=' → logprob: -21.625011444091797
    10. '2' → logprob: -22.000011444091797

Token 248: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0010584142291918397
    2. '       ' → logprob: -7.126058578491211
    3. ' for' → logprob: -8.751058578491211
    4. 'for' → logprob: -9.876058578491211
    5. '
' → logprob: -10.126058578491211
    6. ' 
' → logprob: -13.876058578491211
    7. '   ' → logprob: -14.376058578491211
    8. '        
' → logprob: -14.501058578491211
    9. '' → logprob: -14.626058578491211
    10. '  
' → logprob: -14.751058578491211

Token 249: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3271855413913727
    2. '       ' → logprob: -1.3271855115890503
    3. ' for' → logprob: -4.82718563079834
    4. 'for' → logprob: -5.20218563079834
    5. '
' → logprob: -8.20218563079834
    6. '   ' → logprob: -11.20218563079834
    7. '\n' → logprob: -11.95218563079834
    8. '' → logprob: -12.20218563079834
    9. '	for' → logprob: -12.45218563079834
    10. '        
' → logprob: -13.07718563079834

Token 250: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5862410068511963
    2. ' for' → logprob: -0.8362410068511963
    3. '       ' → logprob: -4.586240768432617
    4. '
' → logprob: -9.836240768432617
    5. '	for' → logprob: -13.211240768432617
    6. '   ' → logprob: -14.086240768432617
    7. ' ' → logprob: -14.461240768432617
    8. 'n' → logprob: -14.961240768432617
    9. '0' → logprob: -15.961240768432617
    10. '```' → logprob: -16.086240768432617

Token 251: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.38688504695892334
    2. 'i' → logprob: -1.1368850469589233
    3. ' idx' → logprob: -12.636884689331055
    4. ' index' → logprob: -12.886884689331055
    5. ' ' → logprob: -12.886884689331055
    6. 'index' → logprob: -13.386884689331055
    7. 'idx' → logprob: -13.636884689331055
    8. '   ' → logprob: -13.886884689331055
    9. '	i' → logprob: -14.261884689331055
    10. ' self' → logprob: -14.386884689331055

Token 252: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0037156417965888977
    2. 'in' → logprob: -5.628715515136719
    3. ' ' → logprob: -9.128715515136719
    4. 'range' → logprob: -13.378715515136719
    5. ',' → logprob: -13.753715515136719
    6. '+' → logprob: -13.753715515136719
    7. 'n' → logprob: -14.128715515136719
    8. '  ' → logprob: -14.503715515136719
    9. '   ' → logprob: -14.753715515136719
    10. ')' → logprob: -15.628715515136719

Token 253: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931487321853638
    2. 'range' → logprob: -0.6931487321853638
    3. ' ' → logprob: -14.318148612976074
    4. '	range' → logprob: -14.693148612976074
    5. '   ' → logprob: -15.693148612976074
    6. ' xrange' → logprob: -16.06814956665039
    7. '(range' → logprob: -16.31814956665039
    8. '  ' → logprob: -16.69314956665039
    9. ' ' → logprob: -18.94314956665039
    10. '    ' → logprob: -19.19314956665039

Token 254: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06237141788005829
    2. '(' → logprob: -2.8123714923858643
    3. 'self' → logprob: -8.562371253967285
    4. ' self' → logprob: -8.687371253967285
    5. '(len' → logprob: -10.312371253967285
    6. ' (' → logprob: -11.937371253967285
    7. '1' → logprob: -12.687371253967285
    8. ' ' → logprob: -14.562371253967285
    9. '(
' → logprob: -15.062371253967285
    10. '	self' → logprob: -15.812371253967285

Token 255: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.8770502209663391
    2. ' -' → logprob: -1.0020501613616943
    3. '-' → logprob: -2.0020501613616943
    4. '1' → logprob: -3.3770501613616943
    5. 'self' → logprob: -3.3770501613616943
    6. 'n' → logprob: -5.127050399780273
    7. ' ' → logprob: -5.377050399780273
    8. ' self' → logprob: -6.752050399780273
    9. ' n' → logprob: -7.002050399780273
    10. '   ' → logprob: -8.627050399780273

Token 256: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.127041295170784
    2. '-' → logprob: -2.1270413398742676
    3. ' ' → logprob: -10.00204086303711
    4. '1' → logprob: -10.00204086303711
    5. ')' → logprob: -11.37704086303711
    6. '):
' → logprob: -12.37704086303711
    7. '   ' → logprob: -12.37704086303711
    8. '       ' → logprob: -13.62704086303711
    9. '
' → logprob: -14.75204086303711
    10. '):' → logprob: -15.25204086303711

Token 257: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02630714885890484
    2. ' ' → logprob: -3.6513071060180664
    3. '   ' → logprob: -12.276307106018066
    4. '       ' → logprob: -14.401307106018066
    5. ')' → logprob: -15.151307106018066
    6. '```' → logprob: -15.526307106018066
    7. '
' → logprob: -15.651307106018066
    8. '    ' → logprob: -15.838807106018066
    9. '  ' → logprob: -15.963807106018066
    10. '2' → logprob: -16.463808059692383

Token 258: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1888679839321412e-05
    2. ' ' → logprob: -10.750021934509277
    3. 'self' → logprob: -16.25002098083496
    4. '```' → logprob: -16.62502098083496
    5. '
' → logprob: -16.75002098083496
    6. '2' → logprob: -17.43752098083496
    7. 'class' → logprob: -17.56252098083496
    8. 'def' → logprob: -18.00002098083496
    9. ')' → logprob: -18.06252098083496
    10. '   ' → logprob: -18.12502098083496

Token 259: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03015783056616783
    2. '):' → logprob: -3.5301578044891357
    3. ' ):
' → logprob: -7.905158042907715
    4. ' ):' → logprob: -10.655158042907715
    5. '):
' → logprob: -11.280158042907715
    6. '():
' → logprob: -14.530158042907715
    7. '   ' → logprob: -14.655158042907715
    8. '):

' → logprob: -14.780158042907715
    9. '       ' → logprob: -14.905158042907715
    10. '()):
' → logprob: -15.530158042907715

Token 260: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011914180358871818
    2. ' if' → logprob: -7.25119161605835
    3. ':' → logprob: -8.251191139221191
    4. ':
' → logprob: -9.001191139221191
    5. 'if' → logprob: -9.626191139221191
    6. ',' → logprob: -11.376191139221191
    7. '       ' → logprob: -13.126191139221191
    8. '```' → logprob: -13.126191139221191
    9. '          ' → logprob: -13.376191139221191
    10. '            
' → logprob: -13.376191139221191

Token 261: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.28997698426246643
    2. '           ' → logprob: -1.539976954460144
    3. 'if' (adapté à ' if') → logprob: -3.2899770736694336
    4. '               ' → logprob: -10.289977073669434
    5. '
' → logprob: -11.414977073669434
    6. 'count' → logprob: -11.914977073669434
    7. ' count' → logprob: -12.039977073669434
    8. '            ' → logprob: -12.539977073669434
    9. '   ' → logprob: -12.539977073669434
    10. '       ' → logprob: -12.789977073669434

Token 262: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931489706039429
    2. 'self' → logprob: -0.6931489706039429
    3. '(self' → logprob: -14.193148612976074
    4. '	self' → logprob: -14.318148612976074
    5. ' ' → logprob: -15.943148612976074
    6. '   ' → logprob: -16.19314956665039
    7. ' ' → logprob: -16.31814956665039
    8. '[self' → logprob: -16.81814956665039
    9. '       ' → logprob: -17.19314956665039
    10. '           ' → logprob: -17.69314956665039

Token 263: '.elements' (ID: 58318)
  Prédit: '.elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.elements' → logprob: -0.000825229799374938
    2. 'elements' → logprob: -7.12582540512085
    3. '.' → logprob: -11.250824928283691
    4. '.ad' → logprob: -12.750824928283691
    5. ' .' → logprob: -13.250824928283691
    6. ' elements' → logprob: -14.250824928283691
    7. 'self' → logprob: -14.375824928283691
    8. '.edges' → logprob: -15.375824928283691
    9. '(elements' → logprob: -16.000825881958008
    10. '._' → logprob: -16.000825881958008

Token 264: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.466968650580384e-05
    2. '[' → logprob: -9.875054359436035
    3. ' [' → logprob: -13.625054359436035
    4. '[
' → logprob: -13.875054359436035
    5. '```' → logprob: -15.250054359436035
    6. '[self' → logprob: -15.750054359436035
    7. '   ' → logprob: -15.875054359436035
    8. 'i' → logprob: -16.12505531311035
    9. '[I' → logprob: -16.62505531311035
    10. '
' → logprob: -16.87505531311035

Token 265: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.03509997949004173
    2. ' >' → logprob: -3.410099983215332
    3. ']' → logprob: -6.660099983215332
    4. ']>' → logprob: -8.910099983215332
    5. ' ' → logprob: -10.660099983215332
    6. '[' → logprob: -12.160099983215332
    7. '[i' → logprob: -13.785099983215332
    8. '">' → logprob: -13.785099983215332
    9. ' ]' → logprob: -14.160099983215332
    10. '>
' → logprob: -14.160099983215332

Token 266: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6931805610656738
    2. ' >' → logprob: -0.6931805610656738
    3. ' ' → logprob: -10.568180084228516
    4. '[' → logprob: -12.943180084228516
    5. ' >
' → logprob: -13.193180084228516
    6. ' >

' → logprob: -14.318180084228516
    7. '()>' → logprob: -14.943180084228516
    8. '>
' → logprob: -14.943180084228516
    9. '>

' → logprob: -15.318180084228516
    10. '">' → logprob: -15.568180084228516

Token 267: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4287089705467224
    2. ' self' → logprob: -1.0537090301513672
    3. '	self' → logprob: -12.678709030151367
    4. '(self' → logprob: -13.053709030151367
    5. '[self' → logprob: -14.428709030151367
    6. '   ' → logprob: -14.678709030151367
    7. '=self' → logprob: -14.928709030151367
    8. '1' → logprob: -14.928709030151367
    9. ' ' → logprob: -15.053709030151367
    10. '0' → logprob: -15.553709030151367

Token 268: '.elements' (ID: 58318)
  Prédit: '.elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.elements' → logprob: -0.4753214716911316
    2. 'elements' → logprob: -0.9753214716911316
    3. ' elements' → logprob: -7.100321292877197
    4. '[i' → logprob: -8.975321769714355
    5. '.' → logprob: -9.225321769714355
    6. ' .' → logprob: -10.350321769714355
    7. '_elements' → logprob: -10.475321769714355
    8. '1' → logprob: -10.850321769714355
    9. '   ' → logprob: -10.850321769714355
    10. 'lements' → logprob: -10.975321769714355

Token 269: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007998613873496652
    2. '+' → logprob: -7.625799655914307
    3. '[' → logprob: -8.750800132751465
    4. 'i' → logprob: -9.750800132751465
    5. '1' → logprob: -10.000800132751465
    6. '[
' → logprob: -11.125800132751465
    7. '   ' → logprob: -11.875800132751465
    8. 's' → logprob: -11.875800132751465
    9. ']' → logprob: -12.375800132751465
    10. '```' → logprob: -12.500800132751465

Token 270: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.020593391731381416
    2. ' +' → logprob: -3.8955934047698975
    3. '1' → logprob: -10.020593643188477
    4. '   ' → logprob: -12.270593643188477
    5. ' ' → logprob: -14.395593643188477
    6. '+
' → logprob: -14.395593643188477
    7. '[' → logprob: -14.770593643188477
    8. ']' → logprob: -15.520593643188477
    9. 'i' → logprob: -15.770593643188477
    10. '+i' → logprob: -16.145593643188477

Token 271: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.6312321753939614e-05
    2. ' ' → logprob: -10.250036239624023
    3. '
' → logprob: -15.000036239624023
    4. '   ' → logprob: -15.375036239624023
    5. '```' → logprob: -15.687536239624023
    6. '0' → logprob: -16.625036239624023
    7. ']' → logprob: -17.062536239624023
    8. 'def' → logprob: -17.187536239624023
    9. '

' → logprob: -18.500036239624023
    10. '``' → logprob: -18.812536239624023

Token 272: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.610702363715973e-06
    2. ' ' → logprob: -11.625009536743164
    3. '
' → logprob: -15.375009536743164
    4. '```' → logprob: -16.125009536743164
    5. '0' → logprob: -16.250009536743164
    6. '<|end|>' → logprob: -17.000009536743164
    7. '   ' → logprob: -17.125009536743164
    8. ']' → logprob: -18.312509536743164
    9. '

' → logprob: -18.625009536743164
    10. 'def' → logprob: -19.062509536743164

Token 273: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7581917643547058
    2. '):' → logprob: -0.7581917643547058
    3. ':' → logprob: -3.2581918239593506
    4. ':
' → logprob: -4.5081915855407715
    5. ']:' → logprob: -4.8831915855407715
    6. ']:
' → logprob: -5.6331915855407715
    7. '       ' → logprob: -6.5081915855407715
    8. '           ' → logprob: -7.6331915855407715
    9. ')' → logprob: -9.38319206237793
    10. '():
' → logprob: -10.00819206237793

Token 274: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3470577895641327
    2. ':
' → logprob: -1.597057819366455
    3. ':' → logprob: -2.597057819366455
    4. '           ' → logprob: -4.222057819366455
    5. '                   ' → logprob: -7.222057819366455
    6. '):
' → logprob: -7.597057819366455
    7. '              ' → logprob: -9.722057342529297
    8. '                       ' → logprob: -10.097057342529297
    9. ':return' → logprob: -10.222057342529297
    10. '):' → logprob: -10.347057342529297

Token 275: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.07622012495994568
    2. ' count' → logprob: -2.8262200355529785
    3. '               ' → logprob: -4.3262200355529785
    4. '                   ' → logprob: -7.5762200355529785
    5. '1' → logprob: -8.326220512390137
    6. '
' → logprob: -9.076220512390137
    7. '           ' → logprob: -10.576220512390137
    8. ' ' → logprob: -11.576220512390137
    9. '	count' → logprob: -12.201220512390137
    10. '   ' → logprob: -12.326220512390137

Token 276: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3868713676929474
    2. '+=' → logprob: -1.136871337890625
    3. '=' → logprob: -16.136871337890625
    4. ']+=' → logprob: -16.386871337890625
    5. '            ' → logprob: -16.636871337890625
    6. '+' → logprob: -17.136871337890625
    7. '           ' → logprob: -17.636871337890625
    8. '               ' → logprob: -18.136871337890625
    9. '1' → logprob: -18.261871337890625
    10. ' ' → logprob: -18.511871337890625

Token 277: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002185118617489934
    2. ' ' → logprob: -6.127185344696045
    3. ' ' → logprob: -19.252185821533203
    4. '   ' → logprob: -19.252185821533203
    5. '```' → logprob: -19.877185821533203
    6. '
' → logprob: -20.002185821533203
    7. '１' → logprob: -21.689685821533203
    8. '۱' → logprob: -21.814685821533203
    9. '       ' → logprob: -22.064685821533203
    10. '0' → logprob: -22.752185821533203

Token 278: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '```' → logprob: -21.625
    4. '
' → logprob: -22.125
    5. '   ' → logprob: -23.0
    6. '۱' → logprob: -24.25
    7. '2' → logprob: -24.5625
    8. 'def' → logprob: -24.6875
    9. '１' → logprob: -24.875
    10. '-' → logprob: -24.9375

Token 279: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01790946163237095
    2. 'return' → logprob: -4.392909526824951
    3. '
' → logprob: -5.642909526824951
    4. ' return' → logprob: -6.517909526824951
    5. '	return' → logprob: -8.892909049987793
    6. '   ' → logprob: -9.142909049987793
    7. '	' → logprob: -9.517909049987793
    8. '           ' → logprob: -11.642909049987793
    9. '        
' → logprob: -12.392909049987793
    10. '    
' → logprob: -12.392909049987793

Token 280: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023574575781822205
    2. 'return' → logprob: -4.273574352264404
    3. '
' → logprob: -4.898574352264404
    4. ' return' → logprob: -6.398574352264404
    5. '   ' → logprob: -9.148574829101562
    6. '	return' → logprob: -9.398574829101562
    7. '	' → logprob: -10.523574829101562
    8. '           ' → logprob: -11.023574829101562
    9. '
' → logprob: -12.273574829101562
    10. '               ' → logprob: -13.273574829101562

Token 281: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2661527693271637
    2. 'return' (adapté à ' return') → logprob: -1.5161527395248413
    3. ' return' → logprob: -4.391152858734131
    4. '   ' → logprob: -7.141152858734131
    5. '
' → logprob: -7.641152858734131
    6. '	return' → logprob: -7.891152858734131
    7. '	' → logprob: -9.766152381896973
    8. '           ' → logprob: -11.141152381896973
    9. 'def' → logprob: -12.266152381896973
    10. ' ' → logprob: -12.641152381896973

Token 282: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.03804149478673935
    2. ' count' → logprob: -3.288041591644287
    3. '	count' → logprob: -18.163042068481445
    4. '(count' → logprob: -18.663042068481445
    5. '$count' → logprob: -20.413042068481445
    6. '[count' → logprob: -20.538042068481445
    7. '=count' → logprob: -20.913042068481445
    8. 'c' → logprob: -21.913042068481445
    9. 'Count' → logprob: -22.288042068481445
    10. '<count' → logprob: -22.413042068481445

Token 283: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04327217862010002
    2. '   ' → logprob: -3.2932722568511963
    3. '<|end|>' → logprob: -5.543272018432617
    4. 'def' → logprob: -7.418272018432617
    5. '    
' → logprob: -8.293272018432617
    6. '

' → logprob: -8.543272018432617
    7. '<|end|>' → logprob: -9.043272018432617
    8. '```' → logprob: -9.293272018432617
    9. ' def' → logprob: -10.543272018432617
    10. '  
' → logprob: -12.043272018432617

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026424888521432877
    2. 'def' → logprob: -3.7764248847961426
    3. '
' → logprob: -6.276424884796143
    4. ' def' → logprob: -6.776424884796143
    5. '    
' → logprob: -8.9014253616333
    6. '```' → logprob: -11.5264253616333
    7. '	def' → logprob: -12.0264253616333
    8. '

' → logprob: -14.4014253616333
    9. '        
' → logprob: -14.9014253616333
    10. '<|end|>' → logprob: -15.7764253616333

Token 285: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0016212647315114737
    2. '   ' → logprob: -7.001621246337891
    3. ' def' → logprob: -7.251621246337891
    4. '	def' → logprob: -15.12662124633789
    5. '
' → logprob: -15.50162124633789
    6. '```' → logprob: -17.75162124633789
    7. '    
' → logprob: -18.00162124633789
    8. ' ' → logprob: -18.75162124633789
    9. '

' → logprob: -18.87662124633789
    10. '  ' → logprob: -20.12662124633789

Token 286: ' _' (ID: 1175)
  Prédit: ' update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.1278083473443985
    2. 'update' → logprob: -2.1278083324432373
    3. '_update' → logprob: -7.377808570861816
    4. ' _' → logprob: -8.627808570861816
    5. '_' → logprob: -10.002808570861816
    6. ' ' → logprob: -12.127808570861816
    7. '	update' → logprob: -12.127808570861816
    8. ' u' → logprob: -12.502808570861816
    9. ' def' → logprob: -12.877808570861816
    10. '.update' → logprob: -13.377808570861816

Token 287: 'check' (ID: 3416)
  Prédit: 'affected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'affected' → logprob: -1.2955873012542725
    2. 'update' → logprob: -1.5455873012542725
    3. 'get' → logprob: -1.6705873012542725
    4. 'adj' → logprob: -2.7955873012542725
    5. 'check' → logprob: -2.9205873012542725
    6. 'count' → logprob: -3.1705873012542725
    7. 'positions' → logprob: -3.1705873012542725
    8. 'calculate' → logprob: -3.5455873012542725
    9. 'indices' → logprob: -3.6705873012542725
    10. 'neighbors' → logprob: -3.7955873012542725

Token 288: '_pair' (ID: 34819)
  Prédit: '_adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.10966526716947556
    2. '_pair' → logprob: -3.3596651554107666
    3. '_ad' → logprob: -3.7346651554107666
    4. '_and' → logprob: -4.234665393829346
    5. '_positions' → logprob: -4.484665393829346
    6. '_position' → logprob: -5.484665393829346
    7. 'adj' → logprob: -6.109665393829346
    8. '_pairs' → logprob: -6.234665393829346
    9. '(self' → logprob: -6.359665393829346
    10. '_indices' → logprob: -6.484665393829346

Token 289: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000500370399095118
    2. '(' → logprob: -7.625500202178955
    3. 'self' → logprob: -11.375500679016113
    4. '(i' → logprob: -15.500500679016113
    5. '(s' → logprob: -15.625500679016113
    6. ' (' → logprob: -15.625500679016113
    7. 's' → logprob: -15.750500679016113
    8. ' self' → logprob: -17.000499725341797
    9. '_(' → logprob: -17.000499725341797
    10. '(
' → logprob: -17.250499725341797

Token 290: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4103587865829468
    2. ',' → logprob: -1.1603587865829468
    3. 'self' → logprob: -3.9103589057922363
    4. '(' → logprob: -6.660358905792236
    5. ' ,' → logprob: -7.910358905792236
    6. ',self' → logprob: -7.910358905792236
    7. ')' → logprob: -8.160358428955078
    8. '(i' → logprob: -8.535358428955078
    9. ' self' → logprob: -8.660358428955078
    10. ' (' → logprob: -8.785358428955078

Token 291: ' i' (ID: 575)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.32713842391967773
    2. 'i' → logprob: -2.2021384239196777
    3. 'index' → logprob: -2.2021384239196777
    4. ' self' → logprob: -3.4521384239196777
    5. 'idx' → logprob: -4.202138423919678
    6. ' index' → logprob: -5.452138423919678
    7. ' i' → logprob: -5.827138423919678
    8. ' idx' → logprob: -6.077138423919678
    9. '   ' → logprob: -6.702138423919678
    10. 'pos' → logprob: -8.827138900756836

Token 292: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16083461046218872
    2. '):
' → logprob: -2.035834550857544
    3. '):' → logprob: -4.285834789276123
    4. ' ,' → logprob: -6.285834789276123
    5. '   ' → logprob: -6.410834789276123
    6. ' ):
' → logprob: -8.285834312438965
    7. '):
' → logprob: -8.910834312438965
    8. '       ' → logprob: -9.285834312438965
    9. ' ):' → logprob: -9.410834312438965
    10. '+' → logprob: -10.410834312438965

Token 293: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05916650593280792
    2. ':' → logprob: -2.934166431427002
    3. ':
' → logprob: -5.934166431427002
    4. ' if' → logprob: -6.809166431427002
    5. ':return' → logprob: -9.05916690826416
    6. '<|end|>' → logprob: -9.68416690826416
    7. '   ' → logprob: -9.80916690826416
    8. ',' → logprob: -10.05916690826416
    9. 'if' → logprob: -10.18416690826416
    10. ' :' → logprob: -10.30916690826416

Token 294: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2547619938850403
    2. '       ' → logprob: -2.1297619342803955
    3. 'if' → logprob: -2.2547619342803955
    4. 'return' → logprob: -7.629762172698975
    5. ' return' → logprob: -7.629762172698975
    6. '   ' → logprob: -9.004761695861816
    7. '	if' → logprob: -12.004761695861816
    8. ',' → logprob: -12.379761695861816
    9. ':' → logprob: -12.504761695861816
    10. '#' (adapté à ' #') → logprob: -12.754761695861816

Token 295: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16237305104732513
    2. ' if' → logprob: -1.9123730659484863
    3. 'return' → logprob: -6.287373065948486
    4. ' return' → logprob: -8.912372589111328
    5. '       ' → logprob: -9.162372589111328
    6. '   ' → logprob: -10.037372589111328
    7. '	if' → logprob: -13.037372589111328
    8. ' ' → logprob: -15.037372589111328
    9. '    ' → logprob: -15.412372589111328
    10. '           ' → logprob: -15.787372589111328

Token 296: ' adjacent' (ID: 39069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7108615040779114
    2. '0' → logprob: -0.9608615040779114
    3. 'if' → logprob: -2.2108614444732666
    4. ' ' → logprob: -4.210861682891846
    5. '   ' → logprob: -7.585861682891846
    6. ' self' → logprob: -7.585861682891846
    7. 'self' → logprob: -8.210861206054688
    8. ' return' → logprob: -8.335861206054688
    9. 'return' → logprob: -8.710861206054688
    10. ' i' → logprob: -9.960861206054688

Token 297: ' pair' (ID: 10610)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.28147003054618835
    2. 'if' → logprob: -1.6564700603485107
    3. ' pairs' → logprob: -3.2814700603485107
    4. 'pairs' → logprob: -5.156469821929932
    5. ' ' → logprob: -6.781469821929932
    6. '_pairs' → logprob: -6.781469821929932
    7. '_in' → logprob: -7.031469821929932
    8. ' and' → logprob: -7.156469821929932
    9. 'in' → logprob: -7.156469821929932
    10. '0' → logprob: -7.281469821929932

Token 298: ' (' (ID: 350)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0963035598397255
    2. 'if' → logprob: -2.5963034629821777
    3. ' i' → logprob: -5.721303462982178
    4. ' return' → logprob: -6.096303462982178
    5. '(i' → logprob: -6.096303462982178
    6. '       ' → logprob: -6.221303462982178
    7. ' (' → logprob: -6.471303462982178
    8. '   ' → logprob: -6.471303462982178
    9. 'return' → logprob: -6.471303462982178
    10. ' and' → logprob: -7.096303462982178

Token 299: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0035879528149962425
    2. 'self' → logprob: -6.00358772277832
    3. ' i' → logprob: -7.12858772277832
    4. '   ' → logprob: -9.12858772277832
    5. ')' → logprob: -9.25358772277832
    6. ' self' → logprob: -9.75358772277832
    7. ',' → logprob: -11.25358772277832
    8. '       ' → logprob: -12.25358772277832
    9. '[i' → logprob: -12.25358772277832
    10. ')i' → logprob: -12.37858772277832

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05854160711169243
    2. ')' → logprob: -3.9335415363311768
    3. ' ,' → logprob: -4.183541774749756
    4. ' and' → logprob: -5.058541774749756
    5. '   ' → logprob: -5.308541774749756
    6. 'and' → logprob: -5.683541774749756
    7. ' +' → logprob: -5.933541774749756
    8. '+' → logprob: -5.933541774749756
    9. ' ' → logprob: -7.183541774749756
    10. ',i' → logprob: -7.308541774749756

Token 301: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006723183207213879
    2. ' i' → logprob: -5.006723403930664
    3. '   ' → logprob: -11.881723403930664
    4. ')' → logprob: -14.506723403930664
    5. ')i' → logprob: -16.256723403930664
    6. '```' → logprob: -16.256723403930664
    7. '
' → logprob: -16.881723403930664
    8. ' ' → logprob: -16.881723403930664
    9. '(i' → logprob: -17.756723403930664
    10. '	i' → logprob: -17.756723403930664

Token 302: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14874528348445892
    2. ')' → logprob: -2.52374529838562
    3. ' +' → logprob: -2.89874529838562
    4. '   ' → logprob: -6.523745059967041
    5. ' ' → logprob: -7.523745059967041
    6. '),' → logprob: -7.898745059967041
    7. ' )' → logprob: -8.0237455368042
    8. ',' → logprob: -9.5237455368042
    9. 'and' → logprob: -10.1487455368042
    10. ' and' → logprob: -10.1487455368042

Token 303: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.6696149840718135e-05
    2. ')' → logprob: -9.875056266784668
    3. ' ' → logprob: -12.625056266784668
    4. 'i' → logprob: -13.500056266784668
    5. '```' → logprob: -15.250056266784668
    6. '+' → logprob: -15.750056266784668
    7. '   ' → logprob: -16.625057220458984
    8. ')
' → logprob: -17.875057220458984
    9. ')i' → logprob: -18.500057220458984
    10. ' ' → logprob: -19.250057220458984

Token 304: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.042503710836172104
    2. '):' → logprob: -3.667503595352173
    3. '):
' → logprob: -4.167503833770752
    4. ')
' → logprob: -7.667503833770752
    5. ' )' → logprob: -9.417503356933594
    6. '):

' → logprob: -12.042503356933594
    7. '   ' → logprob: -12.042503356933594
    8. '),' → logprob: -12.167503356933594
    9. ' ):' → logprob: -12.667503356933594
    10. ' ):
' → logprob: -12.917503356933594

Token 305: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3282153904438019
    2. '       ' → logprob: -1.5782153606414795
    3. 'if' → logprob: -3.8282153606414795
    4. ':
' → logprob: -3.9532153606414795
    5. ':' → logprob: -4.078215599060059
    6. '<|end|>' → logprob: -5.328215599060059
    7. '   ' → logprob: -5.703215599060059
    8. ',' → logprob: -5.953215599060059
    9. ' and' → logprob: -6.203215599060059
    10. '):
' → logprob: -7.328215599060059

Token 306: ' valid' (ID: 4529)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01834695041179657
    2. ' ' → logprob: -4.143346786499023
    3. ' i' → logprob: -6.768346786499023
    4. 'i' → logprob: -6.768346786499023
    5. ' valid' → logprob: -13.018346786499023
    6. ' ' → logprob: -13.143346786499023
    7. ' (' → logprob: -13.518346786499023
    8. '```' → logprob: -13.643346786499023
    9. '   ' → logprob: -13.893346786499023
    10. '(i' → logprob: -13.893346786499023

Token 307: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9415286779403687
    2. ' if' → logprob: -1.0665286779403687
    3. ':' → logprob: -1.8165286779403687
    4. ':
' → logprob: -2.941528797149658
    5. 'if' → logprob: -3.816528797149658
    6. '   ' → logprob: -4.191528797149658
    7. '<|end|>' → logprob: -5.066528797149658
    8. ' and' → logprob: -5.816528797149658
    9. ',' → logprob: -6.441528797149658
    10. '):
' → logprob: -7.191528797149658

Token 308: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04925258085131645
    2. ' if' → logprob: -3.674252510070801
    3. ':' → logprob: -4.174252510070801
    4. ':
' → logprob: -5.924252510070801
    5. '   ' → logprob: -6.174252510070801
    6. ' and' → logprob: -7.174252510070801
    7. '<|end|>' → logprob: -7.299252510070801
    8. 'if' → logprob: -7.674252510070801
    9. ',' → logprob: -8.0492525100708
    10. '):
' → logprob: -9.7992525100708

Token 309: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4777906537055969
    2. 'if' (adapté à ' if') → logprob: -0.9777906537055969
    3. '       ' → logprob: -5.602790832519531
    4. '   ' → logprob: -11.227790832519531
    5. 'return' → logprob: -13.227790832519531
    6. '	if' → logprob: -13.352790832519531
    7. '```' → logprob: -13.977790832519531
    8. ' return' → logprob: -14.352790832519531
    9. ' ' → logprob: -15.352790832519531
    10. '
' → logprob: -15.852790832519531

Token 310: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1791781336069107
    2. ' ' → logprob: -2.054178237915039
    3. ' i' → logprob: -3.554178237915039
    4. 'i' → logprob: -4.929178237915039
    5. ' not' → logprob: -13.179178237915039
    6. ' ' → logprob: -13.679178237915039
    7. '(i' → logprob: -13.804178237915039
    8. ' (' → logprob: -13.804178237915039
    9. '	i' → logprob: -14.054178237915039
    10. '   ' → logprob: -14.179178237915039

Token 311: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002227098448202014
    2. ' ' → logprob: -6.502227306365967
    3. 'i' → logprob: -7.377227306365967
    4. ' i' → logprob: -9.252226829528809
    5. '   ' → logprob: -13.002226829528809
    6. '(i' → logprob: -15.127226829528809
    7. '  ' → logprob: -16.064727783203125
    8. '(' → logprob: -16.252227783203125
    9. '`' → logprob: -16.502227783203125
    10. '1' → logprob: -16.752227783203125

Token 312: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.20141811668872833
    2. '<=' → logprob: -1.701418161392212
    3. '<' → logprob: -13.576417922973633
    4. ' ' → logprob: -13.701417922973633
    5. ' <' → logprob: -14.451417922973633
    6. '=' → logprob: -14.701417922973633
    7. 'if' → logprob: -14.951417922973633
    8. '   ' → logprob: -15.701417922973633
    9. 'and' → logprob: -15.951417922973633
    10. '```' → logprob: -16.076417922973633

Token 313: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004078401252627373
    2. ' i' → logprob: -5.504078388214111
    3. '   ' → logprob: -17.254077911376953
    4. ' ' → logprob: -17.504077911376953
    5. '	i' → logprob: -18.254077911376953
    6. '  ' → logprob: -20.129077911376953
    7. '_i' → logprob: -21.254077911376953
    8. '(i' → logprob: -21.504077911376953
    9. 'index' → logprob: -21.754077911376953
    10. '    ' → logprob: -21.879077911376953

Token 314: ' <' (ID: 464)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.7447472810745239
    2. '<' → logprob: -1.244747281074524
    3. ' and' → logprob: -1.619747281074524
    4. ' <' → logprob: -3.2447471618652344
    5. '<n' → logprob: -8.994747161865234
    6. '<len' → logprob: -10.244747161865234
    7. ' ' → logprob: -10.494747161865234
    8. '<=' → logprob: -13.369747161865234
    9. '[' → logprob: -13.494747161865234
    10. '<int' → logprob: -13.494747161865234

Token 315: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011749862460419536
    2. ' self' → logprob: -6.7511749267578125
    3. '   ' → logprob: -13.376174926757812
    4. '(self' → logprob: -13.501174926757812
    5. '
' → logprob: -13.626174926757812
    6. '       ' → logprob: -15.126174926757812
    7. 'len' → logprob: -15.751174926757812
    8. '	self' → logprob: -15.876174926757812
    9. '[self' → logprob: -16.626174926757812
    10. '           ' → logprob: -16.626174926757812

Token 316: '.n' (ID: 1835)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2636566162109375
    2. 'n' → logprob: -1.6386566162109375
    3. '.n' → logprob: -3.3886566162109375
    4. ' self' → logprob: -5.8886566162109375
    5. '   ' → logprob: -7.1386566162109375
    6. ' n' → logprob: -9.263656616210938
    7. '       ' → logprob: -10.263656616210938
    8. ' ' → logprob: -11.013656616210938
    9. '.self' → logprob: -11.263656616210938
    10. '.' → logprob: -11.388656616210938

Token 317: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31327155232429504
    2. ' -' → logprob: -1.3132715225219727
    3. ' ' → logprob: -12.188271522521973
    4. '   ' → logprob: -12.688271522521973
    5. '1' → logprob: -13.813271522521973
    6. 'and' → logprob: -15.563271522521973
    7. '       ' → logprob: -15.688271522521973
    8. ' and' → logprob: -16.81327247619629
    9. ')' → logprob: -17.06327247619629
    10. ' ' → logprob: -17.31327247619629

Token 318: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.750021934509277
    4. '```' → logprob: -16.62502098083496
    5. '
' → logprob: -17.37502098083496
    6. '2' → logprob: -17.50002098083496
    7. '       ' → logprob: -18.56252098083496
    8. '۱' → logprob: -19.18752098083496
    9. 'def' → logprob: -19.37502098083496
    10. '<|end|>' → logprob: -19.62502098083496

Token 319: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -16.3750057220459
    4. '۱' → logprob: -17.6875057220459
    5. '2' → logprob: -18.0000057220459
    6. '
' → logprob: -18.0625057220459
    7. '<|end|>' → logprob: -18.1875057220459
    8. '   ' → logprob: -18.5000057220459
    9. '-' → logprob: -19.0000057220459
    10. '١' → logprob: -19.1875057220459

Token 320: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.17518699169158936
    2. ' and' → logprob: -1.9251869916915894
    3. ':' → logprob: -4.425187110900879
    4. 'and' → logprob: -6.550187110900879
    5. '       ' → logprob: -7.175187110900879
    6. '           ' → logprob: -8.050187110900879
    7. '):
' → logprob: -8.925187110900879
    8. ' :
' → logprob: -9.300187110900879
    9. '():
' → logprob: -9.300187110900879
    10. ':return' → logprob: -11.550187110900879

Token 321: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11023151129484177
    2. ':' → logprob: -2.860231399536133
    3. ':
' → logprob: -3.235231399536133
    4. '       ' → logprob: -5.235231399536133
    5. ' return' → logprob: -7.360231399536133
    6. ' :' → logprob: -7.610231399536133
    7. ',' → logprob: -7.860231399536133
    8. ' and' → logprob: -8.360231399536133
    9. ' :
' → logprob: -8.735231399536133
    10. 'return' → logprob: -9.110231399536133

Token 322: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5390183329582214
    2. 'return' (adapté à ' return') → logprob: -1.1640183925628662
    3. ' return' → logprob: -2.414018392562866
    4. 'if' → logprob: -5.039018154144287
    5. ' if' → logprob: -5.164018154144287
    6. '   ' → logprob: -6.539018154144287
    7. '       ' → logprob: -6.664018154144287
    8. '               ' → logprob: -10.914018630981445
    9. ' ' → logprob: -11.164018630981445
    10. '
' → logprob: -12.164018630981445

Token 323: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03150932118296623
    2. ' self' → logprob: -3.7815093994140625
    3. '1' → logprob: -4.9065093994140625
    4. 'int' → logprob: -7.1565093994140625
    5. ' int' → logprob: -10.781509399414062
    6. ' ' → logprob: -10.781509399414062
    7. '(self' → logprob: -11.781509399414062
    8. '   ' → logprob: -14.281509399414062
    9. '[self' → logprob: -14.531509399414062
    10. ' (' → logprob: -14.906509399414062

Token 324: '1' (ID: 16)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08325980603694916
    2. '1' → logprob: -2.5832598209381104
    3. 'int' → logprob: -5.458259582519531
    4. ' self' → logprob: -9.583259582519531
    5. '(self' → logprob: -10.708259582519531
    6. '(' → logprob: -12.708259582519531
    7. ' ' → logprob: -13.208259582519531
    8. '[self' → logprob: -13.958259582519531
    9. '0' → logprob: -14.458259582519531
    10. ' int' → logprob: -14.708259582519531

Token 325: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.061986736953258514
    2. 'if' → logprob: -2.8119866847991943
    3. 'self' → logprob: -11.061986923217773
    4. ' self' → logprob: -13.561986923217773
    5. '           ' → logprob: -14.061986923217773
    6. '1' → logprob: -14.936986923217773
    7. 'int' → logprob: -15.061986923217773
    8. ' ' → logprob: -15.061986923217773
    9. '       ' → logprob: -16.061986923217773
    10. '   ' → logprob: -16.561986923217773

Token 326: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31326258182525635
    2. ' self' → logprob: -1.3132625818252563
    3. '(self' → logprob: -14.563262939453125
    4. '	self' → logprob: -15.813262939453125
    5. '[self' → logprob: -16.438262939453125
    6. ' ' → logprob: -16.813262939453125
    7. '   ' → logprob: -16.938262939453125
    8. ' ' → logprob: -18.563262939453125
    9. 'Self' → logprob: -19.063262939453125
    10. '           ' → logprob: -19.313262939453125

Token 327: '.elements' (ID: 58318)
  Prédit: '.elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.elements' → logprob: -0.0003454753023106605
    2. 'elements' → logprob: -8.000345230102539
    3. '.' → logprob: -12.125345230102539
    4. ' .' → logprob: -12.625345230102539
    5. 'self' → logprob: -14.375345230102539
    6. ' elements' → logprob: -14.875345230102539
    7. '   ' → logprob: -16.62534523010254
    8. '>' → logprob: -17.12534523010254
    9. '.edges' → logprob: -17.37534523010254
    10. '(elements' → logprob: -17.50034523010254

Token 328: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.319370302458992e-06
    2. '[' → logprob: -12.750005722045898
    3. ' [' → logprob: -13.250005722045898
    4. '[
' → logprob: -15.250005722045898
    5. 'i' → logprob: -15.875005722045898
    6. '```' → logprob: -16.2500057220459
    7. '>' → logprob: -18.2500057220459
    8. '   ' → logprob: -18.7500057220459
    9. '
' → logprob: -18.7500057220459
    10. ' i' → logprob: -19.0000057220459

Token 329: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06748117506504059
    2. ']>' → logprob: -3.317481279373169
    3. '>' → logprob: -3.567481279373169
    4. ' >' → logprob: -7.56748104095459
    5. ' ]' → logprob: -8.44248104095459
    6. '[' → logprob: -10.19248104095459
    7. '>]' → logprob: -12.06748104095459
    8. ' ' → logprob: -13.06748104095459
    9. '   ' → logprob: -13.81748104095459
    10. ']>
' → logprob: -14.06748104095459

Token 330: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.05488860234618187
    2. ' >' → logprob: -2.9298884868621826
    3. ' ' → logprob: -13.179888725280762
    4. ']>' → logprob: -13.929888725280762
    5. '[' → logprob: -14.054888725280762
    6. ']' → logprob: -14.304888725280762
    7. '```' → logprob: -14.429888725280762
    8. '   ' → logprob: -15.054888725280762
    9. ')>' → logprob: -15.179888725280762
    10. ')' → logprob: -15.304888725280762

Token 331: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.11282432079315186
    2. 'self' → logprob: -2.2378244400024414
    3. '(self' → logprob: -14.487824440002441
    4. '	self' → logprob: -14.862824440002441
    5. ' ' → logprob: -14.987824440002441
    6. ' ' → logprob: -15.112824440002441
    7. '[self' → logprob: -15.737824440002441
    8. '<|end|>' → logprob: -16.112823486328125
    9. '=self' → logprob: -16.737823486328125
    10. ' 
' → logprob: -16.987823486328125

Token 332: '.elements' (ID: 58318)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elements' → logprob: -1.0824623107910156
    2. 'self' → logprob: -1.2074623107910156
    3. ' self' → logprob: -1.5824623107910156
    4. ' elements' → logprob: -2.5824623107910156
    5. '.elements' → logprob: -3.2074623107910156
    6. '[i' → logprob: -3.4574623107910156
    7. '[self' → logprob: -4.832462310791016
    8. '_elements' → logprob: -7.957462310791016
    9. ' [' → logprob: -8.582462310791016
    10. 'i' → logprob: -8.582462310791016

Token 333: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.429896944202483e-05
    2. 'i' → logprob: -10.125043869018555
    3. '[' → logprob: -13.625043869018555
    4. ' i' → logprob: -14.000043869018555
    5. '+' → logprob: -14.500043869018555
    6. '[
' → logprob: -14.625043869018555
    7. '(i' → logprob: -15.250043869018555
    8. '```' → logprob: -15.500043869018555
    9. ' [' → logprob: -15.625043869018555
    10. '   ' → logprob: -15.625043869018555

Token 334: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.020599577575922012
    2. ' +' → logprob: -3.895599603652954
    3. '1' → logprob: -9.895599365234375
    4. '+
' → logprob: -12.770599365234375
    5. ']' → logprob: -13.395599365234375
    6. '   ' → logprob: -14.020599365234375
    7. ' ' → logprob: -14.270599365234375
    8. ' +
' → logprob: -14.770599365234375
    9. '[' → logprob: -15.020599365234375
    10. '+]' → logprob: -15.270599365234375

Token 335: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008048642775975168
    2. ' ' → logprob: -7.125804901123047
    3. '
' → logprob: -16.000804901123047
    4. '```' → logprob: -16.750804901123047
    5. '0' → logprob: -17.000804901123047
    6. '+' → logprob: -17.125804901123047
    7. '   ' → logprob: -17.375804901123047
    8. ' ' → logprob: -17.375804901123047
    9. ']' → logprob: -18.563304901123047
    10. '`' → logprob: -18.875804901123047

Token 336: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '
' → logprob: -16.750009536743164
    4. '0' → logprob: -17.750009536743164
    5. '```' → logprob: -17.875009536743164
    6. '   ' → logprob: -18.687509536743164
    7. '+' → logprob: -19.187509536743164
    8. '۱' → logprob: -20.000009536743164
    9. '  ' → logprob: -20.187509536743164
    10. '１' → logprob: -20.312509536743164

Token 337: ']' (ID: 60)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.04938444495201111
    2. ']' → logprob: -3.424384355545044
    3. 'else' → logprob: -4.799384593963623
    4. ')' → logprob: -4.924384593963623
    5. '       ' → logprob: -9.799384117126465
    6. '```' → logprob: -11.049384117126465
    7. '}' → logprob: -11.299384117126465
    8. '        ' → logprob: -11.924384117126465
    9. '           ' → logprob: -12.174384117126465
    10. '()' → logprob: -12.549384117126465

Token 338: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0015024791937321424
    2. 'else' → logprob: -6.501502513885498
    3. '	else' → logprob: -16.876502990722656
    4. '        ' → logprob: -17.751502990722656
    5. '<|end|>' → logprob: -18.251502990722656
    6. '       ' → logprob: -18.501502990722656
    7. ' ' → logprob: -18.626502990722656
    8. ' ' → logprob: -19.126502990722656
    9. '_else' → logprob: -19.751502990722656
    10. '```' → logprob: -20.126502990722656

Token 339: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10020667314529419
    2. ' ' → logprob: -2.3502066135406494
    3. ' ' → logprob: -17.60020637512207
    4. '   ' → logprob: -18.72520637512207
    5. '۰' → logprob: -20.72520637512207
    6. ',' → logprob: -21.28770637512207
    7. '  ' → logprob: -21.35020637512207
    8. '           ' → logprob: -21.41270637512207
    9. '
' → logprob: -21.47520637512207
    10. '    ' → logprob: -21.72520637512207

Token 340: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '۰' → logprob: -22.25
    4. '00' → logprob: -25.125
    5. '000' → logprob: -25.25
    6. '０' → logprob: -25.375
    7. '   ' → logprob: -25.375
    8. '<|end|>' → logprob: -25.5
    9. '০' → logprob: -25.75
    10. '٠' → logprob: -25.875

Token 341: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006209139246493578
    2. '<|end|>' → logprob: -5.256209373474121
    3. '
' → logprob: -8.256209373474121
    4. 'return' → logprob: -8.756209373474121
    5. '\n' → logprob: -8.881209373474121
    6. '   ' → logprob: -8.881209373474121
    7. '	' → logprob: -9.256209373474121
    8. ' else' → logprob: -10.256209373474121
    9. '<|end|>' → logprob: -10.381209373474121
    10. ' return' → logprob: -10.631209373474121

Token 342: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09808347374200821
    2. '   ' → logprob: -3.47308349609375
    3. '<|end|>' → logprob: -3.47308349609375
    4. '       ' → logprob: -3.59808349609375
    5. '    
' → logprob: -6.97308349609375
    6. '  
' → logprob: -7.59808349609375
    7. '<|end|>' → logprob: -7.72308349609375
    8. '	return' → logprob: -7.72308349609375
    9. 'def' → logprob: -7.97308349609375
    10. '```' → logprob: -7.97308349609375

Token 343: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03521127626299858
    2. '   ' → logprob: -4.160211086273193
    3. '<|end|>' → logprob: -4.160211086273193
    4. '
' → logprob: -6.785211086273193
    5. '           ' → logprob: -8.035211563110352
    6. '	' → logprob: -8.160211563110352
    7. ' return' → logprob: -8.285211563110352
    8. 'return' (adapté à ' return') → logprob: -8.285211563110352
    9. 'def' → logprob: -8.410211563110352
    10. ' else' → logprob: -8.785211563110352

Token 344: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004078639671206474
    2. ' ' → logprob: -5.5040788650512695
    3. 'None' → logprob: -15.87907886505127
    4. ' None' → logprob: -16.629077911376953
    5. ' ' → logprob: -21.504077911376953
    6. '۰' → logprob: -22.004077911376953
    7. 'False' → logprob: -22.504077911376953
    8. '   ' → logprob: -22.629077911376953
    9. '00' → logprob: -22.629077911376953
    10. '  ' → logprob: -23.004077911376953

Token 345: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.875000953674316
    3. 'None' → logprob: -14.875000953674316
    4. ' None' → logprob: -20.875001907348633
    5. 'False' → logprob: -21.500001907348633
    6. '۰' → logprob: -21.625001907348633
    7. '00' → logprob: -22.875001907348633
    8. '-' → logprob: -23.250001907348633
    9. '
' → logprob: -23.375001907348633
    10. '000' → logprob: -23.875001907348633

Token 346: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 347: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08470771461725235
    2. '
' → logprob: -2.959707736968994
    3. '```' → logprob: -4.209707736968994
    4. ' def' → logprob: -4.709707736968994
    5. 'def' → logprob: -5.334707736968994
    6. '    
' → logprob: -7.959707736968994
    7. '<|end|>' → logprob: -8.709707260131836
    8. '<|end|>' → logprob: -10.209707260131836
    9. '``' → logprob: -10.459707260131836
    10. ',' → logprob: -10.584707260131836

Token 348: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7055183053016663
    2. ' def' → logprob: -0.8305183053016663
    3. 'def' (adapté à ' def') → logprob: -2.8305182456970215
    4. '
' → logprob: -4.5805182456970215
    5. '	def' → logprob: -7.3305182456970215
    6. ' ' → logprob: -8.95551872253418
    7. '```' → logprob: -9.08051872253418
    8. '    
' → logprob: -9.45551872253418
    9. ' 
' → logprob: -9.70551872253418
    10. '+' → logprob: -11.58051872253418

Token 349: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.34880900382995605
    2. ' update' → logprob: -1.223809003829956
    3. '_update' → logprob: -8.098809242248535
    4. ' def' → logprob: -10.473809242248535
    5. 'def' → logprob: -10.598809242248535
    6. '	update' → logprob: -13.098809242248535
    7. '.update' → logprob: -13.473809242248535
    8. ' _' → logprob: -13.598809242248535
    9. ' ' → logprob: -14.348809242248535
    10. '   ' → logprob: -14.723809242248535

Token 350: '_before' (ID: 56638)
  Prédit: '_before'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_before' → logprob: -4.763666947837919e-05
    2. '_after' → logprob: -10.00004768371582
    3. '_' → logprob: -13.25004768371582
    4. '_for' → logprob: -15.87504768371582
    5. '_between' → logprob: -17.12504768371582
    6. ' _' → logprob: -17.12504768371582
    7. '_from' → logprob: -17.25004768371582
    8. '_to' → logprob: -17.37504768371582
    9. '_previous' → logprob: -17.50004768371582
    10. '_prior' → logprob: -17.50004768371582

Token 351: '_swap' (ID: 103784)
  Prédit: '_swap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_swap' → logprob: -1.9146995327901095e-05
    2. '_' → logprob: -11.125019073486328
    3. '_sw' → logprob: -12.500019073486328
    4. 'swap' → logprob: -16.000019073486328
    5. '```' → logprob: -16.250019073486328
    6. '_s' → logprob: -16.625019073486328
    7. ' _' → logprob: -16.750019073486328
    8. '_self' → logprob: -17.000019073486328
    9. '_exchange' → logprob: -17.250019073486328
    10. '\' → logprob: -17.375019073486328

Token 352: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0024855269584804773
    2. '(' → logprob: -6.002485752105713
    3. '(s' → logprob: -12.627485275268555
    4. '(
' → logprob: -13.002485275268555
    5. ' (' → logprob: -13.127485275268555
    6. 'self' → logprob: -13.127485275268555
    7. ' self' → logprob: -16.252485275268555
    8. '(sel' → logprob: -16.377485275268555
    9. '(Self' → logprob: -16.502485275268555
    10. '   ' → logprob: -16.752485275268555

Token 353: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005834118463099003
    2. '(' → logprob: -5.630834102630615
    3. ' (' → logprob: -6.130834102630615
    4. 'self' → logprob: -10.755834579467773
    5. '   ' → logprob: -11.630834579467773
    6. ',' → logprob: -11.630834579467773
    7. '(
' → logprob: -12.005834579467773
    8. ')' → logprob: -13.130834579467773
    9. ' self' → logprob: -13.130834579467773
    10. ' ' → logprob: -13.130834579467773

Token 354: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08016416430473328
    2. ' i' → logprob: -2.5801641941070557
    3. 'self' → logprob: -7.330163955688477
    4. ' self' → logprob: -7.580163955688477
    5. ')' → logprob: -9.830163955688477
    6. 'x' → logprob: -11.080163955688477
    7. 'a' → logprob: -11.205163955688477
    8. '   ' → logprob: -11.580163955688477
    9. ' ' → logprob: -12.330163955688477
    10. ' x' → logprob: -13.205163955688477

Token 355: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014180023572407663
    2. ' ,' → logprob: -8.875142097473145
    3. ',j' → logprob: -14.000142097473145
    4. ',
' → logprob: -14.375142097473145
    5. '<|end|>' → logprob: -16.250141143798828
    6. '):' → logprob: -16.250141143798828
    7. '‌,' → logprob: -16.625141143798828
    8. ',i' → logprob: -16.750141143798828
    9. '   ' → logprob: -16.875141143798828
    10. ')' → logprob: -17.875141143798828

Token 356: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0028613433241844177
    2. ' j' → logprob: -5.877861499786377
    3. 'i' → logprob: -9.877861022949219
    4. '   ' → logprob: -12.877861022949219
    5. ')' → logprob: -13.377861022949219
    6. ' i' → logprob: -14.252861022949219
    7. '):
' → logprob: -16.25286102294922
    8. '    ' → logprob: -16.75286102294922
    9. '	j' → logprob: -16.75286102294922
    10. ' ' → logprob: -17.12786102294922

Token 357: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2520076632499695
    2. '):' → logprob: -1.5020077228546143
    3. '):
' → logprob: -10.127007484436035
    4. '       ' → logprob: -11.127007484436035
    5. ',' → logprob: -11.627007484436035
    6. '   ' → logprob: -11.877007484436035
    7. ':' → logprob: -12.252007484436035
    8. ':
' → logprob: -13.627007484436035
    9. '):

' → logprob: -13.752007484436035
    10. ' ):
' → logprob: -15.252007484436035

Token 358: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42977455258369446
    2. 'for' → logprob: -1.304774522781372
    3. 'indices' → logprob: -3.054774522781372
    4. ' for' → logprob: -4.304774761199951
    5. 'positions' → logprob: -4.679774761199951
    6. 'affected' → logprob: -5.929774761199951
    7. 'indexes' → logprob: -6.554774761199951
    8. '   ' → logprob: -7.054774761199951
    9. ' indices' → logprob: -7.554774761199951
    10. ' positions' → logprob: -7.679774761199951

Token 359: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14820517599582672
    2. 'indices' → logprob: -2.148205280303955
    3. 'affected' → logprob: -4.523205280303955
    4. 'positions' → logprob: -4.773205280303955
    5. '       ' → logprob: -7.273205280303955
    6. 'indexes' → logprob: -7.898205280303955
    7. '#' (adapté à ' #') → logprob: -8.523204803466797
    8. '   ' → logprob: -8.898204803466797
    9. 'pairs' → logprob: -9.148204803466797
    10. 'neighbors' → logprob: -10.023204803466797

Token 360: ' remove' (ID: 6234)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6979869604110718
    2. 'indices' → logprob: -0.8229869604110718
    3. 'affected' → logprob: -3.0729870796203613
    4. 'positions' → logprob: -4.197987079620361
    5. 'indexes' → logprob: -7.447987079620361
    6. '#' → logprob: -7.822987079620361
    7. 'to' → logprob: -8.322986602783203
    8. 'pairs' → logprob: -8.572986602783203
    9. 'neighbors' → logprob: -8.822986602783203
    10. 'idx' → logprob: -9.072986602783203

Token 361: ' invers' (ID: 38721)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6059820055961609
    2. ' for' → logprob: -0.8559820055961609
    3. ' affected' → logprob: -4.480981826782227
    4. ' pairs' → logprob: -5.605981826782227
    5. 'affected' → logprob: -5.605981826782227
    6. 'adj' → logprob: -5.855981826782227
    7. ' self' → logprob: -6.355981826782227
    8. 'indices' → logprob: -6.730981826782227
    9. 'pairs' → logprob: -6.730981826782227
    10. 'self' → logprob: -7.105981826782227

Token 362: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.000642499653622508
    2. 's' → logprob: -7.5006422996521
    3. 'ion' → logprob: -9.875642776489258
    4. 't' → logprob: -10.250642776489258
    5. '```' → logprob: -13.625642776489258
    6. '``' → logprob: -15.000642776489258
    7. '
' → logprob: -15.250642776489258
    8. 'e' → logprob: -15.500642776489258
    9. 'ed' → logprob: -16.250642776489258
    10. 'isions' → logprob: -16.375642776489258

Token 363: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6800102591514587
    2. ' in' → logprob: -1.3050103187561035
    3. ' around' → logprob: -1.8050103187561035
    4. 'for' → logprob: -3.0550103187561035
    5. ' at' → logprob: -6.3050103187561035
    6. ' involving' → logprob: -6.5550103187561035
    7. 'around' → logprob: -6.6800103187561035
    8. ' affected' → logprob: -6.9300103187561035
    9. ' that' → logprob: -6.9300103187561035
    10. ' surrounding' → logprob: -7.3050103187561035

Token 364: ' all' (ID: 722)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1178804636001587
    2. ' positions' → logprob: -1.4928804636001587
    3. 'positions' → logprob: -2.117880344390869
    4. ' i' → logprob: -2.367880344390869
    5. 'indices' → logprob: -2.617880344390869
    6. ' indices' → logprob: -2.867880344390869
    7. 'max' → logprob: -3.992880344390869
    8. 'all' → logprob: -4.492880344390869
    9. 'pos' → logprob: -4.617880344390869
    10. ' all' → logprob: -4.742880344390869

Token 365: ' pairs' (ID: 24702)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' positions' → logprob: -1.1717480421066284
    2. 'indices' → logprob: -1.2967480421066284
    3. ' indices' → logprob: -1.7967480421066284
    4. 'positions' → logprob: -2.171748161315918
    5. ' affected' → logprob: -3.296748161315918
    6. 'idx' → logprob: -3.796748161315918
    7. ' idx' → logprob: -4.421748161315918
    8. 'affected' → logprob: -4.546748161315918
    9. 'adj' → logprob: -4.796748161315918
    10. 'for' → logprob: -4.796748161315918

Token 366: ' that' (ID: 484)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5407718420028687
    2. ' in' → logprob: -1.5407718420028687
    3. 'for' → logprob: -1.6657718420028687
    4. ' that' → logprob: -5.290771961212158
    5. 'in' → logprob: -5.790771961212158
    6. ' of' → logprob: -6.290771961212158
    7. '       ' → logprob: -6.790771961212158
    8. ' around' → logprob: -6.915771961212158
    9. ' involved' → logprob: -8.040771484375
    10. 'indices' → logprob: -8.165771484375

Token 367: ' could' (ID: 2023)
  Prédit: ' could'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' could' → logprob: -0.7892910242080688
    2. 'could' → logprob: -1.1642910242080688
    3. ' might' → logprob: -1.9142910242080688
    4. 'might' → logprob: -3.0392909049987793
    5. ' may' → logprob: -4.039290904998779
    6. ' are' → logprob: -4.914290904998779
    7. ' can' → logprob: -5.789290904998779
    8. 'are' → logprob: -5.914290904998779
    9. 'may' → logprob: -6.289290904998779
    10. ' have' → logprob: -6.289290904998779

Token 368: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.6351771354675293
    2. 'be' → logprob: -0.8851771354675293
    3. ' change' → logprob: -3.5101771354675293
    4. 'change' → logprob: -4.010177135467529
    5. 'aff' → logprob: -5.635177135467529
    6. 'in' → logprob: -6.135177135467529
    7. ' affect' → logprob: -6.385177135467529
    8. 'include' → logprob: -7.885177135467529
    9. ' potentially' → logprob: -8.135177612304688
    10. 'potential' → logprob: -8.385177612304688

Token 369: ' affected' (ID: 18155)
  Prédit: 'affected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'affected' → logprob: -0.08080232888460159
    2. ' affected' → logprob: -2.5808024406433105
    3. 'imp' → logprob: -6.8308024406433105
    4. ' impacted' → logprob: -7.7058024406433105
    5. '   ' → logprob: -9.705801963806152
    6. '```' → logprob: -9.830801963806152
    7. ' ' → logprob: -9.955801963806152
    8. '    ' → logprob: -10.080801963806152
    9. 'in' → logprob: -10.455801963806152
    10. 'aff' → logprob: -10.705801963806152

Token 370: ' by' (ID: 656)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2343696802854538
    2. 'for' → logprob: -1.7343696355819702
    3. '       ' → logprob: -4.60936975479126
    4. 'indices' → logprob: -4.85936975479126
    5. ',' → logprob: -5.98436975479126
    6. ' indices' → logprob: -6.23436975479126
    7. '   ' → logprob: -6.23436975479126
    8. ':' → logprob: -6.35936975479126
    9. ' in' → logprob: -6.73436975479126
    10. '
' → logprob: -6.98436975479126

Token 371: ' elements' (ID: 8632)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7220378518104553
    2. ' i' → logprob: -1.3470377922058105
    3. ' min' → logprob: -1.7220377922058105
    4. 'min' → logprob: -2.5970377922058105
    5. 'max' → logprob: -7.7220377922058105
    6. ' max' → logprob: -8.347038269042969
    7. ' the' → logprob: -9.222038269042969
    8. ' ' → logprob: -10.659538269042969
    9. '   ' → logprob: -10.972038269042969
    10. 'the' → logprob: -11.097038269042969

Token 372: ' i' (ID: 575)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.5768607258796692
    2. '[i' → logprob: -1.0768606662750244
    3. ' in' → logprob: -3.3268606662750244
    4. '[min' → logprob: -3.7018606662750244
    5. '   ' → logprob: -4.4518609046936035
    6. 'at' → logprob: -4.9518609046936035
    7. ' i' → logprob: -5.4518609046936035
    8. 'i' → logprob: -5.5768609046936035
    9. '[max' → logprob: -5.8268609046936035
    10. 'in' → logprob: -5.9518609046936035

Token 373: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.8217265009880066
    2. ' and' → logprob: -1.4467265605926514
    3. ',' → logprob: -1.6967265605926514
    4. '-' → logprob: -2.1967265605926514
    5. ' or' → logprob: -4.321726322174072
    6. ' -' → logprob: -5.196726322174072
    7. 'or' → logprob: -5.571726322174072
    8. '   ' → logprob: -6.071726322174072
    9. ' ' → logprob: -6.196726322174072
    10. ' ,' → logprob: -6.571726322174072

Token 374: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.69472736120224
    2. ' j' → logprob: -0.69472736120224
    3. ' i' → logprob: -6.944727420806885
    4. 'i' → logprob: -7.444727420806885
    5. ' ' → logprob: -11.069726943969727
    6. '   ' → logprob: -12.194726943969727
    7. '	j' → logprob: -12.194726943969727
    8. ' ' → logprob: -13.694726943969727
    9. '```' → logprob: -13.819726943969727
    10. ',' → logprob: -14.444726943969727

Token 375: ' before' (ID: 2254)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8011606335639954
    2. ' for' → logprob: -0.8011606335639954
    3. 'for' → logprob: -2.6761605739593506
    4. ':' → logprob: -4.92616081237793
    5. 'indices' → logprob: -5.05116081237793
    6. ':
' → logprob: -5.17616081237793
    7. ',' → logprob: -5.42616081237793
    8. '
' → logprob: -5.80116081237793
    9. ' indices' → logprob: -5.92616081237793
    10. '   ' → logprob: -6.80116081237793

Token 376: ' swap' (ID: 25489)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6365979909896851
    2. 'swap' → logprob: -1.511597990989685
    3. ' the' → logprob: -1.886597990989685
    4. 'sw' → logprob: -3.2615981101989746
    5. ' swap' → logprob: -3.3865981101989746
    6. ' swapping' → logprob: -3.6365981101989746
    7. '_swap' → logprob: -9.511597633361816
    8. ' swaps' → logprob: -9.761597633361816
    9. '	swap' → logprob: -10.261597633361816
    10. '```' → logprob: -11.011597633361816

Token 377: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012991511262953281
    2. ' for' → logprob: -5.262991428375244
    3. '
' → logprob: -6.012991428375244
    4. 'for' → logprob: -6.637991428375244
    5. ',' → logprob: -6.887991428375244
    6. ':' → logprob: -7.387991428375244
    7. 'indices' → logprob: -7.387991428375244
    8. ':
' → logprob: -7.387991428375244
    9. '   ' → logprob: -8.137991905212402
    10. '        
' → logprob: -8.637991905212402

Token 378: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022018736228346825
    2. ' for' → logprob: -4.272018909454346
    3. 'for' → logprob: -5.022018909454346
    4. 'indices' → logprob: -7.897018909454346
    5. ',' → logprob: -8.272018432617188
    6. '   ' → logprob: -8.897018432617188
    7. '
' → logprob: -8.897018432617188
    8. 'positions' → logprob: -10.022018432617188
    9. '        
' → logprob: -10.272018432617188
    10. ':
' → logprob: -10.522018432617188

Token 379: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09549546241760254
    2. ' for' → logprob: -2.5954954624176025
    3. 'indices' → logprob: -4.470495223999023
    4. 'affected' → logprob: -5.970495223999023
    5. ' indices' → logprob: -7.095495223999023
    6. ' affected' → logprob: -7.470495223999023
    7. '       ' → logprob: -7.595495223999023
    8. 'positions' → logprob: -7.845495223999023
    9. ' positions' → logprob: -9.470495223999023
    10. 'indexes' → logprob: -10.470495223999023

Token 380: ' affected' (ID: 18155)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11328298598527908
    2. 'indices' → logprob: -2.8632829189300537
    3. ' for' → logprob: -3.8632829189300537
    4. 'affected' → logprob: -3.8632829189300537
    5. 'positions' → logprob: -5.363283157348633
    6. ' indices' → logprob: -6.738283157348633
    7. ' affected' → logprob: -6.738283157348633
    8. ' positions' → logprob: -7.988283157348633
    9. '       ' → logprob: -8.488283157348633
    10. 'indexes' → logprob: -8.738283157348633

Token 381: ' indices' (ID: 30378)
  Prédit: '_indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.16112221777439117
    2. ' =' → logprob: -2.9111223220825195
    3. '_positions' → logprob: -3.0361223220825195
    4. '_pairs' → logprob: -3.4111223220825195
    5. 'indices' → logprob: -5.2861223220825195
    6. '=' → logprob: -6.4111223220825195
    7. '_' → logprob: -6.4111223220825195
    8. '_indexes' → logprob: -6.5361223220825195
    9. '   ' → logprob: -6.6611223220825195
    10. ' indices' → logprob: -6.7861223220825195

Token 382: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3485413193702698
    2. '=' → logprob: -1.223541259765625
    3. 's' → logprob: -10.598541259765625
    4. '=
' → logprob: -11.098541259765625
    5. 'range' → logprob: -11.473541259765625
    6. ' are' → logprob: -11.723541259765625
    7. '   ' → logprob: -11.973541259765625
    8. 'for' → logprob: -11.973541259765625
    9. ' in' → logprob: -12.723541259765625
    10. 'are' → logprob: -12.973541259765625

Token 383: ' neighbors' (ID: 31655)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.6610766649246216
    2. ' set' → logprob: -0.7860766649246216
    3. '{i' → logprob: -4.036076545715332
    4. '{' → logprob: -4.786076545715332
    5. '   ' → logprob: -7.161076545715332
    6. 'i' → logprob: -8.036076545715332
    7. ' {' → logprob: -8.536076545715332
    8. ' i' → logprob: -8.661076545715332
    9. 'sorted' → logprob: -8.911076545715332
    10. 'for' → logprob: -8.911076545715332

Token 384: ' of' (ID: 328)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18104282021522522
    2. 'for' → logprob: -2.4310429096221924
    3. 'indices' → logprob: -3.5560429096221924
    4. ':' → logprob: -4.556042671203613
    5. '       ' → logprob: -4.556042671203613
    6. '   ' → logprob: -4.681042671203613
    7. ' indices' → logprob: -5.181042671203613
    8. ',' → logprob: -5.556042671203613
    9. 's' → logprob: -5.681042671203613
    10. '{' → logprob: -6.806042671203613

Token 385: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18769142031669617
    2. ' i' → logprob: -1.8126914501190186
    3. 'min' → logprob: -5.4376912117004395
    4. ' min' → logprob: -5.6876912117004395
    5. 'max' → logprob: -9.937691688537598
    6. ' ' → logprob: -10.562691688537598
    7. '   ' → logprob: -10.687691688537598
    8. ' max' → logprob: -10.687691688537598
    9. '{i' → logprob: -10.937691688537598
    10. '	i' → logprob: -11.812691688537598

Token 386: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.49431177973747253
    2. ',' → logprob: -1.744311809539795
    3. ' or' → logprob: -2.619311809539795
    4. 'and' → logprob: -2.744311809539795
    5. ' ' → logprob: -3.619311809539795
    6. '   ' → logprob: -3.994311809539795
    7. '-' → logprob: -4.119311809539795
    8. ' -' → logprob: -5.369311809539795
    9. ' ,' → logprob: -5.494311809539795
    10. 'or' → logprob: -6.619311809539795

Token 387: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4355447590351105
    2. 'i' → logprob: -1.185544729232788
    3. ' j' → logprob: -3.685544729232788
    4. ' i' → logprob: -3.810544729232788
    5. ' ' → logprob: -10.060544967651367
    6. '```' → logprob: -10.310544967651367
    7. '(i' → logprob: -10.498044967651367
    8. '   ' → logprob: -10.685544967651367
    9. '[' → logprob: -10.873044967651367
    10. '[i' → logprob: -10.998044967651367

Token 388: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1046508327126503
    2. 'indices' → logprob: -3.1046507358551025
    3. ' for' → logprob: -3.7296507358551025
    4. 'for' → logprob: -4.604650974273682
    5. ',' → logprob: -5.229650974273682
    6. '
' → logprob: -5.854650974273682
    7. 'affected' → logprob: -5.854650974273682
    8. ' indices' → logprob: -5.979650974273682
    9. 'indexes' → logprob: -6.354650974273682
    10. '   ' → logprob: -6.729650974273682

Token 389: ' plus' (ID: 2932)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20182697474956512
    2. 'for' → logprob: -2.701827049255371
    3. ' indices' → logprob: -2.951827049255371
    4. 'indices' → logprob: -3.576827049255371
    5. '       ' → logprob: -4.076827049255371
    6. 'indexes' → logprob: -5.076827049255371
    7. ' {' → logprob: -5.451827049255371
    8. '{' → logprob: -6.201827049255371
    9. ' including' → logprob: -6.451827049255371
    10. ' indexes' → logprob: -6.576827049255371

Token 390: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5986291170120239
    2. ' i' → logprob: -0.8486291170120239
    3. ' the' → logprob: -4.973628997802734
    4. ' min' → logprob: -5.473628997802734
    5. 'min' → logprob: -5.723628997802734
    6. '{i' → logprob: -5.723628997802734
    7. '{' → logprob: -6.223628997802734
    8. ' {' → logprob: -6.848628997802734
    9. 'the' → logprob: -7.723628997802734
    10. ' [' → logprob: -8.473628997802734

Token 391: ' and' (ID: 326)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.36209309101104736
    2. 'for' → logprob: -1.8620930910110474
    3. '       ' → logprob: -2.737092971801758
    4. ',' → logprob: -2.862092971801758
    5. ' ,' → logprob: -4.612092971801758
    6. 'indices' → logprob: -4.737092971801758
    7. ' indices' → logprob: -5.612092971801758
    8. '   ' → logprob: -6.112092971801758
    9. ' and' → logprob: -8.237092971801758
    10. ',
' → logprob: -8.487092971801758

Token 392: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.22550813853740692
    2. ' j' → logprob: -1.6005080938339233
    3. ' ' → logprob: -9.850507736206055
    4. ' i' → logprob: -11.600507736206055
    5. '   ' → logprob: -11.600507736206055
    6. 'i' → logprob: -12.475507736206055
    7. ' the' → logprob: -12.725507736206055
    8. ' their' → logprob: -12.850507736206055
    9. ' ' → logprob: -12.850507736206055
    10. '	j' → logprob: -12.975507736206055

Token 393: ' themselves' (ID: 9247)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5540087819099426
    2. '       ' → logprob: -1.4290087223052979
    3. 'for' → logprob: -2.054008722305298
    4. 'indices' → logprob: -3.304008722305298
    5. ' indices' → logprob: -4.304008960723877
    6. ',' → logprob: -5.929008960723877
    7. '   ' → logprob: -6.179008960723877
    8. '_indices' → logprob: -7.804008960723877
    9. 'indexes' → logprob: -7.929008960723877
    10. ' affected' → logprob: -8.554008483886719

Token 394: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12291032820940018
    2. ' for' → logprob: -2.997910261154175
    3. 'indices' → logprob: -3.497910261154175
    4. 'for' → logprob: -3.622910261154175
    5. '
' → logprob: -5.872910499572754
    6. 'affected' → logprob: -6.497910499572754
    7. ' indices' → logprob: -6.622910499572754
    8. 'indexes' → logprob: -7.122910499572754
    9. '   ' → logprob: -7.622910499572754
    10. ',' → logprob: -7.622910499572754

Token 395: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.057360511273145676
    2. 'indices' → logprob: -3.9323604106903076
    3. 'for' → logprob: -4.182360649108887
    4. ' for' → logprob: -4.182360649108887
    5. 'affected' → logprob: -6.432360649108887
    6. ' indices' → logprob: -6.682360649108887
    7. '
' → logprob: -6.932360649108887
    8. ' affected' → logprob: -7.557360649108887
    9. '   ' → logprob: -7.682360649108887
    10. 'indexes' → logprob: -8.432360649108887

Token 396: ' affected' (ID: 18155)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.9437770247459412
    2. 'for' → logprob: -1.443777084350586
    3. '       ' → logprob: -1.943777084350586
    4. ' for' → logprob: -2.318777084350586
    5. 'affected' (adapté à ' affected') → logprob: -2.818777084350586
    6. ' indices' → logprob: -3.068777084350586
    7. ' affected' → logprob: -3.818777084350586
    8. 'positions' → logprob: -6.818777084350586
    9. 'indexes' → logprob: -6.943777084350586
    10. ' to' → logprob: -7.068777084350586

Token 397: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06229289248585701
    2. '_indices' → logprob: -3.0622928142547607
    3. '=' → logprob: -4.31229305267334
    4. '_' → logprob: -9.68729305267334
    5. '_idxs' → logprob: -10.06229305267334
    6. '_indexes' → logprob: -10.81229305267334
    7. '_positions' → logprob: -10.81229305267334
    8. 'indices' → logprob: -10.93729305267334
    9. '   ' → logprob: -10.93729305267334
    10. 's' → logprob: -11.81229305267334

Token 398: ' set' (ID: 920)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.10235781967639923
    2. 'set' → logprob: -2.852357864379883
    3. ' {' → logprob: -3.602357864379883
    4. ' set' → logprob: -4.977357864379883
    5. '{i' → logprob: -5.227357864379883
    6. '{
' → logprob: -9.977357864379883
    7. '{s' → logprob: -12.102357864379883
    8. '{x' → logprob: -12.602357864379883
    9. '   ' → logprob: -12.977357864379883
    10. 'list' → logprob: -13.227357864379883

Token 399: '()
' (ID: 1234)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0019408921943977475
    2. '({' → logprob: -7.251940727233887
    3. '(i' → logprob: -7.626940727233887
    4. '()' → logprob: -7.751940727233887
    5. '()
' → logprob: -8.626940727233887
    6. '([
' → logprob: -9.126940727233887
    7. '{' → logprob: -11.626940727233887
    8. '(' → logprob: -12.501940727233887
    9. '{i' → logprob: -12.501940727233887
    10. '((' → logprob: -13.001940727233887

Token 400: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2641259729862213
    2. ' affected' → logprob: -2.5141260623931885
    3. '```' → logprob: -2.8891260623931885
    4. '   ' → logprob: -3.3891260623931885
    5. 'affected' → logprob: -4.264125823974609
    6. '{' → logprob: -4.639125823974609
    7. ' for' → logprob: -4.764125823974609
    8. '[' → logprob: -5.264125823974609
    9. '        
' → logprob: -5.264125823974609
    10. '``' → logprob: -5.764125823974609

Token 401: ' for' (ID: 395)
  Prédit: 'affected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'affected' → logprob: -0.7908791303634644
    2. 'for' (adapté à ' for') → logprob: -1.6658791303634644
    3. ' affected' → logprob: -1.9158791303634644
    4. ' for' → logprob: -1.9158791303634644
    5. '       ' → logprob: -2.790879249572754
    6. '[' → logprob: -7.165879249572754
    7. '```' → logprob: -8.165879249572754
    8. ' [' → logprob: -8.665879249572754
    9. '[i' → logprob: -8.790879249572754
    10. '{' → logprob: -9.165879249572754

Token 402: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.30944904685020447
    2. 'index' → logprob: -2.3094489574432373
    3. ' idx' → logprob: -2.3094489574432373
    4. 'x' → logprob: -3.0594489574432373
    5. 'pos' → logprob: -4.309449195861816
    6. ' index' → logprob: -5.309449195861816
    7. ' pos' → logprob: -6.934449195861816
    8. 'k' → logprob: -7.059449195861816
    9. ' x' → logprob: -7.934449195861816
    10. 'p' → logprob: -11.684449195861816

Token 403: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.142703577876091
    2. 'in' → logprob: -2.0177035331726074
    3. ' ' → logprob: -10.642704010009766
    4. '   ' → logprob: -13.892704010009766
    5. '	in' → logprob: -14.017704010009766
    6. '  ' → logprob: -14.392704010009766
    7. 'n' → logprob: -15.142704010009766
    8. '_in' → logprob: -15.142704010009766
    9. 'In' → logprob: -15.392704010009766
    10. '    ' → logprob: -15.392704010009766

Token 404: ' (' (ID: 350)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.017491472885012627
    2. ' [' → logprob: -4.767491340637207
    3. '(i' → logprob: -4.767491340637207
    4. '{i' → logprob: -8.517491340637207
    5. ' (' → logprob: -9.267491340637207
    6. '([' → logprob: -10.767491340637207
    7. '[' → logprob: -11.892491340637207
    8. '{' → logprob: -12.017491340637207
    9. '[
' → logprob: -13.517491340637207
    10. '(' → logprob: -13.517491340637207

Token 405: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.703443770878948e-06
    2. ' i' → logprob: -12.000007629394531
    3. '   ' → logprob: -14.375007629394531
    4. '[i' → logprob: -14.625007629394531
    5. '{i' → logprob: -16.25000762939453
    6. '(i' → logprob: -16.50000762939453
    7. ')' → logprob: -16.50000762939453
    8. '	i' → logprob: -16.50000762939453
    9. ')i' → logprob: -16.87500762939453
    10. '           ' → logprob: -18.25000762939453

Token 406: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024651942774653435
    2. '-' → logprob: -4.024652004241943
    3. ' ,' → logprob: -5.274652004241943
    4. ' -' → logprob: -6.899652004241943
    5. ',j' → logprob: -8.774651527404785
    6. ',i' → logprob: -9.024651527404785
    7. '-,' → logprob: -10.399651527404785
    8. 'i' → logprob: -11.274651527404785
    9. ',
' → logprob: -11.399651527404785
    10. 'j' → logprob: -11.774651527404785

Token 407: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012725738633889705
    2. ' ' → logprob: -9.000126838684082
    3. '2' → logprob: -12.750126838684082
    4. '   ' → logprob: -14.625126838684082
    5. '
' → logprob: -15.125126838684082
    6. ',' → logprob: -16.5001277923584
    7. '```' → logprob: -17.0001277923584
    8. '  ' → logprob: -17.2501277923584
    9. '+' → logprob: -17.3751277923584
    10. '=' → logprob: -17.8126277923584

Token 408: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.176947600673884e-05
    2. '2' → logprob: -11.000021934509277
    3. ' ' → logprob: -12.250021934509277
    4. '3' → logprob: -16.37502098083496
    5. '   ' → logprob: -16.87502098083496
    6. '
' → logprob: -18.12502098083496
    7. '  ' → logprob: -19.06252098083496
    8. '```' → logprob: -19.62502098083496
    9. '    ' → logprob: -20.00002098083496
    10. '4' → logprob: -20.12502098083496

Token 409: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023193915840238333
    2. ' ,' → logprob: -6.3773193359375
    3. ',i' → logprob: -7.7523193359375
    4. ',j' → logprob: -8.6273193359375
    5. ',
' → logprob: -12.0023193359375
    6. '   ' → logprob: -14.8773193359375
    7. ' i' → logprob: -15.0023193359375
    8. 'i' → logprob: -15.5023193359375
    9. 'j' → logprob: -15.8773193359375
    10. ' ' → logprob: -15.8773193359375

Token 410: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5759534239768982
    2. ' i' → logprob: -0.8259534239768982
    3. '   ' → logprob: -12.575953483581543
    4. '	i' → logprob: -12.825953483581543
    5. '    ' → logprob: -13.075953483581543
    6. ' ' → logprob: -13.700953483581543
    7. ',i' → logprob: -13.700953483581543
    8. ')' → logprob: -14.200953483581543
    9. ',' → logprob: -14.200953483581543
    10. '_i' → logprob: -15.075953483581543

Token 411: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0551191084086895
    2. ' ,' → logprob: -2.930119037628174
    3. ',i' → logprob: -8.930119514465332
    4. ',j' → logprob: -10.055119514465332
    5. ' ' → logprob: -10.680119514465332
    6. ' i' → logprob: -11.555119514465332
    7. '   ' → logprob: -11.805119514465332
    8. 'j' → logprob: -12.305119514465332
    9. 'i' → logprob: -12.680119514465332
    10. ' j' → logprob: -12.805119514465332

Token 412: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.031660620123147964
    2. 'j' → logprob: -3.531660556793213
    3. ' i' → logprob: -6.406660556793213
    4. ' j' → logprob: -9.156661033630371
    5. '   ' → logprob: -9.531661033630371
    6. ' ' → logprob: -10.656661033630371
    7. '     ' → logprob: -10.781661033630371
    8. '  ' → logprob: -11.281661033630371
    9. '    ' → logprob: -11.781661033630371
    10. ')' → logprob: -12.906661033630371

Token 413: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03069715015590191
    2. '-' → logprob: -3.5306971073150635
    3. ',' → logprob: -7.030697345733643
    4. ' ' → logprob: -10.030696868896484
    5. ' ,' → logprob: -11.655696868896484
    6. '   ' → logprob: -12.280696868896484
    7. ' ' → logprob: -13.780696868896484
    8. '  ' → logprob: -14.405696868896484
    9. ' -,' → logprob: -14.530696868896484
    10. '       ' → logprob: -14.780696868896484

Token 414: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008615872822701931
    2. ' ' → logprob: -4.758615970611572
    3. '   ' → logprob: -14.383615493774414
    4. ',' → logprob: -15.446115493774414
    5. ')' → logprob: -16.133615493774414
    6. '  ' → logprob: -16.321115493774414
    7. '```' → logprob: -16.633615493774414
    8. '<|end|>' → logprob: -16.633615493774414
    9. '...' → logprob: -17.383615493774414
    10. '0' → logprob: -17.508615493774414

Token 415: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015991552209015936
    2. ' ' → logprob: -8.750160217285156
    3. '```' → logprob: -15.375160217285156
    4. ',' → logprob: -15.500160217285156
    5. '<|end|>' → logprob: -15.875160217285156
    6. ')' → logprob: -16.062660217285156
    7. '...' → logprob: -16.125160217285156
    8. '   ' → logprob: -16.125160217285156
    9. '۱' → logprob: -16.625160217285156
    10. '-' → logprob: -17.125160217285156

Token 416: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016365008195862174
    2. ',j' → logprob: -6.876636505126953
    3. ' ,' → logprob: -7.501636505126953
    4. ' j' → logprob: -11.251636505126953
    5. ')' → logprob: -11.251636505126953
    6. 'j' → logprob: -11.501636505126953
    7. '):
' → logprob: -12.251636505126953
    8. ',
' → logprob: -12.251636505126953
    9. '       ' → logprob: -13.626636505126953
    10. '   ' → logprob: -13.876636505126953

Token 417: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01606052741408348
    2. ' j' → logprob: -4.1410603523254395
    3. '   ' → logprob: -11.516060829162598
    4. '       ' → logprob: -13.016060829162598
    5. '<|end|>' → logprob: -13.141060829162598
    6. ' ' → logprob: -13.328560829162598
    7. '```' → logprob: -13.328560829162598
    8. ')' → logprob: -13.578560829162598
    9. '    ' → logprob: -13.703560829162598
    10. '	j' → logprob: -13.703560829162598

Token 418: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6250710487365723
    2. '):' → logprob: -1.1250710487365723
    3. '):
' → logprob: -2.0000710487365723
    4. ')' → logprob: -6.750071048736572
    5. ' ,' → logprob: -6.750071048736572
    6. '-' → logprob: -7.250071048736572
    7. '       ' → logprob: -7.500071048736572
    8. ' ):' → logprob: -8.125070571899414
    9. '   ' → logprob: -8.500070571899414
    10. ',
' → logprob: -8.750070571899414

Token 419: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003694205661304295
    2. '       ' → logprob: -8.37536907196045
    3. '):
' → logprob: -9.75036907196045
    4. '            
' → logprob: -11.37536907196045
    5. ')' → logprob: -11.50036907196045
    6. '   ' → logprob: -11.62536907196045
    7. '	       ' → logprob: -11.87536907196045
    8. '               ' → logprob: -12.00036907196045
    9. ',' → logprob: -12.25036907196045
    10. '            ' → logprob: -12.37536907196045

Token 420: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0932273343205452
    2. ' if' → logprob: -2.4682273864746094
    3. 'if' (adapté à ' if') → logprob: -5.468227386474609
    4. '   ' → logprob: -11.21822738647461
    5. 'affected' → logprob: -11.21822738647461
    6. '            ' → logprob: -11.59322738647461
    7. '       ' → logprob: -12.21822738647461
    8. '               ' → logprob: -12.21822738647461
    9. '            
' → logprob: -12.59322738647461
    10. '          ' → logprob: -12.84322738647461

Token 421: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010444821091368794
    2. ' ' → logprob: -6.876044273376465
    3. '   ' → logprob: -12.126044273376465
    4. '               ' → logprob: -13.626044273376465
    5. '           ' → logprob: -14.001044273376465
    6. '                   ' → logprob: -14.376044273376465
    7. '  ' → logprob: -14.501044273376465
    8. '    ' → logprob: -14.688544273376465
    9. '                  ' → logprob: -14.751044273376465
    10. 'idx' → logprob: -14.751044273376465

Token 422: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.625027656555176
    3. '   ' → logprob: -13.625027656555176
    4. 'idx' → logprob: -13.625027656555176
    5. '-' → logprob: -15.187527656555176
    6. '  ' → logprob: -16.187528610229492
    7. '<|end|>' → logprob: -16.500028610229492
    8. '           ' → logprob: -17.000028610229492
    9. '۰' → logprob: -17.187528610229492
    10. '
' → logprob: -17.187528610229492

Token 423: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5759475231170654
    2. ' <=' → logprob: -0.8259475231170654
    3. '<' → logprob: -12.200947761535645
    4. ' <' → logprob: -14.075947761535645
    5. ' ' → logprob: -14.450947761535645
    6. '   ' → logprob: -15.325947761535645
    7. ')<=' → logprob: -15.325947761535645
    8. '>' → logprob: -15.450947761535645
    9. '>=' → logprob: -15.450947761535645
    10. '0' → logprob: -15.825947761535645

Token 424: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.00023059594968799502
    2. ' idx' → logprob: -8.37523078918457
    3. '	idx' → logprob: -17.37523078918457
    4. '   ' → logprob: -18.87523078918457
    5. '
' → logprob: -19.25023078918457
    6. '[idx' → logprob: -19.37523078918457
    7. '(idx' → logprob: -19.62523078918457
    8. ' ' → logprob: -19.87523078918457
    9. '           ' → logprob: -20.12523078918457
    10. 'id' → logprob: -20.25023078918457

Token 425: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.04868660867214203
    2. ' <' → logprob: -3.0486865043640137
    3. '<n' → logprob: -9.423686981201172
    4. '<len' → logprob: -11.923686981201172
    5. '<size' → logprob: -13.048686981201172
    6. ' and' → logprob: -13.173686981201172
    7. '<|end|>' → logprob: -13.548686981201172
    8. '<
' → logprob: -14.048686981201172
    9. 'and' → logprob: -14.048686981201172
    10. '<num' → logprob: -14.548686981201172

Token 426: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0564331205387134e-05
    2. ' self' → logprob: -11.50001049041748
    3. '   ' → logprob: -15.50001049041748
    4. '           ' → logprob: -17.000011444091797
    5. '       ' → logprob: -17.000011444091797
    6. '(self' → logprob: -17.500011444091797
    7. '	self' → logprob: -18.750011444091797
    8. '
' → logprob: -19.500011444091797
    9. '=self' → logprob: -19.625011444091797
    10. '[self' → logprob: -20.375011444091797

Token 427: '.n' (ID: 1835)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6409942507743835
    2. 'self' → logprob: -0.8909942507743835
    3. '.n' → logprob: -2.7659943103790283
    4. ' self' → logprob: -10.39099407196045
    5. '   ' → logprob: -10.89099407196045
    6. '       ' → logprob: -12.01599407196045
    7. '	n' → logprob: -12.51599407196045
    8. ' n' → logprob: -12.64099407196045
    9. '_n' → logprob: -13.01599407196045
    10. '           ' → logprob: -13.51599407196045

Token 428: ' -' (ID: 533)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03061702847480774
    2. ':' → logprob: -4.4056172370910645
    3. '           ' → logprob: -4.6556172370910645
    4. '):
' → logprob: -4.9056172370910645
    5. '               ' → logprob: -7.1556172370910645
    6. ' :
' → logprob: -9.280616760253906
    7. ' and' → logprob: -9.780616760253906
    8. '):' → logprob: -10.030616760253906
    9. '():
' → logprob: -11.280616760253906
    10. '       ' → logprob: -11.405616760253906

Token 429: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '-' → logprob: -17.1250057220459
    4. '2' → logprob: -17.3750057220459
    5. '۱' → logprob: -17.6250057220459
    6. '   ' → logprob: -17.9375057220459
    7. '```' → logprob: -18.0625057220459
    8. 'adj' → logprob: -18.4375057220459
    9. '<|end|>' → logprob: -18.5000057220459
    10. '
' → logprob: -18.6875057220459

Token 430: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -13.12500286102295
    3. '-' → logprob: -14.25000286102295
    4. '
' → logprob: -16.125003814697266
    5. '   ' → logprob: -16.375003814697266
    6. '2' → logprob: -16.875003814697266
    7. '```' → logprob: -17.375003814697266
    8. ')' → logprob: -17.625003814697266
    9. '۱' → logprob: -17.687503814697266
    10. ' -' → logprob: -18.062503814697266

Token 431: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.015298783779144287
    2. '               ' → logprob: -5.015298843383789
    3. ':' → logprob: -5.515298843383789
    4. '):
' → logprob: -5.890298843383789
    5. '           ' → logprob: -6.390298843383789
    6. ' :
' → logprob: -10.515298843383789
    7. ',' → logprob: -10.890298843383789
    8. ' and' → logprob: -11.515298843383789
    9. ':

' → logprob: -12.015298843383789
    10. '):' → logprob: -12.265298843383789

Token 432: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06205316260457039
    2. '               ' → logprob: -2.8120532035827637
    3. '	       ' → logprob: -10.062052726745605
    4. ',' → logprob: -11.812052726745605
    5. '            
' → logprob: -11.812052726745605
    6. '	           ' → logprob: -12.312052726745605
    7. '<|end|>' → logprob: -12.312052726745605
    8. '       ' → logprob: -12.437052726745605
    9. '```' → logprob: -12.812052726745605
    10. '              ' → logprob: -13.312052726745605

Token 433: ' affected' (ID: 18155)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7067292332649231
    2. '           ' → logprob: -0.8317292332649231
    3. 'affected' (adapté à ' affected') → logprob: -2.8317291736602783
    4. ' self' → logprob: -4.956729412078857
    5. '               ' → logprob: -5.831729412078857
    6. '                   ' → logprob: -6.331729412078857
    7. '   ' → logprob: -7.706729412078857
    8. ' affected' → logprob: -8.9567289352417
    9. '       ' → logprob: -9.8317289352417
    10. '	self' → logprob: -10.9567289352417

Token 434: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.004682049620896578
    2. '.' → logprob: -5.3796820640563965
    3. ' .' → logprob: -10.129681587219238
    4. '.remove' → logprob: -11.754681587219238
    5. '           ' → logprob: -12.129681587219238
    6. '.update' → logprob: -12.504681587219238
    7. '.dis' → logprob: -13.004681587219238
    8. '               ' → logprob: -14.129681587219238
    9. 'add' → logprob: -14.254681587219238
    10. ').' → logprob: -15.004681587219238

Token 435: '(idx' (ID: 42793)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.062222447246313095
    2. '(idx' → logprob: -2.812222480773926
    3. ' idx' → logprob: -8.312222480773926
    4. '           ' → logprob: -12.312222480773926
    5. '	idx' → logprob: -13.062222480773926
    6. '[idx' → logprob: -14.187222480773926
    7. '                   ' → logprob: -14.187222480773926
    8. '               ' → logprob: -14.437222480773926
    9. '   ' → logprob: -15.187222480773926
    10. '(' → logprob: -15.312222480773926

Token 436: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006843361537903547
    2. ')
' → logprob: -5.006843566894531
    3. '       ' → logprob: -9.006843566894531
    4. ')
' → logprob: -13.381843566894531
    5. ' )' → logprob: -13.381843566894531
    6. ')

' → logprob: -14.256843566894531
    7. '           ' → logprob: -14.256843566894531
    8. '   ' → logprob: -14.756843566894531
    9. '               ' → logprob: -16.25684356689453
    10. '())' → logprob: -16.50684356689453

Token 437: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031345169991254807
    2. 'for' → logprob: -3.7813451290130615
    3. ' for' → logprob: -4.906345367431641
    4. '   ' → logprob: -7.531345367431641
    5. 'def' → logprob: -9.53134536743164
    6. '
' → logprob: -10.90634536743164
    7. '           ' → logprob: -11.53134536743164
    8. ')' → logprob: -11.78134536743164
    9. '               ' → logprob: -12.15634536743164
    10. 'self' → logprob: -12.28134536743164

Token 438: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004575496073812246
    2. '       ' → logprob: -5.504575729370117
    3. 'self' → logprob: -8.129575729370117
    4. ' for' → logprob: -8.879575729370117
    5. 'prev' → logprob: -10.504575729370117
    6. 'count' → logprob: -12.004575729370117
    7. 'old' → logprob: -12.254575729370117
    8. '```' → logprob: -12.254575729370117
    9. 'removed' → logprob: -12.379575729370117
    10. 'remove' → logprob: -12.504575729370117

Token 439: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.20174650847911835
    2. ' idx' → logprob: -1.7017464637756348
    3. 'index' → logprob: -8.201746940612793
    4. 'pos' → logprob: -10.201746940612793
    5. ' index' → logprob: -11.326746940612793
    6. 'k' → logprob: -12.826746940612793
    7. ' pos' → logprob: -13.201746940612793
    8. '_idx' → logprob: -13.576746940612793
    9. '	idx' → logprob: -13.951746940612793
    10. 'adj' → logprob: -14.326746940612793

Token 440: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026323288679122925
    2. 'in' → logprob: -3.6513233184814453
    3. '   ' → logprob: -12.026323318481445
    4. ' ' → logprob: -12.026323318481445
    5. '	in' → logprob: -12.526323318481445
    6. '    ' → logprob: -13.401323318481445
    7. 'In' → logprob: -13.526323318481445
    8. '_in' → logprob: -14.151323318481445
    9. '  ' → logprob: -14.401323318481445
    10. '
' → logprob: -14.401323318481445

Token 441: ' affected' (ID: 18155)
  Prédit: 'affected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'affected' → logprob: -0.04863164573907852
    2. ' affected' → logprob: -3.0486316680908203
    3. 'ffected' → logprob: -10.79863166809082
    4. 'sorted' → logprob: -11.42363166809082
    5. 'aff' → logprob: -12.54863166809082
    6. 'list' → logprob: -12.79863166809082
    7. '   ' → logprob: -12.92363166809082
    8. ' list' → logprob: -13.92363166809082
    9. ' sorted' → logprob: -14.04863166809082
    10. ' ' → logprob: -14.67363166809082

Token 442: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16179239749908447
    2. ':
' → logprob: -1.9117923974990845
    3. '):
' → logprob: -7.536792278289795
    4. '):' → logprob: -7.911792278289795
    5. ' :' → logprob: -8.661792755126953
    6. 'self' → logprob: -8.786792755126953
    7. ',' → logprob: -9.161792755126953
    8. ' :
' → logprob: -9.536792755126953
    9. ':self' → logprob: -10.411792755126953
    10. '       ' → logprob: -10.411792755126953

Token 443: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5198270678520203
    2. 'self' → logprob: -1.019827127456665
    3. ' self' → logprob: -3.144827127456665
    4. '   ' → logprob: -6.894826889038086
    5. '       ' → logprob: -8.019826889038086
    6. '               ' → logprob: -8.644826889038086
    7. '	self' → logprob: -10.019826889038086
    8. ' ' → logprob: -10.519826889038086
    9. '-self' → logprob: -11.144826889038086
    10. '	       ' → logprob: -11.769826889038086

Token 444: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0007744893664494157
    2. '           ' → logprob: -7.625774383544922
    3. ' self' → logprob: -8.250774383544922
    4. '               ' → logprob: -11.125774383544922
    5. '   ' → logprob: -12.125774383544922
    6. '       ' → logprob: -12.875774383544922
    7. '	self' → logprob: -13.625774383544922
    8. '                   ' → logprob: -14.500774383544922
    9. 'count' → logprob: -16.000774383544922
    10. ' ' → logprob: -16.000774383544922

Token 445: '.total' (ID: 23374)
  Prédit: '.total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -0.16184522211551666
    2. '.ad' → logprob: -1.9118452072143555
    3. '.' → logprob: -6.9118452072143555
    4. 'total' → logprob: -7.4118452072143555
    5. 'adj' → logprob: -11.786845207214355
    6. '.Ad' → logprob: -13.411845207214355
    7. ').' → logprob: -13.536845207214355
    8. '-ad' → logprob: -13.911845207214355
    9. ' total' → logprob: -14.161845207214355
    10. ' .' → logprob: -14.161845207214355

Token 446: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -5.676981345459353e-06
    2. '_ad' → logprob: -13.250005722045898
    3. '-=' → logprob: -13.375005722045898
    4. ' -=' → logprob: -13.750005722045898
    5. 'in' → logprob: -14.875005722045898
    6. '_' → logprob: -15.000005722045898
    7. 'In' → logprob: -15.125005722045898
    8. '-in' → logprob: -16.3750057220459
    9. '_adj' → logprob: -17.5000057220459
    10. '\' → logprob: -17.7500057220459

Token 447: 'versions' (ID: 48579)
  Prédit: 'versions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versions' → logprob: -0.005056810099631548
    2. 'in' → logprob: -6.255056858062744
    3. 'version' → logprob: -6.755056858062744
    4. 'total' → logprob: -7.255056858062744
    5. 'vert' → logprob: -7.755056858062744
    6. '_' → logprob: -8.755056381225586
    7. '_in' → logprob: -9.005056381225586
    8. '-' → logprob: -9.005056381225586
    9. 'verted' → logprob: -9.380056381225586
    10. 'ver' → logprob: -9.630056381225586

Token 448: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.038379281759262085
    2. ' -=' → logprob: -3.288379192352295
    3. '-' → logprob: -8.038379669189453
    4. '   ' → logprob: -11.538379669189453
    5. '    ' → logprob: -13.663379669189453
    6. '           ' → logprob: -13.788379669189453
    7. '+=' → logprob: -13.913379669189453
    8. '=' → logprob: -14.163379669189453
    9. ' -' → logprob: -14.538379669189453
    10. '       ' → logprob: -15.413379669189453

Token 449: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019294669618830085
    2. ' self' → logprob: -6.25192928314209
    3. '           ' → logprob: -14.87692928314209
    4. '(self' → logprob: -15.50192928314209
    5. '   ' → logprob: -15.62692928314209
    6. '       ' → logprob: -16.626930236816406
    7. '	self' → logprob: -17.376930236816406
    8. '_self' → logprob: -17.751930236816406
    9. '=self' → logprob: -18.126930236816406
    10. '[self' → logprob: -18.376930236816406

Token 450: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.12681177258491516
    2. '_check' → logprob: -2.3768117427825928
    3. '.check' → logprob: -4.751811981201172
    4. '.ad' → logprob: -4.876811981201172
    5. '_ad' → logprob: -4.876811981201172
    6. 'adj' → logprob: -7.001811981201172
    7. '_adj' → logprob: -7.001811981201172
    8. '.elements' → logprob: -8.376811981201172
    9. '.' → logprob: -9.126811981201172
    10. 'elements' → logprob: -9.251811981201172

Token 451: 'check' (ID: 3416)
  Prédit: 'check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -1.9361264946837764e-07
    2. '_check' → logprob: -15.875
    3. ' check' → logprob: -19.375
    4. '.check' → logprob: -20.0
    5. '	check' → logprob: -20.875
    6. '(check' → logprob: -21.0
    7. 'chec' → logprob: -22.25
    8. '
' → logprob: -22.5
    9. '```' → logprob: -22.625
    10. 'Check' → logprob: -23.0

Token 452: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -5.264322317088954e-05
    2. 'pair' → logprob: -9.875052452087402
    3. 'Pair' → logprob: -14.625052452087402
    4. '_pairs' → logprob: -14.625052452087402
    5. '_PAIR' → logprob: -16.25005340576172
    6. '```' → logprob: -17.25005340576172
    7. '(pair' → logprob: -17.37505340576172
    8. '_' → logprob: -17.87505340576172
    9. ' pair' → logprob: -18.00005340576172
    10. '
' → logprob: -18.25005340576172

Token 453: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.750004768371582
    3. '(index' → logprob: -13.875004768371582
    4. 'idx' → logprob: -14.375004768371582
    5. '[idx' → logprob: -15.125004768371582
    6. ' (' → logprob: -15.250004768371582
    7. '(i' → logprob: -16.3750057220459
    8. '(
' → logprob: -16.7500057220459
    9. ' idx' → logprob: -17.6250057220459
    10. '(id' → logprob: -18.5000057220459

Token 454: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.8590300139039755e-05
    2. ')
' → logprob: -10.000048637390137
    3. ' )' → logprob: -13.250048637390137
    4. '<|end|>' → logprob: -14.375048637390137
    5. ')#' → logprob: -14.750048637390137
    6. '       ' → logprob: -16.12504768371582
    7. '   ' → logprob: -17.00004768371582
    8. ')

' → logprob: -17.25004768371582
    9. ')}' → logprob: -17.25004768371582
    10. '())' → logprob: -17.37504768371582

Token 455: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13576602935791016
    2. '<|end|>' → logprob: -2.38576602935791
    3. '```' → logprob: -3.88576602935791
    4. 'def' → logprob: -4.51076602935791
    5. ')' → logprob: -6.76076602935791
    6. '<|end|>' → logprob: -7.38576602935791
    7. '       ' → logprob: -7.38576602935791
    8. '[' → logprob: -7.88576602935791
    9. ' def' → logprob: -9.38576602935791
    10. '    
' → logprob: -9.51076602935791

Token 456: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44441473484039307
    2. 'def' (adapté à ' def') → logprob: -1.069414734840393
    3. ' def' → logprob: -4.1944146156311035
    4. '    
' → logprob: -8.694415092468262
    5. '	def' → logprob: -8.944415092468262
    6. ' ' → logprob: -9.444415092468262
    7. '```' → logprob: -9.819415092468262
    8. '<|end|>' → logprob: -10.944415092468262
    9. '  
' → logprob: -11.069415092468262
    10. '       ' → logprob: -11.694415092468262

Token 457: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.0028062984347343445
    2. ' update' → logprob: -5.877806186676025
    3. 'def' → logprob: -14.127806663513184
    4. '_update' → logprob: -15.502806663513184
    5. ' ' → logprob: -15.877806663513184
    6. '   ' → logprob: -16.252805709838867
    7. '.update' → logprob: -16.252805709838867
    8. '	update' → logprob: -16.252805709838867
    9. '
' → logprob: -18.252805709838867
    10. ' def' → logprob: -18.752805709838867

Token 458: '_after' (ID: 46788)
  Prédit: '_after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_after' → logprob: -1.318681188422488e-05
    2. '_before' → logprob: -11.25001335144043
    3. 'after' → logprob: -16.12501335144043
    4. '_' → logprob: -17.25001335144043
    5. '_for' → logprob: -18.12501335144043
    6. '_AFTER' → logprob: -19.12501335144043
    7. 'After' → logprob: -19.37501335144043
    8. '_post' → logprob: -19.50001335144043
    9. '```' → logprob: -19.75001335144043
    10. '_on' → logprob: -20.00001335144043

Token 459: '_swap' (ID: 103784)
  Prédit: '_swap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_swap' → logprob: -9.13388703338569e-06
    2. 'swap' → logprob: -11.625009536743164
    3. '_' → logprob: -17.125009536743164
    4. '_update' → logprob: -17.375009536743164
    5. '_SWAP' → logprob: -17.625009536743164
    6. '_sw' → logprob: -18.125009536743164
    7. ' swap' → logprob: -19.375009536743164
    8. 'Swap' → logprob: -19.750009536743164
    9. '	swap' → logprob: -20.125009536743164
    10. '.swap' → logprob: -20.125009536743164

Token 460: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002658655575942248
    2. '   ' → logprob: -9.000266075134277
    3. 'self' → logprob: -9.500266075134277
    4. '(' → logprob: -9.875266075134277
    5. '       ' → logprob: -11.500266075134277
    6. ' (' → logprob: -12.750266075134277
    7. ',' → logprob: -13.375266075134277
    8. ' self' → logprob: -13.875266075134277
    9. 'def' → logprob: -15.250266075134277
    10. ' ' → logprob: -15.875266075134277

Token 461: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013572083844337612
    2. 'self' → logprob: -9.37513542175293
    3. ' ,' → logprob: -10.87513542175293
    4. '   ' → logprob: -10.87513542175293
    5. '(self' → logprob: -12.00013542175293
    6. '       ' → logprob: -12.12513542175293
    7. ',self' → logprob: -13.87513542175293
    8. ' ' → logprob: -15.75013542175293
    9. ',i' → logprob: -16.12513542175293
    10. ',
' → logprob: -16.50013542175293

Token 462: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10197681188583374
    2. ' i' → logprob: -2.3519768714904785
    3. 'self' → logprob: -6.8519768714904785
    4. '   ' → logprob: -7.8519768714904785
    5. ' self' → logprob: -8.10197639465332
    6. '       ' → logprob: -11.22697639465332
    7. ' ' → logprob: -12.72697639465332
    8. '  ' → logprob: -13.97697639465332
    9. '    ' → logprob: -14.10197639465332
    10. '	i' → logprob: -14.47697639465332

Token 463: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001843485952122137
    2. ' ,' → logprob: -8.875184059143066
    3. '   ' → logprob: -10.250184059143066
    4. ',j' → logprob: -11.750184059143066
    5. ',
' → logprob: -14.250184059143066
    6. ')' → logprob: -15.000184059143066
    7. '       ' → logprob: -16.500185012817383
    8. '    ' → logprob: -17.750185012817383
    9. ',self' → logprob: -17.750185012817383
    10. ' ' → logprob: -17.875185012817383

Token 464: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0015028368216007948
    2. ' j' → logprob: -6.501502990722656
    3. '   ' → logprob: -14.751502990722656
    4. '    ' → logprob: -16.376502990722656
    5. '	j' → logprob: -17.126502990722656
    6. '       ' → logprob: -17.251502990722656
    7. '  ' → logprob: -18.751502990722656
    8. '     ' → logprob: -18.876502990722656
    9. ' ' → logprob: -19.001502990722656
    10. '           ' → logprob: -19.126502990722656

Token 465: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04149771109223366
    2. '):' → logprob: -3.2914977073669434
    3. '       ' → logprob: -6.041497707366943
    4. '   ' → logprob: -6.916497707366943
    5. ',' → logprob: -10.541498184204102
    6. '):
' → logprob: -10.541498184204102
    7. '):

' → logprob: -11.791498184204102
    8. ':
' → logprob: -12.041498184204102
    9. 'self' → logprob: -12.166498184204102
    10. ':' → logprob: -13.041498184204102

Token 466: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005045388825237751
    2. '   ' → logprob: -7.625504493713379
    3. '#' → logprob: -12.125504493713379
    4. '           ' → logprob: -12.750504493713379
    5. '        ' → logprob: -13.125504493713379
    6. 'def' → logprob: -13.375504493713379
    7. '```' → logprob: -13.750504493713379
    8. '     ' → logprob: -14.000504493713379
    9. '    ' → logprob: -14.125504493713379
    10. '      ' → logprob: -14.375504493713379

Token 467: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040054772049188614
    2. '#' (adapté à ' #') → logprob: -3.2900547981262207
    3. 'affected' → logprob: -6.290054798126221
    4. '   ' → logprob: -9.290054321289062
    5. ' affected' → logprob: -10.290054321289062
    6. ' #' → logprob: -10.790054321289062
    7. '```' → logprob: -12.040054321289062
    8. '           ' → logprob: -13.540054321289062
    9. '
' → logprob: -14.665054321289062
    10. '        ' → logprob: -14.790054321289062

Token 468: ' after' (ID: 1934)
  Prédit: 'affected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'affected' → logprob: -0.8334519863128662
    2. '#' → logprob: -1.2084519863128662
    3. '       ' → logprob: -1.3334519863128662
    4. '   ' → logprob: -6.208452224731445
    5. 'def' → logprob: -7.708452224731445
    6. ' affected' → logprob: -7.958452224731445
    7. ' #' → logprob: -8.458452224731445
    8. 'self' → logprob: -9.333452224731445
    9. 'for' → logprob: -10.458452224731445
    10. '```' → logprob: -10.833452224731445

Token 469: ' the' (ID: 290)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7696273922920227
    2. 'swap' → logprob: -1.269627332687378
    3. 'for' → logprob: -2.144627332687378
    4. '       ' → logprob: -3.019627332687378
    5. ' swap' → logprob: -3.769627332687378
    6. ' for' → logprob: -3.769627332687378
    7. '   ' → logprob: -3.894627332687378
    8. '#' → logprob: -4.769627571105957
    9. 'self' → logprob: -5.019627571105957
    10. ' the' → logprob: -6.394627571105957

Token 470: ' swap' (ID: 25489)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8528374433517456
    2. ' for' → logprob: -1.6028374433517456
    3. ' affected' → logprob: -2.477837562561035
    4. 'affected' → logprob: -2.477837562561035
    5. 'def' → logprob: -2.602837562561035
    6. 'swap' → logprob: -2.727837562561035
    7. ' swap' → logprob: -3.727837562561035
    8. 'indices' → logprob: -4.352837562561035
    9. '   ' → logprob: -4.977837562561035
    10. ' indices' → logprob: -5.477837562561035

Token 471: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008850212208926678
    2. '   ' → logprob: -5.50885009765625
    3. ',' → logprob: -5.75885009765625
    4. 'affected' → logprob: -6.88385009765625
    5. 'for' → logprob: -8.50885009765625
    6. ' for' → logprob: -8.75885009765625
    7. ' affected' → logprob: -9.38385009765625
    8. 'def' → logprob: -9.50885009765625
    9. '
' → logprob: -10.13385009765625
    10. ' ,' → logprob: -12.13385009765625

Token 472: ' add' (ID: 1147)
  Prédit: 'affected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'affected' → logprob: -0.6837619543075562
    2. '       ' → logprob: -0.8087619543075562
    3. 'for' → logprob: -3.8087620735168457
    4. ' affected' → logprob: -3.9337620735168457
    5. ' for' → logprob: -5.433762073516846
    6. '#' → logprob: -5.933762073516846
    7. '   ' → logprob: -7.183762073516846
    8. ' ' → logprob: -9.433761596679688
    9. 'self' → logprob: -9.558761596679688
    10. ' #' → logprob: -9.683761596679688

Token 473: ' back' (ID: 1602)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11991482228040695
    2. ' for' → logprob: -2.2449147701263428
    3. 'self' → logprob: -5.619915008544922
    4. 'in' → logprob: -6.869915008544922
    5. '       ' → logprob: -7.744915008544922
    6. '   ' → logprob: -7.869915008544922
    7. 'the' → logprob: -8.244915008544922
    8. 'back' → logprob: -8.494915008544922
    9. 'affected' → logprob: -8.494915008544922
    10. '```' → logprob: -8.994915008544922

Token 474: ' inversion' (ID: 70924)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38839080929756165
    2. 'for' → logprob: -1.8883907794952393
    3. '       ' → logprob: -2.0133907794952393
    4. 'self' → logprob: -3.6383907794952393
    5. ' self' → logprob: -4.888391017913818
    6. '   ' → logprob: -6.763391017913818
    7. ' the' → logprob: -7.263391017913818
    8. ' to' → logprob: -7.513391017913818
    9. '           ' → logprob: -8.51339054107666
    10. '```' → logprob: -9.13839054107666

Token 475: ' counts' (ID: 28991)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.37705546617507935
    2. 'for' → logprob: -1.3770554065704346
    3. 'counts' → logprob: -3.3770554065704346
    4. ' for' → logprob: -4.252055644989014
    5. ' counts' → logprob: -4.877055644989014
    6. '   ' → logprob: -6.002055644989014
    7. 'count' → logprob: -6.252055644989014
    8. '       ' → logprob: -6.752055644989014
    9. '_for' → logprob: -10.252055168151855
    10. '           ' → logprob: -10.252055168151855

Token 476: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002234437270089984
    2. ' for' → logprob: -8.875223159790039
    3. '   ' → logprob: -10.375223159790039
    4. 'for' → logprob: -10.375223159790039
    5. ',' → logprob: -11.000223159790039
    6. '           ' → logprob: -13.875223159790039
    7. ' to' → logprob: -13.875223159790039
    8. 'def' → logprob: -14.250223159790039
    9. '
' → logprob: -15.250223159790039
    10. ' ' → logprob: -15.375223159790039

Token 477: ' affected' (ID: 18155)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.5653542876243591
    2. ' all' → logprob: -0.9403542876243591
    3. 'affected' → logprob: -4.440354347229004
    4. ' the' → logprob: -4.690354347229004
    5. 'the' → logprob: -4.690354347229004
    6. ' affected' → logprob: -5.315354347229004
    7. 'idx' → logprob: -5.940354347229004
    8. 'indices' → logprob: -6.690354347229004
    9. ' idx' → logprob: -7.315354347229004
    10. ' indices' → logprob: -7.315354347229004

Token 478: ' pairs' (ID: 24702)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.3198052942752838
    2. ' indices' → logprob: -1.4448052644729614
    3. ' pairs' → logprob: -3.819805383682251
    4. 'pairs' → logprob: -4.569805145263672
    5. '   ' → logprob: -6.319805145263672
    6. ' =' → logprob: -6.569805145263672
    7. '       ' → logprob: -7.319805145263672
    8. 'idx' → logprob: -7.944805145263672
    9. ' for' → logprob: -8.444805145263672
    10. '_indices' → logprob: -8.569805145263672

Token 479: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013928539119660854
    2. '   ' → logprob: -6.876392841339111
    3. ',' → logprob: -8.12639331817627
    4. '<|end|>' → logprob: -10.87639331817627
    5. '```' → logprob: -11.25139331817627
    6. ' for' → logprob: -11.25139331817627
    7. '
' → logprob: -12.12639331817627
    8. '           ' → logprob: -12.50139331817627
    9. ' and' → logprob: -13.00139331817627
    10. '        
' → logprob: -13.62639331817627

Token 480: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013394085690379143
    2. '   ' → logprob: -6.626339435577393
    3. '
' → logprob: -12.501338958740234
    4. ',' → logprob: -13.001338958740234
    5. '           ' → logprob: -13.001338958740234
    6. 'def' → logprob: -13.501338958740234
    7. '```' → logprob: -13.501338958740234
    8. ' for' → logprob: -14.876338958740234
    9. '        ' → logprob: -14.876338958740234
    10. 'for' → logprob: -15.501338958740234

Token 481: ' affected' (ID: 18155)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10167330503463745
    2. 'affected' (adapté à ' affected') → logprob: -2.3516733646392822
    3. ' affected' → logprob: -7.226673126220703
    4. '   ' → logprob: -7.351673126220703
    5. 'for' → logprob: -9.976673126220703
    6. '```' → logprob: -11.101673126220703
    7. '           ' → logprob: -11.476673126220703
    8. ' ' → logprob: -12.226673126220703
    9. ' for' → logprob: -12.726673126220703
    10. '#' → logprob: -12.851673126220703

Token 482: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12703141570091248
    2. '=' → logprob: -2.1270313262939453
    3. '=set' → logprob: -10.002031326293945
    4. '.update' → logprob: -10.502031326293945
    5. '   ' → logprob: -11.377031326293945
    6. '.add' → logprob: -11.502031326293945
    7. '.' → logprob: -12.502031326293945
    8. ' ' → logprob: -13.627031326293945
    9. '=
' → logprob: -14.627031326293945
    10. 's' → logprob: -14.627031326293945

Token 483: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.06448251754045486
    2. ' set' → logprob: -2.9394824504852295
    3. '{' → logprob: -4.689482688903809
    4. ' {' → logprob: -7.939482688903809
    5. 'self' → logprob: -12.564482688903809
    6. '(set' → logprob: -14.439482688903809
    7. '=set' → logprob: -14.439482688903809
    8. '{i' → logprob: -14.564482688903809
    9. '{s' → logprob: -14.939482688903809
    10. '	set' → logprob: -14.939482688903809

Token 484: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.014213571324944496
    2. '()' → logprob: -4.264213562011719
    3. '(' → logprob: -11.014213562011719
    4. '(idx' → logprob: -11.264213562011719
    5. '(i' → logprob: -11.639213562011719
    6. '()
' → logprob: -12.514213562011719
    7. '(
' → logprob: -12.889213562011719
    8. '()\' → logprob: -13.139213562011719
    9. '([' → logprob: -13.764213562011719
    10. '       ' → logprob: -14.264213562011719

Token 485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014436879428103566
    2. 'for' → logprob: -7.001443862915039
    3. ' for' → logprob: -7.626443862915039
    4. '```' → logprob: -10.376443862915039
    5. '   ' → logprob: -11.376443862915039
    6. '	for' → logprob: -14.251443862915039
    7. '           ' → logprob: -14.626443862915039
    8. '
' → logprob: -15.001443862915039
    9. '``' → logprob: -15.376443862915039
    10. '[' → logprob: -16.00144386291504

Token 486: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002585051115602255
    2. '       ' → logprob: -6.002584934234619
    3. ' for' → logprob: -9.127585411071777
    4. '	for' → logprob: -15.252585411071777
    5. '   ' → logprob: -15.502585411071777
    6. '```' → logprob: -15.627585411071777
    7. '
' → logprob: -16.25258445739746
    8. 'For' → logprob: -18.12758445739746
    9. 'from' → logprob: -19.37758445739746
    10. ' ' → logprob: -19.37758445739746

Token 487: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.25193583965301514
    2. 'idx' → logprob: -1.5019358396530151
    3. '(idx' → logprob: -12.126935958862305
    4. 'x' → logprob: -14.626935958862305
    5. '	idx' → logprob: -14.751935958862305
    6. '[idx' → logprob: -15.751935958862305
    7. '   ' → logprob: -16.626935958862305
    8. ' ' → logprob: -16.751935958862305
    9. 'index' → logprob: -16.876935958862305
    10. 'k' → logprob: -17.376935958862305

Token 488: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07892801612615585
    2. 'in' → logprob: -2.578927993774414
    3. ' (' → logprob: -10.953927993774414
    4. '(i' → logprob: -11.703927993774414
    5. '(in' → logprob: -11.953927993774414
    6. '(' → logprob: -13.328927993774414
    7. '	in' → logprob: -13.953927993774414
    8. '   ' → logprob: -14.078927993774414
    9. ' ' → logprob: -14.203927993774414
    10. '(idx' → logprob: -14.953927993774414

Token 489: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.05490541458129883
    2. ' (' → logprob: -2.929905414581299
    3. '[i' → logprob: -11.05490493774414
    4. '(' → logprob: -12.30490493774414
    5. '(idx' → logprob: -13.55490493774414
    6. '   ' → logprob: -14.17990493774414
    7. '{i' → logprob: -15.42990493774414
    8. ' ' → logprob: -15.80490493774414
    9. ' i' → logprob: -16.67990493774414
    10. '(j' → logprob: -16.67990493774414

Token 490: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00024477019906044006
    2. ' i' → logprob: -8.375245094299316
    3. '   ' → logprob: -11.875245094299316
    4. '           ' → logprob: -12.625245094299316
    5. '       ' → logprob: -13.000245094299316
    6. '        ' → logprob: -15.375245094299316
    7. '	i' → logprob: -15.500245094299316
    8. '    ' → logprob: -15.750245094299316
    9. '         ' → logprob: -16.000244140625
    10. ' ' → logprob: -16.000244140625

Token 491: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25229910016059875
    2. '-' → logprob: -1.5022990703582764
    3. ',' → logprob: -8.002299308776855
    4. '   ' → logprob: -11.002299308776855
    5. ' ' → logprob: -11.377299308776855
    6. ' ,' → logprob: -12.627299308776855
    7. '-,' → logprob: -13.377299308776855
    8. ' -,' → logprob: -13.877299308776855
    9. '  ' → logprob: -15.252299308776855
    10. ',
' → logprob: -15.877299308776855

Token 492: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038825106457807124
    2. ' ' → logprob: -7.875388145446777
    3. '-' → logprob: -12.125388145446777
    4. 'i' → logprob: -14.375388145446777
    5. '   ' → logprob: -14.625388145446777
    6. 'j' → logprob: -14.750388145446777
    7. '2' → logprob: -15.250388145446777
    8. ',' → logprob: -15.562888145446777
    9. '```' → logprob: -15.562888145446777
    10. '0' → logprob: -16.062889099121094

Token 493: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.625003814697266
    3. '2' → logprob: -15.812503814697266
    4. '0' → logprob: -15.875003814697266
    5. '-' → logprob: -16.187503814697266
    6. '   ' → logprob: -16.437503814697266
    7. '```' → logprob: -16.750003814697266
    8. 'i' → logprob: -17.187503814697266
    9. ',' → logprob: -17.312503814697266
    10. '`' → logprob: -17.750003814697266

Token 494: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.504040356958285e-05
    2. ' ,' → logprob: -9.875064849853516
    3. ',j' → logprob: -11.750064849853516
    4. ',i' → logprob: -12.250064849853516
    5. ',
' → logprob: -14.750064849853516
    6. '   ' → logprob: -15.750064849853516
    7. 'j' → logprob: -16.000064849853516
    8. 'i' → logprob: -16.875064849853516
    9. ' ' → logprob: -17.375064849853516
    10. ' i' → logprob: -17.375064849853516

Token 495: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3868769407272339
    2. ' i' → logprob: -1.1368769407272339
    3. '	i' → logprob: -13.136877059936523
    4. ',' → logprob: -13.511877059936523
    5. ',i' → logprob: -14.011877059936523
    6. ' ' → logprob: -14.261877059936523
    7. '   ' → logprob: -14.386877059936523
    8. '```' → logprob: -16.511877059936523
    9. '    ' → logprob: -16.636877059936523
    10. '_i' → logprob: -16.761877059936523

Token 496: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016098396154120564
    2. ' ,' → logprob: -6.751609802246094
    3. ',j' → logprob: -7.751609802246094
    4. ',
' → logprob: -12.501609802246094
    5. 'j' → logprob: -13.126609802246094
    6. '   ' → logprob: -13.876609802246094
    7. ' j' → logprob: -14.126609802246094
    8. '       ' → logprob: -14.251609802246094
    9. '-' → logprob: -14.876609802246094
    10. ' ' → logprob: -15.001609802246094

Token 497: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.12693829834461212
    2. ' j' → logprob: -2.1269383430480957
    3. '   ' → logprob: -12.501937866210938
    4. '    ' → logprob: -13.001937866210938
    5. '	j' → logprob: -13.126937866210938
    6. '       ' → logprob: -14.001937866210938
    7. '     ' → logprob: -14.876937866210938
    8. ' ' → logprob: -15.001937866210938
    9. '  ' → logprob: -15.501937866210938
    10. '           ' → logprob: -16.001937866210938

Token 498: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08904427289962769
    2. '-' → logprob: -2.4640443325042725
    3. ',' → logprob: -9.214044570922852
    4. ' ' → logprob: -13.589044570922852
    5. '   ' → logprob: -13.714044570922852
    6. ' ,' → logprob: -14.214044570922852
    7. '```' → logprob: -14.214044570922852
    8. '-,' → logprob: -15.214044570922852
    9. ' -,' → logprob: -15.589044570922852
    10. ' ' → logprob: -15.964044570922852

Token 499: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002978048287332058
    2. ' ' → logprob: -8.125297546386719
    3. '-' → logprob: -14.500297546386719
    4. '```' → logprob: -14.500297546386719
    5. '   ' → logprob: -15.062797546386719
    6. ' -' → logprob: -16.25029754638672
    7. '  ' → logprob: -17.12529754638672
    8. ',' → logprob: -17.18779754638672
    9. '...' → logprob: -17.18779754638672
    10. '`' → logprob: -17.25029754638672

Token 500: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.259079363080673e-05
    2. ' ' → logprob: -12.000012397766113
    3. '-' → logprob: -12.125012397766113
    4. '```' → logprob: -15.000012397766113
    5. '0' → logprob: -16.06251335144043
    6. ' -' → logprob: -16.68751335144043
    7. '   ' → logprob: -16.75001335144043
    8. 'j' → logprob: -16.75001335144043
    9. '...' → logprob: -17.43751335144043
    10. '2' → logprob: -17.56251335144043

Token 501: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000133098365040496
    2. ' ,' → logprob: -9.250133514404297
    3. ',j' → logprob: -10.250133514404297
    4. ',
' → logprob: -14.500133514404297
    5. '       ' → logprob: -15.250133514404297
    6. 'j' → logprob: -15.250133514404297
    7. ',i' → logprob: -15.750133514404297
    8. '   ' → logprob: -15.875133514404297
    9. '           ' → logprob: -16.375133514404297
    10. ' j' → logprob: -17.125133514404297

Token 502: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.2254229038953781
    2. 'j' → logprob: -1.6004228591918945
    3. '	j' → logprob: -12.850422859191895
    4. '   ' → logprob: -13.225422859191895
    5. '       ' → logprob: -13.475422859191895
    6. '    ' → logprob: -13.725422859191895
    7. '           ' → logprob: -13.975422859191895
    8. ' ' → logprob: -14.850422859191895
    9. '```' → logprob: -14.850422859191895
    10. ',j' → logprob: -14.975422859191895

Token 503: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0038547052536159754
    2. '):' → logprob: -6.003854751586914
    3. ',' → logprob: -6.878854751586914
    4. '           ' → logprob: -8.753854751586914
    5. '       ' → logprob: -8.878854751586914
    6. '):
' → logprob: -10.628854751586914
    7. ' ):
' → logprob: -11.378854751586914
    8. '   ' → logprob: -12.253854751586914
    9. '):

' → logprob: -12.503854751586914
    10. ')' → logprob: -12.878854751586914

Token 504: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024384863674640656
    2. '           ' → logprob: -3.7743849754333496
    3. ' if' → logprob: -7.39938497543335
    4. '   ' → logprob: -8.274384498596191
    5. '               ' → logprob: -9.524384498596191
    6. '<|end|>' → logprob: -9.774384498596191
    7. ' for' → logprob: -10.149384498596191
    8. ' ' → logprob: -10.649384498596191
    9. '	       ' → logprob: -10.774384498596191
    10. '```' → logprob: -11.024384498596191

Token 505: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18044395744800568
    2. '           ' → logprob: -1.9304440021514893
    3. '       ' → logprob: -4.18044376373291
    4. '               ' → logprob: -6.80544376373291
    5. '<|end|>' → logprob: -6.80544376373291
    6. ' ' → logprob: -7.55544376373291
    7. '        ' → logprob: -8.05544376373291
    8. 'if' (adapté à ' if') → logprob: -8.18044376373291
    9. '```' → logprob: -8.18044376373291
    10. '	       ' → logprob: -8.43044376373291

Token 506: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02630215883255005
    2. '0' → logprob: -3.6513020992279053
    3. ' ' → logprob: -14.776302337646484
    4. '           ' → logprob: -15.276302337646484
    5. '   ' → logprob: -15.401302337646484
    6. '  ' → logprob: -15.401302337646484
    7. '    ' → logprob: -15.651302337646484
    8. '            ' → logprob: -15.901302337646484
    9. ' (' → logprob: -16.026302337646484
    10. '```' → logprob: -16.151302337646484

Token 507: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005543439765460789
    2. ' ' → logprob: -7.50055456161499
    3. '   ' → logprob: -14.750554084777832
    4. '           ' → logprob: -15.375554084777832
    5. '  ' → logprob: -15.625554084777832
    6. '         ' → logprob: -16.50055503845215
    7. '    ' → logprob: -16.75055503845215
    8. '       ' → logprob: -16.87555503845215
    9. '               ' → logprob: -16.87555503845215
    10. 'idx' → logprob: -17.00055503845215

Token 508: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.31336960196495056
    2. '<=' → logprob: -1.313369631767273
    3. '0' → logprob: -9.813369750976562
    4. ' ' → logprob: -10.813369750976562
    5. '<' → logprob: -11.313369750976562
    6. ' <' → logprob: -11.438369750976562
    7. '           ' → logprob: -12.938369750976562
    8. '        ' → logprob: -13.438369750976562
    9. '   ' → logprob: -13.438369750976562
    10. '       ' → logprob: -14.063369750976562

Token 509: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.10021217912435532
    2. ' idx' → logprob: -2.3502120971679688
    3. '[idx' → logprob: -12.850212097167969
    4. '	idx' → logprob: -13.350212097167969
    5. '(idx' → logprob: -14.600212097167969
    6. '           ' → logprob: -14.600212097167969
    7. '_idx' → logprob: -15.850212097167969
    8. '.idx' → logprob: -16.35021209716797
    9. '               ' → logprob: -16.72521209716797
    10. ' ' → logprob: -16.85021209716797

Token 510: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3869304656982422
    2. ' <' → logprob: -1.1369304656982422
    3. '           ' → logprob: -10.511930465698242
    4. '<n' → logprob: -10.636930465698242
    5. '<len' → logprob: -12.886930465698242
    6. '<int' → logprob: -13.886930465698242
    7. '               ' → logprob: -14.261930465698242
    8. 'and' → logprob: -14.636930465698242
    9. 'self' → logprob: -14.886930465698242
    10. '            ' → logprob: -15.511930465698242

Token 511: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008616581559181213
    2. ' self' → logprob: -4.7586164474487305
    3. '       ' → logprob: -14.38361644744873
    4. '           ' → logprob: -14.63361644744873
    5. '(self' → logprob: -15.25861644744873
    6. '   ' → logprob: -15.25861644744873
    7. '=self' → logprob: -16.133617401123047
    8. ' ' → logprob: -16.258617401123047
    9. '[self' → logprob: -16.258617401123047
    10. '	self' → logprob: -16.758617401123047

Token 512: '.n' (ID: 1835)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015222413931041956
    2. ' self' → logprob: -6.501522064208984
    3. 'n' → logprob: -11.251522064208984
    4. '       ' → logprob: -12.751522064208984
    5. '           ' → logprob: -13.126522064208984
    6. '   ' → logprob: -14.501522064208984
    7. '               ' → logprob: -15.376522064208984
    8. '.self' → logprob: -15.376522064208984
    9. '	self' → logprob: -15.376522064208984
    10. '.n' → logprob: -15.626522064208984

Token 513: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.313277930021286
    2. '-' → logprob: -1.3132779598236084
    3. '           ' → logprob: -11.188278198242188
    4. '               ' → logprob: -14.063278198242188
    5. '1' → logprob: -14.188278198242188
    6. '       ' → logprob: -15.063278198242188
    7. ' ' → logprob: -16.188278198242188
    8. '   ' → logprob: -16.438278198242188
    9. '2' → logprob: -16.563278198242188
    10. 'n' → logprob: -16.563278198242188

Token 514: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002830673009157181
    2. ' ' → logprob: -5.877830505371094
    3. '2' → logprob: -11.627830505371094
    4. '-' → logprob: -11.752830505371094
    5. '           ' → logprob: -13.002830505371094
    6. '   ' → logprob: -13.252830505371094
    7. '7' → logprob: -13.502830505371094
    8. 'self' → logprob: -14.127830505371094
    9. '8' → logprob: -14.252830505371094
    10. ' -' → logprob: -14.377830505371094

Token 515: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06910674273967743
    2. 'self' → logprob: -3.0691068172454834
    3. '-' → logprob: -4.069106578826904
    4. '7' → logprob: -6.444106578826904
    5. ' ' → logprob: -7.319106578826904
    6. 'n' → logprob: -7.944106578826904
    7. '2' → logprob: -8.444107055664062
    8. '8' → logprob: -8.944107055664062
    9. ' self' → logprob: -9.444107055664062
    10. ' -' → logprob: -9.819107055664062

Token 516: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7214774489402771
    2. ':
' → logprob: -0.7214774489402771
    3. '):
' → logprob: -4.096477508544922
    4. '           ' → logprob: -5.096477508544922
    5. ':' → logprob: -5.846477508544922
    6. ',' → logprob: -6.221477508544922
    7. '       ' → logprob: -9.596477508544922
    8. ',
' → logprob: -9.596477508544922
    9. '):' → logprob: -9.596477508544922
    10. '              ' → logprob: -10.596477508544922

Token 517: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.048608142882585526
    2. '           ' → logprob: -3.0486080646514893
    3. 'affected' → logprob: -11.79860782623291
    4. '              ' → logprob: -12.42360782623291
    5. '       ' → logprob: -12.67360782623291
    6. '{
' → logprob: -13.67360782623291
    7. '   ' → logprob: -13.67360782623291
    8. '```' → logprob: -14.17360782623291
    9. '          ' → logprob: -14.42360782623291
    10. '                   ' → logprob: -14.54860782623291

Token 518: ' affected' (ID: 18155)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06342197954654694
    2. '           ' → logprob: -2.8134219646453857
    3. 'affected' (adapté à ' affected') → logprob: -6.563422203063965
    4. ' affected' → logprob: -11.313422203063965
    5. '              ' → logprob: -11.688422203063965
    6. '   ' → logprob: -11.938422203063965
    7. '            ' → logprob: -12.188422203063965
    8. '```' → logprob: -12.688422203063965
    9. '       ' → logprob: -13.313422203063965
    10. '                   ' → logprob: -13.438422203063965

Token 519: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0007191036129370332
    2. '.' → logprob: -7.25071907043457
    3. '               ' → logprob: -12.37571907043457
    4. '           ' → logprob: -12.50071907043457
    5. 'add' → logprob: -14.25071907043457
    6. '.Add' → logprob: -14.87571907043457
    7. ' .' → logprob: -16.87571907043457
    8. '.insert' → logprob: -17.62571907043457
    9. '   ' → logprob: -18.25071907043457
    10. '.append' → logprob: -18.25071907043457

Token 520: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.16024291515350342
    2. 'idx' → logprob: -1.9102429151535034
    3. ' idx' → logprob: -11.035243034362793
    4. '           ' → logprob: -14.035243034362793
    5. '[idx' → logprob: -14.160243034362793
    6. '               ' → logprob: -14.410243034362793
    7. '	idx' → logprob: -14.660243034362793
    8. '                   ' → logprob: -16.160242080688477
    9. '(
' → logprob: -17.160242080688477
    10. '       ' → logprob: -18.785242080688477

Token 521: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.44895631074905396
    2. '       ' → logprob: -1.1989562511444092
    3. ')' → logprob: -2.823956251144409
    4. '):
' → logprob: -7.323956489562988
    5. '           ' → logprob: -9.198956489562988
    6. ')
' → logprob: -10.073956489562988
    7. ')

' → logprob: -12.073956489562988
    8. '   ' → logprob: -12.698956489562988
    9. '               ' → logprob: -12.698956489562988
    10. '):' → logprob: -13.323956489562988

Token 522: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001967457792488858
    2. ' for' → logprob: -9.00019645690918
    3. '   ' → logprob: -10.12519645690918
    4. 'for' → logprob: -10.62519645690918
    5. '```' → logprob: -12.25019645690918
    6. '           ' → logprob: -12.75019645690918
    7. 'self' → logprob: -14.75019645690918
    8. '<|end|>' → logprob: -15.50019645690918
    9. '               ' → logprob: -15.62519645690918
    10. '
' → logprob: -15.75019645690918

Token 523: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6711986064910889
    2. 'for' (adapté à ' for') → logprob: -0.9211986064910889
    3. ' for' → logprob: -2.421198606491089
    4. 'self' → logprob: -6.296198844909668
    5. '   ' → logprob: -9.171198844909668
    6. ' self' → logprob: -10.296198844909668
    7. '           ' → logprob: -10.296198844909668
    8. '	for' → logprob: -11.671198844909668
    9. '```' → logprob: -11.921198844909668
    10. '+' → logprob: -12.546198844909668

Token 524: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.25192973017692566
    2. 'idx' → logprob: -1.501929759979248
    3. '	idx' → logprob: -15.00192928314209
    4. '(idx' → logprob: -16.251930236816406
    5. '[idx' → logprob: -16.626930236816406
    6. '_idx' → logprob: -17.501930236816406
    7. 'self' → logprob: -17.501930236816406
    8. '           ' → logprob: -17.751930236816406
    9. '   ' → logprob: -18.126930236816406
    10. '       ' → logprob: -18.626930236816406

Token 525: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0026267850771546364
    2. 'in' → logprob: -6.377626895904541
    3. '           ' → logprob: -7.252626895904541
    4. '        ' → logprob: -10.002626419067383
    5. '<|end|>' → logprob: -10.252626419067383
    6. ' +=' → logprob: -10.377626419067383
    7. '.add' → logprob: -10.627626419067383
    8. '            ' → logprob: -10.877626419067383
    9. '          ' → logprob: -11.627626419067383
    10. '   ' → logprob: -12.127626419067383

Token 526: ' affected' (ID: 18155)
  Prédit: 'affected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'affected' → logprob: -0.0007113590254448354
    2. ' affected' → logprob: -7.250711441040039
    3. '(' → logprob: -13.750711441040039
    4. 'ffected' → logprob: -15.625711441040039
    5. 'self' → logprob: -16.87571144104004
    6. 'Affected' → logprob: -18.00071144104004
    7. '{' → logprob: -18.12571144104004
    8. ' (' → logprob: -18.50071144104004
    9. '   ' → logprob: -19.12571144104004
    10. '[' → logprob: -19.12571144104004

Token 527: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3946077823638916
    2. ':' → logprob: -1.2696077823638916
    3. ':
' → logprob: -3.1446077823638916
    4. ' +=' → logprob: -6.6446075439453125
    5. '+=' → logprob: -9.019607543945312
    6. 'self' → logprob: -9.394607543945312
    7. ' :' → logprob: -9.519607543945312
    8. '   ' → logprob: -9.769607543945312
    9. '[self' → logprob: -10.144607543945312
    10. '.add' → logprob: -10.269607543945312

Token 528: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003256734926253557
    2. ' self' → logprob: -6.128256797790527
    3. 'self' → logprob: -6.878256797790527
    4. '               ' → logprob: -11.378256797790527
    5. '       ' → logprob: -11.753256797790527
    6. '   ' → logprob: -12.378256797790527
    7. '	       ' → logprob: -12.628256797790527
    8. '<|end|>' → logprob: -12.628256797790527
    9. '```' → logprob: -12.878256797790527
    10. '(self' → logprob: -13.503256797790527

Token 529: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.011167259886860847
    2. ' self' → logprob: -4.511167049407959
    3. '           ' → logprob: -9.511167526245117
    4. '               ' → logprob: -10.136167526245117
    5. '	self' → logprob: -12.761167526245117
    6. '   ' → logprob: -13.511167526245117
    7. '       ' → logprob: -14.011167526245117
    8. ' ' → logprob: -15.261167526245117
    9. '[self' → logprob: -15.886167526245117
    10. '```' → logprob: -16.136167526245117

Token 530: '.total' (ID: 23374)
  Prédit: '.total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -0.2017873227596283
    2. 'total' → logprob: -1.7017873525619507
    3. '.' → logprob: -8.076786994934082
    4. ' total' → logprob: -9.826786994934082
    5. '	total' → logprob: -12.326786994934082
    6. '_total' → logprob: -13.701786994934082
    7. '$total' → logprob: -14.076786994934082
    8. ' .' → logprob: -14.576786994934082
    9. '.token' → logprob: -14.701786994934082
    10. '.
' → logprob: -14.701786994934082

Token 531: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -8.41866585687967e-06
    2. 'in' → logprob: -12.625008583068848
    3. '+=' → logprob: -12.750008583068848
    4. 'In' → logprob: -13.500008583068848
    5. ' +=' → logprob: -15.375008583068848
    6. 'total' → logprob: -16.37500762939453
    7. '_' → logprob: -16.50000762939453
    8. '\' → logprob: -16.50000762939453
    9. '_inter' → logprob: -17.25000762939453
    10. '+' → logprob: -17.37500762939453

Token 532: 'versions' (ID: 48579)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5184382796287537
    2. '_in' → logprob: -1.0184383392333984
    3. 'versions' → logprob: -3.5184383392333984
    4. '+=' → logprob: -5.393438339233398
    5. ' +=' → logprob: -5.893438339233398
    6. 'v' → logprob: -5.893438339233398
    7. 'version' → logprob: -7.018438339233398
    8. 'total' → logprob: -7.518438339233398
    9. 'add' → logprob: -7.643438339233398
    10. 'self' → logprob: -8.018438339233398

Token 533: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.201427161693573
    2. ' +=' → logprob: -1.7014272212982178
    3. '   ' → logprob: -12.076427459716797
    4. '    ' → logprob: -12.826427459716797
    5. '+=(' → logprob: -12.826427459716797
    6. ']+=' → logprob: -13.576427459716797
    7. '+' → logprob: -14.076427459716797
    8. '+='' → logprob: -14.951427459716797
    9. '+="' → logprob: -16.326427459716797
    10. '            ' → logprob: -16.326427459716797

Token 534: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03804286941885948
    2. ' self' → logprob: -3.2880427837371826
    3. '1' → logprob: -13.913043022155762
    4. '(self' → logprob: -14.913043022155762
    5. '	self' → logprob: -16.663042068481445
    6. '[self' → logprob: -18.413042068481445
    7. ' ' → logprob: -18.663042068481445
    8. '+self' → logprob: -18.663042068481445
    9. '*self' → logprob: -18.663042068481445
    10. '           ' → logprob: -18.788042068481445

Token 535: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.38707682490348816
    2. '_check' → logprob: -1.1370768547058105
    3. '.check' → logprob: -8.762076377868652
    4. ' _' → logprob: -10.887076377868652
    5. '_code' → logprob: -11.762076377868652
    6. '_elements' → logprob: -12.137076377868652
    7. '```' → logprob: -12.637076377868652
    8. 'elements' → logprob: -13.387076377868652
    9. '_checked' → logprob: -13.512076377868652
    10. '.elements' → logprob: -13.887076377868652

Token 536: 'check' (ID: 3416)
  Prédit: 'check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -1.1472419600977446e-06
    2. '_check' → logprob: -14.125000953674316
    3. '(check' → logprob: -15.625000953674316
    4. '.check' → logprob: -16.500001907348633
    5. ' check' → logprob: -16.750001907348633
    6. '	check' → logprob: -17.500001907348633
    7. '```' → logprob: -19.000001907348633
    8. '   ' → logprob: -19.625001907348633
    9. 'chec' → logprob: -20.250001907348633
    10. 'checking' → logprob: -20.375001907348633

Token 537: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -4.4849443838757e-06
    2. 'pair' → logprob: -12.500004768371582
    3. '_pairs' → logprob: -15.625004768371582
    4. 'idx' → logprob: -15.750004768371582
    5. 'Pair' → logprob: -15.750004768371582
    6. '(idx' → logprob: -16.625003814697266
    7. '_part' → logprob: -16.875003814697266
    8. '_PAIR' → logprob: -17.125003814697266
    9. '_check' → logprob: -17.250003814697266
    10. '(pair' → logprob: -17.375003814697266

Token 538: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -13.250003814697266
    3. '(index' → logprob: -13.250003814697266
    4. ' (' → logprob: -16.750003814697266
    5. '[idx' → logprob: -16.875003814697266
    6. '(i' → logprob: -17.125003814697266
    7. '(id' → logprob: -17.625003814697266
    8. '(
' → logprob: -17.750003814697266
    9. '(ix' → logprob: -18.125003814697266
    10. '(ii' → logprob: -18.375003814697266

Token 539: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.688212614681106e-05
    2. ')
' → logprob: -11.625017166137695
    3. '<|end|>' → logprob: -12.250017166137695
    4. ' )' → logprob: -13.500017166137695
    5. ')#' → logprob: -14.625017166137695
    6. ')return' → logprob: -14.750017166137695
    7. '}' → logprob: -14.875017166137695
    8. ')}' → logprob: -15.625017166137695
    9. '```' → logprob: -16.000017166137695
    10. '()' → logprob: -16.875017166137695

Token 540: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 541: ' Bo' (ID: 4381)
  Prédit: 'Sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -1.3652198314666748
    2. ' Sequence' → logprob: -1.3652198314666748
    3. 'Permutation' → logprob: -2.740219831466675
    4. ' Bubble' → logprob: -3.365219831466675
    5. 'Bubble' → logprob: -3.615219831466675
    6. ' Merge' → logprob: -3.615219831466675
    7. 'Sorter' → logprob: -4.115220069885254
    8. 'Sorting' → logprob: -4.240220069885254
    9. ' Perm' → logprob: -4.240220069885254
    10. 'Sorted' → logprob: -4.365220069885254

Token 542: 'zos' (ID: 44323)
  Prédit: 'olean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'olean' → logprob: -1.662906527519226
    2. 'ok' → logprob: -2.1629066467285156
    3. 'oling' → logprob: -2.1629066467285156
    4. 'ard' → logprob: -2.5379066467285156
    5. 'at' → logprob: -2.7879066467285156
    6. 'x' → logprob: -2.9129066467285156
    7. 'ol' → logprob: -3.1629066467285156
    8. 'oster' → logprob: -3.5379066467285156
    9. 't' → logprob: -3.5379066467285156
    10. 'oking' → logprob: -3.9129066467285156

Token 543: 'ort' (ID: 390)
  Prédit: 'ort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ort' → logprob: -0.0032536466605961323
    2. 'orter' → logprob: -6.25325345993042
    3. 'Sorter' → logprob: -7.87825345993042
    4. 'wap' → logprob: -8.128253936767578
    5. '```' → logprob: -9.003253936767578
    6. 'Sort' → logprob: -9.128253936767578
    7. 'Sequence' → logprob: -9.128253936767578
    8. 'orting' → logprob: -9.878253936767578
    9. 'orted' → logprob: -9.878253936767578
    10. 'Algorithm' → logprob: -10.378253936767578

Token 544: 'Simulation' (ID: 71306)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011056075803935528
    2. ':
' → logprob: -4.511055946350098
    3. ':

' → logprob: -12.511055946350098
    4. '(object' → logprob: -13.761055946350098
    5. ':def' → logprob: -13.761055946350098
    6. ' :' → logprob: -14.011055946350098
    7. '():' → logprob: -14.636055946350098
    8. '(' → logprob: -15.136055946350098
    9. ':
' → logprob: -15.386055946350098
    10. '):' → logprob: -16.011056900024414

Token 545: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002811886603012681
    2. ':
' → logprob: -5.877811908721924
    3. ' :' → logprob: -13.127811431884766
    4. ':def' → logprob: -13.377811431884766
    5. '(' → logprob: -13.627811431884766
    6. ':

' → logprob: -13.752811431884766
    7. '):' → logprob: -14.877811431884766
    8. ':**' → logprob: -15.752811431884766
    9. '():' → logprob: -16.252811431884766
    10. '>:' → logprob: -16.377811431884766

Token 546: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003806257154792547
    2. ' def' → logprob: -8.625380516052246
    3. ':
' → logprob: -9.125380516052246
    4. 'def' → logprob: -10.625380516052246
    5. '    
' → logprob: -11.125380516052246
    6. ':' → logprob: -11.375380516052246
    7. '```' → logprob: -11.625380516052246
    8. 'class' → logprob: -11.750380516052246
    9. '
' → logprob: -12.000380516052246
    10. '(
' → logprob: -12.625380516052246

Token 547: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0187686737626791
    2. 'def' (adapté à ' def') → logprob: -4.018768787384033
    3. '   ' → logprob: -7.393768787384033
    4. 'class' → logprob: -12.893768310546875
    5. '```' → logprob: -14.143768310546875
    6. ' class' → logprob: -15.893768310546875
    7. ' __' → logprob: -17.143768310546875
    8. '	def' → logprob: -17.143768310546875
    9. ' ' → logprob: -17.768768310546875
    10. ':def' → logprob: -17.893768310546875

Token 548: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1604313850402832
    2. '__' → logprob: -1.9104313850402832
    3. 'init' → logprob: -8.660430908203125
    4. '_init' → logprob: -10.785430908203125
    5. ' init' → logprob: -11.535430908203125
    6. ' def' → logprob: -13.410430908203125
    7. '```' → logprob: -14.160430908203125
    8. 'def' → logprob: -14.160430908203125
    9. ' ' → logprob: -15.285430908203125
    10. '.__' → logprob: -16.535430908203125

Token 549: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -17.125
    3. 'ini' → logprob: -18.0
    4. 'def' → logprob: -18.125
    5. 'int' → logprob: -18.5
    6. '(init' → logprob: -20.0
    7. '_init' → logprob: -20.25
    8. 'class' → logprob: -20.375
    9. 'inite' → logprob: -20.625
    10. 'i' → logprob: -20.625

Token 550: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00023750975378789008
    2. '__' → logprob: -8.625237464904785
    3. '__(
' → logprob: -10.000237464904785
    4. '(self' → logprob: -11.500237464904785
    5. '__((' → logprob: -13.500237464904785
    6. '(' → logprob: -14.750237464904785
    7. '_(' → logprob: -16.0002384185791
    8. '__[' → logprob: -16.1252384185791
    9. ' (' → logprob: -16.2502384185791
    10. '__("' → logprob: -16.5002384185791

Token 551: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00030388421146199107
    2. ',' → logprob: -8.250304222106934
    3. ' self' → logprob: -10.250304222106934
    4. 'elements' → logprob: -12.375304222106934
    5. '   ' → logprob: -13.750304222106934
    6. ',self' → logprob: -13.875304222106934
    7. '(self' → logprob: -14.875304222106934
    8. '       ' → logprob: -15.500304222106934
    9. '
' → logprob: -15.500304222106934
    10. '```' → logprob: -16.250303268432617

Token 552: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030388421146199107
    2. 'self' → logprob: -8.250304222106934
    3. ' ,' → logprob: -10.625304222106934
    4. ',self' → logprob: -11.750304222106934
    5. '(self' → logprob: -12.250304222106934
    6. ',
' → logprob: -12.875304222106934
    7. 'elements' → logprob: -14.125304222106934
    8. '   ' → logprob: -14.250304222106934
    9. ' (' → logprob: -14.625304222106934
    10. ' self' → logprob: -15.000304222106934

Token 553: ' sequence' (ID: 16281)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.27134284377098083
    2. 'sequence' → logprob: -2.1463427543640137
    3. ' elements' → logprob: -2.3963427543640137
    4. ' sequence' → logprob: -3.8963427543640137
    5. 'arr' → logprob: -5.271342754364014
    6. 'array' → logprob: -6.146342754364014
    7. 'self' → logprob: -7.646342754364014
    8. 'initial' → logprob: -7.771342754364014
    9. 'n' → logprob: -7.896342754364014
    10. ' array' → logprob: -8.896343231201172

Token 554: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12570832669734955
    2. '):
' → logprob: -2.2507083415985107
    3. ',' → logprob: -4.375708103179932
    4. ':' → logprob: -8.87570858001709
    5. ' ):' → logprob: -10.50070858001709
    6. '):
' → logprob: -10.62570858001709
    7. '   ' → logprob: -11.62570858001709
    8. ')' → logprob: -12.25070858001709
    9. '_elements' → logprob: -13.12570858001709
    10. ' ' → logprob: -13.37570858001709

Token 555: ' commands' (ID: 23877)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'swap' → logprob: -1.4013142585754395
    2. 'max' → logprob: -1.5263142585754395
    3. 'target' → logprob: -2.2763142585754395
    4. 'num' → logprob: -2.5263142585754395
    5. ' swaps' → logprob: -2.7763142585754395
    6. 'k' → logprob: -2.7763142585754395
    7. ' max' → logprob: -2.9013142585754395
    8. ' swap' → logprob: -3.2763142585754395
    9. 'K' → logprob: -4.1513142585754395
    10. 'steps' → logprob: -4.4013142585754395

Token 556: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3887846767902374
    2. '):' → logprob: -1.138784646987915
    3. '=[]' → logprob: -6.888784885406494
    4. ':' → logprob: -8.013784408569336
    5. '=None' → logprob: -8.888784408569336
    6. '):
' → logprob: -9.138784408569336
    7. ',' → logprob: -9.263784408569336
    8. '   ' → logprob: -9.888784408569336
    9. '=' → logprob: -10.138784408569336
    10. '[]):' → logprob: -10.138784408569336

Token 557: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019348083063960075
    2. ':' → logprob: -4.51934814453125
    3. '   ' → logprob: -5.01934814453125
    4. ':
' → logprob: -7.89434814453125
    5. '        
' → logprob: -8.39434814453125
    6. '(' → logprob: -8.39434814453125
    7. ',' → logprob: -8.64434814453125
    8. '<|end|>' → logprob: -8.64434814453125
    9. '(self' → logprob: -9.26934814453125
    10. '```' → logprob: -9.39434814453125

Token 558: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.17572294175624847
    2. ' self' → logprob: -1.9257229566574097
    3. '       ' → logprob: -4.175723075866699
    4. '   ' → logprob: -11.3007230758667
    5. 'class' → logprob: -14.3007230758667
    6. ' ' → logprob: -14.4257230758667
    7. '```' → logprob: -14.6757230758667
    8. '
' → logprob: -15.0507230758667
    9. 'import' → logprob: -15.4257230758667
    10. 'super' → logprob: -15.8007230758667

Token 559: '.state' (ID: 6696)
  Prédit: '.elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.elements' → logprob: -0.7314895987510681
    2. '.sequence' → logprob: -0.7314895987510681
    3. '.' → logprob: -3.356489658355713
    4. ' .' → logprob: -6.231489658355713
    5. ' =' → logprob: -8.231489181518555
    6. '.n' → logprob: -8.606489181518555
    7. '.se' → logprob: -9.356489181518555
    8. '   ' → logprob: -9.981489181518555
    9. 'elements' → logprob: -10.106489181518555
    10. '_sequence' → logprob: -10.606489181518555

Token 560: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018158724531531334
    2. '=' → logprob: -4.018158912658691
    3. '   ' → logprob: -12.018158912658691
    4. ' ' → logprob: -13.643158912658691
    5. ' =
' → logprob: -14.518158912658691
    6. '<|end|>' → logprob: -15.393158912658691
    7. '.' → logprob: -15.643158912658691
    8. '    ' → logprob: -15.768158912658691
    9. '=self' → logprob: -16.268157958984375
    10. '  ' → logprob: -16.393157958984375

Token 561: ' Sequence' (ID: 57144)
  Prédit: 'Sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -0.6931471824645996
    2. ' Sequence' → logprob: -0.6931471824645996
    3. ' sequence' → logprob: -17.818147659301758
    4. '_sequence' → logprob: -18.443147659301758
    5. '.Sequence' → logprob: -20.693147659301758
    6. '   ' → logprob: -21.068147659301758
    7. 'sequence' → logprob: -21.318147659301758
    8. 'Sequ' → logprob: -22.943147659301758
    9. ' ' → logprob: -23.693147659301758
    10. ' ' → logprob: -23.693147659301758

Token 562: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: 0.0
    2. 'Sequence' → logprob: -17.625
    3. '_state' → logprob: -18.75
    4. 'States' → logprob: -19.375
    5. 'state' → logprob: -19.5
    6. '	State' → logprob: -19.875
    7. 'Status' → logprob: -20.5
    8. 's' → logprob: -20.75
    9. '_State' → logprob: -20.875
    10. '   ' → logprob: -21.375

Token 563: '(sequence' (ID: 129991)
  Prédit: '(sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sequence' → logprob: -2.7848862373502925e-05
    2. 'sequence' → logprob: -10.500027656555176
    3. '(list' → logprob: -16.125028610229492
    4. '(commands' → logprob: -16.625028610229492
    5. '(' → logprob: -17.375028610229492
    6. ' sequence' → logprob: -17.750028610229492
    7. '(
' → logprob: -18.875028610229492
    8. 'commands' → logprob: -20.000028610229492
    9. '.sequence' → logprob: -20.250028610229492
    10. '(copy' → logprob: -20.875028610229492

Token 564: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.030477242544293404
    2. ')' → logprob: -4.155477046966553
    3. ',' → logprob: -4.280477046966553
    4. '       ' → logprob: -7.655477046966553
    5. ')
' → logprob: -11.530477523803711
    6. '   ' → logprob: -12.155477523803711
    7. ' )
' → logprob: -12.405477523803711
    8. ',)
' → logprob: -12.655477523803711
    9. '[' → logprob: -13.280477523803711
    10. ',
' → logprob: -13.280477523803711

Token 565: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35176417231559753
    2. '   ' → logprob: -1.22676420211792
    3. '
' → logprob: -6.35176420211792
    4. ' self' → logprob: -7.10176420211792
    5. 'self' → logprob: -7.47676420211792
    6. '```' → logprob: -9.726763725280762
    7. ',' → logprob: -9.851763725280762
    8. 'def' → logprob: -10.476763725280762
    9. '        
' → logprob: -11.601763725280762
    10. '    
' → logprob: -11.726763725280762

Token 566: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0005631613312289119
    2. ' self' → logprob: -7.750563144683838
    3. 'for' → logprob: -9.250563621520996
    4. '       ' → logprob: -10.250563621520996
    5. '
' → logprob: -14.125563621520996
    6. ' for' → logprob: -15.625563621520996
    7. '   ' → logprob: -15.750563621520996
    8. 'def' → logprob: -17.50056266784668
    9. 'class' → logprob: -17.87556266784668
    10. 'from' → logprob: -18.75056266784668

Token 567: '.commands' (ID: 61085)
  Prédit: '.commands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.commands' → logprob: -0.00272058742120862
    2. 'commands' → logprob: -6.127720355987549
    3. '.' → logprob: -8.002720832824707
    4. '.command' → logprob: -9.627720832824707
    5. '.current' → logprob: -10.002720832824707
    6. '.sequence' → logprob: -11.002720832824707
    7. '.initial' → logprob: -11.627720832824707
    8. '.swap' → logprob: -12.002720832824707
    9. '.instructions' → logprob: -12.752720832824707
    10. '_commands' → logprob: -12.877720832824707

Token 568: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693209946155548
    2. ' =' → logprob: -2.126932144165039
    3. ')' → logprob: -13.876932144165039
    4. '=[]' → logprob: -14.376932144165039
    5. '.append' → logprob: -14.876932144165039
    6. '.extend' → logprob: -14.876932144165039
    7. '<|end|>' → logprob: -15.001932144165039
    8. '   ' → logprob: -15.001932144165039
    9. '_' → logprob: -15.251932144165039
    10. ' ' → logprob: -15.376932144165039

Token 569: ' commands' (ID: 23877)
  Prédit: 'commands'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'commands' → logprob: -0.018150994554162025
    2. ' commands' → logprob: -4.018150806427002
    3. '(commands' → logprob: -14.39315128326416
    4. 'list' → logprob: -14.76815128326416
    5. 'command' → logprob: -16.143150329589844
    6. '.commands' → logprob: -16.768150329589844
    7. 'Commands' → logprob: -17.518150329589844
    8. 'iter' → logprob: -17.768150329589844
    9. ' list' → logprob: -18.518150329589844
    10. '[]' → logprob: -18.768150329589844

Token 570: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2834254205226898
    2. '   ' → logprob: -1.4084254503250122
    3. '    
' → logprob: -7.158425331115723
    4. '<|end|>' → logprob: -7.533425331115723
    5. 'def' → logprob: -8.033425331115723
    6. ' def' → logprob: -8.033425331115723
    7. '<|end|>' → logprob: -9.658425331115723
    8. ' 
' → logprob: -10.283425331115723
    9. '
' → logprob: -10.408425331115723
    10. '	def' → logprob: -10.658425331115723

Token 571: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08807587623596191
    2. '
' → logprob: -2.588075876235962
    3. 'def' → logprob: -5.088075637817383
    4. '    
' → logprob: -6.463075637817383
    5. ' def' → logprob: -7.213075637817383
    6. '<|end|>' → logprob: -7.963075637817383
    7. '```' → logprob: -8.838075637817383
    8. '	def' → logprob: -10.338075637817383
    9. '       ' → logprob: -10.463075637817383
    10. '        
' → logprob: -10.713075637817383

Token 572: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0001843485952122137
    2. ' def' → logprob: -9.125184059143066
    3. '   ' → logprob: -9.500184059143066
    4. ' ' → logprob: -15.375184059143066
    5. '	def' → logprob: -16.125185012817383
    6. '
' → logprob: -16.250185012817383
    7. 'current' → logprob: -16.750185012817383
    8. '```' → logprob: -17.750185012817383
    9. 'self' → logprob: -18.500185012817383
    10. '    
' → logprob: -18.875185012817383

Token 573: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.43298059701919556
    2. ' run' → logprob: -1.0579805374145508
    3. 'process' → logprob: -6.307980537414551
    4. 'execute' → logprob: -6.682980537414551
    5. ' process' → logprob: -7.557980537414551
    6. ' execute' → logprob: -8.05798053741455
    7. 'simulate' → logprob: -8.18298053741455
    8. 'play' → logprob: -10.55798053741455
    9. ' simulate' → logprob: -10.55798053741455
    10. '_run' → logprob: -11.80798053741455

Token 574: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.030177617445588112
    2. '(' → logprob: -3.530177593231201
    3. 'self' → logprob: -8.78017807006836
    4. '()' → logprob: -8.90517807006836
    5. '_' → logprob: -9.53017807006836
    6. '(
' → logprob: -10.28017807006836
    7. '   ' → logprob: -10.90517807006836
    8. '```' → logprob: -13.03017807006836
    9. '       ' → logprob: -13.15517807006836
    10. '_(' → logprob: -13.28017807006836

Token 575: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09153329581022263
    2. '):
' → logprob: -2.4665331840515137
    3. 'self' → logprob: -6.466533184051514
    4. '):
' → logprob: -7.591533184051514
    5. '(self' → logprob: -8.091533660888672
    6. '   ' → logprob: -9.591533660888672
    7. '_' → logprob: -10.216533660888672
    8. ' ):' → logprob: -10.466533660888672
    9. '       ' → logprob: -10.591533660888672
    10. ')' → logprob: -11.341533660888672

Token 576: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013922579819336534
    2. ' for' → logprob: -6.751392364501953
    3. '
' → logprob: -8.876392364501953
    4. 'for' → logprob: -9.626392364501953
    5. '```' → logprob: -11.251392364501953
    6. '   ' → logprob: -13.251392364501953
    7. '      ' → logprob: -15.126392364501953
    8. '
' → logprob: -15.751392364501953
    9. '``' → logprob: -15.751392364501953
    10. '           ' → logprob: -16.001392364501953

Token 577: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15266838669776917
    2. 'for' → logprob: -2.0276684761047363
    3. '       ' → logprob: -4.652668476104736
    4. ' result' → logprob: -8.402667999267578
    5. 'result' → logprob: -10.027667999267578
    6. ' current' → logprob: -10.277667999267578
    7. ' results' → logprob: -10.527667999267578
    8. '
' → logprob: -11.277667999267578
    9. ' total' → logprob: -11.402667999267578
    10. '   ' → logprob: -11.527667999267578

Token 578: ' self' (ID: 1051)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5799548625946045
    2. ' self' → logprob: -0.8299548625946045
    3. 'self' → logprob: -6.079955101013184
    4. ' len' → logprob: -6.829955101013184
    5. 'not' → logprob: -7.704955101013184
    6. ' all' → logprob: -8.954955101013184
    7. ' ' → logprob: -10.204955101013184
    8. ' any' → logprob: -11.954955101013184
    9. 'len' → logprob: -12.204955101013184
    10. ' isinstance' → logprob: -13.204955101013184

Token 579: '.state' (ID: 6696)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.6558542847633362
    2. '.state' → logprob: -0.7808542847633362
    3. ' .' → logprob: -4.655854225158691
    4. '.commands' → logprob: -4.905854225158691
    5. '.states' → logprob: -5.905854225158691
    6. 'state' → logprob: -6.655854225158691
    7. '.s' → logprob: -7.405854225158691
    8. 'is' → logprob: -7.530854225158691
    9. '.' → logprob: -8.280854225158691
    10. 'commands' → logprob: -9.155854225158691

Token 580: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -5.550411151489243e-05
    2. '.' → logprob: -10.125055313110352
    3. 'is' → logprob: -11.875055313110352
    4. '.isnan' → logprob: -12.500055313110352
    5. '.swap' → logprob: -13.250055313110352
    6. ' .' → logprob: -14.125055313110352
    7. '.isfile' → logprob: -15.750055313110352
    8. '.s' → logprob: -15.875055313110352
    9. '.has' → logprob: -15.875055313110352
    10. '   ' → logprob: -15.875055313110352

Token 581: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -6.682846287731081e-05
    2. '_' → logprob: -10.125066757202148
    3. 'sorted' → logprob: -10.625066757202148
    4. '_s' → logprob: -13.500066757202148
    5. '_initialized' → logprob: -15.125066757202148
    6. 's' → logprob: -16.00006675720215
    7. '```' → logprob: -16.62506675720215
    8. 'orted' → logprob: -16.62506675720215
    9. 'Sorted' → logprob: -16.87506675720215
    10. '_valid' → logprob: -16.87506675720215

Token 582: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.31334641575813293
    2. '():
' → logprob: -1.3133463859558105
    3. '()' → logprob: -9.813346862792969
    4. '():
' → logprob: -10.688346862792969
    5. ' ():' → logprob: -12.313346862792969
    6. ':' → logprob: -13.313346862792969
    7. '()==' → logprob: -14.938346862792969
    8. '       ' → logprob: -15.313346862792969
    9. '   ' → logprob: -15.813346862792969
    10. '():

' → logprob: -15.938346862792969

Token 583: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.044086139649152756
    2. ':
' → logprob: -3.294086217880249
    3. ':' → logprob: -5.91908597946167
    4. '():
' → logprob: -6.66908597946167
    5. '
' → logprob: -7.04408597946167
    6. ' return' → logprob: -7.66908597946167
    7. ':return' → logprob: -8.169086456298828
    8. 'return' → logprob: -8.419086456298828
    9. '():' → logprob: -10.169086456298828
    10. '(True' → logprob: -10.419086456298828

Token 584: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5960001349449158
    2. '           ' → logprob: -0.9710001349449158
    3. ' return' → logprob: -2.7210001945495605
    4. '
' → logprob: -5.4710001945495605
    5. 'print' → logprob: -8.845999717712402
    6. '   ' → logprob: -9.595999717712402
    7. ' print' → logprob: -11.470999717712402
    8. '               ' → logprob: -11.720999717712402
    9. '	return' → logprob: -11.845999717712402
    10. ':return' → logprob: -12.095999717712402

Token 585: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.5729037523269653
    2. ' None' → logprob: -1.6979037523269653
    3. 'None' → logprob: -1.6979037523269653
    4. ' True' → logprob: -1.9479037523269653
    5. 'True' → logprob: -2.072903633117676
    6. '0' → logprob: -2.447903633117676
    7. '"' → logprob: -3.697903633117676
    8. ' ' → logprob: -3.947903633117676
    9. 'False' → logprob: -4.822903633117676
    10. 'self' → logprob: -5.322903633117676

Token 586: '0' (ID: 15)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.39267221093177795
    2. '"' → logprob: -2.142672300338745
    3. 'self' → logprob: -2.267672300338745
    4. '0' → logprob: -3.142672300338745
    5. '[]' → logprob: -3.267672300338745
    6. '""' → logprob: -5.017672061920166
    7. ''' → logprob: -5.267672061920166
    8. '1' → logprob: -6.017672061920166
    9. 'None' → logprob: -6.142672061920166
    10. '''' → logprob: -6.517672061920166

Token 587: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011464396491646767
    2. '        
' → logprob: -4.886464595794678
    3. '       ' → logprob: -6.011464595794678
    4. ' 
' → logprob: -7.886464595794678
    5. '
' → logprob: -8.01146411895752
    6. '    
' → logprob: -8.26146411895752
    7. '\n' → logprob: -8.76146411895752
    8. '  
' → logprob: -9.13646411895752
    9. '
        
' → logprob: -10.13646411895752
    10. '       
' → logprob: -10.76146411895752

Token 588: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08900784701108932
    2. '       ' → logprob: -3.08900785446167
    3. '\n' → logprob: -3.58900785446167
    4. '        
' → logprob: -4.83900785446167
    5. '
' → logprob: -6.33900785446167
    6. ' 
' → logprob: -7.33900785446167
    7. '1' → logprob: -7.71400785446167
    8. '
        
' → logprob: -8.339007377624512
    9. '```' → logprob: -8.714007377624512
    10. '    
' → logprob: -8.714007377624512

Token 589: ' for' (ID: 395)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.24161790311336517
    2. 'count' → logprob: -2.2416179180145264
    3. '       ' → logprob: -2.9916179180145264
    4. 'for' (adapté à ' for') → logprob: -3.7416179180145264
    5. 'moves' → logprob: -4.491617679595947
    6. 'step' → logprob: -4.866617679595947
    7. ' steps' → logprob: -5.866617679595947
    8. 'result' → logprob: -5.991617679595947
    9. ' for' → logprob: -6.241617679595947
    10. ' count' → logprob: -6.616617679595947

Token 590: ' t' (ID: 260)
  Prédit: ' cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cmd' → logprob: -0.6468430161476135
    2. ' command' → logprob: -1.6468429565429688
    3. 'cmd' → logprob: -1.6468429565429688
    4. ' idx' → logprob: -3.0218429565429688
    5. 'command' → logprob: -3.7718429565429688
    6. ' i' → logprob: -5.021842956542969
    7. 'idx' → logprob: -5.521842956542969
    8. ' index' → logprob: -6.146842956542969
    9. 'i' → logprob: -6.396842956542969
    10. ' step' → logprob: -6.521842956542969

Token 591: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13071167469024658
    2. ' in' → logprob: -2.880711555480957
    3. 'ime' → logprob: -3.130711555480957
    4. 'oken' → logprob: -3.880711555480957
    5. 'okens' → logprob: -7.005711555480957
    6. 'ype' → logprob: -7.755711555480957
    7. ' ,' → logprob: -8.505711555480957
    8. '_,' → logprob: -8.505711555480957
    9. 'ok' → logprob: -9.005711555480957
    10. 'imestamp' → logprob: -10.505711555480957

Token 592: ' (' (ID: 350)
  Prédit: ' command'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' command' → logprob: -1.1596951484680176
    2. '(command' → logprob: -1.1596951484680176
    3. 'command' → logprob: -1.7846951484680176
    4. ' cmd' → logprob: -2.6596951484680176
    5. '(cmd' → logprob: -2.9096951484680176
    6. 'cmd' → logprob: -3.0346951484680176
    7. ' (' → logprob: -3.5346951484680176
    8. '(c' → logprob: -6.284695148468018
    9. '(i' → logprob: -7.659695148468018
    10. '(' → logprob: -7.909695148468018

Token 593: 'x' (ID: 87)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002302270382642746
    2. 'a' → logprob: -6.377302169799805
    3. 'x' → logprob: -8.502302169799805
    4. 'cmd' → logprob: -9.127302169799805
    5. 'command' → logprob: -9.502302169799805
    6. ' i' → logprob: -9.627302169799805
    7. ')' → logprob: -9.752302169799805
    8. '   ' → logprob: -10.752302169799805
    9. 'self' → logprob: -11.252302169799805
    10. 'op' → logprob: -11.502302169799805

Token 594: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005408303812146187
    2. ' ,' → logprob: -5.63040828704834
    3. ',y' → logprob: -6.38040828704834
    4. ',x' → logprob: -9.50540828704834
    5. ',j' → logprob: -11.63040828704834
    6. ',i' → logprob: -12.00540828704834
    7. ',t' → logprob: -12.38040828704834
    8. ' ' → logprob: -12.75540828704834
    9. '1' → logprob: -13.13040828704834
    10. ')' → logprob: -13.13040828704834

Token 595: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.02325270138680935
    2. ' y' → logprob: -3.7732527256011963
    3. '   ' → logprob: -13.148252487182617
    4. ' ' → logprob: -13.273252487182617
    5. ')' → logprob: -14.523252487182617
    6. '  ' → logprob: -14.773252487182617
    7. '    ' → logprob: -14.898252487182617
    8. 'x' → logprob: -15.023252487182617
    9. 'j' → logprob: -15.148252487182617
    10. '	y' → logprob: -15.273252487182617

Token 596: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.251091377227567e-05
    2. ' )' → logprob: -10.250042915344238
    3. ',' → logprob: -13.125042915344238
    4. '),' → logprob: -13.375042915344238
    5. ',)' → logprob: -14.000042915344238
    6. 'in' → logprob: -14.375042915344238
    7. ' in' → logprob: -14.625042915344238
    8. ')
' → logprob: -14.750042915344238
    9. ')`' → logprob: -15.125042915344238
    10. ')=' → logprob: -15.250042915344238

Token 597: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1271950900554657
    2. 'in' → logprob: -2.127195119857788
    3. ')' → logprob: -8.252195358276367
    4. ' )' → logprob: -13.127195358276367
    5. '   ' → logprob: -13.627195358276367
    6. ',' → logprob: -13.752195358276367
    7. '	in' → logprob: -14.377195358276367
    8. ' ' → logprob: -15.002195358276367
    9. '
' → logprob: -15.377195358276367
    10. ' ' → logprob: -15.502195358276367

Token 598: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.08190514147281647
    2. 'enumer' → logprob: -2.5819051265716553
    3. 'self' → logprob: -5.831905364990234
    4. ' self' → logprob: -9.456905364990234
    5. '   ' → logprob: -16.831905364990234
    6. '(self' → logprob: -17.331905364990234
    7. 'enum' → logprob: -18.581905364990234
    8. ' enumer' → logprob: -19.081905364990234
    9. ' ' → logprob: -19.081905364990234
    10. 'en' → logprob: -19.206905364990234

Token 599: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.016226617619395256
    2. ' self' → logprob: -4.516226768493652
    3. '(self' → logprob: -5.266226768493652
    4. ',' → logprob: -14.016226768493652
    5. '       ' → logprob: -15.016226768493652
    6. '[self' → logprob: -15.266226768493652
    7. '   ' → logprob: -15.266226768493652
    8. ')' → logprob: -15.391226768493652
    9. ',self' → logprob: -15.641226768493652
    10. '           ' → logprob: -15.891226768493652

Token 600: '.commands' (ID: 61085)
  Prédit: '.commands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.commands' → logprob: -4.060365608893335e-05
    2. 'commands' → logprob: -10.125041007995605
    3. ' .' → logprob: -15.875041007995605
    4. '.' → logprob: -16.37504005432129
    5. ').' → logprob: -16.75004005432129
    6. '   ' → logprob: -17.12504005432129
    7. '
' → logprob: -17.25004005432129
    8. 'self' → logprob: -17.37504005432129
    9. '(commands' → logprob: -17.62504005432129
    10. '.Commands' → logprob: -18.00004005432129

Token 601: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10394682735204697
    2. '):' → logprob: -2.3539469242095947
    3. '):
' → logprob: -5.728946685791016
    4. ' ,' → logprob: -7.978946685791016
    5. ' ):' → logprob: -9.978946685791016
    6. ':' → logprob: -10.353946685791016
    7. '       ' → logprob: -10.478946685791016
    8. '   ' → logprob: -10.603946685791016
    9. '):
' → logprob: -12.603946685791016
    10. ' ):
' → logprob: -14.103946685791016

Token 602: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10262314230203629
    2. 'start' → logprob: -2.352623224258423
    3. ' start' → logprob: -6.602622985839844
    4. ' ' → logprob: -6.852622985839844
    5. '   ' → logprob: -16.977622985839844
    6. '(start' → logprob: -17.102622985839844
    7. ',start' → logprob: -17.227622985839844
    8. '_start' → logprob: -17.727622985839844
    9. 'Start' → logprob: -17.727622985839844
    10. '	start' → logprob: -17.977622985839844

Token 603: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03805181756615639
    2. 'start' → logprob: -3.2880518436431885
    3. ' start' → logprob: -11.78805160522461
    4. ' ' → logprob: -12.78805160522461
    5. 'starting' → logprob: -19.03805160522461
    6. '2' → logprob: -19.16305160522461
    7. 'Start' → logprob: -19.66305160522461
    8. '_start' → logprob: -19.78805160522461
    9. '(start' → logprob: -19.91305160522461
    10. '0' → logprob: -20.28805160522461

Token 604: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.015114453621208668
    2. '):' → logprob: -4.2651143074035645
    3. ':' → logprob: -7.1401143074035645
    4. '):
' → logprob: -9.390114784240723
    5. ':
' → logprob: -10.265114784240723
    6. '       ' → logprob: -10.390114784240723
    7. '():
' → logprob: -12.140114784240723
    8. '           ' → logprob: -13.640114784240723
    9. ',' → logprob: -14.265114784240723
    10. ' ):
' → logprob: -14.265114784240723

Token 605: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00030817187507636845
    2. '
' → logprob: -8.7503080368042
    3. '       ' → logprob: -9.2503080368042
    4. 'self' → logprob: -11.1253080368042
    5. ' self' → logprob: -11.5003080368042
    6. '               ' → logprob: -12.0003080368042
    7. '```' → logprob: -12.0003080368042
    8. '<|end|>' → logprob: -12.5003080368042
    9. '          ' → logprob: -12.7503080368042
    10. '            
' → logprob: -13.1253080368042

Token 606: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5918156504631042
    2. ' self' → logprob: -0.9668156504631042
    3. '           ' → logprob: -2.716815710067749
    4. '               ' → logprob: -8.716815948486328
    5. '
' → logprob: -9.216815948486328
    6. '   ' → logprob: -11.841815948486328
    7. '       ' → logprob: -11.966815948486328
    8. ' if' → logprob: -12.216815948486328
    9. 'if' → logprob: -12.341815948486328
    10. '            
' → logprob: -12.716815948486328

Token 607: '.state' (ID: 6696)
  Prédit: '.state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.state' → logprob: -0.00022475497098639607
    2. 'state' → logprob: -8.500225067138672
    3. ' .' → logprob: -11.500225067138672
    4. '.' → logprob: -12.125225067138672
    5. ' state' → logprob: -13.750225067138672
    6. '.swap' → logprob: -13.875225067138672
    7. '   ' → logprob: -14.000225067138672
    8. '	state' → logprob: -14.500225067138672
    9. '.s' → logprob: -15.125225067138672
    10. '       ' → logprob: -15.125225067138672

Token 608: '.swap' (ID: 111356)
  Prédit: '.swap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.swap' → logprob: -2.816093228830141e-06
    2. '.' → logprob: -13.25000286102295
    3. '.s' → logprob: -15.50000286102295
    4. ' .' → logprob: -15.62500286102295
    5. '.swing' → logprob: -15.62500286102295
    6. '.sw' → logprob: -15.75000286102295
    7. '.flip' → logprob: -16.125001907348633
    8. '   ' → logprob: -16.875001907348633
    9. '.swt' → logprob: -17.000001907348633
    10. '	swap' → logprob: -17.375001907348633

Token 609: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.9623810658231378e-05
    2. '(' → logprob: -10.875020027160645
    3. '(
' → logprob: -14.500020027160645
    4. 'x' → logprob: -16.500019073486328
    5. ' (' → logprob: -17.500019073486328
    6. ' x' → logprob: -19.375019073486328
    7. '((' → logprob: -20.000019073486328
    8. ',x' → logprob: -20.875019073486328
    9. '<x' → logprob: -22.125019073486328
    10. '(

' → logprob: -22.625019073486328

Token 610: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008497710223309696
    2. ',y' → logprob: -7.500849723815918
    3. ' ,' → logprob: -8.125849723815918
    4. ',
' → logprob: -14.375849723815918
    5. 'y' → logprob: -16.625850677490234
    6. '‌,' → logprob: -16.750850677490234
    7. ',x' → logprob: -17.125850677490234
    8. '<|end|>' → logprob: -17.250850677490234
    9. '           ' → logprob: -17.750850677490234
    10. ' y' → logprob: -18.000850677490234

Token 611: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10020678490400314
    2. ' y' → logprob: -2.3502068519592285
    3. ')y' → logprob: -16.47520637512207
    4. '	y' → logprob: -16.97520637512207
    5. '<|end|>' → logprob: -18.60020637512207
    6. '           ' → logprob: -19.22520637512207
    7. '    ' → logprob: -19.35020637512207
    8. '‘y' → logprob: -19.47520637512207
    9. '            ' → logprob: -19.60020637512207
    10. ''y' → logprob: -19.72520637512207

Token 612: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04058146849274635
    2. ')' → logprob: -3.290581464767456
    3. '           ' → logprob: -6.040581703186035
    4. ')
' → logprob: -8.790581703186035
    5. ')

' → logprob: -13.415581703186035
    6. '       ' → logprob: -13.790581703186035
    7. '               ' → logprob: -14.165581703186035
    8. ')return' → logprob: -15.040581703186035
    9. ' )
' → logprob: -15.790581703186035
    10. '          ' → logprob: -16.16558074951172

Token 613: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.2378600735682994e-05
    2. '
' → logprob: -11.125032424926758
    3. '```' → logprob: -12.000032424926758
    4. '       ' → logprob: -12.125032424926758
    5. '<|end|>' → logprob: -13.375032424926758
    6. 'if' → logprob: -13.500032424926758
    7. '            
' → logprob: -13.875032424926758
    8. '               ' → logprob: -14.500032424926758
    9. '   ' → logprob: -15.125032424926758
    10. '          ' → logprob: -15.500032424926758

Token 614: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1282835602760315
    2. '           ' → logprob: -2.1282835006713867
    3. ' if' → logprob: -6.628283500671387
    4. '       ' → logprob: -11.003283500671387
    5. '   ' → logprob: -11.253283500671387
    6. '
' → logprob: -13.878283500671387
    7. '```' → logprob: -13.878283500671387
    8. ' ' → logprob: -15.503283500671387
    9. '               ' → logprob: -16.253284454345703
    10. '	if' → logprob: -16.753284454345703

Token 615: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931487321853638
    2. 'self' → logprob: -0.6931487321853638
    3. '(self' → logprob: -13.943148612976074
    4. '           ' → logprob: -14.693148612976074
    5. '	self' → logprob: -15.693148612976074
    6. '[self' → logprob: -16.81814956665039
    7. '   ' → logprob: -17.06814956665039
    8. ' ' → logprob: -17.31814956665039
    9. ' ' → logprob: -18.56814956665039
    10. '=self' → logprob: -19.06814956665039

Token 616: '.state' (ID: 6696)
  Prédit: '.state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.state' → logprob: -0.00018089536752086133
    2. 'state' → logprob: -8.625181198120117
    3. ' state' → logprob: -14.250181198120117
    4. '.' → logprob: -14.750181198120117
    5. ' .' → logprob: -15.500181198120117
    6. '	state' → logprob: -17.250181198120117
    7. '.s' → logprob: -18.375181198120117
    8. '_state' → logprob: -18.500181198120117
    9. '.user' → logprob: -18.625181198120117
    10. '.status' → logprob: -18.750181198120117

Token 617: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -7.541112427134067e-05
    2. '.' → logprob: -9.500075340270996
    3. ' .' → logprob: -15.375075340270996
    4. 'is' → logprob: -16.125076293945312
    5. '   ' → logprob: -16.625076293945312
    6. '       ' → logprob: -17.500076293945312
    7. '.isnan' → logprob: -18.625076293945312
    8. '.
' → logprob: -19.250076293945312
    9. '           ' → logprob: -19.375076293945312
    10. '..' → logprob: -19.625076293945312

Token 618: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -2.816093228830141e-06
    2. '_' → logprob: -13.12500286102295
    3. 'sorted' → logprob: -14.12500286102295
    4. '_s' → logprob: -16.375001907348633
    5. 'orted' → logprob: -19.125001907348633
    6. ' _' → logprob: -19.250001907348633
    7. 'Sorted' → logprob: -19.625001907348633
    8. '_
' → logprob: -20.125001907348633
    9. ' sorted' → logprob: -20.750001907348633
    10. '
' → logprob: -21.125001907348633

Token 619: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00021057340200059116
    2. '():
' → logprob: -8.500210762023926
    3. '()' → logprob: -12.000210762023926
    4. ' ():' → logprob: -14.375210762023926
    5. '():
' → logprob: -15.375210762023926
    6. ':' → logprob: -16.75020980834961
    7. '():

' → logprob: -17.62520980834961
    8. '()==' → logprob: -17.75020980834961
    9. '(' → logprob: -17.87520980834961
    10. '):' → logprob: -19.37520980834961

Token 620: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003403495065867901
    2. ' return' → logprob: -8.625340461730957
    3. 'return' → logprob: -8.750340461730957
    4. '           ' → logprob: -13.750340461730957
    5. '
' → logprob: -14.250340461730957
    6. '                   ' → logprob: -15.625340461730957
    7. '	           ' → logprob: -16.00033950805664
    8. '{return' → logprob: -16.12533950805664
    9. ':return' → logprob: -16.37533950805664
    10. '			' → logprob: -17.00033950805664

Token 621: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.638251543045044
    2. ' return' → logprob: -1.138251543045044
    3. '               ' → logprob: -1.888251543045044
    4. '                   ' → logprob: -10.138251304626465
    5. '	return' → logprob: -11.263251304626465
    6. '
' → logprob: -12.263251304626465
    7. '{return' → logprob: -12.388251304626465
    8. '           ' → logprob: -12.638251304626465
    9. '   ' → logprob: -13.013251304626465
    10. ':return' → logprob: -13.888251304626465

Token 622: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00150390958879143
    2. ' t' → logprob: -6.501503944396973
    3. '	t' → logprob: -13.626503944396973
    4. '`t' → logprob: -14.751503944396973
    5. '
' → logprob: -16.876502990722656
    6. '           ' → logprob: -19.001502990722656
    7. '               ' → logprob: -19.126502990722656
    8. '_t' → logprob: -20.626502990722656
    9. '                   ' → logprob: -20.751502990722656
    10. '(t' → logprob: -20.876502990722656

Token 623: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002051170216873288
    2. 'return' → logprob: -7.00205135345459
    3. '```' → logprob: -8.00205135345459
    4. '<|end|>' → logprob: -8.12705135345459
    5. '
' → logprob: -8.87705135345459
    6. '   ' → logprob: -9.50205135345459
    7. 'None' → logprob: -9.62705135345459
    8. '        
' → logprob: -10.25205135345459
    9. '#' → logprob: -10.25205135345459
    10. '0' → logprob: -10.87705135345459

Token 624: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021913025993853807
    2. 'return' → logprob: -6.252191066741943
    3. '```' → logprob: -8.502191543579102
    4. ' return' → logprob: -11.377191543579102
    5. '<|end|>' → logprob: -11.502191543579102
    6. '   ' → logprob: -11.627191543579102
    7. '
' → logprob: -11.752191543579102
    8. '0' → logprob: -11.752191543579102
    9. 'None' → logprob: -12.377191543579102
    10. '#' → logprob: -13.502191543579102

Token 625: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004254696425050497
    2. '       ' → logprob: -5.5042548179626465
    3. ' return' → logprob: -8.754254341125488
    4. '```' → logprob: -11.879254341125488
    5. '
' → logprob: -12.379254341125488
    6. '   ' → logprob: -12.504254341125488
    7. '{return' → logprob: -13.629254341125488
    8. '-' → logprob: -13.754254341125488
    9. '	return' → logprob: -14.129254341125488
    10. 'raise' → logprob: -15.254254341125488

Token 626: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00017803447553887963
    2. ' -' → logprob: -8.875178337097168
    3. 'None' → logprob: -10.750178337097168
    4. 'len' → logprob: -11.375178337097168
    5. '-f' → logprob: -12.625178337097168
    6. '0' → logprob: -13.500178337097168
    7. ' None' → logprob: -16.00017738342285
    8. '-none' → logprob: -16.00017738342285
    9. '-inf' → logprob: -16.75017738342285
    10. '-l' → logprob: -17.12517738342285

Token 627: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.375
    3. '-' → logprob: -21.0
    4. '2' → logprob: -21.25
    5. '１' → logprob: -22.0
    6. '۱' → logprob: -22.0
    7. '```' → logprob: -22.125
    8. '0' → logprob: -22.5
    9. '9' → logprob: -23.25
    10. '   ' → logprob: -23.375

Token 628: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 629: 'class' (ID: 1444)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5840043425559998
    2. '#' → logprob: -0.8340043425559998
    3. 'def' → logprob: -5.5840044021606445
    4. 'n' → logprob: -6.3340044021606445
    5. 'class' → logprob: -7.4590044021606445
    6. 'a' → logprob: -7.5840044021606445
    7. 'x' → logprob: -7.9590044021606445
    8. 'test' → logprob: -8.834004402160645
    9. 'sequence' → logprob: -8.834004402160645
    10. '<|end|>' → logprob: -8.959004402160645

Token 630: ' Input' (ID: 10090)
  Prédit: 'Test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Test' → logprob: -0.9974162578582764
    2. ' Test' → logprob: -1.6224162578582764
    3. ' Solution' → logprob: -1.9974162578582764
    4. 'Solution' → logprob: -2.4974162578582764
    5. 'Bo' → logprob: -2.6224162578582764
    6. ' Bo' → logprob: -2.8724162578582764
    7. ' Solver' → logprob: -3.8724162578582764
    8. ' unittest' → logprob: -4.2474164962768555
    9. ' Tester' → logprob: -4.4974164962768555
    10. 'Tester' → logprob: -4.7474164962768555

Token 631: 'Parser' (ID: 9231)
  Prédit: 'Reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.28074225783348083
    2. 'Handler' → logprob: -2.0307421684265137
    3. 'Parser' → logprob: -2.2807421684265137
    4. 'Processor' → logprob: -4.655742168426514
    5. 'Data' → logprob: -7.780742168426514
    6. 'Output' → logprob: -7.905742168426514
    7. ':' → logprob: -8.155742645263672
    8. 'Provider' → logprob: -8.405742645263672
    9. 'Generator' → logprob: -9.405742645263672
    10. 'Tokenizer' → logprob: -9.530742645263672

Token 632: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005274191964417696
    2. ':
' → logprob: -5.255274295806885
    3. '<|end|>' → logprob: -11.630273818969727
    4. ' :' → logprob: -11.755273818969727
    5. '():' → logprob: -12.005273818969727
    6. '():
' → logprob: -12.630273818969727
    7. '(object' → logprob: -13.005273818969727
    8. '):' → logprob: -13.255273818969727
    9. ':

' → logprob: -13.380273818969727
    10. '(' → logprob: -13.505273818969727

Token 633: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01873639039695263
    2. ' def' → logprob: -4.018736362457275
    3. 'def' → logprob: -8.268736839294434
    4. '<|end|>' → logprob: -8.393736839294434
    5. '    
' → logprob: -10.893736839294434
    6. '    ' → logprob: -11.018736839294434
    7. '<|end|>' → logprob: -11.768736839294434
    8. '‌' → logprob: -11.893736839294434
    9. '```' → logprob: -11.893736839294434
    10. ',' → logprob: -12.393736839294434

Token 634: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.47414639592170715
    2. 'def' (adapté à ' def') → logprob: -0.9741463661193848
    3. '   ' → logprob: -10.099146842956543
    4. '@' → logprob: -10.849146842956543
    5. 'staticmethod' → logprob: -12.599146842956543
    6. ' @' → logprob: -12.849146842956543
    7. 'class' → logprob: -13.599146842956543
    8. '```' → logprob: -14.099146842956543
    9. '	def' → logprob: -14.599146842956543
    10. 'import' → logprob: -15.349146842956543

Token 635: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.7410837411880493
    2. 'def' → logprob: -1.8660837411880493
    3. ' parse' → logprob: -2.1160836219787598
    4. 'parse' → logprob: -2.4910836219787598
    5. 'staticmethod' → logprob: -2.6160836219787598
    6. '__' → logprob: -2.8660836219787598
    7. ' def' → logprob: -3.4910836219787598
    8. 'init' → logprob: -5.99108362197876
    9. ' static' → logprob: -7.49108362197876
    10. 'static' → logprob: -7.74108362197876

Token 636: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -18.5
    3. '__' → logprob: -18.625
    4. 'int' → logprob: -19.0
    5. 'call' → logprob: -20.25
    6. 'ini' → logprob: -20.5
    7. '_init' → logprob: -20.625
    8. 'next' → logprob: -20.75
    9. 'new' → logprob: -21.375
    10. 'iter' → logprob: -21.375

Token 637: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01952240988612175
    2. '__(' → logprob: -4.519522190093994
    3. 'self' → logprob: -5.644522190093994
    4. '<|end|>' → logprob: -6.269522190093994
    5. '(' → logprob: -6.394522190093994
    6. '__(
' → logprob: -8.644522666931152
    7. '<|end|>' → logprob: -8.644522666931152
    8. ' (' → logprob: -8.644522666931152
    9. '   ' → logprob: -8.894522666931152
    10. ',' → logprob: -9.019522666931152

Token 638: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.848420551046729e-05
    2. ')' → logprob: -10.2500581741333
    3. ' self' → logprob: -11.1250581741333
    4. '):
' → logprob: -12.6250581741333
    5. '
' → logprob: -12.8750581741333
    6. '(self' → logprob: -13.7500581741333
    7. '   ' → logprob: -14.1250581741333
    8. '	self' → logprob: -16.000059127807617
    9. '```' → logprob: -16.000059127807617
    10. '=self' → logprob: -16.375059127807617

Token 639: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03142765164375305
    2. 'self' → logprob: -3.5314276218414307
    3. '):
' → logprob: -7.03142786026001
    4. ' self' → logprob: -8.406427383422852
    5. '):' → logprob: -8.531427383422852
    6. '(self' → logprob: -8.656427383422852
    7. ',self' → logprob: -9.906427383422852
    8. ' ,' → logprob: -9.906427383422852
    9. '<|end|>' → logprob: -11.031427383422852
    10. ',input' → logprob: -11.156427383422852

Token 640: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011174555867910385
    2. ' self' → logprob: -4.51117467880249
    3. '   ' → logprob: -9.261174201965332
    4. '
' → logprob: -10.886174201965332
    5. '       ' → logprob: -12.136174201965332
    6. '	self' → logprob: -12.386174201965332
    7. 'def' → logprob: -13.386174201965332
    8. '```' → logprob: -14.011174201965332
    9. '(self' → logprob: -14.136174201965332
    10. ' def' → logprob: -16.01117515563965

Token 641: ' self' (ID: 1051)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.42585062980651855
    2. 'self' (adapté à ' self') → logprob: -1.1758506298065186
    3. '       ' → logprob: -4.300850868225098
    4. 'def' → logprob: -4.300850868225098
    5. ' pass' → logprob: -5.050850868225098
    6. '   ' → logprob: -5.675850868225098
    7. ' self' → logprob: -6.925850868225098
    8. 'import' → logprob: -8.300850868225098
    9. '	pass' → logprob: -11.050850868225098
    10. '
' → logprob: -11.175850868225098

Token 642: '.N' (ID: 4439)
  Prédit: '.buffer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -0.2607353627681732
    2. '.data' → logprob: -2.385735273361206
    3. '.' → logprob: -2.760735273361206
    4. '.input' → logprob: -3.635735273361206
    5. '.lines' → logprob: -3.760735273361206
    6. '.inputs' → logprob: -5.510735511779785
    7. '._' → logprob: -5.510735511779785
    8. '.commands' → logprob: -5.510735511779785
    9. '.tokens' → logprob: -5.760735511779785
    10. '.elements' → logprob: -6.260735511779785

Token 643: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43787431716918945
    2. ',' → logprob: -1.4378743171691895
    3. '=' → logprob: -2.1878743171691895
    4. '<|end|>' → logprob: -5.5628743171691895
    5. '   ' → logprob: -8.312873840332031
    6. ' ,' → logprob: -8.562873840332031
    7. '=int' → logprob: -8.687873840332031
    8. '<|end|>' → logprob: -8.687873840332031
    9. ' ' → logprob: -8.937873840332031
    10. '  ' → logprob: -9.062873840332031

Token 644: ' ' (ID: 220)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.28185075521469116
    2. '0' → logprob: -1.531850814819336
    3. ' int' → logprob: -4.281850814819336
    4. 'None' → logprob: -4.281850814819336
    5. ' None' → logprob: -6.406850814819336
    6. ' ' → logprob: -8.656850814819336
    7. '[int' → logprob: -12.031850814819336
    8. '<int' → logprob: -12.406850814819336
    9. '10' → logprob: -12.656850814819336
    10. '1' → logprob: -12.906850814819336

Token 645: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6382633447647095
    2. '0' → logprob: -1.1382633447647095
    3. 'None' → logprob: -1.8882633447647095
    4. ' None' → logprob: -10.138263702392578
    5. ' int' → logprob: -11.138263702392578
    6. '[int' → logprob: -12.013263702392578
    7. '10' → logprob: -12.263263702392578
    8. '1' → logprob: -12.513263702392578
    9. ' ' → logprob: -12.638263702392578
    10. 'self' → logprob: -13.388263702392578

Token 646: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03287313133478165
    2. '<|end|>' → logprob: -3.9078731536865234
    3. '   ' → logprob: -5.032873153686523
    4. '       ' → logprob: -5.282873153686523
    5. 'def' → logprob: -7.657873153686523
    6. '<|end|>' → logprob: -9.532873153686523
    7. '    
' → logprob: -10.782873153686523
    8. ',' → logprob: -10.907873153686523
    9. ' def' → logprob: -11.157873153686523
    10. '
' → logprob: -11.532873153686523

Token 647: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4602334201335907
    2. '
' → logprob: -1.335233449935913
    3. '   ' → logprob: -2.960233449935913
    4. 'self' → logprob: -3.085233449935913
    5. '<|end|>' → logprob: -5.585233211517334
    6. ' self' → logprob: -5.960233211517334
    7. 'def' → logprob: -6.960233211517334
    8. '	self' → logprob: -7.210233211517334
    9. ' ' → logprob: -9.710233688354492
    10. 'class' → logprob: -10.335233688354492

Token 648: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006920326501131058
    2. 'def' → logprob: -5.256920337677002
    3. '       ' → logprob: -7.131920337677002
    4. '   ' → logprob: -7.756920337677002
    5. ' self' → logprob: -8.506919860839844
    6. 'sequence' → logprob: -8.881919860839844
    7. '	self' → logprob: -10.631919860839844
    8. 'data' → logprob: -10.881919860839844
    9. 'commands' → logprob: -11.131919860839844
    10. 'class' → logprob: -11.506919860839844

Token 649: '.sequence' (ID: 97641)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.3260998725891113
    2. '.commands' → logprob: -1.5760998725891113
    3. 'commands' → logprob: -1.8260998725891113
    4. 'Q' → logprob: -2.3260998725891113
    5. '.M' → logprob: -2.7010998725891113
    6. 'sequence' → logprob: -2.8260998725891113
    7. '.sequence' → logprob: -3.0760998725891113
    8. '.Q' → logprob: -3.7010998725891113
    9. '.elements' → logprob: -4.076099872589111
    10. 'elements' → logprob: -4.201099872589111

Token 650: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25215330719947815
    2. '=' → logprob: -1.5021532773971558
    3. '=[]' → logprob: -8.752153396606445
    4. '<|end|>' → logprob: -10.377153396606445
    5. '   ' → logprob: -11.752153396606445
    6. ',' → logprob: -11.752153396606445
    7. '=None' → logprob: -12.377153396606445
    8. '=
' → logprob: -13.127153396606445
    9. ' =
' → logprob: -13.127153396606445
    10. ':' → logprob: -13.127153396606445

Token 651: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0019882326014339924
    2. ' []' → logprob: -6.251988410949707
    3. '[]
' → logprob: -9.751988410949707
    4. '[]

' → logprob: -14.251988410949707
    5. '[' → logprob: -15.376988410949707
    6. '[]}' → logprob: -15.626988410949707
    7. 'None' → logprob: -16.00198745727539
    8. ' []
' → logprob: -16.12698745727539
    9. '=[]' → logprob: -16.62698745727539
    10. '[])' → logprob: -16.87698745727539

Token 652: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3940681219100952
    2. '       ' → logprob: -1.3940681219100952
    3. 'self' → logprob: -2.7690682411193848
    4. 'def' → logprob: -4.269068241119385
    5. ' self' → logprob: -7.644068241119385
    6. '
' → logprob: -8.019067764282227
    7. ' def' → logprob: -10.519067764282227
    8. ' ' → logprob: -11.269067764282227
    9. '```' → logprob: -11.269067764282227
    10. 'class' → logprob: -11.644067764282227

Token 653: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0002570481738075614
    2. '       ' → logprob: -8.87525749206543
    3. 'def' → logprob: -9.37525749206543
    4. '   ' → logprob: -11.00025749206543
    5. ' self' → logprob: -11.50025749206543
    6. '
' → logprob: -12.37525749206543
    7. '	self' → logprob: -14.12525749206543
    8. '           ' → logprob: -15.37525749206543
    9. 'class' → logprob: -16.12525749206543
    10. ' ' → logprob: -17.00025749206543

Token 654: '.Q' (ID: 21666)
  Prédit: '.commands'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.commands' → logprob: -0.0210703257471323
    2. 'commands' → logprob: -4.02107048034668
    3. '.M' → logprob: -7.02107048034668
    4. '_commands' → logprob: -7.77107048034668
    5. '.' → logprob: -8.02107048034668
    6. '.Commands' → logprob: -8.52107048034668
    7. '.m' → logprob: -8.77107048034668
    8. '.command' → logprob: -9.14607048034668
    9. '._' → logprob: -9.64607048034668
    10. '   ' → logprob: -9.64607048034668

Token 655: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11391069740056992
    2. '=' → logprob: -2.238910675048828
    3. '   ' → logprob: -7.238910675048828
    4. 'def' → logprob: -8.238910675048828
    5. '<|end|>' → logprob: -9.863910675048828
    6. ':' → logprob: -10.488910675048828
    7. '=None' → logprob: -11.613910675048828
    8. '<|end|>' → logprob: -12.363910675048828
    9. ',' → logprob: -13.113910675048828
    10. ' def' → logprob: -13.113910675048828

Token 656: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08893991261720657
    2. ' ' → logprob: -2.463939905166626
    3. 'None' → logprob: -16.088939666748047
    4. ' None' → logprob: -16.338939666748047
    5. ' ' → logprob: -16.338939666748047
    6. '   ' → logprob: -16.963939666748047
    7. '<|end|>' → logprob: -17.088939666748047
    8. '=' → logprob: -18.151439666748047
    9. '۰' → logprob: -18.151439666748047
    10. ' 
' → logprob: -18.526439666748047

Token 657: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '<|end|>' → logprob: -19.125001907348633
    4. 'None' → logprob: -20.125001907348633
    5. '00' → logprob: -20.625001907348633
    6. '۰' → logprob: -21.000001907348633
    7. '000' → logprob: -21.500001907348633
    8. '=' → logprob: -21.625001907348633
    9. '   ' → logprob: -21.875001907348633
    10. '```' → logprob: -22.250001907348633

Token 658: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056715887039899826
    2. '       ' → logprob: -2.931715965270996
    3. 'def' → logprob: -7.056715965270996
    4. '
' → logprob: -7.306715965270996
    5. '<|end|>' → logprob: -8.556715965270996
    6. ' def' → logprob: -10.556715965270996
    7. ',' → logprob: -10.931715965270996
    8. ' ' → logprob: -11.306715965270996
    9. '    
' → logprob: -11.431715965270996
    10. 'self' → logprob: -11.431715965270996

Token 659: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006280821282416582
    2. 'def' → logprob: -6.006280899047852
    3. '<|end|>' → logprob: -6.756280899047852
    4. '
' → logprob: -6.881280899047852
    5. ' def' → logprob: -7.131280899047852
    6. '       ' → logprob: -7.506280899047852
    7. '	def' → logprob: -9.256280899047852
    8. '```' → logprob: -9.881280899047852
    9. ' ' → logprob: -10.381280899047852
    10. '    
' → logprob: -10.631280899047852

Token 660: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004960254766047001
    2. 'def' → logprob: -6.004960060119629
    3. ' self' → logprob: -6.504960060119629
    4. '       ' → logprob: -7.504960060119629
    5. '   ' → logprob: -8.129960060119629
    6. '
' → logprob: -9.004960060119629
    7. '	self' → logprob: -11.254960060119629
    8. ' ' → logprob: -13.504960060119629
    9. ' def' → logprob: -14.129960060119629
    10. '  ' → logprob: -14.254960060119629

Token 661: '.commands' (ID: 61085)
  Prédit: '.commands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.commands' → logprob: -0.06328234076499939
    2. 'commands' → logprob: -2.8132822513580322
    3. ' commands' → logprob: -7.438282489776611
    4. '_commands' → logprob: -7.688282489776611
    5. '.' → logprob: -8.563282012939453
    6. ' =' → logprob: -10.813282012939453
    7. '.Commands' → logprob: -11.313282012939453
    8. '=' → logprob: -11.938282012939453
    9. '.command' → logprob: -11.938282012939453
    10. '(commands' → logprob: -12.063282012939453

Token 662: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2812442183494568
    2. ' =' → logprob: -1.4062442779541016
    3. '=[]' → logprob: -10.031244277954102
    4. '<|end|>' → logprob: -10.281244277954102
    5. '=None' → logprob: -12.156244277954102
    6. '=
' → logprob: -12.656244277954102
    7. ',' → logprob: -13.906244277954102
    8. ' =
' → logprob: -14.156244277954102
    9. '<|end|>' → logprob: -14.406244277954102
    10. ' ' → logprob: -14.406244277954102

Token 663: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00033665422233752906
    2. ' []' → logprob: -8.000336647033691
    3. '[]
' → logprob: -14.000336647033691
    4. '[' → logprob: -15.500336647033691
    5. '[]}' → logprob: -15.875336647033691
    6. '[]

' → logprob: -16.250337600708008
    7. '[]"' → logprob: -17.125337600708008
    8. '[]>' → logprob: -17.125337600708008
    9. '[])' → logprob: -18.125337600708008
    10. '[],' → logprob: -18.250337600708008

Token 664: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008321399218402803
    2. ' def' → logprob: -7.5008320808410645
    3. 'def' → logprob: -8.250832557678223
    4. '
' → logprob: -11.125832557678223
    5. '    
' → logprob: -13.625832557678223
    6. 'import' → logprob: -14.000832557678223
    7. '<|end|>' → logprob: -14.375832557678223
    8. ',' → logprob: -15.250832557678223
    9. '```' → logprob: -15.375832557678223
    10. '	def' → logprob: -16.750831604003906

Token 665: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.2519446313381195
    2. 'def' (adapté à ' def') → logprob: -1.501944661140442
    3. '   ' → logprob: -11.251944541931152
    4. '	def' → logprob: -12.876944541931152
    5. 'de' → logprob: -17.62694549560547
    6. '
' → logprob: -17.62694549560547
    7. 'import' → logprob: -18.87694549560547
    8. ' déf' → logprob: -20.00194549560547
    9. ' de' → logprob: -20.75194549560547
    10. '_def' → logprob: -20.75194549560547

Token 666: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.1453719586133957
    2. ' parse' → logprob: -2.145371913909912
    3. 'read' → logprob: -4.145371913909912
    4. ' read' → logprob: -6.020371913909912
    5. 'def' → logprob: -12.27037239074707
    6. 'load' → logprob: -13.14537239074707
    7. ' def' → logprob: -13.89537239074707
    8. ' load' → logprob: -15.02037239074707
    9. '	parse' → logprob: -15.89537239074707
    10. 'process' → logprob: -16.14537239074707

Token 667: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5523144006729126
    2. '(self' → logprob: -0.9273144006729126
    3. '_line' → logprob: -4.302314281463623
    4. 'self' → logprob: -4.427314281463623
    5. '_' → logprob: -6.177314281463623
    6. '_input' → logprob: -7.552314281463623
    7. '(
' → logprob: -8.177314758300781
    8. ' self' → logprob: -9.177314758300781
    9. 'line' → logprob: -9.302314758300781
    10. '_self' → logprob: -9.677314758300781

Token 668: '):
' (ID: 1883)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.7609100341796875
    2. 'self' → logprob: -1.7609100341796875
    3. '_input' → logprob: -1.8859100341796875
    4. '(self' → logprob: -2.2609100341796875
    5. '_' → logprob: -3.1359100341796875
    6. ')' → logprob: -3.1359100341796875
    7. ')_' → logprob: -5.2609100341796875
    8. '_self' → logprob: -5.5109100341796875
    9. '):' → logprob: -6.2609100341796875
    10. '):
' → logprob: -6.3859100341796875

Token 669: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01304363738745451
    2. 'import' → logprob: -4.638043403625488
    3. ' import' → logprob: -5.763043403625488
    4. ' for' → logprob: -9.513043403625488
    5. '```' → logprob: -10.638043403625488
    6. 'n' → logprob: -11.388043403625488
    7. ' self' → logprob: -11.638043403625488
    8. 'for' → logprob: -12.013043403625488
    9. 'self' → logprob: -12.513043403625488
    10. '   ' → logprob: -13.138043403625488

Token 670: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.7064658403396606
    2. ' import' → logprob: -0.9564658403396606
    3. ' self' → logprob: -2.331465721130371
    4. 'self' → logprob: -4.331465721130371
    5. ' n' → logprob: -5.081465721130371
    6. 'n' → logprob: -5.581465721130371
    7. ' for' → logprob: -6.831465721130371
    8. '       ' → logprob: -7.331465721130371
    9. 'for' → logprob: -9.206465721130371
    10. ' line' → logprob: -9.331465721130371

Token 671: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.029750484973192215
    2. ' sys' → logprob: -3.5297505855560303
    3. '=sys' → logprob: -17.77975082397461
    4. '_sys' → logprob: -17.90475082397461
    5. '	sys' → logprob: -18.15475082397461
    6. '(sys' → logprob: -19.52975082397461
    7. '.sys' → logprob: -21.40475082397461
    8. 'io' → logprob: -21.65475082397461
    9. '```' → logprob: -22.52975082397461
    10. 'stdin' → logprob: -22.90475082397461

Token 672: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3054346442222595
    2. '
' → logprob: -1.9304347038269043
    3. 'input' → logprob: -3.1804347038269043
    4. '        
' → logprob: -3.9304347038269043
    5. 'data' → logprob: -4.055434703826904
    6. 'line' → logprob: -4.555434703826904
    7. ' lines' → logprob: -4.930434703826904
    8. ' line' → logprob: -5.180434703826904
    9. 'for' → logprob: -5.680434703826904
    10. '.readline' → logprob: -5.680434703826904

Token 673: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028978323098272085
    2. '
' → logprob: -7.0028977394104
    3. 'input' → logprob: -7.0028977394104
    4. 'data' → logprob: -8.377898216247559
    5. 'for' → logprob: -8.377898216247559
    6. ' lines' → logprob: -8.502898216247559
    7. 'line' → logprob: -9.002898216247559
    8. ' line' → logprob: -9.127898216247559
    9. '        
' → logprob: -10.252898216247559
    10. ' readline' → logprob: -10.377898216247559

Token 674: ' reader' (ID: 10958)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.100935198366642
    2. 'data' → logprob: -3.100935220718384
    3. 'input' → logprob: -3.850935220718384
    4. 'for' → logprob: -3.975935220718384
    5. 'lines' → logprob: -5.100934982299805
    6. 'line' → logprob: -5.975934982299805
    7. ' lines' → logprob: -6.225934982299805
    8. ' for' → logprob: -8.975934982299805
    9. ' input' → logprob: -9.600934982299805
    10. ' data' → logprob: -9.850934982299805

Token 675: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142795145511627
    2. ' =' → logprob: -1.701427936553955
    3. '.readline' → logprob: -11.951428413391113
    4. '=
' → logprob: -12.201428413391113
    5. '=sys' → logprob: -14.076428413391113
    6. ' ' → logprob: -14.576428413391113
    7. '   ' → logprob: -14.701428413391113
    8. '=input' → logprob: -15.201428413391113
    9. 'import' → logprob: -15.451428413391113
    10. ' =
' → logprob: -15.576428413391113

Token 676: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.12742000818252563
    2. ' sys' → logprob: -2.127419948577881
    3. '(sys' → logprob: -7.877419948577881
    4. 'iter' → logprob: -9.252420425415039
    5. ' iter' → logprob: -11.127420425415039
    6. ' (' → logprob: -14.252420425415039
    7. '=sys' → logprob: -14.252420425415039
    8. '(' → logprob: -15.002420425415039
    9. '	sys' → logprob: -15.627420425415039
    10. '(iter' → logprob: -16.25242042541504

Token 677: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.676292231422849e-05
    2. '.stdout' → logprob: -11.875017166137695
    3. 'stdin' → logprob: -12.125017166137695
    4. '.' → logprob: -12.875017166137695
    5. '.readline' → logprob: -14.250017166137695
    6. '.std' → logprob: -15.125017166137695
    7. ' stdin' → logprob: -15.250017166137695
    8. '.argv' → logprob: -15.750017166137695
    9. '(stdin' → logprob: -15.875017166137695
    10. '
' → logprob: -16.875017166137695

Token 678: '
' (ID: 198)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0003241414960939437
    2. '
' → logprob: -8.250324249267578
    3. '.readlines' → logprob: -10.125324249267578
    4. '.' → logprob: -12.375324249267578
    5. 'read' → logprob: -12.625324249267578
    6. ' readline' → logprob: -12.625324249267578
    7. '        
' → logprob: -12.750324249267578
    8. '```' → logprob: -13.250324249267578
    9. '<|end|>' → logprob: -13.500324249267578
    10. 'for' → logprob: -13.625324249267578

Token 679: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00028290803311392665
    2. 'for' → logprob: -8.500283241271973
    3. '
' → logprob: -9.750283241271973
    4. '        
' → logprob: -11.375283241271973
    5. ' for' → logprob: -12.250283241271973
    6. '```' → logprob: -13.125283241271973
    7. ',' → logprob: -14.375283241271973
    8. 'while' → logprob: -14.500283241271973
    9. 'line' → logprob: -15.125283241271973
    10. '           ' → logprob: -15.125283241271973

Token 680: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033882081508636475
    2. 'self' (adapté à ' self') → logprob: -3.7838821411132812
    3. 'line' → logprob: -4.783882141113281
    4. ' line' → logprob: -6.908882141113281
    5. 'for' → logprob: -7.533882141113281
    6. ' self' → logprob: -7.908882141113281
    7. '```' → logprob: -9.408882141113281
    8. '
' → logprob: -9.533882141113281
    9. ' for' → logprob: -10.033882141113281
    10. 'while' → logprob: -10.283882141113281

Token 681: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.00012284684635233134
    2. '.' → logprob: -9.125123023986816
    3. 'N' → logprob: -11.375123023986816
    4. ' .' → logprob: -13.125123023986816
    5. '	N' → logprob: -15.500123023986816
    6. ' N' → logprob: -16.5001220703125
    7. '.Q' → logprob: -18.1251220703125
    8. '   ' → logprob: -18.2501220703125
    9. '.readline' → logprob: -18.3751220703125
    10. '.Н' → logprob: -18.6251220703125

Token 682: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1603878289461136
    2. ' =' → logprob: -1.9103878736495972
    3. ',' → logprob: -8.785387992858887
    4. ' ,' → logprob: -12.410387992858887
    5. '=int' → logprob: -12.660387992858887
    6. '=
' → logprob: -13.910387992858887
    7. ' =
' → logprob: -14.410387992858887
    8. '=line' → logprob: -14.535387992858887
    9. '=self' → logprob: -15.160387992858887
    10. ' ' → logprob: -15.910387992858887

Token 683: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0485873706638813
    2. ' int' → logprob: -3.0485873222351074
    3. 'len' → logprob: -18.923587799072266
    4. '<int' → logprob: -19.298587799072266
    5. '=int' → logprob: -19.423587799072266
    6. '(int' → logprob: -20.048587799072266
    7. '	int' → logprob: -20.048587799072266
    8. '[int' → logprob: -20.798587799072266
    9. '
' → logprob: -20.923587799072266
    10. '   ' → logprob: -22.173587799072266

Token 684: '(reader' (ID: 49220)
  Prédit: '(reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reader' → logprob: -0.00024846551241353154
    2. 'reader' → logprob: -9.250248908996582
    3. '(' → logprob: -9.375248908996582
    4. '(next' → logprob: -9.625248908996582
    5. 'next' → logprob: -13.625248908996582
    6. '(read' → logprob: -16.250247955322266
    7. ' reader' → logprob: -16.750247955322266
    8. '	reader' → logprob: -17.750247955322266
    9. '```' → logprob: -17.875247955322266
    10. '()' → logprob: -18.000247955322266

Token 685: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0012032082304358482
    2. '().' → logprob: -6.7512030601501465
    3. '.' → logprob: -10.876203536987305
    4. '()' → logprob: -11.376203536987305
    5. '.read' → logprob: -13.751203536987305
    6. ' readline' → logprob: -13.751203536987305
    7. '()
' → logprob: -15.126203536987305
    8. '())' → logprob: -16.376203536987305
    9. 'read' → logprob: -17.126203536987305
    10. ')' → logprob: -17.501203536987305

Token 686: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.12702396512031555
    2. '().' → logprob: -2.127023935317993
    3. '())
' → logprob: -9.752023696899414
    4. '()' → logprob: -10.252023696899414
    5. ' ())' → logprob: -13.377023696899414
    6. ')' → logprob: -15.002023696899414
    7. '()
' → logprob: -15.127023696899414
    8. '())

' → logprob: -15.877023696899414
    9. '())
' → logprob: -16.752023696899414
    10. '();)' → logprob: -17.002023696899414

Token 687: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019672929774969816
    2. 'self' → logprob: -6.251967430114746
    3. ' self' → logprob: -11.001967430114746
    4. '<|end|>' → logprob: -11.751967430114746
    5. '        
' → logprob: -12.501967430114746
    6. '
' → logprob: -12.501967430114746
    7. '   ' → logprob: -13.376967430114746
    8. '	' → logprob: -13.501967430114746
    9. '```' → logprob: -13.876967430114746
    10. 'for' → logprob: -14.376967430114746

Token 688: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2535771131515503
    2. 'self' → logprob: -1.5035771131515503
    3. ' self' → logprob: -6.50357723236084
    4. 'for' → logprob: -9.25357723236084
    5. '
' → logprob: -11.12857723236084
    6. ' for' → logprob: -11.75357723236084
    7. '	self' → logprob: -11.75357723236084
    8. '	' → logprob: -11.87857723236084
    9. '   ' → logprob: -12.25357723236084
    10. '        
' → logprob: -12.75357723236084

Token 689: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.37938252091407776
    2. ' not' → logprob: -1.2543824911117554
    3. 'self' → logprob: -3.504382610321045
    4. 'not' → logprob: -8.129382133483887
    5. ' ' → logprob: -10.004382133483887
    6. '	self' → logprob: -11.004382133483887
    7. 'N' → logprob: -11.129382133483887
    8. ' N' → logprob: -11.879382133483887
    9. '  ' → logprob: -12.879382133483887
    10. '   ' → logprob: -13.004382133483887

Token 690: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.0034569292329251766
    2. 'N' → logprob: -5.753457069396973
    3. '.sequence' → logprob: -8.878457069396973
    4. '.n' → logprob: -9.878457069396973
    5. '.' → logprob: -10.253457069396973
    6. 'sequence' → logprob: -11.128457069396973
    7. 'self' → logprob: -12.128457069396973
    8. '```' → logprob: -12.753457069396973
    9. '.is' → logprob: -12.878457069396973
    10. '.state' → logprob: -13.003457069396973

Token 691: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16529102623462677
    2. '==' → logprob: -2.2902910709381104
    3. '>' → logprob: -3.4152910709381104
    4. ' >' → logprob: -4.040290832519531
    5. ' <' → logprob: -8.165290832519531
    6. ' <=' → logprob: -8.415290832519531
    7. '<=' → logprob: -9.665290832519531
    8. '   ' → logprob: -10.290290832519531
    9. '<' → logprob: -10.415290832519531
    10. ' !=' → logprob: -12.040290832519531

Token 692: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00420982064679265
    2. ' ' → logprob: -5.504209995269775
    3. '100' → logprob: -9.129209518432617
    4. '1' → logprob: -11.379209518432617
    5. '10' → logprob: -12.504209518432617
    6. '200' → logprob: -13.129209518432617
    7. '500' → logprob: -13.379209518432617
    8. '=' → logprob: -14.129209518432617
    9. '300' → logprob: -14.379209518432617
    10. '400' → logprob: -14.629209518432617

Token 693: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.939851037808694e-05
    2. '1' → logprob: -11.125029563903809
    3. ' ' → logprob: -11.375029563903809
    4. '100' → logprob: -12.875029563903809
    5. '10' → logprob: -15.000029563903809
    6. '200' → logprob: -16.500028610229492
    7. '500' → logprob: -17.125028610229492
    8. '2' → logprob: -17.375028610229492
    9. '300' → logprob: -17.625028610229492
    10. '
' → logprob: -17.750028610229492

Token 694: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15062518417835236
    2. ':' → logprob: -2.150625228881836
    3. '           ' → logprob: -3.775625228881836
    4. '       ' → logprob: -8.275625228881836
    5. '):
' → logprob: -9.525625228881836
    6. ' and' → logprob: -9.775625228881836
    7. '	       ' → logprob: -10.650625228881836
    8. ',' → logprob: -10.775625228881836
    9. ' :
' → logprob: -11.400625228881836
    10. '<|end|>' → logprob: -11.525625228881836

Token 695: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006343003828078508
    2. 'self' → logprob: -5.381342887878418
    3. ' self' → logprob: -7.006342887878418
    4. '       ' → logprob: -7.256342887878418
    5. '   ' → logprob: -9.631342887878418
    6. '	       ' → logprob: -10.131342887878418
    7. '               ' → logprob: -13.756342887878418
    8. '	self' → logprob: -14.256342887878418
    9. ' ' → logprob: -15.006342887878418
    10. '
' → logprob: -15.006342887878418

Token 696: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.061615124344825745
    2. 'line' → logprob: -3.061615228652954
    3. '           ' → logprob: -4.436614990234375
    4. ' self' → logprob: -7.311614990234375
    5. '       ' → logprob: -8.061614990234375
    6. ' line' → logprob: -9.311614990234375
    7. 'lines' → logprob: -11.811614990234375
    8. '               ' → logprob: -11.936614990234375
    9. '   ' → logprob: -12.061614990234375
    10. 'tokens' → logprob: -12.436614990234375

Token 697: '.sequence' (ID: 97641)
  Prédit: '.sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sequence' → logprob: -0.0015028368216007948
    2. 'sequence' → logprob: -6.501502990722656
    3. ' sequence' → logprob: -15.001502990722656
    4. ' .' → logprob: -15.751502990722656
    5. '   ' → logprob: -16.876502990722656
    6. 'N' → logprob: -17.501502990722656
    7. '(sequence' → logprob: -17.626502990722656
    8. '.' → logprob: -17.626502990722656
    9. '.se' → logprob: -18.126502990722656
    10. '
' → logprob: -18.251502990722656

Token 698: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12733814120292664
    2. ' =' → logprob: -2.127338171005249
    3. '.extend' → logprob: -7.87733793258667
    4. '+=' → logprob: -10.752338409423828
    5. ' +=' → logprob: -12.502338409423828
    6. '.append' → logprob: -12.627338409423828
    7. '=line' → logprob: -13.752338409423828
    8. '[:]' → logprob: -14.502338409423828
    9. '=list' → logprob: -14.752338409423828
    10. '.=' → logprob: -15.877338409423828

Token 699: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.01822591759264469
    2. ' list' → logprob: -4.018226146697998
    3. '[list' → logprob: -9.51822566986084
    4. '[' → logprob: -13.01822566986084
    5. ' [' → logprob: -15.51822566986084
    6. '	list' → logprob: -17.268226623535156
    7. '(list' → logprob: -17.893226623535156
    8. '=list' → logprob: -17.893226623535156
    9. '   ' → logprob: -19.018226623535156
    10. '.list' → logprob: -20.518226623535156

Token 700: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00017112065688706934
    2. '(' → logprob: -9.250170707702637
    3. 'map' → logprob: -9.500170707702637
    4. '(
' → logprob: -15.875170707702637
    5. ' map' → logprob: -17.500171661376953
    6. '(int' → logprob: -18.000171661376953
    7. '()' → logprob: -18.000171661376953
    8. '
' → logprob: -19.125171661376953
    9. '.map' → logprob: -19.250171661376953
    10. '(range' → logprob: -19.500171661376953

Token 701: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0039609745144844055
    2. 'int' → logprob: -5.628961086273193
    3. '(' → logprob: -8.003960609436035
    4. '(lambda' → logprob: -11.253960609436035
    5. '(str' → logprob: -12.378960609436035
    6. '[int' → logprob: -13.128960609436035
    7. ' int' → logprob: -13.128960609436035
    8. '(
' → logprob: -13.503960609436035
    9. '<int' → logprob: -13.878960609436035
    10. '(reader' → logprob: -14.128960609436035

Token 702: ',' (ID: 11)
  Prédit: '(reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reader' → logprob: -0.0711853876709938
    2. ',' → logprob: -2.696185350418091
    3. '(' → logprob: -7.07118558883667
    4. ' ,' → logprob: -8.946185111999512
    5. ' (' → logprob: -9.071185111999512
    6. 'reader' → logprob: -9.196185111999512
    7. '(read' → logprob: -10.571185111999512
    8. ' reader' → logprob: -11.821185111999512
    9. '(
' → logprob: -12.196185111999512
    10. '.reader' → logprob: -13.071185111999512

Token 703: ' reader' (ID: 10958)
  Prédit: 'reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reader' → logprob: -4.572941179503687e-05
    2. ' reader' → logprob: -10.000045776367188
    3. '(reader' → logprob: -15.500045776367188
    4. '	reader' → logprob: -17.750045776367188
    5. '.reader' → logprob: -18.000045776367188
    6. 'read' → logprob: -18.875045776367188
    7. '           ' → logprob: -19.250045776367188
    8. '_reader' → logprob: -19.625045776367188
    9. 'Reader' → logprob: -19.625045776367188
    10. '   ' → logprob: -20.875045776367188

Token 704: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.236549335066229e-05
    2. '().' → logprob: -10.750021934509277
    3. '.' → logprob: -14.500021934509277
    4. '.readlines' → logprob: -15.375021934509277
    5. '.read' → logprob: -15.875021934509277
    6. ' readline' → logprob: -18.500022888183594
    7. '.reader' → logprob: -18.750022888183594
    8. '```' → logprob: -19.750022888183594
    9. 'reader' → logprob: -20.125022888183594
    10. ').' → logprob: -20.250022888183594

Token 705: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0325924449716695e-05
    2. '.readline' → logprob: -11.50001049041748
    3. '()' → logprob: -15.62501049041748
    4. '.strip' → logprob: -17.375009536743164
    5. ' ().' → logprob: -18.125009536743164
    6. '   ' → logprob: -18.875009536743164
    7. '()
' → logprob: -19.375009536743164
    8. '.read' → logprob: -19.625009536743164
    9. '       ' → logprob: -19.875009536743164
    10. ' readline' → logprob: -20.000009536743164

Token 706: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.5766699314117432
    2. 'split' → logprob: -0.8266699314117432
    3. 'read' → logprob: -7.701669692993164
    4. 'rstrip' → logprob: -8.201669692993164
    5. ' strip' → logprob: -13.201669692993164
    6. 'decode' → logprob: -13.951669692993164
    7. ' split' → logprob: -14.326669692993164
    8. '.readline' → logprob: -15.826669692993164
    9. '(split' → logprob: -15.826669692993164
    10. '().' → logprob: -15.951669692993164

Token 707: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.005269565153867006
    2. '()' → logprob: -5.505269527435303
    3. '()))
' → logprob: -7.005269527435303
    4. '(' → logprob: -8.505270004272461
    5. '))' → logprob: -10.130270004272461
    6. '())' → logprob: -10.380270004272461
    7. '(),' → logprob: -13.005270004272461
    8. '()
' → logprob: -13.380270004272461
    9. '()))

' → logprob: -13.505270004272461
    10. '()));' → logprob: -13.505270004272461

Token 708: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030725449323654175
    2. '           ' → logprob: -6.003072738647461
    3. 'self' → logprob: -7.753072738647461
    4. '```' → logprob: -8.753072738647461
    5. '   ' → logprob: -12.378072738647461
    6. '``' → logprob: -13.128072738647461
    7. '
' → logprob: -14.128072738647461
    8. '        
' → logprob: -14.253072738647461
    9. '<|end|>' → logprob: -14.628072738647461
    10. ' self' → logprob: -14.753072738647461

Token 709: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029769696295261383
    2. 'self' → logprob: -3.5297696590423584
    3. ' self' → logprob: -11.779769897460938
    4. '           ' → logprob: -12.279769897460938
    5. '   ' → logprob: -12.779769897460938
    6. '```' → logprob: -13.029769897460938
    7. '	' → logprob: -13.654769897460938
    8. '	self' → logprob: -15.029769897460938
    9. '
' → logprob: -15.654769897460938
    10. 'if' → logprob: -16.404769897460938

Token 710: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07436702400445938
    2. ':' → logprob: -2.699367046356201
    3. '           ' → logprob: -5.449367046356201
    4. '       ' → logprob: -9.699366569519043
    5. 'self' → logprob: -10.699366569519043
    6. ':return' → logprob: -11.074366569519043
    7. ',' → logprob: -12.199366569519043
    8. '
' → logprob: -12.324366569519043
    9. '   ' → logprob: -12.324366569519043
    10. 'return' → logprob: -13.449366569519043

Token 711: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7812342643737793
    2. 'self' → logprob: -0.9062342643737793
    3. '       ' → logprob: -2.0312342643737793
    4. 'return' → logprob: -5.406234264373779
    5. ' self' → logprob: -6.906234264373779
    6. '   ' → logprob: -7.031234264373779
    7. 'pass' → logprob: -8.656234741210938
    8. '
' → logprob: -9.281234741210938
    9. 'while' → logprob: -9.406234741210938
    10. 'for' → logprob: -9.406234741210938

Token 712: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004390120971947908
    2. 'return' → logprob: -6.129390239715576
    3. '_' → logprob: -7.379390239715576
    4. 'reader' → logprob: -7.504390239715576
    5. '       ' → logprob: -8.129389762878418
    6. '           ' → logprob: -8.129389762878418
    7. 'pass' → logprob: -8.254389762878418
    8. '#' → logprob: -9.254389762878418
    9. ' self' → logprob: -10.004389762878418
    10. '_reader' → logprob: -12.129389762878418

Token 713: '.sequence' (ID: 97641)
  Prédit: '.Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Q' → logprob: -0.5094781517982483
    2. '.sequence' → logprob: -1.2594780921936035
    3. '.N' → logprob: -2.7594780921936035
    4. 'sequence' → logprob: -3.5094780921936035
    5. '.commands' → logprob: -4.1344780921936035
    6. 'commands' → logprob: -5.5094780921936035
    7. 'return' → logprob: -7.0094780921936035
    8. 'N' → logprob: -8.134478569030762
    9. '.return' → logprob: -8.134478569030762
    10. 'Q' → logprob: -8.634478569030762

Token 714: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04333359748125076
    2. ' =' → logprob: -3.2933335304260254
    3. '=[]' → logprob: -5.543333530426025
    4. '.append' → logprob: -7.293333530426025
    5. '.clear' → logprob: -7.668333530426025
    6. '.extend' → logprob: -8.918334007263184
    7. '=[]
' → logprob: -9.543334007263184
    8. '[:]' → logprob: -11.668334007263184
    9. '.readline' → logprob: -14.168334007263184
    10. '+=' → logprob: -14.543334007263184

Token 715: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -3.857719275401905e-05
    2. '[]
' → logprob: -10.750038146972656
    3. ' []' → logprob: -11.000038146972656
    4. '[]

' → logprob: -15.625038146972656
    5. '[' → logprob: -16.250038146972656
    6. '[],' → logprob: -16.625038146972656
    7. '[]}' → logprob: -17.000038146972656
    8. '[])' → logprob: -17.000038146972656
    9. '[]>' → logprob: -17.750038146972656
    10. '[]"' → logprob: -18.500038146972656

Token 716: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022482690401375294
    2. 'self' → logprob: -6.127248287200928
    3. '```' → logprob: -10.25224781036377
    4. '           ' → logprob: -11.50224781036377
    5. '   ' → logprob: -12.25224781036377
    6. ' self' → logprob: -12.37724781036377
    7. '
' → logprob: -12.50224781036377
    8. '        
' → logprob: -13.25224781036377
    9. '	' → logprob: -13.62724781036377
    10. '``' → logprob: -13.87724781036377

Token 717: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25201183557510376
    2. 'self' (adapté à ' self') → logprob: -1.502011775970459
    3. ' self' → logprob: -9.502012252807617
    4. '           ' → logprob: -12.377012252807617
    5. '   ' → logprob: -13.127012252807617
    6. '```' → logprob: -13.502012252807617
    7. '
' → logprob: -15.502012252807617
    8. '``' → logprob: -16.377012252807617
    9. '        
' → logprob: -16.502012252807617
    10. '	self' → logprob: -16.877012252807617

Token 718: '.Q' (ID: 21666)
  Prédit: '.Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Q' → logprob: -0.00020354038861114532
    2. 'Q' → logprob: -8.500203132629395
    3. '	Q' → logprob: -17.37520408630371
    4. '```' → logprob: -18.75020408630371
    5. '.N' → logprob: -18.87520408630371
    6. '.' → logprob: -19.37520408630371
    7. 'line' → logprob: -19.75020408630371
    8. ' Q' → logprob: -19.75020408630371
    9. 'def' → logprob: -20.00020408630371
    10. '   ' → logprob: -20.12520408630371

Token 719: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931698322296143
    2. ' =' → logprob: -0.6931698322296143
    3. '=int' → logprob: -10.693169593811035
    4. '   ' → logprob: -17.94317054748535
    5. ' ' → logprob: -19.69317054748535
    6. '＝' → logprob: -19.81817054748535
    7. '=
' → logprob: -19.81817054748535
    8. '=line' → logprob: -19.81817054748535
    9. '=len' → logprob: -20.44317054748535
    10. 'int' → logprob: -20.69317054748535

Token 720: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005233763717114925
    2. ' int' → logprob: -5.2552337646484375
    3. '       ' → logprob: -19.380233764648438
    4. '=int' → logprob: -20.130233764648438
    5. '(int' → logprob: -21.380233764648438
    6. '<int' → logprob: -21.380233764648438
    7. '[int' → logprob: -21.505233764648438
    8. '   ' → logprob: -22.005233764648438
    9. '           ' → logprob: -22.630233764648438
    10. '	int' → logprob: -23.005233764648438

Token 721: '(reader' (ID: 49220)
  Prédit: '(reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reader' → logprob: -3.054500666621607e-06
    2. 'reader' → logprob: -12.75000286102295
    3. '(' → logprob: -16.125003814697266
    4. ' reader' → logprob: -17.625003814697266
    5. '(writer' → logprob: -19.375003814697266
    6. '(receiver' → logprob: -19.625003814697266
    7. '	reader' → logprob: -20.000003814697266
    8. ' (' → logprob: -20.750003814697266
    9. '()' → logprob: -21.000003814697266
    10. '(reply' → logprob: -22.125003814697266

Token 722: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.008645887486636639
    2. '().' → logprob: -4.758646011352539
    3. '()' → logprob: -11.008646011352539
    4. '())' → logprob: -11.633646011352539
    5. 'reader' → logprob: -12.883646011352539
    6. '.reader' → logprob: -13.633646011352539
    7. '()
' → logprob: -14.633646011352539
    8. ')' → logprob: -14.633646011352539
    9. '.' → logprob: -15.008646011352539
    10. '_reader' → logprob: -15.633646011352539

Token 723: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005508957430720329
    2. '())
' → logprob: -5.255508899688721
    3. '()' → logprob: -8.255509376525879
    4. ')' → logprob: -11.505509376525879
    5. '()
' → logprob: -12.880509376525879
    6. ' ())' → logprob: -13.880509376525879
    7. '())
' → logprob: -14.255509376525879
    8. '().' → logprob: -14.630509376525879
    9. '())

' → logprob: -14.755509376525879
    10. '();)' → logprob: -15.880509376525879

Token 724: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005352705251425505
    2. 'for' → logprob: -5.25535249710083
    3. ' for' → logprob: -9.880352973937988
    4. '
' → logprob: -10.005352973937988
    5. '   ' → logprob: -11.255352973937988
    6. 'self' → logprob: -12.255352973937988
    7. 'def' → logprob: -13.005352973937988
    8. 'while' → logprob: -14.380352973937988
    9. '	for' → logprob: -15.005352973937988
    10. '        
' → logprob: -15.130352973937988

Token 725: ' self' (ID: 1051)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17007160186767578
    2. '       ' → logprob: -2.170071601867676
    3. 'self' (adapté à ' self') → logprob: -3.170071601867676
    4. ' for' → logprob: -8.545071601867676
    5. '
' → logprob: -11.295071601867676
    6. '	for' → logprob: -11.795071601867676
    7. '   ' → logprob: -12.545071601867676
    8. ' self' → logprob: -12.920071601867676
    9. '```' → logprob: -12.920071601867676
    10. '	self' → logprob: -14.045071601867676

Token 726: '.commands' (ID: 61085)
  Prédit: '.commands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.commands' → logprob: -0.029759405180811882
    2. 'commands' → logprob: -3.529759407043457
    3. 'for' → logprob: -11.904759407043457
    4. ' commands' → logprob: -13.779759407043457
    5. '
' → logprob: -14.654759407043457
    6. '   ' → logprob: -14.654759407043457
    7. ' for' → logprob: -16.27975845336914
    8. '(commands' → logprob: -16.65475845336914
    9. '.' → logprob: -17.02975845336914
    10. '       ' → logprob: -17.52975845336914

Token 727: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859384149312973
    2. ' =' → logprob: -3.048593759536743
    3. '.extend' → logprob: -12.298593521118164
    4. '=self' → logprob: -14.423593521118164
    5. '=
' → logprob: -14.923593521118164
    6. '+=' → logprob: -15.173593521118164
    7. '=[]' → logprob: -15.673593521118164
    8. '.=' → logprob: -15.798593521118164
    9. '＝' → logprob: -15.798593521118164
    10. '.clear' → logprob: -16.673593521118164

Token 728: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002033561235293746
    2. '[list' → logprob: -6.502033710479736
    3. '[List' → logprob: -8.752033233642578
    4. '[int' → logprob: -9.002033233642578
    5. '[self' → logprob: -9.502033233642578
    6. ' [' → logprob: -10.252033233642578
    7. '[item' → logprob: -10.502033233642578
    8. '[array' → logprob: -10.502033233642578
    9. '[line' → logprob: -11.127033233642578
    10. '[input' → logprob: -11.877033233642578

Token 729: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -1.0802738870552275e-05
    2. ' tuple' → logprob: -11.50001049041748
    3. '(tuple' → logprob: -14.75001049041748
    4. '
' → logprob: -16.500011444091797
    5. 'list' → logprob: -17.250011444091797
    6. '   ' → logprob: -17.500011444091797
    7. '       ' → logprob: -18.625011444091797
    8. '           ' → logprob: -18.750011444091797
    9. 'map' → logprob: -20.750011444091797
    10. 'Tuple' → logprob: -22.000011444091797

Token 730: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.5759567618370056
    2. 'map' → logprob: -0.8259567618370056
    3. ' map' → logprob: -11.950956344604492
    4. '
' → logprob: -12.200956344604492
    5. 'int' → logprob: -13.825956344604492
    6. '.map' → logprob: -13.950956344604492
    7. '(int' → logprob: -13.950956344604492
    8. '(' → logprob: -14.200956344604492
    9. '	map' → logprob: -14.200956344604492
    10. '_map' → logprob: -14.575956344604492

Token 731: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04858873412013054
    2. '(int' → logprob: -3.048588752746582
    3. ' int' → logprob: -14.298588752746582
    4. '[int' → logprob: -14.298588752746582
    5. '<int' → logprob: -17.798587799072266
    6. '(' → logprob: -17.798587799072266
    7. '=int' → logprob: -17.798587799072266
    8. '   ' → logprob: -17.923587799072266
    9. ',int' → logprob: -18.298587799072266
    10. ']int' → logprob: -19.048587799072266

Token 732: ',' (ID: 11)
  Prédit: '(reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reader' → logprob: -0.013302934356033802
    2. ',' → logprob: -4.388302803039551
    3. 'reader' → logprob: -7.638302803039551
    4. '(' → logprob: -8.38830280303955
    5. ')' → logprob: -11.01330280303955
    6. '(line' → logprob: -11.13830280303955
    7. '(read' → logprob: -11.76330280303955
    8. '.reader' → logprob: -12.26330280303955
    9. '(),' → logprob: -12.38830280303955
    10. ' ,' → logprob: -12.38830280303955

Token 733: ' reader' (ID: 10958)
  Prédit: 'reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reader' → logprob: -4.4849443838757e-06
    2. ' reader' → logprob: -12.750004768371582
    3. '(reader' → logprob: -13.375004768371582
    4. '	reader' → logprob: -16.750003814697266
    5. '.reader' → logprob: -17.000003814697266
    6. ')' → logprob: -17.750003814697266
    7. '
' → logprob: -18.000003814697266
    8. '   ' → logprob: -18.250003814697266
    9. 'read' → logprob: -19.125003814697266
    10. '       ' → logprob: -20.000003814697266

Token 734: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.2471589798224159e-05
    2. '(reader' → logprob: -12.250012397766113
    3. '.reader' → logprob: -12.500012397766113
    4. 'reader' → logprob: -13.750012397766113
    5. '().' → logprob: -14.125012397766113
    6. '.readlines' → logprob: -14.125012397766113
    7. '.read' → logprob: -14.375012397766113
    8. '   ' → logprob: -14.625012397766113
    9. '.' → logprob: -15.625012397766113
    10. '.stdin' → logprob: -16.50001335144043

Token 735: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.610702363715973e-06
    2. '()' → logprob: -12.000009536743164
    3. '.readline' → logprob: -12.750009536743164
    4. '()
' → logprob: -14.875009536743164
    5. ' ().' → logprob: -16.375009536743164
    6. '(' → logprob: -18.750009536743164
    7. '().__' → logprob: -18.875009536743164
    8. ' ' → logprob: -19.250009536743164
    9. '   ' → logprob: -19.250009536743164
    10. '()[' → logprob: -19.625009536743164

Token 736: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011773703154176474
    2. 'strip' → logprob: -6.7511773109436035
    3. 'read' → logprob: -12.376177787780762
    4. 'rstrip' → logprob: -13.126177787780762
    5. ' split' → logprob: -13.876177787780762
    6. '.split' → logprob: -17.126176834106445
    7. '(split' → logprob: -18.001176834106445
    8. '   ' → logprob: -19.376176834106445
    9. ' ' → logprob: -19.501176834106445
    10. '().' → logprob: -19.626176834106445

Token 737: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.038262031972408295
    2. '))' → logprob: -3.288262128829956
    3. '()' → logprob: -8.788262367248535
    4. '()))
' → logprob: -9.663262367248535
    5. '(' → logprob: -14.038262367248535
    6. ' ))' → logprob: -14.163262367248535
    7. '()
' → logprob: -14.288262367248535
    8. '().' → logprob: -14.288262367248535
    9. '())' → logprob: -14.663262367248535
    10. '())).' → logprob: -15.038262367248535

Token 738: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4152034819126129
    2. ')' → logprob: -1.2902034521102905
    3. ' for' → logprob: -3.16520357131958
    4. 'for' → logprob: -4.29020357131958
    5. '       ' → logprob: -5.79020357131958
    6. '())' → logprob: -5.79020357131958
    7. ')]' → logprob: -7.04020357131958
    8. '()]' → logprob: -7.54020357131958
    9. '           ' → logprob: -7.66520357131958
    10. ']' → logprob: -7.79020357131958

Token 739: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0005816269549541175
    2. '_range' → logprob: -7.875581741333008
    3. '_q' → logprob: -9.375581741333008
    4. ' _' → logprob: -9.875581741333008
    5. '_i' → logprob: -10.500581741333008
    6. '_in' → logprob: -12.250581741333008
    7. '_Q' → logprob: -12.625581741333008
    8. '_
' → logprob: -12.875581741333008
    9. '_input' → logprob: -13.250581741333008
    10. '_j' → logprob: -13.500581741333008

Token 740: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03462427854537964
    2. '_' → logprob: -4.034624099731445
    3. 'in' → logprob: -4.159624099731445
    4. 'range' → logprob: -7.284624099731445
    5. 'i' → logprob: -11.284624099731445
    6. '_range' → logprob: -11.659624099731445
    7. ' _' → logprob: -11.909624099731445
    8. ' range' → logprob: -12.409624099731445
    9. '_in' → logprob: -13.034624099731445
    10. '  ' → logprob: -13.659624099731445

Token 741: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.941850526549388e-06
    2. ' range' → logprob: -11.750007629394531
    3. '(range' → logprob: -20.00000762939453
    4. '_' → logprob: -20.62500762939453
    5. '_range' → logprob: -20.62500762939453
    6. '	range' → logprob: -20.75000762939453
    7. 'rang' → logprob: -21.50000762939453
    8. '   ' → logprob: -22.50000762939453
    9. '
' → logprob: -22.75000762939453
    10. 'r' → logprob: -23.75000762939453

Token 742: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.339278580620885e-06
    2. 'self' → logprob: -13.000001907348633
    3. '(' → logprob: -17.500001907348633
    4. ' self' → logprob: -20.125001907348633
    5. ',self' → logprob: -21.625001907348633
    6. ' (' → logprob: -21.750001907348633
    7. '=self' → logprob: -21.750001907348633
    8. '[self' → logprob: -22.250001907348633
    9. '	self' → logprob: -22.625001907348633
    10. ':self' → logprob: -22.750001907348633

Token 743: '.Q' (ID: 21666)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.40150806307792664
    2. 'self' → logprob: -1.151508092880249
    3. '.Q' → logprob: -4.40150785446167
    4. '(' → logprob: -7.40150785446167
    5. 'Q' → logprob: -7.52650785446167
    6. ' self' → logprob: -7.65150785446167
    7. 's' → logprob: -8.401508331298828
    8. '.self' → logprob: -8.776508331298828
    9. ')' → logprob: -9.651508331298828
    10. '       ' → logprob: -10.151508331298828

Token 744: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0009444572497159243
    2. '()]' → logprob: -7.6259446144104
    3. ']' → logprob: -8.250944137573242
    4. ')' → logprob: -8.750944137573242
    5. '())' → logprob: -10.500944137573242
    6. '()' → logprob: -12.250944137573242
    7. ' )' → logprob: -13.375944137573242
    8. '       ' → logprob: -13.625944137573242
    9. '])' → logprob: -14.625944137573242
    10. ')]
' → logprob: -14.875944137573242

Token 745: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 746: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06196891888976097
    2. 'if' → logprob: -2.8119688034057617
    3. '```' → logprob: -13.811968803405762
    4. ' if' → logprob: -15.936968803405762
    5. ' def' → logprob: -16.436969757080078
    6. '#' → logprob: -16.686969757080078
    7. 'import' → logprob: -18.061969757080078
    8. 'from' → logprob: -20.061969757080078
    9. '
' → logprob: -20.811969757080078
    10. '   ' → logprob: -21.311969757080078

Token 747: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00033558503491804004
    2. ' main' → logprob: -8.000335693359375
    3. 'solve' → logprob: -16.000335693359375
    4. 'run' → logprob: -17.125335693359375
    5. 'process' → logprob: -17.625335693359375
    6. '	main' → logprob: -17.875335693359375
    7. 'simulate' → logprob: -19.250335693359375
    8. '_main' → logprob: -19.250335693359375
    9. '__' → logprob: -20.750335693359375
    10. '```' → logprob: -21.125335693359375

Token 748: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -7.76759916334413e-05
    2. ' ():' → logprob: -10.000077247619629
    3. '():
' → logprob: -10.375077247619629
    4. '()' → logprob: -14.125077247619629
    5. '():
' → logprob: -16.500078201293945
    6. '(' → logprob: -16.875078201293945
    7. ':' → logprob: -18.125078201293945
    8. '():

' → logprob: -18.250078201293945
    9. '()>' → logprob: -18.375078201293945
    10. '_' → logprob: -18.500078201293945

Token 749: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.792751032160595e-05
    2. 'import' → logprob: -9.87508773803711
    3. ' parser' → logprob: -10.50008773803711
    4. 'parser' → logprob: -12.12508773803711
    5. '	parser' → logprob: -13.50008773803711
    6. ' import' → logprob: -14.37508773803711
    7. '(parser' → logprob: -14.62508773803711
    8. '   ' → logprob: -15.25008773803711
    9. '	import' → logprob: -15.50008773803711
    10. '```' → logprob: -15.62508773803711

Token 750: ' parser' (ID: 14216)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6681403517723083
    2. '   ' → logprob: -1.4181404113769531
    3. 'parser' (adapté à ' parser') → logprob: -1.4181404113769531
    4. ' parser' → logprob: -6.293140411376953
    5. ' import' → logprob: -6.793140411376953
    6. '	parser' → logprob: -11.293140411376953
    7. 'ip' → logprob: -11.543140411376953
    8. 'from' → logprob: -12.543140411376953
    9. 'input' → logprob: -12.668140411376953
    10. ' ' → logprob: -12.793140411376953

Token 751: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015036711702123284
    2. '=' → logprob: -6.5015034675598145
    3. '   ' → logprob: -14.626503944396973
    4. '=parse' → logprob: -15.001503944396973
    5. '()' → logprob: -16.001502990722656
    6. ' ' → logprob: -16.251502990722656
    7. 'parser' → logprob: -16.751502990722656
    8. ' =
' → logprob: -17.001502990722656
    9. '.parse' → logprob: -17.251502990722656
    10. '	' → logprob: -17.251502990722656

Token 752: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.002475777640938759
    2. ' Input' → logprob: -6.002475738525391
    3. '	Input' → logprob: -17.25247573852539
    4. '<Input' → logprob: -17.50247573852539
    5. '_Input' → logprob: -17.87747573852539
    6. '_input' → logprob: -18.12747573852539
    7. '\Input' → logprob: -18.25247573852539
    8. ' input' → logprob: -19.87747573852539
    9. '.Input' → logprob: -20.50247573852539
    10. 'input' → logprob: -20.62747573852539

Token 753: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -5.512236498361744e-07
    2. 'parser' → logprob: -14.625000953674316
    3. '_parser' → logprob: -19.0
    4. '(Parser' → logprob: -20.875
    5. '.Parser' → logprob: -21.375
    6. '-parser' → logprob: -22.0
    7. 'Parse' → logprob: -22.125
    8. ' Parser' → logprob: -22.75
    9. 'Parsed' → logprob: -22.75
    10. ' parser' → logprob: -24.0

Token 754: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018992441473528743
    2. 'parser' → logprob: -7.126899242401123
    3. '
' → logprob: -7.376899242401123
    4. '	parser' → logprob: -8.876899719238281
    5. '(parser' → logprob: -8.876899719238281
    6. ' parser' → logprob: -9.251899719238281
    7. '    
' → logprob: -9.626899719238281
    8. '()
' → logprob: -11.876899719238281
    9. 'def' → logprob: -12.001899719238281
    10. '  ' → logprob: -12.501899719238281

Token 755: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008804121986031532
    2. 'parser' → logprob: -4.7588043212890625
    3. ' parser' → logprob: -8.633804321289062
    4. '	parser' → logprob: -11.508804321289062
    5. '
' → logprob: -13.883804321289062
    6. '(parser' → logprob: -15.258804321289062
    7. '   ' → logprob: -16.133804321289062
    8. '.parser' → logprob: -16.633804321289062
    9. '    
' → logprob: -16.633804321289062
    10. 'parse' → logprob: -17.258804321289062

Token 756: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' (adapté à ' parser') → logprob: -5.8126592193730175e-05
    2. ' parser' → logprob: -10.1250581741333
    3. '   ' → logprob: -11.0000581741333
    4. 'parse' → logprob: -14.0000581741333
    5. '.parser' → logprob: -15.8750581741333
    6. '	parser' → logprob: -15.8750581741333
    7. '
' → logprob: -16.000057220458984
    8. '```' → logprob: -16.750057220458984
    9. '(parser' → logprob: -16.875057220458984
    10. '    
' → logprob: -19.250057220458984

Token 757: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -9.253090865968261e-06
    2. '.' → logprob: -11.625009536743164
    3. ' .' → logprob: -15.625009536743164
    4. '.parser' → logprob: -16.750009536743164
    5. '=parse' → logprob: -17.625009536743164
    6. '.Parse' → logprob: -18.750009536743164
    7. 'parse' → logprob: -19.250009536743164
    8. '.
' → logprob: -19.375009536743164
    9. '
' → logprob: -20.625009536743164
    10. '.decode' → logprob: -21.000009536743164

Token 758: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00792020559310913
    2. '
' → logprob: -4.882920265197754
    3. 'simulation' → logprob: -8.632920265197754
    4. 'state' → logprob: -9.757920265197754
    5. ' simulation' → logprob: -10.132920265197754
    6. '    
' → logprob: -11.257920265197754
    7. 'sim' → logprob: -11.757920265197754
    8. ' state' → logprob: -11.757920265197754
    9. ' sim' → logprob: -12.382920265197754
    10. '   ' → logprob: -13.507920265197754

Token 759: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7444674968719482
    2. 'simulation' → logprob: -0.8694674968719482
    3. 'sim' → logprob: -2.7444674968719482
    4. ' simulation' → logprob: -3.6194674968719482
    5. ' sim' → logprob: -4.244467735290527
    6. ' simulator' → logprob: -8.244467735290527
    7. ' ' → logprob: -10.619467735290527
    8. 's' → logprob: -10.869467735290527
    9. '```' → logprob: -10.994467735290527
    10. ' if' → logprob: -10.994467735290527

Token 760: ' simulation' (ID: 30937)
  Prédit: 'simulation'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'simulation' (adapté à ' simulation') → logprob: -0.38694387674331665
    2. 'sim' → logprob: -1.1369438171386719
    3. '   ' → logprob: -10.136943817138672
    4. ' simulation' → logprob: -10.636943817138672
    5. ' sim' → logprob: -11.886943817138672
    6. ' simulator' → logprob: -13.636943817138672
    7. 'solver' → logprob: -14.386943817138672
    8. '(sim' → logprob: -16.136943817138672
    9. 's' → logprob: -16.136943817138672
    10. 'simulate' → logprob: -16.136943817138672

Token 761: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00015860427811276168
    2. '=' → logprob: -8.750158309936523
    3. ' =
' → logprob: -17.750158309936523
    4. ' ' → logprob: -18.375158309936523
    5. '   ' → logprob: -19.125158309936523
    6. '.' → logprob: -19.875158309936523
    7. 's' → logprob: -20.500158309936523
    8. ' ' → logprob: -20.500158309936523
    9. '  ' → logprob: -21.000158309936523
    10. 'simulation' → logprob: -21.125158309936523

Token 762: ' Bo' (ID: 4381)
  Prédit: 'Bo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bo' → logprob: -0.0024756586644798517
    2. ' Bo' → logprob: -6.002475738525391
    3. 'Boom' → logprob: -18.50247573852539
    4. 'B' → logprob: -19.37747573852539
    5. 'Br' → logprob: -20.37747573852539
    6. 'Be' → logprob: -20.87747573852539
    7. '   ' → logprob: -21.50247573852539
    8. 'Bos' → logprob: -22.50247573852539
    9. 'BO' → logprob: -22.75247573852539
    10. 'Boolean' → logprob: -23.00247573852539

Token 763: 'zos' (ID: 44323)
  Prédit: 'zos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zos' → logprob: -6.704273118884885e-07
    2. 'zo' → logprob: -14.500000953674316
    3. 'z' → logprob: -16.625
    4. ' zos' → logprob: -17.75
    5. 'zor' → logprob: -18.25
    6. 'bos' → logprob: -18.625
    7. 'Z' → logprob: -18.75
    8. 'zz' → logprob: -19.125
    9. 'zon' → logprob: -19.5
    10. 'з' → logprob: -20.5

Token 764: 'ort' (ID: 390)
  Prédit: 'ort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ort' → logprob: -0.011049000546336174
    2. 'sort' → logprob: -4.511048793792725
    3. 'Sort' → logprob: -14.386049270629883
    4. ' sort' → logprob: -14.636049270629883
    5. 's' → logprob: -17.136049270629883
    6. 'orts' → logprob: -17.261049270629883
    7. 'орт' → logprob: -18.386049270629883
    8. '_sort' → logprob: -18.886049270629883
    9. 'o' → logprob: -19.136049270629883
    10. 'orting' → logprob: -19.386049270629883

Token 765: 'Simulation' (ID: 71306)
  Prédit: 'Simulation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Simulation' → logprob: -2.339278580620885e-06
    2. 'simulation' → logprob: -13.000001907348633
    3. 'imulation' → logprob: -18.125001907348633
    4. ' simulation' → logprob: -19.250001907348633
    5. '(' → logprob: -19.750001907348633
    6. ' Simulation' → logprob: -20.125001907348633
    7. 'Sim' → logprob: -20.500001907348633
    8. '(S' → logprob: -21.125001907348633
    9. 's' → logprob: -21.625001907348633
    10. 'Simulator' → logprob: -22.250001907348633

Token 766: '(parser' (ID: 82535)
  Prédit: '(parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parser' → logprob: -0.000464631273644045
    2. 'parser' → logprob: -7.87546443939209
    3. '(' → logprob: -9.62546443939209
    4. '(
' → logprob: -12.00046443939209
    5. '(sim' → logprob: -12.00046443939209
    6. '   ' → logprob: -12.50046443939209
    7. '(sequence' → logprob: -14.12546443939209
    8. ' (' → logprob: -14.62546443939209
    9. '(parsed' → logprob: -14.75046443939209
    10. ' parser' → logprob: -15.00046443939209

Token 767: '.sequence' (ID: 97641)
  Prédit: '.sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sequence' → logprob: -7.584239938296378e-06
    2. 'sequence' → logprob: -12.625007629394531
    3. ' .' → logprob: -12.750007629394531
    4. '.' → logprob: -13.875007629394531
    5. '.state' → logprob: -14.750007629394531
    6. '   ' → logprob: -17.87500762939453
    7. '
' → logprob: -19.50000762939453
    8. ' sequence' → logprob: -19.62500762939453
    9. '.se' → logprob: -19.87500762939453
    10. '(sequence' → logprob: -19.87500762939453

Token 768: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.277553620748222e-05
    2. ' ,' → logprob: -10.375062942504883
    3. 'parser' → logprob: -10.500062942504883
    4. '(parser' → logprob: -12.875062942504883
    5. '   ' → logprob: -14.125062942504883
    6. ' parser' → logprob: -14.500062942504883
    7. ',
' → logprob: -16.750062942504883
    8. '.parser' → logprob: -17.125062942504883
    9. '	parser' → logprob: -17.625062942504883
    10. ')' → logprob: -17.750062942504883

Token 769: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.004078401252627373
    2. ' parser' → logprob: -5.504078388214111
    3. '	parser' → logprob: -17.254077911376953
    4. '(parser' → logprob: -17.379077911376953
    5. '.parser' → logprob: -19.629077911376953
    6. '   ' → logprob: -20.254077911376953
    7. '_parser' → logprob: -21.379077911376953
    8. 'parse' → logprob: -21.754077911376953
    9. 'Parser' → logprob: -22.254077911376953
    10. '    ' → logprob: -22.379077911376953

Token 770: '.commands' (ID: 61085)
  Prédit: '.commands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.commands' → logprob: -4.842555426876061e-06
    2. 'commands' → logprob: -12.250004768371582
    3. '.' → logprob: -18.2500057220459
    4. ' .' → logprob: -18.3750057220459
    5. '.command' → logprob: -19.1250057220459
    6. '(commands' → logprob: -19.2500057220459
    7. '.Commands' → logprob: -19.5000057220459
    8. '.comments' → logprob: -19.7500057220459
    9. '.questions' → logprob: -20.5000057220459
    10. ' commands' → logprob: -20.7500057220459

Token 771: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1910800039768219
    2. ')' → logprob: -1.8160799741744995
    3. '   ' → logprob: -4.566080093383789
    4. '()
' → logprob: -7.566080093383789
    5. '()' → logprob: -8.566080093383789
    6. '())
' → logprob: -9.316080093383789
    7. ')
' → logprob: -10.816080093383789
    8. 'result' → logprob: -11.191080093383789
    9. '
' → logprob: -11.566080093383789
    10. '       ' → logprob: -11.816080093383789

Token 772: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08195983618497849
    2. 'result' → logprob: -2.5819597244262695
    3. 'print' → logprob: -5.8319597244262695
    4. '
' → logprob: -10.20695972442627
    5. '```' → logprob: -10.33195972442627
    6. ' result' → logprob: -10.45695972442627
    7. 'res' → logprob: -11.45695972442627
    8. 't' → logprob: -11.83195972442627
    9. 'return' → logprob: -12.08195972442627
    10. '    
' → logprob: -12.83195972442627

Token 773: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.12697714567184448
    2. 'print' → logprob: -2.1269772052764893
    3. 'res' → logprob: -10.75197696685791
    4. 'steps' → logprob: -11.37697696685791
    5. '   ' → logprob: -12.12697696685791
    6. ' result' → logprob: -12.37697696685791
    7. 'return' → logprob: -12.37697696685791
    8. 'results' → logprob: -14.12697696685791
    9. ' print' → logprob: -14.75197696685791
    10. 'answer' → logprob: -14.87697696685791

Token 774: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0024775585625320673
    2. '=' → logprob: -6.002477645874023
    3. '   ' → logprob: -13.877477645874023
    4. ')' → logprob: -15.377477645874023
    5. ' ' → logprob: -15.752477645874023
    6. '=result' → logprob: -15.877477645874023
    7. ' =
' → logprob: -16.002477645874023
    8. '  ' → logprob: -16.377477645874023
    9. '<|end|>' → logprob: -16.877477645874023
    10. ' =)' → logprob: -17.502477645874023

Token 775: ' simulation' (ID: 30937)
  Prédit: ' simulation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' simulation' → logprob: -0.6931471824645996
    2. 'simulation' → logprob: -0.6931471824645996
    3. 'sim' → logprob: -20.193147659301758
    4. 'Simulation' → logprob: -20.318147659301758
    5. '(sim' → logprob: -20.443147659301758
    6. 'simulate' → logprob: -21.818147659301758
    7. ' simulator' → logprob: -22.818147659301758
    8. 'print' → logprob: -22.818147659301758
    9. '   ' → logprob: -23.568147659301758
    10. 'imulation' → logprob: -24.193147659301758

Token 776: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -2.2200749754119897e-06
    2. '.' → logprob: -13.125001907348633
    3. ' .' → logprob: -16.000001907348633
    4. 'run' → logprob: -17.375001907348633
    5. '
' → logprob: -20.000001907348633
    6. '   ' → logprob: -20.125001907348633
    7. '.
' → logprob: -20.250001907348633
    8. ' run' → logprob: -20.750001907348633
    9. '.result' → logprob: -21.125001907348633
    10. '.Run' → logprob: -21.375001907348633

Token 777: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0751928761601448
    2. '
' → logprob: -3.325192928314209
    3. 'print' → logprob: -3.325192928314209
    4. ' print' → logprob: -8.32519245147705
    5. '()
' → logprob: -9.45019245147705
    6. '(print' → logprob: -9.82519245147705
    7. '	print' → logprob: -10.20019245147705
    8. '    
' → logprob: -10.20019245147705
    9. '<|end|>' → logprob: -11.45019245147705
    10. '(
' → logprob: -11.82519245147705

Token 778: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2520999312400818
    2. '   ' → logprob: -1.5020999908447266
    3. '```' → logprob: -9.002099990844727
    4. ' print' → logprob: -10.502099990844727
    5. '
' → logprob: -10.877099990844727
    6. '	print' → logprob: -14.752099990844727
    7. '    
' → logprob: -15.002099990844727
    8. 'if' → logprob: -15.877099990844727
    9. '``' → logprob: -15.877099990844727
    10. 'import' → logprob: -16.002099990844727

Token 779: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00020497082732617855
    2. '   ' → logprob: -8.500205039978027
    3. '```' → logprob: -13.750205039978027
    4. ' print' → logprob: -15.000205039978027
    5. 'if' → logprob: -18.37520408630371
    6. '
' → logprob: -18.62520408630371
    7. '``' → logprob: -20.62520408630371
    8. 'import' → logprob: -21.25020408630371
    9. '	print' → logprob: -21.25020408630371
    10. '    
' → logprob: -22.12520408630371

Token 780: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -3.173704271830502e-06
    2. 'result' → logprob: -12.75000286102295
    3. '(' → logprob: -15.25000286102295
    4. '=result' → logprob: -20.625003814697266
    5. '(
' → logprob: -20.750003814697266
    6. ' (' → logprob: -21.375003814697266
    7. '((' → logprob: -21.875003814697266
    8. '[result' → logprob: -22.000003814697266
    9. ' result' → logprob: -22.250003814697266
    10. '(results' → logprob: -22.625003814697266

Token 781: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. '())' → logprob: -14.500001907348633
    3. ')
' → logprob: -14.625001907348633
    4. '()' → logprob: -14.875001907348633
    5. ' )' → logprob: -16.125001907348633
    6. ')`' → logprob: -17.500001907348633
    7. '')' → logprob: -19.000001907348633
    8. '")' → logprob: -19.250001907348633
    9. '```' → logprob: -19.375001907348633
    10. '))' → logprob: -19.625001907348633

Token 782: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.1008713702030946e-06
    2. ' if' → logprob: -13.500001907348633
    3. '```' → logprob: -14.500001907348633
    4. '
' → logprob: -16.000001907348633
    5. 'main' → logprob: -19.125001907348633
    6. '__' → logprob: -19.500001907348633
    7. '<|end|>' → logprob: -19.500001907348633
    8. '	if' → logprob: -19.750001907348633
    9. '#' → logprob: -19.875001907348633
    10. '\' → logprob: -20.375001907348633

Token 783: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.575948178768158
    2. ' __' → logprob: -0.825948178768158
    3. 'name' → logprob: -12.450947761535645
    4. '_name' → logprob: -13.450947761535645
    5. '___' → logprob: -14.325947761535645
    6. ' ' → logprob: -14.575947761535645
    7. '_' → logprob: -14.700947761535645
    8. '```' → logprob: -14.950947761535645
    9. ' ' → logprob: -15.075947761535645
    10. 'Name' → logprob: -15.325947761535645

Token 784: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.043840065598487854
    2. '==' → logprob: -3.418840169906616
    3. ' ==' → logprob: -4.918839931488037
    4. 'name' → logprob: -6.793839931488037
    5. '=="' → logprob: -7.168839931488037
    6. '=='' → logprob: -7.918839931488037
    7. '[' → logprob: -8.793840408325195
    8. ' __' → logprob: -8.793840408325195
    9. '__.__' → logprob: -9.918840408325195
    10. '```' → logprob: -10.043840408325195

Token 785: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00043937109876424074
    2. '==' → logprob: -7.750439167022705
    3. ' ==' → logprob: -12.000439643859863
    4. '=="' → logprob: -13.750439643859863
    5. '__.__' → logprob: -13.750439643859863
    6. '__.' → logprob: -16.375438690185547
    7. '__
' → logprob: -16.625438690185547
    8. '____' → logprob: -17.125438690185547
    9. '___' → logprob: -17.375438690185547
    10. '=='' → logprob: -17.500438690185547

Token 786: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.19153890013694763
    2. '__' → logprob: -2.1915388107299805
    3. ' ==' → logprob: -3.4415388107299805
    4. '=="' → logprob: -3.6915388107299805
    5. '=='' → logprob: -5.1915388107299805
    6. '==
' → logprob: -10.44153881072998
    7. '===' → logprob: -11.56653881072998
    8. '=' → logprob: -13.06653881072998
    9. '==="' → logprob: -13.06653881072998
    10. '[' → logprob: -13.31653881072998

Token 787: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.038079023361206055
    2. ''' → logprob: -3.288079023361206
    3. '__' → logprob: -10.288079261779785
    4. ' "__' → logprob: -12.663079261779785
    5. '"name' → logprob: -16.28807830810547
    6. ' '__' → logprob: -16.41307830810547
    7. '"user' → logprob: -16.91307830810547
    8. '"class' → logprob: -17.66307830810547
    9. ''"' → logprob: -17.66307830810547
    10. '"_' → logprob: -17.91307830810547

Token 788: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00043472214019857347
    2. '__' → logprob: -7.750434875488281
    3. '"' → logprob: -12.750434875488281
    4. 'name' → logprob: -14.500434875488281
    5. '_main' → logprob: -15.000434875488281
    6. ' main' → logprob: -15.375434875488281
    7. ''' → logprob: -17.37543487548828
    8. '-main' → logprob: -18.50043487548828
    9. 'Main' → logprob: -19.50043487548828
    10. 'built' → logprob: -19.50043487548828

Token 789: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.03833075240254402
    2. '__' → logprob: -3.2883307933807373
    3. '__':
' → logprob: -8.163331031799316
    4. '__["' → logprob: -13.163331031799316
    5. '__.' → logprob: -14.038331031799316
    6. '__
' → logprob: -14.413331031799316
    7. '__.__' → logprob: -15.038331031799316
    8. '__
' → logprob: -15.038331031799316
    9. '__:' → logprob: -15.163331031799316
    10. '_' → logprob: -16.538330078125

Token 790: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.6395109295845032
    2. '__' → logprob: -0.8895109295845032
    3. '"' → logprob: -2.8895108699798584
    4. ''' → logprob: -5.3895111083984375
    5. '   ' → logprob: -7.2645111083984375
    6. ' main' → logprob: -7.8895111083984375
    7. '_main' → logprob: -8.639511108398438
    8. '____' → logprob: -9.889511108398438
    9. '__":
' → logprob: -10.514511108398438
    10. '___' → logprob: -10.889511108398438

Token 791: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.0
    3. 'import' → logprob: -21.0
    4. '   ' → logprob: -21.375
    5. '	main' → logprob: -22.0
    6. '
' → logprob: -25.75
    7. '.main' → logprob: -26.375
    8. '(main' → logprob: -26.5
    9. '```' → logprob: -28.0
    10. '_main' → logprob: -28.0

Token 792: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 790
Tokens correctement prédits (1ère position, stricte): 372
Tokens correctement prédits (1ère position, avec adaptation): 404
Tokens correctement prédits (top 10): 701
Précision stricte (1ère position): 47.09%
Précision adaptée (1ère position): 51.14%
Précision (top 10): 88.73%
================================================================================
