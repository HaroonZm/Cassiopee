================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
K = int(input())

MOD = 10**9 + 7

# Cette fonction vérifie si un nombre est un nombre de Fibonacci (approche simple)
def is_fibo(n):
    a, b = 0, 1
    while b < n:
        a, b = b, a + b
    return b == n

# On veut trouver le K-ième plus petit nombre qui peut être un nombre de chemins d'ika
# En analysant le problème, les nombres d'ika sont des nombres de Fibonacci sauf 1 (car 1 apparaît deux fois)
# Mais avec une approche simple et directe, on peut simplement générer les nombres de Fibonacci jusque ce qu'on trouve le K-ième.

# Comme K peut être très grand (jusqu'à 10^18), on ne peut pas générer directement.
# On remarque que les nombres d'ika sont les nombres de Fibonacci depuis la 2nd position,
# 1,1,2,3,5,8,13,...
# Le k-ième plus petit ika number = fib(k+1)
# Donc on calcule fib(K+1) modulo MOD

def fib(n):
    a, b = 0, 1
    for _ in range(n):
        a, b = b, (a + b) % MOD
    return a

print(fib(K+1) % MOD)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'K' (ID: 42)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01043243333697319
    2. 'K' → logprob: -5.135432243347168
    3. '(K' → logprob: -5.510432243347168
    4. ''' → logprob: -8.260432243347168
    5. '`' → logprob: -10.010432243347168
    6. '('' → logprob: -10.510432243347168
    7. '```' → logprob: -10.510432243347168
    8. '"' → logprob: -11.135432243347168
    9. '("("' → logprob: -11.260432243347168
    10. ' K' → logprob: -11.260432243347168

Token 4: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04045691713690758
    2. ')' → logprob: -3.665457010269165
    3. '()' → logprob: -4.540456771850586
    4. '())' → logprob: -6.290456771850586
    5. '("("' → logprob: -8.040456771850586
    6. '(()' → logprob: -8.165456771850586
    7. '('' → logprob: -8.415456771850586
    8. '(
' → logprob: -9.040456771850586
    9. '(""))' → logprob: -9.040456771850586
    10. '```' → logprob: -9.290456771850586

Token 5: 'MOD' (ID: 52135)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8633033633232117
    2. '+' → logprob: -1.3633034229278564
    3. 'if' → logprob: -1.9883034229278564
    4. 'for' → logprob: -3.1133034229278564
    5. '\n' → logprob: -3.1133034229278564
    6. '#' → logprob: -3.9883034229278564
    7. 'i' → logprob: -4.238303184509277
    8. '\' → logprob: -4.488303184509277
    9. ')' → logprob: -4.613303184509277
    10. '%' → logprob: -4.863303184509277

Token 6: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4367203712463379
    2. ')' → logprob: -1.561720371246338
    3. ' =' → logprob: -2.436720371246338
    4. '<|end|>' → logprob: -3.561720371246338
    5. ' ' → logprob: -4.561720371246338
    6. '_' → logprob: -4.936720371246338
    7. '**' → logprob: -5.061720371246338
    8. ' )' → logprob: -6.561720371246338
    9. '*' → logprob: -6.936720371246338
    10. '<|end|>' → logprob: -7.811720371246338

Token 7: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31689712405204773
    2. '10' → logprob: -1.3168971538543701
    3. '100' → logprob: -5.691896915435791
    4. '1' → logprob: -8.31689739227295
    5. '`' → logprob: -13.19189739227295
    6. '998' → logprob: -13.31689739227295
    7. ' (' → logprob: -13.69189739227295
    8. '(' → logprob: -13.81689739227295
    9. '"' → logprob: -13.94189739227295
    10. '0' → logprob: -14.06689739227295

Token 8: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2546592652797699
    2. '100' → logprob: -1.5046592950820923
    3. '1' → logprob: -6.004659175872803
    4. ' ' → logprob: -9.004659652709961
    5. '998' → logprob: -9.004659652709961
    6. '(' → logprob: -11.379659652709961
    7. 'pow' → logprob: -14.379659652709961
    8. '2' → logprob: -14.754659652709961
    9. '123' → logprob: -15.004659652709961
    10. '```' → logprob: -15.629659652709961

Token 9: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.04335187003016472
    2. '*' → logprob: -3.418351888656616
    3. '\' → logprob: -5.793351650238037
    4. '\n' → logprob: -6.293351650238037
    5. ')' → logprob: -6.543351650238037
    6. '#' → logprob: -7.168351650238037
    7. '```' → logprob: -7.293351650238037
    8. ':' → logprob: -7.918351650238037
    9. '^' → logprob: -8.293352127075195
    10. '%' → logprob: -8.418352127075195

Token 10: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -6.704273118884885e-07
    2. '09' → logprob: -14.250000953674316
    3. ' ' → logprob: -18.125
    4. '```' → logprob: -18.75
    5. '10' → logprob: -20.625
    6. '+' → logprob: -21.625
    7. '0' → logprob: -21.875
    8. '９' → logprob: -22.0
    9. '19' → logprob: -22.375
    10. '**' → logprob: -22.375

Token 11: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001330360071733594
    2. ' +' → logprob: -6.626330375671387
    3. '7' → logprob: -12.751330375671387
    4. '+

' → logprob: -14.126330375671387
    5. '+
' → logprob: -14.876330375671387
    6. '＋' → logprob: -15.626330375671387
    7. '+)' → logprob: -17.00132942199707
    8. ' +
' → logprob: -17.12632942199707
    9. ' +
' → logprob: -17.37632942199707
    10. ' +

' → logprob: -17.37632942199707

Token 12: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.875003814697266
    3. '+' → logprob: -14.000003814697266
    4. '07' → logprob: -18.125003814697266
    5. '```' → logprob: -18.500003814697266
    6. '9' → logprob: -18.500003814697266
    7. '   ' → logprob: -18.875003814697266
    8. ' +' → logprob: -19.750003814697266
    9. '  ' → logprob: -20.375003814697266
    10. '_' → logprob: -20.437503814697266

Token 13: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. '+' → logprob: -16.125
    3. '```' → logprob: -18.0
    4. ' ' → logprob: -19.75
    5. '07' → logprob: -20.375
    6. '   ' → logprob: -20.75
    7. '9' → logprob: -21.5
    8. '７' → logprob: -22.0
    9. '' → logprob: -22.0625
    10. '87' → logprob: -22.125

Token 14: '

' (ID: 279)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3615090548992157
    2. 'n' → logprob: -2.736509084701538
    3. '\n' → logprob: -2.986509084701538
    4. '
' → logprob: -2.986509084701538
    5. ')' → logprob: -3.486509084701538
    6. '\' → logprob: -3.861509084701538
    7. 'a' → logprob: -3.861509084701538
    8. '' → logprob: -4.861508846282959
    9. '#' → logprob: -4.986508846282959
    10. 'dp' → logprob: -4.986508846282959

Token 15: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04432838410139084
    2. 'result' → logprob: -3.669328451156616
    3. 'fact' → logprob: -5.169328212738037
    4. 'ans' → logprob: -5.544328212738037
    5. 'n' → logprob: -6.419328212738037
    6. 'factor' → logprob: -6.419328212738037
    7. 'pow' → logprob: -6.669328212738037
    8. 'res' → logprob: -7.044328212738037
    9. 'answer' → logprob: -7.419328212738037
    10. 'a' → logprob: -7.419328212738037

Token 16: ' Cette' (ID: 27383)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.22415784001350403
    2. ' dp' → logprob: -1.9741578102111816
    3. 'for' → logprob: -4.099157810211182
    4. 'result' → logprob: -4.599157810211182
    5. ' for' → logprob: -4.849157810211182
    6. ' ans' → logprob: -5.349157810211182
    7. 'pow' → logprob: -5.474157810211182
    8. 'f' → logprob: -6.099157810211182
    9. 'n' → logprob: -6.099157810211182
    10. ' result' → logprob: -6.349157810211182

Token 17: ' fonction' (ID: 17610)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1116756871342659
    2. '_' → logprob: -2.48667573928833
    3. ' code' → logprob: -4.11167573928833
    4. ' space' → logprob: -6.86167573928833
    5. ' _' → logprob: -7.36167573928833
    6. ' ' → logprob: -7.48667573928833
    7. '_code' → logprob: -7.73667573928833
    8. ' n' → logprob: -8.111675262451172
    9. ' a' → logprob: -8.236675262451172
    10. '  ' → logprob: -8.236675262451172

Token 18: ' vér' (ID: 42524)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4414893686771393
    2. 'def' → logprob: -1.316489338874817
    3. ' ' → logprob: -3.0664894580841064
    4. '_' → logprob: -3.9414894580841064
    5. 's' → logprob: -5.566489219665527
    6. '<|end|>' → logprob: -5.816489219665527
    7. ' s' → logprob: -5.941489219665527
    8. ')' → logprob: -6.066489219665527
    9. ' déf' → logprob: -6.691489219665527
    10. ' d' → logprob: -6.691489219665527

Token 19: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.008410315960645676
    2. 'if' → logprob: -4.883410453796387
    3. 'ifi' → logprob: -8.383410453796387
    4. 'ifié' → logprob: -8.508410453796387
    5. 'i' → logprob: -9.383410453796387
    6. '{' → logprob: -9.758410453796387
    7. 'ifies' → logprob: -10.258410453796387
    8. '\' → logprob: -10.508410453796387
    9. '```' → logprob: -10.758410453796387
    10. '_' → logprob: -10.883410453796387

Token 20: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23299001157283783
    2. 's' → logprob: -2.357990026473999
    3. ' si' → logprob: -2.732990026473999
    4. 'si' → logprob: -3.607990026473999
    5. ' if' → logprob: -4.35798978805542
    6. ' s' → logprob: -6.23298978805542
    7. ' ' → logprob: -6.60798978805542
    8. '_' → logprob: -7.35798978805542
    9. ' a' → logprob: -8.107990264892578
    10. 'a' → logprob: -8.107990264892578

Token 21: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.304418683052063
    2. ' le' → logprob: -1.429418683052063
    3. ' la' → logprob: -1.679418683052063
    4. ' un' → logprob: -2.5544185638427734
    5. 'le' → logprob: -2.8044185638427734
    6. ' une' → logprob: -3.0544185638427734
    7. ' K' → logprob: -3.3044185638427734
    8. 'la' → logprob: -4.304418563842773
    9. 'une' → logprob: -4.554418563842773
    10. ' a' → logprob: -4.554418563842773

Token 22: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.44403859972953796
    2. 'nombre' → logprob: -2.1940386295318604
    3. ' ' → logprob: -2.9440386295318604
    4. ' mot' → logprob: -2.9440386295318604
    5. ' entier' → logprob: -3.4440386295318604
    6. 'mot' → logprob: -3.8190386295318604
    7. ' caractère' → logprob: -4.069038391113281
    8. 'e' → logprob: -4.319038391113281
    9. 's' → logprob: -4.819038391113281
    10. ')' → logprob: -5.069038391113281

Token 23: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6583095192909241
    2. ' est' → logprob: -1.0333094596862793
    3. 'est' → logprob: -2.2833094596862793
    4. '_' → logprob: -4.283309459686279
    5. ' )' → logprob: -6.033309459686279
    6. 'n' → logprob: -6.158309459686279
    7. 's' → logprob: -6.908309459686279
    8. ')' → logprob: -6.908309459686279
    9. ' n' → logprob: -7.033309459686279
    10. ' is' → logprob: -7.658309459686279

Token 24: ' un' (ID: 537)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.10086148232221603
    2. 'pair' → logprob: -3.7258615493774414
    3. 'un' → logprob: -3.8508615493774414
    4. ' premier' → logprob: -4.100861549377441
    5. 'pal' → logprob: -4.225861549377441
    6. ' un' → logprob: -5.100861549377441
    7. ' pair' → logprob: -5.350861549377441
    8. 'prime' → logprob: -5.850861549377441
    9. ' palindrome' → logprob: -7.100861549377441
    10. 'div' → logprob: -7.100861549377441

Token 25: ' nombre' (ID: 9733)
  Prédit: ' palindrome'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' palindrome' → logprob: -0.49770021438598633
    2. ' ' → logprob: -1.6227002143859863
    3. 'pal' → logprob: -2.1227002143859863
    4. 'nombre' → logprob: -3.1227002143859863
    5. ' nombre' → logprob: -4.622700214385986
    6. ' pal' → logprob: -5.122700214385986
    7. '_pal' → logprob: -5.747700214385986
    8. 'p' → logprob: -6.497700214385986
    9. '```' → logprob: -6.497700214385986
    10. '   ' → logprob: -6.747700214385986

Token 26: ' de' (ID: 334)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.033939238637685776
    2. ' premier' → logprob: -3.5339391231536865
    3. 'pal' → logprob: -6.908939361572266
    4. ' parfait' → logprob: -7.033939361572266
    5. '   ' → logprob: -7.783939361572266
    6. ' palindrome' → logprob: -7.908939361572266
    7. 'par' → logprob: -8.158939361572266
    8. 'prime' → logprob: -8.408939361572266
    9. ' ' → logprob: -9.033939361572266
    10. 'pair' → logprob: -9.408939361572266

Token 27: ' Fibonacci' (ID: 139341)
  Prédit: 'Catal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Catal' → logprob: -0.6660161018371582
    2. '```' → logprob: -2.041016101837158
    3. 'n' → logprob: -2.291016101837158
    4. 'Har' → logprob: -3.791016101837158
    5. ' palindrome' → logprob: -3.791016101837158
    6. 'perfect' → logprob: -3.916016101837158
    7. 'N' → logprob: -4.166016101837158
    8. 't' → logprob: -4.291016101837158
    9. ' Fibonacci' → logprob: -4.666016101837158
    10. 'Arm' → logprob: -4.666016101837158

Token 28: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0013799945591017604
    2. ' def' → logprob: -6.87637996673584
    3. '\' → logprob: -8.87637996673584
    4. '
' → logprob: -9.50137996673584
    5. '```' → logprob: -9.75137996673584
    6. '\n' → logprob: -10.75137996673584
    7. 'de' → logprob: -11.87637996673584
    8. ':' → logprob: -11.87637996673584
    9. 's' → logprob: -12.12637996673584
    10. 'd' → logprob: -12.12637996673584

Token 29: 'appro' (ID: 14671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01282570231705904
    2. ' )' → logprob: -4.5128254890441895
    3. 'def' → logprob: -6.6378254890441895
    4. ')n' → logprob: -8.137825965881348
    5. 'n' → logprob: -9.637825965881348
    6. 'e' → logprob: -11.012825965881348
    7. 'f' → logprob: -11.512825965881348
    8. ',' → logprob: -11.512825965881348
    9. 'd' → logprob: -11.637825965881348
    10. ' def' → logprob: -11.762825965881348

Token 30: 'che' (ID: 926)
  Prédit: 'xim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xim' → logprob: -0.06797914206981659
    2. 'x' → logprob: -2.942979097366333
    3. 'xi' → logprob: -5.067979335784912
    4. 'ch' → logprob: -5.567979335784912
    5. 'ché' → logprob: -6.317979335784912
    6. 'xima' → logprob: -8.067978858947754
    7. 'd' → logprob: -8.942978858947754
    8. 'ximately' → logprob: -8.942978858947754
    9. 'pri' → logprob: -9.192978858947754
    10. 's' → logprob: -9.317978858947754

Token 31: ' simple' (ID: 4705)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.842718780040741
    2. 'par' → logprob: -1.3427188396453857
    3. ' math' → logprob: -3.0927188396453857
    4. 'direct' → logprob: -3.4677188396453857
    5. ' brute' → logprob: -3.5927188396453857
    6. 'br' → logprob: -3.9677188396453857
    7. 'na' → logprob: -4.092718601226807
    8. 'math' → logprob: -4.092718601226807
    9. ' directe' → logprob: -4.217718601226807
    10. ' naive' → logprob: -4.342718601226807

Token 32: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09552200883626938
    2. ' )' → logprob: -2.470521926879883
    3. 'def' → logprob: -5.095521926879883
    4. ' def' → logprob: -7.845521926879883
    5. 'e' → logprob: -11.845521926879883
    6. ')
' → logprob: -12.345521926879883
    7. ' ' → logprob: -12.345521926879883
    8. '):' → logprob: -12.720521926879883
    9. ' )
' → logprob: -12.845521926879883
    10. ':' → logprob: -12.970521926879883

Token 33: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0034663097467273474
    2. ' def' → logprob: -5.7534661293029785
    3. '
' → logprob: -8.503466606140137
    4. '\' → logprob: -10.128466606140137
    5. '```' → logprob: -11.128466606140137
    6. ':def' → logprob: -11.378466606140137
    7. 'd' → logprob: -12.378466606140137
    8. '\n' → logprob: -12.628466606140137
    9. ':' → logprob: -12.753466606140137
    10. 'dé' → logprob: -13.128466606140137

Token 34: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2624497711658478
    2. 'is' → logprob: -1.5124497413635254
    3. ' est' → logprob: -5.012449741363525
    4. 'est' → logprob: -5.762449741363525
    5. ' ' → logprob: -8.512450218200684
    6. 'f' → logprob: -8.887450218200684
    7. ' fibonacci' → logprob: -9.012450218200684
    8. '  ' → logprob: -10.012450218200684
    9. 'def' → logprob: -10.262450218200684
    10. '```' → logprob: -10.387450218200684

Token 35: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -7.588793960167095e-05
    2. 'F' → logprob: -10.625076293945312
    3. '_' → logprob: -10.750076293945312
    4. '_in' → logprob: -11.000076293945312
    5. '_F' → logprob: -11.500076293945312
    6. '_prime' → logprob: -14.000076293945312
    7. 'f' → logprob: -14.375076293945312
    8. '_a' → logprob: -15.125076293945312
    9. ' Fibonacci' → logprob: -15.250076293945312
    10. '_per' → logprob: -15.500076293945312

Token 36: 'ibo' (ID: 27764)
  Prédit: 'ib'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ib' → logprob: -0.26121440529823303
    2. 'ibo' → logprob: -1.7612143754959106
    3. 'ibonacci' → logprob: -3.3862144947052
    4. 'i' → logprob: -3.7612144947052
    5. 'ibon' → logprob: -7.261214256286621
    6. 'o' → logprob: -9.761214256286621
    7. 'ibbon' → logprob: -9.886214256286621
    8. 'ibb' → logprob: -10.636214256286621
    9. 'b' → logprob: -10.886214256286621
    10. 'ibs' → logprob: -11.386214256286621

Token 37: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.22110512852668762
    2. '(' → logprob: -2.3461050987243652
    3. 'n' → logprob: -2.7211050987243652
    4. 'r' → logprob: -4.346105098724365
    5. 'ra' → logprob: -4.846105098724365
    6. 'nal' → logprob: -5.471105098724365
    7. '(r' → logprob: -5.721105098724365
    8. 'na' → logprob: -6.471105098724365
    9. '(num' → logprob: -6.596105098724365
    10. '(x' → logprob: -6.846105098724365

Token 38: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01610909029841423
    2. ')' → logprob: -4.141108989715576
    3. ':' → logprob: -10.266109466552734
    4. ' ):' → logprob: -10.891109466552734
    5. '):
' → logprob: -11.016109466552734
    6. '=' → logprob: -13.516109466552734
    7. ')：' → logprob: -14.391109466552734
    8. '):
' → logprob: -14.891109466552734
    9. ' )' → logprob: -15.016109466552734
    10. '**' → logprob: -15.391109466552734

Token 39: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2574424147605896
    2. '   ' → logprob: -1.5074424743652344
    3. ':
' → logprob: -6.007442474365234
    4. ' :' → logprob: -6.382442474365234
    5. ' ' → logprob: -8.132442474365234
    6. ' if' → logprob: -8.257442474365234
    7. 'if' → logprob: -8.757442474365234
    8. '
' → logprob: -9.507442474365234
    9. '):' → logprob: -9.757442474365234
    10. '  ' → logprob: -9.882442474365234

Token 40: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.44619429111480713
    2. 'if' → logprob: -1.3211942911148071
    3. ' if' → logprob: -2.6961941719055176
    4. ' a' → logprob: -3.9461941719055176
    5. '0' → logprob: -5.321194171905518
    6. '   ' → logprob: -6.821194171905518
    7. ' ' → logprob: -8.821194648742676
    8. 'for' → logprob: -9.446194648742676
    9. 'fib' → logprob: -10.321194648742676
    10. ' for' → logprob: -10.821194648742676

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01471034623682499
    2. ' ,' → logprob: -4.264710426330566
    3. ',b' → logprob: -8.014710426330566
    4. '=' → logprob: -9.264710426330566
    5. ' =' → logprob: -9.264710426330566
    6. ' ' → logprob: -10.764710426330566
    7. 'b' → logprob: -12.889710426330566
    8. ' b' → logprob: -14.389710426330566
    9. ',t' → logprob: -14.889710426330566
    10. '0' → logprob: -15.264710426330566

Token 42: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5759737491607666
    2. ' b' → logprob: -0.8259737491607666
    3. ' ' → logprob: -10.700973510742188
    4. '<|end|>' → logprob: -11.700973510742188
    5. ',b' → logprob: -14.825973510742188
    6. '_' → logprob: -14.825973510742188
    7. ' =' → logprob: -14.950973510742188
    8. '=' → logprob: -14.950973510742188
    9. '	b' → logprob: -14.950973510742188
    10. '_b' → logprob: -15.075973510742188

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889606058597565
    2. '=' → logprob: -2.5788960456848145
    3. ',' → logprob: -13.078896522521973
    4. ' ' → logprob: -13.328896522521973
    5. '<|end|>' → logprob: -13.828896522521973
    6. '  ' → logprob: -15.453896522521973
    7. '<|end|>' → logprob: -15.453896522521973
    8. '0' → logprob: -15.578896522521973
    9. ' =
' → logprob: -15.578896522521973
    10. ')' → logprob: -15.703896522521973

Token 44: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14267700910568237
    2. ' ' → logprob: -2.017677068710327
    3. '1' → logprob: -13.392677307128906
    4. '(' → logprob: -15.892677307128906
    5. ' (' → logprob: -16.142677307128906
    6. ' ' → logprob: -16.642677307128906
    7. '۰' → logprob: -16.892677307128906
    8. '<|end|>' → logprob: -16.892677307128906
    9. '  ' → logprob: -17.642677307128906
    10. '<|end|>' → logprob: -19.267677307128906

Token 45: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '(' → logprob: -16.625003814697266
    4. '1' → logprob: -18.000003814697266
    5. '۰' → logprob: -20.750003814697266
    6. ' (' → logprob: -20.875003814697266
    7. '   ' → logprob: -21.500003814697266
    8. '  ' → logprob: -22.625003814697266
    9. '[' → logprob: -22.750003814697266
    10. '０' → logprob: -23.312503814697266

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011010414455085993
    2. ' ,' → logprob: -6.876101016998291
    3. '   ' → logprob: -10.37610149383545
    4. ' ' → logprob: -11.62610149383545
    5. '<|end|>' → logprob: -11.75110149383545
    6. ',
' → logprob: -12.00110149383545
    7. '  ' → logprob: -12.37610149383545
    8. '=' → logprob: -13.12610149383545
    9. '<|end|>' → logprob: -13.12610149383545
    10. ',n' → logprob: -13.37610149383545

Token 47: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.033645812422037125
    2. ' ' → logprob: -3.4086458683013916
    3. ' ' → logprob: -15.908645629882812
    4. '0' → logprob: -18.283645629882812
    5. '   ' → logprob: -19.346145629882812
    6. '１' → logprob: -19.471145629882812
    7. '<|end|>' → logprob: -19.471145629882812
    8. '  ' → logprob: -19.658645629882812
    9. '۱' → logprob: -19.783645629882812
    10. '```' → logprob: -20.533645629882812

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '0' → logprob: -19.750011444091797
    4. '' → logprob: -20.500011444091797
    5. '１' → logprob: -20.562511444091797
    6. '  ' → logprob: -21.000011444091797
    7. '۱' → logprob: -21.125011444091797
    8. '   ' → logprob: -21.812511444091797
    9. '१' → logprob: -22.187511444091797
    10. '2' → logprob: -22.250011444091797

Token 49: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7810705304145813
    2. '<|end|>' → logprob: -1.0310704708099365
    3. '   ' → logprob: -2.2810704708099365
    4. '\n' → logprob: -3.9060704708099365
    5. ' ' → logprob: -3.9060704708099365
    6. ':' → logprob: -4.906070709228516
    7. ')' → logprob: -5.031070709228516
    8. '    
' → logprob: -5.031070709228516
    9. '<|end|>' → logprob: -5.031070709228516
    10. '  ' → logprob: -5.531070709228516

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6974716186523438
    2. '
' → logprob: -2.4474716186523438
    3. '  
' → logprob: -2.5724716186523438
    4. ' ' → logprob: -2.5724716186523438
    5. ' 
' → logprob: -2.6974716186523438
    6. '    
' → logprob: -2.9474716186523438
    7. '\n' → logprob: -2.9474716186523438
    8. '   
' → logprob: -3.1974716186523438
    9. ':' → logprob: -4.447471618652344
    10. '  ' → logprob: -4.697471618652344

Token 51: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5355566143989563
    2. ' ' → logprob: -1.2855565547943115
    3. 'while' (adapté à ' while') → logprob: -3.0355565547943115
    4. '   ' → logprob: -3.0355565547943115
    5. '<|end|>' → logprob: -3.7855565547943115
    6. '    ' → logprob: -4.910556793212891
    7. '	while' → logprob: -5.035556793212891
    8. '  ' → logprob: -5.910556793212891
    9. ' 
' → logprob: -7.160556793212891
    10. '<|end|>' → logprob: -7.160556793212891

Token 52: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.06537624448537827
    2. 'b' → logprob: -2.9403762817382812
    3. ' a' → logprob: -4.815376281738281
    4. 'a' → logprob: -6.065376281738281
    5. ' ' → logprob: -12.065376281738281
    6. '	b' → logprob: -12.315376281738281
    7. '	a' → logprob: -14.315376281738281
    8. ' б' → logprob: -14.690376281738281
    9. '_b' → logprob: -14.690376281738281
    10. '<|end|>' → logprob: -14.690376281738281

Token 53: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.08180331438779831
    2. '<=' → logprob: -3.081803321838379
    3. ' <' → logprob: -3.581803321838379
    4. '<' → logprob: -5.331803321838379
    5. ' ' → logprob: -12.331803321838379
    6. ' ≤' → logprob: -13.831803321838379
    7. '<n' → logprob: -13.831803321838379
    8. '<|end|>' → logprob: -14.206803321838379
    9. '  ' → logprob: -15.081803321838379
    10. ' ' → logprob: -15.206803321838379

Token 54: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011328381486237049
    2. ' n' → logprob: -4.511328220367432
    3. '=' → logprob: -8.38632869720459
    4. '=n' → logprob: -9.88632869720459
    5. '	n' → logprob: -13.38632869720459
    6. ' =' → logprob: -15.88632869720459
    7. '_n' → logprob: -16.761327743530273
    8. ')n' → logprob: -18.011327743530273
    9. '(n' → logprob: -18.511327743530273
    10. ' ' → logprob: -18.636327743530273

Token 55: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.814948320388794
    2. ':' → logprob: -0.939948320388794
    3. ' and' → logprob: -1.814948320388794
    4. '   ' → logprob: -6.689948081970215
    5. 'and' → logprob: -6.689948081970215
    6. 'or' → logprob: -7.564948081970215
    7. ' :' → logprob: -7.814948081970215
    8. ':
' → logprob: -8.939948081970215
    9. '=' → logprob: -9.314948081970215
    10. ' ' → logprob: -9.564948081970215

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26859065890312195
    2. ' ' → logprob: -2.1435906887054443
    3. '   ' → logprob: -2.8935906887054443
    4. '<|end|>' → logprob: -3.2685906887054443
    5. '    ' → logprob: -4.393590450286865
    6. ' b' → logprob: -5.518590450286865
    7. 'b' → logprob: -5.768590450286865
    8. '  ' → logprob: -6.893590450286865
    9. '<|end|>' → logprob: -7.018590450286865
    10. ',' → logprob: -7.018590450286865

Token 57: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6297459602355957
    2. ' b' → logprob: -0.8797459602355957
    3. '       ' → logprob: -3.2547459602355957
    4. '   ' → logprob: -4.629745960235596
    5. ' a' → logprob: -6.379745960235596
    6. 'a' (adapté à ' a') → logprob: -6.379745960235596
    7. ' ' → logprob: -7.879745960235596
    8. '    ' → logprob: -9.254745483398438
    9. '  ' → logprob: -9.629745483398438
    10. '<|end|>' → logprob: -10.129745483398438

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004607060924172401
    2. ' ,' → logprob: -6.254607200622559
    3. ' =' → logprob: -6.504607200622559
    4. '=' → logprob: -6.754607200622559
    5. ',b' → logprob: -11.379607200622559
    6. ' ' → logprob: -14.879607200622559
    7. ' +=' → logprob: -15.879607200622559
    8. ')' → logprob: -16.129606246948242
    9. 'b' → logprob: -16.129606246948242
    10. '   ' → logprob: -16.379606246948242

Token 59: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5759437084197998
    2. ' b' → logprob: -0.8259437084197998
    3. '<|end|>' → logprob: -12.700943946838379
    4. ' ' → logprob: -13.950943946838379
    5. '<|end|>' → logprob: -16.200942993164062
    6. ' ' → logprob: -16.575942993164062
    7. 'space' → logprob: -16.825942993164062
    8. '	b' → logprob: -16.950942993164062
    9. ' б' → logprob: -17.575942993164062
    10. ')b' → logprob: -17.700942993164062

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018290648236870766
    2. '=' → logprob: -4.0182905197143555
    3. ' +=' → logprob: -9.018290519714355
    4. '<|end|>' → logprob: -11.643290519714355
    5. '+=' → logprob: -11.768290519714355
    6. ',' → logprob: -13.893290519714355
    7. '+' → logprob: -14.143290519714355
    8. ' ' → logprob: -14.393290519714355
    9. '<|end|>' → logprob: -15.268290519714355
    10. ' =)' → logprob: -15.643290519714355

Token 61: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.20141898095607758
    2. 'b' → logprob: -1.7014189958572388
    3. ' ' → logprob: -12.70141887664795
    4. '	b' → logprob: -14.20141887664795
    5. ' ' → logprob: -14.32641887664795
    6. ' a' → logprob: -14.45141887664795
    7. 'a' → logprob: -14.95141887664795
    8. '  ' → logprob: -15.95141887664795
    9. '    ' → logprob: -16.076419830322266
    10. ' б' → logprob: -16.451419830322266

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03309493139386177
    2. '+' → logprob: -3.533094882965088
    3. ' +' → logprob: -5.783094882965088
    4. ' ,' → logprob: -8.783095359802246
    5. '+b' → logprob: -9.408095359802246
    6. '+,' → logprob: -12.158095359802246
    7. ' ' → logprob: -12.283095359802246
    8. ',b' → logprob: -12.408095359802246
    9. '+a' → logprob: -12.533095359802246
    10. ' plus' → logprob: -13.283095359802246

Token 63: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5759461522102356
    2. ' a' → logprob: -0.8259461522102356
    3. '	a' → logprob: -12.450945854187012
    4. ' b' → logprob: -13.450945854187012
    5. 'b' → logprob: -13.950945854187012
    6. ' ' → logprob: -14.825945854187012
    7. ' ' → logprob: -16.325946807861328
    8. '>a' → logprob: -17.325946807861328
    9. '<|end|>' → logprob: -17.825946807861328
    10. ''a' → logprob: -18.200946807861328

Token 64: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3589513301849365
    2. ' +' → logprob: -1.3589513301849365
    3. '+b' → logprob: -3.1089513301849365
    4. ' ' → logprob: -12.108951568603516
    5. ' plus' → logprob: -12.608951568603516
    6. 'b' → logprob: -12.858951568603516
    7. '<|end|>' → logprob: -14.233951568603516
    8. '+B' → logprob: -14.483951568603516
    9. ' +
' → logprob: -15.108951568603516
    10. '+
' → logprob: -15.483951568603516

Token 65: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004078401252627373
    2. ' b' → logprob: -5.504078388214111
    3. ' ' → logprob: -17.879077911376953
    4. '	b' → logprob: -18.004077911376953
    5. '<|end|>' → logprob: -18.254077911376953
    6. '1' → logprob: -19.254077911376953
    7. '_b' → logprob: -20.379077911376953
    8. ')b' → logprob: -21.129077911376953
    9. '   ' → logprob: -21.879077911376953
    10. '>b' → logprob: -21.879077911376953

Token 66: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5177744626998901
    2. '   ' → logprob: -1.0177744626998901
    3. '  
' → logprob: -4.01777458190918
    4. '    
' → logprob: -4.76777458190918
    5. ' 
' → logprob: -5.14277458190918
    6. '   
' → logprob: -5.26777458190918
    7. '\n' → logprob: -6.51777458190918
    8. ' ' → logprob: -6.64277458190918
    9. '  ' → logprob: -6.64277458190918
    10. '    ' → logprob: -8.51777458190918

Token 68: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38752517104148865
    2. 'if' → logprob: -1.887525200843811
    3. ' if' → logprob: -2.3875250816345215
    4. ' ' → logprob: -3.0125250816345215
    5. '    ' → logprob: -5.0125250816345215
    6. '  ' → logprob: -5.1375250816345215
    7. ' return' → logprob: -5.5125250816345215
    8. '\n' → logprob: -5.7625250816345215
    9. ')' → logprob: -6.7625250816345215
    10. '  
' → logprob: -6.8875250816345215

Token 69: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.575993001461029
    2. 'b' → logprob: -0.825993001461029
    3. ' n' → logprob: -10.700992584228516
    4. 'n' → logprob: -10.825992584228516
    5. ' True' → logprob: -12.325992584228516
    6. 'True' → logprob: -12.825992584228516
    7. ' ' → logprob: -13.325992584228516
    8. '(b' → logprob: -14.075992584228516
    9. ' ' → logprob: -14.200992584228516
    10. '(' → logprob: -14.950992584228516

Token 70: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01279604434967041
    2. ' ==' → logprob: -4.387795925140381
    3. '=' → logprob: -8.262796401977539
    4. ')==' → logprob: -12.137796401977539
    5. '===' → logprob: -12.137796401977539
    6. '<=' → logprob: -12.387796401977539
    7. ']==' → logprob: -12.637796401977539
    8. '<|end|>' → logprob: -12.762796401977539
    9. ' ' → logprob: -13.512796401977539
    10. '()==' → logprob: -13.637796401977539

Token 71: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023245595395565033
    2. ' n' → logprob: -3.7732455730438232
    3. '	n' → logprob: -16.898244857788086
    4. '_n' → logprob: -18.898244857788086
    5. ' ' → logprob: -19.148244857788086
    6. ' ' → logprob: -19.523244857788086
    7. '<|end|>' → logprob: -20.773244857788086
    8. ')n' → logprob: -20.898244857788086
    9. '$n' → logprob: -21.273244857788086
    10. '<n' → logprob: -21.523244857788086

Token 72: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7502175569534302
    2. '
' → logprob: -1.5002175569534302
    3. '  
' → logprob: -3.1252174377441406
    4. ' 
' → logprob: -3.2502174377441406
    5. 'n' → logprob: -3.6252174377441406
    6. '\n' → logprob: -3.7502174377441406
    7. 'for' → logprob: -3.8752174377441406
    8. '#' → logprob: -3.8752174377441406
    9. '<|end|>' → logprob: -4.125217437744141
    10. ' if' → logprob: -4.250217437744141

Token 74: ' On' (ID: 2160)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6397292017936707
    2. 'for' → logprob: -1.6397292613983154
    3. 'dp' → logprob: -2.7647292613983154
    4. 'res' → logprob: -3.0147292613983154
    5. 'def' → logprob: -3.2647292613983154
    6. 'if' → logprob: -3.2647292613983154
    7. 'fib' → logprob: -3.5147292613983154
    8. 'count' → logprob: -3.5147292613983154
    9. 'f' → logprob: -5.139729022979736
    10. 'results' → logprob: -6.014729022979736

Token 75: ' veut' (ID: 41653)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.745797336101532
    2. ' =' → logprob: -1.7457973957061768
    3. 'def' → logprob: -2.2457973957061768
    4. ' for' → logprob: -2.2457973957061768
    5. ' def' → logprob: -3.4957973957061768
    6. '=' → logprob: -3.9957973957061768
    7. 'n' → logprob: -4.245797157287598
    8. 'r' → logprob: -4.620797157287598
    9. 'f' → logprob: -4.620797157287598
    10. 's' → logprob: -5.120797157287598

Token 76: ' trouver' (ID: 23195)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.4353077709674835
    2. 'comp' → logprob: -2.435307741165161
    3. 'tr' → logprob: -2.685307741165161
    4. ' compter' → logprob: -2.810307741165161
    5. ' calcul' → logprob: -2.935307741165161
    6. 's' → logprob: -4.18530797958374
    7. 'com' → logprob: -4.31030797958374
    8. 'g' → logprob: -4.68530797958374
    9. ' trouver' → logprob: -4.81030797958374
    10. 'cal' → logprob: -5.06030797958374

Token 77: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.44530656933784485
    2. ' le' → logprob: -2.0703065395355225
    3. ' la' → logprob: -2.6953065395355225
    4. 'la' → logprob: -2.8203065395355225
    5. 'the' → logprob: -2.9453065395355225
    6. 'les' → logprob: -4.070306777954102
    7. 'all' → logprob: -5.070306777954102
    8. ' the' → logprob: -5.195306777954102
    9. ' combien' → logprob: -5.695306777954102
    10. 'un' → logprob: -5.945306777954102

Token 78: ' K' (ID: 658)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.15357975661754608
    2. ' plus' → logprob: -2.9035797119140625
    3. 'nombre' → logprob: -3.6535797119140625
    4. 's' → logprob: -3.7785797119140625
    5. ' n' → logprob: -4.6535797119140625
    6. 'e' → logprob: -4.6535797119140625
    7. ' ' → logprob: -5.6535797119140625
    8. 'plus' → logprob: -5.7785797119140625
    9. 'n' → logprob: -6.1535797119140625
    10. ' nombres' → logprob: -6.4035797119140625

Token 79: '-i' (ID: 18499)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2780053913593292
    2. '-i' → logprob: -1.6530053615570068
    3. 'e' → logprob: -4.278005599975586
    4. 'ième' → logprob: -4.403005599975586
    5. 'i' → logprob: -4.778005599975586
    6. '\xe1' → logprob: -5.153005599975586
    7. 'ème' → logprob: -5.778005599975586
    8. 'è' → logprob: -6.403005599975586
    9. ' -' → logprob: -6.528005599975586
    10. 'é' → logprob: -7.403005599975586

Token 80: 'ème' (ID: 9767)
  Prédit: 'ème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ème' → logprob: -0.6893869638442993
    2. 'è' → logprob: -0.8143869638442993
    3. 'e' → logprob: -3.4393868446350098
    4. '`' → logprob: -4.81438684463501
    5. 'eme' → logprob: -5.06438684463501
    6. 'èm' → logprob: -5.68938684463501
    7. '\xe1' → logprob: -7.18938684463501
    8. 'é' → logprob: -7.31438684463501
    9. '\' → logprob: -7.56438684463501
    10. ' è' → logprob: -7.56438684463501

Token 81: ' plus' (ID: 2932)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11946596205234528
    2. ' nombre' → logprob: -2.3694660663604736
    3. 'nombre' → logprob: -4.3694658279418945
    4. 'élé' → logprob: -6.8694658279418945
    5. ' terme' → logprob: -6.9944658279418945
    6. ' Fibonacci' → logprob: -7.4944658279418945
    7. 's' → logprob: -7.9944658279418945
    8. ' fibonacci' → logprob: -8.244465827941895
    9. '_' → logprob: -8.619465827941895
    10. ' élément' → logprob: -8.619465827941895

Token 82: ' petit' (ID: 20577)
  Prédit: ' grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grand' → logprob: -0.22684495151042938
    2. 'grand' → logprob: -1.6018449068069458
    3. ' petit' → logprob: -6.851844787597656
    4. 'pet' → logprob: -8.476844787597656
    5. 'gr' → logprob: -9.476844787597656
    6. '```' → logprob: -10.226844787597656
    7. ' grands' → logprob: -11.601844787597656
    8. ' Grand' → logprob: -11.976844787597656
    9. 'Grand' → logprob: -12.101844787597656
    10. ' ' → logprob: -12.226844787597656

Token 83: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.19812972843647003
    2. 'nombre' → logprob: -2.448129653930664
    3. ' ' → logprob: -3.073129653930664
    4. 'f' → logprob: -4.823129653930664
    5. 'élé' → logprob: -4.948129653930664
    6. ' élément' → logprob: -5.448129653930664
    7. ' entier' → logprob: -5.448129653930664
    8. ' Fibonacci' → logprob: -5.448129653930664
    9. 'fib' → logprob: -5.823129653930664
    10. ' fibonacci' → logprob: -5.823129653930664

Token 84: ' qui' (ID: 2780)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.5849676132202148
    2. ' qui' → logprob: -1.5849676132202148
    3. ' ' → logprob: -1.7099676132202148
    4. 'fib' → logprob: -1.9599676132202148
    5. ' fib' → logprob: -2.584967613220215
    6. ' f' → logprob: -3.459967613220215
    7. ' fibonacci' → logprob: -3.709967613220215
    8. 'qui' → logprob: -3.834967613220215
    9. ' de' → logprob: -3.834967613220215
    10. 'F' → logprob: -4.209967613220215

Token 85: ' peut' (ID: 9216)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.22818680107593536
    2. 'n' → logprob: -2.353186845779419
    3. 'est' → logprob: -2.603186845779419
    4. 's' → logprob: -4.35318660736084
    5. ' est' → logprob: -4.35318660736084
    6. '<|end|>' → logprob: -5.22818660736084
    7. ' is' → logprob: -6.60318660736084
    8. '```' → logprob: -6.97818660736084
    9. 'n't' → logprob: -7.60318660736084
    10. ' ' → logprob: -8.35318660736084

Token 86: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.6064547300338745
    2. 'être' → logprob: -1.4814547300338745
    3. ' s' → logprob: -1.7314547300338745
    4. 's' → logprob: -3.481454849243164
    5. ' se' → logprob: -5.481454849243164
    6. '<|end|>' → logprob: -5.731454849243164
    7. '-être' → logprob: -6.731454849243164
    8. ' etre' → logprob: -6.981454849243164
    9. ''être' → logprob: -6.981454849243164
    10. '’être' → logprob: -6.981454849243164

Token 87: ' un' (ID: 537)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.2766363620758057
    2. ' exprim' → logprob: -1.4016363620758057
    3. '<|end|>' → logprob: -1.7766363620758057
    4. 'ex' → logprob: -2.0266363620758057
    5. ' écrit' → logprob: -3.2766363620758057
    6. 'form' → logprob: -4.026636123657227
    7. 'd' → logprob: -4.151636123657227
    8. ' obtenu' → logprob: -4.401636123657227
    9. 'expr' → logprob: -4.651636123657227
    10. ' représent' → logprob: -4.776636123657227

Token 88: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.7140331268310547
    2. ' nombre' → logprob: -1.5890331268310547
    3. 'fib' → logprob: -1.7140331268310547
    4. 'f' → logprob: -2.9640331268310547
    5. 's' → logprob: -3.9640331268310547
    6. ' Fibonacci' → logprob: -4.714033126831055
    7. 'F' → logprob: -4.714033126831055
    8. '```' → logprob: -4.839033126831055
    9. ' fibonacci' → logprob: -5.464033126831055
    10. ' fib' → logprob: -5.589033126831055

Token 89: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.05033189058303833
    2. 'de' → logprob: -4.050332069396973
    3. 'f' → logprob: -5.300332069396973
    4. ' d' → logprob: -5.300332069396973
    5. 'F' → logprob: -5.675332069396973
    6. '<|end|>' → logprob: -5.675332069396973
    7. ' ' → logprob: -5.925332069396973
    8. ' f' → logprob: -6.050332069396973
    9. ' fib' → logprob: -6.300332069396973
    10. ' fibonacci' → logprob: -6.425332069396973

Token 90: ' chemins' (ID: 192063)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.28668534755706787
    2. ' Fibonacci' → logprob: -1.5366853475570679
    3. 'f' → logprob: -4.286685466766357
    4. 'fib' → logprob: -5.036685466766357
    5. ' fibonacci' → logprob: -5.286685466766357
    6. ' ' → logprob: -6.036685466766357
    7. 'Fib' → logprob: -6.161685466766357
    8. ' F' → logprob: -6.536685466766357
    9. 's' → logprob: -6.911685466766357
    10. ' fib' → logprob: -7.911685466766357

Token 91: ' d' (ID: 272)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9188817739486694
    2. ' ' → logprob: -2.043881893157959
    3. ' ,' → logprob: -2.418881893157959
    4. ' de' → logprob: -2.918881893157959
    5. '<|end|>' → logprob: -3.418881893157959
    6. ' .' → logprob: -3.543881893157959
    7. ' d' → logprob: -3.543881893157959
    8. ' =' → logprob: -3.543881893157959
    9. ',' → logprob: -3.668881893157959
    10. ')' → logprob: -3.668881893157959

Token 92: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6776474714279175
    2. ''' → logprob: -1.0526474714279175
    3. 'a' → logprob: -3.427647590637207
    4. ''ac' → logprob: -4.302647590637207
    5. ''un' → logprob: -4.427647590637207
    6. 'u' → logprob: -4.552647590637207
    7. ''ex' → logprob: -4.552647590637207
    8. ''é' → logprob: -4.927647590637207
    9. ''acc' → logprob: -4.927647590637207
    10. ''accès' → logprob: -4.927647590637207

Token 93: 'ika' (ID: 3113)
  Prédit: 'esc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'esc' → logprob: -0.9892122745513916
    2. 'a' → logprob: -1.3642122745513916
    3. 'es' → logprob: -2.7392122745513916
    4. 'ac' → logprob: -2.8642122745513916
    5. 'ar' → logprob: -2.9892122745513916
    6. 'é' → logprob: -3.6142122745513916
    7. 'une' → logprob: -4.3642120361328125
    8. 'e' → logprob: -4.4892120361328125
    9. 'x' → logprob: -4.6142120361328125
    10. 'uler' → logprob: -4.7392120361328125

Token 94: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1597092151641846
    2. 's' → logprob: -1.7847092151641846
    3. 'u' → logprob: -1.9097092151641846
    4. 'r' → logprob: -2.5347092151641846
    5. 'm' → logprob: -2.9097092151641846
    6. 'l' → logprob: -3.1597092151641846
    7. 'f' → logprob: -3.4097092151641846
    8. 'd' → logprob: -3.9097092151641846
    9. 't' → logprob: -4.0347089767456055
    10. 'p' → logprob: -4.0347089767456055

Token 95: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0698479488492012
    2. ' =' → logprob: -3.81984806060791
    3. '<|end|>' → logprob: -4.81984806060791
    4. '_' → logprob: -5.31984806060791
    5. '  ' → logprob: -5.31984806060791
    6. ')' → logprob: -5.31984806060791
    7. '=' → logprob: -5.81984806060791
    8. 'def' → logprob: -5.81984806060791
    9. ' ' → logprob: -6.56984806060791
    10. ' ,' → logprob: -6.56984806060791

Token 96: ' En' (ID: 2130)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9050332903862
    2. '<|end|>' → logprob: -2.0300333499908447
    3. ' =' → logprob: -2.5300333499908447
    4. ')' → logprob: -2.6550333499908447
    5. 'def' → logprob: -2.9050333499908447
    6. ' ' → logprob: -3.7800333499908447
    7. ':' → logprob: -4.030033111572266
    8. 's' → logprob: -4.155033111572266
    9. '=' → logprob: -4.280033111572266
    10. '_' → logprob: -4.405033111572266

Token 97: ' analys' (ID: 27616)
  Prédit: ' utilisant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisant' → logprob: -1.7331700325012207
    2. ' combin' → logprob: -2.3581700325012207
    3. ' continu' → logprob: -2.8581700325012207
    4. 's' → logprob: -2.8581700325012207
    5. ' considér' → logprob: -2.9831700325012207
    6. 'util' → logprob: -2.9831700325012207
    7. 'fait' → logprob: -3.1081700325012207
    8. 'continu' → logprob: -3.3581700325012207
    9. 'com' → logprob: -3.6081700325012207
    10. 'part' → logprob: -3.6081700325012207

Token 98: 'ant' (ID: 493)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.39040452241897583
    2. 't' → logprob: -2.640404462814331
    3. 'sis' → logprob: -2.765404462814331
    4. 'ant' → logprob: -3.015404462814331
    5. 's' → logprob: -3.515404462814331
    6. 'y' → logprob: -3.640404462814331
    7. 'yse' → logprob: -3.640404462814331
    8. 'se' → logprob: -5.26540470123291
    9. 'ysis' → logprob: -5.26540470123291
    10. 'sy' → logprob: -5.51540470123291

Token 99: ' le' (ID: 505)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.2471182346343994
    2. ' la' → logprob: -1.3721182346343994
    3. ' les' → logprob: -1.6221182346343994
    4. 'le' → logprob: -1.9971182346343994
    5. ' le' → logprob: -2.7471182346343994
    6. 'la' → logprob: -2.9971182346343994
    7. 'l' → logprob: -5.12211799621582
    8. ' l' → logprob: -6.12211799621582
    9. 'the' → logprob: -6.74711799621582
    10. '#' → logprob: -7.62211799621582

Token 100: ' problème' (ID: 35630)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.7938087582588196
    2. 'pro' → logprob: -1.1688086986541748
    3. ' problème' → logprob: -2.168808698654175
    4. ' code' → logprob: -3.293808698654175
    5. 'proble' → logprob: -3.668808698654175
    6. 's' → logprob: -4.543808937072754
    7. 'problem' → logprob: -4.793808937072754
    8. 'texte' → logprob: -5.418808937072754
    9. 'nombre' → logprob: -5.918808937072754
    10. 'graph' → logprob: -6.168808937072754

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13748741149902344
    2. ' ' → logprob: -2.7624874114990234
    3. ':' → logprob: -3.5124874114990234
    4. ' ,' → logprob: -4.012487411499023
    5. ')' → logprob: -5.887487411499023
    6. '#' → logprob: -6.137487411499023
    7. 'n' → logprob: -6.137487411499023
    8. '<|end|>' → logprob: -6.262487411499023
    9. ' :' → logprob: -6.637487411499023
    10. '.' → logprob: -7.012487411499023

Token 102: ' les' (ID: 1341)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.300009161233902
    2. '#' → logprob: -2.300009250640869
    3. 'on' → logprob: -2.425009250640869
    4. ' je' → logprob: -4.300009250640869
    5. ' we' → logprob: -5.050009250640869
    6. 'n' → logprob: -5.550009250640869
    7. ' #' → logprob: -5.675009250640869
    8. 'le' → logprob: -5.675009250640869
    9. ' la' → logprob: -5.800009250640869
    10. 'it' → logprob: -5.925009250640869

Token 103: ' nombres' (ID: 76205)
  Prédit: ' nombres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.4894108176231384
    2. 'n' → logprob: -1.6144108772277832
    3. 'nombre' → logprob: -1.9894108772277832
    4. ' chemins' → logprob: -3.989410877227783
    5. 'che' → logprob: -4.489410877227783
    6. ' nombre' → logprob: -4.739410877227783
    7. ' n' → logprob: -6.489410877227783
    8. 'f' → logprob: -6.489410877227783
    9. ' K' → logprob: -6.614410877227783
    10. 'K' → logprob: -6.614410877227783

Token 104: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5023157000541687
    2. 'de' → logprob: -1.1273157596588135
    3. 'f' → logprob: -3.2523157596588135
    4. ' suivants' → logprob: -4.877315521240234
    5. ' qui' → logprob: -4.877315521240234
    6. 'fib' → logprob: -5.002315521240234
    7. ' ' → logprob: -6.627315521240234
    8. 'd' → logprob: -6.877315521240234
    9. '<|end|>' → logprob: -6.877315521240234
    10. 'F' → logprob: -6.877315521240234

Token 105: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.01334280427545309
    2. 'a' → logprob: -5.38834285736084
    3. 'u' → logprob: -5.88834285736084
    4. 'es' → logprob: -6.51334285736084
    5. '_paths' → logprob: -7.26334285736084
    6. 'е' → logprob: -7.76334285736084
    7. ''' → logprob: -7.88834285736084
    8. 'ijkstra' → logprob: -8.01334285736084
    9. '<|end|>' → logprob: -8.13834285736084
    10. ' chemins' → logprob: -8.51334285736084

Token 106: 'ika' (ID: 3113)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.2439343929290771
    2. 'a' → logprob: -1.8689343929290771
    3. 'ijkstra' → logprob: -2.368934392929077
    4. 'Che' → logprob: -2.493934392929077
    5. 'paths' → logprob: -2.868934392929077
    6. '_paths' → logprob: -3.243934392929077
    7. '_che' → logprob: -3.243934392929077
    8. 'éta' → logprob: -3.743934392929077
    9. 'es' → logprob: -4.368934631347656
    10. '<|end|>' → logprob: -4.368934631347656

Token 107: ' sont' (ID: 5242)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0177406072616577
    2. ' qui' → logprob: -1.2677406072616577
    3. 's' → logprob: -2.5177407264709473
    4. 'de' → logprob: -2.6427407264709473
    5. 'f' → logprob: -3.1427407264709473
    6. ' sont' → logprob: -3.3927407264709473
    7. ' suivants' → logprob: -4.142740726470947
    8. ' semblent' → logprob: -4.267740726470947
    9. ' fibonacci' → logprob: -4.392740726470947
    10. 'fib' → logprob: -4.392740726470947

Token 108: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.1681395769119263
    2. 'les' → logprob: -1.2931395769119263
    3. 'des' → logprob: -2.0431394577026367
    4. ' soit' → logprob: -2.6681394577026367
    5. '[' → logprob: -3.2931394577026367
    6. '[]' → logprob: -3.4181394577026367
    7. ' les' → logprob: -3.4181394577026367
    8. '1' → logprob: -3.7931394577026367
    9. 's' → logprob: -4.418139457702637
    10. '0' → logprob: -4.668139457702637

Token 109: ' nombres' (ID: 76205)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7857248783111572
    2. ' nombres' → logprob: -0.7857248783111572
    3. 's' → logprob: -4.160724639892578
    4. 'f' → logprob: -4.160724639892578
    5. ' puiss' → logprob: -4.160724639892578
    6. 'nombre' → logprob: -4.535724639892578
    7. 'F' → logprob: -4.535724639892578
    8. 'fib' → logprob: -5.410724639892578
    9. ' des' → logprob: -5.910724639892578
    10. ' Fibonacci' → logprob: -5.910724639892578

Token 110: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.40306469798088074
    2. 'de' → logprob: -1.1530647277832031
    3. 'f' → logprob: -4.528064727783203
    4. 'fib' → logprob: -6.528064727783203
    5. ' qui' → logprob: -6.903064727783203
    6. 'F' → logprob: -7.153064727783203
    7. 'def' → logprob: -7.278064727783203
    8. 'qui' → logprob: -8.153064727783203
    9. 'd' → logprob: -8.653064727783203
    10. ' fibonacci' → logprob: -8.903064727783203

Token 111: ' Fibonacci' (ID: 139341)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.09572644531726837
    2. ' Fibonacci' → logprob: -2.470726490020752
    3. 'Fib' → logprob: -5.595726490020752
    4. ' F' → logprob: -7.220726490020752
    5. 'Che' → logprob: -7.720726490020752
    6. ' chemins' → logprob: -7.970726490020752
    7. ' fibonacci' → logprob: -8.095726013183594
    8. 'fib' → logprob: -8.595726013183594
    9. 'f' → logprob: -9.095726013183594
    10. ' Fib' → logprob: -9.345726013183594

Token 112: ' sauf' (ID: 87919)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1412626504898071
    2. '
' → logprob: -2.0162625312805176
    3. '*' → logprob: -2.5162625312805176
    4. ' ' → logprob: -2.5162625312805176
    5. '<|end|>' → logprob: -2.7662625312805176
    6. '#' → logprob: -2.8912625312805176
    7. ')' → logprob: -3.2662625312805176
    8. ',' → logprob: -3.6412625312805176
    9. 'n' → logprob: -3.6412625312805176
    10. ':' → logprob: -3.6412625312805176

Token 113: ' ' (ID: 220)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.3729580640792847
    2. ' le' → logprob: -1.3729580640792847
    3. ' pour' → logprob: -1.9979580640792847
    4. ' les' → logprob: -2.622958183288574
    5. 'pour' → logprob: -2.747958183288574
    6. ' ceux' → logprob: -3.122958183288574
    7. ' peut' → logprob: -3.372958183288574
    8. 'les' → logprob: -3.497958183288574
    9. ' ' → logprob: -3.622958183288574
    10. ' celui' → logprob: -3.997958183288574

Token 114: '1' (ID: 16)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.1030192375183105
    2. '0' → logprob: -1.2280192375183105
    3. 'pour' → logprob: -1.4780192375183105
    4. '1' → logprob: -2.8530192375183105
    5. 'pe' → logprob: -3.4780192375183105
    6. 'que' → logprob: -3.6030192375183105
    7. 'les' → logprob: -4.1030192375183105
    8. 'cel' → logprob: -5.7280192375183105
    9. 'qu' → logprob: -6.6030192375183105
    10. ' pour' → logprob: -6.7280192375183105

Token 115: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48043474555015564
    2. 's' → logprob: -1.480434775352478
    3. ',' → logprob: -2.3554346561431885
    4. ' ,' → logprob: -4.230434894561768
    5. '<|end|>' → logprob: -4.480434894561768
    6. '
' → logprob: -4.855434894561768
    7. '0' → logprob: -5.230434894561768
    8. ' s' → logprob: -5.855434894561768
    9. ' or' → logprob: -5.980434894561768
    10. '1' → logprob: -6.105434894561768

Token 116: 'car' (ID: 6830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27485737204551697
    2. ' )' → logprob: -2.02485728263855
    3. ' et' → logprob: -2.89985728263855
    4. ',' → logprob: -4.024857521057129
    5. ').' → logprob: -4.024857521057129
    6. ' and' → logprob: -6.149857521057129
    7. 'et' → logprob: -6.399857521057129
    8. ' ' → logprob: -6.524857521057129
    9. ' ).' → logprob: -6.524857521057129
    10. ' ,' → logprob: -6.649857521057129

Token 117: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4313861131668091
    2. ' ' → logprob: -1.681386113166809
    3. '0' → logprob: -3.0563859939575195
    4. ' ils' → logprob: -3.0563859939575195
    5. ' le' → logprob: -4.1813859939575195
    6. ' il' → logprob: -4.1813859939575195
    7. 'le' → logprob: -4.3063859939575195
    8. ' on' → logprob: -5.0563859939575195
    9. ' la' → logprob: -5.6813859939575195
    10. 'il' → logprob: -6.0563859939575195

Token 118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15494504570960999
    2. '0' → logprob: -2.904945135116577
    3. ' ' → logprob: -3.154945135116577
    4. 'le' → logprob: -4.279944896697998
    5. 'il' → logprob: -5.279944896697998
    6. 'K' → logprob: -5.654944896697998
    7. 'c' → logprob: -5.904944896697998
    8. ' ils' → logprob: -5.904944896697998
    9. 'ils' → logprob: -5.904944896697998
    10. ' le' → logprob: -6.154944896697998

Token 119: ' apparaît' (ID: 147656)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.0552397966384888
    2. 'n' → logprob: -1.6802397966384888
    3. ' est' → logprob: -1.6802397966384888
    4. ')' → logprob: -2.055239677429199
    5. ' ne' → logprob: -3.055239677429199
    6. ' is' → logprob: -3.555239677429199
    7. 'est' → logprob: -4.430239677429199
    8. ')n' → logprob: -4.430239677429199
    9. ' et' → logprob: -4.555239677429199
    10. 'ne' → logprob: -4.805239677429199

Token 120: ' deux' (ID: 10301)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.7967265844345093
    2. ' pas' → logprob: -0.9217265844345093
    3. ' deux' → logprob: -3.171726703643799
    4. 'not' → logprob: -3.421726703643799
    5. ' not' → logprob: -3.921726703643799
    6. '<|end|>' → logprob: -4.671726703643799
    7. 'à' → logprob: -5.046726703643799
    8. 'de' → logprob: -5.171726703643799
    9. 'dans' → logprob: -5.296726703643799
    10. ' seulement' → logprob: -6.046726703643799

Token 121: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.4303993880748749
    2. 'fois' → logprob: -1.0553994178771973
    3. ',' → logprob: -7.305399417877197
    4. '<|end|>' → logprob: -7.430399417877197
    5. ' ' → logprob: -9.180398941040039
    6. 'times' → logprob: -9.180398941040039
    7. ' times' → logprob: -9.680398941040039
    8. ' veces' → logprob: -10.055398941040039
    9. 'fo' → logprob: -10.555398941040039
    10. 'f' → logprob: -11.055398941040039

Token 122: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1477363407611847
    2. ',' → logprob: -3.0227363109588623
    3. ' dans' → logprob: -3.0227363109588623
    4. '<|end|>' → logprob: -3.8977363109588623
    5. 'dans' → logprob: -5.147736549377441
    6. ' )' → logprob: -5.272736549377441
    7. ').' → logprob: -6.022736549377441
    8. ' et' → logprob: -6.022736549377441
    9. ' ou' → logprob: -7.647736549377441
    10. ' and' → logprob: -7.897736549377441

Token 123: '#' (ID: 2)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8278806805610657
    2. '
' → logprob: -1.827880620956421
    3. '<|end|>' → logprob: -2.077880620956421
    4. ':' → logprob: -3.077880620956421
    5. '0' → logprob: -3.327880620956421
    6. ')' → logprob: -3.452880620956421
    7. ' or' → logprob: -3.702880620956421
    8. ' ' → logprob: -3.827880620956421
    9. '```' → logprob: -3.827880620956421
    10. '#' → logprob: -4.077880859375

Token 124: ' Mais' (ID: 13880)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2901148796081543
    2. ' ' → logprob: -2.0401148796081543
    3. '0' → logprob: -2.4151148796081543
    4. ',' → logprob: -2.5401148796081543
    5. 'n' → logprob: -2.9151148796081543
    6. '<|end|>' → logprob: -2.9151148796081543
    7. 'if' → logprob: -3.1651148796081543
    8. 'result' → logprob: -3.2901148796081543
    9. 'def' → logprob: -3.2901148796081543
    10. ')' → logprob: -3.2901148796081543

Token 125: ' avec' (ID: 3937)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.8803526759147644
    2. ' il' → logprob: -2.005352735519409
    3. ' on' → logprob: -2.505352735519409
    4. ' ' → logprob: -2.630352735519409
    5. 'le' → logprob: -2.755352735519409
    6. ' K' → logprob: -3.130352735519409
    7. ' pas' → logprob: -3.630352735519409
    8. 'on' → logprob: -3.755352735519409
    9. ' comme' → logprob: -4.00535249710083
    10. '1' → logprob: -4.13035249710083

Token 126: ' une' (ID: 2463)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.3790696859359741
    2. ' K' → logprob: -2.0040698051452637
    3. 'la' → logprob: -2.1290698051452637
    4. 'l' → logprob: -2.3790698051452637
    5. 'une' → logprob: -2.3790698051452637
    6. ' la' → logprob: -2.8790698051452637
    7. ' une' → logprob: -3.0040698051452637
    8. 'le' → logprob: -3.2540698051452637
    9. 'les' → logprob: -3.3790698051452637
    10. '1' → logprob: -3.5040698051452637

Token 127: ' approche' (ID: 102373)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.017947401851415634
    2. 'mod' → logprob: -5.642947196960449
    3. 'condition' → logprob: -5.642947196960449
    4. ' petite' → logprob: -6.017947196960449
    5. 'cor' → logprob: -6.892947196960449
    6. 'small' → logprob: -7.392947196960449
    7. 'lé' → logprob: -7.392947196960449
    8. 'l' → logprob: -7.642947196960449
    9. ' légère' → logprob: -7.642947196960449
    10. 'lim' → logprob: -7.892947196960449

Token 128: ' simple' (ID: 4705)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.3136354088783264
    2. 'plus' → logprob: -1.9386353492736816
    3. ' différente' → logprob: -3.6886353492736816
    4. ' de' → logprob: -3.8136353492736816
    5. ' naï' → logprob: -4.188635349273682
    6. ' brute' → logprob: -4.563635349273682
    7. 'br' → logprob: -4.938635349273682
    8. ' d' → logprob: -5.063635349273682
    9. 'de' → logprob: -5.313635349273682
    10. ' directe' → logprob: -5.438635349273682

Token 129: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08488655835390091
    2. ':' → logprob: -2.9598865509033203
    3. 'n' → logprob: -4.70988655090332
    4. '
' → logprob: -5.45988655090332
    5. ',
' → logprob: -5.70988655090332
    6. '<|end|>' → logprob: -5.83488655090332
    7. ':
' → logprob: -6.33488655090332
    8. '#' → logprob: -6.70988655090332
    9. '.' → logprob: -6.83488655090332
    10. 'for' → logprob: -6.95988655090332

Token 130: ' directe' (ID: 80071)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -2.394376754760742
    2. ' une' → logprob: -2.394376754760742
    3. ' K' → logprob: -2.769376754760742
    4. 'br' → logprob: -2.894376754760742
    5. 'une' → logprob: -2.894376754760742
    6. 'optim' → logprob: -3.019376754760742
    7. ' efficace' → logprob: -3.019376754760742
    8. 'mod' → logprob: -3.269376754760742
    9. 'un' → logprob: -3.269376754760742
    10. 'l' → logprob: -3.644376754760742

Token 131: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28726324439048767
    2. ',' → logprob: -1.41226327419281
    3. 'for' → logprob: -5.9122633934021
    4. 'n' → logprob: -7.0372633934021
    5. ':
' → logprob: -7.1622633934021
    6. 'def' → logprob: -7.1622633934021
    7. '#' → logprob: -8.412262916564941
    8. '.' → logprob: -8.537262916564941
    9. ')' → logprob: -9.287262916564941
    10. ',
' → logprob: -9.787262916564941

Token 132: ' on' (ID: 402)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.1335148811340332
    2. 'result' → logprob: -1.2585148811340332
    3. ' res' → logprob: -1.7585148811340332
    4. 'res' → logprob: -2.633514881134033
    5. ' for' → logprob: -3.008514881134033
    6. 'for' → logprob: -3.508514881134033
    7. 'count' → logprob: -4.133514881134033
    8. ' pass' → logprob: -4.383514881134033
    9. ' count' → logprob: -4.883514881134033
    10. 'fib' → logprob: -4.883514881134033

Token 133: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.40630456805229187
    2. 'pe' → logprob: -1.7813045978546143
    3. 'for' → logprob: -3.9063045978546143
    4. ' va' → logprob: -4.156304359436035
    5. ' devra' → logprob: -4.156304359436035
    6. ' pourrait' → logprob: -4.281304359436035
    7. ' peux' → logprob: -4.281304359436035
    8. ' n' → logprob: -4.406304359436035
    9. 'n' → logprob: -4.406304359436035
    10. 'pour' → logprob: -4.781304359436035

Token 134: ' simplement' (ID: 45065)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.3314415216445923
    2. 'contin' → logprob: -1.4564415216445923
    3. 'just' → logprob: -1.9564415216445923
    4. 'util' → logprob: -2.5814414024353027
    5. 'sim' → logprob: -2.5814414024353027
    6. 'faire' → logprob: -2.5814414024353027
    7. 'calcul' → logprob: -3.8314414024353027
    8. ' continuer' → logprob: -3.9564414024353027
    9. ' génér' → logprob: -4.706441402435303
    10. 'impl' → logprob: -4.706441402435303

Token 135: ' génér' (ID: 18939)
  Prédit: ' génér'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' génér' → logprob: -0.9502995610237122
    2. 'g' → logprob: -1.9502995014190674
    3. ' compter' → logprob: -1.9502995014190674
    4. ' continuer' → logprob: -2.5752995014190674
    5. 'contin' → logprob: -3.0752995014190674
    6. ' calcul' → logprob: -3.2002995014190674
    7. 'generate' → logprob: -3.3252995014190674
    8. 'enumer' → logprob: -3.4502995014190674
    9. ' utiliser' → logprob: -4.0752997398376465
    10. 'calcul' → logprob: -4.5752997398376465

Token 136: 'er' (ID: 259)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.18091639876365662
    2. 'er' → logprob: -1.805916428565979
    3. 'érer' → logprob: -7.3059163093566895
    4. 'e' → logprob: -8.180916786193848
    5. 'ateur' → logprob: -9.055916786193848
    6. 'al' → logprob: -10.680916786193848
    7. 'erer' → logprob: -11.180916786193848
    8. 'aler' → logprob: -12.055916786193848
    9. '```' → logprob: -12.055916786193848
    10. 'ater' → logprob: -12.180916786193848

Token 137: ' les' (ID: 1341)
  Prédit: 'fib'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fib' → logprob: -0.5858147144317627
    2. 'les' → logprob: -1.4608147144317627
    3. ' les' → logprob: -1.9608147144317627
    4. ' une' → logprob: -4.210814476013184
    5. ' des' → logprob: -4.210814476013184
    6. 'f' → logprob: -4.960814476013184
    7. ' fib' → logprob: -5.085814476013184
    8. 'the' → logprob: -5.085814476013184
    9. 'le' → logprob: -5.710814476013184
    10. ' fibonacci' → logprob: -5.835814476013184

Token 138: ' nombres' (ID: 76205)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2668445408344269
    2. 'fib' → logprob: -1.5168445110321045
    3. 'F' → logprob: -4.641844749450684
    4. 'n' → logprob: -5.391844749450684
    5. 'nombre' → logprob: -8.641844749450684
    6. ' nombres' → logprob: -9.141844749450684
    7. 'numbers' → logprob: -9.141844749450684
    8. 'num' → logprob: -10.266844749450684
    9. 'result' → logprob: -10.516844749450684
    10. ' fibonacci' → logprob: -10.641844749450684

Token 139: ' de' (ID: 334)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.20136283338069916
    2. 'de' → logprob: -2.4513628482818604
    3. 'fib' → logprob: -2.5763628482818604
    4. ' de' → logprob: -4.326362609863281
    5. '_f' → logprob: -5.326362609863281
    6. 'F' → logprob: -6.951362609863281
    7. 'd' → logprob: -7.201362609863281
    8. '<|end|>' → logprob: -9.826362609863281
    9. ' fib' → logprob: -9.951362609863281
    10. ' fibonacci' → logprob: -10.076362609863281

Token 140: ' Fibonacci' (ID: 139341)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.03168707713484764
    2. 'f' → logprob: -3.656687021255493
    3. 'fib' → logprob: -5.531687259674072
    4. 'Fib' → logprob: -6.781687259674072
    5. ' Fibonacci' → logprob: -8.531686782836914
    6. ' fibonacci' → logprob: -9.531686782836914
    7. '_f' → logprob: -13.281686782836914
    8. '```' → logprob: -13.531686782836914
    9. ' fib' → logprob: -13.906686782836914
    10. 'Fizz' → logprob: -14.281686782836914

Token 141: ' jusque' (ID: 188953)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2340908646583557
    2. 's' → logprob: -2.359090805053711
    3. ' ,' → logprob: -3.109090805053711
    4. '.' → logprob: -3.359090805053711
    5. 'fib' → logprob: -4.109090805053711
    6. 'def' → logprob: -6.234090805053711
    7. 'f' → logprob: -6.359090805053711
    8. ' jusqu' → logprob: -6.859090805053711
    9. ' suivants' → logprob: -6.984090805053711
    10. 'n' → logprob: -6.984090805053711

Token 142: ' ce' (ID: 2357)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.05540382117033005
    2. 'à' → logprob: -3.805403709411621
    3. 'a' → logprob: -4.430403709411621
    4. ''à' → logprob: -4.430403709411621
    5. 'K' → logprob: -5.930403709411621
    6. ' à' → logprob: -6.430403709411621
    7. 'b' → logprob: -7.305403709411621
    8. '’à' → logprob: -7.555403709411621
    9. '10' → logprob: -7.680403709411621
    10. ''au' → logprob: -7.680403709411621

Token 143: ' qu' (ID: 474)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5156254768371582
    2. 'u' → logprob: -1.5156254768371582
    3. 'uil' → logprob: -2.515625476837158
    4. 'nt' → logprob: -4.265625476837158
    5. 'ur' → logprob: -4.390625476837158
    6. 't' → logprob: -4.390625476837158
    7. 'l' → logprob: -4.515625476837158
    8. 'ux' → logprob: -4.890625476837158
    9. 'n' → logprob: -5.390625476837158
    10. 's' → logprob: -5.765625476837158

Token 144: ''on' (ID: 25812)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.8341733813285828
    2. ''' → logprob: -0.9591733813285828
    3. ''il' → logprob: -3.5841734409332275
    4. ''ils' → logprob: -3.7091734409332275
    5. 'i' → logprob: -4.084173202514648
    6. ''on' → logprob: -4.209173202514648
    7. 'e' → logprob: -4.209173202514648
    8. 'a' → logprob: -4.459173202514648
    9. 'l' → logprob: -4.459173202514648
    10. ' n' → logprob: -4.959173202514648

Token 145: ' trouve' (ID: 30913)
  Prédit: ' dépasse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dépasse' → logprob: -1.1560860872268677
    2. ' ait' → logprob: -1.5310860872268677
    3. ' puisse' → logprob: -2.031085968017578
    4. 'a' → logprob: -2.781085968017578
    5. ' a' → logprob: -3.031085968017578
    6. 'n' → logprob: -3.031085968017578
    7. 'ait' → logprob: -3.406085968017578
    8. '>' → logprob: -3.531085968017578
    9. ' n' → logprob: -4.156085968017578
    10. ' trouve' → logprob: -4.406085968017578

Token 146: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.3204102516174316
    2. ' le' → logprob: -1.3204102516174316
    3. ' ' → logprob: -1.9454102516174316
    4. ' un' → logprob: -2.9454102516174316
    5. '<|end|>' → logprob: -3.0704102516174316
    6. ' des' → logprob: -3.6954102516174316
    7. 's' → logprob: -3.8204102516174316
    8. '#' → logprob: -3.9454102516174316
    9. ' les' → logprob: -3.9454102516174316
    10. 'u' → logprob: -4.070410251617432

Token 147: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00791996717453003
    2. 'k' → logprob: -5.382919788360596
    3. ' K' → logprob: -5.757919788360596
    4. ' ' → logprob: -10.757920265197754
    5. 's' → logprob: -11.132920265197754
    6. '```' → logprob: -11.507920265197754
    7. 'n' → logprob: -11.632920265197754
    8. ' k' → logprob: -11.757920265197754
    9. ' prochain' → logprob: -11.882920265197754
    10. '#' → logprob: -12.007920265197754

Token 148: '-i' (ID: 18499)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.160104513168335
    2. ' _' → logprob: -1.410104513168335
    3. '_' → logprob: -1.535104513168335
    4. ' ' → logprob: -2.535104513168335
    5. '-' → logprob: -3.035104513168335
    6. 'ième' → logprob: -4.535104751586914
    7. 'ème' → logprob: -4.535104751586914
    8. 'e' → logprob: -4.660104751586914
    9. 'th' → logprob: -4.660104751586914
    10. '_i' → logprob: -5.160104751586914

Token 149: 'ème' (ID: 9767)
  Prédit: 'ème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ème' → logprob: -0.1494908481836319
    2. 'eme' → logprob: -2.0244908332824707
    3. 'me' → logprob: -5.149490833282471
    4. 'è' → logprob: -8.149491310119629
    5. 'ième' → logprob: -8.524491310119629
    6. '-' → logprob: -9.649491310119629
    7. 'e' → logprob: -9.774491310119629
    8. 'èm' → logprob: -10.149491310119629
    9. '\' → logprob: -10.399491310119629
    10. '`' → logprob: -10.649491310119629

Token 150: '.

' (ID: 364)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.40441441535949707
    2. ' _' → logprob: -1.904414415359497
    3. '_' → logprob: -2.029414415359497
    4. '_f' → logprob: -3.529414415359497
    5. 'fib' → logprob: -5.029414176940918
    6. 'f' → logprob: -5.654414176940918
    7. ' fib' → logprob: -5.779414176940918
    8. ' ' → logprob: -6.279414176940918
    9. 'F' → logprob: -6.779414176940918
    10. ' f' → logprob: -6.904414176940918

Token 151: '#' (ID: 2)
  Prédit: 'fib'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fib' → logprob: -0.1642463505268097
    2. 'f' → logprob: -2.9142463207244873
    3. ' fib' → logprob: -3.1642463207244873
    4. 'n' → logprob: -3.2892463207244873
    5. 'a' → logprob: -4.414246559143066
    6. 'i' → logprob: -6.414246559143066
    7. 'F' → logprob: -7.164246559143066
    8. 'def' → logprob: -7.414246559143066
    9. ' fibonacci' → logprob: -7.789246559143066
    10. 'result' → logprob: -7.914246559143066

Token 152: ' Comme' (ID: 53252)
  Prédit: 'fib'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fib' → logprob: -0.2546887993812561
    2. 'f' → logprob: -1.5046887397766113
    3. 'count' → logprob: -7.004688739776611
    4. 'def' → logprob: -7.379688739776611
    5. ' fib' → logprob: -7.379688739776611
    6. 'result' → logprob: -8.50468921661377
    7. 'res' → logprob: -8.75468921661377
    8. 'i' → logprob: -9.12968921661377
    9. 'n' → logprob: -10.50468921661377
    10. 'a' → logprob: -11.00468921661377

Token 153: ' K' (ID: 658)
  Prédit: 'fib'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fib' → logprob: -0.20500735938549042
    2. ' fib' → logprob: -2.205007314682007
    3. 'f' → logprob: -3.455007314682007
    4. ' fibonacci' → logprob: -3.955007314682007
    5. 'n' → logprob: -4.955007553100586
    6. ' f' → logprob: -5.955007553100586
    7. ' les' → logprob: -6.080007553100586
    8. ' n' → logprob: -6.205007553100586
    9. 'result' → logprob: -6.330007553100586
    10. ' le' → logprob: -6.705007553100586

Token 154: ' peut' (ID: 9216)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4997657537460327
    2. ' >' → logprob: -1.2497657537460327
    3. ' >=' → logprob: -3.3747658729553223
    4. '<=' → logprob: -3.3747658729553223
    5. '>' → logprob: -4.374765872955322
    6. ' <' → logprob: -4.749765872955322
    7. ' ==' → logprob: -5.249765872955322
    8. ' est' → logprob: -5.624765872955322
    9. '>=' → logprob: -5.999765872955322
    10. ' ' → logprob: -6.624765872955322

Token 155: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.16888058185577393
    2. 'être' → logprob: -1.918880581855774
    3. ' be' → logprob: -5.543880462646484
    4. ''être' → logprob: -6.918880462646484
    5. ' etre' → logprob: -7.043880462646484
    6. ' ' → logprob: -7.293880462646484
    7. '’être' → logprob: -7.543880462646484
    8. 'êt' → logprob: -8.168880462646484
    9. ' dépasser' → logprob: -8.668880462646484
    10. 'be' → logprob: -9.043880462646484

Token 156: ' très' (ID: 9412)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.01876656524837017
    2. 'grand' → logprob: -4.018766403198242
    3. ' très' → logprob: -7.893766403198242
    4. ' grand' → logprob: -9.768766403198242
    5. 't' → logprob: -9.893766403198242
    6. 'very' → logprob: -10.393766403198242
    7. 'gr' → logprob: -10.643766403198242
    8. 'large' → logprob: -10.893766403198242
    9. 'asse' → logprob: -11.518766403198242
    10. 'Très' → logprob: -11.768766403198242

Token 157: ' grand' (ID: 6363)
  Prédit: ' grand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grand' → logprob: -0.693235456943512
    2. 'grand' → logprob: -0.693235456943512
    3. ' grands' → logprob: -10.693235397338867
    4. ' grande' → logprob: -10.818235397338867
    5. 'gr' → logprob: -11.193235397338867
    6. 'Grand' → logprob: -11.568235397338867
    7. ' large' → logprob: -11.818235397338867
    8. 'large' → logprob: -12.068235397338867
    9. ' gros' → logprob: -12.943235397338867
    10. '-grand' → logprob: -13.568235397338867

Token 158: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003179465711582452
    2. ' ,' → logprob: -8.125317573547363
    3. ',
' → logprob: -11.375317573547363
    4. ' ' → logprob: -12.375317573547363
    5. ' (' → logprob: -13.125317573547363
    6. '.' → logprob: -14.375317573547363
    7. ':' → logprob: -14.500317573547363
    8. 's' → logprob: -14.500317573547363
    9. 'e' → logprob: -14.875317573547363
    10. 'n' → logprob: -15.375317573547363

Token 159: 'jus' (ID: 56271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.414191722869873
    2. ' ),' → logprob: -1.539191722869873
    3. ' )' → logprob: -1.664191722869873
    4. ',' → logprob: -1.789191722869873
    5. ')' → logprob: -3.039191722869873
    6. '),' → logprob: -3.289191722869873
    7. ' ,' → logprob: -3.414191722869873
    8. '10' → logprob: -3.414191722869873
    9. '
' → logprob: -5.039191722869873
    10. ' 
' → logprob: -5.289191722869873

Token 160: 'qu' (ID: 351)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5390199422836304
    2. 'x' → logprob: -2.03902006149292
    3. 'q' → logprob: -3.03902006149292
    4. 'qu' → logprob: -3.78902006149292
    5. 'p' → logprob: -3.91402006149292
    6. 'xtap' → logprob: -4.16402006149292
    7. 'large' → logprob: -4.16402006149292
    8. 'ge' → logprob: -4.28902006149292
    9. 'b' → logprob: -4.41402006149292
    10. 'v' → logprob: -4.53902006149292

Token 161: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.06810019910335541
    2. ' à' → logprob: -3.1931002140045166
    3. '’à' → logprob: -3.8181002140045166
    4. 'à' → logprob: -6.5680999755859375
    5. '   ' → logprob: -8.318099975585938
    6. ' ' → logprob: -8.443099975585938
    7. ''a' → logprob: -8.443099975585938
    8. ''au' → logprob: -8.443099975585938
    9. '=' → logprob: -8.818099975585938
    10. ' a' → logprob: -9.568099975585938

Token 162: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.038074083626270294
    2. ' ' → logprob: -3.288074016571045
    3. '1' → logprob: -11.288074493408203
    4. '100' → logprob: -11.538074493408203
    5. '2' → logprob: -11.913074493408203
    6. ' ' → logprob: -13.163074493408203
    7. '  ' → logprob: -14.288074493408203
    8. '```' → logprob: -15.288074493408203
    9. '
' → logprob: -15.913074493408203
    10. '​' → logprob: -16.413074493408203

Token 163: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0006900362786836922
    2. '100' → logprob: -7.37568998336792
    3. ' ' → logprob: -10.375690460205078
    4. '1' → logprob: -11.875690460205078
    5. '2' → logprob: -12.000690460205078
    6. '200' → logprob: -12.000690460205078
    7. '50' → logprob: -12.500690460205078
    8. '18' → logprob: -12.875690460205078
    9. '500' → logprob: -13.250690460205078
    10. '300' → logprob: -14.250690460205078

Token 164: '^' (ID: 61)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.1598711460828781
    2. '12' → logprob: -2.1598711013793945
    3. '15' → logprob: -4.1598711013793945
    4. '**' → logprob: -4.4098711013793945
    5. '9' → logprob: -6.5348711013793945
    6. '14' → logprob: -6.5348711013793945
    7. '16' → logprob: -7.2848711013793945
    8. '13' → logprob: -8.159871101379395
    9. '1' → logprob: -8.909871101379395
    10. '17' → logprob: -8.909871101379395

Token 165: '18' (ID: 1157)
  Prédit: '18'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.2904537618160248
    2. '12' → logprob: -1.7904537916183472
    3. '15' → logprob: -3.0404536724090576
    4. '16' → logprob: -4.040453910827637
    5. '9' → logprob: -4.790453910827637
    6. '10' → logprob: -5.290453910827637
    7. '14' → logprob: -5.790453910827637
    8. '13' → logprob: -7.040453910827637
    9. '7' → logprob: -7.290453910827637
    10. '6' → logprob: -7.415453910827637

Token 166: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.40685558319091797
    2. '):' → logprob: -1.656855583190918
    3. ')' → logprob: -2.156855583190918
    4. ',' → logprob: -4.406855583190918
    5. '):
' → logprob: -5.031855583190918
    6. ' ),' → logprob: -5.156855583190918
    7. ':' → logprob: -6.656855583190918
    8. ' )' → logprob: -6.781855583190918
    9. ' ):' → logprob: -7.906855583190918
    10. '):

' → logprob: -8.531855583190918

Token 167: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6487144827842712
    2. ' on' → logprob: -1.148714542388916
    3. ' #' → logprob: -2.273714542388916
    4. ' il' → logprob: -3.273714542388916
    5. ' n' → logprob: -5.648714542388916
    6. 'print' → logprob: -5.773714542388916
    7. 'n' → logprob: -6.148714542388916
    8. 'on' → logprob: -6.273714542388916
    9. ' la' → logprob: -6.398714542388916
    10. ' print' → logprob: -6.648714542388916

Token 168: ' ne' (ID: 453)
  Prédit: ' ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.9980190992355347
    2. ' doit' → logprob: -2.248019218444824
    3. ' n' → logprob: -2.373019218444824
    4. ' need' → logprob: -2.498019218444824
    5. ' va' → logprob: -2.623019218444824
    6. ' faut' → logprob: -2.873019218444824
    7. ' devra' → logprob: -3.248019218444824
    8. ' cannot' → logprob: -3.498019218444824
    9. ' can't' → logprob: -3.498019218444824
    10. 'n' → logprob: -4.123019218444824

Token 169: ' peut' (ID: 9216)
  Prédit: ' peux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peux' → logprob: -1.7194304466247559
    2. ''' → logprob: -2.094430446624756
    3. 'pe' → logprob: -2.344430446624756
    4. 'do' → logprob: -2.469430446624756
    5. 'cannot' → logprob: -2.719430446624756
    6. ' devra' → logprob: -2.844430446624756
    7. ' peut' → logprob: -3.219430446624756
    8. ' doit' → logprob: -3.469430446624756
    9. ' ne' → logprob: -3.469430446624756
    10. 's' → logprob: -3.969430446624756

Token 170: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.22649076581001282
    2. 'pas' → logprob: -1.6014907360076904
    3. ' ' → logprob: -7.1014909744262695
    4. ' ' → logprob: -9.35149097442627
    5. ' plus' → logprob: -10.10149097442627
    6. '_pas' → logprob: -10.60149097442627
    7. 'plus' → logprob: -10.97649097442627
    8. 's' → logprob: -11.47649097442627
    9. 'p' → logprob: -11.85149097442627
    10. 't' → logprob: -11.97649097442627

Token 171: ' génér' (ID: 18939)
  Prédit: ' génér'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' génér' → logprob: -0.9766619801521301
    2. 'g' → logprob: -1.3516619205474854
    3. ' utiliser' → logprob: -2.6016619205474854
    4. ' stock' → logprob: -2.9766619205474854
    5. ' simplement' → logprob: -3.1016619205474854
    6. 'sim' → logprob: -3.3516619205474854
    7. ' compter' → logprob: -3.7266619205474854
    8. ' les' → logprob: -3.9766619205474854
    9. ' bou' → logprob: -4.3516621589660645
    10. 'gener' → logprob: -4.3516621589660645

Token 172: 'er' (ID: 259)
  Prédit: 'rer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rer' → logprob: -0.6577600836753845
    2. 'er' → logprob: -0.9077600836753845
    3. 'érer' → logprob: -2.7827601432800293
    4. 'r' → logprob: -4.157760143280029
    5. 'arer' → logprob: -8.532759666442871
    6. 'erer' → logprob: -8.657759666442871
    7. 'ner' → logprob: -9.032759666442871
    8. 'irer' → logprob: -9.157759666442871
    9. '```' → logprob: -9.282759666442871
    10. 'n' → logprob: -9.657759666442871

Token 173: ' directement' (ID: 52317)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.6077430248260498
    2. 'tout' → logprob: -2.48274302482605
    3. 't' → logprob: -2.85774302482605
    4. 'la' → logprob: -2.98274302482605
    5. 'direct' → logprob: -3.10774302482605
    6. 'all' → logprob: -3.35774302482605
    7. 'le' → logprob: -3.35774302482605
    8. ' tous' → logprob: -3.60774302482605
    9. ' ' → logprob: -4.107743263244629
    10. 'l' → logprob: -4.357743263244629

Token 174: '.
' (ID: 558)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.15054452419281
    2. 'K' → logprob: -1.90054452419281
    3. 'les' → logprob: -1.90054452419281
    4. ' ' → logprob: -3.2755446434020996
    5. ' K' → logprob: -3.2755446434020996
    6. '<|end|>' → logprob: -3.6505446434020996
    7. 'l' → logprob: -3.7755446434020996
    8. ' les' → logprob: -3.7755446434020996
    9. ' la' → logprob: -3.9005446434020996
    10. 'la' → logprob: -3.9005446434020996

Token 175: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3516618013381958
    2. 'def' → logprob: -1.7266618013381958
    3. ' #' → logprob: -3.4766616821289062
    4. '
' → logprob: -3.6016616821289062
    5. ' def' → logprob: -4.351661682128906
    6. 'import' → logprob: -4.726661682128906
    7. ' ' → logprob: -4.976661682128906
    8. ' 
' → logprob: -4.976661682128906
    9. 'F' → logprob: -5.726661682128906
    10. ' n' → logprob: -5.976661682128906

Token 176: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11805213242769241
    2. 'def' → logprob: -2.6180522441864014
    3. ' #' → logprob: -4.243052005767822
    4. 'import' → logprob: -4.743052005767822
    5. 'On' → logprob: -5.993052005767822
    6. 'from' → logprob: -6.368052005767822
    7. 'print' → logprob: -6.368052005767822
    8. 'fib' → logprob: -6.493052005767822
    9. 'n' → logprob: -6.743052005767822
    10. 'F' → logprob: -6.868052005767822

Token 177: ' remarque' (ID: 183406)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.5630248188972473
    2. ' doit' → logprob: -1.6880247592926025
    3. ' peut' → logprob: -2.3130247592926025
    4. ' faut' → logprob: -2.9380247592926025
    5. 'pe' → logprob: -3.8130247592926025
    6. ' devra' → logprob: -4.313024997711182
    7. 'def' → logprob: -4.438024997711182
    8. 'f' → logprob: -4.438024997711182
    9. 'va' → logprob: -4.438024997711182
    10. ' faudra' → logprob: -4.938024997711182

Token 178: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.006652610842138529
    2. 'que' → logprob: -5.63165283203125
    3. ' ' → logprob: -6.75665283203125
    4. ' qu' → logprob: -7.38165283203125
    5. ' that' → logprob: -7.50665283203125
    6. ' ' → logprob: -8.63165283203125
    7. 'that' → logprob: -9.25665283203125
    8. 's' → logprob: -9.63165283203125
    9. 'qu' → logprob: -9.75665283203125
    10. ' alors' → logprob: -9.88165283203125

Token 179: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.16321425139904022
    2. 'le' → logprob: -2.4132142066955566
    3. 'la' → logprob: -3.0382142066955566
    4. ' les' → logprob: -5.038214206695557
    5. ' la' → logprob: -6.163214206695557
    6. ' le' → logprob: -6.663214206695557
    7. 'que' → logprob: -6.663214206695557
    8. 'l' → logprob: -7.788214206695557
    9. 'c' → logprob: -8.163214683532715
    10. 'K' → logprob: -8.538214683532715

Token 180: ' nombres' (ID: 76205)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05552607774734497
    2. 'nombre' → logprob: -3.5555260181427
    3. 'fib' → logprob: -4.055526256561279
    4. 'F' → logprob: -5.555526256561279
    5. 'f' → logprob: -6.055526256561279
    6. ' nombres' → logprob: -6.555526256561279
    7. 'K' → logprob: -8.680525779724121
    8. ' Fibonacci' → logprob: -8.805525779724121
    9. 'nth' → logprob: -10.680525779724121
    10. 'mat' → logprob: -11.180525779724121

Token 181: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.08356885612010956
    2. 'd' → logprob: -2.583568811416626
    3. 'f' → logprob: -6.083569049835205
    4. ' de' → logprob: -6.208569049835205
    5. 'fib' → logprob: -8.333568572998047
    6. 'F' → logprob: -9.458568572998047
    7. 'import' → logprob: -11.208568572998047
    8. 'def' → logprob: -11.333568572998047
    9. ' d' → logprob: -12.083568572998047
    10. 'n' → logprob: -12.208568572998047

Token 182: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.018201919272542
    2. 'u' → logprob: -4.39320182800293
    3. ''' → logprob: -5.89320182800293
    4. ' e' → logprob: -7.14320182800293
    5. 'a' → logprob: -7.39320182800293
    6. ''i' → logprob: -7.76820182800293
    7. 'i' → logprob: -8.01820182800293
    8. ''é' → logprob: -9.01820182800293
    9. ''e' → logprob: -9.14320182800293
    10. 'é' → logprob: -9.14320182800293

Token 183: 'ika' (ID: 3113)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.039573173969984055
    2. 'Fib' → logprob: -4.0395731925964355
    3. 'fib' → logprob: -4.4145731925964355
    4. 'f' → logprob: -5.1645731925964355
    5. ' Fibonacci' → logprob: -6.4145731925964355
    6. 'ibonacci' → logprob: -7.5395731925964355
    7. 'I' → logprob: -7.7895731925964355
    8. '_f' → logprob: -7.7895731925964355
    9. 'a' → logprob: -9.789572715759277
    10. ' fibonacci' → logprob: -10.289572715759277

Token 184: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49655410647392273
    2. ' sont' → logprob: -1.9965541362762451
    3. ' de' → logprob: -2.246554136276245
    4. '=' → logprob: -2.746554136276245
    5. 's' → logprob: -3.871554136276245
    6. 'de' → logprob: -4.496553897857666
    7. 'fib' → logprob: -4.621553897857666
    8. 'f' → logprob: -4.746553897857666
    9. 'F' → logprob: -5.371553897857666
    10. ' suivent' → logprob: -5.371553897857666

Token 185: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.7066294550895691
    2. ' les' → logprob: -1.4566295146942139
    3. ' des' → logprob: -2.956629514694214
    4. ' essentiellement' → logprob: -3.081629514694214
    5. 'fib' → logprob: -3.831629514694214
    6. ' exactement' → logprob: -3.831629514694214
    7. ' simplement' → logprob: -3.956629514694214
    8. ' la' → logprob: -4.206629276275635
    9. ' en' → logprob: -4.331629276275635
    10. 'f' → logprob: -4.581629276275635

Token 186: ' nombres' (ID: 76205)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3917542099952698
    2. ' nombres' → logprob: -1.641754150390625
    3. 'fib' → logprob: -2.391754150390625
    4. 'F' → logprob: -3.891754150390625
    5. 'nombre' → logprob: -4.391754150390625
    6. 'f' → logprob: -6.266754150390625
    7. ' Fibonacci' → logprob: -6.766754150390625
    8. 'Fib' → logprob: -6.891754150390625
    9. ' F' → logprob: -8.141754150390625
    10. ' fib' → logprob: -8.391754150390625

Token 187: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.02554989792406559
    2. ' de' → logprob: -4.15054988861084
    3. 'f' → logprob: -5.27554988861084
    4. 'fib' → logprob: -6.15054988861084
    5. 'F' → logprob: -6.90054988861084
    6. 'def' → logprob: -7.02554988861084
    7. 'd' → logprob: -9.15054988861084
    8. '_f' → logprob: -10.15054988861084
    9. ' ' → logprob: -11.40054988861084
    10. '0' → logprob: -11.40054988861084

Token 188: ' Fibonacci' (ID: 139341)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.007457188330590725
    2. ' Fibonacci' → logprob: -5.132457256317139
    3. 'Fib' → logprob: -6.632457256317139
    4. 'f' → logprob: -9.25745677947998
    5. 'fib' → logprob: -9.50745677947998
    6. ' fibonacci' → logprob: -10.25745677947998
    7. 'Lucas' → logprob: -13.25745677947998
    8. ' fib' → logprob: -14.13245677947998
    9. ' Fib' → logprob: -14.13245677947998
    10. ' F' → logprob: -14.50745677947998

Token 189: ' depuis' (ID: 16277)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.945341169834137
    2. '[' → logprob: -1.6953411102294922
    3. 'fib' → logprob: -2.195341110229492
    4. ',' → logprob: -2.445341110229492
    5. 'F' → logprob: -2.820341110229492
    6. ' suivants' → logprob: -3.945341110229492
    7. 'f' → logprob: -4.195341110229492
    8. '[n' → logprob: -4.320341110229492
    9. '+' → logprob: -4.445341110229492
    10. ' fib' → logprob: -4.695341110229492

Token 190: ' la' (ID: 557)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.040993474423885345
    2. ' ' → logprob: -4.040993690490723
    3. ' F' → logprob: -4.540993690490723
    4. 'F' → logprob: -4.915993690490723
    5. 'le' → logprob: -5.915993690490723
    6. ' le' → logprob: -6.790993690490723
    7. ' la' → logprob: -8.790993690490723
    8. 'fib' → logprob: -8.790993690490723
    9. 'la' → logprob: -9.040993690490723
    10. '1' → logprob: -9.290993690490723

Token 191: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.020942743867635727
    2. '1' → logprob: -4.020942687988281
    3. '3' → logprob: -6.270942687988281
    4. ' ' → logprob: -7.270942687988281
    5. '0' → logprob: -9.645942687988281
    6. 'de' → logprob: -10.270942687988281
    7. 'fib' → logprob: -10.395942687988281
    8. '
' → logprob: -11.020942687988281
    9. 'second' → logprob: -11.770942687988281
    10. '4' → logprob: -12.145942687988281

Token 192: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1611117571592331
    2. '2' → logprob: -1.9111117124557495
    3. ' ' → logprob: -7.411111831665039
    4. 'de' → logprob: -9.411111831665039
    5. '
' → logprob: -9.911111831665039
    6. '4' → logprob: -10.286111831665039
    7. '1' → logprob: -10.536111831665039
    8. ' troisième' → logprob: -10.786111831665039
    9. '(' → logprob: -10.911111831665039
    10. 'tro' → logprob: -11.286111831665039

Token 193: 'nd' (ID: 301)
  Prédit: 'ième'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ième' → logprob: -0.33705568313598633
    2. 'ème' → logprob: -1.4620556831359863
    3. 'ieme' → logprob: -3.4620556831359863
    4. 'ié' → logprob: -4.962055683135986
    5. 'è' → logprob: -5.462055683135986
    6. ' è' → logprob: -6.212055683135986
    7. 'èm' → logprob: -6.462055683135986
    8. 'eme' → logprob: -6.587055683135986
    9. 'e' → logprob: -6.587055683135986
    10. 'i' → logprob: -6.712055683135986

Token 194: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.1416877955198288
    2. ' position' → logprob: -2.3916878700256348
    3. ' à' → logprob: -5.016687870025635
    4. 'fib' → logprob: -5.266687870025635
    5. 'à' → logprob: -5.641687870025635
    6. ' ' → logprob: -5.641687870025635
    7. 'index' → logprob: -5.766687870025635
    8. '2' → logprob: -6.266687870025635
    9. ' valeur' → logprob: -6.516687870025635
    10. 'f' → logprob: -6.516687870025635

Token 195: ',
' (ID: 412)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -1.4584028720855713
    2. 'n' → logprob: -1.8334028720855713
    3. ',' → logprob: -2.0834028720855713
    4. '.' → logprob: -2.3334028720855713
    5. ' ' → logprob: -2.3334028720855713
    6. '#' → logprob: -3.0834028720855713
    7. 'def' → logprob: -3.7084028720855713
    8. ' (' → logprob: -3.9584028720855713
    9. '<|end|>' → logprob: -3.9584028720855713
    10. 's' → logprob: -4.083402633666992

Token 196: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12879660725593567
    2. 'c' → logprob: -2.5037965774536133
    3. ' c' → logprob: -4.503796577453613
    4. 'fib' → logprob: -4.878796577453613
    5. 'i' → logprob: -5.878796577453613
    6. 'F' → logprob: -5.878796577453613
    7. 'import' → logprob: -6.003796577453613
    8. 'so' → logprob: -6.128796577453613
    9. 'def' → logprob: -6.128796577453613
    10. ' donc' → logprob: -6.628796577453613

Token 197: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.47573646903038025
    2. ' c' → logprob: -1.4757364988327026
    3. 'c' → logprob: -2.350736379623413
    4. ' donc' → logprob: -3.850736379623413
    5. ' et' → logprob: -4.975736618041992
    6. ' #' → logprob: -4.975736618041992
    7. 'et' → logprob: -5.475736618041992
    8. ' i' → logprob: -5.850736618041992
    9. 'don' → logprob: -6.225736618041992
    10. 'so' → logprob: -6.225736618041992

Token 198: '1' (ID: 16)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9347255229949951
    2. '#' → logprob: -1.1847255229949951
    3. 'don' → logprob: -1.6847255229949951
    4. 'et' → logprob: -2.559725522994995
    5. 'so' → logprob: -4.434725761413574
    6. 'i' → logprob: -4.559725761413574
    7. ' donc' → logprob: -5.934725761413574
    8. 'import' → logprob: -6.059725761413574
    9. 'and' → logprob: -6.309725761413574
    10. ' c' → logprob: -6.434725761413574

Token 199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.020053744316101
    2. 'ère' → logprob: -1.895053744316101
    3. ' ' → logprob: -1.895053744316101
    4. ' ,' → logprob: -2.0200538635253906
    5. 's' → logprob: -3.2700538635253906
    6. ' plus' → logprob: -3.5200538635253906
    7. '+' → logprob: -4.270053863525391
    8. 'e' → logprob: -4.395053863525391
    9. ' =' → logprob: -4.520053863525391
    10. ' except' → logprob: -4.770053863525391

Token 200: '1' (ID: 16)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23995256423950195
    2. '2' → logprob: -2.114952564239502
    3. '1' → logprob: -2.489952564239502
    4. ' donc' → logprob: -6.364952564239502
    5. ' car' → logprob: -6.489952564239502
    6. ' mais' → logprob: -6.489952564239502
    7. ' puis' → logprob: -7.239952564239502
    8. ' c' → logprob: -7.489952564239502
    9. '0' → logprob: -7.739952564239502
    10. 'except' → logprob: -7.739952564239502

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020290424581617117
    2. ' ,' → logprob: -6.502028942108154
    3. ',
' → logprob: -8.502029418945312
    4. '2' → logprob: -8.752029418945312
    5. ' ' → logprob: -10.252029418945312
    6. '0' → logprob: -10.627029418945312
    7. ',...' → logprob: -10.877029418945312
    8. '+' → logprob: -11.252029418945312
    9. '4' → logprob: -11.502029418945312
    10. '3' → logprob: -11.502029418945312

Token 202: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7133641196996905e-05
    2. ' ' → logprob: -11.12502670288086
    3. '1' → logprob: -11.50002670288086
    4. '

' → logprob: -14.56252670288086
    5. '
' → logprob: -14.75002670288086
    6. ',' → logprob: -14.93752670288086
    7. '```' → logprob: -15.43752670288086
    8. '...' → logprob: -15.56252670288086
    9. '3' → logprob: -16.31252670288086
    10. 'fib' → logprob: -16.81252670288086

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005186201073229313
    2. ' ,' → logprob: -5.505186080932617
    3. ',
' → logprob: -7.505186080932617
    4. ',...' → logprob: -9.255186080932617
    5. 'import' → logprob: -10.005186080932617
    6. '3' → logprob: -10.005186080932617
    7. ' ' → logprob: -10.130186080932617
    8. 'def' → logprob: -10.505186080932617
    9. '...' → logprob: -10.880186080932617
    10. '
' → logprob: -11.005186080932617

Token 204: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.625009536743164
    3. ',' → logprob: -16.187509536743164
    4. '...' → logprob: -17.312509536743164
    5. '３' → logprob: -18.125009536743164
    6. '۳' → logprob: -18.437509536743164
    7. '```' → logprob: -18.500009536743164
    8. '4' → logprob: -18.562509536743164
    9. '३' → logprob: -19.000009536743164
    10. '
' → logprob: -19.062509536743164

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0062727597542107105
    2. ',...' → logprob: -5.756272792816162
    3. ' ,' → logprob: -6.506272792816162
    4. '4' → logprob: -7.006272792816162
    5. '...' → logprob: -8.256272315979004
    6. ' ' → logprob: -8.756272315979004
    7. '   ' → logprob: -10.006272315979004
    8. ',
' → logprob: -10.381272315979004
    9. '5' → logprob: -10.756272315979004
    10. '#' → logprob: -10.881272315979004

Token 206: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.6240566083070007e-06
    2. '...' → logprob: -14.125001907348633
    3. ' ' → logprob: -14.750001907348633
    4. 'fib' → logprob: -15.375001907348633
    5. '4' → logprob: -15.750001907348633
    6. '```' → logprob: -17.625001907348633
    7. '55' → logprob: -17.750001907348633
    8. '   ' → logprob: -17.812501907348633
    9. '3' → logprob: -18.000001907348633
    10. '2' → logprob: -18.312501907348633

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01033957302570343
    2. ',...' → logprob: -4.760339736938477
    3. '...' → logprob: -7.010339736938477
    4. ' ,' → logprob: -8.010339736938477
    5. ',
' → logprob: -8.635339736938477
    6. '6' → logprob: -10.260339736938477
    7. ',,,' → logprob: -10.385339736938477
    8. ' ' → logprob: -10.635339736938477
    9. ',,' → logprob: -10.635339736938477
    10. '2' → logprob: -10.885339736938477

Token 208: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.000491076149046421
    2. '...' → logprob: -7.625491142272949
    3. '5' → logprob: -13.87549114227295
    4. ' ' → logprob: -14.12549114227295
    5. '.' → logprob: -15.12549114227295
    6. '7' → logprob: -15.25049114227295
    7. '…' → logprob: -15.25049114227295
    8. '```' → logprob: -15.87549114227295
    9. '   ' → logprob: -17.375490188598633
    10. ' ...' → logprob: -17.500490188598633

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.052782073616981506
    2. ',...' → logprob: -3.5527820587158203
    3. '...' → logprob: -5.05278205871582
    4. ',f' → logprob: -5.30278205871582
    5. ',
' → logprob: -5.80278205871582
    6. 'fib' → logprob: -5.92778205871582
    7. '#' → logprob: -6.80278205871582
    8. 'def' → logprob: -7.17778205871582
    9. ',n' → logprob: -7.30278205871582
    10. 'f' → logprob: -7.30278205871582

Token 210: '13' (ID: 1311)
  Prédit: '13'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -0.0012007086770609021
    2. '...' → logprob: -6.7512006759643555
    3. '```' → logprob: -11.751200675964355
    4. '.' → logprob: -12.251200675964355
    5. 'et' → logprob: -12.251200675964355
    6. '1' → logprob: -13.001200675964355
    7. '...
' → logprob: -13.751200675964355
    8. '!' → logprob: -14.126200675964355
    9. ' ...' → logprob: -14.501200675964355
    10. 'so' → logprob: -14.626200675964355

Token 211: ',...
' (ID: 94072)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5605332851409912
    2. '...' → logprob: -1.9355332851409912
    3. ' ,' → logprob: -2.435533285140991
    4. 'fib' → logprob: -3.310533285140991
    5. ' ' → logprob: -3.810533285140991
    6. '.' → logprob: -4.06053352355957
    7. '#' → logprob: -4.06053352355957
    8. '<|end|>' → logprob: -4.18553352355957
    9. '<|end|>' → logprob: -4.43553352355957
    10. 'def' → logprob: -4.56053352355957

Token 212: '#' (ID: 2)
  Prédit: 'fib'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fib' → logprob: -0.866901159286499
    2. 'def' → logprob: -1.116901159286499
    3. '#' → logprob: -2.241901159286499
    4. ' fib' → logprob: -3.366901159286499
    5. 'f' → logprob: -3.866901159286499
    6. 'n' → logprob: -4.116901397705078
    7. 'F' → logprob: -4.241901397705078
    8. 'import' → logprob: -4.366901397705078
    9. 'dp' → logprob: -4.616901397705078
    10. '
' → logprob: -4.866901397705078

Token 213: ' Le' (ID: 2018)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.047455906867981
    2. 'fib' → logprob: -1.297455906867981
    3. 'def' → logprob: -1.422455906867981
    4. ' fib' → logprob: -3.1724557876586914
    5. 'if' → logprob: -4.172455787658691
    6. 'f' → logprob: -4.297455787658691
    7. 'F' → logprob: -4.547455787658691
    8. 'import' → logprob: -4.547455787658691
    9. 'from' → logprob: -4.922455787658691
    10. ' if' → logprob: -4.922455787658691

Token 214: ' k' (ID: 372)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.07247845083475113
    2. 'n' → logprob: -3.1974785327911377
    3. 'k' → logprob: -5.072478294372559
    4. ' K' → logprob: -5.072478294372559
    5. 'nth' → logprob: -5.072478294372559
    6. 'fib' → logprob: -6.322478294372559
    7. 'i' → logprob: -6.822478294372559
    8. 'rés' → logprob: -6.822478294372559
    9. 'def' → logprob: -7.197478294372559
    10. 'th' → logprob: -7.197478294372559

Token 215: '-i' (ID: 18499)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6263712644577026
    2. 'h' → logprob: -1.6263712644577026
    3. ' -=' → logprob: -2.126371383666992
    4. 'th' → logprob: -2.501371383666992
    5. '-' → logprob: -3.376371383666992
    6. '-th' → logprob: -5.001371383666992
    7. '=' → logprob: -5.251371383666992
    8. '-=' → logprob: -5.376371383666992
    9. ' ' → logprob: -5.626371383666992
    10. ' +=' → logprob: -5.876371383666992

Token 216: 'ème' (ID: 9767)
  Prédit: 'è'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'è' → logprob: -0.28938165307044983
    2. 'ème' → logprob: -2.039381742477417
    3. ' è' → logprob: -3.539381742477417
    4. '-' → logprob: -3.664381742477417
    5. '`' → logprob: -3.664381742477417
    6. 'èm' → logprob: -3.914381742477417
    7. 'e' → logprob: -5.539381504058838
    8. 'èr' → logprob: -6.289381504058838
    9. '\xe1' → logprob: -6.289381504058838
    10. '^' → logprob: -6.539381504058838

Token 217: ' plus' (ID: 2932)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.2713003158569336
    2. 'f' → logprob: -2.5213003158569336
    3. '_' → logprob: -2.8963003158569336
    4. ' =' → logprob: -4.021300315856934
    5. 'fib' → logprob: -4.146300315856934
    6. 'F' → logprob: -4.521300315856934
    7. '_number' → logprob: -4.896300315856934
    8. 'nombre' → logprob: -5.396300315856934
    9. ' ' → logprob: -5.396300315856934
    10. '_nombre' → logprob: -5.646300315856934

Token 218: ' petit' (ID: 20577)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24314391613006592
    2. ' _' → logprob: -1.743143916130066
    3. '_small' → logprob: -3.3681440353393555
    4. '_p' → logprob: -6.1181440353393555
    5. ' petit' → logprob: -6.3681440353393555
    6. '_pro' → logprob: -7.4931440353393555
    7. '_i' → logprob: -7.7431440353393555
    8. '_s' → logprob: -8.368144035339355
    9. '_pet' → logprob: -8.618144035339355
    10. ' ' → logprob: -8.618144035339355

Token 219: ' ika' (ID: 97957)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5952016115188599
    2. 'fib' → logprob: -1.9702016115188599
    3. ' ika' → logprob: -2.5952014923095703
    4. 'nombre' → logprob: -2.8452014923095703
    5. ' nombre' → logprob: -2.8452014923095703
    6. '_f' → logprob: -4.09520149230957
    7. 'n' → logprob: -4.47020149230957
    8. ' fibonacci' → logprob: -4.59520149230957
    9. 'F' → logprob: -4.72020149230957
    10. ' fib' → logprob: -4.97020149230957

Token 220: ' number' (ID: 2086)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7723327875137329
    2. '_number' → logprob: -1.772332787513733
    3. '_num' → logprob: -2.2723326683044434
    4. '_' → logprob: -2.3973326683044434
    5. '_f' → logprob: -2.5223326683044434
    6. '_nombre' → logprob: -3.5223326683044434
    7. '_n' → logprob: -4.147332668304443
    8. '_name' → logprob: -4.397332668304443
    9. '=' → logprob: -5.022332668304443
    10. '_nb' → logprob: -5.147332668304443

Token 221: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.488741397857666
    2. ' est' → logprob: -1.238741397857666
    3. 's' → logprob: -3.238741397857666
    4. '=' → logprob: -4.238741397857666
    5. ' is' → logprob: -4.488741397857666
    6. ' s' → logprob: -4.738741397857666
    7. 'est' → logprob: -4.988741397857666
    8. 'def' → logprob: -5.738741397857666
    9. ' correspond' → logprob: -5.988741397857666
    10. ' corresponds' → logprob: -6.113741397857666

Token 222: ' fib' (ID: 18795)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.8255108594894409
    2. 'fib' → logprob: -1.450510859489441
    3. '(' → logprob: -2.7005109786987305
    4. '0' → logprob: -3.0755109786987305
    5. '(pow' → logprob: -3.4505109786987305
    6. 'K' → logprob: -3.7005109786987305
    7. '((' → logprob: -3.9505109786987305
    8. '(k' → logprob: -4.0755109786987305
    9. 'def' → logprob: -4.0755109786987305
    10. ' (' → logprob: -4.2005109786987305

Token 223: '(k' (ID: 12125)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -1.0944010019302368
    2. 'o' → logprob: -1.3444010019302368
    3. '[K' → logprob: -1.9694010019302368
    4. '(k' → logprob: -2.0944008827209473
    5. 'onacci' → logprob: -2.8444008827209473
    6. '[k' → logprob: -2.8444008827209473
    7. 'onn' → logprob: -4.469400882720947
    8. 's' → logprob: -5.219400882720947
    9. '[(' → logprob: -6.219400882720947
    10. '_k' → logprob: -6.719400882720947

Token 224: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00020985817536711693
    2. ' +' → logprob: -8.50020980834961
    3. '+k' → logprob: -12.12520980834961
    4. ')' → logprob: -15.12520980834961
    5. '＋' → logprob: -16.12520980834961
    6. 'k' → logprob: -16.50020980834961
    7. 'plus' → logprob: -16.50020980834961
    8. 's' → logprob: -16.62520980834961
    9. ' ' → logprob: -16.87520980834961
    10. '+)' → logprob: -17.37520980834961

Token 225: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14268341660499573
    2. '2' → logprob: -2.017683506011963
    3. ' ' → logprob: -11.892683029174805
    4. '3' → logprob: -13.642683029174805
    5. ')' → logprob: -17.017683029174805
    6. '+' → logprob: -17.267683029174805
    7. '   ' → logprob: -17.267683029174805
    8. '
' → logprob: -17.330183029174805
    9. '  ' → logprob: -17.392683029174805
    10. '```' → logprob: -17.392683029174805

Token 226: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011133047519251704
    2. '(K' → logprob: -7.501113414764404
    3. 'K' → logprob: -8.751112937927246
    4. ' )' → logprob: -9.001112937927246
    5. '(' → logprob: -9.126112937927246
    6. '(k' → logprob: -9.501112937927246
    7. '+' → logprob: -10.126112937927246
    8. ')`' → logprob: -11.751112937927246
    9. 'k' → logprob: -12.001112937927246
    10. ')+' → logprob: -12.001112937927246

Token 227: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1896769255399704
    2. ' ' → logprob: -2.5646770000457764
    3. ' def' → logprob: -3.0646770000457764
    4. 'import' → logprob: -3.3146770000457764
    5. '_' → logprob: -5.689676761627197
    6. 'fib' → logprob: -5.689676761627197
    7. ' import' → logprob: -6.689676761627197
    8. ' fib' → logprob: -7.064676761627197
    9. 'from' → logprob: -7.189676761627197
    10. 'Fib' → logprob: -8.439677238464355

Token 228: ' Donc' (ID: 88837)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00025954778539016843
    2. 'fib' → logprob: -9.250259399414062
    3. ' def' → logprob: -9.500259399414062
    4. 'import' → logprob: -10.500259399414062
    5. '#' → logprob: -10.875259399414062
    6. 'n' → logprob: -11.125259399414062
    7. '
' → logprob: -11.750259399414062
    8. 'a' → logprob: -12.125259399414062
    9. 'pow' → logprob: -12.625259399414062
    10. 'f' → logprob: -13.000259399414062

Token 229: ' on' (ID: 402)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00030614540446549654
    2. ' def' → logprob: -8.250306129455566
    3. 'fib' → logprob: -10.750306129455566
    4. 'a' → logprob: -11.625306129455566
    5. 'import' → logprob: -12.125306129455566
    6. '
' → logprob: -12.750306129455566
    7. '#' → logprob: -13.625306129455566
    8. 'from' → logprob: -13.625306129455566
    9. 'n' → logprob: -14.000306129455566
    10. 'F' → logprob: -14.125306129455566

Token 230: ' calc' (ID: 25691)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03482462465763092
    2. 'import' → logprob: -4.784824848175049
    3. ' def' → logprob: -4.784824848175049
    4. ' vais' → logprob: -5.159824848175049
    5. ' peux' → logprob: -5.284824848175049
    6. ' import' → logprob: -7.409824848175049
    7. ' continue' → logprob: -7.534824848175049
    8. ' va' → logprob: -7.534824848175049
    9. ' need' → logprob: -7.534824848175049
    10. ' faut' → logprob: -7.784824848175049

Token 231: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.001546883606351912
    2. 'uler' → logprob: -7.126546859741211
    3. 'ulate' → logprob: -7.626546859741211
    4. 'ul' → logprob: -8.501546859741211
    5. 'cule' → logprob: -11.126546859741211
    6. 'ulé' → logprob: -11.376546859741211
    7. '#' → logprob: -12.001546859741211
    8. 'def' → logprob: -12.251546859741211
    9. '```' → logprob: -13.251546859741211
    10. 'u' → logprob: -13.376546859741211

Token 232: ' fib' (ID: 18795)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00021295747137628496
    2. 'pow' → logprob: -8.750212669372559
    3. ' def' → logprob: -10.125212669372559
    4. 'fib' → logprob: -11.250212669372559
    5. '
' → logprob: -14.375212669372559
    6. 'n' → logprob: -15.250212669372559
    7. 'a' → logprob: -16.125213623046875
    8. 'k' → logprob: -16.375213623046875
    9. '(' → logprob: -16.500213623046875
    10. ' pow' → logprob: -16.750213623046875

Token 233: '(K' (ID: 28797)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.057333383709192276
    2. '(' → logprob: -2.932333469390869
    3. '(K' → logprob: -6.307333469390869
    4. 'o' → logprob: -8.807332992553711
    5. '_' → logprob: -9.057332992553711
    6. '((' → logprob: -9.682332992553711
    7. 'onacci' → logprob: -10.057332992553711
    8. '(pow' → logprob: -10.182332992553711
    9. ' (' → logprob: -10.307332992553711
    10. '_k' → logprob: -10.682332992553711

Token 234: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018152287229895592
    2. ' +' → logprob: -4.018152236938477
    3. ')' → logprob: -13.393152236938477
    4. '+k' → logprob: -15.393152236938477
    5. ' ' → logprob: -15.518152236938477
    6. '   ' → logprob: -15.643152236938477
    7. ')+' → logprob: -16.518152236938477
    8. '()+' → logprob: -17.018152236938477
    9. '+)' → logprob: -17.143152236938477
    10. '+n' → logprob: -17.268152236938477

Token 235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4745255410671234
    2. '2' → logprob: -0.9745255708694458
    3. ' ' → logprob: -7.724525451660156
    4. ')' → logprob: -12.099525451660156
    5. '3' → logprob: -14.474525451660156
    6. '   ' → logprob: -15.224525451660156
    7. 'K' → logprob: -15.974525451660156
    8. '  ' → logprob: -17.224525451660156
    9. '0' → logprob: -17.349525451660156
    10. '(' → logprob: -17.974525451660156

Token 236: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0641784816980362
    2. ',' → logprob: -2.814178466796875
    3. ' )' → logprob: -7.314178466796875
    4. ',K' → logprob: -7.564178466796875
    5. ')%' → logprob: -7.689178466796875
    6. ' ,' → logprob: -7.939178466796875
    7. '+' → logprob: -9.564178466796875
    8. ',k' → logprob: -9.689178466796875
    9. 'K' → logprob: -11.189178466796875
    10. ',n' → logprob: -11.814178466796875

Token 237: ' modulo' (ID: 112372)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003146088565699756
    2. '
' → logprob: -8.750314712524414
    3. 'n' → logprob: -9.125314712524414
    4. '

' → logprob: -11.125314712524414
    5. ' def' → logprob: -11.250314712524414
    6. '#' → logprob: -11.875314712524414
    7. 'a' → logprob: -12.875314712524414
    8. 'fib' → logprob: -12.875314712524414
    9. '\' → logprob: -13.000314712524414
    10. '```' → logprob: -13.375314712524414

Token 238: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.20145125687122345
    2. ' MOD' → logprob: -1.701451301574707
    3. ' (' → logprob: -11.076451301574707
    4. '(M' → logprob: -11.201451301574707
    5. '(' → logprob: -11.951451301574707
    6. '_MOD' → logprob: -13.826451301574707
    7. '10' → logprob: -14.076451301574707
    8. '(mod' → logprob: -15.201451301574707
    9. '.MOD' → logprob: -15.451451301574707
    10. ' ' → logprob: -16.57645034790039

Token 239: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.827200897736475e-05
    2. '
' → logprob: -10.625078201293945
    3. ' def' → logprob: -10.875078201293945
    4. '

' → logprob: -11.250078201293945
    5. '#' → logprob: -11.625078201293945
    6. 'import' → logprob: -12.750078201293945
    7. 'n' → logprob: -12.750078201293945
    8. 'fib' → logprob: -13.250078201293945
    9. 'a' → logprob: -13.375078201293945
    10. '```' → logprob: -13.875078201293945

Token 240: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.306760805164231e-05
    2. 'n' → logprob: -12.12501335144043
    3. ' def' → logprob: -12.50001335144043
    4. '
' → logprob: -13.75001335144043
    5. '#' → logprob: -13.87501335144043
    6. 'import' → logprob: -14.12501335144043
    7. 'de' → logprob: -15.50001335144043
    8. '  
' → logprob: -15.87501335144043
    9. ' 
' → logprob: -16.00001335144043
    10. '\' → logprob: -16.12501335144043

Token 241: ' fib' (ID: 18795)
  Prédit: 'fib'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fib' → logprob: -0.1382802575826645
    2. ' fib' → logprob: -2.138280153274536
    3. 'f' → logprob: -4.888280391693115
    4. 'pow' → logprob: -6.263280391693115
    5. 'fast' → logprob: -7.138280391693115
    6. 'mod' → logprob: -7.638280391693115
    7. ' fibonacci' → logprob: -8.513279914855957
    8. ' mod' → logprob: -9.263279914855957
    9. 'mat' → logprob: -9.513279914855957
    10. 'matrix' → logprob: -9.638279914855957

Token 242: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10558144748210907
    2. '(' → logprob: -2.355581521987915
    3. '(k' → logprob: -5.480581283569336
    4. '_mod' → logprob: -7.980581283569336
    5. '(K' → logprob: -8.480581283569336
    6. '_n' → logprob: -9.230581283569336
    7. ' (' → logprob: -9.355581283569336
    8. '(N' → logprob: -9.355581283569336
    9. '(x' → logprob: -10.105581283569336
    10. '_' → logprob: -10.105581283569336

Token 243: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015493767336010933
    2. ',' → logprob: -4.515493869781494
    3. '(n' → logprob: -5.890493869781494
    4. '):
' → logprob: -7.390493869781494
    5. ',n' → logprob: -8.140493392944336
    6. ':' → logprob: -8.140493392944336
    7. '   ' → logprob: -8.515493392944336
    8. 'n' → logprob: -9.140493392944336
    9. ')' → logprob: -9.140493392944336
    10. '):
' → logprob: -10.140493392944336

Token 244: '   ' (ID: 271)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8361417055130005
    2. '   ' → logprob: -0.8361417055130005
    3. ' if' → logprob: -2.086141586303711
    4. 'a' → logprob: -4.836141586303711
    5. '	a' → logprob: -8.211141586303711
    6. '    ' → logprob: -8.336141586303711
    7. 'if' → logprob: -8.711141586303711
    8. '0' → logprob: -8.836141586303711
    9. '    
' → logprob: -8.961141586303711
    10. ' ' → logprob: -9.461141586303711

Token 245: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.6051207184791565
    2. ' a' → logprob: -0.8551207184791565
    3. ' if' → logprob: -4.480120658874512
    4. '   ' → logprob: -4.730120658874512
    5. 'if' → logprob: -5.105120658874512
    6. 'def' → logprob: -6.355120658874512
    7. ' ' → logprob: -7.730120658874512
    8. '	a' → logprob: -8.480120658874512
    9. ' def' → logprob: -8.980120658874512
    10. '    ' → logprob: -11.730120658874512

Token 246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001205893131555058
    2. ',b' → logprob: -9.125120162963867
    3. ' ,' → logprob: -11.750120162963867
    4. '=' → logprob: -12.750120162963867
    5. 'b' → logprob: -14.500120162963867
    6. ' =' → logprob: -16.375120162963867
    7. ' ' → logprob: -16.625120162963867
    8. ' b' → logprob: -17.000120162963867
    9. ',n' → logprob: -17.125120162963867
    10. '0' → logprob: -17.500120162963867

Token 247: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6931508183479309
    2. ' b' → logprob: -0.6931508183479309
    3. '0' → logprob: -13.068150520324707
    4. ' ' → logprob: -14.193150520324707
    5. '    ' → logprob: -14.693150520324707
    6. ',b' → logprob: -15.943150520324707
    7. '	b' → logprob: -16.193151473999023
    8. '<|end|>' → logprob: -16.568151473999023
    9. ' =' → logprob: -16.818151473999023
    10. '=' → logprob: -17.443151473999023

Token 248: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002815693849697709
    2. '=' → logprob: -5.8778157234191895
    3. ',' → logprob: -11.502815246582031
    4. ' ' → logprob: -15.877815246582031
    5. '   ' → logprob: -15.877815246582031
    6. '0' → logprob: -15.877815246582031
    7. ' =
' → logprob: -16.00281524658203
    8. ' =(' → logprob: -16.37781524658203
    9. ')' → logprob: -16.50281524658203
    10. 'def' → logprob: -17.87781524658203

Token 249: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '(' → logprob: -17.000059127807617
    4. '۰' → logprob: -21.250059127807617
    5. '   ' → logprob: -21.375059127807617
    6. ' (' → logprob: -21.500059127807617
    7. '  ' → logprob: -22.875059127807617
    8. ' ' → logprob: -23.875059127807617
    9. '０' → logprob: -24.250059127807617
    10. '[' → logprob: -24.500059127807617

Token 250: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.25
    3. '(' → logprob: -16.0
    4. ' (' → logprob: -23.375
    5. '۰' → logprob: -23.5
    6. '   ' → logprob: -24.625
    7. '[' → logprob: -25.25
    8. '０' → logprob: -25.375
    9. '00' → logprob: -25.625
    10. '  ' → logprob: -25.75

Token 251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0921942703134846e-05
    2. ' ,' → logprob: -11.62501049041748
    3. ' ' → logprob: -13.50001049041748
    4. '1' → logprob: -15.62501049041748
    5. ',n' → logprob: -16.500011444091797
    6. ',b' → logprob: -16.500011444091797
    7. ',
' → logprob: -16.750011444091797
    8. '=' → logprob: -18.000011444091797
    9. '‌,' → logprob: -18.125011444091797
    10. 'def' → logprob: -18.250011444091797

Token 252: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001170225441455841
    2. ' ' → logprob: -6.7511701583862305
    3. '   ' → logprob: -21.126171112060547
    4. '  ' → logprob: -22.001171112060547
    5. ' ' → logprob: -23.001171112060547
    6. '１' → logprob: -24.126171112060547
    7. '```' → logprob: -24.251171112060547
    8. '    ' → logprob: -24.376171112060547
    9. '۱' → logprob: -24.376171112060547
    10. 'def' → logprob: -24.751171112060547

Token 253: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '１' → logprob: -23.625
    4. '۱' → logprob: -24.5
    5. '```' → logprob: -24.625
    6. 'def' → logprob: -24.625
    7. '১' → logprob: -25.5
    8. 'a' → logprob: -25.75
    9. '१' → logprob: -26.125
    10. '=' → logprob: -26.25

Token 254: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49148428440093994
    2. ',' → logprob: -2.3664841651916504
    3. '
' → logprob: -2.3664841651916504
    4. '    
' → logprob: -2.7414841651916504
    5. ' for' → logprob: -2.8664841651916504
    6. '  
' → logprob: -3.4914841651916504
    7. ' 
' → logprob: -4.24148416519165
    8. 'for' → logprob: -4.74148416519165
    9. '<|end|>' → logprob: -4.74148416519165
    10. ' ' → logprob: -5.49148416519165

Token 255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14020273089408875
    2. ' for' → logprob: -2.765202760696411
    3. '
' → logprob: -3.890202760696411
    4. '    
' → logprob: -4.015202522277832
    5. ' 
' → logprob: -4.140202522277832
    6. '    ' → logprob: -5.515202522277832
    7. '  
' → logprob: -5.640202522277832
    8. ' ' → logprob: -5.890202522277832
    9. '   
' → logprob: -7.140202522277832
    10. 'for' → logprob: -7.265202522277832

Token 256: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.034797798842191696
    2. 'for' (adapté à ' for') → logprob: -3.4097979068756104
    3. ' while' → logprob: -7.784797668457031
    4. ' ' → logprob: -7.909797668457031
    5. '   ' → logprob: -8.159797668457031
    6. '    ' → logprob: -10.909797668457031
    7. ' in' → logprob: -11.284797668457031
    8. '    
' → logprob: -11.534797668457031
    9. 'while' → logprob: -11.659797668457031
    10. '	for' → logprob: -11.784797668457031

Token 257: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0020182132720947266
    2. '_' → logprob: -6.377017974853516
    3. ' ' → logprob: -8.252017974853516
    4. ' i' → logprob: -9.877017974853516
    5. ' ‌' → logprob: -13.002017974853516
    6. ' ' → logprob: -13.502017974853516
    7. ' _
' → logprob: -15.627017974853516
    8. ' ​' → logprob: -16.877017974853516
    9. '  ' → logprob: -16.877017974853516
    10. '	' → logprob: -17.252017974853516

Token 258: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004380278754979372
    2. 'in' → logprob: -5.504380226135254
    3. ' ' → logprob: -8.129380226135254
    4. '_' → logprob: -13.004380226135254
    5. ' _' → logprob: -13.254380226135254
    6. 'range' → logprob: -13.629380226135254
    7. ' ' → logprob: -14.754380226135254
    8. 'n' → logprob: -15.004380226135254
    9. '	in' → logprob: -15.129380226135254
    10. 's' → logprob: -15.379380226135254

Token 259: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10020678490400314
    2. ' range' → logprob: -2.3502068519592285
    3. '	range' → logprob: -16.60020637512207
    4. ' ' → logprob: -16.72520637512207
    5. '(range' → logprob: -17.47520637512207
    6. '  ' → logprob: -17.97520637512207
    7. '   ' → logprob: -18.10020637512207
    8. 'rang' → logprob: -18.97520637512207
    9. '    ' → logprob: -19.97520637512207
    10. '_range' → logprob: -20.35020637512207

Token 260: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06334881484508514
    2. 'n' → logprob: -2.8133487701416016
    3. ' n' → logprob: -7.063348770141602
    4. '(' → logprob: -7.563348770141602
    5. '	n' → logprob: -12.938348770141602
    6. ' (' → logprob: -13.063348770141602
    7. '_n' → logprob: -15.688348770141602
    8. '(int' → logprob: -15.688348770141602
    9. 'int' → logprob: -16.4383487701416
    10. ',n' → logprob: -16.6883487701416

Token 261: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1149773821234703
    2. ' ):' → logprob: -2.2399773597717285
    3. ')' → logprob: -6.3649773597717285
    4. '):
' → logprob: -8.114977836608887
    5. ' )' → logprob: -9.364977836608887
    6. ' ):
' → logprob: -10.614977836608887
    7. ' ' → logprob: -12.114977836608887
    8. '-' → logprob: -12.739977836608887
    9. ':' → logprob: -12.739977836608887
    10. '):
' → logprob: -13.114977836608887

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018883081153035164
    2. ' ' → logprob: -4.643883228302002
    3. ' a' → logprob: -5.518883228302002
    4. '   ' → logprob: -5.893883228302002
    5. 'a' → logprob: -6.768883228302002
    6. '<|end|>' → logprob: -7.893883228302002
    7. '    ' → logprob: -8.018882751464844
    8. ' b' → logprob: -8.268882751464844
    9. 'b' → logprob: -9.393882751464844
    10. ',' → logprob: -10.768882751464844

Token 263: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2057754397392273
    2. 'a' (adapté à ' a') → logprob: -1.830775499343872
    3. ' b' → logprob: -4.330775260925293
    4. '    ' → logprob: -4.705775260925293
    5. 'b' → logprob: -6.580775260925293
    6. ' ' → logprob: -7.205775260925293
    7. '   ' → logprob: -7.205775260925293
    8. ' (' → logprob: -7.955775260925293
    9. '(a' → logprob: -8.955775260925293
    10. '	a' → logprob: -9.580775260925293

Token 264: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012009433703497052
    2. ',b' → logprob: -6.751201152801514
    3. ' ,' → logprob: -11.001200675964355
    4. 'b' → logprob: -11.876200675964355
    5. ' b' → logprob: -12.001200675964355
    6. '=' → logprob: -14.501200675964355
    7. ',
' → logprob: -15.251200675964355
    8. '=b' → logprob: -17.251201629638672
    9. '‌,' → logprob: -17.501201629638672
    10. 'a' → logprob: -17.876201629638672

Token 265: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1002068892121315
    2. ' b' → logprob: -2.3502068519592285
    3. '(b' → logprob: -15.350207328796387
    4. ' (' → logprob: -16.97520637512207
    5. 'a' → logprob: -17.47520637512207
    6. '	b' → logprob: -18.22520637512207
    7. ' ' → logprob: -18.72520637512207
    8. ' a' → logprob: -19.47520637512207
    9. '(' → logprob: -19.60020637512207
    10. ',b' → logprob: -20.72520637512207

Token 266: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38068634271621704
    2. ' =' → logprob: -1.6306862831115723
    3. '=' → logprob: -2.1306862831115723
    4. ',b' → logprob: -6.880686283111572
    5. ' ,' → logprob: -7.130686283111572
    6. '=b' → logprob: -9.00568675994873
    7. ' b' → logprob: -10.00568675994873
    8. 'b' → logprob: -10.50568675994873
    9. ' ' → logprob: -12.00568675994873
    10. 'a' → logprob: -12.63068675994873

Token 267: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12692947685718536
    2. ' b' → logprob: -2.126929521560669
    3. '(b' → logprob: -14.00192928314209
    4. ' ' → logprob: -15.25192928314209
    5. '	b' → logprob: -15.37692928314209
    6. '   ' → logprob: -16.251930236816406
    7. ' (' → logprob: -17.626930236816406
    8. '_b' → logprob: -17.876930236816406
    9. '(' → logprob: -18.126930236816406
    10. '    ' → logprob: -18.376930236816406

Token 268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001911432045744732
    2. ',a' → logprob: -9.000190734863281
    3. 'a' → logprob: -10.000190734863281
    4. ' ,' → logprob: -11.500190734863281
    5. '%' → logprob: -11.875190734863281
    6. ' %' → logprob: -13.125190734863281
    7. ' a' → logprob: -13.625190734863281
    8. ',
' → logprob: -14.750190734863281
    9. ' +' → logprob: -15.000190734863281
    10. ' ' → logprob: -15.250190734863281

Token 269: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0001370320824207738
    2. '(' → logprob: -9.375137329101562
    3. ' (' → logprob: -9.875137329101562
    4. '(A' → logprob: -14.875137329101562
    5. 'a' → logprob: -15.375137329101562
    6. '(ai' → logprob: -17.625137329101562
    7. '   ' → logprob: -17.750137329101562
    8. ' ' → logprob: -18.250137329101562
    9. '(u' → logprob: -18.250137329101562
    10. '(
' → logprob: -18.375137329101562

Token 270: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.339278580620885e-06
    2. ' a' → logprob: -13.000001907348633
    3. '(a' → logprob: -16.875001907348633
    4. '	a' → logprob: -18.875001907348633
    5. '_a' → logprob: -21.000001907348633
    6. ')a' → logprob: -22.000001907348633
    7. 'b' → logprob: -22.125001907348633
    8. '   ' → logprob: -22.375001907348633
    9. '[a' → logprob: -22.875001907348633
    10. '"a' → logprob: -23.250001907348633

Token 271: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.37982943654060364
    2. '+' → logprob: -2.0048294067382812
    3. '+a' → logprob: -2.1298294067382812
    4. '+b' → logprob: -3.2548294067382812
    5. 'a' → logprob: -3.7548294067382812
    6. ' a' → logprob: -7.754829406738281
    7. 'b' → logprob: -10.879829406738281
    8. '*a' → logprob: -11.129829406738281
    9. '[a' → logprob: -12.129829406738281
    10. ' *' → logprob: -12.379829406738281

Token 272: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005234121344983578
    2. ' b' → logprob: -5.255234241485596
    3. ' ' → logprob: -16.380233764648438
    4. '	b' → logprob: -16.630233764648438
    5. '   ' → logprob: -17.630233764648438
    6. '  ' → logprob: -19.130233764648438
    7. ')b' → logprob: -19.505233764648438
    8. '    ' → logprob: -20.130233764648438
    9. '_b' → logprob: -20.630233764648438
    10. '     ' → logprob: -21.880233764648438

Token 273: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9981420336989686e-05
    2. ')%' → logprob: -11.250020027160645
    3. ' )' → logprob: -11.875020027160645
    4. '%' → logprob: -17.625019073486328
    5. '）' → logprob: -19.375019073486328
    6. ')
' → logprob: -19.625019073486328
    7. '   ' → logprob: -21.000019073486328
    8. '```' → logprob: -21.125019073486328
    9. '}' → logprob: -21.625019073486328
    10. ']' → logprob: -22.000019073486328

Token 274: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7029905915260315
    2. ')' → logprob: -1.4529905319213867
    3. ' %' → logprob: -2.0779905319213867
    4. ' MOD' → logprob: -2.5779905319213867
    5. 'MOD' → logprob: -2.8279905319213867
    6. ')%' → logprob: -5.202990531921387
    7. '1' → logprob: -6.077990531921387
    8. ' ' → logprob: -6.327990531921387
    9. '```' → logprob: -8.077990531921387
    10. 'b' → logprob: -8.077990531921387

Token 275: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -6.704273118884885e-07
    2. ' MOD' → logprob: -14.250000953674316
    3. 'MO' → logprob: -19.875
    4. '   ' → logprob: -21.75
    5. '(' → logprob: -22.0
    6. '_MOD' → logprob: -22.125
    7. '(M' → logprob: -22.125
    8. ' ' → logprob: -22.25
    9. 'MD' → logprob: -23.125
    10. '.MOD' → logprob: -23.125

Token 276: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011400878429412842
    2. ' return' → logprob: -5.5114006996154785
    3. '
' → logprob: -5.6364006996154785
    4. 'return' → logprob: -5.7614006996154785
    5. 'a' → logprob: -8.511401176452637
    6. '    
' → logprob: -8.886401176452637
    7. '	return' → logprob: -9.261401176452637
    8. '<|end|>' → logprob: -10.136401176452637
    9. ':return' → logprob: -10.136401176452637
    10. '  
' → logprob: -10.886401176452637

Token 277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006728991866111755
    2. 'return' → logprob: -5.2567291259765625
    3. ' return' → logprob: -6.5067291259765625
    4. '	return' → logprob: -14.756729125976562
    5. ' ' → logprob: -15.381729125976562
    6. ':return' → logprob: -17.006729125976562
    7. '       ' → logprob: -17.131729125976562
    8. '    
' → logprob: -17.381729125976562
    9. '  ' → logprob: -18.256729125976562
    10. '
' → logprob: -19.006729125976562

Token 278: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20208317041397095
    2. ' return' → logprob: -1.7020831108093262
    3. '   ' → logprob: -7.327083110809326
    4. ' ' → logprob: -11.702083587646484
    5. '	return' → logprob: -12.827083587646484
    6. ':return' → logprob: -14.952083587646484
    7. 'a' → logprob: -15.077083587646484
    8. 'eturn' → logprob: -15.452083587646484
    9. '_return' → logprob: -16.327083587646484
    10. '  ' → logprob: -16.327083587646484

Token 279: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.5048530030981055e-06
    2. ' a' → logprob: -13.500001907348633
    3. '	a' → logprob: -22.250001907348633
    4. '_a' → logprob: -23.875001907348633
    5. '   ' → logprob: -24.625001907348633
    6. '(a' → logprob: -24.875001907348633
    7. ' ' → logprob: -25.000001907348633
    8. ')a' → logprob: -25.875001907348633
    9. 'а' → logprob: -26.250001907348633
    10. '#a' → logprob: -26.500001907348633

Token 280: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6219936609268188
    2. '
' → logprob: -1.4969936609268188
    3. 'result' → logprob: -1.4969936609268188
    4. '(' → logprob: -6.121993541717529
    5. '  
' → logprob: -6.121993541717529
    6. ' result' → logprob: -6.246993541717529
    7. '

' → logprob: -6.621993541717529
    8. '(
' → logprob: -6.746993541717529
    9. 'fib' → logprob: -6.746993541717529
    10. '(result' → logprob: -6.996993541717529

Token 281: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.607391408877447e-05
    2. 'result' → logprob: -10.250036239624023
    3. ' print' → logprob: -15.125036239624023
    4. 'output' → logprob: -16.250036239624023
    5. '```' → logprob: -16.250036239624023
    6. '
' → logprob: -16.500036239624023
    7. '(print' → logprob: -16.875036239624023
    8. '#print' → logprob: -17.000036239624023
    9. 'answer' → logprob: -17.500036239624023
    10. '#' → logprob: -18.125036239624023

Token 282: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.006715728435665369
    2. '(' → logprob: -5.006715774536133
    3. 'fib' → logprob: -15.756715774536133
    4. '(F' → logprob: -16.381715774536133
    5. '((' → logprob: -16.631715774536133
    6. '(
' → logprob: -16.756715774536133
    7. ' (' → logprob: -17.881715774536133
    8. '(fid' → logprob: -19.006715774536133
    9. '(

' → logprob: -19.131715774536133
    10. '(pow' → logprob: -19.381715774536133

Token 283: 'ib' (ID: 526)
  Prédit: 'ib'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ib' → logprob: -2.117345684382599e-05
    2. 'fib' → logprob: -11.375020980834961
    3. 'b' → logprob: -12.250020980834961
    4. 'i' → logprob: -12.500020980834961
    5. '(K' → logprob: -15.125020980834961
    6. '(' → logprob: -15.375020980834961
    7. 'ob' → logprob: -16.37502098083496
    8. 'ibo' → logprob: -16.62502098083496
    9. 'rib' → logprob: -16.62502098083496
    10. '(k' → logprob: -17.00002098083496

Token 284: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -7.636475493200123e-05
    2. '(' → logprob: -9.500076293945312
    3. '((' → logprob: -14.125076293945312
    4. '(k' → logprob: -14.875076293945312
    5. ')' → logprob: -15.750076293945312
    6. 'K' → logprob: -16.125076293945312
    7. ')(' → logprob: -17.000076293945312
    8. '(
' → logprob: -17.000076293945312
    9. ' (' → logprob: -17.250076293945312
    10. '(KERN' → logprob: -18.250076293945312

Token 285: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.627176768844947e-05
    2. ' +' → logprob: -9.250096321105957
    3. '+
' → logprob: -16.25009536743164
    4. ')' → logprob: -17.87509536743164
    5. ')+' → logprob: -18.00009536743164
    6. '))' → logprob: -18.37509536743164
    7. '+)' → logprob: -19.12509536743164
    8. '()+' → logprob: -19.25009536743164
    9. '1' → logprob: -20.12509536743164
    10. '＋' → logprob: -20.62509536743164

Token 286: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. ')' → logprob: -21.125
    4. '   ' → logprob: -21.25
    5. '```' → logprob: -21.75
    6. '１' → logprob: -21.875
    7. '۱' → logprob: -21.875
    8. '2' → logprob: -22.125
    9. '  ' → logprob: -23.625
    10. '१' → logprob: -23.625

Token 287: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3132631778717041
    2. '))' → logprob: -1.313263177871704
    3. ')))' → logprob: -14.313262939453125
    4. ' )' → logprob: -14.563262939453125
    5. ')}' → logprob: -15.813262939453125
    6. ')`' → logprob: -16.313262939453125
    7. ')")' → logprob: -16.938262939453125
    8. ')
' → logprob: -17.438262939453125
    9. '})' → logprob: -17.688262939453125
    10. ' ))' → logprob: -17.813262939453125

Token 288: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. '))' → logprob: -13.875001907348633
    3. ' )' → logprob: -14.000001907348633
    4. ')`' → logprob: -17.875001907348633
    5. ')
' → logprob: -18.000001907348633
    6. ')}' → logprob: -19.625001907348633
    7. ')**' → logprob: -20.750001907348633
    8. '())' → logprob: -20.875001907348633
    9. ')#' → logprob: -21.250001907348633
    10. '`)' → logprob: -21.250001907348633

Token 289: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00012368128227535635
    2. ' MOD' → logprob: -9.000123977661133
    3. '(M' → logprob: -16.625123977661133
    4. '_MOD' → logprob: -16.625123977661133
    5. '.MOD' → logprob: -18.750123977661133
    6. '(' → logprob: -19.500123977661133
    7. 'MO' → logprob: -19.750123977661133
    8. '(Mod' → logprob: -19.875123977661133
    9. '100' → logprob: -20.625123977661133
    10. '(mod' → logprob: -20.875123977661133

Token 290: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -14.75
    3. '))' → logprob: -17.625
    4. ')
' → logprob: -18.375
    5. ')`' → logprob: -18.375
    6. ')}' → logprob: -21.5
    7. '),' → logprob: -21.75
    8. '）' → logprob: -21.75
    9. '')' → logprob: -21.875
    10. ')**' → logprob: -22.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 288
Tokens correctement prédits (1ère position, stricte): 97
Tokens correctement prédits (1ère position, avec adaptation): 100
Tokens correctement prédits (top 10): 209
Précision stricte (1ère position): 33.68%
Précision adaptée (1ère position): 34.72%
Précision (top 10): 72.57%
================================================================================
