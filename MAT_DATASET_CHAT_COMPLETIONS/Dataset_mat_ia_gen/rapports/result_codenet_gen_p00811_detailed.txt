================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

# Fonction pour générer la liste des nombres premiers jusqu'à une limite max
def sieve_of_eratosthenes(max_limit):
    # Initialisation d'une liste pour marquer les nombres premiers
    sieve = [True] * (max_limit + 1)
    sieve[0], sieve[1] = False, False  # 0 et 1 ne sont pas premiers
    for i in range(2, int(math.sqrt(max_limit)) + 1):
        if sieve[i]:
            for j in range(i*i, max_limit + 1, i):
                sieve[j] = False
    # Retourner la liste des nombres premiers sous forme d'une liste
    return [num for num, is_prime in enumerate(sieve) if is_prime]

# Lecture et traitement de chaque ligne d'entrée jusqu'à ce que la ligne "0 0 0" soit rencontrée
def main():
    # Limite maximale pour m
    MAX_M = 100000
    # Pré-calcul des nombres premiers jusqu'à MAX_M pour éviter de recalculer à chaque cas
    primes = sieve_of_eratosthenes(MAX_M)

    # Pour un accès rapide, transformation en set
    primes_set = set(primes)

    for line in sys.stdin:
        if line.strip() == "0 0 0":
            break
        m, a, b = map(int, line.strip().split())

        # Ratio minimal a/b (fraction)
        min_ratio = a / b  # 0 < a/b <= 1

        # La plupart des solutions utilisent p (width) <= q (height) ou inversement.
        # Puisque le ratio p/q est entre a/b et 1, on a p/q <= 1 => p <= q.
        # Donc on cherchera p et q avec p <= q.

        # On cherche les p et q premiers tels que:
        # p * q <= m
        # min_ratio <= p/q <= 1
        # p et q premiers
        # maximiser p * q.

        max_area = 0
        best_p = 2
        best_q = 2

        # Parcourir q dans la liste des premiers plus petits ou égaux à m
        # q >= p car p/q <= 1 avec p <= q
        # On parcourt q en ordre décroissant car on cherche un max d'aire
        # pour plus d'efficacité

        # Trouvons les indices dans primes pour q <= m
        # On parcourt q décroissant pour trouver max area rapidement
        # On arrêtera la boucle quand q*q < max_area car q*q est max possible avec p=q

        idx_q_max = 0
        # Trouve l'indice maximum de q <= m
        # primes est trié croissant
        # on utilise une recherche binaire
        left, right = 0, len(primes)-1
        while left <= right:
            mid = (left + right) // 2
            if primes[mid] <= m:
                idx_q_max = mid
                left = mid + 1
            else:
                right = mid -1

        # Parcourir q décroissant
        for i in range(idx_q_max, -1, -1):
            q = primes[i]
            # Si q*q < max_area connu, on peut arrêter la boucle
            if q * q < max_area:
                break
            # Calculer borne minimale pour p en fonction du ratio et de p <= q
            # On a a/b <= p/q <= 1 => p >= a*q/b
            p_min = math.ceil(min_ratio * q)
            # Chercher parmi les premiers p tel que:
            # p <= q (car p/q <= 1)
            # p >= p_min
            # p premier
            # p*q <= m
            # la plus grande aire possible.
            # On parcours p décroissant de q à p_min pour maximiser p*q
            # p doit être premier
            found_p = None
            for j in range(i, -1, -1):  # p dans les premiers <= q (indice i) en décroissant
                p = primes[j]
                if p < p_min:
                    break
                area = p * q
                if area <= m:
                    # area déjà <= m, vérifier si meilleur
                    if area > max_area:
                        max_area = area
                        best_p = p
                        best_q = q
                    break  # on a trouvé le plus grand p possible pour ce q
        print(best_p, best_q)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20064200460910797
    2. '.' → logprob: -2.4506421089172363
    3. '<|end|>' → logprob: -2.8256421089172363
    4. '\' → logprob: -4.700642108917236
    5. 'newline' → logprob: -5.075642108917236
    6. 'import' → logprob: -5.075642108917236
    7. '
' → logprob: -5.700642108917236
    8. '' → logprob: -5.825642108917236
    9. '<|end|>' → logprob: -5.825642108917236
    10. '\r' → logprob: -6.200642108917236

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0015031944494694471
    2. 'os' → logprob: -6.501502990722656
    3. '"os' → logprob: -14.626502990722656
    4. ' re' → logprob: -16.251502990722656
    5. ' math' → logprob: -16.251502990722656
    6. '_os' → logprob: -16.251502990722656
    7. '	os' → logprob: -16.501502990722656
    8. ' json' → logprob: -17.126502990722656
    9. ' io' → logprob: -18.126502990722656
    10. ' argparse' → logprob: -19.001502990722656

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2597796320915222
    2. 'import' → logprob: -2.634779691696167
    3. '\n' → logprob: -2.759779691696167
    4. '\' → logprob: -3.259779691696167
    5. '```' → logprob: -4.009779453277588
    6. '
' → logprob: -4.134779453277588
    7. '<|end|>' → logprob: -4.759779453277588
    8. ',' → logprob: -5.384779453277588
    9. '

' → logprob: -5.759779453277588
    10. '<|end|>' → logprob: -7.009779453277588

Token 6: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2775901257991791
    2. '```' → logprob: -2.777590036392212
    3. '\' → logprob: -2.902590036392212
    4. '\n' → logprob: -3.027590036392212
    5. 'import' → logprob: -3.152590036392212
    6. ',' → logprob: -4.652590274810791
    7. 'def' → logprob: -5.527590274810791
    8. '#' → logprob: -5.777590274810791
    9. '*' → logprob: -5.902590274810791
    10. '`' → logprob: -6.027590274810791

Token 7: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1357116997241974
    2. '#' → logprob: -2.260711669921875
    3. 'import' → logprob: -5.010711669921875
    4. ' def' → logprob: -5.010711669921875
    5. '```' → logprob: -7.010711669921875
    6. '\' → logprob: -7.135711669921875
    7. 'print' → logprob: -7.385711669921875
    8. '.' → logprob: -7.385711669921875
    9. 'factor' → logprob: -7.385711669921875
    10. ' #' → logprob: -7.385711669921875

Token 8: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6518213748931885
    2. ' de' → logprob: -1.7768213748931885
    3. ' def' → logprob: -1.9018213748931885
    4. '_' → logprob: -2.1518213748931885
    5. 'def' → logprob: -3.4018213748931885
    6. ' _' → logprob: -6.526821136474609
    7. ' ' → logprob: -7.276821136474609
    8. '_de' → logprob: -7.276821136474609
    9. '<|end|>' → logprob: -7.276821136474609
    10. ' calculate' → logprob: -7.401821136474609

Token 9: ' génér' (ID: 18939)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.2583593428134918
    2. 'calcul' → logprob: -1.5083593130111694
    3. 'cal' → logprob: -5.258359432220459
    4. ' convertir' → logprob: -8.3833589553833
    5. 'Calcul' → logprob: -8.8833589553833
    6. ' calc' → logprob: -9.2583589553833
    7. ' le' → logprob: -9.3833589553833
    8. ' calcular' → logprob: -9.3833589553833
    9. ' afficher' → logprob: -9.6333589553833
    10. 'le' → logprob: -10.1333589553833

Token 10: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.014650908298790455
    2. 'rer' → logprob: -4.264650821685791
    3. 'r' → logprob: -8.13965129852295
    4. 'érer' → logprob: -8.63965129852295
    5. 'ter' → logprob: -11.88965129852295
    6. 'erer' → logprob: -11.88965129852295
    7. 'ner' → logprob: -13.88965129852295
    8. '#' → logprob: -14.13965129852295
    9. 'ler' → logprob: -14.13965129852295
    10. 'trer' → logprob: -14.38965129852295

Token 11: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3958549201488495
    2. ' un' → logprob: -1.3958549499511719
    3. ' des' → logprob: -3.645854949951172
    4. ' une' → logprob: -3.645854949951172
    5. '_un' → logprob: -4.395854949951172
    6. ' ' → logprob: -5.020854949951172
    7. '_des' → logprob: -6.145854949951172
    8. '_random' → logprob: -6.770854949951172
    9. '_le' → logprob: -7.270854949951172
    10. ' la' → logprob: -7.520854949951172

Token 12: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -1.4529461860656738
    2. 's' → logprob: -1.7029461860656738
    3. 'liste' → logprob: -1.7029461860656738
    4. '_' → logprob: -2.202946186065674
    5. 'suite' → logprob: -2.702946186065674
    6. 'n' → logprob: -2.952946186065674
    7. ' prochaine' → logprob: -2.952946186065674
    8. 'f' → logprob: -3.702946186065674
    9. ' suite' → logprob: -3.952946186065674
    10. 'prem' → logprob: -4.202946186065674

Token 13: ' des' (ID: 731)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.38425731658935547
    2. '_' → logprob: -1.7592573165893555
    3. 'des' → logprob: -2.8842573165893555
    4. '_des' → logprob: -3.8842573165893555
    5. 's' → logprob: -4.0092573165893555
    6. ' des' → logprob: -4.6342573165893555
    7. 'de' → logprob: -4.6342573165893555
    8. ' ' → logprob: -4.7592573165893555
    9. 'd' → logprob: -5.1342573165893555
    10. ' de' → logprob: -5.7592573165893555

Token 14: ' nombres' (ID: 76205)
  Prédit: ' nombres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.13050517439842224
    2. 'n' → logprob: -2.505505084991455
    3. 'prem' → logprob: -4.130505084991455
    4. ' premiers' → logprob: -4.380505084991455
    5. 'div' → logprob: -6.130505084991455
    6. 'nombre' → logprob: -6.255505084991455
    7. 'prime' → logprob: -6.255505084991455
    8. 'pr' → logprob: -6.380505084991455
    9. '_n' → logprob: -6.630505084991455
    10. 'fact' → logprob: -7.755505084991455

Token 15: ' premiers' (ID: 59140)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.19016671180725098
    2. ' premiers' → logprob: -2.065166711807251
    3. 'pr' → logprob: -3.190166711807251
    4. 'prime' → logprob: -6.690166473388672
    5. '_pr' → logprob: -6.690166473388672
    6. 'ent' → logprob: -7.190166473388672
    7. ' premier' → logprob: -7.940166473388672
    8. ' primo' → logprob: -8.315166473388672
    9. '_prime' → logprob: -8.315166473388672
    10. 'div' → logprob: -8.565166473388672

Token 16: ' jusqu' (ID: 21961)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08785491436719894
    2. 's' → logprob: -2.7128548622131348
    3. ' def' → logprob: -4.712854862213135
    4. '(' → logprob: -6.087854862213135
    5. ':' → logprob: -6.337854862213135
    6. '```' → logprob: -6.712854862213135
    7. ' :' → logprob: -6.837854862213135
    8. '(s' → logprob: -7.337854862213135
    9. ' ' → logprob: -7.337854862213135
    10. 'de' → logprob: -8.462855339050293

Token 17: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.056282930076122284
    2. 'à' → logprob: -3.4312829971313477
    3. ''au' → logprob: -4.681282997131348
    4. 'au' → logprob: -5.056282997131348
    5. ' à' → logprob: -5.931282997131348
    6. '’à' → logprob: -6.181282997131348
    7. 'a' → logprob: -6.681282997131348
    8. ''' → logprob: -7.556282997131348
    9. ''a' → logprob: -9.431282997131348
    10. ' au' → logprob: -10.306282997131348

Token 18: ' une' (ID: 2463)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.36792027950286865
    2. ' n' → logprob: -1.2429202795028687
    3. ' un' → logprob: -5.117920398712158
    4. 'un' → logprob: -5.242920398712158
    5. ' ' → logprob: -5.492920398712158
    6. ' une' → logprob: -6.492920398712158
    7. 'une' → logprob: -6.992920398712158
    8. ''' → logprob: -7.992920398712158
    9. '```' → logprob: -8.367919921875
    10. ''un' → logprob: -8.492919921875

Token 19: ' limite' (ID: 48939)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009755381383001804
    2. '_' → logprob: -5.384755611419678
    3. 'space' → logprob: -5.884755611419678
    4. ' espace' → logprob: -6.759755611419678
    5. ' space' → logprob: -7.759755611419678
    6. '_space' → logprob: -8.63475513458252
    7. 'n' → logprob: -8.63475513458252
    8. '  ' → logprob: -9.50975513458252
    9. ' ' → logprob: -10.25975513458252
    10. ' given' → logprob: -10.50975513458252

Token 20: ' max' (ID: 2999)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0021866646129637957
    2. ':' → logprob: -7.2521867752075195
    3. '```' → logprob: -7.2521867752075195
    4. ' def' → logprob: -8.12718677520752
    5. '
' → logprob: -8.50218677520752
    6. '(' → logprob: -9.62718677520752
    7. ' :' → logprob: -10.12718677520752
    8. ':
' → logprob: -10.25218677520752
    9. '\' → logprob: -10.50218677520752
    10. ':def' → logprob: -10.62718677520752

Token 21: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0013759488938376307
    2. ':' → logprob: -7.376376152038574
    3. '```' → logprob: -8.001376152038574
    4. '
' → logprob: -8.626376152038574
    5. ':def' → logprob: -9.626376152038574
    6. '\' → logprob: -9.876376152038574
    7. 'd' → logprob: -10.001376152038574
    8. ' def' → logprob: -10.376376152038574
    9. 'de' → logprob: -10.876376152038574
    10. '``' → logprob: -11.876376152038574

Token 22: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003751423500943929
    2. ':' → logprob: -8.500374794006348
    3. '```' → logprob: -9.125374794006348
    4. ':def' → logprob: -10.500374794006348
    5. ' def' → logprob: -11.000374794006348
    6. 'de' → logprob: -11.750374794006348
    7. '\' → logprob: -12.625374794006348
    8. '
' → logprob: -12.750374794006348
    9. 'd' → logprob: -13.250374794006348
    10. '``' → logprob: -13.875374794006348

Token 23: ' sieve' (ID: 142781)
  Prédit: ' generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' generate' → logprob: -0.02584618516266346
    2. ' primes' → logprob: -4.275846004486084
    3. 'generate' → logprob: -5.025846004486084
    4. ' prime' → logprob: -6.400846004486084
    5. ' sieve' → logprob: -6.650846004486084
    6. ' gener' → logprob: -6.900846004486084
    7. ' get' → logprob: -7.775846004486084
    8. ' generar' → logprob: -9.025846481323242
    9. ' génér' → logprob: -9.150846481323242
    10. 'gener' → logprob: -9.150846481323242

Token 24: '_of' (ID: 8023)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.077250175178051
    2. '(' → logprob: -2.9522502422332764
    3. '_(' → logprob: -3.8272502422332764
    4. '(n' → logprob: -9.452250480651855
    5. '_of' → logprob: -9.702250480651855
    6. '_s' → logprob: -9.827250480651855
    7. ' (' → logprob: -10.202250480651855
    8. '(max' → logprob: -11.452250480651855
    9. '(s' → logprob: -11.702250480651855
    10. '```' → logprob: -11.827250480651855

Token 25: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9958460330963135
    2. 'erat' → logprob: -1.1208460330963135
    3. ' erat' → logprob: -1.4958460330963135
    4. 'E' → logprob: -2.8708460330963135
    5. '_er' → logprob: -4.370845794677734
    6. 'er' → logprob: -5.495845794677734
    7. 'Er' → logprob: -5.495845794677734
    8. ' Er' → logprob: -6.870845794677734
    9. '_s' → logprob: -7.495845794677734
    10. 'eras' → logprob: -7.870845794677734

Token 26: 'erat' (ID: 73282)
  Prédit: 'erat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erat' → logprob: -0.002612997777760029
    2. 'er' → logprob: -6.127613067626953
    3. 'eras' → logprob: -8.377613067626953
    4. 'erad' → logprob: -9.752613067626953
    5. 'erit' → logprob: -10.627613067626953
    6. 'E' → logprob: -10.877613067626953
    7. 'erd' → logprob: -11.127613067626953
    8. 's' → logprob: -11.127613067626953
    9. 'eris' → logprob: -11.127613067626953
    10. ' erat' → logprob: -11.252613067626953

Token 27: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.003252342576161027
    2. 'osten' → logprob: -6.2532525062561035
    3. 'os' → logprob: -6.7532525062561035
    4. ' ost' → logprob: -10.003252029418945
    5. 'osen' → logprob: -10.378252029418945
    6. 'oston' → logprob: -10.878252029418945
    7. 'osest' → logprob: -11.003252029418945
    8. 'o' → logprob: -11.628252029418945
    9. '```' → logprob: -12.003252029418945
    10. 'oste' → logprob: -12.128252029418945

Token 28: 'hen' (ID: 5447)
  Prédit: 'ost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.3968905806541443
    2. 'hen' → logprob: -1.146890640258789
    3. 'h' → logprob: -4.771890640258789
    4. 'o' → logprob: -7.896890640258789
    5. 'osten' → logprob: -9.021890640258789
    6. 'oth' → logprob: -9.021890640258789
    7. '```' → logprob: -9.146890640258789
    8. 'ophen' → logprob: -9.396890640258789
    9. 'phen' → logprob: -9.521890640258789
    10. 'enes' → logprob: -9.771890640258789

Token 29: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -2.816093228830141e-06
    2. 's' → logprob: -14.12500286102295
    3. 'e' → logprob: -14.37500286102295
    4. '#' → logprob: -14.62500286102295
    5. '`' → logprob: -14.62500286102295
    6. '```' → logprob: -14.75000286102295
    7. '``' → logprob: -15.87500286102295
    8. '_' → logprob: -17.375001907348633
    9. '__' → logprob: -18.250001907348633
    10. ' 

' → logprob: -18.625001907348633

Token 30: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001625379954930395
    2. ' (' → logprob: -9.250162124633789
    3. '("("' → logprob: -10.625162124633789
    4. '(n' → logprob: -11.625162124633789
    5. '_' → logprob: -11.750162124633789
    6. '('' → logprob: -12.250162124633789
    7. '```' → logprob: -12.750162124633789
    8. '(
' → logprob: -12.750162124633789
    9. '(`' → logprob: -13.750162124633789
    10. '(

' → logprob: -13.750162124633789

Token 31: '_limit' (ID: 34361)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3276619017124176
    2. '_)' → logprob: -1.8276618719100952
    3. ')' → logprob: -2.2026619911193848
    4. '):' → logprob: -5.702661991119385
    5. ' )' → logprob: -6.702661991119385
    6. '_number' → logprob: -7.202661991119385
    7. ')_' → logprob: -7.327661991119385
    8. '=' → logprob: -7.577661991119385
    9. '_numbers' → logprob: -8.577661514282227
    10. '_num' → logprob: -8.577661514282227

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0029364600777626038
    2. ')' → logprob: -6.127936363220215
    3. ' ):' → logprob: -7.252936363220215
    4. ':' → logprob: -10.252936363220215
    5. '=' → logprob: -13.127936363220215
    6. ' :' → logprob: -13.252936363220215
    7. '):
' → logprob: -13.627936363220215
    8. ' )' → logprob: -13.877936363220215
    9. ',' → logprob: -14.752936363220215
    10. ')：' → logprob: -15.002936363220215

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10977795720100403
    2. ':' → logprob: -2.3597779273986816
    3. '```' → logprob: -5.484777927398682
    4. ':
' → logprob: -6.859777927398682
    5. '    ' → logprob: -6.984777927398682
    6. '    
' → logprob: -7.109777927398682
    7. ' :' → logprob: -7.609777927398682
    8. ' ' → logprob: -7.609777927398682
    9. '   
' → logprob: -7.984777927398682
    10. '  
' → logprob: -8.35977840423584

Token 34: ' #' (ID: 1069)
  Prédit: ' primes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.15309010446071625
    2. '   ' → logprob: -2.153090000152588
    3. ' prime' → logprob: -4.653090000152588
    4. '    ' → logprob: -5.653090000152588
    5. ' sieve' → logprob: -5.778090000152588
    6. ' max' → logprob: -6.028090000152588
    7. ' ' → logprob: -6.278090000152588
    8. ' n' → logprob: -6.278090000152588
    9. ' numbers' → logprob: -7.403090000152588
    10. 'n' → logprob: -7.403090000152588

Token 35: ' Initial' (ID: 9209)
  Prédit: ' primes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.4016323685646057
    2. ' sieve' → logprob: -1.401632308959961
    3. '   ' → logprob: -3.651632308959961
    4. ' prime' → logprob: -4.151632308959961
    5. ' limit' → logprob: -4.276632308959961
    6. ' numbers' → logprob: -4.651632308959961
    7. ' max' → logprob: -5.526632308959961
    8. 'pr' → logprob: -5.776632308959961
    9. ' n' → logprob: -5.901632308959961
    10. ' size' → logprob: -5.901632308959961

Token 36: 'isation' (ID: 6993)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.1393614262342453
    2. 'izing' → logprob: -2.3893613815307617
    3. 'izer' → logprob: -4.264361381530762
    4. 'iser' → logprob: -4.639361381530762
    5. 'ization' → logprob: -5.764361381530762
    6. 'ized' → logprob: -6.139361381530762
    7. 'e' → logprob: -6.264361381530762
    8. 'is' → logprob: -6.639361381530762
    9. 'er' → logprob: -6.764361381530762
    10. '_' → logprob: -6.764361381530762

Token 37: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8243399858474731
    2. '   ' → logprob: -1.1993399858474731
    3. '    ' → logprob: -3.0743398666381836
    4. ' des' → logprob: -3.0743398666381836
    5. '[' → logprob: -3.5743398666381836
    6. '[]' → logprob: -3.6993398666381836
    7. ' list' → logprob: -4.074339866638184
    8. ' de' → logprob: -4.199339866638184
    9. ' of' → logprob: -4.324339866638184
    10. ' array' → logprob: -4.699339866638184

Token 38: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.41268905997276306
    2. ''une' → logprob: -1.6626890897750854
    3. ''un' → logprob: -2.662688970565796
    4. '[' → logprob: -4.037689208984375
    5. '[]' → logprob: -4.037689208984375
    6. ''' → logprob: -4.037689208984375
    7. 'a' → logprob: -4.787689208984375
    8. 'u' → logprob: -5.662689208984375
    9. '_' → logprob: -5.912689208984375
    10. 'une' → logprob: -6.037689208984375

Token 39: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.29266873002052307
    2. 'liste' → logprob: -2.4176688194274902
    3. '[' → logprob: -2.5426688194274902
    4. ' ' → logprob: -2.7926688194274902
    5. ' list' → logprob: -4.41766881942749
    6. ' [' → logprob: -5.16766881942749
    7. 'list' → logprob: -5.41766881942749
    8. '   ' → logprob: -7.66766881942749
    9. ' boolean' → logprob: -8.167668342590332
    10. ' lista' → logprob: -8.292668342590332

Token 40: ' pour' (ID: 1930)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02893298678100109
    2. ' des' → logprob: -4.778933048248291
    3. '[]' → logprob: -5.278933048248291
    4. ' de' → logprob: -5.403933048248291
    5. ' of' → logprob: -5.528933048248291
    6. ' [' → logprob: -5.778933048248291
    7. 'des' → logprob: -7.528933048248291
    8. '```' → logprob: -7.528933048248291
    9. '   ' → logprob: -7.778933048248291
    10. 'de' → logprob: -7.903933048248291

Token 41: ' mar' (ID: 2674)
  Prédit: ' mar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mar' → logprob: -0.010573627427220345
    2. ' mark' → logprob: -6.010573863983154
    3. ' représ' → logprob: -6.010573863983154
    4. 'mar' → logprob: -6.385573863983154
    5. ' stock' → logprob: -6.510573863983154
    6. 'mark' → logprob: -6.885573863983154
    7. ' True' → logprob: -8.135573387145996
    8. ' represent' → logprob: -8.635573387145996
    9. ' ind' → logprob: -9.135573387145996
    10. ' les' → logprob: -9.135573387145996

Token 42: 'quer' (ID: 8054)
  Prédit: 'quer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quer' → logprob: -0.0008140355930663645
    2. 'qu' → logprob: -7.625813961029053
    3. 'q' → logprob: -9.000814437866211
    4. '-' → logprob: -9.125814437866211
    5. 'que' → logprob: -10.375814437866211
    6. 'ker' → logprob: -10.500814437866211
    7. '	' → logprob: -10.875814437866211
    8. '[' → logprob: -11.875814437866211
    9. '   ' → logprob: -13.375814437866211
    10. '|' → logprob: -14.125814437866211

Token 43: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.1780005246400833
    2. ' ' → logprob: -2.0530004501342773
    3. ' True' → logprob: -3.8030004501342773
    4. 'les' → logprob: -5.553000450134277
    5. 'True' → logprob: -5.803000450134277
    6. '[' → logprob: -6.678000450134277
    7. ' la' → logprob: -7.178000450134277
    8. '```' → logprob: -7.678000450134277
    9. ' l' → logprob: -7.928000450134277
    10. '   ' → logprob: -8.053000450134277

Token 44: ' nombres' (ID: 76205)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5094454884529114
    2. ' False' → logprob: -1.2594454288482666
    3. ' nombres' → logprob: -2.5094454288482666
    4. 'False' → logprob: -4.509445667266846
    5. ' premiers' → logprob: -5.134445667266846
    6. 'True' → logprob: -5.384445667266846
    7. ' ' → logprob: -5.634445667266846
    8. ' primes' → logprob: -6.009445667266846
    9. ' composite' → logprob: -6.509445667266846
    10. ' numbers' → logprob: -7.134445667266846

Token 45: ' premiers' (ID: 59140)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -1.4275323152542114
    2. '[' → logprob: -1.5525323152542114
    3. '   ' → logprob: -1.6775323152542114
    4. ' ' → logprob: -2.052532196044922
    5. ' non' → logprob: -3.302532196044922
    6. ' primes' → logprob: -3.427532196044922
    7. ' premiers' → logprob: -3.552532196044922
    8. 'is' → logprob: -3.552532196044922
    9. ' False' → logprob: -3.802532196044922
    10. 'True' → logprob: -4.677532196044922

Token 46: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2649144232273102
    2. ' ' → logprob: -2.0149145126342773
    3. '   ' → logprob: -3.7649145126342773
    4. '```' → logprob: -3.7649145126342773
    5. 's' → logprob: -4.514914512634277
    6. ' =' → logprob: -5.014914512634277
    7. '[]' → logprob: -5.639914512634277
    8. ':' → logprob: -5.639914512634277
    9. ',' → logprob: -5.764914512634277
    10. ' primes' → logprob: -5.764914512634277

Token 47: '   ' (ID: 271)
  Prédit: ' primes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.3281634747982025
    2. '   ' → logprob: -2.0781633853912354
    3. ' prime' → logprob: -2.7031633853912354
    4. 's' → logprob: -4.0781636238098145
    5. ' is' → logprob: -4.2031636238098145
    6. ' sieve' → logprob: -4.5781636238098145
    7. '[' → logprob: -4.7031636238098145
    8. 'is' → logprob: -4.7031636238098145
    9. 'prime' → logprob: -4.8281636238098145
    10. ' ' → logprob: -5.0781636238098145

Token 48: ' sieve' (ID: 142781)
  Prédit: ' primes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.1728975921869278
    2. ' prime' → logprob: -2.5478975772857666
    3. ' is' → logprob: -3.4228975772857666
    4. 'prime' → logprob: -3.9228975772857666
    5. ' sieve' → logprob: -4.047897815704346
    6. '   ' → logprob: -5.422897815704346
    7. 'is' → logprob: -5.672897815704346
    8. 'pr' → logprob: -6.047897815704346
    9. ' primal' → logprob: -8.422897338867188
    10. 's' → logprob: -9.672897338867188

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00010127831774298102
    2. '=' → logprob: -9.500101089477539
    3. '[' → logprob: -11.500101089477539
    4. ' =[' → logprob: -11.750101089477539
    5. ' ' → logprob: -12.250101089477539
    6. '=[' → logprob: -13.750101089477539
    7. '   ' → logprob: -13.875101089477539
    8. '[:]' → logprob: -14.250101089477539
    9. '	' → logprob: -15.375101089477539
    10. '  ' → logprob: -15.875101089477539

Token 50: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.1269458532333374
    2. '[' → logprob: -2.126945972442627
    3. ' ' → logprob: -12.001945495605469
    4. '[s' → logprob: -13.376945495605469
    5. '[n' → logprob: -13.501945495605469
    6. ' ' → logprob: -13.876945495605469
    7. '[start' → logprob: -13.876945495605469
    8. '[max' → logprob: -14.001945495605469
    9. '   ' → logprob: -14.376945495605469
    10. '[new' → logprob: -14.626945495605469

Token 51: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.5759413838386536
    2. ' True' → logprob: -0.8259413838386536
    3. '(True' → logprob: -13.32594108581543
    4. '   ' → logprob: -15.95094108581543
    5. 'False' → logprob: -16.07594108581543
    6. '    ' → logprob: -17.57594108581543
    7. 'Tr' → logprob: -17.70094108581543
    8. ' Tru' → logprob: -18.20094108581543
    9. '=True' → logprob: -18.32594108581543
    10. '.True' → logprob: -18.32594108581543

Token 52: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014250123873353004
    2. ' ]' → logprob: -4.7642502784729
    3. ' for' → logprob: -5.3892502784729
    4. ',' → logprob: -7.1392502784729
    5. ' ' → logprob: -9.389249801635742
    6. '[' → logprob: -9.389249801635742
    7. 'for' → logprob: -10.264249801635742
    8. ']*' → logprob: -11.014249801635742
    9. '   ' → logprob: -11.889249801635742
    10. '<|end|>' → logprob: -11.889249801635742

Token 53: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9768754243850708
    2. ']' → logprob: -1.1018754243850708
    3. ',' → logprob: -1.3518754243850708
    4. ' ]' → logprob: -4.601875305175781
    5. '   ' → logprob: -4.851875305175781
    6. ' ' → logprob: -5.101875305175781
    7. '[' → logprob: -5.726875305175781
    8. 'for' → logprob: -6.351875305175781
    9. '  ' → logprob: -6.851875305175781
    10. ' ,' → logprob: -7.101875305175781

Token 54: ' (' (ID: 350)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.02082529105246067
    2. ' (' → logprob: -3.8958253860473633
    3. ' max' → logprob: -8.770825386047363
    4. 'max' → logprob: -9.020825386047363
    5. '(' → logprob: -12.395825386047363
    6. '[max' → logprob: -13.520825386047363
    7. ' ' → logprob: -14.270825386047363
    8. '   ' → logprob: -15.020825386047363
    9. '(min' → logprob: -15.395825386047363
    10. ',max' → logprob: -16.020824432373047

Token 55: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.007641532924026251
    2. ' max' → logprob: -4.882641315460205
    3. '(max' → logprob: -10.257641792297363
    4. '   ' → logprob: -16.257640838623047
    5. '	max' → logprob: -16.382640838623047
    6. ' ' → logprob: -17.007640838623047
    7. ' (' → logprob: -17.507640838623047
    8. '[max' → logprob: -17.882640838623047
    9. 'm' → logprob: -18.132640838623047
    10. ',max' → logprob: -18.507640838623047

Token 56: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -1.5048530030981055e-06
    2. '_lim' → logprob: -13.875001907348633
    3. '_' → logprob: -15.500001907348633
    4. '_limits' → logprob: -16.000001907348633
    5. '_max' → logprob: -16.250001907348633
    6. '_LIMIT' → logprob: -16.625001907348633
    7. ' _' → logprob: -17.125001907348633
    8. 'limit' → logprob: -17.750001907348633
    9. '_l' → logprob: -18.750001907348633
    10. '_length' → logprob: -19.750001907348633

Token 57: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026315046474337578
    2. ' +' → logprob: -3.6513149738311768
    3. ')' → logprob: -11.276314735412598
    4. '+)' → logprob: -14.276314735412598
    5. ' ' → logprob: -14.526314735412598
    6. ' )' → logprob: -14.651314735412598
    7. ' plus' → logprob: -15.651314735412598
    8. ')+' → logprob: -16.151315689086914
    9. '1' → logprob: -16.651315689086914
    10. '_plus' → logprob: -18.151315689086914

Token 58: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11282410472631454
    2. ' ' → logprob: -2.2378242015838623
    3. ')' → logprob: -14.112824440002441
    4. '<|end|>' → logprob: -15.362824440002441
    5. '```' → logprob: -15.362824440002441
    6. '  ' → logprob: -15.737824440002441
    7. '   ' → logprob: -15.925324440002441
    8. '0' → logprob: -16.112823486328125
    9. ' ' → logprob: -16.425323486328125
    10. ' )' → logprob: -16.800323486328125

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '```' → logprob: -17.62502670288086
    4. ')' → logprob: -19.12502670288086
    5. '0' → logprob: -19.62502670288086
    6. '   ' → logprob: -20.25002670288086
    7. '１' → logprob: -21.06252670288086
    8. '  ' → logprob: -21.37502670288086
    9. '۱' → logprob: -21.87502670288086
    10. '[' → logprob: -22.12502670288086

Token 60: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.8497312895488e-05
    2. ' )' → logprob: -10.625068664550781
    3. ')
' → logprob: -10.625068664550781
    4. ']' → logprob: -11.250068664550781
    5. '[' → logprob: -12.875068664550781
    6. '   ' → logprob: -13.000068664550781
    7. ')
' → logprob: -15.125068664550781
    8. ' ' → logprob: -15.375068664550781
    9. ')

' → logprob: -15.500068664550781
    10. '' → logprob: -15.875068664550781

Token 61: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2022617906332016
    2. 's' → logprob: -2.4522616863250732
    3. ' 
' → logprob: -2.9522616863250732
    4. '    
' → logprob: -4.702261924743652
    5. '\n' → logprob: -4.952261924743652
    6. '  
' → logprob: -4.952261924743652
    7. '   ' → logprob: -5.577261924743652
    8. '[' → logprob: -5.577261924743652
    9. ' ' → logprob: -5.827261924743652
    10. '' → logprob: -5.952261924743652

Token 62: ' sieve' (ID: 142781)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7815673351287842
    2. '\n' → logprob: -2.156567335128784
    3. ' ' → logprob: -2.281567335128784
    4. 's' → logprob: -2.656567335128784
    5. ' 
' → logprob: -2.906567335128784
    6. '[' → logprob: -3.406567335128784
    7. '   ' → logprob: -3.406567335128784
    8. '  
' → logprob: -3.781567335128784
    9. '#' → logprob: -3.906567335128784
    10. '' → logprob: -3.906567335128784

Token 63: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. ' [' → logprob: -14.875000953674316
    3. '```' → logprob: -16.75
    4. '\[' → logprob: -17.25
    5. '[s' → logprob: -19.875
    6. '[
' → logprob: -20.5
    7. '[:' → logprob: -21.125
    8. ' ' → logprob: -21.375
    9. 's' → logprob: -21.375
    10. '<|end|>' → logprob: -21.6875

Token 64: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9385402993066236e-05
    2. ' ' → logprob: -10.875019073486328
    3. ':' → logprob: -15.625019073486328
    4. '1' → logprob: -16.500019073486328
    5. '   ' → logprob: -17.000019073486328
    6. '```' → logprob: -18.250019073486328
    7. '۰' → logprob: -18.500019073486328
    8. '  ' → logprob: -18.625019073486328
    9. '00' → logprob: -18.937519073486328
    10. '٠' → logprob: -19.062519073486328

Token 65: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006749005056917667
    2. ' ]' → logprob: -5.006749153137207
    3. ']=' → logprob: -10.381749153137207
    4. '],' → logprob: -14.006749153137207
    5. ')' → logprob: -14.506749153137207
    6. '=' → logprob: -15.006749153137207
    7. ']==' → logprob: -15.506749153137207
    8. '<|end|>' → logprob: -15.881749153137207
    9. '<|end|>' → logprob: -16.00674819946289
    10. ' =' → logprob: -16.38174819946289

Token 66: ' sieve' (ID: 142781)
  Prédit: ' sieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sieve' → logprob: -0.002778727561235428
    2. 's' → logprob: -6.37777853012085
    3. ' ' → logprob: -6.87777853012085
    4. ' ' → logprob: -10.627779006958008
    5. '	s' → logprob: -11.627779006958008
    6. ' s' → logprob: -12.252779006958008
    7. '<|end|>' → logprob: -12.627779006958008
    8. ' sie' → logprob: -14.377779006958008
    9. ' sift' → logprob: -14.752779006958008
    10. ' False' → logprob: -15.252779006958008

Token 67: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0030526963528245687
    2. '<|end|>' → logprob: -6.003052711486816
    3. ' =' → logprob: -7.628052711486816
    4. '<|end|>' → logprob: -10.003052711486816
    5. 's' → logprob: -11.753052711486816
    6. '```' → logprob: -11.753052711486816
    7. '=True' → logprob: -12.128052711486816
    8. ' ' → logprob: -12.753052711486816
    9. ']' → logprob: -12.753052711486816
    10. ' [' → logprob: -12.753052711486816

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006715967319905758
    2. ' ' → logprob: -5.006715774536133
    3. 'False' → logprob: -15.131715774536133
    4. '  ' → logprob: -16.006715774536133
    5. ' True' → logprob: -17.131715774536133
    6. 'True' → logprob: -17.131715774536133
    7. '```' → logprob: -17.131715774536133
    8. ' False' → logprob: -17.381715774536133
    9. '0' → logprob: -17.506715774536133
    10. '<|end|>' → logprob: -17.631715774536133

Token 69: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0022225799039006233
    2. ' ]' → logprob: -6.127222537994385
    3. ' =' → logprob: -11.252223014831543
    4. ']=' → logprob: -11.377223014831543
    5. '<|end|>' → logprob: -11.877223014831543
    6. ' ' → logprob: -13.002223014831543
    7. ')' → logprob: -13.002223014831543
    8. '=' → logprob: -13.627223014831543
    9. '`]' → logprob: -16.127222061157227
    10. '']' → logprob: -16.377222061157227

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0001801801408873871
    2. '=' → logprob: -8.6251802444458
    3. ' ' → logprob: -15.3751802444458
    4. ' =
' → logprob: -15.5001802444458
    5. '<|end|>' → logprob: -16.125179290771484
    6. '=False' → logprob: -17.750179290771484
    7. ' =)' → logprob: -18.000179290771484
    8. ')' → logprob: -18.250179290771484
    9. ' =
' → logprob: -18.500179290771484
    10. ' ' → logprob: -18.625179290771484

Token 71: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.011047935113310814
    2. 'False' → logprob: -4.511047840118408
    3. ' ' → logprob: -16.01104736328125
    4. '(False' → logprob: -19.76104736328125
    5. '=False' → logprob: -20.51104736328125
    6. ' True' → logprob: -20.88604736328125
    7. ' false' → logprob: -21.26104736328125
    8. '.False' → logprob: -22.13604736328125
    9. '_false' → logprob: -22.13604736328125
    10. ' F' → logprob: -23.76104736328125

Token 72: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.011048170737922192
    2. 'False' → logprob: -4.511048316955566
    3. ' ' → logprob: -15.761048316955566
    4. ' True' → logprob: -15.886048316955566
    5. '(False' → logprob: -17.13604736328125
    6. '=False' → logprob: -17.63604736328125
    7. '.False' → logprob: -18.76104736328125
    8. ' ' → logprob: -18.88604736328125
    9. '_false' → logprob: -19.63604736328125
    10. '<|end|>' → logprob: -20.51104736328125

Token 74: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002532379236072302
    2. ' 
' → logprob: -6.627532482147217
    3. '<|end|>' → logprob: -8.002532005310059
    4. '
' → logprob: -8.377532005310059
    5. '   ' → logprob: -8.502532005310059
    6. '  
' → logprob: -8.752532005310059
    7. '    
' → logprob: -9.252532005310059
    8. '\n' → logprob: -9.627532005310059
    9. '

' → logprob: -10.002532005310059
    10. '' → logprob: -10.627532005310059

Token 75: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006803472060710192
    2. '   ' → logprob: -5.756803512573242
    3. ' 
' → logprob: -6.506803512573242
    4. '    
' → logprob: -6.881803512573242
    5. '\n' → logprob: -8.006803512573242
    6. '
' → logprob: -8.006803512573242
    7. '' → logprob: -9.006803512573242
    8. '  
' → logprob: -9.131803512573242
    9. '

' → logprob: -9.381803512573242
    10. '   
' → logprob: -10.881803512573242

Token 76: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44332361221313477
    2. '<|end|>' → logprob: -1.9433236122131348
    3. '#' → logprob: -2.3183236122131348
    4. ' #' → logprob: -2.8183236122131348
    5. 's' → logprob: -3.6933236122131348
    6. ' ' → logprob: -4.568323612213135
    7. '<|end|>' → logprob: -5.568323612213135
    8. '  ' → logprob: -5.568323612213135
    9. '```' → logprob: -6.068323612213135
    10. ' s' → logprob: -6.318323612213135

Token 77: '0' (ID: 15)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08943981677293777
    2. '#' → logprob: -2.839439868927002
    3. '<|end|>' → logprob: -4.589439868927002
    4. 'n' → logprob: -5.464439868927002
    5. 's' → logprob: -5.839439868927002
    6. 't' → logprob: -6.339439868927002
    7. 'e' → logprob: -6.464439868927002
    8. ')' → logprob: -7.089439868927002
    9. '```' → logprob: -7.214439868927002
    10. 'i' → logprob: -7.214439868927002

Token 78: ' et' (ID: 859)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023265978321433067
    2. '1' → logprob: -3.773266077041626
    3. ' ' → logprob: -11.023265838623047
    4. '  ' → logprob: -12.773265838623047
    5. '<|end|>' → logprob: -13.898265838623047
    6. 's' → logprob: -15.773265838623047
    7. '```' → logprob: -16.523265838623047
    8. '   ' → logprob: -17.085765838623047
    9. '&nbsp' → logprob: -17.148265838623047
    10. 'nbsp' → logprob: -17.148265838623047

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020542005077004433
    2. ' ' → logprob: -3.8955419063568115
    3. '  ' → logprob: -16.14554214477539
    4. ' ' → logprob: -18.02054214477539
    5. '   ' → logprob: -18.45804214477539
    6. '１' → logprob: -19.58304214477539
    7. '0' → logprob: -19.77054214477539
    8. 's' → logprob: -20.14554214477539
    9. '```' → logprob: -20.14554214477539
    10. '১' → logprob: -20.27054214477539

Token 81: ' ne' (ID: 453)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02734258957207203
    2. ' sont' → logprob: -3.6523425579071045
    3. ' ' → logprob: -7.152342796325684
    4. ' ' → logprob: -8.902342796325684
    5. ' s' → logprob: -9.902342796325684
    6. 'ont' → logprob: -11.652342796325684
    7. '	s' → logprob: -11.777342796325684
    8. ' are' → logprob: -11.902342796325684
    9. 'space' → logprob: -12.027342796325684
    10. ' font' → logprob: -12.277342796325684

Token 83: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.11423444747924805
    2. 'pas' → logprob: -2.239234447479248
    3. 's' → logprob: -7.614234447479248
    4. ' ' → logprob: -7.989234447479248
    5. '_pas' → logprob: -8.614234924316406
    6. 'p' → logprob: -9.114234924316406
    7. ' p' → logprob: -9.239234924316406
    8. ' plus' → logprob: -9.489234924316406
    9. ' ' → logprob: -10.364234924316406
    10. '   ' → logprob: -10.739234924316406

Token 84: ' premiers' (ID: 59140)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.47211140394210815
    2. ' premiers' → logprob: -1.347111463546753
    3. ' des' → logprob: -2.222111463546753
    4. ' premi' → logprob: -6.347111225128174
    5. ' premier' → logprob: -6.472111225128174
    6. 'des' → logprob: -6.722111225128174
    7. ' prém' → logprob: -7.597111225128174
    8. ' ' → logprob: -7.597111225128174
    9. 's' → logprob: -7.722111225128174
    10. ' ' → logprob: -7.847111225128174

Token 85: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0006161740166135132
    2. '    
' → logprob: -8.500616073608398
    3. '   ' → logprob: -9.125616073608398
    4. ' 
' → logprob: -9.250616073608398
    5. '
' → logprob: -9.625616073608398
    6. '  
' → logprob: -9.750616073608398
    7. '\n' → logprob: -10.750616073608398
    8. '' → logprob: -11.500616073608398
    9. '

' → logprob: -11.500616073608398
    10. '```' → logprob: -11.500616073608398

Token 86: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005229728762060404
    2. '    
' → logprob: -6.255229949951172
    3. ' 
' → logprob: -6.630229949951172
    4. '   ' → logprob: -7.255229949951172
    5. '  
' → logprob: -7.380229949951172
    6. '\n' → logprob: -8.255229949951172
    7. '   
' → logprob: -8.880229949951172
    8. '
' → logprob: -9.255229949951172
    9. '```' → logprob: -10.130229949951172
    10. '

' → logprob: -10.380229949951172

Token 87: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2580901086330414
    2. ' 
' → logprob: -1.6330901384353638
    3. ' for' → logprob: -4.383090019226074
    4. '    
' → logprob: -4.883090019226074
    5. 'for' (adapté à ' for') → logprob: -5.883090019226074
    6. '\n' → logprob: -6.008090019226074
    7. '  
' → logprob: -6.133090019226074
    8. '   ' → logprob: -6.133090019226074
    9. '   
' → logprob: -7.133090019226074
    10. 'n' → logprob: -7.758090019226074

Token 88: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1007002517580986
    2. ' ' → logprob: -2.3507001399993896
    3. 'i' → logprob: -8.100700378417969
    4. ' number' → logprob: -9.475700378417969
    5. ' n' → logprob: -10.350700378417969
    6. ' p' → logprob: -10.475700378417969
    7. ' num' → logprob: -10.600700378417969
    8. ' space' → logprob: -11.600700378417969
    9. '	i' → logprob: -11.975700378417969
    10. ' ```' → logprob: -13.225700378417969

Token 89: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009371043182909489
    2. ' ' → logprob: -4.884371280670166
    3. 'in' → logprob: -6.384371280670166
    4. '  ' → logprob: -10.384370803833008
    5. ' i' → logprob: -10.384370803833008
    6. '   ' → logprob: -13.134370803833008
    7. '2' → logprob: -13.259370803833008
    8. '<|end|>' → logprob: -13.509370803833008
    9. 'range' → logprob: -13.634370803833008
    10. '	in' → logprob: -13.759370803833008

Token 90: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0015166497323662043
    2. 'range' → logprob: -6.501516819000244
    3. ' ' → logprob: -11.251516342163086
    4. '	range' → logprob: -13.876516342163086
    5. '  ' → logprob: -16.126516342163086
    6. '2' → logprob: -16.876516342163086
    7. ' xrange' → logprob: -17.001516342163086
    8. '   ' → logprob: -17.876516342163086
    9. ' space' → logprob: -18.251516342163086
    10. '(range' → logprob: -18.626516342163086

Token 91: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013730881037190557
    2. ' (' → logprob: -7.001373291015625
    3. '2' → logprob: -7.751373291015625
    4. ' ' → logprob: -10.376373291015625
    5. '(
' → logprob: -16.501373291015625
    6. '   ' → logprob: -17.001373291015625
    7. '  ' → logprob: -18.126373291015625
    8. '1' → logprob: -18.626373291015625
    9. '3' → logprob: -18.751373291015625
    10. ' )' → logprob: -19.001373291015625

Token 92: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004309076175559312
    2. ' ' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.500431060791016
    4. '(' → logprob: -17.000431060791016
    5. '  ' → logprob: -17.375431060791016
    6. ')' → logprob: -18.125431060791016
    7. '۲' → logprob: -18.625431060791016
    8. '２' → logprob: -18.875431060791016
    9. '    ' → logprob: -19.125431060791016
    10. '```' → logprob: -19.250431060791016

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20168930292129517
    2. ' ,' → logprob: -1.7016892433166504
    3. ' ' → logprob: -8.576689720153809
    4. ' ):' → logprob: -10.201689720153809
    5. ' )' → logprob: -10.701689720153809
    6. '):' → logprob: -11.701689720153809
    7. ' ,
' → logprob: -12.451689720153809
    8. ')' → logprob: -12.576689720153809
    9. '  ' → logprob: -12.951689720153809
    10. ':' → logprob: -13.076689720153809

Token 94: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.01109557319432497
    2. 'int' → logprob: -4.5110955238342285
    3. ' math' → logprob: -10.011096000671387
    4. '   ' → logprob: -14.011096000671387
    5. '	int' → logprob: -14.386096000671387
    6. 'math' → logprob: -14.511096000671387
    7. ' ' → logprob: -14.511096000671387
    8. '    ' → logprob: -14.636096000671387
    9. '  ' → logprob: -17.01109504699707
    10. '(int' → logprob: -17.51109504699707

Token 95: '(math' (ID: 86464)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12708380818367004
    2. '(math' → logprob: -2.1270837783813477
    3. ' (' → logprob: -9.002083778381348
    4. '(s' → logprob: -11.502083778381348
    5. '(Math' → logprob: -11.502083778381348
    6. ' ' → logprob: -12.252083778381348
    7. '(max' → logprob: -12.502083778381348
    8. '(
' → logprob: -13.252083778381348
    9. ' math' → logprob: -14.627083778381348
    10. '(m' → logprob: -15.127083778381348

Token 96: '.sqrt' (ID: 38011)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.576745867729187
    2. '.sqrt' → logprob: -0.826745867729187
    3. '(s' → logprob: -8.326745986938477
    4. '.s' → logprob: -8.451745986938477
    5. '(' → logprob: -8.826745986938477
    6. ' .' → logprob: -9.576745986938477
    7. '(math' → logprob: -9.826745986938477
    8. '.Sqrt' → logprob: -10.201745986938477
    9. 'sqrt' → logprob: -11.201745986938477
    10. ' ' → logprob: -12.201745986938477

Token 97: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.1602456420660019
    2. '(' → logprob: -1.910245656967163
    3. ' (' → logprob: -11.910245895385742
    4. 'max' → logprob: -12.660245895385742
    5. ')' → logprob: -12.910245895385742
    6. '(i' → logprob: -13.160245895385742
    7. '((' → logprob: -13.410245895385742
    8. '(n' → logprob: -14.285245895385742
    9. '(x' → logprob: -14.410245895385742
    10. '(
' → logprob: -14.410245895385742

Token 98: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -6.742448022123426e-05
    2. '(max' → logprob: -10.625067710876465
    3. '(limit' → logprob: -11.250067710876465
    4. '(' → logprob: -12.125067710876465
    5. '_max' → logprob: -12.125067710876465
    6. '_' → logprob: -12.500067710876465
    7. ')' → logprob: -12.625067710876465
    8. '_lim' → logprob: -12.875067710876465
    9. ' _' → logprob: -13.000067710876465
    10. '(_' → logprob: -13.125067710876465

Token 99: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012482085730880499
    2. '(' → logprob: -7.626248359680176
    3. ')+' → logprob: -7.751248359680176
    4. ' )' → logprob: -8.751248359680176
    5. '())' → logprob: -9.251248359680176
    6. '))' → logprob: -10.001248359680176
    7. '))+' → logprob: -11.251248359680176
    8. ' ' → logprob: -11.876248359680176
    9. '()' → logprob: -12.751248359680176
    10. '2' → logprob: -13.126248359680176

Token 100: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6933265924453735
    2. ' +' → logprob: -0.6933265924453735
    3. ')' → logprob: -9.318326950073242
    4. ')+' → logprob: -10.068326950073242
    5. ' ' → logprob: -10.568326950073242
    6. '()+' → logprob: -11.568326950073242
    7. '()' → logprob: -11.818326950073242
    8. '   ' → logprob: -13.068326950073242
    9. '(' → logprob: -13.943326950073242
    10. ' plus' → logprob: -14.818326950073242

Token 101: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007167232106439769
    2. ' ' → logprob: -7.250716686248779
    3. '(' → logprob: -12.250717163085938
    4. '   ' → logprob: -13.250717163085938
    5. '```' → logprob: -16.000717163085938
    6. '    ' → logprob: -16.875717163085938
    7. '  ' → logprob: -16.875717163085938
    8. ')' → logprob: -18.000717163085938
    9. ' (' → logprob: -18.000717163085938
    10. '2' → logprob: -18.250717163085938

Token 102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -15.500006675720215
    4. '```' → logprob: -16.8750057220459
    5. '(' → logprob: -17.2500057220459
    6. '2' → logprob: -18.5000057220459
    7. '  ' → logprob: -19.1250057220459
    8. '    ' → logprob: -19.2500057220459
    9. '１' → logprob: -20.2500057220459
    10. '     ' → logprob: -20.3125057220459

Token 103: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006332821678370237
    2. ':' → logprob: -5.131332874298096
    3. ')' → logprob: -8.006332397460938
    4. ' ):' → logprob: -9.881332397460938
    5. '):
' → logprob: -11.131332397460938
    6. ' :' → logprob: -13.256332397460938
    7. ':)' → logprob: -14.006332397460938
    8. '   ' → logprob: -14.256332397460938
    9. ',' → logprob: -14.881332397460938
    10. '():' → logprob: -14.881332397460938

Token 104: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004567304160445929
    2. ' :' → logprob: -5.8795671463012695
    3. ':
' → logprob: -6.8795671463012695
    4. '):' → logprob: -8.00456714630127
    5. '   ' → logprob: -8.12956714630127
    6. ' :
' → logprob: -9.75456714630127
    7. '       ' → logprob: -10.75456714630127
    8. ')' → logprob: -11.62956714630127
    9. '    ' → logprob: -11.87956714630127
    10. '):
' → logprob: -12.87956714630127

Token 105: ' if' (ID: 538)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0226519107818604
    2. '    ' → logprob: -1.3976519107818604
    3. ' :
' → logprob: -2.5226519107818604
    4. '       ' → logprob: -2.6476519107818604
    5. '   ' → logprob: -2.7726519107818604
    6. ':
' → logprob: -3.1476519107818604
    7. ' :' → logprob: -3.2726519107818604
    8. 'if' (adapté à ' if') → logprob: -3.6476519107818604
    9. ' if' → logprob: -3.8976519107818604
    10. '        ' → logprob: -4.647651672363281

Token 106: ' sieve' (ID: 142781)
  Prédit: ' sieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sieve' → logprob: -0.35496285557746887
    2. ' ' → logprob: -1.2299628257751465
    3. 's' → logprob: -5.1049628257751465
    4. ' ' → logprob: -8.104963302612305
    5. '	s' → logprob: -9.729963302612305
    6. ' s' → logprob: -10.604963302612305
    7. '  ' → logprob: -10.729963302612305
    8. ' space' → logprob: -12.479963302612305
    9. ' sift' → logprob: -12.604963302612305
    10. ' not' → logprob: -12.979963302612305

Token 107: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011049585416913033
    2. '[' → logprob: -4.511049747467041
    3. '[I' → logprob: -13.886049270629883
    4. '\[' → logprob: -15.761049270629883
    5. '[j' → logprob: -15.886049270629883
    6. ' [' → logprob: -16.261049270629883
    7. '```' → logprob: -16.386049270629883
    8. ' ' → logprob: -17.011049270629883
    9. '[ip' → logprob: -17.136049270629883
    10. '[
' → logprob: -17.386049270629883

Token 108: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023588430136442184
    2. ']:' → logprob: -4.14858865737915
    3. ':' → logprob: -5.52358865737915
    4. ' ):' → logprob: -5.77358865737915
    5. ')' → logprob: -8.273588180541992
    6. ']' → logprob: -9.898588180541992
    7. '):
' → logprob: -9.898588180541992
    8. '=' → logprob: -10.523588180541992
    9. ' :' → logprob: -11.023588180541992
    10. ']):' → logprob: -11.648588180541992

Token 109: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019612297415733337
    2. '           ' → logprob: -4.6446123123168945
    3. '       ' → logprob: -5.3946123123168945
    4. ':
' → logprob: -5.6446123123168945
    5. ' :' → logprob: -6.5196123123168945
    6. '   ' → logprob: -9.144612312316895
    7. ' :
' → logprob: -9.394612312316895
    8. '        ' → logprob: -11.269612312316895
    9. '               ' → logprob: -11.269612312316895
    10. '    ' → logprob: -11.769612312316895

Token 110: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06364236772060394
    2. '   ' → logprob: -3.8136422634124756
    3. 'for' (adapté à ' for') → logprob: -3.9386422634124756
    4. '       ' → logprob: -4.063642501831055
    5. '    ' → logprob: -6.063642501831055
    6. ' ' → logprob: -8.188642501831055
    7. '           ' → logprob: -9.438642501831055
    8. ' 
' → logprob: -9.938642501831055
    9. '        ' → logprob: -10.438642501831055
    10. '    
' → logprob: -10.563642501831055

Token 111: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.02346721477806568
    2. 'j' → logprob: -3.8984673023223877
    3. ' ' → logprob: -5.898467063903809
    4. '    ' → logprob: -9.773467063903809
    5. ' range' → logprob: -10.398467063903809
    6. '	j' → logprob: -10.773467063903809
    7. ' (' → logprob: -11.648467063903809
    8. ' in' → logprob: -11.648467063903809
    9. '   ' → logprob: -11.773467063903809
    10. 's' → logprob: -11.898467063903809

Token 112: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001745392568409443
    2. 'in' → logprob: -6.376745223999023
    3. ' ' → logprob: -10.376745223999023
    4. ' i' → logprob: -11.751745223999023
    5. '	in' → logprob: -12.876745223999023
    6. '    ' → logprob: -14.376745223999023
    7. ' =' → logprob: -15.251745223999023
    8. '<|end|>' → logprob: -15.501745223999023
    9. '=' → logprob: -16.001745223999023
    10. ' ' → logprob: -16.376745223999023

Token 113: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.575941801071167
    2. 'range' → logprob: -0.825941801071167
    3. '	range' → logprob: -13.575942039489746
    4. ' ' → logprob: -14.325942039489746
    5. '   ' → logprob: -15.075942039489746
    6. '(range' → logprob: -15.950942039489746
    7. '    ' → logprob: -16.70094108581543
    8. '  ' → logprob: -17.07594108581543
    9. ' xrange' → logprob: -18.07594108581543
    10. 'rang' → logprob: -19.20094108581543

Token 114: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00024120506714098155
    2. '(' → logprob: -8.37524127960205
    3. ' (' → logprob: -11.75024127960205
    4. ' i' → logprob: -13.00024127960205
    5. '   ' → logprob: -15.62524127960205
    6. 'i' → logprob: -15.87524127960205
    7. '(j' → logprob: -17.000240325927734
    8. '	i' → logprob: -17.375240325927734
    9. '(I' → logprob: -17.875240325927734
    10. ')' → logprob: -18.125240325927734

Token 115: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.08374033868312836
    2. '*' → logprob: -2.583740234375
    3. ' *' → logprob: -5.333740234375
    4. 'i' → logprob: -11.833740234375
    5. '*j' → logprob: -13.083740234375
    6. '**' → logprob: -13.333740234375
    7. ' i' → logprob: -14.083740234375
    8. ' ' → logprob: -14.333740234375
    9. '2' → logprob: -15.458740234375
    10. '```' → logprob: -16.583740234375

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006940854946151376
    2. ',max' → logprob: -7.375694274902344
    3. ' ,' → logprob: -9.750694274902344
    4. ',len' → logprob: -12.625694274902344
    5. ',j' → logprob: -13.375694274902344
    6. ',num' → logprob: -13.625694274902344
    7. ',m' → logprob: -13.875694274902344
    8. ',

' → logprob: -14.625694274902344
    9. '

' → logprob: -14.750694274902344
    10. ',int' → logprob: -15.875694274902344

Token 117: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.20141352713108063
    2. 'max' → logprob: -1.7014135122299194
    3. '(max' → logprob: -15.45141315460205
    4. '	max' → logprob: -16.951414108276367
    5. ' ' → logprob: -17.701414108276367
    6. '   ' → logprob: -18.076414108276367
    7. ',max' → logprob: -18.951414108276367
    8. '[max' → logprob: -19.951414108276367
    9. '    ' → logprob: -20.201414108276367
    10. '_max' → logprob: -20.201414108276367

Token 118: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -1.3856492842023727e-06
    2. 'limit' → logprob: -13.750000953674316
    3. 'Limit' → logprob: -16.125001907348633
    4. '_lim' → logprob: -16.125001907348633
    5. '_LIMIT' → logprob: -17.125001907348633
    6. '_' → logprob: -17.375001907348633
    7. '-limit' → logprob: -18.500001907348633
    8. '```' → logprob: -18.750001907348633
    9. '_limits' → logprob: -18.875001907348633
    10. '+' → logprob: -18.875001907348633

Token 119: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03804275393486023
    2. ' +' → logprob: -3.2880427837371826
    3. '   ' → logprob: -14.288043022155762
    4. ' ' → logprob: -15.163043022155762
    5. '
' → logprob: -15.663043022155762
    6. ',' → logprob: -16.288042068481445
    7. '+
' → logprob: -17.038042068481445
    8. ' plus' → logprob: -17.413042068481445
    9. '```' → logprob: -17.413042068481445
    10. '

' → logprob: -17.538042068481445

Token 120: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011705794604495168
    2. ' ' → logprob: -6.751170635223389
    3. '   ' → logprob: -15.50117015838623
    4. ',' → logprob: -16.751171112060547
    5. '```' → logprob: -17.126171112060547
    6. '  ' → logprob: -17.376171112060547
    7. '

' → logprob: -17.501171112060547
    8. ')' → logprob: -17.751171112060547
    9. '    ' → logprob: -18.501171112060547
    10. '     ' → logprob: -18.751171112060547

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. ')' → logprob: -18.8750057220459
    4. '

' → logprob: -19.0000057220459
    5. '   ' → logprob: -19.3750057220459
    6. '１' → logprob: -19.6250057220459
    7. '```' → logprob: -19.8750057220459
    8. ',' → logprob: -20.6250057220459
    9. '  ' → logprob: -20.7500057220459
    10. ' ' → logprob: -21.0000057220459

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007367274374701083
    2. ',i' → logprob: -7.750736713409424
    3. ' ,' → logprob: -8.125737190246582
    4. ',j' → logprob: -11.625737190246582
    5. '   ' → logprob: -14.750737190246582
    6. ' i' → logprob: -15.500737190246582
    7. '

' → logprob: -15.625737190246582
    8. ',n' → logprob: -16.125736236572266
    9. ')' → logprob: -17.000736236572266
    10. ':i' → logprob: -17.250736236572266

Token 123: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1269378662109375
    2. 'i' → logprob: -2.1269378662109375
    3. '	i' → logprob: -11.626937866210938
    4. ' ' → logprob: -15.376937866210938
    5. ')' → logprob: -15.501937866210938
    6. ')i' → logprob: -15.501937866210938
    7. '   ' → logprob: -16.126937866210938
    8. ' ' → logprob: -16.751937866210938
    9. ',i' → logprob: -17.751937866210938
    10. '*i' → logprob: -17.876937866210938

Token 124: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00036025288864038885
    2. '):
' → logprob: -8.000360488891602
    3. ' ):' → logprob: -11.250360488891602
    4. ')' → logprob: -11.625360488891602
    5. ':' → logprob: -13.250360488891602
    6. '):
' → logprob: -14.625360488891602
    7. ',' → logprob: -15.250360488891602
    8. ']:' → logprob: -16.0003604888916
    9. '   ' → logprob: -16.5003604888916
    10. '):

' → logprob: -16.8753604888916

Token 125: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011392654851078987
    2. '                
' → logprob: -7.126139163970947
    3. '           ' → logprob: -9.251139640808105
    4. ':' → logprob: -10.126139640808105
    5. ' sieve' → logprob: -10.251139640808105
    6. '                   ' → logprob: -10.376139640808105
    7. 's' → logprob: -10.501139640808105
    8. '                ' → logprob: -10.876139640808105
    9. ' 
' → logprob: -11.251139640808105
    10. '            
' → logprob: -11.501139640808105

Token 126: ' sieve' (ID: 142781)
  Prédit: ' sieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sieve' → logprob: -0.01641637645661831
    2. 's' → logprob: -4.141416549682617
    3. '                ' → logprob: -8.641416549682617
    4. '                   ' → logprob: -9.391416549682617
    5. '               ' → logprob: -10.266416549682617
    6. ' sift' → logprob: -10.766416549682617
    7. '	s' → logprob: -10.891416549682617
    8. '                    ' → logprob: -11.266416549682617
    9. ' s' → logprob: -11.391416549682617
    10. ' ' → logprob: -12.641416549682617

Token 127: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0005541055579669774
    2. '[' → logprob: -7.500554084777832
    3. '[i' → logprob: -14.875554084777832
    4. '[js' → logprob: -14.875554084777832
    5. '[J' → logprob: -15.125554084777832
    6. '```' → logprob: -16.50055503845215
    7. '[s' → logprob: -17.25055503845215
    8. ' [' → logprob: -17.25055503845215
    9. '\[' → logprob: -17.62555503845215
    10. '[
' → logprob: -18.12555503845215

Token 128: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011510594777064398
    2. ' ]' → logprob: -9.250115394592285
    3. ']=' → logprob: -11.000115394592285
    4. '=' → logprob: -13.375115394592285
    5. ' =' → logprob: -14.250115394592285
    6. ' ' → logprob: -16.87511444091797
    7. ')' → logprob: -17.87511444091797
    8. '   ' → logprob: -19.50011444091797
    9. ']
' → logprob: -19.62511444091797
    10. ']

' → logprob: -20.00011444091797

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0789131447672844
    2. '=' → logprob: -2.5789132118225098
    3. '=False' → logprob: -10.703912734985352
    4. ']' → logprob: -14.578912734985352
    5. ' ' → logprob: -15.953912734985352
    6. ')' → logprob: -15.953912734985352
    7. '=True' → logprob: -16.07891273498535
    8. ']=' → logprob: -16.20391273498535
    9. 'False' → logprob: -17.57891273498535
    10. '<|end|>' → logprob: -17.95391273498535

Token 130: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.6931471824645996
    2. 'False' → logprob: -0.6931471824645996
    3. '(False' → logprob: -16.818147659301758
    4. '=False' → logprob: -17.193147659301758
    5. '.False' → logprob: -19.193147659301758
    6. '_false' → logprob: -19.568147659301758
    7. 'F' → logprob: -20.568147659301758
    8. ' ' → logprob: -21.318147659301758
    9. ' false' → logprob: -21.693147659301758
    10. 'Fa' → logprob: -22.443147659301758

Token 131: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011163013055920601
    2. '   ' → logprob: -4.636163234710693
    3. '    
' → logprob: -7.261163234710693
    4. '<|end|>' → logprob: -8.261162757873535
    5. 'return' → logprob: -8.761162757873535
    6. ' return' → logprob: -9.636162757873535
    7. '\n' → logprob: -9.886162757873535
    8. ' 
' → logprob: -10.136162757873535
    9. '  
' → logprob: -10.261162757873535
    10. '
' → logprob: -10.261162757873535

Token 132: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03507488593459129
    2. '   ' → logprob: -4.160074710845947
    3. '\n' → logprob: -4.785074710845947
    4. '<|end|>' → logprob: -5.910074710845947
    5. ' 
' → logprob: -6.035074710845947
    6. '    
' → logprob: -6.660074710845947
    7. ' return' → logprob: -6.660074710845947
    8. '  
' → logprob: -6.785074710845947
    9. 'return' → logprob: -7.410074710845947
    10. ' ' → logprob: -8.535075187683105

Token 133: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04315550625324249
    2. ' return' → logprob: -3.2931554317474365
    3. '   ' → logprob: -5.793155670166016
    4. '
' → logprob: -6.293155670166016
    5. '    
' → logprob: -9.168155670166016
    6. '  
' → logprob: -10.668155670166016
    7. ' 
' → logprob: -11.043155670166016
    8. ' ' → logprob: -11.043155670166016
    9. '	return' → logprob: -11.168155670166016
    10. ':return' → logprob: -11.293155670166016

Token 134: ' Retour' (ID: 146830)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2025989592075348
    2. ' return' → logprob: -1.7025989294052124
    3. 'pr' → logprob: -7.202599048614502
    4. '   ' → logprob: -8.702598571777344
    5. ' primes' → logprob: -9.327598571777344
    6. 'prime' → logprob: -9.952598571777344
    7. 'Return' → logprob: -10.952598571777344
    8. 'result' → logprob: -11.327598571777344
    9. 'prim' → logprob: -11.577598571777344
    10. 'ret' → logprob: -11.577598571777344

Token 135: 'ner' (ID: 1247)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.017780190333724022
    2. '[n' → logprob: -4.642780303955078
    3. '[' → logprob: -5.767780303955078
    4. 'n' → logprob: -6.267780303955078
    5. '[s' → logprob: -6.767780303955078
    6. 'ner' → logprob: -7.017780303955078
    7. 'ne' → logprob: -7.642780303955078
    8. '   ' → logprob: -9.267780303955078
    9. ' ' → logprob: -9.517780303955078
    10. ' [
' → logprob: -10.017780303955078

Token 136: ' la' (ID: 557)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.09120940417051315
    2. '[' → logprob: -2.4662094116210938
    3. '[i' → logprob: -6.591209411621094
    4. '[int' → logprob: -8.216209411621094
    5. '[s' → logprob: -8.966209411621094
    6. '[j' → logprob: -9.341209411621094
    7. '[n' → logprob: -9.966209411621094
    8. '[num' → logprob: -10.341209411621094
    9. '[max' → logprob: -10.716209411621094
    10. '[a' → logprob: -10.841209411621094

Token 137: ' liste' (ID: 31719)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20430099964141846
    2. '[i' → logprob: -2.954300880432129
    3. '[n' → logprob: -3.204300880432129
    4. '[token' → logprob: -3.454300880432129
    5. ' [' → logprob: -4.704300880432129
    6. '[num' → logprob: -4.829300880432129
    7. '[j' → logprob: -5.204300880432129
    8. '[val' → logprob: -5.329300880432129
    9. '[max' → logprob: -5.579300880432129
    10. '[a' → logprob: -5.829300880432129

Token 138: ' des' (ID: 731)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.142634317278862
    2. '[' → logprob: -2.142634391784668
    3. '[i' → logprob: -4.392634391784668
    4. ' des' → logprob: -7.017634391784668
    5. '[s' → logprob: -7.392634391784668
    6. '[int' → logprob: -7.392634391784668
    7. '   ' → logprob: -8.642634391784668
    8. ' of' → logprob: -9.017634391784668
    9. '[j' → logprob: -9.392634391784668
    10. '[List' → logprob: -9.767634391784668

Token 139: ' nombres' (ID: 76205)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.342885136604309
    2. ' i' → logprob: -1.342885136604309
    3. ' indices' → logprob: -1.342885136604309
    4. ' [' → logprob: -2.5928850173950195
    5. ' nombres' → logprob: -2.5928850173950195
    6. '[i' → logprob: -3.7178850173950195
    7. 'indices' → logprob: -4.0928850173950195
    8. ' primes' → logprob: -4.9678850173950195
    9. ' premiers' → logprob: -5.0928850173950195
    10. '[' → logprob: -5.5928850173950195

Token 140: ' premiers' (ID: 59140)
  Prédit: ' premiers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premiers' → logprob: -0.3075612485408783
    2. 'prem' → logprob: -1.4325612783432007
    3. '[' → logprob: -4.43256139755249
    4. '_' → logprob: -4.80756139755249
    5. ' [' → logprob: -5.68256139755249
    6. 'pr' → logprob: -7.55756139755249
    7. '[i' → logprob: -7.80756139755249
    8. ' premier' → logprob: -8.057560920715332
    9. ' premières' → logprob: -8.432560920715332
    10. ' premi' → logprob: -8.807560920715332

Token 141: ' sous' (ID: 14487)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10046879202127457
    2. ' [' → logprob: -2.850468873977661
    3. '[' → logprob: -3.975468873977661
    4. ' return' → logprob: -5.600468635559082
    5. ' ' → logprob: -6.225468635559082
    6. 'return' → logprob: -6.350468635559082
    7. ',' → logprob: -6.725468635559082
    8. '  ' → logprob: -6.850468635559082
    9. '    
' → logprob: -6.850468635559082
    10. '
' → logprob: -6.850468635559082

Token 142: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.0188309159129858
    2. 'forme' → logprob: -4.1438307762146
    3. ' form' → logprob: -6.2688307762146
    4. 'form' → logprob: -7.2688307762146
    5. ' la' → logprob: -9.143831253051758
    6. ' ' → logprob: -11.143831253051758
    7. 'la' → logprob: -11.268831253051758
    8. ' ' → logprob: -11.268831253051758
    9. ' forma' → logprob: -11.893831253051758
    10. '_form' → logprob: -12.018831253051758

Token 143: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7930517196655273
    2. 'de' → logprob: -1.2930517196655273
    3. ' d' → logprob: -1.5430517196655273
    4. 'd' → logprob: -3.0430517196655273
    5. ' of' → logprob: -5.293051719665527
    6. 'def' → logprob: -6.543051719665527
    7. '[' → logprob: -6.668051719665527
    8. ' [' → logprob: -6.793051719665527
    9. '[]' → logprob: -7.543051719665527
    10. ' ' → logprob: -8.043051719665527

Token 144: ''une' (ID: 13337)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.855366051197052
    2. 'e' → logprob: -0.855366051197052
    3. 'a' → logprob: -2.4803659915924072
    4. '_' → logprob: -3.9803659915924072
    5. '[' → logprob: -4.355366230010986
    6. '[]' → logprob: -5.230366230010986
    7. '['' → logprob: -5.355366230010986
    8. ''une' → logprob: -5.855366230010986
    9. ''un' → logprob: -5.980366230010986
    10. '[i' → logprob: -5.980366230010986

Token 145: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.06894029676914215
    2. '[' → logprob: -3.0689404010772705
    3. 'list' → logprob: -4.693940162658691
    4. ' liste' → logprob: -5.318940162658691
    5. '[]' → logprob: -6.443940162658691
    6. '[n' → logprob: -6.943940162658691
    7. '[l' → logprob: -7.318940162658691
    8. '[int' → logprob: -7.318940162658691
    9. '[i' → logprob: -8.068940162658691
    10. ' ' → logprob: -8.443940162658691

Token 146: '
' (ID: 198)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.4188042879104614
    2. '[' → logprob: -1.4188042879104614
    3. '[i' → logprob: -2.918804168701172
    4. '   ' → logprob: -4.043804168701172
    5. '[n' → logprob: -5.168804168701172
    6. '[num' → logprob: -5.168804168701172
    7. '[int' → logprob: -5.418804168701172
    8. '[j' → logprob: -6.418804168701172
    9. '[
' → logprob: -6.918804168701172
    10. '[s' → logprob: -7.293804168701172

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1185152605175972
    2. ' [' → logprob: -2.3685152530670166
    3. '[' → logprob: -4.118515491485596
    4. ' [
' → logprob: -8.368515014648438
    5. 'def' → logprob: -8.743515014648438
    6. '  ' → logprob: -8.868515014648438
    7. '[n' → logprob: -8.993515014648438
    8. ' ' → logprob: -9.118515014648438
    9. '[
' → logprob: -9.118515014648438
    10. '[i' → logprob: -9.243515014648438

Token 148: ' return' (ID: 622)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.2800154685974121
    2. '[i' → logprob: -2.280015468597412
    3. '[' → logprob: -2.655015468597412
    4. '[n' → logprob: -4.030015468597412
    5. '[p' → logprob: -4.405015468597412
    6. 'return' (adapté à ' return') → logprob: -4.530015468597412
    7. '[num' → logprob: -4.780015468597412
    8. ' return' → logprob: -5.030015468597412
    9. '   ' → logprob: -5.030015468597412
    10. '[int' → logprob: -6.155015468597412

Token 149: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.027946732938289642
    2. '[' → logprob: -3.652946710586548
    3. '[i' → logprob: -6.652946949005127
    4. '[int' → logprob: -9.277946472167969
    5. '[s' → logprob: -9.277946472167969
    6. '[n' → logprob: -10.652946472167969
    7. '[j' → logprob: -10.652946472167969
    8. ' ' → logprob: -10.777946472167969
    9. '[a' → logprob: -11.527946472167969
    10. '[t' → logprob: -11.777946472167969

Token 150: 'num' (ID: 4571)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03824276104569435
    2. 'x' → logprob: -3.288242816925049
    3. 'num' → logprob: -8.91324234008789
    4. 'index' → logprob: -10.53824234008789
    5. 'k' → logprob: -10.66324234008789
    6. ' i' → logprob: -11.53824234008789
    7. 'idx' → logprob: -12.03824234008789
    8. 'n' → logprob: -14.41324234008789
    9. ' x' → logprob: -14.78824234008789
    10. 'number' → logprob: -16.28824234008789

Token 151: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0006683559040538967
    2. ' ' → logprob: -7.625668525695801
    3. 'for' → logprob: -8.6256685256958
    4. '	for' → logprob: -15.1256685256958
    5. ' ' → logprob: -15.1256685256958
    6. ' in' → logprob: -16.500667572021484
    7. ' fo' → logprob: -16.875667572021484
    8. ' 

' → logprob: -17.125667572021484
    9. '  ' → logprob: -17.500667572021484
    10. 's' → logprob: -17.625667572021484

Token 152: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.0015556862344965339
    2. 'num' → logprob: -6.501555919647217
    3. ',num' → logprob: -10.751555442810059
    4. '	num' → logprob: -10.876555442810059
    5. ' range' → logprob: -12.001555442810059
    6. ' ' → logprob: -12.751555442810059
    7. '<num' → logprob: -13.626555442810059
    8. ' ' → logprob: -14.001555442810059
    9. ',' → logprob: -14.126555442810059
    10. '(num' → logprob: -14.251555442810059

Token 153: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.30050384998321533
    2. ',' → logprob: -2.050503730773926
    3. ' range' → logprob: -2.050503730773926
    4. 'range' → logprob: -6.550503730773926
    5. 'in' → logprob: -8.425503730773926
    6. ',num' → logprob: -8.675503730773926
    7. ' ' → logprob: -9.050503730773926
    8. ' en' → logprob: -9.675503730773926
    9. ' xrange' → logprob: -10.050503730773926
    10. ' ,' → logprob: -10.050503730773926

Token 154: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2195071130990982
    2. 'is' → logprob: -1.844507098197937
    3. 'prime' → logprob: -3.5945072174072266
    4. ' prime' → logprob: -4.469507217407227
    5. 'prem' → logprob: -11.469507217407227
    6. 'Prime' → logprob: -11.594507217407227
    7. '_prime' → logprob: -11.594507217407227
    8. ' ' → logprob: -12.219507217407227
    9. ' est' → logprob: -12.219507217407227
    10. 'est' → logprob: -13.094507217407227

Token 155: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.001948152668774128
    2. 'prime' → logprob: -6.251948356628418
    3. '_' → logprob: -11.001948356628418
    4. '_p' → logprob: -13.626948356628418
    5. '_pr' → logprob: -14.376948356628418
    6. 'Prime' → logprob: -14.376948356628418
    7. '_true' → logprob: -15.751948356628418
    8. '_valid' → logprob: -15.876948356628418
    9. ' prime' → logprob: -16.0019474029541
    10. '_present' → logprob: -17.2519474029541

Token 156: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004704119171947241
    2. 'in' → logprob: -5.379703998565674
    3. ' ' → logprob: -9.504704475402832
    4. '<|end|>' → logprob: -12.129704475402832
    5. 's' → logprob: -13.504704475402832
    6. '	in' → logprob: -14.504704475402832
    7. ' i' → logprob: -15.254704475402832
    8. 'inthe' → logprob: -15.817204475402832
    9. ' ' → logprob: -15.817204475402832
    10. ')' → logprob: -15.879704475402832

Token 157: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.2014257162809372
    2. ' enumerate' → logprob: -1.7014256715774536
    3. 'zip' → logprob: -11.826425552368164
    4. ' zip' → logprob: -12.326425552368164
    5. ' enumer' → logprob: -15.576425552368164
    6. 'enum' → logprob: -16.076425552368164
    7. '```' → logprob: -16.076425552368164
    8. 'Enumer' → logprob: -16.826425552368164
    9. '.enumer' → logprob: -17.451425552368164
    10. 'en' → logprob: -17.451425552368164

Token 158: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.0564331205387134e-05
    2. '(' → logprob: -12.00001049041748
    3. ' (' → logprob: -12.62501049041748
    4. 's' → logprob: -13.87501049041748
    5. ')' → logprob: -16.750011444091797
    6. '(
' → logprob: -18.375011444091797
    7. ' ' → logprob: -18.750011444091797
    8. '```' → logprob: -19.625011444091797
    9. '(S' → logprob: -19.875011444091797
    10. ']' → logprob: -19.875011444091797

Token 159: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.0006542971823364496
    2. 'ive' → logprob: -7.500654220581055
    3. '[' → logprob: -9.750654220581055
    4. 'erve' → logprob: -11.750654220581055
    5. '[i' → logprob: -11.875654220581055
    6. 'eve' → logprob: -11.875654220581055
    7. 'e' → logprob: -12.125654220581055
    8. 'iev' → logprob: -12.750654220581055
    9. 'i' → logprob: -13.375654220581055
    10. 've' → logprob: -13.625654220581055

Token 160: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20579242706298828
    2. ' if' → logprob: -1.7057924270629883
    3. ' )' → logprob: -5.580792427062988
    4. 'if' → logprob: -7.455792427062988
    5. ' ' → logprob: -11.330792427062988
    6. '()' → logprob: -12.455792427062988
    7. '   ' → logprob: -12.705792427062988
    8. ']' → logprob: -14.205792427062988
    9. '    ' → logprob: -15.205792427062988
    10. ')
' → logprob: -15.330792427062988

Token 161: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.00861468818038702
    2. 'if' → logprob: -4.758614540100098
    3. ' ' → logprob: -16.758615493774414
    4. ' in' → logprob: -17.883615493774414
    5. '	if' → logprob: -18.883615493774414
    6. 'If' → logprob: -19.133615493774414
    7. ' si' → logprob: -19.133615493774414
    8. ')' → logprob: -19.633615493774414
    9. ' If' → logprob: -20.008615493774414
    10. '   ' → logprob: -20.008615493774414

Token 162: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.3132629096508026
    2. ' is' → logprob: -1.313262939453125
    3. ' ' → logprob: -14.063262939453125
    4. '	is' → logprob: -15.688262939453125
    5. ' ' → logprob: -16.313262939453125
    6. '```' → logprob: -17.438262939453125
    7. 's' → logprob: -17.813262939453125
    8. '(is' → logprob: -17.813262939453125
    9. '   ' → logprob: -18.063262939453125
    10. ')is' → logprob: -18.438262939453125

Token 163: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -2.129266067640856e-05
    2. 'prime' → logprob: -11.250020980834961
    3. '_' → logprob: -12.125020980834961
    4. ' _' → logprob: -13.000020980834961
    5. '_pr' → logprob: -15.375020980834961
    6. '_true' → logprob: -16.75002098083496
    7. '_p' → logprob: -16.87502098083496
    8. 'r' → logprob: -17.50002098083496
    9. ' prime' → logprob: -17.62502098083496
    10. ' ' → logprob: -17.62502098083496

Token 164: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001726349350064993
    2. ' ]' → logprob: -6.376726150512695
    3. ')]' → logprob: -10.751726150512695
    4. '()]' → logprob: -13.626726150512695
    5. ']
' → logprob: -14.376726150512695
    6. '])' → logprob: -15.001726150512695
    7. ']

' → logprob: -15.501726150512695
    8. ')' → logprob: -15.501726150512695
    9. ']}' → logprob: -17.251726150512695
    10. ' ' → logprob: -17.376726150512695

Token 165: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.794454038143158
    2. '
' → logprob: -1.0444540977478027
    3. '<|end|>' → logprob: -2.1694540977478027
    4. 'def' → logprob: -3.0444540977478027
    5. '\n' → logprob: -4.919454097747803
    6. '  
' → logprob: -5.169454097747803
    7. 'n' → logprob: -5.294454097747803
    8. '<|end|>' → logprob: -5.794454097747803
    9. '```' → logprob: -5.919454097747803
    10. '\' → logprob: -6.419454097747803

Token 166: ' Lecture' (ID: 106534)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02541661262512207
    2. ' def' → logprob: -3.900416612625122
    3. '#' → logprob: -5.650416374206543
    4. 'if' → logprob: -7.150416374206543
    5. ' if' → logprob: -9.275416374206543
    6. ' Code' → logprob: -9.650416374206543
    7. ' #' → logprob: -9.650416374206543
    8. 'print' → logprob: -10.150416374206543
    9. 'import' → logprob: -10.275416374206543
    10. ' La' → logprob: -10.400416374206543

Token 167: ' et' (ID: 859)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.30633699893951416
    2. '()' → logprob: -1.6813369989395142
    3. ' (' → logprob: -3.0563368797302246
    4. '_' → logprob: -4.431336879730225
    5. ' des' → logprob: -5.181336879730225
    6. ' =' → logprob: -5.681336879730225
    7. ' ' → logprob: -5.681336879730225
    8. ':' → logprob: -7.431336879730225
    9. 'des' → logprob: -7.431336879730225
    10. '(sys' → logprob: -7.556336879730225

Token 168: ' traitement' (ID: 42434)
  Prédit: ' traitement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' traitement' → logprob: -0.0025789898354560137
    2. ' processing' → logprob: -6.627579212188721
    3. 'trait' → logprob: -8.127578735351562
    4. ' traitements' → logprob: -8.252578735351562
    5. ' execution' → logprob: -9.627578735351562
    6. ' conversion' → logprob: -9.877578735351562
    7. ' validation' → logprob: -10.252578735351562
    8. ' parsing' → logprob: -10.252578735351562
    9. ' initial' → logprob: -10.252578735351562
    10. 'ex' → logprob: -10.627578735351562

Token 169: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10052571445703506
    2. ' des' → logprob: -2.8505256175994873
    3. '(' → logprob: -3.9755256175994873
    4. ' de' → logprob: -4.975525856018066
    5. 'des' → logprob: -5.350525856018066
    6. 'de' → logprob: -5.975525856018066
    7. 'def' → logprob: -6.100525856018066
    8. '_' → logprob: -7.225525856018066
    9. '(
' → logprob: -7.975525856018066
    10. ' of' → logprob: -8.225525856018066

Token 170: ' chaque' (ID: 21194)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.16260580718517303
    2. ' la' → logprob: -2.0376057624816895
    3. 'sys' → logprob: -4.9126057624816895
    4. ' l' → logprob: -5.2876057624816895
    5. ' input' → logprob: -5.9126057624816895
    6. 'l' → logprob: -6.4126057624816895
    7. ' ' → logprob: -7.4126057624816895
    8. ' range' → logprob: -7.7876057624816895
    9. 'la' → logprob: -8.037606239318848
    10. ' les' → logprob: -8.537606239318848

Token 171: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.014673920348286629
    2. ' line' → logprob: -4.514673709869385
    3. ' ' → logprob: -6.264673709869385
    4. 'ligne' → logprob: -6.514673709869385
    5. 'line' → logprob: -8.764674186706543
    6. 'l' → logprob: -10.764674186706543
    7. '_' → logprob: -11.389674186706543
    8. ' input' → logprob: -11.514674186706543
    9. ' l' → logprob: -11.889674186706543
    10. ' ' → logprob: -12.139674186706543

Token 172: ' d' (ID: 272)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7751889228820801
    2. 'for' → logprob: -0.9001889228820801
    3. ':' → logprob: -3.40018892288208
    4. 'def' → logprob: -3.52518892288208
    5. ':
' → logprob: -3.65018892288208
    6. '
' → logprob: -4.40018892288208
    7. ' de' → logprob: -4.90018892288208
    8. ' in' → logprob: -5.90018892288208
    9. 'de' → logprob: -6.15018892288208
    10. 'while' → logprob: -6.15018892288208

Token 173: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.21017882227897644
    2. 'e' → logprob: -1.9601788520812988
    3. 'entrée' → logprob: -4.085178852081299
    4. ' input' → logprob: -4.585178852081299
    5. 'stdin' → logprob: -4.710178852081299
    6. ' stdin' → logprob: -5.960178852081299
    7. '=sys' → logprob: -6.460178852081299
    8. 'es' → logprob: -6.460178852081299
    9. 'sys' → logprob: -6.960178852081299
    10. 'input' → logprob: -6.960178852081299

Token 174: ' jusqu' (ID: 21961)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22249646484851837
    2. '
' → logprob: -2.097496509552002
    3. ' for' → logprob: -2.597496509552002
    4. 'while' → logprob: -6.347496509552002
    5. ':' → logprob: -8.347496032714844
    6. ':
' → logprob: -9.597496032714844
    7. ' while' → logprob: -9.847496032714844
    8. ' 
' → logprob: -10.347496032714844
    9. 'def' → logprob: -10.347496032714844
    10. '

' → logprob: -10.347496032714844

Token 175: ''à' (ID: 33688)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.18212443590164185
    2. ''à' → logprob: -2.057124376296997
    3. ' a' → logprob: -4.182124614715576
    4. 'à' → logprob: -4.432124614715576
    5. '’à' → logprob: -5.182124614715576
    6. '=' → logprob: -6.682124614715576
    7. ' au' → logprob: -6.682124614715576
    8. ' ' → logprob: -7.307124614715576
    9. '_' → logprob: -7.307124614715576
    10. ' EOF' → logprob: -7.557124614715576

Token 176: ' ce' (ID: 2357)
  Prédit: ' EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' EOF' → logprob: -0.6990149021148682
    2. 'EOF' → logprob: -1.0740149021148682
    3. ' la' → logprob: -1.9490149021148682
    4. 'la' → logprob: -4.699014663696289
    5. '''' → logprob: -5.199014663696289
    6. '```' → logprob: -6.949014663696289
    7. ' fin' → logprob: -7.449014663696289
    8. '""' → logprob: -7.699014663696289
    9. ''' → logprob: -7.824014663696289
    10. 'fin' → logprob: -7.949014663696289

Token 177: ' que' (ID: 661)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.323809266090393
    2. ' que' → logprob: -1.573809266090393
    3. 'uil' → logprob: -1.573809266090393
    4. 'la' → logprob: -2.4488091468811035
    5. 'l' → logprob: -3.0738091468811035
    6. 'u' → logprob: -3.4488091468811035
    7. 'tte' → logprob: -3.4488091468811035
    8. ''' → logprob: -3.6988091468811035
    9. 't' → logprob: -3.6988091468811035
    10. 'que' → logprob: -4.3238091468811035

Token 178: ' la' (ID: 557)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.6326487064361572
    2. ' not' → logprob: -1.0076487064361572
    3. 'not' → logprob: -3.3826487064361572
    4. ' False' → logprob: -3.7576487064361572
    5. 'True' → logprob: -3.8826487064361572
    6. 'False' → logprob: -4.757648468017578
    7. ' la' → logprob: -4.882648468017578
    8. ' une' → logprob: -5.757648468017578
    9. 'la' → logprob: -6.382648468017578
    10. ' line' → logprob: -6.882648468017578

Token 179: ' ligne' (ID: 19583)
  Prédit: ' EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' EOF' → logprob: -0.47408074140548706
    2. 'EOF' → logprob: -1.8490808010101318
    3. ' ligne' → logprob: -2.599080801010132
    4. ' fin' → logprob: -2.724080801010132
    5. ' line' → logprob: -3.599080801010132
    6. ' input' → logprob: -4.099080562591553
    7. 'ligne' → logprob: -4.724080562591553
    8. 'fin' → logprob: -5.224080562591553
    9. ' None' → logprob: -6.099080562591553
    10. '```' → logprob: -6.224080562591553

Token 180: ' "' (ID: 392)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.8990603685379028
    2. ' ==' → logprob: -1.1490603685379028
    3. '==' → logprob: -2.2740602493286133
    4. ' soit' → logprob: -2.3990602493286133
    5. ' =' → logprob: -3.3990602493286133
    6. 'so' → logprob: -4.399060249328613
    7. ' ' → logprob: -4.899060249328613
    8. '=' → logprob: -5.274060249328613
    9. '.startswith' → logprob: -5.899060249328613
    10. '.rstrip' → logprob: -5.899060249328613

Token 181: '0' (ID: 15)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8578458428382874
    2. '0' → logprob: -2.1078457832336426
    3. 'END' → logprob: -2.1078457832336426
    4. 'STOP' → logprob: -2.3578457832336426
    5. '```' → logprob: -2.8578457832336426
    6. '""' → logprob: -3.2328457832336426
    7. ''' → logprob: -3.4828457832336426
    8. 'fin' → logprob: -3.8578457832336426
    9. 'stop' → logprob: -3.9828457832336426
    10. 'EOF' → logprob: -4.232845783233643

Token 182: ' ' (ID: 220)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.030208492651581764
    2. '\n' → logprob: -3.5302085876464844
    3. '"\' → logprob: -8.405208587646484
    4. ' "' → logprob: -8.530208587646484
    5. '"""' → logprob: -11.030208587646484
    6. '```' → logprob: -12.780208587646484
    7. '\' → logprob: -12.905208587646484
    8. '
' → logprob: -13.405208587646484
    9. '\r' → logprob: -13.780208587646484
    10. '"
' → logprob: -13.780208587646484

Token 183: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005301469471305609
    2. ' ' → logprob: -5.255301475524902
    3. '"' → logprob: -9.630301475524902
    4. '```' → logprob: -13.755301475524902
    5. ' "' → logprob: -14.630301475524902
    6. '   ' → logprob: -16.255300521850586
    7. '1' → logprob: -16.692800521850586
    8. '  ' → logprob: -16.692800521850586
    9. '"""' → logprob: -16.755300521850586
    10. '

' → logprob: -17.505300521850586

Token 184: ' ' (ID: 220)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.030973102897405624
    2. '\n' → logprob: -3.530973196029663
    3. ' "' → logprob: -6.780972957611084
    4. '"\' → logprob: -10.030973434448242
    5. '0' → logprob: -11.155973434448242
    6. '\' → logprob: -12.030973434448242
    7. ')"' → logprob: -12.280973434448242
    8. '"""' → logprob: -13.030973434448242
    9. '")' → logprob: -13.280973434448242
    10. '\r' → logprob: -13.405973434448242

Token 185: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7244431972503662
    2. '"' → logprob: -0.8494431972503662
    3. ' ' → logprob: -2.599443197250366
    4. '\n' → logprob: -4.349443435668945
    5. ' "' → logprob: -7.724443435668945
    6. '1' → logprob: -10.599443435668945
    7. '"\' → logprob: -11.474443435668945
    8. '\' → logprob: -11.724443435668945
    9. ' soit' → logprob: -12.474443435668945
    10. '3' → logprob: -12.474443435668945

Token 186: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004356652498245239
    2. '\n' → logprob: -5.504356861114502
    3. ' "' → logprob: -8.254356384277344
    4. '"""' → logprob: -11.879356384277344
    5. '"\' → logprob: -11.879356384277344
    6. '```' → logprob: -14.504356384277344
    7. '
' → logprob: -14.754356384277344
    8. ')"' → logprob: -14.754356384277344
    9. '""' → logprob: -14.879356384277344
    10. '\' → logprob: -15.129356384277344

Token 187: ' soit' (ID: 17293)
  Prédit: ' soit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.29716792702674866
    2. ':' → logprob: -2.047168016433716
    3. ' be' → logprob: -2.422168016433716
    4. ' so' → logprob: -5.172167778015137
    5. 'so' → logprob: -5.172167778015137
    6. '\n' → logprob: -5.297167778015137
    7. ' is' → logprob: -5.547167778015137
    8. ',' → logprob: -5.922167778015137
    9. '.' → logprob: -6.047167778015137
    10. ' ' → logprob: -6.547167778015137

Token 188: ' rencontr' (ID: 49751)
  Prédit: 'enc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enc' → logprob: -0.6002805829048157
    2. ' rencontr' → logprob: -0.8502805829048157
    3. ' encountered' → logprob: -4.35028076171875
    4. ' l' → logprob: -5.10028076171875
    5. 'l' → logprob: -5.97528076171875
    6. 'ren' → logprob: -7.47528076171875
    7. ' rencontré' → logprob: -7.47528076171875
    8. 'lu' → logprob: -7.85028076171875
    9. ' encounter' → logprob: -8.10028076171875
    10. ' ren' → logprob: -8.60028076171875

Token 189: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0009069374646060169
    2. 'é' → logprob: -7.250906944274902
    3. 'ee' → logprob: -8.750906944274902
    4. 'e' → logprob: -11.250906944274902
    5. 'rée' → logprob: -11.250906944274902
    6. 'ue' → logprob: -11.875906944274902
    7. 'ed' → logprob: -12.750906944274902
    8. 'er' → logprob: -14.000906944274902
    9. 'ées' → logprob: -14.875906944274902
    10. '#' → logprob: -15.125906944274902

Token 190: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0008310707635246217
    2. 'while' → logprob: -7.500831127166748
    3. '

' → logprob: -8.25083065032959
    4. '
' → logprob: -11.37583065032959
    5. 'for' → logprob: -13.25083065032959
    6. ' while' → logprob: -13.25083065032959
    7. '\n' → logprob: -14.50083065032959
    8. '


' → logprob: -15.12583065032959
    9. '' → logprob: -15.25083065032959
    10. ' 
' → logprob: -15.37583065032959

Token 191: 'def' (ID: 1314)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.002558660926297307
    2. '
' → logprob: -6.002558708190918
    3. 'for' → logprob: -9.752558708190918
    4. ' while' → logprob: -10.627558708190918
    5. '```' → logprob: -15.002558708190918
    6. 'def' → logprob: -15.877558708190918
    7. ' 
' → logprob: -16.8775577545166
    8. '

' → logprob: -17.1275577545166
    9. '
' → logprob: -17.8775577545166
    10. 'with' → logprob: -18.1275577545166

Token 192: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.22711989283561707
    2. ' process' → logprob: -1.8521199226379395
    3. 'process' → logprob: -3.7271199226379395
    4. 'main' → logprob: -3.8521199226379395
    5. ' solve' → logprob: -8.227119445800781
    6. ' prime' → logprob: -8.477119445800781
    7. 'solve' → logprob: -8.977119445800781
    8. ' find' → logprob: -9.727119445800781
    9. ' proces' → logprob: -10.102119445800781
    10. 'prime' → logprob: -10.102119445800781

Token 193: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00029995047952979803
    2. '(' → logprob: -8.375300407409668
    3. ' ():' → logprob: -9.750300407409668
    4. '()' → logprob: -11.750300407409668
    5. ':' → logprob: -13.375300407409668
    6. '(:' → logprob: -14.250300407409668
    7. '():
' → logprob: -14.625300407409668
    8. '_' → logprob: -15.375300407409668
    9. '(":' → logprob: -16.25029945373535
    10. ' (' → logprob: -16.25029945373535

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007356545538641512
    2. '
' → logprob: -8.62573528289795
    3. '    ' → logprob: -8.62573528289795
    4. '    
' → logprob: -8.75073528289795
    5. ' while' → logprob: -9.75073528289795
    6. ' ' → logprob: -10.50073528289795
    7. ' 
' → logprob: -10.62573528289795
    8. '  ' → logprob: -11.12573528289795
    9. 'n' → logprob: -11.62573528289795
    10. ' indentation' → logprob: -11.62573528289795

Token 195: ' #' (ID: 1069)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.041516922414302826
    2. '   ' → logprob: -3.2915170192718506
    3. 'while' → logprob: -5.6665167808532715
    4. '	while' → logprob: -12.66651725769043
    5. ' import' → logprob: -12.91651725769043
    6. '    
' → logprob: -13.54151725769043
    7. '  ' → logprob: -13.79151725769043
    8. ' for' → logprob: -14.91651725769043
    9. 'import' → logprob: -15.04151725769043
    10. '    ' → logprob: -15.41651725769043

Token 196: ' Lim' (ID: 16603)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5857260227203369
    2. ' while' → logprob: -0.8357260227203369
    3. 'for' → logprob: -5.210725784301758
    4. 'import' → logprob: -5.960725784301758
    5. ' for' → logprob: -6.960725784301758
    6. ' import' → logprob: -7.210725784301758
    7. '   ' → logprob: -11.335725784301758
    8. 'max' → logprob: -13.585725784301758
    9. '```' → logprob: -14.085725784301758
    10. 'from' → logprob: -14.835725784301758

Token 197: 'ite' (ID: 651)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.004359383136034012
    2. 'ite' → logprob: -6.254359245300293
    3. '   ' → logprob: -6.379359245300293
    4. '_limit' → logprob: -8.129359245300293
    5. ' it' → logprob: -9.254359245300293
    6. '    ' → logprob: -10.004359245300293
    7. 'import' → logprob: -10.004359245300293
    8. '_' → logprob: -10.254359245300293
    9. '_it' → logprob: -10.254359245300293
    10. '  ' → logprob: -10.504359245300293

Token 198: ' maximale' (ID: 76380)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3188326358795166
    2. '_max' → logprob: -1.3188326358795166
    3. 'max' → logprob: -6.0688323974609375
    4. '_' → logprob: -6.4438323974609375
    5. '=' → logprob: -6.6938323974609375
    6. '_limit' → logprob: -8.818832397460938
    7. ' max' → logprob: -9.693832397460938
    8. '_MAX' → logprob: -10.318832397460938
    9. '=max' → logprob: -10.318832397460938
    10. '   ' → logprob: -10.568832397460938

Token 199: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.032255806028842926
    2. '_max' → logprob: -3.7822558879852295
    3. '_limit' → logprob: -5.40725564956665
    4. '=' → logprob: -6.40725564956665
    5. 'max' → logprob: -6.78225564956665
    6. '_input' → logprob: -7.03225564956665
    7. '_' → logprob: -7.65725564956665
    8. '_lim' → logprob: -9.532256126403809
    9. '_des' → logprob: -10.282256126403809
    10. '_per' → logprob: -10.532256126403809

Token 200: ' m' (ID: 284)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.8097139000892639
    2. ' la' → logprob: -0.9347139000892639
    3. ' l' → logprob: -3.434713840484619
    4. ' le' → logprob: -3.684713840484619
    5. ' max' → logprob: -3.684713840484619
    6. ' ' → logprob: -3.809713840484619
    7. ' primes' → logprob: -4.059713840484619
    8. ' sieve' → logprob: -4.184713840484619
    9. ' prime' → logprob: -5.309713840484619
    10. '100' → logprob: -5.934713840484619

Token 201: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.060920193791389465
    2. 'ax' → logprob: -3.060920238494873
    3. '=' → logprob: -4.685920238494873
    4. '   ' → logprob: -6.935920238494873
    5. ',' → logprob: -7.185920238494873
    6. '_max' → logprob: -8.060919761657715
    7. ' ' → logprob: -8.310919761657715
    8. '_ax' → logprob: -8.935919761657715
    9. '=int' → logprob: -9.060919761657715
    10. '_' → logprob: -9.060919761657715

Token 202: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014229321852326393
    2. '=' → logprob: -4.2642292976379395
    3. '   ' → logprob: -9.764229774475098
    4. 'max' → logprob: -12.764229774475098
    5. '  ' → logprob: -13.639229774475098
    6. '    ' → logprob: -13.764229774475098
    7. ' ' → logprob: -13.764229774475098
    8. ',' → logprob: -13.764229774475098
    9. '_max' → logprob: -15.139229774475098
    10. ' =
' → logprob: -15.514229774475098

Token 203: ' MAX' (ID: 16960)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4469873011112213
    2. ' max' → logprob: -1.196987271308899
    3. '   ' → logprob: -3.3219873905181885
    4. 'MAX' (adapté à ' MAX') → logprob: -3.9469873905181885
    5. ' MAX' → logprob: -5.946987152099609
    6. ' while' → logprob: -9.44698715209961
    7. 'while' → logprob: -9.69698715209961
    8. 'import' → logprob: -9.82198715209961
    9. 'm' → logprob: -10.19698715209961
    10. ' m' → logprob: -10.69698715209961

Token 204: '_M' (ID: 2372)
  Prédit: '_M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_M' → logprob: -0.13321910798549652
    2. '_m' → logprob: -2.383219003677368
    3. '_LIMIT' → logprob: -3.508219003677368
    4. ' =' → logprob: -6.883219242095947
    5. '=' → logprob: -7.258219242095947
    6. '_' → logprob: -8.133218765258789
    7. '_VALUE' → logprob: -8.883218765258789
    8. '_MAX' → logprob: -8.883218765258789
    9. '_limit' → logprob: -9.133218765258789
    10. '_SIZE' → logprob: -10.508218765258789

Token 205: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326475739479065
    2. '=' → logprob: -1.3132647275924683
    3. '   ' → logprob: -13.063264846801758
    4. ',' → logprob: -15.313264846801758
    5. '  ' → logprob: -15.688264846801758
    6. '_' → logprob: -16.313264846801758
    7. ' ' → logprob: -16.313264846801758
    8. '_MAX' → logprob: -16.438264846801758
    9. '=

' → logprob: -16.438264846801758
    10. '=int' → logprob: -16.688264846801758

Token 206: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.9644727110862732
    2. '100' → logprob: -0.9644727110862732
    3. ' ' → logprob: -1.464472770690918
    4. '200' → logprob: -5.839472770690918
    5. '500' → logprob: -6.589472770690918
    6. '300' → logprob: -6.964472770690918
    7. '400' → logprob: -7.839472770690918
    8. '250' → logprob: -9.089472770690918
    9. '2' → logprob: -9.214472770690918
    10. '600' → logprob: -9.214472770690918

Token 207: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.638935923576355
    2. '100' → logprob: -0.888935923576355
    3. '200' → logprob: -3.6389360427856445
    4. '500' → logprob: -4.2639360427856445
    5. '300' → logprob: -5.0139360427856445
    6. '400' → logprob: -5.3889360427856445
    7. '150' → logprob: -6.2639360427856445
    8. '250' → logprob: -6.3889360427856445
    9. '999' → logprob: -6.8889360427856445
    10. '2' → logprob: -7.2639360427856445

Token 208: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.048873938620090485
    2. '0' → logprob: -3.4238739013671875
    3. '00' → logprob: -4.6738739013671875
    4. '_' → logprob: -5.1738739013671875
    5. '    
' → logprob: -10.923873901367188
    6. '   ' → logprob: -11.298873901367188
    7. '  ' → logprob: -11.923873901367188
    8. '001' → logprob: -11.923873901367188
    9. '   
' → logprob: -11.923873901367188
    10. '```' → logprob: -12.048873901367188

Token 209: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013218817301094532
    2. '   ' → logprob: -4.513218879699707
    3. '    
' → logprob: -6.638218879699707
    4. 'while' → logprob: -8.263218879699707
    5. '
' → logprob: -8.513218879699707
    6. '  
' → logprob: -9.388218879699707
    7. '

' → logprob: -9.388218879699707
    8. '```' → logprob: -10.013218879699707
    9. '0' → logprob: -10.263218879699707
    10. '   
' → logprob: -10.513218879699707

Token 210: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.029556889086961746
    2. '   ' → logprob: -3.6545569896698
    3. '    
' → logprob: -5.779556751251221
    4. '  
' → logprob: -9.404557228088379
    5. ' 
' → logprob: -10.779557228088379
    6. '   
' → logprob: -11.029557228088379
    7. '
' → logprob: -11.529557228088379
    8. '\n' → logprob: -11.529557228088379
    9. ' while' → logprob: -12.279557228088379
    10. 'while' → logprob: -12.529557228088379

Token 211: ' #' (ID: 1069)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.07241259515285492
    2. ' primes' → logprob: -2.8224124908447266
    3. 'prime' → logprob: -4.947412490844727
    4. '   ' → logprob: -5.947412490844727
    5. ' prime' → logprob: -7.947412490844727
    6. 'prim' → logprob: -9.572412490844727
    7. '    
' → logprob: -10.197412490844727
    8. '	pr' → logprob: -10.447412490844727
    9. 'prem' → logprob: -10.572412490844727
    10. 'while' → logprob: -10.572412490844727

Token 212: ' Pré' (ID: 86400)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.021340975537896156
    2. 'prime' → logprob: -4.521340847015381
    3. ' primes' → logprob: -4.646340847015381
    4. '#' → logprob: -8.396341323852539
    5. ' prime' → logprob: -9.146341323852539
    6. 'max' → logprob: -9.521341323852539
    7. 'n' → logprob: -10.146341323852539
    8. 'prem' → logprob: -10.271341323852539
    9. 'prim' → logprob: -10.396341323852539
    10. 's' → logprob: -11.021341323852539

Token 213: '-cal' (ID: 84920)
  Prédit: 'cal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.9754909873008728
    2. 'paration' → logprob: -1.4754910469055176
    3. '_cal' → logprob: -2.3504910469055176
    4. 'c' → logprob: -2.6004910469055176
    5. '-cal' → logprob: -3.1004910469055176
    6. '_c' → logprob: -3.3504910469055176
    7. 'com' → logprob: -3.7254910469055176
    8. 'compute' → logprob: -4.600491046905518
    9. 'comput' → logprob: -4.600491046905518
    10. 'calc' → logprob: -4.725491046905518

Token 214: 'cul' (ID: 2885)
  Prédit: 'cul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.5527678728103638
    2. 'culation' → logprob: -1.8027678728103638
    3. 'culated' → logprob: -2.177767753601074
    4. 'c' → logprob: -2.552767753601074
    5. 'ul' → logprob: -3.302767753601074
    6. 'om' → logprob: -5.177767753601074
    7. 'ulation' → logprob: -5.302767753601074
    8. 'al' → logprob: -5.552767753601074
    9. 'm' → logprob: -5.927767753601074
    10. 'cule' → logprob: -6.427767753601074

Token 215: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.003194589400663972
    2. 'des' → logprob: -6.503194808959961
    3. ' primes' → logprob: -6.628194808959961
    4. '_des' → logprob: -8.878194808959961
    5. ' de' → logprob: -9.003194808959961
    6. ' of' → logprob: -10.503194808959961
    7. ' ' → logprob: -11.378194808959961
    8. 'er' → logprob: -11.503194808959961
    9. 's' → logprob: -11.503194808959961
    10. ' prime' → logprob: -12.003194808959961

Token 216: ' nombres' (ID: 76205)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.08515328168869019
    2. 'prem' → logprob: -2.960153341293335
    3. 'n' → logprob: -4.585153102874756
    4. ' primes' → logprob: -4.835153102874756
    5. 'prime' → logprob: -4.960153102874756
    6. ' premiers' → logprob: -5.585153102874756
    7. 'prim' → logprob: -8.210153579711914
    8. ' nombres' → logprob: -9.460153579711914
    9. ' prime' → logprob: -9.585153579711914
    10. 'p' → logprob: -9.710153579711914

Token 217: ' premiers' (ID: 59140)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.030643858015537262
    2. ' premiers' → logprob: -3.780643939971924
    3. '_' → logprob: -5.155643939971924
    4. 'pr' → logprob: -6.780643939971924
    5. '_p' → logprob: -7.905643939971924
    6. '_pr' → logprob: -10.530643463134766
    7. 'prim' → logprob: -11.030643463134766
    8. ' primi' → logprob: -11.780643463134766
    9. ' ' → logprob: -12.280643463134766
    10. 'p' → logprob: -12.280643463134766

Token 218: ' jusqu' (ID: 21961)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002418583957478404
    2. '=' → logprob: -6.127418518066406
    3. '   ' → logprob: -9.752418518066406
    4. ' primes' → logprob: -9.752418518066406
    5. 's' → logprob: -10.127418518066406
    6. ' ' → logprob: -10.502418518066406
    7. '_prime' → logprob: -10.877418518066406
    8. 'prime' → logprob: -12.002418518066406
    9. '_pr' → logprob: -12.252418518066406
    10. '  ' → logprob: -12.627418518066406

Token 219: ''à' (ID: 33688)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.648289680480957
    2. 'à' → logprob: -0.898289680480957
    3. '=' → logprob: -3.148289680480957
    4. ''à' → logprob: -4.523289680480957
    5. '(MAX' → logprob: -5.023289680480957
    6. '   ' → logprob: -5.523289680480957
    7. ' =' → logprob: -6.023289680480957
    8. '(' → logprob: -6.898289680480957
    9. ' ' → logprob: -8.023289680480957
    10. '’à' → logprob: -8.023289680480957

Token 220: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.1269323080778122
    2. ' MAX' → logprob: -2.126932382583618
    3. '(MAX' → logprob: -12.626932144165039
    4. '100' → logprob: -14.876932144165039
    5. ' ' → logprob: -15.001932144165039
    6. '[MAX' → logprob: -15.501932144165039
    7. '_MAX' → logprob: -15.751932144165039
    8. 'max' → logprob: -17.25193214416504
    9. '   ' → logprob: -17.87693214416504
    10. ' ' → logprob: -18.12693214416504

Token 221: '_M' (ID: 2372)
  Prédit: '_M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_M' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.875
    3. '_m' → logprob: -16.25
    4. 'M' → logprob: -16.875
    5. ' _' → logprob: -17.25
    6. '\' → logprob: -17.375
    7. '```' → logprob: -18.0
    8. '=' → logprob: -18.125
    9. '   ' → logprob: -18.25
    10. '=_' → logprob: -18.375

Token 222: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007642833050340414
    2. ' primes' → logprob: -5.13264274597168
    3. '
' → logprob: -7.75764274597168
    4. 'pr' → logprob: -7.88264274597168
    5. 'prime' → logprob: -8.50764274597168
    6. '	pr' → logprob: -8.88264274597168
    7. '    
' → logprob: -8.88264274597168
    8. '_pr' → logprob: -9.50764274597168
    9. 's' → logprob: -9.75764274597168
    10. ',' → logprob: -9.75764274597168

Token 223: ' éviter' (ID: 64013)
  Prédit: ' optimiser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' optimiser' → logprob: -0.9568870067596436
    2. ' faciliter' → logprob: -1.4568870067596436
    3. 'optim' → logprob: -1.7068870067596436
    4. ' une' → logprob: -3.0818870067596436
    5. ' optimisation' → logprob: -3.5818870067596436
    6. ' accél' → logprob: -3.8318870067596436
    7. 'une' → logprob: -4.081887245178223
    8. ' gagner' → logprob: -4.206887245178223
    9. 'perform' → logprob: -4.831887245178223
    10. ' améliorer' → logprob: -4.831887245178223

Token 224: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.22915801405906677
    2. 'de' → logprob: -3.2291579246520996
    3. ' les' → logprob: -3.2291579246520996
    4. ' d' → logprob: -3.6041579246520996
    5. ' des' → logprob: -3.8541579246520996
    6. ' le' → logprob: -4.1041579246521
    7. ' une' → logprob: -4.4791579246521
    8. 'd' → logprob: -4.6041579246521
    9. 'le' → logprob: -4.6041579246521
    10. ' recal' → logprob: -5.1041579246521

Token 225: ' recal' (ID: 147248)
  Prédit: ' recal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' recal' → logprob: -0.4184446930885315
    2. 're' → logprob: -1.1684446334838867
    3. 'calcul' → logprob: -4.168444633483887
    4. ' refaire' → logprob: -5.293444633483887
    5. 'ré' → logprob: -5.543444633483887
    6. ' calcul' → logprob: -6.668444633483887
    7. ' recom' → logprob: -6.793444633483887
    8. 'r' → logprob: -6.918444633483887
    9. ' rép' → logprob: -7.043444633483887
    10. 'repr' → logprob: -7.918444633483887

Token 226: 'cul' (ID: 2885)
  Prédit: 'cul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.00010616567305987701
    2. '```' → logprob: -10.500105857849121
    3. '   ' → logprob: -10.875105857849121
    4. 'c' → logprob: -11.000105857849121
    5. '
' → logprob: -11.625105857849121
    6. 'cular' → logprob: -11.875105857849121
    7. ' ' → logprob: -12.375105857849121
    8. '  ' → logprob: -13.125105857849121
    9. '
' → logprob: -13.250105857849121
    10. '

' → logprob: -13.250105857849121

Token 227: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00021045419271104038
    2. 'ating' → logprob: -9.500210762023926
    3. 'ation' → logprob: -10.125210762023926
    4. '#' → logprob: -10.375210762023926
    5. 's' → logprob: -10.625210762023926
    6. '
' → logprob: -11.625210762023926
    7. 'ations' → logprob: -11.875210762023926
    8. 'ate' → logprob: -12.000210762023926
    9. 'uer' → logprob: -12.500210762023926
    10. '   ' → logprob: -13.000210762023926

Token 228: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 229: ' chaque' (ID: 21194)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.03007095865905285
    2. ' chaque' → logprob: -3.5300710201263428
    3. 'ch' → logprob: -8.655071258544922
    4. '   ' → logprob: -10.530071258544922
    5. 'each' → logprob: -10.655071258544922
    6. 'Chaque' → logprob: -10.905071258544922
    7. 'tout' → logprob: -11.155071258544922
    8. 'la' → logprob: -11.155071258544922
    9. 'CHA' → logprob: -11.655071258544922
    10. ' cha' → logprob: -11.780071258544922

Token 230: ' cas' (ID: 2108)
  Prédit: 'appel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'appel' → logprob: -1.045987844467163
    2. ' appel' → logprob: -1.420987844467163
    3. ' it' → logprob: -2.045987844467163
    4. 'entrée' → logprob: -2.545987844467163
    5. 'it' → logprob: -2.670987844467163
    6. ' boucle' → logprob: -3.045987844467163
    7. 'lecture' → logprob: -4.045988082885742
    8. ' fois' → logprob: -4.545988082885742
    9. ' ligne' → logprob: -4.545988082885742
    10. 'ligne' → logprob: -4.670988082885742

Token 231: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022111583966761827
    2. ' primes' → logprob: -7.002211093902588
    3. '    
' → logprob: -7.502211093902588
    4. 'prime' → logprob: -8.002211570739746
    5. 'pr' → logprob: -8.502211570739746
    6. ' prime' → logprob: -10.252211570739746
    7. '	pr' → logprob: -10.502211570739746
    8. 'prem' → logprob: -10.627211570739746
    9. '
' → logprob: -10.877211570739746
    10. '_prime' → logprob: -10.877211570739746

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011823773384094238
    2. '    
' → logprob: -4.511823654174805
    3. ' primes' → logprob: -7.761823654174805
    4. '
' → logprob: -8.761823654174805
    5. 'prime' → logprob: -9.636823654174805
    6. 's' → logprob: -10.761823654174805
    7. '  
' → logprob: -11.136823654174805
    8. ' prime' → logprob: -11.386823654174805
    9. 'pr' → logprob: -11.636823654174805
    10. '   
' → logprob: -11.761823654174805

Token 233: ' primes' (ID: 104042)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.025203438475728035
    2. 'prime' → logprob: -4.275203227996826
    3. ' primes' → logprob: -4.525203227996826
    4. ' prime' → logprob: -9.150203704833984
    5. 'prim' → logprob: -11.150203704833984
    6. 'pre' → logprob: -11.775203704833984
    7. '   ' → logprob: -11.900203704833984
    8. 'prem' → logprob: -12.400203704833984
    9. 'max' → logprob: -12.900203704833984
    10. 'pri' → logprob: -14.275203704833984

Token 234: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0031781906727701426
    2. '=' → logprob: -5.753178119659424
    3. ',' → logprob: -15.128178596496582
    4. ' ' → logprob: -16.503177642822266
    5. '_' → logprob: -17.378177642822266
    6. ' ' → logprob: -18.128177642822266
    7. ' =[' → logprob: -18.503177642822266
    8. ' ,' → logprob: -18.878177642822266
    9. '   ' → logprob: -18.878177642822266
    10. '＝' → logprob: -18.878177642822266

Token 235: ' sieve' (ID: 142781)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6935887336730957
    2. ' sieve' → logprob: -0.6935887336730957
    3. 'set' → logprob: -8.193588256835938
    4. ' set' → logprob: -8.818588256835938
    5. '	s' → logprob: -11.818588256835938
    6. ' ' → logprob: -13.068588256835938
    7. 'sie' → logprob: -13.193588256835938
    8. '[s' → logprob: -13.318588256835938
    9. ' ' → logprob: -14.193588256835938
    10. '```' → logprob: -14.318588256835938

Token 236: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.9361264946837764e-07
    2. '_for' → logprob: -17.25
    3. ' _' → logprob: -17.875
    4. '_' → logprob: -18.25
    5. '"_' → logprob: -18.75
    6. '_OF' → logprob: -18.875
    7. '_to' → logprob: -18.875
    8. '\' → logprob: -19.0
    9. '```' → logprob: -19.125
    10. 's' → logprob: -19.125

Token 237: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0001805377542041242
    2. 'erat' → logprob: -8.6251802444458
    3. 'E' → logprob: -15.6251802444458
    4. ' erat' → logprob: -15.7501802444458
    5. '_er' → logprob: -16.000181198120117
    6. 'er' → logprob: -16.125181198120117
    7. 'eras' → logprob: -16.125181198120117
    8. 'e' → logprob: -16.250181198120117
    9. 'eret' → logprob: -17.500181198120117
    10. 'erad' → logprob: -17.750181198120117

Token 238: 'erat' (ID: 73282)
  Prédit: 'erat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erat' → logprob: -2.2200749754119897e-06
    2. 'eras' → logprob: -14.625001907348633
    3. ' erat' → logprob: -14.875001907348633
    4. 'eret' → logprob: -15.000001907348633
    5. 'arat' → logprob: -15.000001907348633
    6. 'erap' → logprob: -15.875001907348633
    7. 'erit' → logprob: -16.125001907348633
    8. 'er' → logprob: -16.125001907348633
    9. 'eral' → logprob: -16.750001907348633
    10. '_' → logprob: -16.875001907348633

Token 239: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.02102947235107422
    2. 'os' → logprob: -4.271029472351074
    3. 'st' → logprob: -5.021029472351074
    4. 'es' → logprob: -9.271029472351074
    5. 'osten' → logprob: -9.521029472351074
    6. 'est' → logprob: -11.021029472351074
    7. 'oth' → logprob: -11.146029472351074
    8. 'is' → logprob: -11.646029472351074
    9. ' ost' → logprob: -11.896029472351074
    10. 'stes' → logprob: -12.271029472351074

Token 240: 'hen' (ID: 5447)
  Prédit: 'enes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enes' → logprob: -0.5789283514022827
    2. 'es' → logprob: -1.0789283514022827
    3. 'hen' → logprob: -2.3289284706115723
    4. 'nes' → logprob: -7.203928470611572
    5. 'en' → logprob: -7.203928470611572
    6. 'then' → logprob: -9.078927993774414
    7. 'phes' → logprob: -9.078927993774414
    8. 'hes' → logprob: -9.328927993774414
    9. 'phen' → logprob: -9.703927993774414
    10. 'os' → logprob: -9.953927993774414

Token 241: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.981667537620524e-06
    2. ' es' → logprob: -14.500001907348633
    3. '#' → logprob: -15.000001907348633
    4. 's' → logprob: -15.500001907348633
    5. 'nes' → logprob: -15.875001907348633
    6. '```' → logprob: -16.125001907348633
    7. 'th' → logprob: -16.500001907348633
    8. '_' → logprob: -16.625001907348633
    9. 'os' → logprob: -16.875001907348633
    10. 'res' → logprob: -17.000001907348633

Token 242: '(MAX' (ID: 129209)
  Prédit: '(MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(MAX' → logprob: -0.0002060436672763899
    2. '(' → logprob: -8.500205993652344
    3. 'MAX' → logprob: -13.750205993652344
    4. ' (' → logprob: -14.125205993652344
    5. '(M' → logprob: -15.375205993652344
    6. '(Max' → logprob: -15.625205993652344
    7. '(
' → logprob: -16.125205993652344
    8. '(max' → logprob: -16.125205993652344
    9. '(NUM' → logprob: -16.750205993652344
    10. ' MAX' → logprob: -17.125205993652344

Token 243: '_M' (ID: 2372)
  Prédit: '_M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_M' → logprob: -1.8624639324116288e-06
    2. 'M' → logprob: -13.500001907348633
    3. ' ' → logprob: -16.750001907348633
    4. '_MAX' → logprob: -16.875001907348633
    5. '_' → logprob: -17.125001907348633
    6. ' _' → logprob: -17.250001907348633
    7. '   ' → logprob: -17.500001907348633
    8. '```' → logprob: -17.500001907348633
    9. '_m' → logprob: -18.000001907348633
    10. ')' → logprob: -18.000001907348633

Token 244: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.226628895296017e-06
    2. ')
' → logprob: -12.625007629394531
    3. ' )' → logprob: -12.875007629394531
    4. ')

' → logprob: -14.000007629394531
    5. '))' → logprob: -15.875007629394531
    6. ')`' → logprob: -16.12500762939453
    7. ')
' → logprob: -16.37500762939453
    8. '   ' → logprob: -16.87500762939453
    9. ')

' → logprob: -18.00000762939453
    10. ')**' → logprob: -18.62500762939453

Token 245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4572959840297699
    2. '
' → logprob: -1.0822960138320923
    3. '    
' → logprob: -3.5822958946228027
    4. 'while' → logprob: -9.207296371459961
    5. ' while' → logprob: -9.457296371459961
    6. '  
' → logprob: -9.582296371459961
    7. '```' → logprob: -9.707296371459961
    8. ' 
' → logprob: -10.332296371459961
    9. '   
' → logprob: -11.207296371459961
    10. '\n' → logprob: -11.832296371459961

Token 246: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2062244415283203
    2. '   ' → logprob: -2.2062244415283203
    3. ' while' → logprob: -2.5812244415283203
    4. 'for' → logprob: -8.33122444152832
    5. '    
' → logprob: -8.83122444152832
    6. '
' → logprob: -8.95622444152832
    7. ' for' → logprob: -11.33122444152832
    8. '```' → logprob: -11.95622444152832
    9. '	while' → logprob: -12.33122444152832
    10. '  ' → logprob: -12.70622444152832

Token 247: ' Pour' (ID: 13931)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.16279281675815582
    2. 'for' → logprob: -1.9127928018569946
    3. ' while' → logprob: -6.037792682647705
    4. ' for' → logprob: -8.662793159484863
    5. 'import' → logprob: -12.537793159484863
    6. '   ' → logprob: -14.162793159484863
    7. 'wh' → logprob: -14.412793159484863
    8. 'line' → logprob: -15.037793159484863
    9. 'try' → logprob: -16.037792205810547
    10. '```' → logprob: -16.037792205810547

Token 248: ' un' (ID: 537)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.005328743252903223
    2. ' ' → logprob: -6.00532865524292
    3. ' ligne' → logprob: -6.63032865524292
    4. ' i' → logprob: -7.63032865524292
    5. ' _' → logprob: -8.130329132080078
    6. ' ' → logprob: -8.505329132080078
    7. ' l' → logprob: -8.880329132080078
    8. ' m' → logprob: -8.880329132080078
    9. '  ' → logprob: -10.005329132080078
    10. 'line' → logprob: -10.005329132080078

Token 249: ' accès' (ID: 65948)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.045148421078920364
    2. ' ' → logprob: -4.0451483726501465
    3. ' i' → logprob: -4.7951483726501465
    4. ' ligne' → logprob: -5.0451483726501465
    5. ' m' → logprob: -5.5451483726501465
    6. ' _' → logprob: -5.6701483726501465
    7. '  ' → logprob: -7.1701483726501465
    8. ' p' → logprob: -7.7951483726501465
    9. 'line' → logprob: -8.045148849487305
    10. ' l' → logprob: -8.045148849487305

Token 250: ' rapide' (ID: 44887)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0006039142608643
    2. ' set' → logprob: -1.8756039142608643
    3. ' _' → logprob: -2.0006039142608643
    4. ' rapide' → logprob: -2.3756039142608643
    5. '_' → logprob: -2.7506039142608643
    6. '_set' → logprob: -3.0006039142608643
    7. ' des' → logprob: -3.7506039142608643
    8. ' prime' → logprob: -3.8756039142608643
    9. ' primes' → logprob: -4.125603675842285
    10. ' aux' → logprob: -4.375603675842285

Token 251: ',' (ID: 11)
  Prédit: ' primes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.6741907000541687
    2. '   ' → logprob: -2.2991907596588135
    3. ' des' → logprob: -2.4241907596588135
    4. '_set' → logprob: -3.0491907596588135
    5. '_pr' → logprob: -3.0491907596588135
    6. 'pr' → logprob: -3.2991907596588135
    7. '_prime' → logprob: -3.5491907596588135
    8. 'prime' → logprob: -4.049190521240234
    9. '	pr' → logprob: -4.049190521240234
    10. ' prime' → logprob: -4.174190521240234

Token 252: ' transformation' (ID: 26242)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.20521457493305206
    2. 'prime' → logprob: -1.7052146196365356
    3. ' primes' → logprob: -6.080214500427246
    4. '   ' → logprob: -7.455214500427246
    5. 'set' → logprob: -8.080214500427246
    6. ' prime' → logprob: -8.080214500427246
    7. 'is' → logprob: -8.330214500427246
    8. 'index' → logprob: -10.955214500427246
    9. 'prim' → logprob: -11.080214500427246
    10. 'def' → logprob: -12.080214500427246

Token 253: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.4342844784259796
    2. ' primes' → logprob: -1.6842844486236572
    3. ' des' → logprob: -2.4342844486236572
    4. 'pr' → logprob: -3.0592844486236572
    5. 'en' → logprob: -4.559284687042236
    6. '_pr' → logprob: -4.684284687042236
    7. '   ' → logprob: -5.309284687042236
    8. ' set' → logprob: -6.184284687042236
    9. ' de' → logprob: -6.809284687042236
    10. '	pr' → logprob: -6.809284687042236

Token 254: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.014233322814106941
    2. ' set' → logprob: -4.264233112335205
    3. '_set' → logprob: -10.139233589172363
    4. 'sets' → logprob: -11.889233589172363
    5. 'aset' → logprob: -12.139233589172363
    6. ' a' → logprob: -12.389233589172363
    7. 'a' → logprob: -12.389233589172363
    8. 's' → logprob: -12.389233589172363
    9. '=set' → logprob: -13.514233589172363
    10. 'se' → logprob: -14.014233589172363

Token 255: '
' (ID: 198)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.3878897726535797
    2. '(pr' → logprob: -1.2628897428512573
    3. ' primes' → logprob: -3.637889862060547
    4. '_pr' → logprob: -5.137889862060547
    5. '(' → logprob: -5.262889862060547
    6. '	pr' → logprob: -7.387889862060547
    7. ' (' → logprob: -8.262889862060547
    8. ')' → logprob: -8.762889862060547
    9. '(
' → logprob: -9.012889862060547
    10. 's' → logprob: -9.762889862060547

Token 256: '   ' (ID: 271)
  Prédit: ' primes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.6752857565879822
    2. 'pr' → logprob: -0.9252857565879822
    3. '(pr' → logprob: -2.425285816192627
    4. '_pr' → logprob: -5.425285816192627
    5. '	pr' → logprob: -7.425285816192627
    6. ' pr' → logprob: -7.800285816192627
    7. '   ' → logprob: -8.300285339355469
    8. '(' → logprob: -8.675285339355469
    9. ' =' → logprob: -9.175285339355469
    10. ' prime' → logprob: -10.550285339355469

Token 257: ' primes' (ID: 104042)
  Prédit: ' primes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.04356107860803604
    2. 'pr' → logprob: -3.5435609817504883
    3. ' prime' → logprob: -4.543560981750488
    4. 'prime' → logprob: -5.793560981750488
    5. ' pr' → logprob: -11.918560981750488
    6. ' prim' → logprob: -11.918560981750488
    7. '	pr' → logprob: -12.293560981750488
    8. '(pr' → logprob: -12.418560981750488
    9. '_prime' → logprob: -12.543560981750488
    10. '_pr' → logprob: -13.168560981750488

Token 258: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.021474584937095642
    2. '_' → logprob: -4.271474361419678
    3. ' =' → logprob: -5.021474361419678
    4. '=' → logprob: -7.396474361419678
    5. '=set' → logprob: -10.521474838256836
    6. '_=' → logprob: -11.396474838256836
    7. '_sets' → logprob: -11.771474838256836
    8. 'Set' → logprob: -11.771474838256836
    9. ' _' → logprob: -12.146474838256836
    10. 'set' → logprob: -12.896474838256836

Token 259: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011048054322600365
    2. '=' → logprob: -4.511047840118408
    3. ' ' → logprob: -16.01104736328125
    4. ')' → logprob: -17.63604736328125
    5. '  ' → logprob: -17.88604736328125
    6. ',' → logprob: -18.13604736328125
    7. ' =
' → logprob: -18.38604736328125
    8. ' ' → logprob: -18.63604736328125
    9. '   ' → logprob: -18.63604736328125
    10. ' =)' → logprob: -18.63604736328125

Token 260: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.12692831456661224
    2. ' set' → logprob: -2.1269283294677734
    3. '(set' → logprob: -16.001928329467773
    4. '=set' → logprob: -16.501928329467773
    5. '	set' → logprob: -16.876928329467773
    6. ')set' → logprob: -18.876928329467773
    7. ' ' → logprob: -19.376928329467773
    8. '{' → logprob: -19.626928329467773
    9. '_set' → logprob: -20.626928329467773
    10. 's' → logprob: -20.876928329467773

Token 261: '(pr' (ID: 38401)
  Prédit: '(pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -9.519893501419574e-05
    2. ' (' → logprob: -9.62509536743164
    3. '(' → logprob: -10.50009536743164
    4. '()' → logprob: -14.37509536743164
    5. ')' → logprob: -15.12509536743164
    6. 'pr' → logprob: -15.37509536743164
    7. '	pr' → logprob: -15.87509536743164
    8. '(
' → logprob: -16.00009536743164
    9. '(pl' → logprob: -16.25009536743164
    10. '(p' → logprob: -17.25009536743164

Token 262: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.011559857986867428
    2. 'pr' → logprob: -5.011559963226318
    3. 's' → logprob: -5.761559963226318
    4. '(pr' → logprob: -7.636559963226318
    5. ' primes' → logprob: -8.01155948638916
    6. 'es' → logprob: -8.88655948638916
    7. 'im' → logprob: -8.88655948638916
    8. 'mes' → logprob: -9.01155948638916
    9. 'ines' → logprob: -9.13655948638916
    10. '_pr' → logprob: -9.26155948638916

Token 263: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ')
' → logprob: -13.125003814697266
    3. ' )' → logprob: -13.250003814697266
    4. '   ' → logprob: -15.875003814697266
    5. ')

' → logprob: -17.500003814697266
    6. ')
' → logprob: -18.250003814697266
    7. '))' → logprob: -19.375003814697266
    8. '),' → logprob: -20.000003814697266
    9. '}' → logprob: -20.250003814697266
    10. ' ' → logprob: -20.250003814697266

Token 264: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4836233854293823
    2. '   ' → logprob: -0.9836233854293823
    3. '    
' → logprob: -4.983623504638672
    4. 'while' → logprob: -6.233623504638672
    5. ' while' → logprob: -7.358623504638672
    6. ' 
' → logprob: -10.733623504638672
    7. '  
' → logprob: -11.608623504638672
    8. '

' → logprob: -11.983623504638672
    9. '	while' → logprob: -12.983623504638672
    10. '   
' → logprob: -12.983623504638672

Token 265: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.28304609656333923
    2. '   ' → logprob: -1.5330461263656616
    3. ' while' → logprob: -3.533046007156372
    4. 'for' (adapté à ' for') → logprob: -6.658046245574951
    5. '    
' → logprob: -9.783045768737793
    6. ' for' → logprob: -10.283045768737793
    7. '
' → logprob: -10.408045768737793
    8. 'line' → logprob: -11.533045768737793
    9. '	while' → logprob: -13.283045768737793
    10. '```' → logprob: -13.658045768737793

Token 266: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.00014191943046171218
    2. ' ligne' → logprob: -9.625142097473145
    3. 'line' → logprob: -10.250142097473145
    4. '	line' → logprob: -10.625142097473145
    5. ' ' → logprob: -12.250142097473145
    6. ' _' → logprob: -12.375142097473145
    7. ' ' → logprob: -12.500142097473145
    8. ' l' → logprob: -14.125142097473145
    9. '_line' → logprob: -14.375142097473145
    10. ' linha' → logprob: -14.500142097473145

Token 267: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001706367009319365
    2. 'in' → logprob: -6.376706600189209
    3. ' ' → logprob: -12.87670612335205
    4. '	in' → logprob: -15.00170612335205
    5. '_in' → logprob: -15.12670612335205
    6. 'import' → logprob: -15.37670612335205
    7. '  ' → logprob: -15.87670612335205
    8. 's' → logprob: -15.87670612335205
    9. '_' → logprob: -16.001707077026367
    10. 'In' → logprob: -16.501707077026367

Token 268: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.10021055489778519
    2. ' sys' → logprob: -2.350210666656494
    3. '(sys' → logprob: -13.350210189819336
    4. '=sys' → logprob: -13.350210189819336
    5. '	sys' → logprob: -14.475210189819336
    6. 'iter' → logprob: -16.975210189819336
    7. '```' → logprob: -18.225210189819336
    8. 'import' → logprob: -18.350210189819336
    9. 'stdin' → logprob: -18.475210189819336
    10. 'in' → logprob: -18.475210189819336

Token 269: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00015574338613077998
    2. '.' → logprob: -9.375155448913574
    3. '.readline' → logprob: -9.750155448913574
    4. 'stdin' → logprob: -11.750155448913574
    5. '.stdout' → logprob: -13.000155448913574
    6. '(stdin' → logprob: -13.375155448913574
    7. ' stdin' → logprob: -14.125155448913574
    8. '.argv' → logprob: -16.62515640258789
    9. ' in' → logprob: -17.00015640258789
    10. '.std' → logprob: -17.12515640258789

Token 270: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009657861664891243
    2. '.strip' → logprob: -5.384657859802246
    3. '.readline' → logprob: -5.509657859802246
    4. ':
' → logprob: -7.634657859802246
    5. '.' → logprob: -8.634657859802246
    6. '.rstrip' → logprob: -8.759657859802246
    7. '():' → logprob: -10.259657859802246
    8. '.readlines' → logprob: -10.759657859802246
    9. '):' → logprob: -10.759657859802246
    10. ' :' → logprob: -10.759657859802246

Token 271: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04920366406440735
    2. '   ' → logprob: -3.799203634262085
    3. '.strip' → logprob: -4.549203872680664
    4. ':' → logprob: -5.174203872680664
    5. '.rstrip' → logprob: -5.424203872680664
    6. '        
' → logprob: -5.924203872680664
    7. '    
' → logprob: -7.049203872680664
    8. '
' → logprob: -8.049203872680664
    9. ':
' → logprob: -8.424203872680664
    10. '       
' → logprob: -9.424203872680664

Token 272: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19895173609256744
    2. ' line' → logprob: -1.9489517211914062
    3. 'line' → logprob: -3.3239517211914062
    4. '        
' → logprob: -7.323951721191406
    5. '   ' → logprob: -7.448951721191406
    6. ' stripped' → logprob: -8.198951721191406
    7. ' if' → logprob: -9.073951721191406
    8. ' parts' → logprob: -9.698951721191406
    9. '	line' → logprob: -9.948951721191406
    10. 'strip' → logprob: -10.073951721191406

Token 273: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.4213210940361023
    2. 'line' → logprob: -1.171321153640747
    3. ' not' → logprob: -3.546321153640747
    4. 'not' → logprob: -5.296320915222168
    5. '	line' → logprob: -11.796320915222168
    6. ' ' → logprob: -12.171320915222168
    7. '=line' → logprob: -12.546320915222168
    8. '   ' → logprob: -13.671320915222168
    9. '(line' → logprob: -13.921320915222168
    10. '_line' → logprob: -14.421320915222168

Token 274: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0018103641923516989
    2. '.' → logprob: -6.376810550689697
    3. '.rstrip' → logprob: -9.376810073852539
    4. '.startswith' → logprob: -11.626810073852539
    5. 'strip' → logprob: -12.251810073852539
    6. '==' → logprob: -12.626810073852539
    7. ' ==' → logprob: -12.876810073852539
    8. ' .' → logprob: -13.001810073852539
    9. '.chomp' → logprob: -13.626810073852539
    10. '.trim' → logprob: -15.626810073852539

Token 275: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003192447591573
    2. '()==' → logprob: -5.75319242477417
    3. '==' → logprob: -11.753192901611328
    4. ' ==' → logprob: -12.253192901611328
    5. ' ()' → logprob: -13.128192901611328
    6. '()=="' → logprob: -16.878192901611328
    7. ')' → logprob: -18.003192901611328
    8. '=' → logprob: -18.878192901611328
    9. ')==' → logprob: -19.253192901611328
    10. '（）' → logprob: -19.628192901611328

Token 276: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06201843544840813
    2. ' ==' → logprob: -2.812018394470215
    3. '()==' → logprob: -10.312018394470215
    4. '===' → logprob: -12.312018394470215
    5. '=' → logprob: -12.437018394470215
    6. ')==' → logprob: -12.687018394470215
    7. '=="' → logprob: -13.062018394470215
    8. '==
' → logprob: -13.437018394470215
    9. '=='' → logprob: -13.812018394470215
    10. '()' → logprob: -14.562018394470215

Token 277: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0009146820520982146
    2. ''' → logprob: -7.000914573669434
    3. ' "' → logprob: -12.750914573669434
    4. '0' → logprob: -15.875914573669434
    5. ' '' → logprob: -17.50091552734375
    6. '   ' → logprob: -18.62591552734375
    7. ' ' → logprob: -18.62591552734375
    8. '("' → logprob: -19.50091552734375
    9. ''"' → logprob: -19.50091552734375
    10. '""' → logprob: -19.62591552734375

Token 278: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '"' → logprob: -22.125
    3. ' ' → logprob: -22.625
    4. '```' → logprob: -24.625
    5. '000' → logprob: -25.5
    6. '00' → logprob: -26.875
    7. ''' → logprob: -27.0
    8. '")' → logprob: -27.0
    9. '０' → logprob: -27.125
    10. '۰' → logprob: -27.25

Token 279: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0002632430987432599
    2. '0' → logprob: -8.250263214111328
    3. '  ' → logprob: -13.750263214111328
    4. ' ' → logprob: -14.125263214111328
    5. '   ' → logprob: -16.375263214111328
    6. ',' → logprob: -17.625263214111328
    7. '_' → logprob: -17.875263214111328
    8. '3' → logprob: -17.875263214111328
    9. '000' → logprob: -18.375263214111328
    10. '```' → logprob: -19.000263214111328

Token 280: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '
' → logprob: -18.250011444091797
    4. '   ' → logprob: -19.250011444091797
    5. '```' → logprob: -19.375011444091797
    6. '

' → logprob: -19.500011444091797
    7. '  ' → logprob: -19.500011444091797
    8. '۰' → logprob: -21.250011444091797
    9. '０' → logprob: -21.375011444091797
    10. '
' → logprob: -21.625011444091797

Token 281: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023246990516781807
    2. '0' → logprob: -3.773247003555298
    3. '3' → logprob: -14.523246765136719
    4. ' ' → logprob: -15.023246765136719
    5. '  ' → logprob: -15.148246765136719
    6. '<|end|>' → logprob: -15.648246765136719
    7. '"' → logprob: -16.02324676513672
    8. '<|end|>' → logprob: -17.77324676513672
    9. '```' → logprob: -17.89824676513672
    10. '_' → logprob: -18.14824676513672

Token 282: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '"' → logprob: -16.375024795532227
    4. '```' → logprob: -17.625024795532227
    5. '

' → logprob: -18.812524795532227
    6. '  ' → logprob: -19.375024795532227
    7. '
' → logprob: -19.875024795532227
    8. '۰' → logprob: -20.000024795532227
    9. '০' → logprob: -20.250024795532227
    10. '3' → logprob: -20.250024795532227

Token 283: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.030105886980891228
    2. '":' → logprob: -3.5301058292388916
    3. '":
' → logprob: -8.280105590820312
    4. '\n' → logprob: -9.905105590820312
    5. '"' → logprob: -10.530105590820312
    6. '   ' → logprob: -11.655105590820312
    7. '"):
' → logprob: -12.280105590820312
    8. '       ' → logprob: -12.405105590820312
    9. ':
' → logprob: -12.655105590820312
    10. '):
' → logprob: -13.280105590820312

Token 284: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005672106635756791
    2. '       ' → logprob: -7.500567436218262
    3. ':' → logprob: -11.750567436218262
    4. '
' → logprob: -12.500567436218262
    5. '          ' → logprob: -13.875567436218262
    6. '               ' → logprob: -14.875567436218262
    7. ':
' → logprob: -15.125567436218262
    8. ',' → logprob: -15.625567436218262
    9. '         ' → logprob: -15.750567436218262
    10. '   ' → logprob: -15.750567436218262

Token 285: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.3607865273952484
    2. '           ' → logprob: -1.3607865571975708
    3. ' break' → logprob: -3.1107864379882812
    4. '       ' → logprob: -6.735786437988281
    5. '               ' → logprob: -7.360786437988281
    6. '	break' → logprob: -11.110786437988281
    7. 'return' → logprob: -12.235786437988281
    8. '   ' → logprob: -13.610786437988281
    9. '
' → logprob: -13.735786437988281
    10. '		' → logprob: -14.860786437988281

Token 286: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41346946358680725
    2. '       ' → logprob: -1.1634694337844849
    3. '        
' → logprob: -3.6634695529937744
    4. '  
' → logprob: -8.413469314575195
    5. '    
' → logprob: -8.538469314575195
    6. ' 
' → logprob: -9.663469314575195
    7. '            
' → logprob: -10.288469314575195
    8. '		
' → logprob: -11.038469314575195
    9. '       
' → logprob: -11.163469314575195
    10. '
' → logprob: -11.288469314575195

Token 287: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4151850938796997
    2. '
' → logprob: -1.7901850938796997
    3. '        
' → logprob: -1.7901850938796997
    4. ' 
' → logprob: -5.54018497467041
    5. '  
' → logprob: -7.41518497467041
    6. '        ' → logprob: -8.04018497467041
    7. '       
' → logprob: -8.41518497467041
    8. '    
' → logprob: -8.66518497467041
    9. '         
' → logprob: -8.79018497467041
    10. '<|end|>' → logprob: -9.54018497467041

Token 288: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.6856658458709717
    2. ' m' → logprob: -1.5606658458709717
    3. '       ' → logprob: -1.8106658458709717
    4. 'a' → logprob: -2.6856658458709717
    5. ' a' → logprob: -3.4356658458709717
    6. 'x' → logprob: -5.685666084289551
    7. ' parts' → logprob: -5.685666084289551
    8. 'n' → logprob: -5.810666084289551
    9. ' n' → logprob: -5.935666084289551
    10. '   ' → logprob: -6.310666084289551

Token 289: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006133131100796163
    2. ',s' → logprob: -8.50061321258545
    3. ' ,' → logprob: -9.00061321258545
    4. ',m' → logprob: -9.37561321258545
    5. ',n' → logprob: -9.87561321258545
    6. ',a' → logprob: -10.62561321258545
    7. '1' → logprob: -10.62561321258545
    8. 's' → logprob: -11.12561321258545
    9. ',int' → logprob: -11.12561321258545
    10. '_str' → logprob: -11.50061321258545

Token 290: ' a' (ID: 261)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13422994315624237
    2. 'a' → logprob: -2.884229898452759
    3. 'd' → logprob: -3.884229898452759
    4. 'p' → logprob: -4.509230136871338
    5. 'k' → logprob: -4.509230136871338
    6. 'x' → logprob: -4.634230136871338
    7. 'l' → logprob: -5.759230136871338
    8. 'r' → logprob: -5.884230136871338
    9. 'c' → logprob: -6.259230136871338
    10. 's' → logprob: -6.509230136871338

Token 291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.0339031834737398e-05
    2. ' ,' → logprob: -10.875020027160645
    3. 's' → logprob: -15.250020027160645
    4. 'a' → logprob: -15.250020027160645
    5. ',b' → logprob: -15.500020027160645
    6. 'b' → logprob: -15.625020027160645
    7. 't' → logprob: -15.875020027160645
    8. 'n' → logprob: -16.12502098083496
    9. 'm' → logprob: -16.87502098083496
    10. 'c' → logprob: -17.12502098083496

Token 292: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.36844030022621155
    2. 'n' → logprob: -1.4934402704238892
    3. 'd' → logprob: -3.1184403896331787
    4. 'c' → logprob: -4.6184401512146
    5. 'r' → logprob: -4.9934401512146
    6. 'p' → logprob: -5.1184401512146
    7. 'k' → logprob: -5.2434401512146
    8. 'l' → logprob: -5.3684401512146
    9. 'x' → logprob: -6.7434401512146
    10. ' b' → logprob: -6.8684401512146

Token 293: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868716359138489
    2. ' =' → logprob: -1.136871576309204
    3. ')' → logprob: -15.761871337890625
    4. ',' → logprob: -16.761871337890625
    5. '=line' → logprob: -16.761871337890625
    6. ' ' → logprob: -17.011871337890625
    7. '=

' → logprob: -17.011871337890625
    8. ')=' → logprob: -17.136871337890625
    9. '=int' → logprob: -17.511871337890625
    10. '＝' → logprob: -17.761871337890625

Token 294: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.31326475739479065
    2. ' map' → logprob: -1.3132647275924683
    3. 'line' → logprob: -13.063264846801758
    4. '(map' → logprob: -14.688264846801758
    5. ' line' → logprob: -15.563264846801758
    6. '[' → logprob: -15.938264846801758
    7. '	map' → logprob: -16.813264846801758
    8. '   ' → logprob: -17.938264846801758
    9. '.map' → logprob: -18.313264846801758
    10. ' ' → logprob: -18.563264846801758

Token 295: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000320565392030403
    2. 'int' → logprob: -8.500320434570312
    3. '(' → logprob: -9.125320434570312
    4. '(str' → logprob: -11.875320434570312
    5. ' (' → logprob: -14.250320434570312
    6. ' int' → logprob: -15.125320434570312
    7. '[int' → logprob: -16.125320434570312
    8. '(lambda' → logprob: -16.375320434570312
    9. 'str' → logprob: -17.000320434570312
    10. '=int' → logprob: -17.375320434570312

Token 296: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0004020713677164167
    2. ')' → logprob: -8.125402450561523
    3. ',line' → logprob: -10.125402450561523
    4. '(' → logprob: -10.500402450561523
    5. 'line' → logprob: -11.250402450561523
    6. ' line' → logprob: -11.500402450561523
    7. '=line' → logprob: -11.500402450561523
    8. '[line' → logprob: -13.000402450561523
    9. ')(' → logprob: -14.000402450561523
    10. '	line' → logprob: -14.000402450561523

Token 297: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.018150413408875465
    2. ' line' → logprob: -4.018150329589844
    3. '(line' → logprob: -15.018150329589844
    4. '	line' → logprob: -16.143150329589844
    5. '#line' → logprob: -17.518150329589844
    6. '[line' → logprob: -17.518150329589844
    7. '=line' → logprob: -17.643150329589844
    8. ')' → logprob: -18.143150329589844
    9. '_line' → logprob: -18.643150329589844
    10. '   ' → logprob: -19.393150329589844

Token 298: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.006172297988086939
    2. '().' → logprob: -5.256172180175781
    3. '.split' → logprob: -7.006172180175781
    4. '.' → logprob: -10.506172180175781
    5. ' .' → logprob: -13.131172180175781
    6. 'strip' → logprob: -14.006172180175781
    7. '(strip' → logprob: -14.381172180175781
    8. '.readline' → logprob: -14.756172180175781
    9. '.rstrip' → logprob: -15.006172180175781
    10. '.trim' → logprob: -16.38117218017578

Token 299: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.320199877838604e-07
    2. '()' → logprob: -14.875
    3. '.split' → logprob: -18.625
    4. ' ().' → logprob: -18.875
    5. '(' → logprob: -21.75
    6. 'split' → logprob: -22.125
    7. '   ' → logprob: -23.0
    8. '()
' → logprob: -23.25
    9. ')' → logprob: -23.75
    10. '())' → logprob: -23.875

Token 300: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.054500666621607e-06
    2. ' split' → logprob: -13.37500286102295
    3. '(split' → logprob: -13.62500286102295
    4. '.split' → logprob: -16.250003814697266
    5. ')' → logprob: -16.750003814697266
    6. 'rstrip' → logprob: -17.875003814697266
    7. '```' → logprob: -18.000003814697266
    8. 'spl' → logprob: -19.125003814697266
    9. 'strip' → logprob: -19.500003814697266
    10. 'plit' → logprob: -19.625003814697266

Token 301: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0037452138494700193
    2. '()' → logprob: -5.753745079040527
    3. '('' → logprob: -7.628745079040527
    4. '(' → logprob: -10.253745079040527
    5. '())
' → logprob: -10.878745079040527
    6. ')' → logprob: -11.128745079040527
    7. '("' → logprob: -12.378745079040527
    8. '(','' → logprob: -12.753745079040527
    9. '()))' → logprob: -13.128745079040527
    10. ' ())' → logprob: -13.503745079040527

Token 302: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.685437023639679
    2. '       ' → logprob: -1.4354369640350342
    3. '   ' → logprob: -1.8104369640350342
    4. '    
' → logprob: -2.935436964035034
    5. ' 
' → logprob: -4.310437202453613
    6. '        
' → logprob: -4.435437202453613
    7. '<|end|>' → logprob: -4.685437202453613
    8. '  
' → logprob: -5.810437202453613
    9. '   
' → logprob: -6.435437202453613
    10. '\n' → logprob: -7.685437202453613

Token 303: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.3445966243743896
    2. 'if' → logprob: -1.4695966243743896
    3. 'count' → logprob: -1.7195966243743896
    4. 'found' → logprob: -3.0945966243743896
    5. '#' (adapté à ' #') → logprob: -3.7195966243743896
    6. 'res' → logprob: -3.9695966243743896
    7. 'dp' → logprob: -4.219596862792969
    8. 'for' → logprob: -4.469596862792969
    9. 'start' → logprob: -4.469596862792969
    10. 'valid' → logprob: -4.594596862792969

Token 304: ' Ratio' (ID: 84705)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0230331420898438
    2. '#' → logprob: -1.7730331420898438
    3. 'if' → logprob: -2.0230331420898438
    4. 'filtered' → logprob: -2.8980331420898438
    5. 'count' → logprob: -3.0230331420898438
    6. 'max' → logprob: -3.8980331420898438
    7. 'idx' → logprob: -4.148033142089844
    8. 'possible' → logprob: -4.148033142089844
    9. 'found' → logprob: -4.273033142089844
    10. 'valid' → logprob: -4.398033142089844

Token 305: ' minimal' (ID: 19957)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01750904507935047
    2. '=' → logprob: -4.2675089836120605
    3. '_ratio' → logprob: -6.2675089836120605
    4. '_' → logprob: -7.5175089836120605
    5. 's' → logprob: -8.517509460449219
    6. '_a' → logprob: -9.767509460449219
    7. '_c' → logprob: -9.892509460449219
    8. '_r' → logprob: -10.392509460449219
    9. '_prime' → logprob: -10.392509460449219
    10. '_p' → logprob: -10.392509460449219

Token 306: ' a' (ID: 261)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04198089614510536
    2. '=' → logprob: -3.2919809818267822
    3. '_min' → logprob: -6.041980743408203
    4. '_ratio' → logprob: -7.666980743408203
    5. '       ' → logprob: -8.666980743408203
    6. 's' → logprob: -8.791980743408203
    7. ',' → logprob: -9.041980743408203
    8. '        ' → logprob: -9.166980743408203
    9. '_' → logprob: -9.416980743408203
    10. '_max' → logprob: -9.791980743408203

Token 307: '/b' (ID: 7611)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1302005648612976
    2. '=' → logprob: -2.5052006244659424
    3. ',' → logprob: -4.005200386047363
    4. '_ratio' → logprob: -4.880200386047363
    5. '_possible' → logprob: -6.130200386047363
    6. 'nd' → logprob: -6.505200386047363
    7. '_value' → logprob: -6.630200386047363
    8. '_' → logprob: -6.880200386047363
    9. '_num' → logprob: -7.130200386047363
    10. '_needed' → logprob: -7.380200386047363

Token 308: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12125856429338455
    2. '=' → logprob: -2.496258497238159
    3. '       ' → logprob: -4.746258735656738
    4. '
' → logprob: -5.121258735656738
    5. ' 
' → logprob: -5.496258735656738
    6. ':' → logprob: -5.871258735656738
    7. '        
' → logprob: -6.371258735656738
    8. ',' → logprob: -6.871258735656738
    9. ' if' → logprob: -6.871258735656738
    10. '_ratio' → logprob: -6.871258735656738

Token 309: 'fraction' (ID: 173249)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1314847618341446
    2. ' )' → logprob: -2.5064847469329834
    3. 'if' → logprob: -3.8814847469329834
    4. ' if' → logprob: -4.6314849853515625
    5. '*' → logprob: -6.1314849853515625
    6. ')
' → logprob: -6.3814849853515625
    7. '=' → logprob: -6.8814849853515625
    8. '   ' → logprob: -7.3814849853515625
    9. ' *' → logprob: -7.3814849853515625
    10. ',' → logprob: -7.5064849853515625

Token 310: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17099152505397797
    2. ' )' → logprob: -2.2959914207458496
    3. ' <=' → logprob: -4.04599142074585
    4. '=' → logprob: -5.04599142074585
    5. ' >=' → logprob: -5.17099142074585
    6. '   ' → logprob: -5.42099142074585
    7. ' =' → logprob: -5.54599142074585
    8. '<=' → logprob: -5.67099142074585
    9. '>=' → logprob: -6.04599142074585
    10. ' *' → logprob: -6.54599142074585

Token 311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012161586433649063
    2. '        
' → logprob: -5.512161731719971
    3. ' =' → logprob: -6.387161731719971
    4. ')' → logprob: -6.637161731719971
    5. '        ' → logprob: -6.637161731719971
    6. '
' → logprob: -6.762161731719971
    7. ',' → logprob: -7.012161731719971
    8. '<|end|>' → logprob: -8.012161254882812
    9. ' if' → logprob: -8.137161254882812
    10. '=' → logprob: -8.137161254882812

Token 312: ' min' (ID: 1349)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.1516830921173096
    2. ' from' → logprob: -1.9016830921173096
    3. 'min' (adapté à ' min') → logprob: -2.0266830921173096
    4. 'g' → logprob: -2.1516830921173096
    5. 'ratio' → logprob: -2.5266830921173096
    6. 'if' → logprob: -2.9016830921173096
    7. '       ' → logprob: -3.4016830921173096
    8. 'import' → logprob: -3.4016830921173096
    9. ' if' → logprob: -3.9016830921173096
    10. ' min' → logprob: -4.0266828536987305

Token 313: '_ratio' (ID: 45680)
  Prédit: '_ratio'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ratio' → logprob: -0.004185959696769714
    2. '_num' → logprob: -6.129186153411865
    3. '_' → logprob: -6.504186153411865
    4. '_val' → logprob: -8.879185676574707
    5. '_rat' → logprob: -9.379185676574707
    6. '_n' → logprob: -9.754185676574707
    7. '_value' → logprob: -9.879185676574707
    8. '_fraction' → logprob: -9.879185676574707
    9. '_a' → logprob: -10.129185676574707
    10. '_r' → logprob: -10.754185676574707

Token 314: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026574179530143738
    2. '=' → logprob: -3.65157413482666
    3. ',' → logprob: -8.40157413482666
    4. ' ' → logprob: -10.65157413482666
    5. '_num' → logprob: -11.77657413482666
    6. '   ' → logprob: -12.27657413482666
    7. '_' → logprob: -12.77657413482666
    8. ')' → logprob: -12.77657413482666
    9. ' ,' → logprob: -13.77657413482666
    10. 'num' → logprob: -14.15157413482666

Token 315: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004095735494047403
    2. ' a' → logprob: -5.504095554351807
    3. '   ' → logprob: -12.129096031188965
    4. 'float' → logprob: -12.379096031188965
    5. ' ' → logprob: -13.254096031188965
    6. '0' → logprob: -13.504096031188965
    7. 'Fraction' → logprob: -14.004096031188965
    8. 'math' → logprob: -14.254096031188965
    9. '	a' → logprob: -14.379096031188965
    10. '(a' → logprob: -14.379096031188965

Token 316: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.029782310128211975
    2. '/' → logprob: -3.529782295227051
    3. ' ' → logprob: -11.77978229522705
    4. ' /
' → logprob: -11.77978229522705
    5. ' *' → logprob: -12.27978229522705
    6. '*' → logprob: -12.52978229522705
    7. '/b' → logprob: -13.02978229522705
    8. ',' → logprob: -13.40478229522705
    9. ' ' → logprob: -13.90478229522705
    10. ')' → logprob: -13.90478229522705

Token 317: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005233882926404476
    2. ' b' → logprob: -5.2552337646484375
    3. '   ' → logprob: -16.255233764648438
    4. ' ' → logprob: -16.755233764648438
    5. '(b' → logprob: -18.005233764648438
    6. '	b' → logprob: -18.255233764648438
    7. '       ' → logprob: -18.505233764648438
    8. '```' → logprob: -18.755233764648438
    9. '_b' → logprob: -19.005233764648438
    10. '  ' → logprob: -19.130233764648438

Token 318: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19623616337776184
    2. '       ' → logprob: -2.3212361335754395
    3. '<|end|>' → logprob: -2.6962361335754395
    4. '        
' → logprob: -4.8212361335754395
    5. '<|end|>' → logprob: -6.4462361335754395
    6. ' if' → logprob: -7.3212361335754395
    7. ')' → logprob: -7.6962361335754395
    8. ' 
' → logprob: -7.9462361335754395
    9. ',' → logprob: -7.9462361335754395
    10. '

' → logprob: -8.321236610412598

Token 319: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02946302480995655
    2. '       ' → logprob: -3.779463052749634
    3. '<|end|>' → logprob: -5.654462814331055
    4. '        
' → logprob: -6.404462814331055
    5. '

' → logprob: -7.654462814331055
    6. ' if' → logprob: -9.029462814331055
    7. 'if' → logprob: -9.154462814331055
    8. '
' → logprob: -9.404462814331055
    9. '<|end|>' → logprob: -10.029462814331055
    10. ',' → logprob: -10.279462814331055

Token 320: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5530813336372375
    2. '       ' → logprob: -1.0530812740325928
    3. '        
' → logprob: -3.3030812740325928
    4. '#' → logprob: -4.678081512451172
    5. 'if' → logprob: -4.928081512451172
    6. ' if' → logprob: -5.053081512451172
    7. '<|end|>' → logprob: -5.178081512451172
    8. ' for' → logprob: -6.553081512451172
    9. ' 
' → logprob: -6.678081512451172
    10. 'for' → logprob: -6.678081512451172

Token 321: '0' (ID: 15)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.391005516052246
    2. '       ' → logprob: -1.891005516052246
    3. 'for' → logprob: -2.016005516052246
    4. 'if' → logprob: -2.141005516052246
    5. 'max' → logprob: -2.766005516052246
    6. 'found' → logprob: -2.766005516052246
    7. 'result' → logprob: -3.016005516052246
    8. 'best' → logprob: -3.891005516052246
    9. 'min' → logprob: -4.016005516052246
    10. ' for' → logprob: -4.266005516052246

Token 322: ' <' (ID: 464)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 323: ' a' (ID: 261)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.02467811480164528
    2. ' min' → logprob: -3.7746782302856445
    3. '1' → logprob: -7.3996782302856445
    4. '=' → logprob: -7.6496782302856445
    5. '=min' → logprob: -8.274678230285645
    6. 'a' → logprob: -10.399678230285645
    7. 'ratio' → logprob: -11.149678230285645
    8. ' ' → logprob: -11.399678230285645
    9. ' =' → logprob: -12.399678230285645
    10. '	min' → logprob: -12.399678230285645

Token 324: '/b' (ID: 7611)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.02670302800834179
    2. ' <' → logprob: -3.651703119277954
    3. '<=' → logprob: -8.401702880859375
    4. '/' → logprob: -9.401702880859375
    5. ' <=' → logprob: -10.901702880859375
    6. ' and' → logprob: -11.151702880859375
    7. 'and' → logprob: -11.276702880859375
    8. '=' → logprob: -11.401702880859375
    9. ')' → logprob: -11.526702880859375
    10. '.' → logprob: -11.776702880859375

Token 325: ' <=' (ID: 5017)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 326: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002277054125443101
    2. ' ' → logprob: -6.12727689743042
    3. 'm' → logprob: -10.127277374267578
    4. '100' → logprob: -11.002277374267578
    5. '10' → logprob: -11.752277374267578
    6. '0' → logprob: -12.064777374267578
    7. 'max' → logprob: -12.377277374267578
    8. '2' → logprob: -12.627277374267578
    9. ' m' → logprob: -13.252277374267578
    10. 'a' → logprob: -13.252277374267578

Token 327: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.231182826217264e-05
    2. ' ' → logprob: -10.125072479248047
    3. 'm' → logprob: -11.500072479248047
    4. '100' → logprob: -11.875072479248047
    5. '10' → logprob: -12.375072479248047
    6. '0' → logprob: -13.125072479248047
    7. 'max' → logprob: -13.437572479248047
    8. '2' → logprob: -13.562572479248047
    9. 'a' → logprob: -14.250072479248047
    10. '
' → logprob: -14.375072479248047

Token 328: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.046889644116163254
    2. '<|end|>' → logprob: -3.546889543533325
    3. '       ' → logprob: -4.296889781951904
    4. '        
' → logprob: -6.421889781951904
    5. '

' → logprob: -6.671889781951904
    6. '
        
' → logprob: -8.796889305114746
    7. '<|end|>' → logprob: -8.796889305114746
    8. '  
' → logprob: -10.171889305114746
    9. '
' → logprob: -10.171889305114746
    10. ',' → logprob: -10.546889305114746

Token 329: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21446920931339264
    2. '       ' → logprob: -1.7144691944122314
    3. '        
' → logprob: -4.5894694328308105
    4. '<|end|>' → logprob: -6.4644694328308105
    5. ' 
' → logprob: -8.339468955993652
    6. '   ' → logprob: -8.589468955993652
    7. '    
' → logprob: -8.714468955993652
    8. '  
' → logprob: -8.839468955993652
    9. '

' → logprob: -9.089468955993652
    10. '
        
' → logprob: -10.089468955993652

Token 330: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.7315118312835693
    2. 'best' → logprob: -1.7315118312835693
    3. 'valid' → logprob: -2.2315118312835693
    4. '#' (adapté à ' #') → logprob: -2.2315118312835693
    5. 'result' → logprob: -2.6065118312835693
    6. 'found' → logprob: -2.6065118312835693
    7. 'c' → logprob: -2.7315118312835693
    8. 'min' → logprob: -3.1065118312835693
    9. 'possible' → logprob: -3.2315118312835693
    10. 'filtered' → logprob: -3.4815118312835693

Token 331: ' La' (ID: 3038)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.3922853469848633
    2. 'best' → logprob: -2.1422853469848633
    3. 'min' → logprob: -2.2672853469848633
    4. 'result' → logprob: -2.3922853469848633
    5. '#' → logprob: -2.3922853469848633
    6. 'filtered' → logprob: -2.7672853469848633
    7. 'found' → logprob: -2.8922853469848633
    8. 'valid' → logprob: -2.8922853469848633
    9. 'possible' → logprob: -3.2672853469848633
    10. 'c' → logprob: -3.3922853469848633

Token 332: ' plupart' (ID: 52685)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7029104232788086
    2. 'max' → logprob: -1.7029104232788086
    3. 'possible' → logprob: -3.3279104232788086
    4. ' max' → logprob: -3.4529104232788086
    5. 'min' → logprob: -3.4529104232788086
    6. 'for' → logprob: -4.202910423278809
    7. 'range' → logprob: -4.327910423278809
    8. 'n' → logprob: -4.327910423278809
    9. ' #' → logprob: -4.452910423278809
    10. 'ratio' → logprob: -4.452910423278809

Token 333: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.06238832697272301
    2. 'des' → logprob: -3.0623884201049805
    3. '   ' → logprob: -4.8123884201049805
    4. ' du' → logprob: -5.9373884201049805
    5. ' de' → logprob: -7.3123884201049805
    6. '_des' → logprob: -7.5623884201049805
    7. 'd' → logprob: -7.8123884201049805
    8. 'du' → logprob: -7.9373884201049805
    9. 's' → logprob: -8.31238842010498
    10. '       ' → logprob: -8.81238842010498

Token 334: ' solutions' (ID: 9368)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0141719579696655
    2. ' nombres' → logprob: -1.1391719579696655
    3. 'pr' → logprob: -2.264172077178955
    4. 'temps' → logprob: -3.264172077178955
    5. 'codes' → logprob: -3.889172077178955
    6. 'nombre' → logprob: -4.264172077178955
    7. 'code' → logprob: -4.389172077178955
    8. '#' → logprob: -4.514172077178955
    9. ' temps' → logprob: -4.764172077178955
    10. 'm' → logprob: -4.764172077178955

Token 335: ' utilisent' (ID: 151905)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6218842267990112
    2. '   ' → logprob: -1.3718842267990112
    3. ' des' → logprob: -2.871884346008301
    4. '#' → logprob: -3.371884346008301
    5. ' du' → logprob: -4.246884346008301
    6. 's' → logprob: -4.246884346008301
    7. ' for' → logprob: -4.496884346008301
    8. 'des' → logprob: -4.871884346008301
    9. ' ne' → logprob: -5.371884346008301
    10. 'for' → logprob: -5.496884346008301

Token 336: ' p' (ID: 275)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -1.7351335287094116
    2. 'une' → logprob: -1.7351335287094116
    3. 'un' → logprob: -2.110133647918701
    4. 'a' → logprob: -2.985133647918701
    5. 'la' → logprob: -2.985133647918701
    6. ' un' → logprob: -3.110133647918701
    7. ' une' → logprob: -3.235133647918701
    8. 'l' → logprob: -3.360133647918701
    9. ' la' → logprob: -3.360133647918701
    10. '#' → logprob: -3.485133647918701

Token 337: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3812073767185211
    2. ' des' → logprob: -2.7562074661254883
    3. ' les' → logprob: -3.0062074661254883
    4. 'u' → logprob: -3.8812074661254883
    5. 's' → logprob: -4.006207466125488
    6. ' p' → logprob: -4.256207466125488
    7. ' une' → logprob: -4.381207466125488
    8. ' uniquement' → logprob: -4.381207466125488
    9. '=' → logprob: -4.631207466125488
    10. 'er' → logprob: -4.756207466125488

Token 338: 'width' (ID: 6015)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47177621722221375
    2. ',' → logprob: -2.096776247024536
    3. 'p' → logprob: -2.971776247024536
    4. 'r' → logprob: -2.971776247024536
    5. ' )' → logprob: -3.596776247024536
    6. ' p' → logprob: -4.471776008605957
    7. ' primes' → logprob: -4.471776008605957
    8. ' for' → logprob: -4.596776008605957
    9. 'prime' → logprob: -4.721776008605957
    10. 'in' → logprob: -4.721776008605957

Token 339: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.631228506565094
    2. ',' → logprob: -0.881228506565094
    3. ' =' → logprob: -4.631228446960449
    4. '=' → logprob: -4.756228446960449
    5. ' )' → logprob: -5.006228446960449
    6. ' >=' → logprob: -5.131228446960449
    7. ' ,' → logprob: -5.256228446960449
    8. '   ' → logprob: -6.006228446960449
    9. ' <=' → logprob: -6.256228446960449
    10. '),' → logprob: -6.381228446960449

Token 340: ' <=' (ID: 5017)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1415879726409912
    2. ' =' → logprob: -1.2665879726409912
    3. ',' → logprob: -1.3915879726409912
    4. ' et' → logprob: -2.766587972640991
    5. 'et' → logprob: -3.766587972640991
    6. '>=' → logprob: -4.64158821105957
    7. ' and' → logprob: -5.39158821105957
    8. 'and' → logprob: -5.51658821105957
    9. '<=' → logprob: -5.51658821105957
    10. ')' → logprob: -5.51658821105957

Token 341: ' q' (ID: 2335)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0011430763406679034
    2. ' m' → logprob: -6.876142978668213
    3. 'max' → logprob: -9.876143455505371
    4. '100' → logprob: -10.626143455505371
    5. 'p' → logprob: -11.501143455505371
    6. 'MAX' → logprob: -11.751143455505371
    7. 'int' → logprob: -12.501143455505371
    8. '2' → logprob: -13.376143455505371
    9. ' ' → logprob: -13.751143455505371
    10. 'M' → logprob: -14.188643455505371

Token 342: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.03372177481651306
    2. ' =' → logprob: -4.283721923828125
    3. '=' → logprob: -5.033721923828125
    4. '(' → logprob: -5.533721923828125
    5. ',' → logprob: -5.908721923828125
    6. '(p' → logprob: -6.033721923828125
    7. ' and' → logprob: -7.658721923828125
    8. 'and' → logprob: -7.908721923828125
    9. '(max' → logprob: -8.283721923828125
    10. '.' → logprob: -8.408721923828125

Token 343: 'height' (ID: 5097)
  Prédit: 'height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.009533773176372051
    2. 'width' → logprob: -5.259533882141113
    3. ' height' → logprob: -6.259533882141113
    4. ')' → logprob: -7.134533882141113
    5. 'length' → logprob: -7.384533882141113
    6. 'p' → logprob: -7.884533882141113
    7. 'max' → logprob: -8.634533882141113
    8. '(height' → logprob: -9.134533882141113
    9. 'depth' → logprob: -9.259533882141113
    10. '100' → logprob: -10.634533882141113

Token 344: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21530704200267792
    2. ',' → logprob: -2.8403069972991943
    3. ' and' → logprob: -2.9653069972991943
    4. '),' → logprob: -4.090307235717773
    5. '=' → logprob: -4.465307235717773
    6. ' =' → logprob: -4.840307235717773
    7. '   ' → logprob: -4.840307235717773
    8. '       ' → logprob: -5.465307235717773
    9. '.' → logprob: -5.840307235717773
    10. ' (' → logprob: -5.840307235717773

Token 345: ' ou' (ID: 2031)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18733151257038116
    2. '
' → logprob: -2.062331438064575
    3. ',' → logprob: -3.937331438064575
    4. '<|end|>' → logprob: -4.312331676483154
    5. '        
' → logprob: -6.437331676483154
    6. '.' → logprob: -6.437331676483154
    7. '   ' → logprob: -6.562331676483154
    8. ' for' → logprob: -7.062331676483154
    9. ':' → logprob: -7.187331676483154
    10. ' and' → logprob: -7.437331676483154

Token 346: ' inverse' (ID: 53743)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.29345715045928955
    2. ' p' → logprob: -1.9184571504592896
    3. ' vice' → logprob: -2.91845703125
    4. 'vice' → logprob: -3.79345703125
    5. 'q' → logprob: -4.66845703125
    6. 'equal' → logprob: -5.54345703125
    7. ' equal' → logprob: -5.91845703125
    8. ' q' → logprob: -6.16845703125
    9. 'inverse' → logprob: -6.16845703125
    10. '#' → logprob: -6.29345703125

Token 347: 'ment' (ID: 508)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14099787175655365
    2. '
' → logprob: -2.640997886657715
    3. ',' → logprob: -3.390997886657715
    4. '   ' → logprob: -5.265997886657715
    5. '.' → logprob: -5.515997886657715
    6. ':' → logprob: -6.015997886657715
    7. '        
' → logprob: -6.140997886657715
    8. ' for' → logprob: -6.640997886657715
    9. '<|end|>' → logprob: -6.640997886657715
    10. ' (' → logprob: -7.328497886657715

Token 348: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26164570450782776
    2. '
' → logprob: -1.8866456747055054
    3. '<|end|>' → logprob: -3.011645793914795
    4. ',' → logprob: -3.886645793914795
    5. '        
' → logprob: -5.886645793914795
    6. '.' → logprob: -6.136645793914795
    7. '<|end|>' → logprob: -6.511645793914795
    8. ' to' → logprob: -8.136645317077637
    9. ' for' → logprob: -8.386645317077637
    10. '#' → logprob: -8.761645317077637

Token 349: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040196217596530914
    2. '<|end|>' → logprob: -3.915196180343628
    3. '        
' → logprob: -5.290196418762207
    4. '
' → logprob: -5.540196418762207
    5. ' for' → logprob: -5.665196418762207
    6. '#' → logprob: -6.040196418762207
    7. '   ' → logprob: -6.665196418762207
    8. ' if' → logprob: -7.540196418762207
    9. '<|end|>' → logprob: -7.665196418762207
    10. 'for' → logprob: -7.915196418762207

Token 350: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5217090845108032
    2. '       ' → logprob: -1.8967090845108032
    3. 'for' → logprob: -2.3967089653015137
    4. 'if' → logprob: -2.6467089653015137
    5. ' for' → logprob: -3.1467089653015137
    6. ' if' → logprob: -4.271708965301514
    7. 'max' → logprob: -4.646708965301514
    8. ' #' → logprob: -5.271708965301514
    9. 'q' → logprob: -5.896708965301514
    10. '
' → logprob: -6.021708965301514

Token 351: ' Puis' (ID: 87717)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.215478777885437
    2. 'for' → logprob: -2.5904788970947266
    3. 'if' → logprob: -3.4654788970947266
    4. ' for' → logprob: -3.4654788970947266
    5. ' #' → logprob: -4.465478897094727
    6. ' if' → logprob: -4.590478897094727
    7. 'max' → logprob: -5.090478897094727
    8. '       ' → logprob: -5.590478897094727
    9. 'p' → logprob: -6.340478897094727
    10. '
' → logprob: -6.465478897094727

Token 352: 'que' (ID: 1126)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2205175161361694
    2. '   ' → logprob: -1.8455175161361694
    3. '       ' → logprob: -2.095517635345459
    4. 'for' → logprob: -2.095517635345459
    5. ' for' → logprob: -2.345517635345459
    6. '
' → logprob: -3.095517635345459
    7. 'que' → logprob: -3.345517635345459
    8. 'continue' → logprob: -3.845517635345459
    9. 'q' → logprob: -3.970517635345459
    10. ' #' → logprob: -4.345517635345459

Token 353: ' le' (ID: 505)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.213056206703186
    2. ' min' → logprob: -1.213056206703186
    3. 'min' → logprob: -1.838056206703186
    4. 'p' → logprob: -2.5880560874938965
    5. 'a' → logprob: -3.8380560874938965
    6. ' le' → logprob: -3.8380560874938965
    7. ' width' → logprob: -3.8380560874938965
    8. ' m' → logprob: -3.9630560874938965
    9. ' max' → logprob: -4.2130560874938965
    10. 'max' → logprob: -4.2130560874938965

Token 354: ' ratio' (ID: 18051)
  Prédit: 'ratio'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ratio' → logprob: -1.711808681488037
    2. 'width' → logprob: -2.086808681488037
    3. 'code' → logprob: -2.336808681488037
    4. 's' → logprob: -2.461808681488037
    5. 'pro' → logprob: -2.586808681488037
    6. 'max' → logprob: -2.711808681488037
    7. '#' → logprob: -2.711808681488037
    8. 'c' → logprob: -3.211808681488037
    9. 'rectangle' → logprob: -3.586808681488037
    10. 'p' → logprob: -3.961808681488037

Token 355: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.253069281578064
    2. ' est' → logprob: -1.253069281578064
    3. 'min' → logprob: -2.2530694007873535
    4. 'p' → logprob: -2.6280694007873535
    5. 'max' → logprob: -2.7530694007873535
    6. ' minimal' → logprob: -3.3780694007873535
    7. ' max' → logprob: -3.5030694007873535
    8. ' min' → logprob: -3.6280694007873535
    9. 'est' → logprob: -3.8780694007873535
    10. ' width' → logprob: -4.0030694007873535

Token 356: '/q' (ID: 65772)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.5395253896713257
    2. ' <=' → logprob: -2.0395255088806152
    3. '/q' → logprob: -2.1645255088806152
    4. '<=' → logprob: -2.4145255088806152
    5. ' /' → logprob: -2.6645255088806152
    6. 'q' → logprob: -5.414525508880615
    7. ' q' → logprob: -6.289525508880615
    8. '/b' → logprob: -6.289525508880615
    9. '=' → logprob: -7.664525508880615
    10. ' =' → logprob: -7.789525508880615

Token 357: ' est' (ID: 893)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6462528705596924
    2. '<=' → logprob: -0.7712528705596924
    3. ' est' → logprob: -4.896252632141113
    4. ' doit' → logprob: -5.771252632141113
    5. '>=' → logprob: -7.146252632141113
    6. '#' → logprob: -7.896252632141113
    7. ' peut' → logprob: -7.896252632141113
    8. ' >=' → logprob: -8.146252632141113
    9. 'est' → logprob: -8.396252632141113
    10. ' ≤' → logprob: -8.521252632141113

Token 358: ' entre' (ID: 3853)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.9167594313621521
    2. 'inf' → logprob: -1.2917594909667969
    3. 'strict' → logprob: -2.916759490966797
    4. '<' → logprob: -3.666759490966797
    5. 'sup' → logprob: -3.666759490966797
    6. 'c' → logprob: -3.916759490966797
    7. 'supp' → logprob: -4.041759490966797
    8. ' inférieur' → logprob: -4.041759490966797
    9. ' inf' → logprob: -4.166759490966797
    10. 'con' → logprob: -4.416759490966797

Token 359: ' a' (ID: 261)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09561453014612198
    2. 'min' → logprob: -2.595614433288574
    3. 'a' → logprob: -4.720614433288574
    4. ' min' → logprob: -5.470614433288574
    5. ' ' → logprob: -6.220614433288574
    6. '[min' → logprob: -7.095614433288574
    7. '(min' → logprob: -8.095614433288574
    8. ' a' → logprob: -9.220614433288574
    9. '[' → logprob: -9.595614433288574
    10. '[a' → logprob: -10.220614433288574

Token 360: '/b' (ID: 7611)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.1237020418047905
    2. 'et' → logprob: -2.998702049255371
    3. '/b' → logprob: -3.748702049255371
    4. ' /' → logprob: -3.873702049255371
    5. ' et' → logprob: -4.373702049255371
    6. ' and' → logprob: -5.248702049255371
    7. '   ' → logprob: -6.623702049255371
    8. ' ' → logprob: -6.748702049255371
    9. 'and' → logprob: -7.498702049255371
    10. '  ' → logprob: -8.748702049255371

Token 361: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.5429955124855042
    2. 'et' → logprob: -1.0429954528808594
    3. ' and' → logprob: -3.5429954528808594
    4. '   ' → logprob: -4.167995452880859
    5. ',' → logprob: -4.292995452880859
    6. ' ' → logprob: -5.667995452880859
    7. 'and' → logprob: -5.917995452880859
    8. ' (' → logprob: -7.667995452880859
    9. '       ' → logprob: -7.792995452880859
    10. ' и' → logprob: -8.66799545288086

Token 362: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03222394734621048
    2. 'b' → logprob: -3.90722393989563
    3. ' ' → logprob: -4.657224178314209
    4. ' b' → logprob: -6.407224178314209
    5. 'q' → logprob: -8.03222370147705
    6. ' q' → logprob: -9.65722370147705
    7. '   ' → logprob: -10.78222370147705
    8. '```' → logprob: -11.65722370147705
    9. 'p' → logprob: -12.03222370147705
    10. '  ' → logprob: -12.28222370147705

Token 363: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03828245773911476
    2. 'b' → logprob: -3.2882823944091797
    3. ' ' → logprob: -8.91328239440918
    4. ' b' → logprob: -10.78828239440918
    5. '(' → logprob: -11.03828239440918
    6. 'float' → logprob: -11.41328239440918
    7. 'a' → logprob: -11.78828239440918
    8. 'q' → logprob: -12.03828239440918
    9. '   ' → logprob: -12.16328239440918
    10. 'max' → logprob: -12.28828239440918

Token 364: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11826258897781372
    2. '       ' → logprob: -2.243262529373169
    3. ',
' → logprob: -5.868262767791748
    4. ':' → logprob: -6.493262767791748
    5. '.' → logprob: -7.868262767791748
    6. ' ,' → logprob: -7.993262767791748
    7. ':
' → logprob: -9.36826229095459
    8. '   ' → logprob: -9.74326229095459
    9. '        
' → logprob: -9.86826229095459
    10. '
' → logprob: -10.49326229095459

Token 365: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002199263544753194
    2. '   ' → logprob: -7.252199172973633
    3. '<|end|>' → logprob: -8.252199172973633
    4. '        
' → logprob: -8.377199172973633
    5. ' continue' → logprob: -8.627199172973633
    6. ' for' → logprob: -8.627199172973633
    7. ',' → logprob: -9.002199172973633
    8. ' on' → logprob: -9.502199172973633
    9. '<|end|>' → logprob: -9.752199172973633
    10. 'continue' → logprob: -9.752199172973633

Token 366: ' a' (ID: 261)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6138413548469543
    2. ' continue' → logprob: -1.1138412952423096
    3. 'for' → logprob: -3.4888412952423096
    4. 'pe' → logprob: -3.9888412952423096
    5. 'cherche' → logprob: -3.9888412952423096
    6. ' va' → logprob: -4.613841533660889
    7. ' peut' → logprob: -4.613841533660889
    8. '       ' → logprob: -4.738841533660889
    9. 'va' → logprob: -5.738841533660889
    10. ' for' → logprob: -5.738841533660889

Token 367: ' p' (ID: 275)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41061386466026306
    2. '   ' → logprob: -2.160613775253296
    3. 'for' → logprob: -2.535613775253296
    4. ' for' → logprob: -2.535613775253296
    5. ':' → logprob: -3.785613775253296
    6. 'range' → logprob: -4.910614013671875
    7. '
' → logprob: -5.035614013671875
    8. ' p' → logprob: -5.160614013671875
    9. ' range' → logprob: -5.410614013671875
    10. '    ' → logprob: -6.535614013671875

Token 368: '/q' (ID: 65772)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.4932968616485596
    2. ',' → logprob: -1.6182968616485596
    3. '/' → logprob: -1.6182968616485596
    4. '/q' → logprob: -1.9932968616485596
    5. ' /' → logprob: -2.2432968616485596
    6. 'q' → logprob: -3.1182968616485596
    7. '=' → logprob: -3.8682968616485596
    8. ' ' → logprob: -4.8682966232299805
    9. '_ratio' → logprob: -4.8682966232299805
    10. '_range' → logprob: -4.8682966232299805

Token 369: ' <=' (ID: 5017)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.402436226606369
    2. ' >=' → logprob: -1.4024362564086914
    3. '<=' → logprob: -2.9024362564086914
    4. ' <=' → logprob: -3.5274362564086914
    5. '=' → logprob: -7.152436256408691
    6. ' =' → logprob: -9.027436256408691
    7. '   ' → logprob: -10.027436256408691
    8. ' ' → logprob: -10.902436256408691
    9. '≥' → logprob: -11.027436256408691
    10. '>' → logprob: -11.152436256408691

Token 370: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026455431361682713
    2. ' ' → logprob: -8.250264167785645
    3. 'min' → logprob: -13.625264167785645
    4. '   ' → logprob: -14.625264167785645
    5. ' min' → logprob: -15.375264167785645
    6. 'max' → logprob: -15.375264167785645
    7. 'q' → logprob: -15.625264167785645
    8. '
' → logprob: -15.625264167785645
    9. '```' → logprob: -15.750264167785645
    10. 'p' → logprob: -15.750264167785645

Token 371: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.704065213445574e-05
    2. ' ' → logprob: -10.000046730041504
    3. 'min' → logprob: -13.875046730041504
    4. 'max' → logprob: -16.00004768371582
    5. ' min' → logprob: -16.37504768371582
    6. 'm' → logprob: -16.37504768371582
    7. '   ' → logprob: -16.62504768371582
    8. '(' → logprob: -17.00004768371582
    9. 'b' → logprob: -17.06254768371582
    10. '```' → logprob: -17.62504768371582

Token 372: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34879034757614136
    2. '
' → logprob: -1.4737904071807861
    3. ',' → logprob: -3.223790407180786
    4. '        
' → logprob: -4.848790168762207
    5. '<|end|>' → logprob: -5.098790168762207
    6. '.' → logprob: -5.223790168762207
    7. ' and' → logprob: -5.973790168762207
    8. '<|end|>' → logprob: -7.098790168762207
    9. '
' → logprob: -7.223790168762207
    10. ':' → logprob: -8.348790168762207

Token 373: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.075358510017395
    2. 'q' → logprob: -1.075358510017395
    3. '       ' → logprob: -1.825358510017395
    4. ' p' → logprob: -2.5753583908081055
    5. ' q' → logprob: -3.3253583908081055
    6. ' if' → logprob: -4.2003583908081055
    7. 'if' → logprob: -4.4503583908081055
    8. ' for' → logprob: -5.9503583908081055
    9. '#' → logprob: -6.0753583908081055
    10. '           ' → logprob: -6.3253583908081055

Token 374: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.018050668761134148
    2. '<=' → logprob: -4.143050670623779
    3. ' =' → logprob: -7.018050670623779
    4. '/' → logprob: -7.893050670623779
    5. ' ≤' → logprob: -7.893050670623779
    6. '=' → logprob: -8.643050193786621
    7. ' /' → logprob: -9.643050193786621
    8. '<|end|>' → logprob: -10.768050193786621
    9. '≤' → logprob: -11.518050193786621
    10. ' \' → logprob: -11.643050193786621

Token 375: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.003185198176652193
    2. ' q' → logprob: -5.753185272216797
    3. 'm' → logprob: -12.128185272216797
    4. '	q' → logprob: -13.753185272216797
    5. 'b' → logprob: -15.128185272216797
    6. ' ' → logprob: -15.878185272216797
    7. ' m' → logprob: -16.503185272216797
    8. '=q' → logprob: -16.503185272216797
    9. ''q' → logprob: -16.753185272216797
    10. '1' → logprob: -16.753185272216797

Token 376: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5420783758163452
    2. '
' → logprob: -1.2920783758163452
    3. '<|end|>' → logprob: -2.0420784950256348
    4. '<|end|>' → logprob: -4.667078495025635
    5. '        
' → logprob: -6.167078495025635
    6. ',' → logprob: -6.542078495025635
    7. '   ' → logprob: -8.292078018188477
    8. '.' → logprob: -8.667078018188477
    9. ')' → logprob: -9.167078018188477
    10. ' and' → logprob: -9.417078018188477

Token 377: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.440413236618042
    2. '
' → logprob: -1.065413236618042
    3. '        
' → logprob: -4.565413475036621
    4. '<|end|>' → logprob: -7.440413475036621
    5. '  
' → logprob: -8.565413475036621
    6. ' 
' → logprob: -9.440413475036621
    7. ' for' → logprob: -9.690413475036621
    8. '    
' → logprob: -9.815413475036621
    9. '   ' → logprob: -10.065413475036621
    10. 'for' → logprob: -10.565413475036621

Token 378: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046118151396512985
    2. 'for' → logprob: -3.5461182594299316
    3. ' for' → logprob: -4.671118259429932
    4. '   ' → logprob: -5.296118259429932
    5. 'q' → logprob: -7.421118259429932
    6. 'max' → logprob: -7.671118259429932
    7. 'possible' → logprob: -8.671117782592773
    8. '#' (adapté à ' #') → logprob: -9.171117782592773
    9. '        
' → logprob: -9.296117782592773
    10. 'import' → logprob: -9.921117782592773

Token 379: ' Donc' (ID: 88837)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7536813616752625
    2. 'for' → logprob: -0.7536813616752625
    3. '   ' → logprob: -4.128681182861328
    4. ' for' → logprob: -4.253681182861328
    5. 'max' → logprob: -4.378681182861328
    6. 'q' → logprob: -4.628681182861328
    7. 'start' → logprob: -6.128681182861328
    8. 'possible' → logprob: -7.003681182861328
    9. 'p' → logprob: -7.253681182861328
    10. '#' → logprob: -7.378681182861328

Token 380: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1799108386039734
    2. 'for' → logprob: -1.9299108982086182
    3. 'max' → logprob: -5.679910659790039
    4. '       ' → logprob: -5.679910659790039
    5. ' q' → logprob: -6.054910659790039
    6. ' max' → logprob: -6.054910659790039
    7. ' min' → logprob: -6.429910659790039
    8. '   ' → logprob: -6.804910659790039
    9. 'min' → logprob: -6.929910659790039
    10. 'import' → logprob: -7.429910659790039

Token 381: ' cherch' (ID: 194183)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.9373390078544617
    2. 'cherche' → logprob: -0.9373390078544617
    3. ' continue' → logprob: -2.3123390674591064
    4. 'do' → logprob: -3.4373390674591064
    5. ' cherche' → logprob: -4.312338829040527
    6. 'pe' → logprob: -4.562338829040527
    7. 'contin' → logprob: -4.937338829040527
    8. 'expl' → logprob: -5.062338829040527
    9. 'chercher' → logprob: -5.187338829040527
    10. 'continu' → logprob: -5.437338829040527

Token 382: 'era' (ID: 2060)
  Prédit: 'ons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.03209824487566948
    2. 'e' → logprob: -4.282098293304443
    3. 'it' → logprob: -4.657098293304443
    4. '#' → logprob: -6.157098293304443
    5. 'ez' → logprob: -6.407098293304443
    6. 'on' → logprob: -6.657098293304443
    7. 'ont' → logprob: -7.157098293304443
    8. 'ent' → logprob: -8.032097816467285
    9. 'def' → logprob: -8.032097816467285
    10. 'ev' → logprob: -8.532097816467285

Token 383: ' p' (ID: 275)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.5791322588920593
    2. 'q' → logprob: -1.954132318496704
    3. ' des' → logprob: -1.954132318496704
    4. ' p' → logprob: -2.079132318496704
    5. 'p' → logprob: -3.954132318496704
    6. ' ' → logprob: -5.579132080078125
    7. ' for' → logprob: -6.579132080078125
    8. 'des' → logprob: -6.579132080078125
    9. ' à' → logprob: -6.954132080078125
    10. ' que' → logprob: -7.454132080078125

Token 384: ' et' (ID: 859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0016251802444458
    2. '=' → logprob: -1.2516251802444458
    3. ',' → logprob: -2.3766250610351562
    4. ' in' → logprob: -2.5016250610351562
    5. ' <=' → logprob: -2.5016250610351562
    6. '<=' → logprob: -2.6266250610351562
    7. 'in' → logprob: -5.876625061035156
    8. '<|end|>' → logprob: -6.376625061035156
    9. ' et' → logprob: -6.876625061035156
    10. ' dans' → logprob: -6.876625061035156

Token 385: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.1128259226679802
    2. ' q' → logprob: -2.237825870513916
    3. ' ' → logprob: -13.612826347351074
    4. '	q' → logprob: -14.112826347351074
    5. ' ' → logprob: -14.112826347351074
    6. ''q' → logprob: -16.237825393676758
    7. '_q' → logprob: -16.675325393676758
    8. '*q' → logprob: -16.800325393676758
    9. '   ' → logprob: -16.862825393676758
    10. '
' → logprob: -16.862825393676758

Token 386: ' avec' (ID: 3937)
  Prédit: ' such'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' such' → logprob: -1.3695307970046997
    2. ' dans' → logprob: -1.7445307970046997
    3. '   ' → logprob: -2.11953067779541
    4. '=' → logprob: -2.24453067779541
    5. ' =' → logprob: -2.24453067779541
    6. ' in' → logprob: -2.74453067779541
    7. ' tels' → logprob: -3.49453067779541
    8. ',' → logprob: -3.74453067779541
    9. ' with' → logprob: -4.11953067779541
    10. ' en' → logprob: -4.24453067779541

Token 387: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10731879621744156
    2. 'q' → logprob: -2.482318878173828
    3. ' p' → logprob: -4.232318878173828
    4. 'pr' → logprob: -6.482318878173828
    5. ' q' → logprob: -6.607318878173828
    6. '1' → logprob: -7.982318878173828
    7. ' primes' → logprob: -8.482318878173828
    8. '   ' → logprob: -9.732318878173828
    9. 'for' → logprob: -9.982318878173828
    10. '#' → logprob: -10.357318878173828

Token 388: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.031884994357824326
    2. '<=' → logprob: -3.5318849086761475
    3. ' =' → logprob: -7.031885147094727
    4. '=' → logprob: -7.281885147094727
    5. ' ≤' → logprob: -8.156885147094727
    6. '   ' → logprob: -9.656885147094727
    7. ',' → logprob: -9.781885147094727
    8. 's' → logprob: -10.781885147094727
    9. '≤' → logprob: -11.156885147094727
    10. '_' → logprob: -11.406885147094727

Token 389: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.011048408225178719
    2. ' q' → logprob: -4.511048316955566
    3. '	q' → logprob: -15.511048316955566
    4. '
' → logprob: -16.011049270629883
    5. ' ' → logprob: -16.261049270629883
    6. 'm' → logprob: -17.011049270629883
    7. '=q' → logprob: -17.136049270629883
    8. '   ' → logprob: -17.136049270629883
    9. 'b' → logprob: -17.386049270629883
    10. '       ' → logprob: -17.386049270629883

Token 390: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42538660764694214
    2. '       ' → logprob: -1.300386667251587
    3. '<|end|>' → logprob: -3.300386667251587
    4. ',' → logprob: -4.175386428833008
    5. '.' → logprob: -4.425386428833008
    6. '<|end|>' → logprob: -5.425386428833008
    7. '        
' → logprob: -6.050386428833008
    8. ',
' → logprob: -7.675386428833008
    9. '

' → logprob: -7.925386428833008
    10. ' and' → logprob: -7.925386428833008

Token 391: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007130565587431192
    2. '
' → logprob: -5.6321306228637695
    3. '        
' → logprob: -6.5071306228637695
    4. '<|end|>' → logprob: -6.6321306228637695
    5. '   ' → logprob: -8.00713062286377
    6. 'max' → logprob: -9.50713062286377
    7. ' for' → logprob: -9.75713062286377
    8. '    
' → logprob: -10.50713062286377
    9. 'for' → logprob: -10.63213062286377
    10. 'q' → logprob: -10.63213062286377

Token 392: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.606998860836029
    2. 'for' → logprob: -1.7319989204406738
    3. 'max' → logprob: -2.356998920440674
    4. '       ' → logprob: -3.356998920440674
    5. 'q' → logprob: -3.606998920440674
    6. 'results' → logprob: -3.731998920440674
    7. '#' (adapté à ' #') → logprob: -3.731998920440674
    8. 'p' → logprob: -3.981998920440674
    9. 'result' → logprob: -4.106998920440674
    10. 'possible' → logprob: -4.106998920440674

Token 393: ' On' (ID: 2160)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.7352465391159058
    2. 'result' → logprob: -1.3602465391159058
    3. 'max' → logprob: -2.2352466583251953
    4. 'for' → logprob: -3.4852466583251953
    5. 'p' → logprob: -3.6102466583251953
    6. 'q' → logprob: -3.8602466583251953
    7. 'possible' → logprob: -4.485246658325195
    8. 'found' → logprob: -4.610246658325195
    9. 'solutions' → logprob: -4.860246658325195
    10. '#' → logprob: -4.985246658325195

Token 394: ' cherche' (ID: 52345)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.8056010007858276
    2. 'cherche' → logprob: -1.8056010007858276
    3. ' cherche' → logprob: -2.055601119995117
    4. ' for' → logprob: -2.055601119995117
    5. ' continue' → logprob: -2.680601119995117
    6. 'for' → logprob: -2.930601119995117
    7. 'q' → logprob: -3.805601119995117
    8. ' recherche' → logprob: -3.805601119995117
    9. 'found' → logprob: -3.930601119995117
    10. ' vais' → logprob: -4.055601119995117

Token 395: ' les' (ID: 1341)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.2545331716537476
    2. ' q' → logprob: -1.3795331716537476
    3. ' p' → logprob: -1.6295331716537476
    4. 'p' → logprob: -1.6295331716537476
    5. 'max' → logprob: -4.129533290863037
    6. ' la' → logprob: -5.129533290863037
    7. ' ' → logprob: -5.129533290863037
    8. 'le' → logprob: -5.129533290863037
    9. ' des' → logprob: -5.504533290863037
    10. 'for' → logprob: -5.754533290863037

Token 396: ' p' (ID: 275)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5207979679107666
    2. 'best' → logprob: -1.5207979679107666
    3. 'p' → logprob: -1.7707979679107666
    4. 'q' → logprob: -1.8957979679107666
    5. 'me' → logprob: -3.2707979679107666
    6. 'max' → logprob: -3.3957979679107666
    7. 'prime' → logprob: -3.6457979679107666
    8. 'possible' → logprob: -3.7707979679107666
    9. 'pr' → logprob: -4.1457977294921875
    10. 'pairs' → logprob: -4.3957977294921875

Token 397: ' et' (ID: 859)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7221016883850098
    2. ' =' → logprob: -1.5971016883850098
    3. ',' → logprob: -2.2221016883850098
    4. 's' → logprob: -3.7221016883850098
    5. '_values' → logprob: -3.7221016883850098
    6. '_candidates' → logprob: -3.7221016883850098
    7. 'values' → logprob: -4.09710168838501
    8. 'et' → logprob: -4.22210168838501
    9. ' et' → logprob: -4.22210168838501
    10. 'and' → logprob: -4.47210168838501

Token 398: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.3132946491241455
    2. ' q' → logprob: -1.3132946491241455
    3. ' ' → logprob: -11.938294410705566
    4. ' ' → logprob: -12.063294410705566
    5. '	q' → logprob: -12.313294410705566
    6. '   ' → logprob: -13.125794410705566
    7. '_q' → logprob: -13.438294410705566
    8. 's' → logprob: -13.563294410705566
    9. '#' → logprob: -13.938294410705566
    10. '```' → logprob: -14.313294410705566

Token 399: ' premiers' (ID: 59140)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5632277131080627
    2. '   ' → logprob: -1.063227653503418
    3. '=' → logprob: -3.813227653503418
    4. ' possibles' → logprob: -4.313227653503418
    5. ' possible' → logprob: -4.688227653503418
    6. ',' → logprob: -4.688227653503418
    7. ' for' → logprob: -4.938227653503418
    8. 'possible' → logprob: -5.688227653503418
    9. ':' → logprob: -5.938227653503418
    10. '_possible' → logprob: -6.063227653503418

Token 400: ' tels' (ID: 62007)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.543622612953186
    2. ',' → logprob: -1.668622612953186
    3. '   ' → logprob: -2.1686224937438965
    4. ' =' → logprob: -2.4186224937438965
    5. ' primes' → logprob: -2.5436224937438965
    6. '<|end|>' → logprob: -3.0436224937438965
    7. 's' → logprob: -3.1686224937438965
    8. 'tokens' → logprob: -3.1686224937438965
    9. '=' → logprob: -3.4186224937438965
    10. 'for' → logprob: -3.5436224937438965

Token 401: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.010586138814687729
    2. 'that' → logprob: -5.135586261749268
    3. '   ' → logprob: -6.260586261749268
    4. ' que' → logprob: -6.760586261749268
    5. '       ' → logprob: -7.510586261749268
    6. '#' → logprob: -7.635586261749268
    7. 'qu' → logprob: -7.760586261749268
    8. ' that' → logprob: -10.26058578491211
    9. '           ' → logprob: -11.01058578491211
    10. 'p' → logprob: -11.51058578491211

Token 402: ':
' (ID: 734)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.05556768178939819
    2. 'p' → logprob: -3.180567741394043
    3. 'pr' → logprob: -5.055567741394043
    4. '       ' → logprob: -6.055567741394043
    5. ' min' → logprob: -6.805567741394043
    6. '           ' → logprob: -7.305567741394043
    7. 'q' → logprob: -7.930567741394043
    8. '(min' → logprob: -8.055567741394043
    9. 'for' → logprob: -8.305567741394043
    10. '   ' → logprob: -8.305567741394043

Token 403: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44760966300964355
    2. ' for' → logprob: -1.1976096630096436
    3. 'for' → logprob: -3.5726096630096436
    4. '   ' → logprob: -3.9476096630096436
    5. ' found' → logprob: -5.447609901428223
    6. 'found' → logprob: -5.697609901428223
    7. 'max' → logprob: -7.072609901428223
    8. '#' → logprob: -7.197609901428223
    9. 'possible' → logprob: -7.572609901428223
    10. '<|end|>' → logprob: -7.947609901428223

Token 404: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1228505373001099
    2. '       ' → logprob: -1.8728505373001099
    3. '#' (adapté à ' #') → logprob: -1.9978505373001099
    4. 'found' → logprob: -2.1228504180908203
    5. ' for' → logprob: -2.2478504180908203
    6. 'p' → logprob: -2.7478504180908203
    7. 'min' → logprob: -3.1228504180908203
    8. 'results' → logprob: -4.37285041809082
    9. ' found' → logprob: -4.99785041809082
    10. 'best' → logprob: -5.12285041809082

Token 405: ' p' (ID: 275)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8495583534240723
    2. '       ' → logprob: -1.0995583534240723
    3. ' for' → logprob: -1.9745583534240723
    4. 'p' → logprob: -2.8495583534240723
    5. '#' → logprob: -4.099558353424072
    6. 'found' → logprob: -5.099558353424072
    7. 'possible' → logprob: -5.474558353424072
    8. 'min' → logprob: -5.474558353424072
    9. 'q' → logprob: -5.724558353424072
    10. ' p' → logprob: -6.099558353424072

Token 406: ' *' (ID: 425)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.31271040439605713
    2. '<=' → logprob: -2.8127102851867676
    3. ' =' → logprob: -3.0627102851867676
    4. ' >=' → logprob: -3.1877102851867676
    5. ',' → logprob: -3.3127102851867676
    6. '=' → logprob: -3.9377102851867676
    7. ' /' → logprob: -4.062710285186768
    8. '/' → logprob: -4.437710285186768
    9. '>=' → logprob: -4.687710285186768
    10. ' *' → logprob: -5.937710285186768

Token 407: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.08916018903255463
    2. ' q' → logprob: -2.464160203933716
    3. 'p' → logprob: -9.839159965515137
    4. ' ' → logprob: -10.464159965515137
    5. '#' → logprob: -11.214159965515137
    6. ' p' → logprob: -11.339159965515137
    7. '   ' → logprob: -11.526659965515137
    8. '	q' → logprob: -11.714159965515137
    9. '=' → logprob: -11.776659965515137
    10. '1' → logprob: -11.839159965515137

Token 408: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.8290010690689087
    2. ' >=' → logprob: -1.0790010690689087
    3. '>=' → logprob: -2.079000949859619
    4. '<=' → logprob: -2.329000949859619
    5. '=' → logprob: -7.829000949859619
    6. '>' → logprob: -8.829001426696777
    7. '   ' → logprob: -9.204001426696777
    8. ' =' → logprob: -9.454001426696777
    9. ' >' → logprob: -9.704001426696777
    10. ' ' → logprob: -9.829001426696777

Token 409: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00013786651834379882
    2. ' m' → logprob: -9.000138282775879
    3. 'max' → logprob: -11.500138282775879
    4. '100' → logprob: -13.000138282775879
    5. '   ' → logprob: -13.375138282775879
    6. 'MAX' → logprob: -15.500138282775879
    7. ' ' → logprob: -16.500137329101562
    8. 'int' → logprob: -16.625137329101562
    9. 'M' → logprob: -17.000137329101562
    10. '    ' → logprob: -17.250137329101562

Token 410: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2881234288215637
    2. '       ' → logprob: -1.788123369216919
    3. '<|end|>' → logprob: -3.663123369216919
    4. ',' → logprob: -3.788123369216919
    5. '   ' → logprob: -4.663123607635498
    6. '        
' → logprob: -5.038123607635498
    7. ',
' → logprob: -5.663123607635498
    8. ' and' → logprob: -5.663123607635498
    9. '    
' → logprob: -5.788123607635498
    10. '

' → logprob: -5.913123607635498

Token 411: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006728161126375198
    2. '<|end|>' → logprob: -5.256728172302246
    3. ',' → logprob: -7.381728172302246
    4. ' and' → logprob: -7.881728172302246
    5. ' for' → logprob: -8.756728172302246
    6. '<|end|>' → logprob: -9.131728172302246
    7. '        
' → logprob: -9.381728172302246
    8. '   ' → logprob: -10.006728172302246
    9. ')' → logprob: -10.256728172302246
    10. '
' → logprob: -11.631728172302246

Token 412: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013853647746145725
    2. ' for' → logprob: -5.888853549957275
    3. 'found' → logprob: -6.138853549957275
    4. 'for' → logprob: -6.388853549957275
    5. 'possible' → logprob: -6.388853549957275
    6. ',' → logprob: -6.888853549957275
    7. '   ' → logprob: -6.888853549957275
    8. ' found' → logprob: -7.013853549957275
    9. ' and' → logprob: -7.638853549957275
    10. 'max' → logprob: -7.763853549957275

Token 413: ' min' (ID: 1349)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5611075162887573
    2. 'for' → logprob: -1.6861075162887573
    3. 'result' → logprob: -1.6861075162887573
    4. ' for' → logprob: -2.311107635498047
    5. 'found' → logprob: -2.561107635498047
    6. 'p' → logprob: -3.311107635498047
    7. 'count' → logprob: -3.311107635498047
    8. 'q' → logprob: -3.561107635498047
    9. 'max' → logprob: -3.561107635498047
    10. 'results' → logprob: -3.561107635498047

Token 414: '_ratio' (ID: 45680)
  Prédit: '_ratio'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ratio' → logprob: -6.277553620748222e-05
    2. '_' → logprob: -11.375062942504883
    3. '_p' → logprob: -11.875062942504883
    4. '_r' → logprob: -11.875062942504883
    5. '_width' → logprob: -12.000062942504883
    6. 'ratio' → logprob: -12.375062942504883
    7. '_product' → logprob: -12.625062942504883
    8. '_factor' → logprob: -12.750062942504883
    9. '_rat' → logprob: -12.875062942504883
    10. '_length' → logprob: -13.125062942504883

Token 415: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.01616152748465538
    2. '<=' → logprob: -4.1411614418029785
    3. ' >=' → logprob: -9.391161918640137
    4. ' =' → logprob: -10.516161918640137
    5. '>=' → logprob: -12.391161918640137
    6. ' *' → logprob: -12.641161918640137
    7. '=' → logprob: -13.016161918640137
    8. ' ≤' → logprob: -13.141161918640137
    9. ' <<=' → logprob: -13.641161918640137
    10. ' ' → logprob: -14.141161918640137

Token 416: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.007601654622703791
    2. ' p' → logprob: -5.007601737976074
    3. 'a' → logprob: -8.007601737976074
    4. '(p' → logprob: -8.132601737976074
    5. ' (' → logprob: -8.757601737976074
    6. '(a' → logprob: -10.507601737976074
    7. '   ' → logprob: -10.632601737976074
    8. 'min' → logprob: -11.132601737976074
    9. 'float' → logprob: -11.632601737976074
    10. ' a' → logprob: -11.882601737976074

Token 417: '/q' (ID: 65772)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.3533898591995239
    2. '/' → logprob: -1.853389859199524
    3. '/q' → logprob: -1.978389859199524
    4. 'q' → logprob: -6.603389739990234
    5. ' ' → logprob: -8.228389739990234
    6. '       ' → logprob: -8.478389739990234
    7. '_ratio' → logprob: -8.603389739990234
    8. '   ' → logprob: -8.728389739990234
    9. ' q' → logprob: -8.853389739990234
    10. '_q' → logprob: -9.978389739990234

Token 418: ' <=' (ID: 5017)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5423974990844727
    2. '       ' → logprob: -1.0423974990844727
    3. ' <=' → logprob: -3.6673974990844727
    4. 'and' → logprob: -4.417397499084473
    5. '   ' → logprob: -4.917397499084473
    6. '<=' → logprob: -5.167397499084473
    7. '<|end|>' → logprob: -5.542397499084473
    8. '
' → logprob: -5.917397499084473
    9. '<|end|>' → logprob: -6.417397499084473
    10. ' =' → logprob: -6.542397499084473

Token 419: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -17.000001907348633
    4. '```' → logprob: -19.000001907348633
    5. '
' → logprob: -19.125001907348633
    6. '  ' → logprob: -20.375001907348633
    7. '۱' → logprob: -20.562501907348633
    8. '       ' → logprob: -21.437501907348633
    9. '１' → logprob: -21.562501907348633
    10. ' ' → logprob: -21.750001907348633

Token 420: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -15.750006675720215
    4. '```' → logprob: -18.62500762939453
    5. '  ' → logprob: -19.25000762939453
    6. ' ' → logprob: -19.50000762939453
    7. '۱' → logprob: -20.00000762939453
    8. '
' → logprob: -20.12500762939453
    9. '       ' → logprob: -20.25000762939453
    10. '     ' → logprob: -20.56250762939453

Token 421: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030643858015537262
    2. '<|end|>' → logprob: -4.155643939971924
    3. '
' → logprob: -4.530643939971924
    4. '        
' → logprob: -5.905643939971924
    5. '<|end|>' → logprob: -7.780643939971924
    6. '   ' → logprob: -8.030643463134766
    7. ',' → logprob: -9.155643463134766
    8. '    
' → logprob: -10.280643463134766
    9. ' for' → logprob: -11.030643463134766
    10. ')' → logprob: -11.155643463134766

Token 422: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007874790579080582
    2. '   ' → logprob: -5.507874965667725
    3. '<|end|>' → logprob: -5.882874965667725
    4. '
' → logprob: -7.507874965667725
    5. '        
' → logprob: -8.132874488830566
    6. '<|end|>' → logprob: -9.257874488830566
    7. '    
' → logprob: -11.007874488830566
    8. '  
' → logprob: -12.007874488830566
    9. ')' → logprob: -12.132874488830566
    10. '           ' → logprob: -12.132874488830566

Token 423: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2185213416814804
    2. '       ' → logprob: -1.9685213565826416
    3. 'result' → logprob: -3.7185213565826416
    4. 'results' → logprob: -4.3435211181640625
    5. 'possible' → logprob: -5.7185211181640625
    6. 'found' → logprob: -5.8435211181640625
    7. '    
' → logprob: -6.2185211181640625
    8. 'for' → logprob: -6.4685211181640625
    9. '
' → logprob: -6.5935211181640625
    10. '        
' → logprob: -6.7185211181640625

Token 424: ' p' (ID: 275)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6718624234199524
    2. 'results' → logprob: -1.0468623638153076
    3. '   ' → logprob: -3.1718623638153076
    4. 'for' → logprob: -3.6718623638153076
    5. 'found' → logprob: -3.7968623638153076
    6. '       ' → logprob: -4.546862602233887
    7. 'solutions' → logprob: -4.921862602233887
    8. 'best' → logprob: -5.171862602233887
    9. 'possible' → logprob: -5.671862602233887
    10. 'max' → logprob: -5.671862602233887

Token 425: ' et' (ID: 859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7995827794075012
    2. ',' → logprob: -1.0495827198028564
    3. ' <=' → logprob: -2.1745827198028564
    4. '=' → logprob: -3.2995827198028564
    5. '<=' → logprob: -4.6745829582214355
    6. '   ' → logprob: -5.1745829582214355
    7. 's' → logprob: -5.4245829582214355
    8. '_max' → logprob: -5.5495829582214355
    9. ' ,' → logprob: -5.6745829582214355
    10. '_values' → logprob: -6.0495829582214355

Token 426: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.17974978685379028
    2. ' q' → logprob: -1.8047497272491455
    3. '       ' → logprob: -13.679749488830566
    4. ' ' → logprob: -13.679749488830566
    5. '   ' → logprob: -14.679749488830566
    6. ' ' → logprob: -14.679749488830566
    7. '	q' → logprob: -15.054749488830566
    8. ',q' → logprob: -15.429749488830566
    9. ',' → logprob: -15.742249488830566
    10. '     ' → logprob: -15.804749488830566

Token 427: ' premiers' (ID: 59140)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6070554256439209
    2. 'in' → logprob: -1.357055425643921
    3. '=' → logprob: -2.107055425643921
    4. ' are' → logprob: -3.232055425643921
    5. ' =' → logprob: -3.857055425643921
    6. ' sont' → logprob: -6.2320556640625
    7. ':' → logprob: -6.4820556640625
    8. ')' → logprob: -6.7320556640625
    9. 'are' → logprob: -6.7320556640625
    10. 'continue' → logprob: -6.8570556640625

Token 428: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012916315346956253
    2. '<|end|>' → logprob: -4.762916088104248
    3. '<|end|>' → logprob: -6.387916088104248
    4. '
' → logprob: -6.887916088104248
    5. '        
' → logprob: -7.137916088104248
    6. ',' → logprob: -8.012916564941406
    7. ')' → logprob: -9.012916564941406
    8. '   ' → logprob: -9.137916564941406
    9. ':' → logprob: -9.262916564941406
    10. '.' → logprob: -9.762916564941406

Token 429: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025143080856651068
    2. '        
' → logprob: -6.377514362335205
    3. '   ' → logprob: -8.002513885498047
    4. '
' → logprob: -8.877513885498047
    5. 'found' → logprob: -9.502513885498047
    6. 'possible' → logprob: -10.002513885498047
    7. 'results' → logprob: -10.127513885498047
    8. 'result' → logprob: -10.502513885498047
    9. ' found' → logprob: -10.627513885498047
    10. 'for' → logprob: -10.627513885498047

Token 430: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8280090093612671
    2. '   ' → logprob: -1.203009009361267
    3. 'results' → logprob: -2.0780091285705566
    4. 'result' → logprob: -2.4530091285705566
    5. 'for' → logprob: -4.328009128570557
    6. 'found' → logprob: -4.703009128570557
    7. 'possible' → logprob: -4.828009128570557
    8. 'answers' → logprob: -5.703009128570557
    9. 'res' → logprob: -5.953009128570557
    10. ' for' → logprob: -6.078009128570557

Token 431: ' maxim' (ID: 29045)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.4655146598815918
    2. '   ' → logprob: -1.9655146598815918
    3. 'result' → logprob: -1.9655146598815918
    4. 'answers' → logprob: -3.965514659881592
    5. 'solutions' → logprob: -4.340514659881592
    6. 'for' → logprob: -4.715514659881592
    7. 'valid' → logprob: -4.715514659881592
    8. 'p' → logprob: -4.965514659881592
    9. 'found' → logprob: -5.090514659881592
    10. 'max' → logprob: -5.215514659881592

Token 432: 'iser' (ID: 7466)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4772241711616516
    2. 'ize' → logprob: -1.6022241115570068
    3. 'iser' → logprob: -2.852224111557007
    4. 'um' → logprob: -3.477224111557007
    5. 'al' → logprob: -3.602224111557007
    6. 'izer' → logprob: -4.477224349975586
    7. '       ' → logprob: -4.602224349975586
    8. '#' → logprob: -4.852224349975586
    9. '    ' → logprob: -5.102224349975586
    10. '=' → logprob: -5.227224349975586

Token 433: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6349567174911499
    2. 'p' → logprob: -0.7599567174911499
    3. 'pq' → logprob: -7.5099568367004395
    4. '   ' → logprob: -7.8849568367004395
    5. ' q' → logprob: -8.384956359863281
    6. 'q' → logprob: -8.384956359863281
    7. '       ' → logprob: -8.509956359863281
    8. ' product' → logprob: -8.884956359863281
    9. ' le' → logprob: -9.384956359863281
    10. ' result' → logprob: -9.634956359863281

Token 434: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39643174409866333
    2. '   ' → logprob: -1.2714316844940186
    3. '    
' → logprob: -3.7714316844940186
    4. ' =' → logprob: -5.396431922912598
    5. '\n' → logprob: -5.396431922912598
    6. ' 
' → logprob: -5.521431922912598
    7. '=' → logprob: -6.271431922912598
    8. ' for' → logprob: -6.396431922912598
    9. '\' → logprob: -6.646431922912598
    10. '   
' → logprob: -6.771431922912598

Token 435: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00033879990223795176
    2. ' q' → logprob: -8.000338554382324
    3. '	q' → logprob: -13.500338554382324
    4. '*q' → logprob: -14.125338554382324
    5. ' ' → logprob: -14.750338554382324
    6. '<|end|>' → logprob: -15.125338554382324
    7. '   ' → logprob: -15.875338554382324
    8. 'qrst' → logprob: -16.00033950805664
    9. ' ' → logprob: -16.50033950805664
    10. 'qml' → logprob: -16.81283950805664

Token 436: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013157056644558907
    2. 'max' → logprob: -4.638156890869141
    3. '       ' → logprob: -6.638156890869141
    4. '    
' → logprob: -7.263156890869141
    5. ' max' → logprob: -8.26315689086914
    6. 'best' → logprob: -8.26315689086914
    7. '
' → logprob: -8.38815689086914
    8. 'results' → logprob: -8.63815689086914
    9. 'result' → logprob: -8.63815689086914
    10. ' best' → logprob: -9.38815689086914

Token 437: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4571473300457001
    2. 'max' → logprob: -1.4571473598480225
    3. '
' → logprob: -2.5821473598480225
    4. '       ' → logprob: -3.4571473598480225
    5. 'result' → logprob: -4.207147121429443
    6. '    
' → logprob: -5.582147121429443
    7. 'best' → logprob: -5.707147121429443
    8. ' max' → logprob: -6.582147121429443
    9. '        
' → logprob: -7.207147121429443
    10. 'results' → logprob: -7.207147121429443

Token 438: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.08868980407714844
    2. 'best' → logprob: -2.5886898040771484
    3. '   ' → logprob: -5.338689804077148
    4. 'result' → logprob: -5.588689804077148
    5. '#' → logprob: -7.463689804077148
    6. ' max' → logprob: -8.713689804077148
    7. 'results' → logprob: -8.838689804077148
    8. ' best' → logprob: -9.463689804077148
    9. 'possible' → logprob: -9.713689804077148
    10. 'dp' → logprob: -9.963689804077148

Token 439: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.25684186816215515
    2. '_product' → logprob: -1.5068418979644775
    3. '_prod' → logprob: -5.381841659545898
    4. '_val' → logprob: -9.131841659545898
    5. '_value' → logprob: -9.256841659545898
    6. '_width' → logprob: -10.256841659545898
    7. '_' → logprob: -10.631841659545898
    8. '_p' → logprob: -11.256841659545898
    9. 'area' → logprob: -12.256841659545898
    10. 'prod' → logprob: -12.631841659545898

Token 440: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20143623650074005
    2. '=' → logprob: -1.7014362812042236
    3. ',' → logprob: -10.826436042785645
    4. '   ' → logprob: -13.451436042785645
    5. ' ' → logprob: -14.326436042785645
    6. '_area' → logprob: -15.076436042785645
    7. '=-' → logprob: -15.951436042785645
    8. 'area' → logprob: -16.07643699645996
    9. ')' → logprob: -16.32643699645996
    10. '  ' → logprob: -16.70143699645996

Token 441: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007695110514760017
    2. ' ' → logprob: -4.882695198059082
    3. '-' → logprob: -9.507695198059082
    4. ' -' → logprob: -11.382695198059082
    5. '   ' → logprob: -12.632695198059082
    6. '  ' → logprob: -17.007694244384766
    7. ' ' → logprob: -17.257694244384766
    8. '       ' → logprob: -18.257694244384766
    9. '    ' → logprob: -19.320194244384766
    10. '     ' → logprob: -19.507694244384766

Token 442: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019287518225610256
    2. '-' → logprob: -6.251928806304932
    3. ' ' → logprob: -16.251928329467773
    4. ' -' → logprob: -17.626928329467773
    5. 'None' → logprob: -18.876928329467773
    6. '-s' → logprob: -19.376928329467773
    7. '1' → logprob: -19.876928329467773
    8. '−' → logprob: -20.626928329467773
    9. '   ' → logprob: -20.751928329467773
    10. '```' → logprob: -21.001928329467773

Token 443: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0018299886723980308
    2. 'max' → logprob: -7.626830101013184
    3. 'result' → logprob: -7.876830101013184
    4. '       ' → logprob: -8.251830101013184
    5. ',' → logprob: -8.751830101013184
    6. '
' → logprob: -9.251830101013184
    7. '    
' → logprob: -9.501830101013184
    8. '        
' → logprob: -9.626830101013184
    9. 'best' → logprob: -9.751830101013184
    10. ' 
' → logprob: -10.376830101013184

Token 444: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0006862253649160266
    2. 'max' → logprob: -8.500686645507812
    3. '       ' → logprob: -9.000686645507812
    4. ' max' → logprob: -9.250686645507812
    5. '
' → logprob: -9.625686645507812
    6. 'result' → logprob: -9.875686645507812
    7. ',' → logprob: -10.625686645507812
    8. '   ' → logprob: -10.750686645507812
    9. '    
' → logprob: -11.000686645507812
    10. ' best' → logprob: -11.125686645507812

Token 445: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.3637683093547821
    2. 'result' → logprob: -1.6137683391571045
    3. 'res' → logprob: -3.1137683391571045
    4. 'max' → logprob: -3.4887683391571045
    5. 'ans' → logprob: -4.738768100738525
    6. 'p' → logprob: -4.863768100738525
    7. ' best' → logprob: -5.113768100738525
    8. 'answer' → logprob: -5.238768100738525
    9. 'width' → logprob: -7.613768100738525
    10. 'solution' → logprob: -7.738768100738525

Token 446: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0015759251546114683
    2. 'p' → logprob: -6.876575946807861
    3. '_pair' → logprob: -8.626575469970703
    4. '_width' → logprob: -8.876575469970703
    5. '_' → logprob: -8.876575469970703
    6. '_q' → logprob: -9.876575469970703
    7. ' =' → logprob: -11.626575469970703
    8. '_area' → logprob: -12.126575469970703
    9. '_w' → logprob: -12.501575469970703
    10. '_dims' → logprob: -13.126575469970703

Token 447: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31649476289749146
    2. ',' → logprob: -1.6914947032928467
    3. ' =' → logprob: -2.4414947032928467
    4. '=None' → logprob: -11.566494941711426
    5. ' ,' → logprob: -11.816494941711426
    6. ',q' → logprob: -12.816494941711426
    7. ',b' → logprob: -13.066494941711426
    8. '<|end|>' → logprob: -13.816494941711426
    9. ')' → logprob: -14.191494941711426
    10. 'q' → logprob: -14.691494941711426

Token 448: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00046868418576195836
    2. 'None' → logprob: -8.375468254089355
    3. 'best' → logprob: -8.750468254089355
    4. '1' → logprob: -9.625468254089355
    5. '-' → logprob: -11.375468254089355
    6. ' ' → logprob: -13.500468254089355
    7. ' None' → logprob: -15.125468254089355
    8. 'b' → logprob: -16.000469207763672
    9. '2' → logprob: -16.500469207763672
    10. ' best' → logprob: -16.750469207763672

Token 449: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0027154763229191303
    2. '1' → logprob: -6.627715587615967
    3. 'None' → logprob: -6.877715587615967
    4. 'best' → logprob: -8.127715110778809
    5. '-' → logprob: -9.752715110778809
    6. '2' → logprob: -13.502715110778809
    7. 'max' → logprob: -14.377715110778809
    8. 'none' → logprob: -14.502715110778809
    9. ' None' → logprob: -14.627715110778809
    10. 'p' → logprob: -15.002715110778809

Token 450: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2311176061630249
    2. '<|end|>' → logprob: -1.731117606163025
    3. 'best' → logprob: -3.8561177253723145
    4. '       ' → logprob: -6.2311177253723145
    5. '<|end|>' → logprob: -6.3561177253723145
    6. '	best' → logprob: -6.6061177253723145
    7. ' best' → logprob: -6.8561177253723145
    8. ' 
' → logprob: -7.6061177253723145
    9. '(best' → logprob: -7.9811177253723145
    10. ',' → logprob: -8.231117248535156

Token 451: '       ' (ID: 309)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.48355546593666077
    2. ' best' → logprob: -0.9835554361343384
    3. '       ' → logprob: -4.733555316925049
    4. '	best' → logprob: -7.608555316925049
    5. '
' → logprob: -9.733555793762207
    6. '(best' → logprob: -10.358555793762207
    7. ',' → logprob: -10.608555793762207
    8. '_best' → logprob: -11.358555793762207
    9. '   ' → logprob: -11.983555793762207
    10. '.best' → logprob: -12.358555793762207

Token 452: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.004079112783074379
    2. ' best' → logprob: -5.504079341888428
    3. '	best' → logprob: -14.62907886505127
    4. '       ' → logprob: -15.62907886505127
    5. '   ' → logprob: -17.129079818725586
    6. '_best' → logprob: -18.254079818725586
    7. '(best' → logprob: -19.129079818725586
    8. '.best' → logprob: -19.379079818725586
    9. 'Best' → logprob: -19.379079818725586
    10. '2' → logprob: -19.504079818725586

Token 453: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -0.0029506010469049215
    2. '_p' → logprob: -5.877950668334961
    3. 'q' → logprob: -9.127950668334961
    4. '_' → logprob: -10.252950668334961
    5. ',' → logprob: -14.502950668334961
    6. '=' → logprob: -14.877950668334961
    7. '   ' → logprob: -15.377950668334961
    8. '	q' → logprob: -16.00295066833496
    9. '_r' → logprob: -16.25295066833496
    10. '_j' → logprob: -16.37795066833496

Token 454: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006715370807796717
    2. ' =' → logprob: -5.006715297698975
    3. '2' → logprob: -18.131715774536133
    4. '=

' → logprob: -18.381715774536133
    5. '=}' → logprob: -18.756715774536133
    6. '=
' → logprob: -18.881715774536133
    7. '=None' → logprob: -19.006715774536133
    8. ',' → logprob: -19.506715774536133
    9. '0' → logprob: -19.631715774536133
    10. ')' → logprob: -19.881715774536133

Token 455: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00022070204431656748
    2. ' ' → logprob: -8.50022029876709
    3. '0' → logprob: -12.12522029876709
    4. '100' → logprob: -12.37522029876709
    5. 'MAX' → logprob: -12.75022029876709
    6. 'max' → logprob: -13.62522029876709
    7. '1' → logprob: -13.75022029876709
    8. '3' → logprob: -14.25022029876709
    9. 'int' → logprob: -14.37522029876709
    10. 'pr' → logprob: -15.00022029876709

Token 456: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.93710636976175e-05
    2. 'MAX' → logprob: -10.250099182128906
    3. '100' → logprob: -10.500099182128906
    4. '0' → logprob: -11.125099182128906
    5. '3' → logprob: -12.000099182128906
    6. 'max' → logprob: -12.125099182128906
    7. 'int' → logprob: -12.500099182128906
    8. ' ' → logprob: -13.125099182128906
    9. '1' → logprob: -13.375099182128906
    10. 'pr' → logprob: -13.625099182128906

Token 457: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002424410078674555
    2. '   ' → logprob: -6.877424240112305
    3. '  
' → logprob: -8.002424240112305
    4. '    
' → logprob: -8.127424240112305
    5. ' for' → logprob: -8.252424240112305
    6. ' 
' → logprob: -8.252424240112305
    7. 'for' → logprob: -9.752424240112305
    8. '       ' → logprob: -10.002424240112305
    9. '
' → logprob: -10.127424240112305
    10. '\n' → logprob: -10.502424240112305

Token 458: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15023687481880188
    2. '
' → logprob: -2.9002368450164795
    3. '       ' → logprob: -3.0252368450164795
    4. ' for' → logprob: -3.7752368450164795
    5. '    
' → logprob: -5.275237083435059
    6. 'for' → logprob: -5.650237083435059
    7. '  
' → logprob: -6.025237083435059
    8. '        
' → logprob: -7.775237083435059
    9. '   
' → logprob: -8.025237083435059
    10. '```' → logprob: -8.275237083435059

Token 459: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03294268622994423
    2. 'left' → logprob: -4.282942771911621
    3. 'i' → logprob: -4.657942771911621
    4. 'p' → logprob: -5.657942771911621
    5. 'import' → logprob: -6.157942771911621
    6. '#' (adapté à ' #') → logprob: -7.032942771911621
    7. 'idx' → logprob: -7.032942771911621
    8. 'q' → logprob: -7.407942771911621
    9. 'index' → logprob: -8.282942771911621
    10. '       ' → logprob: -8.782942771911621

Token 460: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07349297404289246
    2. 'i' → logprob: -3.448493003845215
    3. 'p' → logprob: -4.073493003845215
    4. 'left' → logprob: -4.823493003845215
    5. 'import' → logprob: -4.948493003845215
    6. 'idx' → logprob: -5.823493003845215
    7. '#' → logprob: -6.823493003845215
    8. 'index' → logprob: -7.198493003845215
    9. 'from' → logprob: -7.698493003845215
    10. 'pr' → logprob: -7.823493003845215

Token 461: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.01877697929739952
    2. 'ours' → logprob: -4.018776893615723
    3. 'ourt' → logprob: -7.518776893615723
    4. 'u' → logprob: -10.518776893615723
    5. 'or' → logprob: -10.768776893615723
    6. 'o' → logprob: -11.893776893615723
    7. 'ou' → logprob: -12.018776893615723
    8. 'ourse' → logprob: -12.268776893615723
    9. 'for' → logprob: -12.893776893615723
    10. 'ur' → logprob: -12.893776893615723

Token 462: 'ir' (ID: 380)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.2597054243087769
    2. 'ing' → logprob: -1.2597054243087769
    3. 'e' → logprob: -1.5097054243087769
    4. 'for' → logprob: -2.1347055435180664
    5. 'ir' → logprob: -3.3847055435180664
    6. 'age' → logprob: -4.259705543518066
    7. 'ge' → logprob: -4.634705543518066
    8. 'our' → logprob: -5.009705543518066
    9. 't' → logprob: -5.134705543518066
    10. 'or' → logprob: -5.634705543518066

Token 463: ' q' (ID: 2335)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5307193398475647
    2. ' p' → logprob: -1.40571928024292
    3. 'i' → logprob: -2.78071928024292
    4. ' i' → logprob: -3.40571928024292
    5. ' for' → logprob: -3.90571928024292
    6. ' primes' → logprob: -4.40571928024292
    7. 'for' → logprob: -4.65571928024292
    8. 'pr' → logprob: -4.65571928024292
    9. '   ' → logprob: -5.28071928024292
    10. 'q' → logprob: -5.40571928024292

Token 464: ' dans' (ID: 2671)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6964640021324158
    2. ' in' → logprob: -0.6964640021324158
    3. 's' → logprob: -5.8214640617370605
    4. '   ' → logprob: -9.446463584899902
    5. '_index' → logprob: -10.071463584899902
    6. 'index' → logprob: -10.446463584899902
    7. ' =' → logprob: -10.946463584899902
    8. '_idx' → logprob: -11.071463584899902
    9. ' ' → logprob: -11.196463584899902
    10. '=' → logprob: -11.196463584899902

Token 465: ' la' (ID: 557)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.0016304324381053448
    2. '(pr' → logprob: -6.6266303062438965
    3. '[' → logprob: -8.501630783081055
    4. ' primes' → logprob: -10.626630783081055
    5. 'range' → logprob: -10.751630783081055
    6. 'prime' → logprob: -10.876630783081055
    7. '[i' → logprob: -11.126630783081055
    8. '[p' → logprob: -11.751630783081055
    9. 'p' → logprob: -12.626630783081055
    10. 'filter' → logprob: -13.001630783081055

Token 466: ' liste' (ID: 31719)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.0025391592644155025
    2. 'range' → logprob: -6.252539157867432
    3. '[' → logprob: -7.877539157867432
    4. '(pr' → logprob: -9.12753963470459
    5. '[i' → logprob: -10.12753963470459
    6. 'prime' → logprob: -10.87753963470459
    7. 'p' → logprob: -11.00253963470459
    8. '[p' → logprob: -11.62753963470459
    9. 're' → logprob: -11.87753963470459
    10. ' primes' → logprob: -12.37753963470459

Token 467: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6194334030151367
    2. 'des' → logprob: -1.3694334030151367
    3. 'pr' → logprob: -2.4944334030151367
    4. '(pr' → logprob: -2.4944334030151367
    5. ' des' → logprob: -4.119433403015137
    6. 'de' → logprob: -4.494433403015137
    7. 'for' → logprob: -5.244433403015137
    8. 'of' → logprob: -6.369433403015137
    9. '       ' → logprob: -6.369433403015137
    10. ':' → logprob: -6.994433403015137

Token 468: ' premiers' (ID: 59140)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.026224009692668915
    2. 'p' → logprob: -4.401224136352539
    3. 'prime' → logprob: -5.026224136352539
    4. '[p' → logprob: -5.526224136352539
    5. '[' → logprob: -6.276224136352539
    6. '(pr' → logprob: -8.026224136352539
    7. '[num' → logprob: -8.026224136352539
    8. '[i' → logprob: -8.526224136352539
    9. '[x' → logprob: -9.276224136352539
    10. 'filter' → logprob: -9.526224136352539

Token 469: ' plus' (ID: 2932)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009661303483881056
    2. ':
' → logprob: -7.0009660720825195
    3. '[::-' → logprob: -10.62596607208252
    4. '   ' → logprob: -11.00096607208252
    5. '[' → logprob: -12.00096607208252
    6. '):' → logprob: -13.25096607208252
    7. ' :' → logprob: -13.75096607208252
    8. '       ' → logprob: -13.87596607208252
    9. ':
' → logprob: -14.12596607208252
    10. ':`' → logprob: -14.75096607208252

Token 470: ' petits' (ID: 38141)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6961164474487305
    2. 'pr' → logprob: -1.6961164474487305
    3. 'gr' → logprob: -2.1961164474487305
    4. 'pet' → logprob: -2.1961164474487305
    5. 'import' → logprob: -2.6961164474487305
    6. '   ' → logprob: -3.1961164474487305
    7. 'grand' → logprob: -3.6961164474487305
    8. '[i' → logprob: -3.8211164474487305
    9. 'haut' → logprob: -3.9461164474487305
    10. 'au' → logprob: -4.0711164474487305

Token 471: ' ou' (ID: 2031)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.8123066425323486
    2. 'pr' → logprob: -2.0623066425323486
    3. ',' → logprob: -2.1873066425323486
    4. ' que' → logprob: -3.0623066425323486
    5. '=' → logprob: -3.1873066425323486
    6. 'ou' → logprob: -3.3123066425323486
    7. 'import' → logprob: -3.8123066425323486
    8. '(pr' → logprob: -3.8123066425323486
    9. 'à' → logprob: -3.9373066425323486
    10. '   ' → logprob: -4.1873064041137695

Token 472: ' ég' (ID: 33150)
  Prédit: 'ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ég' → logprob: -0.0018057262059301138
    2. 'égal' → logprob: -7.001805782318115
    3. 'eg' → logprob: -7.251805782318115
    4. ' ég' → logprob: -9.251805305480957
    5. '=' → logprob: -10.376805305480957
    6. 'égr' → logprob: -11.751805305480957
    7. 'é' → logprob: -12.376805305480957
    8. 'import' → logprob: -12.376805305480957
    9. 'qu' → logprob: -12.501805305480957
    10. '\' → logprob: -12.751805305480957

Token 473: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.008343880996108055
    2. 'al' → logprob: -4.883343696594238
    3. 'a' → logprob: -8.133343696594238
    4. 'ale' → logprob: -9.133343696594238
    5. 'ales' → logprob: -9.883343696594238
    6. '```' → logprob: -10.008343696594238
    7. '   ' → logprob: -10.133343696594238
    8. 'q' → logprob: -10.133343696594238
    9. 'als' → logprob: -11.133343696594238
    10. '`' → logprob: -11.508343696594238

Token 474: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.0049844980239868
    2. 'pr' → logprob: -1.1299844980239868
    3. '(pr' → logprob: -1.6299844980239868
    4. 'que' → logprob: -3.7549843788146973
    5. 'au' → logprob: -4.004984378814697
    6. 'aux' → logprob: -4.004984378814697
    7. '   ' → logprob: -4.379984378814697
    8. '([' → logprob: -4.754984378814697
    9. '[' → logprob: -5.004984378814697
    10. 'de' → logprob: -5.879984378814697

Token 475: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.2147008180618286
    2. 'MAX' → logprob: -1.7147008180618286
    3. 'max' → logprob: -4.464700698852539
    4. 'int' → logprob: -6.839700698852539
    5. ' m' → logprob: -8.589700698852539
    6. 'math' → logprob: -9.089700698852539
    7. ' MAX' → logprob: -9.339700698852539
    8. '100' → logprob: -9.589700698852539
    9. 'M' → logprob: -9.964700698852539
    10. 'pr' → logprob: -10.089700698852539

Token 476: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021488124504685402
    2. ':
' → logprob: -3.8964881896972656
    3. '       ' → logprob: -7.271488189697266
    4. '   ' → logprob: -8.896488189697266
    5. ',' → logprob: -9.771488189697266
    6. ' for' → logprob: -11.021488189697266
    7. ':
' → logprob: -11.896488189697266
    8. 'for' → logprob: -12.021488189697266
    9. '[' → logprob: -12.021488189697266
    10. '=' → logprob: -12.396488189697266

Token 477: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6414544582366943
    2. ':' → logprob: -0.7664544582366943
    3. '   ' → logprob: -5.266454696655273
    4. ',' → logprob: -6.516454696655273
    5. ':
' → logprob: -7.016454696655273
    6. ' for' → logprob: -7.016454696655273
    7. 'for' → logprob: -9.266454696655273
    8. '[' → logprob: -9.766454696655273
    9. ' :' → logprob: -10.516454696655273
    10. '.' → logprob: -10.516454696655273

Token 478: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3716258406639099
    2. 'for' → logprob: -1.6216259002685547
    3. '       ' → logprob: -2.2466259002685547
    4. '   ' → logprob: -4.996625900268555
    5. 'q' → logprob: -10.121625900268555
    6. ',' → logprob: -10.246625900268555
    7. ':' → logprob: -10.371625900268555
    8. '=' → logprob: -10.746625900268555
    9. '	for' → logprob: -10.746625900268555
    10. ' q' → logprob: -11.246625900268555

Token 479: ' q' (ID: 2335)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42651012539863586
    2. ' for' → logprob: -1.3015100955963135
    3. '       ' → logprob: -2.6765100955963135
    4. '   ' → logprob: -5.176510334014893
    5. 'import' → logprob: -7.551510334014893
    6. 'from' → logprob: -10.176509857177734
    7. 'q' → logprob: -10.426509857177734
    8. '	for' → logprob: -11.426509857177734
    9. ' import' → logprob: -12.176509857177734
    10. ' q' → logprob: -12.301509857177734

Token 480: ' >=' (ID: 5064)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2366703599691391
    2. '_index' → logprob: -1.7366703748703003
    3. '_idx' → logprob: -4.23667049407959
    4. 'in' → logprob: -5.48667049407959
    5. '_indices' → logprob: -5.73667049407959
    6. '_candidates' → logprob: -5.86167049407959
    7. ' for' → logprob: -5.98667049407959
    8. 's' → logprob: -6.36167049407959
    9. '_list' → logprob: -6.98667049407959
    10. '_for' → logprob: -7.36167049407959

Token 481: ' p' (ID: 275)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3948292136192322
    2. 'p' → logprob: -1.644829273223877
    3. 'best' → logprob: -2.394829273223877
    4. 'max' → logprob: -4.644829273223877
    5. 'int' → logprob: -4.769829273223877
    6. ' p' → logprob: -4.894829273223877
    7. ' ' → logprob: -5.519829273223877
    8. ' best' → logprob: -5.894829273223877
    9. 'q' → logprob: -6.144829273223877
    10. ' int' → logprob: -6.644829273223877

Token 482: ' car' (ID: 1669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08732941001653671
    2. ':
' → logprob: -3.337329387664795
    3. '       ' → logprob: -3.712329387664795
    4. '   ' → logprob: -4.212329387664795
    5. '=' → logprob: -5.962329387664795
    6. ' =' → logprob: -5.962329387664795
    7. ' for' → logprob: -6.587329387664795
    8. ',' → logprob: -7.337329387664795
    9. '
' → logprob: -7.837329387664795
    10. '[' → logprob: -8.087329864501953

Token 483: ' p' (ID: 275)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.601852297782898
    2. 'p' → logprob: -1.226852297782898
    3. ' p' → logprob: -3.1018524169921875
    4. 'True' → logprob: -3.1018524169921875
    5. ' True' → logprob: -3.4768524169921875
    6. ' q' → logprob: -3.4768524169921875
    7. '       ' → logprob: -5.3518524169921875
    8. '           ' → logprob: -7.4768524169921875
    9. '2' → logprob: -8.101852416992188
    10. 'for' → logprob: -8.226852416992188

Token 484: '/q' (ID: 65772)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3886862099170685
    2. '<=' → logprob: -1.138686180114746
    3. ' ≤' → logprob: -7.638686180114746
    4. '≤' → logprob: -8.013686180114746
    5. '=' → logprob: -8.513686180114746
    6. 'le' → logprob: -8.638686180114746
    7. 's' → logprob: -9.013686180114746
    8. ')' → logprob: -9.388686180114746
    9. '       ' → logprob: -9.388686180114746
    10. ')<=' → logprob: -9.638686180114746

Token 485: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.4295848309993744
    2. ' <=' → logprob: -1.0545848608016968
    3. '>=' → logprob: -8.054584503173828
    4. ')' → logprob: -8.554584503173828
    5. ')<=' → logprob: -9.304584503173828
    6. ' >=' → logprob: -9.804584503173828
    7. '=' → logprob: -9.804584503173828
    8. ',' → logprob: -10.554584503173828
    9. '       ' → logprob: -10.804584503173828
    10. '   ' → logprob: -11.054584503173828

Token 486: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005840876139700413
    2. 'q' → logprob: -5.50584077835083
    3. ' ' → logprob: -6.50584077835083
    4. ' q' → logprob: -8.255841255187988
    5. '   ' → logprob: -13.005841255187988
    6. '```' → logprob: -13.630841255187988
    7. '  ' → logprob: -14.880841255187988
    8. '
' → logprob: -15.005841255187988
    9. '	q' → logprob: -15.068341255187988
    10. '[q' → logprob: -15.068341255187988

Token 487: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005296798190101981
    2. 'q' → logprob: -7.625529766082764
    3. ' ' → logprob: -10.125529289245605
    4. ' q' → logprob: -13.625529289245605
    5. '```' → logprob: -15.750529289245605
    6. '   ' → logprob: -16.375530242919922
    7. '
' → logprob: -16.500530242919922
    8. '  ' → logprob: -17.000530242919922
    9. '<|end|>' → logprob: -17.875530242919922
    10. '[q' → logprob: -17.938030242919922

Token 488: ' avec' (ID: 3937)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14539361000061035
    2. '   ' → logprob: -2.0203936100006104
    3. ' for' → logprob: -6.895393371582031
    4. '<|end|>' → logprob: -8.020393371582031
    5. ',' → logprob: -8.270393371582031
    6. ':' → logprob: -8.270393371582031
    7. '        
' → logprob: -8.520393371582031
    8. '
' → logprob: -8.645393371582031
    9. ')' → logprob: -9.020393371582031
    10. 'for' → logprob: -9.270393371582031

Token 489: ' p' (ID: 275)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.13050433993339539
    2. 'p' → logprob: -2.6305043697357178
    3. ' q' → logprob: -3.3805043697357178
    4. 'pr' → logprob: -5.130504131317139
    5. ' p' → logprob: -5.255504131317139
    6. 'range' → logprob: -5.880504131317139
    7. ' primes' → logprob: -7.005504131317139
    8. 'prime' → logprob: -8.130504608154297
    9. 'lambda' → logprob: -8.380504608154297
    10. 'max' → logprob: -8.755504608154297

Token 490: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.38773229718208313
    2. ' <=' → logprob: -1.1377322673797607
    3. '=' → logprob: -7.76273250579834
    4. '       ' → logprob: -8.76273250579834
    5. '≤' → logprob: -9.38773250579834
    6. ' ≤' → logprob: -10.38773250579834
    7. ' =' → logprob: -10.38773250579834
    8. '<' → logprob: -11.01273250579834
    9. ')<=' → logprob: -11.01273250579834
    10. 'q' → logprob: -11.13773250579834

Token 491: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.56102097814437e-05
    2. ' q' → logprob: -10.000045776367188
    3. '	q' → logprob: -16.875045776367188
    4. '       ' → logprob: -17.625045776367188
    5. '   ' → logprob: -19.375045776367188
    6. '```' → logprob: -19.500045776367188
    7. '
' → logprob: -19.750045776367188
    8. 'qml' → logprob: -19.875045776367188
    9. '[q' → logprob: -20.125045776367188
    10. ''q' → logprob: -20.250045776367188

Token 492: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12176033854484558
    2. '   ' → logprob: -2.246760368347168
    3. ' for' → logprob: -5.121760368347168
    4. 'for' → logprob: -6.996760368347168
    5. ':' → logprob: -7.496760368347168
    6. ',' → logprob: -7.621760368347168
    7. '<|end|>' → logprob: -8.121760368347168
    8. '
' → logprob: -8.996760368347168
    9. '<|end|>' → logprob: -9.246760368347168
    10. ' and' → logprob: -9.246760368347168

Token 493: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6650609970092773
    2. '
' → logprob: -1.0400609970092773
    3. '   ' → logprob: -2.1650609970092773
    4. '        
' → logprob: -5.165060997009277
    5. '    
' → logprob: -5.290060997009277
    6. '  
' → logprob: -6.040060997009277
    7. ' for' → logprob: -6.665060997009277
    8. ':' → logprob: -6.790060997009277
    9. '\n' → logprob: -7.415060997009277
    10. ',' → logprob: -8.040060997009277

Token 494: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0044779470190405846
    2. ' for' → logprob: -5.8794779777526855
    3. 'for' → logprob: -7.0044779777526855
    4. '   ' → logprob: -7.2544779777526855
    5. '        
' → logprob: -11.004477500915527
    6. '
' → logprob: -11.129477500915527
    7. ',' → logprob: -11.504477500915527
    8. ':' → logprob: -12.379477500915527
    9. '```' → logprob: -12.879477500915527
    10. 'import' → logprob: -14.004477500915527

Token 495: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7351317405700684
    2. ' for' → logprob: -0.9851317405700684
    3. '       ' → logprob: -1.9851317405700684
    4. '   ' → logprob: -5.110131740570068
    5. 'q' → logprob: -6.235131740570068
    6. 'import' → logprob: -6.985131740570068
    7. 'from' → logprob: -7.735131740570068
    8. 'index' → logprob: -8.985132217407227
    9. ' q' → logprob: -9.110132217407227
    10. 'i' → logprob: -9.985132217407227

Token 496: ' parc' (ID: 22138)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6081354022026062
    2. 'for' → logprob: -1.108135461807251
    3. ' for' → logprob: -2.483135461807251
    4. '       ' → logprob: -3.608135461807251
    5. '=' → logprob: -4.733135223388672
    6. ' =' → logprob: -6.608135223388672
    7. 'from' → logprob: -7.108135223388672
    8. '   ' → logprob: -7.358135223388672
    9. ' import' → logprob: -7.483135223388672
    10. 'pr' → logprob: -7.858135223388672

Token 497: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.1698920577764511
    2. 'our' → logprob: -1.9198920726776123
    3. 'ours' → logprob: -4.669891834259033
    4. 'court' → logprob: -9.669892311096191
    5. 'ou' → logprob: -9.794892311096191
    6. 'oure' → logprob: -10.169892311096191
    7. 'cour' → logprob: -10.419892311096191
    8. '_' → logprob: -11.419892311096191
    9. '       ' → logprob: -11.544892311096191
    10. '```' → logprob: -12.294892311096191

Token 498: ' q' (ID: 2335)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7031062841415405
    2. ' for' → logprob: -1.5781062841415405
    3. 'pr' → logprob: -1.9531062841415405
    4. '   ' → logprob: -3.20310640335083
    5. 'q' → logprob: -3.82810640335083
    6. ' primes' → logprob: -3.95310640335083
    7. '[q' → logprob: -3.95310640335083
    8. '(pr' → logprob: -4.32810640335083
    9. '(q' → logprob: -4.82810640335083
    10. '[i' → logprob: -5.07810640335083

Token 499: ' en' (ID: 469)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.1408038139343262
    2. ':' → logprob: -1.7658038139343262
    3. ' in' → logprob: -1.8908038139343262
    4. 'dans' → logprob: -2.265803813934326
    5. '_index' → logprob: -2.640803813934326
    6. '=' → logprob: -3.015803813934326
    7. 'for' → logprob: -3.640803813934326
    8. '_idx' → logprob: -4.015803813934326
    9. 'pr' → logprob: -4.640803813934326
    10. ' =' → logprob: -4.890803813934326

Token 500: ' ordre' (ID: 103061)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.08688492327928543
    2. 're' → logprob: -2.7118849754333496
    3. 'reverse' → logprob: -5.08688497543335
    4. '[' → logprob: -5.21188497543335
    5. ' reversed' → logprob: -6.71188497543335
    6. ' primes' → logprob: -6.83688497543335
    7. '(pr' → logprob: -7.46188497543335
    8. 'filter' → logprob: -8.086884498596191
    9. 'descending' → logprob: -8.211884498596191
    10. 'filtered' → logprob: -8.586884498596191

Token 501: ' décro' (ID: 176854)
  Prédit: 'desc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'desc' → logprob: -0.7720537781715393
    2. ' décro' → logprob: -1.0220537185668945
    3. ' des' → logprob: -3.1470537185668945
    4. '   ' → logprob: -4.0220537185668945
    5. 'des' → logprob: -4.1470537185668945
    6. 'descending' → logprob: -4.3970537185668945
    7. 'cro' → logprob: -4.5220537185668945
    8. '_desc' → logprob: -4.6470537185668945
    9. 'de' → logprob: -4.8970537185668945
    10. 'from' → logprob: -4.8970537185668945

Token 502: 'issant' (ID: 31359)
  Prédit: 'chant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chant' → logprob: -1.2815122604370117
    2. 'ché' → logprob: -2.0315122604370117
    3. 'r' → logprob: -2.2815122604370117
    4. 'ch' → logprob: -2.2815122604370117
    5. 'd' → logprob: -2.7815122604370117
    6. 'ant' → logprob: -3.1565122604370117
    7. 'rent' → logprob: -3.1565122604370117
    8. 'de' → logprob: -3.5315122604370117
    9. 'rant' → logprob: -3.7815122604370117
    10. 'dent' → logprob: -3.7815122604370117

Token 503: ' car' (ID: 1669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6427122950553894
    2. ' for' → logprob: -1.0177123546600342
    3. '   ' → logprob: -3.142712354660034
    4. 'for' → logprob: -3.517712354660034
    5. ',' → logprob: -4.142712116241455
    6. ':
' → logprob: -4.642712116241455
    7. '       ' → logprob: -5.517712116241455
    8. '[::-' → logprob: -5.642712116241455
    9. '.' → logprob: -6.267712116241455
    10. ' in' → logprob: -6.517712116241455

Token 504: ' on' (ID: 402)
  Prédit: ' primes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.17735940217971802
    2. ' q' → logprob: -2.4273593425750732
    3. 'pr' → logprob: -2.8023593425750732
    4. ' for' → logprob: -5.552359580993652
    5. ' len' → logprob: -6.302359580993652
    6. ' pr' → logprob: -6.302359580993652
    7. ' reversed' → logprob: -6.677359580993652
    8. 'q' → logprob: -6.802359580993652
    9. 'for' → logprob: -7.302359580993652
    10. 'len' → logprob: -7.677359580993652

Token 505: ' cherche' (ID: 52345)
  Prédit: 'cherche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cherche' → logprob: -0.38241082429885864
    2. ' veut' → logprob: -1.6324107646942139
    3. 've' → logprob: -2.632410764694214
    4. ' cherche' → logprob: -3.132410764694214
    5. 'veux' → logprob: -6.382411003112793
    6. ' souhaite' → logprob: -6.882411003112793
    7. 'va' → logprob: -7.257411003112793
    8. 'cher' → logprob: -7.382411003112793
    9. 'max' → logprob: -7.757411003112793
    10. ' recherche' → logprob: -8.007411003112793

Token 506: ' un' (ID: 537)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.46263387799263
    2. ' des' → logprob: -2.2126338481903076
    3. 'de' → logprob: -2.3376338481903076
    4. 'd' → logprob: -3.2126338481903076
    5. ' to' → logprob: -4.087634086608887
    6. '       ' → logprob: -4.212634086608887
    7. 'des' → logprob: -4.337634086608887
    8. ' d' → logprob: -4.587634086608887
    9. 'max' → logprob: -4.837634086608887
    10. '   ' → logprob: -4.962634086608887

Token 507: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9987296462059021
    2. ' max' → logprob: -1.1237297058105469
    3. ' maximum' → logprob: -2.373729705810547
    4. ' produit' → logprob: -2.498729705810547
    5. ' area' → logprob: -3.498729705810547
    6. ' q' → logprob: -3.623729705810547
    7. ' grand' → logprob: -3.998729705810547
    8. ' large' → logprob: -4.998729705810547
    9. 'q' → logprob: -5.123729705810547
    10. ' ' → logprob: -5.123729705810547

Token 508: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.29914391040802
    2. ' des' → logprob: -1.29914391040802
    3. ' de' → logprob: -1.67414391040802
    4. '(q' → logprob: -2.5491437911987305
    5. '       ' → logprob: -2.9241437911987305
    6. ')' → logprob: -4.0491437911987305
    7. '_des' → logprob: -4.4241437911987305
    8. 'des' → logprob: -4.4241437911987305
    9. ' q' → logprob: -4.4241437911987305
    10. '(reverse' → logprob: -4.4241437911987305

Token 509: ''' (ID: 6)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.597430408000946
    2. ' q' → logprob: -1.7224304676055908
    3. 'area' → logprob: -2.347430467605591
    4. ' area' → logprob: -2.597430467605591
    5. '_area' → logprob: -3.222430467605591
    6. 'p' → logprob: -3.597430467605591
    7. '   ' → logprob: -4.722430229187012
    8. ' p' → logprob: -5.722430229187012
    9. '_q' → logprob: -6.097430229187012
    10. ')' → logprob: -6.722430229187012

Token 510: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.10831692069768906
    2. 'area' → logprob: -2.6083168983459473
    3. 'p' → logprob: -4.733316898345947
    4. 'aires' → logprob: -4.983316898345947
    5. 'surface' → logprob: -5.358316898345947
    6. 'q' → logprob: -5.733316898345947
    7. 'product' → logprob: -6.733316898345947
    8. 'air' → logprob: -6.983316898345947
    9. 'produ' → logprob: -7.608316898345947
    10. 'a' → logprob: -7.733316898345947

Token 511: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.160165935754776
    2. ' for' → logprob: -2.160166025161743
    3. ':' → logprob: -4.035165786743164
    4. '       ' → logprob: -4.910165786743164
    5. 'for' → logprob: -5.785165786743164
    6. ',' → logprob: -6.535165786743164
    7. '
' → logprob: -7.035165786743164
    8. ' =' → logprob: -7.660165786743164
    9. '    
' → logprob: -8.160165786743164
    10. '.' → logprob: -8.160165786743164

Token 512: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02364327758550644
    2. '   ' → logprob: -3.7736432552337646
    3. ' for' → logprob: -8.773643493652344
    4. ',' → logprob: -9.773643493652344
    5. '
' → logprob: -9.773643493652344
    6. '        
' → logprob: -10.023643493652344
    7. ':' → logprob: -11.023643493652344
    8. '    
' → logprob: -11.148643493652344
    9. 'for' → logprob: -11.398643493652344
    10. '.' → logprob: -12.148643493652344

Token 513: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5617104768753052
    2. ' for' → logprob: -1.0617104768753052
    3. 'for' → logprob: -2.8117103576660156
    4. '       ' → logprob: -3.8117103576660156
    5. '    ' → logprob: -7.436710357666016
    6. '
' → logprob: -7.561710357666016
    7. ' primes' → logprob: -8.561710357666016
    8. ' q' → logprob: -9.061710357666016
    9. 'q' → logprob: -9.311710357666016
    10. '    
' → logprob: -10.311710357666016

Token 514: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5326434969902039
    2. ' for' → logprob: -0.9076434969902039
    3. 'pr' → logprob: -5.4076433181762695
    4. '   ' → logprob: -5.6576433181762695
    5. 'q' → logprob: -7.1576433181762695
    6. ' q' → logprob: -8.03264331817627
    7. '       ' → logprob: -8.53264331817627
    8. ' primes' → logprob: -8.65764331817627
    9. 'reverse' → logprob: -12.15764331817627
    10. 'i' → logprob: -12.40764331817627

Token 515: ' plus' (ID: 2932)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.06199738010764122
    2. ' q' → logprob: -2.811997413635254
    3. 'prime' → logprob: -11.561997413635254
    4. '_q' → logprob: -11.811997413635254
    5. '	q' → logprob: -12.936997413635254
    6. 'i' → logprob: -12.936997413635254
    7. ' ' → logprob: -13.436997413635254
    8. ' prime' → logprob: -13.686997413635254
    9. 'pr' → logprob: -14.311997413635254
    10. 'max' → logprob: -14.436997413635254

Token 516: ' d' (ID: 272)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.14277271926403046
    2. 'q' → logprob: -2.017772674560547
    3. ' ' → logprob: -10.142772674560547
    4. ' ' → logprob: -11.517772674560547
    5. '_q' → logprob: -11.642772674560547
    6. '```' → logprob: -11.892772674560547
    7. '	q' → logprob: -12.017772674560547
    8. ' line' → logprob: -12.142772674560547
    9. ' i' → logprob: -12.142772674560547
    10. '   ' → logprob: -12.892772674560547

Token 517: ''eff' (ID: 75751)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.06570649892091751
    2. 'q' → logprob: -2.815706491470337
    3. ' prime' → logprob: -6.440706729888916
    4. 'prime' → logprob: -7.065706729888916
    5. ' p' → logprob: -7.565706729888916
    6. ' i' → logprob: -8.190706253051758
    7. 'p' → logprob: -9.440706253051758
    8. 'i' → logprob: -9.440706253051758
    9. '_q' → logprob: -9.565706253051758
    10. 'pr' → logprob: -9.565706253051758

Token 518: 'icacité' (ID: 131048)
  Prédit: 'icacité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icacité' → logprob: -0.014064425602555275
    2. 'ic' → logprob: -4.639064311981201
    3. 'fic' → logprob: -5.639064311981201
    4. 'ficiency' → logprob: -8.38906478881836
    5. 'iciency' → logprob: -8.51406478881836
    6. '```' → logprob: -9.51406478881836
    7. 'c' → logprob: -9.88906478881836
    8. 'ffic' → logprob: -10.38906478881836
    9. 'fi' → logprob: -10.51406478881836
    10. 'f' → logprob: -11.13906478881836

Token 519: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05171945318579674
    2. ' for' → logprob: -4.051719665527344
    3. ':' → logprob: -4.176719665527344
    4. '       ' → logprob: -5.426719665527344
    5. 'for' → logprob: -5.426719665527344
    6. '
' → logprob: -6.051719665527344
    7. ',' → logprob: -6.051719665527344
    8. ' =' → logprob: -6.426719665527344
    9. ':
' → logprob: -7.051719665527344
    10. '=' → logprob: -7.051719665527344

Token 520: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1360226422548294
    2. ' for' → logprob: -2.2610225677490234
    3. 'for' → logprob: -4.261022567749023
    4. '       ' → logprob: -4.761022567749023
    5. '
' → logprob: -8.761022567749023
    6. '    
' → logprob: -10.511022567749023
    7. ' primes' → logprob: -10.511022567749023
    8. '    ' → logprob: -11.011022567749023
    9. ',' → logprob: -11.761022567749023
    10. '        
' → logprob: -12.011022567749023

Token 521: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04026399180293083
    2. ' for' → logprob: -3.2902638912200928
    3. '       ' → logprob: -6.290264129638672
    4. 'q' → logprob: -8.540264129638672
    5. 'pr' → logprob: -9.415264129638672
    6. '   ' → logprob: -9.540264129638672
    7. ' q' → logprob: -12.540264129638672
    8. 'i' → logprob: -12.915264129638672
    9. 'reverse' → logprob: -12.915264129638672
    10. ' primes' → logprob: -13.040264129638672

Token 522: ' Trou' (ID: 58947)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5897285342216492
    2. 'for' → logprob: -0.9647285342216492
    3. 'pr' → logprob: -3.214728593826294
    4. ' for' → logprob: -4.089728355407715
    5. ' q' → logprob: -5.589728355407715
    6. 'qs' → logprob: -7.214728355407715
    7. 'max' → logprob: -7.214728355407715
    8. '       ' → logprob: -7.339728355407715
    9. 'i' → logprob: -7.714728355407715
    10. '   ' → logprob: -7.839728355407715

Token 523: 'v' (ID: 85)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7382177114486694
    2. '       ' → logprob: -1.6132177114486694
    3. 'r' → logprob: -2.363217830657959
    4. ' for' → logprob: -2.738217830657959
    5. 'for' → logprob: -2.988217830657959
    6. 'i' → logprob: -3.488217830657959
    7. 'is' → logprob: -3.863217830657959
    8. 'q' → logprob: -4.488217830657959
    9. 'ix' → logprob: -4.863217830657959
    10. '    ' → logprob: -5.738217830657959

Token 524: 'ons' (ID: 1808)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.29983383417129517
    2. 'ons' → logprob: -1.6748337745666504
    3. 'u' → logprob: -3.1748337745666504
    4. 'ir' → logprob: -4.92483377456665
    5. 'for' → logprob: -5.42483377456665
    6. 'ing' → logprob: -5.67483377456665
    7. '   ' → logprob: -6.04983377456665
    8. 'ant' → logprob: -6.04983377456665
    9. 'e' → logprob: -6.54983377456665
    10. 're' → logprob: -6.67483377456665

Token 525: ' les' (ID: 1341)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -1.5830353498458862
    2. 'index' → logprob: -2.083035469055176
    3. '   ' → logprob: -2.333035469055176
    4. ' for' → logprob: -2.458035469055176
    5. ' la' → logprob: -2.458035469055176
    6. 'len' → logprob: -2.583035469055176
    7. 'q' → logprob: -2.958035469055176
    8. ' len' → logprob: -2.958035469055176
    9. ' index' → logprob: -3.333035469055176
    10. 'for' → logprob: -3.583035469055176

Token 526: ' indices' (ID: 30378)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9053162932395935
    2. 'q' → logprob: -1.0303163528442383
    3. 'index' → logprob: -2.0303163528442383
    4. 'idx' → logprob: -2.9053163528442383
    5. 'from' → logprob: -3.9053163528442383
    6. 'left' → logprob: -5.155316352844238
    7. '#' → logprob: -5.280316352844238
    8. 'start' → logprob: -5.405316352844238
    9. 'pos' → logprob: -5.530316352844238
    10. 'max' → logprob: -5.905316352844238

Token 527: ' dans' (ID: 2671)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8620959520339966
    2. '_q' → logprob: -0.9870959520339966
    3. '_' → logprob: -1.7370959520339966
    4. '_max' → logprob: -4.112095832824707
    5. '=' → logprob: -5.737095832824707
    6. 'q' → logprob: -6.612095832824707
    7. ' q' → logprob: -6.987095832824707
    8. '_of' → logprob: -7.362095832824707
    9. '_indices' → logprob: -7.362095832824707
    10. 's' → logprob: -7.487095832824707

Token 528: ' primes' (ID: 104042)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.0013724920572713017
    2. ' primes' → logprob: -6.876372337341309
    3. '[' → logprob: -8.126372337341309
    4. ' pr' → logprob: -11.251372337341309
    5. '(pr' → logprob: -11.501372337341309
    6. 'import' → logprob: -12.376372337341309
    7. '```' → logprob: -12.751372337341309
    8. 'range' → logprob: -13.251372337341309
    9. '	pr' → logprob: -13.626372337341309
    10. 'prime' → logprob: -13.751372337341309

Token 529: ' pour' (ID: 1930)
  Prédit: '_q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_q' → logprob: -1.3467329740524292
    2. '_' → logprob: -1.4717329740524292
    3. ' =' → logprob: -2.4717330932617188
    4. '_lower' → logprob: -2.4717330932617188
    5. '_left' → logprob: -2.8467330932617188
    6. '_b' → logprob: -3.0967330932617188
    7. '_low' → logprob: -3.0967330932617188
    8. ':' → logprob: -3.3467330932617188
    9. '_max' → logprob: -3.7217330932617188
    10. 'q' → logprob: -4.096733093261719

Token 530: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.08315066248178482
    2. 'pr' → logprob: -2.833150625228882
    3. ' q' → logprob: -4.958150863647461
    4. 'max' → logprob: -5.083150863647461
    5. 'p' → logprob: -6.333150863647461
    6. 'b' → logprob: -6.458150863647461
    7. '0' → logprob: -6.833150863647461
    8. 'bis' → logprob: -6.958150863647461
    9. 'start' → logprob: -8.208150863647461
    10. 'low' → logprob: -8.208150863647461

Token 531: ' <=' (ID: 5017)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6433002352714539
    2. ' =' → logprob: -1.0183002948760986
    3. 'q' → logprob: -2.8933002948760986
    4. 'import' → logprob: -4.3933000564575195
    5. 'max' → logprob: -4.6433000564575195
    6. '   ' → logprob: -4.7683000564575195
    7. '       ' → logprob: -4.7683000564575195
    8. 'left' → logprob: -5.0183000564575195
    9. 'start' → logprob: -5.3933000564575195
    10. ',' → logprob: -6.6433000564575195

Token 532: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.08747337013483047
    2. 'max' → logprob: -3.0874733924865723
    3. ' m' → logprob: -4.087473392486572
    4. 'pr' → logprob: -4.837473392486572
    5. 'MAX' → logprob: -4.837473392486572
    6. ' primes' → logprob: -6.712473392486572
    7. '[m' → logprob: -6.962473392486572
    8. 'len' → logprob: -7.212473392486572
    9. 'bis' → logprob: -7.212473392486572
    10. ' max' → logprob: -7.587473392486572

Token 533: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41287991404533386
    2. ':' → logprob: -2.0378799438476562
    3. '=' → logprob: -2.5378799438476562
    4. '       ' → logprob: -3.2878799438476562
    5. 'q' → logprob: -3.4128799438476562
    6. ',' → logprob: -3.4128799438476562
    7. '   ' → logprob: -4.912879943847656
    8. ':
' → logprob: -5.162879943847656
    9. '
' → logprob: -6.287879943847656
    10. 'right' → logprob: -6.662879943847656

Token 534: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.41057252883911133
    2. '   ' → logprob: -2.1605725288391113
    3. '       ' → logprob: -2.6605725288391113
    4. ' =' → logprob: -2.9105725288391113
    5. ':
' → logprob: -3.1605725288391113
    6. 'q' → logprob: -3.6605725288391113
    7. '
' → logprob: -4.410572528839111
    8. '=' → logprob: -5.285572528839111
    9. ',' → logprob: -5.910572528839111
    10. ']' → logprob: -6.910572528839111

Token 535: ' #' (ID: 1069)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.1944149732589722
    2. '       ' → logprob: -1.5694149732589722
    3. 'max' → logprob: -1.8194149732589722
    4. 'right' → logprob: -2.1944150924682617
    5. 'end' → logprob: -2.5694150924682617
    6. 'idx' → logprob: -3.1944150924682617
    7. 'start' → logprob: -3.3194150924682617
    8. '   ' → logprob: -3.8194150924682617
    9. 'index' → logprob: -4.944415092468262
    10. 'left' → logprob: -5.069415092468262

Token 536: ' On' (ID: 2160)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0695247650146484
    2. 'import' → logprob: -1.4445247650146484
    3. 'max' → logprob: -1.8195247650146484
    4. '       ' → logprob: -2.0695247650146484
    5. 'right' → logprob: -3.0695247650146484
    6. 'idx' → logprob: -3.0695247650146484
    7. 'end' → logprob: -4.694524765014648
    8. 'left' → logprob: -4.819524765014648
    9. 'start' → logprob: -4.944524765014648
    10. '   ' → logprob: -5.069524765014648

Token 537: ' parc' (ID: 22138)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.016569748520851135
    2. '=' → logprob: -5.1415696144104
    3. 'from' → logprob: -6.2665696144104
    4. 'n' → logprob: -6.5165696144104
    5. 'q' → logprob: -6.5165696144104
    6. 'nd' → logprob: -6.7665696144104
    7. 'bis' → logprob: -7.2665696144104
    8. ' =' → logprob: -7.6415696144104
    9. 'idx' → logprob: -8.016570091247559
    10. 's' → logprob: -8.016570091247559

Token 538: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.7442980408668518
    2. 'ur' → logprob: -1.119297981262207
    3. 'our' → logprob: -2.119297981262207
    4. 'ours' → logprob: -3.369297981262207
    5. 'urs' → logprob: -4.744297981262207
    6. 'ure' → logprob: -5.119297981262207
    7. 'urer' → logprob: -5.369297981262207
    8. 'ut' → logprob: -5.494297981262207
    9. 'urse' → logprob: -5.494297981262207
    10. 'ute' → logprob: -5.619297981262207

Token 539: ' q' (ID: 2335)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8085014820098877
    2. 'idx' → logprob: -1.8085014820098877
    3. 'import' → logprob: -2.0585014820098877
    4. 'q' → logprob: -2.5585014820098877
    5. 'for' → logprob: -3.1835014820098877
    6. 'right' → logprob: -3.4335014820098877
    7. ' idx' → logprob: -3.5585014820098877
    8. ' i' → logprob: -3.8085014820098877
    9. 'left' → logprob: -4.433501243591309
    10. ' for' → logprob: -4.683501243591309

Token 540: ' décro' (ID: 176854)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.7457026839256287
    2. '_idx' → logprob: -0.9957026839256287
    3. '_indices' → logprob: -3.6207027435302734
    4. 'for' → logprob: -3.7457027435302734
    5. '_start' → logprob: -4.245702743530273
    6. ' =' → logprob: -4.495702743530273
    7. '=' → logprob: -4.870702743530273
    8. 'in' → logprob: -4.870702743530273
    9. '_in' → logprob: -4.870702743530273
    10. ' in' → logprob: -4.995702743530273

Token 541: 'issant' (ID: 31359)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -1.187335729598999
    2. 'endant' → logprob: -2.062335729598999
    3. 'q' → logprob: -2.937335729598999
    4. 'd' → logprob: -3.062335729598999
    5. 'pr' → logprob: -3.187335729598999
    6. 'desc' → logprob: -3.687335729598999
    7. 'sort' → logprob: -3.687335729598999
    8. 'du' → logprob: -3.937335729598999
    9. '   ' → logprob: -4.062335968017578
    10. 'descending' → logprob: -4.062335968017578

Token 542: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7536841630935669
    2. '   ' → logprob: -1.628684163093567
    3. ':' → logprob: -2.3786840438842773
    4. ',' → logprob: -2.5036840438842773
    5. ' =' → logprob: -2.7536840438842773
    6. 'i' → logprob: -3.8786840438842773
    7. 'idx' → logprob: -4.003684043884277
    8. '=' → logprob: -4.503684043884277
    9. 'for' → logprob: -5.128684043884277
    10. ' for' → logprob: -5.128684043884277

Token 543: ' trouver' (ID: 23195)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.24517174065113068
    2. ' q' → logprob: -2.4951717853546143
    3. ' i' → logprob: -2.8701717853546143
    4. ' index' → logprob: -3.4951717853546143
    5. ' prime' → logprob: -4.495171546936035
    6. ' primes' → logprob: -4.620171546936035
    7. 'idx' → logprob: -4.870171546936035
    8. 'i' → logprob: -5.620171546936035
    9. ' _' → logprob: -5.995171546936035
    10. 'q' → logprob: -6.245171546936035

Token 544: ' max' (ID: 2999)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.963495671749115
    2. 'idx' → logprob: -1.8384957313537598
    3. 'q' → logprob: -2.0884957313537598
    4. ' for' → logprob: -2.4634957313537598
    5. 'for' → logprob: -2.5884957313537598
    6. ' idx' → logprob: -3.2134957313537598
    7. 'index' → logprob: -3.3384957313537598
    8. ' i' → logprob: -3.5884957313537598
    9. '   ' → logprob: -3.9634957313537598
    10. ' q' → logprob: -4.08849573135376

Token 545: ' area' (ID: 3624)
  Prédit: '_q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_q' → logprob: -0.7484805583953857
    2. '_idx' → logprob: -1.2484805583953857
    3. '_index' → logprob: -2.1234805583953857
    4. 'q' → logprob: -3.8734805583953857
    5. 'idx' → logprob: -4.248480796813965
    6. '_' → logprob: -4.248480796813965
    7. ' q' → logprob: -4.623480796813965
    8. ' idx' → logprob: -4.623480796813965
    9. ' =' → logprob: -4.873480796813965
    10. ':' → logprob: -4.873480796813965

Token 546: ' rapidement' (ID: 43157)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17463736236095428
    2. '   ' → logprob: -2.4246373176574707
    3. ':' → logprob: -4.424637317657471
    4. ',' → logprob: -4.424637317657471
    5. ' =' → logprob: -4.424637317657471
    6. 'q' → logprob: -4.924637317657471
    7. 'idx' → logprob: -5.174637317657471
    8. 'i' → logprob: -5.299637317657471
    9. 'index' → logprob: -5.549637317657471
    10. '=' → logprob: -5.799637317657471

Token 547: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20012015104293823
    2. '
' → logprob: -2.700120210647583
    3. 'import' → logprob: -3.325120210647583
    4. '   ' → logprob: -3.950120210647583
    5. ',' → logprob: -4.200119972229004
    6. 'index' → logprob: -4.325119972229004
    7. 'q' → logprob: -4.950119972229004
    8. 'idx' → logprob: -5.075119972229004
    9. 'i' → logprob: -5.700119972229004
    10. ':' → logprob: -6.450119972229004

Token 548: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030454114079475403
    2. '   ' → logprob: -4.280454158782959
    3. '
' → logprob: -4.780454158782959
    4. 'q' → logprob: -6.405454158782959
    5. 'index' → logprob: -6.655454158782959
    6. ',' → logprob: -6.905454158782959
    7. 'import' → logprob: -7.280454158782959
    8. 'i' → logprob: -7.780454158782959
    9. '        
' → logprob: -7.780454158782959
    10. '```' → logprob: -7.905454158782959

Token 549: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.591415286064148
    2. 'q' → logprob: -2.0914154052734375
    3. '   ' → logprob: -2.2164154052734375
    4. 'idx' → logprob: -2.5914154052734375
    5. 'index' → logprob: -3.4664154052734375
    6. 'i' → logprob: -3.5914154052734375
    7. '
' → logprob: -3.8414154052734375
    8. 'end' → logprob: -4.5914154052734375
    9. ' idx' → logprob: -4.8414154052734375
    10. 'import' → logprob: -5.0914154052734375

Token 550: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0914047956466675
    2. 'import' → logprob: -1.0914047956466675
    3. 'q' → logprob: -1.7164047956466675
    4. 'idx' → logprob: -2.841404914855957
    5. 'index' → logprob: -3.466404914855957
    6. '   ' → logprob: -3.591404914855957
    7. 'i' → logprob: -4.966404914855957
    8. 'from' → logprob: -5.466404914855957
    9. 'start' → logprob: -5.591404914855957
    10. ' import' → logprob: -5.841404914855957

Token 551: ' arr' (ID: 1724)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.12828083336353302
    2. ' import' → logprob: -3.2532808780670166
    3. ' primes' → logprob: -3.7532808780670166
    4. 'q' → logprob: -4.1282806396484375
    5. 'from' → logprob: -4.6282806396484375
    6. '=' → logprob: -5.0032806396484375
    7. ' q' → logprob: -5.2532806396484375
    8. ' =' → logprob: -6.0032806396484375
    9. ' from' → logprob: -6.0032806396484375
    10. '#' → logprob: -6.6282806396484375

Token 552: 'ê' (ID: 1172)
  Prédit: 'ive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ive' → logprob: -0.11187929660081863
    2. 'iv' → logprob: -2.736879348754883
    3. 'ête' → logprob: -3.986879348754883
    4. 'rive' → logprob: -5.236879348754883
    5. 'ivée' → logprob: -5.861879348754883
    6. 'iver' → logprob: -5.986879348754883
    7. 'ives' → logprob: -6.111879348754883
    8. 'e' → logprob: -6.111879348754883
    9. 'êt' → logprob: -6.361879348754883
    10. 'ivé' → logprob: -7.111879348754883

Token 553: 'tera' (ID: 24940)
  Prédit: 'ra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.826633632183075
    2. 't' → logprob: -2.3266336917877197
    3. 'î' → logprob: -2.5766336917877197
    4. 'ch' → logprob: -2.8266336917877197
    5. 'tera' → logprob: -3.0766336917877197
    6. 'it' → logprob: -3.2016336917877197
    7. 'r' → logprob: -3.2016336917877197
    8. 'che' → logprob: -3.3266336917877197
    9. 'iv' → logprob: -3.8266336917877197
    10. 'rons' → logprob: -3.9516336917877197

Token 554: ' la' (ID: 557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.806318461894989
    2. '=' → logprob: -2.181318521499634
    3. ' for' → logprob: -2.181318521499634
    4. '   ' → logprob: -2.681318521499634
    5. ':' → logprob: -2.806318521499634
    6. ')' → logprob: -3.306318521499634
    7. 'index' → logprob: -3.931318521499634
    8. 'q' → logprob: -4.056318283081055
    9. 'i' → logprob: -4.056318283081055
    10. ' =' → logprob: -4.431318283081055

Token 555: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5127434730529785
    2. 'import' → logprob: -1.2627434730529785
    3. ' for' → logprob: -2.6377434730529785
    4. 'q' → logprob: -4.0127434730529785
    5. 'i' → logprob: -4.8877434730529785
    6. 'pr' → logprob: -5.1377434730529785
    7. 'break' → logprob: -5.3877434730529785
    8. 'index' → logprob: -5.8877434730529785
    9. '   ' → logprob: -6.7627434730529785
    10. 'prime' → logprob: -6.8877434730529785

Token 556: ' quand' (ID: 18026)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5964260697364807
    2. ' when' → logprob: -1.721426010131836
    3. ' for' → logprob: -2.596426010131836
    4. ' at' → logprob: -3.721426010131836
    5. '       ' → logprob: -3.846426010131836
    6. ' q' → logprob: -3.971426010131836
    7. ',' → logprob: -4.096426010131836
    8. ' if' → logprob: -4.096426010131836
    9. '    ' → logprob: -4.096426010131836
    10. ' =' → logprob: -4.471426010131836

Token 557: ' q' (ID: 2335)
  Prédit: ' primes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.3541903495788574
    2. ' q' → logprob: -1.7291903495788574
    3. 'q' → logprob: -2.9791903495788574
    4. 'pr' → logprob: -3.7291903495788574
    5. 'max' → logprob: -4.104190349578857
    6. ' max' → logprob: -4.479190349578857
    7. 'prime' → logprob: -4.979190349578857
    8. ' prime' → logprob: -5.104190349578857
    9. ' p' → logprob: -6.354190349578857
    10. 'p' → logprob: -6.729190349578857

Token 558: '*q' (ID: 136288)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.010841825976967812
    2. ' <=' → logprob: -5.1358418464660645
    3. '<' → logprob: -5.5108418464660645
    4. '<=' → logprob: -8.385841369628906
    5. '[' → logprob: -8.760841369628906
    6. ' >' → logprob: -9.260841369628906
    7. '   ' → logprob: -9.635841369628906
    8. ' ' → logprob: -9.760841369628906
    9. ']' → logprob: -9.885841369628906
    10. ')' → logprob: -10.260841369628906

Token 559: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.39133742451667786
    2. '>' → logprob: -1.1413373947143555
    3. ' <=' → logprob: -5.7663373947143555
    4. '<=' → logprob: -6.8913373947143555
    5. '>=' → logprob: -9.391337394714355
    6. ' >=' → logprob: -9.391337394714355
    7. ')' → logprob: -10.266337394714355
    8. '   ' → logprob: -10.641337394714355
    9. '">' → logprob: -11.266337394714355
    10. ' <' → logprob: -11.266337394714355

Token 560: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0010418595047667623
    2. ' max' → logprob: -6.876041889190674
    3. 'm' → logprob: -12.751041412353516
    4. 'best' → logprob: -12.876041412353516
    5. '   ' → logprob: -13.501041412353516
    6. '=' → logprob: -14.501041412353516
    7. '=max' → logprob: -14.501041412353516
    8. '(max' → logprob: -15.126041412353516
    9. '1' → logprob: -15.876041412353516
    10. 'min' → logprob: -16.001041412353516

Token 561: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.19595378637313843
    2. '_q' → logprob: -2.695953845977783
    3. '_' → logprob: -2.945953845977783
    4. '_limit' → logprob: -3.320953845977783
    5. '_ratio' → logprob: -4.695953845977783
    6. 'area' → logprob: -5.570953845977783
    7. 'q' → logprob: -6.070953845977783
    8. ')' → logprob: -6.570953845977783
    9. ' _' → logprob: -6.570953845977783
    10. '_size' → logprob: -7.695953845977783

Token 562: ' car' (ID: 1669)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2676112651824951
    2. ':' → logprob: -1.8926112651824951
    3. '
' → logprob: -3.017611265182495
    4. '       ' → logprob: -4.642611503601074
    5. ' for' → logprob: -5.392611503601074
    6. '    
' → logprob: -5.517611503601074
    7. ':
' → logprob: -5.892611503601074
    8. '  
' → logprob: -6.142611503601074
    9. 'for' → logprob: -6.517611503601074
    10. '.' → logprob: -6.642611503601074

Token 563: ' q' (ID: 2335)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6374565362930298
    2. '       ' → logprob: -1.2624565362930298
    3. ' q' → logprob: -2.5124564170837402
    4. '               ' → logprob: -3.1374564170837402
    5. 'q' → logprob: -3.3874564170837402
    6. '   ' → logprob: -3.8874564170837402
    7. ' not' → logprob: -6.51245641708374
    8. '                   ' → logprob: -6.63745641708374
    9. ' for' → logprob: -6.76245641708374
    10. 'break' → logprob: -6.88745641708374

Token 564: '*q' (ID: 136288)
  Prédit: '*q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*q' → logprob: -0.25513264536857605
    2. '*' → logprob: -1.8801326751708984
    3. ' *' → logprob: -2.6301326751708984
    4. '   ' → logprob: -8.755132675170898
    5. ' ' → logprob: -9.005132675170898
    6. ' <' → logprob: -9.630132675170898
    7. ' q' → logprob: -9.755132675170898
    8. 'q' → logprob: -10.005132675170898
    9. '**' → logprob: -10.630132675170898
    10. '[q' → logprob: -11.505132675170898

Token 565: ' est' (ID: 893)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11147969961166382
    2. ' <=' → logprob: -2.8614797592163086
    3. ' >' → logprob: -3.3614797592163086
    4. '<' → logprob: -4.861479759216309
    5. '>' → logprob: -5.486479759216309
    6. '<=' → logprob: -6.986479759216309
    7. '   ' → logprob: -7.611479759216309
    8. ' >=' → logprob: -8.486479759216309
    9. ')' → logprob: -10.111479759216309
    10. ':' → logprob: -11.236479759216309

Token 566: ' max' (ID: 2999)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.0492990016937256
    2. 'le' → logprob: -1.5492990016937256
    3. '<=' → logprob: -2.1742990016937256
    4. 'moins' → logprob: -2.2992990016937256
    5. ' inférieur' → logprob: -2.6742990016937256
    6. 'plus' → logprob: -3.4242990016937256
    7. '<' → logprob: -3.4242990016937256
    8. 'infer' → logprob: -3.9242990016937256
    9. 'la' → logprob: -4.049299240112305
    10. 'dé' → logprob: -4.174299240112305

Token 567: ' possible' (ID: 4149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2287711501121521
    2. '       ' → logprob: -2.603771209716797
    3. ':' → logprob: -2.978771209716797
    4. '    ' → logprob: -3.353771209716797
    5. ')' → logprob: -4.103771209716797
    6. '           ' → logprob: -5.478771209716797
    7. ' ' → logprob: -5.728771209716797
    8. '):' → logprob: -5.853771209716797
    9. ' and' → logprob: -5.978771209716797
    10. '  ' → logprob: -6.103771209716797

Token 568: ' avec' (ID: 3937)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.453506201505661
    2. '   ' → logprob: -1.2035062313079834
    3. '       ' → logprob: -3.8285062313079834
    4. ')' → logprob: -4.328505992889404
    5. '.' → logprob: -5.078505992889404
    6. ',' → logprob: -5.578505992889404
    7. '):' → logprob: -5.578505992889404
    8. ':
' → logprob: -6.078505992889404
    9. '[q' → logprob: -6.328505992889404
    10. 'q' → logprob: -6.453505992889404

Token 569: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.33090338110923767
    2. 'q' → logprob: -1.33090341091156
    3. ' p' → logprob: -4.58090353012085
    4. ' q' → logprob: -4.95590353012085
    5. ' ' → logprob: -9.705903053283691
    6. 'max' → logprob: -9.830903053283691
    7. 'best' → logprob: -11.705903053283691
    8. 'the' → logprob: -11.830903053283691
    9. '2' → logprob: -11.955903053283691
    10. 'pr' → logprob: -11.955903053283691

Token 570: '=q' (ID: 151306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0217335224151611
    2. '   ' → logprob: -1.2717335224151611
    3. ':' → logprob: -2.896733522415161
    4. ' >=' → logprob: -3.271733522415161
    5. '.' → logprob: -3.396733522415161
    6. '[' → logprob: -3.646733522415161
    7. ']' → logprob: -3.646733522415161
    8. '=' → logprob: -3.771733522415161
    9. ' =' → logprob: -4.021733283996582
    10. '           ' → logprob: -4.021733283996582

Token 571: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38135993480682373
    2. '       ' → logprob: -1.6313599348068237
    3. '
' → logprob: -2.7563600540161133
    4. '.' → logprob: -4.256360054016113
    5. ':' → logprob: -4.631360054016113
    6. ',' → logprob: -4.631360054016113
    7. '    
' → logprob: -5.131360054016113
    8. ' for' → logprob: -6.006360054016113
    9. 'for' → logprob: -6.256360054016113
    10. 'import' → logprob: -6.256360054016113

Token 572: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6748493313789368
    2. '   ' → logprob: -0.9248493313789368
    3. '
' → logprob: -2.799849271774292
    4. '\n' → logprob: -4.299849510192871
    5. '    
' → logprob: -4.549849510192871
    6. '        
' → logprob: -5.799849510192871
    7. '  
' → logprob: -5.924849510192871
    8. ':' → logprob: -7.299849510192871
    9. '\' → logprob: -7.924849510192871
    10. '<|end|>' → logprob: -8.424849510192871

Token 573: ' idx' (ID: 14016)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6671323776245117
    2. '   ' → logprob: -1.1671323776245117
    3. 'import' → logprob: -2.6671323776245117
    4. ' for' → logprob: -3.6671323776245117
    5. 'index' → logprob: -3.9171323776245117
    6. 'q' → logprob: -4.292132377624512
    7. 'for' → logprob: -4.417132377624512
    8. 'idx' (adapté à ' idx') → logprob: -4.542132377624512
    9. 'i' → logprob: -5.292132377624512
    10. ' i' → logprob: -6.042132377624512

Token 574: '_q' (ID: 19384)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17855890095233917
    2. '_q' → logprob: -2.053558826446533
    3. '_' → logprob: -3.928558826446533
    4. '=' → logprob: -4.303558826446533
    5. '_max' → logprob: -6.428558826446533
    6. 'q' → logprob: -8.303559303283691
    7. '_end' → logprob: -10.178559303283691
    8. 'max' → logprob: -10.678559303283691
    9. '_p' → logprob: -10.928559303283691
    10. 's' → logprob: -11.053559303283691

Token 575: '_max' (ID: 13731)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141831040382385
    2. ' =' → logprob: -1.7014182806015015
    3. 's' → logprob: -12.701417922973633
    4. ',' → logprob: -13.951417922973633
    5. '=len' → logprob: -14.451417922973633
    6. ' ' → logprob: -15.951417922973633
    7. ')' → logprob: -16.076417922973633
    8. '=}' → logprob: -16.201417922973633
    9. '=int' → logprob: -16.576417922973633
    10. ' in' → logprob: -16.826417922973633

Token 576: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407880425453186
    2. '=' → logprob: -0.9740787744522095
    3. '=len' → logprob: -14.099079132080078
    4. ',' → logprob: -14.974079132080078
    5. 's' → logprob: -15.724079132080078
    6. '=int' → logprob: -15.974079132080078
    7. ' ' → logprob: -16.099079132080078
    8. ')' → logprob: -16.349079132080078
    9. '   ' → logprob: -16.724079132080078
    10. '=max' → logprob: -17.099079132080078

Token 577: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.20423723757266998
    2. '0' → logprob: -2.079237222671509
    3. 'next' → logprob: -2.954237222671509
    4. 'bis' → logprob: -5.079237461090088
    5. 'max' → logprob: -7.204237461090088
    6. ' len' → logprob: -9.32923698425293
    7. ' next' → logprob: -9.32923698425293
    8. 'pr' → logprob: -9.45423698425293
    9. '[len' → logprob: -9.45423698425293
    10. 'binary' → logprob: -9.70423698425293

Token 578: '0' (ID: 15)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.20952434837818146
    2. 'next' → logprob: -1.959524393081665
    3. 'bis' → logprob: -3.709524393081665
    4. '0' → logprob: -3.959524393081665
    5. 'max' → logprob: -5.459524154663086
    6. 'binary' → logprob: -9.959524154663086
    7. '[len' → logprob: -9.959524154663086
    8. ' next' → logprob: -10.459524154663086
    9. '(len' → logprob: -10.459524154663086
    10. '-' → logprob: -10.584524154663086

Token 579: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06824251264333725
    2. 'while' → logprob: -3.1932425498962402
    3. '=' → logprob: -5.06824254989624
    4. 'for' → logprob: -5.19324254989624
    5. ' =' → logprob: -5.44324254989624
    6. '0' → logprob: -5.69324254989624
    7. 'next' → logprob: -6.56824254989624
    8. 'len' → logprob: -6.56824254989624
    9. ' while' → logprob: -7.44324254989624
    10. '=len' → logprob: -7.81824254989624

Token 580: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5367100238800049
    2. '
' → logprob: -0.9117100238800049
    3. ' while' → logprob: -5.036709785461426
    4. 'for' → logprob: -5.411709785461426
    5. '<|end|>' → logprob: -6.661709785461426
    6. '   ' → logprob: -7.661709785461426
    7. '       ' → logprob: -7.786709785461426
    8. ' for' → logprob: -9.286709785461426
    9. '	while' → logprob: -9.286709785461426
    10. '<|end|>' → logprob: -10.286709785461426

Token 581: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.20157121121883392
    2. 'for' → logprob: -1.7015712261199951
    3. 'import' → logprob: -9.326571464538574
    4. ' while' → logprob: -9.951571464538574
    5. ' for' → logprob: -11.576571464538574
    6. 'from' → logprob: -11.701571464538574
    7. '#' (adapté à ' #') → logprob: -13.576571464538574
    8. 'left' → logprob: -14.076571464538574
    9. '       ' → logprob: -14.326571464538574
    10. '	while' → logprob: -15.076571464538574

Token 582: ' Trou' (ID: 58947)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5885341167449951
    2. 'while' → logprob: -0.8385341167449951
    3. 'left' → logprob: -4.713534355163574
    4. 'import' → logprob: -6.213534355163574
    5. '#' → logprob: -7.088534355163574
    6. 'from' → logprob: -7.713534355163574
    7. 'lo' → logprob: -9.338534355163574
    8. 'low' → logprob: -9.338534355163574
    9. 'l' → logprob: -9.588534355163574
    10. 'idx' → logprob: -12.088534355163574

Token 583: 've' (ID: 737)
  Prédit: 'ver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ver' → logprob: -0.44398316740989685
    2. 'v' → logprob: -1.0689831972122192
    3. 'vez' → logprob: -5.06898307800293
    4. 'vant' → logprob: -5.56898307800293
    5. '   ' → logprob: -7.06898307800293
    6. 've' → logprob: -7.19398307800293
    7. '       ' → logprob: -7.31898307800293
    8. 'ves' → logprob: -7.31898307800293
    9. 'for' → logprob: -7.94398307800293
    10. 'r' → logprob: -7.94398307800293

Token 584: ' l' (ID: 305)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2477690577507019
    2. 'for' → logprob: -2.3727691173553467
    3. 'idx' → logprob: -2.8727691173553467
    4. ' for' → logprob: -3.2477691173553467
    5. ' idx' → logprob: -4.247768878936768
    6. 'left' → logprob: -6.122768878936768
    7. '   ' → logprob: -6.372768878936768
    8. 'import' → logprob: -6.497768878936768
    9. 'i' → logprob: -6.872768878936768
    10. ' r' → logprob: -6.997768878936768

Token 585: ''ind' (ID: 82245)
  Prédit: 'eft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eft' → logprob: -0.7552943229675293
    2. 'for' → logprob: -1.6302943229675293
    3. 'idx' → logprob: -2.1302943229675293
    4. ' for' → logprob: -3.3802943229675293
    5. 'e' → logprob: -3.6302943229675293
    6. '=' → logprob: -4.130294322967529
    7. 'es' → logprob: -4.380294322967529
    8. '_idx' → logprob: -4.505294322967529
    9. 'argest' → logprob: -4.630294322967529
    10. ' =' → logprob: -4.880294322967529

Token 586: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.34868916869163513
    2. 'ice' → logprob: -1.2236891984939575
    3. 'e' → logprob: -9.973689079284668
    4. 'ices' → logprob: -9.973689079284668
    5. 'exe' → logprob: -10.848689079284668
    6. 'dex' → logprob: -10.973689079284668
    7. 'max' → logprob: -11.348689079284668
    8. 'ic' → logprob: -11.598689079284668
    9. 'ix' → logprob: -11.723689079284668
    10. 'x' → logprob: -11.723689079284668

Token 587: ' maximum' (ID: 10562)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.331020712852478
    2. 'while' → logprob: -1.331020712852478
    3. ' =' → logprob: -2.3310208320617676
    4. 'import' → logprob: -2.3310208320617676
    5. '=' → logprob: -2.5810208320617676
    6. 'idx' → logprob: -3.2060208320617676
    7. ' for' → logprob: -3.2060208320617676
    8. '_q' → logprob: -3.7060208320617676
    9. 'of' → logprob: -3.9560208320617676
    10. 'bis' → logprob: -4.456020832061768

Token 588: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3616035282611847
    2. '=' → logprob: -1.7366034984588623
    3. 'for' → logprob: -3.6116034984588623
    4. 'while' → logprob: -3.8616034984588623
    5. ',' → logprob: -4.861603736877441
    6. '       ' → logprob: -4.986603736877441
    7. 'dans' → logprob: -4.986603736877441
    8. ' for' → logprob: -5.111603736877441
    9. ' in' → logprob: -5.486603736877441
    10. '_q' → logprob: -5.611603736877441

Token 589: ' q' (ID: 2335)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -1.1396218538284302
    2. '[q' → logprob: -1.6396218538284302
    3. '[i' → logprob: -1.8896218538284302
    4. 'q' → logprob: -1.8896218538284302
    5. '[' → logprob: -2.3896217346191406
    6. 'i' → logprob: -3.7646217346191406
    7. ' q' → logprob: -4.139621734619141
    8. ' primes' → logprob: -4.389621734619141
    9. ' [' → logprob: -4.639621734619141
    10. '[idx' → logprob: -5.514621734619141

Token 590: ' <=' (ID: 5017)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31341245770454407
    2. '=' → logprob: -1.3134124279022217
    3. 'for' → logprob: -9.8134126663208
    4. '=len' → logprob: -10.6884126663208
    5. 'while' → logprob: -10.9384126663208
    6. ',' → logprob: -11.0634126663208
    7. ' for' → logprob: -11.8134126663208
    8. 'in' → logprob: -12.3134126663208
    9. ' in' → logprob: -12.3134126663208
    10. 'import' → logprob: -12.8134126663208

Token 591: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.006842775736004114
    2. ' m' → logprob: -5.006842613220215
    3. 'MAX' → logprob: -9.631842613220215
    4. 'max' → logprob: -9.756842613220215
    5. 'M' → logprob: -13.756842613220215
    6. ' max' → logprob: -14.381842613220215
    7. ' MAX' → logprob: -14.506842613220215
    8. '100' → logprob: -14.631842613220215
    9. '   ' → logprob: -15.131842613220215
    10. '	m' → logprob: -15.256842613220215

Token 592: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.1656742095947266
    2. '
' → logprob: -1.2906742095947266
    3. ' =' → logprob: -1.5406742095947266
    4. 'for' → logprob: -2.6656742095947266
    5. '<|end|>' → logprob: -3.2906742095947266
    6. '=' → logprob: -3.2906742095947266
    7. ' for' → logprob: -3.6656742095947266
    8. '       ' → logprob: -4.790674209594727
    9. ' while' → logprob: -5.290674209594727
    10. 'import' → logprob: -6.040674209594727

Token 593: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6917377710342407
    2. 'for' → logprob: -1.0667377710342407
    3. ' for' → logprob: -3.441737651824951
    4. '<|end|>' → logprob: -3.566737651824951
    5. 'idx' → logprob: -3.566737651824951
    6. 'import' → logprob: -4.191737651824951
    7. '   ' → logprob: -4.441737651824951
    8. ' while' → logprob: -4.691737651824951
    9. '       ' → logprob: -4.816737651824951
    10. '
' → logprob: -4.941737651824951

Token 594: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.031165851280093193
    2. 'idx' → logprob: -4.156166076660156
    3. ' for' → logprob: -5.281166076660156
    4. 'import' → logprob: -5.531166076660156
    5. 'left' → logprob: -6.031166076660156
    6. 'while' → logprob: -6.156166076660156
    7. 'low' → logprob: -7.156166076660156
    8. 'from' → logprob: -7.781166076660156
    9. 'lo' → logprob: -8.906166076660156
    10. ' idx' → logprob: -9.781166076660156

Token 595: ' primes' (ID: 104042)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.7697153687477112
    2. 'for' → logprob: -0.8947153687477112
    3. 'import' → logprob: -3.3947153091430664
    4. 'low' → logprob: -3.5197153091430664
    5. 'idx' → logprob: -3.5197153091430664
    6. 'from' → logprob: -4.019715309143066
    7. 'while' → logprob: -4.519715309143066
    8. 'lo' → logprob: -5.394715309143066
    9. 'l' → logprob: -6.769715309143066
    10. ' for' → logprob: -8.519715309143066

Token 596: ' est' (ID: 893)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.8562456965446472
    2. 'for' → logprob: -1.731245756149292
    3. 'idx' → logprob: -1.981245756149292
    4. '=' → logprob: -2.856245756149292
    5. 'bis' → logprob: -2.981245756149292
    6. 'import' → logprob: -2.981245756149292
    7. ' =' → logprob: -4.106245517730713
    8. '_index' → logprob: -4.481245517730713
    9. '_len' → logprob: -4.481245517730713
    10. '[idx' → logprob: -4.981245517730713

Token 597: ' tri' (ID: 12665)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.21589308977127075
    2. '0' → logprob: -1.965893030166626
    3. 'pr' → logprob: -3.715893030166626
    4. '[len' → logprob: -4.340893268585205
    5. '[' → logprob: -5.090893268585205
    6. ' len' → logprob: -5.215893268585205
    7. 'bis' → logprob: -5.465893268585205
    8. ' ' → logprob: -8.340892791748047
    9. '[]' → logprob: -8.340892791748047
    10. '[-' → logprob: -8.965892791748047

Token 598: 'é' (ID: 377)
  Prédit: 'med'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'med' → logprob: -0.4291519820690155
    2. 'ed' → logprob: -1.929152011871338
    3. '[-' → logprob: -2.054152011871338
    4. 'xed' → logprob: -3.304152011871338
    5. 'm' → logprob: -4.554152011871338
    6. '[' → logprob: -5.179152011871338
    7. 'ted' → logprob: -5.429152011871338
    8. 'ned' → logprob: -5.679152011871338
    9. '   ' → logprob: -6.179152011871338
    10. 'ct' → logprob: -6.804152011871338

Token 599: ' cro' (ID: 11270)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7815778851509094
    2. ' =' → logprob: -0.9065778851509094
    3. '
' → logprob: -2.1565778255462646
    4. 'while' → logprob: -4.281578063964844
    5. 'for' → logprob: -6.281578063964844
    6. '=len' → logprob: -6.406578063964844
    7. 'bis' → logprob: -6.906578063964844
    8. 'import' → logprob: -7.531578063964844
    9. '=-' → logprob: -7.906578063964844
    10. 'idx' → logprob: -8.156578063964844

Token 600: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.008056443184614182
    2. 'isé' → logprob: -6.008056640625
    3. 'isant' → logprob: -7.008056640625
    4. 'issante' → logprob: -7.008056640625
    5. 'c' → logprob: -7.508056640625
    6. 'nt' → logprob: -7.508056640625
    7. 'ss' → logprob: -7.883056640625
    8. 'is' → logprob: -8.008056640625
    9. 'iss' → logprob: -8.383056640625
    10. 't' → logprob: -8.633056640625

Token 601: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00711493706330657
    2. 'while' → logprob: -5.382114887237549
    3. ' =' → logprob: -6.882114887237549
    4. '=' → logprob: -7.257114887237549
    5. ' while' → logprob: -8.632115364074707
    6. '<|end|>' → logprob: -9.132115364074707
    7. '-' → logprob: -9.757115364074707
    8. '
' → logprob: -9.757115364074707
    9. 'for' → logprob: -10.007115364074707
    10. '0' → logprob: -10.007115364074707

Token 602: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6406632661819458
    2. '
' → logprob: -1.1406632661819458
    3. 'for' → logprob: -3.0156631469726562
    4. ' =' → logprob: -3.6406631469726562
    5. ' while' → logprob: -3.7656631469726562
    6. '       ' → logprob: -4.265663146972656
    7. '=' → logprob: -4.640663146972656
    8. '0' → logprob: -4.765663146972656
    9. ' for' → logprob: -5.015663146972656
    10. 'len' → logprob: -5.265663146972656

Token 603: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3243097960948944
    2. ' for' → logprob: -2.449309825897217
    3. 'import' → logprob: -2.574309825897217
    4. 'from' → logprob: -3.324309825897217
    5. 'idx' → logprob: -3.699309825897217
    6. 'while' → logprob: -3.824309825897217
    7. 'left' → logprob: -3.949309825897217
    8. 'low' → logprob: -5.699309825897217
    9. '
' → logprob: -5.824309825897217
    10. ' idx' → logprob: -6.699309825897217

Token 604: ' on' (ID: 402)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.09033740311861038
    2. 'low' → logprob: -2.5903375148773193
    3. 'lo' → logprob: -4.96533727645874
    4. 'import' → logprob: -5.71533727645874
    5. 'from' → logprob: -8.090337753295898
    6. 'for' → logprob: -8.090337753295898
    7. ' left' → logprob: -8.465337753295898
    8. 'l' → logprob: -8.840337753295898
    9. 'while' → logprob: -9.965337753295898
    10. 'def' → logprob: -10.715337753295898

Token 605: ' utilise' (ID: 70283)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2356749176979065
    2. '=' → logprob: -2.4856748580932617
    3. ' =' → logprob: -2.4856748580932617
    4. 'bis' → logprob: -4.485674858093262
    5. 'nd' → logprob: -4.735674858093262
    6. 'n' → logprob: -5.485674858093262
    7. 'from' → logprob: -5.610674858093262
    8. 'def' → logprob: -5.860674858093262
    9. 'left' → logprob: -5.985674858093262
    10. ',' → logprob: -6.860674858093262

Token 606: ' une' (ID: 2463)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.44657739996910095
    2. 'bis' → logprob: -1.1965774297714233
    3. 'binary' → logprob: -3.821577310562134
    4. ' bis' → logprob: -4.196577548980713
    5. 'b' → logprob: -4.696577548980713
    6. ' binary' → logprob: -5.696577548980713
    7. '0' → logprob: -5.821577548980713
    8. 'math' → logprob: -6.196577548980713
    9. 'def' → logprob: -7.321577548980713
    10. 'from' → logprob: -7.821577548980713

Token 607: ' recherche' (ID: 24975)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.40899649262428284
    2. 'import' → logprob: -1.2839964628219604
    3. 'def' → logprob: -3.03399658203125
    4. 'left' → logprob: -5.78399658203125
    5. 'from' → logprob: -5.90899658203125
    6. 'while' → logprob: -6.15899658203125
    7. ' bis' → logprob: -6.90899658203125
    8. 'binary' → logprob: -7.53399658203125
    9. '#' → logprob: -7.65899658203125
    10. 'for' → logprob: -8.53399658203125

Token 608: ' b' (ID: 287)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.49694013595581055
    2. 'bis' → logprob: -0.9969401359558105
    3. 'b' → logprob: -4.3719401359558105
    4. 'binary' → logprob: -5.6219401359558105
    5. '_binary' → logprob: -5.8719401359558105
    6. ' bis' → logprob: -6.2469401359558105
    7. '_b' → logprob: -7.8719401359558105
    8. 'def' → logprob: -7.8719401359558105
    9. '   ' → logprob: -9.121940612792969
    10. ' binary' → logprob: -9.121940612792969

Token 609: 'inaire' (ID: 41465)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.09870632737874985
    2. 'in' → logprob: -3.2237062454223633
    3. 'inary' → logprob: -3.3487062454223633
    4. 'inaire' → logprob: -4.598706245422363
    5. 'search' → logprob: -5.973706245422363
    6. 'r' → logprob: -6.223706245422363
    7. 'import' → logprob: -6.473706245422363
    8. '   ' → logprob: -7.348706245422363
    9. 'y' → logprob: -7.598706245422363
    10. 'efore' → logprob: -8.223706245422363

Token 610: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.35020706057548523
    2. '=' → logprob: -1.9752070903778076
    3. ' =' → logprob: -2.3502070903778076
    4. ',' → logprob: -3.6002070903778076
    5. ':' → logprob: -4.2252068519592285
    6. 'def' → logprob: -5.2252068519592285
    7. '   ' → logprob: -5.9752068519592285
    8. 'left' → logprob: -6.7252068519592285
    9. '_left' → logprob: -6.7252068519592285
    10. ':
' → logprob: -6.8502068519592285

Token 611: '       ' (ID: 309)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2483457773923874
    2. '
' → logprob: -1.9983457326889038
    3. 'left' → logprob: -3.6233458518981934
    4. '   ' → logprob: -3.9983458518981934
    5. 'def' → logprob: -4.998345851898193
    6. 'lo' → logprob: -5.248345851898193
    7. 'low' → logprob: -5.248345851898193
    8. 'from' → logprob: -5.373345851898193
    9. ' left' → logprob: -5.498345851898193
    10. ' lo' → logprob: -5.873345851898193

Token 612: ' left' (ID: 3561)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4283967912197113
    2. 'left' (adapté à ' left') → logprob: -1.6783968210220337
    3. 'lo' → logprob: -3.178396701812744
    4. ' left' → logprob: -3.303396701812744
    5. ' lo' → logprob: -3.678396701812744
    6. 'low' → logprob: -3.803396701812744
    7. 'from' → logprob: -4.053396701812744
    8. '
' → logprob: -5.303396701812744
    9. 'def' → logprob: -5.678396701812744
    10. ' from' → logprob: -5.803396701812744

Token 613: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39545291662216187
    2. '=' → logprob: -1.1454529762268066
    3. ' =' → logprob: -4.770452976226807
    4. ',right' → logprob: -10.520452499389648
    5. ' ,' → logprob: -10.520452499389648
    6. ',
' → logprob: -12.270452499389648
    7. '0' → logprob: -12.770452499389648
    8. '<|end|>' → logprob: -13.895452499389648
    9. ' ' → logprob: -14.270452499389648
    10. ',b' → logprob: -14.395452499389648

Token 614: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.011048170737922192
    2. ' right' → logprob: -4.511048316955566
    3. ',right' → logprob: -15.761048316955566
    4. '	right' → logprob: -15.886048316955566
    5. '[right' → logprob: -17.63604736328125
    6. '0' → logprob: -17.76104736328125
    7. 'len' → logprob: -18.88604736328125
    8. '_right' → logprob: -19.01104736328125
    9. '=' → logprob: -19.01104736328125
    10. ' ' → logprob: -19.51104736328125

Token 615: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12695015966892242
    2. '=' → logprob: -2.126950263977051
    3. ',' → logprob: -10.75195026397705
    4. ' ' → logprob: -14.50195026397705
    5. '   ' → logprob: -16.126949310302734
    6. '0' → logprob: -17.501949310302734
    7. '    ' → logprob: -17.626949310302734
    8. '=int' → logprob: -17.876949310302734
    9. ' ,' → logprob: -18.251949310302734
    10. ')' → logprob: -18.376949310302734

Token 616: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. '   ' → logprob: -18.501502990722656
    4. 'len' → logprob: -18.751502990722656
    5. '  ' → logprob: -18.876502990722656
    6. '۰' → logprob: -19.376502990722656
    7. '00' → logprob: -20.001502990722656
    8. '=' → logprob: -20.126502990722656
    9. '000' → logprob: -20.126502990722656
    10. '
' → logprob: -20.814002990722656

Token 617: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '۰' → logprob: -20.500003814697266
    4. '   ' → logprob: -20.750003814697266
    5. '00' → logprob: -21.625003814697266
    6. '  ' → logprob: -21.625003814697266
    7. '[' → logprob: -21.625003814697266
    8. '=' → logprob: -22.125003814697266
    9. '000' → logprob: -22.500003814697266
    10. '
' → logprob: -22.687503814697266

Token 618: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016801636666059494
    2. ' =' → logprob: -4.891801834106445
    3. '=' → logprob: -5.266801834106445
    4. ',
' → logprob: -6.891801834106445
    5. '<|end|>' → logprob: -6.891801834106445
    6. ' ,' → logprob: -7.141801834106445
    7. '       ' → logprob: -8.266801834106445
    8. '
' → logprob: -8.516801834106445
    9. ',len' → logprob: -8.766801834106445
    10. ' ' → logprob: -8.766801834106445

Token 619: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.935296834039036e-06
    2. ' len' → logprob: -12.75000286102295
    3. '(len' → logprob: -18.375003814697266
    4. '   ' → logprob: -20.375003814697266
    5. '[len' → logprob: -21.250003814697266
    6. '       ' → logprob: -22.375003814697266
    7. '	len' → logprob: -22.375003814697266
    8. '=len' → logprob: -23.500003814697266
    9. '           ' → logprob: -24.375003814697266
    10. ',len' → logprob: -24.875003814697266

Token 620: '(pr' (ID: 38401)
  Prédit: '(pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -6.670925358776003e-05
    2. 'pr' → logprob: -9.625066757202148
    3. '(' → logprob: -14.500066757202148
    4. '	pr' → logprob: -16.62506675720215
    5. '/pr' → logprob: -18.25006675720215
    6. ' (' → logprob: -18.50006675720215
    7. ')' → logprob: -19.75006675720215
    8. ' primes' → logprob: -19.75006675720215
    9. '(p' → logprob: -20.00006675720215
    10. '   ' → logprob: -20.12506675720215

Token 621: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.16069026291370392
    2. 'mes' → logprob: -1.9106903076171875
    3. 'omes' → logprob: -9.035690307617188
    4. 'im' → logprob: -10.473190307617188
    5. 'ames' → logprob: -10.473190307617188
    6. 'r' → logprob: -10.723190307617188
    7. 'es' → logprob: -10.848190307617188
    8. '
' → logprob: -10.973190307617188
    9. 'pr' → logprob: -11.160690307617188
    10. '   ' → logprob: -11.285690307617188

Token 622: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010141931474208832
    2. ')-' → logprob: -5.010141849517822
    3. '-' → logprob: -5.885141849517822
    4. ' -' → logprob: -7.385141849517822
    5. ' )' → logprob: -11.51014232635498
    6. '[' → logprob: -12.38514232635498
    7. '   ' → logprob: -13.76014232635498
    8. '-)' → logprob: -13.88514232635498
    9. '1' → logprob: -14.51014232635498
    10. ']' → logprob: -14.63514232635498

Token 623: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '１' → logprob: -20.875001907348633
    4. '   ' → logprob: -21.250001907348633
    5. '```' → logprob: -21.375001907348633
    6. '
' → logprob: -22.000001907348633
    7. '-' → logprob: -22.000001907348633
    8. '۱' → logprob: -22.750001907348633
    9. '  ' → logprob: -23.250001907348633
    10. ')' → logprob: -23.312501907348633

Token 624: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 625: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 626: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.021144568920135498
    2. ' while' → logprob: -3.8961446285247803
    3. '
' → logprob: -8.02114486694336
    4. '   ' → logprob: -9.27114486694336
    5. '       ' → logprob: -9.77114486694336
    6. '	while' → logprob: -9.77114486694336
    7. 'mid' → logprob: -10.64614486694336
    8. 'While' → logprob: -11.27114486694336
    9. '```' → logprob: -11.64614486694336
    10. '        
' → logprob: -12.39614486694336

Token 627: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.014164329506456852
    2. ' left' → logprob: -4.264164447784424
    3. 'right' → logprob: -14.389163970947266
    4. '	left' → logprob: -16.139163970947266
    5. ' lef' → logprob: -16.889163970947266
    6. '(left' → logprob: -17.514163970947266
    7. '[left' → logprob: -18.389163970947266
    8. 'lef' → logprob: -18.639163970947266
    9. ' right' → logprob: -19.014163970947266
    10. ' ' → logprob: -19.264163970947266

Token 628: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6931794285774231
    2. '<=' → logprob: -0.6931794285774231
    3. ')<=' → logprob: -11.0681791305542
    4. ']<=' → logprob: -12.1931791305542
    5. '<|end|>' → logprob: -12.3181791305542
    6. '<' → logprob: -12.5681791305542
    7. ' ≤' → logprob: -13.9431791305542
    8. '≤' → logprob: -14.0681791305542
    9. ' <' → logprob: -14.3181791305542
    10. '=' → logprob: -14.4431791305542

Token 629: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0005530327325686812
    2. ' right' → logprob: -7.500553131103516
    3. '	right' → logprob: -18.500553131103516
    4. ' ' → logprob: -19.250553131103516
    5. '   ' → logprob: -20.375553131103516
    6. '[right' → logprob: -21.000553131103516
    7. '(right' → logprob: -22.125553131103516
    8. '  ' → logprob: -22.125553131103516
    9. 'left' → logprob: -22.750553131103516
    10. 'Right' → logprob: -23.000553131103516

Token 630: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07904290407896042
    2. ':
' → logprob: -2.579042911529541
    3. ' :' → logprob: -9.954042434692383
    4. ' :
' → logprob: -10.829042434692383
    5. '   ' → logprob: -10.954042434692383
    6. ' and' → logprob: -11.329042434692383
    7. '):
' → logprob: -11.329042434692383
    8. ',' → logprob: -11.454042434692383
    9. '       ' → logprob: -11.704042434692383
    10. '<|end|>' → logprob: -11.954042434692383

Token 631: '           ' (ID: 352)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.2260965257883072
    2. '   ' → logprob: -2.3510966300964355
    3. '       ' → logprob: -2.7260966300964355
    4. '	   ' → logprob: -3.8510966300964355
    5. 'mid' → logprob: -4.8510966300964355
    6. '    ' → logprob: -5.7260966300964355
    7. '[mid' → logprob: -5.9760966300964355
    8. '           ' → logprob: -6.1010966300964355
    9. '	       ' → logprob: -6.9760966300964355
    10. '_mid' → logprob: -7.6010966300964355

Token 632: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' (adapté à ' mid') → logprob: -0.023331545293331146
    2. ' mid' → logprob: -3.773331642150879
    3. 'middle' → logprob: -9.648331642150879
    4. '   ' → logprob: -11.273331642150879
    5. '           ' → logprob: -12.023331642150879
    6. ' middle' → logprob: -13.523331642150879
    7. '_mid' → logprob: -14.523331642150879
    8. '[mid' → logprob: -14.898331642150879
    9. ' midpoint' → logprob: -15.523331642150879
    10. '(mid' → logprob: -16.148330688476562

Token 633: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3875458836555481
    2. '=' → logprob: -1.1375458240509033
    3. '<|end|>' → logprob: -7.762546062469482
    4. '=int' → logprob: -8.762545585632324
    5. ')' → logprob: -10.512545585632324
    6. '<|end|>' → logprob: -10.762545585632324
    7. '=None' → logprob: -11.887545585632324
    8. ':' → logprob: -11.887545585632324
    9. ' ' → logprob: -12.262545585632324
    10. '=center' → logprob: -12.637545585632324

Token 634: ' (' (ID: 350)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.10336805880069733
    2. ' (' → logprob: -2.353368043899536
    3. '(right' → logprob: -5.853368282318115
    4. 'left' → logprob: -8.353367805480957
    5. ' left' → logprob: -10.228367805480957
    6. 'right' → logprob: -11.728367805480957
    7. '[left' → logprob: -12.353367805480957
    8. ' right' → logprob: -14.103367805480957
    9. '(mid' → logprob: -14.603367805480957
    10. '[right' → logprob: -15.228367805480957

Token 635: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -3.128163257315464e-07
    2. ' left' → logprob: -15.25
    3. 'right' → logprob: -17.25
    4. '(left' → logprob: -19.0
    5. '[left' → logprob: -23.125
    6. '	left' → logprob: -23.875
    7. 'lef' → logprob: -24.375
    8. '左' → logprob: -25.25
    9. '_left' → logprob: -25.5
    10. '.left' → logprob: -26.25

Token 636: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4740791916847229
    2. ' +' → logprob: -0.9740791916847229
    3. ')' → logprob: -13.349079132080078
    4. '[left' → logprob: -15.474079132080078
    5. '[right' → logprob: -16.099079132080078
    6. 'left' → logprob: -16.099079132080078
    7. '```' → logprob: -16.474079132080078
    8. '=' → logprob: -16.974079132080078
    9. ' ' → logprob: -17.349079132080078
    10. ' ' → logprob: -17.599079132080078

Token 637: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0001234428636962548
    2. ' right' → logprob: -9.000123023986816
    3. '(right' → logprob: -19.250123977661133
    4. '[right' → logprob: -19.250123977661133
    5. '	right' → logprob: -20.000123977661133
    6. '   ' → logprob: -21.625123977661133
    7. ' ' → logprob: -21.750123977661133
    8. '
' → logprob: -23.500123977661133
    9. '.right' → logprob: -23.625123977661133
    10. '_right' → logprob: -23.625123977661133

Token 638: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004081959370523691
    2. ')//' → logprob: -5.504081726074219
    3. ')>>' → logprob: -12.629081726074219
    4. ' )' → logprob: -15.129081726074219
    5. ')
' → logprob: -18.87908172607422
    6. ')#' → logprob: -19.75408172607422
    7. '）' → logprob: -19.87908172607422
    8. '//' → logprob: -21.00408172607422
    9. ']' → logprob: -22.12908172607422
    10. ')...' → logprob: -22.87908172607422

Token 639: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.4777304530143738
    2. ' //' → logprob: -1.1027305126190186
    3. ')' → logprob: -3.1027305126190186
    4. ')//' → logprob: -5.9777302742004395
    5. '>>' → logprob: -8.102730751037598
    6. '```' → logprob: -10.352730751037598
    7. ']' → logprob: -10.727730751037598
    8. ')>>' → logprob: -11.977730751037598
    9. ' >>' → logprob: -12.102730751037598
    10. '
' → logprob: -12.602730751037598

Token 640: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -19.125051498413086
    4. '۲' → logprob: -19.375051498413086
    5. '```' → logprob: -20.250051498413086
    6. '3' → logprob: -20.500051498413086
    7. '1' → logprob: -21.125051498413086
    8. '２' → logprob: -21.125051498413086
    9. '=' → logprob: -21.375051498413086
    10. '  ' → logprob: -21.687551498413086

Token 641: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '２' → logprob: -21.625001907348633
    4. '۲' → logprob: -21.750001907348633
    5. '   ' → logprob: -21.875001907348633
    6. '```' → logprob: -22.500001907348633
    7. '
' → logprob: -23.375001907348633
    8. '=' → logprob: -23.875001907348633
    9. '  ' → logprob: -24.000001907348633
    10. '٢' → logprob: -24.000001907348633

Token 642: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4914325177669525
    2. '<|end|>' → logprob: -1.241432547569275
    3. '
' → logprob: -2.8664324283599854
    4. '<|end|>' → logprob: -3.7414324283599854
    5. '       ' → logprob: -5.1164326667785645
    6. ' if' → logprob: -5.8664326667785645
    7. '            
' → logprob: -5.9914326667785645
    8. ')' → logprob: -7.1164326667785645
    9. 'if' → logprob: -7.1164326667785645
    10. '               ' → logprob: -7.2414326667785645

Token 643: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022928470571059734
    2. ' if' → logprob: -9.625228881835938
    3. '<|end|>' → logprob: -9.625228881835938
    4. 'if' → logprob: -9.875228881835938
    5. '<|end|>' → logprob: -11.000228881835938
    6. '       ' → logprob: -11.625228881835938
    7. '   ' → logprob: -12.375228881835938
    8. 'token' → logprob: -12.500228881835938
    9. '		' → logprob: -12.625228881835938
    10. '	       ' → logprob: -13.250228881835938

Token 644: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8694366812705994
    2. ' if' → logprob: -1.1194367408752441
    3. '           ' → logprob: -1.3694367408752441
    4. '       ' → logprob: -10.619436264038086
    5. '   ' → logprob: -10.744436264038086
    6. 'If' → logprob: -10.744436264038086
    7. '	if' → logprob: -10.994436264038086
    8. ' ' → logprob: -12.244436264038086
    9. '               ' → logprob: -12.994436264038086
    10. '            
' → logprob: -13.494436264038086

Token 645: ' primes' (ID: 104042)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -2.935296834039036e-06
    2. ' primes' → logprob: -12.75000286102295
    3. '   ' → logprob: -19.875003814697266
    4. '	pr' → logprob: -20.000003814697266
    5. '(pr' → logprob: -20.750003814697266
    6. 'prime' → logprob: -21.750003814697266
    7. 'pri' → logprob: -21.875003814697266
    8. '           ' → logprob: -23.875003814697266
    9. '  ' → logprob: -24.250003814697266
    10. ' ' → logprob: -24.625003814697266

Token 646: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: 0.0
    2. 'mid' → logprob: -17.0
    3. '[' → logprob: -18.875
    4. '[m' → logprob: -19.125
    5. '(mid' → logprob: -19.25
    6. '[
' → logprob: -19.5
    7. ' [' → logprob: -20.0
    8. '[max' → logprob: -21.125
    9. '[mem' → logprob: -21.25
    10. '
' → logprob: -21.75

Token 647: ']' (ID: 60)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.6390442252159119
    2. ' <=' → logprob: -0.7640442252159119
    3. ']<=' → logprob: -5.264044284820557
    4. ']' → logprob: -6.764044284820557
    5. ')<=' → logprob: -9.764043807983398
    6. ')' → logprob: -11.139043807983398
    7. 'le' → logprob: -11.139043807983398
    8. '[' → logprob: -13.264043807983398
    9. ' ' → logprob: -13.264043807983398
    10. '<|end|>' → logprob: -13.639043807983398

Token 648: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.023247340694069862
    2. ' <=' → logprob: -3.773247241973877
    3. ']<=' → logprob: -14.023247718811035
    4. ')<=' → logprob: -14.398247718811035
    5. 'le' → logprob: -15.023247718811035
    6. '>' → logprob: -16.27324676513672
    7. ')' → logprob: -18.39824676513672
    8. '≤' → logprob: -18.39824676513672
    9. '```' → logprob: -19.39824676513672
    10. '==' → logprob: -19.64824676513672

Token 649: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -5.32392441527918e-05
    2. ' m' → logprob: -10.000053405761719
    3. 'max' → logprob: -11.875053405761719
    4. 'MAX' → logprob: -14.000053405761719
    5. ' max' → logprob: -19.37505340576172
    6. '	m' → logprob: -20.12505340576172
    7. '   ' → logprob: -20.50005340576172
    8. ' MAX' → logprob: -20.87505340576172
    9. '100' → logprob: -20.87505340576172
    10. 'M' → logprob: -21.62505340576172

Token 650: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.474698930978775
    2. ':' → logprob: -0.9746989011764526
    3. '):
' → logprob: -7.974699020385742
    4. ':left' → logprob: -8.349699020385742
    5. '[left' → logprob: -11.724699020385742
    6. ':
' → logprob: -11.724699020385742
    7. '):' → logprob: -12.099699020385742
    8. ':right' → logprob: -12.099699020385742
    9. ')' → logprob: -12.724699020385742
    10. ' :
' → logprob: -12.849699020385742

Token 651: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0734928548336029
    2. ' left' → logprob: -3.6984927654266357
    3. ':' → logprob: -4.448493003845215
    4. '               ' → logprob: -4.573493003845215
    5. 'left' → logprob: -4.573493003845215
    6. '[left' → logprob: -5.323493003845215
    7. ':
' → logprob: -5.573493003845215
    8. ':left' → logprob: -6.198493003845215
    9. '       ' → logprob: -6.448493003845215
    10. '):
' → logprob: -7.448493003845215

Token 652: ' idx' (ID: 14016)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.011061026714742184
    2. 'idx' (adapté à ' idx') → logprob: -4.511061191558838
    3. ' left' → logprob: -11.26106071472168
    4. ' idx' → logprob: -15.01106071472168
    5. '	left' → logprob: -17.01106071472168
    6. '   ' → logprob: -18.01106071472168
    7. '[left' → logprob: -19.01106071472168
    8. 'ans' → logprob: -19.13606071472168
    9. 'index' → logprob: -19.26106071472168
    10. '           ' → logprob: -19.38606071472168

Token 653: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -0.0071259462274611
    2. 'mid' → logprob: -5.5071258544921875
    3. 'q' → logprob: -6.6321258544921875
    4. '=' → logprob: -7.1321258544921875
    5. ' =' → logprob: -8.132125854492188
    6. 'left' → logprob: -8.757125854492188
    7. '[mid' → logprob: -8.757125854492188
    8. 'right' → logprob: -9.132125854492188
    9. '_' → logprob: -9.257125854492188
    10. '_mid' → logprob: -9.757125854492188

Token 654: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.8011301755905151
    2. '=' → logprob: -1.0511301755905151
    3. 'max' → logprob: -2.3011302947998047
    4. ' =' → logprob: -2.3011302947998047
    5. '_' → logprob: -7.551130294799805
    6. '=max' → logprob: -8.176130294799805
    7. ' max' → logprob: -9.301130294799805
    8. '_min' → logprob: -9.426130294799805
    9. '_mid' → logprob: -9.426130294799805
    10. ' ' → logprob: -9.801130294799805

Token 655: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196768581867218
    2. ' =' → logprob: -2.811967611312866
    3. '.=' → logprob: -19.436967849731445
    4. '＝' → logprob: -19.811967849731445
    5. ',' → logprob: -20.436967849731445
    6. '+=' → logprob: -20.811967849731445
    7. '=}' → logprob: -20.936967849731445
    8. ' ' → logprob: -21.686967849731445
    9. '=
' → logprob: -21.936967849731445
    10. 'left' → logprob: -22.561967849731445

Token 656: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.3132619559764862
    2. ' mid' → logprob: -1.3132619857788086
    3. '[mid' → logprob: -15.438261985778809
    4. '(mid' → logprob: -17.438261032104492
    5. '_mid' → logprob: -18.688261032104492
    6. ' midpoint' → logprob: -20.563261032104492
    7. ' ' → logprob: -20.813261032104492
    8. '.mid' → logprob: -21.063261032104492
    9. 'max' → logprob: -21.688261032104492
    10. '
' → logprob: -21.813261032104492

Token 657: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015602122293785214
    2. '
' → logprob: -6.626560211181641
    3. '           ' → logprob: -9.37656021118164
    4. '                
' → logprob: -9.37656021118164
    5. '                   ' → logprob: -11.12656021118164
    6. '			' → logprob: -11.50156021118164
    7. '                ' → logprob: -11.62656021118164
    8. '              ' → logprob: -12.37656021118164
    9. '
' → logprob: -12.50156021118164
    10. '       ' → logprob: -12.62656021118164

Token 658: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000320565392030403
    2. '                
' → logprob: -8.875320434570312
    3. 'left' → logprob: -9.625320434570312
    4. ' left' → logprob: -9.875320434570312
    5. '
' → logprob: -10.625320434570312
    6. '           ' → logprob: -11.500320434570312
    7. '[left' → logprob: -11.750320434570312
    8. '    
' → logprob: -12.250320434570312
    9. '			' → logprob: -12.875320434570312
    10. ' 
' → logprob: -13.000320434570312

Token 659: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.06196824833750725
    2. ' left' → logprob: -2.8119683265686035
    3. '               ' → logprob: -15.186967849731445
    4. '	left' → logprob: -15.561967849731445
    5. '[left' → logprob: -16.936967849731445
    6. ' lef' → logprob: -17.311967849731445
    7. 'right' → logprob: -17.436967849731445
    8. '
' → logprob: -17.436967849731445
    9. '.left' → logprob: -17.561967849731445
    10. ':left' → logprob: -18.186967849731445

Token 660: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01814994215965271
    2. ' =' → logprob: -4.0181498527526855
    3. '<|end|>' → logprob: -17.768150329589844
    4. '＝' → logprob: -18.768150329589844
    5. '+=' → logprob: -19.268150329589844
    6. '=}' → logprob: -19.893150329589844
    7. ' ' → logprob: -20.768150329589844
    8. '_=' → logprob: -20.893150329589844
    9. '=
' → logprob: -21.018150329589844
    10. '.=' → logprob: -21.268150329589844

Token 661: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0019286326132714748
    2. ' mid' → logprob: -6.251928806304932
    3. '[mid' → logprob: -18.126928329467773
    4. '(mid' → logprob: -18.501928329467773
    5. '_mid' → logprob: -21.001928329467773
    6. 'middle' → logprob: -22.251928329467773
    7. ' ' → logprob: -22.251928329467773
    8. '.mid' → logprob: -23.251928329467773
    9. 'Mid' → logprob: -23.876928329467773
    10. '   ' → logprob: -24.001928329467773

Token 662: ' +' (ID: 659)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.20187316834926605
    2. ' mid' → logprob: -1.7018731832504272
    3. '[mid' → logprob: -7.826873302459717
    4. '(mid' → logprob: -9.951872825622559
    5. '=' → logprob: -11.951872825622559
    6. '+' → logprob: -12.201872825622559
    7. '_mid' → logprob: -13.701872825622559
    8. ' =' → logprob: -14.951872825622559
    9. '.mid' → logprob: -16.326873779296875
    10. '
' → logprob: -17.326873779296875

Token 663: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -21.125015258789062
    4. '0' → logprob: -21.750015258789062
    5. '   ' → logprob: -22.250015258789062
    6. '<|end|>' → logprob: -23.250015258789062
    7. '100' → logprob: -23.625015258789062
    8. '  ' → logprob: -23.875015258789062
    9. '۱' → logprob: -24.000015258789062
    10. '１' → logprob: -24.687515258789062

Token 664: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -21.500001907348633
    4. '```' → logprob: -21.625001907348633
    5. '
' → logprob: -23.125001907348633
    6. '  ' → logprob: -23.250001907348633
    7. '0' → logprob: -23.500001907348633
    8. '=' → logprob: -25.250001907348633
    9. '１' → logprob: -25.375001907348633
    10. '۱' → logprob: -25.500001907348633

Token 665: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.080963092041202e-06
    2. '
' → logprob: -13.125004768371582
    3. 'else' → logprob: -13.625004768371582
    4. '       ' → logprob: -14.375004768371582
    5. 'elif' → logprob: -14.625004768371582
    6. '<|end|>' → logprob: -15.875004768371582
    7. '          ' → logprob: -16.1250057220459
    8. '               ' → logprob: -16.2500057220459
    9. '   ' → logprob: -16.3750057220459
    10. '            
' → logprob: -16.5000057220459

Token 666: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.619311974034645e-05
    2. 'else' → logprob: -10.250036239624023
    3. ' else' → logprob: -15.375036239624023
    4. 'elif' → logprob: -15.750036239624023
    5. '```' → logprob: -15.875036239624023
    6. '		' → logprob: -15.875036239624023
    7. '          ' → logprob: -16.500036239624023
    8. '               ' → logprob: -17.125036239624023
    9. '       ' → logprob: -17.250036239624023
    10. '	       ' → logprob: -17.375036239624023

Token 667: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5910034775733948
    2. 'else' (adapté à ' else') → logprob: -0.8410034775733948
    3. ' else' → logprob: -4.21600341796875
    4. '       ' → logprob: -8.59100341796875
    5. 'elif' → logprob: -12.21600341796875
    6. '               ' → logprob: -14.34100341796875
    7. '          ' → logprob: -14.71600341796875
    8. '        ' → logprob: -14.96600341796875
    9. '```' → logprob: -15.21600341796875
    10. '	       ' → logprob: -15.59100341796875

Token 668: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3015021085739136
    2. ':
' → logprob: -1.4265021085739136
    3. ':' → logprob: -4.176502227783203
    4. 'right' → logprob: -5.426502227783203
    5. ' right' → logprob: -8.801502227783203
    6. ':right' → logprob: -9.051502227783203
    7. '           ' → logprob: -9.426502227783203
    8. '):
' → logprob: -11.426502227783203
    9. '[right' → logprob: -11.926502227783203
    10. '	right' → logprob: -12.051502227783203

Token 669: '               ' (ID: 506)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.4777733385562897
    2. 'right' → logprob: -0.9777733087539673
    3. '               ' → logprob: -5.602773189544678
    4. '	right' → logprob: -14.227773666381836
    5. '           ' → logprob: -14.727773666381836
    6. 'Right' → logprob: -15.352773666381836
    7. '[right' → logprob: -15.852773666381836
    8. '_right' → logprob: -16.352773666381836
    9. '.right' → logprob: -16.602773666381836
    10. ':right' → logprob: -16.727773666381836

Token 670: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.008620958775281906
    2. ' right' → logprob: -4.758620738983154
    3. '               ' → logprob: -12.008621215820312
    4. '	right' → logprob: -15.258621215820312
    5. '   ' → logprob: -17.883621215820312
    6. '                   ' → logprob: -18.758621215820312
    7. '           ' → logprob: -18.883621215820312
    8. '_right' → logprob: -19.633621215820312
    9. '[right' → logprob: -19.633621215820312
    10. 'r' → logprob: -20.383621215820312

Token 671: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014133334159851
    2. ' =' → logprob: -1.7014133930206299
    3. '=
' → logprob: -18.076414108276367
    4. ' =
' → logprob: -19.451414108276367
    5. '＝' → logprob: -21.326414108276367
    6. ' ' → logprob: -22.076414108276367
    7. '=

' → logprob: -22.326414108276367
    8. '               ' → logprob: -22.701414108276367
    9. '                ' → logprob: -22.701414108276367
    10. '            ' → logprob: -23.576414108276367

Token 672: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0019286326132714748
    2. ' mid' → logprob: -6.251928806304932
    3. '[mid' → logprob: -20.251928329467773
    4. '(mid' → logprob: -20.501928329467773
    5. '_mid' → logprob: -21.126928329467773
    6. 'middle' → logprob: -21.251928329467773
    7. 'right' → logprob: -21.626928329467773
    8. 'm' → logprob: -22.501928329467773
    9. 'midt' → logprob: -22.751928329467773
    10. '.mid' → logprob: -23.876928329467773

Token 673: ' -' (ID: 533)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.7175710201263428
    2. 'mid' → logprob: -0.7175710201263428
    3. '[mid' → logprob: -4.092571258544922
    4. '=' → logprob: -5.592571258544922
    5. '_mid' → logprob: -6.092571258544922
    6. ' ' → logprob: -7.342571258544922
    7. '(mid' → logprob: -8.342571258544922
    8. '<|end|>' → logprob: -8.342571258544922
    9. ' =' → logprob: -9.467571258544922
    10. '-' → logprob: -9.842571258544922

Token 674: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '0' → logprob: -21.500001907348633
    4. '```' → logprob: -22.000001907348633
    5. '<|end|>' → logprob: -22.625001907348633
    6. '100' → logprob: -23.875001907348633
    7. '۱' → logprob: -24.125001907348633
    8. ',' → logprob: -24.750001907348633
    9. '+' → logprob: -24.750001907348633
    10. '2' → logprob: -24.875001907348633

Token 675: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020392626523971558
    2. '<|end|>' → logprob: -5.020392417907715
    3. '        
' → logprob: -5.520392417907715
    4. '
' → logprob: -5.645392417907715
    5. '   ' → logprob: -5.895392417907715
    6. '    
' → logprob: -7.020392417907715
    7. '<|end|>' → logprob: -7.020392417907715
    8. '\n' → logprob: -8.145392417907715
    9. ')' → logprob: -8.270392417907715
    10. '  
' → logprob: -8.520392417907715

Token 676: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6763328313827515
    2. '   ' → logprob: -1.1763328313827515
    3. '
' → logprob: -2.176332950592041
    4. ' for' → logprob: -3.176332950592041
    5. 'for' → logprob: -4.301332950592041
    6. '    
' → logprob: -4.926332950592041
    7. '        
' → logprob: -5.551332950592041
    8. '  
' → logprob: -6.551332950592041
    9. '<|end|>' → logprob: -7.426332950592041
    10. '```' → logprob: -7.926332950592041

Token 677: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.993622362613678
    2. 'for' → logprob: -0.993622362613678
    3. '       ' → logprob: -1.3686223030090332
    4. '   ' → logprob: -5.493622303009033
    5. 'q' → logprob: -8.118622779846191
    6. 'idx' → logprob: -8.118622779846191
    7. '```' → logprob: -8.618622779846191
    8. '	for' → logprob: -10.118622779846191
    9. '
' → logprob: -10.243622779846191
    10. 'i' → logprob: -10.993622779846191

Token 678: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00010592726175673306
    2. ' for' → logprob: -9.625105857849121
    3. 'q' → logprob: -11.125105857849121
    4. '       ' → logprob: -11.125105857849121
    5. 'while' → logprob: -12.000105857849121
    6. 'idx' → logprob: -12.875105857849121
    7. '   ' → logprob: -14.125105857849121
    8. 'i' → logprob: -14.125105857849121
    9. 'from' → logprob: -16.750106811523438
    10. '```' → logprob: -16.875106811523438

Token 679: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.002573163714259863
    2. 'ur' → logprob: -7.002573013305664
    3. 'ourt' → logprob: -7.127573013305664
    4. 'for' → logprob: -8.252573013305664
    5. 'urer' → logprob: -8.627573013305664
    6. 'ours' → logprob: -9.002573013305664
    7. 'u' → logprob: -9.377573013305664
    8. '       ' → logprob: -9.627573013305664
    9. 'r' → logprob: -9.877573013305664
    10. 'urr' → logprob: -10.377573013305664

Token 680: 'ir' (ID: 380)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.00829860009253025
    2. 'ours' → logprob: -5.383298397064209
    3. 'ur' → logprob: -6.633298397064209
    4. 'r' → logprob: -7.008298397064209
    5. 'ir' → logprob: -7.133298397064209
    6. '#' → logprob: -8.508298873901367
    7. 'rir' → logprob: -9.508298873901367
    8. 'er' → logprob: -9.883298873901367
    9. 'u' → logprob: -9.883298873901367
    10. 'or' → logprob: -10.258298873901367

Token 681: ' q' (ID: 2335)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38844534754753113
    2. 'for' → logprob: -1.1384453773498535
    3. ' idx' → logprob: -6.7634453773498535
    4. 'idx' → logprob: -8.138444900512695
    5. 'i' → logprob: -10.013444900512695
    6. ' i' → logprob: -10.513444900512695
    7. 'q' → logprob: -10.763444900512695
    8. 'range' → logprob: -11.638444900512695
    9. ' q' → logprob: -11.763444900512695
    10. ' range' → logprob: -12.013444900512695

Token 682: ' décro' (ID: 176854)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8258999586105347
    2. 'in' → logprob: -1.7008999586105347
    3. 'for' → logprob: -1.8258999586105347
    4. '=' → logprob: -2.200900077819824
    5. ' =' → logprob: -3.200900077819824
    6. ' for' → logprob: -3.325900077819824
    7. 'from' → logprob: -3.950900077819824
    8. '       ' → logprob: -4.825900077819824
    9. '   ' → logprob: -6.825900077819824
    10. 'range' → logprob: -7.325900077819824

Token 683: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.00026872646412812173
    2. 'iss' → logprob: -8.875268936157227
    3. 'issants' → logprob: -10.500268936157227
    4. 'endant' → logprob: -10.750268936157227
    5. 'issante' → logprob: -10.750268936157227
    6. 'r' → logprob: -10.875268936157227
    7. 'issent' → logprob: -11.125268936157227
    8. 'issing' → logprob: -12.500268936157227
    9. 'ro' → logprob: -12.625268936157227
    10. 'issa' → logprob: -12.750268936157227

Token 684: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10968021303415298
    2. '       ' → logprob: -3.10968017578125
    3. 'for' → logprob: -3.48468017578125
    4. ' from' → logprob: -4.48468017578125
    5. 'from' → logprob: -4.98468017578125
    6. ':' → logprob: -5.10968017578125
    7. '   ' → logprob: -6.35968017578125
    8. ' in' → logprob: -6.85968017578125
    9. ' =' → logprob: -7.23468017578125
    10. '
' → logprob: -8.23468017578125

Token 685: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3777792453765869
    2. '       ' → logprob: -1.502779245376587
    3. 'for' → logprob: -2.627779245376587
    4. ':' → logprob: -5.252779006958008
    5. '   ' → logprob: -5.377779006958008
    6. ' =' → logprob: -5.752779006958008
    7. ',' → logprob: -6.252779006958008
    8. '=' → logprob: -6.752779006958008
    9. 'from' → logprob: -7.377779006958008
    10. ' in' → logprob: -7.502779006958008

Token 686: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25196316838264465
    2. 'for' (adapté à ' for') → logprob: -1.5019631385803223
    3. '       ' → logprob: -10.50196361541748
    4. '   ' → logprob: -12.12696361541748
    5. '	for' → logprob: -14.37696361541748
    6. '    ' → logprob: -14.87696361541748
    7. '
' → logprob: -16.501962661743164
    8. 'range' → logprob: -16.626962661743164
    9. ' 
' → logprob: -16.751962661743164
    10. '```' → logprob: -16.876962661743164

Token 687: ' i' (ID: 575)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.5787861347198486
    2. 'q' → logprob: -1.2037861347198486
    3. ' idx' → logprob: -2.5787861347198486
    4. 'i' → logprob: -2.8287861347198486
    5. ' q' → logprob: -6.2037858963012695
    6. ' i' → logprob: -6.7037858963012695
    7. 'qi' → logprob: -7.3287858963012695
    8. 'iq' → logprob: -7.9537858963012695
    9. ' iq' → logprob: -10.32878589630127
    10. '   ' → logprob: -10.70378589630127

Token 688: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05497312173247337
    2. 'in' → logprob: -2.9299731254577637
    3. '=' → logprob: -10.054972648620605
    4. 's' → logprob: -11.804972648620605
    5. 'd' → logprob: -11.929972648620605
    6. 'idx' → logprob: -12.429972648620605
    7. 'de' → logprob: -12.429972648620605
    8. 'range' → logprob: -12.554972648620605
    9. 'In' → logprob: -12.679972648620605
    10. ' =' → logprob: -13.054972648620605

Token 689: ' range' (ID: 3352)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.3868870735168457
    2. 'range' → logprob: -1.1368870735168457
    3. ' idx' → logprob: -11.386886596679688
    4. ' range' → logprob: -13.261886596679688
    5. '(idx' → logprob: -13.386886596679688
    6. 're' → logprob: -14.011886596679688
    7. '[idx' → logprob: -14.636886596679688
    8. 'index' → logprob: -16.511886596679688
    9. '	idx' → logprob: -17.011886596679688
    10. 'r' → logprob: -17.136886596679688

Token 690: '(idx' (ID: 42793)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0015061709564179182
    2. ' idx' → logprob: -6.751506328582764
    3. '(idx' → logprob: -8.001505851745605
    4. '[idx' → logprob: -14.501505851745605
    5. '	idx' → logprob: -14.626505851745605
    6. '_idx' → logprob: -17.126506805419922
    7. '   ' → logprob: -17.376506805419922
    8. '.idx' → logprob: -18.126506805419922
    9. 'index' → logprob: -18.126506805419922
    10. ' ' → logprob: -20.376506805419922

Token 691: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -1.981667537620524e-06
    2. '_idx' → logprob: -13.375001907348633
    3. '_' → logprob: -15.625001907348633
    4. '_i' → logprob: -16.625001907348633
    5. '\' → logprob: -18.000001907348633
    6. '_x' → logprob: -18.125001907348633
    7. ')' → logprob: -18.375001907348633
    8. '_j' → logprob: -18.375001907348633
    9. '_n' → logprob: -18.500001907348633
    10. '}_' → logprob: -18.750001907348633

Token 692: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.007613255642354488
    2. 'max' → logprob: -4.882613182067871
    3. '_MAX' → logprob: -12.632613182067871
    4. 'Max' → logprob: -14.007613182067871
    5. ' max' → logprob: -14.257613182067871
    6. 'maxlength' → logprob: -14.507613182067871
    7. '_q' → logprob: -14.757613182067871
    8. ',max' → logprob: -15.632613182067871
    9. '	max' → logprob: -15.757613182067871
    10. ')' → logprob: -15.882613182067871

Token 693: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.27099974633893e-05
    2. ' ,' → logprob: -11.875012397766113
    3. ',-' → logprob: -12.125012397766113
    4. ',
' → logprob: -15.125012397766113
    5. '‌,' → logprob: -19.62501335144043
    6. ' ,-' → logprob: -19.75001335144043
    7. ',len' → logprob: -20.25001335144043
    8. '_,' → logprob: -20.25001335144043
    9. ',i' → logprob: -20.62501335144043
    10. '   ' → logprob: -20.62501335144043

Token 694: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00012356207298580557
    2. ' -' → logprob: -9.000123977661133
    3. '0' → logprob: -16.250123977661133
    4. '
' → logprob: -19.250123977661133
    5. ' ' → logprob: -20.375123977661133
    6. '   ' → logprob: -22.250123977661133
    7. '1' → logprob: -22.750123977661133
    8. '-
' → logprob: -22.875123977661133
    9. '...' → logprob: -23.250123977661133
    10. '  ' → logprob: -23.375123977661133

Token 695: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '
' → logprob: -20.375
    4. '   ' → logprob: -21.875
    5. '2' → logprob: -22.0
    6. ',' → logprob: -22.625
    7. '１' → logprob: -22.75
    8. '۱' → logprob: -22.875
    9. '```' → logprob: -23.25
    10. ')' → logprob: -23.625

Token 696: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020807012333534658
    2. '-' → logprob: -9.125207901000977
    3. ',-' → logprob: -9.250207901000977
    4. ' ,' → logprob: -13.000207901000977
    5. ' -' → logprob: -14.625207901000977
    6. '   ' → logprob: -15.875207901000977
    7. '-,' → logprob: -16.250207901000977
    8. ' ,-' → logprob: -16.750207901000977
    9. ',
' → logprob: -17.500207901000977
    10. '       ' → logprob: -18.250207901000977

Token 697: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0015024791937321424
    2. ' -' → logprob: -6.501502513885498
    3. '):
' → logprob: -16.876502990722656
    4. '```' → logprob: -17.626502990722656
    5. ')' → logprob: -17.876502990722656
    6. '﻿' → logprob: -18.126502990722656
    7. '   ' → logprob: -18.626502990722656
    8. ' ' → logprob: -18.626502990722656
    9. '1' → logprob: -18.751502990722656
    10. '):

' → logprob: -19.501502990722656

Token 698: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. ')' → logprob: -18.5
    4. '-' → logprob: -19.125
    5. '   ' → logprob: -20.5
    6. '
' → logprob: -20.625
    7. '):
' → logprob: -20.75
    8. '```' → logprob: -21.0
    9. '１' → logprob: -21.375
    10. '2' → logprob: -21.75

Token 699: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11315301060676575
    2. '):
' → logprob: -2.2381529808044434
    3. ':' → logprob: -8.863153457641602
    4. '):
' → logprob: -9.113153457641602
    5. '   ' → logprob: -10.238153457641602
    6. ',' → logprob: -11.238153457641602
    7. ' ):' → logprob: -11.613153457641602
    8. '       ' → logprob: -11.738153457641602
    9. ')' → logprob: -11.863153457641602
    10. ' ):
' → logprob: -13.863153457641602

Token 700: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016306709730997682
    2. '   ' → logprob: -7.001630783081055
    3. 'q' → logprob: -7.501630783081055
    4. '           ' → logprob: -9.626630783081055
    5. ' q' → logprob: -10.626630783081055
    6. '	   ' → logprob: -10.626630783081055
    7. '	' → logprob: -11.001630783081055
    8. '```' → logprob: -11.751630783081055
    9. '	q' → logprob: -11.876630783081055
    10. ',' → logprob: -12.501630783081055

Token 701: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.07252169400453568
    2. ' q' → logprob: -2.822521686553955
    3. '           ' → logprob: -4.572521686553955
    4. '       ' → logprob: -9.447522163391113
    5. '   ' → logprob: -9.947522163391113
    6. '	q' → logprob: -10.572522163391113
    7. '_q' → logprob: -12.322522163391113
    8. '               ' → logprob: -12.322522163391113
    9. '```' → logprob: -13.322522163391113
    10. ' if' → logprob: -13.822522163391113

Token 702: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0619683600962162
    2. '=' → logprob: -2.8119683265686035
    3. ')' → logprob: -15.311968803405762
    4. ',' → logprob: -15.436968803405762
    5. ' ' → logprob: -16.061967849731445
    6. '>' → logprob: -16.936967849731445
    7. '   ' → logprob: -17.311967849731445
    8. '=q' → logprob: -17.436967849731445
    9. '=int' → logprob: -17.561967849731445
    10. '.' → logprob: -17.561967849731445

Token 703: ' primes' (ID: 104042)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.00317783304490149
    2. ' primes' → logprob: -5.753177642822266
    3. '	pr' → logprob: -17.128177642822266
    4. 'prime' → logprob: -17.253177642822266
    5. '(pr' → logprob: -17.253177642822266
    6. ' pr' → logprob: -18.128177642822266
    7. '   ' → logprob: -19.378177642822266
    8. 'pri' → logprob: -19.753177642822266
    9. '-pr' → logprob: -19.878177642822266
    10. '_pr' → logprob: -20.253177642822266

Token 704: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.65707261255011e-06
    2. '[' → logprob: -12.375008583068848
    3. ' =' → logprob: -12.750008583068848
    4. '=' → logprob: -14.375008583068848
    5. ' [' → logprob: -15.250008583068848
    6. 'i' → logprob: -15.500008583068848
    7. '=i' → logprob: -15.750008583068848
    8. '[q' → logprob: -16.000009536743164
    9. '(i' → logprob: -16.375009536743164
    10. '           ' → logprob: -17.250009536743164

Token 705: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06114280968904495
    2. ')' → logprob: -3.311142921447754
    3. ']
' → logprob: -3.936142921447754
    4. '<|end|>' → logprob: -6.186142921447754
    5. ')
' → logprob: -7.436142921447754
    6. '           ' → logprob: -7.811142921447754
    7. '<|end|>' → logprob: -9.436142921447754
    8. '])' → logprob: -10.436142921447754
    9. ' ]' → logprob: -10.686142921447754
    10. '               ' → logprob: -10.936142921447754

Token 706: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002655085874721408
    2. '
' → logprob: -6.377655029296875
    3. '            
' → logprob: -7.627655029296875
    4. '<|end|>' → logprob: -8.377655029296875
    5. 'if' → logprob: -9.377655029296875
    6. ' if' → logprob: -9.627655029296875
    7. '       ' → logprob: -10.752655029296875
    8. '        
' → logprob: -11.252655029296875
    9. '<|end|>' → logprob: -11.377655029296875
    10. '
' → logprob: -11.877655029296875

Token 707: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02649885043501854
    2. '           ' → logprob: -3.651498794555664
    3. ' if' → logprob: -8.651498794555664
    4. '   ' → logprob: -11.276498794555664
    5. 'import' → logprob: -11.901498794555664
    6. '       ' → logprob: -13.276498794555664
    7. '#' (adapté à ' #') → logprob: -14.276498794555664
    8. '            
' → logprob: -14.651498794555664
    9. '
' → logprob: -15.276498794555664
    10. '               ' → logprob: -15.401498794555664

Token 708: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.013069051317870617
    2. 'min' → logprob: -4.638069152832031
    3. 'import' → logprob: -6.388069152832031
    4. 'max' → logprob: -6.888069152832031
    5. 'p' → logprob: -8.013069152832031
    6. '#' → logprob: -8.513069152832031
    7. 'start' → logprob: -10.263069152832031
    8. 'from' → logprob: -12.013069152832031
    9. '           ' → logprob: -12.138069152832031
    10. 'limit' → logprob: -12.263069152832031

Token 709: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.024604277219623e-05
    2. ' q' → logprob: -10.125040054321289
    3. '	q' → logprob: -17.12504005432129
    4. '(q' → logprob: -17.62504005432129
    5. 'max' → logprob: -17.75004005432129
    6. '$q' → logprob: -18.50004005432129
    7. '   ' → logprob: -18.62504005432129
    8. ' ' → logprob: -18.87504005432129
    9. '*q' → logprob: -20.12504005432129
    10. '  ' → logprob: -21.00004005432129

Token 710: '*q' (ID: 136288)
  Prédit: '*q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*q' → logprob: -0.004631145857274532
    2. ' *' → logprob: -5.504631042480469
    3. '*' → logprob: -7.504631042480469
    4. '**' → logprob: -13.879631042480469
    5. 'q' → logprob: -14.754631042480469
    6. '*i' → logprob: -15.379631042480469
    7. '*p' → logprob: -16.12963104248047
    8. ' ' → logprob: -16.37963104248047
    9. '```' → logprob: -16.62963104248047
    10. '*s' → logprob: -17.00463104248047

Token 711: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.16582491993904114
    2. '<' → logprob: -1.9158248901367188
    3. ' >' → logprob: -5.540824890136719
    4. '>' → logprob: -7.040824890136719
    5. ' <=' → logprob: -7.540824890136719
    6. ' >=' → logprob: -9.040824890136719
    7. '<=' → logprob: -9.415824890136719
    8. '>=' → logprob: -10.540824890136719
    9. '   ' → logprob: -11.665824890136719
    10. ' ' → logprob: -11.790824890136719

Token 712: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0009115827269852161
    2. ' max' → logprob: -7.000911712646484
    3. '   ' → logprob: -17.625911712646484
    4. '           ' → logprob: -18.000911712646484
    5. '	max' → logprob: -18.250911712646484
    6. '(max' → logprob: -18.625911712646484
    7. '=max' → logprob: -18.750911712646484
    8. '       ' → logprob: -18.875911712646484
    9. '[max' → logprob: -19.750911712646484
    10. '```' → logprob: -20.000911712646484

Token 713: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: 0.0
    2. 'area' → logprob: -17.25
    3. 'Area' → logprob: -18.375
    4. '_AREA' → logprob: -19.625
    5. '_' → logprob: -20.25
    6. '_are' → logprob: -20.25
    7. '_air' → logprob: -22.25
    8. '\' → logprob: -22.875
    9. '```' → logprob: -23.125
    10. ' area' → logprob: -23.125

Token 714: ' connu' (ID: 64644)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15963053703308105
    2. '           ' → logprob: -2.534630537033081
    3. '               ' → logprob: -3.034630537033081
    4. ':
' → logprob: -3.909630537033081
    5. '                   ' → logprob: -10.78463077545166
    6. '   ' → logprob: -11.28463077545166
    7. ' and' → logprob: -11.40963077545166
    8. '       ' → logprob: -11.40963077545166
    9. ',' → logprob: -11.90963077545166
    10. 'and' → logprob: -12.15963077545166

Token 715: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1372707635164261
    2. ':
' → logprob: -2.13727068901062
    3. '           ' → logprob: -4.762270927429199
    4. '               ' → logprob: -6.387270927429199
    5. '   ' → logprob: -11.1372709274292
    6. ',' → logprob: -11.7622709274292
    7. '       ' → logprob: -11.8872709274292
    8. ' :' → logprob: -12.5122709274292
    9. '                   ' → logprob: -12.5122709274292
    10. ':
' → logprob: -12.7622709274292

Token 716: ' on' (ID: 402)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.049695394933223724
    2. 'break' → logprob: -3.1746954917907715
    3. '           ' → logprob: -5.5496954917907715
    4. ' break' → logprob: -5.9246954917907715
    5. '   ' → logprob: -10.299695014953613
    6. '	break' → logprob: -10.299695014953613
    7. 'continue' → logprob: -11.049695014953613
    8. '                   ' → logprob: -11.174695014953613
    9. '	           ' → logprob: -12.299695014953613
    10. ' continue' → logprob: -12.674695014953613

Token 717: ' peut' (ID: 9216)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.60964435338974
    2. 'break' → logprob: -0.98464435338974
    3. '               ' → logprob: -2.7346444129943848
    4. ' break' → logprob: -4.359644412994385
    5. 'continue' → logprob: -6.359644412994385
    6. '   ' → logprob: -6.609644412994385
    7. '	break' → logprob: -7.109644412994385
    8. '_break' → logprob: -8.234643936157227
    9. ' continue' → logprob: -8.984643936157227
    10. ' ' → logprob: -9.109643936157227

Token 718: ' arrêter' (ID: 163206)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.020932111889123917
    2. '               ' → logprob: -4.895932197570801
    3. '           ' → logprob: -5.020932197570801
    4. ' break' → logprob: -5.145932197570801
    5. '                   ' → logprob: -8.1459321975708
    6. '   ' → logprob: -9.0209321975708
    7. 'continue' → logprob: -9.1459321975708
    8. 'breaker' → logprob: -9.3959321975708
    9. '	break' → logprob: -9.6459321975708
    10. 'contin' → logprob: -9.8959321975708

Token 719: ' la' (ID: 557)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2523617148399353
    2. '           ' → logprob: -1.50236177444458
    3. 'break' → logprob: -9.127361297607422
    4. '                   ' → logprob: -9.627361297607422
    5. '            ' → logprob: -10.127361297607422
    6. ' break' → logprob: -10.502361297607422
    7. '              ' → logprob: -10.627361297607422
    8. '	           ' → logprob: -10.627361297607422
    9. '		' → logprob: -10.877361297607422
    10. '.' → logprob: -11.127361297607422

Token 720: ' boucle' (ID: 174211)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.006619215942919254
    2. '           ' → logprob: -5.131619453430176
    3. '   ' → logprob: -8.381619453430176
    4. 'for' → logprob: -8.631619453430176
    5. '               ' → logprob: -9.381619453430176
    6. '       ' → logprob: -9.631619453430176
    7. 'bou' → logprob: -10.131619453430176
    8. 'loop' → logprob: -10.631619453430176
    9. '```' → logprob: -11.006619453430176
    10. ' break' → logprob: -11.006619453430176

Token 721: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00018363336857873946
    2. '               ' → logprob: -9.750184059143066
    3. ' if' → logprob: -9.875184059143066
    4. ',' → logprob: -10.000184059143066
    5. 'if' → logprob: -11.750184059143066
    6. '		' → logprob: -11.875184059143066
    7. '	       ' → logprob: -12.375184059143066
    8. '   ' → logprob: -12.750184059143066
    9. '       ' → logprob: -13.375184059143066
    10. '<|end|>' → logprob: -13.500184059143066

Token 722: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.7385154428193346e-05
    2. '               ' → logprob: -11.00003719329834
    3. '       ' → logprob: -11.50003719329834
    4. '   ' → logprob: -12.37503719329834
    5. '		' → logprob: -13.00003719329834
    6. ' if' → logprob: -13.75003719329834
    7. '          ' → logprob: -14.12503719329834
    8. '	       ' → logprob: -14.62503719329834
    9. ',' → logprob: -14.75003719329834
    10. 'if' → logprob: -14.75003719329834

Token 723: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.42964479327201843
    2. 'if' (adapté à ' if') → logprob: -1.1796448230743408
    3. ' if' → logprob: -3.179644823074341
    4. '   ' → logprob: -8.429644584655762
    5. '       ' → logprob: -10.179644584655762
    6. '               ' → logprob: -11.429644584655762
    7. '          ' → logprob: -13.929644584655762
    8. '	if' → logprob: -13.929644584655762
    9. ' ' → logprob: -14.054644584655762
    10. '```' → logprob: -14.679644584655762

Token 724: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0015024791937321424
    2. ' q' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.126502990722656
    4. '	q' → logprob: -16.876502990722656
    5. '(q' → logprob: -17.126502990722656
    6. ' ' → logprob: -17.501502990722656
    7. '$q' → logprob: -19.626502990722656
    8. '  ' → logprob: -19.751502990722656
    9. '
' → logprob: -20.251502990722656
    10. '*q' → logprob: -21.126502990722656

Token 725: ' *' (ID: 425)
  Prédit: '*q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*q' → logprob: -0.02567341923713684
    2. ' *' → logprob: -3.7756733894348145
    3. '*' → logprob: -6.0256733894348145
    4. 'q' → logprob: -12.275673866271973
    5. '**' → logprob: -13.650673866271973
    6. ' ' → logprob: -14.650673866271973
    7. '```' → logprob: -14.650673866271973
    8. '[q' → logprob: -15.025673866271973
    9. '   ' → logprob: -15.400673866271973
    10. '*s' → logprob: -15.900673866271973

Token 726: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.2664456789934775e-06
    2. ' q' → logprob: -13.625000953674316
    3. '	q' → logprob: -17.750001907348633
    4. ' ' → logprob: -17.875001907348633
    5. '   ' → logprob: -18.125001907348633
    6. '*q' → logprob: -19.750001907348633
    7. '
' → logprob: -20.000001907348633
    8. '  ' → logprob: -20.125001907348633
    9. '

' → logprob: -20.500001907348633
    10. '_q' → logprob: -20.625001907348633

Token 727: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.8609535694122314
    2. '<=' → logprob: -1.3609535694122314
    3. '<' → logprob: -1.6109535694122314
    4. ' <' → logprob: -2.1109535694122314
    5. ' ' → logprob: -12.360953330993652
    6. '   ' → logprob: -14.985953330993652
    7. '```' → logprob: -15.235953330993652
    8. '[' → logprob: -15.610953330993652
    9. '>' → logprob: -16.48595428466797
    10. '  ' → logprob: -16.86095428466797

Token 728: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0002613358374219388
    2. ' max' → logprob: -8.250261306762695
    3. '   ' → logprob: -18.625261306762695
    4. '	max' → logprob: -20.250261306762695
    5. '=max' → logprob: -20.875261306762695
    6. ' ' → logprob: -20.875261306762695
    7. '(max' → logprob: -20.875261306762695
    8. '[max' → logprob: -21.625261306762695
    9. '
' → logprob: -21.750261306762695
    10. '_max' → logprob: -22.125261306762695

Token 729: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: 0.0
    2. 'area' → logprob: -17.25
    3. 'Area' → logprob: -17.75
    4. '_' → logprob: -18.75
    5. ' _' → logprob: -19.0
    6. '_AREA' → logprob: -19.375
    7. '_are' → logprob: -20.25
    8. '\' → logprob: -20.375
    9. '_air' → logprob: -21.125
    10. '_angle' → logprob: -21.375

Token 730: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24276569485664368
    2. ':
' → logprob: -2.3677656650543213
    3. '               ' → logprob: -2.4927656650543213
    4. '           ' → logprob: -3.2427656650543213
    5. '       ' → logprob: -9.617765426635742
    6. ':
' → logprob: -10.992765426635742
    7. '                   ' → logprob: -11.367765426635742
    8. '   ' → logprob: -11.992765426635742
    9. '              ' → logprob: -13.367765426635742
    10. ' :
' → logprob: -13.492765426635742

Token 731: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011200665176147595
    2. '           ' → logprob: -9.25011157989502
    3. '                   ' → logprob: -12.25011157989502
    4. '       ' → logprob: -12.75011157989502
    5. 'break' → logprob: -13.00011157989502
    6. '	           ' → logprob: -13.00011157989502
    7. '              ' → logprob: -13.87511157989502
    8. '		       ' → logprob: -14.25011157989502
    9. '	       ' → logprob: -14.87511157989502
    10. ' break' → logprob: -14.87511157989502

Token 732: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0500214509665966
    2. '               ' → logprob: -3.0500214099884033
    3. ' break' → logprob: -7.300021648406982
    4. '                   ' → logprob: -7.300021648406982
    5. '	break' → logprob: -9.675021171569824
    6. '           ' → logprob: -11.050021171569824
    7. '   ' → logprob: -13.175021171569824
    8. '_break' → logprob: -14.425021171569824
    9. '                       ' → logprob: -15.425021171569824
    10. '```' → logprob: -15.550021171569824

Token 733: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10673398524522781
    2. '
' → logprob: -2.356734037399292
    3. '            
' → logprob: -5.731733798980713
    4. '<|end|>' → logprob: -6.606733798980713
    5. '  
' → logprob: -7.481733798980713
    6. '    
' → logprob: -8.356734275817871
    7. '		' → logprob: -8.606734275817871
    8. '        
' → logprob: -8.856734275817871
    9. '	       ' → logprob: -8.981734275817871
    10. '<|end|>' → logprob: -9.481734275817871

Token 734: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007328083273023367
    2. '       ' → logprob: -5.382328033447266
    3. '            
' → logprob: -7.632328033447266
    4. '<|end|>' → logprob: -7.757328033447266
    5. '        
' → logprob: -8.007328033447266
    6. '		' → logprob: -8.382328033447266
    7. '  
' → logprob: -8.382328033447266
    8. ' 
' → logprob: -9.007328033447266
    9. '```' → logprob: -9.007328033447266
    10. '​' → logprob: -9.257328033447266

Token 735: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025017203763127327
    2. 'for' → logprob: -4.025017261505127
    3. ' for' → logprob: -5.400017261505127
    4. '   ' → logprob: -7.275017261505127
    5. 'min' → logprob: -7.525017261505127
    6. '#' (adapté à ' #') → logprob: -7.900017261505127
    7. '       ' → logprob: -8.400016784667969
    8. 'p' → logprob: -9.025016784667969
    9. 'start' → logprob: -9.775016784667969
    10. '            
' → logprob: -9.900016784667969

Token 736: ' Calcul' (ID: 57243)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.494271457195282
    2. 'p' → logprob: -1.1192715167999268
    3. 'for' → logprob: -3.1192715167999268
    4. '#' → logprob: -4.744271278381348
    5. 'left' → logprob: -5.119271278381348
    6. 'max' → logprob: -6.244271278381348
    7. 'ratio' → logprob: -6.994271278381348
    8. 'start' → logprob: -7.494271278381348
    9. 'low' → logprob: -7.494271278381348
    10. 'lower' → logprob: -8.494271278381348

Token 737: 'er' (ID: 259)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6438287496566772
    2. '           ' → logprob: -1.0188287496566772
    3. ' min' → logprob: -2.643828868865967
    4. '_min' → logprob: -4.143828868865967
    5. 'max' → logprob: -4.268828868865967
    6. 'p' → logprob: -5.518828868865967
    7. 'minimum' → logprob: -6.143828868865967
    8. ' of' → logprob: -6.518828868865967
    9. ' max' → logprob: -6.768828868865967
    10. 's' → logprob: -6.768828868865967

Token 738: ' borne' (ID: 111819)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.05626985803246498
    2. 'min' → logprob: -2.931269884109497
    3. 'le' → logprob: -7.806269645690918
    4. '   ' → logprob: -7.931269645690918
    5. 'max' → logprob: -8.806269645690918
    6. 'start' → logprob: -9.181269645690918
    7. '           ' → logprob: -9.181269645690918
    8. ' p' → logprob: -9.556269645690918
    9. 'minimum' → logprob: -10.306269645690918
    10. '       ' → logprob: -10.431269645690918

Token 739: ' minimale' (ID: 143217)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5807294249534607
    2. 'min' → logprob: -1.0807294845581055
    3. 'inf' → logprob: -2.5807294845581055
    4. '_min' → logprob: -4.5807294845581055
    5. '_p' → logprob: -5.4557294845581055
    6. 'infer' → logprob: -5.8307294845581055
    7. 'max' → logprob: -6.3307294845581055
    8. '_inf' → logprob: -6.5807294845581055
    9. ' minimale' → logprob: -6.5807294845581055
    10. 'sup' → logprob: -7.0807294845581055

Token 740: ' pour' (ID: 1930)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2251868098974228
    2. '           ' → logprob: -1.725186824798584
    3. '_p' → logprob: -3.850186824798584
    4. ' p' → logprob: -6.975186824798584
    5. '=' → logprob: -7.475186824798584
    6. ' =' → logprob: -8.850186347961426
    7. 'for' → logprob: -9.475186347961426
    8. ',' → logprob: -9.850186347961426
    9. 'min' → logprob: -9.850186347961426
    10. ':' → logprob: -9.850186347961426

Token 741: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.452426608419046e-05
    2. ' p' → logprob: -10.37503433227539
    3. '_p' → logprob: -13.12503433227539
    4. '```' → logprob: -15.56253433227539
    5. '#' → logprob: -15.68753433227539
    6. '`' → logprob: -15.93753433227539
    7. 'q' → logprob: -16.25003433227539
    8. '<p' → logprob: -16.56253433227539
    9. ''p' → logprob: -16.81253433227539
    10. 'import' → logprob: -16.81253433227539

Token 742: ' en' (ID: 469)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5091536045074463
    2. '=' → logprob: -1.5091536045074463
    3. 'min' → logprob: -2.5091536045074463
    4. '_min' → logprob: -3.6341536045074463
    5. '=min' → logprob: -3.6341536045074463
    6. ' =' → logprob: -3.7591536045074463
    7. 'p' → logprob: -4.134153366088867
    8. '=p' → logprob: -6.259153366088867
    9. ' min' → logprob: -7.634153366088867
    10. '[min' → logprob: -8.509153366088867

Token 743: ' fonction' (ID: 17610)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4742872714996338
    2. 'p' → logprob: -1.7242872714996338
    3. 'math' → logprob: -1.8492872714996338
    4. 'q' → logprob: -3.974287271499634
    5. 'max' → logprob: -5.349287033081055
    6. '=int' → logprob: -5.474287033081055
    7. 'ceil' → logprob: -5.724287033081055
    8. 'pr' → logprob: -5.724287033081055
    9. 'python' → logprob: -6.099287033081055
    10. 'ratio' → logprob: -7.099287033081055

Token 744: ' du' (ID: 1462)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6020517945289612
    2. '           ' → logprob: -1.6020517349243164
    3. 'du' → logprob: -2.1020517349243164
    4. ' du' → logprob: -2.4770517349243164
    5. ' de' → logprob: -3.3520517349243164
    6. 'del' → logprob: -5.352051734924316
    7. 'd' → logprob: -5.977051734924316
    8. 'des' → logprob: -7.352051734924316
    9. '=' → logprob: -7.852051734924316
    10. 'p' → logprob: -8.102051734924316

Token 745: ' ratio' (ID: 18051)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5464430451393127
    2. 'math' → logprob: -1.296442985534668
    3. 'min' → logprob: -2.046442985534668
    4. 'import' → logprob: -5.171442985534668
    5. '(math' → logprob: -5.671442985534668
    6. '(min' → logprob: -5.796442985534668
    7. 'max' → logprob: -6.296442985534668
    8. '(q' → logprob: -6.421442985534668
    9. 'int' → logprob: -6.421442985534668
    10. ' math' → logprob: -8.546442985534668

Token 746: ' et' (ID: 859)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09710905700922012
    2. '=' → logprob: -3.347109079360962
    3. 'min' → logprob: -3.347109079360962
    4. 'p' → logprob: -4.972108840942383
    5. '=min' → logprob: -5.097108840942383
    6. '_min' → logprob: -6.222108840942383
    7. 'import' → logprob: -6.597108840942383
    8. ' min' → logprob: -6.597108840942383
    9. '(min' → logprob: -7.222108840942383
    10. ' =' → logprob: -7.347108840942383

Token 747: ' de' (ID: 334)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2969409227371216
    2. 'q' → logprob: -1.7969409227371216
    3. 'min' → logprob: -2.796940803527832
    4. 'de' → logprob: -5.046940803527832
    5. 'm' → logprob: -5.171940803527832
    6. ' q' → logprob: -5.796940803527832
    7. 'du' → logprob: -6.046940803527832
    8. 'a' → logprob: -6.171940803527832
    9. ' max' → logprob: -6.171940803527832
    10. 'la' → logprob: -6.296940803527832

Token 748: ' p' (ID: 275)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.8206473871250637e-05
    2. ' q' → logprob: -10.500028610229492
    3. 'max' → logprob: -15.250028610229492
    4. 'math' → logprob: -16.500028610229492
    5. 'min' → logprob: -16.625028610229492
    6. '(q' → logprob: -16.750028610229492
    7. '   ' → logprob: -17.000028610229492
    8. '$q' → logprob: -17.250028610229492
    9. 'float' → logprob: -17.375028610229492
    10. 'la' → logprob: -17.375028610229492

Token 749: ' <=' (ID: 5017)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20676396787166595
    2. ' =' → logprob: -2.581763982772827
    3. 'q' → logprob: -3.331763982772827
    4. '=q' → logprob: -3.456763982772827
    5. '>=' → logprob: -4.206763744354248
    6. ' q' → logprob: -5.206763744354248
    7. '/q' → logprob: -5.456763744354248
    8. 'import' → logprob: -5.706763744354248
    9. ':' → logprob: -6.206763744354248
    10. '           ' → logprob: -6.831763744354248

Token 750: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.512236498361744e-07
    2. 'b' → logprob: -15.375000953674316
    3. ' q' → logprob: -15.375000953674316
    4. 'a' → logprob: -18.25
    5. '100' → logprob: -19.25
    6. '(q' → logprob: -19.625
    7. '[q' → logprob: -19.75
    8. 'int' → logprob: -19.75
    9. '	q' → logprob: -20.0
    10. 'qb' → logprob: -20.25

Token 751: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7508907318115234
    2. 'p' → logprob: -1.6258907318115234
    3. 'import' → logprob: -1.7508907318115234
    4. '=' → logprob: -2.2508907318115234
    5. '=int' → logprob: -4.000890731811523
    6. 'from' → logprob: -4.250890731811523
    7. 'int' → logprob: -4.375890731811523
    8. ' =' → logprob: -6.500890731811523
    9. 'min' → logprob: -6.750890731811523
    10. '>=' → logprob: -7.125890731811523

Token 752: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00027337539358995855
    2. 'import' → logprob: -9.875273704528809
    3. '	       ' → logprob: -10.375273704528809
    4. 'p' → logprob: -10.625273704528809
    5. '            
' → logprob: -10.875273704528809
    6. '       ' → logprob: -11.000273704528809
    7. ',' → logprob: -11.125273704528809
    8. '		' → logprob: -11.125273704528809
    9. '=' → logprob: -11.375273704528809
    10. '<|end|>' → logprob: -11.375273704528809

Token 753: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.4583905339241028
    2. 'p' → logprob: -1.583390474319458
    3. 'import' → logprob: -2.208390474319458
    4. '           ' → logprob: -3.083390474319458
    5. 'from' → logprob: -5.458390712738037
    6. ' min' → logprob: -6.583390712738037
    7. 'start' → logprob: -8.333390235900879
    8. 'minimum' → logprob: -8.583390235900879
    9. ',min' → logprob: -8.708390235900879
    10. '_min' → logprob: -9.458390235900879

Token 754: ' On' (ID: 2160)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.14830127358436584
    2. 'p' → logprob: -2.648301362991333
    3. 'import' → logprob: -2.773301362991333
    4. 'from' → logprob: -6.023301124572754
    5. '           ' → logprob: -6.773301124572754
    6. ' min' → logprob: -7.148301124572754
    7. 'max' → logprob: -9.898301124572754
    8. ' import' → logprob: -9.898301124572754
    9. ' p' → logprob: -10.148301124572754
    10. 'start' → logprob: -10.648301124572754

Token 755: ' a' (ID: 261)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0990641862154007
    2. 'min' → logprob: -3.7240641117095947
    3. 'continue' → logprob: -4.349064350128174
    4. 'from' → logprob: -4.474064350128174
    5. 'max' → logprob: -4.474064350128174
    6. '           ' → logprob: -5.224064350128174
    7. 'importe' → logprob: -5.349064350128174
    8. 'for' → logprob: -5.599064350128174
    9. '_min' → logprob: -5.724064350128174
    10. 'cherche' → logprob: -5.849064350128174

Token 756: ' a' (ID: 261)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.14864151179790497
    2. 'min' → logprob: -2.523641586303711
    3. 'import' → logprob: -3.023641586303711
    4. 'max' → logprob: -5.898641586303711
    5. '           ' → logprob: -6.023641586303711
    6. ' p' → logprob: -6.523641586303711
    7. 'from' → logprob: -6.648641586303711
    8. ' min' → logprob: -7.148641586303711
    9. 'minimum' → logprob: -8.648641586303711
    10. '_min' → logprob: -9.273641586303711

Token 757: '/b' (ID: 7611)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.38576623797416687
    2. ' =' → logprob: -2.7607662677764893
    3. '/q' → logprob: -3.0107662677764893
    4. 'q' → logprob: -3.1357662677764893
    5. '<=' → logprob: -3.5107662677764893
    6. '/' → logprob: -3.6357662677764893
    7. '=' → logprob: -4.01076602935791
    8. 'import' → logprob: -4.26076602935791
    9. ' <=' → logprob: -4.63576602935791
    10. ' /' → logprob: -4.76076602935791

Token 758: ' <=' (ID: 5017)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.183387041091919
    2. ' <=' → logprob: -1.183387041091919
    3. '<=' → logprob: -1.433387041091919
    4. '*' → logprob: -2.808387041091919
    5. '           ' → logprob: -3.433387041091919
    6. '*p' → logprob: -4.43338680267334
    7. '*q' → logprob: -4.68338680267334
    8. '=' → logprob: -5.18338680267334
    9. ',' → logprob: -5.30838680267334
    10. 'p' → logprob: -5.55838680267334

Token 759: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01673598401248455
    2. 'q' → logprob: -4.766736030578613
    3. ' p' → logprob: -4.891736030578613
    4. ' q' → logprob: -8.516736030578613
    5. '(p' → logprob: -9.141736030578613
    6. ' (' → logprob: -9.516736030578613
    7. '   ' → logprob: -10.141736030578613
    8. ' ' → logprob: -10.641736030578613
    9. '           ' → logprob: -10.891736030578613
    10. '
' → logprob: -11.016736030578613

Token 760: '/q' (ID: 65772)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.5274300575256348
    2. ' /' → logprob: -1.6524300575256348
    3. '/q' → logprob: -2.0274300575256348
    4. ' <=' → logprob: -3.2774300575256348
    5. ' *' → logprob: -3.7774300575256348
    6. '*' → logprob: -4.277430057525635
    7. '<=' → logprob: -5.027430057525635
    8. 'q' → logprob: -6.152430057525635
    9. '*q' → logprob: -6.902430057525635
    10. '<|end|>' → logprob: -7.402430057525635

Token 761: ' <=' (ID: 5017)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009383565746247768
    2. '            
' → logprob: -5.884383678436279
    3. ',' → logprob: -6.634383678436279
    4. ' and' → logprob: -6.759383678436279
    5. '
' → logprob: -6.884383678436279
    6. '       ' → logprob: -7.509383678436279
    7. ':' → logprob: -7.884383678436279
    8. '               ' → logprob: -8.009383201599121
    9. ':
' → logprob: -8.134383201599121
    10. ' *' → logprob: -8.259383201599121

Token 762: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -18.12504005432129
    4. '```' → logprob: -19.62504005432129
    5. ' ' → logprob: -20.50004005432129
    6. ',' → logprob: -20.50004005432129
    7. '  ' → logprob: -20.87504005432129
    8. '.' → logprob: -21.12504005432129
    9. '[' → logprob: -21.25004005432129
    10. '１' → logprob: -21.37504005432129

Token 763: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -17.62500762939453
    4. '```' → logprob: -17.62500762939453
    5. 'q' → logprob: -18.50000762939453
    6. '۱' → logprob: -19.75000762939453
    7. '  ' → logprob: -19.87500762939453
    8. '<|end|>' → logprob: -20.00000762939453
    9. '`' → logprob: -20.18750762939453
    10. '
' → logprob: -20.18750762939453

Token 764: ' =>' (ID: 871)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007499197497963905
    2. '            
' → logprob: -5.2574992179870605
    3. '
' → logprob: -7.1324992179870605
    4. ' 
' → logprob: -7.6324992179870605
    5. '       ' → logprob: -8.257498741149902
    6. '  
' → logprob: -8.882498741149902
    7. ',' → logprob: -9.007498741149902
    8. '        
' → logprob: -9.632498741149902
    9. '\n' → logprob: -9.757498741149902
    10. '<|end|>' → logprob: -10.257498741149902

Token 765: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.022208813577890396
    2. ' p' → logprob: -4.0222086906433105
    3. '           ' → logprob: -5.5222086906433105
    4. 'q' → logprob: -10.897209167480469
    5. '               ' → logprob: -11.522209167480469
    6. 'min' → logprob: -11.647209167480469
    7. '   ' → logprob: -12.522209167480469
    8. 'a' → logprob: -13.022209167480469
    9. '       ' → logprob: -13.147209167480469
    10. '(p' → logprob: -14.022209167480469

Token 766: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.4036722779273987
    2. '=' → logprob: -1.403672218322754
    3. ' >=' → logprob: -3.028672218322754
    4. ' =' → logprob: -3.278672218322754
    5. '≥' → logprob: -8.028672218322754
    6. '<=' → logprob: -10.528672218322754
    7. '>' → logprob: -12.153672218322754
    8. ')>=' → logprob: -12.278672218322754
    9. ' ≥' → logprob: -12.528672218322754
    10. ']>=' → logprob: -12.653672218322754

Token 767: ' a' (ID: 261)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.11514399200677872
    2. 'int' → logprob: -2.6151440143585205
    3. '(math' → logprob: -3.6151440143585205
    4. '(q' → logprob: -4.990143775939941
    5. 'q' → logprob: -7.240143775939941
    6. '(int' → logprob: -7.490143775939941
    7. ' math' → logprob: -7.740143775939941
    8. 'ceil' → logprob: -9.740143775939941
    9. '(a' → logprob: -9.865143775939941
    10. 'max' → logprob: -10.490143775939941

Token 768: '*q' (ID: 136288)
  Prédit: '*q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*q' → logprob: -1.075700283050537
    2. '<|end|>' → logprob: -1.325700283050537
    3. ' *' → logprob: -1.575700283050537
    4. '*' → logprob: -2.325700283050537
    5. 'q' → logprob: -3.075700283050537
    6. '<|end|>' → logprob: -5.075700283050537
    7. '   ' → logprob: -5.075700283050537
    8. '/' → logprob: -5.450700283050537
    9. '*i' → logprob: -5.700700283050537
    10. ',' → logprob: -5.825700283050537

Token 769: '/b' (ID: 7611)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6171256303787231
    2. '*q' → logprob: -1.7421256303787231
    3. ' /' → logprob: -2.2421255111694336
    4. '*' → logprob: -2.6171255111694336
    5. '//' → logprob: -3.8671255111694336
    6. ' and' → logprob: -4.367125511169434
    7. '<|end|>' → logprob: -4.617125511169434
    8. ',' → logprob: -4.742125511169434
    9. '/' → logprob: -4.867125511169434
    10. '/q' → logprob: -4.867125511169434

Token 770: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015745744109153748
    2. '
' → logprob: -4.265745639801025
    3. '            
' → logprob: -6.765745639801025
    4. '       ' → logprob: -8.890746116638184
    5. ',' → logprob: -9.515746116638184
    6. '        
' → logprob: -10.390746116638184
    7. ' 
' → logprob: -10.640746116638184
    8. '  
' → logprob: -10.640746116638184
    9. '    
' → logprob: -10.890746116638184
    10. '		' → logprob: -11.515746116638184

Token 771: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002604195149615407
    2. '            
' → logprob: -6.877604007720947
    3. ' p' → logprob: -7.752604007720947
    4. '
' → logprob: -8.252604484558105
    5. 'p' → logprob: -8.252604484558105
    6. ',' → logprob: -8.502604484558105
    7. ' ' → logprob: -9.252604484558105
    8. '       ' → logprob: -10.127604484558105
    9. '        
' → logprob: -10.502604484558105
    10. ' 
' → logprob: -10.627604484558105

Token 772: ' p' (ID: 275)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0057007730938494205
    2. 'p' (adapté à ' p') → logprob: -5.255700588226318
    3. ' p' → logprob: -7.880700588226318
    4. ',' → logprob: -10.505701065063477
    5. '       ' → logprob: -11.130701065063477
    6. '            
' → logprob: -11.255701065063477
    7. '          ' → logprob: -12.380701065063477
    8. ' ' → logprob: -12.380701065063477
    9. '               ' → logprob: -12.630701065063477
    10. '   ' → logprob: -12.630701065063477

Token 773: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.0002141458389814943
    2. 'min' → logprob: -8.500214576721191
    3. '_lower' → logprob: -12.000214576721191
    4. '_' → logprob: -14.250214576721191
    5. '_floor' → logprob: -14.625214576721191
    6. '_low' → logprob: -14.750214576721191
    7. '_threshold' → logprob: -14.750214576721191
    8. '_start' → logprob: -14.875214576721191
    9. ' =' → logprob: -14.875214576721191
    10. '_max' → logprob: -15.125214576721191

Token 774: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023255378007888794
    2. ' =' → logprob: -3.7732553482055664
    3. '=int' → logprob: -11.773255348205566
    4. '=float' → logprob: -13.898255348205566
    5. '_val' → logprob: -14.523255348205566
    6. '＝' → logprob: -15.898255348205566
    7. '_float' → logprob: -15.898255348205566
    8. ' ' → logprob: -16.148256301879883
    9. '_value' → logprob: -16.398256301879883
    10. '>' → logprob: -16.523256301879883

Token 775: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.0762544721364975
    2. 'int' → logprob: -3.326254367828369
    3. '(math' → logprob: -3.326254367828369
    4. '(int' → logprob: -6.701254367828369
    5. ' math' → logprob: -8.326254844665527
    6. '(a' → logprob: -9.701254844665527
    7. 'max' → logprob: -11.576254844665527
    8. '(q' → logprob: -11.826254844665527
    9. ' int' → logprob: -12.201254844665527
    10. ' (' → logprob: -12.951254844665527

Token 776: '.ceil' (ID: 60295)
  Prédit: '.ceil'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ceil' → logprob: -6.420598219847307e-05
    2. 'ceil' → logprob: -9.8750638961792
    3. '.floor' → logprob: -11.3750638961792
    4. '.' → logprob: -13.8750638961792
    5. ' ceil' → logprob: -15.1250638961792
    6. '```' → logprob: -17.875064849853516
    7. '.ce' → logprob: -19.125064849853516
    8. 'Ce' → logprob: -19.750064849853516
    9. '   ' → logprob: -19.875064849853516
    10. 'import' → logprob: -20.000064849853516

Token 777: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.28411999344825745
    2. '(a' → logprob: -1.784119963645935
    3. '((' → logprob: -2.5341200828552246
    4. 'min' → logprob: -10.284119606018066
    5. '(' → logprob: -11.909119606018066
    6. 'a' → logprob: -12.909119606018066
    7. '(q' → logprob: -13.159119606018066
    8. '(m' → logprob: -14.409119606018066
    9. '(i' → logprob: -14.534119606018066
    10. '(max' → logprob: -14.659119606018066

Token 778: '_ratio' (ID: 45680)
  Prédit: '_ratio'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ratio' → logprob: -4.668304245569743e-05
    2. '(q' → logprob: -10.500046730041504
    3. '(' → logprob: -11.750046730041504
    4. '((' → logprob: -12.875046730041504
    5. '(p' → logprob: -13.125046730041504
    6. '(a' → logprob: -13.500046730041504
    7. 'ratio' → logprob: -13.500046730041504
    8. '_rat' → logprob: -14.250046730041504
    9. '_RATIO' → logprob: -15.000046730041504
    10. '(r' → logprob: -15.000046730041504

Token 779: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20371569693088531
    2. '*' → logprob: -1.7037156820297241
    3. '*q' → logprob: -6.078715801239014
    4. ' ' → logprob: -12.578715324401855
    5. '   ' → logprob: -13.828715324401855
    6. ' ' → logprob: -14.328715324401855
    7. '*object' → logprob: -14.453715324401855
    8. '*p' → logprob: -14.703715324401855
    9. '```' → logprob: -14.703715324401855
    10. 'q' → logprob: -14.953715324401855

Token 780: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. ' q' → logprob: -15.75
    3. '	q' → logprob: -20.0
    4. '$q' → logprob: -20.625
    5. '*q' → logprob: -20.75
    6. '(q' → logprob: -21.625
    7. 'qml' → logprob: -21.875
    8. '[q' → logprob: -22.0
    9. ''q' → logprob: -23.0
    10. '_q' → logprob: -23.375

Token 781: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.160971628967673e-05
    2. ')
' → logprob: -9.500082015991211
    3. ' )' → logprob: -12.125082015991211
    4. '           ' → logprob: -15.250082015991211
    5. '       ' → logprob: -15.250082015991211
    6. ')
' → logprob: -15.500082015991211
    7. '   ' → logprob: -16.12508201599121
    8. ')

' → logprob: -16.50008201599121
    9. '),' → logprob: -16.62508201599121
    10. '**' → logprob: -16.75008201599121

Token 782: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24255910515785217
    2. '       ' → logprob: -2.2425591945648193
    3. '<|end|>' → logprob: -2.4925591945648193
    4. '
' → logprob: -4.11755895614624
    5. '<|end|>' → logprob: -5.61755895614624
    6. '            
' → logprob: -6.49255895614624
    7. '        
' → logprob: -6.49255895614624
    8. '#' → logprob: -7.61755895614624
    9. 'if' → logprob: -7.86755895614624
    10. 'while' → logprob: -7.86755895614624

Token 783: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.7453904747962952
    2. 'while' → logprob: -2.1203904151916504
    3. 'for' → logprob: -2.3703904151916504
    4. 'if' → logprob: -2.3703904151916504
    5. 'left' → logprob: -2.6203904151916504
    6. '           ' → logprob: -2.7453904151916504
    7. 'idx' → logprob: -3.4953904151916504
    8. '       ' → logprob: -3.7453904151916504
    9. 'j' → logprob: -4.87039041519165
    10. 'import' → logprob: -4.87039041519165

Token 784: ' Cher' (ID: 48756)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8432211875915527
    2. 'left' → logprob: -1.2182211875915527
    3. 'if' → logprob: -1.3432211875915527
    4. 'import' → logprob: -4.968221187591553
    5. 'idx' → logprob: -5.843221187591553
    6. 'while' → logprob: -7.218221187591553
    7. 'from' → logprob: -7.218221187591553
    8. 'for' → logprob: -7.343221187591553
    9. 'pos' → logprob: -8.468221664428711
    10. 'l' → logprob: -8.593221664428711

Token 785: 'cher' (ID: 6665)
  Prédit: 'cher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cher' → logprob: -0.014147520996630192
    2. 'ch' → logprob: -5.014147758483887
    3. '#' → logprob: -5.264147758483887
    4. 'chez' → logprob: -7.014147758483887
    5. '       ' → logprob: -7.639147758483887
    6. 'che' → logprob: -8.264147758483887
    7. '   ' → logprob: -8.264147758483887
    8. 'chercher' → logprob: -9.264147758483887
    9. 'cherche' → logprob: -9.514147758483887
    10. '           ' → logprob: -10.514147758483887

Token 786: ' parmi' (ID: 51713)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.33480310440063477
    2. '#' → logprob: -1.7098031044006348
    3. 'j' → logprob: -3.5848031044006348
    4. 'p' → logprob: -3.8348031044006348
    5. 'for' → logprob: -4.084803104400635
    6. ' left' → logprob: -4.209803104400635
    7. ' j' → logprob: -4.584803104400635
    8. ' for' → logprob: -6.084803104400635
    9. 'l' → logprob: -6.084803104400635
    10. 'idx' → logprob: -6.084803104400635

Token 787: ' les' (ID: 1341)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.002086023800075054
    2. '#' → logprob: -6.377086162567139
    3. ' primes' → logprob: -8.75208568572998
    4. 'p' → logprob: -9.75208568572998
    5. 'the' → logprob: -10.25208568572998
    6. '   ' → logprob: -10.25208568572998
    7. 'for' → logprob: -10.75208568572998
    8. 'left' → logprob: -10.87708568572998
    9. '[' → logprob: -12.12708568572998
    10. '       ' → logprob: -12.25208568572998

Token 788: ' premiers' (ID: 59140)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.2848564386367798
    2. '#' → logprob: -1.4098564386367798
    3. 'import' → logprob: -6.53485631942749
    4. 'p' → logprob: -7.65985631942749
    5. 'left' → logprob: -7.65985631942749
    6. 'idx' → logprob: -8.034856796264648
    7. 'for' → logprob: -8.284856796264648
    8. 'j' → logprob: -8.659856796264648
    9. 'indices' → logprob: -9.034856796264648
    10. 'index' → logprob: -9.284856796264648

Token 789: ' p' (ID: 275)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4223724901676178
    2. 'left' → logprob: -2.047372579574585
    3. 'import' → logprob: -2.547372579574585
    4. '       ' → logprob: -3.047372579574585
    5. 'idx' → logprob: -3.547372579574585
    6. ' left' → logprob: -4.172372341156006
    7. ' idx' → logprob: -4.297372341156006
    8. 'index' → logprob: -5.047372341156006
    9. '           ' → logprob: -5.297372341156006
    10. ' #' → logprob: -5.797372341156006

Token 790: ' tel' (ID: 10716)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6391228437423706
    2. 'import' → logprob: -1.3891228437423706
    3. 'left' → logprob: -2.13912296295166
    4. ',' → logprob: -3.51412296295166
    5. 'idx' → logprob: -3.63912296295166
    6. 'for' → logprob: -4.51412296295166
    7. '       ' → logprob: -4.88912296295166
    8. 'index' → logprob: -5.13912296295166
    9. '   ' → logprob: -5.76412296295166
    10. '_idx' → logprob: -5.76412296295166

Token 791: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.09952346980571747
    2. '=' → logprob: -3.4745235443115234
    3. 'possible' → logprob: -4.224523544311523
    4. ' que' → logprob: -4.224523544311523
    5. 'that' → logprob: -4.974523544311523
    6. 'p' → logprob: -5.099523544311523
    7. 'for' → logprob: -5.724523544311523
    8. 'ques' → logprob: -6.224523544311523
    9. 'qu' → logprob: -6.724523544311523
    10. 's' → logprob: -6.974523544311523

Token 792: ':
' (ID: 734)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.070975071750581e-05
    2. ' p' → logprob: -10.625030517578125
    3. 'pr' → logprob: -12.875030517578125
    4. '
' → logprob: -13.625030517578125
    5. '           ' → logprob: -13.750030517578125
    6. 'prime' → logprob: -14.500030517578125
    7. ' primes' → logprob: -15.000030517578125
    8. '(p' → logprob: -15.125030517578125
    9. '            
' → logprob: -15.625030517578125
    10. '#' → logprob: -16.500030517578125

Token 793: '           ' (ID: 352)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.2867773473262787
    2. 'left' → logprob: -1.911777377128601
    3. '           ' → logprob: -2.7867772579193115
    4. ' for' → logprob: -4.286777496337891
    5. '       ' → logprob: -4.661777496337891
    6. ' idx' → logprob: -5.411777496337891
    7. ' if' → logprob: -5.661777496337891
    8. '#' → logprob: -6.411777496337891
    9. 'for' → logprob: -6.661777496337891
    10. 'idx' → logprob: -6.786777496337891

Token 794: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.16212695837020874
    2. ' left' → logprob: -2.6621270179748535
    3. 'for' → logprob: -3.1621270179748535
    4. ' for' → logprob: -4.2871270179748535
    5. '           ' → logprob: -5.2871270179748535
    6. 'idx' → logprob: -5.5371270179748535
    7. 'j' → logprob: -5.9121270179748535
    8. 'if' → logprob: -6.1621270179748535
    9. '#' (adapté à ' #') → logprob: -6.1621270179748535
    10. 'p' → logprob: -6.2871270179748535

Token 795: ' p' (ID: 275)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.14157170057296753
    2. 'for' → logprob: -2.8915717601776123
    3. '#' → logprob: -3.5165717601776123
    4. 'p' → logprob: -3.6415717601776123
    5. 'idx' → logprob: -5.016571521759033
    6. 'import' → logprob: -5.766571521759033
    7. 'if' → logprob: -5.891571521759033
    8. '           ' → logprob: -6.391571521759033
    9. ' left' → logprob: -6.516571521759033
    10. 'while' → logprob: -6.641571521759033

Token 796: ' <=' (ID: 5017)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.4086240231990814
    2. ' >=' → logprob: -1.2836240530014038
    3. '<=' → logprob: -3.7836239337921143
    4. '_candidates' → logprob: -4.408624172210693
    5. ' <=' → logprob: -4.783624172210693
    6. '_index' → logprob: -5.158624172210693
    7. 's' → logprob: -6.533624172210693
    8. '≥' → logprob: -6.658624172210693
    9. '_idx' → logprob: -6.658624172210693
    10. 'for' → logprob: -7.408624172210693

Token 797: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0007100477814674377
    2. ' q' → logprob: -7.2507100105285645
    3. '<|end|>' → logprob: -17.250709533691406
    4. '	q' → logprob: -17.500709533691406
    5. '?q' → logprob: -18.625709533691406
    6. 'p' → logprob: -18.750709533691406
    7. '
' → logprob: -19.250709533691406
    8. '[q' → logprob: -19.250709533691406
    9. 'qml' → logprob: -19.375709533691406
    10. ' ' → logprob: -19.750709533691406

Token 798: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0502538681030273
    2. ' and' → logprob: -1.5502538681030273
    3. '<|end|>' → logprob: -1.9252538681030273
    4. '           ' → logprob: -2.0502538681030273
    5. '       ' → logprob: -2.6752538681030273
    6. ',' → logprob: -2.9252538681030273
    7. '<|end|>' → logprob: -3.6752538681030273
    8. 'and' → logprob: -5.050253868103027
    9. '            
' → logprob: -5.925253868103027
    10. '   ' → logprob: -6.550253868103027

Token 799: 'car' (ID: 6830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06760797649621964
    2. 'and' → logprob: -3.817607879638672
    3. ' and' → logprob: -4.317607879638672
    4. '           ' → logprob: -4.442607879638672
    5. ')
' → logprob: -4.692607879638672
    6. ',' → logprob: -5.817607879638672
    7. '),' → logprob: -5.942607879638672
    8. 'left' → logprob: -7.317607879638672
    9. '       ' → logprob: -7.567607879638672
    10. '
' → logprob: -7.942607879638672

Token 800: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.04793841391801834
    2. ' p' → logprob: -3.172938346862793
    3. ')' → logprob: -5.797938346862793
    4. '           ' → logprob: -7.297938346862793
    5. 'q' → logprob: -7.672938346862793
    6. '#' → logprob: -8.797938346862793
    7. '               ' → logprob: -9.422938346862793
    8. ' on' → logprob: -9.547938346862793
    9. ' q' → logprob: -9.672938346862793
    10. '),' → logprob: -10.172938346862793

Token 801: '/q' (ID: 65772)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.21203754842281342
    2. ' <=' → logprob: -1.9620375633239746
    3. ')' → logprob: -3.2120375633239746
    4. ' and' → logprob: -5.337037563323975
    5. ')<=' → logprob: -6.587037563323975
    6. 'and' → logprob: -6.712037563323975
    7. '<|end|>' → logprob: -6.712037563323975
    8. '>=' → logprob: -7.087037563323975
    9. '),' → logprob: -8.087037086486816
    10. '=' → logprob: -9.087037086486816

Token 802: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5782604813575745
    2. ')' → logprob: -1.5782604217529297
    3. ' and' → logprob: -1.7032604217529297
    4. ' <=' → logprob: -3.4532604217529297
    5. 'and' → logprob: -4.07826042175293
    6. ')<=' → logprob: -6.70326042175293
    7. '<|end|>' → logprob: -7.95326042175293
    8. '),' → logprob: -8.57826042175293
    9. ')
' → logprob: -8.82826042175293
    10. ' )' → logprob: -9.57826042175293

Token 803: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010330495424568653
    2. ' ' → logprob: -6.876032829284668
    3. 'q' → logprob: -16.001033782958984
    4. ')' → logprob: -17.251033782958984
    5. ' q' → logprob: -17.251033782958984
    6. '   ' → logprob: -17.376033782958984
    7. '```' → logprob: -18.751033782958984
    8. ' ' → logprob: -18.876033782958984
    9. '  ' → logprob: -19.251033782958984
    10. '0' → logprob: -19.626033782958984

Token 804: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7848862373502925e-05
    2. ' ' → logprob: -10.500027656555176
    3. ')' → logprob: -16.250028610229492
    4. '   ' → logprob: -16.875028610229492
    5. '```' → logprob: -17.375028610229492
    6. '[' → logprob: -18.375028610229492
    7. 'q' → logprob: -18.500028610229492
    8. ' ' → logprob: -18.625028610229492
    9. '=' → logprob: -19.125028610229492
    10. '
' → logprob: -19.375028610229492

Token 805: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06295151263475418
    2. '           ' → logprob: -3.5629515647888184
    3. ' and' → logprob: -4.187951564788818
    4. ')
' → logprob: -4.312951564788818
    5. ',' → logprob: -6.437951564788818
    6. '),' → logprob: -6.562951564788818
    7. 'and' → logprob: -7.312951564788818
    8. ')

' → logprob: -9.31295108795166
    9. '       ' → logprob: -9.56295108795166
    10. ' )' → logprob: -9.56295108795166

Token 806: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19185294210910797
    2. '       ' → logprob: -2.3168530464172363
    3. 'left' → logprob: -3.4418530464172363
    4. ' left' → logprob: -3.8168530464172363
    5. '   ' → logprob: -5.691853046417236
    6. '		' → logprob: -5.816853046417236
    7. ',' → logprob: -5.941853046417236
    8. '	left' → logprob: -6.316853046417236
    9. '	   ' → logprob: -6.691853046417236
    10. '<|end|>' → logprob: -6.816853046417236

Token 807: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.07141827791929245
    2. ' left' → logprob: -3.321418285369873
    3. 'import' → logprob: -4.571418285369873
    4. '           ' → logprob: -4.571418285369873
    5. 'idx' → logprob: -5.071418285369873
    6. '#' (adapté à ' #') → logprob: -6.446418285369873
    7. 'p' → logprob: -6.821418285369873
    8. 'if' → logprob: -7.071418285369873
    9. '       ' → logprob: -7.446418285369873
    10. '	left' → logprob: -8.071417808532715

Token 808: ' p' (ID: 275)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.015134421177208424
    2. 'idx' → logprob: -5.015134334564209
    3. 'if' → logprob: -6.015134334564209
    4. 'import' → logprob: -6.265134334564209
    5. '#' → logprob: -6.515134334564209
    6. ' left' → logprob: -7.265134334564209
    7. 'p' → logprob: -7.390134334564209
    8. 'for' → logprob: -7.390134334564209
    9. 'pos' → logprob: -8.765134811401367
    10. '           ' → logprob: -8.765134811401367

Token 809: ' >=' (ID: 5064)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.3489970862865448
    2. ' <=' → logprob: -1.3489971160888672
    3. '>=' → logprob: -4.473997116088867
    4. 's' → logprob: -5.223997116088867
    5. ' =' → logprob: -5.223997116088867
    6. '=' → logprob: -5.723997116088867
    7. ' >=' → logprob: -5.973997116088867
    8. '_candidates' → logprob: -6.098997116088867
    9. '_index' → logprob: -6.723997116088867
    10. '<|end|>' → logprob: -7.098997116088867

Token 810: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00020354038861114532
    2. ' p' → logprob: -8.500203132629395
    3. '<|end|>' → logprob: -18.50020408630371
    4. '<p' → logprob: -18.62520408630371
    5. '           ' → logprob: -19.62520408630371
    6. '_p' → logprob: -19.87520408630371
    7. '   ' → logprob: -19.87520408630371
    8. '	p' → logprob: -20.00020408630371
    9. '(p' → logprob: -20.25020408630371
    10. ' ' → logprob: -20.25020408630371

Token 811: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -5.676981345459353e-06
    2. 'min' → logprob: -12.125005722045898
    3. '_m' → logprob: -15.875005722045898
    4. '[min' → logprob: -16.6250057220459
    5. '_MIN' → logprob: -17.1250057220459
    6. '_' → logprob: -17.1250057220459
    7. '(min' → logprob: -18.0000057220459
    8. '_max' → logprob: -18.5000057220459
    9. '=' → logprob: -19.1250057220459
    10. '[' → logprob: -19.1250057220459

Token 812: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2811249792575836
    2. '
' → logprob: -2.156125068664551
    3. '<|end|>' → logprob: -3.406125068664551
    4. '       ' → logprob: -3.656125068664551
    5. '            
' → logprob: -3.656125068664551
    6. ',' → logprob: -3.906125068664551
    7. '<|end|>' → logprob: -4.406125068664551
    8. '        
' → logprob: -5.156125068664551
    9. '  
' → logprob: -6.406125068664551
    10. '    
' → logprob: -6.781125068664551

Token 813: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005318254698067904
    2. '       ' → logprob: -8.250532150268555
    3. 'left' → logprob: -9.125532150268555
    4. '            
' → logprob: -10.250532150268555
    5. ' left' → logprob: -11.000532150268555
    6. '	       ' → logprob: -11.000532150268555
    7. '		' → logprob: -11.250532150268555
    8. '<|end|>' → logprob: -11.375532150268555
    9. ',' → logprob: -11.500532150268555
    10. '   ' → logprob: -11.625532150268555

Token 814: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.19089622795581818
    2. '           ' → logprob: -2.0658962726593018
    3. '       ' → logprob: -3.8158962726593018
    4. ' left' → logprob: -4.440896034240723
    5. '#' (adapté à ' #') → logprob: -4.815896034240723
    6. 'idx' → logprob: -6.565896034240723
    7. 'j' → logprob: -7.315896034240723
    8. 'import' → logprob: -7.940896034240723
    9. 'pos' → logprob: -8.065896034240723
    10. '	left' → logprob: -8.315896034240723

Token 815: ' p' (ID: 275)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.021087955683469772
    2. '#' → logprob: -4.146088123321533
    3. 'import' → logprob: -6.021088123321533
    4. 'idx' → logprob: -7.021088123321533
    5. ' left' → logprob: -7.271088123321533
    6. '           ' → logprob: -8.396087646484375
    7. 'p' → logprob: -8.771087646484375
    8. 'for' → logprob: -8.771087646484375
    9. 'from' → logprob: -8.896087646484375
    10. 'if' → logprob: -9.396087646484375

Token 816: ' premier' (ID: 15506)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -1.2906514406204224
    2. ' <=' → logprob: -1.4156514406204224
    3. '_index' → logprob: -1.9156514406204224
    4. '_candidates' → logprob: -2.290651321411133
    5. '_idx' → logprob: -2.665651321411133
    6. ' =' → logprob: -3.040651321411133
    7. 's' → logprob: -3.540651321411133
    8. '_found' → logprob: -3.540651321411133
    9. '=' → logprob: -3.790651321411133
    10. 'found' → logprob: -4.790651321411133

Token 817: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03119300678372383
    2. ',' → logprob: -4.656192779541016
    3. '            
' → logprob: -4.906192779541016
    4. '<|end|>' → logprob: -5.156192779541016
    5. '<|end|>' → logprob: -5.281192779541016
    6. '
' → logprob: -6.531192779541016
    7. '       ' → logprob: -8.406192779541016
    8. ')' → logprob: -8.656192779541016
    9. '.' → logprob: -9.156192779541016
    10. ']' → logprob: -9.656192779541016

Token 818: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009588213637471199
    2. '       ' → logprob: -4.759588241577148
    3. 'left' → logprob: -7.759588241577148
    4. '            
' → logprob: -8.884588241577148
    5. 'import' → logprob: -9.759588241577148
    6. ' left' → logprob: -10.009588241577148
    7. ',' → logprob: -10.009588241577148
    8. 'index' → logprob: -10.384588241577148
    9. '<|end|>' → logprob: -10.509588241577148
    10. 'for' → logprob: -10.634588241577148

Token 819: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.010156565345823765
    2. '#' (adapté à ' #') → logprob: -5.135156631469727
    3. '           ' → logprob: -6.385156631469727
    4. 'import' → logprob: -6.635156631469727
    5. 'idx' → logprob: -7.510156631469727
    6. ' left' → logprob: -8.010156631469727
    7. 'j' → logprob: -9.885156631469727
    8. 'from' → logprob: -9.885156631469727
    9. 'l' → logprob: -10.010156631469727
    10. 'start' → logprob: -10.385156631469727

Token 820: ' p' (ID: 275)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.026009509339928627
    2. '#' → logprob: -3.9010095596313477
    3. 'import' → logprob: -5.401009559631348
    4. 'idx' → logprob: -7.526009559631348
    5. 'from' → logprob: -8.401009559631348
    6. ' left' → logprob: -10.401009559631348
    7. 'pos' → logprob: -10.776009559631348
    8. '           ' → logprob: -10.901009559631348
    9. 'l' → logprob: -11.151009559631348
    10. 'for' → logprob: -11.276009559631348

Token 821: '*q' (ID: 136288)
  Prédit: '_candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -0.8832577466964722
    2. '_idx' → logprob: -1.6332577466964722
    3. '_index' → logprob: -2.0082578659057617
    4. '_found' → logprob: -2.5082578659057617
    5. '<=' → logprob: -3.1332578659057617
    6. 'found' → logprob: -3.3832578659057617
    7. '=' → logprob: -3.5082578659057617
    8. 's' → logprob: -4.383257865905762
    9. 'le' → logprob: -4.633257865905762
    10. '_candidate' → logprob: -4.883257865905762

Token 822: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5761567950248718
    2. '<=' → logprob: -0.8261567950248718
    3. '=' → logprob: -9.701156616210938
    4. '>' → logprob: -10.326156616210938
    5. '<|end|>' → logprob: -10.326156616210938
    6. ')<=' → logprob: -10.701156616210938
    7. ' =' → logprob: -11.326156616210938
    8. ')' → logprob: -11.451156616210938
    9. ' >' → logprob: -11.576156616210938
    10. '   ' → logprob: -12.076156616210938

Token 823: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00014013137842994183
    2. ' m' → logprob: -8.875140190124512
    3. 'max' → logprob: -15.500140190124512
    4. '   ' → logprob: -17.875139236450195
    5. '	m' → logprob: -18.750139236450195
    6. '```' → logprob: -20.500139236450195
    7. '
' → logprob: -21.000139236450195
    8. 'м' → logprob: -21.000139236450195
    9. ' max' → logprob: -21.625139236450195
    10. '[m' → logprob: -21.750139236450195

Token 824: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018474508076906204
    2. '       ' → logprob: -4.643474578857422
    3. ',' → logprob: -5.643474578857422
    4. 'left' → logprob: -6.268474578857422
    5. '            
' → logprob: -7.018474578857422
    6. '<|end|>' → logprob: -7.893474578857422
    7. '
' → logprob: -8.143474578857422
    8. '   ' → logprob: -8.768474578857422
    9. ' for' → logprob: -8.893474578857422
    10. ' left' → logprob: -8.893474578857422

Token 825: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1357562392950058
    2. 'left' → logprob: -2.385756254196167
    3. ' left' → logprob: -3.510756254196167
    4. '       ' → logprob: -5.635756015777588
    5. '#' → logprob: -8.010756492614746
    6. 'p' → logprob: -8.510756492614746
    7. '            
' → logprob: -8.760756492614746
    8. ' for' → logprob: -9.010756492614746
    9. '```' → logprob: -9.135756492614746
    10. 'for' → logprob: -9.260756492614746

Token 826: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.025514930486679077
    2. '#' (adapté à ' #') → logprob: -3.775514841079712
    3. 'import' → logprob: -6.775515079498291
    4. '           ' → logprob: -7.775515079498291
    5. 'for' → logprob: -8.400514602661133
    6. 'idx' → logprob: -8.900514602661133
    7. ' left' → logprob: -9.275514602661133
    8. 'from' → logprob: -9.650514602661133
    9. 'p' → logprob: -10.025514602661133
    10. 'j' → logprob: -10.150514602661133

Token 827: ' la' (ID: 557)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.01324399746954441
    2. '#' → logprob: -4.638244152069092
    3. '           ' → logprob: -6.388244152069092
    4. 'idx' → logprob: -7.013244152069092
    5. 'import' → logprob: -7.638244152069092
    6. ' left' → logprob: -8.763243675231934
    7. 'start' → logprob: -9.888243675231934
    8. '            
' → logprob: -10.263243675231934
    9. 'low' → logprob: -10.388243675231934
    10. 'p' → logprob: -10.513243675231934

Token 828: ' plus' (ID: 2932)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0306613445281982
    2. 'p' → logprob: -1.7806613445281982
    3. ' for' → logprob: -2.2806613445281982
    4. ' p' → logprob: -2.4056613445281982
    5. '#' → logprob: -2.6556613445281982
    6. 'left' → logprob: -2.7806613445281982
    7. 're' → logprob: -3.4056613445281982
    8. 'pp' → logprob: -3.6556613445281982
    9. 'r' → logprob: -3.7806613445281982
    10. ' #' → logprob: -4.780661582946777

Token 829: ' grande' (ID: 10094)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.18309848010540009
    2. 'grand' → logprob: -2.058098554611206
    3. ' grande' → logprob: -3.558098554611206
    4. 'large' → logprob: -4.683098316192627
    5. 'pro' → logprob: -7.808098316192627
    6. ' grand' → logprob: -8.433098793029785
    7. 'import' → logprob: -8.683098793029785
    8. 'pet' → logprob: -8.808098793029785
    9. 'for' → logprob: -8.933098793029785
    10. ' haute' → logprob: -9.183098793029785

Token 830: ' aire' (ID: 37016)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06020032986998558
    2. ' p' → logprob: -3.4352002143859863
    3. 'possible' → logprob: -4.810200214385986
    4. ' possible' → logprob: -5.685200214385986
    5. 'indice' → logprob: -5.810200214385986
    6. 'prime' → logprob: -6.810200214385986
    7. ' valeur' → logprob: -6.810200214385986
    8. 'for' → logprob: -6.810200214385986
    9. '#' → logprob: -6.935200214385986
    10. '=' → logprob: -7.310200214385986

Token 831: ' possible' (ID: 4149)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24467243254184723
    2. '
' → logprob: -2.1196725368499756
    3. '            
' → logprob: -2.8696725368499756
    4. '<|end|>' → logprob: -4.3696722984313965
    5. '<|end|>' → logprob: -4.4946722984313965
    6. ',' → logprob: -5.6196722984313965
    7. '       ' → logprob: -5.6196722984313965
    8. '  
' → logprob: -5.8696722984313965
    9. ' 
' → logprob: -6.3696722984313965
    10. '    
' → logprob: -7.4946722984313965

Token 832: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1235855370759964
    2. 'left' → logprob: -3.1235854625701904
    3. ' left' → logprob: -4.1235857009887695
    4. '            
' → logprob: -4.8735857009887695
    5. ' for' → logprob: -5.1235857009887695
    6. 'p' → logprob: -5.2485857009887695
    7. ',' → logprob: -5.3735857009887695
    8. 'j' → logprob: -5.6235857009887695
    9. '       ' → logprob: -5.6235857009887695
    10. '
' → logprob: -5.7485857009887695

Token 833: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1113220825791359
    2. '
' → logprob: -3.7363221645355225
    3. 'p' → logprob: -3.9863221645355225
    4. '            
' → logprob: -3.9863221645355225
    5. '       ' → logprob: -4.111321926116943
    6. 'left' → logprob: -5.236321926116943
    7. '```' → logprob: -5.236321926116943
    8. '        
' → logprob: -6.236321926116943
    9. 'for' → logprob: -6.611321926116943
    10. ' for' → logprob: -6.611321926116943

Token 834: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.19247160851955414
    2. '           ' → logprob: -2.192471504211426
    3. '#' (adapté à ' #') → logprob: -3.567471504211426
    4. 'idx' → logprob: -4.692471504211426
    5. ' left' → logprob: -5.317471504211426
    6. 'for' → logprob: -5.317471504211426
    7. 'p' → logprob: -5.317471504211426
    8. 'start' → logprob: -5.817471504211426
    9. 'j' → logprob: -5.817471504211426
    10. 'pos' → logprob: -6.817471504211426

Token 835: ' On' (ID: 2160)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.057749561965465546
    2. 'idx' → logprob: -3.4327495098114014
    3. '#' → logprob: -4.3077497482299805
    4. '           ' → logprob: -5.4327497482299805
    5. 'p' → logprob: -5.5577497482299805
    6. 'pos' → logprob: -7.5577497482299805
    7. 'for' → logprob: -7.5577497482299805
    8. 'import' → logprob: -8.18274974822998
    9. 'j' → logprob: -8.30774974822998
    10. 'start' → logprob: -8.93274974822998

Token 836: ' parcours' (ID: 62625)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9517330527305603
    2. 'for' → logprob: -1.451733112335205
    3. 'import' → logprob: -2.576733112335205
    4. '=' → logprob: -2.701733112335205
    5. ' for' → logprob: -2.951733112335205
    6. 'n' → logprob: -4.076733112335205
    7. ' #' → logprob: -4.576733112335205
    8. 're' → logprob: -4.576733112335205
    9. 'left' → logprob: -4.701733112335205
    10. 'cherche' → logprob: -4.951733112335205

Token 837: ' p' (ID: 275)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.525231122970581
    2. ' j' → logprob: -1.525231122970581
    3. 'for' → logprob: -2.525231122970581
    4. 'j' → logprob: -3.025231122970581
    5. '           ' → logprob: -4.52523136138916
    6. ' p' → logprob: -4.65023136138916
    7. ' from' → logprob: -5.02523136138916
    8. ' primes' → logprob: -5.27523136138916
    9. 'p' → logprob: -5.65023136138916
    10. ' les' → logprob: -5.77523136138916

Token 838: ' décro' (ID: 176854)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.10121749341487885
    2. '_index' → logprob: -2.72621750831604
    3. 'for' → logprob: -4.976217269897461
    4. '_range' → logprob: -5.476217269897461
    5. 'idx' → logprob: -5.601217269897461
    6. ' =' → logprob: -5.601217269897461
    7. '=' → logprob: -5.976217269897461
    8. '_indices' → logprob: -6.726217269897461
    9. 's' → logprob: -6.851217269897461
    10. '_idxs' → logprob: -6.976217269897461

Token 839: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.0009340902324765921
    2. 'd' → logprob: -7.87593412399292
    3. 'ss' → logprob: -8.875933647155762
    4. 'issent' → logprob: -9.000933647155762
    5. 'iss' → logprob: -10.250933647155762
    6. 'is' → logprob: -10.500933647155762
    7. 'sc' → logprob: -10.500933647155762
    8. 'ressant' → logprob: -10.625933647155762
    9. 's' → logprob: -11.000933647155762
    10. 'endant' → logprob: -11.000933647155762

Token 840: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4606887996196747
    2. ' for' → logprob: -1.210688829421997
    3. ',' → logprob: -3.210688829421997
    4. ' in' → logprob: -4.960688591003418
    5. '<|end|>' → logprob: -5.335688591003418
    6. ' from' → logprob: -5.460688591003418
    7. '       ' → logprob: -5.710688591003418
    8. ' =' → logprob: -5.960688591003418
    9. '<|end|>' → logprob: -6.210688591003418
    10. '=' → logprob: -6.585688591003418

Token 841: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0007299474673345685
    2. 'min' → logprob: -7.625730037689209
    3. ' q' → logprob: -8.75072956085205
    4. 'p' → logprob: -9.75072956085205
    5. ' min' → logprob: -11.87572956085205
    6. 'pr' → logprob: -12.00072956085205
    7. '[q' → logprob: -13.12572956085205
    8. '[' → logprob: -13.25072956085205
    9. '[min' → logprob: -13.50072956085205
    10. '```' → logprob: -13.87572956085205

Token 842: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4180978834629059
    2. '<|end|>' → logprob: -2.668097972869873
    3. '
' → logprob: -3.168097972869873
    4. '<|end|>' → logprob: -3.418097972869873
    5. ' for' → logprob: -3.918097972869873
    6. 'for' → logprob: -3.918097972869873
    7. ')' → logprob: -3.918097972869873
    8. '           ' → logprob: -4.043097972869873
    9. ' down' → logprob: -4.043097972869873
    10. ':' → logprob: -4.168097972869873

Token 843: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0003802680876106024
    2. ' p' → logprob: -7.875380039215088
    3. '   ' → logprob: -16.25037956237793
    4. '	p' → logprob: -16.62537956237793
    5. 'max' → logprob: -17.50037956237793
    6. '<p' → logprob: -17.75037956237793
    7. '           ' → logprob: -17.75037956237793
    8. '
' → logprob: -17.87537956237793
    9. '[p' → logprob: -17.87537956237793
    10. '(p' → logprob: -19.00037956237793

Token 844: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -3.666993507067673e-05
    2. 'min' → logprob: -10.250036239624023
    3. '_' → logprob: -15.625036239624023
    4. '_max' → logprob: -15.750036239624023
    5. '_m' → logprob: -16.000036239624023
    6. ')' → logprob: -16.125036239624023
    7. '```' → logprob: -16.125036239624023
    8. '_MIN' → logprob: -16.250036239624023
    9. '[min' → logprob: -16.250036239624023
    10. '	min' → logprob: -16.875036239624023

Token 845: ' pour' (ID: 1930)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2940202951431274
    2. ':' → logprob: -1.6690202951431274
    3. '   ' → logprob: -1.6690202951431274
    4. ' for' → logprob: -2.044020175933838
    5. '       ' → logprob: -2.294020175933838
    6. '           ' → logprob: -3.794020175933838
    7. ')' → logprob: -4.044020175933838
    8. '
' → logprob: -4.294020175933838
    9. '[' → logprob: -4.294020175933838
    10. ':
' → logprob: -4.419020175933838

Token 846: ' maxim' (ID: 29045)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.27381500601768494
    2. ' p' → logprob: -1.7738150358200073
    3. ' find' → logprob: -3.5238149166107178
    4. 'find' → logprob: -4.023815155029297
    5. '           ' → logprob: -4.898815155029297
    6. '-' → logprob: -5.023815155029297
    7. ' trouver' → logprob: -6.398815155029297
    8. '   ' → logprob: -7.273815155029297
    9. '               ' → logprob: -7.398815155029297
    10. ' -' → logprob: -7.648815155029297

Token 847: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.07329536974430084
    2. 'um' → logprob: -3.3232953548431396
    3. 'er' → logprob: -3.8232953548431396
    4. 'ser' → logprob: -5.323295593261719
    5. 'm' → logprob: -5.823295593261719
    6. 'e' → logprob: -6.573295593261719
    7. 'izer' → logprob: -7.073295593261719
    8. 'ize' → logprob: -7.448295593261719
    9. 'ise' → logprob: -8.073295593261719
    10. 'al' → logprob: -8.073295593261719

Token 848: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.41677725315093994
    2. 'q' → logprob: -2.0417771339416504
    3. ' p' → logprob: -2.5417771339416504
    4. ' q' → logprob: -2.5417771339416504
    5. ')' → logprob: -4.66677713394165
    6. 'i' → logprob: -4.79177713394165
    7. ',' → logprob: -5.16677713394165
    8. '(p' → logprob: -5.16677713394165
    9. '(q' → logprob: -5.16677713394165
    10. '_p' → logprob: -5.91677713394165

Token 849: '*q' (ID: 136288)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1862124651670456
    2. '
' → logprob: -3.1862125396728516
    3. '   ' → logprob: -3.5612125396728516
    4. '+' → logprob: -4.311212539672852
    5. '       ' → logprob: -4.436212539672852
    6. '[::-' → logprob: -4.436212539672852
    7. ' for' → logprob: -4.561212539672852
    8. ':' → logprob: -4.936212539672852
    9. ' in' → logprob: -5.311212539672852
    10. ',
' → logprob: -5.311212539672852

Token 850: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9054648876190186
    2. '           ' → logprob: -1.4054648876190186
    3. ' for' → logprob: -1.9054648876190186
    4. '   ' → logprob: -2.7804648876190186
    5. ':' → logprob: -3.2804648876190186
    6. ',' → logprob: -3.5304648876190186
    7. '
' → logprob: -3.6554648876190186
    8. '            
' → logprob: -5.030465126037598
    9. '[' → logprob: -5.530465126037598
    10. '        
' → logprob: -5.655465126037598

Token 851: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001024831784889102
    2. '       ' → logprob: -7.1260247230529785
    3. '	       ' → logprob: -9.126025199890137
    4. '<|end|>' → logprob: -9.751025199890137
    5. '   ' → logprob: -11.376025199890137
    6. '		' → logprob: -11.751025199890137
    7. '	   ' → logprob: -11.876025199890137
    8. '
' → logprob: -12.001025199890137
    9. '<|end|>' → logprob: -12.001025199890137
    10. '            
' → logprob: -12.626025199890137

Token 852: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.050452038645744324
    2. ' for' → logprob: -3.8004519939422607
    3. '       ' → logprob: -3.9254519939422607
    4. 'for' → logprob: -5.17545223236084
    5. '
' → logprob: -7.17545223236084
    6. '            
' → logprob: -8.17545223236084
    7. '   ' → logprob: -8.92545223236084
    8. '        
' → logprob: -10.17545223236084
    9. '          ' → logprob: -10.67545223236084
    10. '               ' → logprob: -10.80045223236084

Token 853: ' p' (ID: 275)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37366753816604614
    2. 'for' → logprob: -1.4986674785614014
    3. ' for' → logprob: -2.8736674785614014
    4. '       ' → logprob: -3.7486674785614014
    5. 'j' → logprob: -4.8736677169799805
    6. '```' → logprob: -8.24866771697998
    7. '   ' → logprob: -8.74866771697998
    8. ' j' → logprob: -8.87366771697998
    9. '	for' → logprob: -10.99866771697998
    10. '               ' → logprob: -11.12366771697998

Token 854: ' doit' (ID: 21822)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0160963535308838
    2. 'for' → logprob: -1.3910963535308838
    3. '_range' → logprob: -1.5160963535308838
    4. ' =' → logprob: -2.641096353530884
    5. '_idx' → logprob: -3.266096353530884
    6. '_index' → logprob: -4.516096115112305
    7. '_start' → logprob: -4.516096115112305
    8. 'range' → logprob: -4.891096115112305
    9. '_found' → logprob: -5.016096115112305
    10. ' for' → logprob: -5.266096115112305

Token 855: ' être' (ID: 9104)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.044158685952425
    2. ' =' → logprob: -4.544158458709717
    3. '>=' → logprob: -4.669158458709717
    4. '<|end|>' → logprob: -5.419158458709717
    5. '_' → logprob: -5.919158458709717
    6. 's' → logprob: -5.919158458709717
    7. ')' → logprob: -6.044158458709717
    8. '>' → logprob: -6.294158458709717
    9. ' être' → logprob: -6.544158458709717
    10. 'être' → logprob: -6.919158458709717

Token 856: ' premier' (ID: 15506)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.80745530128479
    2. 'prime' → logprob: -1.05745530128479
    3. 'pr' → logprob: -1.68245530128479
    4. 'un' → logprob: -4.432455062866211
    5. 'p' → logprob: -5.182455062866211
    6. 'prim' → logprob: -7.307455062866211
    7. 'prima' → logprob: -7.432455062866211
    8. 'in' → logprob: -8.057455062866211
    9. 'int' → logprob: -8.057455062866211
    10. 'primer' → logprob: -8.557455062866211

Token 857: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26213303208351135
    2. '           ' → logprob: -1.762133002281189
    3. '       ' → logprob: -3.0121331214904785
    4. '   ' → logprob: -6.3871331214904785
    5. '
' → logprob: -6.3871331214904785
    6. '            
' → logprob: -6.3871331214904785
    7. '        
' → logprob: -6.7621331214904785
    8. ' for' → logprob: -7.0121331214904785
    9. ',' → logprob: -7.1371331214904785
    10. '\n' → logprob: -7.7621331214904785

Token 858: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002223529852926731
    2. ' for' → logprob: -6.752223491668701
    3. '       ' → logprob: -7.752223491668701
    4. 'for' → logprob: -7.752223491668701
    5. '   ' → logprob: -9.87722396850586
    6. '            
' → logprob: -10.12722396850586
    7. '
' → logprob: -10.62722396850586
    8. '          ' → logprob: -11.50222396850586
    9. '
' → logprob: -11.62722396850586
    10. 'p' → logprob: -11.62722396850586

Token 859: ' found' (ID: 2491)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08074185252189636
    2. ' for' → logprob: -2.9557418823242188
    3. 'for' → logprob: -4.080741882324219
    4. '       ' → logprob: -4.830741882324219
    5. '   ' → logprob: -9.080741882324219
    6. '            
' → logprob: -9.205741882324219
    7. 'p' → logprob: -9.580741882324219
    8. '
' → logprob: -9.705741882324219
    9. '```' → logprob: -9.705741882324219
    10. 'j' → logprob: -9.830741882324219

Token 860: '_p' (ID: 1359)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7342521548271179
    2. ' =' → logprob: -0.7342521548271179
    3. '_p' → logprob: -3.6092522144317627
    4. '=' → logprob: -4.484251976013184
    5. ':' → logprob: -7.234251976013184
    6. '_space' → logprob: -7.484251976013184
    7. ' ' → logprob: -7.859251976013184
    8. '_=' → logprob: -8.984251976013184
    9. ',' → logprob: -10.234251976013184
    10. '_token' → logprob: -10.984251976013184

Token 861: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869185447692871
    2. '=' → logprob: -1.136918544769287
    3. ':' → logprob: -10.136919021606445
    4. ' ' → logprob: -12.011919021606445
    5. '=False' → logprob: -14.261919021606445
    6. '=True' → logprob: -15.136919021606445
    7. '   ' → logprob: -15.261919021606445
    8. ',' → logprob: -15.636919021606445
    9. '_' → logprob: -15.886919021606445
    10. 's' → logprob: -16.011919021606445

Token 862: ' None' (ID: 4662)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.01849593035876751
    2. ' False' → logprob: -4.018496036529541
    3. 'None' → logprob: -8.018495559692383
    4. ' None' → logprob: -11.143495559692383
    5. '   ' → logprob: -13.768495559692383
    6. '0' → logprob: -14.143495559692383
    7. '-' → logprob: -16.018495559692383
    8. 'F' → logprob: -16.143495559692383
    9. ' ' → logprob: -16.643495559692383
    10. '=False' → logprob: -17.518495559692383

Token 863: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6615269780158997
    2. '           ' → logprob: -1.2865269184112549
    3. 'for' → logprob: -2.536526918411255
    4. '       ' → logprob: -2.661526918411255
    5. '
' → logprob: -3.286526918411255
    6. '	for' → logprob: -4.911527156829834
    7. ' 
' → logprob: -6.036527156829834
    8. '<|end|>' → logprob: -6.161527156829834
    9. '        
' → logprob: -6.286527156829834
    10. '            
' → logprob: -6.286527156829834

Token 864: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3426413834095001
    2. ' for' → logprob: -1.7176413536071777
    3. '           ' → logprob: -2.3426413536071777
    4. 'for' → logprob: -4.717641353607178
    5. '   ' → logprob: -5.842641353607178
    6. '	for' → logprob: -7.217641353607178
    7. '
' → logprob: -7.592641353607178
    8. '<|end|>' → logprob: -7.842641353607178
    9. '        
' → logprob: -8.342641830444336
    10. '\t' → logprob: -9.092641830444336

Token 865: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.23352058231830597
    2. ' for' → logprob: -2.1085205078125
    3. '           ' → logprob: -2.8585205078125
    4. 'left' → logprob: -4.1085205078125
    5. 'j' → logprob: -4.4835205078125
    6. ' left' → logprob: -7.4835205078125
    7. 'start' → logprob: -8.2335205078125
    8. ' j' → logprob: -8.2335205078125
    9. 'idx' → logprob: -8.3585205078125
    10. 'p' → logprob: -8.7335205078125

Token 866: ' j' (ID: 441)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.010135329328477383
    2. 'j' → logprob: -5.010135173797607
    3. ' p' → logprob: -5.760135173797607
    4. 'idx' → logprob: -9.135135650634766
    5. ' j' → logprob: -9.385135650634766
    6. 'pi' → logprob: -10.635135650634766
    7. 'k' → logprob: -11.260135650634766
    8. 'pj' → logprob: -11.385135650634766
    9. ' idx' → logprob: -12.260135650634766
    10. 'x' → logprob: -12.885135650634766

Token 867: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003621331648901105
    2. 'in' → logprob: -5.6286211013793945
    3. 'd' → logprob: -12.128621101379395
    4. 'i' → logprob: -12.628621101379395
    5. '=' → logprob: -13.003621101379395
    6. 'idx' → logprob: -13.503621101379395
    7. ' i' → logprob: -13.753621101379395
    8. ' =' → logprob: -13.878621101379395
    9. '=i' → logprob: -14.003621101379395
    10. 's' → logprob: -14.253621101379395

Token 868: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029124172404408455
    2. 'i' → logprob: -3.9041242599487305
    3. ' range' → logprob: -5.0291242599487305
    4. 'idx' → logprob: -7.1541242599487305
    5. 'pr' → logprob: -7.2791242599487305
    6. ' i' → logprob: -8.77912425994873
    7. 'in' → logprob: -9.27912425994873
    8. 'next' → logprob: -9.40412425994873
    9. 're' → logprob: -10.15412425994873
    10. ' ' → logprob: -10.77912425994873

Token 869: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03881272301077843
    2. 'idx' → logprob: -3.2888126373291016
    3. 'len' → logprob: -7.913812637329102
    4. ' i' → logprob: -8.788812637329102
    5. 'pr' → logprob: -8.913812637329102
    6. ' idx' → logprob: -10.163812637329102
    7. '(i' → logprob: -10.538812637329102
    8. '_i' → logprob: -11.913812637329102
    9. '(idx' → logprob: -11.913812637329102
    10. '_idx' → logprob: -12.163812637329102

Token 870: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005426656571216881
    2. '-' → logprob: -8.250542640686035
    3. ',-' → logprob: -8.250542640686035
    4. ' ,' → logprob: -11.125542640686035
    5. ' -' → logprob: -12.375542640686035
    6. ',
' → logprob: -15.375542640686035
    7. '-,' → logprob: -15.625542640686035
    8. '       ' → logprob: -16.25054359436035
    9. 'dow' → logprob: -16.25054359436035
    10. '0' → logprob: -16.37554359436035

Token 871: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00013119110371917486
    2. ' -' → logprob: -9.125131607055664
    3. '0' → logprob: -10.750131607055664
    4. ' ' → logprob: -15.000131607055664
    5. '
' → logprob: -15.250131607055664
    6. '   ' → logprob: -16.750131607055664
    7. '-b' → logprob: -17.500131607055664
    8. '  ' → logprob: -17.500131607055664
    9. '...' → logprob: -18.250131607055664
    10. '           ' → logprob: -18.375131607055664

Token 872: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. '2' → logprob: -17.25
    4. '   ' → logprob: -17.875
    5. '```' → logprob: -17.9375
    6. '-' → logprob: -18.375
    7. '
' → logprob: -18.5625
    8. ',' → logprob: -19.0625
    9. '  ' → logprob: -19.125
    10. ' -' → logprob: -19.1875

Token 873: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012183323269709945
    2. ',-' → logprob: -6.751218318939209
    3. '-' → logprob: -10.626218795776367
    4. ' ,' → logprob: -11.501218795776367
    5. '               ' → logprob: -11.751218795776367
    6. '           ' → logprob: -12.751218795776367
    7. ',
' → logprob: -14.251218795776367
    8. '0' → logprob: -14.751218795776367
    9. '                   ' → logprob: -14.751218795776367
    10. '   ' → logprob: -15.001218795776367

Token 874: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0010362643515691161
    2. ' -' → logprob: -6.876036167144775
    3. '-j' → logprob: -14.126036643981934
    4. '0' → logprob: -14.376036643981934
    5. ' ' → logprob: -14.501036643981934
    6. '1' → logprob: -14.876036643981934
    7. ')' → logprob: -15.001036643981934
    8. '):
' → logprob: -15.126036643981934
    9. '<|end|>' → logprob: -16.376035690307617
    10. '   ' → logprob: -16.501035690307617

Token 875: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.375000953674316
    3. '
' → logprob: -16.5
    4. '```' → logprob: -16.625
    5. '   ' → logprob: -17.0
    6. ')' → logprob: -17.125
    7. '           ' → logprob: -18.125
    8. '                   ' → logprob: -18.25
    9. '۱' → logprob: -18.625
    10. '):
' → logprob: -18.6875

Token 876: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3491576611995697
    2. '):
' → logprob: -1.224157691001892
    3. '):
' → logprob: -7.599157810211182
    4. ')' → logprob: -8.849157333374023
    5. '):

' → logprob: -10.474157333374023
    6. ':' → logprob: -11.599157333374023
    7. '<|end|>' → logprob: -11.849157333374023
    8. '       ' → logprob: -12.099157333374023
    9. '   ' → logprob: -12.724157333374023
    10. '               ' → logprob: -12.724157333374023

Token 877: ' ' (ID: 220)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.38840290904045105
    2. '<|end|>' → logprob: -1.6384029388427734
    3. ' ' → logprob: -2.7634029388427734
    4. '           ' → logprob: -3.0134029388427734
    5. '       ' → logprob: -5.138402938842773
    6. ' 
' → logprob: -6.138402938842773
    7. ' ' → logprob: -6.888402938842773
    8. '   ' → logprob: -7.263402938842773
    9. '<|end|>' → logprob: -7.388402938842773
    10. '	       ' → logprob: -7.763402938842773

Token 878: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.42259523272514343
    2. '       ' → logprob: -2.047595262527466
    3. ' ' → logprob: -2.422595262527466
    4. '           ' → logprob: -2.547595262527466
    5. '<|end|>' → logprob: -4.297595024108887
    6. ' p' → logprob: -4.547595024108887
    7. '   ' → logprob: -4.922595024108887
    8. 'p' → logprob: -4.922595024108887
    9. 'n' → logprob: -6.672595024108887
    10. ' 
' → logprob: -7.172595024108887

Token 879: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5120270848274231
    2. '               ' → logprob: -1.5120270252227783
    3. ' p' → logprob: -1.7620270252227783
    4. '           ' → logprob: -5.512027263641357
    5. '<|end|>' → logprob: -6.262027263641357
    6. 'if' → logprob: -6.887027263641357
    7. ' if' → logprob: -7.137027263641357
    8. ')' → logprob: -9.3870267868042
    9. '	           ' → logprob: -9.3870267868042
    10. '   ' → logprob: -9.6370267868042

Token 880: ' dans' (ID: 2671)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 881: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47762545943260193
    2. 'j' → logprob: -1.1026254892349243
    3. 'pr' → logprob: -3.6026253700256348
    4. ' range' → logprob: -4.727625370025635
    5. '<|end|>' → logprob: -5.352625370025635
    6. ')' → logprob: -5.727625370025635
    7. ' j' → logprob: -6.477625370025635
    8. '[j' → logprob: -7.227625370025635
    9. '...' → logprob: -8.602625846862793
    10. ' ' → logprob: -8.602625846862793

Token 882: ' premiers' (ID: 59140)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.034955866634845734
    2. 'pr' → logprob: -3.9099559783935547
    3. 'j' → logprob: -4.659955978393555
    4. ' range' → logprob: -5.784955978393555
    5. '[j' → logprob: -7.034955978393555
    6. ')' → logprob: -7.909955978393555
    7. '[' → logprob: -9.284955978393555
    8. 're' → logprob: -9.659955978393555
    9. '(range' → logprob: -9.659955978393555
    10. ' j' → logprob: -10.034955978393555

Token 883: ' <=' (ID: 5017)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 884: ' q' (ID: 2335)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.30500805377960205
    2. 'q' → logprob: -1.430008053779602
    3. 'j' → logprob: -3.9300079345703125
    4. ' primes' → logprob: -6.8050079345703125
    5. 'i' → logprob: -8.055007934570312
    6. '[' → logprob: -8.180007934570312
    7. ')' → logprob: -8.180007934570312
    8. ' q' → logprob: -8.305007934570312
    9. 'qu' → logprob: -8.305007934570312
    10. 'prime' → logprob: -8.430007934570312

Token 885: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6993206143379211
    2. ':
' → logprob: -1.8243205547332764
    3. '<|end|>' → logprob: -1.8243205547332764
    4. '               ' → logprob: -2.5743205547332764
    5. '):
' → logprob: -3.4493205547332764
    6. '       ' → logprob: -3.5743205547332764
    7. '           ' → logprob: -4.0743207931518555
    8. '<|end|>' → logprob: -4.8243207931518555
    9. '):' → logprob: -5.0743207931518555
    10. ',' → logprob: -5.1993207931518555

Token 886: 'indice' (ID: 176697)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8906456232070923
    2. ')' → logprob: -1.0156456232070923
    3. '):' → logprob: -2.3906455039978027
    4. 'j' → logprob: -3.0156455039978027
    5. '<|end|>' → logprob: -3.2656455039978027
    6. '<|end|>' → logprob: -4.390645503997803
    7. '           ' → logprob: -5.390645503997803
    8. '               ' → logprob: -5.515645503997803
    9. ' ' → logprob: -5.890645503997803
    10. '       ' → logprob: -5.890645503997803

Token 887: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.43651720881462097
    2. ')' → logprob: -1.1865172386169434
    3. ' j' → logprob: -3.5615172386169434
    4. '):
' → logprob: -5.811517238616943
    5. '[j' → logprob: -6.061517238616943
    6. '),' → logprob: -6.186517238616943
    7. ',' → logprob: -6.561517238616943
    8. 'i' → logprob: -6.686517238616943
    9. '<|end|>' → logprob: -6.811517238616943
    10. ' )' → logprob: -7.061517238616943

Token 888: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07338342815637589
    2. '):' → logprob: -2.698383331298828
    3. ')' → logprob: -6.448383331298828
    4. '):
' → logprob: -7.323383331298828
    5. '   ' → logprob: -8.323383331298828
    6. ' ):
' → logprob: -8.698383331298828
    7. ':' → logprob: -8.948383331298828
    8. ',' → logprob: -9.073383331298828
    9. '
' → logprob: -9.823383331298828
    10. '[' → logprob: -9.823383331298828

Token 889: ' en' (ID: 469)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5648425221443176
    2. ':' → logprob: -1.8148424625396729
    3. '<|end|>' → logprob: -1.8148424625396729
    4. ':
' → logprob: -2.564842462539673
    5. '):
' → logprob: -4.439842700958252
    6. '<|end|>' → logprob: -4.939842700958252
    7. ',' → logprob: -5.939842700958252
    8. '           ' → logprob: -6.064842700958252
    9. '       ' → logprob: -6.189842700958252
    10. '():
' → logprob: -7.814842700958252

Token 890: ' décro' (ID: 176854)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.14055858552455902
    2. 'desc' → logprob: -2.7655584812164307
    3. 'range' → logprob: -3.2655584812164307
    4. 're' → logprob: -3.8905584812164307
    5. 'd' → logprob: -6.01555871963501
    6. 'descending' → logprob: -6.01555871963501
    7. 'de' → logprob: -7.14055871963501
    8. 'dé' → logprob: -7.39055871963501
    9. 'ré' → logprob: -7.51555871963501
    10. ' reverse' → logprob: -7.51555871963501

Token 891: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.017451176419854164
    2. 'chant' → logprob: -4.892451286315918
    3. 'cent' → logprob: -5.767451286315918
    4. 'çant' → logprob: -5.892451286315918
    5. 'cant' → logprob: -6.892451286315918
    6. 'ivant' → logprob: -7.767451286315918
    7. 'cal' → logprob: -8.142451286315918
    8. 'c' → logprob: -8.142451286315918
    9. 'sc' → logprob: -8.517451286315918
    10. 'd' → logprob: -8.517451286315918

Token 892: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5771607756614685
    2. ':' → logprob: -1.4521608352661133
    3. '<|end|>' → logprob: -2.2021608352661133
    4. ':
' → logprob: -3.0771608352661133
    5. '       ' → logprob: -3.9521608352661133
    6. ',' → logprob: -4.702160835266113
    7. '<|end|>' → logprob: -5.202160835266113
    8. '           ' → logprob: -5.327160835266113
    9. '):
' → logprob: -5.577160835266113
    10. '	           ' → logprob: -7.452160835266113

Token 893: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005153704434633255
    2. '<|end|>' → logprob: -6.255153656005859
    3. '           ' → logprob: -6.880153656005859
    4. '       ' → logprob: -7.505153656005859
    5. ':' → logprob: -7.880153656005859
    6. ',' → logprob: -8.38015365600586
    7. '	           ' → logprob: -8.38015365600586
    8. ':
' → logprob: -8.88015365600586
    9. '<|end|>' → logprob: -9.00515365600586
    10. '):
' → logprob: -9.63015365600586

Token 894: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -3.500108141452074e-05
    2. ' p' → logprob: -11.000035285949707
    3. '                   ' → logprob: -11.250035285949707
    4. '               ' → logprob: -12.375035285949707
    5. 'if' → logprob: -14.500035285949707
    6. '                       ' → logprob: -15.250035285949707
    7. '           ' → logprob: -15.625035285949707
    8. '   ' → logprob: -16.37503433227539
    9. '                           ' → logprob: -18.62503433227539
    10. '                               ' → logprob: -19.37503433227539

Token 895: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015035520773380995
    2. ' =' → logprob: -6.5015034675598145
    3. 'p' → logprob: -14.376503944396973
    4. 'pr' → logprob: -15.376503944396973
    5. '_candidate' → logprob: -16.751502990722656
    6. '_val' → logprob: -17.001502990722656
    7. 'candidate' → logprob: -17.251502990722656
    8. '   ' → logprob: -17.251502990722656
    9. '=p' → logprob: -17.376502990722656
    10. '>' → logprob: -17.501502990722656

Token 896: ' primes' (ID: 104042)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.0009118211455643177
    2. ' primes' → logprob: -7.000911712646484
    3. '	pr' → logprob: -16.125911712646484
    4. 'prime' → logprob: -16.750911712646484
    5. '(pr' → logprob: -16.875911712646484
    6. ' pr' → logprob: -17.000911712646484
    7. '   ' → logprob: -17.500911712646484
    8. 'pri' → logprob: -19.125911712646484
    9. 'prim' → logprob: -20.000911712646484
    10. '           ' → logprob: -20.125911712646484

Token 897: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00020663968462031335
    2. 'j' → logprob: -8.50020694732666
    3. '[' → logprob: -12.75020694732666
    4. '[p' → logprob: -16.125205993652344
    5. '[i' → logprob: -17.375205993652344
    6. '_j' → logprob: -17.500205993652344
    7. '
' → logprob: -17.750205993652344
    8. '[
' → logprob: -18.000205993652344
    9. '	j' → logprob: -18.125205993652344
    10. ' [' → logprob: -18.250205993652344

Token 898: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1089850664138794
    2. ')
' → logprob: -1.2339850664138794
    3. '               ' → logprob: -1.6089850664138794
    4. ']
' → logprob: -2.35898494720459
    5. ']' → logprob: -2.60898494720459
    6. '<|end|>' → logprob: -5.48398494720459
    7. '
' → logprob: -6.48398494720459
    8. '<|end|>' → logprob: -6.98398494720459
    9. '                
' → logprob: -7.10898494720459
    10. '                   ' → logprob: -7.60898494720459

Token 899: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00043567578541114926
    2. '                
' → logprob: -8.750435829162598
    3. '<|end|>' → logprob: -9.625435829162598
    4. '                ' → logprob: -10.000435829162598
    5. '           ' → logprob: -10.250435829162598
    6. ' if' → logprob: -10.625435829162598
    7. '              ' → logprob: -10.750435829162598
    8. '
' → logprob: -10.750435829162598
    9. '       ' → logprob: -11.125435829162598
    10. ' 
' → logprob: -11.750435829162598

Token 900: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.32507437467575073
    2. 'if' (adapté à ' if') → logprob: -1.3250744342803955
    3. ' if' → logprob: -4.450074195861816
    4. '	if' → logprob: -10.700074195861816
    5. '	           ' → logprob: -11.700074195861816
    6. '           ' → logprob: -11.950074195861816
    7. '   ' → logprob: -12.450074195861816
    8. '                   ' → logprob: -12.575074195861816
    9. '```' → logprob: -12.950074195861816
    10. '		       ' → logprob: -13.075074195861816

Token 901: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.4894986785948277e-05
    2. ' p' → logprob: -10.375044822692871
    3. '               ' → logprob: -12.125044822692871
    4. '                   ' → logprob: -12.750044822692871
    5. '   ' → logprob: -13.000044822692871
    6. '<p' → logprob: -13.625044822692871
    7. '           ' → logprob: -14.375044822692871
    8. '                       ' → logprob: -14.500044822692871
    9. '                           ' → logprob: -16.000045776367188
    10. '                               ' → logprob: -16.125045776367188

Token 902: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6370819807052612
    2. '<' → logprob: -0.7620819807052612
    3. '<p' → logprob: -5.512082099914551
    4. '>' → logprob: -8.63708209991455
    5. '>=' → logprob: -9.51208209991455
    6. ' >' → logprob: -9.51208209991455
    7. ' >=' → logprob: -9.76208209991455
    8. '<th' → logprob: -11.51208209991455
    9. '<size' → logprob: -12.01208209991455
    10. '<len' → logprob: -12.63708209991455

Token 903: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.611323624383658e-05
    2. ' p' → logprob: -9.625065803527832
    3. '<p' → logprob: -19.50006675720215
    4. '	p' → logprob: -20.12506675720215
    5. '_p' → logprob: -20.50006675720215
    6. '=p' → logprob: -21.62506675720215
    7. '           ' → logprob: -21.75006675720215
    8. '   ' → logprob: -22.00006675720215
    9. 'pm' → logprob: -22.50006675720215
    10. ')p' → logprob: -22.75006675720215

Token 904: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.08267445862293243
    2. 'min' → logprob: -2.582674503326416
    3. 'p' → logprob: -5.582674503326416
    4. '_p' → logprob: -12.207674026489258
    5. 'Min' → logprob: -13.207674026489258
    6. ' p' → logprob: -13.332674026489258
    7. '_MIN' → logprob: -13.832674026489258
    8. 'or' → logprob: -14.707674026489258
    9. '<p' → logprob: -14.707674026489258
    10. 'and' → logprob: -14.832674026489258

Token 905: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15083126723766327
    2. ':' → logprob: -2.2758312225341797
    3. '               ' → logprob: -3.7758312225341797
    4. '                   ' → logprob: -4.27583122253418
    5. '           ' → logprob: -8.15083122253418
    6. ' or' → logprob: -9.65083122253418
    7. '   ' → logprob: -10.40083122253418
    8. ':
' → logprob: -10.65083122253418
    9. '                       ' → logprob: -10.65083122253418
    10. '):
' → logprob: -11.40083122253418

Token 906: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001300830626860261
    2. '               ' → logprob: -6.751300811767578
    3. 'break' → logprob: -9.876300811767578
    4. ' break' → logprob: -10.126300811767578
    5. ':
' → logprob: -11.626300811767578
    6. ':' → logprob: -11.876300811767578
    7. '   ' → logprob: -11.876300811767578
    8. '                       ' → logprob: -12.001300811767578
    9. '           ' → logprob: -12.626300811767578
    10. '				' → logprob: -13.251300811767578

Token 907: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0711238905787468
    2. '                   ' → logprob: -2.8211238384246826
    3. '               ' → logprob: -4.821124076843262
    4. ' break' → logprob: -7.446124076843262
    5. '	break' → logprob: -8.071124076843262
    6. '                       ' → logprob: -9.321124076843262
    7. '   ' → logprob: -10.196124076843262
    8. '           ' → logprob: -10.946124076843262
    9. '       ' → logprob: -12.321124076843262
    10. '                ' → logprob: -13.196124076843262

Token 908: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003757383383344859
    2. '
' → logprob: -8.125375747680664
    3. '                
' → logprob: -9.750375747680664
    4. '			' → logprob: -12.375375747680664
    5. '                ' → logprob: -12.500375747680664
    6. '           ' → logprob: -12.750375747680664
    7. '```' → logprob: -13.000375747680664
    8. '       ' → logprob: -13.250375747680664
    9. '              ' → logprob: -13.625375747680664
    10. '                   ' → logprob: -14.000375747680664

Token 909: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.864272967912257e-05
    2. '
' → logprob: -10.000088691711426
    3. 'if' → logprob: -10.750088691711426
    4. '           ' → logprob: -11.625088691711426
    5. '```' → logprob: -11.750088691711426
    6. '                
' → logprob: -13.625088691711426
    7. '       ' → logprob: -13.750088691711426
    8. '                   ' → logprob: -13.875088691711426
    9. '              ' → logprob: -14.000088691711426
    10. '                ' → logprob: -15.750088691711426

Token 910: ' area' (ID: 3624)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2950167655944824
    2. '               ' → logprob: -1.7950167655944824
    3. ' if' → logprob: -2.4200167655944824
    4. '
' → logprob: -8.04501724243164
    5. '                
' → logprob: -9.54501724243164
    6. '           ' → logprob: -10.42001724243164
    7. '                   ' → logprob: -12.79501724243164
    8. '   ' → logprob: -13.04501724243164
    9. '	if' → logprob: -13.54501724243164
    10. '```' → logprob: -13.67001724243164

Token 911: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020839422941208
    2. ' =' → logprob: -2.350208282470703
    3. '=p' → logprob: -13.975208282470703
    4. '   ' → logprob: -14.850208282470703
    5. '           ' → logprob: -16.475208282470703
    6. ')' → logprob: -16.475208282470703
    7. ' ' → logprob: -16.600208282470703
    8. '       ' → logprob: -16.600208282470703
    9. '               ' → logprob: -16.975208282470703
    10. '_area' → logprob: -17.100208282470703

Token 912: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.11282379925251007
    2. ' p' → logprob: -2.237823724746704
    3. '   ' → logprob: -14.737823486328125
    4. '	p' → logprob: -14.987823486328125
    5. ' ' → logprob: -15.487823486328125
    6. 'q' → logprob: -15.987823486328125
    7. ' ' → logprob: -16.362823486328125
    8. '(p' → logprob: -16.862823486328125
    9. '```' → logprob: -16.862823486328125
    10. '_p' → logprob: -16.987823486328125

Token 913: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20172592997550964
    2. ' *' → logprob: -1.701725959777832
    3. '*q' → logprob: -8.076725959777832
    4. '```' → logprob: -14.701725959777832
    5. '*
' → logprob: -15.201725959777832
    6. ' ' → logprob: -15.451725959777832
    7. '*object' → logprob: -15.451725959777832
    8. '   ' → logprob: -15.576725959777832
    9. ' ' → logprob: -15.826725959777832
    10. '           ' → logprob: -16.201725006103516

Token 914: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.320199877838604e-07
    2. ' q' → logprob: -14.75
    3. '	q' → logprob: -20.5
    4. '$q' → logprob: -22.375
    5. '   ' → logprob: -22.5
    6. 'qml' → logprob: -22.625
    7. '*q' → logprob: -22.875
    8. ''q' → logprob: -24.375
    9. 'qid' → logprob: -24.375
    10. '           ' → logprob: -24.875

Token 915: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002639629878103733
    2. '<|end|>' → logprob: -6.0026397705078125
    3. '<|end|>' → logprob: -10.002639770507812
    4. '           ' → logprob: -10.252639770507812
    5. '              ' → logprob: -11.127639770507812
    6. '
' → logprob: -11.752639770507812
    7. ' if' → logprob: -11.752639770507812
    8. ')' → logprob: -11.752639770507812
    9. '			' → logprob: -12.127639770507812
    10. '                ' → logprob: -12.252639770507812

Token 916: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.688212614681106e-05
    2. '           ' → logprob: -11.750017166137695
    3. '```' → logprob: -13.250017166137695
    4. '       ' → logprob: -13.375017166137695
    5. '<|end|>' → logprob: -13.500017166137695
    6. '                   ' → logprob: -14.000017166137695
    7. '              ' → logprob: -14.125017166137695
    8. '			' → logprob: -14.250017166137695
    9. '                ' → logprob: -14.875017166137695
    10. '                
' → logprob: -14.875017166137695

Token 917: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03217535838484764
    2. '               ' → logprob: -3.532175302505493
    3. ' if' → logprob: -6.032175540924072
    4. '           ' → logprob: -10.782175064086914
    5. '       ' → logprob: -14.907175064086914
    6. '	if' → logprob: -15.407175064086914
    7. '```' → logprob: -16.282175064086914
    8. 'If' → logprob: -16.407175064086914
    9. ';if' → logprob: -17.032175064086914
    10. '                   ' → logprob: -17.282175064086914

Token 918: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -9.627176768844947e-05
    2. ' area' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.37509536743164
    4. '               ' → logprob: -17.00009536743164
    5. '                   ' → logprob: -17.62509536743164
    6. '           ' → logprob: -18.75009536743164
    7. '  ' → logprob: -19.00009536743164
    8. ' ' → logprob: -19.00009536743164
    9. '(area' → logprob: -20.50009536743164
    10. '                       ' → logprob: -20.50009536743164

Token 919: ' <=' (ID: 5017)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.28328266739845276
    2. '<=' → logprob: -2.15828275680542
    3. ' >' → logprob: -2.15828275680542
    4. ' <=' → logprob: -4.15828275680542
    5. ')' → logprob: -13.658282279968262
    6. '                   ' → logprob: -13.783282279968262
    7. '               ' → logprob: -14.033282279968262
    8. '">' → logprob: -14.033282279968262
    9. '```' → logprob: -14.283282279968262
    10. '   ' → logprob: -14.533282279968262

Token 920: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.9027791495318525e-05
    2. ' m' → logprob: -10.875019073486328
    3. 'max' → logprob: -16.750019073486328
    4. '	m' → logprob: -17.125019073486328
    5. '   ' → logprob: -20.500019073486328
    6. '_m' → logprob: -21.750019073486328
    7. '```' → logprob: -21.750019073486328
    8. ')m' → logprob: -21.875019073486328
    9. 'maks' → logprob: -22.125019073486328
    10. '[m' → logprob: -22.625019073486328

Token 921: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.059463538229465485
    2. ':
' → logprob: -3.4344635009765625
    3. ':' → logprob: -4.3094635009765625
    4. '               ' → logprob: -5.0594635009765625
    5. 'and' → logprob: -5.5594635009765625
    6. '                   ' → logprob: -6.6844635009765625
    7. '           ' → logprob: -7.8094635009765625
    8. '                       ' → logprob: -9.559463500976562
    9. ',' → logprob: -10.559463500976562
    10. '              ' → logprob: -11.059463500976562

Token 922: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3567776083946228
    2. ' and' → logprob: -1.2317776679992676
    3. '               ' → logprob: -4.981777667999268
    4. 'and' → logprob: -6.606777667999268
    5. '                       ' → logprob: -10.35677719116211
    6. '                  ' → logprob: -11.60677719116211
    7. ' if' → logprob: -12.10677719116211
    8. '           ' → logprob: -12.23177719116211
    9. '                ' → logprob: -12.23177719116211
    10. '                    ' → logprob: -12.35677719116211

Token 923: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6772626042366028
    2. 'found' → logprob: -0.8022626042366028
    3. '                   ' → logprob: -3.802262544631958
    4. ' if' → logprob: -4.302262783050537
    5. ' found' → logprob: -5.552262783050537
    6. '               ' → logprob: -5.927262783050537
    7. '                       ' → logprob: -6.927262783050537
    8. 'max' → logprob: -8.802262306213379
    9. '   ' → logprob: -10.177262306213379
    10. '           ' → logprob: -10.177262306213379

Token 924: ' area' (ID: 3624)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.053199492394924164
    2. 'found' → logprob: -3.053199529647827
    3. '                   ' → logprob: -5.553199291229248
    4. ' if' → logprob: -7.928199291229248
    5. '                       ' → logprob: -8.928199768066406
    6. '               ' → logprob: -9.053199768066406
    7. '   ' → logprob: -10.178199768066406
    8. ' found' → logprob: -10.428199768066406
    9. '           ' → logprob: -10.803199768066406
    10. '       ' → logprob: -12.303199768066406

Token 925: ' déjà' (ID: 21229)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5584880709648132
    2. ' >' → logprob: -1.558488130569458
    3. '=' → logprob: -2.058488130569458
    4. '                   ' → logprob: -2.808488130569458
    5. ' =' → logprob: -4.433487892150879
    6. '                       ' → logprob: -5.808487892150879
    7. '               ' → logprob: -6.058487892150879
    8. '>=' → logprob: -6.433487892150879
    9. ' >=' → logprob: -6.558487892150879
    10. ',' → logprob: -6.558487892150879

Token 926: ' <=' (ID: 5017)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.02355675958096981
    2. 'if' → logprob: -4.273556709289551
    3. ' >' → logprob: -5.273556709289551
    4. '                   ' → logprob: -6.398556709289551
    5. 'max' → logprob: -7.023556709289551
    6. '<=' → logprob: -7.523556709289551
    7. '                       ' → logprob: -8.39855670928955
    8. ' if' → logprob: -8.64855670928955
    9. ',' → logprob: -8.77355670928955
    10. '               ' → logprob: -9.39855670928955

Token 927: ' m' (ID: 284)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.004289115313440561
    2. ' max' → logprob: -5.754289150238037
    3. '                   ' → logprob: -7.129289150238037
    4. 'area' → logprob: -8.504288673400879
    5. '                       ' → logprob: -10.629288673400879
    6. '               ' → logprob: -11.129288673400879
    7. '
' → logprob: -11.754288673400879
    8. '                    ' → logprob: -11.879288673400879
    9. '=max' → logprob: -12.254288673400879
    10. '           ' → logprob: -12.754288673400879

Token 928: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03699856996536255
    2. ' and' → logprob: -3.6619985103607178
    3. '                       ' → logprob: -5.911998748779297
    4. ':
' → logprob: -6.161998748779297
    5. ':' → logprob: -6.411998748779297
    6. ',' → logprob: -6.411998748779297
    7. '               ' → logprob: -7.286998748779297
    8. '<|end|>' → logprob: -7.661998748779297
    9. 'and' → logprob: -7.786998748779297
    10. '
' → logprob: -7.911998748779297

Token 929: ' vérifier' (ID: 93671)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2624138295650482
    2. 'if' → logprob: -1.6374138593673706
    3. ' if' → logprob: -3.762413740158081
    4. 'found' → logprob: -4.51241397857666
    5. ' found' → logprob: -6.38741397857666
    6. '                       ' → logprob: -8.51241397857666
    7. '               ' → logprob: -8.63741397857666
    8. '           ' → logprob: -11.13741397857666
    9. '                    ' → logprob: -12.01241397857666
    10. '				' → logprob: -12.38741397857666

Token 930: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.30823835730552673
    2. '                   ' → logprob: -1.6832383871078491
    3. ' if' → logprob: -2.5582382678985596
    4. '               ' → logprob: -6.683238506317139
    5. 'ratio' → logprob: -7.558238506317139
    6. '                       ' → logprob: -9.18323802947998
    7. '           ' → logprob: -9.80823802947998
    8. '                    ' → logprob: -10.80823802947998
    9. '   ' → logprob: -11.05823802947998
    10. 'and' → logprob: -11.18323802947998

Token 931: ' meilleur' (ID: 37552)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.2519347369670868
    2. ' area' → logprob: -1.5019347667694092
    3. '                   ' → logprob: -12.876935005187988
    4. '   ' → logprob: -13.251935005187988
    5. '>' → logprob: -14.876935005187988
    6. '(area' → logprob: -15.001935005187988
    7. '               ' → logprob: -15.501935005187988
    8. '                       ' → logprob: -15.626935005187988
    9. ' ' → logprob: -16.626934051513672
    10. ' área' → logprob: -16.751934051513672

Token 932: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04455483704805374
    2. ' if' → logprob: -4.044554710388184
    3. '                       ' → logprob: -4.169554710388184
    4. '               ' → logprob: -5.544554710388184
    5. 'if' → logprob: -5.919554710388184
    6. ' and' → logprob: -6.169554710388184
    7. ':' → logprob: -7.919554710388184
    8. ':
' → logprob: -7.919554710388184
    9. '                    
' → logprob: -8.044554710388184
    10. 'and' → logprob: -8.669554710388184

Token 933: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0013363128527998924
    2. '               ' → logprob: -7.126336097717285
    3. '                       ' → logprob: -8.251336097717285
    4. ' and' → logprob: -9.251336097717285
    5. '           ' → logprob: -9.251336097717285
    6. 'and' → logprob: -10.501336097717285
    7. '                    ' → logprob: -11.251336097717285
    8. '       ' → logprob: -11.626336097717285
    9. '<|end|>' → logprob: -11.876336097717285
    10. '   ' → logprob: -12.376336097717285

Token 934: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.26968035101890564
    2. ' if' → logprob: -2.0196802616119385
    3. '                   ' → logprob: -2.2696802616119385
    4. '               ' → logprob: -8.64468002319336
    5. '                       ' → logprob: -9.26968002319336
    6. '           ' → logprob: -10.14468002319336
    7. '   ' → logprob: -11.39468002319336
    8. '       ' → logprob: -12.26968002319336
    9. '	if' → logprob: -13.51968002319336
    10. '<|end|>' → logprob: -13.89468002319336

Token 935: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.005236717872321606
    2. ' area' → logprob: -5.255236625671387
    3. '                   ' → logprob: -13.255236625671387
    4. '   ' → logprob: -14.380236625671387
    5. '                       ' → logprob: -15.505236625671387
    6. '               ' → logprob: -15.630236625671387
    7. '           ' → logprob: -17.130237579345703
    8. ' ' → logprob: -17.130237579345703
    9. '  ' → logprob: -17.755237579345703
    10. '    ' → logprob: -17.880237579345703

Token 936: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.31326964497566223
    2. ' >' → logprob: -1.3132696151733398
    3. '                   ' → logprob: -13.68826961517334
    4. '   ' → logprob: -13.68826961517334
    5. ' ' → logprob: -13.81326961517334
    6. '">' → logprob: -14.31326961517334
    7. '                       ' → logprob: -14.43826961517334
    8. '                           ' → logprob: -14.68826961517334
    9. '               ' → logprob: -14.81326961517334
    10. '```' → logprob: -15.56326961517334

Token 937: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0206720617134124e-05
    2. ' max' → logprob: -11.50001049041748
    3. '_max' → logprob: -22.375009536743164
    4. '[max' → logprob: -22.625009536743164
    5. '	max' → logprob: -22.750009536743164
    6. '=max' → logprob: -23.000009536743164
    7. '(max' → logprob: -23.750009536743164
    8. 'maximum' → logprob: -23.875009536743164
    9. '   ' → logprob: -24.375009536743164
    10. ',max' → logprob: -25.125009536743164

Token 938: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -3.128163257315464e-07
    2. 'area' → logprob: -15.5
    3. 'Area' → logprob: -19.25
    4. '_AREA' → logprob: -19.625
    5. '_' → logprob: -20.25
    6. ' area' → logprob: -20.875
    7. '_are' → logprob: -20.875
    8. ')' → logprob: -22.375
    9. '_max' → logprob: -22.625
    10. '_angle' → logprob: -22.75

Token 939: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.746299147605896
    2. ':
' → logprob: -0.871299147605896
    3. '                       ' → logprob: -2.2462992668151855
    4. '                   ' → logprob: -6.6212992668151855
    5. '):
' → logprob: -8.871298789978027
    6. '                           ' → logprob: -9.871298789978027
    7. '               ' → logprob: -10.746298789978027
    8. ' and' → logprob: -10.746298789978027
    9. ' :
' → logprob: -11.121298789978027
    10. ':

' → logprob: -11.371298789978027

Token 940: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.002622743137180805
    2. ':' → logprob: -7.127622604370117
    3. '                   ' → logprob: -7.252622604370117
    4. ':
' → logprob: -7.377622604370117
    5. '                        
' → logprob: -9.252622604370117
    6. '<|end|>' → logprob: -9.752622604370117
    7. ' :
' → logprob: -10.002622604370117
    8. '                           ' → logprob: -10.127622604370117
    9. '):
' → logprob: -10.252622604370117
    10. ' :' → logprob: -10.502622604370117

Token 941: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.13388113677501678
    2. ' max' → logprob: -2.133881092071533
    3. '                       ' → logprob: -5.133881092071533
    4. '                           ' → logprob: -6.883881092071533
    5. '                               ' → logprob: -12.133881568908691
    6. '                   ' → logprob: -13.008881568908691
    7. '           ' → logprob: -13.758881568908691
    8. '               ' → logprob: -13.758881568908691
    9. '(max' → logprob: -14.883881568908691
    10. '	max' → logprob: -15.133881568908691

Token 942: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: 0.0
    2. '_' → logprob: -17.375
    3. 'area' → logprob: -18.25
    4. '_are' → logprob: -18.75
    5. 'Area' → logprob: -19.25
    6. '_p' → logprob: -19.75
    7. '_AREA' → logprob: -20.0
    8. ' area' → logprob: -21.125
    9. '_angle' → logprob: -21.5
    10. '_a' → logprob: -21.5

Token 943: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759777426719666
    2. '=' → logprob: -0.8259777426719666
    3. ',' → logprob: -10.200977325439453
    4. '                           ' → logprob: -14.575977325439453
    5. '=max' → logprob: -16.200977325439453
    6. '=

' → logprob: -16.450977325439453
    7. '                       ' → logprob: -16.575977325439453
    8. '＝' → logprob: -16.825977325439453
    9. '   ' → logprob: -17.075977325439453
    10. '                               ' → logprob: -17.200977325439453

Token 944: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.0001234428636962548
    2. ' area' → logprob: -9.000123023986816
    3. '   ' → logprob: -18.250123977661133
    4. '                   ' → logprob: -20.375123977661133
    5. 'answer' → logprob: -20.500123977661133
    6. 'Area' → logprob: -20.750123977661133
    7. 'angle' → logprob: -21.000123977661133
    8. 'amount' → logprob: -21.250123977661133
    9. 'age' → logprob: -21.625123977661133
    10. ' ' → logprob: -21.625123977661133

Token 945: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.002706084866076708
    2. '<|end|>' → logprob: -6.502706050872803
    3. '                        
' → logprob: -7.752706050872803
    4. '
' → logprob: -8.002706527709961
    5. ',' → logprob: -8.877706527709961
    6. '                        ' → logprob: -9.127706527709961
    7. '```' → logprob: -9.627706527709961
    8. '                           ' → logprob: -10.127706527709961
    9. '               ' → logprob: -10.877706527709961
    10. '                   ' → logprob: -10.877706527709961

Token 946: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.000584249384701252
    2. '<|end|>' → logprob: -8.500584602355957
    3. '```' → logprob: -8.875584602355957
    4. '                        
' → logprob: -9.625584602355957
    5. '               ' → logprob: -10.000584602355957
    6. ',' → logprob: -10.375584602355957
    7. '                        ' → logprob: -10.375584602355957
    8. '                           ' → logprob: -10.875584602355957
    9. '                   ' → logprob: -11.125584602355957
    10. '           ' → logprob: -11.375584602355957

Token 947: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.25938093662261963
    2. '                       ' → logprob: -1.7593809366226196
    3. ' best' → logprob: -2.88438081741333
    4. '                           ' → logprob: -8.259381294250488
    5. 'found' → logprob: -9.509381294250488
    6. '                               ' → logprob: -10.384381294250488
    7. '                   ' → logprob: -10.884381294250488
    8. '               ' → logprob: -11.509381294250488
    9. '(best' → logprob: -11.634381294250488
    10. '   ' → logprob: -11.759381294250488

Token 948: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -3.128163257315464e-07
    2. 'p' → logprob: -15.75
    3. '_' → logprob: -17.125
    4. '_q' → logprob: -18.875
    5. '   ' → logprob: -20.5
    6. '```' → logprob: -20.875
    7. '\' → logprob: -21.75
    8. '=' → logprob: -22.0
    9. 's' → logprob: -22.375
    10. 'a' → logprob: -22.625

Token 949: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20519915223121643
    2. ' =' → logprob: -1.705199122428894
    3. ',' → logprob: -5.580199241638184
    4. '=p' → logprob: -12.080199241638184
    5. ' ,' → logprob: -14.455199241638184
    6. ',p' → logprob: -15.205199241638184
    7. '<|end|>' → logprob: -15.580199241638184
    8. 'p' → logprob: -15.955199241638184
    9. '＝' → logprob: -16.705198287963867
    10. ')' → logprob: -16.955198287963867

Token 950: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -9.615255839889869e-05
    2. ' p' → logprob: -9.250096321105957
    3. '	p' → logprob: -19.62509536743164
    4. '<p' → logprob: -21.50009536743164
    5. '_p' → logprob: -21.62509536743164
    6. ''p' → logprob: -21.75009536743164
    7. '(p' → logprob: -22.75009536743164
    8. 'pm' → logprob: -23.00009536743164
    9. '```' → logprob: -23.12509536743164
    10. '*p' → logprob: -23.25009536743164

Token 951: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.000627014203928411
    2. '
' → logprob: -8.375626564025879
    3. '               ' → logprob: -8.875626564025879
    4. '           ' → logprob: -9.375626564025879
    5. '<|end|>' → logprob: -9.875626564025879
    6. '                        
' → logprob: -10.125626564025879
    7. '                   ' → logprob: -10.500626564025879
    8. '       ' → logprob: -11.250626564025879
    9. '					' → logprob: -11.375626564025879
    10. '                        ' → logprob: -12.000626564025879

Token 952: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00013369438238441944
    2. '                        
' → logprob: -10.000133514404297
    3. '               ' → logprob: -10.250133514404297
    4. '           ' → logprob: -11.000133514404297
    5. '                   ' → logprob: -11.500133514404297
    6. 'best' → logprob: -11.625133514404297
    7. '                        ' → logprob: -12.250133514404297
    8. '					' → logprob: -12.375133514404297
    9. '       ' → logprob: -13.375133514404297
    10. '                           ' → logprob: -13.750133514404297

Token 953: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.000718030845746398
    2. ' best' → logprob: -7.250718116760254
    3. '                       ' → logprob: -11.875718116760254
    4. 'q' → logprob: -13.750718116760254
    5. '	best' → logprob: -16.625717163085938
    6. '_best' → logprob: -18.375717163085938
    7. '(best' → logprob: -18.500717163085938
    8. ' q' → logprob: -18.625717163085938
    9. '                   ' → logprob: -18.750717163085938
    10. 'b' → logprob: -18.750717163085938

Token 954: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -1.2471589798224159e-05
    2. 'q' → logprob: -11.750012397766113
    3. '_' → logprob: -12.375012397766113
    4. '_p' → logprob: -15.375012397766113
    5. '=' → logprob: -17.62501335144043
    6. '_c' → logprob: -19.50001335144043
    7. ' _' → logprob: -19.87501335144043
    8. '_=' → logprob: -19.87501335144043
    9. '_s' → logprob: -20.25001335144043
    10. '\' → logprob: -20.37501335144043

Token 955: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759484171867371
    2. ' =' → logprob: -0.8259484171867371
    3. '=q' → logprob: -11.700948715209961
    4. ' ' → logprob: -15.325948715209961
    5. ' q' → logprob: -15.325948715209961
    6. '<|end|>' → logprob: -15.825948715209961
    7. ')' → logprob: -17.57594871520996
    8. 'q' → logprob: -17.82594871520996
    9. ',' → logprob: -18.20094871520996
    10. ' ' → logprob: -18.82594871520996

Token 956: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.676292231422849e-05
    2. ' q' → logprob: -11.000017166137695
    3. '	q' → logprob: -18.750017166137695
    4. '$q' → logprob: -21.125017166137695
    5. '   ' → logprob: -21.375017166137695
    6. '[q' → logprob: -23.250017166137695
    7. 'qml' → logprob: -23.625017166137695
    8. '*q' → logprob: -23.750017166137695
    9. ' ' → logprob: -23.875017166137695
    10. '                   ' → logprob: -24.250017166137695

Token 957: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031805556267499924
    2. '           ' → logprob: -3.7818055152893066
    3. '   ' → logprob: -6.031805515289307
    4. '
' → logprob: -6.281805515289307
    5. '               ' → logprob: -7.031805515289307
    6. '```' → logprob: -7.156805515289307
    7. '                        
' → logprob: -7.656805515289307
    8. 'return' → logprob: -7.656805515289307
    9. '<|end|>' → logprob: -7.656805515289307
    10. '        
' → logprob: -7.906805515289307

Token 958: '                   ' (ID: 699)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016792844980955124
    2. '           ' → logprob: -4.2667927742004395
    3. '   ' → logprob: -7.1417927742004395
    4. '```' → logprob: -7.6417927742004395
    5. '               ' → logprob: -8.016793251037598
    6. '                   ' → logprob: -8.266793251037598
    7. '
' → logprob: -8.391793251037598
    8. '<|end|>' → logprob: -9.016793251037598
    9. '        
' → logprob: -9.141793251037598
    10. '                        
' → logprob: -9.141793251037598

Token 959: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.15185430645942688
    2. 'break' (adapté à ' break') → logprob: -2.4018542766571045
    3. '               ' → logprob: -3.6518542766571045
    4. '           ' → logprob: -4.276854515075684
    5. 'return' → logprob: -5.276854515075684
    6. '       ' → logprob: -5.526854515075684
    7. '   ' → logprob: -7.901854515075684
    8. '```' → logprob: -8.151854515075684
    9. ' break' → logprob: -8.526854515075684
    10. '                       ' → logprob: -8.526854515075684

Token 960: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 961: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8231147527694702
    2. '        ' → logprob: -1.3231147527694702
    3. '<|end|>' → logprob: -1.3231147527694702
    4. '   ' → logprob: -5.44811487197876
    5. '<|end|>' → logprob: -5.57311487197876
    6. '    ' → logprob: -5.57311487197876
    7. '        
' → logprob: -5.69811487197876
    8. '      ' → logprob: -6.82311487197876
    9. 'return' → logprob: -6.94811487197876
    10. '           ' → logprob: -7.07311487197876

Token 962: ' on' (ID: 402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 963: ' a' (ID: 261)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.24460092186927795
    2. 'continue' → logprob: -1.6196008920669556
    3. '           ' → logprob: -4.869600772857666
    4. ' continues' → logprob: -5.494600772857666
    5. 'contin' → logprob: -6.619600772857666
    6. ' trouve' → logprob: -6.619600772857666
    7. '_continue' → logprob: -6.744600772857666
    8. '               ' → logprob: -6.994600772857666
    9. '                   ' → logprob: -7.744600772857666
    10. ' continuer' → logprob: -8.369601249694824

Token 964: ' trouvé' (ID: 60081)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.052502620965242386
    2. 'cher' → logprob: -3.8025026321411133
    3. 'found' → logprob: -4.927502632141113
    4. ' trouvé' → logprob: -5.302502632141113
    5. 'pu' → logprob: -5.552502632141113
    6. 'continu' → logprob: -5.552502632141113
    7. 'optim' → logprob: -6.552502632141113
    8. 'vou' → logprob: -6.802502632141113
    9. 'max' → logprob: -6.927502632141113
    10. 'v' → logprob: -7.177502632141113

Token 965: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 966: ' plus' (ID: 2932)
  Prédit: 'me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.6333443522453308
    2. ' meilleur' → logprob: -2.0083444118499756
    3. 'p' → logprob: -2.1333444118499756
    4. 'prem' → logprob: -2.2583444118499756
    5. 'best' → logprob: -2.7583444118499756
    6. 'max' → logprob: -4.1333441734313965
    7. 'next' → logprob: -5.0083441734313965
    8. 'token' → logprob: -5.3833441734313965
    9. 'maximum' → logprob: -5.5083441734313965
    10. '```' → logprob: -5.6333441734313965

Token 967: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.1139373853802681
    2. ' grand' → logprob: -2.2389373779296875
    3. 'gr' → logprob: -7.7389373779296875
    4. 'large' → logprob: -8.238937377929688
    5. 'haut' → logprob: -9.488937377929688
    6. '```' → logprob: -9.488937377929688
    7. '_gr' → logprob: -10.238937377929688
    8. 'g' → logprob: -10.613937377929688
    9. '-grand' → logprob: -10.863937377929688
    10. ' grands' → logprob: -10.988937377929688

Token 968: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0005583931924775243
    2. '```' → logprob: -8.000558853149414
    3. ' p' → logprob: -9.125558853149414
    4. '_p' → logprob: -10.750558853149414
    5. 'possible' → logprob: -10.750558853149414
    6. ')' → logprob: -11.125558853149414
    7. '<|end|>' → logprob: -11.625558853149414
    8. 'prem' → logprob: -11.750558853149414
    9. 'token' → logprob: -11.875558853149414
    10. 'pr' → logprob: -12.250558853149414

Token 969: ' possible' (ID: 4149)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 970: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 971: ' ce' (ID: 2357)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.15931668877601624
    2. 'ce' → logprob: -2.1593167781829834
    3. 'c' → logprob: -3.6593167781829834
    4. 'cet' → logprob: -5.159316539764404
    5. 'this' → logprob: -9.284317016601562
    6. ' ce' → logprob: -9.534317016601562
    7. 'cel' → logprob: -9.784317016601562
    8. 'ces' → logprob: -9.909317016601562
    9. 'le' → logprob: -10.784317016601562
    10. 'que' → logprob: -11.034317016601562

Token 972: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00043281487887725234
    2. ' q' → logprob: -7.750432968139648
    3. '(q' → logprob: -14.875432968139648
    4. '	q' → logprob: -15.125432968139648
    5. 'qu' → logprob: -15.375432968139648
    6. 'for' → logprob: -15.500432968139648
    7. '_q' → logprob: -15.625432968139648
    8. '$q' → logprob: -16.12543296813965
    9. 'pair' → logprob: -16.12543296813965
    10. ''q' → logprob: -16.25043296813965

Token 973: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 974: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010766234248876572
    2. '       ' → logprob: -4.88576602935791
    3. 'print' → logprob: -5.88576602935791
    4. '
' → logprob: -8.88576602935791
    5. '    
' → logprob: -9.26076602935791
    6. '<|end|>' → logprob: -9.76076602935791
    7. '```' → logprob: -10.26076602935791
    8. '        
' → logprob: -10.76076602935791
    9. 'if' → logprob: -11.51076602935791
    10. 'import' → logprob: -12.26076602935791

Token 975: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027377156540751457
    2. '
' → logprob: -3.902377128601074
    3. 'print' (adapté à ' print') → logprob: -5.277377128601074
    4. '    
' → logprob: -7.402377128601074
    5. '<|end|>' → logprob: -7.652377128601074
    6. '       ' → logprob: -7.777377128601074
    7. '```' → logprob: -9.152377128601074
    8. '        
' → logprob: -10.527377128601074
    9. '\
' → logprob: -11.152377128601074
    10. '
' → logprob: -11.277377128601074

Token 976: '(best' (ID: 118299)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.4740852415561676
    2. '(best' → logprob: -0.9740852117538452
    3. '((' → logprob: -13.224084854125977
    4. 'f' → logprob: -13.224084854125977
    5. '("{}' → logprob: -13.224084854125977
    6. '(' → logprob: -13.724084854125977
    7. '(str' → logprob: -13.849084854125977
    8. 'best' → logprob: -15.474084854125977
    9. '(b' → logprob: -15.599084854125977
    10. '('{}' → logprob: -15.724084854125977

Token 977: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.005552354734390974
    2. '_' → logprob: -5.255552291870117
    3. '_q' → logprob: -8.130552291870117
    4. '_)' → logprob: -11.880552291870117
    5. ' _' → logprob: -12.005552291870117
    6. ')' → logprob: -12.505552291870117
    7. '_,' → logprob: -13.005552291870117
    8. '\' → logprob: -14.130552291870117
    9. '_
' → logprob: -14.130552291870117
    10. ')_' → logprob: -14.630552291870117

Token 978: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013738969573751092
    2. ' ,' → logprob: -9.250137329101562
    3. ',end' → logprob: -10.500137329101562
    4. ')' → logprob: -11.625137329101562
    5. ',b' → logprob: -12.750137329101562
    6. ',
' → logprob: -14.125137329101562
    7. ',p' → logprob: -15.625137329101562
    8. 'best' → logprob: -15.750137329101562
    9. ',"' → logprob: -16.125137329101562
    10. '"' → logprob: -16.625137329101562

Token 979: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -1.0206720617134124e-05
    2. ' best' → logprob: -11.50001049041748
    3. '(best' → logprob: -19.000009536743164
    4. '	best' → logprob: -21.375009536743164
    5. '_best' → logprob: -22.375009536743164
    6. '-best' → logprob: -23.000009536743164
    7. '.best' → logprob: -23.250009536743164
    8. 'Best' → logprob: -25.125009536743164
    9. ')' → logprob: -27.250009536743164
    10. 'beste' → logprob: -27.500009536743164

Token 980: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -9.088346359931165e-07
    2. '_p' → logprob: -14.750000953674316
    3. 'underscore' → logprob: -16.125
    4. '```' → logprob: -16.125
    5. '_' → logprob: -16.75
    6. ' _' → logprob: -17.25
    7. 'q' → logprob: -17.25
    8. '\' → logprob: -17.75
    9. ')' → logprob: -18.0
    10. ''' → logprob: -18.25

Token 981: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.779520092299208e-05
    2. '<|end|>' → logprob: -9.875078201293945
    3. ' )' → logprob: -11.375078201293945
    4. ',' → logprob: -11.875078201293945
    5. ')
' → logprob: -13.125078201293945
    6. '")' → logprob: -13.500078201293945
    7. '```' → logprob: -14.000078201293945
    8. '}' → logprob: -14.000078201293945
    9. ')}' → logprob: -14.625078201293945
    10. '')' → logprob: -14.750078201293945

Token 982: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 983: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.10022144019603729
    2. '__' → logprob: -2.3502213954925537
    3. '___' → logprob: -12.225221633911133
    4. 'name' → logprob: -12.725221633911133
    5. '_name' → logprob: -12.975221633911133
    6. '_' → logprob: -13.350221633911133
    7. ' ' → logprob: -14.225221633911133
    8. ' "__' → logprob: -14.725221633911133
    9. 'if' → logprob: -15.350221633911133
    10. ' ' → logprob: -15.350221633911133

Token 984: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.016053255647420883
    2. ' __' → logprob: -4.266053199768066
    3. ' ==' → logprob: -6.641053199768066
    4. 'name' → logprob: -8.266053199768066
    5. '==' → logprob: -9.141053199768066
    6. '_' → logprob: -9.391053199768066
    7. '_name' → logprob: -10.266053199768066
    8. '=="' → logprob: -11.016053199768066
    9. '("__' → logprob: -11.141053199768066
    10. '__.__' → logprob: -12.266053199768066

Token 985: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.200166469876422e-06
    2. '__.__' → logprob: -12.875004768371582
    3. '==' → logprob: -13.125004768371582
    4. '__.' → logprob: -14.875004768371582
    5. '=="' → logprob: -16.3750057220459
    6. '___' → logprob: -16.7500057220459
    7. ' ==' → logprob: -17.0000057220459
    8. '____' → logprob: -17.3750057220459
    9. '__["' → logprob: -17.5000057220459
    10. '__('' → logprob: -18.2500057220459

Token 986: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.034660208970308304
    2. '==' → logprob: -3.7846601009368896
    3. ' ==' → logprob: -4.909660339355469
    4. '=="' → logprob: -5.534660339355469
    5. '=='' → logprob: -11.034660339355469
    6. '__.__' → logprob: -12.909660339355469
    7. '___' → logprob: -13.034660339355469
    8. '===' → logprob: -13.659660339355469
    9. '"' → logprob: -14.034660339355469
    10. '__["' → logprob: -14.409660339355469

Token 987: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00249289907515049
    2. ''' → logprob: -6.002492904663086
    3. '__' → logprob: -11.252492904663086
    4. ' "__' → logprob: -12.377492904663086
    5. ' '__' → logprob: -17.877492904663086
    6. '   ' → logprob: -18.377492904663086
    7. '"name' → logprob: -19.002492904663086
    8. '("__' → logprob: -19.252492904663086
    9. '"user' → logprob: -19.502492904663086
    10. 'main' → logprob: -20.377492904663086

Token 988: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.043316133320331573
    2. '__' → logprob: -3.168316125869751
    3. '"' → logprob: -8.418315887451172
    4. ''' → logprob: -10.043315887451172
    5. 'name' → logprob: -10.418315887451172
    6. '__":
' → logprob: -11.168315887451172
    7. 'built' → logprob: -13.043315887451172
    8. '__
' → logprob: -13.668315887451172
    9. '_main' → logprob: -13.668315887451172
    10. '__':
' → logprob: -13.793315887451172

Token 989: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.16083338856697083
    2. '__' → logprob: -1.9108333587646484
    3. '__':
' → logprob: -7.535833358764648
    4. '__.' → logprob: -10.535833358764648
    5. '__:' → logprob: -10.910833358764648
    6. '__.__' → logprob: -10.910833358764648
    7. '__["' → logprob: -11.910833358764648
    8. '__",' → logprob: -13.410833358764648
    9. '__[' → logprob: -14.035833358764648
    10. '__("' → logprob: -14.410833358764648

Token 990: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026602506637573242
    2. '	main' → logprob: -4.026602745056152
    3. 'main' → logprob: -5.151602745056152
    4. ' main' → logprob: -7.026602745056152
    5. '    
' → logprob: -7.151602745056152
    6. '(main' → logprob: -7.901602745056152
    7. '_main' → logprob: -8.401602745056152
    8. '```' → logprob: -9.401602745056152
    9. '   ' → logprob: -9.901602745056152
    10. '.mainloop' → logprob: -10.026602745056152

Token 991: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -6.704273118884885e-07
    2. ' main' → logprob: -14.500000953674316
    3. '	main' → logprob: -16.75
    4. '   ' → logprob: -17.5
    5. '_main' → logprob: -22.0
    6. '.main' → logprob: -22.375
    7. 'Main' → logprob: -24.0
    8. '(main' → logprob: -24.125
    9. '  ' → logprob: -24.5
    10. 'mainwindow' → logprob: -25.625

Token 992: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 990
Tokens correctement prédits (1ère position, stricte): 299
Tokens correctement prédits (1ère position, avec adaptation): 322
Tokens correctement prédits (top 10): 678
Précision stricte (1ère position): 30.20%
Précision adaptée (1ère position): 32.53%
Précision (top 10): 68.48%
================================================================================
