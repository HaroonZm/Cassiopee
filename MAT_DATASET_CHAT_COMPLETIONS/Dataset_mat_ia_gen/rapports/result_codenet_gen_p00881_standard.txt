================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

def solve(m, objects):
    n = len(objects)
    objs = [int(o, 2) for o in objects]
    all_mask = (1 << m) - 1

    from functools import lru_cache

    @lru_cache(None)
    def dfs(mask, group):
        if len(group) <= 1:
            return 0
        res = float('inf')
        used = [False]*m
        for x in group:
            for i in range(m):
                used[i] = True
        for f in range(m):
            # partition the group by feature f
            s0 = tuple(x for x in group if (objs[x] & (1 << (m - 1 - f))) == 0)
            s1 = tuple(x for x in group if (objs[x] & (1 << (m - 1 - f))) != 0)
            if s0 and s1:
                v = 1 + max(dfs(mask | (1<<f), s0), dfs(mask | (1<<f), s1))
                if v < res:
                    res = v
        if res == float('inf'):
            return 0
        return res

    return dfs(0, tuple(range(n)))

input=sys.stdin.readline
while True:
    m,n = map(int,input().split())
    if m==0 and n==0: break
    objects=[input().strip() for _ in range(n)]
    print(solve(m,objects))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20001201331615448
    2. '.' → logprob: -2.450011968612671
    3. '<|end|>' → logprob: -2.825011968612671
    4. '\' → logprob: -4.70001220703125
    5. 'newline' → logprob: -5.07501220703125
    6. 'import' → logprob: -5.07501220703125
    7. '' → logprob: -5.82501220703125
    8. '
' → logprob: -5.82501220703125
    9. '<|end|>' → logprob: -5.82501220703125
    10. '\r' → logprob: -6.32501220703125

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.868328920158092e-05
    2. ' .' → logprob: -11.625028610229492
    3. '.import' → logprob: -12.375028610229492
    4. '.readline' → logprob: -13.125028610229492
    5. '.user' → logprob: -13.375028610229492
    6. '.`' → logprob: -13.750028610229492
    7. '[' → logprob: -14.000028610229492
    8. '.stdout' → logprob: -14.125028610229492
    9. '."""' → logprob: -14.125028610229492
    10. '.exit' → logprob: -14.250028610229492

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.7563169002532959
    2. 's' → logprob: -1.131316900253296
    3. 't' → logprob: -3.006316900253296
    4. 'sys' → logprob: -3.256316900253296
    5. 'set' → logprob: -3.631316900253296
    6. 'soft' → logprob: -4.006317138671875
    7. 'default' → logprob: -4.256317138671875
    8. 'ex' → logprob: -4.881317138671875
    9. '_' → logprob: -5.006317138671875
    10. 'suffix' → logprob: -5.131317138671875

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0013160702073946595
    2. 'ursive' → logprob: -6.876316070556641
    3. 'ur' → logprob: -9.37631607055664
    4. 'urs' → logprob: -10.00131607055664
    5. '_' → logprob: -10.12631607055664
    6. 'limit' → logprob: -10.37631607055664
    7. '_limit' → logprob: -11.00131607055664
    8. 'urf' → logprob: -11.12631607055664
    9. 't' → logprob: -11.62631607055664
    10. 'ursor' → logprob: -11.87631607055664

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.48526206612586975
    2. 'limit' → logprob: -0.9852620363235474
    3. '_depth' → logprob: -4.610261917114258
    4. 'depth' → logprob: -7.485261917114258
    5. '_' → logprob: -8.485261917114258
    6. '_rate' → logprob: -10.110261917114258
    7. 'lim' → logprob: -10.235261917114258
    8. '(' → logprob: -10.485261917114258
    9. '_factor' → logprob: -10.485261917114258
    10. '_stack' → logprob: -10.735261917114258

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5928495486150496e-05
    2. '(
' → logprob: -11.750016212463379
    3. ' (' → logprob: -12.375016212463379
    4. '(

' → logprob: -13.000016212463379
    5. '((' → logprob: -14.750016212463379
    6. '("("' → logprob: -15.125016212463379
    7. '```' → logprob: -15.500016212463379
    8. '('' → logprob: -15.875016212463379
    9. '(None' → logprob: -16.250015258789062
    10. '()' → logprob: -16.625015258789062

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10064796358346939
    2. '100' → logprob: -2.3506479263305664
    3. ' ' → logprob: -8.100647926330566
    4. '500' → logprob: -9.850647926330566
    5. '300' → logprob: -9.975647926330566
    6. '250' → logprob: -10.725647926330566
    7. '  ' → logprob: -12.350647926330566
    8. '   ' → logprob: -12.600647926330566
    9. '200' → logprob: -12.975647926330566
    10. '999' → logprob: -13.100647926330566

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007129970006644726
    2. '00' → logprob: -5.757130146026611
    3. '000' → logprob: -5.757130146026611
    4. '4' → logprob: -7.382130146026611
    5. '6' → logprob: -9.007129669189453
    6. '5' → logprob: -11.507129669189453
    7. '```' → logprob: -12.007129669189453
    8. ')' → logprob: -12.257129669189453
    9. '3' → logprob: -12.382129669189453
    10. '**' → logprob: -12.382129669189453

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0047303494065999985
    2. '9' → logprob: -6.004730224609375
    3. '6' → logprob: -6.129730224609375
    4. '8' → logprob: -9.504730224609375
    5. '```' → logprob: -15.254730224609375
    6. ' ' → logprob: -15.629730224609375
    7. '(' → logprob: -16.754730224609375
    8. '``' → logprob: -17.879730224609375
    9. ')' → logprob: -18.129730224609375
    10. '5' → logprob: -18.254730224609375

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. '))' → logprob: -11.75001335144043
    3. ' )' → logprob: -12.12501335144043
    4. ')
' → logprob: -15.62501335144043
    5. ')))' → logprob: -16.75001335144043
    6. ')`' → logprob: -17.00001335144043
    7. ' ' → logprob: -17.25001335144043
    8. '）' → logprob: -18.12501335144043
    9. '`)' → logprob: -18.12501335144043
    10. '```' → logprob: -18.50001335144043

Token 13: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.046520017087459564
    2. '
' → logprob: -3.5465199947357178
    3. '

' → logprob: -4.921520233154297
    4. '```' → logprob: -5.296520233154297
    5. '\' → logprob: -6.421520233154297
    6. '
' → logprob: -7.046520233154297
    7. 'class' → logprob: -7.546520233154297
    8. '\n' → logprob: -7.671520233154297
    9. 'import' → logprob: -8.046520233154297
    10. ')' → logprob: -8.921520233154297

Token 14: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06509348005056381
    2. ' factorial' → logprob: -3.065093517303467
    3. ' dfs' → logprob: -4.440093517303467
    4. ' f' → logprob: -6.690093517303467
    5. ' factor' → logprob: -7.315093517303467
    6. ' space' → logprob: -7.690093517303467
    7. ' my' → logprob: -8.065093040466309
    8. ' fibonacci' → logprob: -8.315093040466309
    9. '_' → logprob: -8.565093040466309
    10. ' a' → logprob: -8.565093040466309

Token 15: '(m' (ID: 2145)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1070641428232193
    2. '_' → logprob: -2.3570642471313477
    3. '```' → logprob: -6.482064247131348
    4. '():' → logprob: -6.607064247131348
    5. ':' → logprob: -6.732064247131348
    6. '(:' → logprob: -7.232064247131348
    7. '_:' → logprob: -7.232064247131348
    8. '(_' → logprob: -8.607064247131348
    9. '):' → logprob: -8.732064247131348
    10. '(_:' → logprob: -8.982064247131348

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019237946718931198
    2. '):' → logprob: -4.019237995147705
    3. ' ,' → logprob: -8.269237518310547
    4. 'a' → logprob: -8.894237518310547
    5. ',a' → logprob: -9.019237518310547
    6. ',int' → logprob: -9.144237518310547
    7. 'atrix' → logprob: -9.394237518310547
    8. ',n' → logprob: -9.644237518310547
    9. ' ):' → logprob: -9.894237518310547
    10. ',m' → logprob: -10.019237518310547

Token 17: ' objects' (ID: 11736)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25177156925201416
    2. ' n' → logprob: -2.0017714500427246
    3. 'k' → logprob: -3.1267714500427246
    4. ' k' → logprob: -4.501771450042725
    5. 'r' → logprob: -5.376771450042725
    6. 'd' → logprob: -5.626771450042725
    7. 's' → logprob: -5.626771450042725
    8. 'a' → logprob: -5.751771450042725
    9. 'b' → logprob: -6.564271450042725
    10. ' s' → logprob: -6.626771450042725

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00369532429613173
    2. ',' → logprob: -5.753695487976074
    3. ')' → logprob: -7.753695487976074
    4. ':' → logprob: -9.878695487976074
    5. '):
' → logprob: -11.253695487976074
    6. '[]):' → logprob: -11.503695487976074
    7. '[' → logprob: -12.628695487976074
    8. ']:' → logprob: -13.503695487976074
    9. ' ):' → logprob: -13.753695487976074
    10. ''):' → logprob: -14.128695487976074

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23844510316848755
    2. ':' → logprob: -1.6134450435638428
    3. '    ' → logprob: -5.363445281982422
    4. '```' → logprob: -5.488445281982422
    5. '\' → logprob: -6.613445281982422
    6. '    
' → logprob: -7.238445281982422
    7. ':
' → logprob: -7.488445281982422
    8. '\n' → logprob: -8.113445281982422
    9. '):' → logprob: -8.613445281982422
    10. ' :' → logprob: -8.863445281982422

Token 20: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.177245855331421
    2. '   ' → logprob: -1.802245855331421
    3. ' 
' → logprob: -1.802245855331421
    4. 'n' (adapté à ' n') → logprob: -1.927245855331421
    5. ' if' → logprob: -2.802245855331421
    6. ' result' → logprob: -3.427245855331421
    7. '    
' → logprob: -3.927245855331421
    8. '
' → logprob: -4.05224609375
    9. '    ' → logprob: -4.17724609375
    10. 'result' → logprob: -4.80224609375

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005942667368799448
    2. '=' → logprob: -5.1309428215026855
    3. ',' → logprob: -12.255942344665527
    4. '=int' → logprob: -12.505942344665527
    5. ' ' → logprob: -12.630942344665527
    6. '   ' → logprob: -14.505942344665527
    7. ' =)' → logprob: -14.880942344665527
    8. ' =
' → logprob: -15.130942344665527
    9. '=len' → logprob: -15.130942344665527
    10. ' ,' → logprob: -15.255942344665527

Token 22: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0001254693343071267
    2. 'len' → logprob: -9.000125885009766
    3. ' m' → logprob: -13.875125885009766
    4. ' ' → logprob: -14.250125885009766
    5. '(len' → logprob: -15.875125885009766
    6. '=len' → logprob: -16.250125885009766
    7. '	len' → logprob: -16.500125885009766
    8. ' int' → logprob: -17.125125885009766
    9. '[len' → logprob: -17.375125885009766
    10. ' ' → logprob: -17.875125885009766

Token 23: '(objects' (ID: 167816)
  Prédit: '(objects'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(objects' → logprob: -0.005532792769372463
    2. '(m' → logprob: -5.255532741546631
    3. '(' → logprob: -8.255533218383789
    4. 'objects' → logprob: -10.505533218383789
    5. '(object' → logprob: -11.880533218383789
    6. ' objects' → logprob: -12.505533218383789
    7. '.objects' → logprob: -15.255533218383789
    8. '(obj' → logprob: -15.255533218383789
    9. 'm' → logprob: -15.505533218383789
    10. '(ob' → logprob: -15.880533218383789

Token 24: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.265633419388905e-05
    2. ')
' → logprob: -9.875062942504883
    3. ' )' → logprob: -12.125062942504883
    4. '   ' → logprob: -12.375062942504883
    5. ')n' → logprob: -14.750062942504883
    6. ')

' → logprob: -15.750062942504883
    7. '))' → logprob: -16.125062942504883
    8. ')#' → logprob: -16.250062942504883
    9. '`)' → logprob: -16.375062942504883
    10. ')
' → logprob: -16.500062942504883

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7747632265090942
    2. '
' → logprob: -1.1497632265090942
    3. '    
' → logprob: -1.6497632265090942
    4. ' 
' → logprob: -4.524763107299805
    5. '    ' → logprob: -5.524763107299805
    6. ')' → logprob: -6.149763107299805
    7. ':' → logprob: -6.274763107299805
    8. '   
' → logprob: -6.274763107299805
    9. '  
' → logprob: -6.399763107299805
    10. ' ' → logprob: -6.524763107299805

Token 26: ' objs' (ID: 125743)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.21081134676933289
    2. 'dp' → logprob: -1.7108113765716553
    3. '   ' → logprob: -5.335811138153076
    4. ' DP' → logprob: -7.085811138153076
    5. ' max' → logprob: -7.210811138153076
    6. 'd' → logprob: -7.960811138153076
    7. ' visited' → logprob: -8.085811614990234
    8. ' d' → logprob: -8.460811614990234
    9. ' f' → logprob: -8.460811614990234
    10. ' used' → logprob: -8.960811614990234

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24624446034431458
    2. '=' → logprob: -1.8712444305419922
    3. 'ects' → logprob: -2.871244430541992
    4. '.sort' → logprob: -5.996244430541992
    5. '[' → logprob: -6.121244430541992
    6. 'ect' → logprob: -7.621244430541992
    7. '_sorted' → logprob: -7.621244430541992
    8. '   ' → logprob: -7.621244430541992
    9. ' ' → logprob: -8.621244430541992
    10. '```' → logprob: -8.621244430541992

Token 28: ' [' (ID: 723)
  Prédit: ' sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.5251619815826416
    2. ' [' → logprob: -2.0251619815826416
    3. ' [(' → logprob: -2.2751619815826416
    4. ' objects' → logprob: -2.2751619815826416
    5. 'sorted' → logprob: -3.2751619815826416
    6. ' list' → logprob: -4.4001617431640625
    7. '[' → logprob: -4.5251617431640625
    8. '[(' → logprob: -5.4001617431640625
    9. 'objects' → logprob: -5.7751617431640625
    10. ' [[' → logprob: -8.025161743164062

Token 29: 'int' (ID: 491)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10291238874197006
    2. '0' → logprob: -3.727912425994873
    3. '(obj' → logprob: -3.727912425994873
    4. ' (' → logprob: -4.352912425994873
    5. '[' → logprob: -4.977912425994873
    6. '(o' → logprob: -5.352912425994873
    7. '(list' → logprob: -5.602912425994873
    8. '(x' → logprob: -5.977912425994873
    9. '(objects' → logprob: -5.977912425994873
    10. '(None' → logprob: -6.227912425994873

Token 30: '(o' (ID: 18928)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.07834531366825104
    2. '(i' → logprob: -3.20334529876709
    3. '(obj' → logprob: -4.32834529876709
    4. '(o' → logprob: -4.45334529876709
    5. '(' → logprob: -5.45334529876709
    6. '(s' → logprob: -6.45334529876709
    7. '(objects' → logprob: -6.57834529876709
    8. '(a' → logprob: -6.70334529876709
    9. ']' → logprob: -7.95334529876709
    10. '(object' → logprob: -8.70334529876709

Token 31: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001051984610967338
    2. '[' → logprob: -7.376051902770996
    3. '.split' → logprob: -8.001051902770996
    4. ' )' → logprob: -10.876051902770996
    5. 'er' → logprob: -11.751051902770996
    6. '[i' → logprob: -12.001051902770996
    7. '.replace' → logprob: -12.001051902770996
    8. '**' → logprob: -12.251051902770996
    9. ')*' → logprob: -12.251051902770996
    10. 's' → logprob: -12.376051902770996

Token 32: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0200482290238142
    2. '16' → logprob: -4.145048141479492
    3. ' ' → logprob: -6.145048141479492
    4. '8' → logprob: -7.645048141479492
    5. '36' → logprob: -7.895048141479492
    6. '1' → logprob: -8.020048141479492
    7. '3' → logprob: -9.020048141479492
    8. '7' → logprob: -9.145048141479492
    9. '10' → logprob: -9.270048141479492
    10. '0' → logprob: -9.520048141479492

Token 33: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01281251572072506
    2. '16' → logprob: -4.512812614440918
    3. '8' → logprob: -6.762812614440918
    4. '3' → logprob: -8.637812614440918
    5. '36' → logprob: -8.762812614440918
    6. '10' → logprob: -9.637812614440918
    7. '1' → logprob: -10.262812614440918
    8. '7' → logprob: -10.637812614440918
    9. '0' → logprob: -10.887812614440918
    10. '17' → logprob: -11.012812614440918

Token 34: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010402000043541193
    2. '),' → logprob: -9.875103950500488
    3. ')]' → logprob: -11.125103950500488
    4. ' )' → logprob: -11.375103950500488
    5. ')
' → logprob: -12.125103950500488
    6. '))' → logprob: -12.625103950500488
    7. ')`' → logprob: -12.625103950500488
    8. '')' → logprob: -12.875103950500488
    9. ')**' → logprob: -13.000103950500488
    10. ')+' → logprob: -13.250103950500488

Token 35: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00036846695002168417
    2. ' for' → logprob: -8.375368118286133
    3. 'for' → logprob: -9.125368118286133
    4. ' )' → logprob: -11.000368118286133
    5. ' ' → logprob: -13.000368118286133
    6. '   ' → logprob: -13.000368118286133
    7. '),' → logprob: -13.375368118286133
    8. ')]' → logprob: -13.375368118286133
    9. ']' → logprob: -13.875368118286133
    10. '  ' → logprob: -14.625368118286133

Token 36: ' o' (ID: 293)
  Prédit: ' objects'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' objects' → logprob: -0.14620891213417053
    2. 'objects' → logprob: -2.6462090015411377
    3. ' o' → logprob: -2.8962090015411377
    4. 'o' → logprob: -4.646208763122559
    5. '(objects' → logprob: -9.271208763122559
    6. '(o' → logprob: -10.521208763122559
    7. ')' → logprob: -10.646208763122559
    8. ' object' → logprob: -10.896208763122559
    9. 'object' → logprob: -11.021208763122559
    10. 'obj' → logprob: -11.396208763122559

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014202527701854706
    2. 'in' → logprob: -4.26420259475708
    3. ')' → logprob: -10.514202117919922
    4. ' ' → logprob: -11.639202117919922
    5. 'o' → logprob: -14.514202117919922
    6. ']' → logprob: -14.639202117919922
    7. ' )' → logprob: -15.014202117919922
    8. '	in' → logprob: -15.639202117919922
    9. ' o' → logprob: -15.639202117919922
    10. 'objects' → logprob: -15.889202117919922

Token 38: ' objects' (ID: 11736)
  Prédit: 'objects'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'objects' → logprob: -0.03805446997284889
    2. ' objects' → logprob: -3.2880544662475586
    3. '(objects' → logprob: -11.788054466247559
    4. 'range' → logprob: -13.288054466247559
    5. '.objects' → logprob: -13.663054466247559
    6. ')' → logprob: -14.163054466247559
    7. ' range' → logprob: -14.288054466247559
    8. 'object' → logprob: -14.663054466247559
    9. 'objs' → logprob: -15.038054466247559
    10. 'obj' → logprob: -16.038055419921875

Token 39: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0021244457457214594
    2. ')]' → logprob: -6.752124309539795
    3. ')' → logprob: -7.377124309539795
    4. '   ' → logprob: -8.377124786376953
    5. ' ]' → logprob: -9.627124786376953
    6. ']
' → logprob: -10.627124786376953
    7. '])' → logprob: -12.627124786376953
    8. '`]' → logprob: -13.127124786376953
    9. ']

' → logprob: -14.877124786376953
    10. ']
' → logprob: -15.252124786376953

Token 40: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6862612366676331
    2. '   ' → logprob: -1.1862611770629883
    3. '    
' → logprob: -1.9362611770629883
    4. ' 
' → logprob: -3.9362611770629883
    5. ' ' → logprob: -5.061261177062988
    6. '<|end|>' → logprob: -5.686261177062988
    7. ')' → logprob: -5.936261177062988
    8. '  
' → logprob: -5.936261177062988
    9. '    ' → logprob: -5.936261177062988
    10. '   
' → logprob: -6.061261177062988

Token 41: ' all' (ID: 722)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7344895601272583
    2. ' dp' → logprob: -1.8594895601272583
    3. '   ' → logprob: -2.1094894409179688
    4. '
' → logprob: -2.1094894409179688
    5. '    
' → logprob: -2.8594894409179688
    6. ' 
' → logprob: -3.7344894409179688
    7. 'def' → logprob: -4.984489440917969
    8. 'max' → logprob: -5.609489440917969
    9. ' max' → logprob: -5.609489440917969
    10. ' DP' → logprob: -5.734489440917969

Token 42: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.5891405344009399
    2. '_' → logprob: -1.33914053440094
    3. ' =' → logprob: -3.0891404151916504
    4. '_objs' → logprob: -3.4641404151916504
    5. '_set' → logprob: -3.5891404151916504
    6. '_masks' → logprob: -3.8391404151916504
    7. '_sum' → logprob: -4.33914041519165
    8. '_x' → logprob: -4.58914041519165
    9. '_obj' → logprob: -5.08914041519165
    10. '_sets' → logprob: -5.58914041519165

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005929863080382347
    2. '=' → logprob: -5.130929946899414
    3. ')' → logprob: -14.130929946899414
    4. 's' → logprob: -15.630929946899414
    5. ' ' → logprob: -16.130929946899414
    6. ' =
' → logprob: -16.505929946899414
    7. ' =)' → logprob: -16.630929946899414
    8. ',' → logprob: -17.255929946899414
    9. '  ' → logprob: -17.380929946899414
    10. ']' → logprob: -17.630929946899414

Token 44: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.22546038031578064
    2. '(' → logprob: -1.600460410118103
    3. '(n' → logprob: -11.225460052490234
    4. '   ' → logprob: -11.350460052490234
    5. '1' → logprob: -11.475460052490234
    6. ' ' → logprob: -11.725460052490234
    7. '2' → logprob: -13.350460052490234
    8. '0' → logprob: -14.350460052490234
    9. '[' → logprob: -15.350460052490234
    10. '((' → logprob: -15.600460052490234

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014299227041192353
    2. ' ' → logprob: -8.875143051147461
    3. '(' → logprob: -13.125143051147461
    4. '   ' → logprob: -14.125143051147461
    5. ')' → logprob: -15.875143051147461
    6. '2' → logprob: -16.37514305114746
    7. ' (' → logprob: -17.37514305114746
    8. '```' → logprob: -18.18764305114746
    9. ' ' → logprob: -18.43764305114746
    10. '    ' → logprob: -18.43764305114746

Token 46: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.5759571194648743
    2. ' <<' → logprob: -0.8259571194648743
    3. '<' → logprob: -11.450957298278809
    4. '1' → logprob: -12.825957298278809
    5. '<<<' → logprob: -13.450957298278809
    6. ' ' → logprob: -13.700957298278809
    7. '```' → logprob: -14.825957298278809
    8. ')<<' → logprob: -14.950957298278809
    9. '<<(' → logprob: -15.450957298278809
    10. ')' → logprob: -15.575957298278809

Token 47: ' m' (ID: 284)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023264581337571144
    2. ' n' → logprob: -3.7732646465301514
    3. ')n' → logprob: -11.77326488494873
    4. '   ' → logprob: -12.39826488494873
    5. '20' → logprob: -13.02326488494873
    6. 'm' → logprob: -13.14826488494873
    7. '	n' → logprob: -13.77326488494873
    8. '
' → logprob: -14.89826488494873
    9. '(n' → logprob: -15.02326488494873
    10. ')' → logprob: -15.02326488494873

Token 48: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.3358446166384965e-05
    2. ' )' → logprob: -9.875053405761719
    3. '`)' → logprob: -14.000053405761719
    4. ')-' → logprob: -15.125053405761719
    5. '')' → logprob: -15.250053405761719
    6. '))' → logprob: -15.500053405761719
    7. '）' → logprob: -16.25005340576172
    8. ')`' → logprob: -16.75005340576172
    9. '")' → logprob: -17.75005340576172
    10. '```' → logprob: -18.00005340576172

Token 49: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.21569231152534485
    2. ')' → logprob: -1.7156922817230225
    3. '-' → logprob: -4.590692520141602
    4. ')-' → logprob: -6.090692520141602
    5. ' )' → logprob: -6.840692520141602
    6. ' ' → logprob: -8.465692520141602
    7. '```' → logprob: -8.465692520141602
    8. ' ' → logprob: -9.840692520141602
    9. '1' → logprob: -10.215692520141602
    10. ']' → logprob: -10.840692520141602

Token 50: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '```' → logprob: -17.125030517578125
    4. '   ' → logprob: -18.875030517578125
    5. '<|end|>' → logprob: -19.750030517578125
    6. '<|end|>' → logprob: -20.500030517578125
    7. '۱' → logprob: -20.812530517578125
    8. '１' → logprob: -21.062530517578125
    9. '

' → logprob: -21.312530517578125
    10. 'm' → logprob: -21.312530517578125

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -16.375001907348633
    4. '<|end|>' → logprob: -19.000001907348633
    5. '2' → logprob: -19.750001907348633
    6. '   ' → logprob: -19.875001907348633
    7. '0' → logprob: -20.500001907348633
    8. '۱' → logprob: -21.000001907348633
    9. '4' → logprob: -21.062501907348633
    10. '`' → logprob: -21.062501907348633

Token 52: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04033280536532402
    2. '<|end|>' → logprob: -4.040332794189453
    3. '   ' → logprob: -4.915332794189453
    4. ')' → logprob: -5.290332794189453
    5. '    
' → logprob: -5.790332794189453
    6. ' 
' → logprob: -6.165332794189453
    7. '  
' → logprob: -6.665332794189453
    8. 'def' → logprob: -7.290332794189453
    9. '
' → logprob: -7.790332794189453
    10. '<|end|>' → logprob: -7.915332794189453

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4205189645290375
    2. '
' → logprob: -1.2955189943313599
    3. '    
' → logprob: -3.1705188751220703
    4. 'dp' → logprob: -4.42051887512207
    5. 'def' → logprob: -4.54551887512207
    6. ' dp' → logprob: -6.92051887512207
    7. '  
' → logprob: -7.04551887512207
    8. ')' → logprob: -7.42051887512207
    9. '   
' → logprob: -7.54551887512207
    10. ' 
' → logprob: -7.92051887512207

Token 54: ' from' (ID: 591)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0050082942470908165
    2. 'def' → logprob: -6.255008220672607
    3. 'for' → logprob: -7.755008220672607
    4. '   ' → logprob: -7.755008220672607
    5. 'memo' → logprob: -7.755008220672607
    6. 'from' (adapté à ' from') → logprob: -8.130008697509766
    7. 'ans' → logprob: -8.255008697509766
    8. 'dist' → logprob: -8.755008697509766
    9. '#' → logprob: -8.880008697509766
    10. 'DP' → logprob: -9.005008697509766

Token 55: ' functools' (ID: 142636)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.11634285748004913
    2. ' itertools' → logprob: -2.366342782974243
    3. ' math' → logprob: -4.491343021392822
    4. ' functools' → logprob: -5.866343021392822
    5. 'collections' → logprob: -6.741343021392822
    6. '_' → logprob: -8.241342544555664
    7. ' heap' → logprob: -8.616342544555664
    8. ' sys' → logprob: -9.116342544555664
    9. ' operator' → logprob: -9.116342544555664
    10. ' copy' → logprob: -10.241342544555664

Token 56: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5483837723731995
    2. 'import' → logprob: -0.9233837723731995
    3. '_import' → logprob: -4.798383712768555
    4. '<|end|>' → logprob: -5.298383712768555
    5. '.' → logprob: -5.548383712768555
    6. '_' → logprob: -5.673383712768555
    7. ' .' → logprob: -5.798383712768555
    8. ' _' → logprob: -7.548383712768555
    9. ' ' → logprob: -8.173383712768555
    10. '	import' → logprob: -8.548383712768555

Token 57: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3134285807609558
    2. ' l' → logprob: -1.3134286403656006
    3. 'cache' → logprob: -8.81342887878418
    4. ' cache' → logprob: -11.06342887878418
    5. 'reduce' → logprob: -13.81342887878418
    6. 'cached' → logprob: -14.56342887878418
    7. '	l' → logprob: -15.56342887878418
    8. ' ' → logprob: -15.81342887878418
    9. 'wrap' → logprob: -16.06342887878418
    10. '```' → logprob: -16.06342887878418

Token 58: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -5.9153885558771435e-06
    2. 'r' → logprob: -12.625005722045898
    3. 'ruz' → logprob: -13.875005722045898
    4. 'ruff' → logprob: -14.375005722045898
    5. 'u' → logprob: -14.500005722045898
    6. '_ru' → logprob: -15.875005722045898
    7. 'ruh' → logprob: -16.0000057220459
    8. 'RU' → logprob: -17.1250057220459
    9. 'rum' → logprob: -17.3750057220459
    10. 'ruk' → logprob: -17.6250057220459

Token 59: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.0017173044616356492
    2. 'cache' → logprob: -6.3767170906066895
    3. '_CACHE' → logprob: -12.251717567443848
    4. '_cached' → logprob: -12.501717567443848
    5. 'c' → logprob: -13.251717567443848
    6. '_c' → logprob: -13.751717567443848
    7. 'cached' → logprob: -13.876717567443848
    8. ' cache' → logprob: -14.126717567443848
    9. '```' → logprob: -14.376717567443848
    10. 'Cache' → logprob: -14.876717567443848

Token 60: '

' (ID: 279)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.15798072516918182
    2. '
' → logprob: -2.0329806804656982
    3. '@
' → logprob: -4.657980918884277
    4. '\n' → logprob: -5.907980918884277
    5. '    
' → logprob: -7.407980918884277
    6. '\' → logprob: -7.782980918884277
    7. '@login' → logprob: -8.032980918884277
    8. '   ' → logprob: -8.407980918884277
    9. '@n' → logprob: -8.407980918884277
    10. '@return' → logprob: -8.532980918884277

Token 61: '   ' (ID: 271)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0025040784385055304
    2. '
' → logprob: -6.627503871917725
    3. '@
' → logprob: -7.252503871917725
    4. 'def' → logprob: -9.377504348754883
    5. '@n' → logprob: -10.002504348754883
    6. '\n' → logprob: -10.127504348754883
    7. '```' → logprob: -10.127504348754883
    8. '@login' → logprob: -10.252504348754883
    9. '@return' → logprob: -10.502504348754883
    10. '@\' → logprob: -10.752504348754883

Token 62: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -1.652451464906335e-05
    2. '@
' → logprob: -12.375016212463379
    3. '@n' → logprob: -12.375016212463379
    4. '
' → logprob: -13.000016212463379
    5. '   ' → logprob: -13.375016212463379
    6. '@return' → logprob: -13.875016212463379
    7. '@param' → logprob: -14.750016212463379
    8. '@index' → logprob: -14.875016212463379
    9. ' @' → logprob: -15.000016212463379
    10. '@login' → logprob: -15.125016212463379

Token 63: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: 0.0
    2. ' l' → logprob: -17.125
    3. '```' → logprob: -22.0
    4. '	l' → logprob: -22.875
    5. 'cache' → logprob: -23.0
    6. 'staticmethod' → logprob: -23.5
    7. '`' → logprob: -24.25
    8. 'lr' → logprob: -24.5
    9. 'wrap' → logprob: -24.625
    10. '
' → logprob: -24.875

Token 64: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.004092292860150337
    2. 'r' → logprob: -5.504092216491699
    3. '@' → logprob: -12.0040922164917
    4. '```' → logprob: -12.6290922164917
    5. 'rl' → logprob: -13.0040922164917
    6. '   ' → logprob: -15.0040922164917
    7. 'cache' → logprob: -15.3790922164917
    8. 'rw' → logprob: -15.8790922164917
    9. 'u' → logprob: -16.004093170166016
    10. 'ruff' → logprob: -16.129093170166016

Token 65: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -5.872261317563243e-05
    2. 'cache' → logprob: -10.125059127807617
    3. '_cached' → logprob: -11.375059127807617
    4. '_CACHE' → logprob: -12.625059127807617
    5. '_' → logprob: -13.250059127807617
    6. 'cached' → logprob: -14.375059127807617
    7. '-cache' → logprob: -14.750059127807617
    8. 'Cache' → logprob: -15.375059127807617
    9. '	cache' → logprob: -15.625059127807617
    10. '_c' → logprob: -15.875059127807617

Token 66: '(None' (ID: 65126)
  Prédit: '(None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(None' → logprob: -0.20608553290367126
    2. 'def' → logprob: -1.8310855627059937
    3. '(' → logprob: -4.206085681915283
    4. '()' → logprob: -5.081085681915283
    5. '(max' → logprob: -5.456085681915283
    6. '(def' → logprob: -8.081085205078125
    7. ' def' → logprob: -9.581085205078125
    8. '(False' → logprob: -10.081085205078125
    9. '
' → logprob: -10.206085205078125
    10. 'None' → logprob: -10.581085205078125

Token 67: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011138836853206158
    2. ')
' → logprob: -4.511138916015625
    3. 'def' → logprob: -9.761138916015625
    4. ')
' → logprob: -10.636138916015625
    5. '   ' → logprob: -12.511138916015625
    6. ')`' → logprob: -13.511138916015625
    7. ' )' → logprob: -13.636138916015625
    8. ')return' → logprob: -14.761138916015625
    9. ')`
' → logprob: -15.636138916015625
    10. '))' → logprob: -15.636138916015625

Token 68: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00148177077062428
    2. ' def' → logprob: -7.751481533050537
    3. '   ' → logprob: -7.751481533050537
    4. '
' → logprob: -7.876481533050537
    5. '<|end|>' → logprob: -8.501482009887695
    6. '<|end|>' → logprob: -11.501482009887695
    7. ':def' → logprob: -11.626482009887695
    8. '(def' → logprob: -11.751482009887695
    9. '	def' → logprob: -12.876482009887695
    10. '(' → logprob: -13.501482009887695

Token 69: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.8889261304575484e-06
    2. ' def' → logprob: -12.750003814697266
    3. '
' → logprob: -14.125003814697266
    4. 'de' → logprob: -16.000003814697266
    5. '(def' → logprob: -17.250003814697266
    6. ':def' → logprob: -17.250003814697266
    7. '<|end|>' → logprob: -17.500003814697266
    8. 'd' → logprob: -18.250003814697266
    9. '8' → logprob: -18.500003814697266
    10. '0' → logprob: -18.625003814697266

Token 70: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.45470374822616577
    2. 'dp' → logprob: -1.2047038078308105
    3. ' dfs' → logprob: -2.9547038078308105
    4. ' dp' → logprob: -4.3297038078308105
    5. 'search' → logprob: -8.579703330993652
    6. ' search' → logprob: -10.079703330993652
    7. '_dp' → logprob: -10.954703330993652
    8. 'f' → logprob: -11.204703330993652
    9. 're' → logprob: -11.704703330993652
    10. 'solve' → logprob: -12.204703330993652

Token 71: '(mask' (ID: 80748)
  Prédit: '(mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.2897343337535858
    2. '(' → logprob: -1.4147343635559082
    3. '(i' → logprob: -5.414734363555908
    4. ' (' → logprob: -7.289734363555908
    5. '(idx' → logprob: -7.539734363555908
    6. '(s' → logprob: -7.539734363555908
    7. '(current' → logprob: -7.664734363555908
    8. '(index' → logprob: -7.914734363555908
    9. '(depth' → logprob: -7.914734363555908
    10. '(state' → logprob: -7.914734363555908

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6934768557548523
    2. '):' → logprob: -0.6934768557548523
    3. ' ):' → logprob: -8.943476676940918
    4. ' ,' → logprob: -9.693476676940918
    5. '):
' → logprob: -9.693476676940918
    6. ')' → logprob: -10.318476676940918
    7. ':' → logprob: -11.068476676940918
    8. '   ' → logprob: -11.318476676940918
    9. '=' → logprob: -13.443476676940918
    10. ')):' → logprob: -13.818476676940918

Token 73: ' group' (ID: 3566)
  Prédit: ' depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' depth' → logprob: -1.6995139122009277
    2. 'idx' → logprob: -1.9495139122009277
    3. 'pos' → logprob: -2.1995139122009277
    4. ' idx' → logprob: -2.1995139122009277
    5. 'depth' → logprob: -2.4495139122009277
    6. ' pos' → logprob: -2.5745139122009277
    7. 'i' → logprob: -2.6995139122009277
    8. ' i' → logprob: -2.8245139122009277
    9. ' used' → logprob: -3.3245139122009277
    10. 'used' → logprob: -3.5745139122009277

Token 74: '):
' (ID: 1883)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7295830845832825
    2. '):' → logprob: -0.7295830845832825
    3. '_count' → logprob: -4.229583263397217
    4. '_idx' → logprob: -4.854583263397217
    5. 'ed' → logprob: -4.979583263397217
    6. '):
' → logprob: -6.479583263397217
    7. ')' → logprob: -6.729583263397217
    8. '_id' → logprob: -7.104583263397217
    9. '_index' → logprob: -7.229583263397217
    10. '_size' → logprob: -7.354583263397217

Token 75: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6244245171546936
    2. '       ' → logprob: -0.9994245171546936
    3. '):' → logprob: -2.499424457550049
    4. '   ' → logprob: -4.624424457550049
    5. ')' → logprob: -6.624424457550049
    6. ' :' → logprob: -7.124424457550049
    7. ',' → logprob: -7.124424457550049
    8. '<|end|>' → logprob: -7.624424457550049
    9. ' if' → logprob: -7.749424457550049
    10. '():' → logprob: -9.499424934387207

Token 76: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.35140833258628845
    2. 'if' (adapté à ' if') → logprob: -1.3514083623886108
    3. '       ' → logprob: -3.3514082431793213
    4. '   ' → logprob: -6.8514084815979
    5. '           ' → logprob: -7.7264084815979
    6. ':' → logprob: -7.8514084815979
    7. '    ' → logprob: -9.226408004760742
    8. '        ' → logprob: -9.601408004760742
    9. '#' → logprob: -9.976408004760742
    10. 'return' → logprob: -10.226408004760742

Token 77: ' len' (ID: 4631)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.13745270669460297
    2. ' mask' → logprob: -2.6374526023864746
    3. 'group' → logprob: -3.0124526023864746
    4. 'mask' → logprob: -4.887452602386475
    5. '(group' → logprob: -10.512453079223633
    6. ' ' → logprob: -10.512453079223633
    7. ' (' → logprob: -10.512453079223633
    8. ' not' → logprob: -11.137453079223633
    9. '(mask' → logprob: -11.137453079223633
    10. '	group' → logprob: -11.574953079223633

Token 78: '(group' (ID: 36416)
  Prédit: '(group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(group' → logprob: -0.03285929188132286
    2. '(str' → logprob: -4.1578593254089355
    3. '(objects' → logprob: -4.4078593254089355
    4. '(bin' → logprob: -6.0328593254089355
    5. '(' → logprob: -6.7828593254089355
    6. '(mask' → logprob: -8.157858848571777
    7. '(sys' → logprob: -9.532858848571777
    8. '(g' → logprob: -9.657858848571777
    9. '(object' → logprob: -9.782858848571777
    10. 'str' → logprob: -9.782858848571777

Token 79: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3455881178379059
    2. '==' → logprob: -1.5955880880355835
    3. ')==' → logprob: -2.470588207244873
    4. ' ==' → logprob: -5.345588207244873
    5. '()==' → logprob: -9.970587730407715
    6. ' )' → logprob: -10.970587730407715
    7. '()' → logprob: -11.470587730407715
    8. '=' → logprob: -12.220587730407715
    9. '===' → logprob: -12.595587730407715
    10. ']==' → logprob: -12.595587730407715

Token 80: ' <=' (ID: 5017)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04906907677650452
    2. ' ==' → logprob: -3.0490691661834717
    3. ')' → logprob: -8.29906940460205
    4. ')==' → logprob: -8.79906940460205
    5. '()==' → logprob: -9.79906940460205
    6. '<=' → logprob: -11.17406940460205
    7. '=' → logprob: -12.79906940460205
    8. '===' → logprob: -13.04906940460205
    9. '<' → logprob: -13.29906940460205
    10. ' <=' → logprob: -13.67406940460205

Token 81: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00409656623378396
    2. ' ' → logprob: -5.504096508026123
    3. '0' → logprob: -11.504096984863281
    4. '   ' → logprob: -12.754096984863281
    5. '2' → logprob: -13.566596984863281
    6. '  ' → logprob: -13.629096984863281
    7. '3' → logprob: -15.004096984863281
    8. '```' → logprob: -15.129096984863281
    9. ' ' → logprob: -15.441596984863281
    10. '    ' → logprob: -15.879096984863281

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.35706390615087e-05
    2. ' ' → logprob: -10.875033378601074
    3. '0' → logprob: -11.500033378601074
    4. '2' → logprob: -13.125033378601074
    5. '3' → logprob: -14.687533378601074
    6. '```' → logprob: -15.250033378601074
    7. '10' → logprob: -15.875033378601074
    8. '   ' → logprob: -15.937533378601074
    9. '7' → logprob: -16.12503433227539
    10. 'm' → logprob: -16.18753433227539

Token 83: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014415422920137644
    2. ':return' → logprob: -7.001441478729248
    3. ':
' → logprob: -8.126441955566406
    4. ' or' → logprob: -8.626441955566406
    5. '):' → logprob: -10.376441955566406
    6. '       ' → logprob: -11.501441955566406
    7. ')' → logprob: -12.501441955566406
    8. ' and' → logprob: -12.751441955566406
    9. ',' → logprob: -13.001441955566406
    10. ' :' → logprob: -13.376441955566406

Token 84: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30721384286880493
    2. '       ' → logprob: -1.8072137832641602
    3. ':return' → logprob: -2.68221378326416
    4. '           ' → logprob: -4.55721378326416
    5. ':
' → logprob: -4.93221378326416
    6. ' return' → logprob: -5.55721378326416
    7. ' :' → logprob: -6.05721378326416
    8. 'return' → logprob: -6.05721378326416
    9. '\n' → logprob: -6.18221378326416
    10. '   ' → logprob: -6.80721378326416

Token 85: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6133637428283691
    2. 'return' (adapté à ' return') → logprob: -0.8633637428283691
    3. '           ' → logprob: -3.363363742828369
    4. '       ' → logprob: -6.738363742828369
    5. '   ' → logprob: -7.238363742828369
    6. ':return' → logprob: -9.488363265991211
    7. ' ' → logprob: -9.988363265991211
    8. '
' → logprob: -10.613363265991211
    9. '	return' → logprob: -10.863363265991211
    10. ' ' → logprob: -11.988363265991211

Token 86: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3541260063648224
    2. ' ' → logprob: -1.2291259765625
    3. '1' → logprob: -6.1041259765625
    4. ' float' → logprob: -6.6041259765625
    5. 'float' → logprob: -6.9791259765625
    6. ' (' → logprob: -9.1041259765625
    7. ' mask' → logprob: -9.2291259765625
    8. ' True' → logprob: -9.4791259765625
    9. 'False' → logprob: -9.6041259765625
    10. 'mask' → logprob: -9.6666259765625

Token 87: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0026455752085894346
    2. 'float' → logprob: -6.502645492553711
    3. '1' → logprob: -7.502645492553711
    4. '(' → logprob: -8.627645492553711
    5. ' ' → logprob: -9.627645492553711
    6. 'mask' → logprob: -10.002645492553711
    7. 'len' → logprob: -10.127645492553711
    8. 'group' → logprob: -10.127645492553711
    9. '10' → logprob: -10.252645492553711
    10. 'all' → logprob: -10.377645492553711

Token 88: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47750967741012573
    2. '<|end|>' → logprob: -1.6025097370147705
    3. '       ' → logprob: -2.1025097370147705
    4. '\n' → logprob: -3.7275097370147705
    5. ')' → logprob: -3.7275097370147705
    6. '        
' → logprob: -6.602509498596191
    7. '<|end|>' → logprob: -6.727509498596191
    8. '        ' → logprob: -7.102509498596191
    9. '   ' → logprob: -7.477509498596191
    10. '
' → logprob: -7.602509498596191

Token 89: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11497440934181213
    2. '
' → logprob: -3.1149744987487793
    3. '\n' → logprob: -3.9899744987487793
    4. ')' → logprob: -3.9899744987487793
    5. '   ' → logprob: -4.364974498748779
    6. '    
' → logprob: -5.614974498748779
    7. '        
' → logprob: -5.989974498748779
    8. ' 
' → logprob: -7.114974498748779
    9. '' → logprob: -7.239974498748779
    10. '<|end|>' → logprob: -7.239974498748779

Token 90: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -1.492982268333435
    2. 'cost' → logprob: -1.617982268333435
    3. '       ' → logprob: -2.2429823875427246
    4. ' res' → logprob: -2.3679823875427246
    5. '        
' → logprob: -2.4929823875427246
    6. 'max' → logprob: -2.7429823875427246
    7. ' cost' → logprob: -3.2429823875427246
    8. '   ' → logprob: -3.2429823875427246
    9. '    
' → logprob: -3.8679823875427246
    10. ' max' → logprob: -3.8679823875427246

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06999246031045914
    2. '=' → logprob: -2.6949925422668457
    3. ' ' → logprob: -10.444992065429688
    4. ',' → logprob: -11.194992065429688
    5. ' +=' → logprob: -12.819992065429688
    6. '_' → logprob: -12.944992065429688
    7. ')' → logprob: -13.319992065429688
    8. '  ' → logprob: -13.944992065429688
    9. ' ' → logprob: -13.944992065429688
    10. ' ,' → logprob: -14.069992065429688

Token 92: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.21201477944850922
    2. '0' → logprob: -2.087014675140381
    3. ' float' → logprob: -3.087014675140381
    4. '10' → logprob: -4.962014675140381
    5. 'max' → logprob: -5.587014675140381
    6. ' ' → logprob: -6.212014675140381
    7. '1' → logprob: -6.462014675140381
    8. '(' → logprob: -6.587014675140381
    9. 'len' → logprob: -6.587014675140381
    10. 'int' → logprob: -7.212014675140381

Token 93: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0015574743738397956
    2. '('-' → logprob: -6.501557350158691
    3. '(' → logprob: -10.876557350158691
    4. 'inf' → logprob: -11.626557350158691
    5. ''' → logprob: -11.751557350158691
    6. ''in' → logprob: -12.126557350158691
    7. '("' → logprob: -12.251557350158691
    8. ''s' → logprob: -12.376557350158691
    9. '('+' → logprob: -13.376557350158691
    10. ''-' → logprob: -13.626557350158691

Token 94: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -5.6457742175552994e-05
    2. '-inf' → logprob: -10.375056266784668
    3. ''in' → logprob: -10.750056266784668
    4. 'in' → logprob: -13.625056266784668
    5. ''' → logprob: -14.125056266784668
    6. 'INF' → logprob: -14.375056266784668
    7. 'info' → logprob: -15.000056266784668
    8. '.inf' → logprob: -15.625056266784668
    9. '_inf' → logprob: -15.625056266784668
    10. ' inf' → logprob: -16.250057220458984

Token 95: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004135987721383572
    2. ')
' → logprob: -5.504136085510254
    3. ' )' → logprob: -10.129136085510254
    4. ')
' → logprob: -12.004136085510254
    5. '   ' → logprob: -13.004136085510254
    6. '')' → logprob: -13.129136085510254
    7. ' )
' → logprob: -13.504136085510254
    8. '
' → logprob: -13.629136085510254
    9. ')

' → logprob: -14.379136085510254
    10. '       ' → logprob: -14.379136085510254

Token 96: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3114746809005737
    2. '
' → logprob: -1.4364746809005737
    3. '<|end|>' → logprob: -2.0614748001098633
    4. ')' → logprob: -2.5614748001098633
    5. ' ' → logprob: -2.6864748001098633
    6. '       ' → logprob: -3.0614748001098633
    7. '    
' → logprob: -3.1864748001098633
    8. ' 
' → logprob: -3.4364748001098633
    9. ' for' → logprob: -4.186474800109863
    10. '' → logprob: -4.311474800109863

Token 97: ' used' (ID: 2061)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5933415293693542
    2. ' for' → logprob: -0.8433415293693542
    3. '   ' → logprob: -4.46834135055542
    4. ')' → logprob: -5.84334135055542
    5. '    ' → logprob: -6.96834135055542
    6. ' ' → logprob: -8.093341827392578
    7. '    
' → logprob: -8.218341827392578
    8. 'n' → logprob: -8.593341827392578
    9. ',' → logprob: -8.593341827392578
    10. ' 
' → logprob: -9.093341827392578

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2539834976196289
    2. '=' → logprob: -1.503983497619629
    3. '_masks' → logprob: -6.878983497619629
    4. '_mask' → logprob: -8.128983497619629
    5. '=set' → logprob: -8.378983497619629
    6. 's' → logprob: -8.753983497619629
    7. '_' → logprob: -8.878983497619629
    8. '_groups' → logprob: -10.378983497619629
    9. '_tokens' → logprob: -10.503983497619629
    10. '_bits' → logprob: -11.128983497619629

Token 99: ' [' (ID: 723)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.2687348425388336
    2. '0' → logprob: -2.018734931945801
    3. ' set' → logprob: -2.893734931945801
    4. '{}' → logprob: -3.268734931945801
    5. '[' → logprob: -5.518734931945801
    6. ' ' → logprob: -5.768734931945801
    7. '[]' → logprob: -7.143734931945801
    8. ' {}' → logprob: -7.518734931945801
    9. '{' → logprob: -7.643734931945801
    10. ' [' → logprob: -8.2687349319458

Token 100: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00022547018306795508
    2. '0' → logprob: -8.500225067138672
    3. ']' → logprob: -11.500225067138672
    4. ' False' → logprob: -11.750225067138672
    5. '[' → logprob: -13.375225067138672
    6. '(False' → logprob: -13.375225067138672
    7. 'True' → logprob: -15.000225067138672
    8. 'set' → logprob: -15.375225067138672
    9. '-' → logprob: -16.250225067138672
    10. '
' → logprob: -16.625225067138672

Token 101: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012836999259889126
    2. ' for' → logprob: -4.637836933135986
    3. ']*' → logprob: -6.262836933135986
    4. 'for' → logprob: -6.887836933135986
    5. ' ]' → logprob: -9.137837409973145
    6. ']*(' → logprob: -10.637837409973145
    7. ' ' → logprob: -12.012837409973145
    8. '[' → logprob: -12.512837409973145
    9. ')' → logprob: -12.762837409973145
    10. '   ' → logprob: -12.887837409973145

Token 102: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.10566425323486328
    2. 'n' → logprob: -2.8556642532348633
    3. 'len' → logprob: -3.3556642532348633
    4. '(m' → logprob: -5.355664253234863
    5. '(n' → logprob: -6.480664253234863
    6. '(len' → logprob: -6.605664253234863
    7. '(' → logprob: -8.855664253234863
    8. ' m' → logprob: -10.730664253234863
    9. '   ' → logprob: -10.980664253234863
    10. ' len' → logprob: -11.355664253234863

Token 103: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07785247266292572
    2. '<|end|>' → logprob: -3.577852487564087
    3. '\n' → logprob: -4.452852249145508
    4. ' 
' → logprob: -4.577852249145508
    5. ' for' → logprob: -5.077852249145508
    6. '   ' → logprob: -5.327852249145508
    7. 'for' → logprob: -5.827852249145508
    8. '    
' → logprob: -5.952852249145508
    9. ' ' → logprob: -6.327852249145508
    10. '  
' → logprob: -6.452852249145508

Token 104: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7282528281211853
    2. ' 
' → logprob: -1.72825288772583
    3. ' for' → logprob: -2.47825288772583
    4. '\n' → logprob: -2.97825288772583
    5. ' ' → logprob: -3.10325288772583
    6. '   ' → logprob: -3.10325288772583
    7. '       ' → logprob: -3.60325288772583
    8. '    
' → logprob: -3.97825288772583
    9. '<|end|>' → logprob: -3.97825288772583
    10. 'for' → logprob: -4.22825288772583

Token 105: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0918775275349617
    2. 'for' (adapté à ' for') → logprob: -2.4668774604797363
    3. '<|end|>' → logprob: -6.591877460479736
    4. '       ' → logprob: -6.716877460479736
    5. '   ' → logprob: -8.966877937316895
    6. ' ' → logprob: -9.716877937316895
    7. ')' → logprob: -10.091877937316895
    8. '
' → logprob: -10.091877937316895
    9. '    ' → logprob: -10.341877937316895
    10. ' 
' → logprob: -11.591877937316895

Token 106: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25319311022758484
    2. 'i' → logprob: -1.6281931400299072
    3. ' obj' → logprob: -4.878192901611328
    4. ' o' → logprob: -5.378192901611328
    5. 'obj' → logprob: -5.628192901611328
    6. 'o' → logprob: -5.878192901611328
    7. ' j' → logprob: -6.128192901611328
    8. 'j' → logprob: -6.378192901611328
    9. ' x' → logprob: -6.628192901611328
    10. 'x' → logprob: -7.003192901611328

Token 107: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01674126274883747
    2. 'in' → logprob: -4.1417412757873535
    3. ',' → logprob: -7.3917412757873535
    4. ' ' → logprob: -10.016740798950195
    5. ' ,' → logprob: -11.641740798950195
    6. 's' → logprob: -11.766740798950195
    7. 'i' → logprob: -12.391740798950195
    8. '  ' → logprob: -12.516740798950195
    9. ')' → logprob: -12.766740798950195
    10. 'n' → logprob: -13.141740798950195

Token 108: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.031532417982816696
    2. ' group' → logprob: -3.5315325260162354
    3. 'range' → logprob: -6.531532287597656
    4. ' range' → logprob: -8.906532287597656
    5. '[group' → logprob: -9.406532287597656
    6. '(group' → logprob: -10.031532287597656
    7. '"group' → logprob: -11.031532287597656
    8. ' ' → logprob: -11.281532287597656
    9. '	group' → logprob: -11.406532287597656
    10. 'roup' → logprob: -12.281532287597656

Token 109: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003654978354461491
    2. ':
' → logprob: -8.125365257263184
    3. '):' → logprob: -10.250365257263184
    4. ',' → logprob: -10.875365257263184
    5. ' :' → logprob: -11.625365257263184
    6. '):
' → logprob: -13.375365257263184
    7. '<|end|>' → logprob: -13.500365257263184
    8. ':**' → logprob: -14.125365257263184
    9. '       ' → logprob: -14.375365257263184
    10. '<|end|>' → logprob: -15.000365257263184

Token 110: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.670354425907135
    2. ' for' → logprob: -2.0453543663024902
    3. '<|end|>' → logprob: -2.0453543663024902
    4. '        ' → logprob: -2.1703543663024902
    5. '           ' → logprob: -3.5453543663024902
    6. '
' → logprob: -3.5453543663024902
    7. ',' → logprob: -3.6703543663024902
    8. ':' → logprob: -4.92035436630249
    9. 'for' → logprob: -5.54535436630249
    10. '<|end|>' → logprob: -5.67035436630249

Token 111: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.39353954792022705
    2. 'for' (adapté à ' for') → logprob: -1.518539547920227
    3. '           ' → logprob: -2.3935394287109375
    4. '       ' → logprob: -6.0185394287109375
    5. 'b' → logprob: -6.2685394287109375
    6. '<|end|>' → logprob: -6.5185394287109375
    7. '
' → logprob: -7.3935394287109375
    8. ' pass' → logprob: -7.3935394287109375
    9. 'mask' → logprob: -7.3935394287109375
    10. 'bits' → logprob: -7.3935394287109375

Token 112: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5440409183502197
    2. ' i' → logprob: -1.2940409183502197
    3. 'j' → logprob: -2.6690409183502197
    4. ' j' → logprob: -3.0440409183502197
    5. ' bit' → logprob: -4.544040679931641
    6. 'bit' → logprob: -4.919040679931641
    7. 'b' → logprob: -5.294040679931641
    8. ' b' → logprob: -5.794040679931641
    9. 'k' → logprob: -6.794040679931641
    10. ' y' → logprob: -8.16904067993164

Token 113: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006889065727591515
    2. 'in' → logprob: -5.0068888664245605
    3. '<|end|>' → logprob: -9.006889343261719
    4. ' ' → logprob: -10.006889343261719
    5. '  ' → logprob: -13.506889343261719
    6. '<|end|>' → logprob: -14.131889343261719
    7. ',' → logprob: -14.506889343261719
    8. 's' → logprob: -14.631889343261719
    9. '   ' → logprob: -14.756889343261719
    10. '    ' → logprob: -15.006889343261719

Token 114: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014165272004902363
    2. ' range' → logprob: -4.26416540145874
    3. '(range' → logprob: -14.889164924621582
    4. '	range' → logprob: -15.139164924621582
    5. ' ' → logprob: -15.264164924621582
    6. '   ' → logprob: -15.514164924621582
    7. 'ran' → logprob: -15.889164924621582
    8. ')' → logprob: -16.5141658782959
    9. '[' → logprob: -16.7641658782959
    10. 'r' → logprob: -16.7641658782959

Token 115: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0005196703714318573
    2. ' m' → logprob: -7.625519752502441
    3. '(m' → logprob: -10.625519752502441
    4. '	m' → logprob: -12.500519752502441
    5. '   ' → logprob: -13.250519752502441
    6. '(' → logprob: -14.750519752502441
    7. '           ' → logprob: -15.000519752502441
    8. '<m' → logprob: -15.250519752502441
    9. '0' → logprob: -15.625519752502441
    10. ',m' → logprob: -15.750519752502441

Token 116: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38697776198387146
    2. '):' → logprob: -1.1369777917861938
    3. '           ' → logprob: -9.636978149414062
    4. '               ' → logprob: -11.011978149414062
    5. '):
' → logprob: -11.761978149414062
    6. '       ' → logprob: -12.136978149414062
    7. ':' → logprob: -12.761978149414062
    8. '):

' → logprob: -13.136978149414062
    9. ' ):
' → logprob: -13.386978149414062
    10. ' ):' → logprob: -13.761978149414062

Token 117: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05022180452942848
    2. '<|end|>' → logprob: -3.1752219200134277
    3. ':' → logprob: -5.675221920013428
    4. ' if' → logprob: -6.425221920013428
    5. '<|end|>' → logprob: -6.675221920013428
    6. ' ' → logprob: -8.42522144317627
    7. ',' → logprob: -8.67522144317627
    8. ':
' → logprob: -9.17522144317627
    9. ' and' → logprob: -9.92522144317627
    10. ' :' → logprob: -10.05022144317627

Token 118: ' used' (ID: 2061)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2889086604118347
    2. ' if' → logprob: -1.4139087200164795
    3. 'if' → logprob: -5.5389084815979
    4. '<|end|>' → logprob: -6.2889084815979
    5. '<|end|>' → logprob: -7.5389084815979
    6. ':' → logprob: -8.288908958435059
    7. ' ' → logprob: -8.413908958435059
    8. '	           ' → logprob: -8.413908958435059
    9. '           ' → logprob: -9.288908958435059
    10. '
' → logprob: -9.663908958435059

Token 119: '[i' (ID: 1768)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.5464600324630737
    2. '[' → logprob: -1.2964600324630737
    3. '[i' → logprob: -2.5464601516723633
    4. '][' → logprob: -3.1714601516723633
    5. ' |=' → logprob: -4.546460151672363
    6. ']' → logprob: -5.546460151672363
    7. '|' → logprob: -6.046460151672363
    8. ' [' → logprob: -6.421460151672363
    9. 'x' → logprob: -6.546460151672363
    10. '[token' → logprob: -7.046460151672363

Token 120: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16315875947475433
    2. '|' → logprob: -2.288158655166626
    3. ' |=' → logprob: -3.538158655166626
    4. ' or' → logprob: -4.288158893585205
    5. ']|' → logprob: -5.913158893585205
    6. ']=' → logprob: -7.038158893585205
    7. 'and' → logprob: -7.288158893585205
    8. 'or' → logprob: -7.538158893585205
    9. ' and' → logprob: -7.788158893585205
    10. ' ]' → logprob: -8.163158416748047

Token 121: ' =' (ID: 314)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.5332767367362976
    2. ' |=' → logprob: -1.2832767963409424
    3. '=' → logprob: -2.2832767963409424
    4. ' or' → logprob: -4.033276557922363
    5. ' =' → logprob: -4.158276557922363
    6. 'or' → logprob: -7.158276557922363
    7. 'and' → logprob: -10.658276557922363
    8. ' and' → logprob: -10.783276557922363
    9. '=True' → logprob: -10.783276557922363
    10. '|=
' → logprob: -11.283276557922363

Token 122: ' True' (ID: 6432)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.34850314259529114
    2. 'used' → logprob: -1.2235031127929688
    3. 'True' → logprob: -10.348503112792969
    4. ' True' → logprob: -11.473503112792969
    5. 'False' → logprob: -12.223503112792969
    6. ' not' → logprob: -13.848503112792969
    7. '(' → logprob: -13.973503112792969
    8. '   ' → logprob: -14.098503112792969
    9. '.used' → logprob: -14.098503112792969
    10. '           ' → logprob: -14.223503112792969

Token 123: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.059811677783727646
    2. ' and' → logprob: -3.434811592102051
    3. 'if' → logprob: -4.559811592102051
    4. '<|end|>' → logprob: -4.559811592102051
    5. 'and' → logprob: -5.684811592102051
    6. ' or' → logprob: -7.059811592102051
    7. ' ' → logprob: -7.934811592102051
    8. '           ' → logprob: -9.43481159210205
    9. '<|end|>' → logprob: -10.18481159210205
    10. ' &' → logprob: -10.68481159210205

Token 124: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4857174754142761
    2. '<|end|>' → logprob: -0.9857174754142761
    3. ' or' → logprob: -5.610717296600342
    4. 'if' → logprob: -5.985717296600342
    5. ' ' → logprob: -6.110717296600342
    6. ' and' → logprob: -6.485717296600342
    7. '<|end|>' → logprob: -7.110717296600342
    8. 'and' → logprob: -8.9857177734375
    9. '               ' → logprob: -9.6107177734375
    10. '           ' → logprob: -9.6107177734375

Token 125: ' for' (ID: 395)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8535426259040833
    2. ' if' → logprob: -0.8535426259040833
    3. 'and' → logprob: -2.3535425662994385
    4. 'if' → logprob: -3.6035425662994385
    5. ' or' → logprob: -4.353542804718018
    6. ' used' → logprob: -5.603542804718018
    7. '           ' → logprob: -5.853542804718018
    8. 'used' → logprob: -6.728542804718018
    9. '<|end|>' → logprob: -7.228542804718018
    10. '0' → logprob: -7.353542804718018

Token 126: ' f' (ID: 285)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6734447479248047
    2. ' i' → logprob: -0.7984447479248047
    3. 'x' → logprob: -4.298444747924805
    4. ' x' → logprob: -4.423444747924805
    5. ' mask' → logprob: -4.923444747924805
    6. 'mask' → logprob: -5.798444747924805
    7. ' bit' → logprob: -6.548444747924805
    8. ' ' → logprob: -7.798444747924805
    9. 'j' → logprob: -7.923444747924805
    10. ' j' → logprob: -8.048444747924805

Token 127: ' in' (ID: 306)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8418156504631042
    2. ' in' → logprob: -0.8418156504631042
    3. ' i' → logprob: -2.966815710067749
    4. 'or' → logprob: -3.216815710067749
    5. 'in' → logprob: -3.466815710067749
    6. 'ilter' → logprob: -4.46681547164917
    7. 'range' → logprob: -6.71681547164917
    8. 'rom' → logprob: -7.59181547164917
    9. ' or' → logprob: -7.59181547164917
    10. ' for' → logprob: -8.341815948486328

Token 128: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4751006066799164
    2. 'range' → logprob: -0.9751006364822388
    3. 'used' → logprob: -7.475100517272949
    4. ' used' → logprob: -8.35010051727295
    5. 'group' → logprob: -10.10010051727295
    6. ' objects' → logprob: -10.47510051727295
    7. 'mask' → logprob: -10.60010051727295
    8. 'objects' → logprob: -10.60010051727295
    9. '[' → logprob: -10.72510051727295
    10. '(range' → logprob: -11.10010051727295

Token 129: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.037884023040533066
    2. 'm' → logprob: -3.537883996963501
    3. '(' → logprob: -4.91288423538208
    4. ' m' → logprob: -7.53788423538208
    5. '1' → logprob: -8.787883758544922
    6. ' (' → logprob: -11.162883758544922
    7. ' ' → logprob: -11.412883758544922
    8. ')' → logprob: -11.912883758544922
    9. '(mask' → logprob: -12.162883758544922
    10. ')m' → logprob: -12.412883758544922

Token 130: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5233038067817688
    2. '):
' → logprob: -0.8983038067817688
    3. ' ):' → logprob: -9.523303985595703
    4. ' ):
' → logprob: -10.523303985595703
    5. '+' → logprob: -10.773303985595703
    6. '):
' → logprob: -10.773303985595703
    7. ')' → logprob: -11.398303985595703
    8. ':' → logprob: -11.648303985595703
    9. '       ' → logprob: -12.023303985595703
    10. '):

' → logprob: -12.273303985595703

Token 131: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32782939076423645
    2. '<|end|>' → logprob: -2.077829360961914
    3. '           ' → logprob: -3.202829360961914
    4. ' if' → logprob: -3.577829360961914
    5. '       ' → logprob: -3.702829360961914
    6. ' :' → logprob: -3.952829360961914
    7. ':' → logprob: -4.327829360961914
    8. '        ' → logprob: -4.327829360961914
    9. '            ' → logprob: -5.327829360961914
    10. '<|end|>' → logprob: -5.702829360961914

Token 132: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.024538882076740265
    2. 'if' → logprob: -3.774538993835449
    3. '       ' → logprob: -7.899538993835449
    4. ' ' → logprob: -8.14953899383545
    5. '        ' → logprob: -8.14953899383545
    6. '           ' → logprob: -9.02453899383545
    7. '<|end|>' → logprob: -9.27453899383545
    8. '               ' → logprob: -10.52453899383545
    9. '            ' → logprob: -10.89953899383545
    10. ' not' → logprob: -11.27453899383545

Token 133: ' partition' (ID: 31512)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1897246539592743
    2. ' if' → logprob: -1.8147246837615967
    3. 'used' → logprob: -6.314724445343018
    4. ' used' → logprob: -6.564724445343018
    5. ' new' → logprob: -6.939724445343018
    6. 'for' → logprob: -7.189724445343018
    7. '       ' → logprob: -7.189724445343018
    8. '   ' → logprob: -7.189724445343018
    9. ' res' → logprob: -7.564724445343018
    10. 'count' → logprob: -7.814724445343018

Token 134: ' the' (ID: 290)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24380961060523987
    2. ' if' → logprob: -2.493809700012207
    3. '=' → logprob: -2.868809700012207
    4. ':' → logprob: -4.743809700012207
    5. 'if' → logprob: -4.868809700012207
    6. 's' → logprob: -4.993809700012207
    7. '[' → logprob: -5.243809700012207
    8. ')' → logprob: -5.243809700012207
    9. ' for' → logprob: -5.493809700012207
    10. ',' → logprob: -5.493809700012207

Token 135: ' group' (ID: 3566)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6411170959472656
    2. 'used' → logprob: -1.6411170959472656
    3. ' used' → logprob: -2.0161170959472656
    4. ' if' → logprob: -2.6411170959472656
    5. 'for' → logprob: -3.6411170959472656
    6. '[' → logprob: -4.641117095947266
    7. 'f' → logprob: -5.266117095947266
    8. ' for' → logprob: -5.516117095947266
    9. '0' → logprob: -5.516117095947266
    10. ' not' → logprob: -5.766117095947266

Token 136: ' by' (ID: 656)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3873078227043152
    2. '[' → logprob: -2.13730788230896
    3. ' into' → logprob: -2.63730788230896
    4. 'if' → logprob: -3.38730788230896
    5. ',' → logprob: -3.63730788230896
    6. '       ' → logprob: -4.512307643890381
    7. '   ' → logprob: -4.637307643890381
    8. ' ' → logprob: -4.762307643890381
    9. '[:]' → logprob: -5.012307643890381
    10. ':' → logprob: -5.137307643890381

Token 137: ' feature' (ID: 6286)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -1.3376128673553467
    2. ' used' → logprob: -2.0876128673553467
    3. '(mask' → logprob: -2.3376128673553467
    4. ' (' → logprob: -2.5876128673553467
    5. 'mask' → logprob: -2.7126128673553467
    6. '(' → logprob: -3.3376128673553467
    7. '((' → logprob: -3.4626128673553467
    8. 'for' → logprob: -3.4626128673553467
    9. '(lambda' → logprob: -3.4626128673553467
    10. '[(' → logprob: -3.4626128673553467

Token 138: ' f' (ID: 285)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2602126896381378
    2. 'if' → logprob: -2.8852126598358154
    3. ':' → logprob: -3.3852126598358154
    4. '[' → logprob: -3.3852126598358154
    5. ' ' → logprob: -4.0102128982543945
    6. '       ' → logprob: -4.3852128982543945
    7. ',' → logprob: -4.6352128982543945
    8. '   ' → logprob: -4.7602128982543945
    9. '           ' → logprob: -4.8852128982543945
    10. ')' → logprob: -5.3852128982543945

Token 139: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.166211724281311
    2. ' if' → logprob: -1.916211724281311
    3. ' ' → logprob: -2.0412116050720215
    4. '           ' → logprob: -2.1662116050720215
    5. '<|end|>' → logprob: -2.4162116050720215
    6. '       ' → logprob: -2.6662116050720215
    7. ' :' → logprob: -3.2912116050720215
    8. '
' → logprob: -3.6662116050720215
    9. ':
' → logprob: -3.7912116050720215
    10. 'if' → logprob: -4.4162116050720215

Token 140: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.111420750617981
    2. '       ' → logprob: -1.486420750617981
    3. '           ' → logprob: -1.861420750617981
    4. '<|end|>' → logprob: -1.986420750617981
    5. ' ' → logprob: -3.1114206314086914
    6. ',' → logprob: -3.3614206314086914
    7. ' if' → logprob: -3.3614206314086914
    8. ':
' → logprob: -4.736420631408691
    9. '<|end|>' → logprob: -5.361420631408691
    10. '   ' → logprob: -5.486420631408691

Token 141: ' s' (ID: 265)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.8453302383422852
    2. 'left' → logprob: -1.8453302383422852
    3. '           ' → logprob: -1.9703302383422852
    4. ' if' → logprob: -2.720330238342285
    5. 'if' → logprob: -3.470330238342285
    6. '0' → logprob: -3.595330238342285
    7. 'mask' → logprob: -3.720330238342285
    8. '       ' → logprob: -4.470330238342285
    9. ' True' → logprob: -4.470330238342285
    10. ' mask' → logprob: -4.470330238342285

Token 142: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23101183772087097
    2. 'ub' → logprob: -2.3560118675231934
    3. 'et' → logprob: -2.9810118675231934
    4. ' =' → logprob: -3.7310118675231934
    5. '1' → logprob: -4.231011867523193
    6. 'e' → logprob: -5.356011867523193
    7. '=' → logprob: -5.606011867523193
    8. 'plit' → logprob: -5.731011867523193
    9. 'm' → logprob: -6.481011867523193
    10. 'mall' → logprob: -6.856011867523193

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10721878707408905
    2. '0' → logprob: -2.9822187423706055
    3. '=' → logprob: -3.1072187423706055
    4. ',' → logprob: -5.2322187423706055
    5. 'et' → logprob: -7.4822187423706055
    6. '=[]' → logprob: -9.357218742370605
    7. 'um' → logprob: -9.857218742370605
    8. ' ' → logprob: -9.982218742370605
    9. '1' → logprob: -10.482218742370605
    10. '=set' → logprob: -10.857218742370605

Token 144: ' tuple' (ID: 31311)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.01979009062051773
    2. '[]
' → logprob: -4.019790172576904
    3. ' []' → logprob: -7.144790172576904
    4. '[' → logprob: -7.144790172576904
    5. '[]

' → logprob: -10.769789695739746
    6. ' []
' → logprob: -11.019789695739746
    7. 'set' → logprob: -11.269789695739746
    8. ' [' → logprob: -12.019789695739746
    9. '[]}' → logprob: -13.644789695739746
    10. '0' → logprob: -13.894789695739746

Token 145: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.22107332944869995
    2. '([' → logprob: -1.8460733890533447
    3. '()' → logprob: -3.5960733890533447
    4. '(' → logprob: -5.221073150634766
    5. '(i' → logprob: -5.471073150634766
    6. '(sorted' → logprob: -5.971073150634766
    7. '(
' → logprob: -7.721073150634766
    8. '([]' → logprob: -8.721073150634766
    9. '(filter' → logprob: -8.971073150634766
    10. '([
' → logprob: -10.471073150634766

Token 146: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.009795641526579857
    2. 'for' → logprob: -4.634795665740967
    3. ' ' → logprob: -10.384795188903809
    4. '[' → logprob: -13.384795188903809
    5. '   ' → logprob: -13.509795188903809
    6. 'x' → logprob: -13.759795188903809
    7. '
' → logprob: -14.009795188903809
    8. '	for' → logprob: -14.259795188903809
    9. '  ' → logprob: -14.384795188903809
    10. ' 
' → logprob: -14.759795188903809

Token 147: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.23605437576770782
    2. 'group' → logprob: -1.7360544204711914
    3. ' group' → logprob: -3.6110544204711914
    4. ' x' → logprob: -4.986054420471191
    5. 's' → logprob: -9.861054420471191
    6. 'mask' → logprob: -10.611054420471191
    7. 'g' → logprob: -11.111054420471191
    8. '(group' → logprob: -11.111054420471191
    9. ')' → logprob: -11.236054420471191
    10. ' in' → logprob: -11.361054420471191

Token 148: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0819200798869133
    2. 'in' → logprob: -2.5819201469421387
    3. 'group' → logprob: -6.081920146942139
    4. 'if' → logprob: -8.58191967010498
    5. ' group' → logprob: -8.83191967010498
    6. ' if' → logprob: -9.08191967010498
    7. ' ' → logprob: -9.33191967010498
    8. ',' → logprob: -9.70691967010498
    9. 's' → logprob: -10.08191967010498
    10. 'mask' → logprob: -10.33191967010498

Token 149: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.00672448705881834
    2. ' group' → logprob: -5.0067243576049805
    3. 'roup' → logprob: -12.88172435760498
    4. '[group' → logprob: -12.88172435760498
    5. '(group' → logprob: -14.00672435760498
    6. 'range' → logprob: -14.13172435760498
    7. '"group' → logprob: -14.50672435760498
    8. '	group' → logprob: -14.63172435760498
    9. '
' → logprob: -14.88172435760498
    10. ' ' → logprob: -15.00672435760498

Token 150: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.313364714384079
    2. ' if' → logprob: -1.3133647441864014
    3. '           ' → logprob: -9.31336498260498
    4. '               ' → logprob: -11.93836498260498
    5. '          ' → logprob: -13.56336498260498
    6. '       ' → logprob: -13.81336498260498
    7. '   ' → logprob: -13.93836498260498
    8. '                   ' → logprob: -13.93836498260498
    9. '                  ' → logprob: -14.68836498260498
    10. '              ' → logprob: -14.81336498260498

Token 151: ' (' (ID: 350)
  Prédit: '(ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ob' → logprob: -0.2712600529193878
    2. '(not' → logprob: -2.2712600231170654
    3. '(x' → logprob: -3.0212600231170654
    4. '(objects' → logprob: -3.0212600231170654
    5. 'not' → logprob: -4.3962602615356445
    6. '(obj' → logprob: -4.6462602615356445
    7. ' not' → logprob: -4.7712602615356445
    8. '((' → logprob: -5.7712602615356445
    9. ' (' → logprob: -6.0212602615356445
    10. '(' → logprob: -8.146260261535645

Token 152: 'objs' (ID: 194283)
  Prédit: 'objs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'objs' → logprob: -0.11893902719020844
    2. '(ob' → logprob: -2.24393892288208
    3. 'ob' → logprob: -6.24393892288208
    4. ' objs' → logprob: -6.49393892288208
    5. '(objects' → logprob: -6.99393892288208
    6. '(obj' → logprob: -7.49393892288208
    7. ' (' → logprob: -7.74393892288208
    8. 'obj' → logprob: -8.493939399719238
    9. 'not' → logprob: -8.868939399719238
    10. '(x' → logprob: -9.118939399719238

Token 153: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.012875592336058617
    2. 'x' → logprob: -4.512875556945801
    3. '[' → logprob: -6.387875556945801
    4. '(x' → logprob: -9.7628755569458
    5. '[f' → logprob: -10.7628755569458
    6. ' x' → logprob: -10.8878755569458
    7. '[
' → logprob: -11.2628755569458
    8. '[(' → logprob: -12.1378755569458
    9. ' [' → logprob: -12.6378755569458
    10. '[s' → logprob: -12.6378755569458

Token 154: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08331970125436783
    2. '>>' → logprob: -2.583319664001465
    3. '&' → logprob: -5.958319664001465
    4. ')' → logprob: -6.958319664001465
    5. ']&' → logprob: -7.333319664001465
    6. ' &' → logprob: -9.083319664001465
    7. ')&' → logprob: -9.708319664001465
    8. '>' → logprob: -11.583319664001465
    9. ' >>' → logprob: -11.708319664001465
    10. '[' → logprob: -12.083319664001465

Token 155: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.15018652379512787
    2. ' &' → logprob: -2.400186538696289
    3. '>>' → logprob: -3.025186538696289
    4. '&amp' → logprob: -9.275186538696289
    5. '&gt' → logprob: -11.025186538696289
    6. ' >>' → logprob: -11.150186538696289
    7. ')' → logprob: -11.275186538696289
    8. '&r' → logprob: -11.275186538696289
    9. '&
' → logprob: -11.525186538696289
    10. ')&' → logprob: -11.775186538696289

Token 156: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011424804106354713
    2. ' (' → logprob: -6.876142501831055
    3. ')' → logprob: -9.751142501831055
    4. '1' → logprob: -10.251142501831055
    5. '0' → logprob: -11.501142501831055
    6. '
' → logprob: -13.001142501831055
    7. '```' → logprob: -14.126142501831055
    8. ' ' → logprob: -14.376142501831055
    9. '(f' → logprob: -14.501142501831055
    10. '((' → logprob: -14.501142501831055

Token 157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12704727053642273
    2. '(' → logprob: -2.127047300338745
    3. '0' → logprob: -9.627047538757324
    4. ' (' → logprob: -10.627047538757324
    5. ')' → logprob: -11.002047538757324
    6. ' ' → logprob: -11.627047538757324
    7. '
' → logprob: -13.252047538757324
    8. '```' → logprob: -14.502047538757324
    9. '{' → logprob: -15.127047538757324
    10. '   ' → logprob: -15.752047538757324

Token 158: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.048591118305921555
    2. ' <<' → logprob: -3.048591136932373
    3. ')' → logprob: -13.298590660095215
    4. '<' → logprob: -13.798590660095215
    5. '1' → logprob: -15.298590660095215
    6. '```' → logprob: -15.298590660095215
    7. '<<(' → logprob: -15.423590660095215
    8. '<<<' → logprob: -15.798590660095215
    9. '
' → logprob: -16.54859161376953
    10. ' ' → logprob: -17.17359161376953

Token 159: ' (' (ID: 350)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00016039233014453202
    2. ' f' → logprob: -8.750160217285156
    3. '
' → logprob: -14.125160217285156
    4. '   ' → logprob: -15.000160217285156
    5. ' ' → logprob: -15.250160217285156
    6. '```' → logprob: -15.750160217285156
    7. ')' → logprob: -15.875160217285156
    8. '    ' → logprob: -16.375160217285156
    9. '     ' → logprob: -17.000160217285156
    10. '  ' → logprob: -17.250160217285156

Token 160: 'm' (ID: 76)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -2.2961512513575144e-05
    2. 'm' → logprob: -11.000022888183594
    3. ' f' → logprob: -12.375022888183594
    4. '(' → logprob: -14.625022888183594
    5. '
' → logprob: -15.000022888183594
    6. '   ' → logprob: -15.125022888183594
    7. '(f' → logprob: -15.250022888183594
    8. ' ' → logprob: -15.625022888183594
    9. '           ' → logprob: -16.000022888183594
    10. '(m' → logprob: -16.000022888183594

Token 161: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.28911393880844116
    2. 'f' → logprob: -1.664113998413086
    3. '1' → logprob: -3.164113998413086
    4. ' -' → logprob: -4.289113998413086
    5. ')' → logprob: -6.039113998413086
    6. '-f' → logprob: -6.664113998413086
    7. '))' → logprob: -7.539113998413086
    8. '           ' → logprob: -7.914113998413086
    9. ' ' → logprob: -8.164113998413086
    10. '   ' → logprob: -8.664113998413086

Token 162: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05521939694881439
    2. 'f' → logprob: -2.9302194118499756
    3. ' ' → logprob: -8.680219650268555
    4. ' f' → logprob: -8.805219650268555
    5. '   ' → logprob: -11.430219650268555
    6. 'i' → logprob: -12.555219650268555
    7. '  ' → logprob: -14.055219650268555
    8. '-' → logprob: -14.555219650268555
    9. '	f' → logprob: -15.305219650268555
    10. '2' → logprob: -15.555219650268555

Token 163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017207576893270016
    2. 'f' → logprob: -6.376720905303955
    3. '(' → logprob: -12.126720428466797
    4. ' ' → logprob: -12.251720428466797
    5. '(f' → logprob: -12.751720428466797
    6. ' f' → logprob: -13.001720428466797
    7. '-' → logprob: -13.501720428466797
    8. '   ' → logprob: -13.751720428466797
    9. '
' → logprob: -15.501720428466797
    10. 'i' → logprob: -16.001720428466797

Token 164: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2534654438495636
    2. ' -' → logprob: -1.5034654140472412
    3. ')' → logprob: -7.00346565246582
    4. '-f' → logprob: -7.87846565246582
    5. 'f' → logprob: -9.50346565246582
    6. ' ' → logprob: -9.75346565246582
    7. '))' → logprob: -10.12846565246582
    8. '1' → logprob: -10.75346565246582
    9. ' f' → logprob: -10.87846565246582
    10. '   ' → logprob: -11.75346565246582

Token 165: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0007166040013544261
    2. ' f' → logprob: -7.250716686248779
    3. 'i' → logprob: -12.625716209411621
    4. '   ' → logprob: -13.625716209411621
    5. ' ' → logprob: -14.000716209411621
    6. '    ' → logprob: -15.500716209411621
    7. '
' → logprob: -15.500716209411621
    8. '	f' → logprob: -15.500716209411621
    9. '```' → logprob: -16.125717163085938
    10. '  ' → logprob: -16.250717163085938

Token 166: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.002083166502416134
    2. '))' → logprob: -6.2520833015441895
    3. ' ' → logprob: -9.502082824707031
    4. ')' → logprob: -10.002082824707031
    5. '))))' → logprob: -10.627082824707031
    6. '')))' → logprob: -12.502082824707031
    7. '0' → logprob: -13.127082824707031
    8. '   ' → logprob: -13.502082824707031
    9. ')))
' → logprob: -14.252082824707031
    10. ' ))' → logprob: -14.502082824707031

Token 167: ' ==' (ID: 951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022143982350826263
    2. '==' → logprob: -4.522143840789795
    3. ')==' → logprob: -4.522143840789795
    4. ' ==' → logprob: -9.022144317626953
    5. ' )' → logprob: -10.147144317626953
    6. ']==' → logprob: -13.147144317626953
    7. '))' → logprob: -13.397144317626953
    8. '=' → logprob: -13.522144317626953
    9. ');' → logprob: -14.022144317626953
    10. '0' → logprob: -14.147144317626953

Token 168: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031777136027812958
    2. ' ' → logprob: -5.753177642822266
    3. ' ' → logprob: -18.753177642822266
    4. ')' → logprob: -19.503177642822266
    5. '000' → logprob: -20.253177642822266
    6. '```' → logprob: -20.628177642822266
    7. '۰' → logprob: -20.753177642822266
    8. '00' → logprob: -21.378177642822266
    9. '=' → logprob: -21.378177642822266
    10. '   ' → logprob: -21.628177642822266

Token 169: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '000' → logprob: -21.000017166137695
    4. '   ' → logprob: -21.250017166137695
    5. '00' → logprob: -22.625017166137695
    6. ')' → logprob: -22.625017166137695
    7. '۰' → logprob: -22.750017166137695
    8. '(' → logprob: -23.625017166137695
    9. 'False' → logprob: -23.625017166137695
    10. '=' → logprob: -24.000017166137695

Token 170: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.38729357719421387
    2. ')' → logprob: -1.1372935771942139
    3. '           ' → logprob: -8.137293815612793
    4. ' )
' → logprob: -9.887293815612793
    5. ')
' → logprob: -9.887293815612793
    6. ' )' → logprob: -11.137293815612793
    7. '       ' → logprob: -12.387293815612793
    8. ')

' → logprob: -12.762293815612793
    9. '),' → logprob: -12.887293815612793
    10. '               ' → logprob: -13.012293815612793

Token 171: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6978861689567566
    2. '
' → logprob: -1.5728862285614014
    3. '           ' → logprob: -2.0728862285614014
    4. ')
' → logprob: -2.8228862285614014
    5. '<|end|>' → logprob: -2.8228862285614014
    6. '       ' → logprob: -4.072885990142822
    7. '            
' → logprob: -4.322885990142822
    8. '<|end|>' → logprob: -4.822885990142822
    9. ',' → logprob: -5.947885990142822
    10. '),' → logprob: -6.072885990142822

Token 172: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6316561102867126
    2. '           ' → logprob: -0.8816561102867126
    3. 's' (adapté à ' s') → logprob: -3.0066561698913574
    4. '       ' → logprob: -6.131656169891357
    5. ' if' → logprob: -6.631656169891357
    6. ' ' → logprob: -8.3816556930542
    7. ',' → logprob: -8.5066556930542
    8. ')' → logprob: -8.7566556930542
    9. '            
' → logprob: -8.7566556930542
    10. '
' → logprob: -8.8816556930542

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.161114901304245
    2. '0' → logprob: -1.9111149311065674
    3. '=' → logprob: -7.786114692687988
    4. ' =' → logprob: -8.411114692687988
    5. '_' → logprob: -9.036114692687988
    6. 's' → logprob: -10.036114692687988
    7. ' ' → logprob: -10.911114692687988
    8. '```' → logprob: -11.036114692687988
    9. '
' → logprob: -11.286114692687988
    10. '

' → logprob: -12.286114692687988

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020774602890015
    2. '=' → logprob: -2.350207805633545
    3. ')' → logprob: -14.100207328796387
    4. ',' → logprob: -15.975207328796387
    5. ' ' → logprob: -16.600208282470703
    6. ' =
' → logprob: -16.725208282470703
    7. 's' → logprob: -17.100208282470703
    8. ':' → logprob: -17.975208282470703
    9. ' ' → logprob: -18.725208282470703
    10. '=[]' → logprob: -18.725208282470703

Token 175: ' tuple' (ID: 31311)
  Prédit: ' tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.10039106011390686
    2. 'tuple' → logprob: -2.350391149520874
    3. '(tuple' → logprob: -8.600391387939453
    4. ' ' → logprob: -16.475391387939453
    5. ' (' → logprob: -16.475391387939453
    6. '_tuple' → logprob: -17.100391387939453
    7. '(' → logprob: -17.975391387939453
    8. 'Tuple' → logprob: -18.100391387939453
    9. 't' → logprob: -18.100391387939453
    10. ' tup' → logprob: -18.225391387939453

Token 176: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.001035787514410913
    2. 'x' → logprob: -6.876035690307617
    3. '(' → logprob: -12.751035690307617
    4. '[x' → logprob: -17.251035690307617
    5. '([' → logprob: -17.626035690307617
    6. '(
' → logprob: -17.876035690307617
    7. '```' → logprob: -18.001035690307617
    8. '   ' → logprob: -18.126035690307617
    9. ' x' → logprob: -18.251035690307617
    10. '	x' → logprob: -19.376035690307617

Token 177: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.009836013428866863
    2. 'for' → logprob: -4.634836196899414
    3. '(x' → logprob: -9.509836196899414
    4. ' ' → logprob: -12.884836196899414
    5. ')' → logprob: -13.634836196899414
    6. '	for' → logprob: -14.509836196899414
    7. '   ' → logprob: -15.134836196899414
    8. '(' → logprob: -15.134836196899414
    9. '         ' → logprob: -15.884836196899414
    10. '  ' → logprob: -16.009836196899414

Token 178: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14864572882652283
    2. 'group' → logprob: -2.0236456394195557
    3. ' group' → logprob: -5.773645877838135
    4. '(x' → logprob: -6.773645877838135
    5. ' x' → logprob: -7.023645877838135
    6. '(group' → logprob: -7.148645877838135
    7. ' ' → logprob: -12.148645401000977
    8. '   ' → logprob: -12.898645401000977
    9. '```' → logprob: -12.898645401000977
    10. '[group' → logprob: -13.023645401000977

Token 179: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8213073015213013
    2. ' &' → logprob: -1.6963073015213013
    3. 'if' → logprob: -1.6963073015213013
    4. 'in' → logprob: -2.5713071823120117
    5. '&' → logprob: -2.8213071823120117
    6. ' if' → logprob: -3.4463071823120117
    7. '(group' → logprob: -4.571307182312012
    8. 'group' → logprob: -5.071307182312012
    9. ' group' → logprob: -6.196307182312012
    10. ' ' → logprob: -6.321307182312012

Token 180: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.000264315924141556
    2. ' group' → logprob: -8.250264167785645
    3. '[group' → logprob: -13.250264167785645
    4. '(group' → logprob: -13.625264167785645
    5. ' ' → logprob: -18.00026512145996
    6. '"group' → logprob: -18.37526512145996
    7. '	group' → logprob: -18.75026512145996
    8. '.group' → logprob: -19.00026512145996
    9. '   ' → logprob: -19.25026512145996
    10. 'x' → logprob: -19.62526512145996

Token 181: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.006720229052007198
    2. 'if' → logprob: -5.006720066070557
    3. '           ' → logprob: -12.756720542907715
    4. ' ' → logprob: -14.006720542907715
    5. '               ' → logprob: -15.006720542907715
    6. '	if' → logprob: -15.256720542907715
    7. ')' → logprob: -15.631720542907715
    8. '
' → logprob: -16.5067195892334
    9. '            ' → logprob: -16.5067195892334
    10. '         ' → logprob: -16.7567195892334

Token 182: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.633344829082489
    2. '(ob' → logprob: -0.758344829082489
    3. '(obj' → logprob: -8.008344650268555
    4. '(objects' → logprob: -9.133344650268555
    5. ' ' → logprob: -9.258344650268555
    6. '(obs' → logprob: -9.383344650268555
    7. '(x' → logprob: -10.383344650268555
    8. '  ' → logprob: -10.508344650268555
    9. ' not' → logprob: -11.008344650268555
    10. '   ' → logprob: -11.258344650268555

Token 183: 'objs' (ID: 194283)
  Prédit: 'objs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'objs' → logprob: -0.4826803505420685
    2. '(ob' → logprob: -0.9826803207397461
    3. 'ob' → logprob: -5.482680320739746
    4. ' objs' → logprob: -6.232680320739746
    5. ' (' → logprob: -6.607680320739746
    6. '(obj' → logprob: -7.732680320739746
    7. '(objects' → logprob: -8.857680320739746
    8. '   ' → logprob: -8.982680320739746
    9. 'obs' → logprob: -9.357680320739746
    10. '(obs' → logprob: -9.982680320739746

Token 184: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00014537633978761733
    2. 'x' → logprob: -8.875144958496094
    3. '[' → logprob: -12.875144958496094
    4. '[s' → logprob: -14.375144958496094
    5. '(x' → logprob: -14.500144958496094
    6. '[
' → logprob: -15.000144958496094
    7. 's' → logprob: -15.250144958496094
    8. '<x' → logprob: -15.375144958496094
    9. '{x' → logprob: -15.375144958496094
    10. '```' → logprob: -16.125144958496094

Token 185: ']' (ID: 60)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.42171618342399597
    2. ']' → logprob: -1.1717162132263184
    3. ' &' → logprob: -3.4217162132263184
    4. ']&' → logprob: -6.671716213226318
    5. ')' → logprob: -8.42171573638916
    6. '[' → logprob: -10.04671573638916
    7. '>' → logprob: -11.29671573638916
    8. '>>' → logprob: -11.67171573638916
    9. ' ' → logprob: -12.42171573638916
    10. 'and' → logprob: -12.42171573638916

Token 186: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.57597815990448
    2. '&' → logprob: -0.82597815990448
    3. ' ' → logprob: -10.70097827911377
    4. '[' → logprob: -12.45097827911377
    5. '&amp' → logprob: -12.45097827911377
    6. ')' → logprob: -12.95097827911377
    7. '&(' → logprob: -13.07597827911377
    8. '   ' → logprob: -13.82597827911377
    9. ')&' → logprob: -15.07597827911377
    10. '
' → logprob: -15.20097827911377

Token 187: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931492686271667
    2. ' (' → logprob: -0.6931492686271667
    3. ' ' → logprob: -14.69314956665039
    4. '((' → logprob: -14.81814956665039
    5. ' ((' → logprob: -15.44314956665039
    6. '```' → logprob: -15.44314956665039
    7. '1' → logprob: -16.06814956665039
    8. ')' → logprob: -16.06814956665039
    9. '
' → logprob: -16.69314956665039
    10. ' ' → logprob: -16.81814956665039

Token 188: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00565620232373476
    2. '1' → logprob: -5.7556562423706055
    3. ' (' → logprob: -6.0056562423706055
    4. ' ' → logprob: -12.005656242370605
    5. ')' → logprob: -13.630656242370605
    6. '
' → logprob: -14.380656242370605
    7. '   ' → logprob: -14.380656242370605
    8. '```' → logprob: -14.630656242370605
    9. '0' → logprob: -14.755656242370605
    10. '           ' → logprob: -15.005656242370605

Token 189: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.06549058854579926
    2. ' <<' → logprob: -3.190490484237671
    3. '(' → logprob: -3.940490484237671
    4. '1' → logprob: -6.44049072265625
    5. ' (' → logprob: -6.94049072265625
    6. '<<(' → logprob: -9.31549072265625
    7. ')' → logprob: -10.06549072265625
    8. ' ' → logprob: -10.06549072265625
    9. '           ' → logprob: -11.19049072265625
    10. '<' → logprob: -11.19049072265625

Token 190: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.014471628703176975
    2. ' (' → logprob: -4.389471530914307
    3. '(' → logprob: -6.389471530914307
    4. '(f' → logprob: -8.264472007751465
    5. '1' → logprob: -11.889472007751465
    6. '   ' → logprob: -12.514472007751465
    7. '((' → logprob: -12.889472007751465
    8. 'f' → logprob: -13.139472007751465
    9. '           ' → logprob: -13.139472007751465
    10. ' ' → logprob: -13.389472007751465

Token 191: 'm' (ID: 76)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.007112921681255102
    2. '(' → logprob: -5.007112979888916
    3. ' (' → logprob: -8.382112503051758
    4. '1' → logprob: -9.382112503051758
    5. 'm' → logprob: -10.132112503051758
    6. '(f' → logprob: -11.257112503051758
    7. '           ' → logprob: -11.882112503051758
    8. '   ' → logprob: -12.382112503051758
    9. '((' → logprob: -12.632112503051758
    10. 'f' → logprob: -12.757112503051758

Token 192: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16037826240062714
    2. '-' → logprob: -1.9103782176971436
    3. ' ' → logprob: -9.660378456115723
    4. 'f' → logprob: -10.535378456115723
    5. 'm' → logprob: -10.910378456115723
    6. '1' → logprob: -11.660378456115723
    7. '   ' → logprob: -11.910378456115723
    8. ' f' → logprob: -12.035378456115723
    9. ')' → logprob: -12.285378456115723
    10. '           ' → logprob: -12.410378456115723

Token 193: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04894602671265602
    2. 'f' → logprob: -3.0489461421966553
    3. ' ' → logprob: -8.548946380615234
    4. ' f' → logprob: -9.798946380615234
    5. '0' → logprob: -10.298946380615234
    6. '   ' → logprob: -11.173946380615234
    7. '```' → logprob: -11.423946380615234
    8. '(f' → logprob: -11.673946380615234
    9. '
' → logprob: -11.923946380615234
    10. '-' → logprob: -12.048946380615234

Token 194: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014624117873609066
    2. 'f' → logprob: -4.389624118804932
    3. ' ' → logprob: -6.389624118804932
    4. '0' → logprob: -8.514623641967773
    5. ' f' → logprob: -9.139623641967773
    6. '(f' → logprob: -10.639623641967773
    7. '   ' → logprob: -10.889623641967773
    8. '-' → logprob: -11.327123641967773
    9. '```' → logprob: -11.702123641967773
    10. '2' → logprob: -11.702123641967773

Token 195: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.09713944792747498
    2. '-' → logprob: -2.472139358520508
    3. '-f' → logprob: -4.847139358520508
    4. 'f' → logprob: -8.347139358520508
    5. ')' → logprob: -10.472139358520508
    6. ' ' → logprob: -11.097139358520508
    7. '   ' → logprob: -11.472139358520508
    8. '       ' → logprob: -12.722139358520508
    9. ' f' → logprob: -12.722139358520508
    10. '[' → logprob: -13.097139358520508

Token 196: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0007252985378727317
    2. '1' → logprob: -7.875725269317627
    3. ' f' → logprob: -8.000725746154785
    4. ' ' → logprob: -13.250725746154785
    5. '   ' → logprob: -13.625725746154785
    6. '
' → logprob: -14.125725746154785
    7. ')' → logprob: -14.125725746154785
    8. '```' → logprob: -14.250725746154785
    9. 'i' → logprob: -14.375725746154785
    10. '(' → logprob: -14.500725746154785

Token 197: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.07002758234739304
    2. '))' → logprob: -2.6950275897979736
    3. ' ' → logprob: -10.445027351379395
    4. ')' → logprob: -11.070027351379395
    5. '))))' → logprob: -11.570027351379395
    6. '   ' → logprob: -11.945027351379395
    7. '       ' → logprob: -12.070027351379395
    8. '           ' → logprob: -12.445027351379395
    9. ' ))' → logprob: -12.570027351379395
    10. '         ' → logprob: -12.820027351379395

Token 198: ' !=' (ID: 1666)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026108557358384132
    2. ')==' → logprob: -6.127610683441162
    3. ' )' → logprob: -8.37761116027832
    4. '==' → logprob: -9.00261116027832
    5. ')!=' → logprob: -10.12761116027832
    6. ' ==' → logprob: -10.75261116027832
    7. ')
' → logprob: -13.12761116027832
    8. '!=' → logprob: -13.50261116027832
    9. ' !=' → logprob: -13.62761116027832
    10. '))' → logprob: -13.62761116027832

Token 199: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08894295990467072
    2. ' ' → logprob: -2.4639430046081543
    3. '   ' → logprob: -13.713942527770996
    4. '=' → logprob: -14.776442527770996
    5. ' ' → logprob: -14.838942527770996
    6. '```' → logprob: -15.213942527770996
    7. '  ' → logprob: -15.588942527770996
    8. '(' → logprob: -16.026443481445312
    9. ')' → logprob: -16.276443481445312
    10. '1' → logprob: -16.276443481445312

Token 200: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017032715259119868
    2. ' ' → logprob: -6.376703262329102
    3. '(' → logprob: -15.376703262329102
    4. '   ' → logprob: -15.751703262329102
    5. '1' → logprob: -15.814203262329102
    6. '=' → logprob: -16.4392032623291
    7. ')' → logprob: -16.8142032623291
    8. '  ' → logprob: -16.8767032623291
    9. '```' → logprob: -17.1892032623291
    10. '
' → logprob: -17.3142032623291

Token 201: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019607041031122208
    2. '):' → logprob: -4.394607067108154
    3. ')
' → logprob: -5.269607067108154
    4. '):
' → logprob: -6.644607067108154
    5. '       ' → logprob: -7.519607067108154
    6. ' )' → logprob: -10.644606590270996
    7. '):

' → logprob: -11.769606590270996
    8. '   ' → logprob: -11.769606590270996
    9. '           ' → logprob: -12.019606590270996
    10. ':' → logprob: -12.144606590270996

Token 202: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09465005248785019
    2. '<|end|>' → logprob: -3.0946500301361084
    3. '           ' → logprob: -3.7196500301361084
    4. ')' → logprob: -4.9696502685546875
    5. '
' → logprob: -5.2196502685546875
    6. ' if' → logprob: -5.7196502685546875
    7. ',' → logprob: -6.5946502685546875
    8. '   ' → logprob: -6.9696502685546875
    9. '<|end|>' → logprob: -6.9696502685546875
    10. ' ' → logprob: -7.9696502685546875

Token 203: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3512010872364044
    2. '           ' → logprob: -1.601201057434082
    3. 'if' (adapté à ' if') → logprob: -2.976201057434082
    4. ' cost' → logprob: -3.351201057434082
    5. 'cost' → logprob: -5.726201057434082
    6. ' res' → logprob: -6.601201057434082
    7. '       ' → logprob: -6.726201057434082
    8. 'continue' → logprob: -7.226201057434082
    9. ' continue' → logprob: -7.476201057434082
    10. '   ' → logprob: -8.226201057434082

Token 204: ' s' (ID: 265)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3477843105792999
    2. 'not' → logprob: -1.7227842807769775
    3. 's' → logprob: -2.9727842807769775
    4. 'len' → logprob: -3.4727842807769775
    5. ' s' → logprob: -3.7227842807769775
    6. ' len' → logprob: -4.847784519195557
    7. 'used' → logprob: -7.847784519195557
    8. ' used' → logprob: -8.472784042358398
    9. ' ' → logprob: -8.597784042358398
    10. '   ' → logprob: -9.847784042358398

Token 205: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006072183605283499
    2. ':' → logprob: -6.006072044372559
    3. ')' → logprob: -7.381072044372559
    4. '[' → logprob: -7.506072044372559
    5. '1' → logprob: -7.631072044372559
    6. ' ==' → logprob: -7.631072044372559
    7. '==' → logprob: -7.631072044372559
    8. ' and' → logprob: -8.881072044372559
    9. 's' → logprob: -9.006072044372559
    10. '):' → logprob: -9.131072044372559

Token 206: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6588611602783203
    2. 'and' → logprob: -1.5338611602783203
    3. ':' → logprob: -1.6588611602783203
    4. ' ==' → logprob: -3.2838611602783203
    5. '==' → logprob: -3.2838611602783203
    6. ' :' → logprob: -8.03386116027832
    7. '):' → logprob: -8.03386116027832
    8. ')' → logprob: -8.53386116027832
    9. ':
' → logprob: -8.65886116027832
    10. ' !=' → logprob: -9.65886116027832

Token 207: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.17989738285541534
    2. 's' → logprob: -1.804897427558899
    3. 'len' → logprob: -9.42989730834961
    4. '           ' → logprob: -10.55489730834961
    5. ' len' → logprob: -10.92989730834961
    6. ' not' → logprob: -12.17989730834961
    7. ' ' → logprob: -12.55489730834961
    8. '   ' → logprob: -12.55489730834961
    9. '       ' → logprob: -12.92989730834961
    10. '          ' → logprob: -13.42989730834961

Token 208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10058673471212387
    2. '0' → logprob: -2.3505866527557373
    3. 'and' → logprob: -9.350586891174316
    4. '   ' → logprob: -9.600586891174316
    5. ' ' → logprob: -9.725586891174316
    6. ' and' → logprob: -10.350586891174316
    7. '[' → logprob: -10.475586891174316
    8. ':' → logprob: -10.850586891174316
    9. '           ' → logprob: -10.850586891174316
    10. '       ' → logprob: -11.350586891174316

Token 209: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.052788861095905304
    2. ':
' → logprob: -3.0527889728546143
    3. '               ' → logprob: -6.677788734436035
    4. '           ' → logprob: -6.677788734436035
    5. ' ==' → logprob: -8.302788734436035
    6. ' :' → logprob: -8.302788734436035
    7. ' =' → logprob: -8.677788734436035
    8. '):' → logprob: -8.677788734436035
    9. '):
' → logprob: -8.677788734436035
    10. ',' → logprob: -8.927788734436035

Token 210: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004277719184756279
    2. ',' → logprob: -6.00427770614624
    3. '           ' → logprob: -6.87927770614624
    4. ')' → logprob: -9.004278182983398
    5. ' return' → logprob: -9.004278182983398
    6. ' cost' → logprob: -9.879278182983398
    7. ' res' → logprob: -10.004278182983398
    8. ' for' → logprob: -10.004278182983398
    9. '                
' → logprob: -10.129278182983398
    10. '<|end|>' → logprob: -10.379278182983398

Token 211: ' v' (ID: 323)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.4629656970500946
    2. 'cost' → logprob: -1.462965726852417
    3. ' res' → logprob: -2.712965726852417
    4. 'res' → logprob: -3.337965726852417
    5. '                   ' → logprob: -4.087965488433838
    6. ' temp' → logprob: -5.462965488433838
    7. 'temp' → logprob: -5.837965488433838
    8. 'tmp' → logprob: -5.962965488433838
    9. '               ' → logprob: -6.212965488433838
    10. ' tmp' → logprob: -6.837965488433838

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3941600024700165
    2. '=' → logprob: -1.1441600322723389
    3. 'al' → logprob: -5.39415979385376
    4. 'alue' → logprob: -6.39415979385376
    5. '   ' → logprob: -7.51915979385376
    6. 'a' → logprob: -9.269160270690918
    7. ' ' → logprob: -9.519160270690918
    8. 'alid' → logprob: -9.519160270690918
    9. ',' → logprob: -9.894160270690918
    10. '       ' → logprob: -10.519160270690918

Token 213: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7194517850875854
    2. 'dfs' → logprob: -0.7194517850875854
    3. ' dfs' → logprob: -4.219451904296875
    4. ' ' → logprob: -5.344451904296875
    5. 'max' → logprob: -5.344451904296875
    6. ' max' → logprob: -7.469451904296875
    7. '
' → logprob: -7.719451904296875
    8. 'len' → logprob: -8.594451904296875
    9. '   ' → logprob: -9.094451904296875
    10. 'df' → logprob: -9.219451904296875

Token 214: '1' (ID: 16)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.6099278926849365
    2. '1' → logprob: -0.8599278926849365
    3. 'max' → logprob: -3.4849278926849365
    4. ' dfs' → logprob: -6.609928131103516
    5. ' ' → logprob: -7.359928131103516
    6. '
' → logprob: -8.734928131103516
    7. ' max' → logprob: -8.859928131103516
    8. 'df' → logprob: -8.984928131103516
    9. '   ' → logprob: -9.234928131103516
    10. 'min' → logprob: -9.984928131103516

Token 215: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31326448917388916
    2. '+' → logprob: -1.3132644891738892
    3. '+
' → logprob: -14.063264846801758
    4. ' +
' → logprob: -14.188264846801758
    5. ' ' → logprob: -14.813264846801758
    6. ' ' → logprob: -15.563264846801758
    7. '   ' → logprob: -16.563264846801758
    8. '
' → logprob: -16.563264846801758
    9. '＋' → logprob: -16.688264846801758
    10. '0' → logprob: -16.813264846801758

Token 216: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2010943740606308
    2. 'dfs' → logprob: -1.826094388961792
    3. ' max' → logprob: -4.326094150543213
    4. 'min' → logprob: -4.951094150543213
    5. ' dfs' → logprob: -7.326094150543213
    6. ' min' → logprob: -9.076094627380371
    7. 'df' → logprob: -11.076094627380371
    8. '(max' → logprob: -11.701094627380371
    9. 'DFS' → logprob: -11.951094627380371
    10. '
' → logprob: -12.763594627380371

Token 217: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0004144648555666208
    2. '(' → logprob: -7.8754143714904785
    3. '(
' → logprob: -10.750414848327637
    4. 'dfs' → logprob: -11.375414848327637
    5. ' (' → logprob: -13.875414848327637
    6. '(

' → logprob: -15.625414848327637
    7. 'd' → logprob: -15.625414848327637
    8. '(
' → logprob: -16.37541389465332
    9. '((' → logprob: -17.12541389465332
    10. ' dfs' → logprob: -17.62541389465332

Token 218: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -1.1041145626222715e-05
    2. '(fs' → logprob: -11.500011444091797
    3. ' fs' → logprob: -15.000011444091797
    4. 'f' → logprob: -15.125011444091797
    5. 'dfs' → logprob: -15.375011444091797
    6. 'efs' → logprob: -18.125011444091797
    7. 's' → logprob: -18.250011444091797
    8. '(' → logprob: -18.625011444091797
    9. '(f' → logprob: -19.000011444091797
    10. '_fs' → logprob: -19.250011444091797

Token 219: '(mask' (ID: 80748)
  Prédit: '(mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.44010159373283386
    2. '(s' → logprob: -1.0651016235351562
    3. 'mask' → logprob: -5.190101623535156
    4. '(' → logprob: -6.565101623535156
    5. '(f' → logprob: -6.940101623535156
    6. 's' → logprob: -6.940101623535156
    7. ' (' → logprob: -7.065101623535156
    8. ')' → logprob: -7.565101623535156
    9. '((' → logprob: -7.690101623535156
    10. ',' → logprob: -8.440101623535156

Token 220: ' |' (ID: 1022)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018047619611024857
    2. ',s' → logprob: -4.89304780960083
    3. ' ,' → logprob: -5.14304780960083
    4. '(s' → logprob: -5.76804780960083
    5. ',f' → logprob: -7.39304780960083
    6. 's' → logprob: -8.643047332763672
    7. '(' → logprob: -8.893047332763672
    8. ',(' → logprob: -9.018047332763672
    9. '(mask' → logprob: -9.393047332763672
    10. ',
' → logprob: -9.393047332763672

Token 221: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.062185924500226974
    2. ' (' → logprob: -2.8121860027313232
    3. '((' → logprob: -8.562186241149902
    4. ' ((' → logprob: -11.437186241149902
    5. '1' → logprob: -11.937186241149902
    6. '{' → logprob: -12.312186241149902
    7. '(f' → logprob: -13.312186241149902
    8. ' ' → logprob: -13.562186241149902
    9. '(s' → logprob: -14.437186241149902
    10. '
' → logprob: -14.937186241149902

Token 222: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.35004547238349915
    2. '(' → logprob: -1.2250454425811768
    3. 'f' → logprob: -6.725045680999756
    4. '(f' → logprob: -7.975045680999756
    5. ' (' → logprob: -11.225045204162598
    6. '{' → logprob: -11.725045204162598
    7. '0' → logprob: -11.725045204162598
    8. ' ' → logprob: -12.100045204162598
    9. ')' → logprob: -12.350045204162598
    10. 's' → logprob: -12.850045204162598

Token 223: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.16024160385131836
    2. ' <<' → logprob: -1.9102416038513184
    3. '<' → logprob: -11.660242080688477
    4. '<<(' → logprob: -12.910242080688477
    5. '1' → logprob: -13.160242080688477
    6. ')' → logprob: -13.660242080688477
    7. '(' → logprob: -14.035242080688477
    8. '<<<' → logprob: -14.660242080688477
    9. ' ' → logprob: -15.035242080688477
    10. ' ' → logprob: -15.785242080688477

Token 224: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0006096287979744375
    2. '(f' → logprob: -7.625609397888184
    3. ' f' → logprob: -9.875609397888184
    4. '(' → logprob: -10.250609397888184
    5. '   ' → logprob: -11.375609397888184
    6. ' (' → logprob: -12.000609397888184
    7. '(m' → logprob: -12.000609397888184
    8. '           ' → logprob: -13.375609397888184
    9. '((' → logprob: -13.625609397888184
    10. ')' → logprob: -13.750609397888184

Token 225: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0017238459549844265
    2. ',' → logprob: -6.376723766326904
    3. ' ),' → logprob: -11.501724243164062
    4. ')' → logprob: -12.501724243164062
    5. ',),' → logprob: -13.001724243164062
    6. '),
' → logprob: -14.001724243164062
    7. ' ,' → logprob: -14.376724243164062
    8. '       ' → logprob: -14.501724243164062
    9. '           ' → logprob: -14.501724243164062
    10. '),(' → logprob: -14.626724243164062

Token 226: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0009855312528088689
    2. ' s' → logprob: -7.000985622406006
    3. 'tuple' → logprob: -10.500985145568848
    4. '   ' → logprob: -10.875985145568848
    5. '           ' → logprob: -11.750985145568848
    6. '       ' → logprob: -12.250985145568848
    7. ')' → logprob: -12.750985145568848
    8. ' tuple' → logprob: -13.250985145568848
    9. '	s' → logprob: -13.625985145568848
    10. '(s' → logprob: -13.625985145568848

Token 227: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8908587662735954e-05
    2. '1' → logprob: -11.125019073486328
    3. '(f' → logprob: -13.750019073486328
    4. 'f' → logprob: -14.000019073486328
    5. 's' → logprob: -14.125019073486328
    6. ')' → logprob: -14.625019073486328
    7. '(' → logprob: -15.000019073486328
    8. ' ' → logprob: -15.500019073486328
    9. ',' → logprob: -16.125019073486328
    10. '[' → logprob: -16.125019073486328

Token 228: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -2.570319702499546e-05
    2. ' ),' → logprob: -11.000025749206543
    3. ',' → logprob: -11.875025749206543
    4. '),
' → logprob: -14.125025749206543
    5. ')' → logprob: -14.625025749206543
    6. ',),' → logprob: -15.000025749206543
    7. '   ' → logprob: -15.125025749206543
    8. '       ' → logprob: -16.375024795532227
    9. '           ' → logprob: -16.625024795532227
    10. '),

' → logprob: -17.625024795532227

Token 229: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.16022777557373047
    2. 'dfs' → logprob: -1.9102277755737305
    3. ' DFS' → logprob: -14.03522777557373
    4. ' 
' → logprob: -14.53522777557373
    5. '
' → logprob: -15.41022777557373
    6. 'DFS' → logprob: -15.53522777557373
    7. '           ' → logprob: -15.66022777557373
    8. '               ' → logprob: -15.66022777557373
    9. '            ' → logprob: -16.035228729248047
    10. '                ' → logprob: -16.160228729248047

Token 230: '(mask' (ID: 80748)
  Prédit: '(mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.0007189844618551433
    2. 'mask' → logprob: -7.25071907043457
    3. '(' → logprob: -12.87571907043457
    4. ' mask' → logprob: -12.87571907043457
    5. ' (' → logprob: -13.00071907043457
    6. '	mask' → logprob: -14.12571907043457
    7. '((' → logprob: -15.00071907043457
    8. '(m' → logprob: -15.12571907043457
    9. '```' → logprob: -16.00071907043457
    10. '(
' → logprob: -16.00071907043457

Token 231: ' |' (ID: 1022)
  Prédit: ' |'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' |' → logprob: -0.36082693934440613
    2. '|' → logprob: -1.8608269691467285
    3. ',' → logprob: -1.9858269691467285
    4. ' ,' → logprob: -4.6108269691467285
    5. '|(' → logprob: -9.73582649230957
    6. ',
' → logprob: -10.48582649230957
    7. ')' → logprob: -11.23582649230957
    8. '(' → logprob: -11.48582649230957
    9. '```' → logprob: -11.73582649230957
    10. ' (' → logprob: -11.98582649230957

Token 232: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9027791495318525e-05
    2. ' (' → logprob: -10.875019073486328
    3. '```' → logprob: -17.375019073486328
    4. '1' → logprob: -17.750019073486328
    5. '((' → logprob: -19.875019073486328
    6. '(f' → logprob: -20.500019073486328
    7. '
' → logprob: -20.500019073486328
    8. '[' → logprob: -21.000019073486328
    9. '`' → logprob: -21.125019073486328
    10. '{' → logprob: -21.250019073486328

Token 233: '1' (ID: 16)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.06383397430181503
    2. '1' → logprob: -2.8138339519500732
    3. '(' → logprob: -6.438834190368652
    4. '(f' → logprob: -8.563834190368652
    5. '```' → logprob: -10.188834190368652
    6. ' (' → logprob: -11.188834190368652
    7. ' f' → logprob: -11.688834190368652
    8. '[' → logprob: -12.813834190368652
    9. ')' → logprob: -13.438834190368652
    10. '[f' → logprob: -13.563834190368652

Token 234: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.48522499203681946
    2. 'f' → logprob: -0.9852249622344971
    3. '<f' → logprob: -5.485225200653076
    4. '[f' → logprob: -6.110225200653076
    5. '1' → logprob: -6.735225200653076
    6. '(' → logprob: -7.360225200653076
    7. ')' → logprob: -7.360225200653076
    8. '(f' → logprob: -7.360225200653076
    9. '```' → logprob: -7.610225200653076
    10. '[' → logprob: -7.610225200653076

Token 235: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.9504606825648807e-05
    2. ' f' → logprob: -12.000019073486328
    3. '   ' → logprob: -12.875019073486328
    4. ')' → logprob: -13.250019073486328
    5. '[' → logprob: -13.375019073486328
    6. '           ' → logprob: -13.375019073486328
    7. '1' → logprob: -13.750019073486328
    8. '(f' → logprob: -13.750019073486328
    9. '```' → logprob: -14.250019073486328
    10. 's' → logprob: -14.500019073486328

Token 236: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14348991215229034
    2. '),' → logprob: -2.0184898376464844
    3. ' ,' → logprob: -7.518489837646484
    4. ',s' → logprob: -8.643489837646484
    5. ',),' → logprob: -9.893489837646484
    6. ' ),' → logprob: -11.268489837646484
    7. 's' → logprob: -11.768489837646484
    8. ',f' → logprob: -12.018489837646484
    9. ')' → logprob: -12.393489837646484
    10. '           ' → logprob: -13.018489837646484

Token 237: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02324605919420719
    2. ' s' → logprob: -3.7732460498809814
    3. ')' → logprob: -15.523245811462402
    4. '           ' → logprob: -16.27324676513672
    5. '(s' → logprob: -16.39824676513672
    6. '               ' → logprob: -16.64824676513672
    7. '   ' → logprob: -17.52324676513672
    8. '       ' → logprob: -17.64824676513672
    9. ')s' → logprob: -17.77324676513672
    10. '                   ' → logprob: -18.02324676513672

Token 238: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001843485952122137
    2. 's' → logprob: -8.750184059143066
    3. ')' → logprob: -11.875184059143066
    4. '0' → logprob: -12.000184059143066
    5. ' s' → logprob: -12.125184059143066
    6. '```' → logprob: -13.250184059143066
    7. '(s' → logprob: -13.875184059143066
    8. '(' → logprob: -13.875184059143066
    9. 'o' → logprob: -14.500184059143066
    10. '01' → logprob: -14.875184059143066

Token 239: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.007666840683668852
    2. '))
' → logprob: -4.882667064666748
    3. ')' → logprob: -10.38266658782959
    4. ')))' → logprob: -10.75766658782959
    5. '))
' → logprob: -12.63266658782959
    6. ' ))' → logprob: -12.88266658782959
    7. '       ' → logprob: -14.13266658782959
    8. ')
' → logprob: -14.50766658782959
    9. '))

' → logprob: -15.00766658782959
    10. '           ' → logprob: -15.13266658782959

Token 240: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5037200450897217
    2. '               ' → logprob: -1.2537200450897217
    3. '       ' → logprob: -2.5037200450897217
    4. ')' → logprob: -4.253720283508301
    5. '
' → logprob: -5.003720283508301
    6. '<|end|>' → logprob: -5.628720283508301
    7. '                   ' → logprob: -7.128720283508301
    8. ' if' → logprob: -7.378720283508301
    9. '            
' → logprob: -8.1287202835083
    10. '                
' → logprob: -8.5037202835083

Token 241: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.23286780714988708
    2. 'if' (adapté à ' if') → logprob: -1.7328678369522095
    3. '           ' → logprob: -4.73286771774292
    4. ' if' → logprob: -4.73286771774292
    5. ' res' → logprob: -5.23286771774292
    6. '       ' → logprob: -5.48286771774292
    7. '               ' → logprob: -5.60786771774292
    8. '                   ' → logprob: -9.107868194580078
    9. '
' → logprob: -9.732868194580078
    10. '   ' → logprob: -11.607868194580078

Token 242: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.20141646265983582
    2. 'v' → logprob: -1.7014164924621582
    3. '	v' → logprob: -13.576416015625
    4. '<v' → logprob: -13.826416015625
    5. '```' → logprob: -15.201416015625
    6. '(v' → logprob: -15.326416015625
    7. ' ' → logprob: -16.451416015625
    8. '   ' → logprob: -16.576416015625
    9. '$v' → logprob: -17.076416015625
    10. ')v' → logprob: -17.326416015625

Token 243: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3869769275188446
    2. ' <' → logprob: -1.136976957321167
    3. '<v' → logprob: -10.261977195739746
    4. '<int' → logprob: -10.886977195739746
    5. ')' → logprob: -11.511977195739746
    6. ')<' → logprob: -11.636977195739746
    7. '<|end|>' → logprob: -11.636977195739746
    8. '[' → logprob: -12.636977195739746
    9. '<n' → logprob: -13.011977195739746
    10. '<size' → logprob: -13.261977195739746

Token 244: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00033546582562848926
    2. ' res' → logprob: -8.000335693359375
    3. '	res' → logprob: -17.000335693359375
    4. '
' → logprob: -19.125335693359375
    5. '```' → logprob: -19.500335693359375
    6. '_res' → logprob: -19.750335693359375
    7. '(res' → logprob: -20.125335693359375
    8. '               ' → logprob: -20.750335693359375
    9. '   ' → logprob: -20.750335693359375
    10. '=res' → logprob: -20.875335693359375

Token 245: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5768135190010071
    2. ':' → logprob: -0.8268135190010071
    3. '                   ' → logprob: -7.951813697814941
    4. '):
' → logprob: -8.576813697814941
    5. '           ' → logprob: -9.201813697814941
    6. '               ' → logprob: -9.451813697814941
    7. '=' → logprob: -10.201813697814941
    8. '):' → logprob: -10.326813697814941
    9. '                       ' → logprob: -10.576813697814941
    10. ':
' → logprob: -10.701813697814941

Token 246: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07426178455352783
    2. 'res' → logprob: -3.0742616653442383
    3. ' res' → logprob: -3.8242616653442383
    4. '                       ' → logprob: -6.074261665344238
    5. '               ' → logprob: -6.824261665344238
    6. '           ' → logprob: -10.074261665344238
    7. '                           ' → logprob: -10.199261665344238
    8. '                  ' → logprob: -11.449261665344238
    9. '
' → logprob: -11.949261665344238
    10. ',res' → logprob: -12.574261665344238

Token 247: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.5760907530784607
    2. 'res' (adapté à ' res') → logprob: -0.8260907530784607
    3. '                   ' → logprob: -8.826090812683105
    4. '                       ' → logprob: -13.451090812683105
    5. '
' → logprob: -13.576090812683105
    6. '               ' → logprob: -13.951090812683105
    7. '                    ' → logprob: -15.451090812683105
    8. '	res' → logprob: -15.701090812683105
    9. '```' → logprob: -16.45108985900879
    10. '_res' → logprob: -16.57608985900879

Token 248: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407761216163635
    2. '=' → logprob: -0.974077582359314
    3. ' =
' → logprob: -15.099077224731445
    4. '＝' → logprob: -16.099077224731445
    5. '=
' → logprob: -16.599077224731445
    6. ',' → logprob: -16.849077224731445
    7. '.=' → logprob: -17.099077224731445
    8. '   ' → logprob: -17.224077224731445
    9. ' =
' → logprob: -17.349077224731445
    10. '=

' → logprob: -17.349077224731445

Token 249: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0031777136027812958
    2. ' v' → logprob: -5.753177642822266
    3. '	v' → logprob: -18.378177642822266
    4. '                   ' → logprob: -19.628177642822266
    5. ' ' → logprob: -20.878177642822266
    6. ')v' → logprob: -21.378177642822266
    7. '<v' → logprob: -21.878177642822266
    8. '               ' → logprob: -22.003177642822266
    9. '```' → logprob: -22.128177642822266
    10. '_v' → logprob: -22.503177642822266

Token 250: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03345480561256409
    2. '
' → logprob: -3.5334548950195312
    3. ' return' → logprob: -6.533454895019531
    4. '    
' → logprob: -7.283454895019531
    5. '  
' → logprob: -8.033454895019531
    6. 'return' → logprob: -8.033454895019531
    7. '        
' → logprob: -8.158454895019531
    8. '   ' → logprob: -8.158454895019531
    9. '           ' → logprob: -9.783454895019531
    10. '\n' → logprob: -9.783454895019531

Token 251: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006878530140966177
    2. ' return' → logprob: -5.50687837600708
    3. '   ' → logprob: -6.50687837600708
    4. '
' → logprob: -7.88187837600708
    5. 'return' → logprob: -8.006878852844238
    6. '           ' → logprob: -8.381878852844238
    7. '               ' → logprob: -9.256878852844238
    8. '    
' → logprob: -9.631878852844238
    9. '        
' → logprob: -10.256878852844238
    10. '                   ' → logprob: -10.506878852844238

Token 252: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7521615028381348
    2. '       ' → logprob: -1.1271615028381348
    3. ' return' → logprob: -1.7521615028381348
    4. '   ' → logprob: -3.5021615028381348
    5. '
' → logprob: -7.377161502838135
    6. '           ' → logprob: -8.377161026000977
    7. '```' → logprob: -9.502161026000977
    8. '	return' → logprob: -9.627161026000977
    9. ' ' → logprob: -9.877161026000977
    10. '    ' → logprob: -10.752161026000977

Token 253: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.637557327747345
    2. ' res' → logprob: -0.762557327747345
    3. 'len' → logprob: -6.262557506561279
    4. ' not' → logprob: -6.512557506561279
    5. ' len' → logprob: -7.637557506561279
    6. 'mask' → logprob: -8.262557029724121
    7. 'not' → logprob: -8.387557029724121
    8. 'group' → logprob: -8.637557029724121
    9. ' group' → logprob: -8.887557029724121
    10. ' mask' → logprob: -9.012557029724121

Token 254: ' ==' (ID: 951)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3258472681045532
    2. ' ==' → logprob: -1.8258472681045532
    3. '==' → logprob: -2.3258471488952637
    4. ' =' → logprob: -3.9508471488952637
    5. '```' → logprob: -11.200847625732422
    6. '==
' → logprob: -11.575847625732422
    7. ',' → logprob: -11.825847625732422
    8. '==-' → logprob: -11.825847625732422
    9. ' if' → logprob: -12.075847625732422
    10. 'if' → logprob: -12.575847625732422

Token 255: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.004621780011802912
    2. ' float' → logprob: -5.379621982574463
    3. '   ' → logprob: -14.254621505737305
    4. '	float' → logprob: -15.129621505737305
    5. 'inf' → logprob: -15.254621505737305
    6. '=float' → logprob: -16.129621505737305
    7. ',float' → logprob: -16.504621505737305
    8. ' ' → logprob: -17.004621505737305
    9. '(float' → logprob: -17.004621505737305
    10. '```' → logprob: -17.004621505737305

Token 256: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -7.703443770878948e-06
    2. ' ('' → logprob: -13.250007629394531
    3. '('.' → logprob: -13.250007629394531
    4. '('_' → logprob: -13.375007629394531
    5. '(' → logprob: -14.375007629394531
    6. '('-' → logprob: -14.500007629394531
    7. ''in' → logprob: -14.625007629394531
    8. ''s' → logprob: -15.000007629394531
    9. ''' → logprob: -15.125007629394531
    10. '("' → logprob: -16.62500762939453

Token 257: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0003724006237462163
    2. ''in' → logprob: -8.125371932983398
    3. ''' → logprob: -9.625371932983398
    4. 'in' → logprob: -12.375371932983398
    5. ')' → logprob: -13.375371932983398
    6. ' inf' → logprob: -13.500371932983398
    7. 'info' → logprob: -13.750371932983398
    8. ''s' → logprob: -14.750371932983398
    9. '')' → logprob: -15.125371932983398
    10. '"' → logprob: -16.0003719329834

Token 258: ''):
' (ID: 26539)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4799908399581909
    2. ''):
' → logprob: -1.479990839958191
    3. '):' → logprob: -2.4799909591674805
    4. ')' → logprob: -2.7299909591674805
    5. ''):' → logprob: -5.4799909591674805
    6. '       ' → logprob: -8.97999095916748
    7. '')' → logprob: -9.10499095916748
    8. '):
' → logprob: -9.60499095916748
    9. ':' → logprob: -10.35499095916748
    10. ''):
' → logprob: -10.47999095916748

Token 259: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03739023208618164
    2. ' return' → logprob: -4.037390232086182
    3. '       ' → logprob: -4.537390232086182
    4. 'return' → logprob: -4.787390232086182
    5. ',' → logprob: -12.162389755249023
    6. '   ' → logprob: -12.537389755249023
    7. '
' → logprob: -13.162389755249023
    8. '          ' → logprob: -13.412389755249023
    9. '	       ' → logprob: -13.537389755249023
    10. '<|end|>' → logprob: -13.662389755249023

Token 260: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006289941258728504
    2. '       ' → logprob: -5.381289958953857
    3. ' return' → logprob: -6.756289958953857
    4. 'res' → logprob: -7.756289958953857
    5. '           ' → logprob: -9.7562894821167
    6. '   ' → logprob: -11.3812894821167
    7. '
' → logprob: -12.6312894821167
    8. ':return' → logprob: -14.1312894821167
    9. '{return' → logprob: -14.5062894821167
    10. '	return' → logprob: -14.6312894821167

Token 261: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02305864728987217
    2. ' ' → logprob: -4.1480584144592285
    3. 'len' → logprob: -5.0230584144592285
    4. ' len' → logprob: -8.148058891296387
    5. 'res' → logprob: -9.523058891296387
    6. '   ' → logprob: -10.648058891296387
    7. '1' → logprob: -12.023058891296387
    8. ' res' → logprob: -12.148058891296387
    9. 'group' → logprob: -12.523058891296387
    10. '       ' → logprob: -12.648058891296387

Token 262: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00031186718842945993
    2. ' ' → logprob: -8.125311851501465
    3. 'len' → logprob: -11.375311851501465
    4. '1' → logprob: -13.375311851501465
    5. 'float' → logprob: -14.000311851501465
    6. 'res' → logprob: -14.625311851501465
    7. '-' → logprob: -15.000311851501465
    8. '  ' → logprob: -15.750311851501465
    9. '   ' → logprob: -15.875311851501465
    10. ' len' → logprob: -16.00031280517578

Token 263: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005326366983354092
    2. '
' → logprob: -5.380326271057129
    3. '   ' → logprob: -8.630326271057129
    4. 'return' → logprob: -8.630326271057129
    5. '<|end|>' → logprob: -8.880326271057129
    6. '        
' → logprob: -9.755326271057129
    7. ' return' → logprob: -10.005326271057129
    8. '	' → logprob: -10.630326271057129
    9. '	return' → logprob: -11.005326271057129
    10. '  
' → logprob: -11.255326271057129

Token 264: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002529760589823127
    2. 'return' → logprob: -6.252529621124268
    3. ' return' → logprob: -8.127530097961426
    4. '   ' → logprob: -8.127530097961426
    5. '           ' → logprob: -12.502530097961426
    6. '	return' → logprob: -13.502530097961426
    7. '```' → logprob: -13.502530097961426
    8. '
' → logprob: -13.627530097961426
    9. '<|end|>' → logprob: -14.377530097961426
    10. '	' → logprob: -14.627530097961426

Token 265: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004063678905367851
    2. 'return' (adapté à ' return') → logprob: -5.629063606262207
    3. ' return' → logprob: -8.129063606262207
    4. '   ' → logprob: -8.754063606262207
    5. '
' → logprob: -11.879063606262207
    6. '           ' → logprob: -13.629063606262207
    7. '        
' → logprob: -14.379063606262207
    8. '	return' → logprob: -14.629063606262207
    9. '      ' → logprob: -14.879063606262207
    10. ' ' → logprob: -15.254063606262207

Token 266: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00861456897109747
    2. ' res' → logprob: -4.758614540100098
    3. '	res' → logprob: -20.758615493774414
    4. '   ' → logprob: -21.508615493774414
    5. '(res' → logprob: -21.508615493774414
    6. '$res' → logprob: -23.133615493774414
    7. 're' → logprob: -24.258615493774414
    8. '_res' → logprob: -24.258615493774414
    9. ',res' → logprob: -24.633615493774414
    10. 'return' → logprob: -25.258615493774414

Token 267: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 268: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7658889889717102
    2. '<|end|>' → logprob: -1.5158889293670654
    3. ')' → logprob: -1.6408889293670654
    4. '       ' → logprob: -2.8908889293670654
    5. ':' → logprob: -3.1408889293670654
    6. '):' → logprob: -5.0158891677856445
    7. '    ' → logprob: -5.2658891677856445
    8. ' ' → logprob: -6.0158891677856445
    9. ' )' → logprob: -7.0158891677856445
    10. 'return' → logprob: -7.0158891677856445

Token 269: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.018913615494966507
    2. 'group' → logprob: -4.643913745880127
    3. '   ' → logprob: -5.143913745880127
    4. 'result' → logprob: -6.518913745880127
    5. 'for' → logprob: -7.143913745880127
    6. ' return' → logprob: -7.643913745880127
    7. 'if' → logprob: -8.518913269042969
    8. 'indices' → logprob: -8.768913269042969
    9. 'mask' → logprob: -10.018913269042969
    10. 'answer' → logprob: -10.268913269042969

Token 270: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.07954880595207214
    2. ' dfs' → logprob: -2.7045488357543945
    3. '0' → logprob: -4.7045488357543945
    4. ' ' → logprob: -8.329548835754395
    5. 'df' → logprob: -9.704548835754395
    6. 'min' → logprob: -9.829548835754395
    7. 'max' → logprob: -9.829548835754395
    8. 'len' → logprob: -10.579548835754395
    9. 'n' → logprob: -11.079548835754395
    10. 'float' → logprob: -11.454548835754395

Token 271: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2951600253582001
    2. '<|end|>' → logprob: -1.9201600551605225
    3. ')' → logprob: -2.2951600551605225
    4. '(mask' → logprob: -5.920159816741943
    5. '.' → logprob: -6.795159816741943
    6. '(
' → logprob: -7.295159816741943
    7. '<|end|>' → logprob: -7.420159816741943
    8. ',' → logprob: -7.420159816741943
    9. '[' → logprob: -7.920159816741943
    10. '```' → logprob: -7.920159816741943

Token 272: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022587371058762074
    2. 'all' → logprob: -6.127258777618408
    3. '(' → logprob: -9.87725830078125
    4. ' ' → logprob: -11.25225830078125
    5. ')' → logprob: -12.75225830078125
    6. '(all' → logprob: -13.50225830078125
    7. '   ' → logprob: -13.75225830078125
    8. ' all' → logprob: -14.00225830078125
    9. '((' → logprob: -14.37725830078125
    10. '
' → logprob: -14.75225830078125

Token 273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.13388703338569e-06
    2. '   ' → logprob: -12.625009536743164
    3. ' ,' → logprob: -12.750009536743164
    4. ',
' → logprob: -13.625009536743164
    5. ')' → logprob: -13.750009536743164
    6. ',[' → logprob: -15.750009536743164
    7. ',None' → logprob: -15.750009536743164
    8. ',n' → logprob: -16.125009536743164
    9. ',len' → logprob: -16.625009536743164
    10. ',)' → logprob: -17.125009536743164

Token 274: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.38719767332077026
    2. ' tuple' → logprob: -1.137197732925415
    3. '(tuple' → logprob: -8.137197494506836
    4. '   ' → logprob: -11.387197494506836
    5. '(' → logprob: -11.512197494506836
    6. 'range' → logprob: -11.762197494506836
    7. ' (' → logprob: -13.012197494506836
    8. ')' → logprob: -13.262197494506836
    9. ' range' → logprob: -14.762197494506836
    10. 'tu' → logprob: -16.262197494506836

Token 275: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0002613358374219388
    2. 'range' → logprob: -8.250261306762695
    3. ' range' → logprob: -16.375261306762695
    4. '(' → logprob: -18.500261306762695
    5. '	range' → logprob: -19.875261306762695
    6. '(i' → logprob: -20.375261306762695
    7. ')' → logprob: -21.000261306762695
    8. '(sorted' → logprob: -21.375261306762695
    9. 'Range' → logprob: -22.000261306762695
    10. '([' → logprob: -22.750261306762695

Token 276: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.718606891809031e-05
    2. 'n' → logprob: -9.625066757202148
    3. '(len' → logprob: -13.875066757202148
    4. '(' → logprob: -16.00006675720215
    5. 'len' → logprob: -17.37506675720215
    6. ')n' → logprob: -18.50006675720215
    7. '   ' → logprob: -19.12506675720215
    8. ' n' → logprob: -19.37506675720215
    9. '```' → logprob: -19.87506675720215
    10. '[n' → logprob: -20.00006675720215

Token 277: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07891391962766647
    2. ')))' → logprob: -2.578913927078247
    3. '))
' → logprob: -11.203913688659668
    4. '()))' → logprob: -12.328913688659668
    5. ')))
' → logprob: -12.703913688659668
    6. ' ))' → logprob: -13.828913688659668
    7. '))))' → logprob: -14.203913688659668
    8. '   ' → logprob: -15.078913688659668
    9. ')' → logprob: -15.203913688659668
    10. ' ' → logprob: -15.578913688659668

Token 278: 'input' (ID: 2586)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3208125829696655
    2. 'i' → logprob: -1.3208125829696655
    3. '           ' → logprob: -2.445812702178955
    4. '   ' → logprob: -2.695812702178955
    5. '[i' → logprob: -3.195812702178955
    6. ' ' → logprob: -3.570812702178955
    7. ' used' → logprob: -3.570812702178955
    8. '=' → logprob: -3.570812702178955
    9. ' i' → logprob: -3.695812702178955
    10. ')' → logprob: -3.820812702178955

Token 279: '=sys' (ID: 149200)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0975344181060791
    2. '_data' → logprob: -2.472534418106079
    3. '().' → logprob: -6.3475341796875
    4. '_lines' → logprob: -6.4725341796875
    5. '_line' → logprob: -6.4725341796875
    6. 's' → logprob: -7.0975341796875
    7. ' =' → logprob: -7.2225341796875
    8. '_text' → logprob: -7.4725341796875
    9. 'data' → logprob: -7.8475341796875
    10. '=' → logprob: -7.9725341796875

Token 280: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.41442516446113586
    2. '.' → logprob: -1.2894251346588135
    3. '.readline' → logprob: -3.0394251346588135
    4. '.get' → logprob: -5.039425373077393
    5. '.input' → logprob: -5.289425373077393
    6. '().' → logprob: -6.414425373077393
    7. '.stdout' → logprob: -6.914425373077393
    8. 'import' → logprob: -7.539425373077393
    9. '```' → logprob: -8.289424896240234
    10. 'stdin' → logprob: -8.664424896240234

Token 281: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.006443815305829048
    2. 'read' → logprob: -5.131443977355957
    3. '.read' → logprob: -8.631443977355957
    4. '_read' → logprob: -8.881443977355957
    5. '.readlines' → logprob: -9.506443977355957
    6. 'buffer' → logprob: -10.131443977355957
    7. ' readline' → logprob: -10.756443977355957
    8. 'import' → logprob: -11.131443977355957
    9. 'input' → logprob: -11.381443977355957
    10. '_buffer' → logprob: -11.756443977355957

Token 282: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6716933846473694
    2. 'for' → logprob: -0.7966933846473694
    3. 't' → logprob: -4.546693325042725
    4. 'data' → logprob: -4.796693325042725
    5. 'print' → logprob: -4.921693325042725
    6. 'q' → logprob: -5.046693325042725
    7. 'def' → logprob: -5.921693325042725
    8. '```' → logprob: -7.046693325042725
    9. 'if' → logprob: -8.171693801879883
    10. 'a' → logprob: -8.171693801879883

Token 283: 'while' (ID: 7032)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8051462173461914
    2. 'for' → logprob: -1.5551462173461914
    3. 't' → logprob: -1.5551462173461914
    4. 'print' → logprob: -2.5551462173461914
    5. 'def' → logprob: -3.6801462173461914
    6. 'if' → logprob: -3.8051462173461914
    7. 'data' → logprob: -6.805146217346191
    8. 'q' → logprob: -6.930146217346191
    9. 'T' → logprob: -7.180146217346191
    10. 'm' → logprob: -7.555146217346191

Token 284: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.39112669229507446
    2. 'True' → logprob: -1.1411266326904297
    3. ' line' → logprob: -6.01612663269043
    4. '(True' → logprob: -6.51612663269043
    5. 'line' → logprob: -8.39112663269043
    6. '1' → logprob: -9.64112663269043
    7. ' input' → logprob: -11.14112663269043
    8. 'input' → logprob: -11.51612663269043
    9. ' ' → logprob: -13.14112663269043
    10. '=True' → logprob: -13.51612663269043

Token 285: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.083460733294487
    2. '():
' → logprob: -3.083460807800293
    3. ':' → logprob: -3.458460807800293
    4. ':
' → logprob: -6.458460807800293
    5. '   ' → logprob: -7.333460807800293
    6. ' ():' → logprob: -8.333460807800293
    7. ' :' → logprob: -8.833460807800293
    8. '()' → logprob: -10.083460807800293
    9. '(' → logprob: -10.083460807800293
    10. ' (' → logprob: -11.083460807800293

Token 286: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0559551939368248
    2. ' line' → logprob: -3.055955171585083
    3. 'line' → logprob: -4.930955410003662
    4. '	line' → logprob: -9.680954933166504
    5. 'try' → logprob: -10.555954933166504
    6. 's' → logprob: -11.305954933166504
    7. ' s' → logprob: -11.555954933166504
    8. 'l' → logprob: -12.930954933166504
    9. ' try' → logprob: -13.305954933166504
    10. 'n' → logprob: -13.430954933166504

Token 287: ' m' (ID: 284)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0011358122574165463
    2. 'l' → logprob: -7.00113582611084
    3. ' line' → logprob: -8.87613582611084
    4. 's' → logprob: -10.25113582611084
    5. 'h' → logprob: -11.25113582611084
    6. 'm' (adapté à ' m') → logprob: -11.25113582611084
    7. 'n' → logprob: -11.37613582611084
    8. 'try' → logprob: -12.62613582611084
    9. 'H' → logprob: -13.12613582611084
    10. 'S' → logprob: -13.37613582611084

Token 288: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7679660320281982
    2. ' =' → logprob: -1.2679660320281982
    3. '=' → logprob: -1.3929660320281982
    4. ' ,' → logprob: -5.267966270446777
    5. ',m' → logprob: -7.767966270446777
    6. '=int' → logprob: -8.642966270446777
    7. '=input' → logprob: -8.642966270446777
    8. ' ' → logprob: -9.642966270446777
    9. ',input' → logprob: -9.767966270446777
    10. '=line' → logprob: -10.017966270446777

Token 289: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06259874999523163
    2. ' =' → logprob: -2.812598705291748
    3. '=input' → logprob: -7.562598705291748
    4. '=line' → logprob: -9.437599182128906
    5. '=int' → logprob: -11.187599182128906
    6. '=m' → logprob: -11.687599182128906
    7. '=list' → logprob: -12.437599182128906
    8. '=n' → logprob: -13.687599182128906
    9. ',' → logprob: -14.437599182128906
    10. '   ' → logprob: -14.562599182128906

Token 290: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.1272123008966446
    2. ' map' → logprob: -2.1272122859954834
    3. 'input' → logprob: -8.377212524414062
    4. 'list' → logprob: -11.002212524414062
    5. ' input' → logprob: -11.502212524414062
    6. 'sys' → logprob: -11.627212524414062
    7. ' sys' → logprob: -12.127212524414062
    8. '[' → logprob: -12.252212524414062
    9. '(map' → logprob: -12.377212524414062
    10. '	map' → logprob: -13.502212524414062

Token 291: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.003001358127221465
    2. '(input' → logprob: -6.0030012130737305
    3. '(lambda' → logprob: -8.50300121307373
    4. '(str' → logprob: -9.00300121307373
    5. '(' → logprob: -9.25300121307373
    6. 'int' → logprob: -10.12800121307373
    7. '(list' → logprob: -10.37800121307373
    8. '(sys' → logprob: -10.75300121307373
    9. 'list' → logprob: -12.37800121307373
    10. '()' → logprob: -13.25300121307373

Token 292: ',input' (ID: 123014)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.009084261022508144
    2. '()' → logprob: -4.759084224700928
    3. '())' → logprob: -7.884084224700928
    4. '()[' → logprob: -10.259084701538086
    5. '(),' → logprob: -11.509084701538086
    6. ')' → logprob: -11.759084701538086
    7. '().__' → logprob: -11.759084701538086
    8. '()
' → logprob: -12.384084701538086
    9. '()>' → logprob: -12.759084701538086
    10. '=sys' → logprob: -13.009084701538086

Token 293: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.5577775128767826e-06
    2. '()' → logprob: -12.125005722045898
    3. '.readline' → logprob: -17.6250057220459
    4. ' ().' → logprob: -18.1250057220459
    5. '())' → logprob: -18.8750057220459
    6. '().__' → logprob: -18.8750057220459
    7. '.split' → logprob: -19.0000057220459
    8. '(' → logprob: -19.1250057220459
    9. '()
' → logprob: -19.2500057220459
    10. '()[' → logprob: -19.3750057220459

Token 294: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.02995261736214161
    2. 'strip' → logprob: -3.5299525260925293
    3. 'rstrip' → logprob: -8.529953002929688
    4. ')' → logprob: -13.404953002929688
    5. ' split' → logprob: -14.029953002929688
    6. 'read' → logprob: -14.529953002929688
    7. '(split' → logprob: -14.529953002929688
    8. ' strip' → logprob: -15.529953002929688
    9. 'plit' → logprob: -15.529953002929688
    10. '```' → logprob: -15.779953002929688

Token 295: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.022698024287819862
    2. ')' → logprob: -4.147697925567627
    3. '())
' → logprob: -5.272697925567627
    4. '()' → logprob: -6.522697925567627
    5. ')
' → logprob: -11.147698402404785
    6. '()
' → logprob: -11.897698402404785
    7. '(' → logprob: -12.022698402404785
    8. '())

' → logprob: -12.522698402404785
    9. '();)' → logprob: -12.647698402404785
    10. ' ())' → logprob: -12.772698402404785

Token 296: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2937746047973633
    2. '<|end|>' → logprob: -1.7937746047973633
    3. '   ' → logprob: -2.7937746047973633
    4. 'if' → logprob: -3.6687746047973633
    5. ' ' → logprob: -7.918774604797363
    6. ',' → logprob: -8.543774604797363
    7. '    ' → logprob: -8.668774604797363
    8. '<|end|>' → logprob: -8.793774604797363
    9. '
' → logprob: -8.918774604797363
    10. ')' → logprob: -9.043774604797363

Token 297: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.205976665019989
    2. ' if' → logprob: -1.7059767246246338
    3. '   ' → logprob: -5.455976486206055
    4. '<|end|>' → logprob: -8.330976486206055
    5. '    ' → logprob: -10.705976486206055
    6. ')' → logprob: -12.080976486206055
    7. ' ' → logprob: -12.580976486206055
    8. ',' → logprob: -13.080976486206055
    9. '    
' → logprob: -13.455976486206055
    10. '  ' → logprob: -13.955976486206055

Token 298: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.5785582065582275
    2. 'm' → logprob: -0.8285582065582275
    3. ' not' → logprob: -5.953557968139648
    4. 'not' → logprob: -11.453557968139648
    5. '   ' → logprob: -12.203557968139648
    6. '(m' → logprob: -13.703557968139648
    7. '0' → logprob: -13.828557968139648
    8. ' (' → logprob: -14.828557968139648
    9. ' ' → logprob: -14.953557968139648
    10. '	m' → logprob: -15.328557968139648

Token 299: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16025793552398682
    2. ' ==' → logprob: -1.9102579355239868
    3. '=' → logprob: -10.910258293151855
    4. '===' → logprob: -12.535258293151855
    5. '<=' → logprob: -12.660258293151855
    6. '0' → logprob: -13.160258293151855
    7. ')==' → logprob: -13.285258293151855
    8. ']==' → logprob: -13.785258293151855
    9. '()==' → logprob: -13.785258293151855
    10. '==-' → logprob: -14.410258293151855

Token 300: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.225939872208983e-05
    2. ' ' → logprob: -10.375032424926758
    3. 'n' → logprob: -14.375032424926758
    4. '=' → logprob: -15.875032424926758
    5. '```' → logprob: -16.687532424926758
    6. '   ' → logprob: -16.812532424926758
    7. 's' → logprob: -16.937532424926758
    8. '-' → logprob: -17.000032424926758
    9. 'and' → logprob: -17.250032424926758
    10. 'm' → logprob: -17.250032424926758

Token 301: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20143292844295502
    2. 'and' → logprob: -1.7014329433441162
    3. ' or' → logprob: -11.326433181762695
    4. '	and' → logprob: -12.326433181762695
    5. '   ' → logprob: -13.201433181762695
    6. ' ' → logprob: -14.201433181762695
    7. '0' → logprob: -15.326433181762695
    8. 'or' → logprob: -15.826433181762695
    9. ':' → logprob: -16.326433181762695
    10. 'n' → logprob: -17.576433181762695

Token 302: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0024756586644798517
    2. ' n' → logprob: -6.002475738525391
    3. '	n' → logprob: -18.12747573852539
    4. '   ' → logprob: -18.87747573852539
    5. '  ' → logprob: -21.75247573852539
    6. ' ' → logprob: -22.25247573852539
    7. ' ' → logprob: -23.00247573852539
    8. '\n' → logprob: -23.62747573852539
    9. '_n' → logprob: -23.87747573852539
    10. '    ' → logprob: -24.00247573852539

Token 303: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4767186939716339
    2. ' ==' → logprob: -0.9767186641693115
    3. '0' → logprob: -5.976718902587891
    4. '()==' → logprob: -10.60171890258789
    5. '   ' → logprob: -10.85171890258789
    6. '=' → logprob: -10.97671890258789
    7. ' ' → logprob: -11.10171890258789
    8. ')==' → logprob: -11.35171890258789
    9. '```' → logprob: -12.35171890258789
    10. ' ' → logprob: -13.22671890258789

Token 304: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -18.875009536743164
    4. '۰' → logprob: -19.000009536743164
    5. '  ' → logprob: -19.562509536743164
    6. '```' → logprob: -19.625009536743164
    7. '=' → logprob: -19.937509536743164
    8. '০' → logprob: -20.187509536743164
    9. '<|end|>' → logprob: -20.750009536743164
    10. '०' → logprob: -21.000009536743164

Token 305: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19408079981803894
    2. ':
' → logprob: -1.8190808296203613
    3. '       ' → logprob: -4.569080829620361
    4. '   ' → logprob: -5.569080829620361
    5. ':return' → logprob: -10.819080352783203
    6. ',' → logprob: -11.569080352783203
    7. '	break' → logprob: -11.944080352783203
    8. '):
' → logprob: -12.444080352783203
    9. '():
' → logprob: -12.819080352783203
    10. '.' → logprob: -13.444080352783203

Token 306: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004835226573050022
    2. '   ' → logprob: -5.37983512878418
    3. ' break' → logprob: -8.62983512878418
    4. 'break' → logprob: -10.87983512878418
    5. '	break' → logprob: -11.12983512878418
    6. '	' → logprob: -14.00483512878418
    7. ' ' → logprob: -15.00483512878418
    8. '   ' → logprob: -15.12983512878418
    9. '      ' → logprob: -15.25483512878418
    10. ' ' → logprob: -15.37983512878418

Token 307: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26644405722618103
    2. 'objects' → logprob: -1.5164440870285034
    3. ' objects' → logprob: -4.391444206237793
    4. 'objs' → logprob: -6.516444206237793
    5. '(objects' → logprob: -8.641444206237793
    6. '```' → logprob: -9.266444206237793
    7. '.objects' → logprob: -9.391444206237793
    8. ' objs' → logprob: -9.891444206237793
    9. '    
' → logprob: -9.891444206237793
    10. 'obj' → logprob: -11.141444206237793

Token 308: '   ' (ID: 271)
  Prédit: 'objects'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'objects' → logprob: -0.0537530854344368
    2. '   ' → logprob: -3.303753137588501
    3. ' objects' → logprob: -4.303752899169922
    4. 'objs' → logprob: -6.428752899169922
    5. '```' → logprob: -8.428752899169922
    6. '(objects' → logprob: -9.178752899169922
    7. ' objs' → logprob: -10.428752899169922
    8. '.objects' → logprob: -10.428752899169922
    9. 'groups' → logprob: -11.178752899169922
    10. 'a' → logprob: -11.428752899169922

Token 309: ' objects' (ID: 11736)
  Prédit: 'objects'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'objects' (adapté à ' objects') → logprob: -0.009471196681261063
    2. '   ' → logprob: -5.259471416473389
    3. 'objs' → logprob: -5.759471416473389
    4. ' objects' → logprob: -6.884471416473389
    5. ' objs' → logprob: -10.88447093963623
    6. 'obj' → logprob: -11.75947093963623
    7. '(objects' → logprob: -12.13447093963623
    8. '```' → logprob: -12.38447093963623
    9. '.objects' → logprob: -12.75947093963623
    10. 'a' → logprob: -13.13447093963623

Token 310: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07893561571836472
    2. ' =' → logprob: -2.5789356231689453
    3. '=[]' → logprob: -10.578935623168945
    4. '=[' → logprob: -11.953935623168945
    5. '=input' → logprob: -12.078935623168945
    6. '=list' → logprob: -12.453935623168945
    7. '=[]
' → logprob: -13.453935623168945
    8. '=sys' → logprob: -14.453935623168945
    9. '＝' → logprob: -14.453935623168945
    10. '=line' → logprob: -14.453935623168945

Token 311: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -3.5716304410016164e-05
    2. ' input' → logprob: -10.250035285949707
    3. 'sys' → logprob: -15.375035285949707
    4. '(input' → logprob: -18.500036239624023
    5. '   ' → logprob: -19.000036239624023
    6. '[input' → logprob: -19.000036239624023
    7. '<input' → logprob: -19.375036239624023
    8. '
' → logprob: -19.750036239624023
    9. '	input' → logprob: -19.875036239624023
    10. '=input' → logprob: -20.000036239624023

Token 312: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.941850526549388e-06
    2. '()' → logprob: -12.250007629394531
    3. 'rstrip' → logprob: -13.750007629394531
    4. '()].' → logprob: -14.250007629394531
    5. '()]' → logprob: -14.750007629394531
    6. '.rstrip' → logprob: -15.250007629394531
    7. '())' → logprob: -15.375007629394531
    8. ' ().' → logprob: -16.00000762939453
    9. ')' → logprob: -16.00000762939453
    10. '.readline' → logprob: -16.37500762939453

Token 313: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.01416350994259119
    2. 'rstrip' → logprob: -4.264163494110107
    3. ' strip' → logprob: -16.764163970947266
    4. '.strip' → logprob: -18.264163970947266
    5. '_strip' → logprob: -19.139163970947266
    6. 'r' → logprob: -19.264163970947266
    7. 'split' → logprob: -19.264163970947266
    8. '(strip' → logprob: -19.639163970947266
    9. '.rstrip' → logprob: -19.764163970947266
    10. '-strip' → logprob: -21.139163970947266

Token 314: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010748496279120445
    2. '()]' → logprob: -7.00107479095459
    3. '())' → logprob: -9.12607479095459
    4. ')' → logprob: -10.12607479095459
    5. 'for' → logprob: -12.62607479095459
    6. ' for' → logprob: -12.62607479095459
    7. ')]' → logprob: -13.25107479095459
    8. ' ()' → logprob: -13.37607479095459
    9. '()
' → logprob: -14.12607479095459
    10. ']' → logprob: -14.50107479095459

Token 315: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3412788510322571
    2. 'for' → logprob: -1.8412787914276123
    3. '()' → logprob: -2.0912787914276123
    4. ')' → logprob: -4.966279029846191
    5. '	for' → logprob: -11.216279029846191
    6. ']' → logprob: -12.216279029846191
    7. '   ' → logprob: -13.216279029846191
    8. ' ' → logprob: -13.216279029846191
    9. '())' → logprob: -13.591279029846191
    10. '```' → logprob: -14.091279029846191

Token 316: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0003900391166098416
    2. '_i' → logprob: -8.87539005279541
    3. '_range' → logprob: -9.25039005279541
    4. '_n' → logprob: -9.37539005279541
    5. ' _' → logprob: -10.87539005279541
    6. ' range' → logprob: -11.12539005279541
    7. ' in' → logprob: -11.50039005279541
    8. '_in' → logprob: -11.62539005279541
    9. '_j' → logprob: -11.87539005279541
    10. 'i' → logprob: -12.87539005279541

Token 317: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05338676646351814
    2. 'in' → logprob: -3.053386688232422
    3. ' range' → logprob: -6.053386688232422
    4. ' in' → logprob: -6.053386688232422
    5. 'n' → logprob: -9.428386688232422
    6. '(range' → logprob: -12.928386688232422
    7. '	range' → logprob: -13.928386688232422
    8. ')' → logprob: -14.178386688232422
    9. '```' → logprob: -14.553386688232422
    10. ']' → logprob: -14.678386688232422

Token 318: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0206720617134124e-05
    2. ' range' → logprob: -11.50001049041748
    3. '(range' → logprob: -18.000009536743164
    4. 'n' → logprob: -18.625009536743164
    5. '	range' → logprob: -20.125009536743164
    6. '
' → logprob: -20.875009536743164
    7. '.range' → logprob: -21.250009536743164
    8. ')' → logprob: -21.750009536743164
    9. '```' → logprob: -22.125009536743164
    10. '[' → logprob: -22.125009536743164

Token 319: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.20142677426338196
    2. 'n' → logprob: -1.7014267444610596
    3. ' n' → logprob: -12.07642650604248
    4. '(' → logprob: -12.70142650604248
    5. '_n' → logprob: -13.07642650604248
    6. ')n' → logprob: -13.82642650604248
    7. '	n' → logprob: -13.95142650604248
    8. '<n' → logprob: -14.95142650604248
    9. '[n' → logprob: -15.45142650604248
    10. ',n' → logprob: -15.70142650604248

Token 320: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12799076735973358
    2. ')' → logprob: -2.75299072265625
    3. ')]' → logprob: -2.87799072265625
    4. '])' → logprob: -9.25299072265625
    5. ' ]' → logprob: -10.25299072265625
    6. ')])' → logprob: -12.12799072265625
    7. '   ' → logprob: -12.37799072265625
    8. '()]' → logprob: -12.62799072265625
    9. ' )' → logprob: -12.62799072265625
    10. ']
' → logprob: -13.50299072265625

Token 321: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20185726881027222
    2. 'print' → logprob: -1.701857328414917
    3. '```' → logprob: -8.451857566833496
    4. '<|end|>' → logprob: -8.951857566833496
    5. ' print' → logprob: -9.951857566833496
    6. 'result' → logprob: -10.951857566833496
    7. '
' → logprob: -11.326857566833496
    8. '    
' → logprob: -11.451857566833496
    9. 'output' → logprob: -12.326857566833496
    10. '``' → logprob: -13.076857566833496

Token 322: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.246537173457909e-06
    2. 'result' → logprob: -13.500003814697266
    3. '   ' → logprob: -13.875003814697266
    4. 'ans' → logprob: -13.875003814697266
    5. 'res' → logprob: -14.375003814697266
    6. ' print' → logprob: -15.375003814697266
    7. 'answer' → logprob: -16.125003814697266
    8. 'r' → logprob: -16.750003814697266
    9. '    
' → logprob: -18.375003814697266
    10. 'pr' → logprob: -18.750003814697266

Token 323: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -9.13388703338569e-06
    2. '(' → logprob: -11.875009536743164
    3. 'solve' → logprob: -13.250009536743164
    4. '(f' → logprob: -16.500009536743164
    5. '(sol' → logprob: -16.500009536743164
    6. '((' → logprob: -17.000009536743164
    7. '(max' → logprob: -17.500009536743164
    8. '(
' → logprob: -17.625009536743164
    9. '(solution' → logprob: -17.750009536743164
    10. ' (' → logprob: -18.125009536743164

Token 324: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -3.128163257315464e-07
    2. 'ove' → logprob: -16.375
    3. 'ol' → logprob: -16.625
    4. 'solve' → logprob: -17.125
    5. 'olv' → logprob: -17.625
    6. '(' → logprob: -18.5
    7. 'OLVE' → logprob: -18.75
    8. 'olver' → logprob: -18.875
    9. 'erve' → logprob: -19.75
    10. 'olved' → logprob: -20.75

Token 325: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -9.014684110297821e-06
    2. '(' → logprob: -12.875008583068848
    3. ')m' → logprob: -13.125008583068848
    4. ')' → logprob: -13.625008583068848
    5. 'm' → logprob: -13.750008583068848
    6. ' (' → logprob: -14.250008583068848
    7. ')(' → logprob: -14.375008583068848
    8. ',m' → logprob: -14.750008583068848
    9. '(len' → logprob: -15.250008583068848
    10. '(M' → logprob: -15.500008583068848

Token 326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12694522738456726
    2. ',n' → logprob: -2.1269452571868896
    3. ' ,' → logprob: -11.126945495605469
    4. 'n' → logprob: -13.626945495605469
    5. '(objects' → logprob: -14.376945495605469
    6. 'objects' → logprob: -15.501945495605469
    7. ',m' → logprob: -16.12694549560547
    8. ',obj' → logprob: -16.25194549560547
    9. ',len' → logprob: -16.50194549560547
    10. ',
' → logprob: -16.50194549560547

Token 327: 'objects' (ID: 40473)
  Prédit: 'objects'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'objects' → logprob: -0.001506409258581698
    2. ' objects' → logprob: -6.501506328582764
    3. '(objects' → logprob: -12.626506805419922
    4. '.objects' → logprob: -14.501506805419922
    5. 'object' → logprob: -15.626506805419922
    6. '[' → logprob: -16.126506805419922
    7. '   ' → logprob: -17.001506805419922
    8. ')' → logprob: -17.626506805419922
    9. ' ' → logprob: -18.626506805419922
    10. '_objects' → logprob: -18.751506805419922

Token 328: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0031840058509260416
    2. ')' → logprob: -5.753183841705322
    3. '()))' → logprob: -12.37818431854248
    4. ')))' → logprob: -13.87818431854248
    5. ' ))' → logprob: -14.50318431854248
    6. '))
' → logprob: -15.00318431854248
    7. '())' → logprob: -15.37818431854248
    8. '()' → logprob: -16.378183364868164
    9. '(' → logprob: -17.253183364868164
    10. '),' → logprob: -17.628183364868164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 326
Tokens correctement prédits (1ère position, stricte): 154
Tokens correctement prédits (1ère position, avec adaptation): 162
Tokens correctement prédits (top 10): 279
Précision stricte (1ère position): 47.24%
Précision adaptée (1ère position): 49.69%
Précision (top 10): 85.58%
================================================================================
