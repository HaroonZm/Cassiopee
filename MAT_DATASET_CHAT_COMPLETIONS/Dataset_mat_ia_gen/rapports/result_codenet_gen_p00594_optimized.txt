================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:16:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

while True:
    n = int(input())
    if n == 0:
        break
    arr = list(map(int, input().split()))
    candidate = None
    count = 0
    for num in arr:
        if count == 0:
            candidate = num
            count = 1
        elif num == candidate:
            count += 1
        else:
            count -= 1
    if candidate is not None and arr.count(candidate) > n // 2:
        print(candidate)
    else:
        print("NO COLOR")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004960254766047001
    2. '.' → logprob: -5.379960060119629
    3. ' (' → logprob: -9.379960060119629
    4. '(
' → logprob: -9.504960060119629
    5. ')' → logprob: -9.879960060119629
    6. '()' → logprob: -10.129960060119629
    7. '('' → logprob: -11.129960060119629
    8. '[' → logprob: -11.129960060119629
    9. ' ' → logprob: -11.754960060119629
    10. '=' → logprob: -11.879960060119629

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.023471642285585403
    2. 'sys' → logprob: -3.7734715938568115
    3. ' input' → logprob: -8.64847183227539
    4. 'input' → logprob: -10.14847183227539
    5. ' ' → logprob: -12.27347183227539
    6. '	sys' → logprob: -12.64847183227539
    7. '=sys' → logprob: -13.14847183227539
    8. '(sys' → logprob: -13.77347183227539
    9. ' system' → logprob: -15.14847183227539
    10. ' lambda' → logprob: -15.77347183227539

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002038083504885435
    2. ' .' → logprob: -7.00203800201416
    3. '.stdin' → logprob: -7.75203800201416
    4. '.import' → logprob: -7.87703800201416
    5. '.readline' → logprob: -9.50203800201416
    6. '.
' → logprob: -9.62703800201416
    7. '.argv' → logprob: -10.25203800201416
    8. '.input' → logprob: -10.37703800201416
    9. '.exit' → logprob: -11.50203800201416
    10. '.stdout' → logprob: -11.50203800201416

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.3237557113170624
    2. '.' → logprob: -1.3237557411193848
    3. '.read' → logprob: -4.573755741119385
    4. '.readlines' → logprob: -9.698755264282227
    5. '```' → logprob: -10.823755264282227
    6. '.Read' → logprob: -11.448755264282227
    7. 'read' → logprob: -12.323755264282227
    8. '().' → logprob: -12.948755264282227
    9. ' .' → logprob: -13.073755264282227
    10. '.write' → logprob: -13.198755264282227

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12196718156337738
    2. '(' → logprob: -2.371967077255249
    3. '()
' → logprob: -4.621967315673828
    4. '(
' → logprob: -5.621967315673828
    5. '().' → logprob: -5.746967315673828
    6. '
' → logprob: -5.746967315673828
    7. '()\' → logprob: -7.746967315673828
    8. '\n' → logprob: -7.871967315673828
    9. '()

' → logprob: -8.496967315673828
    10. '\' → logprob: -8.871967315673828

Token 9: 'while' (ID: 7032)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2530626952648163
    2. '(' → logprob: -1.5030627250671387
    3. '().' → logprob: -7.878062725067139
    4. '()
' → logprob: -8.25306224822998
    5. '(
' → logprob: -9.00306224822998
    6. '()

' → logprob: -9.62806224822998
    7. '()\' → logprob: -10.25306224822998
    8. ')' → logprob: -10.37806224822998
    9. 'def' → logprob: -10.37806224822998
    10. '#' → logprob: -10.37806224822998

Token 10: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0009533828706480563
    2. ' True' → logprob: -7.375953197479248
    3. '  ' → logprob: -8.125953674316406
    4. ' (' → logprob: -11.875953674316406
    5. ' i' → logprob: -12.250953674316406
    6. ' )' → logprob: -12.250953674316406
    7. ' "' → logprob: -12.875953674316406
    8. ' not' → logprob: -13.625953674316406
    9. ' a' → logprob: -14.000953674316406
    10. '(' → logprob: -14.125953674316406

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017134972149506211
    2. '():' → logprob: -6.876713275909424
    3. ' :' → logprob: -7.376713275909424
    4. ':**' → logprob: -10.876713752746582
    5. '):' → logprob: -11.376713752746582
    6. ':
' → logprob: -12.501713752746582
    7. '(:' → logprob: -12.626713752746582
    8. ' ():' → logprob: -12.626713752746582
    9. ':return' → logprob: -12.876713752746582
    10. '   ' → logprob: -13.251713752746582

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02242005430161953
    2. '    
' → logprob: -4.7724199295043945
    3. '(' → logprob: -5.1474199295043945
    4. ':' → logprob: -6.1474199295043945
    5. '    ' → logprob: -6.5224199295043945
    6. ' ' → logprob: -7.2724199295043945
    7. 'input' → logprob: -7.3974199295043945
    8. '  
' → logprob: -7.7724199295043945
    9. '():' → logprob: -7.7724199295043945
    10. ' (' → logprob: -8.272419929504395

Token 13: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.1608375608921051
    2. 'line' → logprob: -2.2858376502990723
    3. '   ' → logprob: -3.9108376502990723
    4. 'data' → logprob: -3.9108376502990723
    5. ' data' → logprob: -5.785837650299072
    6. 'user' → logprob: -6.410837650299072
    7. ' user' → logprob: -7.160837650299072
    8. 'text' → logprob: -7.785837650299072
    9. ' inp' → logprob: -8.285837173461914
    10. 's' → logprob: -8.785837173461914

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06983916461467743
    2. '=' → logprob: -3.1948392391204834
    3. ' ==' → logprob: -4.194839000701904
    4. ' ' → logprob: -4.569839000701904
    5. ' >' → logprob: -7.694839000701904
    6. '==' → logprob: -9.069839477539062
    7. '>' → logprob: -9.069839477539062
    8. '  ' → logprob: -9.694839477539062
    9. '.' → logprob: -10.069839477539062
    10. ' :=' → logprob: -10.069839477539062

Token 15: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6114721298217773
    2. 'input' → logprob: -1.3614721298217773
    3. ' int' → logprob: -2.2364721298217773
    4. 'int' → logprob: -2.3614721298217773
    5. '=input' → logprob: -10.986472129821777
    6. '=int' → logprob: -11.236472129821777
    7. ' ' → logprob: -12.111472129821777
    8. '   ' → logprob: -12.861472129821777
    9. '(input' → logprob: -13.236472129821777
    10. 'n' → logprob: -13.736472129821777

Token 16: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.005256764590740204
    2. '(' → logprob: -5.255256652832031
    3. 'input' → logprob: -10.755256652832031
    4. '(in' → logprob: -14.380256652832031
    5. ' (' → logprob: -14.880256652832031
    6. '(
' → logprob: -15.130256652832031
    7. '()' → logprob: -15.505256652832031
    8. ' input' → logprob: -16.38025665283203
    9. '=input' → logprob: -17.00525665283203
    10. ',input' → logprob: -17.88025665283203

Token 17: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0332389697432518
    2. '()))' → logprob: -3.9082388877868652
    3. ')' → logprob: -4.658238887786865
    4. '()' → logprob: -6.033238887786865
    5. '))' → logprob: -7.283238887786865
    6. '(' → logprob: -11.033239364624023
    7. '().' → logprob: -11.283239364624023
    8. ' ())' → logprob: -11.408239364624023
    9. '())
' → logprob: -12.908239364624023
    10. '()),' → logprob: -13.908239364624023

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7269190549850464
    2. '\n' → logprob: -2.101919174194336
    3. '    ' → logprob: -2.351919174194336
    4. ' ' → logprob: -2.351919174194336
    5. ' if' → logprob: -2.726919174194336
    6. '<|end|>' → logprob: -2.851919174194336
    7. '  ' → logprob: -4.101919174194336
    8. '    
' → logprob: -4.226919174194336
    9. '\r' → logprob: -4.226919174194336
    10. ' 
' → logprob: -4.851919174194336

Token 19: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5086913704872131
    2. '<|end|>' → logprob: -2.0086913108825684
    3. ' if' → logprob: -2.5086913108825684
    4. '    ' → logprob: -2.8836913108825684
    5. '   ' → logprob: -3.0086913108825684
    6. '  ' → logprob: -3.8836913108825684
    7. 'if' (adapté à ' if') → logprob: -4.258691310882568
    8. '\n' → logprob: -4.758691310882568
    9. ')' → logprob: -4.883691310882568
    10. ':' → logprob: -5.508691310882568

Token 20: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.03832948952913284
    2. ' not' → logprob: -3.288329601287842
    3. ' ' → logprob: -8.538329124450684
    4. 'n' → logprob: -9.413329124450684
    5. 'not' → logprob: -11.663329124450684
    6. ' ' → logprob: -13.413329124450684
    7. '	n' → logprob: -14.913329124450684
    8. ' n't' → logprob: -17.163330078125
    9. '  ' → logprob: -17.413330078125
    10. ' н' → logprob: -17.538330078125

Token 21: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01430137362331152
    2. '==' → logprob: -4.264301300048828
    3. ' <=' → logprob: -9.264301300048828
    4. ' <' → logprob: -11.389301300048828
    5. ')' → logprob: -11.639301300048828
    6. '<=' → logprob: -12.389301300048828
    7. '   ' → logprob: -12.389301300048828
    8. ' ' → logprob: -12.514301300048828
    9. ')==' → logprob: -12.764301300048828
    10. '=' → logprob: -12.889301300048828

Token 22: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009756323881447315
    2. '0' → logprob: -4.634756088256836
    3. ' ' → logprob: -15.259756088256836
    4. '  ' → logprob: -16.259756088256836
    5. '   ' → logprob: -17.634756088256836
    6. '    ' → logprob: -18.134756088256836
    7. ' EOF' → logprob: -18.509756088256836
    8. '	' → logprob: -19.009756088256836
    9. ')' → logprob: -19.197256088256836
    10. '=' → logprob: -19.322256088256836

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007101670489646494
    2. ' ' → logprob: -7.2507100105285645
    3. '-' → logprob: -16.750709533691406
    4. '```' → logprob: -17.000709533691406
    5. '   ' → logprob: -17.375709533691406
    6. '  ' → logprob: -17.563209533691406
    7. '1' → logprob: -17.750709533691406
    8. ''' → logprob: -18.375709533691406
    9. ')' → logprob: -18.438209533691406
    10. '    ' → logprob: -18.500709533691406

Token 24: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013274075172375888
    2. ':
' → logprob: -9.00013256072998
    3. '   ' → logprob: -12.12513256072998
    4. ' :' → logprob: -13.12513256072998
    5. ':return' → logprob: -14.37513256072998
    6. ' break' → logprob: -15.00013256072998
    7. '	break' → logprob: -15.12513256072998
    8. '       ' → logprob: -15.37513256072998
    9. '.' → logprob: -16.625133514404297
    10. '):' → logprob: -16.875133514404297

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004481885116547346
    2. '   ' → logprob: -7.875448226928711
    3. ' break' → logprob: -10.375448226928711
    4. '    ' → logprob: -11.625448226928711
    5. '	break' → logprob: -11.750448226928711
    6. '      ' → logprob: -12.250448226928711
    7. '     ' → logprob: -12.500448226928711
    8. '<|end|>' → logprob: -12.500448226928711
    9. '\n' → logprob: -12.875448226928711
    10. '```' → logprob: -14.375448226928711

Token 26: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10444243252277374
    2. ' break' → logprob: -2.3544423580169678
    3. '   ' → logprob: -5.979442596435547
    4. 'break' (adapté à ' break') → logprob: -6.854442596435547
    5. '	break' → logprob: -7.729442596435547
    6. '\n' → logprob: -9.104442596435547
    7. '    ' → logprob: -10.354442596435547
    8. '        
' → logprob: -11.729442596435547
    9. '      ' → logprob: -11.729442596435547
    10. '     ' → logprob: -11.854442596435547

Token 27: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.086983822286129
    2. '\n' → logprob: -3.0869839191436768
    3. '    
' → logprob: -4.336983680725098
    4. ':' → logprob: -5.086983680725098
    5. '\' → logprob: -5.211983680725098
    6. '<|end|>' → logprob: -5.711983680725098
    7. '  ' → logprob: -6.211983680725098
    8. '    ' → logprob: -6.336983680725098
    9. ' ' → logprob: -6.836983680725098
    10. ')' → logprob: -6.836983680725098

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013926892541348934
    2. '    
' → logprob: -4.388926982879639
    3. '    ' → logprob: -7.138926982879639
    4. '  ' → logprob: -9.01392650604248
    5. '<|end|>' → logprob: -9.13892650604248
    6. ' ' → logprob: -9.63892650604248
    7. ')' → logprob: -9.76392650604248
    8. 'print' → logprob: -10.01392650604248
    9. '  
' → logprob: -10.26392650604248
    10. '\n' → logprob: -10.26392650604248

Token 29: ' arr' (ID: 1724)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.522845983505249
    2. ' ' → logprob: -1.022845983505249
    3. '    ' → logprob: -4.397846221923828
    4. '<|end|>' → logprob: -4.522846221923828
    5. '[' → logprob: -5.022846221923828
    6. ')' → logprob: -5.147846221923828
    7. 'n' → logprob: -6.147846221923828
    8. '  ' → logprob: -6.147846221923828
    9. '    
' → logprob: -6.772846221923828
    10. 'print' → logprob: -7.022846221923828

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5871678590774536
    2. '[' → logprob: -0.9621678590774536
    3. '=' → logprob: -3.462167739868164
    4. '.' → logprob: -4.212167739868164
    5. '.append' → logprob: -4.462167739868164
    6. '[:]' → logprob: -5.712167739868164
    7. '[]' → logprob: -8.712167739868164
    8. ')' → logprob: -9.087167739868164
    9. '[:' → logprob: -9.087167739868164
    10. '=[]' → logprob: -9.337167739868164

Token 31: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.33748146891593933
    2. ' []' → logprob: -2.4624814987182617
    3. ' [' → logprob: -2.5874814987182617
    4. 'list' → logprob: -2.7124814987182617
    5. '[]' → logprob: -3.5874814987182617
    6. '[' → logprob: -3.8374814987182617
    7. '[list' → logprob: -4.587481498718262
    8. '[input' → logprob: -9.712481498718262
    9. '[int' → logprob: -9.962481498718262
    10. '[:]' → logprob: -10.837481498718262

Token 32: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1817684769630432
    2. '(map' → logprob: -1.8067684173583984
    3. '(range' → logprob: -6.556768417358398
    4. '()' → logprob: -7.931768417358398
    5. '(input' → logprob: -9.181768417358398
    6. '(int' → logprob: -9.306768417358398
    7. '(arr' → logprob: -10.681768417358398
    8. '(
' → logprob: -12.556768417358398
    9. '(array' → logprob: -12.931768417358398
    10. '(filter' → logprob: -12.931768417358398

Token 33: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005342024378478527
    2. '(' → logprob: -5.25534200668335
    3. 'int' → logprob: -9.380342483520508
    4. '(str' → logprob: -12.255342483520508
    5. ')' → logprob: -12.630342483520508
    6. '(input' → logprob: -12.630342483520508
    7. '(lambda' → logprob: -12.755342483520508
    8. '<int' → logprob: -12.880342483520508
    9. '(
' → logprob: -13.380342483520508
    10. ',int' → logprob: -13.755342483520508

Token 34: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.013597669079899788
    2. '(' → logprob: -4.51359748840332
    3. ',input' → logprob: -6.01359748840332
    4. ')' → logprob: -10.26359748840332
    5. 'input' → logprob: -10.51359748840332
    6. ',' → logprob: -10.76359748840332
    7. '(
' → logprob: -12.26359748840332
    8. '=input' → logprob: -12.38859748840332
    9. ' input' → logprob: -12.88859748840332
    10. ' (' → logprob: -12.88859748840332

Token 35: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06196914613246918
    2. ' input' → logprob: -2.811969041824341
    3. '(input' → logprob: -14.311968803405762
    4. ',input' → logprob: -14.936968803405762
    5. '	input' → logprob: -15.686968803405762
    6. '=input' → logprob: -16.311969757080078
    7. '[input' → logprob: -16.686969757080078
    8. ' ' → logprob: -16.811969757080078
    9. '   ' → logprob: -17.186969757080078
    10. '<input' → logprob: -17.311969757080078

Token 36: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.7432603272027336e-06
    2. '()' → logprob: -13.500001907348633
    3. ' ().' → logprob: -15.375001907348633
    4. '()))' → logprob: -17.375001907348633
    5. '())' → logprob: -18.000001907348633
    6. '(' → logprob: -18.125001907348633
    7. '())))' → logprob: -19.375001907348633
    8. '()));' → logprob: -19.500001907348633
    9. ')' → logprob: -19.750001907348633
    10. '()
' → logprob: -20.250001907348633

Token 37: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.1019536703824997
    2. 'strip' → logprob: -2.3519537448883057
    3. 'rstrip' → logprob: -6.351953506469727
    4. ' split' → logprob: -13.476953506469727
    5. '(split' → logprob: -14.976953506469727
    6. ' strip' → logprob: -15.726953506469727
    7. 'spl' → logprob: -15.851953506469727
    8. 'rs' → logprob: -16.351953506469727
    9. 'sp' → logprob: -16.976953506469727
    10. 's' → logprob: -17.476953506469727

Token 38: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.1195157989859581
    2. '))' → logprob: -2.494515895843506
    3. '())' → logprob: -3.744515895843506
    4. '()' → logprob: -5.494515895843506
    5. ')' → logprob: -6.369515895843506
    6. '(' → logprob: -7.494515895843506
    7. '()))
' → logprob: -9.744515419006348
    8. '())))' → logprob: -11.994515419006348
    9. ')))' → logprob: -12.369515419006348
    10. '   ' → logprob: -12.744515419006348

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3196956217288971
    2. 'arr' → logprob: -1.9446955919265747
    3. ' arr' → logprob: -2.6946957111358643
    4. ')' → logprob: -4.319695472717285
    5. ' if' → logprob: -4.694695472717285
    6. '    ' → logprob: -5.069695472717285
    7. '    
' → logprob: -5.194695472717285
    8. ' ' → logprob: -5.444695472717285
    9. 'if' → logprob: -5.444695472717285
    10. ' 
' → logprob: -6.069695472717285

Token 40: ' candidate' (ID: 17098)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.18520815670490265
    2. 'dp' → logprob: -2.9352080821990967
    3. '   ' → logprob: -3.4352080821990967
    4. ' arr' → logprob: -4.185208320617676
    5. 'count' → logprob: -4.810208320617676
    6. 'if' → logprob: -4.810208320617676
    7. 'result' → logprob: -5.310208320617676
    8. 'diff' → logprob: -5.435208320617676
    9. 'stack' → logprob: -5.810208320617676
    10. 's' → logprob: -5.935208320617676

Token 41: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.019888371229171753
    2. ' =' → logprob: -4.769888401031494
    3. '=' → logprob: -5.144888401031494
    4. '_' → logprob: -6.144888401031494
    5. '_s' → logprob: -6.644888401031494
    6. '_count' → logprob: -7.519888401031494
    7. '(' → logprob: -7.769888401031494
    8. '_counts' → logprob: -8.144887924194336
    9. '1' → logprob: -8.269887924194336
    10. '_sum' → logprob: -9.519887924194336

Token 42: ' None' (ID: 4662)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.5012749433517456
    2. '[]' → logprob: -2.001275062561035
    3. ' ' → logprob: -2.376275062561035
    4. '0' → logprob: -2.876275062561035
    5. 'arr' → logprob: -3.376275062561035
    6. ' [' → logprob: -3.751275062561035
    7. ' None' → logprob: -4.126275062561035
    8. '[' → logprob: -5.001275062561035
    9. ' arr' → logprob: -5.001275062561035
    10. ' set' → logprob: -5.501275062561035

Token 43: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0563790537416935
    2. '    
' → logprob: -3.6813790798187256
    3. ' for' → logprob: -5.0563788414001465
    4. '    ' → logprob: -5.3063788414001465
    5. '<|end|>' → logprob: -5.3063788414001465
    6. ',' → logprob: -5.4313788414001465
    7. 'for' → logprob: -5.5563788414001465
    8. '     
' → logprob: -6.6813788414001465
    9. '   
' → logprob: -7.3063788414001465
    10. ' 
' → logprob: -7.4313788414001465

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0955943837761879
    2. '    
' → logprob: -3.0955944061279297
    3. 'for' → logprob: -4.59559440612793
    4. ' for' → logprob: -4.59559440612793
    5. ' 
' → logprob: -5.09559440612793
    6. ' ' → logprob: -5.22059440612793
    7. '    ' → logprob: -5.72059440612793
    8. '<|end|>' → logprob: -5.97059440612793
    9. '   
' → logprob: -6.22059440612793
    10. '  ' → logprob: -6.34559440612793

Token 45: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7185867428779602
    2. 'count' (adapté à ' count') → logprob: -1.5935866832733154
    3. 'for' → logprob: -1.9685866832733154
    4. ' for' → logprob: -2.2185866832733154
    5. 'counts' → logprob: -4.2185869216918945
    6. ' count' → logprob: -4.3435869216918945
    7. 'max' → logprob: -4.9685869216918945
    8. ' counts' → logprob: -5.5935869216918945
    9. 'counter' → logprob: -5.8435869216918945
    10. ' max' → logprob: -5.9685869216918945

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03636239469051361
    2. '=' → logprob: -3.536362409591675
    3. ' ' → logprob: -5.036362171173096
    4. '  ' → logprob: -11.161362648010254
    5. ' +=' → logprob: -11.286362648010254
    6. '<|end|>' → logprob: -11.286362648010254
    7. '   ' → logprob: -11.536362648010254
    8. '    ' → logprob: -11.661362648010254
    9. '<|end|>' → logprob: -12.286362648010254
    10. ')' → logprob: -12.536362648010254

Token 47: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31329473853111267
    2. ' ' → logprob: -1.313294768333435
    3. '1' → logprob: -10.438294410705566
    4. '  ' → logprob: -13.313294410705566
    5. '<|end|>' → logprob: -14.188294410705566
    6. ' ' → logprob: -14.625794410705566
    7. '   ' → logprob: -15.688294410705566
    8. '۰' → logprob: -15.750794410705566
    9. '```' → logprob: -15.875794410705566
    10. '    ' → logprob: -16.500795364379883

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001044243574142456
    2. '1' → logprob: -6.876044273376465
    3. ' ' → logprob: -11.501044273376465
    4. '```' → logprob: -14.501044273376465
    5. '-' → logprob: -15.688544273376465
    6. '   ' → logprob: -16.25104331970215
    7. '۰' → logprob: -16.31354331970215
    8. '(' → logprob: -16.37604331970215
    9. 'None' → logprob: -16.43854331970215
    10. '{}' → logprob: -16.62604331970215

Token 49: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12650014460086823
    2. ' 
' → logprob: -3.001500129699707
    3. ' for' → logprob: -4.001500129699707
    4. '
' → logprob: -4.126500129699707
    5. '  
' → logprob: -4.501500129699707
    6. '    
' → logprob: -4.626500129699707
    7. '   
' → logprob: -5.376500129699707
    8. 'for' → logprob: -5.876500129699707
    9. '  ' → logprob: -6.251500129699707
    10. ' ' → logprob: -6.251500129699707

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03575272113084793
    2. ' for' → logprob: -3.910752773284912
    3. 'for' → logprob: -4.535752773284912
    4. '    
' → logprob: -6.410752773284912
    5. ' 
' → logprob: -6.660752773284912
    6. '  
' → logprob: -7.910752773284912
    7. '
' → logprob: -8.160752296447754
    8. '   
' → logprob: -8.285752296447754
    9. '  ' → logprob: -8.410752296447754
    10. ' ' → logprob: -8.785752296447754

Token 51: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.014337314292788506
    2. '   ' → logprob: -4.639337539672852
    3. ' for' → logprob: -5.389337539672852
    4. '```' → logprob: -13.139337539672852
    5. ' ' → logprob: -13.389337539672852
    6. '  ' → logprob: -13.889337539672852
    7. '	for' → logprob: -14.514337539672852
    8. '    
' → logprob: -15.264337539672852
    9. '    ' → logprob: -15.639337539672852
    10. 'i' → logprob: -15.764337539672852

Token 52: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.5138004422187805
    2. 'num' → logprob: -1.1388003826141357
    3. ' x' → logprob: -3.0138003826141357
    4. 'x' → logprob: -3.6388003826141357
    5. ' i' → logprob: -5.638800621032715
    6. 'i' → logprob: -6.513800621032715
    7. 'v' → logprob: -8.388800621032715
    8. ' number' → logprob: -8.763800621032715
    9. ' ' → logprob: -8.888800621032715
    10. ' v' → logprob: -9.013800621032715

Token 53: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006061278749257326
    2. 'in' → logprob: -5.13106107711792
    3. '   ' → logprob: -10.006061553955078
    4. 's' → logprob: -10.381061553955078
    5. ' ' → logprob: -10.631061553955078
    6. '  ' → logprob: -11.256061553955078
    7. '    ' → logprob: -12.256061553955078
    8. '	in' → logprob: -12.506061553955078
    9. ',' → logprob: -13.506061553955078
    10. ':' → logprob: -13.631061553955078

Token 54: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.31326553225517273
    2. ' arr' → logprob: -1.3132655620574951
    3. '	arr' → logprob: -12.938265800476074
    4. ' ' → logprob: -14.188265800476074
    5. '_arr' → logprob: -15.438265800476074
    6. '(arr' → logprob: -15.813265800476074
    7. '  ' → logprob: -15.813265800476074
    8. '   ' → logprob: -16.563264846801758
    9. '$arr' → logprob: -16.688264846801758
    10. '[arr' → logprob: -16.813264846801758

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007775885751470923
    2. '   ' → logprob: -7.875777721405029
    3. '       ' → logprob: -8.625777244567871
    4. ':
' → logprob: -9.000777244567871
    5. ' :' → logprob: -10.125777244567871
    6. '<|end|>' → logprob: -10.750777244567871
    7. '    ' → logprob: -11.250777244567871
    8. '):' → logprob: -12.125777244567871
    9. '=' → logprob: -12.625777244567871
    10. ':**' → logprob: -12.875777244567871

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38232868909835815
    2. '    ' → logprob: -1.382328748703003
    3. ' ' → logprob: -3.257328748703003
    4. '<|end|>' → logprob: -4.132328510284424
    5. '   ' → logprob: -5.382328510284424
    6. '        ' → logprob: -5.382328510284424
    7. '     ' → logprob: -7.382328510284424
    8. '        
' → logprob: -7.382328510284424
    9. '      ' → logprob: -7.882328510284424
    10. ' if' → logprob: -8.257328987121582

Token 57: ' if' (ID: 538)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.8563459515571594
    2. ' ' → logprob: -1.1063458919525146
    3. '       ' → logprob: -1.7313458919525146
    4. ' if' → logprob: -3.4813458919525146
    5. '   ' → logprob: -3.7313458919525146
    6. '        ' → logprob: -5.231346130371094
    7. '<|end|>' → logprob: -6.106346130371094
    8. 'if' (adapté à ' if') → logprob: -6.356346130371094
    9. ' 
' → logprob: -6.731346130371094
    10. '     ' → logprob: -7.481346130371094

Token 58: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.633808434009552
    2. ' candidate' → logprob: -1.2588083744049072
    3. 'count' → logprob: -2.1338083744049072
    4. 'candidate' → logprob: -2.7588083744049072
    5. ' num' → logprob: -6.383808612823486
    6. 'num' → logprob: -6.633808612823486
    7. ' ' → logprob: -7.633808612823486
    8. '	count' → logprob: -9.883808135986328
    9. '   ' → logprob: -10.508808135986328
    10. '(candidate' → logprob: -10.633808135986328

Token 59: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10036830604076385
    2. '==' → logprob: -2.3503682613372803
    3. ' ' → logprob: -8.85036849975586
    4. '===' → logprob: -12.10036849975586
    5. '  ' → logprob: -12.47536849975586
    6. ' ' → logprob: -13.72536849975586
    7. '0' → logprob: -13.85036849975586
    8. '=' → logprob: -13.85036849975586
    9. ' ===' → logprob: -13.85036849975586
    10. ')==' → logprob: -13.85036849975586

Token 60: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5759395956993103
    2. '0' → logprob: -0.8259395956993103
    3. ' ' → logprob: -16.075939178466797
    4. '۰' → logprob: -17.200939178466797
    5. '  ' → logprob: -18.450939178466797
    6. '   ' → logprob: -19.200939178466797
    7. '_' → logprob: -19.325939178466797
    8. '٠' → logprob: -19.825939178466797
    9. '```' → logprob: -20.138439178466797
    10. '000' → logprob: -20.200939178466797

Token 61: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01416350994259119
    2. ' ' → logprob: -4.264163494110107
    3. '۰' → logprob: -17.514163970947266
    4. '  ' → logprob: -17.764163970947266
    5. '   ' → logprob: -17.764163970947266
    6. ' ' → logprob: -18.014163970947266
    7. '٠' → logprob: -19.326663970947266
    8. '000' → logprob: -19.576663970947266
    9. '00' → logprob: -19.826663970947266
    10. '०' → logprob: -19.826663970947266

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07886775583028793
    2. '       ' → logprob: -2.8288676738739014
    3. ':
' → logprob: -5.2038679122924805
    4. '           ' → logprob: -5.2038679122924805
    5. ' or' → logprob: -5.9538679122924805
    6. '<|end|>' → logprob: -6.0788679122924805
    7. '<|end|>' → logprob: -8.57886791229248
    8. '=' → logprob: -8.70386791229248
    9. '   ' → logprob: -8.82886791229248
    10. ',' → logprob: -9.57886791229248

Token 63: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4388614892959595
    2. '       ' → logprob: -1.0638614892959595
    3. 'candidate' → logprob: -5.43886137008667
    4. ' candidate' → logprob: -5.68886137008667
    5. 'count' → logprob: -7.68886137008667
    6. '        ' → logprob: -7.81386137008667
    7. ':' → logprob: -8.313861846923828
    8. '   ' → logprob: -8.438861846923828
    9. ' or' → logprob: -8.813861846923828
    10. '               ' → logprob: -8.813861846923828

Token 64: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' (adapté à ' candidate') → logprob: -0.09069947898387909
    2. ' candidate' → logprob: -2.5906994342803955
    3. '           ' → logprob: -4.465699672698975
    4. '               ' → logprob: -9.090699195861816
    5. '   ' → logprob: -9.340699195861816
    6. '       ' → logprob: -10.715699195861816
    7. '_candidate' → logprob: -12.340699195861816
    8. ' ' → logprob: -12.465699195861816
    9. '(candidate' → logprob: -12.715699195861816
    10. ' candidat' → logprob: -13.465699195861816

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029752805829048157
    2. '=' → logprob: -3.529752731323242
    3. ' ' → logprob: -13.029752731323242
    4. ',' → logprob: -17.279752731323242
    5. '    ' → logprob: -17.779752731323242
    6. '＝' → logprob: -18.029752731323242
    7. ' =
' → logprob: -18.154752731323242
    8. ' ' → logprob: -18.404752731323242
    9. '=user' → logprob: -18.654752731323242
    10. '=num' → logprob: -18.779752731323242

Token 66: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.3868767023086548
    2. 'num' → logprob: -1.1368767023086548
    3. ' ' → logprob: -12.261877059936523
    4. ' ' → logprob: -15.261877059936523
    5. '<num' → logprob: -15.386877059936523
    6. '	num' → logprob: -16.011877059936523
    7. '(num' → logprob: -16.511877059936523
    8. 'n' → logprob: -16.636877059936523
    9. ',num' → logprob: -16.636877059936523
    10. '[num' → logprob: -17.011877059936523

Token 67: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6428516507148743
    2. '       ' → logprob: -0.8928516507148743
    3. '<|end|>' → logprob: -3.5178515911102295
    4. '   ' → logprob: -4.892851829528809
    5. '        
' → logprob: -4.892851829528809
    6. '    
' → logprob: -5.142851829528809
    7. '           ' → logprob: -5.142851829528809
    8. ' 
' → logprob: -5.767851829528809
    9. '  
' → logprob: -6.142851829528809
    10. '<|end|>' → logprob: -7.517851829528809

Token 68: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03152017667889595
    2. '
' → logprob: -4.031520366668701
    3. '           ' → logprob: -4.906520366668701
    4. '   ' → logprob: -6.656520366668701
    5. '        
' → logprob: -6.656520366668701
    6. '<|end|>' → logprob: -6.656520366668701
    7. 'count' → logprob: -7.281520366668701
    8. ' 
' → logprob: -7.531520366668701
    9. '    
' → logprob: -8.406519889831543
    10. '  
' → logprob: -9.156519889831543

Token 69: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0011734402505680919
    2. ' count' → logprob: -7.001173496246338
    3. '1' → logprob: -8.25117301940918
    4. ' ' → logprob: -14.00117301940918
    5. '   ' → logprob: -16.37617301940918
    6. '	count' → logprob: -19.00117301940918
    7. '  ' → logprob: -19.75117301940918
    8. '       ' → logprob: -19.75117301940918
    9. '           ' → logprob: -20.50117301940918
    10. '    ' → logprob: -20.75117301940918

Token 70: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5736860632896423
    2. ' =' → logprob: -1.573686122894287
    3. '=' → logprob: -1.698686122894287
    4. '+=' → logprob: -3.073686122894287
    5. ' ' → logprob: -9.948685646057129
    6. '+' → logprob: -9.948685646057129
    7. '1' → logprob: -12.823685646057129
    8. '<|end|>' → logprob: -14.323685646057129
    9. '+='' → logprob: -14.573685646057129
    10. ' +' → logprob: -14.823685646057129

Token 71: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013263145228847861
    2. ' ' → logprob: -6.626326084136963
    3. '   ' → logprob: -15.626326560974121
    4. '  ' → logprob: -16.501325607299805
    5. '+' → logprob: -16.876325607299805
    6. ' ' → logprob: -17.876325607299805
    7. '۱' → logprob: -17.938825607299805
    8. '' → logprob: -18.313825607299805
    9. '１' → logprob: -18.688825607299805
    10. '0' → logprob: -18.751325607299805

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '' → logprob: -16.8750057220459
    4. '۱' → logprob: -17.8125057220459
    5. '```' → logprob: -18.0000057220459
    6. '+' → logprob: -18.1250057220459
    7. '   ' → logprob: -18.3750057220459
    8. '  ' → logprob: -18.5625057220459
    9. '१' → logprob: -18.6250057220459
    10. '１' → logprob: -18.7500057220459

Token 73: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.8226746916770935
    2. '       ' → logprob: -1.0726747512817383
    3. ' elif' → logprob: -1.5726747512817383
    4. '   ' → logprob: -5.447674751281738
    5. '	elif' → logprob: -6.197674751281738
    6. ' else' → logprob: -6.572674751281738
    7. '<|end|>' → logprob: -6.822674751281738
    8. '    ' → logprob: -7.322674751281738
    9. ' ' → logprob: -7.572674751281738
    10. 'else' → logprob: -7.697674751281738

Token 74: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014613077975809574
    2. 'elif' → logprob: -4.514613151550293
    3. ' elif' → logprob: -6.389613151550293
    4. '<|end|>' → logprob: -6.514613151550293
    5. '   ' → logprob: -8.639613151550293
    6. '	elif' → logprob: -9.014613151550293
    7. ' else' → logprob: -10.389613151550293
    8. 'else' → logprob: -11.014613151550293
    9. '<|end|>' → logprob: -11.264613151550293
    10. ' ' → logprob: -11.639613151550293

Token 75: ' elif' (ID: 9497)
  Prédit: ' elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.4770643413066864
    2. 'elif' (adapté à ' elif') → logprob: -0.9770643711090088
    3. ' else' → logprob: -6.60206413269043
    4. '	elif' → logprob: -6.85206413269043
    5. '<|end|>' → logprob: -8.72706413269043
    6. 'else' → logprob: -8.85206413269043
    7. '       ' → logprob: -9.10206413269043
    8. '   ' → logprob: -9.72706413269043
    9. ' ' → logprob: -10.22706413269043
    10. '    ' → logprob: -10.35206413269043

Token 76: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.04496530443429947
    2. ' candidate' → logprob: -3.6699652671813965
    3. 'num' → logprob: -4.0449652671813965
    4. 'candidate' → logprob: -7.0449652671813965
    5. ' ' → logprob: -9.294965744018555
    6. '	num' → logprob: -11.919965744018555
    7. ' ' → logprob: -12.169965744018555
    8. '  ' → logprob: -13.544965744018555
    9. ' candidat' → logprob: -13.794965744018555
    10. '   ' → logprob: -13.794965744018555

Token 77: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014278686605393887
    2. '==' → logprob: -4.264278888702393
    3. ' ' → logprob: -9.514278411865234
    4. ' ' → logprob: -10.639278411865234
    5. '=' → logprob: -11.389278411865234
    6. ' =' → logprob: -12.639278411865234
    7. ' !=' → logprob: -13.639278411865234
    8. ')' → logprob: -14.264278411865234
    9. ')==' → logprob: -15.389278411865234
    10. ']==' → logprob: -16.139278411865234

Token 78: ' candidate' (ID: 17098)
  Prédit: ' candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidate' → logprob: -0.2519315779209137
    2. 'candidate' → logprob: -1.5019315481185913
    3. ' candidat' → logprob: -13.376931190490723
    4. 'c' → logprob: -14.251931190490723
    5. ' ' → logprob: -15.876931190490723
    6. ' ' → logprob: -16.50193214416504
    7. ' candidato' → logprob: -16.87693214416504
    8. '(candidate' → logprob: -17.50193214416504
    9. ' candidata' → logprob: -18.37693214416504
    10. 'cand' → logprob: -18.87693214416504

Token 79: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002233640057966113
    2. ':
' → logprob: -6.127233505249023
    3. ' :' → logprob: -10.877233505249023
    4. '<|end|>' → logprob: -11.877233505249023
    5. '       ' → logprob: -12.377233505249023
    6. '   ' → logprob: -12.502233505249023
    7. '+' → logprob: -12.627233505249023
    8. '):' → logprob: -13.127233505249023
    9. ')' → logprob: -13.627233505249023
    10. ' ' → logprob: -13.877233505249023

Token 80: '           ' (ID: 352)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9393181204795837
    2. '           ' → logprob: -1.0643181800842285
    3. ' count' → logprob: -2.1893181800842285
    4. 'count' → logprob: -2.4393181800842285
    5. '       ' → logprob: -3.4393181800842285
    6. '        ' → logprob: -4.4393181800842285
    7. '            ' → logprob: -5.1893181800842285
    8. ' +' → logprob: -5.8143181800842285
    9. '               ' → logprob: -5.9393181800842285
    10. '   ' → logprob: -6.5643181800842285

Token 81: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.5762186646461487
    2. 'count' (adapté à ' count') → logprob: -0.8262186646461487
    3. '+' → logprob: -9.326218605041504
    4. ' ' → logprob: -9.451218605041504
    5. '1' → logprob: -9.701218605041504
    6. '	count' → logprob: -10.951218605041504
    7. ' +' → logprob: -11.826218605041504
    8. '    ' → logprob: -11.826218605041504
    9. '[count' → logprob: -12.326218605041504
    10. '<count' → logprob: -13.201218605041504

Token 82: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.12696851789951324
    2. '+=' → logprob: -2.1269686222076416
    3. '+' → logprob: -10.251968383789062
    4. ' ' → logprob: -13.251968383789062
    5. '<|end|>' → logprob: -13.876968383789062
    6. '=' → logprob: -14.376968383789062
    7. '+='' → logprob: -14.876968383789062
    8. ' +' → logprob: -14.876968383789062
    9. ' =' → logprob: -15.126968383789062
    10. '+="' → logprob: -15.251968383789062

Token 83: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '<|end|>' → logprob: -17.250431060791016
    4. '   ' → logprob: -18.500431060791016
    5. '  ' → logprob: -20.000431060791016
    6. ' ' → logprob: -20.125431060791016
    7. '```' → logprob: -20.750431060791016
    8. '１' → logprob: -21.250431060791016
    9. '۱' → logprob: -21.375431060791016
    10. '<|end|>' → logprob: -21.625431060791016

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '<|end|>' → logprob: -18.625
    4. '１' → logprob: -19.625
    5. '۱' → logprob: -20.0
    6. '```' → logprob: -20.0625
    7. '१' → logprob: -20.125
    8. '   ' → logprob: -20.625
    9. '১' → logprob: -20.6875
    10. '+' → logprob: -21.25

Token 85: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1337500512599945
    2. 'else' → logprob: -2.5087499618530273
    3. ' else' → logprob: -3.1337499618530273
    4. '   ' → logprob: -8.633749961853027
    5. '	else' → logprob: -10.383749961853027
    6. 'elif' → logprob: -10.758749961853027
    7. '<|end|>' → logprob: -11.383749961853027
    8. '```' → logprob: -12.133749961853027
    9. ' elif' → logprob: -13.133749961853027
    10. '      ' → logprob: -13.133749961853027

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010567140765488148
    2. ' else' → logprob: -5.2605671882629395
    3. 'else' → logprob: -5.2605671882629395
    4. '<|end|>' → logprob: -9.510566711425781
    5. '   ' → logprob: -10.635566711425781
    6. 'elif' → logprob: -11.135566711425781
    7. '	else' → logprob: -12.760566711425781
    8. ' elif' → logprob: -12.885566711425781
    9. '```' → logprob: -13.010566711425781
    10. '<|end|>' → logprob: -14.135566711425781

Token 87: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3591253161430359
    2. ' else' → logprob: -1.3591253757476807
    3. '       ' → logprob: -3.1091253757476807
    4. '   ' → logprob: -8.609125137329102
    5. '	else' → logprob: -12.734125137329102
    6. 'elif' → logprob: -13.359125137329102
    7. ' elif' → logprob: -15.859125137329102
    8. '_else' → logprob: -15.984125137329102
    9. '```' → logprob: -16.1091251373291
    10. '    ' → logprob: -16.2341251373291

Token 88: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.093599334359169
    2. ':' → logprob: -2.468599319458008
    3. '-' → logprob: -6.843599319458008
    4. ':
' → logprob: -6.843599319458008
    5. 'count' → logprob: -7.093599319458008
    6. '       ' → logprob: -7.343599319458008
    7. ' count' → logprob: -8.343599319458008
    8. '               ' → logprob: -8.718599319458008
    9. '   ' → logprob: -9.093599319458008
    10. ' ' → logprob: -9.218599319458008

Token 89: '           ' (ID: 352)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.04380413517355919
    2. '           ' → logprob: -3.293804168701172
    3. ' count' → logprob: -5.168804168701172
    4. '       ' → logprob: -10.418804168701172
    5. ' ' → logprob: -11.543804168701172
    6. '   ' → logprob: -12.168804168701172
    7. '1' → logprob: -12.168804168701172
    8. '	count' → logprob: -13.293804168701172
    9. '               ' → logprob: -14.043804168701172
    10. '0' → logprob: -14.918804168701172

Token 90: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.002476016292348504
    2. ' count' → logprob: -6.002476215362549
    3. '               ' → logprob: -15.87747573852539
    4. '           ' → logprob: -16.25247573852539
    5. '	count' → logprob: -17.62747573852539
    6. ' ' → logprob: -18.00247573852539
    7. '   ' → logprob: -20.25247573852539
    8. '1' → logprob: -20.62747573852539
    9. '_count' → logprob: -20.75247573852539
    10. '(count' → logprob: -20.87747573852539

Token 91: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.266495019197464
    2. '-=' → logprob: -1.7664949893951416
    3. '-' → logprob: -2.7664949893951416
    4. ' -' → logprob: -9.391494750976562
    5. '=' → logprob: -10.766494750976562
    6. '   ' → logprob: -11.391494750976562
    7. ' ' → logprob: -12.641494750976562
    8. '    ' → logprob: -12.891494750976562
    9. '  ' → logprob: -13.766494750976562
    10. ' =' → logprob: -14.016494750976562

Token 92: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010331686353310943
    2. ' ' → logprob: -6.876033306121826
    3. '   ' → logprob: -15.001032829284668
    4. '<|end|>' → logprob: -17.126033782958984
    5. '    ' → logprob: -17.626033782958984
    6. '  ' → logprob: -17.751033782958984
    7. '```' → logprob: -18.376033782958984
    8. '１' → logprob: -19.563533782958984
    9. '0' → logprob: -19.563533782958984
    10. '       ' → logprob: -19.813533782958984

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '<|end|>' → logprob: -17.375
    4. '```' → logprob: -18.5
    5. '   ' → logprob: -18.75
    6. '۱' → logprob: -19.0
    7. '１' → logprob: -19.6875
    8. '१' → logprob: -19.8125
    9. '১' → logprob: -20.3125
    10. '  ' → logprob: -21.25

Token 94: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14026395976543427
    2. ' 
' → logprob: -3.0152640342712402
    3. '    
' → logprob: -3.5152640342712402
    4. '   ' → logprob: -3.8902640342712402
    5. '  
' → logprob: -4.26526403427124
    6. 'if' → logprob: -5.01526403427124
    7. '   
' → logprob: -6.39026403427124
    8. ' ' → logprob: -6.89026403427124
    9. 'candidate' → logprob: -6.89026403427124
    10. ' if' → logprob: -7.01526403427124

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04943867400288582
    2. '    
' → logprob: -4.4244384765625
    3. ' 
' → logprob: -4.6744384765625
    4. '
' → logprob: -4.9244384765625
    5. '  
' → logprob: -5.1744384765625
    6. ' ' → logprob: -5.9244384765625
    7. ' if' → logprob: -6.1744384765625
    8. 'if' → logprob: -6.5494384765625
    9. '<|end|>' → logprob: -6.5494384765625
    10. '    ' → logprob: -7.0494384765625

Token 96: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3339275121688843
    2. 'if' (adapté à ' if') → logprob: -1.3339275121688843
    3. 'result' → logprob: -4.708927631378174
    4. 'major' → logprob: -5.208927631378174
    5. '   ' → logprob: -6.458927631378174
    6. '    
' → logprob: -6.708927631378174
    7. 'occ' → logprob: -7.458927631378174
    8. 'answer' → logprob: -7.583927631378174
    9. ' if' → logprob: -8.458927154541016
    10. 'maj' → logprob: -8.458927154541016

Token 97: ' candidate' (ID: 17098)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -1.0716867446899414
    2. ' arr' → logprob: -1.4466867446899414
    3. 'arr' → logprob: -1.9466867446899414
    4. ' candidate' → logprob: -1.9466867446899414
    5. 'count' → logprob: -2.0716867446899414
    6. 'candidate' → logprob: -4.571686744689941
    7. ' ' → logprob: -8.696686744689941
    8. '   ' → logprob: -9.571686744689941
    9. ' all' → logprob: -10.196686744689941
    10. '  ' → logprob: -11.196686744689941

Token 98: ' is' (ID: 382)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4641674757003784
    2. ' not' → logprob: -2.089167594909668
    3. ' is' → logprob: -2.839167594909668
    4. 'arr' → logprob: -2.964167594909668
    5. 'in' → logprob: -3.464167594909668
    6. ':' → logprob: -3.589167594909668
    7. ' and' → logprob: -3.839167594909668
    8. 'not' → logprob: -4.214167594909668
    9. '!=' → logprob: -4.589167594909668
    10. ' !=' → logprob: -5.339167594909668

Token 99: ' not' (ID: 625)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5195805430412292
    2. ' None' → logprob: -1.144580602645874
    3. ' not' → logprob: -3.144580602645874
    4. 'not' → logprob: -3.144580602645874
    5. 'arr' → logprob: -7.644580364227295
    6. 'in' → logprob: -9.269580841064453
    7. ' in' → logprob: -10.144580841064453
    8. ' ' → logprob: -10.269580841064453
    9. ' arr' → logprob: -11.019580841064453
    10. 'none' → logprob: -11.769580841064453

Token 100: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.6931812167167664
    2. 'None' → logprob: -0.6931812167167664
    3. 'arr' → logprob: -10.443181037902832
    4. ' ' → logprob: -13.318181037902832
    5. '(None' → logprob: -13.568181037902832
    6. ' in' → logprob: -15.068181037902832
    7. 'none' → logprob: -15.193181037902832
    8. 'in' → logprob: -15.318181037902832
    9. ' arr' → logprob: -15.568181037902832
    10. '   ' → logprob: -15.568181037902832

Token 101: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07538449019193649
    2. ':
' → logprob: -3.0753843784332275
    3. ' and' → logprob: -3.7003843784332275
    4. '   ' → logprob: -6.575384616851807
    5. 'and' → logprob: -8.200384140014648
    6. '       ' → logprob: -10.450384140014648
    7. ' :' → logprob: -11.450384140014648
    8. ':

' → logprob: -11.950384140014648
    9. ' :
' → logprob: -12.700384140014648
    10. '    ' → logprob: -13.200384140014648

Token 102: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.026336297392845154
    2. ' arr' → logprob: -3.651336193084717
    3. 'count' → logprob: -11.401336669921875
    4. ' ' → logprob: -11.526336669921875
    5. '   ' → logprob: -12.026336669921875
    6. ' count' → logprob: -12.901336669921875
    7. '	arr' → logprob: -13.151336669921875
    8. '
' → logprob: -13.401336669921875
    9. 'all' → logprob: -14.401336669921875
    10. '[arr' → logprob: -15.026336669921875

Token 103: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -1.0325924449716695e-05
    2. '.' → logprob: -11.62501049041748
    3. 'count' → logprob: -13.62501049041748
    4. ' .' → logprob: -16.750009536743164
    5. '.c' → logprob: -19.375009536743164
    6. '.Count' → logprob: -19.375009536743164
    7. '```' → logprob: -19.500009536743164
    8. ' count' → logprob: -20.250009536743164
    9. '   ' → logprob: -20.625009536743164
    10. '	count' → logprob: -20.750009536743164

Token 104: '(candidate' (ID: 145201)
  Prédit: '(candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(candidate' → logprob: -0.00029828163678757846
    2. '(' → logprob: -8.125298500061035
    3. ' (' → logprob: -13.750298500061035
    4. '(c' → logprob: -14.250298500061035
    5. 'candidate' → logprob: -16.00029754638672
    6. '(`' → logprob: -16.50029754638672
    7. '("("' → logprob: -16.62529754638672
    8. '('' → logprob: -16.87529754638672
    9. '```' → logprob: -17.00029754638672
    10. '(selected' → logprob: -17.50029754638672

Token 105: ')' (ID: 8)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2527152895927429
    2. '>' → logprob: -1.5027153491973877
    3. ')' → logprob: -7.502715110778809
    4. ' ' → logprob: -9.377715110778809
    5. ' ' → logprob: -9.752715110778809
    6. '*' → logprob: -10.002715110778809
    7. ')>' → logprob: -11.252715110778809
    8. ' *' → logprob: -11.752715110778809
    9. '">' → logprob: -11.877715110778809
    10. ' >
' → logprob: -12.502715110778809

Token 106: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0011055675568059087
    2. '>' → logprob: -6.876105785369873
    3. ' ' → logprob: -10.001105308532715
    4. '()>' → logprob: -11.251105308532715
    5. '()' → logprob: -12.126105308532715
    6. ' ' → logprob: -13.126105308532715
    7. ' >
' → logprob: -13.501105308532715
    8. '   ' → logprob: -13.626105308532715
    9. ' >

' → logprob: -13.876105308532715
    10. ')' → logprob: -14.126105308532715

Token 107: ' n' (ID: 297)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.07857081294059753
    2. ' len' → logprob: -2.82857084274292
    3. 'n' → logprob: -4.32857084274292
    4. ' n' → logprob: -5.95357084274292
    5. '(len' → logprob: -7.45357084274292
    6. ' (' → logprob: -10.578570365905762
    7. '   ' → logprob: -10.703570365905762
    8. '(' → logprob: -10.953570365905762
    9. '(n' → logprob: -10.953570365905762
    10. '	len' → logprob: -11.953570365905762

Token 108: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.018353624269366264
    2. ' //' → logprob: -4.018353462219238
    3. '```' → logprob: -9.518353462219238
    4. '/' → logprob: -9.893353462219238
    5. ' ' → logprob: -9.893353462219238
    6. '`' → logprob: -11.143353462219238
    7. '   ' → logprob: -12.143353462219238
    8. ' ' → logprob: -12.768353462219238
    9. '``' → logprob: -13.643353462219238
    10. '//=' → logprob: -14.018353462219238

Token 109: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '1' → logprob: -16.750015258789062
    4. '3' → logprob: -19.125015258789062
    5. '   ' → logprob: -19.625015258789062
    6. '٢' → logprob: -20.000015258789062
    7. '۲' → logprob: -20.125015258789062
    8. '```' → logprob: -20.375015258789062
    9. '２' → logprob: -21.125015258789062
    10. '  ' → logprob: -21.250015258789062

Token 110: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -17.5
    4. '1' → logprob: -17.75
    5. '```' → logprob: -18.375
    6. '  ' → logprob: -19.625
    7. '3' → logprob: -20.375
    8. '
' → logprob: -20.75
    9. '    ' → logprob: -21.375
    10. '٢' → logprob: -21.5

Token 111: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018150994554162025
    2. ':
' → logprob: -4.018150806427002
    3. ':

' → logprob: -15.14315128326416
    4. ':
' → logprob: -15.14315128326416
    5. '   ' → logprob: -16.268150329589844
    6. ':return' → logprob: -16.268150329589844
    7. '):' → logprob: -16.518150329589844
    8. '):
' → logprob: -16.643150329589844
    9. ' :' → logprob: -17.268150329589844
    10. 'print' → logprob: -17.393150329589844

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001130094169639051
    2. '   ' → logprob: -7.001130104064941
    3. 'print' → logprob: -8.876130104064941
    4. ' print' → logprob: -9.626130104064941
    5. ':' → logprob: -12.251130104064941
    6. '```' → logprob: -13.376130104064941
    7. '\n' → logprob: -13.626130104064941
    8. ':
' → logprob: -13.751130104064941
    9. '\' → logprob: -14.126130104064941
    10. '           ' → logprob: -14.126130104064941

Token 113: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7010078430175781
    2. 'print' (adapté à ' print') → logprob: -0.7010078430175781
    3. ' print' → logprob: -4.951007843017578
    4. '   ' → logprob: -7.201007843017578
    5. '```' → logprob: -12.576007843017578
    6. '	print' → logprob: -13.076007843017578
    7. '           ' → logprob: -13.326007843017578
    8. '`' → logprob: -15.576007843017578
    9. ' ' → logprob: -16.076007843017578
    10. '``' → logprob: -16.701007843017578

Token 114: '(candidate' (ID: 145201)
  Prédit: '(candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(candidate' → logprob: -0.020190181210637093
    2. '(' → logprob: -4.020190238952637
    3. '(f' → logprob: -6.270190238952637
    4. '('' → logprob: -9.020190238952637
    5. '("' → logprob: -10.770190238952637
    6. 'candidate' → logprob: -12.520190238952637
    7. '("("' → logprob: -15.270190238952637
    8. '(`' → logprob: -16.02018928527832
    9. ' candidate' → logprob: -16.14518928527832
    10. '()' → logprob: -16.52018928527832

Token 115: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031804447062313557
    2. ')
' → logprob: -5.753180503845215
    3. '   ' → logprob: -13.503180503845215
    4. ' )' → logprob: -14.128180503845215
    5. ')
' → logprob: -16.2531795501709
    6. '<|end|>' → logprob: -16.5031795501709
    7. ')

' → logprob: -16.7531795501709
    8. '())' → logprob: -17.0031795501709
    9. '))' → logprob: -17.1281795501709
    10. '),' → logprob: -17.2531795501709

Token 116: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.05234299972653389
    2. ' else' → logprob: -3.3023428916931152
    3. '<|end|>' → logprob: -4.802342891693115
    4. '   ' → logprob: -5.302342891693115
    5. '```' → logprob: -7.177342891693115
    6. '	else' → logprob: -9.427343368530273
    7. ' ' → logprob: -10.802343368530273
    8. '<|end|>' → logprob: -11.052343368530273
    9. ')' → logprob: -11.177343368530273
    10. 'newline' → logprob: -11.302343368530273

Token 117: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.04250119999051094
    2. '   ' → logprob: -3.292501211166382
    3. ' else' → logprob: -5.417500972747803
    4. '	else' → logprob: -11.667501449584961
    5. ' ' → logprob: -13.792501449584961
    6. '  ' → logprob: -14.167501449584961
    7. '```' → logprob: -14.917501449584961
    8. 'elif' → logprob: -15.167501449584961
    9. '_else' → logprob: -15.167501449584961
    10. '    ' → logprob: -15.917501449584961

Token 118: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00020592445798683912
    2. ':
' → logprob: -8.500205993652344
    3. ' :' → logprob: -13.250205993652344
    4. '   ' → logprob: -14.625205993652344
    5. ':

' → logprob: -17.375205993652344
    6. ' :
' → logprob: -17.500205993652344
    7. '():' → logprob: -17.750205993652344
    8. '       ' → logprob: -18.000205993652344
    9. ':return' → logprob: -18.125205993652344
    10. ',' → logprob: -18.250205993652344

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24903658032417297
    2. '   ' → logprob: -1.7490365505218506
    3. 'print' → logprob: -3.2490365505218506
    4. ' print' → logprob: -4.87403678894043
    5. '    ' → logprob: -10.74903678894043
    6. '```' → logprob: -11.62403678894043
    7. '     ' → logprob: -11.99903678894043
    8. '	print' → logprob: -12.24903678894043
    9. '      ' → logprob: -12.49903678894043
    10. '	   ' → logprob: -13.62403678894043

Token 120: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3342907726764679
    2. '   ' → logprob: -1.8342907428741455
    3. ' print' → logprob: -2.0842907428741455
    4. '	print' → logprob: -11.084290504455566
    5. '    ' → logprob: -12.084290504455566
    6. '```' → logprob: -12.459290504455566
    7. ' ' → logprob: -12.959290504455566
    8. '  ' → logprob: -13.209290504455566
    9. '       ' → logprob: -13.959290504455566
    10. '   ' → logprob: -14.334290504455566

Token 121: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.6078482270240784
    2. '(' → logprob: -0.8578482270240784
    3. '('' → logprob: -3.8578481674194336
    4. '()' → logprob: -4.732848167419434
    5. '(None' → logprob: -7.607848167419434
    6. '("?' → logprob: -7.857848167419434
    7. '('?' → logprob: -8.857848167419434
    8. '(-' → logprob: -8.982848167419434
    9. '(?)' → logprob: -8.982848167419434
    10. '("")' → logprob: -10.232848167419434

Token 122: 'NO' (ID: 14695)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.5112550258636475
    2. '0' → logprob: -1.7612550258636475
    3. 'NO' → logprob: -1.7612550258636475
    4. 'NONE' → logprob: -1.8862550258636475
    5. 'no' → logprob: -2.7612550258636475
    6. '1' → logprob: -2.8862550258636475
    7. '-' → logprob: -3.1362550258636475
    8. 'No' → logprob: -3.2612550258636475
    9. '?' → logprob: -3.5112550258636475
    10. '"' → logprob: -3.8862550258636475

Token 123: ' COLOR' (ID: 58403)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0008766854298301041
    2. ')' → logprob: -7.1258769035339355
    3. ')")' → logprob: -10.250876426696777
    4. '")
' → logprob: -10.375876426696777
    5. '"' → logprob: -12.625876426696777
    6. '!")' → logprob: -14.375876426696777
    7. '')' → logprob: -15.000876426696777
    8. ' ")' → logprob: -15.125876426696777
    9. ' Majority' → logprob: -15.625876426696777
    10. '”)' → logprob: -16.000877380371094

Token 124: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00010819212911883369
    2. 'S' → logprob: -9.375107765197754
    3. ')' → logprob: -11.000107765197754
    4. 's' → logprob: -12.750107765197754
    5. ')")' → logprob: -13.125107765197754
    6. '")
' → logprob: -13.375107765197754
    7. '"' → logprob: -16.00010871887207
    8. '')' → logprob: -17.00010871887207
    9. '!")' → logprob: -17.75010871887207
    10. '”)' → logprob: -18.50010871887207


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 122
Tokens correctement prédits (1ère position, stricte): 57
Tokens correctement prédits (1ère position, avec adaptation): 64
Tokens correctement prédits (top 10): 110
Précision stricte (1ère position): 46.72%
Précision adaptée (1ère position): 52.46%
Précision (top 10): 90.16%
================================================================================
