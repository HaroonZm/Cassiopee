================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:26:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n=input()
res=10**18
l=len(n)
for length in range(1,l):
    max_v=-1
    min_v=10**18
    i=0
    while i<l:
        val=int(n[i:i+length])
        max_v=max(max_v,val)
        min_v=min(min_v,val)
        i+=length
    res=min(res,max_v-min_v)
print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '=input' (ID: 87911)
  → Token d'amorce (pas de prédiction)

Token 2: '()
' (ID: 1234)
  → Token d'amorce (pas de prédiction)

Token 3: 'res' (ID: 430)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05885748192667961
    2. '+' → logprob: -3.5588574409484863
    3. '=' → logprob: -3.9338574409484863
    4. '[' → logprob: -5.808857440948486
    5. '(' → logprob: -6.308857440948486
    6. ')' → logprob: -7.183857440948486
    7. 'if' → logprob: -7.183857440948486
    8. ''' → logprob: -7.808857440948486
    9. '*' → logprob: -8.058857917785645
    10. ',' → logprob: -8.058857917785645

Token 4: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09257020801305771
    2. '+' → logprob: -3.4675703048706055
    3. '.' → logprob: -3.4675703048706055
    4. '[' → logprob: -4.5925703048706055
    5. ' =' → logprob: -4.5925703048706055
    6. '+=' → logprob: -5.5925703048706055
    7. '.=' → logprob: -7.4675703048706055
    8. ' +=' → logprob: -8.092570304870605
    9. '[:]' → logprob: -8.092570304870605
    10. '_' → logprob: -8.217570304870605

Token 5: '10' (ID: 702)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18282130360603333
    2. 'int' → logprob: -2.432821273803711
    3. '[]' → logprob: -3.557821273803711
    4. '""' → logprob: -3.557821273803711
    5. '0' → logprob: -4.307821273803711
    6. '''' → logprob: -5.682821273803711
    7. 'len' → logprob: -6.682821273803711
    8. 'list' → logprob: -6.932821273803711
    9. '"' → logprob: -7.057821273803711
    10. 'input' → logprob: -7.432821273803711

Token 6: '**' (ID: 410)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.19007574021816254
    2. '%' → logprob: -2.065075635910034
    3. '+' → logprob: -3.440075635910034
    4. '-' → logprob: -5.065075874328613
    5. '**' → logprob: -5.940075874328613
    6. '#' → logprob: -6.940075874328613
    7. ' ' → logprob: -7.315075874328613
    8. '=' → logprob: -7.565075874328613
    9. '.' → logprob: -7.690075874328613
    10. '[' → logprob: -7.815075874328613

Token 7: '18' (ID: 1157)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6594235897064209
    2. '9' → logprob: -1.159423589706421
    3. '6' → logprob: -2.534423589706421
    4. '-' → logprob: -2.784423589706421
    5. '(' → logprob: -5.034423828125
    6. '(len' → logprob: -5.159423828125
    7. '5' → logprob: -5.409423828125
    8. '(-' → logprob: -5.534423828125
    9. '7' → logprob: -6.284423828125
    10. 'n' → logprob: -6.409423828125

Token 8: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.3213974237442017
    2. ' ' → logprob: -1.8213974237442017
    3. 'for' → logprob: -1.9463974237442017
    4. '+' → logprob: -1.9463974237442017
    5. '
' → logprob: -1.9463974237442017
    6. ' 
' → logprob: -3.071397304534912
    7. 'i' → logprob: -4.571397304534912
    8. '<|end|>' → logprob: -4.571397304534912
    9. ' for' → logprob: -4.696397304534912
    10. '-' → logprob: -4.821397304534912

Token 9: 'l' (ID: 75)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014163863845169544
    2. ' for' → logprob: -4.514163970947266
    3. '
' → logprob: -6.139163970947266
    4. '\n' → logprob: -7.514163970947266
    5. '+' → logprob: -9.514163970947266
    6. 'a' → logprob: -10.139163970947266
    7. 'n' → logprob: -10.389163970947266
    8. ')' → logprob: -10.514163970947266
    9. '' → logprob: -10.514163970947266
    10. '=' → logprob: -10.639163970947266

Token 10: '=len' (ID: 114011)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.49581342935562134
    2. 'en' → logprob: -1.1208133697509766
    3. '=' → logprob: -3.6208133697509766
    4. 'i' → logprob: -3.7458133697509766
    5. '=len' → logprob: -5.120813369750977
    6. 'o' → logprob: -5.620813369750977
    7. ' =' → logprob: -6.620813369750977
    8. 'et' → logprob: -6.995813369750977
    9. 'ist' → logprob: -7.120813369750977
    10. '=[]' → logprob: -7.495813369750977

Token 11: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6948549151420593
    2. '(n' → logprob: -0.6948549151420593
    3. '(l' → logprob: -7.069854736328125
    4. '(
' → logprob: -7.194854736328125
    5. '(s' → logprob: -9.569854736328125
    6. 's' → logprob: -11.944854736328125
    7. '(res' → logprob: -12.194854736328125
    8. '(

' → logprob: -12.569854736328125
    9. 'l' → logprob: -12.944854736328125
    10. '((' → logprob: -13.069854736328125

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8550976164988242e-05
    2. '[' → logprob: -12.500018119812012
    3. '())' → logprob: -12.625018119812012
    4. ' )' → logprob: -12.750018119812012
    5. '()' → logprob: -13.250018119812012
    6. '`)' → logprob: -13.250018119812012
    7. '')' → logprob: -13.625018119812012
    8. ')
' → logprob: -13.750018119812012
    9. ')-' → logprob: -14.125018119812012
    10. '))' → logprob: -14.125018119812012

Token 13: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003777505364269018
    2. ' for' → logprob: -6.878777503967285
    3. '\n' → logprob: -6.878777503967285
    4. '+' → logprob: -7.378777503967285
    5. ')' → logprob: -7.753777503967285
    6. '
' → logprob: -8.503777503967285
    7. '-' → logprob: -8.628777503967285
    8. '*' → logprob: -9.253777503967285
    9. '(' → logprob: -10.128777503967285
    10. '=' → logprob: -10.378777503967285

Token 14: ' length' (ID: 5517)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.13449279963970184
    2. ' ' → logprob: -2.259492874145508
    3. '_' → logprob: -4.509492874145508
    4. 'i' → logprob: -4.759492874145508
    5. ' _' → logprob: -6.384492874145508
    6. '  ' → logprob: -9.259492874145508
    7. ' ‌' → logprob: -10.509492874145508
    8. ' ' → logprob: -11.009492874145508
    9. '_i' → logprob: -11.509492874145508
    10. ' I' → logprob: -12.509492874145508

Token 15: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.40050363540649414
    2. 'in' → logprob: -1.1505036354064941
    3. ' ' → logprob: -4.400503635406494
    4. '_' → logprob: -7.400503635406494
    5. '(' → logprob: -7.775503635406494
    6. ' _' → logprob: -9.650503158569336
    7. '  ' → logprob: -10.275503158569336
    8. 'range' → logprob: -10.400503158569336
    9. '(range' → logprob: -10.775503158569336
    10. ' range' → logprob: -10.900503158569336

Token 16: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10021831095218658
    2. 'range' → logprob: -2.3502182960510254
    3. ' ' → logprob: -11.850218772888184
    4. '(range' → logprob: -12.975218772888184
    5. '	range' → logprob: -13.600218772888184
    6. '[' → logprob: -14.600218772888184
    7. '  ' → logprob: -15.850218772888184
    8. ' xrange' → logprob: -15.975218772888184
    9. '   ' → logprob: -16.475217819213867
    10. '1' → logprob: -16.600217819213867

Token 17: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003843173326458782
    2. '(l' → logprob: -7.875384330749512
    3. '(len' → logprob: -12.625384330749512
    4. '(length' → logprob: -14.625384330749512
    5. ' (' → logprob: -15.000384330749512
    6. '((' → logprob: -17.000383377075195
    7. '(
' → logprob: -17.625383377075195
    8. '(n' → logprob: -17.625383377075195
    9. '(L' → logprob: -18.625383377075195
    10. '(s' → logprob: -19.000383377075195

Token 18: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04338039830327034
    2. 'l' → logprob: -3.6683804988861084
    3. ' ' → logprob: -4.793380260467529
    4. '3' → logprob: -5.168380260467529
    5. '2' → logprob: -6.793380260467529
    6. ' l' → logprob: -7.043380260467529
    7. 'max' → logprob: -8.418380737304688
    8. '6' → logprob: -9.043380737304688
    9. ' max' → logprob: -9.168380737304688
    10. 'len' → logprob: -9.418380737304688

Token 19: ',l' (ID: 45198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10838431864976883
    2. ' ,' → logprob: -2.358384370803833
    3. ',len' → logprob: -5.358384132385254
    4. ',l' → logprob: -6.358384132385254
    5. ',length' → logprob: -6.983384132385254
    6. ',n' → logprob: -7.233384132385254
    7. ' ' → logprob: -10.233384132385254
    8. ',min' → logprob: -13.108384132385254
    9. ',int' → logprob: -13.358384132385254
    10. ',max' → logprob: -13.483384132385254

Token 20: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.027269277721643448
    2. ',' → logprob: -4.65226936340332
    3. '):' → logprob: -5.27726936340332
    4. '//' → logprob: -5.40226936340332
    5. ' +' → logprob: -5.40226936340332
    6. '-' → logprob: -6.02726936340332
    7. ',+' → logprob: -8.15226936340332
    8. ' ):' → logprob: -8.65226936340332
    9. ' //' → logprob: -8.65226936340332
    10. ' ' → logprob: -9.77726936340332

Token 21: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28441011905670166
    2. ' 
' → logprob: -2.534409999847412
    3. '    ' → logprob: -2.659409999847412
    4. '   ' → logprob: -2.784409999847412
    5. ' if' → logprob: -4.034409999847412
    6. ' for' → logprob: -5.409409999847412
    7. '     
' → logprob: -5.534409999847412
    8. '    
' → logprob: -5.784409999847412
    9. ' n' → logprob: -6.659409999847412
    10. ' res' → logprob: -7.409409999847412

Token 22: ' max' (ID: 2999)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6222857236862183
    2. ' if' → logprob: -1.1222857236862183
    3. 'for' → logprob: -2.622285842895508
    4. 'if' → logprob: -3.747285842895508
    5. '   ' → logprob: -4.622285842895508
    6. ' prefix' → logprob: -4.997285842895508
    7. ' res' → logprob: -5.247285842895508
    8. ' part' → logprob: -5.622285842895508
    9. ' cut' → logprob: -5.997285842895508
    10. ' left' → logprob: -6.247285842895508

Token 23: '_v' (ID: 5390)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06708328425884247
    2. '_val' → logprob: -3.3170833587646484
    3. '_num' → logprob: -4.317083358764648
    4. '_sum' → logprob: -4.942083358764648
    5. '_len' → logprob: -5.817083358764648
    6. '_value' → logprob: -7.317083358764648
    7. '_s' → logprob: -7.317083358764648
    8. '_chunk' → logprob: -7.567083358764648
    9. '_digit' → logprob: -8.317083358764648
    10. '_count' → logprob: -8.442083358764648

Token 24: '=-' (ID: 21714)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.5439516305923462
    2. '=' → logprob: -1.1689516305923462
    3. 'alue' → logprob: -2.7939515113830566
    4. 'a' → logprob: -3.4189515113830566
    5. ' =' → logprob: -4.918951511383057
    6. 'alu' → logprob: -6.168951511383057
    7. '_' → logprob: -6.293951511383057
    8. 'alid' → logprob: -7.293951511383057
    9. '_=' → logprob: -7.293951511383057
    10. '=_' → logprob: -7.668951511383057

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03512507677078247
    2. '10' → logprob: -3.4101250171661377
    3. 'float' → logprob: -6.910125255584717
    4. '(' → logprob: -8.035124778747559
    5. '2' → logprob: -9.910124778747559
    6. '100' → logprob: -10.160124778747559
    7. 'int' → logprob: -10.535124778747559
    8. 'res' → logprob: -11.160124778747559
    9. '-' → logprob: -12.410124778747559
    10. '(-' → logprob: -12.410124778747559

Token 26: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8018335103988647
    2. ' 
' → logprob: -1.0518335103988647
    3. '
' → logprob: -2.4268336296081543
    4. ' for' → logprob: -2.9268336296081543
    5. '     
' → logprob: -4.426833629608154
    6. 'for' → logprob: -4.801833629608154
    7. '<|end|>' → logprob: -4.801833629608154
    8. '    
' → logprob: -4.926833629608154
    9. '0' → logprob: -5.176833629608154
    10. ':' → logprob: -5.676833629608154

Token 28: ' min' (ID: 1349)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4783308506011963
    2. ' for' → logprob: -0.9783308506011963
    3. '   ' → logprob: -5.853330612182617
    4. ' ' → logprob: -7.853330612182617
    5. ' i' → logprob: -8.978330612182617
    6. 'v' → logprob: -8.978330612182617
    7. 'i' → logprob: -9.103330612182617
    8. 'start' → logprob: -9.853330612182617
    9. 's' → logprob: -9.978330612182617
    10. '  ' → logprob: -10.228330612182617

Token 29: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.0023270058445632458
    2. '_' → logprob: -6.377326965332031
    3. '_val' → logprob: -7.877326965332031
    4. 'v' → logprob: -9.002326965332031
    5. '_value' → logprob: -9.877326965332031
    6. '_s' → logprob: -10.627326965332031
    7. '_t' → logprob: -12.002326965332031
    8. '_r' → logprob: -12.002326965332031
    9. '_=' → logprob: -12.377326965332031
    10. '_w' → logprob: -12.627326965332031

Token 30: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002804395044222474
    2. '=-' → logprob: -6.502804279327393
    3. '=float' → logprob: -7.377804279327393
    4. ' =' → logprob: -8.12780475616455
    5. '=int' → logprob: -8.50280475616455
    6. '=None' → logprob: -9.50280475616455
    7. '=True' → logprob: -11.37780475616455
    8. '=s' → logprob: -11.50280475616455
    9. '=min' → logprob: -12.00280475616455
    10. '=input' → logprob: -12.37780475616455

Token 31: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.003710527205839753
    2. 'int' → logprob: -6.503710746765137
    3. '1' → logprob: -6.753710746765137
    4. 'float' → logprob: -7.628710746765137
    5. '100' → logprob: -7.878710746765137
    6. ' ' → logprob: -9.628710746765137
    7. '999' → logprob: -10.378710746765137
    8. '101' → logprob: -11.003710746765137
    9. 'res' → logprob: -11.128710746765137
    10. '-' → logprob: -11.878710746765137

Token 32: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.030109474435448647
    2. '10' → logprob: -3.655109405517578
    3. '```' → logprob: -6.655109405517578
    4. '18' → logprob: -7.280109405517578
    5. '0' → logprob: -7.530109405517578
    6. '19' → logprob: -7.655109405517578
    7. '**' → logprob: -7.655109405517578
    8. '1' → logprob: -9.780109405517578
    9. '}' → logprob: -10.155109405517578
    10. '{' → logprob: -10.280109405517578

Token 33: '18' (ID: 1157)
  Prédit: '18'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.6757526397705078
    2. '9' → logprob: -1.0507526397705078
    3. '10' → logprob: -2.300752639770508
    4. '20' → logprob: -3.925752639770508
    5. '19' → logprob: -4.050752639770508
    6. '15' → logprob: -6.175752639770508
    7. '7' → logprob: -7.300752639770508
    8. '12' → logprob: -7.925752639770508
    9. '8' → logprob: -8.300752639770508
    10. '```' → logprob: -8.300752639770508

Token 34: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6059695482254028
    2. '<|end|>' → logprob: -1.8559695482254028
    3. '
' → logprob: -1.9809695482254028
    4. '   ' → logprob: -3.1059694290161133
    5. ' ' → logprob: -3.3559694290161133
    6. ' for' → logprob: -3.7309694290161133
    7. ' 
' → logprob: -4.105969429016113
    8. 'for' → logprob: -4.230969429016113
    9. ':
' → logprob: -5.230969429016113
    10. '  
' → logprob: -5.730969429016113

Token 36: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10237341374158859
    2. ' for' → logprob: -2.4773733615875244
    3. '   ' → logprob: -4.4773736000061035
    4. 'sum' → logprob: -7.6023736000061035
    5. 's' → logprob: -7.9773736000061035
    6. 'i' (adapté à ' i') → logprob: -8.352373123168945
    7. 'prefix' → logprob: -8.477373123168945
    8. 'start' → logprob: -9.352373123168945
    9. ' ' → logprob: -9.602373123168945
    10. 'v' → logprob: -9.977373123168945

Token 37: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0300934314727783
    2. 'n' → logprob: -1.1550934314727783
    3. ' n' → logprob: -2.1550934314727783
    4. ' in' → logprob: -2.1550934314727783
    5. ' =' → logprob: -2.5300934314727783
    6. 'nt' → logprob: -5.280093193054199
    7. 'in' → logprob: -6.155093193054199
    8. ' ' → logprob: -6.280093193054199
    9. ' range' → logprob: -6.280093193054199
    10. '+' → logprob: -6.905093193054199

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03022376075387001
    2. 'length' → logprob: -4.155223846435547
    3. ' ' → logprob: -4.405223846435547
    4. ' length' → logprob: -6.405223846435547
    5. 'l' → logprob: -9.155223846435547
    6. '1' → logprob: -9.280223846435547
    7. ' l' → logprob: -11.655223846435547
    8. '(length' → logprob: -12.967723846435547
    9. 'len' → logprob: -13.092723846435547
    10. '2' → logprob: -14.030223846435547

Token 39: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5894950032234192
    2. 'while' (adapté à ' while') → logprob: -1.3394949436187744
    3. '<|end|>' → logprob: -1.9644949436187744
    4. ' ' → logprob: -3.5894949436187744
    5. '
' → logprob: -5.2144951820373535
    6. ' 
' → logprob: -5.3394951820373535
    7. '<|end|>' → logprob: -6.9644951820373535
    8. ' )' → logprob: -7.2144951820373535
    9. ')' → logprob: -7.3394951820373535
    10. ',' → logprob: -7.8394951820373535

Token 42: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12695205211639404
    2. 'i' → logprob: -2.1269521713256836
    3. '(i' → logprob: -11.501952171325684
    4. ' l' → logprob: -12.751952171325684
    5. 'l' → logprob: -13.376952171325684
    6. ' ' → logprob: -13.501952171325684
    7. ' length' → logprob: -13.501952171325684
    8. 'length' → logprob: -13.751952171325684
    9. '	i' → logprob: -13.876952171325684
    10. '   ' → logprob: -14.251952171325684

Token 43: '<' (ID: 27)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6483622193336487
    2. '<=' → logprob: -1.648362159729004
    3. '+l' → logprob: -2.398362159729004
    4. '<len' → logprob: -2.523362159729004
    5. '<' → logprob: -2.648362159729004
    6. ' <' → logprob: -4.148362159729004
    7. ' +' → logprob: -4.273362159729004
    8. ' <=' → logprob: -4.398362159729004
    9. '<n' → logprob: -8.398362159729004
    10. '<size' → logprob: -9.273362159729004

Token 44: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.016712425276637077
    2. 'length' → logprob: -4.766712188720703
    3. ' l' → logprob: -4.891712188720703
    4. ' length' → logprob: -7.766712188720703
    5. 'len' → logprob: -10.016712188720703
    6. ' ' → logprob: -10.391712188720703
    7. '10' → logprob: -10.516712188720703
    8. '(' → logprob: -12.016712188720703
    9. '=' → logprob: -12.391712188720703
    10. '(l' → logprob: -12.766712188720703

Token 45: ':
' (ID: 734)
  Prédit: '-length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-length' → logprob: -0.97402423620224
    2. '-' → logprob: -1.2240242958068848
    3. ' and' → logprob: -1.9740242958068848
    4. ' -' → logprob: -2.4740242958068848
    5. ':' → logprob: -2.4740242958068848
    6. ':
' → logprob: -4.224024295806885
    7. 'and' → logprob: -5.974024295806885
    8. '   ' → logprob: -6.224024295806885
    9. '-n' → logprob: -7.474024295806885
    10. '-l' → logprob: -8.224023818969727

Token 46: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.319911241531372
    2. '+' → logprob: -1.444911241531372
    3. '<|end|>' → logprob: -1.569911241531372
    4. '   ' → logprob: -1.819911241531372
    5. ' ' → logprob: -3.444911241531372
    6. '       ' → logprob: -3.944911241531372
    7. '<|end|>' → logprob: -4.069911003112793
    8. ' and' → logprob: -4.194911003112793
    9. '```' → logprob: -4.694911003112793
    10. '    ' → logprob: -4.819911003112793

Token 47: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -1.0656764507293701
    2. ' val' → logprob: -1.4406764507293701
    3. ' segment' → logprob: -2.06567645072937
    4. 'segment' → logprob: -2.56567645072937
    5. 'num' → logprob: -3.44067645072937
    6. ' if' → logprob: -3.69067645072937
    7. 'v' → logprob: -3.81567645072937
    8. ' part' → logprob: -4.190676689147949
    9. 'part' → logprob: -4.565676689147949
    10. ' num' → logprob: -4.565676689147949

Token 48: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1606292724609375
    2. '=int' → logprob: -1.9106292724609375
    3. ' =' → logprob: -7.9106292724609375
    4. '=
' → logprob: -10.785629272460938
    5. '=

' → logprob: -11.535629272460938
    6. '=n' → logprob: -13.285629272460938
    7. '=i' → logprob: -13.785629272460938
    8. '=len' → logprob: -14.035629272460938
    9. 'int' → logprob: -15.160629272460938
    10. '=float' → logprob: -15.285629272460938

Token 49: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.07890697568655014
    2. '(' → logprob: -2.578907012939453
    3. '(
' → logprob: -11.453907012939453
    4. ' (' → logprob: -12.703907012939453
    5. 'n' → logprob: -13.078907012939453
    6. '('' → logprob: -13.953907012939453
    7. ' n' → logprob: -15.328907012939453
    8. '(

' → logprob: -15.828907012939453
    9. '(s' → logprob: -16.578907012939453
    10. '((' → logprob: -17.078907012939453

Token 50: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005084725562483072
    2. '[' → logprob: -7.6255083084106445
    3. ')' → logprob: -12.125508308410645
    4. 'i' → logprob: -12.500508308410645
    5. '[
' → logprob: -12.750508308410645
    6. ' [' → logprob: -12.875508308410645
    7. ' ' → logprob: -13.875508308410645
    8. '```' → logprob: -14.000508308410645
    9. '[I' → logprob: -14.125508308410645
    10. '   ' → logprob: -14.250508308410645

Token 51: ':i' (ID: 34041)
  Prédit: ':i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -9.341087570646778e-05
    2. ':' → logprob: -9.625093460083008
    3. ' :' → logprob: -11.000093460083008
    4. ' ' → logprob: -12.000093460083008
    5. 'i' → logprob: -13.125093460083008
    6. '   ' → logprob: -13.250093460083008
    7. '  ' → logprob: -15.250093460083008
    8. ':
' → logprob: -16.250093460083008
    9. ' i' → logprob: -16.375093460083008
    10. ',i' → logprob: -16.750093460083008

Token 52: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.416665640543215e-05
    2. 'length' → logprob: -10.62503433227539
    3. '+i' → logprob: -12.12503433227539
    4. ' +' → logprob: -12.87503433227539
    5. '   ' → logprob: -14.25003433227539
    6. '-length' → logprob: -14.62503433227539
    7. ' length' → logprob: -16.00003433227539
    8. '+l' → logprob: -16.00003433227539
    9. ',length' → logprob: -16.00003433227539
    10. ':length' → logprob: -16.50003433227539

Token 53: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -2.1008713702030946e-06
    2. ' length' → logprob: -13.125001907348633
    3. 'ength' → logprob: -16.375001907348633
    4. 'leng' → logprob: -18.125001907348633
    5. '(length' → logprob: -20.500001907348633
    6. '-length' → logprob: -20.750001907348633
    7. 'len' → logprob: -20.875001907348633
    8. '   ' → logprob: -20.875001907348633
    9. '1' → logprob: -21.125001907348633
    10. '[length' → logprob: -21.125001907348633

Token 54: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.000500966387335211
    2. ')' → logprob: -8.375500679016113
    3. ']' → logprob: -9.000500679016113
    4. '])
' → logprob: -9.250500679016113
    5. ' ])' → logprob: -10.250500679016113
    6. '])
' → logprob: -12.375500679016113
    7. '])

' → logprob: -12.750500679016113
    8. ' ' → logprob: -13.125500679016113
    9. ''])' → logprob: -13.250500679016113
    10. ')])' → logprob: -14.125500679016113

Token 55: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06679853796958923
    2. '       ' → logprob: -3.941798448562622
    3. ')
' → logprob: -4.191798686981201
    4. '
' → logprob: -4.316798686981201
    5. '   ' → logprob: -4.566798686981201
    6. '<|end|>' → logprob: -5.941798686981201
    7. ' if' → logprob: -7.066798686981201
    8. ' ' → logprob: -7.691798686981201
    9. 'if' → logprob: -7.816798686981201
    10. '),' → logprob: -7.941798686981201

Token 56: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.624711275100708
    2. ' if' → logprob: -1.249711275100708
    3. ' max' → logprob: -2.124711275100708
    4. 'if' → logprob: -2.999711275100708
    5. '   ' → logprob: -5.624711036682129
    6. 'i' → logprob: -6.374711036682129
    7. ' i' → logprob: -6.499711036682129
    8. '
' → logprob: -8.124711036682129
    9. '	max' → logprob: -8.374711036682129
    10. '       ' → logprob: -8.374711036682129

Token 57: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.00036846695002168417
    2. '_' → logprob: -8.500368118286133
    3. '_val' → logprob: -9.000368118286133
    4. ' _' → logprob: -11.625368118286133
    5. '(' → logprob: -11.750368118286133
    6. '}_' → logprob: -12.500368118286133
    7. '```' → logprob: -12.875368118286133
    8. ')_' → logprob: -13.250368118286133
    9. '<|end|>' → logprob: -13.250368118286133
    10. '=_' → logprob: -13.500368118286133

Token 58: '=max' (ID: 102952)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011766521260142326
    2. ' =' → logprob: -4.76176643371582
    3. '=max' → logprob: -5.76176643371582
    4. '=

' → logprob: -13.76176643371582
    5. '=
' → logprob: -15.76176643371582
    6. '=}' → logprob: -16.13676643371582
    7. '=min' → logprob: -16.88676643371582
    8. '＝' → logprob: -17.38676643371582
    9. 'max' → logprob: -17.38676643371582
    10. '=Math' → logprob: -17.51176643371582

Token 59: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47499793767929077
    2. '(max' → logprob: -1.2249979972839355
    3. '(val' → logprob: -2.4749979972839355
    4. ' (' → logprob: -8.599997520446777
    5. '(Max' → logprob: -13.474997520446777
    6. '(value' → logprob: -13.599997520446777
    7. '(
' → logprob: -13.724997520446777
    8. '(var' → logprob: -14.349997520446777
    9. '(v' → logprob: -14.599997520446777
    10. '(min' → logprob: -14.849997520446777

Token 60: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -9.674858301877975e-05
    2. '_val' → logprob: -9.625096321105957
    3. '_' → logprob: -11.875096321105957
    4. 'v' → logprob: -12.125096321105957
    5. ',' → logprob: -12.625096321105957
    6. 'val' → logprob: -12.750096321105957
    7. '   ' → logprob: -12.750096321105957
    8. ' _' → logprob: -13.250096321105957
    9. ')' → logprob: -13.375096321105957
    10. '_i' → logprob: -13.500096321105957

Token 61: ',val' (ID: 126054)
  Prédit: ',val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',val' → logprob: -0.014523676596581936
    2. ',' → logprob: -4.264523506164551
    3. ' ,' → logprob: -8.38952350616455
    4. ' val' → logprob: -9.51452350616455
    5. 'val' → logprob: -9.76452350616455
    6. '[val' → logprob: -13.51452350616455
    7. ',v' → logprob: -16.389524459838867
    8. '(val' → logprob: -17.139524459838867
    9. '	val' → logprob: -17.389524459838867
    10. ',value' → logprob: -17.514524459838867

Token 62: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06210213154554367
    2. ')' → logprob: -2.8121020793914795
    3. ')
' → logprob: -9.562102317810059
    4. ' )
' → logprob: -10.312102317810059
    5. '       ' → logprob: -10.562102317810059
    6. '   ' → logprob: -13.937102317810059
    7. ' )' → logprob: -14.062102317810059
    8. '           ' → logprob: -14.312102317810059
    9. ')

' → logprob: -14.312102317810059
    10. ');
' → logprob: -14.812102317810059

Token 63: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3902873396873474
    2. '<|end|>' → logprob: -1.5152873992919922
    3. '       ' → logprob: -2.515287399291992
    4. '        
' → logprob: -5.390287399291992
    5. '  
' → logprob: -5.390287399291992
    6. ' 
' → logprob: -5.515287399291992
    7. '```' → logprob: -6.015287399291992
    8. '   ' → logprob: -6.515287399291992
    9. '
' → logprob: -6.765287399291992
    10. '    
' → logprob: -6.765287399291992

Token 64: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.013188112527132034
    2. ' min' → logprob: -4.388187885284424
    3. '	min' → logprob: -7.763187885284424
    4. ' ' → logprob: -9.513188362121582
    5. '   ' → logprob: -9.513188362121582
    6. '       ' → logprob: -10.388188362121582
    7. 'i' → logprob: -10.638188362121582
    8. '```' → logprob: -11.638188362121582
    9. ',min' → logprob: -11.638188362121582
    10. '_min' → logprob: -12.263188362121582

Token 65: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.0002538296685088426
    2. '_val' → logprob: -8.500253677368164
    3. '<|end|>' → logprob: -10.375253677368164
    4. ' _' → logprob: -12.375253677368164
    5. '_' → logprob: -12.625253677368164
    6. '(_' → logprob: -13.125253677368164
    7. '<|end|>' → logprob: -13.125253677368164
    8. '(' → logprob: -13.375253677368164
    9. 'Val' → logprob: -13.875253677368164
    10. '```' → logprob: -14.125253677368164

Token 66: '=min' (ID: 149377)
  Prédit: '=min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=min' → logprob: -0.004093477968126535
    2. '=' → logprob: -5.504093647003174
    3. '=max' → logprob: -11.504093170166016
    4. ' =' → logprob: -12.754093170166016
    5. 'min' → logprob: -13.504093170166016
    6. '=int' → logprob: -14.879093170166016
    7. '=value' → logprob: -16.754093170166016
    8. '=
' → logprob: -16.879093170166016
    9. '=end' → logprob: -17.254093170166016
    10. '=_' → logprob: -17.254093170166016

Token 67: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -6.873571692267433e-05
    2. '(' → logprob: -10.000068664550781
    3. '(max' → logprob: -10.875068664550781
    4. ' (' → logprob: -13.250068664550781
    5. '<|end|>' → logprob: -13.875068664550781
    6. '_' → logprob: -14.750068664550781
    7. '_min' → logprob: -15.000068664550781
    8. '```' → logprob: -15.125068664550781
    9. '=min' → logprob: -15.250068664550781
    10. ',min' → logprob: -16.25006866455078

Token 68: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -1.3663626305060461e-05
    2. '_val' → logprob: -12.25001335144043
    3. 'v' → logprob: -12.62501335144043
    4. ',' → logprob: -13.37501335144043
    5. 'val' → logprob: -14.00001335144043
    6. ')' → logprob: -14.62501335144043
    7. '(min' → logprob: -14.75001335144043
    8. ',val' → logprob: -15.00001335144043
    9. '(' → logprob: -15.12501335144043
    10. ',v' → logprob: -15.75001335144043

Token 69: ',val' (ID: 126054)
  Prédit: ',val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',val' → logprob: -3.47626737493556e-05
    2. ',' → logprob: -10.37503433227539
    3. 'val' → logprob: -13.25003433227539
    4. ' val' → logprob: -14.12503433227539
    5. ' ,' → logprob: -14.50003433227539
    6. ',v' → logprob: -15.87503433227539
    7. ',value' → logprob: -16.37503433227539
    8. '[val' → logprob: -16.50003433227539
    9. ',
' → logprob: -16.75003433227539
    10. '	val' → logprob: -16.87503433227539

Token 70: ')
' (ID: 446)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6082073450088501
    2. '       ' → logprob: -0.9832073450088501
    3. ')' → logprob: -2.9832072257995605
    4. ')
' → logprob: -3.6082072257995605
    5. '   ' → logprob: -6.9832072257995605
    6. '```' → logprob: -7.1082072257995605
    7. '
' → logprob: -7.4832072257995605
    8. '<|end|>' → logprob: -7.6082072257995605
    9. ')i' → logprob: -7.8582072257995605
    10. '<|end|>' → logprob: -8.983207702636719

Token 71: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.332858145236969
    2. '       ' → logprob: -1.7078580856323242
    3. '	i' → logprob: -3.332858085632324
    4. 'i' → logprob: -3.582858085632324
    5. '```' → logprob: -4.082858085632324
    6. '   ' → logprob: -4.457858085632324
    7. ' i' → logprob: -6.082858085632324
    8. '        
' → logprob: -6.332858085632324
    9. '  
' → logprob: -6.582858085632324
    10. '    
' → logprob: -6.707858085632324

Token 72: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.005409015342593193
    2. ' i' → logprob: -5.255409240722656
    3. '	i' → logprob: -9.255409240722656
    4. '   ' → logprob: -9.630409240722656
    5. '```' → logprob: -11.630409240722656
    6. '
' → logprob: -13.255409240722656
    7. '_i' → logprob: -14.005409240722656
    8. ' ' → logprob: -14.505409240722656
    9. ',i' → logprob: -14.880409240722656
    10. '       ' → logprob: -15.130409240722656

Token 73: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10034210234880447
    2. '+' → logprob: -2.350342035293579
    3. ' +=' → logprob: -9.475341796875
    4. '+='' → logprob: -10.475341796875
    5. '+="' → logprob: -11.100341796875
    6. '+=(' → logprob: -11.725341796875
    7. '+i' → logprob: -12.975341796875
    8. '=' → logprob: -13.100341796875
    9. ']+=' → logprob: -13.725341796875
    10. '+
' → logprob: -14.100341796875

Token 74: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.11316663771867752
    2. '1' → logprob: -2.238166570663452
    3. ' length' → logprob: -7.988166809082031
    4. ' ' → logprob: -12.738166809082031
    5. 'len' → logprob: -14.238166809082031
    6. '(length' → logprob: -14.863166809082031
    7. 'leng' → logprob: -15.613166809082031
    8. '[length' → logprob: -15.738166809082031
    9. '-length' → logprob: -16.36316680908203
    10. 'Length' → logprob: -16.48816680908203

Token 75: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1906009018421173
    2. 'res' → logprob: -2.315600872039795
    3. 'if' → logprob: -3.440600872039795
    4. '   ' → logprob: -3.815600872039795
    5. ' if' → logprob: -4.440600872039795
    6. '```' → logprob: -5.815600872039795
    7. '
' → logprob: -6.440600872039795
    8. ' res' → logprob: -6.565600872039795
    9. '    
' → logprob: -6.815600872039795
    10. 'diff' → logprob: -7.690600872039795

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8644704222679138
    2. ' if' → logprob: -1.4894704818725586
    3. '
' → logprob: -1.7394704818725586
    4. 'res' → logprob: -2.4894704818725586
    5. 'if' → logprob: -3.2394704818725586
    6. ' res' → logprob: -3.3644704818725586
    7. '```' → logprob: -4.614470481872559
    8. 'diff' → logprob: -5.864470481872559
    9. ' ' → logprob: -6.114470481872559
    10. '    
' → logprob: -6.364470481872559

Token 77: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.10936609655618668
    2. 'if' → logprob: -2.4843661785125732
    3. 'diff' → logprob: -4.484365940093994
    4. ' if' → logprob: -5.734365940093994
    5. ' res' → logprob: -6.234365940093994
    6. 'print' → logprob: -6.484365940093994
    7. 'ans' → logprob: -6.984365940093994
    8. '   ' → logprob: -7.484365940093994
    9. 'difference' → logprob: -8.734366416931152
    10. 'd' → logprob: -8.734366416931152

Token 78: '=min' (ID: 149377)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03512956202030182
    2. '=min' → logprob: -3.5351295471191406
    3. ' =' → logprob: -5.410129547119141
    4. '=max' → logprob: -7.160129547119141
    5. '=Math' → logprob: -10.03512954711914
    6. '=int' → logprob: -10.66012954711914
    7. '-=' → logprob: -11.66012954711914
    8. '-' → logprob: -11.78512954711914
    9. '=

' → logprob: -12.66012954711914
    10. '=-' → logprob: -12.78512954711914

Token 79: '(res' (ID: 8331)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.05735331401228905
    2. '(res' → logprob: -3.0573532581329346
    3. '(' → logprob: -5.682353496551514
    4. 'res' → logprob: -6.307353496551514
    5. '_res' → logprob: -6.682353496551514
    6. '(min' → logprob: -7.057353496551514
    7. '_val' → logprob: -7.432353496551514
    8. '```' → logprob: -8.682353019714355
    9. 'val' → logprob: -8.807353019714355
    10. '(_' → logprob: -8.807353019714355

Token 80: ',max' (ID: 81466)
  Prédit: ',max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',max' → logprob: -0.5264119505882263
    2. ',' → logprob: -0.9014119505882263
    3. ' ,' → logprob: -6.026412010192871
    4. ',min' → logprob: -8.276412010192871
    5. '(max' → logprob: -8.401412010192871
    6. ',(' → logprob: -9.526412010192871
    7. ')' → logprob: -10.026412010192871
    8. 'abs' → logprob: -10.026412010192871
    9. ' max' → logprob: -10.151412010192871
    10. '(' → logprob: -10.526412010192871

Token 81: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -8.895480277715251e-06
    2. ')' → logprob: -12.875008583068848
    3. '(' → logprob: -13.250008583068848
    4. '_' → logprob: -14.125008583068848
    5. '(max' → logprob: -14.375008583068848
    6. ')_' → logprob: -14.375008583068848
    7. '-v' → logprob: -14.500008583068848
    8. '(_' → logprob: -15.125008583068848
    9. '_val' → logprob: -15.375008583068848
    10. 'v' → logprob: -15.625008583068848

Token 82: '-min' (ID: 20045)
  Prédit: '-min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-min' → logprob: -0.21074144542217255
    2. ' -' → logprob: -1.710741400718689
    3. '-' → logprob: -4.7107415199279785
    4. '-max' → logprob: -8.21074104309082
    5. '-minus' → logprob: -12.21074104309082
    6. '-Min' → logprob: -12.83574104309082
    7. '-mini' → logprob: -13.08574104309082
    8. ')-' → logprob: -14.08574104309082
    9. '-minute' → logprob: -14.58574104309082
    10. '-val' → logprob: -14.83574104309082

Token 83: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -3.523948907968588e-05
    2. 'v' → logprob: -11.375035285949707
    3. '_val' → logprob: -11.375035285949707
    4. '_' → logprob: -11.875035285949707
    5. 'val' → logprob: -13.125035285949707
    6. ')' → logprob: -13.500035285949707
    7. '_value' → logprob: -15.000035285949707
    8. '   ' → logprob: -15.250035285949707
    9. '<|end|>' → logprob: -16.06253433227539
    10. '__' → logprob: -16.18753433227539

Token 84: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.624555291840807e-05
    2. ')
' → logprob: -9.500076293945312
    3. ' )' → logprob: -14.625076293945312
    4. ')

' → logprob: -15.125076293945312
    5. '))' → logprob: -15.250076293945312
    6. ')
' → logprob: -16.125076293945312
    7. '+' → logprob: -16.500076293945312
    8. ')return' → logprob: -17.125076293945312
    9. '')' → logprob: -17.250076293945312
    10. '**' → logprob: -17.250076293945312

Token 85: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002319071936653927
    2. '```' → logprob: -8.875231742858887
    3. '<|end|>' → logprob: -9.625231742858887
    4. ' print' → logprob: -11.125231742858887
    5. ')' → logprob: -11.875231742858887
    6. '
' → logprob: -13.625231742858887
    7. 'if' → logprob: -15.000231742858887
    8. '\' → logprob: -15.000231742858887
    9. '``' → logprob: -15.125231742858887
    10. '(print' → logprob: -15.250231742858887

Token 86: '(res' (ID: 8331)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02077474631369114
    2. '(res' → logprob: -3.8957748413085938
    3. '()' → logprob: -8.520774841308594
    4. '('' → logprob: -10.645774841308594
    5. ' (' → logprob: -12.645774841308594
    6. '("("' → logprob: -13.270774841308594
    7. 'res' → logprob: -14.020774841308594
    8. '(re' → logprob: -14.395774841308594
    9. '(end' → logprob: -14.770774841308594
    10. '(
' → logprob: -14.895774841308594

Token 87: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. '))' → logprob: -14.750000953674316
    3. ' )' → logprob: -15.250000953674316
    4. ')
' → logprob: -16.875
    5. ')`' → logprob: -17.125
    6. ')}' → logprob: -17.25
    7. '`)' → logprob: -17.625
    8. '')' → logprob: -17.75
    9. '),' → logprob: -18.625
    10. ')#' → logprob: -18.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 85
Tokens correctement prédits (1ère position, stricte): 40
Tokens correctement prédits (1ère position, avec adaptation): 45
Tokens correctement prédits (top 10): 70
Précision stricte (1ère position): 47.06%
Précision adaptée (1ère position): 52.94%
Précision (top 10): 82.35%
================================================================================
