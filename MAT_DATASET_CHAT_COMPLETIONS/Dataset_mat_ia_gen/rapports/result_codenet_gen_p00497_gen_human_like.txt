================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:14:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import threading

def main():
    sys.setrecursionlimit(10**7)
    input = sys.stdin.readline

    N, M = map(int, input().split())
    # On crée une liste de booléens pour chaque ligne avec a éléments
    # indexed from 1 to a, donc on stocke à l'indice b-1
    # L'indice de la ligne est de 1 à N
    # On peut utiliser une liste de liste taille N, avec ligne i de taille i
    covered = [bytearray(a) for a in range(1, N+1)]

    for _ in range(M):
        A, B, X = map(int, input().split())
        # Les sommets :
        # (A,B), (A+X,B), (A+X,B+X)
        # Le "triangle bon" inclut tous les points :
        # pour i in [0..X], les points (A+i, B) à (A+X, B+i)
        # plus le diagonale du haut (ligne A, pos B) à (A+X, B+X)
        # mais le problème nous dit que le "triangle bon" se compose de tous les
        # points sur les côtés, mais le question est d'inclure les points entourés par le caoutchouc
        # Le triangle a 3 côtés :
        # - côté vertical entre (A,B) et (A+X,B)
        # - côté diagonal entre (A+X,B) et (A+X,B+X)
        # - côté horizontal entre (A,B) et (A+X,B+X)
        # Mais en fait il faut marquer tous les points à l'intérieur du triangle
        # La « bonne » définition est que tous les clous entre ces points sont recouverts, 
        # donc ce sont tous les points (a,b) tels que :
        # A ≤ a ≤ A+X
        # et b vérifie : b ∈ [B, B + (a - A)]
        # Donc pour chaque ligne a de A à A+X inclus:
        #    on couvre les clous de b allant de B à B+(a - A)
        for a in range(A, A + X + 1):
            start = B - 1
            end = B + (a - A) - 1
            for b in range(start, end + 1):
                covered[a - 1][b] = 1

    # On compte le nombre de vrais marqués
    result = 0
    for line in covered:
        result += sum(line)
    print(result)

threading.Thread(target=main).start()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: ' threading' (ID: 72047)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020771251001860946
    2. 'os' → logprob: -8.500207901000977
    3. ' math' → logprob: -13.375207901000977
    4. ' re' → logprob: -13.750207901000977
    5. '"os' → logprob: -14.250207901000977
    6. ' json' → logprob: -14.750207901000977
    7. '_os' → logprob: -16.375207901000977
    8. ' ' → logprob: -16.500207901000977
    9. ' io' → logprob: -16.625207901000977
    10. '	os' → logprob: -16.875207901000977

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6925594210624695
    2. '\n' → logprob: -1.9425594806671143
    3. '
' → logprob: -2.0675594806671143
    4. '\' → logprob: -2.1925594806671143
    5. '

' → logprob: -2.9425594806671143
    6. '```' → logprob: -3.9425594806671143
    7. 'import' → logprob: -4.192559242248535
    8. '<|end|>' → logprob: -4.692559242248535
    9. 'newline' → logprob: -5.692559242248535
    10. 'def' → logprob: -5.692559242248535

Token 6: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7178463935852051
    2. 'def' → logprob: -1.717846393585205
    3. '```' → logprob: -1.717846393585205
    4. '\' → logprob: -2.467846393585205
    5. '\n' → logprob: -3.342846393585205
    6. ':' → logprob: -5.092846393585205
    7. 'import' → logprob: -5.092846393585205
    8. 'class' → logprob: -5.592846393585205
    9. '
' → logprob: -5.592846393585205
    10. ',' → logprob: -6.342846393585205

Token 7: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11690925061702728
    2. ' main' → logprob: -2.8669092655181885
    3. '_' → logprob: -4.491909027099609
    4. ' run' → logprob: -5.116909027099609
    5. ' start' → logprob: -5.241909027099609
    6. ' threading' → logprob: -5.366909027099609
    7. ' thread' → logprob: -5.616909027099609
    8. ' _' → logprob: -5.741909027099609
    9. ' process' → logprob: -5.991909027099609
    10. ' space' → logprob: -6.116909027099609

Token 8: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0033850567415356636
    2. ':' → logprob: -6.378385066986084
    3. '():' → logprob: -6.628385066986084
    4. '(:' → logprob: -8.628384590148926
    5. ' (' → logprob: -9.128384590148926
    6. '(
' → logprob: -10.503384590148926
    7. '):' → logprob: -11.253384590148926
    8. ')' → logprob: -12.128384590148926
    9. '(":' → logprob: -12.628384590148926
    10. '('' → logprob: -13.253384590148926

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14916084706783295
    2. '    ' → logprob: -2.899160861968994
    3. '(' → logprob: -3.524160861968994
    4. ' ' → logprob: -3.649160861968994
    5. '\' → logprob: -4.399160861968994
    6. ' (' → logprob: -5.524160861968994
    7. '    
' → logprob: -6.649160861968994
    8. 't' → logprob: -6.899160861968994
    9. '(thread' → logprob: -7.024160861968994
    10. 'n' → logprob: -7.149160861968994

Token 10: ' sys' (ID: 12228)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.0813080072402954
    2. ' t' → logprob: -1.8313080072402954
    3. '    ' → logprob: -1.9563080072402954
    4. '   ' → logprob: -2.456307888031006
    5. ' ' → logprob: -2.831307888031006
    6. ' print' → logprob: -3.081307888031006
    7. ' pass' → logprob: -3.331307888031006
    8. 'r' → logprob: -3.831307888031006
    9. 'print' → logprob: -3.956307888031006
    10. '#' → logprob: -4.581307888031006

Token 11: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.003025006502866745
    2. '.exit' → logprob: -6.378025054931641
    3. '.stdout' → logprob: -7.003025054931641
    4. '.argv' → logprob: -8.37802505493164
    5. '.stdin' → logprob: -9.00302505493164
    6. '.stderr' → logprob: -11.00302505493164
    7. '.write' → logprob: -11.25302505493164
    8. '.readline' → logprob: -12.12802505493164
    9. '.setdefault' → logprob: -12.12802505493164
    10. ' .' → logprob: -12.75302505493164

Token 12: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.3995859920978546
    2. 'trace' → logprob: -1.2745859622955322
    3. 'set' → logprob: -4.274586200714111
    4. 'switch' → logprob: -4.524586200714111
    5. 's' → logprob: -4.774586200714111
    6. 'default' → logprob: -5.399586200714111
    7. 'execution' → logprob: -5.649586200714111
    8. 'profile' → logprob: -6.149586200714111
    9. 'limit' → logprob: -6.649586200714111
    10. 'ex' → logprob: -6.774586200714111

Token 13: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.005384468473494053
    2. 'urs' → logprob: -6.13038444519043
    3. 'urse' → logprob: -6.63038444519043
    4. 'ur' → logprob: -7.63038444519043
    5. 'ursive' → logprob: -7.88038444519043
    6. 't' → logprob: -8.00538444519043
    7. 'urf' → logprob: -9.00538444519043
    8. 'use' → logprob: -9.00538444519043
    9. '_limit' → logprob: -9.13038444519043
    10. 'limit' → logprob: -9.38038444519043

Token 14: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -1.6240566083070007e-06
    2. 'depth' → logprob: -14.000001907348633
    3. ' limit' → logprob: -14.750001907348633
    4. 'lim' → logprob: -15.250001907348633
    5. '-' → logprob: -16.500001907348633
    6. '_' → logprob: -17.500001907348633
    7. 'Limit' → logprob: -18.375001907348633
    8. '_limit' → logprob: -18.500001907348633
    9. 'l' → logprob: -20.125001907348633
    10. 'stack' → logprob: -20.250001907348633

Token 15: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5213274309644476e-05
    2. ' (' → logprob: -12.125015258789062
    3. '("("' → logprob: -12.375015258789062
    4. '((' → logprob: -13.375015258789062
    5. '(

' → logprob: -13.750015258789062
    6. '(
' → logprob: -14.250015258789062
    7. '<|end|>' → logprob: -14.625015258789062
    8. '```' → logprob: -14.875015258789062
    9. '">(' → logprob: -15.500015258789062
    10. '(**' → logprob: -15.625015258789062

Token 16: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16047869622707367
    2. '100' → logprob: -1.9104787111282349
    3. ' ' → logprob: -8.410478591918945
    4. '1' → logprob: -10.660478591918945
    5. '   ' → logprob: -12.410478591918945
    6. '(' → logprob: -13.285478591918945
    7. '  ' → logprob: -14.035478591918945
    8. '500' → logprob: -14.535478591918945
    9. '300' → logprob: -14.535478591918945
    10. '400' → logprob: -15.160478591918945

Token 17: '**' (ID: 410)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.10094273835420609
    2. '000' → logprob: -2.600942850112915
    3. '0' → logprob: -4.600942611694336
    4. '**' → logprob: -4.600942611694336
    5. '7' → logprob: -6.600942611694336
    6. '6' → logprob: -7.975942611694336
    7. '8' → logprob: -11.350942611694336
    8. '5' → logprob: -11.850942611694336
    9. '007' → logprob: -12.975942611694336
    10. '4' → logprob: -13.850942611694336

Token 18: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0041504609398543835
    2. '9' → logprob: -5.754150390625
    3. '8' → logprob: -7.629150390625
    4. '6' → logprob: -7.629150390625
    5. '```' → logprob: -16.129150390625
    6. '**' → logprob: -17.254150390625
    7. ')' → logprob: -18.879150390625
    8. '+' → logprob: -19.254150390625
    9. ' ' → logprob: -19.379150390625
    10. '4' → logprob: -20.254150390625

Token 19: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.253090865968261e-06
    2. ' )' → logprob: -12.000009536743164
    3. ')
' → logprob: -12.875009536743164
    4. '))' → logprob: -15.750009536743164
    5. ' ' → logprob: -16.500009536743164
    6. '   ' → logprob: -16.625009536743164
    7. '),' → logprob: -17.125009536743164
    8. '}' → logprob: -17.500009536743164
    9. ')
' → logprob: -17.625009536743164
    10. ')return' → logprob: -18.375009536743164

Token 20: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21294108033180237
    2. '   ' → logprob: -1.96294105052948
    3. '    
' → logprob: -3.3379411697387695
    4. ' 
' → logprob: -5.7129411697387695
    5. ')' → logprob: -5.8379411697387695
    6. '\' → logprob: -5.9629411697387695
    7. '\n' → logprob: -6.3379411697387695
    8. '' → logprob: -6.7129411697387695
    9. ' threading' → logprob: -6.9629411697387695
    10. '```' → logprob: -7.4629411697387695

Token 21: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0978761687874794
    2. 'thread' → logprob: -3.2228760719299316
    3. ' threading' → logprob: -3.3478760719299316
    4. '    
' → logprob: -5.097876071929932
    5. ')' → logprob: -5.472876071929932
    6. ' thread' → logprob: -5.847876071929932
    7. '    ' → logprob: -6.972876071929932
    8. '(thread' → logprob: -7.347876071929932
    9. '
' → logprob: -7.722876071929932
    10. 't' → logprob: -8.22287654876709

Token 22: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2748229503631592
    2. '(' → logprob: -1.5248229503631592
    3. '_data' → logprob: -4.899823188781738
    4. '("")' → logprob: -5.149823188781738
    5. '=' → logprob: -5.774823188781738
    6. 'data' → logprob: -6.524823188781738
    7. '().' → logprob: -6.774823188781738
    8. ' =' → logprob: -7.524823188781738
    9. '_' → logprob: -7.899823188781738
    10. ')' → logprob: -8.274823188781738

Token 23: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.01716952957212925
    2. ' input' → logprob: -4.26716947555542
    3. 'sys' → logprob: -6.01716947555542
    4. 'input' → logprob: -7.64216947555542
    5. ' lambda' → logprob: -9.892169952392578
    6. ' ' → logprob: -11.267169952392578
    7. ' raw' → logprob: -11.892169952392578
    8. '	sys' → logprob: -12.017169952392578
    9. '=sys' → logprob: -13.017169952392578
    10. ' iter' → logprob: -13.017169952392578

Token 24: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.056142959743738174
    2. '.readline' → logprob: -3.056143045425415
    3. '.stdin' → logprob: -4.931142807006836
    4. ' .' → logprob: -9.306142807006836
    5. '.read' → logprob: -9.931142807006836
    6. '.setdefault' → logprob: -10.806142807006836
    7. '.Read' → logprob: -10.806142807006836
    8. '().' → logprob: -11.056142807006836
    9. '.​' → logprob: -11.056142807006836
    10. '​.' → logprob: -11.056142807006836

Token 25: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.012785444967448711
    2. 'read' → logprob: -4.5127854347229
    3. 'buffer' → logprob: -6.7627854347229
    4. '.read' → logprob: -8.387785911560059
    5. '<|end|>' → logprob: -8.887785911560059
    6. 'reader' → logprob: -9.637785911560059
    7. ' readline' → logprob: -9.637785911560059
    8. '.readlines' → logprob: -10.762785911560059
    9. '.' → logprob: -10.762785911560059
    10. '.buffer' → logprob: -11.137785911560059

Token 26: '

' (ID: 279)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.9949324131011963
    2. '   ' → logprob: -1.1199324131011963
    3. '
' → logprob: -1.9949324131011963
    4. '()' → logprob: -2.2449324131011963
    5. '(' → logprob: -3.9949324131011963
    6. '()
' → logprob: -4.744932174682617
    7. '\n' → logprob: -4.994932174682617
    8. '\' → logprob: -5.244932174682617
    9. '(
' → logprob: -5.369932174682617
    10. ')' → logprob: -5.744932174682617

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29146698117256165
    2. 'n' → logprob: -1.6664669513702393
    3. 't' → logprob: -2.7914669513702393
    4. 'thread' → logprob: -7.291467189788818
    5. ' n' → logprob: -7.416467189788818
    6. 'def' → logprob: -7.791467189788818
    7. 'try' → logprob: -8.41646671295166
    8. 'for' → logprob: -8.79146671295166
    9. 'N' → logprob: -9.04146671295166
    10. '    
' → logprob: -9.41646671295166

Token 28: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.020354194566607475
    2. 't' → logprob: -4.020354270935059
    3. 'N' (adapté à ' N') → logprob: -7.145354270935059
    4. '   ' → logprob: -7.145354270935059
    5. ' n' → logprob: -8.770354270935059
    6. 'thread' → logprob: -8.770354270935059
    7. 'try' → logprob: -9.020354270935059
    8. 'for' → logprob: -9.145354270935059
    9. 'T' → logprob: -10.270354270935059
    10. 'num' → logprob: -11.270354270935059

Token 29: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04647381976246834
    2. '=' → logprob: -3.546473741531372
    3. ' ' → logprob: -4.171473979949951
    4. ',' → logprob: -7.921473979949951
    5. ' ,' → logprob: -8.921473503112793
    6. '<|end|>' → logprob: -8.921473503112793
    7. '    ' → logprob: -9.046473503112793
    8. '  ' → logprob: -9.421473503112793
    9. ')' → logprob: -9.546473503112793
    10. ' =)' → logprob: -9.796473503112793

Token 30: ' M' (ID: 391)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.2516307830810547
    2. ' ' → logprob: -2.1266307830810547
    3. ' M' → logprob: -2.6266307830810547
    4. 'K' → logprob: -3.8766307830810547
    5. 'M' → logprob: -5.751630783081055
    6. ' space' → logprob: -6.626630783081055
    7. 'space' → logprob: -6.876630783081055
    8. ' Q' → logprob: -7.126630783081055
    9. ' input' → logprob: -7.126630783081055
    10. 'input' → logprob: -7.501630783081055

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054904740303754807
    2. '=' → logprob: -2.9299046993255615
    3. ',' → logprob: -10.80490493774414
    4. ' ' → logprob: -13.92990493774414
    5. ')' → logprob: -14.80490493774414
    6. ' ,' → logprob: -15.17990493774414
    7. '=input' → logprob: -15.42990493774414
    8. '<|end|>' → logprob: -16.05490493774414
    9. ' =)' → logprob: -16.17990493774414
    10. '=int' → logprob: -16.30490493774414

Token 32: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0010410251561552286
    2. 'map' → logprob: -6.876040935516357
    3. ' input' → logprob: -12.251041412353516
    4. ' ' → logprob: -12.876041412353516
    5. ' list' → logprob: -14.626041412353516
    6. '	map' → logprob: -16.126041412353516
    7. ' tuple' → logprob: -16.126041412353516
    8. 'input' → logprob: -16.376041412353516
    9. ' ma' → logprob: -16.751041412353516
    10. ' mapa' → logprob: -17.001041412353516

Token 33: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004654407035559416
    2. '(lambda' → logprob: -6.129654407501221
    3. '(int' → logprob: -6.254654407501221
    4. '(str' → logprob: -8.504653930664062
    5. '(input' → logprob: -9.129653930664062
    6. '<|end|>' → logprob: -9.629653930664062
    7. '('' → logprob: -10.629653930664062
    8. '(user' → logprob: -11.254653930664062
    9. ' (' → logprob: -11.504653930664062
    10. '()' → logprob: -11.754653930664062

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013685045763850212
    2. ',input' → logprob: -5.01368522644043
    3. '(' → logprob: -5.13868522644043
    4. '(input' → logprob: -7.26368522644043
    5. '(sys' → logprob: -8.88868522644043
    6. ')' → logprob: -9.13868522644043
    7. ' ,' → logprob: -9.63868522644043
    8. ',(' → logprob: -10.88868522644043
    9. ',int' → logprob: -10.88868522644043
    10. ' (' → logprob: -12.26368522644043

Token 35: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4740990400314331
    2. ' input' → logprob: -0.9740990400314331
    3. ' sys' → logprob: -11.849099159240723
    4. ')' → logprob: -12.099099159240723
    5. ' ' → logprob: -12.599099159240723
    6. 'sys' → logprob: -12.724099159240723
    7. '   ' → logprob: -14.099099159240723
    8. 'str' → logprob: -14.599099159240723
    9. ',input' → logprob: -14.599099159240723
    10. ' )' → logprob: -15.224099159240723

Token 36: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00012844942102674395
    2. '()' → logprob: -9.000128746032715
    3. '())' → logprob: -12.625128746032715
    4. ' ().' → logprob: -13.375128746032715
    5. '(' → logprob: -16.7501277923584
    6. '()
' → logprob: -18.0001277923584
    7. '()))' → logprob: -18.6251277923584
    8. ')' → logprob: -18.6251277923584
    9. '().'' → logprob: -18.7501277923584
    10. '('').' → logprob: -19.2501277923584

Token 37: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.47585785388946533
    2. 'strip' → logprob: -0.9758578538894653
    3. 'rstrip' → logprob: -6.350857734680176
    4. ')' → logprob: -10.725857734680176
    5. '())' → logprob: -12.725857734680176
    6. ' split' → logprob: -12.975857734680176
    7. 'read' → logprob: -13.225857734680176
    8. ' strip' → logprob: -13.225857734680176
    9. '().' → logprob: -13.350857734680176
    10. '()' → logprob: -14.475857734680176

Token 38: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024025145103223622
    2. '()' → logprob: -9.375240325927734
    3. '))' → logprob: -9.375240325927734
    4. '())' → logprob: -9.625240325927734
    5. ')
' → logprob: -13.250240325927734
    6. '`)' → logprob: -14.125240325927734
    7. ')`' → logprob: -14.250240325927734
    8. '(' → logprob: -14.625240325927734
    9. ' )' → logprob: -15.250240325927734
    10. ')")' → logprob: -15.625240325927734

Token 39: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1966547966003418
    2. '   ' → logprob: -1.1966547966003418
    3. '
' → logprob: -1.8216547966003418
    4. '    
' → logprob: -2.321654796600342
    5. ' 
' → logprob: -3.321654796600342
    6. 'n' → logprob: -4.071654796600342
    7. 'graph' → logprob: -4.071654796600342
    8. 'def' → logprob: -4.821654796600342
    9. '<|end|>' → logprob: -4.946654796600342
    10. ' ' → logprob: -5.071654796600342

Token 40: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5817521810531616
    2. ' graph' → logprob: -1.0817521810531616
    3. ' 
' → logprob: -3.331752300262451
    4. ')' → logprob: -3.456752300262451
    5. ' ' → logprob: -4.956752300262451
    6. 'a' → logprob: -5.706752300262451
    7. 'n' → logprob: -5.956752300262451
    8. 'd' → logprob: -6.456752300262451
    9. '
' → logprob: -6.456752300262451
    10. '   ' → logprob: -6.581752300262451

Token 41: ' On' (ID: 2160)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.5941841006278992
    2. ' dp' → logprob: -1.469184160232544
    3. 'graph' → logprob: -2.969184160232544
    4. 'dp' → logprob: -3.594184160232544
    5. '   ' → logprob: -3.719184160232544
    6. ' d' → logprob: -3.969184160232544
    7. ' tree' → logprob: -4.219183921813965
    8. 'd' → logprob: -4.719183921813965
    9. ' G' → logprob: -5.094183921813965
    10. ' adjacency' → logprob: -5.094183921813965

Token 42: ' crée' (ID: 102256)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0049933441914618015
    2. ' e' → logprob: -6.004993438720703
    3. 'es' → logprob: -6.504993438720703
    4. 'ed' → logprob: -8.379993438720703
    5. 'el' → logprob: -8.504993438720703
    6. 'eline' → logprob: -9.129993438720703
    7. 'ly' → logprob: -9.504993438720703
    8. '_e' → logprob: -9.879993438720703
    9. 'line' → logprob: -10.254993438720703
    10. 'eway' → logprob: -10.379993438720703

Token 43: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.5418452024459839
    2. ' a' → logprob: -2.0418453216552734
    3. ' ' → logprob: -2.1668453216552734
    4. ' une' → logprob: -2.2918453216552734
    5. ' l' → logprob: -3.7918453216552734
    6. 'a' → logprob: -4.041845321655273
    7. ' ' → logprob: -5.041845321655273
    8. 'l' → logprob: -5.041845321655273
    9. ' la' → logprob: -5.541845321655273
    10. ' le' → logprob: -5.541845321655273

Token 44: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.14105801284313202
    2. 'liste' → logprob: -2.5160579681396484
    3. ' graph' → logprob: -4.016057968139648
    4. 'gr' → logprob: -5.016057968139648
    5. ' list' → logprob: -5.391057968139648
    6. ' ' → logprob: -5.766057968139648
    7. 'list' → logprob: -5.766057968139648
    8. 's' → logprob: -6.141057968139648
    9. 'graph' → logprob: -6.266057968139648
    10. ' adjacency' → logprob: -6.391057968139648

Token 45: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.5756398439407349
    2. ' d' → logprob: -1.7006398439407349
    3. '[' → logprob: -2.0756397247314453
    4. 'd' → logprob: -2.2006397247314453
    5. '[]' → logprob: -2.3256397247314453
    6. ' de' → logprob: -2.3256397247314453
    7. 'des' → logprob: -3.5756397247314453
    8. 's' → logprob: -3.8256397247314453
    9. 'de' → logprob: -3.8256397247314453
    10. '_' → logprob: -4.200639724731445

Token 46: ' bool' (ID: 3792)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2927934527397156
    2. ' adjacency' → logprob: -2.0427935123443604
    3. ' lists' → logprob: -2.5427935123443604
    4. ' listes' → logprob: -3.6677935123443604
    5. '[' → logprob: -5.167793273925781
    6. ' []' → logprob: -5.917793273925781
    7. 'lists' → logprob: -6.292793273925781
    8. ' graph' → logprob: -6.667793273925781
    9. 'list' → logprob: -6.667793273925781
    10. ' list' → logprob: -6.792793273925781

Token 47: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.010960804298520088
    2. 'éan' → logprob: -5.635960578918457
    3. 'és' → logprob: -5.885960578918457
    4. '[' → logprob: -6.135960578918457
    5. 'ean' → logprob: -8.135960578918457
    6. 's' → logprob: -8.135960578918457
    7. 'eens' → logprob: -8.135960578918457
    8. 'ées' → logprob: -8.260960578918457
    9. ']' → logprob: -8.635960578918457
    10. '[]' → logprob: -9.010960578918457

Token 48: 'ens' (ID: 696)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.33245521783828735
    2. 'ens' → logprob: -1.3324551582336426
    3. 'an' → logprob: -4.957455158233643
    4. 'en' → logprob: -5.832455158233643
    5. 'ns' → logprob: -5.832455158233643
    6. 'es' → logprob: -5.832455158233643
    7. 'ennes' → logprob: -6.707455158233643
    8. 's' → logprob: -7.832455158233643
    9. 'a' → logprob: -7.957455158233643
    10. 'n' → logprob: -8.0824556350708

Token 49: ' pour' (ID: 1930)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.592249870300293
    2. ' ' → logprob: -1.217249870300293
    3. 's' → logprob: -2.092249870300293
    4. ',' → logprob: -4.842249870300293
    5. ' [' → logprob: -5.342249870300293
    6. '[]' → logprob: -5.467249870300293
    7. ' visited' → logprob: -6.967249870300293
    8. '_' → logprob: -7.092249870300293
    9. ' `' → logprob: -7.092249870300293
    10. '<|end|>' → logprob: -7.217249870300293

Token 50: ' chaque' (ID: 21194)
  Prédit: ' mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mar' → logprob: -0.20944692194461823
    2. 'su' → logprob: -2.584446907043457
    3. ' suivre' → logprob: -3.709446907043457
    4. 'mar' → logprob: -3.834446907043457
    5. ' garder' → logprob: -4.584446907043457
    6. 'vis' → logprob: -5.334446907043457
    7. '   ' → logprob: -5.459446907043457
    8. ' représ' → logprob: -5.459446907043457
    9. ' mark' → logprob: -5.459446907043457
    10. 's' → logprob: -5.709446907043457

Token 51: ' ligne' (ID: 19583)
  Prédit: ' sommet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -1.036961317062378
    2. ' ' → logprob: -1.161961317062378
    3. ' node' → logprob: -1.911961317062378
    4. ' noe' → logprob: -3.286961317062378
    5. ')' → logprob: -4.036961555480957
    6. ' case' → logprob: -4.286961555480957
    7. '(' → logprob: -4.411961555480957
    8. ' )' → logprob: -4.411961555480957
    9. ' somm' → logprob: -4.411961555480957
    10. 's' → logprob: -4.974461555480957

Token 52: ' avec' (ID: 3937)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1324650049209595
    2. '[' → logprob: -1.1324650049209595
    3. 's' → logprob: -1.5074650049209595
    4. '<|end|>' → logprob: -3.25746488571167
    5. ' ' → logprob: -4.25746488571167
    6. '[]' → logprob: -4.25746488571167
    7. ' ,' → logprob: -4.38246488571167
    8. '   ' → logprob: -4.38246488571167
    9. ''s' → logprob: -4.88246488571167
    10. '```' → logprob: -5.25746488571167

Token 53: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5067157745361328
    2. ' False' → logprob: -1.7567157745361328
    3. 'False' → logprob: -2.506715774536133
    4. ' True' → logprob: -3.506715774536133
    5. '[' → logprob: -4.006715774536133
    6. ' ' → logprob: -4.631715774536133
    7. ' un' → logprob: -4.881715774536133
    8. ' [' → logprob: -4.881715774536133
    9. '[]' → logprob: -5.006715774536133
    10. '_' → logprob: -5.006715774536133

Token 54: ' éléments' (ID: 57375)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ct' → logprob: -1.6366403102874756
    2. 'u' → logprob: -2.1366403102874756
    3. '[' → logprob: -2.3866403102874756
    4. 'pp' → logprob: -2.5116403102874756
    5. 'c' → logprob: -2.6366403102874756
    6. 'ucun' → logprob: -3.2616403102874756
    7. 'j' → logprob: -3.3866403102874756
    8. 'l' → logprob: -3.5116403102874756
    9. 'rray' → logprob: -3.6366403102874756
    10. 'lle' → logprob: -3.7616403102874756

Token 55: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9485006332397461
    2. '[' → logprob: -1.823500633239746
    3. ' ' → logprob: -2.198500633239746
    4. ',' → logprob: -2.448500633239746
    5. ' de' → logprob: -3.073500633239746
    6. '[]' → logprob: -3.198500633239746
    7. ' =' → logprob: -3.448500633239746
    8. ' s' → logprob: -3.448500633239746
    9. ' [' → logprob: -3.948500633239746
    10. ' ,' → logprob: -4.073500633239746

Token 56: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6024193167686462
    2. '[' → logprob: -1.352419376373291
    3. 's' → logprob: -3.227419376373291
    4. ',' → logprob: -3.352419376373291
    5. '_' → logprob: -3.352419376373291
    6. ' ' → logprob: -3.602419376373291
    7. '   ' → logprob: -3.977419376373291
    8. ' a' → logprob: -4.852419376373291
    9. '[a' → logprob: -5.352419376373291
    10. 'n' → logprob: -5.852419376373291

Token 57: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.290212631225586
    2. 'a' → logprob: -1.290212631225586
    3. ' [' → logprob: -1.290212631225586
    4. ' a' → logprob: -2.290212631225586
    5. '[a' → logprob: -4.165212631225586
    6. '_' → logprob: -4.290212631225586
    7. ' True' → logprob: -5.165212631225586
    8. ' ' → logprob: -5.665212631225586
    9. 'True' → logprob: -5.665212631225586
    10. ')' → logprob: -5.915212631225586

Token 58: ' indexed' (ID: 44010)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1934781074523926
    2. ' [' → logprob: -1.5684781074523926
    3. ' True' → logprob: -1.8184781074523926
    4. 'a' → logprob: -2.9434781074523926
    5. 'range' → logprob: -3.0684781074523926
    6. 'True' → logprob: -3.0684781074523926
    7. ' a' → logprob: -3.8184781074523926
    8. '[a' → logprob: -3.8184781074523926
    9. ' for' → logprob: -4.068478107452393
    10. ' ' → logprob: -4.193478107452393

Token 59: ' from' (ID: 591)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0320404767990112
    2. ' ' → logprob: -1.9070404767990112
    3. '_' → logprob: -2.282040596008301
    4. ' from' → logprob: -2.407040596008301
    5. '[' → logprob: -2.782040596008301
    6. '=' → logprob: -3.407040596008301
    7. 'from' → logprob: -3.407040596008301
    8. ' by' → logprob: -3.532040596008301
    9. 'a' → logprob: -3.657040596008301
    10. 's' → logprob: -3.782040596008301

Token 60: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22756053507328033
    2. ' ' → logprob: -1.6025605201721191
    3. '1' → logprob: -6.227560520172119
    4. ' ' → logprob: -9.477560997009277
    5. ' zero' → logprob: -9.727560997009277
    6. 'a' → logprob: -11.727560997009277
    7. ' zéro' → logprob: -12.102560997009277
    8. 'zero' → logprob: -12.977560997009277
    9. ' a' → logprob: -13.102560997009277
    10. '```' → logprob: -13.415060997009277

Token 61: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004896908067166805
    2. ' ' → logprob: -5.754897117614746
    3. '1' → logprob: -6.379897117614746
    4. ' ' → logprob: -12.317397117614746
    5. ' zero' → logprob: -12.692397117614746
    6. ' zéro' → logprob: -13.067397117614746
    7. 'a' → logprob: -13.192397117614746
    8. '```' → logprob: -13.254897117614746
    9. 'zero' → logprob: -13.567397117614746
    10. '[' → logprob: -13.879897117614746

Token 62: ' to' (ID: 316)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8259416818618774
    2. '_' → logprob: -1.2009416818618774
    3. '[' → logprob: -2.200941562652588
    4. ' ' → logprob: -2.700941562652588
    5. ',' → logprob: -3.450941562652588
    6. ' _' → logprob: -4.200941562652588
    7. '_a' → logprob: -5.075941562652588
    8. ' a' → logprob: -5.075941562652588
    9. ' ,' → logprob: -5.700941562652588
    10. ' [' → logprob: -5.825941562652588

Token 63: ' a' (ID: 261)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.7684934735298157
    2. ' N' → logprob: -1.018493413925171
    3. 'N' → logprob: -2.143493413925171
    4. 'M' → logprob: -2.893493413925171
    5. ' ' → logprob: -6.39349365234375
    6. ' a' → logprob: -7.76849365234375
    7. 'a' → logprob: -8.14349365234375
    8. 'A' → logprob: -9.76849365234375
    9. ' A' → logprob: -10.01849365234375
    10. '0' → logprob: -11.76849365234375

Token 64: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8883582353591919
    2. '+' → logprob: -1.513358235359192
    3. ' ' → logprob: -2.0133581161499023
    4. ',' → logprob: -2.6383581161499023
    5. 'a' → logprob: -2.6383581161499023
    6. ')' → logprob: -4.138358116149902
    7. 'n' → logprob: -4.513358116149902
    8. ' ,' → logprob: -4.638358116149902
    9. '[' → logprob: -5.013358116149902
    10. ' _' → logprob: -5.138358116149902

Token 65: ' donc' (ID: 14206)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3555925786495209
    2. ' a' → logprob: -1.8555926084518433
    3. 'a' → logprob: -2.3555924892425537
    4. '    ' → logprob: -3.9805924892425537
    5. '   ' → logprob: -5.355592727661133
    6. '[' → logprob: -5.855592727661133
    7. ' [' → logprob: -5.980592727661133
    8. '_' → logprob: -6.480592727661133
    9. '0' → logprob: -6.480592727661133
    10. ' _' → logprob: -6.605592727661133

Token 66: ' on' (ID: 402)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9986213445663452
    2. ' M' → logprob: -1.4986213445663452
    3. ' on' → logprob: -1.8736213445663452
    4. ' ' → logprob: -2.6236214637756348
    5. ' N' → logprob: -3.2486214637756348
    6. 'a' → logprob: -3.6236214637756348
    7. ' ' → logprob: -3.9986214637756348
    8. ' range' → logprob: -4.248621463775635
    9. ' `' → logprob: -4.498621463775635
    10. '0' → logprob: -4.623621463775635

Token 67: ' stock' (ID: 6546)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2390551567077637
    2. ' met' → logprob: -1.6140551567077637
    3. 'met' → logprob: -1.8640551567077637
    4. 'n' → logprob: -2.8640551567077637
    5. ' a' → logprob: -3.1140551567077637
    6. 'initial' → logprob: -3.2390551567077637
    7. 'util' → logprob: -3.8640551567077637
    8. 'aj' → logprob: -4.239055156707764
    9. ' crée' → logprob: -4.239055156707764
    10. ' initialise' → logprob: -4.239055156707764

Token 68: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1984754353761673
    2. 'r' → logprob: -2.5734753608703613
    3. 'n' → logprob: -2.9484753608703613
    4. 'ge' → logprob: -4.323475360870361
    5. 'é' → logprob: -4.573475360870361
    6. 'ue' → logprob: -4.698475360870361
    7. 'nt' → logprob: -5.573475360870361
    8. 'u' → logprob: -5.948475360870361
    9. 're' → logprob: -6.448475360870361
    10. 't' → logprob: -6.448475360870361

Token 69: ' à' (ID: 1221)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8678925633430481
    2. ' M' → logprob: -1.9928925037384033
    3. ' False' → logprob: -2.2428925037384033
    4. ' None' → logprob: -2.3678925037384033
    5. '[' → logprob: -2.9928925037384033
    6. 'a' → logprob: -3.4928925037384033
    7. ' True' → logprob: -3.6178925037384033
    8. '    ' → logprob: -3.8678925037384033
    9. ' [' → logprob: -3.8678925037384033
    10. ' `' → logprob: -4.242892742156982

Token 70: ' l' (ID: 305)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.6402692198753357
    2. ' N' → logprob: -1.6402692794799805
    3. 'a' → logprob: -2.5152692794799805
    4. ' a' → logprob: -2.7652692794799805
    5. 'N' → logprob: -3.3902692794799805
    6. '[' → logprob: -3.7652692794799805
    7. ' ' → logprob: -4.0152692794799805
    8. 'M' → logprob: -4.0152692794799805
    9. ' [' → logprob: -4.1402692794799805
    10. 'l' → logprob: -5.6402692794799805

Token 71: ''ind' (ID: 82245)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05562384054064751
    2. '[' → logprob: -3.930623769760132
    3. 'e' → logprob: -4.805624008178711
    4. ' index' → logprob: -4.805624008178711
    5. 'index' → logprob: -5.055624008178711
    6. 'i' → logprob: -6.305624008178711
    7. '`' → logprob: -6.930624008178711
    8. ''a' → logprob: -7.055624008178711
    9. '1' → logprob: -7.305624008178711
    10. '```' → logprob: -7.430624008178711

Token 72: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.06201395019888878
    2. 'e' → logprob: -2.812013864517212
    3. 'é' → logprob: -10.687013626098633
    4. '```' → logprob: -12.437013626098633
    5. 'ice' → logprob: -12.937013626098633
    6. 'екс' → logprob: -13.187013626098633
    7. 'exe' → logprob: -13.437013626098633
    8. 'exp' → logprob: -13.437013626098633
    9. 'exc' → logprob: -13.437013626098633
    10. 'eks' → logprob: -13.937013626098633

Token 73: ' b' (ID: 287)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6343379020690918
    2. '0' → logprob: -0.8843379020690918
    3. '_' → logprob: -3.634337902069092
    4. 's' → logprob: -4.134337902069092
    5. '1' → logprob: -5.384337902069092
    6. ' _' → logprob: -5.384337902069092
    7. '[' → logprob: -5.884337902069092
    8. ' 
' → logprob: -7.384337902069092
    9. 'a' → logprob: -8.13433837890625
    10. ' a' → logprob: -8.13433837890625

Token 74: '-' (ID: 12)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10781510174274445
    2. '_' → logprob: -3.4828150272369385
    3. 'a' → logprob: -4.232815265655518
    4. ',' → logprob: -4.482815265655518
    5. ' ' → logprob: -4.482815265655518
    6. 's' → logprob: -4.857815265655518
    7. '   ' → logprob: -5.107815265655518
    8. '[]' → logprob: -6.232815265655518
    9. '```' → logprob: -6.357815265655518
    10. ' [' → logprob: -6.607815265655518

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010244477540254593
    2. ' ' → logprob: -4.635244369506836
    3. '0' → logprob: -8.635244369506836
    4. '2' → logprob: -9.510244369506836
    5. 'b' → logprob: -9.510244369506836
    6. ' b' → logprob: -10.010244369506836
    7. '```' → logprob: -10.135244369506836
    8. ' -' → logprob: -11.135244369506836
    9. '-' → logprob: -11.385244369506836
    10. '    ' → logprob: -11.385244369506836

Token 76: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4952961206436157
    2. ' ' → logprob: -1.4952961206436157
    3. '   ' → logprob: -1.4952961206436157
    4. ')' → logprob: -2.370296001434326
    5. '
' → logprob: -2.995296001434326
    6. '    
' → logprob: -3.370296001434326
    7. 'a' → logprob: -3.745296001434326
    8. ',' → logprob: -3.870296001434326
    9. ' 
' → logprob: -3.870296001434326
    10. '<|end|>' → logprob: -4.245296001434326

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6583032011985779
    2. ' ' → logprob: -1.0333032608032227
    3. '    
' → logprob: -3.4083032608032227
    4. '    ' → logprob: -3.7833032608032227
    5. ' 
' → logprob: -3.9083032608032227
    6. '\' → logprob: -4.158303260803223
    7. ')' → logprob: -4.908303260803223
    8. '     
' → logprob: -5.408303260803223
    9. '[' → logprob: -5.658303260803223
    10. '
' → logprob: -5.783303260803223

Token 78: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3750190734863281
    2. ' 
' → logprob: -2.750019073486328
    3. '   ' → logprob: -3.000019073486328
    4. '
' → logprob: -3.000019073486328
    5. 's' → logprob: -3.750019073486328
    6. '    
' → logprob: -4.500019073486328
    7. 'n' → logprob: -4.500019073486328
    8. 'b' → logprob: -4.750019073486328
    9. ' lines' → logprob: -4.750019073486328
    10. '[' → logprob: -5.000019073486328

Token 79: ' L' (ID: 451)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31965941190719604
    2. 'b' → logprob: -3.194659471511841
    3. 'graph' → logprob: -3.444659471511841
    4. 's' → logprob: -3.819659471511841
    5. 'grid' → logprob: -4.069659233093262
    6. '   ' → logprob: -4.069659233093262
    7. ' grid' → logprob: -4.069659233093262
    8. ' graph' → logprob: -4.319659233093262
    9. ' a' → logprob: -4.319659233093262
    10. 'l' → logprob: -4.569659233093262

Token 80: ''ind' (ID: 82245)
  Prédit: 'ignes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ignes' → logprob: -0.4734666049480438
    2. 'ines' → logprob: -1.9734666347503662
    3. '   ' → logprob: -3.223466634750366
    4. 'a' → logprob: -3.348466634750366
    5. 'ine' → logprob: -3.473466634750366
    6. 'ist' → logprob: -3.723466634750366
    7. 'es' → logprob: -4.098466396331787
    8. 'igne' → logprob: -4.348466396331787
    9. 'iste' → logprob: -4.473466396331787
    10. 'e' → logprob: -4.598466396331787

Token 81: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.026990247890353203
    2. 'e' → logprob: -4.0269904136657715
    3. 'ices' → logprob: -5.5269904136657715
    4. 'ice' → logprob: -6.1519904136657715
    5. 'exp' → logprob: -7.5269904136657715
    6. 'dex' → logprob: -7.5269904136657715
    7. 'def' → logprob: -8.651989936828613
    8. 'é' → logprob: -8.651989936828613
    9. 'expl' → logprob: -9.151989936828613
    10. '   ' → logprob: -9.151989936828613

Token 82: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4772135317325592
    2. '0' → logprob: -1.9772135019302368
    3. ' b' → logprob: -2.2272136211395264
    4. 's' → logprob: -2.6022136211395264
    5. 'b' → logprob: -4.477213382720947
    6. ' s' → logprob: -4.727213382720947
    7. ' de' → logprob: -5.352213382720947
    8. ' des' → logprob: -5.352213382720947
    9. '    ' → logprob: -5.477213382720947
    10. ' #' → logprob: -5.727213382720947

Token 83: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0474315881729126
    2. 'a' → logprob: -1.6724315881729126
    3. 's' → logprob: -1.6724315881729126
    4. ' chaque' → logprob: -2.172431468963623
    5. ' l' → logprob: -2.547431468963623
    6. ' a' → logprob: -4.047431468963623
    7. 'b' → logprob: -4.422431468963623
    8. 'l' → logprob: -4.547431468963623
    9. ' départ' → logprob: -4.797431468963623
    10. ' ligne' → logprob: -5.047431468963623

Token 84: ' ligne' (ID: 19583)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.6988698840141296
    2. ' ligne' → logprob: -1.1988699436187744
    3. ' première' → logprob: -2.8238699436187744
    4. 'liste' → logprob: -3.3238699436187744
    5. 's' → logprob: -3.9488699436187744
    6. 'ligne' → logprob: -3.9488699436187744
    7. 'prem' → logprob: -4.323869705200195
    8. ' ' → logprob: -4.698869705200195
    9. ' dernière' → logprob: -5.261369705200195
    10. 'l' → logprob: -5.448869705200195

Token 85: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4472084939479828
    2. 's' → logprob: -1.6972085237503052
    3. '_' → logprob: -2.1972084045410156
    4. ',' → logprob: -4.322208404541016
    5. 'a' → logprob: -4.572208404541016
    6. '[' → logprob: -4.697208404541016
    7. ' =' → logprob: -5.072208404541016
    8. ')' → logprob: -5.322208404541016
    9. '   ' → logprob: -5.947208404541016
    10. ' ,' → logprob: -6.322208404541016

Token 86: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17357514798641205
    2. '0' → logprob: -2.7985751628875732
    3. ' N' → logprob: -3.2985751628875732
    4. ' M' → logprob: -3.7985751628875732
    5. ' a' → logprob: -4.423574924468994
    6. '    ' → logprob: -4.673574924468994
    7. ' i' → logprob: -5.423574924468994
    8. ' b' → logprob: -5.548574924468994
    9. 'a' → logprob: -5.923574924468994
    10. '  ' → logprob: -6.923574924468994

Token 87: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0571362972259521
    2. ' ' → logprob: -1.0571362972259521
    3. ' l' → logprob: -2.682136297225952
    4. '1' → logprob: -2.807136297225952
    5. 'p' → logprob: -3.057136297225952
    6. '0' → logprob: -3.682136297225952
    7. ' la' → logprob: -3.932136297225952
    8. 'l' → logprob: -3.932136297225952
    9. ' M' → logprob: -4.307136535644531
    10. 'f' → logprob: -5.057136535644531

Token 88: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23407891392707825
    2. 'l' → logprob: -2.984078884124756
    3. ' ' → logprob: -3.109078884124756
    4. '1' → logprob: -3.234078884124756
    5. 'a' → logprob: -4.109078884124756
    6. 'b' → logprob: -4.359078884124756
    7. ' M' → logprob: -4.484078884124756
    8. 'M' → logprob: -4.859078884124756
    9. 'i' → logprob: -5.484078884124756
    10. ' l' → logprob: -5.484078884124756

Token 89: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19279900193214417
    2. '0' → logprob: -2.6927990913391113
    3. ' 
' → logprob: -2.8177990913391113
    4. '    
' → logprob: -4.567799091339111
    5. '    ' → logprob: -5.192799091339111
    6. '2' → logprob: -5.442799091339111
    7. '     
' → logprob: -5.817799091339111
    8. '4' → logprob: -6.067799091339111
    9. '   
' → logprob: -6.067799091339111
    10. '  
' → logprob: -6.317799091339111

Token 90: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.5049675107002258
    2. 'N' → logprob: -1.254967451095581
    3. ' M' → logprob: -2.379967451095581
    4. 'M' → logprob: -4.25496768951416
    5. ' ' → logprob: -5.37996768951416
    6. '	N' → logprob: -11.75496768951416
    7. ' ' → logprob: -12.00496768951416
    8. ' a' → logprob: -12.12996768951416
    9. '  ' → logprob: -12.62996768951416
    10. '<|end|>' → logprob: -12.87996768951416

Token 91: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4859395921230316
    2. '
' → logprob: -2.1109395027160645
    3. '    
' → logprob: -2.1109395027160645
    4. ' 
' → logprob: -2.7359395027160645
    5. '<|end|>' → logprob: -3.7359395027160645
    6. ' ' → logprob: -4.4859395027160645
    7. '  
' → logprob: -4.8609395027160645
    8. '\' → logprob: -4.9859395027160645
    9. '```' → logprob: -5.3609395027160645
    10. '   
' → logprob: -5.4859395027160645

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017751846462488174
    2. '    
' → logprob: -4.767751693725586
    3. '```' → logprob: -6.017751693725586
    4. '
' → logprob: -6.642751693725586
    5. '<|end|>' → logprob: -7.017751693725586
    6. ' lines' → logprob: -7.142751693725586
    7. 'a' → logprob: -7.267751693725586
    8. '    ' → logprob: -7.767751693725586
    9. ' 
' → logprob: -8.392751693725586
    10. 'graph' → logprob: -8.392751693725586

Token 93: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6607013940811157
    2. 'graph' → logprob: -1.5357013940811157
    3. 'a' → logprob: -2.660701274871826
    4. ' graph' → logprob: -3.035701274871826
    5. '    
' → logprob: -3.660701274871826
    6. 'visited' → logprob: -3.910701274871826
    7. ' lines' → logprob: -4.285701274871826
    8. 'dp' → logprob: -4.910701274871826
    9. 's' → logprob: -5.035701274871826
    10. 'b' → logprob: -5.160701274871826

Token 94: ' On' (ID: 2160)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -1.4448848962783813
    2. ' grid' → logprob: -1.8198848962783813
    3. 'graph' → logprob: -2.069884777069092
    4. ' lines' → logprob: -2.319884777069092
    5. 'visited' → logprob: -2.944884777069092
    6. ' visited' → logprob: -3.069884777069092
    7. 'a' → logprob: -3.444884777069092
    8. 'grid' → logprob: -3.444884777069092
    9. 'lines' → logprob: -3.444884777069092
    10. 'dp' → logprob: -3.569884777069092

Token 95: ' peut' (ID: 9216)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.3014034032821655
    2. ' stock' → logprob: -1.8014034032821655
    3. ' a' → logprob: -2.176403522491455
    4. ' crée' → logprob: -2.176403522491455
    5. ' va' → logprob: -3.176403522491455
    6. ' initialize' → logprob: -3.301403522491455
    7. 'contin' → logprob: -3.676403522491455
    8. ' peut' → logprob: -3.801403522491455
    9. 's' → logprob: -3.926403522491455
    10. 'a' → logprob: -4.301403522491455

Token 96: ' utiliser' (ID: 43227)
  Prédit: ' utiliser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utiliser' → logprob: -0.9141545295715332
    2. ' stock' → logprob: -1.4141545295715332
    3. ' créer' → logprob: -3.164154529571533
    4. 'mettre' → logprob: -3.289154529571533
    5. ' continuer' → logprob: -3.414154529571533
    6. ' faire' → logprob: -3.539154529571533
    7. 'faire' → logprob: -3.789154529571533
    8. ' mettre' → logprob: -4.164154529571533
    9. 'stock' → logprob: -4.289154529571533
    10. 'penser' → logprob: -4.414154529571533

Token 97: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.3068467080593109
    2. ' une' → logprob: -1.6818467378616333
    3. 'un' → logprob: -3.6818466186523438
    4. '[]' → logprob: -4.806846618652344
    5. 'une' → logprob: -4.806846618652344
    6. ' [' → logprob: -4.931846618652344
    7. ' a' → logprob: -5.056846618652344
    8. ' des' → logprob: -5.181846618652344
    9. '[' → logprob: -5.306846618652344
    10. 'a' → logprob: -5.556846618652344

Token 98: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.8120812177658081
    2. 'liste' → logprob: -1.437081217765808
    3. 'list' → logprob: -2.3120813369750977
    4. ' list' → logprob: -2.3120813369750977
    5. ' defaultdict' → logprob: -2.8120813369750977
    6. 'default' → logprob: -4.687081336975098
    7. ' array' → logprob: -5.312081336975098
    8. 's' → logprob: -5.437081336975098
    9. ' default' → logprob: -5.812081336975098
    10. '[]' → logprob: -5.812081336975098

Token 99: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0489497184753418
    2. '[' → logprob: -1.1739497184753418
    3. ' of' → logprob: -2.173949718475342
    4. '[]' → logprob: -2.423949718475342
    5. 's' → logprob: -3.423949718475342
    6. 'd' → logprob: -4.423949718475342
    7. 'de' → logprob: -4.548949718475342
    8. ' d' → logprob: -4.548949718475342
    9. '<|end|>' → logprob: -4.548949718475342
    10. '[
' → logprob: -4.798949718475342

Token 100: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6886622309684753
    2. ' listes' → logprob: -1.5636622905731201
    3. 'sets' → logprob: -2.43866229057312
    4. 'lists' → logprob: -2.93866229057312
    5. ' sets' → logprob: -3.43866229057312
    6. ' lists' → logprob: -3.93866229057312
    7. '[N' → logprob: -4.188662052154541
    8. '[' → logprob: -4.438662052154541
    9. 'bool' → logprob: -4.438662052154541
    10. ' N' → logprob: -4.438662052154541

Token 101: ' taille' (ID: 41644)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08377860486507416
    2. '[' → logprob: -2.8337786197662354
    3. ',' → logprob: -5.208778381347656
    4. '[
' → logprob: -5.708778381347656
    5. '_' → logprob: -5.958778381347656
    6. '   ' → logprob: -6.083778381347656
    7. ' s' → logprob: -6.583778381347656
    8. ' ' → logprob: -6.583778381347656
    9. '
' → logprob: -6.708778381347656
    10. ' [
' → logprob: -7.708778381347656

Token 102: ' N' (ID: 478)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.0556656122207642
    2. 's' → logprob: -1.1806656122207642
    3. '[N' → logprob: -2.3056654930114746
    4. ' N' → logprob: -2.4306654930114746
    5. ' ' → logprob: -2.5556654930114746
    6. '[' → logprob: -3.8056654930114746
    7. ' =' → logprob: -3.9306654930114746
    8. ' (' → logprob: -4.555665493011475
    9. 'N' → logprob: -5.305665493011475
    10. '(N' → logprob: -5.680665493011475

Token 103: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3346606492996216
    2. '   ' → logprob: -1.5846606492996216
    3. ',' → logprob: -2.209660530090332
    4. ')' → logprob: -2.334660530090332
    5. 'for' → logprob: -3.084660530090332
    6. ' [' → logprob: -3.209660530090332
    7. ' ' → logprob: -3.209660530090332
    8. ' for' → logprob: -3.584660530090332
    9. '[N' → logprob: -3.709660530090332
    10. ']' → logprob: -4.084660530090332

Token 104: ' avec' (ID: 3937)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.3051854968070984
    2. 'M' → logprob: -1.8051855564117432
    3. ' [' → logprob: -2.430185556411743
    4. '[' → logprob: -5.680185317993164
    5. '[M' → logprob: -6.555185317993164
    6. '   ' → logprob: -7.055185317993164
    7. '[
' → logprob: -7.305185317993164
    8. ' size' → logprob: -7.430185317993164
    9. ' [
' → logprob: -7.430185317993164
    10. 'a' → logprob: -7.930185317993164

Token 105: ' ligne' (ID: 19583)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.30648255348205566
    2. 'M' → logprob: -1.8064825534820557
    3. ' [' → logprob: -2.6814825534820557
    4. '[' → logprob: -3.9314825534820557
    5. '[M' → logprob: -4.681482315063477
    6. 'a' → logprob: -7.306482315063477
    7. ' a' → logprob: -7.806482315063477
    8. '[]' → logprob: -7.806482315063477
    9. '[a' → logprob: -8.306482315063477
    10. ' ' → logprob: -9.056482315063477

Token 106: ' i' (ID: 575)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.016867274418473244
    2. ' =' → logprob: -4.266867160797119
    3. '_s' → logprob: -7.266867160797119
    4. '_' → logprob: -8.016867637634277
    5. 'es' → logprob: -8.016867637634277
    6. '=' → logprob: -8.266867637634277
    7. '[]' → logprob: -8.516867637634277
    8. '=[]' → logprob: -8.766867637634277
    9. ' s' → logprob: -9.141867637634277
    10. '_sizes' → logprob: -9.141867637634277

Token 107: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.044530656188726425
    2. '=' → logprob: -4.294530868530273
    3. '+' → logprob: -4.794530868530273
    4. '=[]' → logprob: -5.419530868530273
    5. ']' → logprob: -5.794530868530273
    6. '=[' → logprob: -5.919530868530273
    7. ')' → logprob: -6.294530868530273
    8. '[' → logprob: -6.669530868530273
    9. ':' → logprob: -6.669530868530273
    10. '[]' → logprob: -6.794530868530273

Token 108: ' taille' (ID: 41644)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.4500705599784851
    2. 'M' → logprob: -1.7000706195831299
    3. 'length' → logprob: -2.82507061958313
    4. '[M' → logprob: -3.32507061958313
    5. ' taille' → logprob: -3.82507061958313
    6. 'size' → logprob: -4.325070381164551
    7. ' M' → logprob: -4.450070381164551
    8. 'a' → logprob: -4.700070381164551
    9. 'long' → logprob: -4.825070381164551
    10. '[' → logprob: -5.450070381164551

Token 109: ' i' (ID: 575)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.3672535717487335
    2. ' M' → logprob: -1.2422535419464111
    3. 'a' → logprob: -4.24225378036499
    4. ' a' → logprob: -5.99225378036499
    5. 'N' → logprob: -6.86725378036499
    6. ' ' → logprob: -8.742253303527832
    7. ' N' → logprob: -8.742253303527832
    8. 'b' → logprob: -9.742253303527832
    9. '[' → logprob: -10.242253303527832
    10. '1' → logprob: -10.242253303527832

Token 110: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1952779293060303
    2. '   ' → logprob: -1.4452779293060303
    3. ' ' → logprob: -1.5702779293060303
    4. '
' → logprob: -2.4452779293060303
    5. ' 
' → logprob: -3.3202779293060303
    6. '    
' → logprob: -3.6952779293060303
    7. ',' → logprob: -4.195278167724609
    8. '_' → logprob: -4.445278167724609
    9. '    ' → logprob: -4.695278167724609
    10. 'def' → logprob: -4.695278167724609

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004293976817280054
    2. '    
' → logprob: -5.754293918609619
    3. '
' → logprob: -7.754293918609619
    4. '    ' → logprob: -9.129294395446777
    5. 'def' → logprob: -9.754294395446777
    6. '   
' → logprob: -9.754294395446777
    7. ' lines' → logprob: -9.879294395446777
    8. ' 
' → logprob: -10.129294395446777
    9. ' ' → logprob: -10.254294395446777
    10. 'a' → logprob: -10.254294395446777

Token 112: ' covered' (ID: 13083)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8593000173568726
    2. 'a' → logprob: -1.9843000173568726
    3. 'lines' → logprob: -2.109300136566162
    4. 'l' → logprob: -2.734300136566162
    5. 'graph' → logprob: -3.359300136566162
    6. 'board' → logprob: -3.609300136566162
    7. 'grid' → logprob: -3.859300136566162
    8. 'matrix' → logprob: -3.859300136566162
    9. ' lines' → logprob: -4.109300136566162
    10. 'b' → logprob: -4.609300136566162

Token 113: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.437358021736145
    2. ' =' → logprob: -1.062358021736145
    3. '_' → logprob: -5.5623579025268555
    4. '_lines' → logprob: -5.5623579025268555
    5. 's' → logprob: -8.187357902526855
    6. '[' → logprob: -8.562357902526855
    7. '_rows' → logprob: -8.937357902526855
    8. '=[' → logprob: -9.312357902526855
    9. '_lists' → logprob: -9.687357902526855
    10. ' ' → logprob: -9.937357902526855

Token 114: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.03611486032605171
    2. ' [[' → logprob: -4.036114692687988
    3. '[' → logprob: -4.411114692687988
    4. ' [[]' → logprob: -5.536114692687988
    5. '[[' → logprob: -6.411114692687988
    6. ' ' → logprob: -10.536114692687988
    7. '[n' → logprob: -11.411114692687988
    8. '[list' → logprob: -11.661114692687988
    9. '[i' → logprob: -12.286114692687988
    10. ' []' → logprob: -12.286114692687988

Token 115: 'byte' (ID: 7216)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1607789844274521
    2. ' [' → logprob: -1.9107789993286133
    3. '[]' → logprob: -8.160778999328613
    4. 'False' → logprob: -9.410778999328613
    5. '   ' → logprob: -9.785778999328613
    6. ' []' → logprob: -9.910778999328613
    7. '[i' → logprob: -10.285778999328613
    8. ' ' → logprob: -11.285778999328613
    9. '[a' → logprob: -12.035778999328613
    10. '[N' → logprob: -12.285778999328613

Token 116: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -4.127333340875339e-06
    2. 'arry' → logprob: -12.875003814697266
    3. 'arra' → logprob: -14.250003814697266
    4. 'arr' → logprob: -15.125003814697266
    5. 'rray' → logprob: -15.125003814697266
    6. 'ar' → logprob: -16.500003814697266
    7. 'arrays' → logprob: -17.250003814697266
    8. 'a' → logprob: -17.875003814697266
    9. ' array' → logprob: -18.000003814697266
    10. '[' → logprob: -18.000003814697266

Token 117: '(a' (ID: 6271)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.011284071020781994
    2. '(' → logprob: -5.011283874511719
    3. '((' → logprob: -6.136283874511719
    4. '(a' → logprob: -6.886283874511719
    5. '(n' → logprob: -7.386283874511719
    6. '(N' → logprob: -8.136283874511719
    7. '(b' → logprob: -9.011283874511719
    8. ' (' → logprob: -9.011283874511719
    9. '([' → logprob: -9.761283874511719
    10. '(x' → logprob: -10.511283874511719

Token 118: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5471304059028625
    2. ' for' → logprob: -1.5471303462982178
    3. ' +' → logprob: -1.9221303462982178
    4. ')' → logprob: -3.5471303462982178
    5. 'for' → logprob: -3.6721303462982178
    6. ' i' → logprob: -5.922130584716797
    7. '+i' → logprob: -6.172130584716797
    8. 'i' → logprob: -6.922130584716797
    9. '(i' → logprob: -7.172130584716797
    10. ' ' → logprob: -8.047130584716797

Token 119: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6936243772506714
    2. 'for' → logprob: -0.6936243772506714
    3. ')' → logprob: -8.443624496459961
    4. '   ' → logprob: -9.318624496459961
    5. '+' → logprob: -9.568624496459961
    6. ' ' → logprob: -10.318624496459961
    7. '    ' → logprob: -10.943624496459961
    8. '
' → logprob: -11.568624496459961
    9. '  ' → logprob: -11.818624496459961
    10. 'if' → logprob: -12.693624496459961

Token 120: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.03409098461270332
    2. 'a' → logprob: -3.534090995788574
    3. ' range' → logprob: -5.534090995788574
    4. ' ' → logprob: -8.784090995788574
    5. 'range' → logprob: -9.284090995788574
    6. ' i' → logprob: -10.284090995788574
    7. '(range' → logprob: -10.909090995788574
    8. ' _' → logprob: -10.909090995788574
    9. ' in' → logprob: -11.409090995788574
    10. '	a' → logprob: -11.409090995788574

Token 121: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00420851306989789
    2. 'in' → logprob: -5.504208564758301
    3. 'range' → logprob: -9.6292085647583
    4. ' range' → logprob: -10.2542085647583
    5. '(range' → logprob: -10.6292085647583
    6. '(' → logprob: -13.3792085647583
    7. ' ' → logprob: -13.7542085647583
    8. ' i' → logprob: -15.0042085647583
    9. 'In' → logprob: -15.2542085647583
    10. ')' → logprob: -15.2542085647583

Token 122: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38697052001953125
    2. ' range' → logprob: -1.1369705200195312
    3. '(range' → logprob: -9.386970520019531
    4. ' ' → logprob: -12.136970520019531
    5. ' xrange' → logprob: -12.886970520019531
    6. '	range' → logprob: -13.261970520019531
    7. '   ' → logprob: -13.511970520019531
    8. '[' → logprob: -13.886970520019531
    9. 'rang' → logprob: -14.261970520019531
    10. '  ' → logprob: -14.761970520019531

Token 123: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.5776860184123507e-06
    2. ' (' → logprob: -13.25000286102295
    3. '(
' → logprob: -14.25000286102295
    4. '(N' → logprob: -15.62500286102295
    5. '1' → logprob: -18.000001907348633
    6. '((' → logprob: -18.375001907348633
    7. '(

' → logprob: -19.125001907348633
    8. '(i' → logprob: -19.500001907348633
    9. '```' → logprob: -20.625001907348633
    10. '
' → logprob: -20.750001907348633

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011303325882181525
    2. '(' → logprob: -7.126130104064941
    3. 'N' → logprob: -8.251130104064941
    4. ' ' → logprob: -10.001130104064941
    5. '(N' → logprob: -11.126130104064941
    6. '2' → logprob: -13.376130104064941
    7. '0' → logprob: -13.751130104064941
    8. ' N' → logprob: -14.001130104064941
    9. '   ' → logprob: -14.376130104064941
    10. '12' → logprob: -16.876131057739258

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026765360962599516
    2. ',N' → logprob: -8.25026798248291
    3. ' ,' → logprob: -12.62526798248291
    4. ' ' → logprob: -14.00026798248291
    5. 'N' → logprob: -14.75026798248291
    6. '2' → logprob: -14.75026798248291
    7. '1' → logprob: -14.87526798248291
    8. 'to' → logprob: -15.37526798248291
    9. ',
' → logprob: -15.50026798248291
    10. ',int' → logprob: -16.000267028808594

Token 126: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -9.627176768844947e-05
    2. ' N' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.37509536743164
    4. ' ' → logprob: -17.62509536743164
    5. '	N' → logprob: -18.62509536743164
    6. 'M' → logprob: -19.12509536743164
    7. '  ' → logprob: -19.12509536743164
    8. '<|end|>' → logprob: -19.37509536743164
    9. '(N' → logprob: -19.62509536743164
    10. '>N' → logprob: -19.75009536743164

Token 127: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0788913294672966
    2. ' +' → logprob: -2.5788912773132324
    3. '+
' → logprob: -14.57889175415039
    4. ' ' → logprob: -14.57889175415039
    5. ' +
' → logprob: -15.57889175415039
    6. '
' → logprob: -15.82889175415039
    7. '＋' → logprob: -16.07889175415039
    8. '()+' → logprob: -16.32889175415039
    9. '   ' → logprob: -16.32889175415039
    10. '  ' → logprob: -18.57889175415039

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -12.000007629394531
    3. '2' → logprob: -13.875007629394531
    4. '
' → logprob: -17.75000762939453
    5. '

' → logprob: -18.50000762939453
    6. ')' → logprob: -18.87500762939453
    7. '   ' → logprob: -19.00000762939453
    8. '```' → logprob: -19.56250762939453
    9. '１' → logprob: -19.75000762939453
    10. '۱' → logprob: -20.00000762939453

Token 129: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00028934504371136427
    2. ')' → logprob: -8.250288963317871
    3. ']' → logprob: -10.625288963317871
    4. '))' → logprob: -13.750288963317871
    5. ' )' → logprob: -14.000288963317871
    6. ')])' → logprob: -14.125288963317871
    7. '])]' → logprob: -15.500288963317871
    8. '])' → logprob: -16.000289916992188
    9. ')]
' → logprob: -16.000289916992188
    10. '+' → logprob: -16.125289916992188

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24545343220233917
    2. 'for' → logprob: -2.995453357696533
    3. ' ' → logprob: -3.120453357696533
    4. '<|end|>' → logprob: -3.370453357696533
    5. '    
' → logprob: -3.870453357696533
    6. ')' → logprob: -3.870453357696533
    7. ' for' → logprob: -4.120453357696533
    8. ' 
' → logprob: -4.745453357696533
    9. '  
' → logprob: -5.370453357696533
    10. '
' → logprob: -5.370453357696533

Token 131: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.016027681529521942
    2. ' for' → logprob: -4.266027450561523
    3. '   ' → logprob: -6.391027450561523
    4. '    
' → logprob: -9.641027450561523
    5. '	for' → logprob: -10.016027450561523
    6. 'def' → logprob: -11.391027450561523
    7. ' ' → logprob: -11.891027450561523
    8. '
' → logprob: -11.891027450561523
    9. ' 
' → logprob: -12.016027450561523
    10. '    ' → logprob: -12.141027450561523

Token 132: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.00030900631099939346
    2. ' ' → logprob: -8.625308990478516
    3. '_' → logprob: -9.000308990478516
    4. ' i' → logprob: -12.750308990478516
    5. ' M' → logprob: -13.750308990478516
    6. ' ‌' → logprob: -14.125308990478516
    7. '  ' → logprob: -14.875308990478516
    8. ' range' → logprob: -15.500308990478516
    9. ' ▁' → logprob: -15.750308990478516
    10. ' a' → logprob: -16.000308990478516

Token 133: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03035975806415081
    2. 'in' → logprob: -3.5303597450256348
    3. ' ' → logprob: -8.155360221862793
    4. '<|end|>' → logprob: -8.280360221862793
    5. 'import' → logprob: -11.655360221862793
    6. 'range' → logprob: -11.655360221862793
    7. '  ' → logprob: -11.655360221862793
    8. '```' → logprob: -12.280360221862793
    9. '<|end|>' → logprob: -12.405360221862793
    10. '	in' → logprob: -12.530360221862793

Token 134: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0022354244720190763
    2. ' range' → logprob: -6.377235412597656
    3. '(range' → logprob: -8.127235412597656
    4. 'ange' → logprob: -8.377235412597656
    5. '	range' → logprob: -13.752235412597656
    6. ')' → logprob: -14.127235412597656
    7. 'in' → logprob: -14.127235412597656
    8. 'nge' → logprob: -14.252235412597656
    9. '   ' → logprob: -14.502235412597656
    10. ' ' → logprob: -14.502235412597656

Token 135: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0014314282452687621
    2. '(' → logprob: -6.751431465148926
    3. ' (' → logprob: -8.251431465148926
    4. ',' → logprob: -16.12643051147461
    5. '(
' → logprob: -16.50143051147461
    6. ' M' → logprob: -16.62643051147461
    7. '(int' → logprob: -17.00143051147461
    8. '((' → logprob: -17.75143051147461
    9. ')' → logprob: -17.87643051147461
    10. '(N' → logprob: -18.12643051147461

Token 136: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009364903904497623
    2. ')' → logprob: -5.259365081787109
    3. ' ):' → logprob: -5.634365081787109
    4. ':' → logprob: -8.13436508178711
    5. '):
' → logprob: -8.50936508178711
    6. ' )' → logprob: -10.50936508178711
    7. ',' → logprob: -11.00936508178711
    8. '():' → logprob: -12.38436508178711
    9. ' ' → logprob: -12.88436508178711
    10. ' :' → logprob: -13.63436508178711

Token 137: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.469059556722641
    2. ':' → logprob: -1.5940595865249634
    3. '<|end|>' → logprob: -1.9690595865249634
    4. '   ' → logprob: -4.719059467315674
    5. ',' → logprob: -4.969059467315674
    6. ' ' → logprob: -5.469059467315674
    7. '    ' → logprob: -5.719059467315674
    8. ' :' → logprob: -6.219059467315674
    9. '):' → logprob: -6.844059467315674
    10. '        
' → logprob: -7.094059467315674

Token 138: ' A' (ID: 355)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.895004391670227
    2. 'a' → logprob: -1.645004391670227
    3. ' a' → logprob: -2.0200042724609375
    4. 'l' → logprob: -2.2700042724609375
    5. '   ' → logprob: -3.2700042724609375
    6. ' i' → logprob: -3.7700042724609375
    7. 'i' → logprob: -4.0200042724609375
    8. 'x' → logprob: -4.0200042724609375
    9. ' r' → logprob: -4.1450042724609375
    10. ' line' → logprob: -4.2700042724609375

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003826325526461005
    2. ' ,' → logprob: -5.628826141357422
    3. '_,' → logprob: -9.253826141357422
    4. '_i' → logprob: -10.753826141357422
    5. ',B' → logprob: -10.753826141357422
    6. ',b' → logprob: -11.128826141357422
    7. '_line' → logprob: -11.253826141357422
    8. '1' → logprob: -11.503826141357422
    9. '_' → logprob: -11.628826141357422
    10. 'r' → logprob: -11.878826141357422

Token 140: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.4797830879688263
    2. 'B' → logprob: -1.104783058166504
    3. 'b' → logprob: -3.479783058166504
    4. ' b' → logprob: -4.229783058166504
    5. 'a' → logprob: -5.979783058166504
    6. ' ' → logprob: -7.479783058166504
    7. ' a' → logprob: -7.604783058166504
    8. ' L' → logprob: -8.229783058166504
    9. 'L' → logprob: -9.229783058166504
    10. ' l' → logprob: -9.354783058166504

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03170381858944893
    2. ' =' → logprob: -3.6567037105560303
    3. '=' → logprob: -5.281703948974609
    4. ' ,' → logprob: -8.40670394897461
    5. '   ' → logprob: -10.03170394897461
    6. ' ' → logprob: -11.28170394897461
    7. '  ' → logprob: -11.90670394897461
    8. '    ' → logprob: -12.03170394897461
    9. ')' → logprob: -12.78170394897461
    10. ',C' → logprob: -14.40670394897461

Token 142: ' X' (ID: 2127)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.18747620284557343
    2. ' C' → logprob: -1.8124761581420898
    3. 'c' → logprob: -6.06247615814209
    4. 'L' → logprob: -6.18747615814209
    5. 'K' → logprob: -7.31247615814209
    6. ' L' → logprob: -7.68747615814209
    7. ' ' → logprob: -8.18747615814209
    8. '_' → logprob: -8.18747615814209
    9. 'Q' → logprob: -8.68747615814209
    10. ' c' → logprob: -8.81247615814209

Token 143: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004915296565741301
    2. ' =' → logprob: -5.504915237426758
    3. '=' → logprob: -7.379915237426758
    4. ' ,' → logprob: -8.754915237426758
    5. ',Y' → logprob: -10.879915237426758
    6. ' ' → logprob: -11.504915237426758
    7. 'Y' → logprob: -11.879915237426758
    8. ',y' → logprob: -12.129915237426758
    9. '1' → logprob: -12.254915237426758
    10. 'y' → logprob: -12.754915237426758

Token 144: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0032052809838205576
    2. 'map' → logprob: -5.753205299377441
    3. ' ' → logprob: -10.628205299377441
    4. '	map' → logprob: -13.878205299377441
    5. '  ' → logprob: -14.128205299377441
    6. ' ' → logprob: -14.753205299377441
    7. '   ' → logprob: -15.003205299377441
    8. ' input' → logprob: -15.128205299377441
    9. ' list' → logprob: -15.378205299377441
    10. ' ma' → logprob: -16.378204345703125

Token 145: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.306760805164231e-05
    2. '(' → logprob: -11.50001335144043
    3. '<int' → logprob: -14.12501335144043
    4. '[int' → logprob: -14.12501335144043
    5. '=int' → logprob: -14.62501335144043
    6. 'int' → logprob: -14.87501335144043
    7. ',int' → logprob: -15.37501335144043
    8. ' int' → logprob: -16.00001335144043
    9. '(
' → logprob: -16.12501335144043
    10. ' (' → logprob: -16.50001335144043

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20295897126197815
    2. ',input' → logprob: -1.7029589414596558
    3. '(input' → logprob: -6.577959060668945
    4. 'input' → logprob: -9.452959060668945
    5. '(' → logprob: -10.327959060668945
    6. ' ,' → logprob: -10.702959060668945
    7. '   ' → logprob: -11.952959060668945
    8. ')' → logprob: -12.452959060668945
    9. ' input' → logprob: -12.452959060668945
    10. '=input' → logprob: -13.452959060668945

Token 147: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.251935213804245
    2. ' input' → logprob: -1.5019352436065674
    3. 'sys' → logprob: -12.626935005187988
    4. ' sys' → logprob: -13.501935005187988
    5. '(input' → logprob: -14.251935005187988
    6. ')' → logprob: -15.251935005187988
    7. '=input' → logprob: -15.626935005187988
    8. ',input' → logprob: -15.876935005187988
    9. '	input' → logprob: -16.126935958862305
    10. '_input' → logprob: -16.626935958862305

Token 148: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5213274309644476e-05
    2. '()' → logprob: -11.250015258789062
    3. ' ().' → logprob: -13.250015258789062
    4. ')' → logprob: -16.000015258789062
    5. '(' → logprob: -16.000015258789062
    6. '.' → logprob: -16.500015258789062
    7. '.split' → logprob: -16.875015258789062
    8. '   ' → logprob: -18.125015258789062
    9. 'split' → logprob: -18.375015258789062
    10. '	' → logprob: -19.625015258789062

Token 149: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.7432603272027336e-06
    2. 'strip' → logprob: -14.000001907348633
    3. ' split' → logprob: -14.250001907348633
    4. '(split' → logprob: -15.750001907348633
    5. 'rstrip' → logprob: -17.375001907348633
    6. 'spl' → logprob: -17.750001907348633
    7. ')' → logprob: -19.500001907348633
    8. ' ' → logprob: -20.625001907348633
    9. '.split' → logprob: -21.750001907348633
    10. 'decode' → logprob: -22.375001907348633

Token 150: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.097437315271236e-05
    2. '()' → logprob: -10.37505054473877
    3. '())' → logprob: -11.37505054473877
    4. ' )' → logprob: -12.25005054473877
    5. '(' → logprob: -14.00005054473877
    6. ')
' → logprob: -14.12505054473877
    7. '))' → logprob: -14.25005054473877
    8. ')`' → logprob: -15.00005054473877
    9. '   ' → logprob: -15.25005054473877
    10. '),' → logprob: -15.75005054473877

Token 151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22553372383117676
    2. '   ' → logprob: -1.8505337238311768
    3. '<|end|>' → logprob: -3.6005337238311768
    4. ')' → logprob: -5.350533485412598
    5. '    ' → logprob: -5.350533485412598
    6. '        
' → logprob: -6.350533485412598
    7. '    
' → logprob: -6.600533485412598
    8. ' ' → logprob: -6.850533485412598
    9. ',' → logprob: -7.225533485412598
    10. ' 
' → logprob: -7.350533485412598

Token 152: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18809477984905243
    2. ' for' → logprob: -2.3130948543548584
    3. '       ' → logprob: -3.3130948543548584
    4. '   ' → logprob: -3.6880948543548584
    5. 'if' → logprob: -4.938094615936279
    6. 'i' → logprob: -6.688094615936279
    7. 'a' → logprob: -7.063094615936279
    8. 'covered' → logprob: -7.813094615936279
    9. 'start' → logprob: -7.938094615936279
    10. ' if' → logprob: -8.313095092773438

Token 153: ' Les' (ID: 7029)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0771930143237114
    2. ' for' → logprob: -2.827193021774292
    3. 'start' → logprob: -5.077192783355713
    4. 'A' → logprob: -5.702192783355713
    5. 'if' → logprob: -6.077192783355713
    6. 'x' → logprob: -7.202192783355713
    7. 'B' → logprob: -7.452192783355713
    8. 'X' → logprob: -7.577192783355713
    9. 'a' → logprob: -8.452193260192871
    10. ' start' → logprob: -8.702193260192871

Token 154: ' somm' (ID: 44830)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.031128168106079
    2. ' for' → logprob: -1.906128168106079
    3. ' start' → logprob: -1.906128168106079
    4. 'start' → logprob: -2.531128168106079
    5. ' A' → logprob: -3.031128168106079
    6. ' line' → logprob: -3.406128168106079
    7. 'line' → logprob: -3.906128168106079
    8. ' lignes' → logprob: -3.906128168106079
    9. 'A' → logprob: -4.0311279296875
    10. 'x' → logprob: -4.7811279296875

Token 155: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.014126134105026722
    2. 'et' → logprob: -4.389126300811768
    3. 'es' → logprob: -7.014126300811768
    4. 'etes' → logprob: -7.639126300811768
    5. 'ettes' → logprob: -9.76412582397461
    6. 'ites' → logprob: -10.26412582397461
    7. 'ètes' → logprob: -10.51412582397461
    8. '   ' → logprob: -10.88912582397461
    9. 'êts' → logprob: -11.01412582397461
    10. 'e' → logprob: -11.13912582397461

Token 156: ' :
' (ID: 10039)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07631124556064606
    2. '=' → logprob: -3.0763113498687744
    3. ' for' → logprob: -4.951311111450195
    4. 'for' → logprob: -5.076311111450195
    5. 's' → logprob: -5.826311111450195
    6. ',' → logprob: -6.326311111450195
    7. ' de' → logprob: -6.826311111450195
    8. ' are' → logprob: -6.951311111450195
    9. 'de' → logprob: -7.326311111450195
    10. 'A' → logprob: -7.326311111450195

Token 157: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.35570937395095825
    2. '       ' → logprob: -1.4807093143463135
    3. 'for' → logprob: -2.9807093143463135
    4. '   ' → logprob: -4.730709552764893
    5. '    ' → logprob: -5.730709552764893
    6. ' A' → logprob: -6.605709552764893
    7. '	for' → logprob: -6.730709552764893
    8. '        ' → logprob: -7.105709552764893
    9. '	   ' → logprob: -7.105709552764893
    10. 'A' → logprob: -7.480709552764893

Token 158: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08817465603351593
    2. 'for' → logprob: -2.58817458152771
    3. ' A' → logprob: -5.713174819946289
    4. ' a' → logprob: -6.838174819946289
    5. ' start' → logprob: -6.838174819946289
    6. 'A' → logprob: -7.088174819946289
    7. '   ' → logprob: -7.213174819946289
    8. 'a' → logprob: -7.463174819946289
    9. ' line' → logprob: -7.838174819946289
    10. ' i' → logprob: -8.338174819946289

Token 159: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48390066623687744
    2. ' for' → logprob: -0.9839006662368774
    3. 'start' → logprob: -6.233900547027588
    4. 'A' → logprob: -6.358900547027588
    5. 'i' → logprob: -6.358900547027588
    6. ' A' → logprob: -6.858900547027588
    7. ' start' → logprob: -6.983900547027588
    8. 'a' → logprob: -7.358900547027588
    9. '   ' → logprob: -7.358900547027588
    10. ' i' → logprob: -8.358901023864746

Token 160: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.08850891888141632
    2. 'X' → logprob: -3.0885088443756104
    3. ' A' → logprob: -3.9635088443756104
    4. 'B' → logprob: -4.2135090827941895
    5. ' X' → logprob: -6.8385090827941895
    6. '   ' → logprob: -7.7135090827941895
    7. ')' → logprob: -7.7135090827941895
    8. 'i' → logprob: -7.7135090827941895
    9. 'for' → logprob: -7.7135090827941895
    10. ' B' → logprob: -7.8385090827941895

Token 161: ',B' (ID: 19853)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.21008017659187317
    2. ' -' → logprob: -1.7100801467895508
    3. ',' → logprob: -4.960080146789551
    4. ')' → logprob: -7.960080146789551
    5. '+' → logprob: -8.21008014678955
    6. ' ,' → logprob: -8.83508014678955
    7. 'B' → logprob: -8.96008014678955
    8. ' +' → logprob: -9.08508014678955
    9. ',B' → logprob: -9.33508014678955
    10. ')-' → logprob: -9.33508014678955

Token 162: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5402981042861938
    2. '-' → logprob: -1.1652981042861938
    3. '),' → logprob: -3.0402979850769043
    4. ',' → logprob: -3.2902979850769043
    5. ' -' → logprob: -4.290297985076904
    6. '),(' → logprob: -6.165297985076904
    7. ' )' → logprob: -6.540297985076904
    8. ' ,' → logprob: -7.665297985076904
    9. ' ),' → logprob: -7.790297985076904
    10. ')
' → logprob: -7.790297985076904

Token 163: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.26979270577430725
    2. '(B' → logprob: -2.1447927951812744
    3. '(A' → logprob: -2.8947927951812744
    4. '(X' → logprob: -2.8947927951812744
    5. '(' → logprob: -6.394792556762695
    6. '   ' → logprob: -7.144792556762695
    7. '(x' → logprob: -7.144792556762695
    8. ' ' → logprob: -7.269792556762695
    9. 'X' → logprob: -7.394792556762695
    10. '(Y' → logprob: -7.644792556762695

Token 164: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04471967741847038
    2. ' A' → logprob: -3.419719696044922
    3. 'X' → logprob: -4.919719696044922
    4. 'C' → logprob: -6.419719696044922
    5. 'B' → logprob: -6.669719696044922
    6. ' X' → logprob: -8.044719696044922
    7. ' ' → logprob: -8.669719696044922
    8. ',' → logprob: -9.794719696044922
    9. ' B' → logprob: -9.794719696044922
    10. ' C' → logprob: -9.982219696044922

Token 165: '+' (ID: 10)
  Prédit: '+B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+B' → logprob: -1.5440183877944946
    2. '+' → logprob: -1.6690183877944946
    3. ',' → logprob: -1.9190183877944946
    4. '-' → logprob: -2.044018268585205
    5. ',B' → logprob: -2.419018268585205
    6. '-X' → logprob: -2.544018268585205
    7. ',X' → logprob: -2.669018268585205
    8. '-B' → logprob: -3.544018268585205
    9. ',C' → logprob: -4.044018268585205
    10. '+C' → logprob: -4.294018268585205

Token 166: 'X' (ID: 55)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026452872902154922
    2. 'X' → logprob: -3.7764527797698975
    3. ',' → logprob: -5.901453018188477
    4. 'B' → logprob: -8.901453018188477
    5. 'C' → logprob: -9.026453018188477
    6. ' ' → logprob: -9.651453018188477
    7. ',X' → logprob: -10.401453018188477
    8. ' ,' → logprob: -10.776453018188477
    9. ' X' → logprob: -11.151453018188477
    10. ')' → logprob: -11.151453018188477

Token 167: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.052536897361278534
    2. ',' → logprob: -3.052536964416504
    3. '-' → logprob: -6.177536964416504
    4. ' ,' → logprob: -7.302536964416504
    5. ',C' → logprob: -7.427536964416504
    6. ',X' → logprob: -8.177536964416504
    7. ' ' → logprob: -10.427536964416504
    8. ',A' → logprob: -10.427536964416504
    9. ',b' → logprob: -10.552536964416504
    10. '+' → logprob: -10.552536964416504

Token 168: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.1332731544971466
    2. '+' → logprob: -2.633273124694824
    3. ')' → logprob: -3.258273124694824
    4. '-' → logprob: -4.508273124694824
    5. ' +' → logprob: -6.758273124694824
    6. ',' → logprob: -7.133273124694824
    7. ' ),' → logprob: -7.508273124694824
    8. '   ' → logprob: -8.883273124694824
    9. ' -' → logprob: -8.883273124694824
    10. '+B' → logprob: -8.883273124694824

Token 169: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.498601496219635
    2. '(A' → logprob: -1.1236014366149902
    3. '        ' → logprob: -4.62360143661499
    4. ',' → logprob: -4.74860143661499
    5. '(' → logprob: -4.87360143661499
    6. '    ' → logprob: -5.24860143661499
    7. ' and' → logprob: -5.24860143661499
    8. ')' → logprob: -5.24860143661499
    9. '       ' → logprob: -5.37360143661499
    10. ' ' → logprob: -5.49860143661499

Token 170: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06003846228122711
    2. ' A' → logprob: -2.9350385665893555
    3. 'B' → logprob: -5.4350385665893555
    4. ' B' → logprob: -8.560038566589355
    5. ',' → logprob: -8.685038566589355
    6. ' ' → logprob: -8.935038566589355
    7. '(A' → logprob: -9.060038566589355
    8. ' (' → logprob: -10.185038566589355
    9. ',A' → logprob: -10.310038566589355
    10. ')' → logprob: -10.310038566589355

Token 171: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22577622532844543
    2. ',' → logprob: -1.975776195526123
    3. ',X' → logprob: -3.475776195526123
    4. '+B' → logprob: -4.100776195526123
    5. ',B' → logprob: -4.600776195526123
    6. '+x' → logprob: -6.350776195526123
    7. ' +' → logprob: -7.100776195526123
    8. ',+' → logprob: -7.225776195526123
    9. ' ,' → logprob: -7.975776195526123
    10. '+,' → logprob: -8.100776672363281

Token 172: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0006886058254167438
    2. ' X' → logprob: -7.500688552856445
    3. ' ' → logprob: -9.500688552856445
    4. '1' → logprob: -11.000688552856445
    5. 'x' → logprob: -11.250688552856445
    6. '0' → logprob: -12.000688552856445
    7. '   ' → logprob: -12.375688552856445
    8. 'B' → logprob: -12.500688552856445
    9. 'A' → logprob: -12.625688552856445
    10. ')' → logprob: -12.750688552856445

Token 173: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.637126088142395
    2. ',B' → logprob: -0.762126088142395
    3. ' ,' → logprob: -6.5121259689331055
    4. ',b' → logprob: -6.6371259689331055
    5. ')' → logprob: -7.8871259689331055
    6. '+' → logprob: -8.012125968933105
    7. '-' → logprob: -8.387125968933105
    8. ',
' → logprob: -9.012125968933105
    9. ' ' → logprob: -9.262125968933105
    10. '),' → logprob: -9.512125968933105

Token 174: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11574184894561768
    2. '),' → logprob: -2.615741729736328
    3. ')' → logprob: -3.740741729736328
    4. '-' → logprob: -4.990741729736328
    5. ' +' → logprob: -5.490741729736328
    6. '+x' → logprob: -7.615741729736328
    7. '-X' → logprob: -7.740741729736328
    8. ' -' → logprob: -9.240741729736328
    9. '+)' → logprob: -9.240741729736328
    10. ' ),' → logprob: -9.365741729736328

Token 175: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.00812467746436596
    2. ' X' → logprob: -4.883124828338623
    3. ')' → logprob: -7.758124828338623
    4. ' ' → logprob: -10.133124351501465
    5. '),' → logprob: -11.133124351501465
    6. '-X' → logprob: -11.633124351501465
    7. '-' → logprob: -11.883124351501465
    8. '0' → logprob: -12.383124351501465
    9. ',' → logprob: -12.383124351501465
    10. ' -' → logprob: -13.383124351501465

Token 176: ')
' (ID: 446)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.28340134024620056
    2. ')' → logprob: -1.408401370048523
    3. ',' → logprob: -6.9084014892578125
    4. ' ),' → logprob: -7.0334014892578125
    5. ' )' → logprob: -8.783401489257812
    6. '       ' → logprob: -9.283401489257812
    7. '),(' → logprob: -10.158401489257812
    8. ')
' → logprob: -10.158401489257812
    9. '   ' → logprob: -10.908401489257812
    10. ' ,' → logprob: -11.658401489257812

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4023185968399048
    2. ',' → logprob: -1.6523185968399048
    3. '<|end|>' → logprob: -2.2773184776306152
    4. ')' → logprob: -3.4023184776306152
    5. '<|end|>' → logprob: -6.402318477630615
    6. '   ' → logprob: -7.402318477630615
    7. ' ,' → logprob: -7.402318477630615
    8. ' )' → logprob: -8.777318954467773
    9. ',
' → logprob: -9.402318954467773
    10. '        
' → logprob: -9.777318954467773

Token 178: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4118584394454956
    2. ',' → logprob: -1.1618584394454956
    3. ' ,' → logprob: -4.536858558654785
    4. '<|end|>' → logprob: -5.161858558654785
    5. ')' → logprob: -5.536858558654785
    6. ' (' → logprob: -6.661858558654785
    7. '   ' → logprob: -7.286858558654785
    8. '#' (adapté à ' #') → logprob: -8.286858558654785
    9. ',A' → logprob: -8.286858558654785
    10. '<|end|>' → logprob: -8.286858558654785

Token 179: ' Le' (ID: 2018)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07696665078401566
    2. ' for' → logprob: -3.0769667625427246
    3. '   ' → logprob: -4.576966762542725
    4. 'for' → logprob: -4.951966762542725
    5. ',' → logprob: -5.826966762542725
    6. ' (' → logprob: -5.951966762542725
    7. ' if' → logprob: -6.326966762542725
    8. ' covered' → logprob: -7.576966762542725
    9. '        
' → logprob: -7.576966762542725
    10. 'if' → logprob: -7.826966762542725

Token 180: ' "' (ID: 392)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2624447345733643
    2. ' code' → logprob: -1.6374447345733643
    3. ' #' → logprob: -2.3874447345733643
    4. ' covered' → logprob: -2.5124447345733643
    5. '#' → logprob: -2.8874447345733643
    6. 'for' → logprob: -3.1374447345733643
    7. 's' → logprob: -3.3874447345733643
    8. ' coverage' → logprob: -3.7624447345733643
    9. ' ' → logprob: -4.012444496154785
    10. ' if' → logprob: -4.137444496154785

Token 181: 'triangle' (ID: 114261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1253019571304321
    2. ' "' → logprob: -2.1253018379211426
    3. 'A' → logprob: -2.2503018379211426
    4. 'covered' → logprob: -2.3753018379211426
    5. ' for' → logprob: -2.5003018379211426
    6. '"' → logprob: -3.0003018379211426
    7. ')' → logprob: -3.0003018379211426
    8. 'X' → logprob: -3.7503018379211426
    9. ' covered' → logprob: -4.375301837921143
    10. ' )' → logprob: -4.500301837921143

Token 182: ' bon' (ID: 4846)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.14816755056381226
    2. ' "' → logprob: -2.398167610168457
    3. 's' → logprob: -4.398167610168457
    4. ')' → logprob: -5.273167610168457
    5. ' is' → logprob: -5.523167610168457
    6. '   ' → logprob: -5.648167610168457
    7. ' est' → logprob: -6.023167610168457
    8. '")' → logprob: -6.023167610168457
    9. ')"' → logprob: -6.148167610168457
    10. ''s' → logprob: -6.773167610168457

Token 183: '"' (ID: 1)
  Prédit: 'hom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hom' → logprob: -0.418012410402298
    2. 'heur' → logprob: -1.6680123805999756
    3. 'h' → logprob: -3.2930123805999756
    4. '"' → logprob: -3.4180123805999756
    5. 'he' → logprob: -3.7930123805999756
    6. 'jour' → logprob: -4.293012619018555
    7. 'n' → logprob: -5.043012619018555
    8. 'nne' → logprob: -5.418012619018555
    9. 'nes' → logprob: -5.668012619018555
    10. 'heure' → logprob: -5.793012619018555

Token 184: ' incl' (ID: 11368)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 185: 'ut' (ID: 339)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3410894572734833
    2. '=' → logprob: -3.2160894870758057
    3. 'e' → logprob: -3.5910894870758057
    4. 'u' → logprob: -3.7160894870758057
    5. 'ues' → logprob: -3.9660894870758057
    6. 'aire' → logprob: -3.9660894870758057
    7. 'def' → logprob: -4.091089248657227
    8. ')' → logprob: -4.341089248657227
    9. 'ait' → logprob: -4.716089248657227
    10. 'arge' → logprob: -4.966089248657227

Token 186: ' tous' (ID: 10688)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 187: ' les' (ID: 1341)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 188: ' points' (ID: 5571)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1359710693359375
    2. 'points' → logprob: -1.2609710693359375
    3. 'i' → logprob: -1.3859710693359375
    4. 'positions' → logprob: -3.6359710693359375
    5. 'b' → logprob: -3.7609710693359375
    6. ' for' → logprob: -4.1359710693359375
    7. ' points' → logprob: -4.2609710693359375
    8. 'a' → logprob: -4.3859710693359375
    9. 'tokens' → logprob: -4.7609710693359375
    10. 'covered' → logprob: -5.2609710693359375

Token 189: ' :
' (ID: 10039)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 190: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 191: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6250942945480347
    2. 'for' → logprob: -1.1250942945480347
    3. '       ' → logprob: -2.625094413757324
    4. ' range' → logprob: -3.875094413757324
    5. 'range' → logprob: -4.250094413757324
    6. '   ' → logprob: -4.375094413757324
    7. ' A' → logprob: -4.500094413757324
    8. 'A' → logprob: -5.375094413757324
    9. '    ' → logprob: -6.750094413757324
    10. ' ' → logprob: -7.000094413757324

Token 192: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7499339580535889
    2. 'for' → logprob: -0.7499339580535889
    3. 'A' → logprob: -4.124934196472168
    4. '       ' → logprob: -4.124934196472168
    5. ' A' → logprob: -4.374934196472168
    6. ' range' → logprob: -5.499934196472168
    7. 'range' → logprob: -5.499934196472168
    8. '   ' → logprob: -7.124934196472168
    9. ' ' → logprob: -7.624934196472168
    10. '    ' → logprob: -9.249934196472168

Token 193: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8104746341705322
    2. ' i' → logprob: -1.4354746341705322
    3. 'x' → logprob: -1.9354746341705322
    4. 'd' → logprob: -2.9354746341705322
    5. ' d' → logprob: -3.3104746341705322
    6. ' x' → logprob: -3.4354746341705322
    7. 'dx' → logprob: -4.185474395751953
    8. ' dx' → logprob: -4.310474395751953
    9. 'a' → logprob: -4.935474395751953
    10. 'k' → logprob: -5.060474395751953

Token 194: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018516872078180313
    2. 'in' → logprob: -4.018517017364502
    3. '<|end|>' → logprob: -9.018516540527344
    4. ' ' → logprob: -9.143516540527344
    5. ',' → logprob: -10.893516540527344
    6. 'X' → logprob: -11.268516540527344
    7. ' en' → logprob: -11.268516540527344
    8. 'range' → logprob: -11.393516540527344
    9. '0' → logprob: -11.768516540527344
    10. '_in' → logprob: -11.893516540527344

Token 195: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02054702304303646
    2. ' range' → logprob: -3.8955469131469727
    3. '
' → logprob: -13.020546913146973
    4. '	range' → logprob: -14.020546913146973
    5. 'ra' → logprob: -14.520546913146973
    6. 'ran' → logprob: -14.645546913146973
    7. 'r' → logprob: -15.020546913146973
    8. 'rang' → logprob: -15.020546913146973
    9. '(range' → logprob: -15.270546913146973
    10. '```' → logprob: -16.27054786682129

Token 196: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39018547534942627
    2. 'X' → logprob: -1.1401854753494263
    3. '1' → logprob: -6.015185356140137
    4. '(X' → logprob: -7.515185356140137
    5. ' X' → logprob: -9.015185356140137
    6. '(' → logprob: -9.765185356140137
    7. ' ' → logprob: -9.890185356140137
    8. 'range' → logprob: -10.515185356140137
    9. '
' → logprob: -10.890185356140137
    10. 'x' → logprob: -11.140185356140137

Token 197: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06427540630102158
    2. ' ,' → logprob: -3.0642755031585693
    3. ',X' → logprob: -4.18927526473999
    4. ',
' → logprob: -8.814275741577148
    5. 'X' → logprob: -8.814275741577148
    6. '
' → logprob: -9.564275741577148
    7. ' ' → logprob: -11.064275741577148
    8. ' X' → logprob: -12.189275741577148
    9. ' ,
' → logprob: -12.314275741577148
    10. ',x' → logprob: -12.689275741577148

Token 198: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.00043496055877767503
    2. ' X' → logprob: -7.750434875488281
    3. '   ' → logprob: -13.625434875488281
    4. '(X' → logprob: -14.000434875488281
    5. '
' → logprob: -14.250434875488281
    6. ' ' → logprob: -14.500434875488281
    7. ',X' → logprob: -14.625434875488281
    8. ',' → logprob: -15.625434875488281
    9. ')' → logprob: -15.875434875488281
    10. '	X' → logprob: -16.37543487548828

Token 199: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5770695805549622
    2. '+' → logprob: -1.2020695209503174
    3. ']:' → logprob: -2.7020695209503174
    4. ']:
' → logprob: -2.8270695209503174
    5. '   ' → logprob: -5.4520697593688965
    6. '],' → logprob: -6.3270697593688965
    7. ']
' → logprob: -6.3270697593688965
    8. ' +' → logprob: -6.3270697593688965
    9. ' ]' → logprob: -6.8270697593688965
    10. '       ' → logprob: -7.7020697593688965

Token 200: ' les' (ID: 1341)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: ' points' (ID: 5571)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3559783697128296
    2. 'for' → logprob: -1.2309783697128296
    3. ' i' → logprob: -6.105978488922119
    4. ' j' → logprob: -6.855978488922119
    5. 'i' → logprob: -6.980978488922119
    6. '   ' → logprob: -7.480978488922119
    7. ' ' → logprob: -7.730978488922119
    8. ' covered' → logprob: -7.730978488922119
    9. ' range' → logprob: -7.980978488922119
    10. 'j' → logprob: -8.355978012084961

Token 202: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 203: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.005371191073209047
    2. ' A' → logprob: -5.25537109375
    3. '   ' → logprob: -10.25537109375
    4. ')' → logprob: -10.75537109375
    5. '(A' → logprob: -10.88037109375
    6. ' ' → logprob: -10.88037109375
    7. 'X' → logprob: -11.75537109375
    8. 'i' → logprob: -11.88037109375
    9. '  ' → logprob: -12.25537109375
    10. '	A' → logprob: -12.25537109375

Token 204: '+i' (ID: 49691)
  Prédit: '+i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+i' → logprob: -0.3275192081928253
    2. '+' → logprob: -2.202519178390503
    3. ' +' → logprob: -2.577519178390503
    4. ',' → logprob: -2.702519178390503
    5. '+B' → logprob: -4.452519416809082
    6. ',i' → logprob: -4.702519416809082
    7. ' ,' → logprob: -6.827519416809082
    8. ',B' → logprob: -6.827519416809082
    9. '+A' → logprob: -6.827519416809082
    10. '+,' → logprob: -8.077519416809082

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11509532481431961
    2. ' ,' → logprob: -2.490095376968384
    3. ',B' → logprob: -3.865095376968384
    4. ',i' → logprob: -6.240095138549805
    5. '),(' → logprob: -7.240095138549805
    6. ')' → logprob: -7.615095138549805
    7. '),' → logprob: -7.615095138549805
    8. ',A' → logprob: -7.990095138549805
    9. '][' → logprob: -8.990095138549805
    10. '   ' → logprob: -9.115095138549805

Token 206: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5235272645950317
    2. ' B' → logprob: -0.8985272645950317
    3. ' ' → logprob: -8.148527145385742
    4. '   ' → logprob: -10.023527145385742
    5. 'b' → logprob: -10.398527145385742
    6. '  ' → logprob: -11.398527145385742
    7. '    ' → logprob: -12.273527145385742
    8. ' b' → logprob: -12.273527145385742
    9. '	B' → logprob: -12.773527145385742
    10. '
' → logprob: -12.836027145385742

Token 207: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5519455671310425
    2. ' +' → logprob: -1.5519455671310425
    3. '+i' → logprob: -1.5519455671310425
    4. ')' → logprob: -8.801945686340332
    5. '+j' → logprob: -9.676945686340332
    6. ')+' → logprob: -9.801945686340332
    7. '+k' → logprob: -9.926945686340332
    8. '+
' → logprob: -10.051945686340332
    9. '),' → logprob: -10.676945686340332
    10. '   ' → logprob: -10.801945686340332

Token 208: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9224451780319214
    2. '<|end|>' → logprob: -0.9224451780319214
    3. ',' → logprob: -2.297445297241211
    4. ')' → logprob: -2.547445297241211
    5. '   ' → logprob: -4.672445297241211
    6. ' for' → logprob: -5.672445297241211
    7. '<|end|>' → logprob: -6.047445297241211
    8. '),' → logprob: -6.047445297241211
    9. ' ,' → logprob: -6.422445297241211
    10. '...' → logprob: -6.672445297241211

Token 209: ' (' (ID: 350)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.5560631155967712
    2. '(A' → logprob: -1.181063175201416
    3. ' (' → logprob: -2.181063175201416
    4. 'B' → logprob: -5.431063175201416
    5. ' B' → logprob: -6.556063175201416
    6. '(' → logprob: -7.431063175201416
    7. ' ' → logprob: -8.931062698364258
    8. 'A' → logprob: -10.806062698364258
    9. '<|end|>' → logprob: -10.806062698364258
    10. ' A' → logprob: -11.181062698364258

Token 210: 'A' (ID: 32)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.15928620100021362
    2. '(B' → logprob: -2.6592862606048584
    3. '(A' → logprob: -3.5342862606048584
    4. ' B' → logprob: -4.034286022186279
    5. 'A' → logprob: -4.159286022186279
    6. ' (' → logprob: -4.284286022186279
    7. ' A' → logprob: -7.659286022186279
    8. ' ' → logprob: -8.409286499023438
    9. '   ' → logprob: -9.784286499023438
    10. '(' → logprob: -10.284286499023438

Token 211: '+' (ID: 10)
  Prédit: '+i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+i' → logprob: -0.03640928864479065
    2. '+' → logprob: -3.411409378051758
    3. ' +' → logprob: -5.911409378051758
    4. '+j' → logprob: -11.036409378051758
    5. '+B' → logprob: -11.161409378051758
    6. '+x' → logprob: -11.911409378051758
    7. '+A' → logprob: -13.411409378051758
    8. 'i' → logprob: -13.536409378051758
    9. '+
' → logprob: -13.786409378051758
    10. '+s' → logprob: -13.786409378051758

Token 212: 'X' (ID: 55)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08812543004751205
    2. 'X' → logprob: -2.713125467300415
    3. 'B' → logprob: -4.213125228881836
    4. '+i' → logprob: -6.463125228881836
    5. ' i' → logprob: -6.963125228881836
    6. '<|end|>' → logprob: -8.338125228881836
    7. '+' → logprob: -8.838125228881836
    8. '+B' → logprob: -9.463125228881836
    9. ' X' → logprob: -9.838125228881836
    10. ' B' → logprob: -10.463125228881836

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09476109594106674
    2. '+i' → logprob: -3.0947611331939697
    3. ',i' → logprob: -3.5947611331939697
    4. '-i' → logprob: -5.219760894775391
    5. ',B' → logprob: -5.719760894775391
    6. ' ,' → logprob: -6.094760894775391
    7. '-' → logprob: -6.219760894775391
    8. ' -' → logprob: -6.594760894775391
    9. ' +' → logprob: -7.469760894775391
    10. '+' → logprob: -7.469760894775391

Token 214: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.02635405957698822
    2. ' B' → logprob: -3.6513540744781494
    3. ' ' → logprob: -11.15135383605957
    4. '   ' → logprob: -11.65135383605957
    5. 'b' → logprob: -11.65135383605957
    6. '(B' → logprob: -12.40135383605957
    7. 'A' → logprob: -13.02635383605957
    8. ' (' → logprob: -13.33885383605957
    9. '	B' → logprob: -13.33885383605957
    10. '<|end|>' → logprob: -13.46385383605957

Token 215: '+i' (ID: 49691)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3543682396411896
    2. '+i' → logprob: -1.3543682098388672
    3. ' +' → logprob: -3.229368209838867
    4. '<|end|>' → logprob: -7.979368209838867
    5. ')' → logprob: -9.479368209838867
    6. ')+' → logprob: -9.729368209838867
    7. '+j' → logprob: -10.104368209838867
    8. '+k' → logprob: -10.479368209838867
    9. '+)' → logprob: -11.104368209838867
    10. 'i' → logprob: -11.229368209838867

Token 216: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.647265613079071
    2. ')' → logprob: -1.2722656726837158
    3. ')]' → logprob: -1.7722656726837158
    4. ')])' → logprob: -4.647265434265137
    5. '   ' → logprob: -4.897265434265137
    6. ' +' → logprob: -5.397265434265137
    7. ' )' → logprob: -6.272265434265137
    8. '       ' → logprob: -7.647265434265137
    9. ')
' → logprob: -8.147265434265137
    10. ']' → logprob: -8.272265434265137

Token 217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21237577497959137
    2. '<|end|>' → logprob: -1.8373757600784302
    3. '   ' → logprob: -3.9623758792877197
    4. '<|end|>' → logprob: -5.962375640869141
    5. '        
' → logprob: -6.337375640869141
    6. ',' → logprob: -6.462375640869141
    7. '    ' → logprob: -6.462375640869141
    8. ' for' → logprob: -6.962375640869141
    9. ' ' → logprob: -7.337375640869141
    10. '        ' → logprob: -7.462375640869141

Token 218: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1783033013343811
    2. '   ' → logprob: -2.1783032417297363
    3. ' for' → logprob: -4.053303241729736
    4. '<|end|>' → logprob: -4.678303241729736
    5. '    ' → logprob: -5.678303241729736
    6. ' 
' → logprob: -5.803303241729736
    7. '
' → logprob: -6.178303241729736
    8. ':' → logprob: -6.178303241729736
    9. '  
' → logprob: -6.553303241729736
    10. '        
' → logprob: -6.553303241729736

Token 219: ' plus' (ID: 2932)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6228064894676208
    2. '   ' → logprob: -1.1228065490722656
    3. ' for' → logprob: -2.2478065490722656
    4. 'for' → logprob: -3.7478065490722656
    5. '<|end|>' → logprob: -5.747806549072266
    6. '    ' → logprob: -6.497806549072266
    7. ')' → logprob: -7.122806549072266
    8. '    
' → logprob: -7.622806549072266
    9. ' i' → logprob: -7.872806549072266
    10. '        
' → logprob: -7.872806549072266

Token 220: ' le' (ID: 505)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0814471244812012
    2. ' for' → logprob: -1.4564471244812012
    3. '   ' → logprob: -1.8314471244812012
    4. ' i' → logprob: -2.206447124481201
    5. '       ' → logprob: -3.831447124481201
    6. '
' → logprob: -3.956447124481201
    7. 'i' → logprob: -4.206447124481201
    8. '    ' → logprob: -4.331447124481201
    9. ' l' → logprob: -4.581447124481201
    10. '=' → logprob: -4.581447124481201

Token 221: ' diagon' (ID: 146014)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9242269992828369
    2. ' for' → logprob: -1.049226999282837
    3. 'i' → logprob: -2.549226999282837
    4. ' rest' → logprob: -3.424226999282837
    5. ' i' → logprob: -4.049226760864258
    6. '"' → logprob: -4.299226760864258
    7. ' code' → logprob: -4.424226760864258
    8. 's' → logprob: -4.924226760864258
    9. 'A' → logprob: -5.049226760864258
    10. 'X' → logprob: -5.424226760864258

Token 222: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.6567073464393616
    2. 'al' → logprob: -0.7817073464393616
    3. 'e' → logprob: -4.031707286834717
    4. 'a' → logprob: -6.531707286834717
    5. 'le' → logprob: -6.531707286834717
    6. ' al' → logprob: -8.156707763671875
    7. '   ' → logprob: -8.281707763671875
    8. 'm' → logprob: -8.406707763671875
    9. 'nal' → logprob: -8.406707763671875
    10. 'ally' → logprob: -8.531707763671875

Token 223: ' du' (ID: 1462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18399927020072937
    2. '   ' → logprob: -2.1839993000030518
    3. '
' → logprob: -3.4339993000030518
    4. '        
' → logprob: -5.058999061584473
    5. '<|end|>' → logprob: -5.308999061584473
    6. ' for' → logprob: -5.808999061584473
    7. '    
' → logprob: -6.058999061584473
    8. ')' → logprob: -6.558999061584473
    9. '    ' → logprob: -7.058999061584473
    10. ',' → logprob: -7.308999061584473

Token 224: ' haut' (ID: 28223)
  Prédit: 'triangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'triangle' → logprob: -0.13259778916835785
    2. ' triangle' → logprob: -2.5075976848602295
    3. 'X' → logprob: -4.632597923278809
    4. 'i' → logprob: -4.882597923278809
    5. 'c' → logprob: -4.882597923278809
    6. 'tri' → logprob: -5.382597923278809
    7. 'coin' → logprob: -6.007597923278809
    8. '(i' → logprob: -6.382597923278809
    9. 'A' → logprob: -6.757597923278809
    10. ' (' → logprob: -6.757597923278809

Token 225: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8379833698272705
    2. '<|end|>' → logprob: -1.0879833698272705
    3. '    ' → logprob: -2.7129833698272705
    4. '       ' → logprob: -3.0879833698272705
    5. ',' → logprob: -3.2129833698272705
    6. ')' → logprob: -3.8379833698272705
    7. ' ' → logprob: -4.212983131408691
    8. '
' → logprob: -4.462983131408691
    9. '<|end|>' → logprob: -5.087983131408691
    10. '[' → logprob: -6.087983131408691

Token 226: 'ligne' (ID: 94660)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3511325120925903
    2. 'A' → logprob: -1.8511325120925903
    3. 'X' → logprob: -1.8511325120925903
    4. ''' → logprob: -1.9761325120925903
    5. ')' → logprob: -2.351132392883301
    6. ' i' → logprob: -3.226132392883301
    7. ' (' → logprob: -3.601132392883301
    8. 'B' → logprob: -3.726132392883301
    9. '(' → logprob: -4.476132392883301
    10. ''A' → logprob: -4.476132392883301

Token 227: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8034405708312988
    2. ' A' → logprob: -1.9284405708312988
    3. 'i' → logprob: -2.178440570831299
    4. 'X' → logprob: -2.303440570831299
    5. ' i' → logprob: -3.303440570831299
    6. '+' → logprob: -3.303440570831299
    7. ' X' → logprob: -3.803440570831299
    8. ')' → logprob: -3.928440570831299
    9. '[A' → logprob: -4.178440570831299
    10. '   ' → logprob: -4.178440570831299

Token 228: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.36259186267852783
    2. '+i' → logprob: -1.3625918626785278
    3. ' +' → logprob: -3.1125917434692383
    4. ')' → logprob: -6.862591743469238
    5. '+x' → logprob: -7.237591743469238
    6. ')+' → logprob: -7.612591743469238
    7. '+A' → logprob: -8.112591743469238
    8. '   ' → logprob: -8.237591743469238
    9. '),' → logprob: -8.737591743469238
    10. ',' → logprob: -8.987591743469238

Token 229: ' pos' (ID: 1253)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.09392787516117096
    2. ' B' → logprob: -2.4689278602600098
    3. ')' → logprob: -6.09392786026001
    4. '   ' → logprob: -7.21892786026001
    5. 'A' → logprob: -7.71892786026001
    6. '<|end|>' → logprob: -8.343928337097168
    7. ' ' → logprob: -8.468928337097168
    8. '    ' → logprob: -8.968928337097168
    9. ' A' → logprob: -9.093928337097168
    10. 'X' → logprob: -9.343928337097168

Token 230: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.2296455204486847
    2. 'B' → logprob: -1.8546454906463623
    3. ' +' → logprob: -4.604645729064941
    4. '+' → logprob: -4.604645729064941
    5. ' X' → logprob: -4.854645729064941
    6. ')' → logprob: -5.604645729064941
    7. ' ' → logprob: -5.854645729064941
    8. 'X' → logprob: -5.979645729064941
    9. '+B' → logprob: -5.979645729064941
    10. ' A' → logprob: -6.229645729064941

Token 231: ')' (ID: 8)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7139731645584106
    2. '+' → logprob: -1.2139731645584106
    3. '-' → logprob: -1.9639731645584106
    4. ')' → logprob: -3.338973045349121
    5. ' -' → logprob: -4.338973045349121
    6. '+B' → logprob: -5.088973045349121
    7. '),' → logprob: -5.463973045349121
    8. ' )' → logprob: -5.588973045349121
    9. ' ' → logprob: -5.838973045349121
    10. ')])' → logprob: -6.588973045349121

Token 232: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 233: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.20599444210529327
    2. '(A' → logprob: -1.7059944868087769
    3. '(B' → logprob: -5.580994606018066
    4. '(' → logprob: -7.830994606018066
    5. ' ' → logprob: -8.580994606018066
    6. ' B' → logprob: -9.580994606018066
    7. 'B' → logprob: -9.955994606018066
    8. ' A' → logprob: -10.080994606018066
    9. 'A' → logprob: -10.705994606018066
    10. '   ' → logprob: -11.080994606018066

Token 234: 'A' (ID: 32)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.11343944072723389
    2. ' B' → logprob: -2.2384395599365234
    3. ' ' → logprob: -8.363439559936523
    4. 'A' → logprob: -8.363439559936523
    5. ' (' → logprob: -9.988439559936523
    6. ' A' → logprob: -10.113439559936523
    7. '(B' → logprob: -10.363439559936523
    8. ')' → logprob: -12.300939559936523
    9. '   ' → logprob: -12.363439559936523
    10. '(' → logprob: -12.675939559936523

Token 235: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02344416081905365
    2. ' +' → logprob: -4.023444175720215
    3. '+i' → logprob: -5.648444175720215
    4. '+B' → logprob: -6.773444175720215
    5. ',' → logprob: -8.523444175720215
    6. 'X' → logprob: -8.648444175720215
    7. '+x' → logprob: -9.523444175720215
    8. '+j' → logprob: -10.460944175720215
    9. ' X' → logprob: -10.898444175720215
    10. '+C' → logprob: -11.085944175720215

Token 236: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.07913355529308319
    2. 'B' → logprob: -2.5791335105895996
    3. 'A' → logprob: -9.454133987426758
    4. ' X' → logprob: -9.579133987426758
    5. 'i' → logprob: -10.204133987426758
    6. ' B' → logprob: -11.329133987426758
    7. '+' → logprob: -11.579133987426758
    8. 'x' → logprob: -11.704133987426758
    9. ')' → logprob: -12.329133987426758
    10. ' ' → logprob: -12.454133987426758

Token 237: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014336026273667812
    2. ',B' → logprob: -4.764336109161377
    3. ' ,' → logprob: -5.889336109161377
    4. '+' → logprob: -6.389336109161377
    5. ')' → logprob: -7.639336109161377
    6. 'B' → logprob: -8.889335632324219
    7. ' +' → logprob: -9.139335632324219
    8. ' ' → logprob: -9.139335632324219
    9. '<|end|>' → logprob: -9.264335632324219
    10. '+B' → logprob: -9.264335632324219

Token 238: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0430879145860672
    2. ' B' → logprob: -3.168087959289551
    3. ' ' → logprob: -9.79308795928955
    4. 'pos' → logprob: -11.91808795928955
    5. '<|end|>' → logprob: -12.04308795928955
    6. 'b' → logprob: -12.54308795928955
    7. '   ' → logprob: -12.66808795928955
    8. '  ' → logprob: -12.79308795928955
    9. '(B' → logprob: -12.79308795928955
    10. 'A' → logprob: -13.79308795928955

Token 239: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17576973140239716
    2. ')' → logprob: -2.550769805908203
    3. '+i' → logprob: -2.925769805908203
    4. ' +' → logprob: -3.675769805908203
    5. '+)' → logprob: -6.425769805908203
    6. ' )' → logprob: -6.800769805908203
    7. '+j' → logprob: -7.925769805908203
    8. '+k' → logprob: -8.425769805908203
    9. '+x' → logprob: -8.550769805908203
    10. '+
' → logprob: -9.425769805908203

Token 240: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0006392885115928948
    2. 'i' → logprob: -7.87563943862915
    3. ' X' → logprob: -8.625638961791992
    4. '+' → logprob: -10.125638961791992
    5. ')' → logprob: -10.625638961791992
    6. '+i' → logprob: -12.125638961791992
    7. ' ' → logprob: -13.250638961791992
    8. 'x' → logprob: -13.250638961791992
    9. '>X' → logprob: -14.000638961791992
    10. '<|end|>' → logprob: -14.250638961791992

Token 241: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012258391827344894
    2. ')
' → logprob: -5.637258529663086
    3. '       ' → logprob: -5.637258529663086
    4. '   ' → logprob: -6.262258529663086
    5. ' )' → logprob: -7.012258529663086
    6. '+' → logprob: -7.137258529663086
    7. '):' → logprob: -7.262258529663086
    8. '))' → logprob: -8.762258529663086
    9. '):
' → logprob: -9.387258529663086
    10. '),' → logprob: -9.887258529663086

Token 242: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 243: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1368564367294312
    2. '
' → logprob: -1.3868564367294312
    3. '   ' → logprob: -1.7618564367294312
    4. '<|end|>' → logprob: -2.3868565559387207
    5. ' for' → logprob: -3.0118565559387207
    6. '    
' → logprob: -3.3868565559387207
    7. ' 
' → logprob: -3.7618565559387207
    8. '        
' → logprob: -4.136856555938721
    9. '  
' → logprob: -4.261856555938721
    10. 'for' → logprob: -4.886856555938721

Token 244: ' mais' (ID: 2899)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8784621953964233
    2. ' for' → logprob: -1.1284621953964233
    3. '       ' → logprob: -1.6284621953964233
    4. 'i' → logprob: -3.628462314605713
    5. '   ' → logprob: -3.753462314605713
    6. ' i' → logprob: -4.878462314605713
    7. '	for' → logprob: -6.253462314605713
    8. '        
' → logprob: -6.753462314605713
    9. '    
' → logprob: -7.378462314605713
    10. '<|end|>' → logprob: -7.378462314605713

Token 245: ' le' (ID: 505)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6030489802360535
    2. 'for' → logprob: -1.3530490398406982
    3. '    ' → logprob: -3.4780490398406982
    4. ' pas' → logprob: -3.6030490398406982
    5. ' not' → logprob: -3.7280490398406982
    6. ' on' → logprob: -3.9780490398406982
    7. 'not' → logprob: -4.478048801422119
    8. '   ' → logprob: -4.478048801422119
    9. '    
' → logprob: -4.978048801422119
    10. 'continue' → logprob: -5.353048801422119

Token 246: ' problème' (ID: 35630)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46201902627944946
    2. ' for' → logprob: -1.0870189666748047
    3. 'def' → logprob: -5.587018966674805
    4. 'A' → logprob: -5.962018966674805
    5. 'if' → logprob: -6.087018966674805
    6. 'x' → logprob: -6.087018966674805
    7. '```' → logprob: -6.212018966674805
    8. 'n' → logprob: -6.337018966674805
    9. 'i' → logprob: -6.337018966674805
    10. ' code' → logprob: -6.587018966674805

Token 247: ' nous' (ID: 6176)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 248: ' dit' (ID: 4758)
  Prédit: ' semble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' semble' → logprob: -1.5836541652679443
    2. ' reste' → logprob: -2.2086541652679443
    3. 'int' → logprob: -2.3336541652679443
    4. ' faut' → logprob: -2.3336541652679443
    5. 'man' → logprob: -3.2086541652679443
    6. ' manque' → logprob: -3.4586541652679443
    7. 'f' → logprob: -3.5836541652679443
    8. 'rest' → logprob: -3.8336541652679443
    9. 's' → logprob: -3.9586541652679443
    10. 'semble' → logprob: -3.9586541652679443

Token 249: ' que' (ID: 661)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 250: ' le' (ID: 505)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.8193733096122742
    2. ' le' → logprob: -2.069373369216919
    3. 'A' → logprob: -2.569373369216919
    4. ' on' → logprob: -2.819373369216919
    5. ' A' → logprob: -2.944373369216919
    6. 'les' → logprob: -3.444373369216919
    7. ' la' → logprob: -3.444373369216919
    8. 'le' → logprob: -3.694373369216919
    9. ' chaque' → logprob: -4.19437313079834
    10. 'X' → logprob: -4.31937313079834

Token 251: ' "' (ID: 392)
  Prédit: ' triangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' triangle' → logprob: -0.35624170303344727
    2. ' code' → logprob: -2.1062417030334473
    3. ' triangles' → logprob: -2.7312417030334473
    4. 'triangle' → logprob: -3.2312417030334473
    5. 'tri' → logprob: -3.8562417030334473
    6. ' next' → logprob: -4.731241703033447
    7. ' for' → logprob: -5.106241703033447
    8. '#' → logprob: -5.481241703033447
    9. ' lines' → logprob: -5.981241703033447
    10. ' rest' → logprob: -5.981241703033447

Token 252: 'triangle' (ID: 114261)
  Prédit: ' triangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' triangle' → logprob: -0.3224274218082428
    2. 'triangle' → logprob: -2.69742751121521
    3. ' triangles' → logprob: -2.82242751121521
    4. 'tri' → logprob: -3.32242751121521
    5. ' code' → logprob: -3.57242751121521
    6. ')' → logprob: -3.94742751121521
    7. ' )' → logprob: -4.572427272796631
    8. 'covered' → logprob: -4.947427272796631
    9. ' covered' → logprob: -4.947427272796631
    10. ' ' → logprob: -5.447427272796631

Token 253: ' bon' (ID: 4846)
  Prédit: ' bon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bon' → logprob: -1.113925814628601
    2. ' )' → logprob: -1.863925814628601
    3. ' ")' → logprob: -1.863925814628601
    4. ' "' → logprob: -2.1139259338378906
    5. ')' → logprob: -2.3639259338378906
    6. 'bon' → logprob: -3.3639259338378906
    7. ' ' → logprob: -4.363925933837891
    8. '"' → logprob: -4.363925933837891
    9. '")' → logprob: -4.363925933837891
    10. 's' → logprob: -4.488925933837891

Token 254: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3134159445762634
    2. '")' → logprob: -2.188416004180908
    3. ')' → logprob: -2.563416004180908
    4. ')"' → logprob: -3.813416004180908
    5. ' ")' → logprob: -3.938416004180908
    6. ' "' → logprob: -4.063416004180908
    7. ' n' → logprob: -4.938416004180908
    8. '")
' → logprob: -6.188416004180908
    9. 's' → logprob: -6.438416004180908
    10. ' )' → logprob: -6.438416004180908

Token 255: ' se' (ID: 458)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 256: ' compose' (ID: 43360)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'term' → logprob: -1.5760257244110107
    2. 'tr' → logprob: -2.3260257244110107
    3. ' termine' → logprob: -2.3260257244110107
    4. 'continue' → logprob: -2.5760257244110107
    5. 'p' → logprob: -2.8260257244110107
    6. 'stop' → logprob: -2.9510257244110107
    7. 's' → logprob: -2.9510257244110107
    8. 'ét' → logprob: -2.9510257244110107
    9. 'compose' → logprob: -3.0760257244110107
    10. 'st' → logprob: -3.5760257244110107

Token 257: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 258: ' tous' (ID: 10688)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.36261433362960815
    2. 'A' → logprob: -1.987614393234253
    3. ' A' → logprob: -3.487614393234253
    4. ' X' → logprob: -3.487614393234253
    5. 'x' → logprob: -3.737614393234253
    6. 'B' → logprob: -4.112614154815674
    7. '(' → logprob: -4.612614154815674
    8. ' (' → logprob: -4.737614154815674
    9. '(A' → logprob: -4.862614154815674
    10. 'i' → logprob: -4.987614154815674

Token 259: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.9013814330101013
    2. '<|end|>' → logprob: -1.526381492614746
    3. 'tokens' → logprob: -2.651381492614746
    4. '       ' → logprob: -2.901381492614746
    5. ' tokens' → logprob: -2.901381492614746
    6. '    ' → logprob: -3.276381492614746
    7. ' i' → logprob: -3.526381492614746
    8. 'les' → logprob: -4.026381492614746
    9. '_tokens' → logprob: -4.401381492614746
    10. ')' → logprob: -4.776381492614746

Token 260: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4137750267982483
    2. 'i' → logprob: -1.1637749671936035
    3. ' for' → logprob: -3.9137749671936035
    4. 'points' → logprob: -5.7887749671936035
    5. ' i' → logprob: -6.0387749671936035
    6. '```' → logprob: -8.538775444030762
    7. '   ' → logprob: -9.163775444030762
    8. 'A' → logprob: -9.288775444030762
    9. 'tokens' → logprob: -9.288775444030762
    10. '       ' → logprob: -9.663775444030762

Token 261: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9800668358802795
    2. ' for' → logprob: -1.6050667762756348
    3. 'for' → logprob: -2.1050667762756348
    4. ' i' → logprob: -2.6050667762756348
    5. '       ' → logprob: -2.9800667762756348
    6. ')' → logprob: -3.1050667762756348
    7. '    ' → logprob: -3.7300667762756348
    8. 'range' → logprob: -3.8550667762756348
    9. ' ' → logprob: -4.605066776275635
    10. 'i' → logprob: -4.605066776275635

Token 262: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.084672212600708
    2. 'i' → logprob: -1.209672212600708
    3. ')' → logprob: -2.084672212600708
    4. 'points' → logprob: -2.084672212600708
    5. ' i' → logprob: -3.584672212600708
    6. 'tokens' → logprob: -4.334671974182129
    7. '       ' → logprob: -4.459671974182129
    8. '   ' → logprob: -4.584671974182129
    9. ' for' → logprob: -4.834671974182129
    10. '_' → logprob: -5.459671974182129

Token 263: ' points' (ID: 5571)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3933425843715668
    2. 'for' → logprob: -1.3933426141738892
    3. ' for' → logprob: -3.0183424949645996
    4. ' i' → logprob: -3.8933424949645996
    5. ' ' → logprob: -5.7683424949646
    6. '   ' → logprob: -6.0183424949646
    7. 'points' → logprob: -7.5183424949646
    8. '       ' → logprob: -7.6433424949646
    9. ' points' → logprob: -8.768342971801758
    10. 'range' → logprob: -9.018342971801758

Token 264: ' sur' (ID: 1512)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7957425713539124
    2. ')' → logprob: -1.6707425117492676
    3. '<|end|>' → logprob: -1.9207425117492676
    4. ',' → logprob: -3.1707425117492676
    5. '        ' → logprob: -3.4207425117492676
    6. '    ' → logprob: -3.6707425117492676
    7. '(A' → logprob: -4.170742511749268
    8. ' (' → logprob: -4.545742511749268
    9. '   ' → logprob: -4.545742511749268
    10. 'for' → logprob: -4.920742511749268

Token 265: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14203080534934998
    2. ' range' → logprob: -2.267030715942383
    3. 'A' → logprob: -5.017030715942383
    4. 'l' → logprob: -5.267030715942383
    5. ' la' → logprob: -5.267030715942383
    6. ' A' → logprob: -5.517030715942383
    7. 'la' → logprob: -5.892030715942383
    8. '   ' → logprob: -6.017030715942383
    9. '(range' → logprob: -7.642030715942383
    10. ' l' → logprob: -8.017030715942383

Token 266: ' côtés' (ID: 103239)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.13794861733913422
    2. ' diagon' → logprob: -3.387948513031006
    3. ' lignes' → logprob: -3.637948513031006
    4. 'i' → logprob: -4.262948513031006
    5. 'di' → logprob: -4.387948513031006
    6. 'segments' → logprob: -5.262948513031006
    7. 'c' → logprob: -5.637948513031006
    8. ' segments' → logprob: -5.887948513031006
    9. ' diagonal' → logprob: -6.012948513031006
    10. '   ' → logprob: -6.137948513031006

Token 267: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0319488048553467
    2. '       ' → logprob: -1.1569488048553467
    3. '<|end|>' → logprob: -2.2819488048553467
    4. '
' → logprob: -2.5319488048553467
    5. '    
' → logprob: -3.6569488048553467
    6. ' for' → logprob: -4.031949043273926
    7. 'for' → logprob: -4.156949043273926
    8. ')' → logprob: -4.156949043273926
    9. '    ' → logprob: -4.281949043273926
    10. '        
' → logprob: -4.406949043273926

Token 268: ' mais' (ID: 2899)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 269: ' le' (ID: 505)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.576968252658844
    2. ' not' → logprob: -1.8269681930541992
    3. '   ' → logprob: -3.076968193054199
    4. '    ' → logprob: -3.201968193054199
    5. 'pas' → logprob: -3.326968193054199
    6. ' pas' → logprob: -3.701968193054199
    7. 'a' → logprob: -4.326968193054199
    8. '       ' → logprob: -4.326968193054199
    9. '...' → logprob: -4.826968193054199
    10. ',' → logprob: -5.076968193054199

Token 270: ' question' (ID: 4928)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9303666949272156
    2. ' espaces' → logprob: -2.0553667545318604
    3. ' reste' → logprob: -2.0553667545318604
    4. ' #' → logprob: -2.6803667545318604
    5. ' rest' → logprob: -2.9303667545318604
    6. 'rest' → logprob: -3.9303667545318604
    7. ' points' → logprob: -3.9303667545318604
    8. ' côtés' → logprob: -4.180366516113281
    9. ' code' → logprob: -4.555366516113281
    10. ' triangles' → logprob: -4.680366516113281

Token 271: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.387127161026001
    2. ' ' → logprob: -2.762127161026001
    3. '<|end|>' → logprob: -2.887127161026001
    4. ' continues' → logprob: -3.387127161026001
    5. '   ' → logprob: -3.637127161026001
    6. ' continue' → logprob: -3.637127161026001
    7. ':' → logprob: -3.637127161026001
    8. ',' → logprob: -4.137126922607422
    9. ' )' → logprob: -4.637126922607422
    10. 's' → logprob: -4.887126922607422

Token 272: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 273: ''in' (ID: 17942)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.7512143850326538
    2. ''' → logprob: -1.8762143850326538
    3. 'é' → logprob: -1.8762143850326538
    4. ''abord' → logprob: -2.1262145042419434
    5. ''accord' → logprob: -2.6262145042419434
    6. 'u' → logprob: -3.1262145042419434
    7. 'ans' → logprob: -3.5012145042419434
    8. ''avoir' → logprob: -3.6262145042419434
    9. 'es' → logprob: -4.126214504241943
    10. 'efined' → logprob: -4.376214504241943

Token 274: 'cl' (ID: 565)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.3241533637046814
    2. 't' → logprob: -1.8241534233093262
    3. 'ter' → logprob: -2.324153423309326
    4. 'dex' → logprob: -5.449153423309326
    5. 'puts' → logprob: -5.699153423309326
    6. 'té' → logprob: -5.824153423309326
    7. 'it' → logprob: -6.449153423309326
    8. 'tent' → logprob: -7.074153423309326
    9. 'd' → logprob: -7.199153423309326
    10. 'com' → logprob: -7.699153423309326

Token 275: 'ure' (ID: 627)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.5953076481819153
    2. 'e' → logprob: -1.8453075885772705
    3. 'ne' → logprob: -1.8453075885772705
    4. 'ude' → logprob: -2.4703075885772705
    5. '   ' → logprob: -4.59530782699585
    6. 'n' → logprob: -4.72030782699585
    7. ')' → logprob: -4.72030782699585
    8. 'u' → logprob: -5.22030782699585
    9. 'es' → logprob: -6.84530782699585
    10. 'ud' → logprob: -6.97030782699585

Token 276: ' les' (ID: 1341)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 277: ' points' (ID: 5571)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 278: ' entour' (ID: 130657)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 279: 'és' (ID: 1756)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.472077876329422
    2. '   ' → logprob: -2.0970778465270996
    3. 'é' → logprob: -2.4720778465270996
    4. ',' → logprob: -3.9720778465270996
    5. 'és' → logprob: -3.9720778465270996
    6. ' ' → logprob: -4.2220778465271
    7. 's' → logprob: -4.3470778465271
    8. 'space' → logprob: -4.3470778465271
    9. '       ' → logprob: -4.4720778465271
    10. 'i' → logprob: -4.4720778465271

Token 280: ' par' (ID: 686)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 281: ' le' (ID: 505)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.353944182395935
    2. ' les' → logprob: -1.603944182395935
    3. ' un' → logprob: -2.3539443016052246
    4. 'les' → logprob: -2.6039443016052246
    5. ' des' → logprob: -3.1039443016052246
    6. ' ' → logprob: -3.1039443016052246
    7. '    ' → logprob: -3.3539443016052246
    8. 'l' → logprob: -3.6039443016052246
    9. ' la' → logprob: -3.8539443016052246
    10. 'ces' → logprob: -3.9789443016052246

Token 282: ' ca' (ID: 3268)
  Prédit: 'triangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'triangle' → logprob: -0.5124275088310242
    2. ' triangle' → logprob: -1.637427568435669
    3. 'tri' → logprob: -2.887427568435669
    4. 'for' → logprob: -2.887427568435669
    5. 'spaces' → logprob: -4.38742733001709
    6. ' for' → logprob: -4.63742733001709
    7. ' spaces' → logprob: -5.13742733001709
    8. '   ' → logprob: -5.38742733001709
    9. ' triangles' → logprob: -5.38742733001709
    10. 'es' → logprob: -5.51242733001709

Token 283: 'out' (ID: 468)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.3190776109695435
    2. 'u' → logprob: -1.5690776109695435
    3. '   ' → logprob: -1.6940776109695435
    4. ' ' → logprob: -3.069077491760254
    5. '  ' → logprob: -3.194077491760254
    6. 'space' → logprob: -3.194077491760254
    7. 't' → logprob: -3.569077491760254
    8. 'p' → logprob: -3.569077491760254
    9. 'l' → logprob: -4.319077491760254
    10. 'in' → logprob: -4.444077491760254

Token 284: 'ch' (ID: 332)
  Prédit: 'ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.10367555171251297
    2. 'che' → logprob: -2.353675603866577
    3. 'p' → logprob: -7.353675365447998
    4. 't' → logprob: -7.353675365447998
    5. 'c' → logprob: -7.978675365447998
    6. '#' → logprob: -8.353675842285156
    7. 'dre' → logprob: -8.353675842285156
    8. 'chy' → logprob: -8.478675842285156
    9. 's' → logprob: -8.603675842285156
    10. 'chie' → logprob: -9.603675842285156

Token 285: 'ouc' (ID: 46268)
  Prédit: 'ique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.6970811486244202
    2. 'ch' → logprob: -1.1970810890197754
    3. 'ic' → logprob: -2.4470810890197754
    4. '```' → logprob: -3.1970810890197754
    5. '   ' → logprob: -4.072081089019775
    6. '**' → logprob: -4.947081089019775
    7. '``' → logprob: -4.947081089019775
    8. '#' → logprob: -5.697081089019775
    9. 'e' → logprob: -5.697081089019775
    10. 'che' → logprob: -5.947081089019775

Token 286: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13893304765224457
    2. '   ' → logprob: -3.263932943344116
    3. '        
' → logprob: -3.763932943344116
    4. '<|end|>' → logprob: -4.013933181762695
    5. ')' → logprob: -4.388933181762695
    6. '    ' → logprob: -4.888933181762695
    7. ':' → logprob: -5.388933181762695
    8. ',' → logprob: -5.513933181762695
    9. ' for' → logprob: -5.763933181762695
    10. '    
' → logprob: -5.763933181762695

Token 287: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 288: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 289: ' Le' (ID: 2018)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.984153151512146
    2. '       ' → logprob: -1.359153151512146
    3. ' for' → logprob: -2.1091532707214355
    4. '   ' → logprob: -2.3591532707214355
    5. '    ' → logprob: -2.9841532707214355
    6. '	' → logprob: -3.9841532707214355
    7. ' ' → logprob: -3.9841532707214355
    8. '<|end|>' → logprob: -4.1091532707214355
    9. '	for' → logprob: -4.4841532707214355
    10. ')' → logprob: -4.8591532707214355

Token 290: ' triangle' (ID: 41487)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9820108413696289
    2. ' for' → logprob: -1.232010841369629
    3. ' code' → logprob: -2.732010841369629
    4. ' #' → logprob: -2.982010841369629
    5. ' next' → logprob: -3.107010841369629
    6. '_' → logprob: -3.482010841369629
    7. '#' → logprob: -3.732010841369629
    8. ' ' → logprob: -4.232010841369629
    9. 's' → logprob: -5.232010841369629
    10. 'i' → logprob: -5.232010841369629

Token 291: ' a' (ID: 261)
  Prédit: ' bon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bon' → logprob: -0.22532327473163605
    2. ')' → logprob: -3.35032320022583
    3. ' good' → logprob: -3.72532320022583
    4. ' ' → logprob: -3.72532320022583
    5. 'bon' → logprob: -3.85032320022583
    6. '_' → logprob: -3.97532320022583
    7. ' )' → logprob: -4.47532320022583
    8. '<|end|>' → logprob: -4.60032320022583
    9. ' is' → logprob: -4.72532320022583
    10. ' ' → logprob: -4.72532320022583

Token 292: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4576629400253296
    2. '_' → logprob: -2.082663059234619
    3. ' =' → logprob: -2.207663059234619
    4. '=' → logprob: -3.582663059234619
    5. ',' → logprob: -3.707663059234619
    6. ')' → logprob: -4.207663059234619
    7. ' )' → logprob: -4.707663059234619
    8. '   ' → logprob: -4.957663059234619
    9. 's' → logprob: -5.332663059234619
    10. ''' → logprob: -5.457663059234619

Token 293: '3' (ID: 18)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9590653777122498
    2. 's' → logprob: -2.5840654373168945
    3. 'un' → logprob: -2.7090654373168945
    4. 'd' → logprob: -2.9590654373168945
    5. 'b' → logprob: -3.3340654373168945
    6. 't' → logprob: -3.3340654373168945
    7. 'a' → logprob: -3.5840654373168945
    8. '_' → logprob: -3.5840654373168945
    9. 'l' → logprob: -3.9590654373168945
    10. 'x' → logprob: -4.0840654373168945

Token 294: ' côtés' (ID: 103239)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.894463062286377
    2. '_' → logprob: -1.519463062286377
    3. '<|end|>' → logprob: -2.519463062286377
    4. ',' → logprob: -3.144463062286377
    5. '#' → logprob: -3.144463062286377
    6. ' ' → logprob: -3.519463062286377
    7. ' )' → logprob: -3.519463062286377
    8. 'points' → logprob: -3.644463062286377
    9. 's' → logprob: -4.269463062286377
    10. ' #' → logprob: -4.394463062286377

Token 295: ' :
' (ID: 10039)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25253045558929443
    2. '   ' → logprob: -2.502530574798584
    3. '        
' → logprob: -3.502530574798584
    4. '
' → logprob: -3.627530574798584
    5. '<|end|>' → logprob: -4.127530574798584
    6. ' for' → logprob: -4.377530574798584
    7. '    
' → logprob: -4.502530574798584
    8. ')' → logprob: -4.627530574798584
    9. ':' → logprob: -4.877530574798584
    10. '    ' → logprob: -5.002530574798584

Token 296: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 297: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2800954580307007
    2. '    ' → logprob: -3.2800955772399902
    3. '        ' → logprob: -3.4050955772399902
    4. ')' → logprob: -3.5300955772399902
    5. '   ' → logprob: -3.5300955772399902
    6. ' ' → logprob: -3.7800955772399902
    7. ',' → logprob: -3.7800955772399902
    8. '<|end|>' → logprob: -4.90509557723999
    9. '  ' → logprob: -5.03009557723999
    10. '      ' → logprob: -5.15509557723999

Token 298: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3281385600566864
    2. '       ' → logprob: -1.7031385898590088
    3. ' #' → logprob: -2.578138589859009
    4. ' for' → logprob: -4.32813835144043
    5. 'for' → logprob: -5.32813835144043
    6. '        ' → logprob: -7.57813835144043
    7. '   ' → logprob: -7.70313835144043
    8. 'A' → logprob: -8.32813835144043
    9. ' pass' → logprob: -8.32813835144043
    10. '        
' → logprob: -8.45313835144043

Token 299: ' côté' (ID: 33533)
  Prédit: ' covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' covered' → logprob: -1.0918889045715332
    2. ' for' → logprob: -1.8418889045715332
    3. 'for' → logprob: -1.9668889045715332
    4. 'covered' → logprob: -2.466888904571533
    5. '#' → logprob: -2.716888904571533
    6. ''' → logprob: -2.966888904571533
    7. '"' → logprob: -3.341888904571533
    8. ' A' → logprob: -3.841888904571533
    9. ')' → logprob: -3.966888904571533
    10. 'A' → logprob: -4.216888904571533

Token 300: ' vertical' (ID: 17679)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.2597079277038574
    2. 'A' → logprob: -2.2597079277038574
    3. '(A' → logprob: -2.6347079277038574
    4. 's' → logprob: -4.134707927703857
    5. ' (' → logprob: -4.634707927703857
    6. ',' → logprob: -4.634707927703857
    7. ' =' → logprob: -5.259707927703857
    8. ' ,' → logprob: -6.509707927703857
    9. ')' → logprob: -6.634707927703857
    10. '(' → logprob: -6.634707927703857

Token 301: ' entre' (ID: 3853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6907810568809509
    2. '<|end|>' → logprob: -1.8157811164855957
    3. ')' → logprob: -2.5657811164855957
    4. '[' → logprob: -2.9407811164855957
    5. ' (' → logprob: -3.4407811164855957
    6. ' ,' → logprob: -3.4407811164855957
    7. '   ' → logprob: -3.5657811164855957
    8. '<|end|>' → logprob: -3.6907811164855957
    9. ':' → logprob: -4.440781116485596
    10. ',
' → logprob: -4.565781116485596

Token 302: ' (' (ID: 350)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.05541803315281868
    2. ' A' → logprob: -2.930418014526367
    3. '(A' → logprob: -7.805418014526367
    4. ' (' → logprob: -9.680418014526367
    5. ' ' → logprob: -10.555418014526367
    6. ''A' → logprob: -11.430418014526367
    7. '   ' → logprob: -12.055418014526367
    8. '[A' → logprob: -12.555418014526367
    9. '	A' → logprob: -12.930418014526367
    10. 'B' → logprob: -13.305418014526367

Token 303: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00047821682528592646
    2. ')' → logprob: -8.37547779083252
    3. ' A' → logprob: -8.37547779083252
    4. ' ' → logprob: -12.25047779083252
    5. '   ' → logprob: -13.25047779083252
    6. ',' → logprob: -13.25047779083252
    7. ''A' → logprob: -13.75047779083252
    8. ' )' → logprob: -14.00047779083252
    9. '#' → logprob: -14.12547779083252
    10. 'B' → logprob: -14.37547779083252

Token 304: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3661060333251953
    2. '+' → logprob: -1.7411060333251953
    3. ')' → logprob: -3.2411060333251953
    4. ' ,' → logprob: -3.6161060333251953
    5. '+i' → logprob: -3.8661060333251953
    6. ' +' → logprob: -4.241106033325195
    7. '+A' → logprob: -4.616106033325195
    8. ',A' → logprob: -5.116106033325195
    9. ')+' → logprob: -5.866106033325195
    10. '   ' → logprob: -6.116106033325195

Token 305: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.055402014404535294
    2. ',' → logprob: -3.1804020404815674
    3. '+' → logprob: -5.555401802062988
    4. ' )' → logprob: -5.680401802062988
    5. ')
' → logprob: -6.805401802062988
    6. '   ' → logprob: -6.805401802062988
    7. ' ,' → logprob: -7.180401802062988
    8. ' and' → logprob: -8.055401802062988
    9. ' +' → logprob: -8.055401802062988
    10. '),' → logprob: -8.180401802062988

Token 306: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6082781553268433
    2. ',' → logprob: -1.8582781553268433
    3. '       ' → logprob: -1.8582781553268433
    4. '[' → logprob: -3.483278274536133
    5. '<|end|>' → logprob: -3.483278274536133
    6. '   ' → logprob: -3.733278274536133
    7. '    ' → logprob: -4.733278274536133
    8. ' and' → logprob: -4.858278274536133
    9. '),' → logprob: -5.108278274536133
    10. ' ' → logprob: -5.358278274536133

Token 307: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2936483323574066
    2. '(A' → logprob: -2.0436482429504395
    3. ' A' → logprob: -2.6686482429504395
    4. 'A' → logprob: -2.9186482429504395
    5. ')' → logprob: -6.9186482429504395
    6. '(' → logprob: -8.043648719787598
    7. ' ' → logprob: -9.668648719787598
    8. '   ' → logprob: -10.418648719787598
    9. ',' → logprob: -10.668648719787598
    10. ' ' → logprob: -11.043648719787598

Token 308: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.003651622449979186
    2. ' A' → logprob: -5.6286516189575195
    3. '(A' → logprob: -10.62865161895752
    4. ' ' → logprob: -11.50365161895752
    5. '   ' → logprob: -12.00365161895752
    6. ' (' → logprob: -13.00365161895752
    7. ')' → logprob: -13.12865161895752
    8. '	A' → logprob: -13.62865161895752
    9. ''A' → logprob: -14.00365161895752
    10. '
' → logprob: -14.00365161895752

Token 309: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0012185708619654179
    2. ' +' → logprob: -7.876218795776367
    3. '+A' → logprob: -7.876218795776367
    4. '+
' → logprob: -8.751218795776367
    5. '+B' → logprob: -8.876218795776367
    6. '+i' → logprob: -9.876218795776367
    7. ')+' → logprob: -10.376218795776367
    8. '+x' → logprob: -10.876218795776367
    9. 'X' → logprob: -11.001218795776367
    10. '
' → logprob: -11.626218795776367

Token 310: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0008826419361867011
    2. ' X' → logprob: -7.125882625579834
    3. '1' → logprob: -10.000883102416992
    4. '0' → logprob: -11.375883102416992
    5. ' ' → logprob: -11.500883102416992
    6. ')' → logprob: -12.000883102416992
    7. '
' → logprob: -13.500883102416992
    8. '	X' → logprob: -13.750883102416992
    9. '<|end|>' → logprob: -14.625883102416992
    10. '>X' → logprob: -15.000883102416992

Token 311: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1545276790857315
    2. ',X' → logprob: -2.9045276641845703
    3. ',B' → logprob: -3.2795276641845703
    4. ')' → logprob: -3.6545276641845703
    5. '+' → logprob: -3.7795276641845703
    6. '   ' → logprob: -7.77952766418457
    7. ',+' → logprob: -8.40452766418457
    8. ',
' → logprob: -8.77952766418457
    9. ',x' → logprob: -9.02952766418457
    10. ' ,' → logprob: -9.02952766418457

Token 312: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22079232335090637
    2. ')
' → logprob: -1.720792293548584
    3. '+' → logprob: -4.220792293548584
    4. '   ' → logprob: -6.345792293548584
    5. '       ' → logprob: -6.595792293548584
    6. ' )' → logprob: -8.470792770385742
    7. '):
' → logprob: -8.720792770385742
    8. '),' → logprob: -8.720792770385742
    9. ' )
' → logprob: -8.845792770385742
    10. ')
' → logprob: -9.220792770385742

Token 313: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011309175752103329
    2. ')' → logprob: -5.5113091468811035
    3. '   ' → logprob: -5.8863091468811035
    4. ',' → logprob: -7.0113091468811035
    5. '        
' → logprob: -7.5113091468811035
    6. '           ' → logprob: -7.6363091468811035
    7. '<|end|>' → logprob: -7.8863091468811035
    8. '#' → logprob: -8.261309623718262
    9. ' for' → logprob: -8.511309623718262
    10. ')
' → logprob: -8.511309623718262

Token 314: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13754704594612122
    2. '<|end|>' → logprob: -2.262547016143799
    3. ')' → logprob: -4.762547016143799
    4. '    ' → logprob: -5.262547016143799
    5. '        ' → logprob: -5.512547016143799
    6. '   ' → logprob: -6.512547016143799
    7. '<|end|>' → logprob: -6.637547016143799
    8. ',' → logprob: -7.262547016143799
    9. '#' (adapté à ' #') → logprob: -7.387547016143799
    10. '      ' → logprob: -7.387547016143799

Token 315: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.357837051153183
    2. '   ' → logprob: -1.9828370809555054
    3. 'for' → logprob: -2.732836961746216
    4. ' for' → logprob: -3.232836961746216
    5. '    ' → logprob: -3.857836961746216
    6. ')' → logprob: -3.982836961746216
    7. ' ' → logprob: -4.982837200164795
    8. '        ' → logprob: -6.357837200164795
    9. '        
' → logprob: -6.482837200164795
    10. '    
' → logprob: -6.607837200164795

Token 316: ' côté' (ID: 33533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6739946007728577
    2. ' ' → logprob: -2.173994541168213
    3. ' côté' → logprob: -2.923994541168213
    4. '    ' → logprob: -3.048994541168213
    5. '   ' → logprob: -3.173994541168213
    6. ' ' → logprob: -3.548994541168213
    7. ' #' → logprob: -3.548994541168213
    8. '        ' → logprob: -3.798994541168213
    9. ')' → logprob: -3.923994541168213
    10. '#' → logprob: -3.923994541168213

Token 317: ' diagonal' (ID: 71638)
  Prédit: ' vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vertical' → logprob: -0.3089867830276489
    2. 'vertical' → logprob: -1.808986783027649
    3. ' horizontal' → logprob: -2.5589866638183594
    4. 'horizontal' → logprob: -3.8089866638183594
    5. ' ' → logprob: -7.933986663818359
    6. ' horizont' → logprob: -7.933986663818359
    7. '    ' → logprob: -8.05898666381836
    8. ' verticale' → logprob: -8.05898666381836
    9. ' ' → logprob: -8.55898666381836
    10. ' horiz' → logprob: -9.05898666381836

Token 318: ' entre' (ID: 3853)
  Prédit: ' entre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.354075163602829
    2. ' between' → logprob: -1.2290751934051514
    3. 'between' → logprob: -6.104074954986572
    4. ')' → logprob: -6.729074954986572
    5. 'entre' → logprob: -7.604074954986572
    6. ' ' → logprob: -8.10407543182373
    7. ',' → logprob: -8.60407543182373
    8. '   ' → logprob: -8.97907543182373
    9. ' et' → logprob: -9.10407543182373
    10. ' (' → logprob: -9.10407543182373

Token 319: ' (' (ID: 350)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.1576513946056366
    2. ' (' → logprob: -2.282651424407959
    3. 'A' → logprob: -3.282651424407959
    4. ' A' → logprob: -5.157651424407959
    5. '(' → logprob: -7.657651424407959
    6. ' ' → logprob: -10.1576509475708
    7. '   ' → logprob: -11.2826509475708
    8. '(
' → logprob: -12.0326509475708
    9. ')' → logprob: -12.4076509475708
    10. ' ' → logprob: -12.5326509475708

Token 320: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00011594036914175376
    2. ' A' → logprob: -9.125116348266602
    3. 'B' → logprob: -12.750116348266602
    4. ')' → logprob: -13.125116348266602
    5. '   ' → logprob: -13.750116348266602
    6. '(A' → logprob: -14.625116348266602
    7. '	A' → logprob: -15.750116348266602
    8. ' ' → logprob: -15.875116348266602
    9. 'X' → logprob: -16.6251163482666
    10. ',' → logprob: -16.7501163482666

Token 321: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015999639872461557
    2. '+i' → logprob: -7.1265997886657715
    3. '+x' → logprob: -8.12660026550293
    4. '+A' → logprob: -8.87660026550293
    5. '+B' → logprob: -9.12660026550293
    6. ',' → logprob: -9.12660026550293
    7. ',X' → logprob: -9.87660026550293
    8. ' +' → logprob: -10.50160026550293
    9. '+
' → logprob: -10.87660026550293
    10. '+,' → logprob: -11.25160026550293

Token 322: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0003442832676228136
    2. ' X' → logprob: -8.375344276428223
    3. '1' → logprob: -9.375344276428223
    4. '	X' → logprob: -11.375344276428223
    5. ' ' → logprob: -12.375344276428223
    6. ',' → logprob: -12.625344276428223
    7. '
' → logprob: -12.750344276428223
    8. ')' → logprob: -13.250344276428223
    9. 'x' → logprob: -13.500344276428223
    10. '   ' → logprob: -13.875344276428223

Token 323: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31366077065467834
    2. ',B' → logprob: -1.313660740852356
    3. ' ,' → logprob: -8.813660621643066
    4. '   ' → logprob: -9.813660621643066
    5. ',X' → logprob: -10.188660621643066
    6. ',b' → logprob: -10.313660621643066
    7. ',A' → logprob: -10.938660621643066
    8. ',
' → logprob: -10.938660621643066
    9. ',Y' → logprob: -11.063660621643066
    10. '+' → logprob: -11.688660621643066

Token 324: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1339104175567627
    2. ',' → logprob: -2.7589104175567627
    3. ')' → logprob: -3.7589104175567627
    4. ' +' → logprob: -3.8839104175567627
    5. '),' → logprob: -4.758910179138184
    6. '+i' → logprob: -5.633910179138184
    7. '+x' → logprob: -6.133910179138184
    8. '+
' → logprob: -6.883910179138184
    9. ')+' → logprob: -7.508910179138184
    10. ' ,' → logprob: -8.133910179138184

Token 325: ' et' (ID: 859)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.46277111768722534
    2. ',' → logprob: -1.4627711772918701
    3. ' +' → logprob: -2.21277117729187
    4. ')' → logprob: -3.96277117729187
    5. '+
' → logprob: -6.212770938873291
    6. ' ,' → logprob: -6.212770938873291
    7. '   ' → logprob: -6.837770938873291
    8. '+)' → logprob: -7.087770938873291
    9. '       ' → logprob: -7.212770938873291
    10. ',
' → logprob: -7.587770938873291

Token 326: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.07933080196380615
    2. '(A' → logprob: -2.5793309211730957
    3. '(' → logprob: -7.954330921173096
    4. 'A' → logprob: -10.454330444335938
    5. ' A' → logprob: -10.454330444335938
    6. ' ' → logprob: -11.954330444335938
    7. ')' → logprob: -11.954330444335938
    8. ''' → logprob: -12.079330444335938
    9. ',' → logprob: -13.454330444335938
    10. ' 
' → logprob: -13.454330444335938

Token 327: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.024015536531805992
    2. ' A' → logprob: -3.774015426635742
    3. '(A' → logprob: -7.649015426635742
    4. ' (' → logprob: -8.274015426635742
    5. '   ' → logprob: -11.899015426635742
    6. 'B' → logprob: -12.024015426635742
    7. ' ' → logprob: -12.024015426635742
    8. ')' → logprob: -12.649015426635742
    9. '	A' → logprob: -12.774015426635742
    10. '(' → logprob: -12.899015426635742

Token 328: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007344625773839653
    2. ',X' → logprob: -7.750734329223633
    3. ',' → logprob: -8.875734329223633
    4. '+B' → logprob: -9.625734329223633
    5. '+,' → logprob: -9.875734329223633
    6. ' +' → logprob: -11.125734329223633
    7. '+
' → logprob: -11.125734329223633
    8. '+x' → logprob: -12.125734329223633
    9. ',B' → logprob: -12.625734329223633
    10. '+A' → logprob: -13.000734329223633

Token 329: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -8.77627644513268e-06
    2. ' X' → logprob: -11.875008583068848
    3. 'B' → logprob: -13.750008583068848
    4. '+' → logprob: -15.250008583068848
    5. ' ' → logprob: -15.750008583068848
    6. 'x' → logprob: -16.625009536743164
    7. '
' → logprob: -17.375009536743164
    8. ',' → logprob: -17.625009536743164
    9. '```' → logprob: -17.625009536743164
    10. '   ' → logprob: -17.875009536743164

Token 330: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12915830314159393
    2. ',B' → logprob: -2.1291582584381104
    3. ',X' → logprob: -6.8791584968566895
    4. '+' → logprob: -7.6291584968566895
    5. ' ,' → logprob: -8.254158020019531
    6. ',b' → logprob: -8.629158020019531
    7. '	' → logprob: -10.004158020019531
    8. ',Y' → logprob: -10.004158020019531
    9. '+B' → logprob: -10.629158020019531
    10. ',C' → logprob: -10.754158020019531

Token 331: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.36099353432655334
    2. ',' → logprob: -1.235993504524231
    3. ' +' → logprob: -5.360993385314941
    4. '+,' → logprob: -6.110993385314941
    5. ',X' → logprob: -6.485993385314941
    6. '+
' → logprob: -6.735993385314941
    7. '+B' → logprob: -7.610993385314941
    8. ',B' → logprob: -7.735993385314941
    9. ')' → logprob: -7.735993385314941
    10. ',+' → logprob: -7.985993385314941

Token 332: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0001600347168277949
    2. ' X' → logprob: -8.875160217285156
    3. '1' → logprob: -11.375160217285156
    4. '
' → logprob: -12.000160217285156
    5. ' ' → logprob: -14.125160217285156
    6. ')' → logprob: -14.375160217285156
    7. '	X' → logprob: -15.375160217285156
    8. '<|end|>' → logprob: -15.500160217285156
    9. '0' → logprob: -15.875160217285156
    10. '

' → logprob: -16.000160217285156

Token 333: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0740305632352829
    2. '+' → logprob: -2.699030637741089
    3. ')
' → logprob: -6.57403039932251
    4. '):' → logprob: -6.57403039932251
    5. ' )' → logprob: -7.69903039932251
    6. ' +' → logprob: -7.94903039932251
    7. '   ' → logprob: -8.949030876159668
    8. '-' → logprob: -8.949030876159668
    9. '):
' → logprob: -9.949030876159668
    10. '       ' → logprob: -10.074030876159668

Token 334: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0409935861825943
    2. ')' → logprob: -3.9159936904907227
    3. '<|end|>' → logprob: -4.415993690490723
    4. '   ' → logprob: -6.665993690490723
    5. ' ' → logprob: -6.790993690490723
    6. ' )' → logprob: -6.790993690490723
    7. '    ' → logprob: -7.040993690490723
    8. '        ' → logprob: -7.165993690490723
    9. ',' → logprob: -7.290993690490723
    10. '        
' → logprob: -7.665993690490723

Token 335: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037912603467702866
    2. ')' → logprob: -4.287912368774414
    3. '#' (adapté à ' #') → logprob: -4.412912368774414
    4. '<|end|>' → logprob: -4.662912368774414
    5. '   ' → logprob: -7.912912368774414
    6. '<|end|>' → logprob: -8.037912368774414
    7. ' )' → logprob: -8.412912368774414
    8. '        ' → logprob: -8.787912368774414
    9. ',' → logprob: -9.037912368774414
    10. '    ' → logprob: -9.162912368774414

Token 336: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01261783204972744
    2. '	' → logprob: -5.387618064880371
    3. ' for' → logprob: -6.012618064880371
    4. '   ' → logprob: -6.137618064880371
    5. ')' → logprob: -7.387618064880371
    6. '        
' → logprob: -7.512618064880371
    7. ' and' → logprob: -7.887618064880371
    8. '	   ' → logprob: -8.262618064880371
    9. '#' → logprob: -8.387618064880371
    10. '           ' → logprob: -8.387618064880371

Token 337: ' côté' (ID: 33533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.668296217918396
    2. ' ' → logprob: -2.4182963371276855
    3. '   ' → logprob: -2.4182963371276855
    4. 'c' → logprob: -2.7932963371276855
    5. '    ' → logprob: -3.0432963371276855
    6. ' vertical' → logprob: -3.2932963371276855
    7. ' ' → logprob: -3.6682963371276855
    8. '#' → logprob: -3.7932963371276855
    9. ' #' → logprob: -3.9182963371276855
    10. ' côté' → logprob: -3.9182963371276855

Token 338: ' horizontal' (ID: 25511)
  Prédit: ' horizontal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' horizontal' → logprob: -0.10887708514928818
    2. ' vertical' → logprob: -2.983877182006836
    3. 'horizontal' → logprob: -3.358877182006836
    4. ' diagonal' → logprob: -4.358877182006836
    5. 'vertical' → logprob: -5.483877182006836
    6. ' ' → logprob: -8.233877182006836
    7. ' ' → logprob: -8.733877182006836
    8. ' horiz' → logprob: -8.983877182006836
    9. ' horizont' → logprob: -10.233877182006836
    10. ' A' → logprob: -10.233877182006836

Token 339: ' entre' (ID: 3853)
  Prédit: ' between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.45072439312934875
    2. ' entre' → logprob: -1.0757243633270264
    3. 'between' → logprob: -4.4507246017456055
    4. '<|end|>' → logprob: -5.0757246017456055
    5. ' ' → logprob: -6.9507246017456055
    6. '<|end|>' → logprob: -7.0757246017456055
    7. 'entre' → logprob: -7.2007246017456055
    8. ')' → logprob: -8.325724601745605
    9. '    ' → logprob: -8.325724601745605
    10. ' (' → logprob: -8.575724601745605

Token 340: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.06197485327720642
    2. '(A' → logprob: -2.8119747638702393
    3. '(' → logprob: -12.06197452545166
    4. ' ' → logprob: -14.93697452545166
    5. ' ' → logprob: -14.93697452545166
    6. ' A' → logprob: -15.18697452545166
    7. '(B' → logprob: -15.31197452545166
    8. 'A' → logprob: -16.311975479125977
    9. '(a' → logprob: -16.686975479125977
    10. '(
' → logprob: -17.561975479125977

Token 341: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00041386886732652783
    2. ' A' → logprob: -7.87541389465332
    3. '(A' → logprob: -11.00041389465332
    4. ')' → logprob: -11.50041389465332
    5. '   ' → logprob: -13.00041389465332
    6. '	A' → logprob: -13.37541389465332
    7. ' (' → logprob: -14.25041389465332
    8. 'B' → logprob: -14.37541389465332
    9. ' ' → logprob: -14.87541389465332
    10. 'X' → logprob: -15.00041389465332

Token 342: ',B' (ID: 19853)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04611826688051224
    2. ',' → logprob: -3.6711182594299316
    3. ',B' → logprob: -4.796118259429932
    4. '+B' → logprob: -4.921118259429932
    5. ',A' → logprob: -6.296118259429932
    6. '+A' → logprob: -6.671118259429932
    7. ',+' → logprob: -8.17111873626709
    8. ',X' → logprob: -8.79611873626709
    9. ' +' → logprob: -9.04611873626709
    10. '+,' → logprob: -9.04611873626709

Token 343: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.039204828441143036
    2. '+' → logprob: -3.9142048358917236
    3. ')' → logprob: -4.1642045974731445
    4. ' ,' → logprob: -6.1642045974731445
    5. '),' → logprob: -8.039204597473145
    6. '   ' → logprob: -8.914204597473145
    7. ' +' → logprob: -9.164204597473145
    8. ',
' → logprob: -9.789204597473145
    9. ',B' → logprob: -9.914204597473145
    10. ' )' → logprob: -10.164204597473145

Token 344: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04006817564368248
    2. ' ,' → logprob: -3.2900681495666504
    3. ',B' → logprob: -7.16506814956665
    4. '+' → logprob: -7.41506814956665
    5. ')' → logprob: -8.290068626403809
    6. '   ' → logprob: -9.040068626403809
    7. '       ' → logprob: -9.790068626403809
    8. '),' → logprob: -10.290068626403809
    9. ',
' → logprob: -10.415068626403809
    10. '<|end|>' → logprob: -10.915068626403809

Token 345: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.038043901324272156
    2. '(A' → logprob: -3.288043975830078
    3. '(B' → logprob: -13.413043975830078
    4. '(' → logprob: -14.788043975830078
    5. ' ' → logprob: -15.663043975830078
    6. '   ' → logprob: -16.038043975830078
    7. ' A' → logprob: -16.663043975830078
    8. '(C' → logprob: -17.288043975830078
    9. ')' → logprob: -17.538043975830078
    10. ',' → logprob: -18.288043975830078

Token 346: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.002590169431641698
    2. ' A' → logprob: -6.127590179443359
    3. 'B' → logprob: -8.12759017944336
    4. '(A' → logprob: -9.25259017944336
    5. ' (' → logprob: -12.12759017944336
    6. ')' → logprob: -12.87759017944336
    7. ' ' → logprob: -13.25259017944336
    8. ' B' → logprob: -13.87759017944336
    9. '	A' → logprob: -14.12759017944336
    10. ',A' → logprob: -14.37759017944336

Token 347: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5846025943756104
    2. '+' → logprob: -0.8346025943756104
    3. ',B' → logprob: -5.459602355957031
    4. '+
' → logprob: -6.334602355957031
    5. '+,' → logprob: -7.084602355957031
    6. '+B' → logprob: -7.209602355957031
    7. ',
' → logprob: -7.834602355957031
    8. ',+' → logprob: -8.209602355957031
    9. ',C' → logprob: -9.834602355957031
    10. '
' → logprob: -9.834602355957031

Token 348: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0009910109220072627
    2. 'B' → logprob: -7.500990867614746
    3. ' X' → logprob: -8.000990867614746
    4. ')' → logprob: -9.375990867614746
    5. ' ' → logprob: -11.875990867614746
    6. '+' → logprob: -13.125990867614746
    7. '```' → logprob: -13.250990867614746
    8. ' B' → logprob: -13.500990867614746
    9. 'A' → logprob: -14.000990867614746
    10. 'x' → logprob: -14.375990867614746

Token 349: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.07938552647829056
    2. ',' → logprob: -2.57938551902771
    3. ',b' → logprob: -8.579385757446289
    4. ' ,' → logprob: -9.079385757446289
    5. ',
' → logprob: -9.579385757446289
    6. '+' → logprob: -10.079385757446289
    7. ',X' → logprob: -11.204385757446289
    8. '   ' → logprob: -11.329385757446289
    9. ')' → logprob: -11.704385757446289
    10. ',Y' → logprob: -11.829385757446289

Token 350: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5300281047821045
    2. '+' → logprob: -0.9050281047821045
    3. '+)' → logprob: -5.655028343200684
    4. ',' → logprob: -6.405028343200684
    5. ')
' → logprob: -7.405028343200684
    6. ' +' → logprob: -7.905028343200684
    7. '   ' → logprob: -8.655028343200684
    8. ' )' → logprob: -9.030028343200684
    9. ')+' → logprob: -9.030028343200684
    10. '),' → logprob: -9.155028343200684

Token 351: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0016744681634008884
    2. ')' → logprob: -7.001674652099609
    3. '0' → logprob: -7.626674652099609
    4. '+' → logprob: -9.12667465209961
    5. ' X' → logprob: -9.37667465209961
    6. 'A' → logprob: -10.50167465209961
    7. ' ' → logprob: -10.75167465209961
    8. 'B' → logprob: -11.12667465209961
    9. '_X' → logprob: -13.00167465209961
    10. '<|end|>' → logprob: -13.00167465209961

Token 352: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16650338470935822
    2. ')
' → logprob: -1.9165034294128418
    3. '       ' → logprob: -5.541503429412842
    4. '   ' → logprob: -6.541503429412842
    5. ')
' → logprob: -7.791503429412842
    6. ')

' → logprob: -9.166502952575684
    7. ' )' → logprob: -9.416502952575684
    8. '):' → logprob: -9.666502952575684
    9. ' )
' → logprob: -9.666502952575684
    10. '):
' → logprob: -9.916502952575684

Token 353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03906199336051941
    2. '   ' → logprob: -4.039062023162842
    3. ' for' → logprob: -4.664062023162842
    4. 'for' → logprob: -5.664062023162842
    5. '        
' → logprob: -6.164062023162842
    6. '    
' → logprob: -6.664062023162842
    7. '
' → logprob: -6.789062023162842
    8. '	' → logprob: -6.914062023162842
    9. '    ' → logprob: -7.289062023162842
    10. ' 
' → logprob: -8.664061546325684

Token 354: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5334067344665527
    2. ' for' → logprob: -1.7834067344665527
    3. '   ' → logprob: -2.2834067344665527
    4. 'for' → logprob: -2.2834067344665527
    5. '    
' → logprob: -4.033406734466553
    6. '    ' → logprob: -4.658406734466553
    7. '        
' → logprob: -5.283406734466553
    8. ' 
' → logprob: -6.283406734466553
    9. '
' → logprob: -6.783406734466553
    10. '	for' → logprob: -6.908406734466553

Token 355: ' Mais' (ID: 13880)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5064331889152527
    2. '       ' → logprob: -1.1314332485198975
    3. ' for' → logprob: -2.7564332485198975
    4. '   ' → logprob: -4.756433010101318
    5. 'i' → logprob: -6.256433010101318
    6. '	for' → logprob: -8.256433486938477
    7. ' i' → logprob: -8.631433486938477
    8. '	' → logprob: -9.131433486938477
    9. '    ' → logprob: -10.006433486938477
    10. '```' → logprob: -10.506433486938477

Token 356: ' en' (ID: 469)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5484701991081238
    2. ' for' → logprob: -1.5484702587127686
    3. 'for' → logprob: -2.2984702587127686
    4. '    ' → logprob: -3.0484702587127686
    5. '   ' → logprob: -4.0484700202941895
    6. '        ' → logprob: -4.5484700202941895
    7. '        
' → logprob: -4.5484700202941895
    8. ' ' → logprob: -5.5484700202941895
    9. '    
' → logprob: -5.6734700202941895
    10. '
' → logprob: -5.9234700202941895

Token 357: ' fait' (ID: 7473)
  Prédit: ' fait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fait' → logprob: -0.9514228701591492
    2. 'for' → logprob: -1.701422929763794
    3. ' continu' → logprob: -2.201422929763794
    4. 'fait' → logprob: -2.826422929763794
    5. 'faite' → logprob: -3.451422929763794
    6. ' for' → logprob: -3.826422929763794
    7. ' réalité' → logprob: -3.951422929763794
    8. 'suite' → logprob: -4.076422691345215
    9. '```' → logprob: -4.326422691345215
    10. 'range' → logprob: -4.451422691345215

Token 358: ' il' (ID: 1793)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04098649322986603
    2. ' for' → logprob: -3.9159865379333496
    3. ',' → logprob: -4.54098653793335
    4. 'for' → logprob: -6.04098653793335
    5. '        ' → logprob: -6.91598653793335
    6. '   ' → logprob: -7.04098653793335
    7. ' on' → logprob: -7.16598653793335
    8. ' ' → logprob: -7.29098653793335
    9. '           ' → logprob: -7.66598653793335
    10. ' ind' → logprob: -7.79098653793335

Token 359: ' faut' (ID: 17821)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.637667179107666
    2. '   ' → logprob: -1.137667179107666
    3. ' for' → logprob: -2.512667179107666
    4. ':' → logprob: -4.512667179107666
    5. ' continues' → logprob: -4.512667179107666
    6. 'continue' → logprob: -5.262667179107666
    7. '=' → logprob: -5.387667179107666
    8. ' is' → logprob: -5.387667179107666
    9. ' continue' → logprob: -5.512667179107666
    10. '    ' → logprob: -5.762667179107666

Token 360: ' mar' (ID: 2674)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.47007814049720764
    2. ' mar' → logprob: -1.7200781106948853
    3. 'co' → logprob: -3.345078229904175
    4. 'contin' → logprob: -3.470078229904175
    5. 'incl' → logprob: -3.595078229904175
    6. 'for' → logprob: -4.220077991485596
    7. ' couvrir' → logprob: -4.595077991485596
    8. 'coder' → logprob: -4.595077991485596
    9. 'mark' → logprob: -4.970077991485596
    10. 'aj' → logprob: -5.095077991485596

Token 361: 'quer' (ID: 8054)
  Prédit: 'quer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quer' → logprob: -0.17863348126411438
    2. 'ker' → logprob: -1.928633451461792
    3. 'k' → logprob: -4.303633689880371
    4. '   ' → logprob: -5.928633689880371
    5. '       ' → logprob: -7.053633689880371
    6. 'qu' → logprob: -7.678633689880371
    7. '#' → logprob: -8.803633689880371
    8. 'que' → logprob: -9.053633689880371
    9. '           ' → logprob: -9.178633689880371
    10. 'q' → logprob: -9.678633689880371

Token 362: ' tous' (ID: 10688)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.7548190951347351
    2. 'for' → logprob: -1.5048191547393799
    3. ' for' → logprob: -1.6298191547393799
    4. '   ' → logprob: -3.25481915473938
    5. '       ' → logprob: -3.50481915473938
    6. '     
' → logprob: -4.129818916320801
    7. '        
' → logprob: -5.504818916320801
    8. '    
' → logprob: -5.504818916320801
    9. ' 
' → logprob: -5.504818916320801
    10. ' ' → logprob: -5.629818916320801

Token 363: ' les' (ID: 1341)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4631601870059967
    2. 'i' → logprob: -1.3381601572036743
    3. '       ' → logprob: -3.588160276412964
    4. '   ' → logprob: -4.213160037994385
    5. 'for' → logprob: -4.213160037994385
    6. '    ' → logprob: -4.338160037994385
    7. ' ' → logprob: -4.963160037994385
    8. ' for' → logprob: -5.088160037994385
    9. '(i' → logprob: -5.588160037994385
    10. 'les' → logprob: -5.588160037994385

Token 364: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.7382602095603943
    2. 'i' → logprob: -0.9882602095603943
    3. 'for' → logprob: -2.613260269165039
    4. ' points' → logprob: -3.488260269165039
    5. ' i' → logprob: -3.613260269165039
    6. ' for' → logprob: -4.738260269165039
    7. 'lines' → logprob: -5.988260269165039
    8. ' 
' → logprob: -6.988260269165039
    9. '       ' → logprob: -7.238260269165039
    10. '```' → logprob: -7.238260269165039

Token 365: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010806680656969547
    2. ' for' → logprob: -5.635806560516357
    3. '    ' → logprob: -6.635806560516357
    4. '        
' → logprob: -6.760806560516357
    5. '   ' → logprob: -7.010806560516357
    6. 'for' → logprob: -7.260806560516357
    7. '<|end|>' → logprob: -7.260806560516357
    8. '	' → logprob: -7.385806560516357
    9. '        ' → logprob: -7.885806560516357
    10. ',' → logprob: -8.135807037353516

Token 366: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5175793766975403
    2. ' l' → logprob: -1.0175793170928955
    3. ' partir' → logprob: -4.392579555511475
    4. 'c' → logprob: -4.517579555511475
    5. 'int' → logprob: -4.767579555511475
    6. 'i' → logprob: -6.392579555511475
    7. ' couvrir' → logprob: -6.392579555511475
    8. 'part' → logprob: -6.642579555511475
    9. '
' → logprob: -7.142579555511475
    10. 'A' → logprob: -7.392579555511475

Token 367: ''intérieur' (ID: 102083)
  Prédit: ''intérieur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''intérieur' → logprob: -0.06522883474826813
    2. 'int' → logprob: -3.0652289390563965
    3. '’intérieur' → logprob: -4.9402289390563965
    4. 'a' → logprob: -5.9402289390563965
    5. 'inter' → logprob: -6.1902289390563965
    6. ''int' → logprob: -6.3152289390563965
    7. ''inter' → logprob: -6.8152289390563965
    8. ' intérieur' → logprob: -7.1902289390563965
    9. ''extérieur' → logprob: -9.065228462219238
    10. '_int' → logprob: -9.190228462219238

Token 368: ' du' (ID: 1462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00727684935554862
    2. '   ' → logprob: -5.882277011871338
    3. ' for' → logprob: -6.007277011871338
    4. 'for' → logprob: -7.132277011871338
    5. '	' → logprob: -7.632277011871338
    6. '        
' → logprob: -8.38227653503418
    7. '	   ' → logprob: -9.25727653503418
    8. '           ' → logprob: -9.38227653503418
    9. '    ' → logprob: -9.75727653503418
    10. '    
' → logprob: -10.00727653503418

Token 369: ' triangle' (ID: 41487)
  Prédit: 'triangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'triangle' → logprob: -0.0856589525938034
    2. 'for' → logprob: -3.2106590270996094
    3. ' triangle' → logprob: -3.3356590270996094
    4. ' for' → logprob: -5.835659027099609
    5. 'tri' → logprob: -6.960659027099609
    6. '
' → logprob: -7.585659027099609
    7. '#' → logprob: -7.585659027099609
    8. '```' → logprob: -8.08565902709961
    9. 'if' → logprob: -8.46065902709961
    10. 'range' → logprob: -9.08565902709961

Token 370: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003690574551001191
    2. ' for' → logprob: -6.253690719604492
    3. '   ' → logprob: -7.378690719604492
    4. 'for' → logprob: -7.503690719604492
    5. '        
' → logprob: -8.503690719604492
    6. '	' → logprob: -8.878690719604492
    7. '    ' → logprob: -10.003690719604492
    8. '           ' → logprob: -10.128690719604492
    9. ',' → logprob: -10.628690719604492
    10. '	   ' → logprob: -11.128690719604492

Token 371: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01626485399901867
    2. '   ' → logprob: -5.141264915466309
    3. ' for' → logprob: -5.141264915466309
    4. '        
' → logprob: -6.766264915466309
    5. 'for' → logprob: -7.141264915466309
    6. '
' → logprob: -7.766264915466309
    7. '    
' → logprob: -7.766264915466309
    8. '	' → logprob: -7.891264915466309
    9. ',' → logprob: -8.016264915466309
    10. '    ' → logprob: -8.766264915466309

Token 372: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01258335541933775
    2. 'for' → logprob: -5.637583255767822
    3. ' for' → logprob: -5.762583255767822
    4. '
' → logprob: -5.762583255767822
    5. '        
' → logprob: -6.762583255767822
    6. '   ' → logprob: -7.137583255767822
    7. '	' → logprob: -8.01258373260498
    8. '    
' → logprob: -9.51258373260498
    9. '    ' → logprob: -9.88758373260498
    10. '           ' → logprob: -10.26258373260498

Token 373: ' La' (ID: 3038)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0649576410651207
    2. ' for' → logprob: -3.064957618713379
    3. 'for' → logprob: -4.314957618713379
    4. '   ' → logprob: -6.564957618713379
    5. '	' → logprob: -7.314957618713379
    6. '	for' → logprob: -7.814957618713379
    7. ' i' → logprob: -9.314957618713379
    8. '        
' → logprob: -9.439957618713379
    9. '	   ' → logprob: -9.689957618713379
    10. 'i' → logprob: -9.939957618713379

Token 374: ' «' (ID: 2415)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11348914355039597
    2. ' for' → logprob: -2.2384891510009766
    3. 'range' → logprob: -8.238489151000977
    4. 'r' → logprob: -9.613489151000977
    5. 'i' → logprob: -9.738489151000977
    6. '
' → logprob: -9.863489151000977
    7. ' range' → logprob: -9.863489151000977
    8. '   ' → logprob: -10.738489151000977
    9. 'space' → logprob: -10.738489151000977
    10. 'def' → logprob: -10.863489151000977

Token 375: ' ' (ID: 5310)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3879581093788147
    2. ' for' → logprob: -1.13795804977417
    3. 'i' → logprob: -7.88795804977417
    4. '   ' → logprob: -8.262958526611328
    5. 'range' → logprob: -9.637958526611328
    6. '
' → logprob: -9.762958526611328
    7. 'space' → logprob: -9.762958526611328
    8. ' i' → logprob: -10.262958526611328
    9. 'def' → logprob: -10.387958526611328
    10. 'indent' → logprob: -10.512958526611328

Token 376: 'bonne' (ID: 119906)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004999397788196802
    2. ' for' → logprob: -5.379999160766602
    3. '   ' → logprob: -8.879999160766602
    4. '#' → logprob: -9.004999160766602
    5. '
' → logprob: -9.754999160766602
    6. 'def' → logprob: -11.004999160766602
    7. 'while' → logprob: -11.754999160766602
    8. 'i' → logprob: -11.754999160766602
    9. ' #' → logprob: -12.004999160766602
    10. 'pour' → logprob: -12.504999160766602

Token 377: ' »' (ID: 4334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2013161182403564
    2. 'indent' → logprob: -1.8263161182403564
    3. ' indentation' → logprob: -2.3263161182403564
    4. 'def' → logprob: -2.4513161182403564
    5. '   ' → logprob: -2.5763161182403564
    6. ' for' → logprob: -3.2013161182403564
    7. '_triangle' → logprob: -3.4513161182403564
    8. ' partie' → logprob: -3.4513161182403564
    9. ' def' → logprob: -3.8263161182403564
    10. 's' → logprob: -3.9513161182403564

Token 378: ' définition' (ID: 116583)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.028432101011276245
    2. ' for' → logprob: -4.1534318923950195
    3. '   ' → logprob: -5.6534318923950195
    4. 'indent' → logprob: -5.7784318923950195
    5. 'def' → logprob: -6.7784318923950195
    6. 'part' → logprob: -7.0284318923950195
    7. ' partie' → logprob: -7.1534318923950195
    8. ' indentation' → logprob: -7.1534318923950195
    9. 'ligne' → logprob: -7.6534318923950195
    10. '#' → logprob: -7.9034318923950195

Token 379: ' est' (ID: 893)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004033518023788929
    2. '   ' → logprob: -6.75403356552124
    3. ' for' → logprob: -7.25403356552124
    4. '<|end|>' → logprob: -7.62903356552124
    5. '        
' → logprob: -7.75403356552124
    6. ',' → logprob: -7.87903356552124
    7. '    
' → logprob: -8.879033088684082
    8. '    ' → logprob: -8.879033088684082
    9. ':' → logprob: -9.129033088684082
    10. 'for' → logprob: -9.504033088684082

Token 380: ' que' (ID: 661)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049399420619010925
    2. 'for' → logprob: -3.6743993759155273
    3. ':' → logprob: -4.424399375915527
    4. ' for' → logprob: -4.924399375915527
    5. ' que' → logprob: -7.299399375915527
    6. ' de' → logprob: -7.674399375915527
    7. 'de' → logprob: -7.674399375915527
    8. 'que' → logprob: -7.799399375915527
    9. 'pour' → logprob: -7.924399375915527
    10. '        ' → logprob: -8.549399375915527

Token 381: ' tous' (ID: 10688)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.257967084646225
    2. 'pour' → logprob: -1.5079671144485474
    3. ' for' → logprob: -5.507966995239258
    4. ' pour' → logprob: -7.632966995239258
    5. 'le' → logprob: -8.132966995239258
    6. '       ' → logprob: -8.257966995239258
    7. '   ' → logprob: -9.007966995239258
    8. 'if' → logprob: -9.132966995239258
    9. 'la' → logprob: -9.132966995239258
    10. 't' → logprob: -9.257966995239258

Token 382: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43194520473480225
    2. ' for' → logprob: -1.1819452047348022
    3. ' i' → logprob: -3.431945323944092
    4. 'i' → logprob: -5.181945323944092
    5. '   ' → logprob: -6.056945323944092
    6. '       ' → logprob: -6.431945323944092
    7. '  ' → logprob: -7.681945323944092
    8. ' ' → logprob: -8.181944847106934
    9. '    ' → logprob: -8.181944847106934
    10. '	for' → logprob: -8.306944847106934

Token 383: ' cl' (ID: 567)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7625278830528259
    2. 'for' → logprob: -1.2625279426574707
    3. 'points' → logprob: -1.6375279426574707
    4. ' for' → logprob: -3.5125279426574707
    5. ' points' → logprob: -4.637527942657471
    6. ' i' → logprob: -4.887527942657471
    7. 'lines' → logprob: -5.637527942657471
    8. 'j' → logprob: -6.387527942657471
    9. 'point' → logprob: -7.387527942657471
    10. 'x' → logprob: -7.512527942657471

Token 384: 'ous' (ID: 784)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.4349933862686157
    2. 'ass' → logprob: -1.4349933862686157
    3. 'a' → logprob: -1.9349933862686157
    4. 'i' → logprob: -2.184993267059326
    5. '#' → logprob: -2.934993267059326
    6. 'asse' → logprob: -3.184993267059326
    7. 'ear' → logprob: -3.184993267059326
    8. 'asses' → logprob: -3.809993267059326
    9. 'covered' → logprob: -4.059993267059326
    10. 'assed' → logprob: -4.309993267059326

Token 385: ' entre' (ID: 3853)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5260787010192871
    2. '       ' → logprob: -2.401078701019287
    3. 's' → logprob: -3.026078701019287
    4. '    ' → logprob: -3.026078701019287
    5. '[i' → logprob: -3.526078701019287
    6. ' i' → logprob: -3.776078701019287
    7. ')' → logprob: -4.026078701019287
    8. '[' → logprob: -4.026078701019287
    9. 'for' → logprob: -4.151078701019287
    10. ' ' → logprob: -4.401078701019287

Token 386: ' ces' (ID: 10532)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.31583529710769653
    2. ' A' → logprob: -1.6908352375030518
    3. '(A' → logprob: -3.0658352375030518
    4. ' (' → logprob: -3.3158352375030518
    5. '   ' → logprob: -6.315835475921631
    6. 'i' → logprob: -8.315834999084473
    7. 'l' → logprob: -8.440834999084473
    8. '    ' → logprob: -8.690834999084473
    9. '(' → logprob: -8.815834999084473
    10. 'B' → logprob: -9.065834999084473

Token 387: ' points' (ID: 5571)
  Prédit: ' lignes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -1.0067936182022095
    2. '   ' → logprob: -1.3817936182022095
    3. 'points' → logprob: -2.25679349899292
    4. ' lines' → logprob: -2.63179349899292
    5. ' points' → logprob: -3.00679349899292
    6. 'lines' → logprob: -3.25679349899292
    7. ' trois' → logprob: -4.00679349899292
    8. 'l' → logprob: -4.00679349899292
    9. ' A' → logprob: -4.63179349899292
    10. '       ' → logprob: -4.75679349899292

Token 388: ' sont' (ID: 5242)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024466417729854584
    2. '<|end|>' → logprob: -4.274466514587402
    3. '   ' → logprob: -5.774466514587402
    4. ',' → logprob: -6.149466514587402
    5. ')' → logprob: -6.649466514587402
    6. '	' → logprob: -7.274466514587402
    7. '        
' → logprob: -7.274466514587402
    8. '<|end|>' → logprob: -7.649466514587402
    9. ':' → logprob: -8.024466514587402
    10. '    ' → logprob: -8.649466514587402

Token 389: ' rec' (ID: 1369)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3527137041091919
    2. '   ' → logprob: -2.9777135848999023
    3. '           ' → logprob: -2.9777135848999023
    4. 'mar' → logprob: -2.9777135848999023
    5. ' mar' → logprob: -3.2277135848999023
    6. 'for' → logprob: -3.7277135848999023
    7. 'covered' → logprob: -3.8527135848999023
    8. 'cou' → logprob: -4.727713584899902
    9. 'not' → logprob: -4.727713584899902
    10. 'dans' → logprob: -5.227713584899902

Token 390: 'ouver' (ID: 10298)
  Prédit: 'ouver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouver' → logprob: -0.006824655458331108
    2. 'ouvr' → logprob: -5.631824493408203
    3. 'ou' → logprob: -6.756824493408203
    4. 'ouverte' → logprob: -7.756824493408203
    5. 'u' → logprob: -8.381824493408203
    6. 'ouv' → logprob: -8.631824493408203
    7. 'ouvrir' → logprob: -8.881824493408203
    8. 'verts' → logprob: -9.006824493408203
    9. '```' → logprob: -9.006824493408203
    10. 'over' → logprob: -9.006824493408203

Token 391: 'ts' (ID: 1561)
  Prédit: 'ts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.7036831378936768
    2. 'erts' → logprob: -0.7036831378936768
    3. 'ert' → logprob: -4.578682899475098
    4. 'ets' → logprob: -9.703682899475098
    5. 'rt' → logprob: -10.078682899475098
    6. 's' → logprob: -10.203682899475098
    7. 'verts' → logprob: -10.828682899475098
    8. 'r' → logprob: -10.953682899475098
    9. 't' → logprob: -11.453682899475098
    10. 'e' → logprob: -12.078682899475098

Token 392: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.042758114635944366
    2. '   ' → logprob: -3.4177582263946533
    3. '        
' → logprob: -6.042757987976074
    4. '
' → logprob: -6.292757987976074
    5. '    
' → logprob: -6.292757987976074
    6. ' for' → logprob: -6.292757987976074
    7. '    ' → logprob: -7.792757987976074
    8. 'for' → logprob: -9.292757987976074
    9. '           ' → logprob: -9.417757987976074
    10. '	' → logprob: -9.417757987976074

Token 393: ' 
' (ID: 793)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001468080561608076
    2. '        
' → logprob: -7.876468181610107
    3. '	' → logprob: -8.37646770477295
    4. '   ' → logprob: -8.75146770477295
    5. '           ' → logprob: -9.00146770477295
    6. '<|end|>' → logprob: -9.00146770477295
    7. ' for' → logprob: -9.37646770477295
    8. '
' → logprob: -10.00146770477295
    9. '    ' → logprob: -10.12646770477295
    10. '	   ' → logprob: -10.25146770477295

Token 394: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016704188892617822
    2. '   ' → logprob: -6.8766703605651855
    3. ' for' → logprob: -9.126670837402344
    4. '<|end|>' → logprob: -9.251670837402344
    5. '        
' → logprob: -9.501670837402344
    6. '           ' → logprob: -9.501670837402344
    7. 'for' → logprob: -9.751670837402344
    8. '    ' → logprob: -10.126670837402344
    9. '	   ' → logprob: -10.376670837402344
    10. '#' → logprob: -10.501670837402344

Token 395: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009948153048753738
    2. '   ' → logprob: -5.009948253631592
    3. '	' → logprob: -7.634948253631592
    4. 'et' → logprob: -7.759948253631592
    5. ' ' → logprob: -8.009947776794434
    6. ' et' → logprob: -8.134947776794434
    7. '           ' → logprob: -8.259947776794434
    8. '\t' → logprob: -8.759947776794434
    9. '               ' → logprob: -9.134947776794434
    10. '	   ' → logprob: -9.634947776794434

Token 396: ' donc' (ID: 14206)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002968907356262207
    2. '   ' → logprob: -6.377968788146973
    3. ' for' → logprob: -7.127968788146973
    4. 'for' → logprob: -8.502968788146973
    5. '	' → logprob: -9.877968788146973
    6. ' ' → logprob: -9.877968788146973
    7. '           ' → logprob: -10.002968788146973
    8. '    ' → logprob: -10.752968788146973
    9. '        
' → logprob: -11.002968788146973
    10. '               ' → logprob: -11.627968788146973

Token 397: ' ce' (ID: 2357)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5029579401016235
    2. 'for' → logprob: -1.0029579401016235
    3. '       ' → logprob: -3.752957820892334
    4. '   ' → logprob: -5.377957820892334
    5. '	for' → logprob: -7.877957820892334
    6. '	   ' → logprob: -11.627958297729492
    7. ' ' → logprob: -12.752958297729492
    8. '	' → logprob: -13.002958297729492
    9. '    ' → logprob: -13.252958297729492
    10. '    
' → logprob: -13.377958297729492

Token 398: ' sont' (ID: 5242)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29687243700027466
    2. ' for' → logprob: -1.4218723773956299
    3. 'n' → logprob: -5.921872615814209
    4. ')' → logprob: -6.171872615814209
    5. ' n' → logprob: -6.421872615814209
    6. '_' → logprob: -6.671872615814209
    7. 's' → logprob: -6.796872615814209
    8. 'def' → logprob: -6.921872615814209
    9. '=' → logprob: -7.171872615814209
    10. ' =' → logprob: -7.546872615814209

Token 399: ' tous' (ID: 10688)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7339391112327576
    2. 'les' → logprob: -1.9839391708374023
    3. ' for' → logprob: -2.1089391708374023
    4. '   ' → logprob: -2.4839391708374023
    5. ' les' → logprob: -2.6089391708374023
    6. ' des' → logprob: -3.3589391708374023
    7. ' tous' → logprob: -4.108939170837402
    8. 'des' → logprob: -4.108939170837402
    9. 'i' → logprob: -4.983939170837402
    10. '    ' → logprob: -5.108939170837402

Token 400: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.6450598835945129
    2. ' i' → logprob: -1.5200598239898682
    3. 'les' → logprob: -1.6450598239898682
    4. 'i' → logprob: -3.520059823989868
    5. 'for' → logprob: -5.270060062408447
    6. ' for' → logprob: -5.270060062408447
    7. '<|end|>' → logprob: -5.270060062408447
    8. ' ceux' → logprob: -5.645060062408447
    9. '       ' → logprob: -5.895060062408447
    10. '    ' → logprob: -6.145060062408447

Token 401: ' points' (ID: 5571)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9755211472511292
    2. 'points' → logprob: -1.1005210876464844
    3. ' points' → logprob: -1.7255210876464844
    4. ' i' → logprob: -2.4755210876464844
    5. ' for' → logprob: -4.975521087646484
    6. 'for' → logprob: -5.225521087646484
    7. '(i' → logprob: -5.725521087646484
    8. 'a' → logprob: -5.975521087646484
    9. ' (' → logprob: -6.225521087646484
    10. 'j' → logprob: -6.475521087646484

Token 402: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02866879105567932
    2. '   ' → logprob: -4.1536688804626465
    3. '    ' → logprob: -5.4036688804626465
    4. ' for' → logprob: -5.7786688804626465
    5. ' i' → logprob: -7.1536688804626465
    6. '        ' → logprob: -7.2786688804626465
    7. '           ' → logprob: -7.5286688804626465
    8. ',' → logprob: -7.5286688804626465
    9. 'for' → logprob: -7.5286688804626465
    10. ' ' → logprob: -7.6536688804626465

Token 403: 'a' (ID: 64)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6968381404876709
    2. 'i' → logprob: -0.6968381404876709
    3. ' A' → logprob: -6.57183837890625
    4. ' i' → logprob: -7.07183837890625
    5. 'a' → logprob: -7.69683837890625
    6. '   ' → logprob: -7.69683837890625
    7. '(A' → logprob: -8.94683837890625
    8. 'x' → logprob: -9.69683837890625
    9. ')' → logprob: -9.82183837890625
    10. '(i' → logprob: -10.07183837890625

Token 404: ',b' (ID: 17568)
  Prédit: '+i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+i' → logprob: -0.2572759687900543
    2. '+' → logprob: -1.632275938987732
    3. ' +' → logprob: -4.0072760581970215
    4. ',' → logprob: -5.5072760581970215
    5. '+
' → logprob: -6.1322760581970215
    6. ')' → logprob: -6.5072760581970215
    7. '   ' → logprob: -7.1322760581970215
    8. '+a' → logprob: -7.3822760581970215
    9. '+A' → logprob: -7.6322760581970215
    10. '_' → logprob: -7.7572760581970215

Token 405: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29585155844688416
    2. '+i' → logprob: -1.9208515882492065
    3. ' +' → logprob: -3.420851469039917
    4. '+' → logprob: -3.420851469039917
    5. ',' → logprob: -3.670851469039917
    6. '   ' → logprob: -5.170851707458496
    7. '       ' → logprob: -5.545851707458496
    8. ' for' → logprob: -6.795851707458496
    9. ')
' → logprob: -6.920851707458496
    10. ' )' → logprob: -6.920851707458496

Token 406: ' tels' (ID: 62007)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.3000068664550781
    2. '       ' → logprob: -1.4250068664550781
    3. '<|end|>' → logprob: -1.4250068664550781
    4. '   ' → logprob: -2.300006866455078
    5. '    ' → logprob: -2.800006866455078
    6. ',' → logprob: -3.800006866455078
    7. ' in' → logprob: -3.925006866455078
    8. 'for' → logprob: -4.550006866455078
    9. '        ' → logprob: -5.300006866455078
    10. '<|end|>' → logprob: -5.425006866455078

Token 407: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.018106045201420784
    2. ' que' → logprob: -4.643105983734131
    3. 'that' → logprob: -4.893105983734131
    4. ' that' → logprob: -7.518105983734131
    5. 'qu' → logprob: -8.768106460571289
    6. '   ' → logprob: -9.393106460571289
    7. '```' → logprob: -11.268106460571289
    8. '    ' → logprob: -12.518106460571289
    9. ' ' → logprob: -12.893106460571289
    10. '#' → logprob: -13.268106460571289

Token 408: ' :
' (ID: 10039)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.005436400882899761
    2. ' A' → logprob: -5.380436420440674
    3. '   ' → logprob: -7.380436420440674
    4. '(A' → logprob: -9.755435943603516
    5. 'a' → logprob: -9.880435943603516
    6. ' (' → logprob: -10.880435943603516
    7. '
' → logprob: -11.130435943603516
    8. '       ' → logprob: -11.255435943603516
    9. '    ' → logprob: -11.630435943603516
    10. 'B' → logprob: -11.755435943603516

Token 409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17206792533397675
    2. '    ' → logprob: -3.297067880630493
    3. ' a' → logprob: -3.297067880630493
    4. '   ' → logprob: -3.797067880630493
    5. ' (' → logprob: -3.922067880630493
    6. '        ' → logprob: -4.547068119049072
    7. ' for' → logprob: -5.172068119049072
    8. 'a' → logprob: -5.172068119049072
    9. '(' → logprob: -5.672068119049072
    10. ' if' → logprob: -5.922068119049072

Token 410: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29353705048561096
    2. 'A' → logprob: -2.668537139892578
    3. ' A' → logprob: -2.793537139892578
    4. '   ' → logprob: -3.543537139892578
    5. '    ' → logprob: -3.543537139892578
    6. ' a' → logprob: -4.043537139892578
    7. ' if' → logprob: -4.418537139892578
    8. '        ' → logprob: -4.668537139892578
    9. ' for' → logprob: -4.793537139892578
    10. 'if' → logprob: -5.168537139892578

Token 411: ' A' (ID: 355)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7187787294387817
    2. '   ' → logprob: -1.2187787294387817
    3. ' for' → logprob: -2.468778610229492
    4. '    ' → logprob: -3.593778610229492
    5. ' a' → logprob: -3.718778610229492
    6. ' A' → logprob: -3.968778610229492
    7. 'A' → logprob: -3.968778610229492
    8. 'for' → logprob: -3.968778610229492
    9. 'a' → logprob: -4.718778610229492
    10. ' if' → logprob: -5.468778610229492

Token 412: ' ≤' (ID: 72554)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.09125739336013794
    2. '<=' → logprob: -2.466257333755493
    3. ' ≤' → logprob: -6.966257572174072
    4. '+' → logprob: -7.466257572174072
    5. ',' → logprob: -8.091257095336914
    6. '≤' → logprob: -8.841257095336914
    7. '   ' → logprob: -9.091257095336914
    8. '+i' → logprob: -9.341257095336914
    9. ' ' → logprob: -9.716257095336914
    10. ' +' → logprob: -10.841257095336914

Token 413: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -5.848420551046729e-05
    2. ' a' → logprob: -9.7500581741333
    3. 'A' → logprob: -16.500059127807617
    4. '	a' → logprob: -17.875059127807617
    5. '   ' → logprob: -19.125059127807617
    6. '_a' → logprob: -19.750059127807617
    7. '
' → logprob: -20.625059127807617
    8. 'i' → logprob: -21.125059127807617
    9. '#a' → logprob: -21.750059127807617
    10. '    ' → logprob: -22.375059127807617

Token 414: ' ≤' (ID: 72554)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.44965070486068726
    2. ' <=' → logprob: -1.074650764465332
    3. ' and' → logprob: -4.699650764465332
    4. 'and' → logprob: -5.449650764465332
    5. '≤' → logprob: -5.574650764465332
    6. '<|end|>' → logprob: -6.449650764465332
    7. ' ≤' → logprob: -6.949650764465332
    8. ',' → logprob: -7.574650764465332
    9. '<|end|>' → logprob: -9.199650764465332
    10. 'le' → logprob: -9.324650764465332

Token 415: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0015073629328981042
    2. ' A' → logprob: -6.50150728225708
    3. '   ' → logprob: -12.251507759094238
    4. '(A' → logprob: -15.376507759094238
    5. ' ' → logprob: -17.126506805419922
    6. '	A' → logprob: -17.126506805419922
    7. 'a' → logprob: -17.501506805419922
    8. '  ' → logprob: -19.626506805419922
    9. '
' → logprob: -19.751506805419922
    10. ' (' → logprob: -19.876506805419922

Token 416: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0036612374242395163
    2. ' +' → logprob: -5.628661155700684
    3. 'X' → logprob: -10.628661155700684
    4. '+A' → logprob: -10.628661155700684
    5. '+x' → logprob: -12.503661155700684
    6. '+B' → logprob: -12.878661155700684
    7. '+
' → logprob: -13.003661155700684
    8. '<|end|>' → logprob: -13.253661155700684
    9. '＋' → logprob: -13.753661155700684
    10. '+C' → logprob: -14.628661155700684

Token 417: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -3.15441757265944e-05
    2. ' X' → logprob: -10.375031471252441
    3. '<|end|>' → logprob: -15.375031471252441
    4. ' ' → logprob: -17.000032424926758
    5. '	X' → logprob: -17.250032424926758
    6. '>X' → logprob: -18.500032424926758
    7. '[' → logprob: -18.750032424926758
    8. '   ' → logprob: -19.375032424926758
    9. '<|end|>' → logprob: -19.625032424926758
    10. '{' → logprob: -20.125032424926758

Token 418: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5493112802505493
    2. ' and' → logprob: -1.4243112802505493
    3. '   ' → logprob: -2.5493111610412598
    4. '<|end|>' → logprob: -3.1743111610412598
    5. ',' → logprob: -3.5493111610412598
    6. '    ' → logprob: -4.29931116104126
    7. ' for' → logprob: -5.04931116104126
    8. 'and' → logprob: -5.42431116104126
    9. ' ' → logprob: -6.04931116104126
    10. ')' → logprob: -6.67431116104126

Token 419: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5570040941238403
    2. '       ' → logprob: -1.3070040941238403
    3. '   ' → logprob: -2.557003974914551
    4. '    ' → logprob: -3.057003974914551
    5. '<|end|>' → logprob: -4.057003974914551
    6. 'and' → logprob: -4.807003974914551
    7. ',' → logprob: -5.807003974914551
    8. ' ' → logprob: -6.557003974914551
    9. '        ' → logprob: -7.682003974914551
    10. '  ' → logprob: -8.05700397491455

Token 420: ' #' (ID: 1069)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3714616596698761
    2. '       ' → logprob: -1.2464616298675537
    3. '   ' → logprob: -4.621461868286133
    4. 'and' → logprob: -4.621461868286133
    5. '    ' → logprob: -6.996461868286133
    6. ',' → logprob: -7.621461868286133
    7. '<|end|>' → logprob: -7.996461868286133
    8. ' for' → logprob: -8.121461868286133
    9. ' ' → logprob: -8.371461868286133
    10. '        ' → logprob: -8.746461868286133

Token 421: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16702280938625336
    2. ' and' → logprob: -2.042022705078125
    3. '    ' → logprob: -4.667022705078125
    4. '        ' → logprob: -5.542022705078125
    5. '   ' → logprob: -5.917022705078125
    6. 'and' → logprob: -6.167022705078125
    7. ' ' → logprob: -6.167022705078125
    8. ',' → logprob: -6.792022705078125
    9. ' b' → logprob: -7.542022705078125
    10. ' ' → logprob: -7.792022705078125

Token 422: ' b' (ID: 287)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5894702076911926
    2. 'b' → logprob: -0.8394702076911926
    3. ' B' → logprob: -4.839470386505127
    4. ' b' → logprob: -5.464470386505127
    5. 'a' → logprob: -7.089470386505127
    6. '   ' → logprob: -8.714469909667969
    7. '       ' → logprob: -9.464469909667969
    8. 'A' → logprob: -9.464469909667969
    9. '           ' → logprob: -10.464469909667969
    10. ' ' → logprob: -10.714469909667969

Token 423: ' vér' (ID: 42524)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.018550457432866096
    2. ' <=' → logprob: -4.768550395965576
    3. '>=' → logprob: -4.893550395965576
    4. ' ≥' → logprob: -6.518550395965576
    5. ' ' → logprob: -8.143550872802734
    6. '≥' → logprob: -9.018550872802734
    7. '   ' → logprob: -9.143550872802734
    8. '[' → logprob: -9.268550872802734
    9. ' in' → logprob: -9.643550872802734
    10. ' ≤' → logprob: -9.893550872802734

Token 424: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.010114319622516632
    2. 'if' → logprob: -4.7601141929626465
    3. 'ifiant' → logprob: -7.5101141929626465
    4. '```' → logprob: -8.260114669799805
    5. 'id' → logprob: -8.760114669799805
    6. 'a' → logprob: -8.760114669799805
    7. 'i' → logprob: -9.135114669799805
    8. 'ifi' → logprob: -10.135114669799805
    9. 'ifies' → logprob: -10.135114669799805
    10. 'ifié' → logprob: -10.385114669799805

Token 425: ' :' (ID: 712)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3522433340549469
    2. ' B' → logprob: -2.227243423461914
    3. '>=' → logprob: -2.227243423461914
    4. '   ' → logprob: -3.227243423461914
    5. 'A' → logprob: -3.977243423461914
    6. ' A' → logprob: -4.852243423461914
    7. ' >=' → logprob: -5.227243423461914
    8. 'b' → logprob: -6.352243423461914
    9. '(B' → logprob: -6.352243423461914
    10. ':' → logprob: -6.602243423461914

Token 426: ' b' (ID: 287)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.011260728351771832
    2. ' B' → logprob: -4.511260509490967
    3. 'A' → logprob: -9.511260986328125
    4. '   ' → logprob: -9.636260986328125
    5. 'b' → logprob: -10.511260986328125
    6. '(B' → logprob: -11.136260986328125
    7. '	B' → logprob: -12.136260986328125
    8. 'abs' → logprob: -12.261260986328125
    9. ' ' → logprob: -12.511260986328125
    10. '           ' → logprob: -12.636260986328125

Token 427: ' �' (ID: 35353)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.39051178097724915
    2. ' >=' → logprob: -1.1405117511749268
    3. '≥' → logprob: -6.140511989593506
    4. '[' → logprob: -7.640511989593506
    5. '   ' → logprob: -8.140511512756348
    6. ' ' → logprob: -9.140511512756348
    7. ']>=' → logprob: -9.265511512756348
    8. ' ≥' → logprob: -9.390511512756348
    9. '=' → logprob: -9.390511512756348
    10. ')>=' → logprob: -9.640511512756348

Token 428: '�' (ID: 230)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.22396434843540192
    2. ' >=' → logprob: -1.9739643335342407
    3. '≥' → logprob: -2.8489644527435303
    4. '=' → logprob: -6.348964214324951
    5. ' ≥' → logprob: -6.973964214324951
    6. '<=' → logprob: -7.598964214324951
    7. ' ' → logprob: -8.09896469116211
    8. '>' → logprob: -9.59896469116211
    9. ' <=' → logprob: -9.59896469116211
    10. '   ' → logprob: -9.97396469116211

Token 429: ' [' (ID: 723)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.2709977328777313
    2. '≥' → logprob: -2.2709977626800537
    3. ' >=' → logprob: -2.8959977626800537
    4. '=' → logprob: -3.0209977626800537
    5. 'B' → logprob: -4.270997524261475
    6. ' B' → logprob: -4.895997524261475
    7. '[' → logprob: -6.020997524261475
    8. '<=' → logprob: -6.645997524261475
    9. '>' → logprob: -6.645997524261475
    10. ' ≥' → logprob: -7.520997524261475

Token 430: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.011048882268369198
    2. ' B' → logprob: -4.511048793792725
    3. '(B' → logprob: -15.511049270629883
    4. '=B' → logprob: -15.511049270629883
    5. '	B' → logprob: -15.761049270629883
    6. '   ' → logprob: -15.761049270629883
    7. '
' → logprob: -16.511049270629883
    8. ' ' → logprob: -16.636049270629883
    9. ',' → logprob: -16.886049270629883
    10. '       ' → logprob: -17.386049270629883

Token 431: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025627871975302696
    2. ' ,' → logprob: -3.900627851486206
    3. ',B' → logprob: -5.525628089904785
    4. ',b' → logprob: -7.650628089904785
    5. 'B' → logprob: -8.775628089904785
    6. ' B' → logprob: -9.150628089904785
    7. '+B' → logprob: -9.525628089904785
    8. '-' → logprob: -9.525628089904785
    9. ',
' → logprob: -9.775628089904785
    10. ' -' → logprob: -10.275628089904785

Token 432: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.023362180218100548
    2. ' B' → logprob: -3.773362159729004
    3. ',' → logprob: -9.398362159729004
    4. ' ' → logprob: -12.273362159729004
    5. ' (' → logprob: -12.273362159729004
    6. '<|end|>' → logprob: -12.273362159729004
    7. ')' → logprob: -12.898362159729004
    8. '(B' → logprob: -13.148362159729004
    9. 'b' → logprob: -13.273362159729004
    10. ']' → logprob: -13.398362159729004

Token 433: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18759912252426147
    2. ',' → logprob: -2.3125991821289062
    3. '+B' → logprob: -3.3125991821289062
    4. ' +' → logprob: -3.4375991821289062
    5. '<|end|>' → logprob: -6.937599182128906
    6. ']' → logprob: -7.937599182128906
    7. '+b' → logprob: -7.937599182128906
    8. 'B' → logprob: -7.937599182128906
    9. ' B' → logprob: -8.312599182128906
    10. ' ,' → logprob: -8.562599182128906

Token 434: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.36498144268989563
    2. 'X' → logprob: -1.6149814128875732
    3. '(a' → logprob: -2.4899814128875732
    4. 'i' → logprob: -4.989981651306152
    5. ' (' → logprob: -4.989981651306152
    6. '(X' → logprob: -5.114981651306152
    7. '(i' → logprob: -6.739981651306152
    8. '(' → logprob: -6.989981651306152
    9. 'A' → logprob: -7.739981651306152
    10. '(A' → logprob: -7.739981651306152

Token 435: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006940802559256554
    2. '(a' → logprob: -5.256940841674805
    3. 'A' → logprob: -7.256940841674805
    4. 'X' → logprob: -7.756940841674805
    5. ' a' → logprob: -7.756940841674805
    6. ' (' → logprob: -10.131940841674805
    7. '(X' → logprob: -10.131940841674805
    8. '(A' → logprob: -10.506940841674805
    9. '(' → logprob: -11.256940841674805
    10. '   ' → logprob: -12.006940841674805

Token 436: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9902897477149963
    2. ' -' → logprob: -1.2402896881103516
    3. '+' → logprob: -2.2402896881103516
    4. '-X' → logprob: -2.2402896881103516
    5. '-a' → logprob: -3.4902896881103516
    6. ')' → logprob: -3.8652896881103516
    7. ' +' → logprob: -4.240289688110352
    8. '-i' → logprob: -4.240289688110352
    9. '+B' → logprob: -4.990289688110352
    10. '-B' → logprob: -5.115289688110352

Token 437: ' A' (ID: 355)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.1468648463487625
    2. '0' → logprob: -2.521864891052246
    3. 'i' → logprob: -3.271864891052246
    4. 'B' → logprob: -4.271864891052246
    5. 'a' → logprob: -6.521864891052246
    6. 'A' → logprob: -7.146864891052246
    7. 'b' → logprob: -7.271864891052246
    8. ')' → logprob: -7.896864891052246
    9. ' X' → logprob: -8.396864891052246
    10. '(' → logprob: -8.896864891052246

Token 438: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.7142783999443054
    2. '+' → logprob: -0.8392783999443054
    3. ')' → logprob: -3.33927845954895
    4. ' +' → logprob: -3.58927845954895
    5. '+x' → logprob: -5.214278221130371
    6. ']' → logprob: -5.589278221130371
    7. ')+' → logprob: -6.589278221130371
    8. ')])' → logprob: -7.089278221130371
    9. ']+' → logprob: -7.214278221130371
    10. '+i' → logprob: -7.589278221130371

Token 439: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3647657334804535
    2. '   ' → logprob: -1.2397657632827759
    3. ' for' → logprob: -4.239765644073486
    4. 'for' → logprob: -7.239765644073486
    5. '    ' → logprob: -7.864765644073486
    6. '           ' → logprob: -8.989766120910645
    7. '	' → logprob: -9.739766120910645
    8. ' ' → logprob: -9.739766120910645
    9. '     ' → logprob: -9.864766120910645
    10. '	for' → logprob: -9.864766120910645

Token 440: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2154451459646225
    2. '   ' → logprob: -1.7154451608657837
    3. ' for' → logprob: -5.215445041656494
    4. 'for' → logprob: -5.340445041656494
    5. '        
' → logprob: -7.215445041656494
    6. '           ' → logprob: -7.340445041656494
    7. '    ' → logprob: -7.590445041656494
    8. '    
' → logprob: -8.090445518493652
    9. '
' → logprob: -8.215445518493652
    10. ' ' → logprob: -8.840445518493652

Token 441: ' Donc' (ID: 88837)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15740391612052917
    2. '   ' → logprob: -2.7824039459228516
    3. ' for' → logprob: -3.0324039459228516
    4. 'for' → logprob: -3.4074039459228516
    5. '    ' → logprob: -7.282403945922852
    6. '	' → logprob: -8.157403945922852
    7. ' ' → logprob: -8.157403945922852
    8. '	for' → logprob: -8.282403945922852
    9. '           ' → logprob: -8.532403945922852
    10. ' ' → logprob: -8.782403945922852

Token 442: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.373656302690506
    2. ' for' → logprob: -1.2486562728881836
    3. 'for' → logprob: -4.123656272888184
    4. '   ' → logprob: -4.748656272888184
    5. '           ' → logprob: -11.498656272888184
    6. '	for' → logprob: -11.623656272888184
    7. '    ' → logprob: -11.623656272888184
    8. '```' → logprob: -12.248656272888184
    9. ' ' → logprob: -12.498656272888184
    10. '     ' → logprob: -12.873656272888184

Token 443: ' chaque' (ID: 21194)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18402355909347534
    2. ' a' → logprob: -1.8090236186981201
    3. 'i' → logprob: -5.934023380279541
    4. ' i' → logprob: -6.434023380279541
    5. '_a' → logprob: -12.1840238571167
    6. '	a' → logprob: -12.5590238571167
    7. '_' → logprob: -13.1840238571167
    8. 'range' → logprob: -13.8090238571167
    9. ' range' → logprob: -14.0590238571167
    10. ' ' → logprob: -14.4340238571167

Token 444: ' ligne' (ID: 19583)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2017889767885208
    2. ' a' → logprob: -1.7017890214920044
    3. 'i' → logprob: -8.326788902282715
    4. ' i' → logprob: -8.951788902282715
    5. ' ' → logprob: -12.826788902282715
    6. '	a' → logprob: -13.701788902282715
    7. '```' → logprob: -16.57678985595703
    8. '   ' → logprob: -16.70178985595703
    9. ' ' → logprob: -16.70178985595703
    10. '_a' → logprob: -16.70178985595703

Token 445: ' a' (ID: 261)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3625178635120392
    2. 'a' → logprob: -1.6125178337097168
    3. 'in' → logprob: -2.862517833709717
    4. ' a' → logprob: -4.112517833709717
    5. 'i' → logprob: -4.237517833709717
    6. ' i' → logprob: -4.237517833709717
    7. '   ' → logprob: -6.487517833709717
    8. '_a' → logprob: -8.612518310546875
    9. 'range' → logprob: -8.737518310546875
    10. '_' → logprob: -8.987518310546875

Token 446: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2614898681640625
    2. 'in' → logprob: -1.5114898681640625
    3. 'n' → logprob: -4.7614898681640625
    4. 'range' → logprob: -8.136489868164062
    5. ' ' → logprob: -8.261489868164062
    6. ' i' → logprob: -9.261489868164062
    7. '   ' → logprob: -9.761489868164062
    8. ',' → logprob: -10.136489868164062
    9. 'i' → logprob: -10.386489868164062
    10. 'a' → logprob: -10.636489868164062

Token 447: ' A' (ID: 355)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015023599844425917
    2. ' range' → logprob: -6.501502513885498
    3. 'A' → logprob: -17.626502990722656
    4. '(range' → logprob: -17.626502990722656
    5. '   ' → logprob: -17.751502990722656
    6. 'r' → logprob: -18.501502990722656
    7. 'rang' → logprob: -18.876502990722656
    8. '	range' → logprob: -19.376502990722656
    9. 'ra' → logprob: -19.751502990722656
    10. ' ' → logprob: -20.626502990722656

Token 448: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1044614240527153
    2. ' ' → logprob: -4.354461193084717
    3. '
' → logprob: -4.479461193084717
    4. '+' → logprob: -4.479461193084717
    5. 'range' → logprob: -4.479461193084717
    6. ' ,' → logprob: -4.604461193084717
    7. ',A' → logprob: -4.604461193084717
    8. '+A' → logprob: -4.854461193084717
    9. '   ' → logprob: -5.354461193084717
    10. ' A' → logprob: -5.354461193084717

Token 449: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.011048762127757072
    2. ' A' → logprob: -4.511048793792725
    3. '(A' → logprob: -14.011048316955566
    4. '   ' → logprob: -17.011049270629883
    5. ' (' → logprob: -17.886049270629883
    6. '	A' → logprob: -18.011049270629883
    7. ' ' → logprob: -19.011049270629883
    8. 'a' → logprob: -19.011049270629883
    9. '=A' → logprob: -20.261049270629883
    10. '(' → logprob: -20.511049270629883

Token 450: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.73183855926618e-05
    2. ' +' → logprob: -9.750077247619629
    3. '+A' → logprob: -11.000077247619629
    4. '+
' → logprob: -13.250077247619629
    5. 'A' → logprob: -15.125077247619629
    6. 'X' → logprob: -15.625077247619629
    7. '+x' → logprob: -16.125078201293945
    8. '＋' → logprob: -17.375078201293945
    9. '+B' → logprob: -17.375078201293945
    10. '()+' → logprob: -18.500078201293945

Token 451: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -9.627176768844947e-05
    2. ' X' → logprob: -9.250096321105957
    3. ' ' → logprob: -16.50009536743164
    4. '
' → logprob: -18.50009536743164
    5. 'x' → logprob: -18.62509536743164
    6. 'A' → logprob: -18.75009536743164
    7. '+' → logprob: -19.12509536743164
    8. '_X' → logprob: -19.25009536743164
    9. '	X' → logprob: -19.37509536743164
    10. '   ' → logprob: -19.37509536743164

Token 452: ' inclus' (ID: 11891)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3454018533229828
    2. ':' → logprob: -1.7204018831253052
    3. '   ' → logprob: -2.2204017639160156
    4. ' for' → logprob: -6.595401763916016
    5. ':
' → logprob: -6.845401763916016
    6. '	' → logprob: -7.220401763916016
    7. '    ' → logprob: -7.845401763916016
    8. ',' → logprob: -7.970401763916016
    9. '	   ' → logprob: -9.220401763916016
    10. '	for' → logprob: -9.595401763916016

Token 453: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7625397443771362
    2. '   ' → logprob: -1.0125397443771362
    3. ':' → logprob: -1.8875397443771362
    4. ' for' → logprob: -4.512539863586426
    5. '    ' → logprob: -5.887539863586426
    6. 'for' → logprob: -6.762539863586426
    7. ':
' → logprob: -7.387539863586426
    8. ' :' → logprob: -7.637539863586426
    9. ',' → logprob: -7.762539863586426
    10. ' ' → logprob: -8.012539863586426

Token 454: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32599174976348877
    2. '       ' → logprob: -1.4509917497634888
    3. ' for' → logprob: -3.825991630554199
    4. 'for' → logprob: -4.200991630554199
    5. '    
' → logprob: -6.700991630554199
    6. '    ' → logprob: -6.700991630554199
    7. ')' → logprob: -7.075991630554199
    8. ' ' → logprob: -7.075991630554199
    9. ',' → logprob: -7.200991630554199
    10. ' 
' → logprob: -7.950991630554199

Token 455: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02937168814241886
    2. '   ' → logprob: -3.904371738433838
    3. ' for' → logprob: -5.029371738433838
    4. '    ' → logprob: -7.404371738433838
    5. 'for' → logprob: -7.404371738433838
    6. '	   ' → logprob: -8.02937126159668
    7. '	' → logprob: -8.15437126159668
    8. '	for' → logprob: -8.90437126159668
    9. ' ' → logprob: -9.27937126159668
    10. '           ' → logprob: -10.02937126159668

Token 456: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11166715621948242
    2. ' for' → logprob: -2.8616671562194824
    3. '   ' → logprob: -3.1116671562194824
    4. 'for' → logprob: -5.736667156219482
    5. '	   ' → logprob: -8.36166763305664
    6. '	for' → logprob: -8.48666763305664
    7. '	' → logprob: -9.86166763305664
    8. '```' → logprob: -10.11166763305664
    9. '    ' → logprob: -10.23666763305664
    10. '    
' → logprob: -10.61166763305664

Token 457: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16657039523124695
    2. 'for' → logprob: -1.9165704250335693
    3. '       ' → logprob: -5.16657018661499
    4. '   ' → logprob: -7.54157018661499
    5. '    ' → logprob: -9.666570663452148
    6. ' ' → logprob: -11.916570663452148
    7. '	for' → logprob: -12.166570663452148
    8. ' b' → logprob: -12.666570663452148
    9. '
' → logprob: -12.791570663452148
    10. 'b' → logprob: -12.916570663452148

Token 458: ' couvre' (ID: 137218)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7449349164962769
    2. ' for' → logprob: -0.9949349164962769
    3. '   ' → logprob: -1.8699349164962769
    4. ' ' → logprob: -7.744935035705566
    5. '    ' → logprob: -8.244935035705566
    6. '       ' → logprob: -8.369935035705566
    7. '	for' → logprob: -8.994935035705566
    8. '  ' → logprob: -9.369935035705566
    9. '```' → logprob: -10.369935035705566
    10. '
' → logprob: -10.369935035705566

Token 459: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.30403560400009155
    2. ' range' → logprob: -1.4290356636047363
    3. ' for' → logprob: -4.929035663604736
    4. 'for' → logprob: -5.054035663604736
    5. '    ' → logprob: -6.054035663604736
    6. '   ' → logprob: -6.179035663604736
    7. '(range' → logprob: -6.554035663604736
    8. ' ' → logprob: -6.929035663604736
    9. ' a' → logprob: -7.304035663604736
    10. '=' → logprob: -7.929035663604736

Token 460: ' cl' (ID: 567)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4283553957939148
    2. ' range' → logprob: -1.5533554553985596
    3. 'b' → logprob: -2.8033554553985596
    4. 'positions' → logprob: -3.8033554553985596
    5. ' b' → logprob: -4.1783552169799805
    6. ' positions' → logprob: -4.3033552169799805
    7. 'B' → logprob: -4.4283552169799805
    8. ' B' → logprob: -4.6783552169799805
    9. 'r' → logprob: -6.6783552169799805
    10. 'points' → logprob: -7.4283552169799805

Token 461: 'ous' (ID: 784)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4696929156780243
    2. '   ' → logprob: -1.3446929454803467
    3. 'asse' → logprob: -2.9696929454803467
    4. 'for' → logprob: -3.8446929454803467
    5. 'e' → logprob: -5.469692707061768
    6. 'ine' → logprob: -5.594692707061768
    7. 'ines' → logprob: -5.719692707061768
    8. 'aire' → logprob: -5.719692707061768
    9. 'es' → logprob: -5.844692707061768
    10. '  ' → logprob: -6.094692707061768

Token 462: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19187183678150177
    2. '   ' → logprob: -1.8168718814849854
    3. ' for' → logprob: -5.066871643066406
    4. '	for' → logprob: -6.566871643066406
    5. '    ' → logprob: -6.941871643066406
    6. '	   ' → logprob: -7.316871643066406
    7. '	' → logprob: -7.441871643066406
    8. 'for' → logprob: -7.816871643066406
    9. '\t' → logprob: -8.441871643066406
    10. '        
' → logprob: -8.691871643066406

Token 463: ' b' (ID: 287)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.9968972206115723
    2. ' range' → logprob: -1.2468972206115723
    3. 'range' → logprob: -1.6218972206115723
    4. ' B' → logprob: -2.6218972206115723
    5. 'b' → logprob: -2.7468972206115723
    6. ' b' → logprob: -4.746897220611572
    7. '   ' → logprob: -8.246896743774414
    8. ' ' → logprob: -8.496896743774414
    9. 'a' → logprob: -10.121896743774414
    10. ' a' → logprob: -11.246896743774414

Token 464: ' allant' (ID: 122150)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0644979476928711
    2. ' =' → logprob: -3.564497947692871
    3. 'range' → logprob: -4.689497947692871
    4. ' in' → logprob: -4.814497947692871
    5. ' range' → logprob: -5.064497947692871
    6. 'for' → logprob: -6.314497947692871
    7. '   ' → logprob: -6.314497947692871
    8. 'in' → logprob: -6.564497947692871
    9. ' for' → logprob: -6.689497947692871
    10. '=B' → logprob: -6.814497947692871

Token 465: ' de' (ID: 334)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -1.4623163938522339
    2. 'from' → logprob: -1.4623163938522339
    3. ' from' → logprob: -1.5873163938522339
    4. 'B' → logprob: -1.7123163938522339
    5. ' de' → logprob: -1.9623163938522339
    6. 'de' → logprob: -5.712316513061523
    7. '	B' → logprob: -6.087316513061523
    8. ' à' → logprob: -6.212316513061523
    9. '=B' → logprob: -7.087316513061523
    10. 'b' → logprob: -7.587316513061523

Token 466: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.20141343772411346
    2. ' B' → logprob: -1.7014133930206299
    3. 'b' → logprob: -16.576414108276367
    4. '	B' → logprob: -16.701414108276367
    5. '=B' → logprob: -18.326414108276367
    6. ' ' → logprob: -18.701414108276367
    7. '   ' → logprob: -18.951414108276367
    8. '>B' → logprob: -19.076414108276367
    9. '_B' → logprob: -19.326414108276367
    10. ' b' → logprob: -19.326414108276367

Token 467: ' à' (ID: 1221)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.49499842524528503
    2. ' ' → logprob: -1.2449984550476074
    3. 'to' → logprob: -2.9949984550476074
    4. ',' → logprob: -4.244998455047607
    5. ')' → logprob: -4.619998455047607
    6. '<|end|>' → logprob: -4.994998455047607
    7. ' B' → logprob: -5.494998455047607
    8. '-' → logprob: -5.744998455047607
    9. '   ' → logprob: -6.244998455047607
    10. ' à' → logprob: -6.244998455047607

Token 468: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.023289501667022705
    2. ' B' → logprob: -3.773289442062378
    3. 'b' → logprob: -10.898289680480957
    4. '(B' → logprob: -11.148289680480957
    5. '   ' → logprob: -12.023289680480957
    6. ' (' → logprob: -13.273289680480957
    7. '```' → logprob: -13.273289680480957
    8. ' ' → logprob: -14.773289680480957
    9. '	B' → logprob: -15.023289680480957
    10. '(' → logprob: -15.148289680480957

Token 469: '+(' (ID: 31717)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3572850227355957
    2. ' +' → logprob: -1.3572850227355957
    3. '+B' → logprob: -3.2322850227355957
    4. '+(' → logprob: -6.607285022735596
    5. '+a' → logprob: -7.232285022735596
    6. '+b' → logprob: -7.857285022735596
    7. '+i' → logprob: -7.982285022735596
    8. 'B' → logprob: -8.232284545898438
    9. '+A' → logprob: -8.482284545898438
    10. ' B' → logprob: -9.107284545898438

Token 470: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0017270608805119991
    2. ' a' → logprob: -6.376727104187012
    3. '(a' → logprob: -10.876727104187012
    4. ' (' → logprob: -12.251727104187012
    5. '   ' → logprob: -14.501727104187012
    6. '	a' → logprob: -15.376727104187012
    7. '_a' → logprob: -15.751727104187012
    8. ' ' → logprob: -15.751727104187012
    9. ')a' → logprob: -16.501726150512695
    10. '(' → logprob: -17.126726150512695

Token 471: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0717591792345047
    2. '-' → logprob: -2.6967592239379883
    3. '-A' → logprob: -6.321759223937988
    4. ' ' → logprob: -10.946759223937988
    5. ')' → logprob: -13.071759223937988
    6. '   ' → logprob: -13.321759223937988
    7. '<|end|>' → logprob: -14.571759223937988
    8. '−' → logprob: -14.821759223937988
    9. 'A' → logprob: -14.821759223937988
    10. '-А' → logprob: -15.071759223937988

Token 472: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0018279805080965161
    2. 'X' → logprob: -6.876828193664551
    3. ' A' → logprob: -7.626828193664551
    4. 'a' → logprob: -8.25182819366455
    5. 'B' → logprob: -10.87682819366455
    6. '   ' → logprob: -12.00182819366455
    7. '_A' → logprob: -12.25182819366455
    8. ')' → logprob: -12.37682819366455
    9. ' ' → logprob: -12.62682819366455
    10. '-A' → logprob: -13.37682819366455

Token 473: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.725745439529419
    2. ')' → logprob: -0.975745439529419
    3. ')+' → logprob: -2.225745439529419
    4. '):' → logprob: -3.725745439529419
    5. ' +' → logprob: -5.22574520111084
    6. '   ' → logprob: -7.10074520111084
    7. '):
' → logprob: -8.22574520111084
    8. ' )' → logprob: -8.97574520111084
    9. ']+' → logprob: -9.47574520111084
    10. ')+(' → logprob: -9.97574520111084

Token 474: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4060531258583069
    2. '       ' → logprob: -1.156053066253662
    3. '    
' → logprob: -4.531053066253662
    4. '
' → logprob: -5.656053066253662
    5. '        
' → logprob: -6.406053066253662
    6. ' for' → logprob: -6.656053066253662
    7. 'for' → logprob: -7.656053066253662
    8. '	' → logprob: -8.53105354309082
    9. '    ' → logprob: -8.90605354309082
    10. '  
' → logprob: -8.90605354309082

Token 475: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4765218198299408
    2. '   ' → logprob: -0.9765218496322632
    3. ' for' → logprob: -6.726521968841553
    4. '	' → logprob: -8.226521492004395
    5. '    
' → logprob: -8.476521492004395
    6. 'for' (adapté à ' for') → logprob: -8.851521492004395
    7. '        
' → logprob: -8.976521492004395
    8. '	   ' → logprob: -8.976521492004395
    9. '	for' → logprob: -9.601521492004395
    10. '           ' → logprob: -9.601521492004395

Token 476: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.11272155493497849
    2. ' i' → logprob: -2.4877214431762695
    3. 'a' → logprob: -3.8627214431762695
    4. ' ' → logprob: -6.6127214431762695
    5. 'i' → logprob: -6.8627214431762695
    6. '_a' → logprob: -10.11272144317627
    7. ' _' → logprob: -10.61272144317627
    8. '	a' → logprob: -11.36272144317627
    9. '_' → logprob: -12.36272144317627
    10. ' ' → logprob: -12.80022144317627

Token 477: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0031986311078071594
    2. 'in' → logprob: -5.753198623657227
    3. ' ' → logprob: -11.628198623657227
    4. '	in' → logprob: -11.878198623657227
    5. '    ' → logprob: -13.503198623657227
    6. ',' → logprob: -14.128198623657227
    7. '   ' → logprob: -14.253198623657227
    8. ' i' → logprob: -14.503198623657227
    9. 'range' → logprob: -14.503198623657227
    10. ')' → logprob: -15.503198623657227

Token 478: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0206720617134124e-05
    2. ' range' → logprob: -11.50001049041748
    3. '   ' → logprob: -19.375009536743164
    4. '(range' → logprob: -20.500009536743164
    5. ' ' → logprob: -21.250009536743164
    6. '	range' → logprob: -21.250009536743164
    7. 'rang' → logprob: -22.500009536743164
    8. '  ' → logprob: -23.125009536743164
    9. 'r' → logprob: -23.750009536743164
    10. 'ra' → logprob: -24.250009536743164

Token 479: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -2.2603901015827432e-05
    2. '(' → logprob: -11.250022888183594
    3. '   ' → logprob: -12.250022888183594
    4. '(a' → logprob: -12.750022888183594
    5. ' (' → logprob: -13.375022888183594
    6. '(
' → logprob: -16.000022888183594
    7. 'A' → logprob: -16.125022888183594
    8. '((' → logprob: -17.500022888183594
    9. ',' → logprob: -17.875022888183594
    10. ' A' → logprob: -19.000022888183594

Token 480: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041482248343527317
    2. ' ,' → logprob: -7.875414848327637
    3. '   ' → logprob: -11.125414848327637
    4. ',A' → logprob: -11.750414848327637
    5. '+' → logprob: -12.375414848327637
    6. 'a' → logprob: -12.750414848327637
    7. 'A' → logprob: -13.375414848327637
    8. ',
' → logprob: -13.625414848327637
    9. ',a' → logprob: -15.000414848327637
    10. ' ' → logprob: -15.125414848327637

Token 481: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -5.848420551046729e-05
    2. ' A' → logprob: -9.7500581741333
    3. '	A' → logprob: -16.750059127807617
    4. '   ' → logprob: -17.375059127807617
    5. '(A' → logprob: -17.750059127807617
    6. 'a' → logprob: -18.625059127807617
    7. '=A' → logprob: -19.625059127807617
    8. '>A' → logprob: -20.375059127807617
    9. ' ' → logprob: -20.625059127807617
    10. '"A' → logprob: -21.000059127807617

Token 482: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004713495261967182
    2. ' +' → logprob: -5.379713535308838
    3. '+A' → logprob: -9.50471305847168
    4. ',' → logprob: -12.50471305847168
    5. '   ' → logprob: -12.87971305847168
    6. '+x' → logprob: -12.87971305847168
    7. '+B' → logprob: -13.00471305847168
    8. '+
' → logprob: -13.50471305847168
    9. 'X' → logprob: -13.75471305847168
    10. 'A' → logprob: -13.87971305847168

Token 483: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.9146995327901095e-05
    2. ' X' → logprob: -10.875019073486328
    3. '1' → logprob: -16.875019073486328
    4. '   ' → logprob: -17.375019073486328
    5. ' ' → logprob: -17.750019073486328
    6. '	X' → logprob: -18.000019073486328
    7. '(X' → logprob: -18.500019073486328
    8. '>X' → logprob: -19.125019073486328
    9. ')' → logprob: -20.000019073486328
    10. '  ' → logprob: -20.875019073486328

Token 484: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16023753583431244
    2. ' +' → logprob: -1.9102375507354736
    3. '   ' → logprob: -11.410237312316895
    4. '):
' → logprob: -14.160237312316895
    5. ')' → logprob: -14.535237312316895
    6. ' ' → logprob: -15.035237312316895
    7. '
' → logprob: -15.535237312316895
    8. '+
' → logprob: -15.535237312316895
    9. '):' → logprob: -15.660237312316895
    10. '1' → logprob: -16.41023826599121

Token 485: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002043748099822551
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -14.500204086303711
    4. ')' → logprob: -15.250204086303711
    5. '  ' → logprob: -17.87520408630371
    6. ' )' → logprob: -18.81270408630371
    7. '2' → logprob: -19.06270408630371
    8. '
' → logprob: -19.06270408630371
    9. '```' → logprob: -19.12520408630371
    10. '    ' → logprob: -19.62520408630371

Token 486: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.3213025744771585e-05
    2. ' ' → logprob: -10.375033378601074
    3. ')' → logprob: -13.375033378601074
    4. '   ' → logprob: -15.125033378601074
    5. ' )' → logprob: -17.875032424926758
    6. '  ' → logprob: -18.375032424926758
    7. '),' → logprob: -18.375032424926758
    8. '):
' → logprob: -18.500032424926758
    9. '
' → logprob: -18.875032424926758
    10. '

' → logprob: -19.312532424926758

Token 487: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020673736929893494
    2. '):
' → logprob: -3.8956737518310547
    3. ':' → logprob: -9.270673751831055
    4. '   ' → logprob: -11.270673751831055
    5. ')' → logprob: -11.395673751831055
    6. '):
' → logprob: -11.395673751831055
    7. '       ' → logprob: -13.645673751831055
    8. ' ):' → logprob: -14.895673751831055
    9. ',' → logprob: -15.270673751831055
    10. ']:' → logprob: -15.645673751831055

Token 488: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015451514162123203
    2. '<|end|>' → logprob: -5.140451431274414
    3. '        ' → logprob: -5.765451431274414
    4. '        
' → logprob: -6.265451431274414
    5. ' ' → logprob: -7.140451431274414
    6. '    ' → logprob: -7.265451431274414
    7. ':' → logprob: -7.390451431274414
    8. ',' → logprob: -7.890451431274414
    9. ' for' → logprob: -7.890451431274414
    10. ')' → logprob: -7.890451431274414

Token 489: ' start' (ID: 1604)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2881847321987152
    2. ' for' → logprob: -1.5381847620010376
    3. 'start' (adapté à ' start') → logprob: -3.538184642791748
    4. '           ' → logprob: -5.913184642791748
    5. 'b' → logprob: -6.288184642791748
    6. ' start' → logprob: -7.038184642791748
    7. '               ' → logprob: -7.538184642791748
    8. '   ' → logprob: -8.788185119628906
    9. 'i' → logprob: -9.663185119628906
    10. 'left' → logprob: -10.163185119628906

Token 490: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3486618101596832
    2. ' =' → logprob: -1.2236617803573608
    3. '_' → logprob: -9.348661422729492
    4. ',' → logprob: -9.848661422729492
    5. ')' → logprob: -10.348661422729492
    6. '_idx' → logprob: -11.598661422729492
    7. '   ' → logprob: -11.973661422729492
    8. '    ' → logprob: -12.598661422729492
    9. ' ' → logprob: -12.723661422729492
    10. '_=' → logprob: -12.723661422729492

Token 491: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0021893989760428667
    2. ' B' → logprob: -6.127189636230469
    3. '           ' → logprob: -13.002189636230469
    4. '   ' → logprob: -13.877189636230469
    5. '	B' → logprob: -14.877189636230469
    6. '(B' → logprob: -15.002189636230469
    7. '       ' → logprob: -15.877189636230469
    8. 'b' → logprob: -16.50218963623047
    9. '               ' → logprob: -16.75218963623047
    10. ' ' → logprob: -16.75218963623047

Token 492: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 493: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '<|end|>' → logprob: -19.875003814697266
    4. '   ' → logprob: -20.500003814697266
    5. '```' → logprob: -21.750003814697266
    6. '۱' → logprob: -22.000003814697266
    7. '１' → logprob: -22.562503814697266
    8. '-' → logprob: -22.937503814697266
    9. '১' → logprob: -23.000003814697266
    10. '  ' → logprob: -23.000003814697266

Token 494: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '<|end|>' → logprob: -19.875
    4. '   ' → logprob: -20.375
    5. '۱' → logprob: -22.25
    6. '0' → logprob: -22.875
    7. '```' → logprob: -22.9375
    8. '2' → logprob: -23.0
    9. '১' → logprob: -23.0
    10. '-' → logprob: -23.1875

Token 495: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5323200225830078
    2. '<|end|>' → logprob: -0.9073200225830078
    3. '            
' → logprob: -6.032320022583008
    4. '            ' → logprob: -6.532320022583008
    5. '       ' → logprob: -7.032320022583008
    6. '<|end|>' → logprob: -7.032320022583008
    7. ' for' → logprob: -7.032320022583008
    8. '        ' → logprob: -8.032320022583008
    9. '          ' → logprob: -8.032320022583008
    10. ' ' → logprob: -8.032320022583008

Token 496: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6509071588516235
    2. '<|end|>' → logprob: -0.7759071588516235
    3. ' for' → logprob: -5.400907039642334
    4. '       ' → logprob: -5.525907039642334
    5. '<|end|>' → logprob: -5.775907039642334
    6. '            ' → logprob: -6.275907039642334
    7. '        ' → logprob: -6.650907039642334
    8. '          ' → logprob: -7.525907039642334
    9. '            
' → logprob: -7.650907039642334
    10. '        
' → logprob: -8.150907516479492

Token 497: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.0005933052161708474
    2. ' end' → logprob: -7.625593185424805
    3. '           ' → logprob: -9.750593185424805
    4. 'length' → logprob: -10.375593185424805
    5. 'stop' → logprob: -11.375593185424805
    6. 'for' → logprob: -13.250593185424805
    7. 'limit' → logprob: -14.750593185424805
    8. 'offset' → logprob: -15.125593185424805
    9. 'to' → logprob: -15.250593185424805
    10. '	end' → logprob: -15.500593185424805

Token 498: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014180204831063747
    2. '=' → logprob: -4.2641801834106445
    3. ' ' → logprob: -11.514180183410645
    4. '            ' → logprob: -12.889180183410645
    5. '<|end|>' → logprob: -12.889180183410645
    6. ' =
' → logprob: -15.139180183410645
    7. ' =)' → logprob: -15.389180183410645
    8. '=end' → logprob: -16.13918113708496
    9. '           ' → logprob: -16.13918113708496
    10. ')' → logprob: -16.38918113708496

Token 499: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.476542204618454
    2. ' B' → logprob: -0.9765422344207764
    3. '(B' → logprob: -6.226541996002197
    4. 'start' → logprob: -8.351542472839355
    5. ' (' → logprob: -9.351542472839355
    6. '           ' → logprob: -9.476542472839355
    7. ' start' → logprob: -9.976542472839355
    8. 'end' → logprob: -11.351542472839355
    9. '(start' → logprob: -11.851542472839355
    10. 'b' → logprob: -12.476542472839355

Token 500: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6787270307540894
    2. '+' → logprob: -0.8037270307540894
    3. ' -' → logprob: -3.678727149963379
    4. '-' → logprob: -3.928727149963379
    5. '+(' → logprob: -9.428727149963379
    6. '           ' → logprob: -10.178727149963379
    7. ' ' → logprob: -11.428727149963379
    8. ' plus' → logprob: -11.428727149963379
    9. ' +(' → logprob: -12.678727149963379
    10. 'plus' → logprob: -13.053727149963379

Token 501: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.08715002238750458
    2. 'a' → logprob: -2.5871500968933105
    3. ' (' → logprob: -4.8371500968933105
    4. ' a' → logprob: -8.587149620056152
    5. '(' → logprob: -9.212149620056152
    6. ' ' → logprob: -12.462149620056152
    7. '   ' → logprob: -12.712149620056152
    8. '
' → logprob: -14.837149620056152
    9. '((' → logprob: -14.837149620056152
    10. '_a' → logprob: -15.087149620056152

Token 502: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -6.32523515378125e-05
    2. ' a' → logprob: -9.875062942504883
    3. '(a' → logprob: -11.375062942504883
    4. ' (' → logprob: -15.375062942504883
    5. '   ' → logprob: -17.750062942504883
    6. '	a' → logprob: -18.000062942504883
    7. '(' → logprob: -18.250062942504883
    8. ')a' → logprob: -18.750062942504883
    9. ''a' → logprob: -19.125062942504883
    10. '
' → logprob: -19.500062942504883

Token 503: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6934896111488342
    2. ' -' → logprob: -0.6934896111488342
    3. ' ' → logprob: -8.568490028381348
    4. '-A' → logprob: -9.693490028381348
    5. ')' → logprob: -9.818490028381348
    6. '<|end|>' → logprob: -11.068490028381348
    7. '   ' → logprob: -11.818490028381348
    8. 'a' → logprob: -12.693490028381348
    9. '<|end|>' → logprob: -12.943490028381348
    10. '  ' → logprob: -13.443490028381348

Token 504: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00015955790877342224
    2. ' A' → logprob: -8.75015926361084
    3. '   ' → logprob: -14.25015926361084
    4. ' ' → logprob: -16.625160217285156
    5. '	A' → logprob: -16.625160217285156
    6. '1' → logprob: -16.625160217285156
    7. '  ' → logprob: -16.875160217285156
    8. '_A' → logprob: -19.000160217285156
    9. ')' → logprob: -20.125160217285156
    10. 'А' → logprob: -20.375160217285156

Token 505: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002075313590466976
    2. ')
' → logprob: -7.0020751953125
    3. ' )' → logprob: -7.6270751953125
    4. '+' → logprob: -8.2520751953125
    5. ' +' → logprob: -9.1270751953125
    6. ' -' → logprob: -9.2520751953125
    7. '<|end|>' → logprob: -9.3770751953125
    8. '-' → logprob: -10.2520751953125
    9. '0' → logprob: -10.6270751953125
    10. '           ' → logprob: -10.8770751953125

Token 506: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7404167652130127
    2. ' +' → logprob: -0.7404167652130127
    3. '<|end|>' → logprob: -3.9904167652130127
    4. '           ' → logprob: -4.365416526794434
    5. ')' → logprob: -4.990416526794434
    6. ' ' → logprob: -5.115416526794434
    7. ' -' → logprob: -7.990416526794434
    8. '       ' → logprob: -7.990416526794434
    9. '            ' → logprob: -8.240416526794434
    10. '-' → logprob: -8.240416526794434

Token 507: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '0' → logprob: -16.12501335144043
    4. '           ' → logprob: -18.00001335144043
    5. '<|end|>' → logprob: -19.87501335144043
    6. '```' → logprob: -20.37501335144043
    7. '   ' → logprob: -20.50001335144043
    8. '...' → logprob: -20.56251335144043
    9. '2' → logprob: -21.25001335144043
    10. '+' → logprob: -21.37501335144043

Token 508: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '<|end|>' → logprob: -18.625003814697266
    4. '           ' → logprob: -18.875003814697266
    5. '0' → logprob: -19.125003814697266
    6. '   ' → logprob: -20.125003814697266
    7. '```' → logprob: -20.875003814697266
    8. '  ' → logprob: -21.562503814697266
    9. '               ' → logprob: -21.937503814697266
    10. '১' → logprob: -22.312503814697266

Token 509: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09962253272533417
    2. '       ' → logprob: -2.8496224880218506
    3. '<|end|>' → logprob: -3.8496224880218506
    4. ')' → logprob: -5.22462272644043
    5. '
' → logprob: -5.97462272644043
    6. '   ' → logprob: -6.47462272644043
    7. ':' → logprob: -6.84962272644043
    8. ' for' → logprob: -7.22462272644043
    9. '<|end|>' → logprob: -7.34962272644043
    10. ' covered' → logprob: -7.47462272644043

Token 510: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003386806638445705
    2. ' for' → logprob: -9.000338554382324
    3. '            
' → logprob: -9.375338554382324
    4. '<|end|>' → logprob: -10.125338554382324
    5. '       ' → logprob: -10.500338554382324
    6. 'for' → logprob: -11.000338554382324
    7. '
' → logprob: -11.125338554382324
    8. '	       ' → logprob: -11.625338554382324
    9. '		' → logprob: -12.750338554382324
    10. ' covered' → logprob: -12.875338554382324

Token 511: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.8393532633781433
    2. ' for' → logprob: -1.339353322982788
    3. '           ' → logprob: -1.464353322982788
    4. 'covered' → logprob: -2.714353322982788
    5. ' covered' → logprob: -4.839353084564209
    6. 'cover' → logprob: -8.964353561401367
    7. 'if' → logprob: -9.714353561401367
    8. '            
' → logprob: -9.714353561401367
    9. '
' → logprob: -9.839353561401367
    10. '               ' → logprob: -9.964353561401367

Token 512: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.6328508257865906
    2. 'b' → logprob: -0.7578508257865906
    3. 'i' → logprob: -9.257850646972656
    4. ' i' → logprob: -9.632850646972656
    5. 'j' → logprob: -10.132850646972656
    6. ' j' → logprob: -10.507850646972656
    7. 'pos' → logprob: -11.507850646972656
    8. ' pos' → logprob: -12.257850646972656
    9. '_b' → logprob: -12.882850646972656
    10. ' ' → logprob: -13.507850646972656

Token 513: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11283412575721741
    2. 'in' → logprob: -2.2378342151641846
    3. ' ' → logprob: -12.112833976745605
    4. '	in' → logprob: -12.487833976745605
    5. ')' → logprob: -13.862833976745605
    6. '=' → logprob: -14.362833976745605
    7. 'range' → logprob: -15.862833976745605
    8. ' ' → logprob: -15.862833976745605
    9. '<|end|>' → logprob: -15.862833976745605
    10. ' =' → logprob: -16.237834930419922

Token 514: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011566509492695332
    2. ' range' → logprob: -6.876156806945801
    3. 'start' → logprob: -9.0011568069458
    4. '(range' → logprob: -15.8761568069458
    5. ' start' → logprob: -16.251155853271484
    6. 'rang' → logprob: -16.626155853271484
    7. 'in' → logprob: -17.001155853271484
    8. '[start' → logprob: -17.126155853271484
    9. '	range' → logprob: -17.251155853271484
    10. 'ran' → logprob: -17.251155853271484

Token 515: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.06198696419596672
    2. 'start' → logprob: -2.8119869232177734
    3. '(' → logprob: -10.936986923217773
    4. ' start' → logprob: -13.811986923217773
    5. '(end' → logprob: -15.686986923217773
    6. '(
' → logprob: -15.811986923217773
    7. '[start' → logprob: -16.186986923217773
    8. '	start' → logprob: -16.811986923217773
    9. '=start' → logprob: -17.311986923217773
    10. ' (' → logprob: -17.561986923217773

Token 516: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029846983030438423
    2. ',end' → logprob: -3.6548469066619873
    3. ' ,' → logprob: -5.654847145080566
    4. '           ' → logprob: -11.529847145080566
    5. 'end' → logprob: -11.654847145080566
    6. ',
' → logprob: -11.654847145080566
    7. '            ' → logprob: -13.154847145080566
    8. '   ' → logprob: -13.404847145080566
    9. ')' → logprob: -13.654847145080566
    10. '               ' → logprob: -14.029847145080566

Token 517: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.00033558503491804004
    2. ' end' → logprob: -8.000335693359375
    3. '(end' → logprob: -16.125335693359375
    4. '   ' → logprob: -16.750335693359375
    5. '=end' → logprob: -18.125335693359375
    6. '	end' → logprob: -19.500335693359375
    7. '           ' → logprob: -19.625335693359375
    8. 'End' → logprob: -19.625335693359375
    9. '[end' → logprob: -19.750335693359375
    10. '       ' → logprob: -20.125335693359375

Token 518: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25192946195602417
    2. ' +' → logprob: -1.501929521560669
    3. '   ' → logprob: -15.62692928314209
    4. ')' → logprob: -16.501930236816406
    5. '+
' → logprob: -17.001930236816406
    6. ' ' → logprob: -17.126930236816406
    7. ' +
' → logprob: -17.501930236816406
    8. '+)' → logprob: -17.876930236816406
    9. ')+' → logprob: -18.251930236816406
    10. ' ' → logprob: -18.501930236816406

Token 519: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. ')' → logprob: -17.000036239624023
    4. '```' → logprob: -18.000036239624023
    5. '   ' → logprob: -18.375036239624023
    6. '2' → logprob: -19.000036239624023
    7. '+' → logprob: -19.125036239624023
    8. '):
' → logprob: -19.250036239624023
    9. '=' → logprob: -19.750036239624023
    10. '
' → logprob: -20.000036239624023

Token 520: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. ')' → logprob: -16.875001907348633
    4. '   ' → logprob: -19.125001907348633
    5. '```' → logprob: -19.125001907348633
    6. '0' → logprob: -19.500001907348633
    7. '):
' → logprob: -19.500001907348633
    8. '2' → logprob: -19.750001907348633
    9. '=' → logprob: -20.187501907348633
    10. '۱' → logprob: -20.687501907348633

Token 521: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4859423041343689
    2. '):' → logprob: -0.9859423041343689
    3. '               ' → logprob: -4.985942363739014
    4. ':' → logprob: -5.610942363739014
    5. ':
' → logprob: -7.610942363739014
    6. ')' → logprob: -7.860942363739014
    7. '):
' → logprob: -8.360941886901855
    8. '           ' → logprob: -8.985941886901855
    9. '       ' → logprob: -10.485941886901855
    10. ',' → logprob: -11.610941886901855

Token 522: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0025080014020204544
    2. 'covered' → logprob: -6.627508163452148
    3. ' covered' → logprob: -7.002508163452148
    4. '           ' → logprob: -8.252508163452148
    5. 'coverage' → logprob: -13.002508163452148
    6. '```' → logprob: -13.127508163452148
    7. 'cover' → logprob: -13.252508163452148
    8. '                   ' → logprob: -13.627508163452148
    9. '       ' → logprob: -13.627508163452148
    10. '                
' → logprob: -14.627508163452148

Token 523: ' covered' (ID: 13083)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'covered' (adapté à ' covered') → logprob: -0.0007830646354705095
    2. '               ' → logprob: -7.2507829666137695
    3. ' covered' → logprob: -9.62578296661377
    4. '                   ' → logprob: -12.50078296661377
    5. '           ' → logprob: -13.50078296661377
    6. 'cover' → logprob: -13.87578296661377
    7. '   ' → logprob: -14.00078296661377
    8. 'coverage' → logprob: -15.37578296661377
    9. '-covered' → logprob: -17.375783920288086
    10. '       ' → logprob: -17.625783920288086

Token 524: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -5.431207682704553e-05
    2. '[' → logprob: -10.875054359436035
    3. 'a' → logprob: -11.250054359436035
    4. '][' → logprob: -11.375054359436035
    5. '[A' → logprob: -12.000054359436035
    6. '   ' → logprob: -13.375054359436035
    7. '```' → logprob: -13.625054359436035
    8. ' [' → logprob: -14.375054359436035
    9. ')[' → logprob: -15.250054359436035
    10. 's' → logprob: -15.875054359436035

Token 525: ' -' (ID: 533)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00011093381908722222
    2. ']' → logprob: -9.500110626220703
    3. '[b' → logprob: -10.750110626220703
    4. '-' → logprob: -11.375110626220703
    5. '[' → logprob: -14.000110626220703
    6. '][:' → logprob: -14.500110626220703
    7. ' ][' → logprob: -14.625110626220703
    8. 'b' → logprob: -15.375110626220703
    9. '"][' → logprob: -15.625110626220703
    10. '].' → logprob: -15.750110626220703

Token 526: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '<|end|>' → logprob: -16.75
    4. '   ' → logprob: -17.0
    5. '```' → logprob: -18.625
    6. '           ' → logprob: -20.5
    7. '[' → logprob: -20.875
    8. '<|end|>' → logprob: -21.0
    9. '`' → logprob: -21.125
    10. '  ' → logprob: -21.5

Token 527: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '<|end|>' → logprob: -18.875
    4. '   ' → logprob: -19.25
    5. '۱' → logprob: -19.25
    6. '१' → logprob: -19.625
    7. '```' → logprob: -19.625
    8. '１' → logprob: -19.75
    9. '১' → logprob: -20.4375
    10. '2' → logprob: -20.6875

Token 528: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -8.184812031686306e-05
    2. '[b' → logprob: -9.875082015991211
    3. ']' → logprob: -10.625082015991211
    4. 'b' → logprob: -12.750082015991211
    5. ' ][' → logprob: -12.875082015991211
    6. '   ' → logprob: -15.375082015991211
    7. '[' → logprob: -16.00008201599121
    8. '"][' → logprob: -16.87508201599121
    9. '```' → logprob: -17.25008201599121
    10. '       ' → logprob: -17.37508201599121

Token 529: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.128163257315464e-07
    2. ' b' → logprob: -15.25
    3. '	b' → logprob: -22.25
    4. '   ' → logprob: -24.5
    5. '
' → logprob: -25.625
    6. ')b' → logprob: -25.625
    7. '```' → logprob: -26.125
    8. '[b' → logprob: -26.5
    9. '>b' → logprob: -27.375
    10. '*b' → logprob: -27.625

Token 530: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03288421034812927
    2. ']=' → logprob: -3.657884120941162
    3. '=' → logprob: -5.032884120941162
    4. ' ]' → logprob: -10.53288459777832
    5. ']+=' → logprob: -11.90788459777832
    6. ' =' → logprob: -12.15788459777832
    7. '|' → logprob: -13.53288459777832
    8. ' |=' → logprob: -13.53288459777832
    9. ']
' → logprob: -15.40788459777832
    10. '1' → logprob: -15.78288459777832

Token 531: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -9.088346359931165e-07
    2. ' =' → logprob: -14.125000953674316
    3. '=True' → logprob: -16.0
    4. '|' → logprob: -18.625
    5. '=
' → logprob: -18.75
    6. '+=' → logprob: -20.0
    7. ' |=' → logprob: -20.125
    8. '=

' → logprob: -20.5
    9. '1' → logprob: -21.125
    10. ']=' → logprob: -21.25

Token 532: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.627176768844947e-05
    2. 'True' → logprob: -9.250096321105957
    3. '255' → logprob: -16.12509536743164
    4. ' True' → logprob: -17.50009536743164
    5. ' ' → logprob: -17.87509536743164
    6. '   ' → logprob: -20.50009536743164
    7. '(True' → logprob: -20.62509536743164
    8. '
' → logprob: -20.75009536743164
    9. '\' → logprob: -21.12509536743164
    10. '\x' → logprob: -21.75009536743164

Token 533: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001170460251159966
    2. 'True' → logprob: -6.751170635223389
    3. ' True' → logprob: -16.001171112060547
    4. '255' → logprob: -16.376171112060547
    5. ' ' → logprob: -18.376171112060547
    6. '(True' → logprob: -18.376171112060547
    7. '\' → logprob: -20.126171112060547
    8. '
' → logprob: -20.251171112060547
    9. '   ' → logprob: -20.501171112060547
    10. 'true' → logprob: -20.626171112060547

Token 534: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 535: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.24333271384239197
    2. '<|end|>' → logprob: -1.9933327436447144
    3. '
' → logprob: -2.743332624435425
    4. '    
' → logprob: -5.618332862854004
    5. '```' → logprob: -5.868332862854004
    6. 'main' → logprob: -5.993332862854004
    7. ' if' → logprob: -6.243332862854004
    8. '   ' → logprob: -6.618332862854004
    9. '  
' → logprob: -7.243332862854004
    10. ')' → logprob: -7.493332862854004

Token 536: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.32761913537979126
    2. 'total' → logprob: -1.9526190757751465
    3. 'result' → logprob: -2.5776190757751465
    4. 'print' → logprob: -3.0776190757751465
    5. 'covered' → logprob: -4.5776190757751465
    6. 'answer' → logprob: -6.4526190757751465
    7. '   ' → logprob: -6.8276190757751465
    8. 'un' → logprob: -6.9526190757751465
    9. 'cnt' → logprob: -7.3276190757751465
    10. 'ans' → logprob: -8.327619552612305

Token 537: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7545745968818665
    2. 'count' → logprob: -1.3795745372772217
    3. 'result' → logprob: -1.8795745372772217
    4. 'total' → logprob: -2.3795745372772217
    5. 'answer' → logprob: -4.379574775695801
    6. 'covered' → logprob: -4.629574775695801
    7. 'res' → logprob: -5.629574775695801
    8. 'ans' → logprob: -6.504574775695801
    9. 'un' → logprob: -6.629574775695801
    10. '   ' → logprob: -6.629574775695801

Token 538: ' compte' (ID: 19657)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2583322823047638
    2. 'print' → logprob: -2.3833322525024414
    3. ' count' → logprob: -3.3833322525024414
    4. '#' → logprob: -3.3833322525024414
    5. '   ' → logprob: -4.008332252502441
    6. 'total' → logprob: -4.383332252502441
    7. ' print' → logprob: -5.133332252502441
    8. ' #' → logprob: -5.508332252502441
    9. ' total' → logprob: -5.508332252502441
    10. 'def' → logprob: -6.133332252502441

Token 539: ' le' (ID: 505)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.4386328160762787
    2. 'count' → logprob: -1.813632845878601
    3. 'covered' → logprob: -2.0636327266693115
    4. 'result' → logprob: -3.5636327266693115
    5. ' total' → logprob: -3.9386327266693115
    6. '   ' → logprob: -4.438632965087891
    7. ' covered' → logprob: -6.438632965087891
    8. ' count' → logprob: -6.688632965087891
    9. ' result' → logprob: -7.313632965087891
    10. 'coverage' → logprob: -7.563632965087891

Token 540: ' nombre' (ID: 9733)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6277632117271423
    2. ' total' → logprob: -0.8777632117271423
    3. 'sum' → logprob: -4.127763271331787
    4. 's' → logprob: -4.377763271331787
    5. 'result' → logprob: -4.627763271331787
    6. 'nombre' → logprob: -5.002763271331787
    7. ' nombre' → logprob: -6.502763271331787
    8. 'res' → logprob: -7.002763271331787
    9. ' sum' → logprob: -7.002763271331787
    10. ' result' → logprob: -7.627763271331787

Token 541: ' de' (ID: 334)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.9322755336761475
    2. 'de' → logprob: -1.3072755336761475
    3. '   ' → logprob: -1.9322755336761475
    4. ' total' → logprob: -2.3072755336761475
    5. ' de' → logprob: -2.5572755336761475
    6. 'def' → logprob: -5.182275772094727
    7. 'covered' → logprob: -6.182275772094727
    8. '_total' → logprob: -6.932275772094727
    9. ' =' → logprob: -7.182275772094727
    10. '=' → logprob: -7.432275772094727

Token 542: ' vrais' (ID: 169673)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cases' → logprob: -1.0908640623092651
    2. 'sum' → logprob: -1.7158640623092651
    3. 'points' → logprob: -1.9658640623092651
    4. '1' → logprob: -2.7158641815185547
    5. 's' → logprob: -2.8408641815185547
    6. 'cl' → logprob: -2.9658641815185547
    7. 'c' → logprob: -3.2158641815185547
    8. 'covered' → logprob: -3.2158641815185547
    9. 'case' → logprob: -4.465864181518555
    10. 'l' → logprob: -4.715864181518555

Token 543: ' mar' (ID: 2674)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.09851113706827164
    2. ' covered' → logprob: -2.973511219024658
    3. 'total' → logprob: -3.598511219024658
    4. ' total' → logprob: -5.223511219024658
    5. '
' → logprob: -5.848511219024658
    6. 'result' → logprob: -5.973511219024658
    7. '   ' → logprob: -6.598511219024658
    8. '(
' → logprob: -7.598511219024658
    9. 'count' → logprob: -7.848511219024658
    10. ' couvert' → logprob: -7.973511219024658

Token 544: 'qués' (ID: 70348)
  Prédit: 'qués'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qués' → logprob: -0.018368251621723175
    2. 'qu' → logprob: -4.393368244171143
    3. 'k' → logprob: -5.643368244171143
    4. 'qué' → logprob: -7.268368244171143
    5. 'ques' → logprob: -7.768368244171143
    6. 'quées' → logprob: -7.893368244171143
    7. 'ked' → logprob: -8.2683687210083
    8. 'q' → logprob: -8.6433687210083
    9. 'que' → logprob: -8.8933687210083
    10. 'quée' → logprob: -9.0183687210083

Token 545: '
' (ID: 198)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.4971008598804474
    2. 'covered' → logprob: -1.747100830078125
    3. 'result' → logprob: -1.872100830078125
    4. 'count' → logprob: -2.872100830078125
    5. ' total' → logprob: -6.372100830078125
    6. '
' → logprob: -6.747100830078125
    7. 'answer' → logprob: -6.872100830078125
    8. '   ' → logprob: -7.122100830078125
    9. 'res' → logprob: -7.247100830078125
    10. 'ans' → logprob: -8.122100830078125

Token 546: '   ' (ID: 271)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5719572305679321
    2. 'result' → logprob: -1.5719572305679321
    3. 'total' → logprob: -1.5719572305679321
    4. 'covered' → logprob: -4.571957111358643
    5. 'answer' → logprob: -5.446957111358643
    6. 'ans' → logprob: -6.071957111358643
    7. 'res' → logprob: -6.071957111358643
    8. 'cnt' → logprob: -7.446957111358643
    9. '   ' → logprob: -8.6969575881958
    10. 'counter' → logprob: -8.9469575881958

Token 547: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.9198244214057922
    2. 'count' → logprob: -0.9198244214057922
    3. 'total' → logprob: -1.6698243618011475
    4. 'answer' → logprob: -5.044824600219727
    5. 'ans' → logprob: -5.419824600219727
    6. 'res' → logprob: -6.294824600219727
    7. 'cnt' → logprob: -6.919824600219727
    8. 'print' → logprob: -7.919824600219727
    9. 'covered' → logprob: -8.294824600219727
    10. '   ' → logprob: -9.544824600219727

Token 548: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06199883669614792
    2. '=' → logprob: -2.8119988441467285
    3. '_' → logprob: -10.68699836730957
    4. ' ' → logprob: -12.31199836730957
    5. ' +=' → logprob: -14.06199836730957
    6. ' =
' → logprob: -14.31199836730957
    7. ' ' → logprob: -14.31199836730957
    8. 's' → logprob: -14.93699836730957
    9. ',' → logprob: -15.31199836730957
    10. '  ' → logprob: -15.43699836730957

Token 549: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05723150447010994
    2. 'sum' → logprob: -2.9322314262390137
    3. ' sum' → logprob: -6.182231426239014
    4. ' ' → logprob: -8.182231903076172
    5. '   ' → logprob: -14.307231903076172
    6. '	sum' → logprob: -16.307231903076172
    7. ' ' → logprob: -16.869731903076172
    8. '  ' → logprob: -16.932231903076172
    9. '=sum' → logprob: -17.119731903076172
    10. 's' → logprob: -17.119731903076172

Token 550: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.38688406348228455
    2. '0' → logprob: -1.136884093284607
    3. ' sum' → logprob: -11.261883735656738
    4. ' ' → logprob: -16.261884689331055
    5. 's' → logprob: -17.761884689331055
    6. '=sum' → logprob: -17.886884689331055
    7. '   ' → logprob: -18.386884689331055
    8. '	sum' → logprob: -18.511884689331055
    9. 'summ' → logprob: -18.511884689331055
    10. '(sum' → logprob: -18.636884689331055

Token 551: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03268635645508766
    2. '   ' → logprob: -3.907686471939087
    3. 'for' → logprob: -5.032686233520508
    4. ' for' → logprob: -5.282686233520508
    5. '    
' → logprob: -8.282686233520508
    6. '  
' → logprob: -9.782686233520508
    7. ' 
' → logprob: -9.782686233520508
    8. '<|end|>' → logprob: -9.782686233520508
    9. '
' → logprob: -10.782686233520508
    10. '   
' → logprob: -11.907686233520508

Token 552: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20236480236053467
    2. ' for' → logprob: -2.202364921569824
    3. '   ' → logprob: -3.202364921569824
    4. '
' → logprob: -3.452364921569824
    5. '    
' → logprob: -8.827364921569824
    6. ' 
' → logprob: -9.327364921569824
    7. '	for' → logprob: -10.077364921569824
    8. '  
' → logprob: -11.327364921569824
    9. '```' → logprob: -11.577364921569824
    10. '\n' → logprob: -12.077364921569824

Token 553: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.9054008084349334e-05
    2. '   ' → logprob: -10.750039100646973
    3. ' for' → logprob: -11.000039100646973
    4. '
' → logprob: -14.000039100646973
    5. '    
' → logprob: -18.125038146972656
    6. '	for' → logprob: -18.375038146972656
    7. '```' → logprob: -20.875038146972656
    8. ' 
' → logprob: -21.500038146972656
    9. 'fo' → logprob: -21.750038146972656
    10. '' → logprob: -22.250038146972656

Token 554: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.41309618949890137
    2. 'row' → logprob: -1.9130961894989014
    3. 'i' → logprob: -2.7880961894989014
    4. 'covered' → logprob: -2.7880961894989014
    5. 'ligne' → logprob: -3.5380961894989014
    6. ' line' → logprob: -4.4130964279174805
    7. ' row' → logprob: -5.0380964279174805
    8. ' i' → logprob: -5.0380964279174805
    9. ' covered' → logprob: -5.4130964279174805
    10. 'cover' → logprob: -5.6630964279174805

Token 555: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0380985289812088
    2. 'in' → logprob: -3.2880985736846924
    3. ' ' → logprob: -10.413098335266113
    4. 'covered' → logprob: -11.913098335266113
    5. ' i' → logprob: -12.288098335266113
    6. 'i' → logprob: -12.538098335266113
    7. '_' → logprob: -13.038098335266113
    8. '   ' → logprob: -13.413098335266113
    9. '	in' → logprob: -14.038098335266113
    10. 'index' → logprob: -14.038098335266113

Token 556: ' covered' (ID: 13083)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.004196763504296541
    2. 'range' → logprob: -5.879196643829346
    3. ' covered' → logprob: -6.629196643829346
    4. 'cover' → logprob: -10.004197120666504
    5. ' range' → logprob: -10.879197120666504
    6. 'coverage' → logprob: -12.129197120666504
    7. '-covered' → logprob: -16.379196166992188
    8. 'cov' → logprob: -16.629196166992188
    9. 'Covered' → logprob: -16.879196166992188
    10. 'c' → logprob: -16.879196166992188

Token 557: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6932626366615295
    2. ':
' → logprob: -0.6932626366615295
    3. '   ' → logprob: -10.318263053894043
    4. '):
' → logprob: -10.568263053894043
    5. '):' → logprob: -10.818263053894043
    6. ' :' → logprob: -11.568263053894043
    7. ':
' → logprob: -11.693263053894043
    8. '[' → logprob: -12.318263053894043
    9. ':

' → logprob: -12.318263053894043
    10. ' :
' → logprob: -12.818263053894043

Token 558: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19550153613090515
    2. '   ' → logprob: -1.9455015659332275
    3. 'result' → logprob: -3.9455015659332275
    4. ' result' → logprob: -4.320501327514648
    5. ' for' → logprob: -6.570501327514648
    6. 'for' → logprob: -7.570501327514648
    7. '	result' → logprob: -9.695501327514648
    8. '	   ' → logprob: -10.445501327514648
    9. '```' → logprob: -11.445501327514648
    10. '	for' → logprob: -12.820501327514648

Token 559: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.13973727822303772
    2. '       ' → logprob: -2.639737367630005
    3. 'for' → logprob: -3.264737367630005
    4. '   ' → logprob: -4.639737129211426
    5. ' result' → logprob: -4.639737129211426
    6. ' for' → logprob: -6.514737129211426
    7. '	result' → logprob: -11.139737129211426
    8. '           ' → logprob: -12.889737129211426
    9. ' ' → logprob: -12.889737129211426
    10. '	for' → logprob: -13.264737129211426

Token 560: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01419888436794281
    2. ' +=' → logprob: -4.2641987800598145
    3. '+' → logprob: -11.264199256896973
    4. '       ' → logprob: -11.389199256896973
    5. '   ' → logprob: -11.889199256896973
    6. '=' → logprob: -12.639199256896973
    7. ']+=' → logprob: -14.639199256896973
    8. '+="' → logprob: -15.889199256896973
    9. '+=(' → logprob: -16.014198303222656
    10. '    ' → logprob: -16.139198303222656

Token 561: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.10026782006025314
    2. 'line' → logprob: -2.3502678871154785
    3. ' sum' → logprob: -10.22526741027832
    4. 'len' → logprob: -10.72526741027832
    5. ' line' → logprob: -12.85026741027832
    6. 'byte' → logprob: -16.47526741027832
    7. '(sum' → logprob: -16.97526741027832
    8. '	sum' → logprob: -17.10026741027832
    9. 'bytes' → logprob: -17.35026741027832
    10. 'lines' → logprob: -17.47526741027832

Token 562: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.00029494395130313933
    2. 'line' → logprob: -8.50029468536377
    3. '(' → logprob: -9.50029468536377
    4. '(byte' → logprob: -11.62529468536377
    5. '(
' → logprob: -13.00029468536377
    6. '[line' → logprob: -13.37529468536377
    7. '(i' → logprob: -14.00029468536377
    8. '(b' → logprob: -14.25029468536377
    9. ' line' → logprob: -14.37529468536377
    10. '(l' → logprob: -14.87529468536377

Token 563: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.85235276655294e-05
    2. ')
' → logprob: -9.500088691711426
    3. ' )' → logprob: -11.750088691711426
    4. '())' → logprob: -12.250088691711426
    5. ')

' → logprob: -15.000088691711426
    6. '   ' → logprob: -15.125088691711426
    7. '       ' → logprob: -16.12508773803711
    8. '))' → logprob: -16.12508773803711
    9. ')
' → logprob: -16.75008773803711
    10. '()' → logprob: -17.12508773803711

Token 564: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32280686497688293
    2. '
' → logprob: -1.3228068351745605
    3. '    
' → logprob: -4.9478068351745605
    4. 'print' → logprob: -6.1978068351745605
    5. '  
' → logprob: -8.697807312011719
    6. '```' → logprob: -9.197807312011719
    7. 'return' → logprob: -10.572807312011719
    8. '   
' → logprob: -10.947807312011719
    9. '<|end|>' → logprob: -10.947807312011719
    10. ' 
' → logprob: -11.322807312011719

Token 565: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45790860056877136
    2. 'print' (adapté à ' print') → logprob: -1.2079086303710938
    3. '
' → logprob: -2.7079086303710938
    4. '    
' → logprob: -6.957908630371094
    5. 'return' → logprob: -7.707908630371094
    6. '```' → logprob: -7.832908630371094
    7. ' print' → logprob: -9.707908630371094
    8. '  
' → logprob: -11.332908630371094
    9. '	print' → logprob: -11.582908630371094
    10. ' 
' → logprob: -12.582908630371094

Token 566: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.313311368227005
    2. '(result' → logprob: -1.3133113384246826
    3. '(
' → logprob: -10.438311576843262
    4. 'result' → logprob: -11.813311576843262
    5. '('' → logprob: -12.188311576843262
    6. '()' → logprob: -12.688311576843262
    7. '(res' → logprob: -13.813311576843262
    8. '("("' → logprob: -14.063311576843262
    9. ' (' → logprob: -14.313311576843262
    10. '(f' → logprob: -14.438311576843262

Token 567: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013882013445254415
    2. '()' → logprob: -9.125139236450195
    3. '())' → logprob: -10.625139236450195
    4. ' )' → logprob: -12.750139236450195
    5. ')
' → logprob: -13.000139236450195
    6. ')`' → logprob: -15.250139236450195
    7. '(' → logprob: -16.250139236450195
    8. '))' → logprob: -16.625139236450195
    9. '   ' → logprob: -17.625139236450195
    10. '),' → logprob: -17.750139236450195

Token 568: 'thread' (ID: 9817)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0495886467397213
    2. '
' → logprob: -3.049588680267334
    3. 'main' → logprob: -7.799588680267334
    4. ' if' → logprob: -8.549588203430176
    5. '```' → logprob: -8.799588203430176
    6. '<|end|>' → logprob: -9.299588203430176
    7. '

' → logprob: -9.424588203430176
    8. 'thread' → logprob: -11.049588203430176
    9. '  
' → logprob: -11.299588203430176
    10. '(main' → logprob: -11.549588203430176

Token 569: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -8.65707261255011e-06
    2. ' ing' → logprob: -12.750008583068848
    3. '_ing' → logprob: -13.250008583068848
    4. '_' → logprob: -13.375008583068848
    5. '.ing' → logprob: -13.625008583068848
    6. '.' → logprob: -14.625008583068848
    7. '._' → logprob: -15.625008583068848
    8. '   ' → logprob: -15.625008583068848
    9. '-ing' → logprob: -16.625009536743164
    10. 'ING' → logprob: -16.875009536743164

Token 570: '.Thread' (ID: 15531)
  Prédit: '.Thread'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Thread' → logprob: -0.31412410736083984
    2. '.' → logprob: -1.3141241073608398
    3. '.start' → logprob: -7.18912410736084
    4. '.stack' → logprob: -10.18912410736084
    5. '.thread' → logprob: -10.68912410736084
    6. '.Stack' → logprob: -11.18912410736084
    7. '.Threading' → logprob: -11.93912410736084
    8. ' .' → logprob: -12.43912410736084
    9. ').' → logprob: -12.93912410736084
    10. '.Lock' → logprob: -13.06412410736084

Token 571: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.038815706968307495
    2. '(' → logprob: -3.28881573677063
    3. 'target' → logprob: -8.16381549835205
    4. '.start' → logprob: -8.66381549835205
    5. '.' → logprob: -9.03881549835205
    6. '(start' → logprob: -9.28881549835205
    7. '().' → logprob: -10.16381549835205
    8. '.target' → logprob: -10.78881549835205
    9. '(
' → logprob: -11.66381549835205
    10. 'start' → logprob: -11.91381549835205

Token 572: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10867532342672348
    2. 'main' → logprob: -2.858675241470337
    3. '(main' → logprob: -3.108675241470337
    4. ' main' → logprob: -6.983675479888916
    5. '(' → logprob: -10.983675003051758
    6. ')' → logprob: -11.233675003051758
    7. '	main' → logprob: -11.358675003051758
    8. '(
' → logprob: -13.608675003051758
    9. ')=' → logprob: -13.858675003051758
    10. ' =' → logprob: -14.608675003051758

Token 573: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.320199877838604e-07
    2. ' main' → logprob: -14.75
    3. '(main' → logprob: -20.0
    4. '	main' → logprob: -20.5
    5. '
' → logprob: -22.375
    6. ')' → logprob: -23.125
    7. '.main' → logprob: -23.25
    8. '_main' → logprob: -23.625
    9. 'mainwindow' → logprob: -24.875
    10. 'Main' → logprob: -25.75

Token 574: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.012544850818812847
    2. ')' → logprob: -4.387544631958008
    3. '()).' → logprob: -10.887544631958008
    4. ',' → logprob: -11.387544631958008
    5. '()' → logprob: -13.137544631958008
    6. '(' → logprob: -13.512544631958008
    7. '),' → logprob: -14.762544631958008
    8. ' ).' → logprob: -15.762544631958008
    9. '`).' → logprob: -15.762544631958008
    10. '   ' → logprob: -16.012544631958008

Token 575: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -3.128163257315464e-07
    2. 'run' → logprob: -15.125
    3. '```' → logprob: -18.25
    4. ' start' → logprob: -18.625
    5. 'star' → logprob: -19.375
    6. '.start' → logprob: -20.25
    7. '(start' → logprob: -20.5
    8. ':start' → logprob: -20.5
    9. '	start' → logprob: -21.25
    10. '_start' → logprob: -22.0

Token 576: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 574
Tokens correctement prédits (1ère position, stricte): 173
Tokens correctement prédits (1ère position, avec adaptation): 180
Tokens correctement prédits (top 10): 355
Précision stricte (1ère position): 30.14%
Précision adaptée (1ère position): 31.36%
Précision (top 10): 61.85%
================================================================================
