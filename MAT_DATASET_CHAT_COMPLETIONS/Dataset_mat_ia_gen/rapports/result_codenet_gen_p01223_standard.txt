================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
t = int(input())
for _ in range(t):
    n = int(input())
    heights = list(map(int, input().split()))
    max_up = 0
    max_down = 0
    for i in range(n - 1):
        diff = heights[i + 1] - heights[i]
        if diff > 0:
            if diff > max_up:
                max_up = diff
        else:
            if -diff > max_down:
                max_down = -diff
    print(max_up, max_down)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 't' (ID: 83)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011119971750304103
    2. '(t' → logprob: -7.50111198425293
    3. ''' → logprob: -8.37611198425293
    4. '('' → logprob: -9.37611198425293
    5. ')' → logprob: -9.87611198425293
    6. 't' → logprob: -9.87611198425293
    7. '(
' → logprob: -10.62611198425293
    8. '```' → logprob: -10.75111198425293
    9. '()' → logprob: -11.00111198425293
    10. '"' → logprob: -11.12611198425293

Token 4: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6586094498634338
    2. '(' → logprob: -0.7836094498634338
    3. '()' → logprob: -4.283609390258789
    4. '())' → logprob: -5.283609390258789
    5. '")' → logprob: -6.408609390258789
    6. '))' → logprob: -6.533609390258789
    7. '')' → logprob: -6.783609390258789
    8. '(
' → logprob: -7.033609390258789
    9. '`)' → logprob: -8.283609390258789
    10. '('' → logprob: -8.408609390258789

Token 5: 'for' (ID: 1938)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21084022521972656
    2. 'for' → logprob: -1.7108402252197266
    3. '\' → logprob: -5.335840225219727
    4. ' for' → logprob: -6.335840225219727
    5. '\r' → logprob: -6.710840225219727
    6. ')' → logprob: -8.085840225219727
    7. '' → logprob: -8.210840225219727
    8. '
' → logprob: -8.710840225219727
    9. '  
' → logprob: -8.710840225219727
    10. '#' → logprob: -9.585840225219727

Token 6: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0027598219458013773
    2. '  ' → logprob: -6.75275993347168
    3. ' i' → logprob: -6.75275993347168
    4. ' t' → logprob: -8.00275993347168
    5. ' ' → logprob: -11.25275993347168
    6. ' n' → logprob: -11.25275993347168
    7. ' space' → logprob: -11.37775993347168
    8. ' a' → logprob: -11.75275993347168
    9. ' ‌' → logprob: -11.75275993347168
    10. 'i' → logprob: -12.25275993347168

Token 7: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010266068391501904
    2. 'in' → logprob: -4.635266304016113
    3. ' ' → logprob: -7.635266304016113
    4. '  ' → logprob: -11.260266304016113
    5. ' i' → logprob: -13.010266304016113
    6. '<|end|>' → logprob: -13.135266304016113
    7. ',' → logprob: -13.260266304016113
    8. '_' → logprob: -13.635266304016113
    9. ' ,' → logprob: -14.135266304016113
    10. ')' → logprob: -14.135266304016113

Token 8: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759433507919312
    2. ' range' → logprob: -0.8259433507919312
    3. '	range' → logprob: -13.325942993164062
    4. 't' → logprob: -14.450942993164062
    5. '_range' → logprob: -14.575942993164062
    6. '(range' → logprob: -14.700942993164062
    7. ' ' → logprob: -15.450942993164062
    8. 'in' → logprob: -15.825942993164062
    9. 'rang' → logprob: -16.200942993164062
    10. '_' → logprob: -16.450942993164062

Token 9: '(t' (ID: 2025)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012592298910021782
    2. ' (' → logprob: -4.387592315673828
    3. '(t' → logprob: -10.012592315673828
    4. '(len' → logprob: -11.137592315673828
    5. '(range' → logprob: -11.387592315673828
    6. '(n' → logprob: -12.012592315673828
    7. '```' → logprob: -13.887592315673828
    8. ' ' → logprob: -13.887592315673828
    9. '(int' → logprob: -14.262592315673828
    10. ' t' → logprob: -14.637592315673828

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009511099196970463
    2. ')' → logprob: -5.0095109939575195
    3. ':' → logprob: -5.8845109939575195
    4. '):
' → logprob: -12.63451099395752
    5. ' ):' → logprob: -13.13451099395752
    6. ':)' → logprob: -14.13451099395752
    7. ''):' → logprob: -14.13451099395752
    8. '():' → logprob: -14.63451099395752
    9. '+' → logprob: -14.75951099395752
    10. '"):' → logprob: -15.63451099395752

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003658864414319396
    2. '    
' → logprob: -6.003658771514893
    3. '    ' → logprob: -8.37865924835205
    4. ' ' → logprob: -8.75365924835205
    5. ' 
' → logprob: -8.87865924835205
    6. ' n' → logprob: -9.25365924835205
    7. 'a' → logprob: -9.37865924835205
    8. ' input' → logprob: -9.37865924835205
    9. ' a' → logprob: -9.50365924835205
    10. '```' → logprob: -9.50365924835205

Token 12: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.5478808283805847
    2. '   ' → logprob: -0.9228808283805847
    3. ' n' → logprob: -4.42288064956665
    4. 'a' → logprob: -5.04788064956665
    5. 'x' → logprob: -5.54788064956665
    6. 's' → logprob: -7.79788064956665
    7. 'line' → logprob: -7.79788064956665
    8. 'num' → logprob: -8.172881126403809
    9. 'print' → logprob: -8.297881126403809
    10. 'data' → logprob: -8.672881126403809

Token 13: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3656838834285736
    2. ' =' → logprob: -1.240683913230896
    3. '=' → logprob: -4.2406840324401855
    4. '  ' → logprob: -6.7406840324401855
    5. ')' → logprob: -7.9906840324401855
    6. ' >' → logprob: -8.740683555603027
    7. ' ,' → logprob: -8.865683555603027
    8. ' )' → logprob: -9.115683555603027
    9. '    ' → logprob: -9.115683555603027
    10. ',' → logprob: -9.240683555603027

Token 14: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.020580893382430077
    2. 'int' → logprob: -3.895581007003784
    3. '=int' → logprob: -10.395581245422363
    4. ' input' → logprob: -13.020581245422363
    5. '(int' → logprob: -13.520581245422363
    6. '   ' → logprob: -13.645581245422363
    7. '<int' → logprob: -13.645581245422363
    8. ' ' → logprob: -13.770581245422363
    9. '[int' → logprob: -15.020581245422363
    10. '	int' → logprob: -15.395581245422363

Token 15: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04308871179819107
    2. '(' → logprob: -3.168088674545288
    3. '()' → logprob: -9.668088912963867
    4. 'input' → logprob: -11.418088912963867
    5. ' (' → logprob: -12.043088912963867
    6. '=input' → logprob: -13.168088912963867
    7. '(inp' → logprob: -14.043088912963867
    8. '```' → logprob: -14.043088912963867
    9. ')' → logprob: -14.168088912963867
    10. '`' → logprob: -14.668088912963867

Token 16: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.12977014482021332
    2. '()' → logprob: -2.629770040512085
    3. ')' → logprob: -3.004770040512085
    4. '())
' → logprob: -11.004770278930664
    5. '()))' → logprob: -11.379770278930664
    6. '(' → logprob: -12.004770278930664
    7. '))' → logprob: -12.004770278930664
    8. '`)' → logprob: -12.004770278930664
    9. '()
' → logprob: -13.004770278930664
    10. '();)' → logprob: -13.129770278930664

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4214755594730377
    2. 'a' → logprob: -1.5464755296707153
    3. 's' → logprob: -3.296475648880005
    4. ')' → logprob: -4.171475410461426
    5. 'print' → logprob: -4.171475410461426
    6. 'for' → logprob: -4.171475410461426
    7. 'if' → logprob: -4.546475410461426
    8. ' ' → logprob: -5.546475410461426
    9. '    
' → logprob: -5.671475410461426
    10. 'arr' → logprob: -5.921475410461426

Token 18: ' heights' (ID: 57359)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05827837064862251
    2. 'arr' → logprob: -3.1832783222198486
    3. 's' → logprob: -4.808278560638428
    4. 'if' → logprob: -5.558278560638428
    5. 'lst' → logprob: -7.558278560638428
    6. 'for' → logprob: -7.683278560638428
    7. 'l' → logprob: -8.30827808380127
    8. ' a' → logprob: -8.55827808380127
    9. 'result' → logprob: -8.68327808380127
    10. 'r' → logprob: -8.80827808380127

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6397603154182434
    2. '[' → logprob: -1.2647602558135986
    3. '=' → logprob: -1.8897602558135986
    4. '.' → logprob: -3.8897602558135986
    5. '[]' → logprob: -5.014760494232178
    6. '[:]' → logprob: -5.514760494232178
    7. ')' → logprob: -5.889760494232178
    8. '_' → logprob: -7.139760494232178
    9. '=[]' → logprob: -7.139760494232178
    10. '   ' → logprob: -7.139760494232178

Token 20: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.019709786400198936
    2. 'list' → logprob: -4.019709587097168
    3. ' [' → logprob: -6.894709587097168
    4. '[' → logprob: -8.394709587097168
    5. ' []' → logprob: -8.519709587097168
    6. ' input' → logprob: -10.144709587097168
    7. '[]' → logprob: -10.644709587097168
    8. '[list' → logprob: -10.644709587097168
    9. ' ' → logprob: -11.144709587097168
    10. '[input' → logprob: -11.769709587097168

Token 21: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0026705421041697264
    2. '(input' → logprob: -6.252670764923096
    3. '(range' → logprob: -7.377670764923096
    4. '(int' → logprob: -10.127670288085938
    5. '(
' → logprob: -11.752670288085938
    6. '(eval' → logprob: -12.252670288085938
    7. '()' → logprob: -12.502670288085938
    8. '("("' → logprob: -12.627670288085938
    9. '(list' → logprob: -12.752670288085938
    10. '(`' → logprob: -12.752670288085938

Token 22: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3843826651573181
    2. '(' → logprob: -1.509382724761963
    3. '(str' → logprob: -3.134382724761963
    4. '(lambda' → logprob: -3.509382724761963
    5. '(input' → logprob: -3.759382724761963
    6. '```' → logprob: -7.759382724761963
    7. 'int' → logprob: -9.009382247924805
    8. ')' → logprob: -9.259382247924805
    9. '(eval' → logprob: -9.259382247924805
    10. '<int' → logprob: -9.509382247924805

Token 23: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0013148818397894502
    2. '(' → logprob: -6.876315116882324
    3. ',input' → logprob: -8.251315116882324
    4. 'input' → logprob: -11.626315116882324
    5. '(int' → logprob: -12.626315116882324
    6. ' (' → logprob: -13.001315116882324
    7. ',' → logprob: -13.501315116882324
    8. ')' → logprob: -13.501315116882324
    9. '=input' → logprob: -13.626315116882324
    10. '(
' → logprob: -14.501315116882324

Token 24: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12693944573402405
    2. ' input' → logprob: -2.126939535140991
    3. '(input' → logprob: -11.50193977355957
    4. ',input' → logprob: -14.37693977355957
    5. '=input' → logprob: -15.12693977355957
    6. '	input' → logprob: -15.87693977355957
    7. ')' → logprob: -16.62693977355957
    8. '<input' → logprob: -16.75193977355957
    9. ' ' → logprob: -16.87693977355957
    10. '   ' → logprob: -18.25193977355957

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00013786651834379882
    2. '()' → logprob: -9.000138282775879
    3. '()))' → logprob: -11.625138282775879
    4. '())' → logprob: -12.625138282775879
    5. '()));' → logprob: -14.250138282775879
    6. ')' → logprob: -15.000138282775879
    7. ' ().' → logprob: -15.125138282775879
    8. '(' → logprob: -15.125138282775879
    9. '())))' → logprob: -15.625138282775879
    10. '()
' → logprob: -15.625138282775879

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009275413467548788
    2. 'strip' → logprob: -7.000927448272705
    3. 'rstrip' → logprob: -11.625927925109863
    4. 's' → logprob: -12.000927925109863
    5. 'spl' → logprob: -14.625927925109863
    6. ')' → logprob: -15.625927925109863
    7. ' split' → logprob: -15.750927925109863
    8. '(split' → logprob: -15.875927925109863
    9. 'sp' → logprob: -16.000926971435547
    10. 'replace' → logprob: -18.125926971435547

Token 27: '()))
' (ID: 24521)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06303679943084717
    2. '))' → logprob: -3.0630369186401367
    3. '(' → logprob: -4.438036918640137
    4. '()))' → logprob: -6.813036918640137
    5. '())' → logprob: -7.188036918640137
    6. ')))' → logprob: -7.813036918640137
    7. '()' → logprob: -8.313036918640137
    8. ')>' → logprob: -12.563036918640137
    9. '())))' → logprob: -12.938036918640137
    10. '>' → logprob: -13.063036918640137

Token 28: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.257102131843567
    2. 'i' → logprob: -1.757102131843567
    3. 'h' → logprob: -2.5071020126342773
    4. '#' → logprob: -2.8821020126342773
    5. '[' → logprob: -3.1321020126342773
    6. 'r' → logprob: -3.1321020126342773
    7. '   ' → logprob: -3.1321020126342773
    8. '\' → logprob: -3.3821020126342773
    9. 'n' → logprob: -3.5071020126342773
    10. '
' → logprob: -3.8821020126342773

Token 29: ' max' (ID: 2999)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7540618777275085
    2. 'h' → logprob: -2.0040619373321533
    3. 'c' → logprob: -2.3790619373321533
    4. 's' → logprob: -2.6290619373321533
    5. 'r' → logprob: -3.0040619373321533
    6. 'i' → logprob: -3.5040619373321533
    7. 'm' → logprob: -3.6290619373321533
    8. '#' → logprob: -3.7540619373321533
    9. 'd' → logprob: -4.004061698913574
    10. 'p' → logprob: -4.379061698913574

Token 30: '_up' (ID: 18721)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00275506847538054
    2. '_height' → logprob: -6.002755165100098
    3. '_h' → logprob: -8.752755165100098
    4. '(' → logprob: -9.252755165100098
    5. '_he' → logprob: -11.877755165100098
    6. '_)' → logprob: -12.127755165100098
    7. '_val' → logprob: -13.252755165100098
    8. '_]' → logprob: -13.377755165100098
    9. 'Height' → logprob: -14.127755165100098
    10. '_=' → logprob: -14.127755165100098

Token 31: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3149438202381134
    2. 'hill' → logprob: -2.064943790435791
    3. ' =' → logprob: -2.189943790435791
    4. '_' → logprob: -3.814943790435791
    5. ')' → logprob: -6.189943790435791
    6. 'ward' → logprob: -6.689943790435791
    7. '=[]' → logprob: -6.814943790435791
    8. ' ' → logprob: -7.189943790435791
    9. '_=' → logprob: -7.564943790435791
    10. 'h' → logprob: -7.814943790435791

Token 32: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25209659337997437
    2. ' ' → logprob: -1.6270966529846191
    3. 'he' → logprob: -4.502096652984619
    4. ' heights' → logprob: -4.877096652984619
    5. '-' → logprob: -6.127096652984619
    6. '[' → logprob: -6.377096652984619
    7. ' -' → logprob: -6.502096652984619
    8. ' [' → logprob: -7.002096652984619
    9. 'max' → logprob: -8.002096176147461
    10. ' max' → logprob: -8.127096176147461

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.038999397307634354
    2. 'he' → logprob: -4.288999557495117
    3. '-' → logprob: -4.913999557495117
    4. 'max' → logprob: -4.913999557495117
    5. '[' → logprob: -5.288999557495117
    6. ' ' → logprob: -6.038999557495117
    7. '1' → logprob: -7.663999557495117
    8. ' heights' → logprob: -8.413999557495117
    9. 'float' → logprob: -8.413999557495117
    10. 'h' → logprob: -8.538999557495117

Token 34: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.987384021282196
    2. '<|end|>' → logprob: -1.2373840808868408
    3. '\' → logprob: -2.362384080886841
    4. ' 
' → logprob: -2.987384080886841
    5. '\n' → logprob: -3.237384080886841
    6. ',' → logprob: -3.612384080886841
    7. 'n' → logprob: -3.987384080886841
    8. '_' → logprob: -4.112383842468262
    9. ')' → logprob: -4.237383842468262
    10. 'max' → logprob: -4.237383842468262

Token 35: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.098803997039795
    2. 'max' → logprob: -1.473803997039795
    3. ' max' → logprob: -2.473803997039795
    4. ',' → logprob: -2.473803997039795
    5. '<|end|>' → logprob: -2.848803997039795
    6. ' 
' → logprob: -2.848803997039795
    7. ')' → logprob: -3.848803997039795
    8. '' → logprob: -4.348803997039795
    9. '
' → logprob: -4.598803997039795
    10. '\n' → logprob: -4.598803997039795

Token 36: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.2734561264514923
    2. 'current' → logprob: -2.39845609664917
    3. ' max' → logprob: -2.89845609664917
    4. 'down' → logprob: -3.77345609664917
    5. 'i' → logprob: -3.89845609664917
    6. 'for' → logprob: -4.64845609664917
    7. 'up' → logprob: -4.64845609664917
    8. 'cur' → logprob: -5.02345609664917
    9. ' current' → logprob: -5.52345609664917
    10. 'curr' → logprob: -5.52345609664917

Token 37: '_down' (ID: 40267)
  Prédit: '_down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_down' → logprob: -0.012502583675086498
    2. '_' → logprob: -5.012502670288086
    3. '_up' → logprob: -5.387502670288086
    4. '_diff' → logprob: -7.637502670288086
    5. '_d' → logprob: -8.262502670288086
    6. '_height' → logprob: -8.512502670288086
    7. '_dn' → logprob: -10.012502670288086
    8. '_jump' → logprob: -10.762502670288086
    9. 'Down' → logprob: -10.887502670288086
    10. 'down' → logprob: -11.262502670288086

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07918807864189148
    2. '=' → logprob: -2.579188108444214
    3. '_' → logprob: -8.329188346862793
    4. ' ' → logprob: -10.579188346862793
    5. ',' → logprob: -11.204188346862793
    6. ')' → logprob: -11.954188346862793
    7. '_=' → logprob: -13.079188346862793
    8. ' _' → logprob: -13.704188346862793
    9. ' ,' → logprob: -13.954188346862793
    10. '<|end|>' → logprob: -14.079188346862793

Token 39: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22543098032474518
    2. '0' → logprob: -1.600430965423584
    3. '1' → logprob: -11.600431442260742
    4. ' -' → logprob: -12.600431442260742
    5. ' ' → logprob: -13.350431442260742
    6. ' max' → logprob: -14.412931442260742
    7. ')' → logprob: -14.912931442260742
    8. 'max' → logprob: -14.975431442260742
    9. '  ' → logprob: -15.100431442260742
    10. '-' → logprob: -15.412931442260742

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014238494448363781
    2. ' ' → logprob: -4.264238357543945
    3. '1' → logprob: -10.764238357543945
    4. '-' → logprob: -11.264238357543945
    5. 'float' → logprob: -11.451738357543945
    6. 'max' → logprob: -11.701738357543945
    7. ' -' → logprob: -12.451738357543945
    8. '   ' → logprob: -12.639238357543945
    9. ' float' → logprob: -12.889238357543945
    10. ' max' → logprob: -13.701738357543945

Token 41: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.186458706855774
    2. '<|end|>' → logprob: -1.311458706855774
    3. ' for' → logprob: -1.936458706855774
    4. '   ' → logprob: -2.4364585876464844
    5. 'for' → logprob: -3.3114585876464844
    6. '\n' → logprob: -3.3114585876464844
    7. ' ' → logprob: -3.3114585876464844
    8. '```' → logprob: -4.186458587646484
    9. ' 
' → logprob: -4.436458587646484
    10. 'n' → logprob: -4.686458587646484

Token 42: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0324428081512451
    2. 'for' → logprob: -1.1574428081512451
    3. '   ' → logprob: -1.1574428081512451
    4. '
' → logprob: -5.782443046569824
    5. '<|end|>' → logprob: -5.782443046569824
    6. ' ' → logprob: -6.407443046569824
    7. '```' → logprob: -6.407443046569824
    8. '\n' → logprob: -6.532443046569824
    9. 'n' → logprob: -7.407443046569824
    10. '' → logprob: -7.532443046569824

Token 43: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.35890820622444153
    2. ' for' → logprob: -1.2339081764221191
    3. ' ' → logprob: -5.358908176422119
    4. '   ' → logprob: -5.483908176422119
    5. 'i' → logprob: -7.733908176422119
    6. '\n' → logprob: -8.358908653259277
    7. 'n' → logprob: -8.858908653259277
    8. '' → logprob: -8.983908653259277
    9. ' i' → logprob: -9.108908653259277
    10. '```' → logprob: -9.358908653259277

Token 44: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03907953202724457
    2. ' ' → logprob: -3.289079427719116
    3. '  ' → logprob: -7.914079666137695
    4. 'i' → logprob: -7.914079666137695
    5. ' _' → logprob: -8.664079666137695
    6. '_' → logprob: -9.789079666137695
    7. ' ‌' → logprob: -10.664079666137695
    8. ' )' → logprob: -11.789079666137695
    9. ' n' → logprob: -11.914079666137695
    10. ')' → logprob: -12.164079666137695

Token 45: ' in' (ID: 306)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4086493253707886
    2. ' in' → logprob: -1.1586493253707886
    3. '<|end|>' → logprob: -4.658649444580078
    4. '  ' → logprob: -5.033649444580078
    5. '+' → logprob: -6.408649444580078
    6. ' i' → logprob: -6.783649444580078
    7. 'in' → logprob: -7.408649444580078
    8. '1' → logprob: -7.783649444580078
    9. '[' → logprob: -7.908649444580078
    10. ')' → logprob: -8.783649444580078

Token 46: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0013302408624440432
    2. 'range' → logprob: -6.751330375671387
    3. ' ' → logprob: -8.751330375671387
    4. '	range' → logprob: -14.251330375671387
    5. ' xrange' → logprob: -14.251330375671387
    6. '(range' → logprob: -15.751330375671387
    7. '1' → logprob: -16.62632942199707
    8. '_range' → logprob: -17.12632942199707
    9. '  ' → logprob: -17.87632942199707
    10. ' in' → logprob: -17.87632942199707

Token 47: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.5358694731257856e-05
    2. '(len' → logprob: -11.000035285949707
    3. '(n' → logprob: -11.500035285949707
    4. ' (' → logprob: -11.750035285949707
    5. ' ' → logprob: -15.000035285949707
    6. '(
' → logprob: -15.750035285949707
    7. '1' → logprob: -16.125036239624023
    8. '(

' → logprob: -17.875036239624023
    9. '()' → logprob: -18.125036239624023
    10. '(i' → logprob: -18.375036239624023

Token 48: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.516883134841919
    2. '1' → logprob: -1.641883134841919
    3. ' -' → logprob: -2.016883134841919
    4. ')' → logprob: -3.266883134841919
    5. ' ' → logprob: -3.391883134841919
    6. '):' → logprob: -6.01688289642334
    7. '>' → logprob: -6.64188289642334
    8. ' )' → logprob: -7.64188289642334
    9. '   ' → logprob: -7.76688289642334
    10. '):
' → logprob: -8.64188289642334

Token 49: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4287118911743164
    2. '1' → logprob: -1.0537118911743164
    3. '  ' → logprob: -12.678711891174316
    4. '2' → logprob: -13.178711891174316
    5. '<|end|>' → logprob: -13.553711891174316
    6. '   ' → logprob: -13.678711891174316
    7. ')' → logprob: -13.803711891174316
    8. '    ' → logprob: -14.803711891174316
    9. '```' → logprob: -14.803711891174316
    10. '-' → logprob: -14.803711891174316

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.125210297293961e-05
    2. ' ' → logprob: -9.625081062316895
    3. '2' → logprob: -11.125081062316895
    4. '  ' → logprob: -16.87508201599121
    5. '   ' → logprob: -17.00008201599121
    6. ')' → logprob: -17.18758201599121
    7. '3' → logprob: -17.25008201599121
    8. '१' → logprob: -17.25008201599121
    9. '0' → logprob: -17.50008201599121
    10. '```' → logprob: -17.56258201599121

Token 51: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003844732651486993
    2. ' ):' → logprob: -6.753844738006592
    3. '):
' → logprob: -6.753844738006592
    4. ':' → logprob: -7.003844738006592
    5. ')' → logprob: -7.503844738006592
    6. ' ' → logprob: -10.628844261169434
    7. ',' → logprob: -12.128844261169434
    8. '):
' → logprob: -12.378844261169434
    9. ' )' → logprob: -13.128844261169434
    10. ' ):
' → logprob: -13.378844261169434

Token 52: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6602631211280823
    2. '       ' → logprob: -1.0352630615234375
    3. ' ' → logprob: -2.9102630615234375
    4. '<|end|>' → logprob: -3.9102630615234375
    5. '    
' → logprob: -4.4102630615234375
    6. '    ' → logprob: -4.4102630615234375
    7. ':' → logprob: -4.6602630615234375
    8. ' 
' → logprob: -5.2852630615234375
    9. '```' → logprob: -5.4102630615234375
    10. '        
' → logprob: -6.4102630615234375

Token 53: ' diff' (ID: 8868)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20018436014652252
    2. 'if' → logprob: -2.3251843452453613
    3. '   ' → logprob: -2.8251843452453613
    4. '    ' → logprob: -4.825184345245361
    5. '       ' → logprob: -5.200184345245361
    6. 'd' → logprob: -6.200184345245361
    7. ' ' → logprob: -6.200184345245361
    8. '  ' → logprob: -7.325184345245361
    9. '```' → logprob: -7.325184345245361
    10. '<|end|>' → logprob: -7.325184345245361

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14271101355552673
    2. '=' → logprob: -2.0177109241485596
    3. ' ' → logprob: -10.76771068572998
    4. '>' → logprob: -12.14271068572998
    5. ')' → logprob: -12.64271068572998
    6. ' >' → logprob: -13.39271068572998
    7. ',' → logprob: -13.89271068572998
    8. 's' → logprob: -14.14271068572998
    9. ']' → logprob: -14.64271068572998
    10. '	' → logprob: -14.89271068572998

Token 55: ' heights' (ID: 57359)
  Prédit: ' heights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heights' → logprob: -0.007716174703091383
    2. 'he' → logprob: -4.882716178894043
    3. ' he' → logprob: -9.882716178894043
    4. 'height' → logprob: -11.007716178894043
    5. ' height' → logprob: -11.007716178894043
    6. '   ' → logprob: -12.257716178894043
    7. '    ' → logprob: -12.820216178894043
    8. ' h' → logprob: -13.070216178894043
    9. ' abs' → logprob: -13.070216178894043
    10. ' alturas' → logprob: -13.507716178894043

Token 56: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.016108034178614616
    2. '[' → logprob: -4.14110803604126
    3. '```' → logprob: -10.516107559204102
    4. '[
' → logprob: -10.891107559204102
    5. '\[' → logprob: -11.766107559204102
    6. '[j' → logprob: -12.141107559204102
    7. '[I' → logprob: -13.266107559204102
    8. '[idx' → logprob: -14.141107559204102
    9. '[user' → logprob: -14.141107559204102
    10. '[s' → logprob: -14.141107559204102

Token 57: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.39132869243621826
    2. ']' → logprob: -1.1413286924362183
    3. ' +' → logprob: -5.641328811645508
    4. ' ]' → logprob: -7.641328811645508
    5. ' -' → logprob: -8.766328811645508
    6. '-' → logprob: -9.141328811645508
    7. '1' → logprob: -10.141328811645508
    8. '[' → logprob: -10.391328811645508
    9. '+]' → logprob: -10.766328811645508
    10. ')' → logprob: -11.266328811645508

Token 58: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004967942950315773
    2. ' ' → logprob: -7.625496864318848
    3. '```' → logprob: -12.250496864318848
    4. ')' → logprob: -13.375496864318848
    5. ']' → logprob: -14.250496864318848
    6. '`' → logprob: -14.625496864318848
    7. '<|end|>' → logprob: -16.00049591064453
    8. '-' → logprob: -16.00049591064453
    9. '１' → logprob: -16.06299591064453
    10. ' -' → logprob: -16.12549591064453

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.225939872208983e-05
    2. ' ' → logprob: -10.375032424926758
    3. '0' → logprob: -15.250032424926758
    4. '-' → logprob: -15.375032424926758
    5. '```' → logprob: -15.500032424926758
    6. '   ' → logprob: -15.875032424926758
    7. '१' → logprob: -17.625032424926758
    8. ' -' → logprob: -17.750032424926758
    9. '  ' → logprob: -17.812532424926758
    10. '１' → logprob: -17.937532424926758

Token 60: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4848136603832245
    2. '-' → logprob: -0.9848136901855469
    3. ')' → logprob: -5.234813690185547
    4. ']' → logprob: -5.484813690185547
    5. ' ' → logprob: -7.234813690185547
    6. '<|end|>' → logprob: -8.734813690185547
    7. '```' → logprob: -9.109813690185547
    8. '.' → logprob: -10.109813690185547
    9. '>' → logprob: -10.734813690185547
    10. '`' → logprob: -10.984813690185547

Token 61: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20142202079296112
    2. ' -' → logprob: -1.7014219760894775
    3. ' ' → logprob: -12.201421737670898
    4. '>' → logprob: -13.826421737670898
    5. '<|end|>' → logprob: -14.201421737670898
    6. '   ' → logprob: -14.701421737670898
    7. ')' → logprob: -15.451421737670898
    8. '	' → logprob: -15.451421737670898
    9. '.' → logprob: -15.826421737670898
    10. '+' → logprob: -15.951421737670898

Token 62: ' heights' (ID: 57359)
  Prédit: ' heights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heights' → logprob: -0.25228485465049744
    2. 'he' → logprob: -1.5022848844528198
    3. 'height' → logprob: -8.37728500366211
    4. ' he' → logprob: -10.25228500366211
    5. ' ' → logprob: -10.62728500366211
    6. ' height' → logprob: -10.87728500366211
    7. 'h' → logprob: -11.12728500366211
    8. 'hei' → logprob: -12.31478500366211
    9. '	' → logprob: -12.50228500366211
    10. '_he' → logprob: -12.75228500366211

Token 63: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006726144813001156
    2. '[' → logprob: -5.006726264953613
    3. '[
' → logprob: -13.131726264953613
    4. '[user' → logprob: -13.506726264953613
    5. 'i' → logprob: -13.631726264953613
    6. '```' → logprob: -13.756726264953613
    7. '[I' → logprob: -14.006726264953613
    8. '\[' → logprob: -14.506726264953613
    9. '[index' → logprob: -14.631726264953613
    10. '<|end|>' → logprob: -14.756726264953613

Token 64: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011977150104939938
    2. ')
' → logprob: -4.511977195739746
    3. '<|end|>' → logprob: -7.261977195739746
    4. '   ' → logprob: -10.011977195739746
    5. '
' → logprob: -10.261977195739746
    6. '       ' → logprob: -10.386977195739746
    7. ' )' → logprob: -10.636977195739746
    8. ')>' → logprob: -10.761977195739746
    9. '<|end|>' → logprob: -10.886977195739746
    10. ')
' → logprob: -11.011977195739746

Token 65: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0441192388534546
    2. ' 
' → logprob: -1.5441192388534546
    3. ' ' → logprob: -1.7941192388534546
    4. '<|end|>' → logprob: -2.919119358062744
    5. '  
' → logprob: -3.044119358062744
    6. '   ' → logprob: -3.169119358062744
    7. '       ' → logprob: -3.169119358062744
    8. '' → logprob: -3.544119358062744
    9. '    
' → logprob: -3.669119358062744
    10. '   
' → logprob: -5.544119358062744

Token 66: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.9164184331893921
    2. ' ' → logprob: -1.041418433189392
    3. ' if' → logprob: -1.791418433189392
    4. 'i' → logprob: -2.7914185523986816
    5. ' i' → logprob: -5.166418552398682
    6. '       ' → logprob: -5.166418552398682
    7. ' 
' → logprob: -5.291418552398682
    8. '
' → logprob: -7.791418552398682
    9. '        ' → logprob: -7.791418552398682
    10. '' → logprob: -8.041418075561523

Token 67: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.0018127481453120708
    2. 'diff' → logprob: -6.376812934875488
    3. '	diff' → logprob: -9.626812934875488
    4. '(diff' → logprob: -11.126812934875488
    5. ' ' → logprob: -11.376812934875488
    6. ' ' → logprob: -11.501812934875488
    7. ' dif' → logprob: -12.001812934875488
    8. '    ' → logprob: -14.001812934875488
    9. '        ' → logprob: -14.751812934875488
    10. ' d' → logprob: -15.376812934875488

Token 68: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3133488595485687
    2. ' >' → logprob: -1.3133488893508911
    3. ' ' → logprob: -9.438348770141602
    4. '">' → logprob: -13.188348770141602
    5. '<' → logprob: -13.938348770141602
    6. ' ' → logprob: -13.938348770141602
    7. '   ' → logprob: -14.563348770141602
    8. ' <' → logprob: -14.688348770141602
    9. ' >

' → logprob: -15.063348770141602
    10. '  ' → logprob: -15.188348770141602

Token 69: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24277319014072418
    2. '0' → logprob: -1.742773175239563
    3. ' max' → logprob: -3.3677732944488525
    4. 'max' → logprob: -5.117773056030273
    5. '  ' → logprob: -11.617773056030273
    6. '>' → logprob: -11.930273056030273
    7. '1' → logprob: -11.992773056030273
    8. '	max' → logprob: -12.617773056030273
    9. ' maxlength' → logprob: -12.680273056030273
    10. '<|end|>' → logprob: -12.680273056030273

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01937216892838478
    2. 'max' → logprob: -4.39437198638916
    3. ' ' → logprob: -5.01937198638916
    4. ' max' → logprob: -8.39437198638916
    5. '  ' → logprob: -14.39437198638916
    6. '   ' → logprob: -14.58187198638916
    7. '	max' → logprob: -14.70687198638916
    8. '```' → logprob: -14.89437198638916
    9. '1' → logprob: -15.45687198638916
    10. '(max' → logprob: -15.58187198638916

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003389190824236721
    2. ':
' → logprob: -8.625338554382324
    3. ' :' → logprob: -9.375338554382324
    4. '           ' → logprob: -10.000338554382324
    5. ' and' → logprob: -11.625338554382324
    6. '):' → logprob: -12.250338554382324
    7. '=' → logprob: -12.875338554382324
    8. ',' → logprob: -12.875338554382324
    9. '       ' → logprob: -13.250338554382324
    10. ')' → logprob: -13.500338554382324

Token 72: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4438909888267517
    2. ':' → logprob: -1.5688910484313965
    3. ' max' → logprob: -2.9438910484313965
    4. 'max' → logprob: -3.1938910484313965
    5. ':
' → logprob: -3.4438910484313965
    6. '
' → logprob: -4.5688910484313965
    7. '<|end|>' → logprob: -5.3188910484313965
    8. ' and' → logprob: -6.6938910484313965
    9. '       ' → logprob: -6.9438910484313965
    10. ' ' → logprob: -7.0688910484313965

Token 73: ' if' (ID: 538)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.02994452230632305
    2. 'max' → logprob: -3.52994441986084
    3. '               ' → logprob: -9.65494441986084
    4. ' ' → logprob: -10.02994441986084
    5. '           ' → logprob: -10.52994441986084
    6. '            ' → logprob: -11.02994441986084
    7. ' 
' → logprob: -12.02994441986084
    8. '	max' → logprob: -12.40494441986084
    9. '                ' → logprob: -12.65494441986084
    10. 'diff' → logprob: -12.77994441986084

Token 74: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.0015223604859784245
    2. 'diff' → logprob: -6.501522541046143
    3. '	diff' → logprob: -11.751522064208984
    4. ' dif' → logprob: -12.001522064208984
    5. '(diff' → logprob: -13.126522064208984
    6. ' max' → logprob: -13.376522064208984
    7. ' ' → logprob: -13.501522064208984
    8. ' ' → logprob: -14.626522064208984
    9. ' d' → logprob: -15.251522064208984
    10. ' diffusion' → logprob: -16.689022064208984

Token 75: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.020728735253214836
    2. '>' → logprob: -3.895728826522827
    3. ' ' → logprob: -8.770729064941406
    4. '    ' → logprob: -12.020729064941406
    5. '   ' → logprob: -12.270729064941406
    6. ')' → logprob: -12.395729064941406
    7. '<|end|>' → logprob: -13.020729064941406
    8. '  ' → logprob: -13.270729064941406
    9. '">' → logprob: -13.395729064941406
    10. '	' → logprob: -13.958229064941406

Token 76: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.011053244583308697
    2. 'max' → logprob: -4.511053085327148
    3. ' ' → logprob: -12.261053085327148
    4. '	max' → logprob: -15.261053085327148
    5. ' ' → logprob: -15.886053085327148
    6. ' maxlength' → logprob: -16.13605308532715
    7. ' maximum' → logprob: -16.88605308532715
    8. '(max' → logprob: -16.88605308532715
    9. '_max' → logprob: -16.88605308532715
    10. ' m' → logprob: -17.26105308532715

Token 77: '_up' (ID: 18721)
  Prédit: '_up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_up' → logprob: -5.319370302458992e-06
    2. '_down' → logprob: -12.500005722045898
    3. '_' → logprob: -13.500005722045898
    4. 'up' → logprob: -17.7500057220459
    5. '_max' → logprob: -17.7500057220459
    6. '_u' → logprob: -17.8750057220459
    7. ' _' → logprob: -18.0000057220459
    8. ')_' → logprob: -18.5000057220459
    9. '_UP' → logprob: -19.0000057220459
    10. '	up' → logprob: -19.7500057220459

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001955537445610389
    2. '):' → logprob: -9.125195503234863
    3. ':
' → logprob: -9.500195503234863
    4. '<|end|>' → logprob: -12.750195503234863
    5. ' :' → logprob: -12.875195503234863
    6. '=' → logprob: -13.375195503234863
    7. ')' → logprob: -13.375195503234863
    8. ':max' → logprob: -14.125195503234863
    9. '>:' → logprob: -14.875195503234863
    10. '):
' → logprob: -14.875195503234863

Token 79: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6649434566497803
    2. ' max' → logprob: -0.9149434566497803
    3. 'max' → logprob: -2.5399434566497803
    4. ':' → logprob: -7.164943695068359
    5. ':
' → logprob: -7.289943695068359
    6. '           ' → logprob: -7.289943695068359
    7. '=max' → logprob: -7.289943695068359
    8. '<|end|>' → logprob: -7.539943695068359
    9. '(max' → logprob: -7.789943695068359
    10. '[max' → logprob: -7.789943695068359

Token 80: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.06860822439193726
    2. 'max' (adapté à ' max') → logprob: -2.818608283996582
    3. '                   ' → logprob: -5.068608283996582
    4. '               ' → logprob: -9.568608283996582
    5. '                    
' → logprob: -9.693608283996582
    6. '                ' → logprob: -10.318608283996582
    7. ' ' → logprob: -10.568608283996582
    8. '                    ' → logprob: -10.568608283996582
    9. '(max' → logprob: -10.693608283996582
    10. ' 
' → logprob: -11.193608283996582

Token 81: '_up' (ID: 18721)
  Prédit: '_up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_up' → logprob: -3.650518920039758e-06
    2. 'up' → logprob: -13.375003814697266
    3. '_' → logprob: -14.000003814697266
    4. '_u' → logprob: -15.000003814697266
    5. '	up' → logprob: -15.375003814697266
    6. '_UP' → logprob: -15.500003814697266
    7. '_down' → logprob: -15.750003814697266
    8. ' _' → logprob: -16.250003814697266
    9. ' up' → logprob: -16.875003814697266
    10. 'Up' → logprob: -17.500003814697266

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0059287971816957
    2. '=' → logprob: -5.130928993225098
    3. '                ' → logprob: -16.38092803955078
    4. ' ' → logprob: -17.13092803955078
    5. '                    ' → logprob: -18.00592803955078
    6. ' =
' → logprob: -18.63092803955078
    7. '=max' → logprob: -19.25592803955078
    8. '=d' → logprob: -19.38092803955078
    9. '<|end|>' → logprob: -19.38092803955078
    10. '                   ' → logprob: -19.50592803955078

Token 83: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.029751762747764587
    2. 'diff' → logprob: -3.529751777648926
    3. '	diff' → logprob: -13.904751777648926
    4. ' dif' → logprob: -15.404751777648926
    5. ' d' → logprob: -16.65475082397461
    6. 'd' → logprob: -17.27975082397461
    7. '(diff' → logprob: -17.65475082397461
    8. ' ' → logprob: -17.65475082397461
    9. ' ' → logprob: -17.77975082397461
    10. '.diff' → logprob: -19.52975082397461

Token 84: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5716800093650818
    2. '
' → logprob: -0.9466800093650818
    3. '<|end|>' → logprob: -3.8216800689697266
    4. 'elif' → logprob: -5.321680068969727
    5. '    
' → logprob: -5.446680068969727
    6. '        
' → logprob: -5.821680068969727
    7. '\n' → logprob: -6.071680068969727
    8. '           ' → logprob: -6.321680068969727
    9. '            
' → logprob: -6.571680068969727
    10. ' else' → logprob: -6.571680068969727

Token 85: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0061200447380542755
    2. ' else' → logprob: -5.881120204925537
    3. ' elif' → logprob: -6.881120204925537
    4. 'elif' → logprob: -7.006120204925537
    5. '<|end|>' → logprob: -7.756120204925537
    6. 'else' → logprob: -8.131119728088379
    7. '
' → logprob: -8.631119728088379
    8. '   ' → logprob: -9.006119728088379
    9. '           ' → logprob: -9.131119728088379
    10. '	elif' → logprob: -9.756119728088379

Token 86: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26900750398635864
    2. ' else' → logprob: -1.6440074443817139
    3. 'else' (adapté à ' else') → logprob: -3.519007444381714
    4. ' elif' → logprob: -5.144007682800293
    5. 'elif' → logprob: -5.894007682800293
    6. '        ' → logprob: -6.269007682800293
    7. '	else' → logprob: -7.144007682800293
    8. '	elif' → logprob: -7.269007682800293
    9. '	' → logprob: -7.769007682800293
    10. '    ' → logprob: -8.394007682800293

Token 87: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021394360810518265
    2. ' :' → logprob: -6.752139568328857
    3. ':
' → logprob: -8.2521390914917
    4. '        ' → logprob: -8.2521390914917
    5. ' if' → logprob: -8.7521390914917
    6. '           ' → logprob: -8.8771390914917
    7. '       ' → logprob: -9.1271390914917
    8. 'if' → logprob: -11.6271390914917
    9. ' ' → logprob: -11.8771390914917
    10. ' :
' → logprob: -12.1271390914917

Token 88: '           ' (ID: 352)
  Prédit: '        '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        ' → logprob: -0.6074036359786987
    2. ' if' → logprob: -1.3574036359786987
    3. '           ' → logprob: -1.7324036359786987
    4. '            ' → logprob: -4.357403755187988
    5. ' ' → logprob: -5.982403755187988
    6. '       ' → logprob: -6.357403755187988
    7. 'if' → logprob: -6.982403755187988
    8. '    ' → logprob: -7.607403755187988
    9. ' ' → logprob: -7.857403755187988
    10. '               ' → logprob: -7.982403755187988

Token 89: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04772147163748741
    2. 'if' (adapté à ' if') → logprob: -3.1727213859558105
    3. '           ' → logprob: -5.4227213859558105
    4. '       ' → logprob: -9.047721862792969
    5. '        ' → logprob: -9.797721862792969
    6. ' ' → logprob: -10.172721862792969
    7. '   ' → logprob: -10.547721862792969
    8. '               ' → logprob: -10.922721862792969
    9. '    ' → logprob: -11.297721862792969
    10. '            ' → logprob: -11.672721862792969

Token 90: ' -' (ID: 533)
  Prédit: '-d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-d' → logprob: -0.15906000137329102
    2. ' -' → logprob: -2.409060001373291
    3. ' diff' → logprob: -3.034060001373291
    4. 'diff' → logprob: -5.534060001373291
    5. ' abs' → logprob: -5.909060001373291
    6. '-' → logprob: -6.284060001373291
    7. 'abs' → logprob: -8.409059524536133
    8. '   ' → logprob: -9.659059524536133
    9. '(-' → logprob: -9.909059524536133
    10. '	diff' → logprob: -9.909059524536133

Token 91: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.0011918948730453849
    2. ' diff' → logprob: -6.751192092895508
    3. '	diff' → logprob: -11.126192092895508
    4. '   ' → logprob: -13.001192092895508
    5. '(diff' → logprob: -13.376192092895508
    6. '1' → logprob: -13.876192092895508
    7. ' ' → logprob: -14.376192092895508
    8. '  ' → logprob: -14.626192092895508
    9. '<|end|>' → logprob: -15.251192092895508
    10. '       ' → logprob: -15.376192092895508

Token 92: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.07889385521411896
    2. '>' → logprob: -2.5788938999176025
    3. ' ' → logprob: -12.453893661499023
    4. ')>' → logprob: -15.953893661499023
    5. ')' → logprob: -17.203893661499023
    6. '<|end|>' → logprob: -17.203893661499023
    7. ' >
' → logprob: -17.453893661499023
    8. '">' → logprob: -17.703893661499023
    9. ' ' → logprob: -17.703893661499023
    10. ' >
' → logprob: -17.828893661499023

Token 93: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.014163747429847717
    2. 'max' → logprob: -4.264163970947266
    3. '(max' → logprob: -15.889163970947266
    4. '	max' → logprob: -17.139163970947266
    5. '[max' → logprob: -17.514163970947266
    6. ' ' → logprob: -17.639163970947266
    7. '=max' → logprob: -17.764163970947266
    8. '<|end|>' → logprob: -18.139163970947266
    9. '|max' → logprob: -18.389163970947266
    10. ' maxlength' → logprob: -18.639163970947266

Token 94: '_down' (ID: 40267)
  Prédit: '_down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_down' → logprob: -0.0013277375837787986
    2. 'down' → logprob: -6.6263275146484375
    3. ' down' → logprob: -13.751327514648438
    4. '_up' → logprob: -15.501327514648438
    5. '_DOWN' → logprob: -15.876327514648438
    6. '_' → logprob: -16.126327514648438
    7. 'Down' → logprob: -16.251327514648438
    8. '```' → logprob: -16.251327514648438
    9. '   ' → logprob: -16.501327514648438
    10. 'dow' → logprob: -17.251327514648438

Token 95: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007004374638199806
    2. ':
' → logprob: -5.882004261016846
    3. '=' → logprob: -6.007004261016846
    4. '               ' → logprob: -6.882004261016846
    5. ' =' → logprob: -7.882004261016846
    6. '           ' → logprob: -8.132004737854004
    7. ' :' → logprob: -11.507004737854004
    8. '                   ' → logprob: -12.007004737854004
    9. '=max' → logprob: -12.382004737854004
    10. '):' → logprob: -13.382004737854004

Token 96: '               ' (ID: 506)
  Prédit: '-d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-d' → logprob: -1.0763306617736816
    2. '           ' → logprob: -1.4513306617736816
    3. ' -' → logprob: -1.5763306617736816
    4. '-' → logprob: -1.8263306617736816
    5. 'diff' → logprob: -3.2013306617736816
    6. ' diff' → logprob: -4.826330661773682
    7. '               ' → logprob: -4.826330661773682
    8. '	diff' → logprob: -9.076330184936523
    9. '            ' → logprob: -9.576330184936523
    10. '          ' → logprob: -9.826330184936523

Token 97: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5763975977897644
    2. 'max' (adapté à ' max') → logprob: -0.8263975977897644
    3. '-max' → logprob: -7.82639741897583
    4. '                   ' → logprob: -10.451397895812988
    5. '-' → logprob: -10.951397895812988
    6. ' -' → logprob: -12.576397895812988
    7. '=max' → logprob: -12.701397895812988
    8. '	max' → logprob: -13.201397895812988
    9. '_max' → logprob: -14.076397895812988
    10. '               ' → logprob: -14.326397895812988

Token 98: '_down' (ID: 40267)
  Prédit: '_down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_down' → logprob: -2.6060808522743173e-05
    2. 'down' → logprob: -10.625025749206543
    3. '_up' → logprob: -14.125025749206543
    4. 'Down' → logprob: -15.250025749206543
    5. ' down' → logprob: -15.625025749206543
    6. '_' → logprob: -15.625025749206543
    7. '_DOWN' → logprob: -15.750025749206543
    8. '_d' → logprob: -16.12502670288086
    9. '-down' → logprob: -16.25002670288086
    10. 'd' → logprob: -18.00002670288086

Token 99: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326204538345337
    2. ' =' → logprob: -1.3132619857788086
    3. ' ' → logprob: -15.563261985778809
    4. '=
' → logprob: -16.688262939453125
    5. '=int' → logprob: -17.188262939453125
    6. '=

' → logprob: -17.188262939453125
    7. ' =
' → logprob: -17.438262939453125
    8. '```' → logprob: -18.063262939453125
    9. '＝' → logprob: -18.188262939453125
    10. 's' → logprob: -18.563262939453125

Token 100: ' -' (ID: 533)
  Prédit: '-d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-d' → logprob: -0.1660074144601822
    2. ' -' → logprob: -1.916007399559021
    3. '-' → logprob: -5.1660075187683105
    4. '-digit' → logprob: -10.791007041931152
    5. '-D' → logprob: -11.416007041931152
    6. '-di' → logprob: -12.291007041931152
    7. '-dist' → logprob: -12.541007041931152
    8. '-dis' → logprob: -12.666007041931152
    9. '-disc' → logprob: -12.666007041931152
    10. '(-' → logprob: -13.041007041931152

Token 101: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.6240566083070007e-06
    2. ' diff' → logprob: -13.750001907348633
    3. '	diff' → logprob: -14.750001907348633
    4. '(diff' → logprob: -17.250001907348633
    5. 'dif' → logprob: -17.500001907348633
    6. '.diff' → logprob: -18.875001907348633
    7. '1' → logprob: -19.125001907348633
    8. '_diff' → logprob: -19.625001907348633
    9. 'd' → logprob: -19.625001907348633
    10. '<|end|>' → logprob: -20.250001907348633

Token 102: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.232824444770813
    2. '   ' → logprob: -1.982824444770813
    3. '
' → logprob: -2.8578243255615234
    4. ')' → logprob: -5.732824325561523
    5. '\n' → logprob: -5.732824325561523
    6. ' print' → logprob: -5.982824325561523
    7. '    
' → logprob: -6.607824325561523
    8. '<|end|>' → logprob: -6.857824325561523
    9. '  
' → logprob: -7.982824325561523
    10. '```' → logprob: -8.482824325561523

Token 103: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12353474646806717
    2. '
' → logprob: -2.248534679412842
    3. '   ' → logprob: -4.873534679412842
    4. ')' → logprob: -6.873534679412842
    5. ' print' → logprob: -7.873534679412842
    6. '    
' → logprob: -7.873534679412842
    7. '  
' → logprob: -8.12353515625
    8. '\n' → logprob: -8.12353515625
    9. '<|end|>' → logprob: -8.37353515625
    10. '#' → logprob: -8.87353515625

Token 104: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0009450533543713391
    2. '
' → logprob: -7.625945091247559
    3. '   ' → logprob: -7.875945091247559
    4. ' print' → logprob: -10.375945091247559
    5. '    
' → logprob: -10.750945091247559
    6. '  
' → logprob: -11.875945091247559
    7. '```' → logprob: -12.375945091247559
    8. ')' → logprob: -12.625945091247559
    9. '\n' → logprob: -13.125945091247559
    10. '(print' → logprob: -13.375945091247559

Token 105: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.12706324458122253
    2. '(' → logprob: -2.127063274383545
    3. '("' → logprob: -10.127062797546387
    4. '('' → logprob: -10.252062797546387
    5. '()' → logprob: -10.502062797546387
    6. '((' → logprob: -11.127062797546387
    7. '("("' → logprob: -12.002062797546387
    8. '(abs' → logprob: -13.002062797546387
    9. 'max' → logprob: -13.127062797546387
    10. '(f' → logprob: -13.377062797546387

Token 106: '_up' (ID: 18721)
  Prédit: '_up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_up' → logprob: -0.00012356207298580557
    2. '_down' → logprob: -9.625123977661133
    3. '(max' → logprob: -10.125123977661133
    4. 'up' → logprob: -11.375123977661133
    5. 'max' → logprob: -12.875123977661133
    6. '(up' → logprob: -13.250123977661133
    7. '_max' → logprob: -14.125123977661133
    8. '(' → logprob: -15.250123977661133
    9. ')' → logprob: -15.750123977661133
    10. '_)' → logprob: -16.125123977661133

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12762883305549622
    2. ')' → logprob: -2.127628803253174
    3. ',max' → logprob: -7.627628803253174
    4. ' ,' → logprob: -9.002629280090332
    5. ' )' → logprob: -9.877629280090332
    6. ',)' → logprob: -10.627629280090332
    7. '   ' → logprob: -12.127629280090332
    8. ',end' → logprob: -13.127629280090332
    9. ' ' → logprob: -13.377629280090332
    10. '+' → logprob: -13.752629280090332

Token 108: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.003183420980349183
    2. ' max' → logprob: -5.753183364868164
    3. '(max' → logprob: -12.503183364868164
    4. '"' → logprob: -14.003183364868164
    5. ',max' → logprob: -14.003183364868164
    6. '[max' → logprob: -15.878183364868164
    7. ''' → logprob: -16.378183364868164
    8. ' ' → logprob: -16.878183364868164
    9. '=max' → logprob: -17.003183364868164
    10. ')' → logprob: -18.003183364868164

Token 109: '_down' (ID: 40267)
  Prédit: '_down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_down' → logprob: -6.704273118884885e-07
    2. 'down' → logprob: -15.000000953674316
    3. '_DOWN' → logprob: -16.125
    4. '_up' → logprob: -16.625
    5. ')_' → logprob: -17.5
    6. '_' → logprob: -17.625
    7. '_d' → logprob: -18.0
    8. ' down' → logprob: -18.625
    9. ' _' → logprob: -19.375
    10. '_do' → logprob: -19.5

Token 110: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ' )' → logprob: -13.625001907348633
    3. ')
' → logprob: -14.375001907348633
    4. ')`' → logprob: -16.625001907348633
    5. '`)' → logprob: -17.625001907348633
    6. '')' → logprob: -18.000001907348633
    7. '))' → logprob: -18.375001907348633
    8. '()' → logprob: -19.375001907348633
    9. '```' → logprob: -19.500001907348633
    10. ')

' → logprob: -20.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 108
Tokens correctement prédits (1ère position, stricte): 53
Tokens correctement prédits (1ère position, avec adaptation): 58
Tokens correctement prédits (top 10): 95
Précision stricte (1ère position): 49.07%
Précision adaptée (1ère position): 53.70%
Précision (top 10): 87.96%
================================================================================
