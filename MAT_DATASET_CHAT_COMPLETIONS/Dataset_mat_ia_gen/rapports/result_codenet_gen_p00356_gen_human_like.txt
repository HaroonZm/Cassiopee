================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:03:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
x, y = map(int, input().split())
from math import gcd
print(x + y - gcd(x, y))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'x' (ID: 87)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' y' (ID: 342)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02798452414572239
    2. ' =' → logprob: -3.902984619140625
    3. ',' → logprob: -5.027984619140625
    4. '+' → logprob: -7.902984619140625
    5. ' ' → logprob: -8.402984619140625
    6. '.' → logprob: -8.902984619140625
    7. ')' → logprob: -10.152984619140625
    8. '```' → logprob: -11.027984619140625
    9. '_' → logprob: -11.402984619140625
    10. '*' → logprob: -11.652984619140625

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43006598949432373
    2. '0' → logprob: -1.0550659894943237
    3. '1' → logprob: -7.555066108703613
    4. '10' → logprob: -7.930066108703613
    5. 'x' → logprob: -8.930066108703613
    6. ' x' → logprob: -9.680066108703613
    7. ' (' → logprob: -9.805066108703613
    8. '5' → logprob: -9.930066108703613
    9. 'y' → logprob: -10.305066108703613
    10. 'input' → logprob: -10.555066108703613

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013085177168250084
    2. '<|end|>' → logprob: -5.13808536529541
    3. '(lambda' → logprob: -5.38808536529541
    4. '```' → logprob: -6.88808536529541
    5. ')' → logprob: -8.26308536529541
    6. '<|end|>' → logprob: -8.51308536529541
    7. '(token' → logprob: -8.88808536529541
    8. '(str' → logprob: -9.13808536529541
    9. '(int' → logprob: -9.63808536529541
    10. '(Token' → logprob: -9.63808536529541

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.014129774644970894
    2. ')' → logprob: -4.639129638671875
    3. '(' → logprob: -5.764129638671875
    4. 'input' → logprob: -7.014129638671875
    5. '(user' → logprob: -9.514129638671875
    6. '(x' → logprob: -10.014129638671875
    7. '(raw' → logprob: -10.139129638671875
    8. ' input' → logprob: -10.764129638671875
    9. ',input' → logprob: -10.764129638671875
    10. ')(' → logprob: -11.139129638671875

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0790083184838295
    2. ' input' → logprob: -2.5790083408355713
    3. ')' → logprob: -9.454008102416992
    4. '(input' → logprob: -10.329008102416992
    5. ',input' → logprob: -12.079008102416992
    6. '=input' → logprob: -14.829008102416992
    7. ' )' → logprob: -15.079008102416992
    8. 'x' → logprob: -15.454008102416992
    9. 'user' → logprob: -15.704008102416992
    10. '	input' → logprob: -15.954008102416992

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.27661415934562683
    2. '())' → logprob: -2.401614189147949
    3. ')' → logprob: -2.526614189147949
    4. '()' → logprob: -3.026614189147949
    5. '('' → logprob: -4.776614189147949
    6. '(""))' → logprob: -6.151614189147949
    7. '`()' → logprob: -6.276614189147949
    8. '(()' → logprob: -6.526614189147949
    9. '(token' → logprob: -6.776614189147949
    10. '().' → logprob: -7.276614189147949

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003079334564972669
    2. 'strip' → logprob: -8.1253080368042
    3. ' split' → logprob: -12.0003080368042
    4. 'rstrip' → logprob: -12.3753080368042
    5. '(split' → logprob: -14.3753080368042
    6. ')' → logprob: -14.5003080368042
    7. 'spl' → logprob: -15.2503080368042
    8. 'read' → logprob: -16.000307083129883
    9. 'startswith' → logprob: -17.500307083129883
    10. '_split' → logprob: -17.875307083129883

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.052294015884399414
    2. '))' → logprob: -3.6772940158843994
    3. '())' → logprob: -3.6772940158843994
    4. '()' → logprob: -8.80229377746582
    5. '()))' → logprob: -9.55229377746582
    6. '`)' → logprob: -9.67729377746582
    7. '(' → logprob: -10.17729377746582
    8. ')`' → logprob: -11.05229377746582
    9. ')))' → logprob: -12.17729377746582
    10. ' )' → logprob: -12.80229377746582

Token 11: 'from' (ID: 2845)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20307916402816772
    2. '*' → logprob: -3.3280792236328125
    3. 'a' → logprob: -3.4530792236328125
    4. 'z' → logprob: -3.4530792236328125
    5. ',' → logprob: -3.8280792236328125
    6. 'x' → logprob: -4.4530792236328125
    7. '\n' → logprob: -4.4530792236328125
    8. '#' → logprob: -4.9530792236328125
    9. '`' → logprob: -5.0780792236328125
    10. 'if' → logprob: -5.4530792236328125

Token 12: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.08325903117656708
    2. ' collections' → logprob: -2.583259105682373
    3. ' sys' → logprob: -5.833259105682373
    4. ' itertools' → logprob: -7.083259105682373
    5. 'collections' → logprob: -8.083258628845215
    6. 'math' → logprob: -8.833258628845215
    7. ' random' → logprob: -10.458258628845215
    8. '_' → logprob: -10.833258628845215
    9. ' functools' → logprob: -10.833258628845215
    10. ' sym' → logprob: -11.083258628845215

Token 13: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0029253996908664703
    2. 'import' → logprob: -5.877925395965576
    3. ' ' → logprob: -9.252925872802734
    4. '	import' → logprob: -11.627925872802734
    5. ' sqrt' → logprob: -12.252925872802734
    6. ' importar' → logprob: -13.002925872802734
    7. ' im' → logprob: -13.252925872802734
    8. ' impor' → logprob: -13.502925872802734
    9. '.' → logprob: -13.627925872802734
    10. '```' → logprob: -14.252925872802734

Token 14: ' gcd' (ID: 106918)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.30186164379119873
    2. ' sqrt' → logprob: -1.6768616437911987
    3. ' gcd' → logprob: -3.1768617630004883
    4. 's' → logprob: -4.551861763000488
    5. ' factorial' → logprob: -4.926861763000488
    6. 'sin' → logprob: -5.426861763000488
    7. 'pow' → logprob: -5.926861763000488
    8. 'factor' → logprob: -6.301861763000488
    9. 'g' → logprob: -6.426861763000488
    10. ' ceil' → logprob: -6.926861763000488

Token 15: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.477961927652359
    2. 'x' → logprob: -1.9779618978500366
    3. '()' → logprob: -2.852962017059326
    4. 'g' → logprob: -3.227962017059326
    5. '(
' → logprob: -3.227962017059326
    6. '(a' → logprob: -3.852962017059326
    7. '(x' → logprob: -3.977962017059326
    8. ')' → logprob: -4.102962017059326
    9. 'a' → logprob: -4.352962017059326
    10. ',' → logprob: -4.727962017059326

Token 16: 'print' (ID: 1598)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.202743649482727
    2. 'g' → logprob: -1.577743649482727
    3. 'print' → logprob: -1.577743649482727
    4. 'result' → logprob: -2.2027435302734375
    5. 'n' → logprob: -3.2027435302734375
    6. 'd' → logprob: -3.7027435302734375
    7. 'x' → logprob: -3.9527435302734375
    8. ',' → logprob: -4.5777435302734375
    9. '(' → logprob: -4.7027435302734375
    10. '\n' → logprob: -4.8277435302734375

Token 17: '(x' (ID: 4061)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.387073814868927
    2. '(' → logprob: -1.1370737552642822
    3. '(x' → logprob: -8.637073516845703
    4. '((' → logprob: -11.012073516845703
    5. '(s' → logprob: -13.012073516845703
    6. '(a' → logprob: -13.387073516845703
    7. '(abs' → logprob: -13.762073516845703
    8. '(max' → logprob: -14.012073516845703
    9. '('' → logprob: -14.512073516845703
    10. '(math' → logprob: -14.637073516845703

Token 18: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3415413498878479
    2. ' ,' → logprob: -1.3415412902832031
    3. ')' → logprob: -4.341541290283203
    4. '*' → logprob: -4.966541290283203
    5. ' ' → logprob: -5.466541290283203
    6. ' *' → logprob: -6.091541290283203
    7. ' )' → logprob: -7.466541290283203
    8. ',g' → logprob: -8.091541290283203
    9. ',y' → logprob: -9.466541290283203
    10. ' `' → logprob: -9.716541290283203

Token 19: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.17977061867713928
    2. ' y' → logprob: -1.804770588874817
    3. ' ' → logprob: -11.679770469665527
    4. 'x' → logprob: -11.804770469665527
    5. ')' → logprob: -13.429770469665527
    6. ' x' → logprob: -13.679770469665527
    7. '(y' → logprob: -13.929770469665527
    8. '"' → logprob: -14.054770469665527
    9. ''y' → logprob: -14.179770469665527
    10. '	y' → logprob: -14.304770469665527

Token 20: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016295937821269035
    2. ',' → logprob: -4.891295909881592
    3. ' )' → logprob: -5.016295909881592
    4. '))' → logprob: -6.766295909881592
    5. ' ,' → logprob: -7.391295909881592
    6. ')))' → logprob: -9.76629638671875
    7. ' -' → logprob: -9.76629638671875
    8. ' ' → logprob: -10.39129638671875
    9. '-' → logprob: -10.51629638671875
    10. ')`' → logprob: -11.26629638671875

Token 21: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -2.8444881536415778e-05
    2. ' gcd' → logprob: -10.500028610229492
    3. ')' → logprob: -14.625028610229492
    4. '2' → logprob: -15.500028610229492
    5. '1' → logprob: -16.000028610229492
    6. '	g' → logprob: -17.000028610229492
    7. '/g' → logprob: -17.750028610229492
    8. ' ' → logprob: -17.875028610229492
    9. '(g' → logprob: -18.125028610229492
    10. '_g' → logprob: -18.500028610229492

Token 22: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07890113443136215
    2. '(x' → logprob: -2.5789010524749756
    3. '(
' → logprob: -12.578901290893555
    4. ' (' → logprob: -12.578901290893555
    5. ')' → logprob: -13.203901290893555
    6. '(

' → logprob: -13.578901290893555
    7. '((' → logprob: -14.453901290893555
    8. '('' → logprob: -15.953901290893555
    9. '(n' → logprob: -16.203901290893555
    10. '()' → logprob: -16.328901290893555

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011991284787654877
    2. ',y' → logprob: -4.886991500854492
    3. '(' → logprob: -5.636991500854492
    4. '(x' → logprob: -7.761991500854492
    5. ' ,' → logprob: -9.011991500854492
    6. ',x' → logprob: -9.386991500854492
    7. ')' → logprob: -9.761991500854492
    8. '(y' → logprob: -9.886991500854492
    9. 'y' → logprob: -10.011991500854492
    10. ' ' → logprob: -11.886991500854492

Token 24: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01531064324080944
    2. 'x' → logprob: -4.765310764312744
    3. ' y' → logprob: -5.015310764312744
    4. ' x' → logprob: -10.265310287475586
    5. ')' → logprob: -13.890310287475586
    6. '(x' → logprob: -14.015310287475586
    7. '(y' → logprob: -14.390310287475586
    8. ',' → logprob: -15.265310287475586
    9. ',y' → logprob: -15.640310287475586
    10. ')y' → logprob: -15.765310287475586

Token 25: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4741332530975342
    2. ')' → logprob: -0.9741332530975342
    3. ')))' → logprob: -10.099133491516113
    4. ' ))' → logprob: -11.974133491516113
    5. '(x' → logprob: -13.099133491516113
    6. ' )' → logprob: -13.224133491516113
    7. '(' → logprob: -13.599133491516113
    8. '),' → logprob: -14.474133491516113
    9. '))
' → logprob: -14.724133491516113
    10. ' ' → logprob: -14.724133491516113


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 23
Tokens correctement prédits (1ère position, stricte): 5
Tokens correctement prédits (1ère position, avec adaptation): 5
Tokens correctement prédits (top 10): 17
Précision stricte (1ère position): 21.74%
Précision adaptée (1ère position): 21.74%
Précision (top 10): 73.91%
================================================================================
