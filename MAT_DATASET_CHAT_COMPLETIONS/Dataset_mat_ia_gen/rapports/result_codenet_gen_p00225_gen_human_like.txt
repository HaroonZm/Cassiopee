================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:28:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

def can_form_shiritori(words):
    from collections import defaultdict, deque

    n = len(words)
    graph = defaultdict(list)
    indegree = [0]*26
    outdegree = [0]*26
    used_vertices = set()

    for w in words:
        f = ord(w[0]) - ord('a')
        l = ord(w[-1]) - ord('a')
        graph[f].append(l)
        outdegree[f] += 1
        indegree[l] += 1
        used_vertices.add(f)
        used_vertices.add(l)

    # Check connectivity of vertices with edges
    def dfs(v, visited, g):
        visited.add(v)
        for u in g[v]:
            if u not in visited:
                dfs(u, visited, g)

    # build undirected graph for connectivity check
    undirected = defaultdict(list)
    for v in used_vertices:
        for u in graph[v]:
            undirected[v].append(u)
            undirected[u].append(v)

    visited = set()
    start_vertex = next(iter(used_vertices))
    dfs(start_vertex, visited, undirected)
    if visited != used_vertices:
        return False

    # Check Eulerian path conditions
    start_points = 0
    end_points = 0
    for i in used_vertices:
        diff = outdegree[i] - indegree[i]
        if diff == 1:
            start_points += 1
        elif diff == -1:
            end_points += 1
        elif diff != 0:
            return False

    if (start_points == 0 and end_points == 0) or (start_points == 1 and end_points == 1):
        # Additionally, check the first letter of first word matches last letter of last word in path
        # Since a Eulerian path uses all edges, it corresponds to using all words
        # But Eulerian path doesn't ensure the first word's first char == last word's last char, 
        # So we must check that condition explicitly possible by choosing start and end arcs carefully.
        # The problem states: first word's first char == last word's last char.
        # So the Eulerian path must be a circuit (start_points == 0 and end_points == 0) to be "OK".
        # If start_points == 1 and end_points ==1, it means the path is not circular => NG.
        return start_points == 0 and end_points == 0
    else:
        return False

def main():
    input = sys.stdin.readline
    while True:
        n = input()
        if not n:
            break
        n = n.strip()
        if n == '0':
            break
        n = int(n)
        words = [input().strip() for _ in range(n)]
        if can_form_shiritori(words):
            print("OK")
        else:
            print("NG")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -3.523948907968588e-05
    2. ' .' → logprob: -11.875035285949707
    3. '.import' → logprob: -12.125035285949707
    4. '.user' → logprob: -12.875035285949707
    5. '.readline' → logprob: -12.875035285949707
    6. '.`' → logprob: -13.125035285949707
    7. '.stdout' → logprob: -13.625035285949707
    8. '[' → logprob: -13.625035285949707
    9. '.exit' → logprob: -13.875035285949707
    10. '​.' → logprob: -14.125035285949707

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5748613476753235
    2. '_trace' → logprob: -1.5748612880706787
    3. ' _' → logprob: -3.1998612880706787
    4. '_exc' → logprob: -3.3248612880706787
    5. '_version' → logprob: -3.5748612880706787
    6. '_ex' → logprob: -3.5748612880706787
    7. '_encoding' → logprob: -3.6998612880706787
    8. 'trace' → logprob: -4.824861526489258
    9. '_default' → logprob: -5.449861526489258
    10. '_set' → logprob: -5.449861526489258

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0007818726007826626
    2. 'ursive' → logprob: -7.375782012939453
    3. 'urs' → logprob: -10.125782012939453
    4. 'ursor' → logprob: -10.875782012939453
    5. 'ision' → logprob: -11.250782012939453
    6. 'alc' → logprob: -11.625782012939453
    7. 'set' → logprob: -11.625782012939453
    8. '_limit' → logprob: -11.750782012939453
    9. 'ursively' → logprob: -11.875782012939453
    10. 't' → logprob: -12.125782012939453

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.4866597652435303
    2. 'limit' → logprob: -0.9866597652435303
    3. '_depth' → logprob: -4.486660003662109
    4. 'depth' → logprob: -7.486660003662109
    5. '_' → logprob: -8.36166000366211
    6. '_rate' → logprob: -9.98666000366211
    7. 'lim' → logprob: -10.23666000366211
    8. '(' → logprob: -10.36166000366211
    9. '_factor' → logprob: -10.36166000366211
    10. '_stack' → logprob: -10.61166000366211

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0325924449716695e-05
    2. '(
' → logprob: -12.37501049041748
    3. ' (' → logprob: -12.50001049041748
    4. '(

' → logprob: -13.25001049041748
    5. '((' → logprob: -15.75001049041748
    6. '("("' → logprob: -15.87501049041748
    7. '('' → logprob: -16.875009536743164
    8. '(
' → logprob: -17.000009536743164
    9. '(None' → logprob: -17.500009536743164
    10. '()' → logprob: -17.500009536743164

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16023612022399902
    2. '100' → logprob: -1.910236120223999
    3. ' ' → logprob: -12.660236358642578
    4. '500' → logprob: -12.785236358642578
    5. '300' → logprob: -13.285236358642578
    6. '999' → logprob: -13.660236358642578
    7. '1' → logprob: -13.910236358642578
    8. '150' → logprob: -14.285236358642578
    9. '200' → logprob: -14.785236358642578
    10. '(' → logprob: -15.160236358642578

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6703574657440186
    2. '000' → logprob: -0.9203574657440186
    3. '00' → logprob: -2.4203574657440186
    4. '6' → logprob: -7.295357704162598
    5. '4' → logprob: -8.045357704162598
    6. '**' → logprob: -9.045357704162598
    7. '2' → logprob: -10.295357704162598
    8. '5' → logprob: -10.545357704162598
    9. '```' → logprob: -11.670357704162598
    10. '3' → logprob: -11.795357704162598

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0031121151987463236
    2. '9' → logprob: -6.003112316131592
    3. '8' → logprob: -7.503112316131592
    4. '6' → logprob: -9.378111839294434
    5. ' ' → logprob: -16.25311279296875
    6. '```' → logprob: -16.37811279296875
    7. ')' → logprob: -18.50311279296875
    8. '(' → logprob: -19.62811279296875
    9. '``' → logprob: -20.00311279296875
    10. '}' → logprob: -20.75311279296875

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.60414821645827e-06
    2. '))' → logprob: -12.875004768371582
    3. ' )' → logprob: -13.250004768371582
    4. ')
' → logprob: -15.875004768371582
    5. ')))' → logprob: -18.000003814697266
    6. '```' → logprob: -18.125003814697266
    7. ')`' → logprob: -18.125003814697266
    8. '),' → logprob: -18.375003814697266
    9. ' ' → logprob: -18.375003814697266
    10. '`)' → logprob: -18.625003814697266

Token 13: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005326599348336458
    2. '```' → logprob: -8.750533103942871
    3. '
' → logprob: -8.875533103942871
    4. '\' → logprob: -9.125533103942871
    5. 'n' → logprob: -9.875533103942871
    6. '

' → logprob: -11.500533103942871
    7. '
' → logprob: -11.500533103942871
    8. ' def' → logprob: -11.625533103942871
    9. ')' → logprob: -11.750533103942871
    10. '#' → logprob: -11.875533103942871

Token 14: ' can' (ID: 665)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16084302961826324
    2. ' factorial' → logprob: -2.1608431339263916
    3. ' dfs' → logprob: -3.7858431339263916
    4. ' fibonacci' → logprob: -5.6608428955078125
    5. ' space' → logprob: -6.6608428955078125
    6. ' factor' → logprob: -6.7858428955078125
    7. ' recursive' → logprob: -7.5358428955078125
    8. ' fib' → logprob: -7.6608428955078125
    9. ' main' → logprob: -7.7858428955078125
    10. '_' → logprob: -7.9108428955078125

Token 15: '_form' (ID: 18664)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05981515720486641
    2. ' _' → logprob: -3.9348151683807373
    3. '_accept' → logprob: -3.9348151683807373
    4. ' ' → logprob: -5.184814929962158
    5. '_continue' → logprob: -5.309814929962158
    6. '_access' → logprob: -6.809814929962158
    7. '_cons' → logprob: -7.434814929962158
    8. '_apply' → logprob: -7.559814929962158
    9. '_execute' → logprob: -7.809814929962158
    10. '_can' → logprob: -8.059815406799316

Token 16: '_sh' (ID: 8823)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.33579176664352417
    2. '_word' → logprob: -1.960791826248169
    3. '_string' → logprob: -3.460791826248169
    4. '_parent' → logprob: -3.835791826248169
    5. '_sequence' → logprob: -4.08579158782959
    6. '_triangle' → logprob: -4.58579158782959
    7. '_a' → logprob: -4.71079158782959
    8. '(' → logprob: -5.08579158782959
    9. '_sentence' → logprob: -5.08579158782959
    10. '_pal' → logprob: -5.33579158782959

Token 17: 'ir' (ID: 380)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.7516079545021057
    2. 'uffle' → logprob: -1.376607894897461
    3. 'ared' → logprob: -2.876607894897461
    4. 'e' → logprob: -2.876607894897461
    5. 'elf' → logprob: -3.626607894897461
    6. 'ort' → logprob: -3.751607894897461
    7. 'adow' → logprob: -4.126607894897461
    8. 'ift' → logprob: -4.751607894897461
    9. 'ard' → logprob: -4.876607894897461
    10. 'aring' → logprob: -5.001607894897461

Token 18: 'itori' (ID: 44031)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4171954095363617
    2. '```' → logprob: -2.2921953201293945
    3. '

' → logprob: -4.1671953201293945
    4. 'a' → logprob: -4.1671953201293945
    5. 'ase' → logprob: -4.2296953201293945
    6. 'ts' → logprob: -4.2296953201293945
    7. '__' → logprob: -4.2921953201293945
    8. '</' → logprob: -4.3546953201293945
    9. '``' → logprob: -4.6046953201293945
    10. ' t' → logprob: -4.6046953201293945

Token 19: '(words' (ID: 80550)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1060410737991333
    2. '(word' → logprob: -2.3560409545898438
    3. '_word' → logprob: -6.356040954589844
    4. '(s' → logprob: -6.856040954589844
    5. '_' → logprob: -7.231040954589844
    6. '(_' → logprob: -7.731040954589844
    7. '(sentence' → logprob: -7.731040954589844
    8. '(name' → logprob: -7.856040954589844
    9. '(line' → logprob: -8.481040954589844
    10. '(game' → logprob: -8.981040954589844

Token 20: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018883032025769353
    2. ':' → logprob: -6.751888275146484
    3. ')' → logprob: -7.376888275146484
    4. ',' → logprob: -10.001888275146484
    5. '[' → logprob: -11.251888275146484
    6. '):
' → logprob: -11.751888275146484
    7. ' ):' → logprob: -11.751888275146484
    8. ':list' → logprob: -11.876888275146484
    9. '[]):' → logprob: -12.501888275146484
    10. ']:' → logprob: -12.626888275146484

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008037914521992207
    2. ':' → logprob: -8.00080394744873
    3. '```' → logprob: -8.25080394744873
    4. '    
' → logprob: -9.25080394744873
    5. ' if' → logprob: -10.12580394744873
    6. '    ' → logprob: -10.87580394744873
    7. ' indentation' → logprob: -11.25080394744873
    8. ':
' → logprob: -11.62580394744873
    9. '[' → logprob: -12.25080394744873
    10. 'if' → logprob: -12.87580394744873

Token 22: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07699932903051376
    2. ' n' → logprob: -3.5769994258880615
    3. ' if' → logprob: -4.201999187469482
    4. ' from' → logprob: -4.951999187469482
    5. 'n' → logprob: -5.326999187469482
    6. 'from' (adapté à ' from') → logprob: -5.826999187469482
    7. ' graph' → logprob: -5.826999187469482
    8. ' word' → logprob: -6.451999187469482
    9. ' words' → logprob: -6.576999187469482
    10. ' #' → logprob: -6.701999187469482

Token 23: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.001203923486173153
    2. 'collections' → logprob: -6.751204013824463
    3. ' sys' → logprob: -11.626203536987305
    4. '_' → logprob: -11.751203536987305
    5. ' math' → logprob: -12.001203536987305
    6. ' itertools' → logprob: -12.001203536987305
    7. ' collection' → logprob: -13.626203536987305
    8. ' _' → logprob: -13.876203536987305
    9. ' functools' → logprob: -14.251203536987305
    10. ' nltk' → logprob: -14.626203536987305

Token 24: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.00429018447175622
    2. ' import' → logprob: -6.1292901039123535
    3. 'ort' → logprob: -6.6292901039123535
    4. '```' → logprob: -8.004290580749512
    5. 'ounter' → logprob: -9.129290580749512
    6. 'port' → logprob: -9.379290580749512
    7. 'deque' → logprob: -10.129290580749512
    8. '	import' → logprob: -10.629290580749512
    9. 'counter' → logprob: -10.629290580749512
    10. '.Counter' → logprob: -10.879290580749512

Token 25: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.5978859066963196
    2. 'deque' → logprob: -0.8478859066963196
    3. ' deque' → logprob: -4.347886085510254
    4. 'default' → logprob: -5.597886085510254
    5. 'Counter' → logprob: -5.722886085510254
    6. ' Counter' → logprob: -6.347886085510254
    7. 'de' → logprob: -10.972886085510254
    8. 'collections' → logprob: -11.097886085510254
    9. '```' → logprob: -11.347886085510254
    10. 'counter' → logprob: -13.972886085510254

Token 26: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6436783671379089
    2. '   ' → logprob: -1.2686784267425537
    3. '<|end|>' → logprob: -2.3936784267425537
    4. '    
' → logprob: -3.3936784267425537
    5. 'graph' → logprob: -4.268678188323975
    6. ' graph' → logprob: -4.393678188323975
    7. '<|end|>' → logprob: -5.143678188323975
    8. '_graph' → logprob: -5.268678188323975
    9. ',' → logprob: -5.268678188323975
    10. '```' → logprob: -5.518678188323975

Token 27: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.20158164203166962
    2. ' deque' → logprob: -1.701581597328186
    3. ' Counter' → logprob: -9.326581954956055
    4. 'Counter' → logprob: -9.451581954956055
    5. 'Deque' → logprob: -14.576581954956055
    6. '```' → logprob: -16.076581954956055
    7. 'de' → logprob: -16.451581954956055
    8. ' ' → logprob: -16.701581954956055
    9. 'counter' → logprob: -18.076581954956055
    10. ' counter' → logprob: -18.201581954956055

Token 28: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38172581791877747
    2. '   ' → logprob: -1.506725788116455
    3. '    
' → logprob: -2.756725788116455
    4. ':' → logprob: -4.631725788116455
    5. '```' → logprob: -5.006725788116455
    6. 'n' → logprob: -5.631725788116455
    7. '  
' → logprob: -5.756725788116455
    8. '   
' → logprob: -7.006725788116455
    9. 'graph' → logprob: -7.131725788116455
    10. '<|end|>' → logprob: -7.256725788116455

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03036346100270748
    2. '
' → logprob: -4.0303635597229
    3. '    
' → logprob: -4.6553635597229
    4. 'graph' → logprob: -6.6553635597229
    5. '```' → logprob: -7.6553635597229
    6. 'edges' → logprob: -8.530363082885742
    7. ' graph' → logprob: -8.905363082885742
    8. 'word' → logprob: -9.280363082885742
    9. '  
' → logprob: -10.155363082885742
    10. 'words' → logprob: -10.280363082885742

Token 30: ' n' (ID: 297)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.058918725699186325
    2. ' graph' → logprob: -4.0589189529418945
    3. 'adj' → logprob: -4.3089189529418945
    4. '   ' → logprob: -4.4339189529418945
    5. 'in' → logprob: -4.6839189529418945
    6. 'ind' → logprob: -6.5589189529418945
    7. 'out' → logprob: -6.8089189529418945
    8. '#' → logprob: -7.5589189529418945
    9. 'word' → logprob: -7.9339189529418945
    10. 'first' → logprob: -7.9339189529418945

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003287751693278551
    2. '=' → logprob: -5.7532877922058105
    3. ' ' → logprob: -9.128287315368652
    4. '  ' → logprob: -14.378287315368652
    5. '=int' → logprob: -14.628287315368652
    6. '_words' → logprob: -15.253287315368652
    7. '   ' → logprob: -15.628287315368652
    8. '    ' → logprob: -17.00328826904297
    9. ' =
' → logprob: -17.12828826904297
    10. ' =)' → logprob: -17.87828826904297

Token 32: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0052360063418745995
    2. 'len' → logprob: -5.2552361488342285
    3. '=len' → logprob: -13.50523567199707
    4. '(len' → logprob: -14.25523567199707
    5. '[len' → logprob: -15.75523567199707
    6. '	len' → logprob: -16.38023567199707
    7. ' ' → logprob: -18.13023567199707
    8. ',len' → logprob: -18.50523567199707
    9. '<len' → logprob: -18.63023567199707
    10. ' int' → logprob: -19.75523567199707

Token 33: '(words' (ID: 80550)
  Prédit: '(words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(words' → logprob: -0.00029708960209973156
    2. '(' → logprob: -8.125297546386719
    3. 'words' → logprob: -15.375297546386719
    4. '(word' → logprob: -15.375297546386719
    5. ' (' → logprob: -16.00029754638672
    6. ' words' → logprob: -16.12529754638672
    7. '(weights' → logprob: -16.62529754638672
    8. '(points' → logprob: -17.00029754638672
    9. '(tokens' → logprob: -17.87529754638672
    10. '(numbers' → logprob: -18.00029754638672

Token 34: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005076381494291127
    2. ' )' → logprob: -7.625507831573486
    3. ')
' → logprob: -11.000507354736328
    4. '   ' → logprob: -13.250507354736328
    5. ' ' → logprob: -15.000507354736328
    6. '`)' → logprob: -15.750507354736328
    7. ')n' → logprob: -15.750507354736328
    8. '）' → logprob: -16.750507354736328
    9. ')return' → logprob: -16.875507354736328
    10. ')

' → logprob: -16.875507354736328

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.472400426864624
    2. '    
' → logprob: -1.972400426864624
    3. 'graph' → logprob: -1.972400426864624
    4. ' graph' → logprob: -3.097400426864624
    5. '
' → logprob: -3.722400426864624
    6. 'edges' → logprob: -4.847400665283203
    7. '   
' → logprob: -4.972400665283203
    8. '	graph' → logprob: -6.222400665283203
    9. '<|end|>' → logprob: -6.347400665283203
    10. '  
' → logprob: -6.597400665283203

Token 36: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.45529404282569885
    2. 'graph' (adapté à ' graph') → logprob: -1.3302940130233765
    3. '   ' → logprob: -2.705294132232666
    4. '    
' → logprob: -4.955294132232666
    5. ' edges' → logprob: -5.830294132232666
    6. ' first' → logprob: -5.830294132232666
    7. 'first' → logprob: -5.830294132232666
    8. ' adjacency' → logprob: -5.830294132232666
    9. ' adj' → logprob: -6.205294132232666
    10. ' start' → logprob: -6.330294132232666

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016058888286352158
    2. '=' → logprob: -4.141058921813965
    3. '[' → logprob: -10.891058921813965
    4. ')' → logprob: -13.141058921813965
    5. ' ' → logprob: -13.266058921813965
    6. 's' → logprob: -14.891058921813965
    7. ',' → logprob: -15.391058921813965
    8. ']' → logprob: -15.641058921813965
    9. '[]' → logprob: -15.641058921813965
    10. ' =[' → logprob: -15.766058921813965

Token 38: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.20142124593257904
    2. ' defaultdict' → logprob: -1.7014212608337402
    3. ' default' → logprob: -12.826420783996582
    4. '[' → logprob: -13.201420783996582
    5. '.default' → logprob: -14.076420783996582
    6. '(default' → logprob: -14.076420783996582
    7. '"default' → logprob: -14.076420783996582
    8. ' [' → logprob: -14.451420783996582
    9. ''default' → logprob: -15.826420783996582
    10. ' [[]' → logprob: -16.3264217376709

Token 39: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.039495132863521576
    2. '(lambda' → logprob: -3.2894952297210693
    3. '(' → logprob: -7.03949499130249
    4. '(dict' → logprob: -7.66449499130249
    5. '(set' → logprob: -9.664495468139648
    6. 'list' → logprob: -11.414495468139648
    7. '(<' → logprob: -11.539495468139648
    8. '(int' → logprob: -11.914495468139648
    9. '(
' → logprob: -12.414495468139648
    10. '```' → logprob: -12.539495468139648

Token 40: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.676981345459353e-06
    2. ')
' → logprob: -12.750005722045898
    3. '   ' → logprob: -13.875005722045898
    4. ' )' → logprob: -14.250005722045898
    5. '[' → logprob: -14.625005722045898
    6. ',' → logprob: -15.250005722045898
    7. ')

' → logprob: -15.750005722045898
    8. ' ' → logprob: -17.1250057220459
    9. '<|end|>' → logprob: -17.2500057220459
    10. '[])' → logprob: -17.7500057220459

Token 41: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' inde' (ID: 6741)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.477474182844162
    2. 'ind' → logprob: -1.1024742126464844
    3. ' in' → logprob: -3.3524742126464844
    4. 'for' → logprob: -5.352474212646484
    5. ' inde' → logprob: -5.727474212646484
    6. '   ' → logprob: -5.852474212646484
    7. ' for' → logprob: -6.852474212646484
    8. '```' → logprob: -7.977474212646484
    9. 'degree' → logprob: -9.602474212646484
    10. '    
' → logprob: -10.102474212646484

Token 43: 'gree' (ID: 44021)
  Prédit: 'gree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gree' → logprob: -0.031697697937488556
    2. 'grees' → logprob: -3.7816977500915527
    3. 'g' → logprob: -4.781697750091553
    4. 'egree' → logprob: -11.656697273254395
    5. 'gress' → logprob: -12.031697273254395
    6. '[' → logprob: -12.656697273254395
    7. 'gs' → logprob: -13.156697273254395
    8. '```' → logprob: -13.281697273254395
    9. 'G' → logprob: -13.531697273254395
    10. '   ' → logprob: -13.656697273254395

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17983804643154144
    2. '=' → logprob: -1.8048380613327026
    3. 's' → logprob: -10.054838180541992
    4. '[' → logprob: -10.179838180541992
    5. ',' → logprob: -12.929838180541992
    6. ')' → logprob: -13.179838180541992
    7. ' ' → logprob: -13.554838180541992
    8. '```' → logprob: -13.679838180541992
    9. '[:]' → logprob: -13.929838180541992
    10. '＝' → logprob: -14.054838180541992

Token 45: ' [' (ID: 723)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.04031689092516899
    2. '[' → logprob: -3.2903168201446533
    3. ' defaultdict' → logprob: -6.915317058563232
    4. ' [' → logprob: -7.040317058563232
    5. '{' → logprob: -7.915317058563232
    6. '.default' → logprob: -11.290316581726074
    7. '{}' → logprob: -12.040316581726074
    8. '(default' → logprob: -12.165316581726074
    9. ' default' → logprob: -12.415316581726074
    10. '"default' → logprob: -12.540316581726074

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -19.750017166137695
    4. ')' → logprob: -20.000017166137695
    5. '[' → logprob: -20.125017166137695
    6. ']' → logprob: -20.125017166137695
    7. '   ' → logprob: -20.375017166137695
    8. '۰' → logprob: -20.500017166137695
    9. 'False' → logprob: -20.750017166137695
    10. ',' → logprob: -21.250017166137695

Token 47: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01782328076660633
    2. ']*' → logprob: -4.267823219299316
    3. ' for' → logprob: -6.142823219299316
    4. 'for' → logprob: -6.642823219299316
    5. ']*(' → logprob: -8.892823219299316
    6. ' ]' → logprob: -9.892823219299316
    7. ')' → logprob: -11.767823219299316
    8. ',' → logprob: -13.392823219299316
    9. 'n' → logprob: -13.642823219299316
    10. '	for' → logprob: -14.392823219299316

Token 48: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.0019299437990412116
    2. '52' → logprob: -7.001929759979248
    3. '(' → logprob: -7.501929759979248
    4. 'n' → logprob: -8.501930236816406
    5. '260' → logprob: -9.626930236816406
    6. '(n' → logprob: -9.751930236816406
    7. '676' → logprob: -9.751930236816406
    8. '100' → logprob: -10.376930236816406
    9. '200' → logprob: -11.126930236816406
    10. '256' → logprob: -11.376930236816406

Token 49: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42977815866470337
    2. 'out' → logprob: -1.3047780990600586
    3. ' out' → logprob: -2.9297780990600586
    4. '<|end|>' → logprob: -3.9297780990600586
    5. '    
' → logprob: -6.054778099060059
    6. ',' → logprob: -7.429778099060059
    7. '```' → logprob: -7.429778099060059
    8. '  ' → logprob: -8.429778099060059
    9. ' and' → logprob: -8.679778099060059
    10. '    ' → logprob: -8.679778099060059

Token 51: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' (adapté à ' out') → logprob: -0.023265164345502853
    2. ' out' → logprob: -3.7732651233673096
    3. '   ' → logprob: -11.77326488494873
    4. '```' → logprob: -11.89826488494873
    5. '	out' → logprob: -13.14826488494873
    6. 'outfile' → logprob: -14.52326488494873
    7. 'outi' → logprob: -14.89826488494873
    8. 'graph' → logprob: -15.27326488494873
    9. ' for' → logprob: -15.27326488494873
    10. '_out' → logprob: -15.27326488494873

Token 52: 'degree' (ID: 98659)
  Prédit: 'degree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degree' → logprob: -2.1008713702030946e-06
    2. '_degree' → logprob: -13.500001907348633
    3. 'egree' → logprob: -14.875001907348633
    4. ' degree' → logprob: -16.000001907348633
    5. 'deg' → logprob: -16.250001907348633
    6. '-degree' → logprob: -16.875001907348633
    7. 'degrees' → logprob: -17.000001907348633
    8. '=' → logprob: -17.750001907348633
    9. ' =' → logprob: -18.000001907348633
    10. '```' → logprob: -18.000001907348633

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47413304448127747
    2. '=' → logprob: -0.9741330146789551
    3. '[' → logprob: -9.974133491516113
    4. '=[' → logprob: -12.724133491516113
    5. ' =[' → logprob: -12.849133491516113
    6. ' ' → logprob: -13.724133491516113
    7. '＝' → logprob: -14.224133491516113
    8. '<|end|>' → logprob: -14.474133491516113
    9. '<|end|>' → logprob: -14.724133491516113
    10. '=[]' → logprob: -15.099133491516113

Token 54: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.054884202778339386
    2. ' [' → logprob: -2.929884195327759
    3. ' ' → logprob: -13.92988395690918
    4. '0' → logprob: -14.67988395690918
    5. '=[' → logprob: -15.92988395690918
    6. ' =' → logprob: -16.17988395690918
    7. '([' → logprob: -16.80488395690918
    8. '   ' → logprob: -16.80488395690918
    9. 'out' → logprob: -17.17988395690918
    10. '=' → logprob: -17.17988395690918

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.657694418914616e-05
    2. '26' → logprob: -9.875056266784668
    3. ' ' → logprob: -12.250056266784668
    4. '[' → logprob: -15.375056266784668
    5. '026' → logprob: -17.125057220458984
    6. '(' → logprob: -17.375057220458984
    7. ']' → logprob: -18.500057220458984
    8. '   ' → logprob: -18.500057220458984
    9. ' [' → logprob: -18.562557220458984
    10. '```' → logprob: -19.062557220458984

Token 56: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.06445872038602829
    2. ']' → logprob: -2.8144586086273193
    3. '*' → logprob: -6.189458847045898
    4. '26' → logprob: -8.064458847045898
    5. ' ]' → logprob: -9.564458847045898
    6. '[' → logprob: -10.814458847045898
    7. ')*' → logprob: -11.439458847045898
    8. ']int' → logprob: -12.314458847045898
    9. '```' → logprob: -12.439458847045898
    10. ']*)' → logprob: -13.064458847045898

Token 57: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '2' → logprob: -17.25
    4. '```' → logprob: -18.5625
    5. '1' → logprob: -19.1875
    6. '   ' → logprob: -19.1875
    7. '27' → logprob: -19.375
    8. 'abcdefghijklmnopqrstuvwxyz' → logprob: -19.625
    9. '6' → logprob: -20.0625
    10. '36' → logprob: -20.125

Token 58: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10702096670866013
    2. '   ' → logprob: -2.857020854949951
    3. '<|end|>' → logprob: -3.857020854949951
    4. '    
' → logprob: -4.857020854949951
    5. 'for' → logprob: -5.357020854949951
    6. ' for' → logprob: -5.732020854949951
    7. '  
' → logprob: -6.107020854949951
    8. '```' → logprob: -6.982020854949951
    9. 'def' → logprob: -7.232020854949951
    10. '<|end|>' → logprob: -7.607020854949951

Token 59: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09025506675243378
    2. '<|end|>' → logprob: -2.96525502204895
    3. '   ' → logprob: -4.090255260467529
    4. '    
' → logprob: -4.715255260467529
    5. 'for' → logprob: -5.840255260467529
    6. ' for' → logprob: -5.840255260467529
    7. '  
' → logprob: -6.840255260467529
    8. '```' → logprob: -7.090255260467529
    9. ' 
' → logprob: -7.715255260467529
    10. '<|end|>' → logprob: -8.340254783630371

Token 60: ' used' (ID: 2061)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7149077653884888
    2. 'for' → logprob: -0.7149077653884888
    3. '<|end|>' → logprob: -4.964907646179199
    4. '   ' → logprob: -5.214907646179199
    5. '    
' → logprob: -6.089907646179199
    6. '
' → logprob: -6.589907646179199
    7. ' 
' → logprob: -6.839907646179199
    8. 'words' → logprob: -7.839907646179199
    9. 'indices' → logprob: -7.839907646179199
    10. 'visited' → logprob: -7.964907646179199

Token 61: '_vertices' (ID: 96842)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.035549797117710114
    2. '=' → logprob: -3.4105498790740967
    3. '_chars' → logprob: -7.160549640655518
    4. '_letters' → logprob: -7.785549640655518
    5. '[' → logprob: -8.660550117492676
    6. '<|end|>' → logprob: -8.785550117492676
    7. '_tokens' → logprob: -9.285550117492676
    8. 'letters' → logprob: -9.785550117492676
    9. '=set' → logprob: -10.160550117492676
    10. '=[' → logprob: -10.160550117492676

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0889458954334259
    2. '=' → logprob: -2.4639458656311035
    3. ' ' → logprob: -12.588946342468262
    4. '=set' → logprob: -13.213946342468262
    5. '[' → logprob: -15.088946342468262
    6. '=[]' → logprob: -15.213946342468262
    7. ' =[' → logprob: -15.838946342468262
    8. '```' → logprob: -16.088945388793945
    9. '=[' → logprob: -16.963945388793945
    10. '<|end|>' → logprob: -17.213945388793945

Token 63: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.4308907985687256
    2. ' set' → logprob: -1.1808907985687256
    3. '[' → logprob: -3.3058907985687256
    4. ' [' → logprob: -5.055891036987305
    5. '	set' → logprob: -11.555891036987305
    6. '{' → logprob: -11.805891036987305
    7. '=set' → logprob: -12.555891036987305
    8. '(set' → logprob: -12.680891036987305
    9. ' ' → logprob: -13.430891036987305
    10. ')set' → logprob: -15.055891036987305

Token 64: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009812284260988235
    2. '(' → logprob: -4.634812355041504
    3. ' ()' → logprob: -11.634812355041504
    4. '();' → logprob: -12.009812355041504
    5. '()>' → logprob: -12.134812355041504
    6. '(),' → logprob: -12.384812355041504
    7. '()]' → logprob: -12.384812355041504
    8. '([' → logprob: -12.634812355041504
    9. '()

' → logprob: -12.759812355041504
    10. '()
' → logprob: -12.884812355041504

Token 65: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21082119643688202
    2. '   ' → logprob: -2.5858211517333984
    3. 'for' → logprob: -3.3358211517333984
    4. '<|end|>' → logprob: -3.4608211517333984
    5. '    
' → logprob: -3.5858211517333984
    6. '  
' → logprob: -4.835821151733398
    7. ' for' → logprob: -4.960821151733398
    8. ' 
' → logprob: -6.835821151733398
    9. ')' → logprob: -7.085821151733398
    10. '<|end|>' → logprob: -7.210821151733398

Token 66: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.47783878445625305
    2. ' for' → logprob: -0.9778387546539307
    3. '   ' → logprob: -5.60283899307251
    4. '```' → logprob: -10.227838516235352
    5. '
' → logprob: -11.227838516235352
    6. '    
' → logprob: -11.602838516235352
    7. ' ' → logprob: -13.102838516235352
    8. '	for' → logprob: -13.477838516235352
    9. '``' → logprob: -13.852838516235352
    10. '#' → logprob: -13.977838516235352

Token 67: ' w' (ID: 286)
  Prédit: ' word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.10047558695077896
    2. 'word' → logprob: -2.850475549697876
    3. ' i' → logprob: -3.600475549697876
    4. 'i' → logprob: -4.975475788116455
    5. ' w' → logprob: -6.350475788116455
    6. 'w' → logprob: -6.350475788116455
    7. ' ' → logprob: -11.100475311279297
    8. '	word' → logprob: -11.350475311279297
    9. ' idx' → logprob: -11.600475311279297
    10. ' index' → logprob: -12.225475311279297

Token 68: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026363471522927284
    2. 'in' → logprob: -3.6513633728027344
    3. 'i' → logprob: -10.276363372802734
    4. ' ' → logprob: -11.776363372802734
    5. '   ' → logprob: -12.151363372802734
    6. 'ord' → logprob: -12.526363372802734
    7. 'ords' → logprob: -13.026363372802734
    8. 's' → logprob: -13.526363372802734
    9. '_in' → logprob: -14.026363372802734
    10. 'd' → logprob: -14.151363372802734

Token 69: ' words' (ID: 6391)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.03442136570811272
    2. ' words' → logprob: -3.409421443939209
    3. 'ords' → logprob: -7.284421443939209
    4. '(words' → logprob: -9.53442096710205
    5. 'ord' → logprob: -12.28442096710205
    6. '.words' → logprob: -12.65942096710205
    7. 'w' → logprob: -12.78442096710205
    8. '   ' → logprob: -12.90942096710205
    9. ' ' → logprob: -13.65942096710205
    10. 'range' → logprob: -13.90942096710205

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0027566144708544016
    2. ':
' → logprob: -6.502756595611572
    3. '):' → logprob: -6.752756595611572
    4. ' :' → logprob: -9.75275707244873
    5. '):
' → logprob: -11.00275707244873
    6. ']:' → logprob: -12.50275707244873
    7. ',' → logprob: -12.87775707244873
    8. ':
' → logprob: -14.50275707244873
    9. ' :
' → logprob: -14.62775707244873
    10. ':**' → logprob: -14.62775707244873

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018361931666731834
    2. '    ' → logprob: -4.768362045288086
    3. ',' → logprob: -5.893362045288086
    4. ' ' → logprob: -6.893362045288086
    5. '    
' → logprob: -7.143362045288086
    6. ' 
' → logprob: -7.143362045288086
    7. '   ' → logprob: -7.268362045288086
    8. ' s' → logprob: -7.393362045288086
    9. '        
' → logprob: -7.518362045288086
    10. '     
' → logprob: -7.893362045288086

Token 72: ' f' (ID: 285)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -1.032278060913086
    2. ' f' → logprob: -1.157278060913086
    3. ' start' → logprob: -1.782278060913086
    4. 'f' (adapté à ' f') → logprob: -3.032278060913086
    5. 'u' → logprob: -3.157278060913086
    6. 'start' → logprob: -3.407278060913086
    7. ' s' → logprob: -3.782278060913086
    8. 's' → logprob: -5.157278060913086
    9. 'a' → logprob: -5.907278060913086
    10. '       ' → logprob: -6.032278060913086

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05568574368953705
    2. 'irst' → logprob: -3.3056857585906982
    3. '=' → logprob: -4.305685520172119
    4. '_idx' → logprob: -6.805685520172119
    5. '_char' → logprob: -7.055685520172119
    6. 'ir' → logprob: -7.055685520172119
    7. 'i' → logprob: -8.180685997009277
    8. '```' → logprob: -8.680685997009277
    9. '   ' → logprob: -8.805685997009277
    10. 'rom' → logprob: -8.805685997009277

Token 74: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.3868846297264099
    2. ' ord' → logprob: -1.1368846893310547
    3. '(ord' → logprob: -11.261884689331055
    4. 'ords' → logprob: -15.261884689331055
    5. 'w' → logprob: -15.386884689331055
    6. ' w' → logprob: -15.761884689331055
    7. ' ' → logprob: -16.511884689331055
    8. ' ' → logprob: -17.261884689331055
    9. '   ' → logprob: -18.886884689331055
    10. '_ord' → logprob: -19.511884689331055

Token 75: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -1.0445127372804563e-05
    2. '(' → logprob: -11.75001049041748
    3. 'w' → logprob: -13.62501049041748
    4. ' (' → logprob: -13.75001049041748
    5. '[w' → logprob: -16.875009536743164
    6. '(f' → logprob: -17.000009536743164
    7. '((' → logprob: -17.625009536743164
    8. '('' → logprob: -17.625009536743164
    9. ' w' → logprob: -17.750009536743164
    10. '(s' → logprob: -17.750009536743164

Token 76: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -14.375000953674316
    3. 'irst' → logprob: -15.250000953674316
    4. '[-' → logprob: -16.875001907348633
    5. ''[' → logprob: -16.875001907348633
    6. ' [' → logprob: -17.000001907348633
    7. '['' → logprob: -17.000001907348633
    8. ')' → logprob: -17.125001907348633
    9. ''s' → logprob: -17.250001907348633
    10. '```' → logprob: -17.375001907348633

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.123899558791891e-05
    2. ' ' → logprob: -9.62507152557373
    3. '[' → logprob: -12.37507152557373
    4. '-' → logprob: -14.62507152557373
    5. 'i' → logprob: -16.750070571899414
    6. '```' → logprob: -16.750070571899414
    7. '０' → logprob: -17.250070571899414
    8. ']' → logprob: -17.250070571899414
    9. ''s' → logprob: -17.437570571899414
    10. 's' → logprob: -17.812570571899414

Token 78: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00940753985196352
    2. '])-' → logprob: -5.5094075202941895
    3. ' ])' → logprob: -6.1344075202941895
    4. '.lower' → logprob: -6.1344075202941895
    5. ''])' → logprob: -8.259407997131348
    6. 'lower' → logprob: -8.509407997131348
    7. '[' → logprob: -9.009407997131348
    8. '   ' → logprob: -9.634407997131348
    9. ']' → logprob: -9.759407997131348
    10. ')' → logprob: -9.759407997131348

Token 79: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05334744229912758
    2. '-' → logprob: -3.55334734916687
    3. ' -' → logprob: -3.92834734916687
    4. ')-' → logprob: -6.053347587585449
    5. '-)' → logprob: -7.428347587585449
    6. '')' → logprob: -8.17834758758545
    7. ' )' → logprob: -8.55334758758545
    8. ''-' → logprob: -9.17834758758545
    9. ' ' → logprob: -10.55334758758545
    10. ''' → logprob: -11.17834758758545

Token 80: ' ord' (ID: 6608)
  Prédit: '97'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '97' → logprob: -0.02874896302819252
    2. ' ord' → logprob: -4.403748989105225
    3. 'a' → logprob: -4.778748989105225
    4. 'ord' → logprob: -5.403748989105225
    5. ' ' → logprob: -6.028748989105225
    6. '96' → logprob: -7.653748989105225
    7. ''a' → logprob: -8.778748512268066
    8. ' a' → logprob: -9.278748512268066
    9. '(ord' → logprob: -10.903748512268066
    10. '```' → logprob: -11.028748512268066

Token 81: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.001953018014319241
    2. '(' → logprob: -6.251953125
    3. 'a' → logprob: -11.251953125
    4. '("' → logprob: -12.501953125
    5. ' ('' → logprob: -13.001953125
    6. ''' → logprob: -13.126953125
    7. ''s' → logprob: -13.876953125
    8. ''a' → logprob: -14.376953125
    9. '("("' → logprob: -14.501953125
    10. '('_' → logprob: -14.751953125

Token 82: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.896309739408025e-07
    2. ''a' → logprob: -14.125000953674316
    3. 'а' → logprob: -17.125
    4. ' a' → logprob: -19.625
    5. ''' → logprob: -20.0
    6. '	a' → logprob: -22.625
    7. 'あ' → logprob: -23.375
    8. '`' → logprob: -24.125
    9. '```' → logprob: -24.125
    10. '’a' → logprob: -24.625

Token 83: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.20196248590946198
    2. ')' → logprob: -1.7019624710083008
    3. '')
' → logprob: -7.576962471008301
    4. '")' → logprob: -11.8269624710083
    5. ')
' → logprob: -11.9519624710083
    6. ''' → logprob: -11.9519624710083
    7. ']' → logprob: -12.3269624710083
    8. 'a' → logprob: -13.5769624710083
    9. '`)' → logprob: -13.7019624710083
    10. '<|end|>' → logprob: -13.7019624710083

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26620200276374817
    2. '<|end|>' → logprob: -2.141201972961426
    3. '        ' → logprob: -2.766201972961426
    4. ' ' → logprob: -4.016201972961426
    5. '        
' → logprob: -4.766201972961426
    6. 't' → logprob: -4.891201972961426
    7. 'e' → logprob: -5.891201972961426
    8. ' s' → logprob: -5.891201972961426
    9. '<|end|>' → logprob: -6.516201972961426
    10. ' 
' → logprob: -6.891201972961426

Token 85: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.22509980201721191
    2. ' l' → logprob: -1.725099802017212
    3. 't' → logprob: -3.975099802017212
    4. ' t' → logprob: -5.475099563598633
    5. '	l' → logprob: -8.100099563598633
    6. 's' → logprob: -9.475099563598633
    7. 'e' → logprob: -10.350099563598633
    8. ' s' → logprob: -11.475099563598633
    9. '   ' → logprob: -12.725099563598633
    10. '           ' → logprob: -12.850099563598633

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759548544883728
    2. '=' → logprob: -0.8259548544883728
    3. '   ' → logprob: -11.57595443725586
    4. 'ast' → logprob: -13.32595443725586
    5. ' ' → logprob: -13.82595443725586
    6. 'a' → logprob: -13.82595443725586
    7. '       ' → logprob: -14.95095443725586
    8. 'w' → logprob: -15.07595443725586
    9. 'f' → logprob: -15.32595443725586
    10. '           ' → logprob: -15.57595443725586

Token 87: ' ord' (ID: 6608)
  Prédit: ' ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ord' → logprob: -0.062038373202085495
    2. 'ord' → logprob: -2.8120384216308594
    3. '(ord' → logprob: -9.56203842163086
    4. ' ' → logprob: -15.68703842163086
    5. '   ' → logprob: -17.06203842163086
    6. '_ord' → logprob: -17.43703842163086
    7. 'ords' → logprob: -17.93703842163086
    8. ' ' → logprob: -18.68703842163086
    9. 's' → logprob: -18.81203842163086
    10. ' ordinal' → logprob: -18.81203842163086

Token 88: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -2.641841820150148e-05
    2. '(' → logprob: -10.62502670288086
    3. ' (' → logprob: -13.87502670288086
    4. '(word' → logprob: -14.37502670288086
    5. 'w' → logprob: -15.12502670288086
    6. '(s' → logprob: -15.87502670288086
    7. '(l' → logprob: -16.00002670288086
    8. '(words' → logprob: -17.75002670288086
    9. '((' → logprob: -18.62502670288086
    10. 's' → logprob: -19.00002670288086

Token 89: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -9.372294698550832e-06
    2. '[len' → logprob: -11.875009536743164
    3. '[' → logprob: -13.375009536743164
    4. ')' → logprob: -14.250009536743164
    5. '-' → logprob: -16.000009536743164
    6. '1' → logprob: -17.375009536743164
    7. ' [-' → logprob: -17.750009536743164
    8. 'w' → logprob: -18.375009536743164
    9. '[w' → logprob: -18.500009536743164
    10. '][-' → logprob: -18.500009536743164

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00874493271112442
    2. 'a' → logprob: -4.758744716644287
    3. ' ' → logprob: -9.508745193481445
    4. ']' → logprob: -11.008745193481445
    5. ''a' → logprob: -11.633745193481445
    6. 'i' → logprob: -12.133745193481445
    7. '])' → logprob: -12.508745193481445
    8. ''' → logprob: -12.633745193481445
    9. '  ' → logprob: -13.008745193481445
    10. ')' → logprob: -13.008745193481445

Token 91: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.4335740804672241
    2. ')' → logprob: -1.6835740804672241
    3. '')' → logprob: -2.5585741996765137
    4. 'a' → logprob: -3.1835741996765137
    5. ']' → logprob: -3.6835741996765137
    6. ''])' → logprob: -4.183574199676514
    7. ''a' → logprob: -5.933574199676514
    8. '']' → logprob: -6.808574199676514
    9. '('' → logprob: -7.433574199676514
    10. ')]' → logprob: -7.808574199676514

Token 92: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3228672742843628
    2. '-' → logprob: -1.3228672742843628
    3. ')' → logprob: -4.697867393493652
    4. ' ' → logprob: -8.447867393493652
    5. '   ' → logprob: -10.322867393493652
    6. 'w' → logprob: -10.697867393493652
    7. '[' → logprob: -10.822867393493652
    8. '        ' → logprob: -11.197867393493652
    9. '       ' → logprob: -11.322867393493652
    10. 's' → logprob: -11.322867393493652

Token 93: ' ord' (ID: 6608)
  Prédit: ' ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ord' → logprob: -0.017941663041710854
    2. 'ord' → logprob: -4.142941474914551
    3. '(ord' → logprob: -6.267941474914551
    4. ''' → logprob: -12.39294147491455
    5. ' ' → logprob: -13.01794147491455
    6. '('' → logprob: -14.14294147491455
    7. ' '' → logprob: -14.26794147491455
    8. 'a' → logprob: -14.51794147491455
    9. '_ord' → logprob: -15.39294147491455
    10. ''s' → logprob: -15.64294147491455

Token 94: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.2471589798224159e-05
    2. '(' → logprob: -12.125012397766113
    3. 'a' → logprob: -12.500012397766113
    4. ''a' → logprob: -12.875012397766113
    5. ''s' → logprob: -16.00001335144043
    6. ')' → logprob: -16.00001335144043
    7. '("' → logprob: -16.37501335144043
    8. '(a' → logprob: -16.87501335144043
    9. 'b' → logprob: -17.00001335144043
    10. ' ('' → logprob: -17.12501335144043

Token 95: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00026217024424113333
    2. ''a' → logprob: -8.250262260437012
    3. 'z' → logprob: -14.875262260437012
    4. ''' → logprob: -15.875262260437012
    5. ''z' → logprob: -16.000261306762695
    6. '97' → logprob: -16.125261306762695
    7. 'x' → logprob: -16.875261306762695
    8. '```' → logprob: -17.125261306762695
    9. '')' → logprob: -18.125261306762695
    10. 'а' → logprob: -18.750261306762695

Token 96: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.16066794097423553
    2. ')' → logprob: -1.910667896270752
    3. '')
' → logprob: -7.785667896270752
    4. ''' → logprob: -11.16066837310791
    5. ')
' → logprob: -12.41066837310791
    6. ']' → logprob: -13.16066837310791
    7. '")' → logprob: -13.78566837310791
    8. '')

' → logprob: -13.78566837310791
    9. '       ' → logprob: -14.03566837310791
    10. ' ')' → logprob: -14.03566837310791

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02053278498351574
    2. '
' → logprob: -5.020532608032227
    3. '   ' → logprob: -5.270532608032227
    4. '<|end|>' → logprob: -5.395532608032227
    5. '        
' → logprob: -6.145532608032227
    6. '    
' → logprob: -7.770532608032227
    7. '	graph' → logprob: -7.770532608032227
    8. 'graph' → logprob: -8.270532608032227
    9. ' graph' → logprob: -8.895532608032227
    10. '  
' → logprob: -9.145532608032227

Token 98: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.59813392162323
    2. ' graph' → logprob: -1.09813392162323
    3. '       ' → logprob: -2.4731340408325195
    4. ' out' → logprob: -4.2231340408325195
    5. '	graph' → logprob: -4.5981340408325195
    6. 'out' → logprob: -5.2231340408325195
    7. '   ' → logprob: -6.8481340408325195
    8. '<|end|>' → logprob: -8.09813404083252
    9. ' ' → logprob: -8.47313404083252
    10. '        ' → logprob: -9.22313404083252

Token 99: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -1.1160349458805285e-05
    2. '[' → logprob: -11.875011444091797
    3. '[l' → logprob: -12.750011444091797
    4. '[w' → logprob: -14.375011444091797
    5. 'f' → logprob: -14.750011444091797
    6. '```' → logprob: -16.000011444091797
    7. ' [' → logprob: -17.375011444091797
    8. '\[' → logprob: -18.000011444091797
    9. ')[' → logprob: -18.625011444091797
    10. '[u' → logprob: -18.750011444091797

Token 100: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0004848922253586352
    2. ').' → logprob: -8.250484466552734
    3. ']' → logprob: -9.375484466552734
    4. '.append' → logprob: -9.500484466552734
    5. '[' → logprob: -10.250484466552734
    6. ' ].' → logprob: -11.375484466552734
    7. '][' → logprob: -11.750484466552734
    8. '[f' → logprob: -12.625484466552734
    9. ')].' → logprob: -13.125484466552734
    10. '.' → logprob: -13.875484466552734

Token 101: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.512236498361744e-07
    2. '.append' → logprob: -14.750000953674316
    3. ' append' → logprob: -16.0
    4. '_append' → logprob: -18.125
    5. 'appen' → logprob: -18.75
    6. 'push' → logprob: -19.25
    7. '	append' → logprob: -19.375
    8. 'Append' → logprob: -20.125
    9. 'app' → logprob: -20.25
    10. 'add' → logprob: -21.25

Token 102: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -9.186122770188376e-05
    2. 'l' → logprob: -9.375091552734375
    3. '(' → logprob: -12.000091552734375
    4. '((' → logprob: -14.500091552734375
    5. ' (' → logprob: -14.875091552734375
    6. '(
' → logprob: -17.125091552734375
    7. '	l' → logprob: -18.125091552734375
    8. '[l' → logprob: -19.500091552734375
    9. '(w' → logprob: -19.750091552734375
    10. ' l' → logprob: -19.875091552734375

Token 103: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4021237802808173e-05
    2. ')
' → logprob: -12.000014305114746
    3. ' )' → logprob: -12.000014305114746
    4. '       ' → logprob: -13.875014305114746
    5. '   ' → logprob: -14.625014305114746
    6. '<|end|>' → logprob: -17.12501335144043
    7. '),' → logprob: -17.37501335144043
    8. '`)' → logprob: -17.37501335144043
    9. ' ' → logprob: -17.62501335144043
    10. '))' → logprob: -17.75001335144043

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01326975878328085
    2. ' out' → logprob: -4.888269901275635
    3. 'out' → logprob: -5.638269901275635
    4. '   ' → logprob: -6.513269901275635
    5. '
' → logprob: -8.388269424438477
    6. '        
' → logprob: -8.638269424438477
    7. ' ' → logprob: -9.888269424438477
    8. '	out' → logprob: -9.888269424438477
    9. '```' → logprob: -10.263269424438477
    10. '    
' → logprob: -11.388269424438477

Token 105: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' (adapté à ' out') → logprob: -0.01607402227818966
    2. ' out' → logprob: -4.141074180603027
    3. '       ' → logprob: -10.516074180603027
    4. '   ' → logprob: -12.016074180603027
    5. '```' → logprob: -12.766074180603027
    6. '	out' → logprob: -13.016074180603027
    7. '
' → logprob: -14.766074180603027
    8. ' ' → logprob: -15.141074180603027
    9. '_out' → logprob: -15.516074180603027
    10. 'ind' → logprob: -16.14107322692871

Token 106: 'degree' (ID: 98659)
  Prédit: 'degree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degree' → logprob: -4.320199877838604e-07
    2. 'egree' → logprob: -16.125
    3. '```' → logprob: -16.5
    4. '[' → logprob: -17.25
    5. '_degree' → logprob: -17.375
    6. '-degree' → logprob: -17.375
    7. ' degree' → logprob: -17.625
    8. '度' → logprob: -17.875
    9. 'degrees' → logprob: -18.125
    10. 'deg' → logprob: -19.125

Token 107: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.500001907348633
    3. 'f' → logprob: -15.500001907348633
    4. ' [' → logprob: -17.625001907348633
    5. '```' → logprob: -18.500001907348633
    6. '[
' → logprob: -19.750001907348633
    7. ' f' → logprob: -20.000001907348633
    8. '[F' → logprob: -20.250001907348633
    9. '\[' → logprob: -20.750001907348633
    10. '[u' → logprob: -21.250001907348633

Token 108: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1290372908115387
    2. ']+=' → logprob: -2.254037380218506
    3. ')' → logprob: -4.879037380218506
    4. '[' → logprob: -5.504037380218506
    5. '+=' → logprob: -5.629037380218506
    6. ' +=' → logprob: -8.129036903381348
    7. ' ]' → logprob: -8.379036903381348
    8. ')]' → logprob: -9.129036903381348
    9. ']+' → logprob: -9.879036903381348
    10. '[f' → logprob: -10.754036903381348

Token 109: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00576014956459403
    2. ' +=' → logprob: -5.255760192871094
    3. '+' → logprob: -7.880760192871094
    4. ']+=' → logprob: -8.880760192871094
    5. '[' → logprob: -12.630760192871094
    6. '=' → logprob: -13.380760192871094
    7. '```' → logprob: -13.505760192871094
    8. '++' → logprob: -14.255760192871094
    9. '+='' → logprob: -14.255760192871094
    10. '<|end|>' → logprob: -14.380760192871094

Token 110: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '１' → logprob: -20.375036239624023
    4. '```' → logprob: -20.625036239624023
    5. '   ' → logprob: -20.750036239624023
    6. '<|end|>' → logprob: -21.500036239624023
    7. '۱' → logprob: -22.625036239624023
    8. ' ' → logprob: -22.750036239624023
    9. '  ' → logprob: -22.750036239624023
    10. '0' → logprob: -23.375036239624023

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '１' → logprob: -20.750001907348633
    4. '```' → logprob: -20.875001907348633
    5. '   ' → logprob: -21.250001907348633
    6. '۱' → logprob: -22.125001907348633
    7. '<|end|>' → logprob: -22.625001907348633
    8. 'len' → logprob: -22.937501907348633
    9. '
' → logprob: -23.062501907348633
    10. '  ' → logprob: -23.250001907348633

Token 112: '
' (ID: 198)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.5320019125938416
    2. '       ' → logprob: -0.9070019125938416
    3. '   ' → logprob: -5.282001972198486
    4. ' inde' → logprob: -6.282001972198486
    5. ' in' → logprob: -7.032001972198486
    6. '
' → logprob: -8.407001495361328
    7. 'in' → logprob: -8.657001495361328
    8. '[ind' → logprob: -8.657001495361328
    9. '        
' → logprob: -9.407001495361328
    10. 'indent' → logprob: -9.532001495361328

Token 113: '       ' (ID: 309)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.2653854489326477
    2. '       ' → logprob: -1.515385389328003
    3. ' inde' → logprob: -4.640385627746582
    4. '   ' → logprob: -5.890385627746582
    5. ' in' → logprob: -7.765385627746582
    6. '
' → logprob: -9.140385627746582
    7. '[ind' → logprob: -9.265385627746582
    8. ' ind' → logprob: -9.640385627746582
    9. 'indt' → logprob: -9.765385627746582
    10. ' ' → logprob: -10.265385627746582

Token 114: ' inde' (ID: 6741)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.00038336371653713286
    2. ' inde' → logprob: -7.875383377075195
    3. 'inde' (adapté à ' inde') → logprob: -13.125383377075195
    4. '   ' → logprob: -14.375383377075195
    5. '```' → logprob: -15.500383377075195
    6. ' ' → logprob: -15.875383377075195
    7. '[ind' → logprob: -16.125383377075195
    8. '1' → logprob: -17.125383377075195
    9. '(ind' → logprob: -17.375383377075195
    10. 'indt' → logprob: -17.750383377075195

Token 115: 'gree' (ID: 44021)
  Prédit: 'gree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gree' → logprob: -0.0019245869480073452
    2. 'egree' → logprob: -6.626924514770508
    3. 'degree' → logprob: -7.751924514770508
    4. 'g' → logprob: -8.751924514770508
    5. 'grees' → logprob: -12.126924514770508
    6. 'ree' → logprob: -13.376924514770508
    7. 'green' → logprob: -14.376924514770508
    8. 'gre' → logprob: -14.626924514770508
    9. '   ' → logprob: -14.876924514770508
    10. 'gr' → logprob: -15.001924514770508

Token 116: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -1.4498052223643754e-05
    2. '[' → logprob: -11.375014305114746
    3. '[f' → logprob: -13.500014305114746
    4. 'l' → logprob: -14.250014305114746
    5. '```' → logprob: -14.625014305114746
    6. '	l' → logprob: -15.625014305114746
    7. ' [' → logprob: -16.125015258789062
    8. '[
' → logprob: -16.375015258789062
    9. '[s' → logprob: -17.500015258789062
    10. '[a' → logprob: -17.625015258789062

Token 117: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3482828736305237
    2. ']+=' → logprob: -1.973282814025879
    3. ' +=' → logprob: -2.223282814025879
    4. ')' → logprob: -3.598282814025879
    5. ']' → logprob: -4.098282814025879
    6. '+' → logprob: -6.473282814025879
    7. '<|end|>' → logprob: -6.848282814025879
    8. '<|end|>' → logprob: -9.598282814025879
    9. ' ]' → logprob: -10.473282814025879
    10. '[' → logprob: -10.723282814025879

Token 118: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.027609802782535553
    2. ' +=' → logprob: -3.6526098251342773
    3. '+' → logprob: -6.777609825134277
    4. ']+=' → logprob: -8.777609825134277
    5. '<|end|>' → logprob: -11.902609825134277
    6. '```' → logprob: -12.902609825134277
    7. '+='' → logprob: -13.027609825134277
    8. '++' → logprob: -13.277609825134277
    9. '+="' → logprob: -14.777609825134277
    10. ')' → logprob: -14.902609825134277

Token 119: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004620241466909647
    2. ' ' → logprob: -5.37962007522583
    3. '   ' → logprob: -17.254619598388672
    4. '```' → logprob: -18.754619598388672
    5. ' ' → logprob: -19.504619598388672
    6. '１' → logprob: -19.629619598388672
    7. '  ' → logprob: -19.879619598388672
    8. ')' → logprob: -20.879619598388672
    9. '0' → logprob: -21.254619598388672
    10. '       ' → logprob: -21.254619598388672

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '   ' → logprob: -19.000123977661133
    4. '```' → logprob: -19.500123977661133
    5. '１' → logprob: -19.875123977661133
    6. '  ' → logprob: -21.250123977661133
    7. '۱' → logprob: -21.312623977661133
    8. ' ' → logprob: -21.750123977661133
    9. '0' → logprob: -21.875123977661133
    10. ')' → logprob: -21.937623977661133

Token 121: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00228894897736609
    2. ' used' → logprob: -6.877288818359375
    3. '   ' → logprob: -7.877288818359375
    4. '
' → logprob: -8.127288818359375
    5. '```' → logprob: -8.377288818359375
    6. 'used' → logprob: -8.877288818359375
    7. '<|end|>' → logprob: -9.502288818359375
    8. ' for' → logprob: -10.002288818359375
    9. 'def' → logprob: -10.627288818359375
    10. 'for' → logprob: -10.877288818359375

Token 122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02455703169107437
    2. ' used' → logprob: -3.899557113647461
    3. 'used' → logprob: -5.774557113647461
    4. '   ' → logprob: -7.524557113647461
    5. '```' → logprob: -8.524557113647461
    6. '
' → logprob: -10.274557113647461
    7. 'def' → logprob: -10.524557113647461
    8. 'Used' → logprob: -10.649557113647461
    9. ' words' → logprob: -11.524557113647461
    10. 'words' → logprob: -11.649557113647461

Token 123: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' (adapté à ' used') → logprob: -0.011054071597754955
    2. ' used' → logprob: -4.511054039001465
    3. '       ' → logprob: -12.261054039001465
    4. '   ' → logprob: -13.636054039001465
    5. '
' → logprob: -15.386054039001465
    6. '```' → logprob: -16.26105499267578
    7. '.used' → logprob: -17.26105499267578
    8. '        
' → logprob: -18.51105499267578
    9. '_used' → logprob: -19.13605499267578
    10. '``' → logprob: -19.38605499267578

Token 124: '_vertices' (ID: 96842)
  Prédit: '_vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vertices' → logprob: -4.084206375409849e-05
    2. '_' → logprob: -10.375041007995605
    3. ' _' → logprob: -12.250041007995605
    4. 'vertices' → logprob: -13.875041007995605
    5. '_tokens' → logprob: -14.000041007995605
    6. '_vectors' → logprob: -14.500041007995605
    7. '<|end|>' → logprob: -14.625041007995605
    8. '_VERT' → logprob: -15.000041007995605
    9. '_letters' → logprob: -15.375041007995605
    10. 'Vertices' → logprob: -15.375041007995605

Token 125: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.04930761829018593
    2. '.' → logprob: -3.0493075847625732
    3. ' .' → logprob: -7.299307823181152
    4. '.update' → logprob: -10.174307823181152
    5. '().' → logprob: -13.424307823181152
    6. '.append' → logprob: -13.799307823181152
    7. '.setdefault' → logprob: -13.924307823181152
    8. ').' → logprob: -14.424307823181152
    9. '‌.' → logprob: -15.049307823181152
    10. '<|end|>' → logprob: -15.049307823181152

Token 126: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -7.553032628493384e-05
    2. '(' → logprob: -9.500075340270996
    3. '((' → logprob: -15.125075340270996
    4. '(l' → logprob: -15.875075340270996
    5. 'f' → logprob: -16.000076293945312
    6. '(w' → logprob: -16.750076293945312
    7. ' (' → logprob: -17.250076293945312
    8. '(
' → logprob: -19.250076293945312
    9. '(v' → logprob: -19.375076293945312
    10. '(x' → logprob: -19.625076293945312

Token 127: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5120287066092715e-05
    2. ' )' → logprob: -10.500035285949707
    3. ')
' → logprob: -11.875035285949707
    4. ')}' → logprob: -16.00003433227539
    5. '}' → logprob: -16.12503433227539
    6. '   ' → logprob: -16.25003433227539
    7. ' ' → logprob: -16.75003433227539
    8. ')

' → logprob: -16.75003433227539
    9. '       ' → logprob: -17.25003433227539
    10. '),' → logprob: -17.75003433227539

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008161211386322975
    2. ' used' → logprob: -5.1331610679626465
    3. 'used' → logprob: -6.8831610679626465
    4. '<|end|>' → logprob: -6.8831610679626465
    5. '   ' → logprob: -9.383161544799805
    6. ' ' → logprob: -11.133161544799805
    7. '<|end|>' → logprob: -11.133161544799805
    8. '	' → logprob: -11.133161544799805
    9. '        
' → logprob: -11.758161544799805
    10. '	   ' → logprob: -12.383161544799805

Token 129: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' (adapté à ' used') → logprob: -0.10705868154764175
    2. ' used' → logprob: -2.3570587635040283
    3. 'l' → logprob: -5.107058525085449
    4. '       ' → logprob: -7.482058525085449
    5. ' l' → logprob: -8.48205852508545
    6. '   ' → logprob: -12.85705852508545
    7. '        ' → logprob: -13.98205852508545
    8. '           ' → logprob: -14.48205852508545
    9. '.used' → logprob: -15.85705852508545
    10. '_used' → logprob: -15.98205852508545

Token 130: '_vertices' (ID: 96842)
  Prédit: '_vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vertices' → logprob: -0.00043102685594931245
    2. '_' → logprob: -7.875431060791016
    3. ' _' → logprob: -11.125431060791016
    4. '```' → logprob: -11.750431060791016
    5. '_VERT' → logprob: -12.250431060791016
    6. 'vertices' → logprob: -12.750431060791016
    7. '_tokens' → logprob: -12.750431060791016
    8. ')_' → logprob: -13.000431060791016
    9. '<|end|>' → logprob: -13.000431060791016
    10. '_vectors' → logprob: -13.625431060791016

Token 131: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.07899146527051926
    2. '.' → logprob: -2.578991413116455
    3. '<|end|>' → logprob: -10.203991889953613
    4. 'add' → logprob: -10.828991889953613
    5. ' .' → logprob: -10.953991889953613
    6. ').' → logprob: -11.578991889953613
    7. '.update' → logprob: -11.703991889953613
    8. '.setdefault' → logprob: -12.828991889953613
    9. '.
' → logprob: -13.328991889953613
    10. '.append' → logprob: -13.953991889953613

Token 132: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -6.670925358776003e-05
    2. '(' → logprob: -9.625066757202148
    3. ' (' → logprob: -15.250066757202148
    4. 'l' → logprob: -15.250066757202148
    5. '(
' → logprob: -16.62506675720215
    6. '	l' → logprob: -17.25006675720215
    7. '(L' → logprob: -18.12506675720215
    8. ' l' → logprob: -18.37506675720215
    9. '(s' → logprob: -19.62506675720215
    10. '((' → logprob: -21.37506675720215

Token 133: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.0391463193809614e-05
    2. ')
' → logprob: -10.625060081481934
    3. '<|end|>' → logprob: -10.750060081481934
    4. ' )' → logprob: -11.875060081481934
    5. ')return' → logprob: -12.750060081481934
    6. '   ' → logprob: -13.250060081481934
    7. '<|end|>' → logprob: -14.250060081481934
    8. '
' → logprob: -14.625060081481934
    9. ')

' → logprob: -15.000060081481934
    10. '       ' → logprob: -15.250060081481934

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06343607604503632
    2. '<|end|>' → logprob: -3.1884360313415527
    3. '
' → logprob: -4.438436031341553
    4. ' for' → logprob: -6.188436031341553
    5. '    
' → logprob: -6.313436031341553
    6. '```' → logprob: -6.688436031341553
    7. '<|end|>' → logprob: -6.813436031341553
    8. ')' → logprob: -7.063436031341553
    9. 'def' → logprob: -7.813436031341553
    10. '#' → logprob: -8.688436508178711

Token 135: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4716937839984894
    2. '#' (adapté à ' #') → logprob: -1.596693754196167
    3. 'start' → logprob: -2.471693754196167
    4. 'visited' → logprob: -2.971693754196167
    5. '   ' → logprob: -4.471693992614746
    6. 'for' → logprob: -4.846693992614746
    7. 'stack' → logprob: -4.971693992614746
    8. 'in' → logprob: -5.596693992614746
    9. '    
' → logprob: -6.721693992614746
    10. ' def' → logprob: -6.721693992614746

Token 136: ' Check' (ID: 6208)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9642993807792664
    2. 'def' → logprob: -1.4642994403839111
    3. 'start' → logprob: -2.089299440383911
    4. 'visited' → logprob: -2.589299440383911
    5. 'for' → logprob: -2.839299440383911
    6. ' def' → logprob: -3.464299440383911
    7. 'stack' → logprob: -4.089299201965332
    8. 'first' → logprob: -4.339299201965332
    9. ' start' → logprob: -4.714299201965332
    10. ' #' → logprob: -4.839299201965332

Token 137: ' connectivity' (ID: 45849)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9473231434822083
    2. ' for' → logprob: -1.3223230838775635
    3. '#' → logprob: -2.4473230838775635
    4. '   ' → logprob: -2.5723230838775635
    5. ' #' → logprob: -3.1973230838775635
    6. 'def' → logprob: -3.8223230838775635
    7. ' balance' → logprob: -3.9473230838775635
    8. 'for' → logprob: -4.072323322296143
    9. 'if' → logprob: -4.322323322296143
    10. 'balance' → logprob: -4.447323322296143

Token 138: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.875148594379425
    2. 'visited' → logprob: -1.1251485347747803
    3. ' visited' → logprob: -1.5001485347747803
    4. 'def' → logprob: -3.8751485347747803
    5. '
' → logprob: -5.250148773193359
    6. ' def' → logprob: -5.625148773193359
    7. '<|end|>' → logprob: -6.375148773193359
    8. ' used' → logprob: -7.125148773193359
    9. '    
' → logprob: -7.375148773193359
    10. ' to' → logprob: -8.00014877319336

Token 139: ' vertices' (ID: 38360)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25167524814605713
    2. ' def' → logprob: -1.8766752481460571
    3. 'visited' → logprob: -4.001675128936768
    4. 'used' → logprob: -4.251675128936768
    5. 'vertices' → logprob: -4.251675128936768
    6. ' vertices' → logprob: -5.126675128936768
    7. ' used' → logprob: -5.251675128936768
    8. 'stack' → logprob: -6.001675128936768
    9. ' visited' → logprob: -6.001675128936768
    10. '#' → logprob: -6.876675128936768

Token 140: ' with' (ID: 483)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visited' → logprob: -1.1532777547836304
    2. 'visited' → logprob: -1.1532777547836304
    3. '   ' → logprob: -1.6532777547836304
    4. 'def' → logprob: -2.65327787399292
    5. ' def' → logprob: -2.65327787399292
    6. ' used' → logprob: -3.65327787399292
    7. ' vertices' → logprob: -5.90327787399292
    8. ' start' → logprob: -7.15327787399292
    9. 'vertices' → logprob: -7.40327787399292
    10. 'used' → logprob: -7.40327787399292

Token 141: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.2445515394210815
    2. ' edges' → logprob: -1.4945515394210815
    3. 'out' → logprob: -1.7445515394210815
    4. ' non' → logprob: -2.244551658630371
    5. 'non' → logprob: -2.619551658630371
    6. 'used' → logprob: -2.994551658630371
    7. ' at' → logprob: -3.119551658630371
    8. ' used' → logprob: -3.869551658630371
    9. ' out' → logprob: -5.369551658630371
    10. 'words' → logprob: -5.744551658630371

Token 142: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4195813834667206
    2. ' visited' → logprob: -1.919581413269043
    3. 'visited' → logprob: -2.044581413269043
    4. '
' → logprob: -3.419581413269043
    5. '<|end|>' → logprob: -4.419581413269043
    6. 'def' → logprob: -5.044581413269043
    7. '    
' → logprob: -5.169581413269043
    8. ' def' → logprob: -5.544581413269043
    9. ' vertices' → logprob: -6.669581413269043
    10. '```' → logprob: -7.044581413269043

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16014297306537628
    2. ' visited' → logprob: -2.6601428985595703
    3. 'visited' → logprob: -2.6601428985595703
    4. 'def' → logprob: -5.78514289855957
    5. ' def' → logprob: -6.16014289855957
    6. ' vertices' → logprob: -7.03514289855957
    7. '    
' → logprob: -7.41014289855957
    8. ' used' → logprob: -8.16014289855957
    9. 'vertices' → logprob: -8.16014289855957
    10. ' for' → logprob: -9.03514289855957

Token 144: ' def' (ID: 1056)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.15878859162330627
    2. 'def' (adapté à ' def') → logprob: -2.4087886810302734
    3. ' visited' → logprob: -3.4087886810302734
    4. ' def' → logprob: -4.783788681030273
    5. 'start' → logprob: -5.408788681030273
    6. '   ' → logprob: -5.783788681030273
    7. 'stack' → logprob: -5.783788681030273
    8. 'used' → logprob: -6.658788681030273
    9. ' stack' → logprob: -7.408788681030273
    10. ' start' → logprob: -7.533788681030273

Token 145: ' dfs' (ID: 51252)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.16011574864387512
    2. 'b' → logprob: -2.4101157188415527
    3. 'dfs' → logprob: -3.4101157188415527
    4. ' dfs' → logprob: -4.285115718841553
    5. ' is' → logprob: -4.910115718841553
    6. 'is' → logprob: -5.660115718841553
    7. 'visited' → logprob: -7.910115718841553
    8. ' visited' → logprob: -10.035116195678711
    9. ' can' → logprob: -10.785116195678711
    10. '_b' → logprob: -11.785116195678711

Token 146: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.39353007078170776
    2. '(u' → logprob: -1.1435301303863525
    3. '(node' → logprob: -5.268529891967773
    4. '(start' → logprob: -7.143529891967773
    5. '(vertex' → logprob: -8.018529891967773
    6. '(s' → logprob: -8.643529891967773
    7. '(' → logprob: -8.893529891967773
    8. '(f' → logprob: -11.018529891967773
    9. ' (' → logprob: -11.893529891967773
    10. '(token' → logprob: -12.018529891967773

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017004783148877323
    2. '):' → logprob: -9.37516975402832
    3. ',v' → logprob: -9.62516975402832
    4. ',u' → logprob: -11.62516975402832
    5. ' ,' → logprob: -12.12516975402832
    6. '):
' → logprob: -12.87516975402832
    7. '   ' → logprob: -14.12516975402832
    8. 'u' → logprob: -14.87516975402832
    9. '(v' → logprob: -15.37516975402832
    10. ',d' → logprob: -16.12516975402832

Token 148: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.2521129250526428
    2. ' visited' → logprob: -1.502112865447998
    3. 'used' → logprob: -9.127113342285156
    4. ' used' → logprob: -9.627113342285156
    5. 'vis' → logprob: -12.502113342285156
    6. 'seen' → logprob: -13.377113342285156
    7. 'graph' → logprob: -13.377113342285156
    8. ' seen' → logprob: -14.127113342285156
    9. 'visit' → logprob: -14.377113342285156
    10. 'v' → logprob: -14.627113342285156

Token 149: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05499015375971794
    2. '):
' → logprob: -2.92999005317688
    3. ',' → logprob: -9.8049898147583
    4. ':' → logprob: -10.8049898147583
    5. ' ):' → logprob: -10.9299898147583
    6. '):
' → logprob: -11.4299898147583
    7. ')' → logprob: -13.3049898147583
    8. '):

' → logprob: -13.9299898147583
    9. ' ):
' → logprob: -14.8049898147583
    10. '   ' → logprob: -15.3049898147583

Token 150: ' g' (ID: 329)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.007030423264950514
    2. ' graph' → logprob: -5.007030487060547
    3. 'g' → logprob: -8.757030487060547
    4. '   ' → logprob: -9.382030487060547
    5. ' ' → logprob: -11.257030487060547
    6. '
' → logprob: -11.382030487060547
    7. 'adj' → logprob: -11.507030487060547
    8. 'reverse' → logprob: -11.757030487060547
    9. '	graph' → logprob: -12.007030487060547
    10. 'visited' → logprob: -12.132030487060547

Token 151: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.43598809838294983
    2. 'raph' → logprob: -1.6859880685806274
    3. '):
' → logprob: -1.8109880685806274
    4. ',' → logprob: -5.810987949371338
    5. ')' → logprob: -6.560987949371338
    6. '):

' → logprob: -9.810988426208496
    7. '<|end|>' → logprob: -10.060988426208496
    8. 'raphics' → logprob: -10.810988426208496
    9. '):
' → logprob: -11.435988426208496
    10. 'enerated' → logprob: -11.685988426208496

Token 152: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04095124825835228
    2. '   ' → logprob: -3.2909512519836426
    3. ' visited' → logprob: -7.165951251983643
    4. '<|end|>' → logprob: -7.415951251983643
    5. 'visited' → logprob: -7.540951251983643
    6. ':' → logprob: -8.165950775146484
    7. '    
' → logprob: -9.040950775146484
    8. ')' → logprob: -9.415950775146484
    9. '
' → logprob: -9.790950775146484
    10. '	' → logprob: -10.040950775146484

Token 153: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.4537871778011322
    2. '   ' → logprob: -1.7037872076034546
    3. ' visited' → logprob: -1.7037872076034546
    4. '       ' → logprob: -7.203787326812744
    5. '    
' → logprob: -11.328786849975586
    6. '    ' → logprob: -11.453786849975586
    7. '
' → logprob: -11.578786849975586
    8. '  ' → logprob: -11.703786849975586
    9. ' ' → logprob: -12.328786849975586
    10. '	' → logprob: -12.453786849975586

Token 154: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.014176084659993649
    2. '[v' → logprob: -4.264175891876221
    3. 'add' → logprob: -11.764176368713379
    4. '.' → logprob: -12.889176368713379
    5. '.append' → logprob: -13.889176368713379
    6. ' add' → logprob: -14.389176368713379
    7. ' .' → logprob: -14.889176368713379
    8. '.Add' → logprob: -16.389175415039062
    9. '.v' → logprob: -16.889175415039062
    10. ' =' → logprob: -17.264175415039062

Token 155: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -8.125210297293961e-05
    2. '(' → logprob: -10.000081062316895
    3. 'v' → logprob: -10.250081062316895
    4. '(
' → logprob: -15.875081062316895
    5. ' (' → logprob: -16.37508201599121
    6. ')' → logprob: -16.62508201599121
    7. '(g' → logprob: -16.75008201599121
    8. ' v' → logprob: -17.50008201599121
    9. ')v' → logprob: -17.75008201599121
    10. '((' → logprob: -18.25008201599121

Token 156: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03366345167160034
    2. ')
' → logprob: -3.408663511276245
    3. ' )' → logprob: -11.783663749694824
    4. ')
' → logprob: -12.783663749694824
    5. '<|end|>' → logprob: -13.033663749694824
    6. ' )
' → logprob: -13.658663749694824
    7. ')return' → logprob: -13.783663749694824
    8. ')

' → logprob: -14.408663749694824
    9. '       ' → logprob: -14.658663749694824
    10. '   ' → logprob: -14.783663749694824

Token 157: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7410621643066406
    2. ' for' → logprob: -1.3660621643066406
    3. '   ' → logprob: -1.6160621643066406
    4. 'for' → logprob: -3.3660621643066406
    5. '
' → logprob: -3.7410621643066406
    6. '<|end|>' → logprob: -4.866062164306641
    7. '    
' → logprob: -6.616062164306641
    8. '	for' → logprob: -6.991062164306641
    9. '  
' → logprob: -7.366062164306641
    10. '        
' → logprob: -8.61606216430664

Token 158: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.046435244381427765
    2. ' for' → logprob: -3.2964353561401367
    3. '   ' → logprob: -4.796435356140137
    4. '	for' → logprob: -9.671435356140137
    5. '       ' → logprob: -10.296435356140137
    6. '    
' → logprob: -13.671435356140137
    7. '
' → logprob: -13.671435356140137
    8. ' ' → logprob: -14.796435356140137
    9. '  ' → logprob: -16.42143440246582
    10. '        
' → logprob: -16.42143440246582

Token 159: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.029768766835331917
    2. 'nv' → logprob: -3.779768705368042
    3. 'n' → logprob: -6.029768943786621
    4. 'nx' → logprob: -6.404768943786621
    5. 'to' → logprob: -6.779768943786621
    6. ' u' → logprob: -7.529768943786621
    7. ' nxt' → logprob: -7.654768943786621
    8. 'w' → logprob: -8.529768943786621
    9. ' nv' → logprob: -10.529768943786621
    10. 'next' → logprob: -10.904768943786621

Token 160: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029787633568048477
    2. 'in' → logprob: -3.529787540435791
    3. ' ' → logprob: -10.65478801727295
    4. 'n' → logprob: -11.52978801727295
    5. '	in' → logprob: -13.90478801727295
    6. '
' → logprob: -14.40478801727295
    7. '<|end|>' → logprob: -14.90478801727295
    8. 's' → logprob: -15.02978801727295
    9. 'g' → logprob: -15.15478801727295
    10. '<|end|>' → logprob: -15.77978801727295

Token 161: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.251936137676239
    2. ' g' → logprob: -1.5019361972808838
    3. 'graph' → logprob: -13.251935958862305
    4. '	g' → logprob: -13.501935958862305
    5. '[g' → logprob: -13.626935958862305
    6. ' ' → logprob: -13.876935958862305
    7. ' ' → logprob: -14.626935958862305
    8. '_g' → logprob: -15.626935958862305
    9. 'range' → logprob: -15.876935958862305
    10. '
' → logprob: -16.251935958862305

Token 162: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -7.941850526549388e-06
    2. 'v' → logprob: -11.750007629394531
    3. '[' → logprob: -18.50000762939453
    4. '(v' → logprob: -18.62500762939453
    5. '[u' → logprob: -18.87500762939453
    6. '[g' → logprob: -19.50000762939453
    7. ')v' → logprob: -19.62500762939453
    8. '	v' → logprob: -19.87500762939453
    9. '<v' → logprob: -19.87500762939453
    10. ' v' → logprob: -20.00000762939453

Token 163: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.06208835542201996
    2. ']:
' → logprob: -2.8120882511138916
    3. ']:
' → logprob: -9.562088012695312
    4. ']' → logprob: -10.437088012695312
    5. ']:

' → logprob: -12.062088012695312
    6. ':' → logprob: -12.437088012695312
    7. '       ' → logprob: -12.937088012695312
    8. '):' → logprob: -13.312088012695312
    9. ' ]' → logprob: -13.562088012695312
    10. '']:' → logprob: -13.562088012695312

Token 164: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005392124294303358
    2. ' ' → logprob: -8.50053882598877
    3. '            
' → logprob: -8.87553882598877
    4. ' 
' → logprob: -10.00053882598877
    5. ' if' → logprob: -10.37553882598877
    6. '<|end|>' → logprob: -10.62553882598877
    7. '               ' → logprob: -10.75053882598877
    8. '```' → logprob: -11.50053882598877
    9. '       ' → logprob: -11.62553882598877
    10. '
' → logprob: -11.87553882598877

Token 165: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.028231056407094002
    2. 'if' (adapté à ' if') → logprob: -3.778231143951416
    3. '           ' → logprob: -5.528231143951416
    4. ' dfs' → logprob: -7.653231143951416
    5. '               ' → logprob: -7.778231143951416
    6. 'dfs' → logprob: -9.653230667114258
    7. '            ' → logprob: -11.278230667114258
    8. '       ' → logprob: -11.528230667114258
    9. '        ' → logprob: -11.778230667114258
    10. ' ' → logprob: -12.278230667114258

Token 166: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.3868727385997772
    2. 'u' → logprob: -1.1368727684020996
    3. '	u' → logprob: -14.136872291564941
    4. ' ' → logprob: -14.636872291564941
    5. ' ' → logprob: -15.511872291564941
    6. 'not' → logprob: -16.886873245239258
    7. '[u' → logprob: -16.886873245239258
    8. '
' → logprob: -16.886873245239258
    9. '<|end|>' → logprob: -17.386873245239258
    10. ' not' → logprob: -17.449373245239258

Token 167: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.029754657298326492
    2. 'not' → logprob: -3.529754638671875
    3. '<|end|>' → logprob: -12.904754638671875
    4. '	not' → logprob: -14.154754638671875
    5. ')' → logprob: -15.029754638671875
    6. ':not' → logprob: -15.154754638671875
    7. '<|end|>' → logprob: -15.779754638671875
    8. '_not' → logprob: -16.779754638671875
    9. 'Not' → logprob: -17.404754638671875
    10. ' ' → logprob: -17.529754638671875

Token 168: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0650181844830513
    2. 'in' → logprob: -3.0650181770324707
    3. 'visited' → logprob: -4.190018177032471
    4. ' visited' → logprob: -6.940018177032471
    5. '<|end|>' → logprob: -9.690018653869629
    6. ' ' → logprob: -10.065018653869629
    7. '   ' → logprob: -10.690018653869629
    8. ')' → logprob: -10.940018653869629
    9. '       ' → logprob: -11.690018653869629
    10. '<|end|>' → logprob: -12.315018653869629

Token 169: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.012510117143392563
    2. ' visited' → logprob: -4.387510299682617
    3. '
' → logprob: -15.762510299682617
    4. ' ' → logprob: -15.762510299682617
    5. '   ' → logprob: -16.762510299682617
    6. 'vis' → logprob: -16.887510299682617
    7. 'visible' → logprob: -17.262510299682617
    8. 'visit' → logprob: -17.387510299682617
    9. 'seen' → logprob: -17.637510299682617
    10. 'Visited' → logprob: -17.762510299682617

Token 170: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6915928721427917
    2. ':
' → logprob: -0.8165928721427917
    3. '               ' → logprob: -2.9415929317474365
    4. '):
' → logprob: -5.566592693328857
    5. '):' → logprob: -7.816592693328857
    6. '           ' → logprob: -9.316593170166016
    7. '():
' → logprob: -10.066593170166016
    8. ')' → logprob: -10.316593170166016
    9. '<|end|>' → logprob: -10.941593170166016
    10. '       ' → logprob: -11.191593170166016

Token 171: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010847324738278985
    2. ' dfs' → logprob: -7.001084804534912
    3. 'dfs' → logprob: -8.876084327697754
    4. '           ' → logprob: -10.876084327697754
    5. '                   ' → logprob: -12.751084327697754
    6. '                
' → logprob: -13.001084327697754
    7. '              ' → logprob: -13.001084327697754
    8. '       ' → logprob: -13.876084327697754
    9. ' DFS' → logprob: -13.876084327697754
    10. '                ' → logprob: -14.126084327697754

Token 172: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.1662721335887909
    2. 'dfs' (adapté à ' dfs') → logprob: -2.1662721633911133
    3. '                   ' → logprob: -3.2912721633911133
    4. '               ' → logprob: -6.666272163391113
    5. '                       ' → logprob: -10.291272163391113
    6. '                ' → logprob: -10.416272163391113
    7. '           ' → logprob: -11.666272163391113
    8. '                 ' → logprob: -12.291272163391113
    9. '                  ' → logprob: -12.416272163391113
    10. '                    ' → logprob: -12.666272163391113

Token 173: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.004685018677264452
    2. '(' → logprob: -5.379684925079346
    3. 'u' → logprob: -10.129685401916504
    4. '(v' → logprob: -10.754685401916504
    5. '(
' → logprob: -13.129685401916504
    6. ' u' → logprob: -14.629685401916504
    7. ' (' → logprob: -14.879685401916504
    8. '(user' → logprob: -15.129685401916504
    9. '<|end|>' → logprob: -15.379685401916504
    10. '	u' → logprob: -16.629684448242188

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016277754679322243
    2. ',u' → logprob: -4.26627779006958
    3. 'u' → logprob: -6.64127779006958
    4. '(u' → logprob: -7.89127779006958
    5. ' u' → logprob: -8.141277313232422
    6. ' ,' → logprob: -9.141277313232422
    7. ',v' → logprob: -11.141277313232422
    8. '               ' → logprob: -12.266277313232422
    9. ',
' → logprob: -12.516277313232422
    10. ')' → logprob: -12.516277313232422

Token 175: ' visited' (ID: 18416)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.005978800822049379
    2. ' u' → logprob: -5.130978584289551
    3. 'v' → logprob: -10.38097858428955
    4. 'visited' → logprob: -11.63097858428955
    5. '   ' → logprob: -12.75597858428955
    6. ' ' → logprob: -13.13097858428955
    7. '
' → logprob: -14.00597858428955
    8. ')' → logprob: -14.13097858428955
    9. '	u' → logprob: -14.13097858428955
    10. '```' → logprob: -14.25597858428955

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008021225803531706
    2. ',u' → logprob: -7.375802040100098
    3. ')' → logprob: -9.125802040100098
    4. ',v' → logprob: -10.250802040100098
    5. ' ,' → logprob: -10.500802040100098
    6. 'u' → logprob: -12.625802040100098
    7. ' u' → logprob: -15.500802040100098
    8. ' ' → logprob: -16.625802993774414
    9. '   ' → logprob: -16.750802993774414
    10. '[u' → logprob: -16.875802993774414

Token 177: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.014165629632771015
    2. ' g' → logprob: -4.26416540145874
    3. '```' → logprob: -14.514165878295898
    4. '	g' → logprob: -14.889165878295898
    5. ')' → logprob: -15.139165878295898
    6. '
' → logprob: -15.514165878295898
    7. ' ' → logprob: -15.889165878295898
    8. ' ' → logprob: -16.2641658782959
    9. 'u' → logprob: -16.5141658782959
    10. '   ' → logprob: -16.6391658782959

Token 178: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.729906196298543e-06
    2. ')
' → logprob: -11.750009536743164
    3. ' )' → logprob: -13.625009536743164
    4. ')

' → logprob: -15.125009536743164
    5. '       ' → logprob: -16.625009536743164
    6. '   ' → logprob: -16.750009536743164
    7. '           ' → logprob: -16.875009536743164
    8. '               ' → logprob: -17.000009536743164
    9. '))' → logprob: -17.250009536743164
    10. '<|end|>' → logprob: -18.000009536743164

Token 179: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 180: ' #' (ID: 1069)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.8650849461555481
    2. 'visited' → logprob: -1.6150848865509033
    3. 'reverse' → logprob: -1.6150848865509033
    4. 'g' → logprob: -3.2400848865509033
    5. '#' (adapté à ' #') → logprob: -3.4900848865509033
    6. 'forward' → logprob: -3.6150848865509033
    7. '   ' → logprob: -3.8650848865509033
    8. 'used' → logprob: -4.740085124969482
    9. 'graph' → logprob: -4.865085124969482
    10. 'und' → logprob: -4.865085124969482

Token 181: ' build' (ID: 3024)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rev' → logprob: -1.0186973810195923
    2. '#' → logprob: -2.0186972618103027
    3. 'g' → logprob: -2.1436972618103027
    4. 'reverse' → logprob: -2.1436972618103027
    5. 'all' → logprob: -2.6436972618103027
    6. ' g' → logprob: -2.8936972618103027
    7. 'visited' → logprob: -3.0186972618103027
    8. ' rev' → logprob: -3.6436972618103027
    9. 'def' → logprob: -5.018697261810303
    10. ' reversed' → logprob: -5.018697261810303

Token 182: ' und' (ID: 844)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.931124746799469
    2. ' g' → logprob: -1.8061246871948242
    3. 'rev' → logprob: -1.9311246871948242
    4. 'g' → logprob: -1.9311246871948242
    5. ' und' → logprob: -2.806124687194824
    6. 'und' → logprob: -3.431124687194824
    7. 're' → logprob: -3.806124687194824
    8. ' reverse' → logprob: -4.181124687194824
    9. 'graph' → logprob: -4.681124687194824
    10. ' graph' → logprob: -6.181124687194824

Token 183: 'irected' (ID: 149617)
  Prédit: 'irected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irected' → logprob: -3.225939872208983e-05
    2. 'er' → logprob: -10.375032424926758
    3. 'ir' → logprob: -15.000032424926758
    4. '```' → logprob: -15.500032424926758
    5. 'irectional' → logprob: -15.625032424926758
    6. 'ers' → logprob: -17.000032424926758
    7. '_graph' → logprob: -17.875032424926758
    8. '``' → logprob: -18.000032424926758
    9. 'erd' → logprob: -18.000032424926758
    10. 'erged' → logprob: -18.125032424926758

Token 184: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.7450885772705078
    2. '_graph' → logprob: -0.7450885772705078
    3. ' graph' → logprob: -2.995088577270508
    4. '_g' → logprob: -8.120088577270508
    5. 'g' → logprob: -8.495088577270508
    6. 'Graph' → logprob: -10.745088577270508
    7. '	graph' → logprob: -10.870088577270508
    8. '_' → logprob: -11.120088577270508
    9. 'raph' → logprob: -11.995088577270508
    10. ' version' → logprob: -12.370088577270508

Token 185: ' for' (ID: 395)
  Prédit: 'und'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'und' → logprob: -0.5178878903388977
    2. ' und' → logprob: -1.142887830734253
    3. '   ' → logprob: -2.767887830734253
    4. ':' → logprob: -4.392888069152832
    5. ' undir' → logprob: -5.892888069152832
    6. 'undir' → logprob: -6.017888069152832
    7. '    
' → logprob: -7.142888069152832
    8. '
' → logprob: -7.267888069152832
    9. ' =' → logprob: -7.642888069152832
    10. 'u' → logprob: -7.892888069152832

Token 186: ' connectivity' (ID: 45849)
  Prédit: 'connect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connect' → logprob: -0.1625821888446808
    2. ' connectivity' → logprob: -2.4125821590423584
    3. 'checking' → logprob: -3.1625821590423584
    4. ' checking' → logprob: -4.9125823974609375
    5. 'used' → logprob: -5.4125823974609375
    6. '   ' → logprob: -6.6625823974609375
    7. 'visited' → logprob: -6.6625823974609375
    8. ' used' → logprob: -7.2875823974609375
    9. 'conn' → logprob: -7.5375823974609375
    10. 'v' → logprob: -8.287582397460938

Token 187: ' check' (ID: 2371)
  Prédit: 'und'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'und' → logprob: -0.38900846242904663
    2. ' und' → logprob: -1.3890085220336914
    3. '   ' → logprob: -3.2640085220336914
    4. ':' → logprob: -4.264008522033691
    5. 'graph' → logprob: -4.764008522033691
    6. ' graph' → logprob: -6.014008522033691
    7. ' undir' → logprob: -6.139008522033691
    8. 'g' → logprob: -6.639008522033691
    9. 'undir' → logprob: -6.639008522033691
    10. ')' → logprob: -6.764008522033691

Token 188: '
' (ID: 198)
  Prédit: 'und'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'und' → logprob: -0.22405990958213806
    2. ' und' → logprob: -2.349059820175171
    3. '   ' → logprob: -2.474059820175171
    4. 'undir' → logprob: -4.47406005859375
    5. '
' → logprob: -5.72406005859375
    6. ' undir' → logprob: -5.84906005859375
    7. '    
' → logprob: -6.84906005859375
    8. 'graph' → logprob: -7.22406005859375
    9. 'ug' → logprob: -7.84906005859375
    10. 'u' → logprob: -7.97406005859375

Token 189: '   ' (ID: 271)
  Prédit: 'und'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'und' → logprob: -0.1326712816953659
    2. '   ' → logprob: -3.007671356201172
    3. ' und' → logprob: -3.007671356201172
    4. 'undir' → logprob: -4.257671356201172
    5. '
' → logprob: -5.132671356201172
    6. ' undir' → logprob: -6.132671356201172
    7. '    
' → logprob: -6.882671356201172
    8. 'ug' → logprob: -7.382671356201172
    9. 'graph' → logprob: -7.757671356201172
    10. 'u' → logprob: -8.257671356201172

Token 190: ' und' (ID: 844)
  Prédit: 'und'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'und' (adapté à ' und') → logprob: -0.2596251666545868
    2. ' und' → logprob: -1.6346251964569092
    3. '   ' → logprob: -4.00962495803833
    4. 'undir' → logprob: -4.75962495803833
    5. 'ug' → logprob: -6.13462495803833
    6. 'graph' → logprob: -6.13462495803833
    7. ' undir' → logprob: -6.50962495803833
    8. ' graph' → logprob: -8.134625434875488
    9. ' g' → logprob: -8.634625434875488
    10. 'g' → logprob: -9.009625434875488

Token 191: 'irected' (ID: 149617)
  Prédit: 'irected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irected' → logprob: -6.921253225300461e-05
    2. 'graph' → logprob: -10.375069618225098
    3. 'ir' → logprob: -11.125069618225098
    4. 'er' → logprob: -11.125069618225098
    5. '_graph' → logprob: -12.000069618225098
    6. 'ired' → logprob: -14.375069618225098
    7. 'erd' → logprob: -14.875069618225098
    8. 'rect' → logprob: -15.000069618225098
    9. '   ' → logprob: -15.375069618225098
    10. 'r' → logprob: -16.12506866455078

Token 192: ' =' (ID: 314)
  Prédit: '_graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.2710394561290741
    2. ' =' → logprob: -1.7710394859313965
    3. '=' → logprob: -2.7710394859313965
    4. 'graph' → logprob: -5.3960394859313965
    5. '_g' → logprob: -10.271039009094238
    6. '	graph' → logprob: -10.396039009094238
    7. 'Graph' → logprob: -11.146039009094238
    8. ' graph' → logprob: -11.521039009094238
    9. 'raph' → logprob: -11.771039009094238
    10. ' ' → logprob: -11.896039009094238

Token 193: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.0008358351769857109
    2. ' defaultdict' → logprob: -7.12583589553833
    3. '{' → logprob: -10.500835418701172
    4. '[' → logprob: -13.750835418701172
    5. '"default' → logprob: -14.000835418701172
    6. ' default' → logprob: -14.250835418701172
    7. '.default' → logprob: -14.875835418701172
    8. '(default' → logprob: -14.875835418701172
    9. ' {' → logprob: -15.500835418701172
    10. ''default' → logprob: -15.875835418701172

Token 194: '(list' (ID: 13116)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.6942023634910583
    2. 'list' → logprob: -0.6942023634910583
    3. '(set' → logprob: -6.944202423095703
    4. '(list' → logprob: -9.319202423095703
    5. ':set' → logprob: -15.069202423095703
    6. ':list' → logprob: -15.819202423095703
    7. ' list' → logprob: -16.319202423095703
    8. ' set' → logprob: -16.319202423095703
    9. '```' → logprob: -16.819202423095703
    10. 'lambda' → logprob: -17.194202423095703

Token 195: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20297347009181976
    2. ')' → logprob: -1.702973484992981
    3. ')

' → logprob: -6.577973365783691
    4. '   ' → logprob: -8.952973365783691
    5. ')
' → logprob: -10.827973365783691
    6. 'for' → logprob: -10.952973365783691
    7. ' )
' → logprob: -14.577973365783691
    8. ' ' → logprob: -15.577973365783691
    9. ' for' → logprob: -15.702973365783691
    10. ')\' → logprob: -16.327974319458008

Token 196: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45832228660583496
    2. '   ' → logprob: -1.583322286605835
    3. ' for' → logprob: -1.833322286605835
    4. '<|end|>' → logprob: -6.583322525024414
    5. '
' → logprob: -7.208322525024414
    6. ')' → logprob: -8.583322525024414
    7. '	for' → logprob: -9.833322525024414
    8. '    
' → logprob: -10.208322525024414
    9. '<|end|>' → logprob: -10.458322525024414
    10. ' ' → logprob: -10.958322525024414

Token 197: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.050436053425073624
    2. ' for' → logprob: -3.050436019897461
    3. '   ' → logprob: -6.300436019897461
    4. '	for' → logprob: -11.425436019897461
    5. ' ' → logprob: -15.300436019897461
    6. '
' → logprob: -16.30043601989746
    7. '    
' → logprob: -16.55043601989746
    8. '<|end|>' → logprob: -16.92543601989746
    9. '  
' → logprob: -17.67543601989746
    10. '  ' → logprob: -18.30043601989746

Token 198: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.1750108003616333
    2. 'u' → logprob: -1.9250108003616333
    3. 'k' → logprob: -4.800010681152344
    4. 'i' → logprob: -5.550010681152344
    5. ' v' → logprob: -6.425010681152344
    6. ' u' → logprob: -7.800010681152344
    7. 'key' → logprob: -8.550010681152344
    8. 'f' → logprob: -8.800010681152344
    9. 'node' → logprob: -9.300010681152344
    10. 'vertex' → logprob: -9.925010681152344

Token 199: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.21304774284362793
    2. 'in' → logprob: -1.713047742843628
    3. ',' → logprob: -4.463047981262207
    4. 'graph' → logprob: -11.338047981262207
    5. ' ,' → logprob: -11.713047981262207
    6. ',v' → logprob: -11.838047981262207
    7. ' ' → logprob: -12.588047981262207
    8. ',in' → logprob: -13.463047981262207
    9. '   ' → logprob: -13.963047981262207
    10. ',list' → logprob: -14.213047981262207

Token 200: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.29053446650505066
    2. 'range' → logprob: -1.540534496307373
    3. 'graph' → logprob: -3.540534496307373
    4. ' used' → logprob: -5.415534496307373
    5. ' range' → logprob: -5.790534496307373
    6. 'list' → logprob: -6.665534496307373
    7. ' graph' → logprob: -9.790534019470215
    8. ' list' → logprob: -10.915534019470215
    9. 'use' → logprob: -11.665534019470215
    10. '(range' → logprob: -13.540534019470215

Token 201: '_vertices' (ID: 96842)
  Prédit: '_vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vertices' → logprob: -0.0005586316110566258
    2. 'vertices' → logprob: -7.500558853149414
    3. '_' → logprob: -13.750558853149414
    4. 'Vertices' → logprob: -14.125558853149414
    5. ' vertices' → logprob: -14.125558853149414
    6. 'v' → logprob: -14.125558853149414
    7. '
' → logprob: -14.375558853149414
    8. '(vertices' → logprob: -14.625558853149414
    9. '_VERT' → logprob: -15.375558853149414
    10. 'vert' → logprob: -15.500558853149414

Token 202: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.033744361251592636
    2. ':
' → logprob: -3.4087443351745605
    3. '   ' → logprob: -9.908744812011719
    4. ',' → logprob: -10.533744812011719
    5. '       ' → logprob: -11.658744812011719
    6. '+' → logprob: -12.533744812011719
    7. ':
' → logprob: -12.908744812011719
    8. ' as' → logprob: -13.283744812011719
    9. ' :' → logprob: -13.658744812011719
    10. '):' → logprob: -13.783744812011719

Token 203: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2425820231437683
    2. ' for' → logprob: -1.867582082748413
    3. 'for' → logprob: -3.492582082748413
    4. '   ' → logprob: -3.492582082748413
    5. '	for' → logprob: -9.992582321166992
    6. ' ' → logprob: -12.742582321166992
    7. '    ' → logprob: -12.992582321166992
    8. ',' → logprob: -13.242582321166992
    9. '```' → logprob: -13.492582321166992
    10. '     ' → logprob: -13.617582321166992

Token 204: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16341917216777802
    2. '   ' → logprob: -2.538419246673584
    3. ' for' → logprob: -2.663419246673584
    4. 'und' → logprob: -6.413419246673584
    5. ' und' → logprob: -8.663418769836426
    6. '       ' → logprob: -8.913418769836426
    7. '	for' → logprob: -10.163418769836426
    8. '
' → logprob: -10.663418769836426
    9. ' ' → logprob: -10.663418769836426
    10. '    
' → logprob: -11.788418769836426

Token 205: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.011089321225881577
    2. ' u' → logprob: -4.511089324951172
    3. 'w' → logprob: -10.636089324951172
    4. 'to' → logprob: -11.011089324951172
    5. ' w' → logprob: -15.136089324951172
    6. ' to' → logprob: -15.386089324951172
    7. '	u' → logprob: -15.511089324951172
    8. '_u' → logprob: -16.136089324951172
    9. '(u' → logprob: -16.761089324951172
    10. 'n' → logprob: -16.886089324951172

Token 206: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048597704619169235
    2. 'in' → logprob: -3.048597812652588
    3. ' ' → logprob: -12.67359733581543
    4. '	in' → logprob: -13.54859733581543
    5. 'In' → logprob: -13.79859733581543
    6. 'import' → logprob: -13.92359733581543
    7. '   ' → logprob: -14.29859733581543
    8. 'n' → logprob: -14.67359733581543
    9. '
' → logprob: -15.04859733581543
    10. 's' → logprob: -15.04859733581543

Token 207: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0005536287208087742
    2. ' graph' → logprob: -7.500553607940674
    3. '	graph' → logprob: -14.875554084777832
    4. '(graph' → logprob: -15.375554084777832
    5. '[' → logprob: -19.625553131103516
    6. 'graphql' → logprob: -19.750553131103516
    7. '   ' → logprob: -20.625553131103516
    8. '_graph' → logprob: -20.750553131103516
    9. 'raph' → logprob: -20.750553131103516
    10. '.graph' → logprob: -20.875553131103516

Token 208: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.512236498361744e-07
    2. 'v' → logprob: -14.750000953674316
    3. '[u' → logprob: -16.125
    4. '[' → logprob: -19.125
    5. '[f' → logprob: -19.25
    6. ' [' → logprob: -20.25
    7. '```' → logprob: -20.5
    8. '<v' → logprob: -20.875
    9. '(v' → logprob: -21.0
    10. '[
' → logprob: -21.625

Token 209: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.2521923780441284
    2. ']:' → logprob: -1.5021923780441284
    3. ']:
' → logprob: -8.877192497253418
    4. ']' → logprob: -9.377192497253418
    5. ' ]' → logprob: -11.002192497253418
    6. ']:

' → logprob: -11.252192497253418
    7. ':' → logprob: -13.127192497253418
    8. '']:
' → logprob: -13.502192497253418
    9. '):
' → logprob: -14.002192497253418
    10. ':
' → logprob: -14.127192497253418

Token 210: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006335421930998564
    2. 'und' → logprob: -5.506335258483887
    3. ' und' → logprob: -6.381335258483887
    4. '       ' → logprob: -7.756335258483887
    5. '   ' → logprob: -9.256335258483887
    6. ':
' → logprob: -11.756335258483887
    7. '
' → logprob: -11.881335258483887
    8. '	       ' → logprob: -12.006335258483887
    9. '```' → logprob: -12.631335258483887
    10. ':' → logprob: -12.631335258483887

Token 211: ' und' (ID: 844)
  Prédit: 'und'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'und' (adapté à ' und') → logprob: -0.4749413728713989
    2. ' und' → logprob: -0.9749413728713989
    3. '           ' → logprob: -7.724941253662109
    4. '   ' → logprob: -7.974941253662109
    5. '       ' → logprob: -9.84994125366211
    6. '
' → logprob: -11.34994125366211
    7. '               ' → logprob: -11.72494125366211
    8. ' ' → logprob: -13.84994125366211
    9. 'undi' → logprob: -14.22494125366211
    10. ' 
' → logprob: -14.72494125366211

Token 212: 'irected' (ID: 149617)
  Prédit: 'irected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irected' → logprob: -5.512236498361744e-07
    2. 'ired' → logprob: -14.875000953674316
    3. 'irect' → logprob: -16.25
    4. 'rect' → logprob: -17.5
    5. 'ir' → logprob: -17.875
    6. 'irectional' → logprob: -18.0
    7. 'icted' → logprob: -19.625
    8. 'ire' → logprob: -20.0
    9. 'irst' → logprob: -20.125
    10. 'efined' → logprob: -20.375

Token 213: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.4140441635390744e-05
    2. '[u' → logprob: -11.500014305114746
    3. '[' → logprob: -12.500014305114746
    4. 'v' → logprob: -15.250014305114746
    5. ' [' → logprob: -17.75001335144043
    6. '```' → logprob: -17.75001335144043
    7. '[val' → logprob: -18.12501335144043
    8. '
' → logprob: -18.75001335144043
    9. '[f' → logprob: -18.87501335144043
    10. '   ' → logprob: -19.75001335144043

Token 214: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -8.566264295950532e-05
    2. '.append' → logprob: -9.500085830688477
    3. ' ].' → logprob: -12.125085830688477
    4. ']' → logprob: -12.625085830688477
    5. '.' → logprob: -13.250085830688477
    6. ' .' → logprob: -15.625085830688477
    7. ').' → logprob: -16.125085830688477
    8. '.app' → logprob: -17.375085830688477
    9. '   ' → logprob: -17.500085830688477
    10. ''].' → logprob: -17.750085830688477

Token 215: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.0280383548888494e-06
    2. ' append' → logprob: -14.000000953674316
    3. 'appen' → logprob: -17.000001907348633
    4. '.append' → logprob: -17.250001907348633
    5. 'app' → logprob: -18.375001907348633
    6. 'add' → logprob: -19.875001907348633
    7. '	append' → logprob: -19.875001907348633
    8. '_append' → logprob: -20.000001907348633
    9. 'push' → logprob: -20.125001907348633
    10. 'Append' → logprob: -20.625001907348633

Token 216: '(u' (ID: 17057)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.011050059460103512
    2. '(u' → logprob: -4.511050224304199
    3. ' u' → logprob: -13.0110502243042
    4. '	u' → logprob: -17.386049270629883
    5. '(' → logprob: -19.636049270629883
    6. '[u' → logprob: -20.261049270629883
    7. ' (' → logprob: -20.886049270629883
    8. '(
' → logprob: -21.136049270629883
    9. ',u' → logprob: -21.386049270629883
    10. '
' → logprob: -21.886049270629883

Token 217: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2522452771663666
    2. ')' → logprob: -1.502245306968689
    3. '           ' → logprob: -8.12724494934082
    4. ' )
' → logprob: -11.62724494934082
    5. ')
' → logprob: -12.12724494934082
    6. '       ' → logprob: -12.75224494934082
    7. ')

' → logprob: -13.12724494934082
    8. ' )' → logprob: -14.00224494934082
    9. '   ' → logprob: -15.25224494934082
    10. '),' → logprob: -16.37724494934082

Token 218: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015395533409900963
    2. 'und' → logprob: -9.000153541564941
    3. ' und' → logprob: -10.625153541564941
    4. '   ' → logprob: -12.875153541564941
    5. '       ' → logprob: -13.125153541564941
    6. ',' → logprob: -14.625153541564941
    7. ' and' → logprob: -15.000153541564941
    8. '<|end|>' → logprob: -15.375153541564941
    9. '
' → logprob: -15.750153541564941
    10. '		' → logprob: -16.375154495239258

Token 219: ' und' (ID: 844)
  Prédit: 'und'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'und' (adapté à ' und') → logprob: -0.0004317420825827867
    2. ' und' → logprob: -7.750431537628174
    3. '           ' → logprob: -13.875432014465332
    4. '   ' → logprob: -16.625431060791016
    5. 'undi' → logprob: -17.500431060791016
    6. 'unt' → logprob: -17.875431060791016
    7. '       ' → logprob: -18.750431060791016
    8. ' ' → logprob: -19.000431060791016
    9. 'undo' → logprob: -19.125431060791016
    10. 'undir' → logprob: -19.625431060791016

Token 220: 'irected' (ID: 149617)
  Prédit: 'irected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irected' → logprob: 0.0
    2. 'irect' → logprob: -17.25
    3. 'rect' → logprob: -18.25
    4. 'ired' → logprob: -18.5
    5. 'irectional' → logprob: -18.875
    6. 'ir' → logprob: -19.125
    7. '[' → logprob: -19.625
    8. 'direct' → logprob: -20.125
    9. 'r' → logprob: -20.25
    10. 'reated' → logprob: -21.75

Token 221: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.173704271830502e-06
    2. 'u' → logprob: -13.00000286102295
    3. '[' → logprob: -14.12500286102295
    4. '[v' → logprob: -15.62500286102295
    5. '	u' → logprob: -17.500003814697266
    6. '
' → logprob: -18.000003814697266
    7. '   ' → logprob: -18.875003814697266
    8. '<u' → logprob: -18.875003814697266
    9. '[f' → logprob: -19.000003814697266
    10. '(u' → logprob: -19.000003814697266

Token 222: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.1613457202911377
    2. '].' → logprob: -1.9113457202911377
    3. ').' → logprob: -7.286345481872559
    4. '.' → logprob: -7.911345481872559
    5. ' .' → logprob: -9.786345481872559
    6. '.app' → logprob: -12.411345481872559
    7. ' ].' → logprob: -12.911345481872559
    8. '           ' → logprob: -13.411345481872559
    9. 'append' → logprob: -13.536345481872559
    10. ']' → logprob: -13.661345481872559

Token 223: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.1160349458805285e-05
    2. '.append' → logprob: -11.500011444091797
    3. ' append' → logprob: -14.500011444091797
    4. 'app' → logprob: -14.875011444091797
    5. 'appen' → logprob: -16.500011444091797
    6. '_append' → logprob: -18.125011444091797
    7. '	append' → logprob: -18.625011444091797
    8. 'Append' → logprob: -19.250011444091797
    9. 'add' → logprob: -21.250011444091797
    10. 'appe' → logprob: -21.625011444091797

Token 224: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0009209888521581888
    2. 'v' → logprob: -7.00092077255249
    3. '(' → logprob: -11.625921249389648
    4. ' v' → logprob: -15.375921249389648
    5. ' (' → logprob: -16.00092124938965
    6. ')' → logprob: -16.75092124938965
    7. '[v' → logprob: -17.12592124938965
    8. ')v' → logprob: -17.25092124938965
    9. '	v' → logprob: -17.62592124938965
    10. '(
' → logprob: -18.75092124938965

Token 225: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00030424181022681296
    2. '<|end|>' → logprob: -8.375304222106934
    3. ')
' → logprob: -9.625304222106934
    4. ' )' → logprob: -12.250304222106934
    5. '<|end|>' → logprob: -14.125304222106934
    6. ')

' → logprob: -15.250304222106934
    7. '`)' → logprob: -15.250304222106934
    8. '
' → logprob: -15.625304222106934
    9. '       ' → logprob: -15.625304222106934
    10. '')' → logprob: -15.750304222106934

Token 226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2444709837436676
    2. 'visited' → logprob: -2.2444710731506348
    3. ' visited' → logprob: -2.9944710731506348
    4. '
' → logprob: -2.9944710731506348
    5. '<|end|>' → logprob: -4.869471073150635
    6. '    
' → logprob: -6.994471073150635
    7. ')' → logprob: -7.619471073150635
    8. ' 
' → logprob: -8.119470596313477
    9. '```' → logprob: -8.244470596313477
    10. 'def' → logprob: -8.244470596313477

Token 227: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.0010723463492468
    2. ' visited' → logprob: -7.126072406768799
    3. '   ' → logprob: -8.25107192993164
    4. '
' → logprob: -12.25107192993164
    5. '    
' → logprob: -13.87607192993164
    6. 'connected' → logprob: -14.75107192993164
    7. 'def' → logprob: -15.25107192993164
    8. ' 
' → logprob: -16.00107192993164
    9. 'all' → logprob: -16.12607192993164
    10. 'reachable' → logprob: -16.62607192993164

Token 228: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0209928210824728
    2. '=set' → logprob: -4.520992755889893
    3. '=' → logprob: -4.645992755889893
    4. '<|end|>' → logprob: -8.64599323272705
    5. ' ' → logprob: -9.52099323272705
    6. '(set' → logprob: -11.02099323272705
    7. '(' → logprob: -12.14599323272705
    8. ')' → logprob: -12.39599323272705
    9. '.setdefault' → logprob: -12.39599323272705
    10. '.add' → logprob: -12.52099323272705

Token 229: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.008616226725280285
    2. ' set' → logprob: -4.7586164474487305
    3. '=set' → logprob: -13.38361644744873
    4. '	set' → logprob: -16.008615493774414
    5. '(set' → logprob: -16.758615493774414
    6. '{' → logprob: -17.383615493774414
    7. ')set' → logprob: -18.133615493774414
    8. ' ' → logprob: -18.508615493774414
    9. '   ' → logprob: -19.383615493774414
    10. '{}' → logprob: -20.883615493774414

Token 230: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1299637109041214
    2. '()
' → logprob: -2.7549636363983154
    3. '()' → logprob: -3.7549636363983154
    4. '
' → logprob: -4.7549638748168945
    5. '  
' → logprob: -5.0049638748168945
    6. '(' → logprob: -5.1299638748168945
    7. '    
' → logprob: -5.3799638748168945
    8. ' =' → logprob: -5.8799638748168945
    9. '<|end|>' → logprob: -5.8799638748168945
    10. ')' → logprob: -7.1299638748168945

Token 231: '   ' (ID: 271)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.786900520324707
    2. '   ' → logprob: -0.911900520324707
    3. ' dfs' → logprob: -2.411900520324707
    4. 'visited' → logprob: -3.161900520324707
    5. ' visited' → logprob: -4.661900520324707
    6. ' if' → logprob: -7.786900520324707
    7. 'def' → logprob: -8.286900520324707
    8. '    
' → logprob: -8.286900520324707
    9. ' for' → logprob: -8.661900520324707
    10. 'if' → logprob: -8.786900520324707

Token 232: ' start' (ID: 1604)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.06129901111125946
    2. 'start' (adapté à ' start') → logprob: -3.1862990856170654
    3. '   ' → logprob: -4.436298847198486
    4. 'first' → logprob: -6.686298847198486
    5. ' dfs' → logprob: -6.936298847198486
    6. 'stack' → logprob: -6.936298847198486
    7. 'def' → logprob: -7.061298847198486
    8. 'if' → logprob: -7.436298847198486
    9. 'next' → logprob: -7.561298847198486
    10. 'visited' → logprob: -7.686298847198486

Token 233: '_vertex' (ID: 65291)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12457408756017685
    2. '=' → logprob: -2.2495741844177246
    3. '_vertex' → logprob: -5.624574184417725
    4. '<|end|>' → logprob: -5.749574184417725
    5. '_vertices' → logprob: -5.874574184417725
    6. '_token' → logprob: -7.624574184417725
    7. '_tokens' → logprob: -7.999574184417725
    8. '_nodes' → logprob: -7.999574184417725
    9. ' ' → logprob: -8.999573707580566
    10. '=None' → logprob: -8.999573707580566

Token 234: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759541392326355
    2. ' =' → logprob: -0.8259541392326355
    3. '<|end|>' → logprob: -12.07595443725586
    4. '=list' → logprob: -12.95095443725586
    5. '=None' → logprob: -13.07595443725586
    6. 'next' → logprob: -13.95095443725586
    7. ' ' → logprob: -14.45095443725586
    8. ')' → logprob: -14.70095443725586
    9. '   ' → logprob: -14.82595443725586
    10. ',' → logprob: -14.95095443725586

Token 235: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.03809381648898125
    2. ' next' → logprob: -3.2880938053131104
    3. 'None' → logprob: -10.538093566894531
    4. '(next' → logprob: -11.538093566894531
    5. 'min' → logprob: -11.663093566894531
    6. ' None' → logprob: -11.913093566894531
    7. 'list' → logprob: -14.913093566894531
    8. ' min' → logprob: -16.41309356689453
    9. '[next' → logprob: -16.53809356689453
    10. ' ' → logprob: -16.53809356689453

Token 236: '(iter' (ID: 61014)
  Prédit: '(iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(iter' → logprob: -5.319370302458992e-06
    2. '((' → logprob: -12.250005722045898
    3. '(v' → logprob: -14.750005722045898
    4. 'iter' → logprob: -17.7500057220459
    5. '(' → logprob: -18.2500057220459
    6. '(iterator' → logprob: -18.3750057220459
    7. '(i' → logprob: -18.6250057220459
    8. ' iter' → logprob: -19.5000057220459
    9. '(
' → logprob: -20.0000057220459
    10. ' (' → logprob: -21.1250057220459

Token 237: '(' (ID: 7)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.25200405716896057
    2. '(' → logprob: -1.5020040273666382
    3. ' used' → logprob: -9.50200366973877
    4. 'visited' → logprob: -17.127004623413086
    5. 'unused' → logprob: -17.127004623413086
    6. '_used' → logprob: -17.252004623413086
    7. 'Used' → logprob: -17.502004623413086
    8. '   ' → logprob: -17.502004623413086
    9. '.used' → logprob: -18.002004623413086
    10. ' (' → logprob: -18.127004623413086

Token 238: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -9.925185440806672e-05
    2. ' used' → logprob: -9.250099182128906
    3. '   ' → logprob: -12.750099182128906
    4. '
' → logprob: -17.000099182128906
    5. '  ' → logprob: -17.375099182128906
    6. ' ' → logprob: -17.500099182128906
    7. 'visited' → logprob: -18.375099182128906
    8. '    ' → logprob: -18.875099182128906
    9. 'user' → logprob: -19.125099182128906
    10. 'use' → logprob: -19.250099182128906

Token 239: '_vertices' (ID: 96842)
  Prédit: '_vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vertices' → logprob: -1.5451681974809617e-05
    2. 'vertices' → logprob: -11.625015258789062
    3. ')' → logprob: -13.250015258789062
    4. ')_' → logprob: -13.625015258789062
    5. '(vertices' → logprob: -14.250015258789062
    6. '\' → logprob: -14.250015258789062
    7. '
' → logprob: -14.875015258789062
    8. '```' → logprob: -14.875015258789062
    9. '(_' → logprob: -15.000015258789062
    10. ' _' → logprob: -15.125015258789062

Token 240: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07209564000368118
    2. '))
' → logprob: -2.6970956325531006
    3. ')' → logprob: -6.44709587097168
    4. ' ))' → logprob: -7.94709587097168
    5. ' ))
' → logprob: -9.44709587097168
    6. ')
' → logprob: -9.57209587097168
    7. '),' → logprob: -9.82209587097168
    8. '))

' → logprob: -11.82209587097168
    9. ' )' → logprob: -12.82209587097168
    10. ')))' → logprob: -12.94709587097168

Token 241: '   ' (ID: 271)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.5332251787185669
    2. '   ' → logprob: -1.033225178718567
    3. 'visited' → logprob: -3.1582250595092773
    4. ' dfs' → logprob: -4.658225059509277
    5. '
' → logprob: -5.658225059509277
    6. '    
' → logprob: -6.658225059509277
    7. ' visited' → logprob: -7.658225059509277
    8. '  
' → logprob: -9.783225059509277
    9. '```' → logprob: -9.908225059509277
    10. ' 
' → logprob: -11.158225059509277

Token 242: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.006797663867473602
    2. ' dfs' → logprob: -5.131797790527344
    3. 'visited' → logprob: -7.506797790527344
    4. '
' → logprob: -8.756797790527344
    5. '   ' → logprob: -8.881797790527344
    6. '    
' → logprob: -12.006797790527344
    7. ' visited' → logprob: -12.256797790527344
    8. 'df' → logprob: -12.381797790527344
    9. 'DFS' → logprob: -13.256797790527344
    10. '```' → logprob: -13.506797790527344

Token 243: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.00021712594025302678
    2. '(' → logprob: -9.00021743774414
    3. ' (' → logprob: -9.37521743774414
    4. '(
' → logprob: -12.37521743774414
    5. 'start' → logprob: -12.62521743774414
    6. '<|end|>' → logprob: -14.62521743774414
    7. '[start' → logprob: -15.00021743774414
    8. '(end' → logprob: -15.62521743774414
    9. ',start' → logprob: -16.12521743774414
    10. ' start' → logprob: -16.37521743774414

Token 244: '_vertex' (ID: 65291)
  Prédit: '_vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vertex' → logprob: -3.173704271830502e-06
    2. 'vertex' → logprob: -13.25000286102295
    3. '(vertex' → logprob: -14.62500286102295
    4. '_vertices' → logprob: -15.25000286102295
    5. '_' → logprob: -15.87500286102295
    6. '_VERTEX' → logprob: -16.000003814697266
    7. ')_' → logprob: -16.375003814697266
    8. ')' → logprob: -16.500003814697266
    9. '```' → logprob: -16.500003814697266
    10. ' _' → logprob: -17.250003814697266

Token 245: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020449401927180588
    2. ' ,' → logprob: -8.500204086303711
    3. 'visited' → logprob: -14.125204086303711
    4. ',
' → logprob: -16.00020408630371
    5. '   ' → logprob: -16.75020408630371
    6. ' visited' → logprob: -17.37520408630371
    7. ')' → logprob: -18.12520408630371
    8. '```' → logprob: -18.50020408630371
    9. '),' → logprob: -20.37520408630371
    10. '(' → logprob: -20.37520408630371

Token 246: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.004078401252627373
    2. ' visited' → logprob: -5.504078388214111
    3. 'Visited' → logprob: -21.004077911376953
    4. '   ' → logprob: -21.879077911376953
    5. 'visit' → logprob: -22.129077911376953
    6. '
' → logprob: -22.754077911376953
    7. ' ' → logprob: -23.129077911376953
    8. 'visible' → logprob: -23.254077911376953
    9. 'vis' → logprob: -23.629077911376953
    10. 'visi' → logprob: -24.754077911376953

Token 247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.750436007976532e-05
    2. ' ,' → logprob: -10.25003719329834
    3. ')' → logprob: -13.25003719329834
    4. ',
' → logprob: -15.75003719329834
    5. '<|end|>' → logprob: -16.625038146972656
    6. '   ' → logprob: -17.500038146972656
    7. ',)' → logprob: -17.750038146972656
    8. ',

' → logprob: -18.000038146972656
    9. '‌,' → logprob: -18.875038146972656
    10. '),' → logprob: -19.125038146972656

Token 248: ' und' (ID: 844)
  Prédit: 'und'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'und' → logprob: -0.026316437870264053
    2. ' und' → logprob: -3.6513164043426514
    3. '   ' → logprob: -11.65131664276123
    4. ')' → logprob: -12.52631664276123
    5. 'undi' → logprob: -13.90131664276123
    6. 'unt' → logprob: -14.77631664276123
    7. ' ' → logprob: -15.02631664276123
    8. 'ud' → logprob: -15.77631664276123
    9. 'unde' → logprob: -15.77631664276123
    10. 'undir' → logprob: -15.77631664276123

Token 249: 'irected' (ID: 149617)
  Prédit: 'irected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irected' → logprob: -3.8889261304575484e-06
    2. 'rect' → logprob: -12.625003814697266
    3. 'ired' → logprob: -14.875003814697266
    4. 'irect' → logprob: -16.500003814697266
    5. 'red' → logprob: -18.500003814697266
    6. 'icted' → logprob: -19.000003814697266
    7. 'irectional' → logprob: -19.250003814697266
    8. 'r' → logprob: -19.375003814697266
    9. 'ected' → logprob: -20.125003814697266
    10. 'ered' → logprob: -20.250003814697266

Token 250: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5597102396423e-05
    2. ')
' → logprob: -10.375035285949707
    3. ')

' → logprob: -13.000035285949707
    4. '   ' → logprob: -13.500035285949707
    5. ' )' → logprob: -14.375035285949707
    6. ')return' → logprob: -17.875036239624023
    7. '))' → logprob: -18.125036239624023
    8. ')`' → logprob: -18.500036239624023
    9. ')#' → logprob: -18.750036239624023
    10. '
' → logprob: -19.250036239624023

Token 251: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7752323150634766
    2. '   ' → logprob: -1.0252323150634766
    3. '<|end|>' → logprob: -1.7752323150634766
    4. '    
' → logprob: -5.025232315063477
    5. '

' → logprob: -6.775232315063477
    6. ' if' → logprob: -7.025232315063477
    7. '<|end|>' → logprob: -7.025232315063477
    8. '  
' → logprob: -7.275232315063477
    9. ')' → logprob: -8.150232315063477
    10. '\n' → logprob: -8.525232315063477

Token 252: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24698194861412048
    2. '   ' → logprob: -1.9969819784164429
    3. ' if' → logprob: -3.1219818592071533
    4. '<|end|>' → logprob: -4.371982097625732
    5. '    
' → logprob: -4.496982097625732
    6. 'if' (adapté à ' if') → logprob: -4.621982097625732
    7. ')' → logprob: -6.371982097625732
    8. '  
' → logprob: -6.621982097625732
    9. '\n' → logprob: -7.121982097625732
    10. ' 
' → logprob: -7.746982097625732

Token 253: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.12939482927322388
    2. 'visited' → logprob: -2.129394769668579
    3. ' len' → logprob: -6.504395008087158
    4. ' used' → logprob: -7.504395008087158
    5. 'len' → logprob: -8.00439453125
    6. 'used' → logprob: -9.75439453125
    7. ' not' → logprob: -10.75439453125
    8. ' ' → logprob: -13.50439453125
    9. '   ' → logprob: -14.50439453125
    10. 'not' → logprob: -15.12939453125

Token 254: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.2520834505558014
    2. ' !=' → logprob: -1.502083420753479
    3. ')!=' → logprob: -9.127083778381348
    4. '()!=' → logprob: -11.002083778381348
    5. ']!=' → logprob: -11.002083778381348
    6. '!==' → logprob: -12.502083778381348
    7. '==' → logprob: -13.252083778381348
    8. '<' → logprob: -13.377083778381348
    9. '<|end|>' → logprob: -13.377083778381348
    10. '<len' → logprob: -13.752083778381348

Token 255: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.005234002135694027
    2. ' used' → logprob: -5.2552337646484375
    3. '   ' → logprob: -16.005233764648438
    4. '.used' → logprob: -18.130233764648438
    5. ' ' → logprob: -18.755233764648438
    6. '```' → logprob: -19.755233764648438
    7. 'Used' → logprob: -19.880233764648438
    8. '_used' → logprob: -20.005233764648438
    9. 'use' → logprob: -20.380233764648438
    10. '    ' → logprob: -20.630233764648438

Token 256: '_vertices' (ID: 96842)
  Prédit: '_vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vertices' → logprob: -2.696889623621246e-06
    2. 'vertices' → logprob: -13.12500286102295
    3. '```' → logprob: -15.87500286102295
    4. '_' → logprob: -16.250001907348633
    5. '_used' → logprob: -16.250001907348633
    6. 'Vertices' → logprob: -16.500001907348633
    7. ' _' → logprob: -16.500001907348633
    8. '
' → logprob: -17.125001907348633
    9. '\' → logprob: -17.125001907348633
    10. '_tokens' → logprob: -17.250001907348633

Token 257: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28338438272476196
    2. ':
' → logprob: -1.4083843231201172
    3. ':return' → logprob: -6.533384323120117
    4. '       ' → logprob: -7.283384323120117
    5. '   ' → logprob: -10.408384323120117
    6. '):' → logprob: -10.783384323120117
    7. '):
' → logprob: -10.783384323120117
    8. ' :
' → logprob: -12.033384323120117
    9. ' :' → logprob: -12.533384323120117
    10. ' or' → logprob: -12.908384323120117

Token 258: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006394077208824456
    2. ' return' → logprob: -7.87563943862915
    3. 'return' → logprob: -8.500638961791992
    4. '
' → logprob: -10.250638961791992
    5. '   ' → logprob: -11.000638961791992
    6. '           ' → logprob: -13.750638961791992
    7. '        
' → logprob: -14.250638961791992
    8. '	return' → logprob: -14.875638961791992
    9. ':return' → logprob: -14.875638961791992
    10. ':
' → logprob: -15.250638961791992

Token 259: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6972787976264954
    2. '       ' → logprob: -0.8222787976264954
    3. 'return' (adapté à ' return') → logprob: -2.9472787380218506
    4. '   ' → logprob: -4.82227897644043
    5. '
' → logprob: -6.32227897644043
    6. ' False' → logprob: -9.19727897644043
    7. 'False' → logprob: -9.94727897644043
    8. '           ' → logprob: -10.07227897644043
    9. ' 
' → logprob: -10.19727897644043
    10. '	return' → logprob: -10.44727897644043

Token 260: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.4778495728969574
    2. 'False' → logprob: -0.9778496026992798
    3. '"' → logprob: -5.60284948348999
    4. ' "' → logprob: -9.602849960327148
    5. ''' → logprob: -12.227849960327148
    6. '(False' → logprob: -12.727849960327148
    7. ' ' → logprob: -14.227849960327148
    8. ' '' → logprob: -14.352849960327148
    9. '"No' → logprob: -14.477849960327148
    10. ' None' → logprob: -15.352849960327148

Token 261: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08546043932437897
    2. '<|end|>' → logprob: -3.4604604244232178
    3. '
' → logprob: -3.7104604244232178
    4. '    
' → logprob: -3.9604604244232178
    5. ' 
' → logprob: -6.710460662841797
    6. '  
' → logprob: -6.835460662841797
    7. '    ' → logprob: -6.960460662841797
    8. ')' → logprob: -7.335460662841797
    9. '  ' → logprob: -7.585460662841797
    10. '<|end|>' → logprob: -7.710460662841797

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006167678628116846
    2. '    
' → logprob: -5.631167888641357
    3. '
' → logprob: -6.631167888641357
    4. 'diff' → logprob: -7.006167888641357
    5. '#' → logprob: -9.1311674118042
    6. 'balance' → logprob: -10.3811674118042
    7. '  
' → logprob: -11.0061674118042
    8. ' diff' → logprob: -11.2561674118042
    9. '```' → logprob: -11.2561674118042
    10. ' 
' → logprob: -11.3811674118042

Token 263: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5952349305152893
    2. 'diff' → logprob: -1.3452348709106445
    3. 'out' → logprob: -2.7202348709106445
    4. 'plus' → logprob: -3.0952348709106445
    5. 'count' → logprob: -3.4702348709106445
    6. 'cnt' → logprob: -3.9702348709106445
    7. 'in' → logprob: -4.3452348709106445
    8. 'start' → logprob: -5.3452348709106445
    9. 'balance' → logprob: -5.9702348709106445
    10. 'degree' → logprob: -6.3452348709106445

Token 264: ' Check' (ID: 6208)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.12794356048107147
    2. 'diff' → logprob: -2.627943515777588
    3. 'plus' → logprob: -3.627943515777588
    4. 'count' → logprob: -4.627943515777588
    5. 'cnt' → logprob: -5.127943515777588
    6. ' start' → logprob: -6.002943515777588
    7. ' diff' → logprob: -7.127943515777588
    8. 'balance' → logprob: -7.502943515777588
    9. '#' → logprob: -8.127943992614746
    10. 'delta' → logprob: -8.127943992614746

Token 265: ' Euler' (ID: 167577)
  Prédit: ' balance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' balance' → logprob: -1.8552531003952026
    2. '   ' → logprob: -2.230253219604492
    3. ' abs' → logprob: -2.230253219604492
    4. 'abs' → logprob: -2.355253219604492
    5. ' degree' → logprob: -2.480253219604492
    6. 'degree' → logprob: -2.480253219604492
    7. '(abs' → logprob: -2.605253219604492
    8. ' diff' → logprob: -2.855253219604492
    9. ' (' → logprob: -2.980253219604492
    10. 'balance' → logprob: -2.980253219604492

Token 266: 'ian' (ID: 1200)
  Prédit: 'ian'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ian' → logprob: -0.016999363899230957
    2. 'path' → logprob: -4.391999244689941
    3. ' path' → logprob: -5.766999244689941
    4. '_path' → logprob: -7.016999244689941
    5. ' conditions' → logprob: -8.641999244689941
    6. ' condition' → logprob: -9.641999244689941
    7. 'condition' → logprob: -10.141999244689941
    8. '#' → logprob: -11.016999244689941
    9. 'character' → logprob: -11.141999244689941
    10. '   ' → logprob: -11.266999244689941

Token 267: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.5258687734603882
    2. 'path' → logprob: -0.9008687734603882
    3. ' trail' → logprob: -7.025868892669678
    4. '_path' → logprob: -7.150868892669678
    5. ' conditions' → logprob: -7.400868892669678
    6. ' condition' → logprob: -8.65086841583252
    7. 'Path' → logprob: -10.02586841583252
    8. 'condition' → logprob: -10.15086841583252
    9. 'trail' → logprob: -10.27586841583252
    10. 'ian' → logprob: -10.40086841583252

Token 268: ' conditions' (ID: 6409)
  Prédit: ' conditions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conditions' → logprob: -0.5991119742393494
    2. '   ' → logprob: -0.8491119742393494
    3. ' condition' → logprob: -4.349112033843994
    4. ' criteria' → logprob: -5.724112033843994
    5. ':' → logprob: -6.224112033843994
    6. ' for' → logprob: -6.849112033843994
    7. 'conditions' → logprob: -7.224112033843994
    8. '_conditions' → logprob: -7.224112033843994
    9. ' or' → logprob: -7.349112033843994
    10. '_condition' → logprob: -8.724111557006836

Token 269: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04426669329404831
    2. 'diff' → logprob: -3.544266700744629
    3. '
' → logprob: -4.794266700744629
    4. '    
' → logprob: -6.544266700744629
    5. 'counts' → logprob: -7.419266700744629
    6. ' out' → logprob: -7.544266700744629
    7. 'count' → logprob: -7.794266700744629
    8. ' for' → logprob: -7.919266700744629
    9. 'dif' → logprob: -7.919266700744629
    10. 'start' → logprob: -8.169266700744629

Token 270: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09114715456962585
    2. 'start' → logprob: -2.7161471843719482
    3. 'plus' → logprob: -4.591146945953369
    4. ' start' → logprob: -5.091146945953369
    5. 'count' → logprob: -6.091146945953369
    6. 'diff' → logprob: -7.091146945953369
    7. 'cnt' → logprob: -7.341146945953369
    8. ' plus' → logprob: -7.716146945953369
    9. '    
' → logprob: -8.841147422790527
    10. 'in' → logprob: -9.591147422790527

Token 271: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.15798132121562958
    2. ' start' → logprob: -2.1579813957214355
    3. 'plus' → logprob: -3.6579813957214355
    4. ' plus' → logprob: -5.4079813957214355
    5. '   ' → logprob: -9.407980918884277
    6. 'diff' → logprob: -9.407980918884277
    7. 'cnt' → logprob: -9.657980918884277
    8. 'count' → logprob: -10.032980918884277
    9. 'in' → logprob: -12.032980918884277
    10. 's' → logprob: -12.157980918884277

Token 272: '_points' (ID: 30070)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.28542256355285645
    2. '_vertices' → logprob: -2.2854225635528564
    3. '_points' → logprob: -2.7854225635528564
    4. '_vertex' → logprob: -2.9104225635528564
    5. '_candidates' → logprob: -4.410422325134277
    6. 's' → logprob: -5.035422325134277
    7. '_node' → logprob: -5.535422325134277
    8. '_tokens' → logprob: -6.035422325134277
    9. '_count' → logprob: -7.035422325134277
    10. '_point' → logprob: -7.035422325134277

Token 273: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07940919697284698
    2. '=' → logprob: -2.579409122467041
    3. ',' → logprob: -7.579409122467041
    4. '<|end|>' → logprob: -12.8294095993042
    5. ' ' → logprob: -13.2044095993042
    6. '   ' → logprob: -13.9544095993042
    7. ' ,' → logprob: -14.3294095993042
    8. '=[]' → logprob: -14.7044095993042
    9. '  ' → logprob: -14.9544095993042
    10. '```' → logprob: -15.5794095993042

Token 274: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014055903302505612
    2. 'end' → logprob: -7.001405715942383
    3. 'sum' → logprob: -8.001405715942383
    4. ' ' → logprob: -9.126405715942383
    5. '[end' → logprob: -10.376405715942383
    6. '[]' → logprob: -11.876405715942383
    7. '[]
' → logprob: -12.501405715942383
    8. 'out' → logprob: -12.626405715942383
    9. ' end' → logprob: -13.251405715942383
    10. '[' → logprob: -13.751405715942383

Token 275: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003391590900719166
    2. 'sum' → logprob: -6.378391742706299
    3. 'end' → logprob: -6.878391742706299
    4. '[end' → logprob: -7.503391742706299
    5. '[' → logprob: -10.25339126586914
    6. '[]
' → logprob: -10.37839126586914
    7. ' ' → logprob: -11.25339126586914
    8. '[]' → logprob: -11.37839126586914
    9. 'out' → logprob: -12.25339126586914
    10. '1' → logprob: -12.87839126586914

Token 276: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 277: '   ' (ID: 271)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.3664891719818115
    2. ' end' → logprob: -1.2414891719818115
    3. ',end' → logprob: -4.866489410400391
    4. '<|end|>' → logprob: -5.991489410400391
    5. '[end' → logprob: -6.491489410400391
    6. 'for' → logprob: -6.616489410400391
    7. 'stop' → logprob: -6.866489410400391
    8. '(end' → logprob: -6.991489410400391
    9. '
' → logprob: -7.366489410400391
    10. ' for' → logprob: -7.741489410400391

Token 278: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.038045283406972885
    2. ' end' → logprob: -3.2880451679229736
    3. '   ' → logprob: -12.788044929504395
    4. 'for' → logprob: -14.788044929504395
    5. '```' → logprob: -15.038044929504395
    6. '	end' → logprob: -16.03804588317871
    7. '=end' → logprob: -16.78804588317871
    8. '    ' → logprob: -16.78804588317871
    9. '  ' → logprob: -16.91304588317871
    10. 'diff' → logprob: -17.03804588317871

Token 279: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -1.1041145626222715e-05
    2. 'points' → logprob: -11.875011444091797
    3. '_' → logprob: -12.750011444091797
    4. 's' → logprob: -15.000011444091797
    5. '_tokens' → logprob: -15.125011444091797
    6. '_POINTS' → logprob: -15.125011444091797
    7. 'Points' → logprob: -16.125011444091797
    8. ' points' → logprob: -17.000011444091797
    9. '```' → logprob: -17.250011444091797
    10. '\' → logprob: -17.250011444091797

Token 280: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759396553039551
    2. ' =' → logprob: -0.8259396553039551
    3. ' ' → logprob: -15.575939178466797
    4. '<|end|>' → logprob: -17.700939178466797
    5. ' +=' → logprob: -17.950939178466797
    6. '+=' → logprob: -19.075939178466797
    7. '```' → logprob: -19.325939178466797
    8. ')' → logprob: -19.450939178466797
    9. ',' → logprob: -19.575939178466797
    10. '＝' → logprob: -19.825939178466797

Token 281: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019287518225610256
    2. ' ' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.626928329467773
    4. '```' → logprob: -18.376928329467773
    5. '=' → logprob: -18.501928329467773
    6. '1' → logprob: -18.689428329467773
    7. '۰' → logprob: -18.814428329467773
    8. '  ' → logprob: -19.314428329467773
    9. '<|end|>' → logprob: -19.626928329467773
    10. '[' → logprob: -20.001928329467773

Token 282: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '۰' → logprob: -18.500036239624023
    4. '=' → logprob: -18.750036239624023
    5. '   ' → logprob: -19.125036239624023
    6. '1' → logprob: -20.375036239624023
    7. '```' → logprob: -20.375036239624023
    8. '  ' → logprob: -20.500036239624023
    9. '০' → logprob: -20.875036239624023
    10. '[' → logprob: -20.937536239624023

Token 283: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04547993838787079
    2. '   ' → logprob: -3.1704800128936768
    3. ' for' → logprob: -6.920479774475098
    4. '  
' → logprob: -7.670479774475098
    5. 'for' → logprob: -7.920479774475098
    6. ' 
' → logprob: -8.170479774475098
    7. '    
' → logprob: -8.295479774475098
    8. '   
' → logprob: -10.545479774475098
    9. '
' → logprob: -10.795479774475098
    10. '<|end|>' → logprob: -11.170479774475098

Token 284: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5536993741989136
    2. '   ' → logprob: -1.0536993741989136
    3. ' for' → logprob: -2.678699493408203
    4. 'for' → logprob: -5.428699493408203
    5. ' 
' → logprob: -6.178699493408203
    6. '  
' → logprob: -7.428699493408203
    7. '    
' → logprob: -7.803699493408203
    8. '<|end|>' → logprob: -9.303699493408203
    9. '   
' → logprob: -9.553699493408203
    10. '	for' → logprob: -9.803699493408203

Token 285: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5854480862617493
    2. 'for' (adapté à ' for') → logprob: -0.8354480862617493
    3. '   ' → logprob: -4.710448265075684
    4. '
' → logprob: -7.710448265075684
    5. '	for' → logprob: -11.960448265075684
    6. ' 
' → logprob: -12.460448265075684
    7. '    
' → logprob: -13.335448265075684
    8. ' ' → logprob: -13.710448265075684
    9. '  
' → logprob: -14.585448265075684
    10. '```' → logprob: -14.585448265075684

Token 286: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10164046287536621
    2. ' i' → logprob: -2.351640462875366
    3. 'v' → logprob: -6.601640701293945
    4. ' v' → logprob: -9.726640701293945
    5. 'c' → logprob: -11.226640701293945
    6. ' c' → logprob: -13.851640701293945
    7. 'ch' → logprob: -14.726640701293945
    8. '	i' → logprob: -16.101640701293945
    9. '   ' → logprob: -16.601640701293945
    10. ' ' → logprob: -16.726640701293945

Token 287: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038068462163209915
    2. 'in' → logprob: -3.2880685329437256
    3. ' ' → logprob: -10.913068771362305
    4. '   ' → logprob: -13.038068771362305
    5. 'range' → logprob: -13.538068771362305
    6. 'n' → logprob: -13.538068771362305
    7. '	in' → logprob: -13.913068771362305
    8. '  ' → logprob: -14.038068771362305
    9. ',' → logprob: -14.413068771362305
    10. 'In' → logprob: -14.788068771362305

Token 288: ' used' (ID: 2061)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007329129730351269
    2. ' range' → logprob: -7.500732898712158
    3. 'used' → logprob: -8.625733375549316
    4. ' used' → logprob: -15.000733375549316
    5. '(range' → logprob: -17.500732421875
    6. '   ' → logprob: -17.875732421875
    7. ' ' → logprob: -18.125732421875
    8. '	range' → logprob: -18.500732421875
    9. '```' → logprob: -18.875732421875
    10. 'ran' → logprob: -19.000732421875

Token 289: '_vertices' (ID: 96842)
  Prédit: '_vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vertices' → logprob: -3.2020991056924686e-05
    2. 'vertices' → logprob: -10.500032424926758
    3. 'range' → logprob: -13.375032424926758
    4. '_indices' → logprob: -13.750032424926758
    5. 'Vertices' → logprob: -13.750032424926758
    6. '_' → logprob: -15.625032424926758
    7. '(vertices' → logprob: -15.750032424926758
    8. ' vertices' → logprob: -16.125032424926758
    9. '```' → logprob: -16.500032424926758
    10. '.vertices' → logprob: -17.375032424926758

Token 290: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05505288764834404
    2. ':
' → logprob: -2.9300529956817627
    3. '):
' → logprob: -9.930052757263184
    4. '   ' → logprob: -10.055052757263184
    5. '       ' → logprob: -10.555052757263184
    6. '=' → logprob: -11.180052757263184
    7. '<|end|>' → logprob: -11.805052757263184
    8. '):' → logprob: -11.930052757263184
    9. ' :' → logprob: -12.055052757263184
    10. '():
' → logprob: -12.055052757263184

Token 291: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022632593754678965
    2. ':' → logprob: -6.627263069152832
    3. '<|end|>' → logprob: -7.502263069152832
    4. ':
' → logprob: -9.002263069152832
    5. ' if' → logprob: -9.502263069152832
    6. '   ' → logprob: -10.252263069152832
    7. '```' → logprob: -10.502263069152832
    8. '        
' → logprob: -10.627263069152832
    9. ',' → logprob: -10.877263069152832
    10. '<|end|>' → logprob: -11.252263069152832

Token 292: ' diff' (ID: 8868)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.030757486820220947
    2. 'if' → logprob: -3.905757427215576
    3. '       ' → logprob: -5.155757427215576
    4. '   ' → logprob: -6.280757427215576
    5. 'diff' (adapté à ' diff') → logprob: -6.405757427215576
    6. ' diff' → logprob: -7.155757427215576
    7. '    ' → logprob: -10.030757904052734
    8. ' cnt' → logprob: -11.780757904052734
    9. ' in' → logprob: -12.030757904052734
    10. ' ' → logprob: -12.280757904052734

Token 293: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38688406348228455
    2. ' =' → logprob: -1.136884093284607
    3. '=int' → logprob: -12.886883735656738
    4. '   ' → logprob: -13.011883735656738
    5. '==' → logprob: -13.261883735656738
    6. '+=' → logprob: -13.511883735656738
    7. ' +=' → logprob: -13.511883735656738
    8. ' ==' → logprob: -13.636883735656738
    9. ' ' → logprob: -13.761883735656738
    10. '<|end|>' → logprob: -15.386883735656738

Token 294: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.42879173159599304
    2. ' out' → logprob: -1.0537917613983154
    3. 'abs' → logprob: -9.928791999816895
    4. '   ' → logprob: -10.678791999816895
    5. '	out' → logprob: -12.178791999816895
    6. ' abs' → logprob: -12.178791999816895
    7. ' ' → logprob: -12.803791999816895
    8. '(out' → logprob: -12.928791999816895
    9. 'ind' → logprob: -13.803791999816895
    10. '```' → logprob: -14.553791999816895

Token 295: 'degree' (ID: 98659)
  Prédit: 'degree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degree' → logprob: -7.896309739408025e-07
    2. '[i' → logprob: -14.500000953674316
    3. 'egree' → logprob: -15.375000953674316
    4. '-' → logprob: -18.875
    5. ' degree' → logprob: -19.0
    6. '-degree' → logprob: -19.0
    7. 'difference' → logprob: -19.5
    8. 'deg' → logprob: -19.625
    9. '_degree' → logprob: -19.875
    10. '```' → logprob: -20.125

Token 296: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.500000953674316
    3. 'i' → logprob: -15.875000953674316
    4. ' [' → logprob: -16.375
    5. '```' → logprob: -17.375
    6. '[
' → logprob: -17.625
    7. ' i' → logprob: -18.75
    8. '(i' → logprob: -18.875
    9. '[I' → logprob: -19.375
    10. '[u' → logprob: -19.5

Token 297: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06260199099779129
    2. '-' → logprob: -2.8126020431518555
    3. '[i' → logprob: -7.4376020431518555
    4. ' ' → logprob: -10.687602043151855
    5. ']' → logprob: -12.062602043151855
    6. '-i' → logprob: -12.312602043151855
    7. '[' → logprob: -12.562602043151855
    8. ' ' → logprob: -13.187602043151855
    9. ')' → logprob: -13.437602043151855
    10. '   ' → logprob: -13.812602043151855

Token 298: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06197138875722885
    2. '-' → logprob: -2.811971426010132
    3. ' ' → logprob: -13.561971664428711
    4. '-i' → logprob: -13.936971664428711
    5. ' ' → logprob: -14.811971664428711
    6. '[i' → logprob: -14.936971664428711
    7. '   ' → logprob: -15.186971664428711
    8. '           ' → logprob: -15.811971664428711
    9. '       ' → logprob: -16.18697166442871
    10. '
' → logprob: -16.81197166442871

Token 299: ' inde' (ID: 6741)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.06204957887530327
    2. ' inde' → logprob: -2.812049627304077
    3. 'inde' → logprob: -9.937049865722656
    4. '1' → logprob: -11.562049865722656
    5. '(ind' → logprob: -12.437049865722656
    6. ' ind' → logprob: -12.437049865722656
    7. 'in' → logprob: -12.687049865722656
    8. ' ' → logprob: -12.687049865722656
    9. ' in' → logprob: -12.937049865722656
    10. '   ' → logprob: -13.437049865722656

Token 300: 'gree' (ID: 44021)
  Prédit: 'gree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gree' → logprob: -0.00013691288768313825
    2. 'g' → logprob: -9.125137329101562
    3. 'egree' → logprob: -10.750137329101562
    4. 'degree' → logprob: -12.125137329101562
    5. 'gr' → logprob: -14.625137329101562
    6. 'grees' → logprob: -15.625137329101562
    7. 'green' → logprob: -15.875137329101562
    8. 'gee' → logprob: -16.125137329101562
    9. '   ' → logprob: -17.250137329101562
    10. '1' → logprob: -17.250137329101562

Token 301: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00012642296496778727
    2. '(i' → logprob: -9.000126838684082
    3. 'i' → logprob: -13.750126838684082
    4. '       ' → logprob: -14.625126838684082
    5. '[' → logprob: -14.750126838684082
    6. '   ' → logprob: -15.125126838684082
    7. ' [' → logprob: -15.875126838684082
    8. '[
' → logprob: -15.875126838684082
    9. '```' → logprob: -16.125125885009766
    10. ')' → logprob: -16.250125885009766

Token 302: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.053881753236055374
    2. '<|end|>' → logprob: -3.6788816452026367
    3. '       ' → logprob: -4.428881645202637
    4. ')
' → logprob: -4.678881645202637
    5. '
' → logprob: -5.678881645202637
    6. '   ' → logprob: -6.803881645202637
    7. '<|end|>' → logprob: -7.428881645202637
    8. ']' → logprob: -7.678881645202637
    9. ')>' → logprob: -9.303881645202637
    10. '           ' → logprob: -10.428881645202637

Token 303: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011484331917017698
    2. '<|end|>' → logprob: -7.001148223876953
    3. '   ' → logprob: -9.126148223876953
    4. ' if' → logprob: -10.376148223876953
    5. '<|end|>' → logprob: -10.876148223876953
    6. ',' → logprob: -10.876148223876953
    7. ' ' → logprob: -11.376148223876953
    8. '
' → logprob: -11.876148223876953
    9. ':' → logprob: -12.126148223876953
    10. ':
' → logprob: -12.251148223876953

Token 304: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6483910083770752
    2. ' if' → logprob: -0.7733910083770752
    3. '   ' → logprob: -4.523390769958496
    4. 'if' (adapté à ' if') → logprob: -5.398390769958496
    5. ' ' → logprob: -8.773390769958496
    6. '    ' → logprob: -10.148390769958496
    7. '
' → logprob: -10.273390769958496
    8. '  ' → logprob: -11.523390769958496
    9. '	if' → logprob: -11.523390769958496
    10. '```' → logprob: -11.898390769958496

Token 305: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.16026505827903748
    2. ' diff' → logprob: -1.9102650880813599
    3. '	diff' → logprob: -10.28526496887207
    4. '   ' → logprob: -12.78526496887207
    5. '(diff' → logprob: -13.53526496887207
    6. ' abs' → logprob: -14.16026496887207
    7. 'abs' → logprob: -14.53526496887207
    8. ' ' → logprob: -14.78526496887207
    9. '    ' → logprob: -14.91026496887207
    10. '  ' → logprob: -15.41026496887207

Token 306: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5759692788124084
    2. ' ==' → logprob: -0.8259692788124084
    3. ' not' → logprob: -11.200969696044922
    4. '>' → logprob: -12.075969696044922
    5. '()==' → logprob: -13.325969696044922
    6. ')==' → logprob: -13.450969696044922
    7. '=' → logprob: -13.450969696044922
    8. ' ' → logprob: -13.700969696044922
    9. ' >' → logprob: -14.075969696044922
    10. '==-' → logprob: -14.075969696044922

Token 307: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023071514442563057
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -15.75023078918457
    4. '0' → logprob: -17.00023078918457
    5. '  ' → logprob: -18.00023078918457
    6. '```' → logprob: -18.75023078918457
    7. '
' → logprob: -19.12523078918457
    8. '    ' → logprob: -19.62523078918457
    9. '１' → logprob: -19.75023078918457
    10. '     ' → logprob: -19.87523078918457

Token 308: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '0' → logprob: -16.125017166137695
    4. '   ' → logprob: -17.500017166137695
    5. '-' → logprob: -18.875017166137695
    6. '

' → logprob: -19.125017166137695
    7. '１' → logprob: -19.250017166137695
    8. '  ' → logprob: -19.500017166137695
    9. '```' → logprob: -19.562517166137695
    10. '
' → logprob: -20.000017166137695

Token 309: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28151240944862366
    2. ':
' → logprob: -1.4065123796463013
    3. '       ' → logprob: -8.281512260437012
    4. '<|end|>' → logprob: -9.781512260437012
    5. ',' → logprob: -11.031512260437012
    6. '):
' → logprob: -11.156512260437012
    7. '   ' → logprob: -11.781512260437012
    8. '<|end|>' → logprob: -12.531512260437012
    9. '           ' → logprob: -13.406512260437012
    10. ':start' → logprob: -13.406512260437012

Token 310: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005849750246852636
    2. 'start' → logprob: -6.130849838256836
    3. ' start' → logprob: -6.255849838256836
    4. '           ' → logprob: -6.380849838256836
    5. '
' → logprob: -11.380849838256836
    6. '   ' → logprob: -11.380849838256836
    7. ',start' → logprob: -12.380849838256836
    8. ':start' → logprob: -12.630849838256836
    9. '[start' → logprob: -12.880849838256836
    10. '```' → logprob: -13.255849838256836

Token 311: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.20167948305606842
    2. ' start' → logprob: -1.7016794681549072
    3. '       ' → logprob: -8.451679229736328
    4. '           ' → logprob: -9.951679229736328
    5. '   ' → logprob: -12.951679229736328
    6. '
' → logprob: -13.201679229736328
    7. '               ' → logprob: -15.201679229736328
    8. '	start' → logprob: -15.951679229736328
    9. '[start' → logprob: -16.076679229736328
    10. '```' → logprob: -16.201679229736328

Token 312: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -4.320199877838604e-07
    2. 'points' → logprob: -15.0
    3. '_tokens' → logprob: -18.0
    4. '_POINTS' → logprob: -19.125
    5. ' points' → logprob: -19.625
    6. '_point' → logprob: -19.625
    7. 'Points' → logprob: -19.625
    8. '_' → logprob: -20.5
    9. 's' → logprob: -20.75
    10. '\' → logprob: -21.0

Token 313: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1602243334054947
    2. ' +=' → logprob: -1.9102243185043335
    3. ']+=' → logprob: -15.910223960876465
    4. '+' → logprob: -17.16022491455078
    5. '=' → logprob: -17.16022491455078
    6. '+='' → logprob: -19.28522491455078
    7. '   ' → logprob: -19.41022491455078
    8. '+="' → logprob: -19.66022491455078
    9. '    ' → logprob: -20.16022491455078
    10. '+=(' → logprob: -20.66022491455078

Token 314: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '<|end|>' → logprob: -20.750045776367188
    4. '   ' → logprob: -21.000045776367188
    5. '```' → logprob: -21.375045776367188
    6. '
' → logprob: -21.500045776367188
    7. '  ' → logprob: -23.125045776367188
    8. '１' → logprob: -23.250045776367188
    9. '۱' → logprob: -23.375045776367188
    10. ' ' → logprob: -23.625045776367188

Token 315: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -19.375001907348633
    4. '   ' → logprob: -20.500001907348633
    5. '
' → logprob: -20.875001907348633
    6. '۱' → logprob: -21.500001907348633
    7. 'a' → logprob: -21.625001907348633
    8. '１' → logprob: -21.812501907348633
    9. 'def' → logprob: -22.000001907348633
    10. '-' → logprob: -22.125001907348633

Token 316: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5060207843780518
    2. '<|end|>' → logprob: -1.5060207843780518
    3. 'elif' → logprob: -1.8810207843780518
    4. '
' → logprob: -4.381020545959473
    5. ' elif' → logprob: -4.881020545959473
    6. '   ' → logprob: -7.131020545959473
    7. '<|end|>' → logprob: -7.756020545959473
    8. '           ' → logprob: -7.756020545959473
    9. '	elif' → logprob: -8.256020545959473
    10. '\
' → logprob: -9.131020545959473

Token 317: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45926132798194885
    2. 'elif' → logprob: -1.0842612981796265
    3. ' elif' → logprob: -4.084261417388916
    4. '<|end|>' → logprob: -4.334261417388916
    5. '	elif' → logprob: -10.459260940551758
    6. '   ' → logprob: -10.584260940551758
    7. '
' → logprob: -10.959260940551758
    8. ' ' → logprob: -11.334260940551758
    9. '<|end|>' → logprob: -11.334260940551758
    10. '```' → logprob: -11.834260940551758

Token 318: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.14749115705490112
    2. ' elif' → logprob: -2.147491216659546
    3. '       ' → logprob: -3.897491216659546
    4. '	elif' → logprob: -10.147491455078125
    5. '<|end|>' → logprob: -11.522491455078125
    6. '   ' → logprob: -13.022491455078125
    7. ' ' → logprob: -13.022491455078125
    8. '```' → logprob: -13.147491455078125
    9. '        ' → logprob: -13.647491455078125
    10. '    ' → logprob: -14.022491455078125

Token 319: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.5231936573982239
    2. 'diff' → logprob: -0.8981936573982239
    3. '	diff' → logprob: -9.773193359375
    4. '(diff' → logprob: -12.148193359375
    5. ' ' → logprob: -12.648193359375
    6. '   ' → logprob: -13.648193359375
    7. '-' → logprob: -14.148193359375
    8. '_diff' → logprob: -14.773193359375
    9. '.diff' → logprob: -15.085693359375
    10. ' -' → logprob: -15.148193359375

Token 320: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.13155458867549896
    2. '==' → logprob: -2.13155460357666
    3. '==-' → logprob: -5.38155460357666
    4. ' ' → logprob: -12.75655460357666
    5. ']==' → logprob: -12.88155460357666
    6. ')==' → logprob: -12.88155460357666
    7. '===' → logprob: -13.38155460357666
    8. '  ' → logprob: -14.38155460357666
    9. '()==' → logprob: -14.38155460357666
    10. '   ' → logprob: -14.88155460357666

Token 321: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00861528143286705
    2. ' -' → logprob: -4.758615493774414
    3. ' ' → logprob: -14.383615493774414
    4. '   ' → logprob: -16.633615493774414
    5. '1' → logprob: -17.008615493774414
    6. '
' → logprob: -18.008615493774414
    7. '−' → logprob: -18.133615493774414
    8. '  ' → logprob: -18.258615493774414
    9. '	' → logprob: -18.383615493774414
    10. '```' → logprob: -18.633615493774414

Token 322: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '```' → logprob: -18.062530517578125
    4. '１' → logprob: -18.187530517578125
    5. '   ' → logprob: -18.562530517578125
    6. '-' → logprob: -18.937530517578125
    7. '۱' → logprob: -19.062530517578125
    8. '१' → logprob: -19.625030517578125
    9. '১' → logprob: -20.000030517578125
    10. '  ' → logprob: -20.125030517578125

Token 323: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08003343641757965
    2. '           ' → logprob: -3.080033540725708
    3. ':
' → logprob: -3.580033540725708
    4. '       ' → logprob: -5.955033302307129
    5. ',' → logprob: -9.205033302307129
    6. ' :' → logprob: -9.205033302307129
    7. '          ' → logprob: -9.205033302307129
    8. '<|end|>' → logprob: -9.705033302307129
    9. '   ' → logprob: -10.955033302307129
    10. '        ' → logprob: -11.080033302307129

Token 324: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24782219529151917
    2. ' end' → logprob: -1.7478221654891968
    3. 'end' → logprob: -3.6228222846984863
    4. '           ' → logprob: -3.9978222846984863
    5. '[end' → logprob: -9.247821807861328
    6. '        ' → logprob: -10.122821807861328
    7. '(end' → logprob: -10.247821807861328
    8. '   ' → logprob: -10.247821807861328
    9. '=end' → logprob: -10.497821807861328
    10. ',end' → logprob: -11.247821807861328

Token 325: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.6931653618812561
    2. ' end' → logprob: -0.6931653618812561
    3. '1' → logprob: -12.06816577911377
    4. '   ' → logprob: -12.06816577911377
    5. '       ' → logprob: -12.44316577911377
    6. '           ' → logprob: -13.94316577911377
    7. '(end' → logprob: -14.06816577911377
    8. '[end' → logprob: -14.94316577911377
    9. '	end' → logprob: -15.06816577911377
    10. ' ' → logprob: -15.69316577911377

Token 326: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -6.704273118884885e-07
    2. 'points' → logprob: -15.125000953674316
    3. 'Points' → logprob: -16.125
    4. '```' → logprob: -16.75
    5. '_POINTS' → logprob: -16.875
    6. '_' → logprob: -18.0
    7. '_positions' → logprob: -18.375
    8. '_pts' → logprob: -19.5
    9. '   ' → logprob: -19.625
    10. '_point' → logprob: -19.75

Token 327: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31326621770858765
    2. ' +=' → logprob: -1.3132662773132324
    3. '   ' → logprob: -13.438265800476074
    4. '+' → logprob: -13.688265800476074
    5. ']+=' → logprob: -13.813265800476074
    6. '=' → logprob: -15.313265800476074
    7. ' ' → logprob: -15.563265800476074
    8. '    ' → logprob: -15.813265800476074
    9. '<|end|>' → logprob: -16.31326675415039
    10. '       ' → logprob: -16.93826675415039

Token 328: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016034485772252083
    2. ' ' → logprob: -4.1410346031188965
    3. '```' → logprob: -16.016035079956055
    4. '   ' → logprob: -16.266035079956055
    5. '<|end|>' → logprob: -17.516035079956055
    6. '0' → logprob: -17.766035079956055
    7. '  ' → logprob: -18.641035079956055
    8. ' ' → logprob: -19.016035079956055
    9. '-' → logprob: -19.391035079956055
    10. '	' → logprob: -19.578535079956055

Token 329: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014013137842994183
    2. ' ' → logprob: -8.875140190124512
    3. '```' → logprob: -16.250139236450195
    4. '<|end|>' → logprob: -16.500139236450195
    5. '   ' → logprob: -17.250139236450195
    6. '0' → logprob: -18.000139236450195
    7. '
' → logprob: -18.750139236450195
    8. '۱' → logprob: -18.937639236450195
    9. '-' → logprob: -19.125139236450195
    10. '１' → logprob: -19.312639236450195

Token 330: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019591135787777603
    2. '<|end|>' → logprob: -9.250195503234863
    3. 'elif' → logprob: -10.000195503234863
    4. '   ' → logprob: -10.750195503234863
    5. ' elif' → logprob: -11.250195503234863
    6. '
' → logprob: -11.625195503234863
    7. '           ' → logprob: -13.000195503234863
    8. '	' → logprob: -13.375195503234863
    9. '	elif' → logprob: -13.750195503234863
    10. '        ' → logprob: -14.125195503234863

Token 331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03987952321767807
    2. 'elif' → logprob: -3.289879560470581
    3. ' elif' → logprob: -7.289879322052002
    4. '   ' → logprob: -7.414879322052002
    5. 'else' → logprob: -7.914879322052002
    6. '```' → logprob: -9.03987979888916
    7. '	elif' → logprob: -10.16487979888916
    8. ' ' → logprob: -11.91487979888916
    9. ' else' → logprob: -12.03987979888916
    10. '<|end|>' → logprob: -12.03987979888916

Token 332: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.10622353851795197
    2. 'else' → logprob: -2.7312235832214355
    3. ' elif' → logprob: -3.7312235832214355
    4. '       ' → logprob: -4.7312235832214355
    5. ' else' → logprob: -6.3562235832214355
    6. '   ' → logprob: -6.8562235832214355
    7. ' ' → logprob: -10.356223106384277
    8. '	elif' → logprob: -10.606223106384277
    9. '```' → logprob: -12.231223106384277
    10. '    ' → logprob: -12.856223106384277

Token 333: ' diff' (ID: 8868)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.6299750804901123
    2. 'diff' → logprob: -1.6299750804901123
    3. ' diff' → logprob: -1.8799750804901123
    4. 'abs' → logprob: -2.1299750804901123
    5. '	diff' → logprob: -10.879975318908691
    6. '   ' → logprob: -13.004975318908691
    7. ' ' → logprob: -13.129975318908691
    8. '(abs' → logprob: -13.754975318908691
    9. '(diff' → logprob: -13.754975318908691
    10. '  ' → logprob: -15.379975318908691

Token 334: ' !=' (ID: 1666)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.13336965441703796
    2. '!=' → logprob: -2.7583696842193604
    3. ' !=' → logprob: -3.5083696842193604
    4. 'not' → logprob: -3.8833696842193604
    5. '       ' → logprob: -5.008369445800781
    6. '           ' → logprob: -6.383369445800781
    7. '()!=' → logprob: -7.258369445800781
    8. '>' → logprob: -7.508369445800781
    9. '	not' → logprob: -8.883369445800781
    10. '        ' → logprob: -8.883369445800781

Token 335: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013259568950161338
    2. ' ' → logprob: -6.626326084136963
    3. '   ' → logprob: -18.626325607299805
    4. ' ' → logprob: -18.876325607299805
    5. '  ' → logprob: -19.626325607299805
    6. '```' → logprob: -19.626325607299805
    7. '۰' → logprob: -19.626325607299805
    8. ')' → logprob: -20.501325607299805
    9. '1' → logprob: -20.938825607299805
    10. '=' → logprob: -20.938825607299805

Token 336: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '۰' → logprob: -20.000011444091797
    4. '   ' → logprob: -21.125011444091797
    5. '<|end|>' → logprob: -21.125011444091797
    6. ')' → logprob: -22.375011444091797
    7. '  ' → logprob: -22.625011444091797
    8. '=' → logprob: -23.250011444091797
    9. '０' → logprob: -23.375011444091797
    10. '০' → logprob: -23.500011444091797

Token 337: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2953651547431946
    2. '           ' → logprob: -2.04536509513855
    3. ':
' → logprob: -2.29536509513855
    4. ':return' → logprob: -3.92036509513855
    5. '       ' → logprob: -5.295365333557129
    6. ' return' → logprob: -8.420365333557129
    7. 'return' → logprob: -8.920365333557129
    8. ',' → logprob: -9.295365333557129
    9. '               ' → logprob: -9.420365333557129
    10. '	       ' → logprob: -10.045365333557129

Token 338: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015922266757115722
    2. 'return' → logprob: -6.50159215927124
    3. ' return' → logprob: -9.501592636108398
    4. '       ' → logprob: -11.251592636108398
    5. '               ' → logprob: -13.501592636108398
    6. '```' → logprob: -14.751592636108398
    7. '   ' → logprob: -15.251592636108398
    8. '          ' → logprob: -15.751592636108398
    9. '
' → logprob: -16.8765926361084
    10. '		' → logprob: -17.5015926361084

Token 339: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02623342163860798
    2. '       ' → logprob: -4.526233196258545
    3. ' return' → logprob: -4.776233196258545
    4. '           ' → logprob: -5.026233196258545
    5. '               ' → logprob: -10.151233673095703
    6. '   ' → logprob: -10.276233673095703
    7. '```' → logprob: -12.401233673095703
    8. '	return' → logprob: -13.276233673095703
    9. ' ' → logprob: -15.776233673095703
    10. '
' → logprob: -15.776233673095703

Token 340: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.5048530030981055e-06
    2. ' False' → logprob: -13.500001907348633
    3. 'false' → logprob: -22.125001907348633
    4. 'True' → logprob: -22.750001907348633
    5. '(False' → logprob: -24.375001907348633
    6. '=False' → logprob: -25.125001907348633
    7. '_false' → logprob: -25.500001907348633
    8. 'None' → logprob: -26.000001907348633
    9. 'F' → logprob: -26.750001907348633
    10. '0' → logprob: -27.000001907348633

Token 341: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009016326628625393
    2. '
' → logprob: -5.009016513824463
    3. 'return' → logprob: -6.759016513824463
    4. '    
' → logprob: -7.134016513824463
    5. ' return' → logprob: -9.009016036987305
    6. '  
' → logprob: -9.509016036987305
    7. '```' → logprob: -9.759016036987305
    8. '	return' → logprob: -10.384016036987305
    9. '       ' → logprob: -11.134016036987305
    10. '        
' → logprob: -11.884016036987305

Token 342: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013009035028517246
    2. 'if' → logprob: -5.138009071350098
    3. '
' → logprob: -5.513009071350098
    4. 'return' → logprob: -6.263009071350098
    5. '    
' → logprob: -7.388009071350098
    6. '```' → logprob: -8.138009071350098
    7. ' if' → logprob: -9.263009071350098
    8. '  
' → logprob: -10.263009071350098
    9. 'for' → logprob: -10.388009071350098
    10. ' return' → logprob: -10.763009071350098

Token 343: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.18255209922790527
    2. '   ' → logprob: -2.1825520992279053
    3. 'return' → logprob: -2.9325520992279053
    4. ' if' → logprob: -7.182552337646484
    5. ' return' → logprob: -9.807552337646484
    6. '```' → logprob: -10.807552337646484
    7. '
' → logprob: -11.932552337646484
    8. '  ' → logprob: -14.057552337646484
    9. '	if' → logprob: -14.307552337646484
    10. '	return' → logprob: -14.807552337646484

Token 344: ' (' (ID: 350)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.0090714693069458
    2. '(not' → logprob: -1.0090714693069458
    3. ' (' → logprob: -2.0090713500976562
    4. 'not' → logprob: -2.6340713500976562
    5. '(start' → logprob: -2.7590713500976562
    6. '   ' → logprob: -7.634071350097656
    7. '(len' → logprob: -8.134071350097656
    8. 'start' → logprob: -8.509071350097656
    9. ' ' → logprob: -8.634071350097656
    10. '(n' → logprob: -8.884071350097656

Token 345: 'start' (ID: 5236)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.06267018616199493
    2. 'start' → logprob: -2.8126702308654785
    3. '(not' → logprob: -8.31266975402832
    4. 'not' → logprob: -8.43766975402832
    5. ' (' → logprob: -8.93766975402832
    6. '   ' → logprob: -9.56266975402832
    7. ' start' → logprob: -11.06266975402832
    8. '((' → logprob: -11.93766975402832
    9. ' not' → logprob: -12.81266975402832
    10. ' ' → logprob: -12.93766975402832

Token 346: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -1.9361264946837764e-07
    2. 'points' → logprob: -16.5
    3. ' points' → logprob: -18.25
    4. '_POINTS' → logprob: -18.625
    5. '_vertices' → logprob: -18.75
    6. '_tokens' → logprob: -19.25
    7. 'Points' → logprob: -19.875
    8. '_point' → logprob: -19.875
    9. '_' → logprob: -20.0
    10. '	points' → logprob: -20.0

Token 347: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.160273477435112
    2. ' ==' → logprob: -1.9102734327316284
    3. '>' → logprob: -10.910273551940918
    4. '<=' → logprob: -10.910273551940918
    5. ' <=' → logprob: -12.535273551940918
    6. ' >' → logprob: -12.660273551940918
    7. ' not' → logprob: -13.285273551940918
    8. ',' → logprob: -13.535273551940918
    9. '0' → logprob: -14.410273551940918
    10. '   ' → logprob: -14.410273551940918

Token 348: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028449371457099915
    2. '1' → logprob: -5.87784481048584
    3. ' ' → logprob: -10.12784481048584
    4. 'end' → logprob: -16.877845764160156
    5. '   ' → logprob: -18.377845764160156
    6. '```' → logprob: -18.377845764160156
    7. '==' → logprob: -19.502845764160156
    8. '

' → logprob: -19.627845764160156
    9. '=' → logprob: -19.752845764160156
    10. '
' → logprob: -19.877845764160156

Token 349: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0788913294672966
    2. '1' → logprob: -2.5788912773132324
    3. ' ' → logprob: -13.45389175415039
    4. '
' → logprob: -16.82889175415039
    5. '   ' → logprob: -16.95389175415039
    6. '```' → logprob: -17.70389175415039
    7. '

' → logprob: -18.82889175415039
    8. '=' → logprob: -19.57889175415039
    9. 'start' → logprob: -20.20389175415039
    10. '#' → logprob: -20.45389175415039

Token 350: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16875652968883514
    2. ' or' → logprob: -1.9187564849853516
    3. 'and' → logprob: -4.793756484985352
    4. 'or' → logprob: -8.668756484985352
    5. '   ' → logprob: -10.418756484985352
    6. ' ' → logprob: -11.668756484985352
    7. '    ' → logprob: -13.793756484985352
    8. ')' → logprob: -13.793756484985352
    9. '       ' → logprob: -13.918756484985352
    10. '```' → logprob: -14.793756484985352

Token 351: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.20302525162696838
    2. ' end' → logprob: -1.703025221824646
    3. '(end' → logprob: -6.4530253410339355
    4. ' (' → logprob: -10.328024864196777
    5. '(' → logprob: -13.203024864196777
    6. ' ' → logprob: -15.828024864196777
    7. '   ' → logprob: -16.453025817871094
    8. '
' → logprob: -16.953025817871094
    9. '	end' → logprob: -17.953025817871094
    10. '[end' → logprob: -18.203025817871094

Token 352: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -5.5577775128767826e-06
    2. 'points' → logprob: -12.125005722045898
    3. '_' → logprob: -17.0000057220459
    4. 'Points' → logprob: -17.5000057220459
    5. '_POINTS' → logprob: -17.5000057220459
    6. '```' → logprob: -18.7500057220459
    7. '_positions' → logprob: -19.1250057220459
    8. '_tokens' → logprob: -19.5000057220459
    9. 'oints' → logprob: -19.8750057220459
    10. '_point' → logprob: -20.1250057220459

Token 353: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38701382279396057
    2. ' ==' → logprob: -1.1370137929916382
    3. ')==' → logprob: -9.26201343536377
    4. ')' → logprob: -10.01201343536377
    5. '0' → logprob: -13.38701343536377
    6. ']==' → logprob: -14.76201343536377
    7. '===' → logprob: -15.01201343536377
    8. '==
' → logprob: -15.26201343536377
    9. ' ' → logprob: -16.137014389038086
    10. '()==' → logprob: -16.137014389038086

Token 354: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.375036239624023
    4. '1' → logprob: -16.500036239624023
    5. '۰' → logprob: -17.250036239624023
    6. '=' → logprob: -18.250036239624023
    7. ')' → logprob: -18.312536239624023
    8. '```' → logprob: -18.312536239624023
    9. '  ' → logprob: -18.500036239624023
    10. '==' → logprob: -18.687536239624023

Token 355: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.967624019831419e-05
    2. ' ' → logprob: -9.750060081481934
    3. '1' → logprob: -14.125060081481934
    4. '۰' → logprob: -15.000060081481934
    5. ')' → logprob: -16.625059127807617
    6. '<|end|>' → logprob: -17.312559127807617
    7. '```' → logprob: -18.062559127807617
    8. '=' → logprob: -18.187559127807617
    9. '০' → logprob: -18.250059127807617
    10. '   ' → logprob: -18.250059127807617

Token 356: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7954958821064793e-05
    2. ' )' → logprob: -11.000018119812012
    3. '   ' → logprob: -13.875018119812012
    4. 'or' → logprob: -16.125017166137695
    5. '       ' → logprob: -16.875017166137695
    6. ' or' → logprob: -17.000017166137695
    7. ')
' → logprob: -18.250017166137695
    8. '    ' → logprob: -18.375017166137695
    9. '),' → logprob: -18.750017166137695
    10. ' ' → logprob: -19.250017166137695

Token 357: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.018888697028160095
    2. '       ' → logprob: -4.143888473510742
    3. 'or' → logprob: -6.268888473510742
    4. ':' → logprob: -7.268888473510742
    5. ':
' → logprob: -8.643888473510742
    6. '   ' → logprob: -10.268888473510742
    7. ':return' → logprob: -10.393888473510742
    8. '	or' → logprob: -12.143888473510742
    9. '      ' → logprob: -12.893888473510742
    10. '    ' → logprob: -13.268888473510742

Token 358: ' (' (ID: 350)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.386983186006546
    2. ' (' → logprob: -1.1369831562042236
    3. '   ' → logprob: -9.386982917785645
    4. '(' → logprob: -11.261982917785645
    5. '  ' → logprob: -12.261982917785645
    6. '(abs' → logprob: -12.386982917785645
    7. ' ' → logprob: -12.511982917785645
    8. '(stop' → logprob: -14.386982917785645
    9. '    ' → logprob: -14.761982917785645
    10. '[start' → logprob: -14.886982917785645

Token 359: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.023249903693795204
    2. ' start' → logprob: -3.773249864578247
    3. '(start' → logprob: -12.398249626159668
    4. '   ' → logprob: -15.523249626159668
    5. ' ' → logprob: -17.273250579833984
    6. ' (' → logprob: -17.398250579833984
    7. '	start' → logprob: -18.273250579833984
    8. '
' → logprob: -19.273250579833984
    9. '[start' → logprob: -19.523250579833984
    10. '           ' → logprob: -20.273250579833984

Token 360: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -9.014684110297821e-06
    2. '_tokens' → logprob: -11.625008583068848
    3. '_POINTS' → logprob: -17.250009536743164
    4. 'points' → logprob: -17.500009536743164
    5. 'Points' → logprob: -17.625009536743164
    6. '_positions' → logprob: -18.500009536743164
    7. '```' → logprob: -18.500009536743164
    8. '_token' → logprob: -18.875009536743164
    9. '_point' → logprob: -19.750009536743164
    10. '_parts' → logprob: -19.875009536743164

Token 361: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3132713735103607
    2. '==' → logprob: -1.313271403312683
    3. '<=' → logprob: -12.563271522521973
    4. ' <=' → logprob: -12.813271522521973
    5. '==
' → logprob: -14.563271522521973
    6. ')==' → logprob: -14.813271522521973
    7. ' ' → logprob: -14.938271522521973
    8. '1' → logprob: -14.938271522521973
    9. ' in' → logprob: -15.063271522521973
    10. '<|end|>' → logprob: -15.188271522521973

Token 362: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -19.0000057220459
    4. '۱' → logprob: -20.2500057220459
    5. '１' → logprob: -21.0000057220459
    6. '```' → logprob: -21.1250057220459
    7. '  ' → logprob: -21.6250057220459
    8. '=' → logprob: -22.1250057220459
    9. '
' → logprob: -22.4375057220459
    10. '१' → logprob: -22.8125057220459

Token 363: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.7500057220459
    4. '۱' → logprob: -19.7500057220459
    5. '=' → logprob: -20.4375057220459
    6. '```' → logprob: -20.6250057220459
    7. '0' → logprob: -20.7500057220459
    8. '１' → logprob: -20.9375057220459
    9. '  ' → logprob: -21.1875057220459
    10. '१' → logprob: -21.7500057220459

Token 364: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01815052703022957
    2. 'and' → logprob: -4.018150329589844
    3. '   ' → logprob: -14.643150329589844
    4. ' ' → logprob: -16.518150329589844
    5. '	and' → logprob: -16.893150329589844
    6. '    ' → logprob: -17.018150329589844
    7. '       ' → logprob: -18.643150329589844
    8. '```' → logprob: -18.768150329589844
    9. ' и' → logprob: -19.268150329589844
    10. ' &&' → logprob: -20.018150329589844

Token 365: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.4740773141384125
    2. 'end' → logprob: -0.9740773439407349
    3. ' ' → logprob: -15.724077224731445
    4. '(end' → logprob: -16.599077224731445
    5. '   ' → logprob: -17.099077224731445
    6. '	end' → logprob: -17.724077224731445
    7. '[end' → logprob: -19.099077224731445
    8. '1' → logprob: -19.599077224731445
    9. '       ' → logprob: -19.849077224731445
    10. '=end' → logprob: -19.974077224731445

Token 366: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -4.008129963040119e-06
    2. 'points' → logprob: -12.500003814697266
    3. 'end' → logprob: -17.125003814697266
    4. '```' → logprob: -17.500003814697266
    5. 'point' → logprob: -17.625003814697266
    6. '_POINTS' → logprob: -17.750003814697266
    7. '_point' → logprob: -17.875003814697266
    8. '_' → logprob: -18.000003814697266
    9. '_vertices' → logprob: -18.375003814697266
    10. '   ' → logprob: -19.125003814697266

Token 367: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16022564470767975
    2. '==' → logprob: -1.9102256298065186
    3. '1' → logprob: -14.160225868225098
    4. ' ' → logprob: -15.785225868225098
    5. ')==' → logprob: -15.785225868225098
    6. '```' → logprob: -16.03522491455078
    7. '===' → logprob: -16.16022491455078
    8. ']==' → logprob: -16.41022491455078
    9. ')' → logprob: -16.91022491455078
    10. '==
' → logprob: -17.41022491455078

Token 368: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000488110730657354
    2. ' ' → logprob: -7.62548828125
    3. '   ' → logprob: -16.50048828125
    4. '```' → logprob: -16.87548828125
    5. '0' → logprob: -17.25048828125
    6. ')' → logprob: -19.75048828125
    7. '
' → logprob: -19.75048828125
    8. '  ' → logprob: -20.43798828125
    9. '１' → logprob: -20.68798828125
    10. '۱' → logprob: -20.75048828125

Token 369: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '0' → logprob: -16.8750057220459
    4. '   ' → logprob: -19.5000057220459
    5. '```' → logprob: -19.5000057220459
    6. '-' → logprob: -20.6250057220459
    7. ')' → logprob: -21.0625057220459
    8. '１' → logprob: -21.1875057220459
    9. '۱' → logprob: -21.2500057220459
    10. '  ' → logprob: -21.7500057220459

Token 370: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12803219258785248
    2. '):' → logprob: -2.1280322074890137
    3. ')' → logprob: -6.878032207489014
    4. '   ' → logprob: -10.378031730651855
    5. ':' → logprob: -10.753031730651855
    6. ':
' → logprob: -11.253031730651855
    7. '):
' → logprob: -12.378031730651855
    8. ' ):
' → logprob: -13.503031730651855
    9. '):

' → logprob: -13.628031730651855
    10. '       ' → logprob: -14.753031730651855

Token 371: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2471589798224159e-05
    2. ' return' → logprob: -12.250012397766113
    3. '   ' → logprob: -12.875012397766113
    4. 'return' → logprob: -13.000012397766113
    5. ':' → logprob: -13.500012397766113
    6. '
' → logprob: -13.875012397766113
    7. ':
' → logprob: -15.375012397766113
    8. '           ' → logprob: -16.12501335144043
    9. ':return' → logprob: -17.00001335144043
    10. '      ' → logprob: -17.37501335144043

Token 372: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09446557611227036
    2. 'return' → logprob: -2.844465494155884
    3. ' return' → logprob: -3.469465494155884
    4. '   ' → logprob: -7.094465732574463
    5. '           ' → logprob: -12.094465255737305
    6. ' ' → logprob: -12.844465255737305
    7. '     ' → logprob: -13.969465255737305
    8. '    ' → logprob: -14.219465255737305
    9. '	return' → logprob: -14.219465255737305
    10. '      ' → logprob: -14.344465255737305

Token 373: ' Additionally' (ID: 25563)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.13255581259727478
    2. ' return' → logprob: -2.1325557231903076
    3. '       ' → logprob: -5.632555961608887
    4. '   ' → logprob: -6.257555961608887
    5. '#' → logprob: -9.757555961608887
    6. 'for' → logprob: -11.132555961608887
    7. 'stack' → logprob: -11.382555961608887
    8. ' stack' → logprob: -12.132555961608887
    9. ' for' → logprob: -12.882555961608887
    10. ' ' → logprob: -12.882555961608887

Token 374: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0722687765955925
    2. '   ' → logprob: -2.9472687244415283
    3. ' return' → logprob: -5.322268962860107
    4. 'return' → logprob: -5.322268962860107
    5. ' check' → logprob: -5.697268962860107
    6. 'check' → logprob: -6.822268962860107
    7. ',' → logprob: -6.947268962860107
    8. '
' → logprob: -7.322268962860107
    9. ' for' → logprob: -7.697268962860107
    10. 'for' → logprob: -8.32226848602295

Token 375: ' check' (ID: 2371)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.604836642742157
    2. ' return' → logprob: -1.2298367023468018
    3. '       ' → logprob: -1.9798367023468018
    4. '   ' → logprob: -4.104836463928223
    5. ' for' → logprob: -6.229836463928223
    6. '#' → logprob: -6.479836463928223
    7. 'for' → logprob: -6.604836463928223
    8. 'def' → logprob: -7.854836463928223
    9. ' #' → logprob: -8.229836463928223
    10. 'pass' → logprob: -8.729836463928223

Token 376: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07749709486961365
    2. '       ' → logprob: -3.5774970054626465
    3. 'return' → logprob: -4.5774970054626465
    4. ' for' → logprob: -4.7024970054626465
    5. ' if' → logprob: -4.7024970054626465
    6. 'for' → logprob: -5.0774970054626465
    7. ' return' → logprob: -5.4524970054626465
    8. 'def' → logprob: -6.3274970054626465
    9. ' that' → logprob: -6.3274970054626465
    10. 'if' → logprob: -6.5774970054626465

Token 377: ' first' (ID: 1577)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5211664438247681
    2. '   ' → logprob: -2.0211663246154785
    3. 'def' → logprob: -2.5211663246154785
    4. '#' → logprob: -3.6461663246154785
    5. ' return' → logprob: -3.6461663246154785
    6. 'graph' → logprob: -3.8961663246154785
    7. 'visited' → logprob: -4.0211663246154785
    8. 'words' → logprob: -4.0211663246154785
    9. 'reachable' → logprob: -4.8961663246154785
    10. 'presence' → logprob: -5.0211663246154785

Token 378: ' letter' (ID: 10263)
  Prédit: ' word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.09327859431505203
    2. 'word' → logprob: -2.593278646469116
    3. ' token' → logprob: -5.593278408050537
    4. '_word' → logprob: -5.718278408050537
    5. 'token' → logprob: -5.968278408050537
    6. ' letter' → logprob: -6.218278408050537
    7. '_token' → logprob: -7.343278408050537
    8. ' character' → logprob: -7.843278408050537
    9. ' and' → logprob: -8.468278884887695
    10. 'letter' → logprob: -8.593278884887695

Token 379: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3741966485977173
    2. ' =' → logprob: -2.3741965293884277
    3. ' if' → logprob: -2.6241965293884277
    4. '       ' → logprob: -3.2491965293884277
    5. ' of' → logprob: -3.3741965293884277
    6. ' and' → logprob: -4.249196529388428
    7. ' for' → logprob: -4.249196529388428
    8. ' in' → logprob: -4.499196529388428
    9. ' ==' → logprob: -4.749196529388428
    10. '<|end|>' → logprob: -4.749196529388428

Token 380: ' first' (ID: 1577)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.18045738339424133
    2. ' words' → logprob: -1.805457353591919
    3. 'the' → logprob: -8.05545711517334
    4. ' the' → logprob: -8.30545711517334
    5. '   ' → logprob: -9.68045711517334
    6. '(words' → logprob: -10.18045711517334
    7. 'word' → logprob: -11.30545711517334
    8. '       ' → logprob: -11.68045711517334
    9. 'def' → logprob: -12.05545711517334
    10. '
' → logprob: -12.43045711517334

Token 381: ' word' (ID: 2195)
  Prédit: ' word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.12698249518871307
    2. 'word' → logprob: -2.1269824504852295
    3. ' and' → logprob: -11.126982688903809
    4. '_word' → logprob: -11.501982688903809
    5. 'def' → logprob: -12.251982688903809
    6. ' words' → logprob: -12.376982688903809
    7. '[word' → logprob: -12.376982688903809
    8. 'words' → logprob: -12.501982688903809
    9. '	word' → logprob: -12.501982688903809
    10. '   ' → logprob: -12.751982688903809

Token 382: ' matches' (ID: 15248)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18462751805782318
    2. ' ==' → logprob: -1.9346275329589844
    3. ' and' → logprob: -4.559627532958984
    4. '==' → logprob: -4.809627532958984
    5. '   ' → logprob: -6.559627532958984
    6. ',' → logprob: -6.809627532958984
    7. ' is' → logprob: -7.559627532958984
    8. ' if' → logprob: -7.684627532958984
    9. ' for' → logprob: -7.809627532958984
    10. ' =' → logprob: -8.184627532958984

Token 383: ' last' (ID: 2174)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7885844111442566
    2. '   ' → logprob: -2.0385844707489014
    3. ' words' → logprob: -2.0385844707489014
    4. ' and' → logprob: -2.1635844707489014
    5. ' ord' → logprob: -2.7885844707489014
    6. ' if' → logprob: -3.0385844707489014
    7. ' (' → logprob: -4.663584232330322
    8. ' or' → logprob: -4.788584232330322
    9. ' return' → logprob: -4.788584232330322
    10. '    ' → logprob: -5.413584232330322

Token 384: ' letter' (ID: 10263)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2572622299194336
    2. ' word' → logprob: -2.5072622299194336
    3. 'word' → logprob: -3.6322622299194336
    4. ' of' → logprob: -3.6322622299194336
    5. '_word' → logprob: -3.7572622299194336
    6. ' if' → logprob: -4.632262229919434
    7. '_' → logprob: -4.632262229919434
    8. '       ' → logprob: -4.757262229919434
    9. ' and' → logprob: -5.132262229919434
    10. ' ' → logprob: -5.757262229919434

Token 385: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.40740832686424255
    2. '   ' → logprob: -1.407408356666565
    3. '       ' → logprob: -3.4074082374572754
    4. ' words' → logprob: -4.532408237457275
    5. 'of' → logprob: -4.657408237457275
    6. ' (' → logprob: -5.157408237457275
    7. 'words' → logprob: -5.282408237457275
    8. ' if' → logprob: -5.532408237457275
    9. '[' → logprob: -6.032408237457275
    10. '(words' → logprob: -6.032408237457275

Token 386: ' last' (ID: 2174)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.48775285482406616
    2. ' last' → logprob: -1.612752914428711
    3. 'last' → logprob: -2.112752914428711
    4. ' words' → logprob: -2.737752914428711
    5. 'the' → logprob: -8.237752914428711
    6. ' the' → logprob: -8.612752914428711
    7. 'word' → logprob: -8.737752914428711
    8. 'def' → logprob: -8.987752914428711
    9. 'first' → logprob: -8.987752914428711
    10. 'second' → logprob: -9.737752914428711

Token 387: ' word' (ID: 2195)
  Prédit: ' word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.532989501953125
    2. 'word' → logprob: -0.907989501953125
    3. '_word' → logprob: -5.157989501953125
    4. '   ' → logprob: -6.282989501953125
    5. 'words' → logprob: -6.782989501953125
    6. ' words' → logprob: -7.657989501953125
    7. '_words' → logprob: -8.157989501953125
    8. 'def' → logprob: -9.032989501953125
    9. '	word' → logprob: -10.032989501953125
    10. ' ' → logprob: -10.407989501953125

Token 388: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019199562957510352
    2. '   ' → logprob: -6.751919746398926
    3. ' and' → logprob: -8.126919746398926
    4. ',' → logprob: -8.751919746398926
    5. ':' → logprob: -10.001919746398926
    6. '
' → logprob: -10.251919746398926
    7. '        
' → logprob: -10.376919746398926
    8. '           ' → logprob: -10.501919746398926
    9. '<|end|>' → logprob: -10.626919746398926
    10. ' return' → logprob: -10.751919746398926

Token 389: ' path' (ID: 3104)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.4866270124912262
    2. ' words' → logprob: -1.9866269826889038
    3. 'the' → logprob: -2.1116271018981934
    4. ' the' → logprob: -2.2366271018981934
    5. ' code' → logprob: -5.736627101898193
    6. ' sequence' → logprob: -6.111627101898193
    7. 'code' → logprob: -6.486627101898193
    8. 'input' → logprob: -6.611627101898193
    9. 'chain' → logprob: -6.611627101898193
    10. 'sequence' → logprob: -6.611627101898193

Token 390: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013325639069080353
    2. ':' → logprob: -5.5133256912231445
    3. '   ' → logprob: -5.6383256912231445
    4. '
' → logprob: -6.1383256912231445
    5. '        
' → logprob: -6.6383256912231445
    6. ':
' → logprob: -7.6383256912231445
    7. '           ' → logprob: -7.8883256912231445
    8. ',' → logprob: -8.263325691223145
    9. '        ' → logprob: -8.763325691223145
    10. '<|end|>' → logprob: -8.763325691223145

Token 391: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015821128617972136
    2. '   ' → logprob: -7.626582145690918
    3. ':' → logprob: -7.751582145690918
    4. '        
' → logprob: -8.751582145690918
    5. ':
' → logprob: -9.001582145690918
    6. '
' → logprob: -9.126582145690918
    7. '           ' → logprob: -9.251582145690918
    8. ' return' → logprob: -9.501582145690918
    9. ',' → logprob: -11.001582145690918
    10. 'return' → logprob: -11.376582145690918

Token 392: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011280066333711147
    2. ' return' → logprob: -5.011280059814453
    3. 'return' → logprob: -5.761280059814453
    4. ' if' → logprob: -7.261280059814453
    5. '   ' → logprob: -7.886280059814453
    6. '
' → logprob: -8.761280059814453
    7. 'if' → logprob: -9.511280059814453
    8. '        
' → logprob: -10.761280059814453
    9. ' for' → logprob: -11.136280059814453
    10. '           ' → logprob: -11.261280059814453

Token 393: ' Since' (ID: 12265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04857521504163742
    2. ' return' → logprob: -3.5485751628875732
    3. '   ' → logprob: -4.298575401306152
    4. 'return' → logprob: -5.923575401306152
    5. ' if' → logprob: -6.173575401306152
    6. 'if' → logprob: -9.548575401306152
    7. '
' → logprob: -10.048575401306152
    8. ' for' → logprob: -10.298575401306152
    9. '        
' → logprob: -10.298575401306152
    10. '           ' → logprob: -10.423575401306152

Token 394: ' a' (ID: 261)
  Prédit: ' words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' words' → logprob: -0.3726774752140045
    2. 'words' → logprob: -1.7476774454116821
    3. ' the' → logprob: -2.4976775646209717
    4. 'the' → logprob: -4.122677326202393
    5. ' not' → logprob: -4.247677326202393
    6. ' len' → logprob: -4.872677326202393
    7. 'len' → logprob: -4.997677326202393
    8. ' can' → logprob: -6.497677326202393
    9. 'can' → logprob: -6.622677326202393
    10. ' sys' → logprob: -6.997677326202393

Token 395: ' Euler' (ID: 167577)
  Prédit: 'shir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shir' → logprob: -0.8855545520782471
    2. 'll' → logprob: -1.510554552078247
    3. ' cycle' → logprob: -3.010554552078247
    4. 'cycle' → logprob: -3.135554552078247
    5. 'def' → logprob: -3.510554552078247
    6. 'return' → logprob: -3.635554552078247
    7. 'c' → logprob: -3.760554552078247
    8. 'path' → logprob: -3.760554552078247
    9. 'n' → logprob: -3.760554552078247
    10. 's' → logprob: -4.010554313659668

Token 396: 'ian' (ID: 1200)
  Prédit: 'ian'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ian' → logprob: -0.015143114142119884
    2. 'path' → logprob: -4.640142917633057
    3. ' path' → logprob: -5.265142917633057
    4. '_path' → logprob: -8.890143394470215
    5. '   ' → logprob: -10.140143394470215
    6. ')' → logprob: -11.515143394470215
    7. '#' → logprob: -12.890143394470215
    8. ' cycle' → logprob: -13.140143394470215
    9. 'cycle' → logprob: -13.140143394470215
    10. 'Path' → logprob: -13.515143394470215

Token 397: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.25946545600891113
    2. 'path' → logprob: -1.5094654560089111
    3. ' circuit' → logprob: -5.009465217590332
    4. ' trail' → logprob: -8.509465217590332
    5. '_path' → logprob: -8.634465217590332
    6. 'c' → logprob: -8.759465217590332
    7. ' cycle' → logprob: -9.009465217590332
    8. 'cycle' → logprob: -9.134465217590332
    9. 'trail' → logprob: -9.759465217590332
    10. 'circle' → logprob: -13.509465217590332

Token 398: ' uses' (ID: 8844)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.3930049240589142
    2. ' must' → logprob: -2.268004894256592
    3. ' exists' → logprob: -2.393004894256592
    4. ' is' → logprob: -3.393004894256592
    5. 'can' → logprob: -4.143004894256592
    6. 'must' → logprob: -4.268004894256592
    7. ' that' → logprob: -4.518004894256592
    8. ',' → logprob: -5.143004894256592
    9. 'exists' → logprob: -5.268004894256592
    10. ' or' → logprob: -5.393004894256592

Token 399: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.1287611722946167
    2. ' all' → logprob: -2.1287612915039062
    3. 'every' → logprob: -7.128761291503906
    4. 'each' → logprob: -7.253761291503906
    5. 'edges' → logprob: -9.128761291503906
    6. ' every' → logprob: -9.253761291503906
    7. 'import' → logprob: -10.503761291503906
    8. 'the' → logprob: -11.128761291503906
    9. ' each' → logprob: -11.253761291503906
    10. ' edges' → logprob: -11.753761291503906

Token 400: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.11112774908542633
    2. 'edges' → logprob: -2.3611278533935547
    3. ' words' → logprob: -4.986127853393555
    4. 'words' → logprob: -5.736127853393555
    5. ' vertices' → logprob: -7.861127853393555
    6. 'vertices' → logprob: -8.611127853393555
    7. '_edges' → logprob: -9.736127853393555
    8. 'tokens' → logprob: -10.111127853393555
    9. ' the' → logprob: -10.236127853393555
    10. 'the' → logprob: -10.486127853393555

Token 401: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019646786153316498
    2. '
' → logprob: -4.019646644592285
    3. '   ' → logprob: -7.394646644592285
    4. ':
' → logprob: -8.394646644592285
    5. ',' → logprob: -8.894646644592285
    6. ':' → logprob: -9.019646644592285
    7. '        
' → logprob: -9.269646644592285
    8. ' return' → logprob: -9.519646644592285
    9. '           ' → logprob: -9.644646644592285
    10. 'return' → logprob: -9.769646644592285

Token 402: ' it' (ID: 480)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28507158160209656
    2. ' return' → logprob: -1.535071611404419
    3. 'return' → logprob: -3.535071611404419
    4. '   ' → logprob: -5.91007137298584
    5. ' for' → logprob: -8.28507137298584
    6. '    ' → logprob: -8.91007137298584
    7. '           ' → logprob: -9.66007137298584
    8. ' if' → logprob: -9.78507137298584
    9. '#' → logprob: -10.66007137298584
    10. ' last' → logprob: -10.78507137298584

Token 403: ' corresponds' (ID: 66938)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.271799921989441
    2. ' is' → logprob: -1.521799921989441
    3. ' means' → logprob: -1.896799921989441
    4. ' will' → logprob: -2.1468000411987305
    5. ' should' → logprob: -3.2718000411987305
    6. ' would' → logprob: -3.3968000411987305
    7. '#' → logprob: -3.5218000411987305
    8. ' return' → logprob: -4.0218000411987305
    9. '   ' → logprob: -4.1468000411987305
    10. '       ' → logprob: -4.1468000411987305

Token 404: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.10646705329418182
    2. 'to' → logprob: -2.3564670085906982
    3. '   ' → logprob: -5.106467247009277
    4. '       ' → logprob: -8.731467247009277
    5. ' exactly' → logprob: -11.606467247009277
    6. '    ' → logprob: -12.481467247009277
    7. '<|end|>' → logprob: -12.481467247009277
    8. '_to' → logprob: -14.231467247009277
    9. '  ' → logprob: -14.231467247009277
    10. 'exact' → logprob: -14.356467247009277

Token 405: ' using' (ID: 2360)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.551353931427002
    2. 'a' → logprob: -1.676353931427002
    3. ' the' → logprob: -2.301353931427002
    4. ' an' → logprob: -3.176353931427002
    5. 'the' → logprob: -3.301353931427002
    6. ' forming' → logprob: -4.176353931427002
    7. ' using' → logprob: -4.426353931427002
    8. 'using' → logprob: -4.926353931427002
    9. 'an' → logprob: -5.301353931427002
    10. ' visiting' → logprob: -5.676353931427002

Token 406: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.4742594063282013
    2. 'all' → logprob: -0.9742593765258789
    3. 'each' → logprob: -9.724259376525879
    4. ' every' → logprob: -10.224259376525879
    5. 'every' → logprob: -10.224259376525879
    6. ' each' → logprob: -11.099259376525879
    7. 'the' → logprob: -11.599259376525879
    8. 'words' → logprob: -11.974259376525879
    9. ' the' → logprob: -12.224259376525879
    10. ' words' → logprob: -12.599259376525879

Token 407: ' words' (ID: 6391)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.42405885457992554
    2. ' words' → logprob: -1.2990589141845703
    3. ' edges' → logprob: -3.4240589141845703
    4. 'edges' → logprob: -3.4240589141845703
    5. 'tokens' → logprob: -5.17405891418457
    6. ' tokens' → logprob: -7.17405891418457
    7. '   ' → logprob: -8.17405891418457
    8. 'the' → logprob: -8.29905891418457
    9. '(words' → logprob: -8.79905891418457
    10. '_words' → logprob: -9.17405891418457

Token 408: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1500404179096222
    2. '   ' → logprob: -2.0250403881073
    3. '
' → logprob: -5.525040626525879
    4. ':' → logprob: -6.900040626525879
    5. ':
' → logprob: -7.400040626525879
    6. '        
' → logprob: -7.775040626525879
    7. '    
' → logprob: -8.150040626525879
    8. ',' → logprob: -8.525040626525879
    9. ' return' → logprob: -8.775040626525879
    10. 'return' → logprob: -8.775040626525879

Token 409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038276609033346176
    2. '   ' → logprob: -3.2882766723632812
    3. '
' → logprob: -8.788276672363281
    4. ' return' → logprob: -9.913276672363281
    5. 'return' → logprob: -11.038276672363281
    6. '    
' → logprob: -12.038276672363281
    7. '        
' → logprob: -12.538276672363281
    8. '           ' → logprob: -13.288276672363281
    9. ',' → logprob: -13.288276672363281
    10. '<|end|>' → logprob: -13.663276672363281

Token 410: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020301392301917076
    2. 'return' → logprob: -4.395301342010498
    3. ' return' → logprob: -5.145301342010498
    4. '   ' → logprob: -6.270301342010498
    5. '           ' → logprob: -11.020301818847656
    6. ' for' → logprob: -11.770301818847656
    7. 'for' → logprob: -12.395301818847656
    8. '
' → logprob: -12.645301818847656
    9. 'if' → logprob: -13.145301818847656
    10. ' ' → logprob: -13.270301818847656

Token 411: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4450456500053406
    2. '   ' → logprob: -1.0700457096099854
    3. 'return' → logprob: -4.445045471191406
    4. ' return' → logprob: -5.445045471191406
    5. '
' → logprob: -8.945045471191406
    6. '           ' → logprob: -11.445045471191406
    7. '    ' → logprob: -12.945045471191406
    8. '        
' → logprob: -13.070045471191406
    9. '    
' → logprob: -13.070045471191406
    10. ' ' → logprob: -13.570045471191406

Token 412: ' Euler' (ID: 167577)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8376753330230713
    2. '       ' → logprob: -1.0876753330230713
    3. '   ' → logprob: -2.3376753330230713
    4. ' the' → logprob: -3.2126753330230713
    5. 'return' → logprob: -3.2126753330230713
    6. ' if' → logprob: -3.7126753330230713
    7. ' not' → logprob: -4.212675094604492
    8. '    ' → logprob: -6.087675094604492
    9. ' we' → logprob: -6.087675094604492
    10. ' you' → logprob: -6.587675094604492

Token 413: 'ian' (ID: 1200)
  Prédit: 'ian'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ian' → logprob: -0.0007283978629857302
    2. '   ' → logprob: -7.250728607177734
    3. 'arian' → logprob: -11.875728607177734
    4. 'path' → logprob: -12.500728607177734
    5. ' path' → logprob: -13.250728607177734
    6. ')' → logprob: -13.750728607177734
    7. 'ians' → logprob: -13.875728607177734
    8. '       ' → logprob: -14.375728607177734
    9. 'IAN' → logprob: -14.500728607177734
    10. 'return' → logprob: -14.625728607177734

Token 414: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.18299296498298645
    2. 'path' → logprob: -1.807992935180664
    3. '_path' → logprob: -5.807992935180664
    4. 'return' → logprob: -9.682992935180664
    5. ' paths' → logprob: -10.182992935180664
    6. ' trail' → logprob: -10.807992935180664
    7. ' circuit' → logprob: -10.807992935180664
    8. ' return' → logprob: -11.057992935180664
    9. 'Path' → logprob: -11.307992935180664
    10. '
' → logprob: -11.432992935180664

Token 415: ' doesn't' (ID: 8740)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.9557477235794067
    2. ' is' → logprob: -1.0807477235794067
    3. ' must' → logprob: -2.330747604370117
    4. ' return' → logprob: -3.080747604370117
    5. 'return' → logprob: -3.830747604370117
    6. ' requires' → logprob: -4.080747604370117
    7. ' does' → logprob: -4.580747604370117
    8. ' conditions' → logprob: -4.955747604370117
    9. ' may' → logprob: -4.955747604370117
    10. ' implies' → logprob: -5.080747604370117

Token 416: ' ensure' (ID: 6757)
  Prédit: ' guarantee'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' guarantee' → logprob: -0.024394050240516663
    2. 'necessarily' → logprob: -4.5243940353393555
    3. ' necessarily' → logprob: -5.0243940353393555
    4. ' return' → logprob: -6.7743940353393555
    5. 'return' → logprob: -6.7743940353393555
    6. ' ensure' → logprob: -6.8993940353393555
    7. ' require' → logprob: -7.1493940353393555
    8. ' always' → logprob: -7.2743940353393555
    9. 'gu' → logprob: -7.6493940353393555
    10. ' guarante' → logprob: -8.024394035339355

Token 417: ' the' (ID: 290)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.3360957205295563
    2. ' the' → logprob: -1.3360956907272339
    3. ' a' → logprob: -4.711095809936523
    4. 'that' → logprob: -5.211095809936523
    5. 'the' → logprob: -5.961095809936523
    6. ' all' → logprob: -6.211095809936523
    7. ' return' → logprob: -6.961095809936523
    8. ' True' → logprob: -7.461095809936523
    9. ' words' → logprob: -8.086095809936523
    10. ' can' → logprob: -8.211095809936523

Token 418: ' first' (ID: 1577)
  Prédit: ' first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -1.0030415058135986
    2. ' code' → logprob: -2.3780415058135986
    3. ' path' → logprob: -2.5030415058135986
    4. ' last' → logprob: -2.6280415058135986
    5. ' words' → logprob: -2.6280415058135986
    6. ' next' → logprob: -2.7530415058135986
    7. 'first' → logprob: -3.2530415058135986
    8. 'def' → logprob: -3.2530415058135986
    9. 'path' → logprob: -3.3780415058135986
    10. ' chain' → logprob: -4.0030412673950195

Token 419: ' word' (ID: 2195)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2732582092285156
    2. ' word' → logprob: -1.7732582092285156
    3. 'word' → logprob: -4.023258209228516
    4. '_token' → logprob: -4.648258209228516
    5. '_word' → logprob: -4.773258209228516
    6. 'and' → logprob: -4.773258209228516
    7. ' letter' → logprob: -5.023258209228516
    8. ' token' → logprob: -5.273258209228516
    9. '_letter' → logprob: -5.523258209228516
    10. '_' → logprob: -6.273258209228516

Token 420: ''s' (ID: 885)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7038096189498901
    2. ' or' → logprob: -1.8288096189498901
    3. '   ' → logprob: -2.7038097381591797
    4. ' is' → logprob: -2.8288097381591797
    5. ''s' → logprob: -3.0788097381591797
    6. ' ==' → logprob: -3.4538097381591797
    7. '       ' → logprob: -3.5788097381591797
    8. ' ' → logprob: -3.7038097381591797
    9. ',' → logprob: -4.32880973815918
    10. ' if' → logprob: -4.32880973815918

Token 421: ' first' (ID: 1577)
  Prédit: ' last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.07999689877033234
    2. 'last' → logprob: -3.3299968242645264
    3. ' first' → logprob: -3.4549968242645264
    4. 'first' → logprob: -5.5799970626831055
    5. '#' → logprob: -6.5799970626831055
    6. ' ' → logprob: -6.9549970626831055
    7. '_last' → logprob: -7.4549970626831055
    8. ' and' → logprob: -7.5799970626831055
    9. ' word' → logprob: -7.9549970626831055
    10. ' #' → logprob: -8.454997062683105

Token 422: ' char' (ID: 1826)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3586106598377228
    2. ' letter' → logprob: -2.1086106300354004
    3. 'letter' → logprob: -2.9836106300354004
    4. 'and' → logprob: -2.9836106300354004
    5. ' word' → logprob: -3.4836106300354004
    6. 'word' → logprob: -4.1086106300354
    7. ' or' → logprob: -4.3586106300354
    8. '_letter' → logprob: -5.3586106300354
    9. ' character' → logprob: -5.7336106300354
    10. 'token' → logprob: -5.9836106300354

Token 423: ' ==' (ID: 951)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34753862023353577
    2. '       ' → logprob: -2.722538709640503
    3. ' and' → logprob: -2.972538709640503
    4. '
' → logprob: -3.097538709640503
    5. ' or' → logprob: -3.722538709640503
    6. '<|end|>' → logprob: -3.722538709640503
    7. ',' → logprob: -3.972538709640503
    8. ')' → logprob: -4.097538471221924
    9. ' ==' → logprob: -4.847538471221924
    10. ' return' → logprob: -4.847538471221924

Token 424: ' last' (ID: 2174)
  Prédit: ' last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.2734001874923706
    2. 'last' → logprob: -2.27340030670166
    3. ' words' → logprob: -2.64840030670166
    4. 'words' → logprob: -3.77340030670166
    5. ' the' → logprob: -4.02340030670166
    6. 'w' → logprob: -4.52340030670166
    7. 'the' → logprob: -4.52340030670166
    8. 'sys' → logprob: -6.77340030670166
    9. ' w' → logprob: -6.89840030670166
    10. ' sys' → logprob: -7.77340030670166

Token 425: ' word' (ID: 2195)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1536220759153366
    2. '
' → logprob: -3.2786221504211426
    3. ' return' → logprob: -3.6536221504211426
    4. '       ' → logprob: -3.7786221504211426
    5. ' word' → logprob: -4.653622150421143
    6. ')' → logprob: -4.778622150421143
    7. '    ' → logprob: -5.278622150421143
    8. 'return' → logprob: -5.403622150421143
    9. 'word' → logprob: -5.903622150421143
    10. '  ' → logprob: -6.028622150421143

Token 426: ''s' (ID: 885)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.362097144126892
    2. ' or' → logprob: -1.487097144126892
    3. '   ' → logprob: -1.737097144126892
    4. ''s' → logprob: -2.4870972633361816
    5. '
' → logprob: -3.1120972633361816
    6. ',' → logprob: -3.1120972633361816
    7. ' and' → logprob: -3.3620972633361816
    8. ':
' → logprob: -3.4870972633361816
    9. '[' → logprob: -3.8620972633361816
    10. ':' → logprob: -4.112097263336182

Token 427: ' last' (ID: 2174)
  Prédit: ' last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.1012086495757103
    2. 'last' → logprob: -2.4762086868286133
    3. '_last' → logprob: -5.476208686828613
    4. ' first' → logprob: -5.726208686828613
    5. ' ' → logprob: -5.976208686828613
    6. 'first' → logprob: -6.476208686828613
    7. 'char' → logprob: -8.726208686828613
    8. '_char' → logprob: -9.976208686828613
    9. ''s' → logprob: -10.101208686828613
    10. '
' → logprob: -10.101208686828613

Token 428: ' char' (ID: 1826)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.519731044769287
    2. '   ' → logprob: -1.644731044769287
    3. '_char' → logprob: -2.644731044769287
    4. 'char' → logprob: -2.769731044769287
    5. 'token' → logprob: -3.144731044769287
    6. '
' → logprob: -3.394731044769287
    7. '_' → logprob: -3.519731044769287
    8. '  ' → logprob: -3.644731044769287
    9. '_token' → logprob: -3.644731044769287
    10. ' _' → logprob: -3.769731044769287

Token 429: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2960905134677887
    2. '       ' → logprob: -1.6710904836654663
    3. ':' → logprob: -3.171090602874756
    4. ':
' → logprob: -4.421090602874756
    5. '
' → logprob: -4.546090602874756
    6. '    
' → logprob: -6.921090602874756
    7. '        
' → logprob: -7.921090602874756
    8. '	' → logprob: -8.171090126037598
    9. ':return' → logprob: -8.296090126037598
    10. '<|end|>' → logprob: -8.546090126037598

Token 430: ' 
' (ID: 793)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16838529706001282
    2. '   ' → logprob: -1.9183852672576904
    3. ':' → logprob: -6.0433855056762695
    4. ' return' → logprob: -6.1683855056762695
    5. '    ' → logprob: -6.5433855056762695
    6. '
' → logprob: -7.5433855056762695
    7. 'return' → logprob: -8.16838550567627
    8. ')' → logprob: -8.29338550567627
    9. '        
' → logprob: -8.41838550567627
    10. ':return' → logprob: -8.41838550567627

Token 431: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18594196438789368
    2. '   ' → logprob: -1.8109419345855713
    3. ':' → logprob: -6.18594217300415
    4. '    ' → logprob: -6.68594217300415
    5. '<|end|>' → logprob: -6.93594217300415
    6. ')' → logprob: -7.31094217300415
    7. '
' → logprob: -8.310941696166992
    8. '    
' → logprob: -8.810941696166992
    9. ' return' → logprob: -9.060941696166992
    10. '        
' → logprob: -9.185941696166992

Token 432: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013750067912042141
    2. '   ' → logprob: -4.513750076293945
    3. '
' → logprob: -6.388750076293945
    4. ' return' → logprob: -7.513750076293945
    5. '    ' → logprob: -9.138750076293945
    6. '        
' → logprob: -9.388750076293945
    7. '           ' → logprob: -9.638750076293945
    8. ' 
' → logprob: -10.263750076293945
    9. 'return' → logprob: -10.388750076293945
    10. ' ' → logprob: -10.513750076293945

Token 433: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09887824952602386
    2. '   ' → logprob: -2.4738781452178955
    3. ' return' → logprob: -4.723878383636475
    4. 'return' → logprob: -7.348878383636475
    5. '
' → logprob: -9.098877906799316
    6. '           ' → logprob: -9.098877906799316
    7. '    ' → logprob: -10.098877906799316
    8. ' ' → logprob: -10.848877906799316
    9. ' ' → logprob: -11.098877906799316
    10. '    
' → logprob: -11.348877906799316

Token 434: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41308334469795227
    2. 'return' → logprob: -1.7880833148956299
    3. ' return' → logprob: -1.9130833148956299
    4. '   ' → logprob: -3.78808331489563
    5. '
' → logprob: -7.913083553314209
    6. ' if' → logprob: -8.66308307647705
    7. '        
' → logprob: -9.78808307647705
    8. '           ' → logprob: -10.03808307647705
    9. 'if' → logprob: -10.03808307647705
    10. '    ' → logprob: -10.03808307647705

Token 435: ' must' (ID: 2804)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9270115494728088
    2. '   ' → logprob: -1.052011489868164
    3. 'return' → logprob: -1.802011489868164
    4. '       ' → logprob: -2.427011489868164
    5. '
' → logprob: -7.552011489868164
    6. ' need' → logprob: -8.177011489868164
    7. ' can' → logprob: -8.552011489868164
    8. '           ' → logprob: -8.552011489868164
    9. '    ' → logprob: -8.802011489868164
    10. '	return' → logprob: -9.052011489868164

Token 436: ' check' (ID: 2371)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8391354084014893
    2. 'return' → logprob: -1.2141354084014893
    3. ' check' → logprob: -1.7141354084014893
    4. '   ' → logprob: -3.0891354084014893
    5. 'check' → logprob: -3.4641354084014893
    6. ' ensure' → logprob: -5.71413516998291
    7. '       ' → logprob: -5.96413516998291
    8. ' verify' → logprob: -6.21413516998291
    9. 'ensure' → logprob: -6.46413516998291
    10. ' not' → logprob: -7.33913516998291

Token 437: ' that' (ID: 484)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.577908456325531
    2. ' words' → logprob: -1.3279085159301758
    3. ' return' → logprob: -2.952908515930176
    4. '   ' → logprob: -2.952908515930176
    5. 'words' → logprob: -3.702908515930176
    6. ' len' → logprob: -4.327908515930176
    7. 'if' → logprob: -4.452908515930176
    8. '    ' → logprob: -5.077908515930176
    9. 'return' → logprob: -5.577908515930176
    10. ' True' → logprob: -5.702908515930176

Token 438: ' condition' (ID: 7060)
  Prédit: ' words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' words' → logprob: -0.18891267478466034
    2. ' return' → logprob: -2.4389126300811768
    3. '   ' → logprob: -3.0639126300811768
    4. 'words' → logprob: -4.313912868499756
    5. '       ' → logprob: -4.813912868499756
    6. ' if' → logprob: -5.063912868499756
    7. 'return' → logprob: -5.188912868499756
    8. ' True' → logprob: -6.563912868499756
    9. '
' → logprob: -7.313912868499756
    10. '    ' → logprob: -7.688912868499756

Token 439: ' explicitly' (ID: 45615)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04295511171221733
    2. '       ' → logprob: -3.542955160140991
    3. ':' → logprob: -5.167954921722412
    4. ' and' → logprob: -5.792954921722412
    5. ',' → logprob: -7.042954921722412
    6. '.' → logprob: -7.292954921722412
    7. ' if' → logprob: -7.542954921722412
    8. '
' → logprob: -7.542954921722412
    9. '    
' → logprob: -7.667954921722412
    10. '    ' → logprob: -7.917954921722412

Token 440: ' possible' (ID: 4149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009882871061563492
    2. '
' → logprob: -5.134882926940918
    3. '       ' → logprob: -6.009882926940918
    4. '    
' → logprob: -6.884882926940918
    5. ',' → logprob: -8.384882926940918
    6. '        
' → logprob: -9.884882926940918
    7. '<|end|>' → logprob: -10.259882926940918
    8. '  
' → logprob: -10.759882926940918
    9. ' and' → logprob: -11.134882926940918
    10. ' if' → logprob: -11.134882926940918

Token 441: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019149644300341606
    2. '       ' → logprob: -4.2691497802734375
    3. '    
' → logprob: -6.2691497802734375
    4. '
' → logprob: -6.8941497802734375
    5. '.' → logprob: -7.3941497802734375
    6. '    ' → logprob: -7.5191497802734375
    7. ',' → logprob: -7.8941497802734375
    8. '<|end|>' → logprob: -9.269149780273438
    9. ' return' → logprob: -9.769149780273438
    10. ' if' → logprob: -9.894149780273438

Token 442: ' choosing' (ID: 20296)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.9213002920150757
    2. ' checking' → logprob: -1.9213002920150757
    3. 'words' → logprob: -2.1713004112243652
    4. ' True' → logprob: -2.1713004112243652
    5. ' words' → logprob: -2.2963004112243652
    6. 'all' → logprob: -2.4213004112243652
    7. ' any' → logprob: -2.6713004112243652
    8. ' graph' → logprob: -3.2963004112243652
    9. 'return' → logprob: -3.5463004112243652
    10. 'True' → logprob: -3.9213004112243652

Token 443: ' start' (ID: 1604)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5152735710144043
    2. 'the' → logprob: -1.3902735710144043
    3. 'first' → logprob: -2.5152735710144043
    4. ' first' → logprob: -3.2652735710144043
    5. 'words' → logprob: -4.640273571014404
    6. ' words' → logprob: -4.765273571014404
    7. 'start' → logprob: -5.015273571014404
    8. ' start' → logprob: -5.765273571014404
    9. ' carefully' → logprob: -6.890273571014404
    10. 'def' → logprob: -6.890273571014404

Token 444: ' and' (ID: 326)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.852071225643158
    2. '_vertex' → logprob: -1.7270712852478027
    3. '_points' → logprob: -2.1020712852478027
    4. '   ' → logprob: -2.4770712852478027
    5. '_word' → logprob: -2.7270712852478027
    6. '_point' → logprob: -3.2270712852478027
    7. '    
' → logprob: -4.352071285247803
    8. '
' → logprob: -4.477071285247803
    9. 'point' → logprob: -4.727071285247803
    10. '_letter' → logprob: -5.102071285247803

Token 445: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0031936357263475657
    2. ' end' → logprob: -5.7531938552856445
    3. '#' → logprob: -12.003193855285645
    4. 'finish' → logprob: -12.628193855285645
    5. 'last' → logprob: -13.003193855285645
    6. '(end' → logprob: -13.628193855285645
    7. 'def' → logprob: -14.128193855285645
    8. 'ending' → logprob: -14.628193855285645
    9. 'return' → logprob: -15.003193855285645
    10. '
' → logprob: -15.253193855285645

Token 446: ' arcs' (ID: 150448)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.6972846984863281
    2. '   ' → logprob: -1.0722846984863281
    3. ' points' → logprob: -3.072284698486328
    4. 'points' → logprob: -3.072284698486328
    5. 'point' → logprob: -4.447284698486328
    6. '_words' → logprob: -4.697284698486328
    7. '_vertices' → logprob: -4.947284698486328
    8. 'return' → logprob: -5.447284698486328
    9. '_point' → logprob: -5.447284698486328
    10. '_tokens' → logprob: -5.447284698486328

Token 447: ' carefully' (ID: 18455)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19960592687129974
    2. '       ' → logprob: -1.824605941772461
    3. '
' → logprob: -4.324605941772461
    4. ':' → logprob: -5.949605941772461
    5. '    
' → logprob: -7.074605941772461
    6. ':
' → logprob: -7.199605941772461
    7. '<|end|>' → logprob: -7.324605941772461
    8. '	' → logprob: -7.949605941772461
    9. '        
' → logprob: -7.949605941772461
    10. '	return' → logprob: -8.949605941772461

Token 448: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05965581163764
    2. '       ' → logprob: -3.0596559047698975
    3. ':' → logprob: -5.309655666351318
    4. '
' → logprob: -5.559655666351318
    5. '    
' → logprob: -6.809655666351318
    6. ':
' → logprob: -8.684656143188477
    7. '	' → logprob: -8.684656143188477
    8. '<|end|>' → logprob: -8.684656143188477
    9. '        
' → logprob: -9.059656143188477
    10. ')' → logprob: -9.309656143188477

Token 449: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2025790810585022
    2. '       ' → logprob: -1.7025790214538574
    3. '
' → logprob: -6.952579021453857
    4. '    
' → logprob: -9.077579498291016
    5. '<|end|>' → logprob: -10.327579498291016
    6. ' return' → logprob: -10.827579498291016
    7. '        
' → logprob: -11.202579498291016
    8. 'return' → logprob: -11.452579498291016
    9. '	return' → logprob: -11.702579498291016
    10. '	' → logprob: -12.827579498291016

Token 450: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05955035984516144
    2. '   ' → logprob: -3.0595502853393555
    3. ' return' → logprob: -5.4345502853393555
    4. '
' → logprob: -5.9345502853393555
    5. 'return' → logprob: -6.3095502853393555
    6. '        
' → logprob: -7.1845502853393555
    7. '    
' → logprob: -7.3095502853393555
    8. ' if' → logprob: -8.184550285339355
    9. ' 
' → logprob: -9.684550285339355
    10. '    ' → logprob: -9.934550285339355

Token 451: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8139111995697021
    2. '   ' → logprob: -1.3139111995697021
    3. ' return' → logprob: -1.4389111995697021
    4. 'return' → logprob: -3.188911199569702
    5. ' if' → logprob: -4.813911437988281
    6. ' for' → logprob: -7.438911437988281
    7. 'if' → logprob: -7.563911437988281
    8. '    ' → logprob: -8.688911437988281
    9. '
' → logprob: -9.938911437988281
    10. 'for' → logprob: -9.938911437988281

Token 452: ' problem' (ID: 4792)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6229954957962036
    2. '#' → logprob: -1.4979954957962036
    3. ' return' → logprob: -2.497995376586914
    4. 'first' → logprob: -2.622995376586914
    5. ' first' → logprob: -3.372995376586914
    6. 'if' → logprob: -4.497995376586914
    7. 'def' → logprob: -4.747995376586914
    8. ' #' → logprob: -4.997995376586914
    9. '   ' → logprob: -5.122995376586914
    10. 'start' → logprob: -5.872995376586914

Token 453: ' states' (ID: 9407)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.30884674191474915
    2. '   ' → logprob: -1.9338467121124268
    3. '<|end|>' → logprob: -3.5588467121124268
    4. ' remains' → logprob: -4.058846950531006
    5. ' continues' → logprob: -4.058846950531006
    6. '       ' → logprob: -4.933846950531006
    7. '<|end|>' → logprob: -5.058846950531006
    8. ':' → logprob: -5.308846950531006
    9. '    
' → logprob: -5.433846950531006
    10. '    ' → logprob: -5.433846950531006

Token 454: ':' (ID: 25)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.023683782666921616
    2. ' the' → logprob: -4.523683547973633
    3. 'that' → logprob: -4.648683547973633
    4. '   ' → logprob: -6.648683547973633
    5. ' return' → logprob: -7.398683547973633
    6. 'the' → logprob: -8.148683547973633
    7. ' if' → logprob: -8.648683547973633
    8. ' only' → logprob: -9.523683547973633
    9. '       ' → logprob: -9.523683547973633
    10. 'return' → logprob: -9.648683547973633

Token 455: ' first' (ID: 1577)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.10703737288713455
    2. 'return' → logprob: -3.232037305831909
    3. ' if' → logprob: -3.357037305831909
    4. '   ' → logprob: -4.107037544250488
    5. ' #' → logprob: -6.232037544250488
    6. ' words' → logprob: -6.357037544250488
    7. '#' → logprob: -6.732037544250488
    8. ' the' → logprob: -6.857037544250488
    9. ' for' → logprob: -6.857037544250488
    10. 'if' → logprob: -6.982037544250488

Token 456: ' word' (ID: 2195)
  Prédit: ' word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.12357711046934128
    2. '_word' → logprob: -3.123577117919922
    3. 'word' → logprob: -3.498577117919922
    4. '_' → logprob: -3.498577117919922
    5. ' _' → logprob: -5.623577117919922
    6. ' ' → logprob: -5.623577117919922
    7. '_token' → logprob: -6.623577117919922
    8. ')' → logprob: -7.748577117919922
    9. '_words' → logprob: -7.998577117919922
    10. ' token' → logprob: -8.123577117919922

Token 457: ''s' (ID: 885)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01168698351830244
    2. '['' → logprob: -5.0116868019104
    3. ''s' → logprob: -6.2616868019104
    4. ' ==' → logprob: -6.7616868019104
    5. ' and' → logprob: -8.011687278747559
    6. ''' → logprob: -8.136687278747559
    7. ' [' → logprob: -8.261687278747559
    8. ' is' → logprob: -8.511687278747559
    9. 's' → logprob: -8.761687278747559
    10. '==' → logprob: -8.886687278747559

Token 458: ' first' (ID: 1577)
  Prédit: ' first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.062073785811662674
    2. 'first' → logprob: -2.8120737075805664
    3. ' last' → logprob: -9.812073707580566
    4. '_first' → logprob: -11.312073707580566
    5. ' ' → logprob: -11.812073707580566
    6. 'last' → logprob: -12.312073707580566
    7. 'def' → logprob: -12.312073707580566
    8. 'First' → logprob: -12.437073707580566
    9. '	first' → logprob: -12.437073707580566
    10. ''s' → logprob: -12.687073707580566

Token 459: ' char' (ID: 1826)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.36513352394104
    2. ' and' → logprob: -1.86513352394104
    3. '_' → logprob: -2.61513352394104
    4. ' word' → logprob: -2.61513352394104
    5. ''s' → logprob: -2.74013352394104
    6. ' ' → logprob: -2.74013352394104
    7. ' character' → logprob: -2.74013352394104
    8. '_letter' → logprob: -2.99013352394104
    9. '_word' → logprob: -3.49013352394104
    10. ''' → logprob: -3.74013352394104

Token 460: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0033942062873393297
    2. '==' → logprob: -5.87839412689209
    3. ' !=' → logprob: -8.87839412689209
    4. ')' → logprob: -9.37839412689209
    5. ' must' → logprob: -9.62839412689209
    6. ' and' → logprob: -9.75339412689209
    7. ' ' → logprob: -9.87839412689209
    8. ' is' → logprob: -10.00339412689209
    9. '<|end|>' → logprob: -10.62839412689209
    10. ',' → logprob: -11.12839412689209

Token 461: ' last' (ID: 2174)
  Prédit: ' last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.5977224707603455
    2. 'last' → logprob: -1.5977225303649902
    3. 'words' → logprob: -1.9727225303649902
    4. ' words' → logprob: -2.2227225303649902
    5. '   ' → logprob: -10.222722053527832
    6. '
' → logprob: -10.347722053527832
    7. 'w' → logprob: -10.597722053527832
    8. 'word' → logprob: -11.097722053527832
    9. 'first' → logprob: -11.847722053527832
    10. 'def' → logprob: -11.972722053527832

Token 462: ' word' (ID: 2195)
  Prédit: ' word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.017119253054261208
    2. 'word' → logprob: -4.642119407653809
    3. '_word' → logprob: -5.017119407653809
    4. ' char' → logprob: -9.142119407653809
    5. 'char' → logprob: -9.142119407653809
    6. ' ' → logprob: -9.267119407653809
    7. ' _' → logprob: -9.267119407653809
    8. '_' → logprob: -9.892119407653809
    9. ' character' → logprob: -10.017119407653809
    10. '   ' → logprob: -10.142119407653809

Token 463: ''s' (ID: 885)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04431800916790962
    2. ''s' → logprob: -3.2943179607391357
    3. '[-' → logprob: -5.169318199157715
    4. '['' → logprob: -8.544318199157715
    5. '   ' → logprob: -8.669318199157715
    6. 's' → logprob: -9.669318199157715
    7. ' [' → logprob: -10.294318199157715
    8. ''' → logprob: -10.544318199157715
    9. '       ' → logprob: -10.544318199157715
    10. ''[' → logprob: -11.419318199157715

Token 464: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.9855545163154602
    2. ' last' → logprob: -1.2355544567108154
    3. 'first' → logprob: -1.6105544567108154
    4. ' first' → logprob: -2.3605544567108154
    5. '[-' → logprob: -3.2355544567108154
    6. ''s' → logprob: -6.8605546951293945
    7. '-' → logprob: -8.235554695129395
    8. '_last' → logprob: -8.485554695129395
    9. 's' → logprob: -8.610554695129395
    10. '[' → logprob: -8.985554695129395

Token 465: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.3030018210411072
    2. ' char' → logprob: -1.928001880645752
    3. '_char' → logprob: -2.178001880645752
    4. ' word' → logprob: -7.553001880645752
    5. ' _' → logprob: -7.803001880645752
    6. ' character' → logprob: -8.178001403808594
    7. '_' → logprob: -8.178001403808594
    8. ')' → logprob: -8.428001403808594
    9. 'word' → logprob: -8.553001403808594
    10. '   ' → logprob: -9.178001403808594

Token 466: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.270206481218338
    2. '
' → logprob: -2.3952064514160156
    3. '       ' → logprob: -2.5202064514160156
    4. ' and' → logprob: -3.6452064514160156
    5. ':' → logprob: -4.520206451416016
    6. '<|end|>' → logprob: -5.395206451416016
    7. ':
' → logprob: -5.520206451416016
    8. '    
' → logprob: -5.645206451416016
    9. ' if' → logprob: -6.145206451416016
    10. ',' → logprob: -6.145206451416016

Token 467: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0968010202050209
    2. '       ' → logprob: -2.5968010425567627
    3. '
' → logprob: -4.096800804138184
    4. '    
' → logprob: -7.846800804138184
    5. '<|end|>' → logprob: -7.846800804138184
    6. '        
' → logprob: -8.596800804138184
    7. ' return' → logprob: -10.096800804138184
    8. ' 
' → logprob: -10.596800804138184
    9. ')' → logprob: -10.846800804138184
    10. 'return' → logprob: -11.596800804138184

Token 468: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013628478161990643
    2. '       ' → logprob: -4.5136284828186035
    3. ' if' → logprob: -6.6386284828186035
    4. '
' → logprob: -7.6386284828186035
    5. '    
' → logprob: -8.388628005981445
    6. ' return' → logprob: -8.388628005981445
    7. 'return' → logprob: -9.263628005981445
    8. 'if' → logprob: -9.513628005981445
    9. ' ' → logprob: -10.513628005981445
    10. '        
' → logprob: -10.638628005981445

Token 469: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34527450799942017
    2. ' return' → logprob: -2.2202744483947754
    3. ' if' → logprob: -2.3452744483947754
    4. 'return' → logprob: -3.0952744483947754
    5. 'if' → logprob: -3.8452744483947754
    6. ' first' → logprob: -4.595274448394775
    7. '       ' → logprob: -5.845274448394775
    8. 'first' → logprob: -5.845274448394775
    9. '
' → logprob: -6.095274448394775
    10. 'start' → logprob: -6.595274448394775

Token 470: ' the' (ID: 290)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8569192886352539
    2. ' return' → logprob: -0.8569192886352539
    3. 'return' → logprob: -2.356919288635254
    4. 'if' → logprob: -3.231919288635254
    5. ' f' → logprob: -5.481919288635254
    6. '
' → logprob: -5.481919288635254
    7. '       ' → logprob: -5.731919288635254
    8. '   ' → logprob: -6.481919288635254
    9. 'f' → logprob: -6.856919288635254
    10. ' w' → logprob: -6.856919288635254

Token 471: ' Euler' (ID: 167577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.8297284841537476
    2. ' first' → logprob: -0.9547284841537476
    3. 'return' → logprob: -2.954728603363037
    4. 'if' → logprob: -3.079728603363037
    5. ' return' → logprob: -3.454728603363037
    6. ' if' → logprob: -4.079728603363037
    7. 'start' → logprob: -4.579728603363037
    8. '#' → logprob: -4.954728603363037
    9. ' start' → logprob: -5.204728603363037
    10. 'f' → logprob: -5.454728603363037

Token 472: 'ian' (ID: 1200)
  Prédit: 'ian'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ian' → logprob: -0.0006672830786556005
    2. ' path' → logprob: -8.000667572021484
    3. 'path' → logprob: -8.750667572021484
    4. '   ' → logprob: -9.375667572021484
    5. ')' → logprob: -10.250667572021484
    6. '_path' → logprob: -11.125667572021484
    7. 'arian' → logprob: -11.625667572021484
    8. 'Path' → logprob: -12.125667572021484
    9. '
' → logprob: -13.000667572021484
    10. 'ians' → logprob: -13.000667572021484

Token 473: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.06270186603069305
    2. 'path' → logprob: -2.812701940536499
    3. '_path' → logprob: -7.68770170211792
    4. ' circuit' → logprob: -8.687702178955078
    5. 'ian' → logprob: -10.562702178955078
    6. ' condition' → logprob: -10.937702178955078
    7. ' trail' → logprob: -11.187702178955078
    8. ' cycle' → logprob: -11.437702178955078
    9. ' conditions' → logprob: -11.562702178955078
    10. '	path' → logprob: -12.437702178955078

Token 474: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.044904328882694244
    2. 'must' → logprob: -3.4199042320251465
    3. ' can' → logprob: -5.4199042320251465
    4. ' should' → logprob: -6.7949042320251465
    5. ' exists' → logprob: -6.9199042320251465
    6. ' is' → logprob: -7.0449042320251465
    7. '#' → logprob: -7.2949042320251465
    8. ' would' → logprob: -7.7949042320251465
    9. ' needs' → logprob: -8.169904708862305
    10. ' return' → logprob: -8.544904708862305

Token 475: ' be' (ID: 413)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.9544559717178345
    2. ' start' → logprob: -1.3294559717178345
    3. ' be' → logprob: -2.079455852508545
    4. 'be' → logprob: -2.704455852508545
    5. ' form' → logprob: -3.204455852508545
    6. ' actually' → logprob: -3.204455852508545
    7. 'actually' → logprob: -3.704455852508545
    8. ' also' → logprob: -4.079455852508545
    9. ' have' → logprob: -4.704455852508545
    10. 'form' → logprob: -4.829455852508545

Token 476: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22736625373363495
    2. ' a' → logprob: -1.7273662090301514
    3. 'c' → logprob: -4.1023664474487305
    4. 'Euler' → logprob: -5.9773664474487305
    5. 'an' → logprob: -6.7273664474487305
    6. ' Euler' → logprob: -6.8523664474487305
    7. 'start' → logprob: -7.4773664474487305
    8. ' an' → logprob: -7.6023664474487305
    9. 'cycle' → logprob: -7.6023664474487305
    10. 'cy' → logprob: -7.9773664474487305

Token 477: ' circuit' (ID: 20303)
  Prédit: ' cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.5156159400939941
    2. 'c' → logprob: -1.5156159400939941
    3. ' circuit' → logprob: -2.015615940093994
    4. 'cycle' → logprob: -3.140615940093994
    5. ' Euler' → logprob: -5.890615940093994
    6. ' ciclo' → logprob: -7.265615940093994
    7. ' closed' → logprob: -7.265615940093994
    8. 'e' → logprob: -7.390615940093994
    9. 'Euler' → logprob: -7.640615940093994
    10. ' c' → logprob: -8.265615463256836

Token 478: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03955598175525665
    2. '
' → logprob: -3.4145560264587402
    3. '       ' → logprob: -5.53955602645874
    4. '    
' → logprob: -6.78955602645874
    5. '\n' → logprob: -9.039555549621582
    6. '<|end|>' → logprob: -9.164555549621582
    7. '	return' → logprob: -9.289555549621582
    8. ':
' → logprob: -9.789555549621582
    9. ' 
' → logprob: -9.914555549621582
    10. ',' → logprob: -9.914555549621582

Token 479: 'start' (ID: 5236)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09669411182403564
    2. ' )' → logprob: -2.721693992614746
    3. ' (' → logprob: -4.721693992614746
    4. ' i' → logprob: -5.596693992614746
    5. ' start' → logprob: -5.846693992614746
    6. '0' → logprob: -5.971693992614746
    7. ' ' → logprob: -6.721693992614746
    8. '
' → logprob: -6.721693992614746
    9. 'start' → logprob: -6.971693992614746
    10. ' not' → logprob: -7.096693992614746

Token 480: '_points' (ID: 30070)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4050721526145935
    2. ')' → logprob: -1.2800722122192383
    3. ' or' → logprob: -3.9050722122192383
    4. '_points' → logprob: -3.9050722122192383
    5. 'and' → logprob: -4.655072212219238
    6. ' )' → logprob: -6.030072212219238
    7. 'token' → logprob: -7.155072212219238
    8. ' ==' → logprob: -7.405072212219238
    9. '_tokens' → logprob: -8.655072212219238
    10. ' points' → logprob: -8.780072212219238

Token 481: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11328905075788498
    2. '==' → logprob: -2.2382891178131104
    3. ')' → logprob: -8.613288879394531
    4. ' <=' → logprob: -8.988288879394531
    5. ')==' → logprob: -9.363288879394531
    6. ' ' → logprob: -11.113288879394531
    7. '<=' → logprob: -11.113288879394531
    8. '0' → logprob: -11.238288879394531
    9. '```' → logprob: -11.988288879394531
    10. ' )' → logprob: -12.238288879394531

Token 482: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '1' → logprob: -18.250085830688477
    4. '```' → logprob: -18.500085830688477
    5. ' ' → logprob: -19.375085830688477
    6. '۰' → logprob: -19.375085830688477
    7. '   ' → logprob: -19.500085830688477
    8. '<|end|>' → logprob: -19.750085830688477
    9. '  ' → logprob: -20.875085830688477
    10. ')' → logprob: -20.875085830688477

Token 483: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '<|end|>' → logprob: -17.375028610229492
    4. 'end' → logprob: -17.750028610229492
    5. '1' → logprob: -18.125028610229492
    6. 'and' → logprob: -19.250028610229492
    7. '۰' → logprob: -19.625028610229492
    8. ')' → logprob: -19.625028610229492
    9. '```' → logprob: -19.750028610229492
    10. '   ' → logprob: -20.000028610229492

Token 484: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4808872640132904
    2. ' and' → logprob: -0.9808872938156128
    3. 'and' → logprob: -5.355887413024902
    4. '),' → logprob: -6.730887413024902
    5. ' )' → logprob: -7.230887413024902
    6. ').' → logprob: -9.605887413024902
    7. ' or' → logprob: -9.855887413024902
    8. ')
' → logprob: -11.480887413024902
    9. '   ' → logprob: -11.980887413024902
    10. ' ),' → logprob: -12.480887413024902

Token 485: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.126929372549057
    2. ' end' → logprob: -2.12692928314209
    3. ' ' → logprob: -14.25192928314209
    4. '   ' → logprob: -15.12692928314209
    5. '
' → logprob: -16.376930236816406
    6. '(end' → logprob: -16.876930236816406
    7. '0' → logprob: -16.876930236816406
    8. '	end' → logprob: -17.126930236816406
    9. '```' → logprob: -17.376930236816406
    10. '  ' → logprob: -17.501930236816406

Token 486: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -3.7697225252486533e-06
    2. 'points' → logprob: -12.625003814697266
    3. '```' → logprob: -15.625003814697266
    4. '_POINTS' → logprob: -17.000003814697266
    5. '==' → logprob: -17.375003814697266
    6. ')' → logprob: -17.625003814697266
    7. '_positions' → logprob: -17.625003814697266
    8. ' _' → logprob: -17.750003814697266
    9. '_' → logprob: -17.875003814697266
    10. 'Points' → logprob: -18.000003814697266

Token 487: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5764108896255493
    2. ' ==' → logprob: -0.8264108896255493
    3. ')' → logprob: -7.95141077041626
    4. ')==' → logprob: -9.201411247253418
    5. '0' → logprob: -11.701411247253418
    6. '),' → logprob: -12.201411247253418
    7. ' ' → logprob: -13.576411247253418
    8. '```' → logprob: -13.701411247253418
    9. '=' → logprob: -14.576411247253418
    10. ').' → logprob: -14.701411247253418

Token 488: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007606627885252237
    2. ' ' → logprob: -4.882606506347656
    3. '   ' → logprob: -15.632606506347656
    4. ' ' → logprob: -16.320106506347656
    5. '1' → logprob: -16.695106506347656
    6. '  ' → logprob: -16.945106506347656
    7. ')' → logprob: -17.257606506347656
    8. '۰' → logprob: -17.382606506347656
    9. '```' → logprob: -17.507606506347656
    10. '
' → logprob: -17.882606506347656

Token 489: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '۰' → logprob: -17.75000762939453
    4. ')' → logprob: -18.25000762939453
    5. '   ' → logprob: -19.31250762939453
    6. '1' → logprob: -19.62500762939453
    7. '```' → logprob: -19.62500762939453
    8. '०' → logprob: -19.87500762939453
    9. '<|end|>' → logprob: -19.87500762939453
    10. '０' → logprob: -20.31250762939453

Token 490: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004158652853220701
    2. '):' → logprob: -5.6291584968566895
    3. '   ' → logprob: -8.504158973693848
    4. '):
' → logprob: -9.004158973693848
    5. ').' → logprob: -9.754158973693848
    6. ')
' → logprob: -9.879158973693848
    7. ' )' → logprob: -10.129158973693848
    8. ' or' → logprob: -10.379158973693848
    9. ':' → logprob: -10.879158973693848
    10. '       ' → logprob: -11.754158973693848

Token 491: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42211827635765076
    2. '<|end|>' → logprob: -2.0471181869506836
    3. '
' → logprob: -2.2971181869506836
    4. ':' → logprob: -3.4221181869506836
    5. '.' → logprob: -4.547118186950684
    6. ':return' → logprob: -4.672118186950684
    7. ')' → logprob: -4.797118186950684
    8. '\n' → logprob: -4.922118186950684
    9. ':
' → logprob: -5.047118186950684
    10. '	return' → logprob: -5.047118186950684

Token 492: ' be' (ID: 413)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7022005915641785
    2. 'return' → logprob: -0.7022005915641785
    3. '   ' → logprob: -5.202200412750244
    4. ' satisfy' → logprob: -6.577200412750244
    5. ' ensure' → logprob: -7.452200412750244
    6. ' pass' → logprob: -8.327200889587402
    7. 'ensure' → logprob: -8.577200889587402
    8. ' True' → logprob: -8.577200889587402
    9. 'pass' → logprob: -8.702200889587402
    10. 'True' → logprob: -8.952200889587402

Token 493: ' "' (ID: 392)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.01818026416003704
    2. ' True' → logprob: -4.0181803703308105
    3. '   ' → logprob: -10.768179893493652
    4. 'possible' → logprob: -12.768179893493652
    5. 'true' → logprob: -13.018179893493652
    6. '
' → logprob: -13.768179893493652
    7. 'False' → logprob: -14.393179893493652
    8. 'return' → logprob: -14.643179893493652
    9. ' possible' → logprob: -14.643179893493652
    10. ' able' → logprob: -14.768179893493652

Token 494: 'OK' (ID: 5175)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00671584764495492
    2. ' True' → logprob: -5.006715774536133
    3. 'true' → logprob: -15.381715774536133
    4. '   ' → logprob: -15.506715774536133
    5. 'False' → logprob: -16.381715774536133
    6. '
' → logprob: -16.756715774536133
    7. '(True' → logprob: -17.131715774536133
    8. '"' → logprob: -17.881715774536133
    9. 'Tr' → logprob: -18.006715774536133
    10. '    ' → logprob: -19.131715774536133

Token 495: '".
' (ID: 26880)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20544137060642242
    2. ')"' → logprob: -1.8304413557052612
    3. '   ' → logprob: -4.580441474914551
    4. ')' → logprob: -4.830441474914551
    5. '"
' → logprob: -5.205441474914551
    6. ')"
' → logprob: -6.830441474914551
    7. '."' → logprob: -8.83044147491455
    8. '\n' → logprob: -9.20544147491455
    9. '".' → logprob: -9.20544147491455
    10. '")' → logprob: -10.08044147491455

Token 496: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013054460287094116
    2. '
' → logprob: -4.763054370880127
    3. '    
' → logprob: -5.888054370880127
    4. '       ' → logprob: -6.513054370880127
    5. '	return' → logprob: -10.013054847717285
    6. ' return' → logprob: -10.013054847717285
    7. '        
' → logprob: -10.513054847717285
    8. 'return' → logprob: -11.138054847717285
    9. '  
' → logprob: -11.388054847717285
    10. '	
' → logprob: -12.013054847717285

Token 497: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034284528344869614
    2. '       ' → logprob: -3.4092845916748047
    3. '
' → logprob: -8.284284591674805
    4. 'return' → logprob: -8.284284591674805
    5. ' return' → logprob: -9.159284591674805
    6. '    
' → logprob: -10.659284591674805
    7. '        
' → logprob: -13.534284591674805
    8. ' if' → logprob: -14.034284591674805
    9. '           ' → logprob: -14.034284591674805
    10. 'if' → logprob: -14.159284591674805

Token 498: ' If' (ID: 1843)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010534112807363272
    2. '
' → logprob: -8.001053810119629
    3. '       ' → logprob: -8.001053810119629
    4. ' return' → logprob: -8.501053810119629
    5. 'return' → logprob: -8.751053810119629
    6. '    
' → logprob: -10.876053810119629
    7. '        
' → logprob: -14.126053810119629
    8. '	return' → logprob: -15.001053810119629
    9. ' 
' → logprob: -15.126053810119629
    10. '    ' → logprob: -15.251053810119629

Token 499: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.41524624824523926
    2. ' start' → logprob: -1.1652462482452393
    3. ' not' → logprob: -4.04024600982666
    4. 'not' → logprob: -4.66524600982666
    5. '   ' → logprob: -7.29024600982666
    6. '       ' → logprob: -8.79024600982666
    7. ' ' → logprob: -9.79024600982666
    8. '(start' → logprob: -10.54024600982666
    9. ' (' → logprob: -11.41524600982666
    10. '           ' → logprob: -11.54024600982666

Token 500: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -3.4121114822482923e-06
    2. 'points' → logprob: -13.500003814697266
    3. '_tokens' → logprob: -13.500003814697266
    4. '_positions' → logprob: -14.875003814697266
    5. '_' → logprob: -15.625003814697266
    6. 'Points' → logprob: -17.625003814697266
    7. '```' → logprob: -17.750003814697266
    8. '_parts' → logprob: -18.000003814697266
    9. '_point' → logprob: -18.125003814697266
    10. '_POINTS' → logprob: -18.250003814697266

Token 501: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.10717285424470901
    2. ' ==' → logprob: -2.607172966003418
    3. '!=' → logprob: -4.107172966003418
    4. '==' → logprob: -4.482172966003418
    5. ' >' → logprob: -9.857172966003418
    6. ' ' → logprob: -10.732172966003418
    7. ')' → logprob: -11.607172966003418
    8. '   ' → logprob: -11.732172966003418
    9. '>' → logprob: -11.857172966003418
    10. '  ' → logprob: -12.357172966003418

Token 502: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07115641236305237
    2. '0' → logprob: -2.8211565017700195
    3. ' ' → logprob: -4.6961565017700195
    4. '```' → logprob: -12.13365650177002
    5. '   ' → logprob: -12.38365650177002
    6. '  ' → logprob: -13.50865650177002
    7. '
' → logprob: -14.19615650177002
    8. '=' → logprob: -14.63365650177002
    9. '#' → logprob: -15.32115650177002
    10. '    ' → logprob: -15.38365650177002

Token 503: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024895723909139633
    2. '0' → logprob: -6.0024895668029785
    3. ' ' → logprob: -11.252490043640137
    4. '```' → logprob: -14.502490043640137
    5. '   ' → logprob: -16.56498908996582
    6. '
' → logprob: -17.12748908996582
    7. '１' → logprob: -17.50248908996582
    8. '' → logprob: -17.62748908996582
    9. '#' → logprob: -17.75248908996582
    10. '

' → logprob: -17.75248908996582

Token 504: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014662186615169048
    2. 'and' → logprob: -4.514662265777588
    3. ' ==' → logprob: -5.889662265777588
    4. ' or' → logprob: -7.514662265777588
    5. '==' → logprob: -8.38966178894043
    6. ' ' → logprob: -11.01466178894043
    7. '   ' → logprob: -11.13966178894043
    8. ' !=' → logprob: -11.51466178894043
    9. ':' → logprob: -11.76466178894043
    10. '<|end|>' → logprob: -12.01466178894043

Token 505: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.31326553225517273
    2. ' end' → logprob: -1.3132655620574951
    3. ' ' → logprob: -12.938265800476074
    4. '   ' → logprob: -14.813265800476074
    5. '(end' → logprob: -15.188265800476074
    6. '  ' → logprob: -15.438265800476074
    7. '	end' → logprob: -15.938265800476074
    8. '
' → logprob: -16.438264846801758
    9. '[end' → logprob: -16.563264846801758
    10. '     ' → logprob: -16.688264846801758

Token 506: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -1.0445127372804563e-05
    2. 'points' → logprob: -11.62501049041748
    3. '_' → logprob: -13.62501049041748
    4. '_positions' → logprob: -16.000009536743164
    5. '_POINTS' → logprob: -16.500009536743164
    6. '```' → logprob: -17.125009536743164
    7. 'Points' → logprob: -17.500009536743164
    8. '_pts' → logprob: -19.375009536743164
    9. '_point' → logprob: -19.625009536743164
    10. ' points' → logprob: -19.625009536743164

Token 507: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25217413902282715
    2. ' ==' → logprob: -1.5021741390228271
    3. ' !=' → logprob: -8.877174377441406
    4. '!=' → logprob: -9.377174377441406
    5. '==-' → logprob: -12.002174377441406
    6. '<|end|>' → logprob: -12.252174377441406
    7. '1' → logprob: -13.127174377441406
    8. ')==' → logprob: -13.377174377441406
    9. '```' → logprob: -13.877174377441406
    10. ']==' → logprob: -14.002174377441406

Token 508: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.338466093642637e-05
    2. '0' → logprob: -10.000073432922363
    3. ' ' → logprob: -10.500073432922363
    4. '```' → logprob: -15.500073432922363
    5. '-' → logprob: -16.125072479248047
    6. '   ' → logprob: -16.625072479248047
    7. '
' → logprob: -19.000072479248047
    8. '' → logprob: -19.062572479248047
    9. '۱' → logprob: -19.062572479248047
    10. '  ' → logprob: -19.312572479248047

Token 509: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5560333728790283
    2. ':' → logprob: -0.9310333728790283
    3. '   ' → logprob: -3.9310333728790283
    4. ':return' → logprob: -4.806033134460449
    5. '       ' → logprob: -5.681033134460449
    6. ' :
' → logprob: -8.43103313446045
    7. ' :' → logprob: -8.55603313446045
    8. ',' → logprob: -8.55603313446045
    9. '           ' → logprob: -9.05603313446045
    10. '):
' → logprob: -9.43103313446045

Token 510: ' it' (ID: 480)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2157819271087646
    2. '   ' → logprob: -1.3407819271087646
    3. ' return' → logprob: -1.3407819271087646
    4. 'return' → logprob: -1.7157819271087646
    5. '	return' → logprob: -7.965782165527344
    6. '           ' → logprob: -10.465782165527344
    7. ' ' → logprob: -10.965782165527344
    8. '    ' → logprob: -11.965782165527344
    9. '   ' → logprob: -12.340782165527344
    10. '  ' → logprob: -12.590782165527344

Token 511: ' means' (ID: 4748)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5380546450614929
    2. ' return' → logprob: -1.6630547046661377
    3. '       ' → logprob: -2.0380547046661377
    4. 'return' → logprob: -2.4130547046661377
    5. '           ' → logprob: -6.538054466247559
    6. '	return' → logprob: -6.663054466247559
    7. ':' → logprob: -6.788054466247559
    8. ':return' → logprob: -7.413054466247559
    9. ' is' → logprob: -7.663054466247559
    10. '    ' → logprob: -8.038054466247559

Token 512: ' the' (ID: 290)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.1921127885580063
    2. 'return' → logprob: -2.192112684249878
    3. ' False' → logprob: -3.192112684249878
    4. ' return' → logprob: -4.067112922668457
    5. 'the' → logprob: -5.942112922668457
    6. ' the' → logprob: -6.567112922668457
    7. '"' → logprob: -7.442112922668457
    8. '   ' → logprob: -9.067112922668457
    9. 'not' → logprob: -10.567112922668457
    10. 'True' → logprob: -10.817112922668457

Token 513: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.7864820957183838
    2. 'return' → logprob: -1.2864820957183838
    3. 'result' → logprob: -2.036482095718384
    4. 'chain' → logprob: -2.911482095718384
    5. 'answer' → logprob: -3.786482095718384
    6. ' path' → logprob: -4.161481857299805
    7. 'shir' → logprob: -4.786481857299805
    8. 'def' → logprob: -4.911481857299805
    9. 'next' → logprob: -5.161481857299805
    10. ' chain' → logprob: -5.661481857299805

Token 514: ' is' (ID: 382)
  Prédit: ' cannot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cannot' → logprob: -0.4890674352645874
    2. ' can't' → logprob: -2.239067554473877
    3. 'cannot' → logprob: -2.614067554473877
    4. ' is' → logprob: -3.114067554473877
    5. ' does' → logprob: -3.114067554473877
    6. ' may' → logprob: -3.864067554473877
    7. ' can' → logprob: -3.989067554473877
    8. ' won't' → logprob: -4.114067554473877
    9. ' ends' → logprob: -4.364067554473877
    10. ' will' → logprob: -4.364067554473877

Token 515: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.48796847462654114
    2. 'not' → logprob: -0.9879684448242188
    3. 'open' → logprob: -4.612968444824219
    4. ' open' → logprob: -6.237968444824219
    5. 'a' → logprob: -7.487968444824219
    6. ' a' → logprob: -8.362968444824219
    7. 'an' → logprob: -8.362968444824219
    8. ' an' → logprob: -9.112968444824219
    9. 'non' → logprob: -9.112968444824219
    10. ' NOT' → logprob: -9.112968444824219

Token 516: ' circular' (ID: 37626)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4020991921424866
    2. ' a' → logprob: -1.2770991325378418
    3. 'OK' → logprob: -4.152099132537842
    4. 'ok' → logprob: -4.902099132537842
    5. 'possible' → logprob: -5.152099132537842
    6. 'closed' → logprob: -5.527099132537842
    7. 'c' → logprob: -5.902099132537842
    8. ' possible' → logprob: -6.027099132537842
    9. 'Euler' → logprob: -6.027099132537842
    10. ' OK' → logprob: -6.277099132537842

Token 517: ' =>' (ID: 871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19145247340202332
    2. '
' → logprob: -1.9414525032043457
    3. '       ' → logprob: -3.5664525032043457
    4. '    
' → logprob: -6.441452503204346
    5. '\n' → logprob: -8.441452026367188
    6. '        
' → logprob: -8.566452026367188
    7. '  
' → logprob: -9.441452026367188
    8. ',' → logprob: -9.566452026367188
    9. ',
' → logprob: -10.066452026367188
    10. 'return' → logprob: -10.066452026367188

Token 518: ' NG' (ID: 35152)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10258345305919647
    2. ' return' → logprob: -2.352583408355713
    3. '   ' → logprob: -6.227583408355713
    4. '           ' → logprob: -8.477583885192871
    5. '       ' → logprob: -8.602583885192871
    6. '	return' → logprob: -12.102583885192871
    7. '```' → logprob: -14.102583885192871
    8. 'False' → logprob: -14.727583885192871
    9. ' ' → logprob: -14.727583885192871
    10. '               ' → logprob: -15.102583885192871

Token 519: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4203200340270996
    2. '       ' → logprob: -1.4203200340270996
    3. '
' → logprob: -2.2953200340270996
    4. '    
' → logprob: -7.6703200340271
    5. '\n' → logprob: -9.545320510864258
    6. 'return' → logprob: -9.670320510864258
    7. '        
' → logprob: -9.795320510864258
    8. ' return' → logprob: -10.295320510864258
    9. '           ' → logprob: -10.920320510864258
    10. ' 
' → logprob: -11.170320510864258

Token 520: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22112300992012024
    2. '       ' → logprob: -1.9711229801177979
    3. '
' → logprob: -2.846122980117798
    4. 'return' → logprob: -7.471123218536377
    5. '    
' → logprob: -8.096122741699219
    6. ' return' → logprob: -10.096122741699219
    7. '```' → logprob: -10.346122741699219
    8. '        
' → logprob: -10.846122741699219
    9. '
' → logprob: -11.221122741699219
    10. '           ' → logprob: -11.596122741699219

Token 521: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0352698490023613
    2. '       ' → logprob: -3.4102697372436523
    3. '
' → logprob: -6.535269737243652
    4. 'return' (adapté à ' return') → logprob: -9.035269737243652
    5. '    
' → logprob: -10.035269737243652
    6. ' return' → logprob: -12.410269737243652
    7. '        
' → logprob: -13.410269737243652
    8. '           ' → logprob: -13.910269737243652
    9. 'if' → logprob: -14.285269737243652
    10. '
' → logprob: -15.160269737243652

Token 522: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.023281004279851913
    2. ' start' → logprob: -3.7732810974121094
    3. '(start' → logprob: -10.27328109741211
    4. '   ' → logprob: -15.02328109741211
    5. 'True' → logprob: -15.39828109741211
    6. ' (' → logprob: -15.39828109741211
    7. ' ' → logprob: -16.89828109741211
    8. '	start' → logprob: -17.02328109741211
    9. '(' → logprob: -18.02328109741211
    10. '[start' → logprob: -18.64828109741211

Token 523: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -6.885492621222511e-05
    2. 'Points' → logprob: -10.250068664550781
    3. 'True' → logprob: -11.125068664550781
    4. '_vertices' → logprob: -11.750068664550781
    5. 'points' → logprob: -11.875068664550781
    6. '_tokens' → logprob: -12.750068664550781
    7. 'False' → logprob: -14.375068664550781
    8. '_pts' → logprob: -16.50006866455078
    9. '_point' → logprob: -16.62506866455078
    10. '_words' → logprob: -16.87506866455078

Token 524: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3868885338306427
    2. ' ==' → logprob: -1.1368885040283203
    3. '0' → logprob: -11.26188850402832
    4. '=' → logprob: -12.76188850402832
    5. '==
' → logprob: -14.76188850402832
    6. ')==' → logprob: -15.26188850402832
    7. '===' → logprob: -15.38688850402832
    8. '```' → logprob: -15.51188850402832
    9. '!=' → logprob: -15.63688850402832
    10. ' ' → logprob: -15.88688850402832

Token 525: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '۰' → logprob: -18.375003814697266
    4. '０' → logprob: -18.625003814697266
    5. '=' → logprob: -20.750003814697266
    6. '```' → logprob: -20.875003814697266
    7. '<|end|>' → logprob: -21.000003814697266
    8. '०' → logprob: -21.125003814697266
    9. 'zero' → logprob: -21.250003814697266
    10. '   ' → logprob: -21.625003814697266

Token 526: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '۰' → logprob: -18.375
    4. '０' → logprob: -18.625
    5. '<|end|>' → logprob: -19.75
    6. 'zero' → logprob: -19.875
    7. '০' → logprob: -21.5
    8. '०' → logprob: -21.75
    9. '```' → logprob: -22.0
    10. '٠' → logprob: -22.25

Token 527: ' and' (ID: 326)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 528: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.3133111000061035
    2. ' end' → logprob: -1.3133111000061035
    3. '0' → logprob: -10.063310623168945
    4. ' ' → logprob: -12.313310623168945
    5. '   ' → logprob: -13.313310623168945
    6. '(end' → logprob: -15.063310623168945
    7. '	end' → logprob: -16.813310623168945
    8. '1' → logprob: -16.938310623168945
    9. '  ' → logprob: -17.188310623168945
    10. '       ' → logprob: -17.563310623168945

Token 529: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -6.670925358776003e-05
    2. 'points' → logprob: -9.625066757202148
    3. 'degree' → logprob: -15.750066757202148
    4. 'Points' → logprob: -15.750066757202148
    5. '_POINTS' → logprob: -16.50006675720215
    6. '_vertices' → logprob: -16.75006675720215
    7. ' points' → logprob: -17.50006675720215
    8. '   ' → logprob: -18.12506675720215
    9. '_pts' → logprob: -18.37506675720215
    10. '_positions' → logprob: -18.50006675720215

Token 530: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1269504725933075
    2. ' ==' → logprob: -2.12695050239563
    3. '0' → logprob: -10.75195026397705
    4. ' ' → logprob: -14.75195026397705
    5. '==
' → logprob: -15.87695026397705
    6. '=' → logprob: -16.001951217651367
    7. '===' → logprob: -16.126951217651367
    8. ')==' → logprob: -16.251951217651367
    9. '()==' → logprob: -17.126951217651367
    10. ']==' → logprob: -17.251951217651367

Token 531: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '۰' → logprob: -18.2500057220459
    4. '０' → logprob: -19.5000057220459
    5. '00' → logprob: -20.6250057220459
    6. '   ' → logprob: -21.1250057220459
    7. '<|end|>' → logprob: -21.1250057220459
    8. '০' → logprob: -21.8750057220459
    9. '018' → logprob: -22.1250057220459
    10. '٠' → logprob: -22.2500057220459

Token 532: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '۰' → logprob: -17.000001907348633
    4. '０' → logprob: -17.875001907348633
    5. '<|end|>' → logprob: -18.000001907348633
    6. '00' → logprob: -18.875001907348633
    7. '047' → logprob: -19.250001907348633
    8. '014' → logprob: -19.375001907348633
    9. '018' → logprob: -19.375001907348633
    10. '০' → logprob: -19.500001907348633

Token 533: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 534: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 535: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 536: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006381740793585777
    2. ':' → logprob: -5.131381511688232
    3. ':
' → logprob: -8.63138198852539
    4. '   ' → logprob: -8.88138198852539
    5. ':return' → logprob: -9.50638198852539
    6. ' return' → logprob: -10.88138198852539
    7. 'return' → logprob: -11.63138198852539
    8. ',' → logprob: -12.38138198852539
    9. '           ' → logprob: -12.75638198852539
    10. 'False' → logprob: -12.75638198852539

Token 537: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006801460403949022
    2. 'return' → logprob: -7.500679969787598
    3. '   ' → logprob: -9.000679969787598
    4. ' return' → logprob: -12.625679969787598
    5. 'False' → logprob: -15.500679969787598
    6. '           ' → logprob: -15.750679969787598
    7. '	return' → logprob: -16.250680923461914
    8. '	' → logprob: -17.375680923461914
    9. '        
' → logprob: -17.625680923461914
    10. 'false' → logprob: -18.625680923461914

Token 538: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03838834539055824
    2. '       ' → logprob: -3.288388252258301
    3. ' return' → logprob: -8.0383882522583
    4. '   ' → logprob: -10.6633882522583
    5. '	return' → logprob: -14.2883882522583
    6. '           ' → logprob: -17.663389205932617
    7. '{return' → logprob: -18.288389205932617
    8. '```' → logprob: -19.038389205932617
    9. 'eturn' → logprob: -19.288389205932617
    10. '     ' → logprob: -19.288389205932617

Token 539: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -9.088346359931165e-07
    2. ' False' → logprob: -14.000000953674316
    3. 'false' → logprob: -22.875
    4. '   ' → logprob: -23.0
    5. '(False' → logprob: -24.25
    6. '=False' → logprob: -25.5
    7. 'True' → logprob: -25.875
    8. '_false' → logprob: -27.0
    9. '```' → logprob: -27.875
    10. 'None' → logprob: -28.0

Token 540: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 541: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 542: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.004814103711396456
    2. ' solve' → logprob: -5.629814147949219
    3. ' check' → logprob: -7.504814147949219
    4. ' solution' → logprob: -8.879814147949219
    5. ' can' → logprob: -8.879814147949219
    6. 'main' → logprob: -9.504814147949219
    7. ' shir' → logprob: -9.754814147949219
    8. '_' → logprob: -10.004814147949219
    9. ' is' → logprob: -10.129814147949219
    10. ' process' → logprob: -10.254814147949219

Token 543: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0019906130619347095
    2. '():
' → logprob: -6.251990795135498
    3. ' ():' → logprob: -10.00199031829834
    4. '(' → logprob: -12.12699031829834
    5. '()' → logprob: -12.12699031829834
    6. '():
' → logprob: -12.75199031829834
    7. '():

' → logprob: -13.87699031829834
    8. '_' → logprob: -14.75199031829834
    9. '(argv' → logprob: -15.00199031829834
    10. '().' → logprob: -15.37699031829834

Token 544: '   ' (ID: 271)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.7309018969535828
    2. '   ' → logprob: -0.8559018969535828
    3. ' import' → logprob: -3.2309019565582275
    4. ' n' → logprob: -4.355901718139648
    5. ' lines' → logprob: -4.480901718139648
    6. ' words' → logprob: -4.855901718139648
    7. ' readline' → logprob: -4.855901718139648
    8. 'input' → logprob: -5.980901718139648
    9. '```' → logprob: -5.980901718139648
    10. 'n' → logprob: -5.980901718139648

Token 545: ' input' (ID: 3422)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.18048812448978424
    2. 'n' → logprob: -1.930488109588623
    3. '   ' → logprob: -3.930488109588623
    4. 'import' → logprob: -8.555488586425781
    5. ' import' → logprob: -8.680488586425781
    6. ' N' → logprob: -10.305488586425781
    7. ' input' → logprob: -10.805488586425781
    8. 'N' → logprob: -12.055488586425781
    9. 'input' (adapté à ' input') → logprob: -14.055488586425781
    10. ' ' → logprob: -14.430488586425781

Token 546: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11390196532011032
    2. '_line' → logprob: -2.9889018535614014
    3. '_data' → logprob: -3.2389018535614014
    4. ' =' → logprob: -4.8639020919799805
    5. '_text' → logprob: -5.8639020919799805
    6. '_lines' → logprob: -5.9889020919799805
    7. '_str' → logprob: -6.1139020919799805
    8. '_' → logprob: -6.7389020919799805
    9. '=' → logprob: -6.8639020919799805
    10. '().' → logprob: -8.61390209197998

Token 547: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.45027467608451843
    2. ' sys' → logprob: -1.2002747058868408
    3. 'input' → logprob: -2.950274705886841
    4. ' input' → logprob: -4.700274467468262
    5. 'lambda' → logprob: -11.575274467468262
    6. '=sys' → logprob: -13.075274467468262
    7. '	sys' → logprob: -13.825274467468262
    8. 'stdin' → logprob: -13.950274467468262
    9. 'open' → logprob: -14.075274467468262
    10. ' lambda' → logprob: -14.075274467468262

Token 548: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.004514139145612717
    2. '.readline' → logprob: -6.004514217376709
    3. '.' → logprob: -6.254514217376709
    4. '.stdout' → logprob: -9.87951374053955
    5. '.input' → logprob: -10.12951374053955
    6. '.std' → logprob: -11.87951374053955
    7. ' .' → logprob: -12.12951374053955
    8. '.argv' → logprob: -12.25451374053955
    9. 'stdin' → logprob: -13.00451374053955
    10. '.read' → logprob: -13.50451374053955

Token 549: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.01833348535001278
    2. 'read' → logprob: -4.018333435058594
    3. ' readline' → logprob: -9.393333435058594
    4. 'stdin' → logprob: -10.393333435058594
    5. '.read' → logprob: -11.018333435058594
    6. 'readonly' → logprob: -11.018333435058594
    7. 'reader' → logprob: -11.268333435058594
    8. 'buffer' → logprob: -12.018333435058594
    9. '_read' → logprob: -12.143333435058594
    10. '```' → logprob: -12.768333435058594

Token 550: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.528675377368927
    2. '().' → logprob: -1.0286753177642822
    3. '()
' → logprob: -3.0286753177642822
    4. '   ' → logprob: -5.403675556182861
    5. '
' → logprob: -9.278675079345703
    6. '()\' → logprob: -9.903675079345703
    7. '(' → logprob: -10.903675079345703
    8. 'def' → logprob: -11.403675079345703
    9. '())' → logprob: -11.528675079345703
    10. '()<' → logprob: -11.653675079345703

Token 551: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003869070205837488
    2. 'n' → logprob: -5.75386905670166
    3. ' n' → logprob: -7.62886905670166
    4. '	n' → logprob: -9.00386905670166
    5. '(n' → logprob: -10.50386905670166
    6. 't' → logprob: -10.75386905670166
    7. '    
' → logprob: -10.75386905670166
    8. 'num' → logprob: -12.75386905670166
    9. '```' → logprob: -13.00386905670166
    10. '
' → logprob: -13.12886905670166

Token 552: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11193408071994781
    2. ' n' → logprob: -2.361934185028076
    3. '   ' → logprob: -4.611934185028076
    4. 't' → logprob: -6.611934185028076
    5. ' t' → logprob: -8.736933708190918
    6. 'q' → logprob: -8.986933708190918
    7. 'N' → logprob: -9.986933708190918
    8. 'k' → logprob: -10.986933708190918
    9. 'num' → logprob: -11.361933708190918
    10. '	n' → logprob: -11.986933708190918

Token 553: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3869578540325165
    2. ' True' → logprob: -1.1369578838348389
    3. '(True' → logprob: -9.511958122253418
    4. '   ' → logprob: -12.136958122253418
    5. ' line' → logprob: -12.761958122253418
    6. '1' → logprob: -12.886958122253418
    7. 'line' → logprob: -13.511958122253418
    8. '=True' → logprob: -14.886958122253418
    9. 'true' → logprob: -16.2619571685791
    10. ' ' → logprob: -17.0119571685791

Token 554: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.7856001853942871
    2. '():
' → logprob: -1.160600185394287
    3. '       ' → logprob: -2.410600185394287
    4. ':' → logprob: -2.660600185394287
    5. '   ' → logprob: -3.160600185394287
    6. ':
' → logprob: -3.910600185394287
    7. '(line' → logprob: -6.160600185394287
    8. ',' → logprob: -6.285600185394287
    9. '()' → logprob: -6.660600185394287
    10. ' line' → logprob: -7.160600185394287

Token 555: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07776987552642822
    2. '       ' → logprob: -2.7027697563171387
    3. ' line' → logprob: -4.952769756317139
    4. 'line' → logprob: -7.327769756317139
    5. '	line' → logprob: -9.702770233154297
    6. '   ' → logprob: -12.202770233154297
    7. '#line' → logprob: -12.577770233154297
    8. '(line' → logprob: -12.827770233154297
    9. 'try' → logprob: -12.952770233154297
    10. '_line' → logprob: -13.452770233154297

Token 556: ' n' (ID: 297)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.4988439977169037
    2. ' line' → logprob: -0.9988440275192261
    3. 'n' (adapté à ' n') → logprob: -3.8738439083099365
    4. 's' → logprob: -6.248844146728516
    5. ' n' → logprob: -7.248844146728516
    6. '   ' → logprob: -7.498844146728516
    7. '       ' → logprob: -8.623844146728516
    8. '	line' → logprob: -9.248844146728516
    9. ' s' → logprob: -9.373844146728516
    10. 'l' → logprob: -9.873844146728516

Token 557: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193631649017334
    2. ' =' → logprob: -1.5019363164901733
    3. '=int' → logprob: -12.126935958862305
    4. '=line' → logprob: -13.751935958862305
    5. '＝' → logprob: -15.626935958862305
    6. ' ' → logprob: -16.126935958862305
    7. '=input' → logprob: -16.251935958862305
    8. '_line' → logprob: -16.501935958862305
    9. 's' → logprob: -16.876935958862305
    10. '.' → logprob: -17.251935958862305

Token 558: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008473800495266914
    2. 'input' → logprob: -5.258473873138428
    3. ' int' → logprob: -5.758473873138428
    4. ' input' → logprob: -9.50847339630127
    5. 'sys' → logprob: -12.38347339630127
    6. ' sys' → logprob: -15.25847339630127
    7. '=int' → logprob: -16.883474349975586
    8. 'len' → logprob: -17.633474349975586
    9. '(int' → logprob: -17.633474349975586
    10. 'line' → logprob: -18.133474349975586

Token 559: '()
' (ID: 1234)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.2519654929637909
    2. '()' → logprob: -1.5019655227661133
    3. '()
' → logprob: -10.876965522766113
    4. '.strip' → logprob: -12.001965522766113
    5. '(' → logprob: -13.001965522766113
    6. '()\' → logprob: -13.001965522766113
    7. '())' → logprob: -13.376965522766113
    8. ' ().' → logprob: -14.251965522766113
    9. '()

' → logprob: -14.501965522766113
    10. '()?.' → logprob: -14.751965522766113

Token 560: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0993892103433609
    2. '.strip' → logprob: -2.5993893146514893
    3. ' =' → logprob: -5.34938907623291
    4. '<|end|>' → logprob: -5.47438907623291
    5. '=' → logprob: -6.09938907623291
    6. '.rstrip' → logprob: -6.09938907623291
    7. '   ' → logprob: -6.22438907623291
    8. 'if' → logprob: -6.59938907623291
    9. ' if' → logprob: -7.34938907623291
    10. '().' → logprob: -7.72438907623291

Token 561: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6364307999610901
    2. 'if' (adapté à ' if') → logprob: -1.3864307403564453
    3. '       ' → logprob: -1.5114307403564453
    4. '	if' → logprob: -9.261430740356445
    5. '
' → logprob: -9.761430740356445
    6. '   ' → logprob: -10.386430740356445
    7. 'n' → logprob: -11.011430740356445
    8. '\n' → logprob: -11.511430740356445
    9. '	' → logprob: -11.886430740356445
    10. ' n' → logprob: -11.886430740356445

Token 562: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0025372595991939306
    2. 'not' → logprob: -6.002537250518799
    3. ' n' → logprob: -9.877537727355957
    4. 'n' → logprob: -11.502537727355957
    5. ' ' → logprob: -16.87753677368164
    6. '	not' → logprob: -16.87753677368164
    7. ' ' → logprob: -19.00253677368164
    8. '!' → logprob: -19.25253677368164
    9. 'n't' → logprob: -19.62753677368164
    10. '(not' → logprob: -19.75253677368164

Token 563: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007100477814674377
    2. ' n' → logprob: -7.2507100105285645
    3. '	n' → logprob: -17.125709533691406
    4. ')n' → logprob: -20.875709533691406
    5. '_n' → logprob: -21.375709533691406
    6. '(n' → logprob: -21.500709533691406
    7. '$n' → logprob: -22.375709533691406
    8. '.n' → logprob: -23.750709533691406
    9. ' н' → logprob: -23.875709533691406
    10. '<n' → logprob: -24.375709533691406

Token 564: ':
' (ID: 734)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.23156587779521942
    2. ':' → logprob: -2.2315659523010254
    3. ':
' → logprob: -2.4815659523010254
    4. ' or' → logprob: -4.606565952301025
    5. '.' → logprob: -5.356565952301025
    6. '.rstrip' → logprob: -7.856565952301025
    7. ':return' → logprob: -8.731565475463867
    8. '.readline' → logprob: -8.731565475463867
    9. '   ' → logprob: -9.731565475463867
    10. '           ' → logprob: -9.856565475463867

Token 565: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05591753125190735
    2. '       ' → logprob: -2.930917501449585
    3. '   ' → logprob: -7.055917739868164
    4. '	   ' → logprob: -10.180917739868164
    5. '     ' → logprob: -10.430917739868164
    6. ',' → logprob: -10.805917739868164
    7. '		' → logprob: -11.055917739868164
    8. ' ' → logprob: -11.305917739868164
    9. ' break' → logprob: -11.555917739868164
    10. '	       ' → logprob: -11.930917739868164

Token 566: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.2933344542980194
    2. ' break' → logprob: -1.9183344841003418
    3. '           ' → logprob: -2.293334484100342
    4. '       ' → logprob: -5.793334484100342
    5. 'return' → logprob: -6.168334484100342
    6. '	break' → logprob: -7.043334484100342
    7. '
' → logprob: -8.918334007263184
    8. '   ' → logprob: -8.918334007263184
    9. '               ' → logprob: -10.043334007263184
    10. ' return' → logprob: -10.293334007263184

Token 567: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001544321421533823
    2. 'n' → logprob: -9.500154495239258
    3. '        
' → logprob: -11.000154495239258
    4. '   ' → logprob: -11.000154495239258
    5. '<|end|>' → logprob: -11.250154495239258
    6. ',' → logprob: -11.375154495239258
    7. '
' → logprob: -12.250154495239258
    8. ' n' → logprob: -12.250154495239258
    9. '```' → logprob: -12.375154495239258
    10. '	' → logprob: -13.750154495239258

Token 568: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008322591311298311
    2. ' n' → logprob: -7.7508320808410645
    3. 'n' → logprob: -8.125832557678223
    4. '        
' → logprob: -10.375832557678223
    5. '<|end|>' → logprob: -10.750832557678223
    6. ',' → logprob: -10.875832557678223
    7. '   ' → logprob: -11.125832557678223
    8. '	' → logprob: -12.000832557678223
    9. '	   ' → logprob: -13.250832557678223
    10. '           ' → logprob: -13.250832557678223

Token 569: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.20164351165294647
    2. 'n' (adapté à ' n') → logprob: -1.701643466949463
    3. '       ' → logprob: -8.451643943786621
    4. '   ' → logprob: -11.701643943786621
    5. '	n' → logprob: -12.826643943786621
    6. 'num' → logprob: -13.451643943786621
    7. '        
' → logprob: -14.076643943786621
    8. ' try' → logprob: -14.201643943786621
    9. 'try' → logprob: -14.451643943786621
    10. ' num' → logprob: -14.451643943786621

Token 570: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008622374385595322
    2. ' =' → logprob: -4.758622169494629
    3. '=int' → logprob: -11.758622169494629
    4. '＝' → logprob: -16.758623123168945
    5. '=n' → logprob: -17.633623123168945
    6. 'int' → logprob: -18.883623123168945
    7. 'n' → logprob: -18.883623123168945
    8. ' ' → logprob: -19.633623123168945
    9. '=
' → logprob: -19.758623123168945
    10. '=input' → logprob: -20.008623123168945

Token 571: ' n' (ID: 297)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -8.077528764260933e-05
    2. ' int' → logprob: -10.000081062316895
    3. 'n' → logprob: -10.250081062316895
    4. ' n' → logprob: -17.500080108642578
    5. '=int' → logprob: -20.125080108642578
    6. '(int' → logprob: -21.250080108642578
    7. '	int' → logprob: -23.125080108642578
    8. ':int' → logprob: -23.250080108642578
    9. '[int' → logprob: -23.375080108642578
    10. '<int' → logprob: -23.625080108642578

Token 572: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.05077025666832924
    2. '().' → logprob: -3.1757702827453613
    3. 'strip' → logprob: -5.175770282745361
    4. '.rstrip' → logprob: -7.175770282745361
    5. 'int' → logprob: -7.800770282745361
    6. '.readline' → logprob: -8.175769805908203
    7. 'def' → logprob: -8.175769805908203
    8. '.' → logprob: -9.175769805908203
    9. 'rstrip' → logprob: -9.925769805908203
    10. '()
' → logprob: -10.050769805908203

Token 573: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.07936966419219971
    2. '()' → logprob: -2.57936954498291
    3. '       ' → logprob: -8.32936954498291
    4. '()\' → logprob: -8.95436954498291
    5. '()
' → logprob: -10.57936954498291
    6. '()

' → logprob: -11.20436954498291
    7. '():
' → logprob: -11.32936954498291
    8. ' =' → logprob: -12.20436954498291
    9. '();' → logprob: -12.20436954498291
    10. '()==' → logprob: -12.20436954498291

Token 574: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036736033856868744
    2. ' if' → logprob: -3.536736011505127
    3. 'if' → logprob: -5.036736011505127
    4. '```' → logprob: -8.286736488342285
    5. '<|end|>' → logprob: -9.661736488342285
    6. ',' → logprob: -10.161736488342285
    7. '	if' → logprob: -10.411736488342285
    8. '   ' → logprob: -10.911736488342285
    9. '	' → logprob: -11.286736488342285
    10. '``' → logprob: -12.036736488342285

Token 575: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00012761499965563416
    2. ' if' → logprob: -9.250127792358398
    3. '       ' → logprob: -10.375127792358398
    4. '	if' → logprob: -15.750127792358398
    5. 'If' → logprob: -17.2501277923584
    6. 'n' → logprob: -18.6251277923584
    7. '
' → logprob: -18.7501277923584
    8. '   ' → logprob: -19.6251277923584
    9. '```' → logprob: -20.1251277923584
    10. ';if' → logprob: -20.8751277923584

Token 576: ' n' (ID: 297)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.4980587363243103
    2. ' not' → logprob: -0.9980587363243103
    3. 'n' → logprob: -3.748058795928955
    4. ' n' → logprob: -9.248058319091797
    5. '   ' → logprob: -10.498058319091797
    6. '       ' → logprob: -11.748058319091797
    7. 'n't' → logprob: -14.123058319091797
    8. '	not' → logprob: -15.498058319091797
    9. ' ' → logprob: -16.123058319091797
    10. '           ' → logprob: -17.248058319091797

Token 577: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.47421857714653015
    2. '==' → logprob: -0.9742186069488525
    3. '()==' → logprob: -9.099218368530273
    4. '===' → logprob: -11.974218368530273
    5. '=' → logprob: -12.224218368530273
    6. '=='' → logprob: -12.599218368530273
    7. ' ===' → logprob: -12.599218368530273
    8. ')==' → logprob: -12.724218368530273
    9. '==
' → logprob: -13.224218368530273
    10. '()' → logprob: -13.474218368530273

Token 578: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1619628220796585
    2. '"' → logprob: -1.911962866783142
    3. '0' → logprob: -6.536962985992432
    4. '''' → logprob: -8.286962509155273
    5. '""' → logprob: -10.536962509155273
    6. ' '' → logprob: -12.536962509155273
    7. '"":' → logprob: -13.911962509155273
    8. ''q' → logprob: -13.911962509155273
    9. ''end' → logprob: -13.911962509155273
    10. ''O' → logprob: -14.036962509155273

Token 579: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07896304875612259
    2. ''' → logprob: -2.578963041305542
    3. '"' → logprob: -9.703963279724121
    4. ' ' → logprob: -11.703963279724121
    5. '```' → logprob: -13.203963279724121
    6. '''' → logprob: -14.703963279724121
    7. ' '' → logprob: -14.953963279724121
    8. '   ' → logprob: -15.203963279724121
    9. ''end' → logprob: -15.578963279724121
    10. '':' → logprob: -15.953963279724121

Token 580: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.14115554094314575
    2. ':
' → logprob: -2.391155481338501
    3. '':' → logprob: -3.641155481338501
    4. ':' → logprob: -5.01615571975708
    5. '           ' → logprob: -5.39115571975708
    6. ''):
' → logprob: -7.01615571975708
    7. '       ' → logprob: -7.76615571975708
    8. '\n' → logprob: -7.89115571975708
    9. '):
' → logprob: -8.016155242919922
    10. ''' → logprob: -8.391155242919922

Token 581: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.558399319241289e-05
    2. '		' → logprob: -11.250025749206543
    3. '	       ' → logprob: -12.250025749206543
    4. ' break' → logprob: -12.625025749206543
    5. '       ' → logprob: -13.750025749206543
    6. '          ' → logprob: -14.125025749206543
    7. '   ' → logprob: -14.375025749206543
    8. '	   ' → logprob: -15.000025749206543
    9. '		   ' → logprob: -15.375025749206543
    10. ',' → logprob: -15.375025749206543

Token 582: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.7267622351646423
    2. '           ' → logprob: -0.9767622351646423
    3. ' break' → logprob: -1.976762294769287
    4. 'return' → logprob: -6.851762294769287
    5. '	break' → logprob: -8.476761817932129
    6. '		' → logprob: -9.351761817932129
    7. '               ' → logprob: -9.851761817932129
    8. ' return' → logprob: -10.226761817932129
    9. '       ' → logprob: -10.976761817932129
    10. '	       ' → logprob: -10.976761817932129

Token 583: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012853523949161172
    2. '        
' → logprob: -7.626285552978516
    3. '<|end|>' → logprob: -7.626285552978516
    4. '
' → logprob: -9.251285552978516
    5. '	' → logprob: -9.626285552978516
    6. '   ' → logprob: -9.876285552978516
    7. ',' → logprob: -10.501285552978516
    8. '```' → logprob: -10.876285552978516
    9. '  
' → logprob: -11.501285552978516
    10. '<|end|>' → logprob: -11.751285552978516

Token 584: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008854917832650244
    2. '<|end|>' → logprob: -7.875885486602783
    3. '	' → logprob: -8.000885963439941
    4. '   ' → logprob: -9.625885963439941
    5. '        
' → logprob: -10.000885963439941
    6. '	   ' → logprob: -10.875885963439941
    7. ',' → logprob: -11.750885963439941
    8. '<|end|>' → logprob: -12.125885963439941
    9. '	       ' → logprob: -12.750885963439941
    10. '      ' → logprob: -13.125885963439941

Token 585: ' n' (ID: 297)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.7145230174064636
    2. ' words' → logprob: -0.8395230174064636
    3. '       ' → logprob: -2.5895230770111084
    4. 'n' (adapté à ' n') → logprob: -7.089522838592529
    5. 'num' → logprob: -7.214522838592529
    6. 'm' → logprob: -7.339522838592529
    7. ' n' → logprob: -7.464522838592529
    8. 'k' → logprob: -9.089523315429688
    9. ' num' → logprob: -9.089523315429688
    10. ' k' → logprob: -9.214523315429688

Token 586: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47452789545059204
    2. ' =' → logprob: -0.974527895450592
    3. '=int' → logprob: -7.724527835845947
    4. 'int' → logprob: -12.599528312683105
    5. 'words' → logprob: -13.099528312683105
    6. '_words' → logprob: -13.849528312683105
    7. ' ' → logprob: -15.099528312683105
    8. 'n' → logprob: -15.099528312683105
    9. '```' → logprob: -15.349528312683105
    10. '＝' → logprob: -15.474528312683105

Token 587: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.704273118884885e-07
    2. ' int' → logprob: -14.250000953674316
    3. '[int' → logprob: -24.5
    4. '=int' → logprob: -25.875
    5. '(int' → logprob: -27.125
    6. '<int' → logprob: -27.75
    7. '	int' → logprob: -28.125
    8. '  ' → logprob: -28.25
    9. ':int' → logprob: -28.75
    10. '   ' → logprob: -29.25

Token 588: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.1888679839321412e-05
    2. 'n' → logprob: -10.750021934509277
    3. '(' → logprob: -15.375021934509277
    4. ' (' → logprob: -17.12502098083496
    5. ')n' → logprob: -17.62502098083496
    6. '```' → logprob: -17.75002098083496
    7. '	n' → logprob: -17.87502098083496
    8. ' n' → logprob: -17.87502098083496
    9. '(
' → logprob: -18.25002098083496
    10. '`' → logprob: -18.75002098083496

Token 589: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06230364739894867
    2. ')
' → logprob: -2.8123035430908203
    3. '       ' → logprob: -8.06230354309082
    4. ' )' → logprob: -12.06230354309082
    5. '   ' → logprob: -12.56230354309082
    6. ')
' → logprob: -13.18730354309082
    7. '	' → logprob: -13.43730354309082
    8. ')`' → logprob: -13.81230354309082
    9. '`)' → logprob: -14.06230354309082
    10. ' )
' → logprob: -14.06230354309082

Token 590: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013007047586143017
    2. 'words' → logprob: -4.388007164001465
    3. ' words' → logprob: -8.138007164001465
    4. '   ' → logprob: -10.013007164001465
    5. '	' → logprob: -10.263007164001465
    6. '        
' → logprob: -10.263007164001465
    7. '(words' → logprob: -10.388007164001465
    8. '```' → logprob: -10.388007164001465
    9. '<|end|>' → logprob: -11.763007164001465
    10. '	   ' → logprob: -12.388007164001465

Token 591: ' words' (ID: 6391)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' (adapté à ' words') → logprob: -0.001627217628993094
    2. ' words' → logprob: -7.001627445220947
    3. '       ' → logprob: -7.251627445220947
    4. '```' → logprob: -13.376626968383789
    5. '(words' → logprob: -13.501626968383789
    6. '   ' → logprob: -14.126626968383789
    7. '_words' → logprob: -14.126626968383789
    8. '        
' → logprob: -14.251626968383789
    9. '.words' → logprob: -14.376626968383789
    10. 'lines' → logprob: -15.251626968383789

Token 592: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38701382279396057
    2. ' =' → logprob: -1.1370137929916382
    3. '=[]' → logprob: -9.38701343536377
    4. '   ' → logprob: -10.38701343536377
    5. '=[]
' → logprob: -10.88701343536377
    6. '       ' → logprob: -12.38701343536377
    7. '    ' → logprob: -13.63701343536377
    8. '[]' → logprob: -14.26201343536377
    9. '	' → logprob: -14.26201343536377
    10. '```' → logprob: -14.76201343536377

Token 593: ' [' (ID: 723)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.023453358560800552
    2. '[' → logprob: -3.7734534740448
    3. '[n' → logprob: -10.523453712463379
    4. '[next' → logprob: -10.523453712463379
    5. '[int' → logprob: -10.773453712463379
    6. '[list' → logprob: -11.148453712463379
    7. '[str' → logprob: -11.273453712463379
    8. '[data' → logprob: -11.398453712463379
    9. '[item' → logprob: -11.398453712463379
    10. '[ind' → logprob: -11.523453712463379

Token 594: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -3.5954712075181305e-05
    2. ' input' → logprob: -10.250036239624023
    3. 'sys' → logprob: -14.500036239624023
    4. '(input' → logprob: -17.625036239624023
    5. '	input' → logprob: -18.375036239624023
    6. '<input' → logprob: -19.000036239624023
    7. '[input' → logprob: -20.375036239624023
    8. '   ' → logprob: -20.750036239624023
    9. '=input' → logprob: -20.875036239624023
    10. '
' → logprob: -21.625036239624023

Token 595: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0011790355201810598
    2. '()' → logprob: -6.751179218292236
    3. '()]' → logprob: -11.751178741455078
    4. '()].' → logprob: -14.501178741455078
    5. ' ().' → logprob: -15.376178741455078
    6. '()
' → logprob: -16.126178741455078
    7. '(' → logprob: -16.626178741455078
    8. '())' → logprob: -17.001178741455078
    9. ' ()' → logprob: -18.126178741455078
    10. '.strip' → logprob: -18.626178741455078

Token 596: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.029750604182481766
    2. 'rstrip' → logprob: -3.5297505855560303
    3. '_strip' → logprob: -16.65475082397461
    4. ' strip' → logprob: -16.77975082397461
    5. 'read' → logprob: -16.90475082397461
    6. '(strip' → logprob: -17.27975082397461
    7. '-strip' → logprob: -19.15475082397461
    8. '.rstrip' → logprob: -20.02975082397461
    9. '.strip' → logprob: -20.02975082397461
    10. 'r' → logprob: -21.40475082397461

Token 597: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00015705463010817766
    2. 'for' → logprob: -9.875157356262207
    3. '()]' → logprob: -10.000157356262207
    4. ')' → logprob: -10.625157356262207
    5. '())' → logprob: -10.875157356262207
    6. ' for' → logprob: -11.375157356262207
    7. ' ()' → logprob: -12.625157356262207
    8. '(' → logprob: -14.000157356262207
    9. '()
' → logprob: -14.875157356262207
    10. ']' → logprob: -15.875157356262207

Token 598: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.36890971660614014
    2. 'for' → logprob: -1.4939097166061401
    3. '()' → logprob: -2.4939098358154297
    4. ')' → logprob: -6.61890983581543
    5. '	for' → logprob: -9.99390983581543
    6. '       ' → logprob: -10.61890983581543
    7. ']' → logprob: -12.11890983581543
    8. '())' → logprob: -12.61890983581543
    9. '           ' → logprob: -12.74390983581543
    10. '   ' → logprob: -12.74390983581543

Token 599: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0001907855912577361
    2. '_range' → logprob: -8.750190734863281
    3. '_i' → logprob: -11.625190734863281
    4. ' _' → logprob: -11.625190734863281
    5. 'range' → logprob: -12.125190734863281
    6. ' range' → logprob: -12.250190734863281
    7. '_in' → logprob: -13.000190734863281
    8. ' in' → logprob: -14.000190734863281
    9. 'i' → logprob: -15.000190734863281
    10. '_tokens' → logprob: -15.125190734863281

Token 600: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00019698418327607214
    2. ' range' → logprob: -8.625197410583496
    3. 'in' → logprob: -11.000197410583496
    4. '_' → logprob: -15.250197410583496
    5. '	range' → logprob: -15.750197410583496
    6. '(range' → logprob: -15.875197410583496
    7. ' in' → logprob: -16.75019645690918
    8. '_range' → logprob: -17.12519645690918
    9. '...' → logprob: -18.12519645690918
    10. '0' → logprob: -18.12519645690918

Token 601: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.1472419600977446e-06
    2. ' range' → logprob: -13.750000953674316
    3. '(range' → logprob: -19.125001907348633
    4. '	range' → logprob: -20.625001907348633
    5. '```' → logprob: -23.250001907348633
    6. '
' → logprob: -23.375001907348633
    7. '_range' → logprob: -23.375001907348633
    8. '.range' → logprob: -23.625001907348633
    9. '   ' → logprob: -24.250001907348633
    10. '_' → logprob: -24.750001907348633

Token 602: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2519892156124115
    2. 'n' → logprob: -1.5019892454147339
    3. ' n' → logprob: -10.126989364624023
    4. '	n' → logprob: -11.626989364624023
    5. '(' → logprob: -11.876989364624023
    6. ')n' → logprob: -13.376989364624023
    7. ' (' → logprob: -14.126989364624023
    8. '   ' → logprob: -14.501989364624023
    9. '_n' → logprob: -14.626989364624023
    10. '<n' → logprob: -15.376989364624023

Token 603: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0022171074524521828
    2. ')' → logprob: -6.5022172927856445
    3. ']' → logprob: -7.2522172927856445
    4. '       ' → logprob: -12.627217292785645
    5. '   ' → logprob: -13.377217292785645
    6. ')])' → logprob: -15.252217292785645
    7. '])]' → logprob: -16.002216339111328
    8. ' )' → logprob: -16.127216339111328
    9. ')],' → logprob: -16.127216339111328
    10. ')]
' → logprob: -16.627216339111328

Token 604: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019236071035265923
    2. '   ' → logprob: -4.144236087799072
    3. '<|end|>' → logprob: -6.394236087799072
    4. '        
' → logprob: -7.519236087799072
    5. '
' → logprob: -8.144235610961914
    6. '```' → logprob: -8.269235610961914
    7. '    
' → logprob: -8.519235610961914
    8. '  
' → logprob: -9.644235610961914
    9. 'if' → logprob: -9.769235610961914
    10. '<|end|>' → logprob: -9.894235610961914

Token 605: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.413814902305603
    2. 'if' (adapté à ' if') → logprob: -1.663814902305603
    3. 'result' → logprob: -1.913814902305603
    4. '       ' → logprob: -6.788815021514893
    5. ' if' → logprob: -8.038814544677734
    6. ' result' → logprob: -8.413814544677734
    7. '   ' → logprob: -8.788814544677734
    8. ' print' → logprob: -9.663814544677734
    9. 'ok' → logprob: -10.663814544677734
    10. 'answer' → logprob: -11.288814544677734

Token 606: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.00020354038861114532
    2. ' can' → logprob: -8.500203132629395
    3. '(can' → logprob: -19.00020408630371
    4. '	can' → logprob: -19.87520408630371
    5. 'not' → logprob: -21.50020408630371
    6. '_can' → logprob: -22.75020408630371
    7. 'Can' → logprob: -24.00020408630371
    8. '
' → logprob: -24.12520408630371
    9. 'all' → logprob: -24.12520408630371
    10. '.can' → logprob: -24.62520408630371

Token 607: '_form' (ID: 18664)
  Prédit: '_form'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_form' → logprob: -1.8624639324116288e-06
    2. 'form' → logprob: -13.250001907348633
    3. '_forms' → logprob: -17.250001907348633
    4. '_' → logprob: -17.500001907348633
    5. '_Form' → logprob: -18.750001907348633
    6. '_FORM' → logprob: -19.125001907348633
    7. ' _' → logprob: -19.375001907348633
    8. ' form' → logprob: -19.625001907348633
    9. 'Form' → logprob: -20.875001907348633
    10. '_format' → logprob: -20.875001907348633

Token 608: '_sh' (ID: 8823)
  Prédit: '_sh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sh' → logprob: -1.8624639324116288e-06
    2. 'sh' → logprob: -13.500001907348633
    3. '_' → logprob: -16.375001907348633
    4. '_s' → logprob: -16.750001907348633
    5. '_words' → logprob: -17.125001907348633
    6. 'a' → logprob: -17.625001907348633
    7. 's' → logprob: -17.625001907348633
    8. '_SH' → logprob: -17.750001907348633
    9. '	sh' → logprob: -17.875001907348633
    10. '_can' → logprob: -17.875001907348633

Token 609: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.0005670914542861283
    2. 'itori' → logprob: -8.375567436218262
    3. 'it' → logprob: -9.500567436218262
    4. 'irit' → logprob: -10.375567436218262
    5. 'ot' → logprob: -10.500567436218262
    6. 'itor' → logprob: -10.625567436218262
    7. 'or' → logprob: -10.750567436218262
    8. '```' → logprob: -10.750567436218262
    9. 'iro' → logprob: -11.000567436218262
    10. '_' → logprob: -11.250567436218262

Token 610: 'itori' (ID: 44031)
  Prédit: 'itori'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itori' → logprob: -1.1472419600977446e-06
    2. 'itor' → logprob: -14.625000953674316
    3. 'atori' → logprob: -15.375000953674316
    4. 'itore' → logprob: -15.750000953674316
    5. 'itoris' → logprob: -15.875000953674316
    6. 'it' → logprob: -16.375001907348633
    7. 'itari' → logprob: -18.625001907348633
    8. 'iteri' → logprob: -19.125001907348633
    9. 'itors' → logprob: -19.250001907348633
    10. 'itory' → logprob: -19.375001907348633

Token 611: '(words' (ID: 80550)
  Prédit: '(words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(words' → logprob: -1.9361264946837764e-07
    2. 'words' → logprob: -16.25
    3. '(points' → logprob: -18.0
    4. ' (' → logprob: -18.875
    5. '(lines' → logprob: -18.875
    6. '(' → logprob: -19.125
    7. '(users' → logprob: -19.375
    8. '(weights' → logprob: -19.5
    9. '(tokens' → logprob: -20.0
    10. '(numbers' → logprob: -20.25

Token 612: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15314657986164093
    2. '):
' → logprob: -2.278146505355835
    3. '(words' → logprob: -3.278146505355835
    4. ')' → logprob: -6.778146743774414
    5. ':' → logprob: -7.528146743774414
    6. '   ' → logprob: -9.903146743774414
    7. '==' → logprob: -10.903146743774414
    8. 'print' → logprob: -11.278146743774414
    9. ')==' → logprob: -11.403146743774414
    10. ':
' → logprob: -12.028146743774414

Token 613: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008833550848066807
    2. 'print' → logprob: -4.758833408355713
    3. ' print' → logprob: -8.633833885192871
    4. '       ' → logprob: -10.258833885192871
    5. '	       ' → logprob: -13.008833885192871
    6. '```' → logprob: -13.508833885192871
    7. '
' → logprob: -14.258833885192871
    8. '		' → logprob: -14.633833885192871
    9. '	print' → logprob: -15.508833885192871
    10. '               ' → logprob: -15.508833885192871

Token 614: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04135372117161751
    2. '           ' → logprob: -3.791353702545166
    3. ' print' → logprob: -4.041353702545166
    4. '       ' → logprob: -7.916353702545166
    5. '	print' → logprob: -12.291354179382324
    6. '   ' → logprob: -14.041354179382324
    7. '               ' → logprob: -14.291354179382324
    8. '```' → logprob: -14.916354179382324
    9. '		' → logprob: -15.291354179382324
    10. '	       ' → logprob: -15.916354179382324

Token 615: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.006776358000934124
    2. '('' → logprob: -5.006776332855225
    3. '"' → logprob: -10.131776809692383
    4. '(' → logprob: -10.881776809692383
    5. ''' → logprob: -13.506776809692383
    6. ' ("' → logprob: -15.256776809692383
    7. '('"' → logprob: -16.131776809692383
    8. ''S' → logprob: -16.506776809692383
    9. '"S' → logprob: -16.631776809692383
    10. '(("' → logprob: -16.631776809692383

Token 616: 'OK' (ID: 5175)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12703992426395416
    2. 'OK' → logprob: -2.752039909362793
    3. 'Yes' → logprob: -3.252039909362793
    4. 'YES' → logprob: -4.877039909362793
    5. 'F' → logprob: -6.502039909362793
    6. ''' → logprob: -6.752039909362793
    7. '`' → logprob: -6.752039909362793
    8. '".' → logprob: -7.627039909362793
    9. '"S' → logprob: -7.752039909362793
    10. 'First' → logprob: -7.752039909362793

Token 617: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.3869532346725464
    2. '")' → logprob: -1.1369532346725464
    3. '")
' → logprob: -9.511953353881836
    4. ')' → logprob: -12.261953353881836
    5. ')
' → logprob: -13.136953353881836
    6. '"' → logprob: -14.511953353881836
    7. ')")
' → logprob: -14.636953353881836
    8. '");' → logprob: -15.636953353881836
    9. '")

' → logprob: -15.886953353881836
    10. ')")' → logprob: -16.761953353881836

Token 618: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07061570882797241
    2. 'else' → logprob: -2.695615768432617
    3. ' else' → logprob: -7.320615768432617
    4. '```' → logprob: -12.195615768432617
    5. '	' → logprob: -12.320615768432617
    6. '	else' → logprob: -12.570615768432617
    7. '   ' → logprob: -12.945615768432617
    8. '           ' → logprob: -14.695615768432617
    9. '<|end|>' → logprob: -14.695615768432617
    10. 'elif' → logprob: -15.445615768432617

Token 619: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.10308798402547836
    2. '       ' → logprob: -2.353087902069092
    3. ' else' → logprob: -5.853087902069092
    4. '	else' → logprob: -12.22808837890625
    5. '   ' → logprob: -14.35308837890625
    6. '	' → logprob: -14.85308837890625
    7. '```' → logprob: -15.60308837890625
    8. 'elif' → logprob: -15.72808837890625
    9. '           ' → logprob: -17.97808837890625
    10. 'elser' → logprob: -18.10308837890625

Token 620: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10715538263320923
    2. ':
' → logprob: -2.6071553230285645
    3. ':' → logprob: -3.6071553230285645
    4. ' print' → logprob: -8.732155799865723
    5. '               ' → logprob: -9.232155799865723
    6. '          ' → logprob: -9.357155799865723
    7. 'print' → logprob: -9.607155799865723
    8. '   ' → logprob: -9.857155799865723
    9. '	       ' → logprob: -9.857155799865723
    10. '		' → logprob: -10.357155799865723

Token 621: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4984573721885681
    2. ' print' → logprob: -1.248457431793213
    3. '           ' → logprob: -2.248457431793213
    4. '	print' → logprob: -10.998456954956055
    5. '   ' → logprob: -13.248456954956055
    6. '       ' → logprob: -13.248456954956055
    7. '	       ' → logprob: -13.373456954956055
    8. '               ' → logprob: -14.123456954956055
    9. '		' → logprob: -14.373456954956055
    10. ' ' → logprob: -15.123456954956055

Token 622: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00012451570364646614
    2. ' print' → logprob: -9.00012493133545
    3. '           ' → logprob: -14.37512493133545
    4. '	print' → logprob: -15.12512493133545
    5. '       ' → logprob: -15.37512493133545
    6. '   ' → logprob: -17.375123977661133
    7. '```' → logprob: -19.000123977661133
    8. 'println' → logprob: -20.875123977661133
    9. 'Print' → logprob: -21.000123977661133
    10. ' ' → logprob: -21.125123977661133

Token 623: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0011741555063053966
    2. '(' → logprob: -6.751173973083496
    3. ' ("' → logprob: -13.501173973083496
    4. '"' → logprob: -13.751173973083496
    5. '(N' → logprob: -14.251173973083496
    6. '('' → logprob: -14.251173973083496
    7. '()' → logprob: -16.876174926757812
    8. '(NO' → logprob: -16.876174926757812
    9. '("(' → logprob: -17.751174926757812
    10. ' (' → logprob: -18.001174926757812

Token 624: 'NG' (ID: 19236)
  Prédit: 'NG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NG' → logprob: -0.005507068708539009
    2. '"' → logprob: -5.255506992340088
    3. '"No' → logprob: -8.505507469177246
    4. 'ng' → logprob: -10.880507469177246
    5. 'No' → logprob: -11.005507469177246
    6. 'NO' → logprob: -11.505507469177246
    7. ''' → logprob: -12.255507469177246
    8. '_ng' → logprob: -12.505507469177246
    9. '
' → logprob: -12.630507469177246
    10. 'NA' → logprob: -13.005507469177246

Token 625: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.007144767791032791
    2. ')' → logprob: -5.007144927978516
    3. ')")' → logprob: -7.757144927978516
    4. '}")' → logprob: -14.632144927978516
    5. '")
' → logprob: -14.757144927978516
    6. '')' → logprob: -15.507144927978516
    7. '"' → logprob: -15.882144927978516
    8. ')"' → logprob: -16.007144927978516
    9. '```' → logprob: -16.757144927978516
    10. '()' → logprob: -17.132144927978516

Token 626: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0010447168024256825
    2. 'main' → logprob: -7.126044750213623
    3. '
' → logprob: -8.501044273376465
    4. ' if' → logprob: -10.501044273376465
    5. '```' → logprob: -12.001044273376465
    6. 'can' → logprob: -13.626044273376465
    7. '\n' → logprob: -14.251044273376465
    8. '\' → logprob: -15.001044273376465
    9. '<|end|>' → logprob: -15.126044273376465
    10. '  
' → logprob: -15.376044273376465

Token 627: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.38698163628578186
    2. '__' → logprob: -1.1369816064834595
    3. 'name' → logprob: -9.886981964111328
    4. '_name' → logprob: -9.886981964111328
    5. ' name' → logprob: -13.011981964111328
    6. ' ' → logprob: -13.261981964111328
    7. ' ' → logprob: -13.761981964111328
    8. 'Name' → logprob: -13.886981964111328
    9. '___' → logprob: -14.261981964111328
    10. '_' → logprob: -14.636981964111328

Token 628: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.008328035473823547
    2. '==' → logprob: -5.383327960968018
    3. ' ==' → logprob: -5.758327960968018
    4. '=="' → logprob: -8.508328437805176
    5. ' __' → logprob: -9.258328437805176
    6. '.__' → logprob: -9.633328437805176
    7. '__.__' → logprob: -9.883328437805176
    8. '```' → logprob: -10.258328437805176
    9. '=='' → logprob: -10.758328437805176
    10. '[' → logprob: -11.008328437805176

Token 629: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00011772842844948173
    2. '__.__' → logprob: -9.125117301940918
    3. '__.' → logprob: -12.750117301940918
    4. '==' → logprob: -12.875117301940918
    5. '__["' → logprob: -13.250117301940918
    6. '___' → logprob: -14.875117301940918
    7. '__('' → logprob: -15.375117301940918
    8. '____' → logprob: -15.875117301940918
    9. '```' → logprob: -15.875117301940918
    10. ' ==' → logprob: -16.000118255615234

Token 630: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16242685914039612
    2. '==' → logprob: -2.0374269485473633
    3. ' ==' → logprob: -4.537426948547363
    4. '=="' → logprob: -4.787426948547363
    5. '=='' → logprob: -7.662426948547363
    6. '__.__' → logprob: -10.662426948547363
    7. '"' → logprob: -11.412426948547363
    8. '===' → logprob: -12.037426948547363
    9. '__('' → logprob: -12.912426948547363
    10. '___' → logprob: -13.537426948547363

Token 631: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02334284409880638
    2. ''' → logprob: -3.7733428478240967
    3. '__' → logprob: -9.273343086242676
    4. ' "__' → logprob: -13.023343086242676
    5. '"user' → logprob: -14.023343086242676
    6. '"name' → logprob: -15.773343086242676
    7. '("__' → logprob: -17.14834213256836
    8. 'main' → logprob: -17.27334213256836
    9. ' '__' → logprob: -17.39834213256836
    10. '"log' → logprob: -18.02334213256836

Token 632: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00047714399988763034
    2. '__' → logprob: -7.875477313995361
    3. '"' → logprob: -9.500476837158203
    4. 'name' → logprob: -11.250476837158203
    5. ''' → logprob: -12.625476837158203
    6. 'built' → logprob: -13.125476837158203
    7. ' main' → logprob: -13.625476837158203
    8. '_main' → logprob: -14.000476837158203
    9. '__":
' → logprob: -15.250476837158203
    10. '-main' → logprob: -15.250476837158203

Token 633: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.08447746187448502
    2. '__' → logprob: -2.584477424621582
    3. '__':
' → logprob: -5.209477424621582
    4. '__
' → logprob: -10.459477424621582
    5. '__["' → logprob: -10.834477424621582
    6. '__.__' → logprob: -11.084477424621582
    7. '__.' → logprob: -11.584477424621582
    8. '__:' → logprob: -11.834477424621582
    9. '__
' → logprob: -12.084477424621582
    10. '==' → logprob: -12.959477424621582

Token 634: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0006078407750464976
    2. '   ' → logprob: -7.500607967376709
    3. ' main' → logprob: -10.00060749053955
    4. '	main' → logprob: -11.62560749053955
    5. '_main' → logprob: -14.62560749053955
    6. ' ' → logprob: -18.375608444213867
    7. '(main' → logprob: -18.500608444213867
    8. 'Main' → logprob: -18.500608444213867
    9. '  ' → logprob: -19.000608444213867
    10. '```' → logprob: -19.000608444213867

Token 635: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.25
    3. '	main' → logprob: -22.25
    4. '_main' → logprob: -25.5
    5. '.main' → logprob: -26.125
    6. '(main' → logprob: -27.125
    7. '   ' → logprob: -27.375
    8. 'Main' → logprob: -27.5
    9. '主' → logprob: -29.5
    10. 'import' → logprob: -29.5

Token 636: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 634
Tokens correctement prédits (1ère position, stricte): 258
Tokens correctement prédits (1ère position, avec adaptation): 291
Tokens correctement prédits (top 10): 523
Précision stricte (1ère position): 40.69%
Précision adaptée (1ère position): 45.90%
Précision (top 10): 82.49%
================================================================================
