================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:15:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class WaterCompany:
    def calculate_fee(self, usage_liters: int) -> int:
        raise NotImplementedError("Subclasses must implement calculate_fee method")

class XCompany(WaterCompany):
    def __init__(self, rate_per_liter: int):
        self._rate_per_liter = rate_per_liter

    def calculate_fee(self, usage_liters: int) -> int:
        return self._rate_per_liter * usage_liters

class YCompany(WaterCompany):
    def __init__(self, base_fee: int, threshold_liters: int, additional_fee_per_liter: int):
        self._base_fee = base_fee
        self._threshold_liters = threshold_liters
        self._additional_fee_per_liter = additional_fee_per_liter

    def calculate_fee(self, usage_liters: int) -> int:
        if usage_liters <= self._threshold_liters:
            return self._base_fee
        else:
            extra_liters = usage_liters - self._threshold_liters
            return self._base_fee + self._additional_fee_per_liter * extra_liters

class WaterUsage:
    def __init__(self, usage_liters: int):
        self._usage_liters = usage_liters

    @property
    def usage_liters(self) -> int:
        return self._usage_liters

class WaterRateSelector:
    def __init__(self, companies: list[WaterCompany], usage: WaterUsage):
        self._companies = companies
        self._usage = usage

    def select_minimum_fee(self) -> int:
        fees = [company.calculate_fee(self._usage.usage_liters) for company in self._companies]
        return min(fees)

def main():
    class InputReader:
        def __init__(self):
            self._inputs = []

        def read_input(self):
            for _ in range(5):
                self._inputs.append(int(input()))
            return self._inputs

    reader = InputReader()
    A, B, C, D, P = reader.read_input()

    x_company = XCompany(rate_per_liter=A)
    y_company = YCompany(base_fee=B, threshold_liters=C, additional_fee_per_liter=D)
    usage = WaterUsage(usage_liters=P)

    selector = WaterRateSelector(companies=[x_company, y_company], usage=usage)
    min_fee = selector.select_minimum_fee()
    print(min_fee)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Water' (ID: 12303)
  → Token d'amorce (pas de prédiction)

Token 2: 'Company' (ID: 15545)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.2601815462112427
    2. ':' → logprob: -2.135181427001953
    3. ' {' → logprob: -2.760181427001953
    4. '(' → logprob: -3.260181427001953
    5. '.' → logprob: -4.760181427001953
    6. '```' → logprob: -7.885181427001953
    7. ' ' → logprob: -9.760181427001953
    8. ' :' → logprob: -10.260181427001953
    9. '({' → logprob: -10.385181427001953
    10. '{
' → logprob: -10.885181427001953

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4432753622531891
    2. '   ' → logprob: -1.5682753324508667
    3. '(' → logprob: -2.0682754516601562
    4. '```' → logprob: -4.693275451660156
    5. '.' → logprob: -5.193275451660156
    6. ''' → logprob: -5.943275451660156
    7. ':
' → logprob: -6.068275451660156
    8. '(
' → logprob: -7.193275451660156
    9. ' ' → logprob: -7.443275451660156
    10. '`' → logprob: -7.943275451660156

Token 5: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.35488051176071167
    2. ' ' → logprob: -2.1048805713653564
    3. '   ' → logprob: -2.6048805713653564
    4. 'def' (adapté à ' def') → logprob: -2.8548805713653564
    5. ''' → logprob: -4.604880332946777
    6. '    ' → logprob: -4.854880332946777
    7. ' 
' → logprob: -4.979880332946777
    8. '_' → logprob: -5.604880332946777
    9. '```' → logprob: -5.854880332946777
    10. '\' → logprob: -6.354880332946777

Token 6: ' calculate' (ID: 17950)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18045082688331604
    2. ' __' → logprob: -2.680450916290283
    3. ' calculate' → logprob: -3.180450916290283
    4. '__' → logprob: -3.555450916290283
    5. ' add' → logprob: -5.430450916290283
    6. ' init' → logprob: -5.555450916290283
    7. 'calculate' → logprob: -5.805450916290283
    8. ' process' → logprob: -5.930450916290283
    9. '  ' → logprob: -6.430450916290283
    10. ' initialize' → logprob: -6.430450916290283

Token 7: '_fee' (ID: 75685)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4017663896083832
    2. '_price' → logprob: -1.7767664194107056
    3. '_cost' → logprob: -2.776766300201416
    4. '_total' → logprob: -3.276766300201416
    5. '_bill' → logprob: -3.901766300201416
    6. '_profit' → logprob: -4.776766300201416
    7. '_re' → logprob: -5.151766300201416
    8. '(' → logprob: -5.526766300201416
    9. '_water' → logprob: -5.526766300201416
    10. 'Revenue' → logprob: -6.151766300201416

Token 8: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02975292131304741
    2. '(self' → logprob: -3.6547529697418213
    3. '_' → logprob: -6.029752731323242
    4. 's' → logprob: -8.029752731323242
    5. ' (' → logprob: -8.654752731323242
    6. '(s' → logprob: -8.904752731323242
    7. 'self' → logprob: -9.404752731323242
    8. '(
' → logprob: -9.404752731323242
    9. '_self' → logprob: -9.779752731323242
    10. '```' → logprob: -10.154752731323242

Token 9: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6544320583343506
    2. '.' → logprob: -1.2794320583343506
    3. ',' → logprob: -1.6544320583343506
    4. ')' → logprob: -5.02943229675293
    5. '.):' → logprob: -7.52943229675293
    6. '):
' → logprob: -7.77943229675293
    7. ':' → logprob: -7.90443229675293
    8. '   ' → logprob: -8.40443229675293
    9. '.next' → logprob: -8.65443229675293
    10. ' .' → logprob: -8.77943229675293

Token 10: ' usage' (ID: 16622)
  Prédit: ' usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' usage' → logprob: -0.5744877457618713
    2. ' self' → logprob: -1.9494876861572266
    3. ' water' → logprob: -2.5744876861572266
    4. ' customer' → logprob: -2.6994876861572266
    5. ' consumption' → logprob: -3.3244876861572266
    6. 'self' → logprob: -3.4494876861572266
    7. 'usage' → logprob: -3.4494876861572266
    8. ' amount' → logprob: -3.6994876861572266
    9. ' quantity' → logprob: -4.824487686157227
    10. 'water' → logprob: -5.824487686157227

Token 11: '_l' (ID: 1478)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011954765766859055
    2. ':' → logprob: -4.5119547843933105
    3. '_' → logprob: -7.7619547843933105
    4. '):
' → logprob: -8.511954307556152
    5. ')' → logprob: -8.886954307556152
    6. ',' → logprob: -10.011954307556152
    7. ' ):' → logprob: -10.386954307556152
    8. '=' → logprob: -11.386954307556152
    9. '   ' → logprob: -11.636954307556152
    10. '```' → logprob: -11.761954307556152

Token 12: 'iters' (ID: 195765)
  Prédit: 'iters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iters' → logprob: -0.9073721170425415
    2. 'iter' → logprob: -1.4073721170425415
    3. 'it' → logprob: -2.782371997833252
    4. 'imit' → logprob: -3.157371997833252
    5. 'e' → logprob: -3.407371997833252
    6. 'oad' → logprob: -3.782371997833252
    7. '```' → logprob: -3.782371997833252
    8. 'ist' → logprob: -3.907371997833252
    9. 'iteral' → logprob: -4.032371997833252
    10. 't' → logprob: -4.157371997833252

Token 13: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001263090642169118
    2. ':' → logprob: -7.00126314163208
    3. ')' → logprob: -8.751262664794922
    4. ',' → logprob: -9.001262664794922
    5. ' ):' → logprob: -10.251262664794922
    6. '   ' → logprob: -11.126262664794922
    7. '):
' → logprob: -11.751262664794922
    8. '```' → logprob: -13.251262664794922
    9. '_' → logprob: -13.376262664794922
    10. ' ' → logprob: -13.626262664794922

Token 14: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.18256977200508118
    2. 'int' → logprob: -1.8075697422027588
    3. ' float' → logprob: -5.932569980621338
    4. 'float' → logprob: -8.93256950378418
    5. ' ' → logprob: -10.80756950378418
    6. ')' → logprob: -11.80756950378418
    7. '   ' → logprob: -12.80756950378418
    8. ' )' → logprob: -13.30756950378418
    9. ' Optional' → logprob: -13.93256950378418
    10. '    ' → logprob: -14.05756950378418

Token 15: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2536037564277649
    2. '):' → logprob: -1.5036036968231201
    3. ')->' → logprob: -6.628603935241699
    4. '):
' → logprob: -8.3786039352417
    5. ',' → logprob: -10.2536039352417
    6. ':' → logprob: -10.6286039352417
    7. '   ' → logprob: -10.7536039352417
    8. ')>' → logprob: -11.3786039352417
    9. '):

' → logprob: -12.8786039352417
    10. '),' → logprob: -12.8786039352417

Token 16: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009910109220072627
    2. '):' → logprob: -7.000990867614746
    3. ')' → logprob: -10.750990867614746
    4. ' :' → logprob: -11.250990867614746
    5. '->' → logprob: -11.750990867614746
    6. ')->' → logprob: -11.875990867614746
    7. ' ->' → logprob: -12.000990867614746
    8. ':return' → logprob: -12.125990867614746
    9. ':**' → logprob: -12.750990867614746
    10. '':' → logprob: -12.875990867614746

Token 17: ' int' (ID: 677)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.26444685459136963
    2. ' int' → logprob: -1.5144468545913696
    3. 'int' → logprob: -5.26444673538208
    4. 'float' → logprob: -5.76444673538208
    5. ' None' → logprob: -6.13944673538208
    6. ' ' → logprob: -6.26444673538208
    7. ' str' → logprob: -11.014447212219238
    8. ' '' → logprob: -11.264447212219238
    9. 'None' → logprob: -11.514447212219238
    10. ' "' → logprob: -11.764447212219238

Token 18: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.514650183613412e-05
    2. ':
' → logprob: -10.500055313110352
    3. '):' → logprob: -11.000055313110352
    4. ':return' → logprob: -12.625055313110352
    5. '():' → logprob: -12.750055313110352
    6. ':**' → logprob: -13.875055313110352
    7. '':' → logprob: -14.375055313110352
    8. '<|end|>' → logprob: -14.500055313110352
    9. ' :' → logprob: -14.750055313110352
    10. ',' → logprob: -14.750055313110352

Token 19: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01624855026602745
    2. '    ' → logprob: -5.01624870300293
    3. ':' → logprob: -5.64124870300293
    4. '   ' → logprob: -6.39124870300293
    5. '\n' → logprob: -6.64124870300293
    6. '```' → logprob: -6.89124870300293
    7. '\' → logprob: -7.39124870300293
    8. '     ' → logprob: -8.39124870300293
    9. '        ' → logprob: -8.51624870300293
    10. '        
' → logprob: -8.89124870300293

Token 20: ' raise' (ID: 9338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09148945659399033
    2. '```' → logprob: -2.591489553451538
    3. '\n' → logprob: -5.716489315032959
    4. '        ' → logprob: -6.466489315032959
    5. '           ' → logprob: -6.716489315032959
    6. '\' → logprob: -6.716489315032959
    7. '``' → logprob: -7.341489315032959
    8. '`' → logprob: -7.341489315032959
    9. '   ' → logprob: -7.466489315032959
    10. 'if' → logprob: -7.591489315032959

Token 21: ' Not' (ID: 4037)
  Prédit: ' Not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Not' → logprob: -0.20157784223556519
    2. 'Not' → logprob: -1.70157790184021
    3. '<|end|>' → logprob: -10.076578140258789
    4. 'Value' → logprob: -10.951578140258789
    5. '_Not' → logprob: -11.201578140258789
    6. ' Value' → logprob: -11.326578140258789
    7. '  ' → logprob: -11.326578140258789
    8. 'Exception' → logprob: -11.451578140258789
    9. ' ' → logprob: -11.451578140258789
    10. '_not' → logprob: -11.576578140258789

Token 22: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -0.00017827287956606597
    2. 'implemented' → logprob: -9.000178337097168
    3. 'Found' → logprob: -9.875178337097168
    4. 'Implement' → logprob: -13.625178337097168
    5. 'Error' → logprob: -14.250178337097168
    6. 'Defined' → logprob: -14.375178337097168
    7. ' implemented' → logprob: -15.375178337097168
    8. 'Supported' → logprob: -15.500178337097168
    9. 'ed' → logprob: -15.625178337097168
    10. 'Impl' → logprob: -15.875178337097168

Token 23: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -4.727905979962088e-05
    2. 'rror' → logprob: -10.00004768371582
    3. 'ed' → logprob: -13.75004768371582
    4. 'error' → logprob: -15.37504768371582
    5. 'Erro' → logprob: -16.75004768371582
    6. '(Error' → logprob: -16.87504768371582
    7. '()' → logprob: -16.87504768371582
    8. '_Error' → logprob: -17.00004768371582
    9. 'ation' → logprob: -17.25004768371582
    10. '_error' → logprob: -17.37504768371582

Token 24: '("' (ID: 568)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9479191303253174
    2. '\n' → logprob: -1.4479191303253174
    3. '<|end|>' → logprob: -1.5729191303253174
    4. '\' → logprob: -2.8229191303253174
    5. '```' → logprob: -3.1979191303253174
    6. '   ' → logprob: -3.5729191303253174
    7. 'n' → logprob: -4.447918891906738
    8. ' 
' → logprob: -5.697918891906738
    9. '.' → logprob: -5.697918891906738
    10. ' ' → logprob: -5.947918891906738

Token 25: 'Sub' (ID: 3638)
  Prédit: 'This'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'This' → logprob: -0.9296059608459473
    2. '")' → logprob: -1.8046059608459473
    3. 'Implement' → logprob: -2.0546059608459473
    4. 'Method' → logprob: -2.4296059608459473
    5. 'calculate' → logprob: -2.5546059608459473
    6. 'Calculate' → logprob: -3.4296059608459473
    7. 'Sub' → logprob: -3.6796059608459473
    8. ')' → logprob: -3.6796059608459473
    9. 'Subclass' → logprob: -3.9296059608459473
    10. 'Calcul' → logprob: -4.804605960845947

Token 26: 'classes' (ID: 17233)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.012647494673728943
    2. 'classes' → logprob: -4.38764762878418
    3. ' class' → logprob: -10.38764762878418
    4. '<class' → logprob: -11.13764762878418
    5. 'cls' → logprob: -11.26264762878418
    6. 'c' → logprob: -11.38764762878418
    7. 'cla' → logprob: -11.51264762878418
    8. '   ' → logprob: -11.51264762878418
    9. 'lass' → logprob: -11.63764762878418
    10. 'lasses' → logprob: -11.88764762878418

Token 27: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.11384569853544235
    2. ' should' → logprob: -2.2388455867767334
    3. 'must' → logprob: -7.1138458251953125
    4. 'should' → logprob: -8.988845825195312
    5. ' need' → logprob: -9.863845825195312
    6. ' ' → logprob: -10.488845825195312
    7. '<|end|>' → logprob: -13.613845825195312
    8. ' باید' → logprob: -14.238845825195312
    9. 'Must' → logprob: -14.863845825195312
    10. ' will' → logprob: -15.113845825195312

Token 28: ' implement' (ID: 6365)
  Prédit: ' implement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' implement' → logprob: -0.002504793694242835
    2. ' override' → logprob: -6.752504825592041
    3. 'implement' → logprob: -6.752504825592041
    4. ' provide' → logprob: -9.877504348754883
    5. 'Implement' → logprob: -10.002504348754883
    6. ' ' → logprob: -10.377504348754883
    7. 'override' → logprob: -10.752504348754883
    8. ' implementar' → logprob: -12.752504348754883
    9. ' define' → logprob: -12.877504348754883
    10. '  ' → logprob: -13.252504348754883

Token 29: ' calculate' (ID: 17950)
  Prédit: ' this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' this' → logprob: -0.31847909092903137
    2. ' calculate' → logprob: -1.318479061126709
    3. ' the' → logprob: -5.693479061126709
    4. 'calculate' → logprob: -6.443479061126709
    5. ' ' → logprob: -8.943479537963867
    6. 'this' → logprob: -9.443479537963867
    7. ' `' → logprob: -11.693479537963867
    8. ' method' → logprob: -11.818479537963867
    9. '  ' → logprob: -12.068479537963867
    10. ' their' → logprob: -12.318479537963867

Token 30: '_fee' (ID: 75685)
  Prédit: '_fee'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fee' → logprob: -2.0100624169572257e-05
    2. '_' → logprob: -10.875020027160645
    3. '_f' → logprob: -14.375020027160645
    4. ' _' → logprob: -15.625020027160645
    5. '```' → logprob: -16.25002098083496
    6. '_fe' → logprob: -16.37502098083496
    7. '_price' → logprob: -17.37502098083496
    8. '_free' → logprob: -17.75002098083496
    9. '_code' → logprob: -18.12502098083496
    10. '_cost' → logprob: -18.25002098083496

Token 31: ' method' (ID: 2595)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0009755438077263534
    2. ')' → logprob: -7.250975608825684
    3. '.")' → logprob: -9.625975608825684
    4. '`)' → logprob: -10.000975608825684
    5. '```' → logprob: -10.125975608825684
    6. ')")' → logprob: -10.125975608825684
    7. '_' → logprob: -10.750975608825684
    8. '")
' → logprob: -11.000975608825684
    9. '')' → logprob: -12.125975608825684
    10. '_method' → logprob: -12.375975608825684

Token 32: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.040728434920310974
    2. ')' → logprob: -3.5407283306121826
    3. '"' → logprob: -4.540728569030762
    4. '```' → logprob: -9.165728569030762
    5. '\n' → logprob: -10.415728569030762
    6. '"""' → logprob: -10.540728569030762
    7. '   ' → logprob: -10.665728569030762
    8. '")
' → logprob: -11.540728569030762
    9. '"
' → logprob: -11.790728569030762
    10. '<|end|>' → logprob: -11.915728569030762

Token 33: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5053815245628357
    2. '   ' → logprob: -2.1303815841674805
    3. 'class' → logprob: -2.1303815841674805
    4. '\n' → logprob: -2.5053815841674805
    5. '<|end|>' → logprob: -3.6303815841674805
    6. '    
' → logprob: -4.0053815841674805
    7. '```' → logprob: -4.5053815841674805
    8. 'n' → logprob: -4.8803815841674805
    9. 'newline' → logprob: -6.1303815841674805
    10. ' 
' → logprob: -6.3803815841674805

Token 34: ' X' (ID: 2127)
  Prédit: ' Water'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Water' → logprob: -0.023312099277973175
    2. ' Space' → logprob: -5.023312091827393
    3. ' Basic' → logprob: -5.148312091827393
    4. ' Residential' → logprob: -6.023312091827393
    5. ' Sewer' → logprob: -6.773312091827393
    6. ' Electric' → logprob: -6.898312091827393
    7. ' Waste' → logprob: -7.273312091827393
    8. ' Industrial' → logprob: -7.273312091827393
    9. ' Solar' → logprob: -7.648312091827393
    10. ' Pipe' → logprob: -7.898312091827393

Token 35: 'Company' (ID: 15545)
  Prédit: 'Water'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Water' → logprob: -0.0453018955886364
    2. 'City' → logprob: -4.170301914215088
    3. 'W' → logprob: -5.295301914215088
    4. 'er' → logprob: -5.545301914215088
    5. 'water' → logprob: -5.920301914215088
    6. 'i' → logprob: -6.545301914215088
    7. 'Town' → logprob: -7.170301914215088
    8. 'yz' → logprob: -7.232801914215088
    9. ' Water' → logprob: -7.232801914215088
    10. 'X' → logprob: -7.232801914215088

Token 36: '(W' (ID: 26031)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38975441455841064
    2. '(' → logprob: -1.1397544145584106
    3. '(W' → logprob: -7.139754295349121
    4. ' :' → logprob: -7.639754295349121
    5. '():' → logprob: -8.014754295349121
    6. '.' → logprob: -8.014754295349121
    7. '(:' → logprob: -8.389754295349121
    8. '(Base' → logprob: -9.014754295349121
    9. '(A' → logprob: -9.389754295349121
    10. '   ' → logprob: -9.889754295349121

Token 37: 'ater' (ID: 1005)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.024861738085746765
    2. 'ater' → logprob: -4.024861812591553
    3. 'ate' → logprob: -5.399861812591553
    4. 'Company' → logprob: -7.274861812591553
    5. 'C' → logprob: -7.774861812591553
    6. 'at' → logprob: -7.899861812591553
    7. '```' → logprob: -8.649861335754395
    8. ')' → logprob: -9.524861335754395
    9. 'atter' → logprob: -10.024861335754395
    10. 'o' → logprob: -10.399861335754395

Token 38: 'Company' (ID: 15545)
  Prédit: 'Company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Company' → logprob: -2.7491250875755213e-05
    2. ' Company' → logprob: -10.875027656555176
    3. '_company' → logprob: -12.375027656555176
    4. ')' → logprob: -13.875027656555176
    5. ' ' → logprob: -14.375027656555176
    6. 'company' → logprob: -14.625027656555176
    7. 'C' → logprob: -14.625027656555176
    8. 'Com' → logprob: -14.625027656555176
    9. 'Comp' → logprob: -15.000027656555176
    10. '.Company' → logprob: -15.125027656555176

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009816011879593134
    2. '):
' → logprob: -7.75098180770874
    3. ')' → logprob: -8.125981330871582
    4. ':' → logprob: -8.750981330871582
    5. '   ' → logprob: -9.500981330871582
    6. ' ):' → logprob: -10.875981330871582
    7. '():' → logprob: -14.875981330871582
    8. '       ' → logprob: -15.000981330871582
    9. ' ' → logprob: -15.000981330871582
    10. '):

' → logprob: -15.125981330871582

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06964027136564255
    2. '    
' → logprob: -3.3196401596069336
    3. '
' → logprob: -3.6946401596069336
    4. '    ' → logprob: -6.069640159606934
    5. ' 
' → logprob: -6.944640159606934
    6. 'def' → logprob: -6.944640159606934
    7. '<|end|>' → logprob: -7.569640159606934
    8. ' def' → logprob: -7.694640159606934
    9. '     
' → logprob: -8.319640159606934
    10. '```' → logprob: -8.694640159606934

Token 41: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.17642329633235931
    2. '   ' → logprob: -1.9264233112335205
    3. 'def' (adapté à ' def') → logprob: -4.176423072814941
    4. '
' → logprob: -8.176423072814941
    5. '    ' → logprob: -8.676423072814941
    6. ' ' → logprob: -9.551423072814941
    7. ' 
' → logprob: -9.926423072814941
    8. '```' → logprob: -10.301423072814941
    9. '    
' → logprob: -10.426423072814941
    10. ' indentation' → logprob: -10.551423072814941

Token 42: ' __' (ID: 2516)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.005160581786185503
    2. ' ' → logprob: -5.505160808563232
    3. 'calculate' → logprob: -7.130160808563232
    4. ' space' → logprob: -9.505160331726074
    5. ' def' → logprob: -10.005160331726074
    6. '_' → logprob: -10.255160331726074
    7. ' c' → logprob: -10.255160331726074
    8. ' compute' → logprob: -10.630160331726074
    9. ' ' → logprob: -11.005160331726074
    10. 'alculate' → logprob: -11.505160331726074

Token 43: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'ini' → logprob: -15.625
    3. ' init' → logprob: -16.75
    4. ' ' → logprob: -19.625
    5. '	init' → logprob: -19.875
    6. '  ' → logprob: -19.875
    7. 'innit' → logprob: -19.875
    8. '   ' → logprob: -20.75
    9. 'in' → logprob: -21.25
    10. 'inti' → logprob: -21.25

Token 44: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.03917353227734566
    2. '__' → logprob: -3.2891736030578613
    3. '__(
' → logprob: -7.539173603057861
    4. '(self' → logprob: -7.789173603057861
    5. '(' → logprob: -9.539173126220703
    6. '__((' → logprob: -10.289173126220703
    7. ' (' → logprob: -10.664173126220703
    8. '__('' → logprob: -11.039173126220703
    9. '__(*' → logprob: -11.289173126220703
    10. '___' → logprob: -12.164173126220703

Token 45: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006773514673113823
    2. ' self' → logprob: -5.131773471832275
    3. ')' → logprob: -7.131773471832275
    4. ' ' → logprob: -11.006773948669434
    5. '   ' → logprob: -11.631773948669434
    6. ' )' → logprob: -12.006773948669434
    7. '  ' → logprob: -13.006773948669434
    8. '       ' → logprob: -13.006773948669434
    9. 'capacity' → logprob: -13.006773948669434
    10. '	self' → logprob: -13.256773948669434

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02402414381504059
    2. ' ,' → logprob: -4.14902400970459
    3. ')' → logprob: -5.77402400970459
    4. 'self' → logprob: -6.39902400970459
    5. ' self' → logprob: -6.77402400970459
    6. ' )' → logprob: -7.02402400970459
    7. 'capacity' → logprob: -7.77402400970459
    8. 'amount' → logprob: -8.64902400970459
    9. ' capacity' → logprob: -8.89902400970459
    10. ' ' → logprob: -9.14902400970459

Token 47: ' rate' (ID: 6251)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3790227174758911
    2. ' base' → logprob: -2.1290225982666016
    3. ' self' → logprob: -2.5040225982666016
    4. 'base' → logprob: -3.3790225982666016
    5. 'fixed' → logprob: -3.5040225982666016
    6. ' fixed' → logprob: -3.6290225982666016
    7. ')' → logprob: -5.004022598266602
    8. '   ' → logprob: -5.504022598266602
    9. 'rate' → logprob: -5.504022598266602
    10. ' )' → logprob: -6.504022598266602

Token 48: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.03990368917584419
    2. ':' → logprob: -4.16490364074707
    3. '):' → logprob: -4.28990364074707
    4. '=' → logprob: -5.03990364074707
    5. ',' → logprob: -5.91490364074707
    6. ' ):' → logprob: -8.53990364074707
    7. 'per' → logprob: -8.78990364074707
    8. 's' → logprob: -9.03990364074707
    9. ' per' → logprob: -9.66490364074707
    10. ')' → logprob: -9.91490364074707

Token 49: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.06939150393009186
    2. '_' → logprob: -3.4443914890289307
    3. '_c' → logprob: -3.5693914890289307
    4. 'liter' → logprob: -5.94439172744751
    5. '100' → logprob: -6.44439172744751
    6. '_g' → logprob: -7.44439172744751
    7. ' ' → logprob: -7.56939172744751
    8. '_unit' → logprob: -7.94439172744751
    9. '_meter' → logprob: -8.194391250610352
    10. ' liter' → logprob: -8.319391250610352

Token 50: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.0024214372970163822
    2. '_iter' → logprob: -7.1274213790893555
    3. ' iter' → logprob: -7.5024213790893555
    4. 'itter' → logprob: -8.002421379089355
    5. '   ' → logprob: -9.127421379089355
    6. 'liter' → logprob: -9.252421379089355
    7. 'ite' → logprob: -9.502421379089355
    8. 'iters' → logprob: -9.877421379089355
    9. 'Iter' → logprob: -10.002421379089355
    10. '(iter' → logprob: -10.377421379089355

Token 51: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12765538692474365
    2. '):' → logprob: -2.502655506134033
    3. ',' → logprob: -3.627655506134033
    4. '=' → logprob: -4.627655506134033
    5. ' ):' → logprob: -6.877655506134033
    6. ')' → logprob: -8.627655029296875
    7. ':int' → logprob: -9.377655029296875
    8. ' ,' → logprob: -9.502655029296875
    9. '):
' → logprob: -9.627655029296875
    10. ' :' → logprob: -9.877655029296875

Token 52: ' int' (ID: 677)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.13100889325141907
    2. 'float' → logprob: -2.8810088634490967
    3. ' int' → logprob: -3.0060088634490967
    4. 'int' → logprob: -4.256009101867676
    5. ' ' → logprob: -6.006009101867676
    6. '0' → logprob: -8.256009101867676
    7. '1' → logprob: -8.881009101867676
    8. ')' → logprob: -9.756009101867676
    9. ' )' → logprob: -10.256009101867676
    10. '10' → logprob: -11.006009101867676

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16138629615306854
    2. ',' → logprob: -1.911386251449585
    3. ')' → logprob: -7.286386489868164
    4. '):
' → logprob: -8.911386489868164
    5. ' ):' → logprob: -9.036386489868164
    6. '   ' → logprob: -9.411386489868164
    7. ':' → logprob: -9.661386489868164
    8. ' ,' → logprob: -10.286386489868164
    9. '=' → logprob: -10.786386489868164
    10. '       ' → logprob: -11.536386489868164

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0630732923746109
    2. ' ' → logprob: -3.9380733966827393
    3. '        ' → logprob: -3.9380733966827393
    4. '    ' → logprob: -4.81307315826416
    5. 'self' → logprob: -5.43807315826416
    6. ' )' → logprob: -5.93807315826416
    7. '   ' → logprob: -6.18807315826416
    8. ' self' → logprob: -6.68807315826416
    9. ')' → logprob: -7.18807315826416
    10. ' ' → logprob: -7.18807315826416

Token 55: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6945216655731201
    2. 'self' (adapté à ' self') → logprob: -0.6945216655731201
    3. '       ' → logprob: -6.694521903991699
    4. 'super' → logprob: -9.5695219039917
    5. ' super' → logprob: -9.6945219039917
    6. '   ' → logprob: -12.9445219039917
    7. '	self' → logprob: -14.0695219039917
    8. ' ' → logprob: -14.5695219039917
    9. ' ' → logprob: -14.9445219039917
    10. '        ' → logprob: -15.3195219039917

Token 56: '._' (ID: 2697)
  Prédit: '.rate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rate' → logprob: -0.000644764571916312
    2. '.' → logprob: -7.875644683837891
    3. ' .' → logprob: -8.37564468383789
    4. '._' → logprob: -10.62564468383789
    5. '.r' → logprob: -11.87564468383789
    6. 'rate' → logprob: -14.00064468383789
    7. '.rating' → logprob: -14.75064468383789
    8. ' rate' → logprob: -15.00064468383789
    9. '.price' → logprob: -15.12564468383789
    10. '.amount' → logprob: -15.25064468383789

Token 57: 'rate' (ID: 18514)
  Prédit: 'rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rate' → logprob: -7.052377623040229e-05
    2. ' rate' → logprob: -9.875070571899414
    3. '_rate' → logprob: -10.875070571899414
    4. '.rate' → logprob: -17.625070571899414
    5. ' ' → logprob: -19.000070571899414
    6. '(rate' → logprob: -19.000070571899414
    7. 'Rate' → logprob: -19.625070571899414
    8. 'rat' → logprob: -19.875070571899414
    9. '_' → logprob: -19.875070571899414
    10. 'rating' → logprob: -20.125070571899414

Token 58: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -13.37500286102295
    3. 'per' → logprob: -14.50000286102295
    4. ' =' → logprob: -16.500001907348633
    5. '=' → logprob: -16.500001907348633
    6. '_PER' → logprob: -17.000001907348633
    7. ' _' → logprob: -17.375001907348633
    8. '_p' → logprob: -17.500001907348633
    9. 'Per' → logprob: -17.500001907348633
    10. '_for' → logprob: -17.625001907348633

Token 59: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.0012873788364231586
    2. '_' → logprob: -6.876287460327148
    3. 'liter' → logprob: -9.001287460327148
    4. ' _' → logprob: -9.251287460327148
    5. '_literal' → logprob: -10.751287460327148
    6. ' liter' → logprob: -11.876287460327148
    7. ' ' → logprob: -12.501287460327148
    8. '_li' → logprob: -14.376287460327148
    9. '_space' → logprob: -14.501287460327148
    10. '_le' → logprob: -15.001287460327148

Token 60: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.004567304160445929
    2. '_iter' → logprob: -5.6295671463012695
    3. 'ite' → logprob: -8.62956714630127
    4. ' iter' → logprob: -8.75456714630127
    5. 'Iter' → logprob: -9.00456714630127
    6. 'i' → logprob: -9.25456714630127
    7. '   ' → logprob: -9.25456714630127
    8. '_' → logprob: -9.37956714630127
    9. 'liter' → logprob: -9.75456714630127
    10. 'itter' → logprob: -10.37956714630127

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0789242684841156
    2. '=' → logprob: -2.5789241790771484
    3. ' ' → logprob: -10.328924179077148
    4. ' =
' → logprob: -14.328924179077148
    5. '_' → logprob: -15.453924179077148
    6. ')' → logprob: -15.453924179077148
    7. '<|end|>' → logprob: -15.703924179077148
    8. '    ' → logprob: -16.32892417907715
    9. '        ' → logprob: -16.32892417907715
    10. ' =)' → logprob: -16.70392417907715

Token 62: ' rate' (ID: 6251)
  Prédit: ' rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rate' → logprob: -0.01814994215965271
    2. 'rate' → logprob: -4.0181498527526855
    3. '(rate' → logprob: -16.893150329589844
    4. '_rate' → logprob: -18.893150329589844
    5. ' ' → logprob: -19.268150329589844
    6. ' rat' → logprob: -20.768150329589844
    7. '.rate' → logprob: -21.018150329589844
    8. ' rating' → logprob: -21.768150329589844
    9. 'Rate' → logprob: -22.143150329589844
    10. '    ' → logprob: -22.643150329589844

Token 63: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.026760248467326164
    2. '_' → logprob: -3.6517603397369385
    3. 'per' → logprob: -8.90176010131836
    4. '_p' → logprob: -9.27676010131836
    5. 'er' → logprob: -10.15176010131836
    6. 'r' → logprob: -10.40176010131836
    7. '_t' → logprob: -10.65176010131836
    8. '_s' → logprob: -10.90176010131836
    9. '_
' → logprob: -11.02676010131836
    10. '_

' → logprob: -11.15176010131836

Token 64: '_l' (ID: 1478)
  Prédit: 'liter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liter' → logprob: -0.6440114378929138
    2. '_l' → logprob: -0.7690114378929138
    3. 'ter' → logprob: -5.019011497497559
    4. 'l' → logprob: -6.019011497497559
    5. '_' → logprob: -7.644011497497559
    6. 'iter' → logprob: -7.769011497497559
    7. 'lit' → logprob: -7.769011497497559
    8. 'tter' → logprob: -8.894011497497559
    9. '_literal' → logprob: -9.019011497497559
    10. ' liter' → logprob: -9.019011497497559

Token 65: 'iter' (ID: 2340)
  Prédit: 'ter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ter' → logprob: -0.016877828165888786
    2. 'iter' → logprob: -4.1418776512146
    3. 'er' → logprob: -7.6418776512146
    4. '   ' → logprob: -9.391878128051758
    5. 't' → logprob: -9.766878128051758
    6. 'tter' → logprob: -9.891878128051758
    7. '_iter' → logprob: -10.266878128051758
    8. '```' → logprob: -10.516878128051758
    9. '_' → logprob: -11.266878128051758
    10. 'te' → logprob: -11.266878128051758

Token 66: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02412620186805725
    2. ' 
' → logprob: -4.649126052856445
    3. '    
' → logprob: -4.774126052856445
    4. '<|end|>' → logprob: -5.649126052856445
    5. '  
' → logprob: -6.899126052856445
    6. '   ' → logprob: -7.524126052856445
    7. '

' → logprob: -8.899126052856445
    8. '        
' → logprob: -9.024126052856445
    9. '<|end|>' → logprob: -9.149126052856445
    10. '   
' → logprob: -9.399126052856445

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18740038573741913
    2. '
' → logprob: -2.1874003410339355
    3. '    
' → logprob: -2.9374003410339355
    4. 'def' → logprob: -5.9374003410339355
    5. ' def' → logprob: -6.4374003410339355
    6. '        
' → logprob: -7.1874003410339355
    7. ' 
' → logprob: -8.187400817871094
    8. '  
' → logprob: -8.687400817871094
    9. '<|end|>' → logprob: -9.312400817871094
    10. '	def' → logprob: -10.062400817871094

Token 68: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.044525884091854095
    2. ' def' → logprob: -3.2945258617401123
    3. '   ' → logprob: -5.044526100158691
    4. '	def' → logprob: -11.294526100158691
    5. ' ' → logprob: -12.794526100158691
    6. '    
' → logprob: -13.794526100158691
    7. 'de' → logprob: -14.294526100158691
    8. '
' → logprob: -14.544526100158691
    9. '  ' → logprob: -14.669526100158691
    10. '    ' → logprob: -14.794526100158691

Token 69: ' calculate' (ID: 17950)
  Prédit: ' calculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.0004058858612552285
    2. 'calculate' → logprob: -8.000406265258789
    3. ' ' → logprob: -10.375406265258789
    4. ' _' → logprob: -10.875406265258789
    5. '_' → logprob: -11.375406265258789
    6. '_cal' → logprob: -12.750406265258789
    7. ' compute' → logprob: -13.250406265258789
    8. ' space' → logprob: -13.750406265258789
    9. ' calcular' → logprob: -14.000406265258789
    10. ' ' → logprob: -14.250406265258789

Token 70: '_fee' (ID: 75685)
  Prédit: '_fee'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fee' → logprob: -0.0011968977050855756
    2. '_' → logprob: -6.75119686126709
    3. '_f' → logprob: -11.12619686126709
    4. '_fe' → logprob: -11.62619686126709
    5. ' _' → logprob: -14.00119686126709
    6. '_factor' → logprob: -15.25119686126709
    7. '_cost' → logprob: -15.37619686126709
    8. '_price' → logprob: -15.50119686126709
    9. '```' → logprob: -15.50119686126709
    10. '_payment' → logprob: -15.87619686126709

Token 71: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1604979932308197
    2. '(self' → logprob: -1.910498023033142
    3. ' (' → logprob: -8.285497665405273
    4. '(
' → logprob: -11.285497665405273
    5. '(

' → logprob: -13.160497665405273
    6. '(s' → logprob: -13.410497665405273
    7. ' ' → logprob: -13.785497665405273
    8. '<|end|>' → logprob: -14.160497665405273
    9. '   ' → logprob: -14.410497665405273
    10. '_' → logprob: -14.410497665405273

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010397175792604685
    2. ' ,' → logprob: -6.876039505004883
    3. 'self' → logprob: -12.376039505004883
    4. ',self' → logprob: -14.251039505004883
    5. ')' → logprob: -14.751039505004883
    6. '   ' → logprob: -14.876039505004883
    7. ',user' → logprob: -14.876039505004883
    8. 'usage' → logprob: -15.251039505004883
    9. ',
' → logprob: -16.251039505004883
    10. '       ' → logprob: -16.626039505004883

Token 73: ' usage' (ID: 16622)
  Prédit: ' usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' usage' → logprob: -0.0017196849221363664
    2. 'usage' → logprob: -6.3767194747924805
    3. ' self' → logprob: -12.62671947479248
    4. ' ' → logprob: -12.75171947479248
    5. ' use' → logprob: -13.12671947479248
    6. '    ' → logprob: -13.25171947479248
    7. '_usage' → logprob: -13.25171947479248
    8. ' user' → logprob: -13.62671947479248
    9. ' )' → logprob: -13.87671947479248
    10. ')' → logprob: -14.37671947479248

Token 74: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.0007736549014225602
    2. '_' → logprob: -7.2507734298706055
    3. '_literals' → logprob: -10.750773429870605
    4. ' _' → logprob: -10.875773429870605
    5. ')' → logprob: -11.875773429870605
    6. ')_' → logprob: -12.250773429870605
    7. '_li' → logprob: -12.875773429870605
    8. '_s' → logprob: -13.750773429870605
    9. '_m' → logprob: -14.000773429870605
    10. '_w' → logprob: -14.125773429870605

Token 75: 'iters' (ID: 195765)
  Prédit: 'iters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iters' → logprob: -0.6708426475524902
    2. '_' → logprob: -1.4208426475524902
    3. '_i' → logprob: -1.6708426475524902
    4. '```' → logprob: -4.17084264755249
    5. 'it' → logprob: -4.79584264755249
    6. ' _' → logprob: -5.04584264755249
    7. '_t' → logprob: -5.17084264755249
    8. '_iters' → logprob: -5.42084264755249
    9. 'i' → logprob: -5.54584264755249
    10. '_
' → logprob: -6.04584264755249

Token 76: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2970246970653534
    2. '):' → logprob: -1.6720247268676758
    3. ' ):' → logprob: -3.297024726867676
    4. ')' → logprob: -3.672024726867676
    5. ' )' → logprob: -5.422024726867676
    6. ' :' → logprob: -6.172024726867676
    7. '):
' → logprob: -9.672024726867676
    8. ' ' → logprob: -10.797024726867676
    9. ':int' → logprob: -10.797024726867676
    10. '   ' → logprob: -10.922024726867676

Token 77: ' int' (ID: 677)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.5945977568626404
    2. ' ' → logprob: -1.4695978164672852
    3. ')' → logprob: -2.344597816467285
    4. ' int' → logprob: -2.469597816467285
    5. 'int' → logprob: -3.344597816467285
    6. ':int' → logprob: -6.844597816467285
    7. ' ):' → logprob: -7.094597816467285
    8. ' ' → logprob: -9.094597816467285
    9. ' ```' → logprob: -9.844597816467285
    10. '  ' → logprob: -10.219597816467285

Token 78: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09079451113939285
    2. ')' → logprob: -2.465794563293457
    3. ':' → logprob: -6.340794563293457
    4. ' ):' → logprob: -10.215794563293457
    5. '):
' → logprob: -10.340794563293457
    6. '   ' → logprob: -11.840794563293457
    7. '       ' → logprob: -12.465794563293457
    8. ' )' → logprob: -12.840794563293457
    9. '*' → logprob: -13.090794563293457
    10. ')->' → logprob: -13.590794563293457

Token 79: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005693563143722713
    2. '):' → logprob: -7.6255693435668945
    3. ' :' → logprob: -10.250569343566895
    4. ':return' → logprob: -10.875569343566895
    5. ')' → logprob: -11.500569343566895
    6. ' ->' → logprob: -12.500569343566895
    7. '->' → logprob: -12.500569343566895
    8. '       ' → logprob: -13.250569343566895
    9. ':**' → logprob: -13.375569343566895
    10. ')->' → logprob: -13.500569343566895

Token 80: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.007672291249036789
    2. 'int' → logprob: -4.882672309875488
    3. ' self' → logprob: -10.007672309875488
    4. ' ' → logprob: -11.132672309875488
    5. ' usage' → logprob: -12.257672309875488
    6. ' ' → logprob: -13.882672309875488
    7. 'self' → logprob: -15.007672309875488
    8. '```' → logprob: -16.132671356201172
    9. '   ' → logprob: -16.382671356201172
    10. '       ' → logprob: -16.507671356201172

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017195509281009436
    2. '):' → logprob: -8.875171661376953
    3. ':return' → logprob: -11.000171661376953
    4. ':
' → logprob: -11.875171661376953
    5. ':**' → logprob: -12.750171661376953
    6. ' :' → logprob: -13.375171661376953
    7. ',' → logprob: -14.000171661376953
    8. '():' → logprob: -14.125171661376953
    9. '<|end|>' → logprob: -14.250171661376953
    10. ')' → logprob: -14.250171661376953

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012197980657219887
    2. ' ' → logprob: -4.637197971343994
    3. '        ' → logprob: -7.137197971343994
    4. '    ' → logprob: -7.512197971343994
    5. '      ' → logprob: -8.387198448181152
    6. ' 
' → logprob: -8.637198448181152
    7. '        
' → logprob: -8.762198448181152
    8. '   ' → logprob: -9.012198448181152
    9. '     ' → logprob: -9.387198448181152
    10. ':' → logprob: -9.512198448181152

Token 83: ' return' (ID: 622)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9209048748016357
    2. ' ' → logprob: -1.7959048748016357
    3. ' return' → logprob: -1.9209048748016357
    4. 'return' (adapté à ' return') → logprob: -2.0459048748016357
    5. '       ' → logprob: -2.4209048748016357
    6. '        ' → logprob: -3.0459048748016357
    7. ' 
' → logprob: -4.795905113220215
    8. '        
' → logprob: -5.795905113220215
    9. '```' → logprob: -5.795905113220215
    10. ' ```' → logprob: -6.045905113220215

Token 84: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.004908885341137648
    2. ' usage' → logprob: -5.754909038543701
    3. 'self' → logprob: -6.379909038543701
    4. 'usage' → logprob: -10.879908561706543
    5. ' ' → logprob: -12.004908561706543
    6. ' ' → logprob: -12.379908561706543
    7. '        ' → logprob: -12.504908561706543
    8. ' use' → logprob: -14.129908561706543
    9. '(self' → logprob: -15.629908561706543
    10. '_self' → logprob: -15.754908561706543

Token 85: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.004903789144009352
    2. '.' → logprob: -5.379903793334961
    3. ' .' → logprob: -8.379903793334961
    4. ' ' → logprob: -10.254903793334961
    5. 'self' → logprob: -12.004903793334961
    6. '   ' → logprob: -12.504903793334961
    7. '       ' → logprob: -13.129903793334961
    8. '	' → logprob: -13.504903793334961
    9. '.__' → logprob: -13.504903793334961
    10. '_' → logprob: -14.129903793334961

Token 86: 'rate' (ID: 18514)
  Prédit: 'rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rate' → logprob: 0.0
    2. '_rate' → logprob: -16.875
    3. ' rate' → logprob: -19.875
    4. 'rat' → logprob: -20.375
    5. '.rate' → logprob: -22.0
    6. 'r' → logprob: -22.25
    7. 'rating' → logprob: -23.0
    8. '-rate' → logprob: -23.5
    9. 'role' → logprob: -24.0
    10. '(rate' → logprob: -24.0

Token 87: '_per' (ID: 10938)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008677801117300987
    2. '_per' → logprob: -4.758677959442139
    3. ' _' → logprob: -10.00867748260498
    4. '_
' → logprob: -12.25867748260498
    5. '_p' → logprob: -12.63367748260498
    6. '_

' → logprob: -12.88367748260498
    7. '_*' → logprob: -13.25867748260498
    8. '_for' → logprob: -13.88367748260498
    9. ' ' → logprob: -14.50867748260498
    10. '_pe' → logprob: -14.50867748260498

Token 88: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.00594017468392849
    2. 'liter' → logprob: -5.505939960479736
    3. '_' → logprob: -6.505939960479736
    4. 'l' → logprob: -8.505940437316895
    5. '_literal' → logprob: -9.755940437316895
    6. 'lit' → logprob: -10.255940437316895
    7. '_li' → logprob: -10.380940437316895
    8. 'li' → logprob: -11.505940437316895
    9. ' _' → logprob: -12.255940437316895
    10. ' ' → logprob: -12.380940437316895

Token 89: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.000476786372018978
    2. 'ite' → logprob: -8.750476837158203
    3. '_iter' → logprob: -9.000476837158203
    4. 'i' → logprob: -9.500476837158203
    5. ' iter' → logprob: -10.375476837158203
    6. 'it' → logprob: -10.500476837158203
    7. 'ter' → logprob: -10.625476837158203
    8. '```' → logprob: -12.250476837158203
    9. 'Iter' → logprob: -12.500476837158203
    10. 'liter' → logprob: -12.750476837158203

Token 90: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.007741609122604132
    2. '*' → logprob: -5.007741451263428
    3. ' ' → logprob: -7.382741451263428
    4. '<|end|>' → logprob: -7.882741451263428
    5. ' *
' → logprob: -11.882741928100586
    6. ' ' → logprob: -12.757741928100586
    7. '  ' → logprob: -12.757741928100586
    8. ' **' → logprob: -12.757741928100586
    9. '<|end|>' → logprob: -13.257741928100586
    10. '.' → logprob: -13.382741928100586

Token 91: ' usage' (ID: 16622)
  Prédit: ' usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' usage' → logprob: -0.006715370807796717
    2. 'usage' → logprob: -5.006715297698975
    3. ' ' → logprob: -16.881715774536133
    4. '_usage' → logprob: -17.006715774536133
    5. ' use' → logprob: -17.881715774536133
    6. ' ' → logprob: -18.506715774536133
    7. 'Usage' → logprob: -20.756715774536133
    8. ' us' → logprob: -21.006715774536133
    9. ' uso' → logprob: -21.006715774536133
    10. 'space' → logprob: -21.006715774536133

Token 92: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.10139760375022888
    2. '_' → logprob: -2.3513975143432617
    3. '_t' → logprob: -7.476397514343262
    4. '_literals' → logprob: -8.601397514343262
    5. '_li' → logprob: -9.351397514343262
    6. ' _' → logprob: -9.351397514343262
    7. '```' → logprob: -9.476397514343262
    8. '_

' → logprob: -10.601397514343262
    9. '_\' → logprob: -10.601397514343262
    10. '_
' → logprob: -10.851397514343262

Token 93: 'iters' (ID: 195765)
  Prédit: 'ters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ters' → logprob: -0.5714890360832214
    2. 'iters' → logprob: -1.0714890956878662
    3. 't' → logprob: -2.821489095687866
    4. '```' → logprob: -3.821489095687866
    5. 'ter' → logprob: -5.071488857269287
    6. '   ' → logprob: -6.071488857269287
    7. '_' → logprob: -7.446488857269287
    8. '_t' → logprob: -7.696488857269287
    9. '``' → logprob: -8.071489334106445
    10. '       ' → logprob: -8.196489334106445

Token 94: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05018075928092003
    2. 'class' → logprob: -3.550180673599243
    3. '<|end|>' → logprob: -4.675180912017822
    4. '

' → logprob: -4.925180912017822
    5. '```' → logprob: -6.675180912017822
    6. '\n' → logprob: -6.675180912017822
    7. ' class' → logprob: -8.675180435180664
    8. '#' → logprob: -8.800180435180664
    9. '' → logprob: -8.800180435180664
    10. 'newline' → logprob: -9.425180435180664

Token 95: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6741406917572021
    2. 'c' → logprob: -1.1741406917572021
    3. '
' → logprob: -2.174140691757202
    4. 'n' → logprob: -4.049140930175781
    5. '#' → logprob: -4.674140930175781
    6. '\n' → logprob: -5.049140930175781
    7. '<|end|>' → logprob: -5.174140930175781
    8. '```' → logprob: -5.299140930175781
    9. 'w' → logprob: -5.549140930175781
    10. ' ' → logprob: -5.549140930175781

Token 96: ' Y' (ID: 865)
  Prédit: ' Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Y' → logprob: -0.1919761449098587
    2. 'Y' → logprob: -1.9419761896133423
    3. ' ' → logprob: -3.5669760704040527
    4. ' ' → logprob: -7.691976070404053
    5. '"' → logprob: -7.941976070404053
    6. ' Water' → logprob: -8.191976547241211
    7. 'Space' → logprob: -8.191976547241211
    8. '  ' → logprob: -8.191976547241211
    9. '	Y' → logprob: -8.691976547241211
    10. ' '' → logprob: -8.816976547241211

Token 97: 'Company' (ID: 15545)
  Prédit: 'Company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Company' → logprob: -3.531315314830863e-06
    2. '_company' → logprob: -13.625003814697266
    3. 'company' → logprob: -13.750003814697266
    4. ' Company' → logprob: -14.125003814697266
    5. ' ' → logprob: -16.375003814697266
    6. 'Water' → logprob: -16.625003814697266
    7. '```' → logprob: -16.625003814697266
    8. 'Comp' → logprob: -17.125003814697266
    9. 'Com' → logprob: -17.125003814697266
    10. 'C' → logprob: -17.750003814697266

Token 98: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.07342639565467834
    2. '(' → logprob: -2.6984264850616455
    3. ':' → logprob: -5.698426246643066
    4. '(X' → logprob: -9.448426246643066
    5. '(
' → logprob: -10.823426246643066
    6. ' :' → logprob: -11.698426246643066
    7. '(:' → logprob: -12.073426246643066
    8. ':
' → logprob: -12.948426246643066
    9. '(Q' → logprob: -13.073426246643066
    10. '(S' → logprob: -13.198426246643066

Token 99: 'ater' (ID: 1005)
  Prédit: 'ater'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ater' → logprob: -0.034005261957645416
    2. 'Water' → logprob: -4.034005165100098
    3. 'ate' → logprob: -4.784005165100098
    4. 'a' → logprob: -5.034005165100098
    5. '```' → logprob: -8.284005165100098
    6. 'Company' → logprob: -9.159005165100098
    7. 'at' → logprob: -9.159005165100098
    8. ' ater' → logprob: -9.659005165100098
    9. 'ateria' → logprob: -9.909005165100098
    10. 'atter' → logprob: -10.284005165100098

Token 100: 'Company' (ID: 15545)
  Prédit: 'Company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Company' → logprob: -0.0002560945285949856
    2. '_company' → logprob: -9.125256538391113
    3. ' ' → logprob: -10.375256538391113
    4. ')' → logprob: -10.500256538391113
    5. ' Company' → logprob: -10.625256538391113
    6. '  ' → logprob: -11.625256538391113
    7. ',' → logprob: -12.000256538391113
    8. 'Com' → logprob: -12.000256538391113
    9. 'Comp' → logprob: -12.625256538391113
    10. '_' → logprob: -12.625256538391113

Token 101: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2940951883792877
    2. '):
' → logprob: -1.4190951585769653
    3. ':' → logprob: -4.419095039367676
    4. ':
' → logprob: -7.544095039367676
    5. '   ' → logprob: -9.294095039367676
    6. ',' → logprob: -9.294095039367676
    7. ')' → logprob: -9.919095039367676
    8. '):

' → logprob: -10.794095039367676
    9. '):
' → logprob: -11.419095039367676
    10. '(' → logprob: -13.044095039367676

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020803339779376984
    2. ' def' → logprob: -4.270803451538086
    3. 'def' → logprob: -5.020803451538086
    4. '```' → logprob: -11.770803451538086
    5. '
' → logprob: -12.270803451538086
    6. '	def' → logprob: -12.895803451538086
    7. '   ' → logprob: -14.020803451538086
    8. '    
' → logprob: -14.020803451538086
    9. ')' → logprob: -15.270803451538086
    10. ' ' → logprob: -15.395803451538086

Token 103: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5785750150680542
    2. ' def' → logprob: -0.8285750150680542
    3. '   ' → logprob: -5.953575134277344
    4. ' ' → logprob: -11.328575134277344
    5. 'class' → logprob: -11.828575134277344
    6. '```' → logprob: -11.953575134277344
    7. '	def' → logprob: -12.703575134277344
    8. '  ' → logprob: -13.453575134277344
    9. '_def' → logprob: -13.703575134277344
    10. ':def' → logprob: -14.203575134277344

Token 104: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.028351347893476486
    2. ' def' → logprob: -3.653351306915283
    3. ' ' → logprob: -6.653351306915283
    4. '__' → logprob: -8.153351783752441
    5. 'def' → logprob: -8.403351783752441
    6. ' calculate' → logprob: -9.153351783752441
    7. ' init' → logprob: -9.778351783752441
    8. ' _' → logprob: -10.028351783752441
    9. 'init' → logprob: -11.528351783752441
    10. ' ```' → logprob: -11.653351783752441

Token 105: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -8.180258191714529e-06
    2. 'def' → logprob: -12.000008583068848
    3. '   ' → logprob: -14.750008583068848
    4. ' init' → logprob: -15.125008583068848
    5. 'int' → logprob: -15.250008583068848
    6. '  ' → logprob: -15.625008583068848
    7. '```' → logprob: -15.625008583068848
    8. '__' → logprob: -16.12500762939453
    9. '
' → logprob: -16.25000762939453
    10. '_init' → logprob: -16.62500762939453

Token 106: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0054480209946632385
    2. '(self' → logprob: -5.380447864532471
    3. '__' → logprob: -7.505447864532471
    4. '__(
' → logprob: -9.255448341369629
    5. 'self' → logprob: -9.880448341369629
    6. ',' → logprob: -9.880448341369629
    7. '(' → logprob: -10.255448341369629
    8. ' (' → logprob: -10.630448341369629
    9. '_(' → logprob: -11.880448341369629
    10. '__,' → logprob: -12.880448341369629

Token 107: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006570653524249792
    2. ' self' → logprob: -5.131570816040039
    3. ',' → logprob: -7.381570816040039
    4. '
' → logprob: -12.006570816040039
    5. '       ' → logprob: -13.131570816040039
    6. ' ' → logprob: -13.381570816040039
    7. '0' → logprob: -13.756570816040039
    8. ')' → logprob: -13.756570816040039
    9. 'rate' → logprob: -13.756570816040039
    10. '   ' → logprob: -13.881570816040039

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002036060905084014
    2. ' ,' → logprob: -6.252036094665527
    3. 'rate' → logprob: -9.877036094665527
    4. 'self' → logprob: -10.502036094665527
    5. '(rate' → logprob: -11.752036094665527
    6. ',self' → logprob: -12.502036094665527
    7. ' rate' → logprob: -12.627036094665527
    8. ')' → logprob: -13.252036094665527
    9. ',r' → logprob: -13.252036094665527
    10. '‌,' → logprob: -13.752036094665527

Token 109: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.555334746837616
    2. ' fixed' → logprob: -1.3053348064422607
    3. 'fixed' → logprob: -2.8053348064422607
    4. 'base' → logprob: -3.0553348064422607
    5. ' flat' → logprob: -4.180334568023682
    6. ' rate' → logprob: -4.680334568023682
    7. 'rate' → logprob: -5.305334568023682
    8. ' tier' → logprob: -5.805334568023682
    9. ' threshold' → logprob: -6.180334568023682
    10. '   ' → logprob: -6.305334568023682

Token 110: '_fee' (ID: 75685)
  Prédit: '_fee'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fee' → logprob: -0.004291730001568794
    2. '_rate' → logprob: -5.629291534423828
    3. '_charge' → logprob: -7.879291534423828
    4. '_price' → logprob: -9.129291534423828
    5. '_amount' → logprob: -9.254291534423828
    6. 'fee' → logprob: -10.004291534423828
    7. '_cost' → logprob: -10.004291534423828
    8. '_f' → logprob: -12.004291534423828
    9. '_' → logprob: -12.504291534423828
    10. ' fee' → logprob: -13.504291534423828

Token 111: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00030281138606369495
    2. ',' → logprob: -8.375303268432617
    3. ':int' → logprob: -10.000303268432617
    4. '=' → logprob: -11.500303268432617
    5. ' :' → logprob: -11.875303268432617
    6. '):' → logprob: -12.375303268432617
    7. '   ' → logprob: -13.375303268432617
    8. ')' → logprob: -13.375303268432617
    9. '<|end|>' → logprob: -14.125303268432617
    10. '```' → logprob: -14.750303268432617

Token 112: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.08958173543214798
    2. 'int' → logprob: -2.4645817279815674
    3. ' ' → logprob: -8.214581489562988
    4. '100' → logprob: -8.339581489562988
    5. '10' → logprob: -9.714581489562988
    6. ':int' → logprob: -11.089581489562988
    7. ',int' → logprob: -11.214581489562988
    8. '20' → logprob: -11.714581489562988
    9. '50' → logprob: -12.214581489562988
    10. '0' → logprob: -12.214581489562988

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006887249764986336
    2. '):' → logprob: -7.500688552856445
    3. ' ,' → logprob: -10.250688552856445
    4. '):
' → logprob: -10.375688552856445
    5. '       ' → logprob: -10.625688552856445
    6. ',
' → logprob: -10.750688552856445
    7. ':' → logprob: -11.125688552856445
    8. '   ' → logprob: -12.500688552856445
    9. ')' → logprob: -13.500688552856445
    10. '<|end|>' → logprob: -13.625688552856445

Token 114: ' threshold' (ID: 24313)
  Prédit: ' rate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rate' → logprob: -0.5363994240760803
    2. ' threshold' → logprob: -1.9113993644714355
    3. ' free' → logprob: -2.5363993644714355
    4. 'rate' → logprob: -2.6613993644714355
    5. 'threshold' → logprob: -3.2863993644714355
    6. ' tier' → logprob: -3.7863993644714355
    7. 'free' → logprob: -4.0363993644714355
    8. ' variable' → logprob: -4.7863993644714355
    9. ' fee' → logprob: -5.1613993644714355
    10. '   ' → logprob: -5.2863993644714355

Token 115: '_l' (ID: 1478)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01671336032450199
    2. '_l' → logprob: -4.5167131423950195
    3. ',' → logprob: -5.6417131423950195
    4. '):' → logprob: -6.8917131423950195
    5. '_usage' → logprob: -7.2667131423950195
    6. ')' → logprob: -9.01671314239502
    7. '_:' → logprob: -9.76671314239502
    8. ' :' → logprob: -10.14171314239502
    9. ' ,' → logprob: -10.26671314239502
    10. ':int' → logprob: -10.39171314239502

Token 116: 'iters' (ID: 195765)
  Prédit: 'iters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iters' → logprob: -0.0029666495975106955
    2. 'iter' → logprob: -6.25296688079834
    3. 'imit' → logprob: -8.00296688079834
    4. '```' → logprob: -8.25296688079834
    5. '   ' → logprob: -8.75296688079834
    6. 'it' → logprob: -9.62796688079834
    7. '_iters' → logprob: -10.37796688079834
    8. 'ters' → logprob: -10.37796688079834
    9. '_iter' → logprob: -10.62796688079834
    10. 'ine' → logprob: -10.87796688079834

Token 117: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006096287979744375
    2. '):' → logprob: -7.875609397888184
    3. ',' → logprob: -9.125609397888184
    4. ':int' → logprob: -9.625609397888184
    5. '<|end|>' → logprob: -10.125609397888184
    6. ')' → logprob: -11.750609397888184
    7. ' :' → logprob: -12.625609397888184
    8. '=' → logprob: -13.375609397888184
    9. '<|end|>' → logprob: -13.875609397888184
    10. '):
' → logprob: -15.000609397888184

Token 118: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.14286965131759644
    2. 'int' → logprob: -2.017869710922241
    3. ' ' → logprob: -8.64286994934082
    4. ':int' → logprob: -12.01786994934082
    5. '=int' → logprob: -12.51786994934082
    6. ' ' → logprob: -13.51786994934082
    7. ')' → logprob: -13.64286994934082
    8. '100' → logprob: -14.14286994934082
    9. '	int' → logprob: -14.14286994934082
    10. '[int' → logprob: -14.26786994934082

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03240561485290527
    2. '):' → logprob: -3.5324056148529053
    3. ' ,' → logprob: -6.157405853271484
    4. '):
' → logprob: -8.157405853271484
    5. '       ' → logprob: -9.782405853271484
    6. ' ):' → logprob: -9.782405853271484
    7. '   ' → logprob: -10.032405853271484
    8. ')' → logprob: -10.157405853271484
    9. ':' → logprob: -10.657405853271484
    10. ',
' → logprob: -11.532405853271484

Token 120: ' additional' (ID: 6623)
  Prédit: ' rate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rate' → logprob: -0.375633180141449
    2. 'rate' → logprob: -1.8756332397460938
    3. ' threshold' → logprob: -3.8756332397460938
    4. 'threshold' → logprob: -3.8756332397460938
    5. ' excess' → logprob: -4.000633239746094
    6. ' extra' → logprob: -4.000633239746094
    7. 'extra' → logprob: -4.250633239746094
    8. ' additional' → logprob: -4.375633239746094
    9. '   ' → logprob: -4.750633239746094
    10. ' reduced' → logprob: -5.000633239746094

Token 121: '_fee' (ID: 75685)
  Prédit: '_fee'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fee' → logprob: -0.03009374625980854
    2. '_rate' → logprob: -3.5300936698913574
    3. '_f' → logprob: -9.030094146728516
    4. '_charge' → logprob: -9.905094146728516
    5. '_l' → logprob: -10.280094146728516
    6. '_threshold' → logprob: -10.405094146728516
    7. '_' → logprob: -10.780094146728516
    8. '_usage' → logprob: -10.780094146728516
    9. '_per' → logprob: -10.905094146728516
    10. '_limit' → logprob: -11.405094146728516

Token 122: '_per' (ID: 10938)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2035287618637085
    2. '_per' → logprob: -1.7035287618637085
    3. 'per' → logprob: -6.578528881072998
    4. '<|end|>' → logprob: -7.953528881072998
    5. ')' → logprob: -8.70352840423584
    6. ':int' → logprob: -10.07852840423584
    7. ' per' → logprob: -10.07852840423584
    8. 'Per' → logprob: -10.32852840423584
    9. '):' → logprob: -10.32852840423584
    10. 's' → logprob: -11.70352840423584

Token 123: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.0011571277864277363
    2. 'liter' → logprob: -7.751157283782959
    3. '_' → logprob: -7.876157283782959
    4. ' liter' → logprob: -9.3761568069458
    5. ' ' → logprob: -9.3761568069458
    6. '_extra' → logprob: -9.5011568069458
    7. '```' → logprob: -10.0011568069458
    8. '_literal' → logprob: -11.5011568069458
    9. '_le' → logprob: -12.3761568069458
    10. ' _' → logprob: -12.3761568069458

Token 124: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.0011149736819788814
    2. 'liter' → logprob: -7.251114845275879
    3. '_iter' → logprob: -9.376114845275879
    4. '   ' → logprob: -9.376114845275879
    5. '```' → logprob: -9.626114845275879
    6. 'itter' → logprob: -10.376114845275879
    7. ' liter' → logprob: -10.626114845275879
    8. 'Iter' → logprob: -10.876114845275879
    9. ' iter' → logprob: -11.001114845275879
    10. 'iteral' → logprob: -11.376114845275879

Token 125: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019888286478817463
    2. '):' → logprob: -6.376988887786865
    3. ' :' → logprob: -9.126988410949707
    4. ':int' → logprob: -9.751988410949707
    5. ')' → logprob: -9.876988410949707
    6. ',' → logprob: -10.001988410949707
    7. '):
' → logprob: -11.126988410949707
    8. ' ):' → logprob: -12.126988410949707
    9. '   ' → logprob: -14.626988410949707
    10. '=' → logprob: -15.001988410949707

Token 126: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.22563040256500244
    2. 'int' → logprob: -1.6006304025650024
    3. ' ' → logprob: -8.975630760192871
    4. ':int' → logprob: -10.225630760192871
    5. ')' → logprob: -11.475630760192871
    6. '	int' → logprob: -11.725630760192871
    7. '   ' → logprob: -12.100630760192871
    8. '(int' → logprob: -12.350630760192871
    9. ',int' → logprob: -12.600630760192871
    10. '<int' → logprob: -12.600630760192871

Token 127: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.576746940612793
    2. '):
' → logprob: -0.826746940612793
    3. '       ' → logprob: -7.951746940612793
    4. '   ' → logprob: -8.326746940612793
    5. ')' → logprob: -9.701746940612793
    6. ':' → logprob: -9.951746940612793
    7. '):
' → logprob: -10.076746940612793
    8. ' ):
' → logprob: -10.576746940612793
    9. ' ):' → logprob: -10.701746940612793
    10. ',' → logprob: -12.076746940612793

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09760308265686035
    2. ' 
' → logprob: -3.2226030826568604
    3. '
' → logprob: -3.4726030826568604
    4. '        
' → logprob: -4.222602844238281
    5. '   ' → logprob: -6.097602844238281
    6. '    
' → logprob: -6.722602844238281
    7. '  
' → logprob: -6.972602844238281
    8. ' ' → logprob: -6.972602844238281
    9. '<|end|>' → logprob: -6.972602844238281
    10. '    ' → logprob: -8.347602844238281

Token 129: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3070259392261505
    2. ' self' → logprob: -1.8070259094238281
    3. 'self' (adapté à ' self') → logprob: -2.307025909423828
    4. '   ' → logprob: -8.307025909423828
    5. '	self' → logprob: -8.557025909423828
    6. ' super' → logprob: -9.557025909423828
    7. 'super' → logprob: -9.682025909423828
    8. ' ' → logprob: -9.932025909423828
    9. '	' → logprob: -11.432025909423828
    10. '
' → logprob: -12.182025909423828

Token 130: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.16719499230384827
    2. '.' → logprob: -2.1671950817108154
    3. '.base' → logprob: -3.7921950817108154
    4. '   ' → logprob: -4.542194843292236
    5. ' .' → logprob: -6.042194843292236
    6. '_base' → logprob: -6.417194843292236
    7. ' ' → logprob: -6.792194843292236
    8. '       ' → logprob: -7.792194843292236
    9. '.__' → logprob: -8.417195320129395
    10. '	' → logprob: -9.042195320129395

Token 131: 'base' (ID: 5423)
  Prédit: 'base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -3.023293538717553e-05
    2. '_base' → logprob: -11.000030517578125
    3. ' base' → logprob: -11.375030517578125
    4. '	base' → logprob: -14.875030517578125
    5. ' ' → logprob: -15.125030517578125
    6. '(base' → logprob: -15.375030517578125
    7. '   ' → logprob: -15.750030517578125
    8. '.base' → logprob: -16.000030517578125
    9. 'b' → logprob: -16.125030517578125
    10. '
' → logprob: -16.375030517578125

Token 132: '_fee' (ID: 75685)
  Prédit: '_fee'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fee' → logprob: -2.2842308680992573e-05
    2. '_f' → logprob: -11.375022888183594
    3. '_' → logprob: -11.625022888183594
    4. ' _' → logprob: -14.500022888183594
    5. 'fee' → logprob: -14.500022888183594
    6. '_fe' → logprob: -14.625022888183594
    7. '_base' → logprob: -15.250022888183594
    8. '```' → logprob: -16.000022888183594
    9. '   ' → logprob: -16.250022888183594
    10. ' fee' → logprob: -16.625022888183594

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029800137504935265
    2. '=' → logprob: -3.5298001766204834
    3. '<|end|>' → logprob: -10.404800415039062
    4. ' ' → logprob: -11.404800415039062
    5. ',' → logprob: -12.029800415039062
    6. ')' → logprob: -13.904800415039062
    7. '   ' → logprob: -14.654800415039062
    8. ' =
' → logprob: -15.279800415039062
    9. '    ' → logprob: -16.154800415039062
    10. '.' → logprob: -16.279800415039062

Token 134: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.0619683600962162
    2. 'base' → logprob: -2.8119683265686035
    3. '	base' → logprob: -14.811968803405762
    4. ' ' → logprob: -15.686968803405762
    5. '(base' → logprob: -15.811968803405762
    6. ' ' → logprob: -16.186967849731445
    7. '```' → logprob: -17.811967849731445
    8. '_base' → logprob: -18.061967849731445
    9. '0' → logprob: -19.061967849731445
    10. ';base' → logprob: -19.311967849731445

Token 135: '_fee' (ID: 75685)
  Prédit: '_fee'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fee' → logprob: -9.372294698550832e-06
    2. 'fee' → logprob: -11.750009536743164
    3. '_' → logprob: -14.750009536743164
    4. '_f' → logprob: -15.875009536743164
    5. 'Fee' → logprob: -16.000009536743164
    6. '_base' → logprob: -16.000009536743164
    7. ' fee' → logprob: -16.625009536743164
    8. 'e' → logprob: -16.625009536743164
    9. '   ' → logprob: -16.625009536743164
    10. '```' → logprob: -16.875009536743164

Token 136: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011313769035041332
    2. '
' → logprob: -5.1363139152526855
    3. '<|end|>' → logprob: -5.3863139152526855
    4. '        
' → logprob: -8.011313438415527
    5. ' 
' → logprob: -8.636313438415527
    6. '  
' → logprob: -9.011313438415527
    7. '   ' → logprob: -10.386313438415527
    8. '<|end|>' → logprob: -10.511313438415527
    9. ' ' → logprob: -11.011313438415527
    10. ',' → logprob: -11.386313438415527

Token 137: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013165995478630066
    2. '
' → logprob: -4.5131659507751465
    3. '<|end|>' → logprob: -6.2631659507751465
    4. '        
' → logprob: -9.513166427612305
    5. '   ' → logprob: -10.013166427612305
    6. ' ' → logprob: -11.013166427612305
    7. ' 
' → logprob: -11.263166427612305
    8. '<|end|>' → logprob: -11.513166427612305
    9. '  
' → logprob: -11.638166427612305
    10. 'self' → logprob: -12.013166427612305

Token 138: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0706462562084198
    2. '       ' → logprob: -3.320646286010742
    3. ' self' → logprob: -3.445646286010742
    4. '   ' → logprob: -9.195646286010742
    5. '	self' → logprob: -10.070646286010742
    6. '
' → logprob: -11.195646286010742
    7. ' ' → logprob: -11.195646286010742
    8. 'def' → logprob: -12.070646286010742
    9. '_self' → logprob: -12.695646286010742
    10. '      ' → logprob: -13.070646286010742

Token 139: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00023357603640761226
    2. '.' → logprob: -9.50023365020752
    3. '_threshold' → logprob: -9.50023365020752
    4. '.threshold' → logprob: -9.62523365020752
    5. '_' → logprob: -12.12523365020752
    6. '.__' → logprob: -13.00023365020752
    7. ' .' → logprob: -13.37523365020752
    8. 'threshold' → logprob: -13.75023365020752
    9. '```' → logprob: -13.75023365020752
    10. '
' → logprob: -14.00023365020752

Token 140: 'threshold' (ID: 67677)
  Prédit: 'threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -0.0001310719089815393
    2. ' threshold' → logprob: -9.250130653381348
    3. '_threshold' → logprob: -10.375130653381348
    4. '.threshold' → logprob: -13.500130653381348
    5. ' ' → logprob: -14.375130653381348
    6. 'base' → logprob: -15.125130653381348
    7. '   ' → logprob: -15.125130653381348
    8. '  ' → logprob: -15.625130653381348
    9. 'additional' → logprob: -15.625130653381348
    10. '
' → logprob: -15.625130653381348

Token 141: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.0001628956088097766
    2. '_threshold' → logprob: -9.625163078308105
    3. '_' → logprob: -9.750163078308105
    4. '_literals' → logprob: -10.750163078308105
    5. ' _' → logprob: -12.000163078308105
    6. ' =' → logprob: -13.500163078308105
    7. '_li' → logprob: -13.625163078308105
    8. '=' → logprob: -13.625163078308105
    9. '_usage' → logprob: -13.750163078308105
    10. '_limit' → logprob: -13.750163078308105

Token 142: 'iters' (ID: 195765)
  Prédit: 'iters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iters' → logprob: -0.003356778062880039
    2. 'iter' → logprob: -6.00335693359375
    3. '```' → logprob: -8.25335693359375
    4. 'it' → logprob: -8.87835693359375
    5. '   ' → logprob: -9.50335693359375
    6. '_' → logprob: -9.62835693359375
    7. '_iters' → logprob: -9.75335693359375
    8. 'lit' → logprob: -10.00335693359375
    9. '_iter' → logprob: -10.25335693359375
    10. '_l' → logprob: -10.50335693359375

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4287848174571991
    2. '=' → logprob: -1.0537848472595215
    3. ' ' → logprob: -10.178784370422363
    4. '<|end|>' → logprob: -10.553784370422363
    5. ')' → logprob: -11.678784370422363
    6. '   ' → logprob: -12.928784370422363
    7. ' =
' → logprob: -13.178784370422363
    8. '_' → logprob: -13.678784370422363
    9. ',' → logprob: -13.928784370422363
    10. ':' → logprob: -14.053784370422363

Token 144: ' threshold' (ID: 24313)
  Prédit: ' threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' threshold' → logprob: -0.014163747429847717
    2. 'threshold' → logprob: -4.264163970947266
    3. ' ' → logprob: -16.639163970947266
    4. '.threshold' → logprob: -16.639163970947266
    5. '_threshold' → logprob: -16.764163970947266
    6. 'reshold' → logprob: -17.389163970947266
    7. 'th' → logprob: -17.639163970947266
    8. ' thresholds' → logprob: -17.639163970947266
    9. ' thresh' → logprob: -17.889163970947266
    10. ' ' → logprob: -18.264163970947266

Token 145: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.375000953674316
    3. '_literals' → logprob: -15.750000953674316
    4. 'lit' → logprob: -17.125001907348633
    5. '```' → logprob: -17.125001907348633
    6. '_threshold' → logprob: -17.500001907348633
    7. ' _' → logprob: -17.625001907348633
    8. 'l' → logprob: -17.750001907348633
    9. 's' → logprob: -18.125001907348633
    10. '_li' → logprob: -18.375001907348633

Token 146: 'iters' (ID: 195765)
  Prédit: 'iters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iters' → logprob: -0.006596479099243879
    2. 'iter' → logprob: -5.256596565246582
    3. 'it' → logprob: -8.256596565246582
    4. '```' → logprob: -8.381596565246582
    5. 'ters' → logprob: -8.631596565246582
    6. 'ers' → logprob: -8.631596565246582
    7. '_' → logprob: -8.881596565246582
    8. '_iters' → logprob: -9.006596565246582
    9. 'itors' → logprob: -9.631596565246582
    10. '   ' → logprob: -10.256596565246582

Token 147: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015581895131617785
    2. 'self' → logprob: -6.626558303833008
    3. ' self' → logprob: -8.876558303833008
    4. '   ' → logprob: -10.126558303833008
    5. '
' → logprob: -10.876558303833008
    6. '	self' → logprob: -11.501558303833008
    7. '<|end|>' → logprob: -11.751558303833008
    8. 'def' → logprob: -12.126558303833008
    9. '	' → logprob: -13.376558303833008
    10. '      ' → logprob: -13.501558303833008

Token 148: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005849646404385567
    2. 'self' → logprob: -8.125584602355957
    3. '<|end|>' → logprob: -9.125584602355957
    4. '   ' → logprob: -9.750584602355957
    5. ' self' → logprob: -10.125584602355957
    6. '        
' → logprob: -10.750584602355957
    7. ',' → logprob: -11.625584602355957
    8. '
' → logprob: -11.875584602355957
    9. '      ' → logprob: -12.125584602355957
    10. ' ' → logprob: -12.125584602355957

Token 149: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.007193404715508223
    2. '       ' → logprob: -5.257193565368652
    3. ' self' → logprob: -6.257193565368652
    4. '	self' → logprob: -11.132193565368652
    5. '   ' → logprob: -11.507193565368652
    6. 'def' → logprob: -12.007193565368652
    7. '
' → logprob: -12.632193565368652
    8. '_self' → logprob: -13.007193565368652
    9. '(self' → logprob: -14.257193565368652
    10. ' ' → logprob: -14.257193565368652

Token 150: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0006358316168189049
    2. '.' → logprob: -7.875635623931885
    3. '   ' → logprob: -9.125636100769043
    4. '_' → logprob: -9.875636100769043
    5. '       ' → logprob: -10.625636100769043
    6. ' .' → logprob: -11.000636100769043
    7. '_add' → logprob: -11.500636100769043
    8. '.__' → logprob: -11.875636100769043
    9. '.additional' → logprob: -12.125636100769043
    10. '```' → logprob: -12.375636100769043

Token 151: 'additional' (ID: 69631)
  Prédit: 'additional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'additional' → logprob: -0.0002929174806922674
    2. ' additional' → logprob: -8.875292778015137
    3. 'base' → logprob: -9.375292778015137
    4. 'rate' → logprob: -11.000292778015137
    5. 'threshold' → logprob: -11.125292778015137
    6. '.additional' → logprob: -11.750292778015137
    7. 'add' → logprob: -11.875292778015137
    8. 'calculate' → logprob: -13.000292778015137
    9. 'def' → logprob: -13.000292778015137
    10. '
' → logprob: -13.250292778015137

Token 152: '_fee' (ID: 75685)
  Prédit: '_fee'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fee' → logprob: -0.00040934275602921844
    2. '_f' → logprob: -8.375409126281738
    3. '_' → logprob: -9.500409126281738
    4. '_per' → logprob: -10.000409126281738
    5. '_fe' → logprob: -10.625409126281738
    6. ' _' → logprob: -11.500409126281738
    7. '_l' → logprob: -12.500409126281738
    8. '
' → logprob: -13.000409126281738
    9. '_amount' → logprob: -13.250409126281738
    10. '_usage' → logprob: -13.500409126281738

Token 153: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.0002788551209960133
    2. ' =' → logprob: -8.87527847290039
    3. '=' → logprob: -9.25027847290039
    4. 'per' → logprob: -10.75027847290039
    5. '_' → logprob: -11.25027847290039
    6. 's' → logprob: -12.37527847290039
    7. '_for' → logprob: -13.87527847290039
    8. '=_' → logprob: -13.87527847290039
    9. '_p' → logprob: -14.37527847290039
    10. ' _' → logprob: -14.50027847290039

Token 154: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -3.173704271830502e-06
    2. '_' → logprob: -13.25000286102295
    3. ' _' → logprob: -14.62500286102295
    4. '_literal' → logprob: -15.12500286102295
    5. 'liter' → logprob: -15.37500286102295
    6. ' ' → logprob: -16.125003814697266
    7. 'l' → logprob: -16.500003814697266
    8. '   ' → logprob: -16.750003814697266
    9. '_li' → logprob: -17.375003814697266
    10. '_meter' → logprob: -17.500003814697266

Token 155: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.001472483854740858
    2. '_iter' → logprob: -6.751472473144531
    3. 'i' → logprob: -9.876472473144531
    4. '```' → logprob: -10.376472473144531
    5. '_' → logprob: -10.626472473144531
    6. ' iter' → logprob: -10.751472473144531
    7. '   ' → logprob: -10.751472473144531
    8. 'iteral' → logprob: -10.751472473144531
    9. 'liter' → logprob: -10.876472473144531
    10. 'it' → logprob: -11.126472473144531

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759414434432983
    2. '=' → logprob: -0.8259414434432983
    3. ' ' → logprob: -13.32594108581543
    4. ')' → logprob: -15.95094108581543
    5. '<|end|>' → logprob: -17.32594108581543
    6. '=int' → logprob: -17.45094108581543
    7. '=_' → logprob: -17.70094108581543
    8. '   ' → logprob: -17.70094108581543
    9. '_' → logprob: -17.82594108581543
    10. ':' → logprob: -18.07594108581543

Token 157: ' additional' (ID: 6623)
  Prédit: ' additional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' additional' → logprob: -0.03364662081003189
    2. 'additional' → logprob: -3.408646583557129
    3. ' ' → logprob: -14.408646583557129
    4. ' adicional' → logprob: -15.783646583557129
    5. ' ' → logprob: -16.158647537231445
    6. '.additional' → logprob: -16.658647537231445
    7. 'Additional' → logprob: -17.783647537231445
    8. '   ' → logprob: -18.533647537231445
    9. '追加' → logprob: -18.533647537231445
    10. ' additionally' → logprob: -18.658647537231445

Token 158: '_fee' (ID: 75685)
  Prédit: '_fee'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fee' → logprob: -0.0025203691329807043
    2. '_' → logprob: -6.002520561218262
    3. '_f' → logprob: -10.502520561218262
    4. ' _' → logprob: -11.877520561218262
    5. '_fe' → logprob: -12.627520561218262
    6. '_l' → logprob: -13.127520561218262
    7. '_per' → logprob: -13.377520561218262
    8. '_
' → logprob: -13.877520561218262
    9. ' ' → logprob: -14.502520561218262
    10. '_code' → logprob: -14.877520561218262

Token 159: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.0010775875998660922
    2. '_fee' → logprob: -7.251077651977539
    3. '_l' → logprob: -9.001077651977539
    4. 'per' → logprob: -9.251077651977539
    5. '_' → logprob: -9.501077651977539
    6. '_p' → logprob: -11.001077651977539
    7. ' _' → logprob: -11.251077651977539
    8. ' ' → logprob: -11.751077651977539
    9. '_token' → logprob: -11.876077651977539
    10. 'int' → logprob: -12.001077651977539

Token 160: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.0012030890211462975
    2. 'liter' → logprob: -8.001203536987305
    3. ' _' → logprob: -8.126203536987305
    4. ' liter' → logprob: -8.376203536987305
    5. ' ' → logprob: -8.876203536987305
    6. '_' → logprob: -8.876203536987305
    7. 'l' → logprob: -10.376203536987305
    8. 'lit' → logprob: -11.751203536987305
    9. '_literal' → logprob: -12.251203536987305
    10. ' l' → logprob: -12.376203536987305

Token 161: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.00041125001735053957
    2. '_iter' → logprob: -8.500411033630371
    3. 'liter' → logprob: -9.625411033630371
    4. 'ter' → logprob: -10.000411033630371
    5. ' iter' → logprob: -10.500411033630371
    6. '   ' → logprob: -11.375411033630371
    7. '```' → logprob: -11.625411033630371
    8. 'iterr' → logprob: -12.250411033630371
    9. 'итер' → logprob: -12.375411033630371
    10. 'itter' → logprob: -12.750411033630371

Token 162: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018362049013376236
    2. '

' → logprob: -4.018362045288086
    3. '
' → logprob: -9.393362045288086
    4. '<|end|>' → logprob: -9.518362045288086
    5. '   ' → logprob: -10.143362045288086
    6. '    
' → logprob: -12.768362045288086
    7. '  
' → logprob: -12.768362045288086
    8. '```' → logprob: -13.018362045288086
    9. 'def' → logprob: -13.143362045288086
    10. ' 
' → logprob: -13.393362045288086

Token 163: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0005800772923976183
    2. '   ' → logprob: -7.875580310821533
    3. '

' → logprob: -9.125579833984375
    4. 'def' → logprob: -10.250579833984375
    5. '    
' → logprob: -11.125579833984375
    6. '<|end|>' → logprob: -11.250579833984375
    7. '
' → logprob: -11.375579833984375
    8. ' 
' → logprob: -12.000579833984375
    9. '  
' → logprob: -12.250579833984375
    10. ' def' → logprob: -13.125579833984375

Token 164: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0022645669523626566
    2. ' def' → logprob: -6.252264499664307
    3. '   ' → logprob: -8.002264976501465
    4. '	def' → logprob: -14.127264976501465
    5. '
' → logprob: -14.627264976501465
    6. ' ' → logprob: -16.62726402282715
    7. '  ' → logprob: -17.50226402282715
    8. '    
' → logprob: -18.00226402282715
    9. '```' → logprob: -19.37726402282715
    10. '       ' → logprob: -19.50226402282715

Token 165: ' calculate' (ID: 17950)
  Prédit: ' calculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.17976711690425873
    2. 'calculate' → logprob: -1.80476713180542
    3. ' def' → logprob: -11.804766654968262
    4. 'def' → logprob: -11.804766654968262
    5. ' ' → logprob: -12.304766654968262
    6. '.calculate' → logprob: -13.304766654968262
    7. ' calcular' → logprob: -15.554766654968262
    8. 'alculate' → logprob: -15.554766654968262
    9. ' ' → logprob: -15.679766654968262
    10. ' calculates' → logprob: -15.804766654968262

Token 166: '_fee' (ID: 75685)
  Prédit: '_fee'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fee' → logprob: -1.1160349458805285e-05
    2. '_' → logprob: -11.500011444091797
    3. '_f' → logprob: -14.750011444091797
    4. ' _' → logprob: -15.500011444091797
    5. '```' → logprob: -15.500011444091797
    6. '_fe' → logprob: -16.625011444091797
    7. '_code' → logprob: -17.500011444091797
    8. ' fee' → logprob: -17.750011444091797
    9. 'fee' → logprob: -18.000011444091797
    10. '##_' → logprob: -18.375011444091797

Token 167: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006302326801232994
    2. '(' → logprob: -7.3756303787231445
    3. '(
' → logprob: -13.125630378723145
    4. 'self' → logprob: -13.750630378723145
    5. '       ' → logprob: -15.500630378723145
    6. ' (' → logprob: -15.625630378723145
    7. '   ' → logprob: -15.875630378723145
    8. '(s' → logprob: -17.000629425048828
    9. ' self' → logprob: -17.750629425048828
    10. ' ' → logprob: -17.875629425048828

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.756989700486884e-05
    2. 'self' → logprob: -9.75008773803711
    3. ' ,' → logprob: -10.75008773803711
    4. ',self' → logprob: -12.37508773803711
    5. '(self' → logprob: -13.37508773803711
    6. '       ' → logprob: -14.25008773803711
    7. '   ' → logprob: -15.00008773803711
    8. ',
' → logprob: -15.12508773803711
    9. '<|end|>' → logprob: -15.37508773803711
    10. ' self' → logprob: -15.75008773803711

Token 169: ' usage' (ID: 16622)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1945006400346756
    2. 'self' → logprob: -2.319500684738159
    3. ' usage' → logprob: -2.569500684738159
    4. 'usage' → logprob: -6.31950044631958
    5. '(self' → logprob: -10.944500923156738
    6. '       ' → logprob: -11.069500923156738
    7. ' ' → logprob: -12.069500923156738
    8. '   ' → logprob: -12.194500923156738
    9. '_usage' → logprob: -12.882000923156738
    10. '	self' → logprob: -13.069500923156738

Token 170: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -3.531315314830863e-06
    2. '_literals' → logprob: -13.500003814697266
    3. '_' → logprob: -13.625003814697266
    4. ' _' → logprob: -14.500003814697266
    5. '```' → logprob: -15.625003814697266
    6. '_k' → logprob: -17.125003814697266
    7. '_s' → logprob: -17.250003814697266
    8. '_n' → logprob: -17.750003814697266
    9. '_m' → logprob: -17.875003814697266
    10. 's' → logprob: -18.125003814697266

Token 171: 'iters' (ID: 195765)
  Prédit: 'iters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iters' → logprob: -0.0009053878602571785
    2. 'ters' → logprob: -7.500905513763428
    3. '```' → logprob: -9.25090503692627
    4. 'it' → logprob: -9.62590503692627
    5. '   ' → logprob: -9.75090503692627
    6. '_' → logprob: -10.50090503692627
    7. 'iter' → logprob: -10.50090503692627
    8. '_iters' → logprob: -10.62590503692627
    9. 'eters' → logprob: -11.25090503692627
    10. '       ' → logprob: -12.00090503692627

Token 172: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00021140782337170094
    2. ':int' → logprob: -9.375211715698242
    3. '):' → logprob: -9.375211715698242
    4. ')' → logprob: -10.500211715698242
    5. ' :' → logprob: -11.750211715698242
    6. '   ' → logprob: -12.625211715698242
    7. '):
' → logprob: -13.375211715698242
    8. ' ):' → logprob: -14.375211715698242
    9. ' )' → logprob: -15.125211715698242
    10. '```' → logprob: -15.625211715698242

Token 173: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5774410367012024
    2. 'int' → logprob: -0.8274410367012024
    3. ')' → logprob: -6.577441215515137
    4. ' )' → logprob: -10.077441215515137
    5. ' ' → logprob: -10.702441215515137
    6. ':int' → logprob: -11.202441215515137
    7. '(int' → logprob: -11.827441215515137
    8. '=int' → logprob: -11.952441215515137
    9. '<int' → logprob: -12.327441215515137
    10. '   ' → logprob: -12.952441215515137

Token 174: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004204001743346453
    2. '):' → logprob: -5.504203796386719
    3. ':' → logprob: -9.129203796386719
    4. '):
' → logprob: -11.879203796386719
    5. ' )' → logprob: -12.129203796386719
    6. '   ' → logprob: -12.504203796386719
    7. ')->' → logprob: -15.004203796386719
    8. ' ):' → logprob: -15.504203796386719
    9. '       ' → logprob: -16.00420379638672
    10. '`)' → logprob: -16.37920379638672

Token 175: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002972710644826293
    2. ' :' → logprob: -5.877972602844238
    3. '):' → logprob: -9.752972602844238
    4. ':
' → logprob: -9.877972602844238
    5. ' ->' → logprob: -10.752972602844238
    6. '       ' → logprob: -11.627972602844238
    7. ')' → logprob: -11.877972602844238
    8. ':return' → logprob: -12.002972602844238
    9. '->' → logprob: -12.252972602844238
    10. ' :
' → logprob: -12.752972602844238

Token 176: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5759899020195007
    2. ' int' → logprob: -0.8259899020195007
    3. '(int' → logprob: -9.950989723205566
    4. ' ' → logprob: -14.075989723205566
    5. ' (' → logprob: -14.075989723205566
    6. ':int' → logprob: -15.450989723205566
    7. '   ' → logprob: -15.450989723205566
    8. '<int' → logprob: -15.575989723205566
    9. '[int' → logprob: -15.700989723205566
    10. '	int' → logprob: -15.950989723205566

Token 177: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002974733477458358
    2. ':
' → logprob: -5.877974510192871
    3. '       ' → logprob: -8.877974510192871
    4. '):' → logprob: -11.002974510192871
    5. '):
' → logprob: -12.002974510192871
    6. ' :' → logprob: -12.502974510192871
    7. ':return' → logprob: -13.877974510192871
    8. ':
' → logprob: -14.252974510192871
    9. ':

' → logprob: -14.752974510192871
    10. '():' → logprob: -14.877974510192871

Token 178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011968977050855756
    2. '
' → logprob: -7.00119686126709
    3. ' if' → logprob: -9.37619686126709
    4. '```' → logprob: -9.75119686126709
    5. 'if' → logprob: -9.87619686126709
    6. '   ' → logprob: -11.00119686126709
    7. ':' → logprob: -11.25119686126709
    8. ',' → logprob: -11.25119686126709
    9. '        
' → logprob: -11.37619686126709
    10. '<|end|>' → logprob: -12.25119686126709

Token 179: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7014178037643433
    2. ' if' → logprob: -1.0764178037643433
    3. '       ' → logprob: -1.8264178037643433
    4. ' fee' → logprob: -6.326417922973633
    5. 'fee' → logprob: -8.201417922973633
    6. '```' → logprob: -9.326417922973633
    7. '        ' → logprob: -9.451417922973633
    8. 'self' → logprob: -11.701417922973633
    9. ' ' → logprob: -11.951417922973633
    10. '_fee' → logprob: -12.201417922973633

Token 180: ' usage' (ID: 16622)
  Prédit: ' usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' usage' → logprob: -2.1008713702030946e-06
    2. 'usage' → logprob: -13.250001907348633
    3. ' use' → logprob: -15.125001907348633
    4. '_usage' → logprob: -18.250001907348633
    5. ' user' → logprob: -19.125001907348633
    6. ' ' → logprob: -19.625001907348633
    7. '    ' → logprob: -20.250001907348633
    8. '   ' → logprob: -21.500001907348633
    9. ' uso' → logprob: -21.500001907348633
    10. 'Usage' → logprob: -21.750001907348633

Token 181: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.759734732331708e-05
    2. '_' → logprob: -11.000017166137695
    3. '_literals' → logprob: -14.750017166137695
    4. '```' → logprob: -15.375017166137695
    5. '_li' → logprob: -16.125017166137695
    6. ' _' → logprob: -17.125017166137695
    7. 's' → logprob: -18.125017166137695
    8. '_
' → logprob: -18.375017166137695
    9. '_less' → logprob: -18.375017166137695
    10. ' ' → logprob: -18.375017166137695

Token 182: 'iters' (ID: 195765)
  Prédit: 'iters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iters' → logprob: -0.0019404153572395444
    2. 'ters' → logprob: -7.3769402503967285
    3. '_iters' → logprob: -8.251940727233887
    4. 'it' → logprob: -8.501940727233887
    5. '   ' → logprob: -8.751940727233887
    6. '```' → logprob: -9.126940727233887
    7. '_' → logprob: -9.126940727233887
    8. 'iter' → logprob: -9.251940727233887
    9. 't' → logprob: -9.501940727233887
    10. '_l' → logprob: -10.126940727233887

Token 183: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.013916072435677052
    2. ' >' → logprob: -4.638916015625
    3. '<=' → logprob: -5.513916015625
    4. '>' → logprob: -9.263916015625
    5. ' ' → logprob: -11.513916015625
    6. '<|end|>' → logprob: -11.638916015625
    7. ' <' → logprob: -12.763916015625
    8. ' ' → logprob: -12.888916015625
    9. ')<=' → logprob: -14.638916015625
    10. '<|end|>' → logprob: -15.263916015625

Token 184: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3868727385997772
    2. ' self' → logprob: -1.1368727684020996
    3. '	self' → logprob: -14.386872291564941
    4. '(self' → logprob: -14.511872291564941
    5. '0' → logprob: -15.136872291564941
    6. '=self' → logprob: -16.386873245239258
    7. '[self' → logprob: -16.511873245239258
    8. ' ' → logprob: -16.636873245239258
    9. '_self' → logprob: -16.761873245239258
    10. '       ' → logprob: -17.011873245239258

Token 185: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -6.392202976712724e-06
    2. '.' → logprob: -13.125006675720215
    3. ' .' → logprob: -13.625006675720215
    4. '   ' → logprob: -13.875006675720215
    5. '_' → logprob: -14.750006675720215
    6. ' ' → logprob: -15.125006675720215
    7. '       ' → logprob: -15.250006675720215
    8. '."_' → logprob: -15.625006675720215
    9. '
' → logprob: -15.750006675720215
    10. '.__' → logprob: -15.750006675720215

Token 186: 'threshold' (ID: 67677)
  Prédit: 'threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -1.1517960956552997e-05
    2. '_threshold' → logprob: -11.875011444091797
    3. ' threshold' → logprob: -12.375011444091797
    4. '.threshold' → logprob: -15.375011444091797
    5. '   ' → logprob: -18.625011444091797
    6. 'th' → logprob: -19.125011444091797
    7. ' ' → logprob: -20.250011444091797
    8. 'reshold' → logprob: -20.375011444091797
    9. '_THRESHOLD' → logprob: -20.500011444091797
    10. 'Threshold' → logprob: -20.500011444091797

Token 187: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -2.45848218582978e-06
    2. '_literals' → logprob: -14.25000286102295
    3. '_' → logprob: -14.50000286102295
    4. '_threshold' → logprob: -14.75000286102295
    5. ':' → logprob: -14.75000286102295
    6. '```' → logprob: -15.12500286102295
    7. ' _' → logprob: -16.500001907348633
    8. '_:' → logprob: -17.375001907348633
    9. 's' → logprob: -17.625001907348633
    10. '_k' → logprob: -18.000001907348633

Token 188: 'iters' (ID: 195765)
  Prédit: 'iters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iters' → logprob: -9.543733904138207e-05
    2. 'iter' → logprob: -10.50009536743164
    3. '_' → logprob: -10.87509536743164
    4. '```' → logprob: -11.25009536743164
    5. '_iters' → logprob: -11.37509536743164
    6. 'ters' → logprob: -11.50009536743164
    7. 'it' → logprob: -12.25009536743164
    8. '   ' → logprob: -13.37509536743164
    9. '_iter' → logprob: -13.37509536743164
    10. 'itters' → logprob: -13.87509536743164

Token 189: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04327457770705223
    2. ':
' → logprob: -3.1682746410369873
    3. ':return' → logprob: -8.668274879455566
    4. ' :' → logprob: -9.668274879455566
    5. ' :
' → logprob: -10.543274879455566
    6. '       ' → logprob: -11.668274879455566
    7. '           ' → logprob: -13.168274879455566
    8. '):
' → logprob: -13.668274879455566
    9. ':
' → logprob: -14.418274879455566
    10. '):' → logprob: -14.543274879455566

Token 190: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08418317139148712
    2. 'return' → logprob: -3.2091832160949707
    3. ' return' → logprob: -4.084183216094971
    4. '       ' → logprob: -4.584183216094971
    5. ':
' → logprob: -5.209183216094971
    6. ':' → logprob: -5.459183216094971
    7. '
' → logprob: -6.959183216094971
    8. ':return' → logprob: -6.959183216094971
    9. '```' → logprob: -6.959183216094971
    10. '<|end|>' → logprob: -7.834183216094971

Token 191: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01835853047668934
    2. ' return' → logprob: -4.6433587074279785
    3. '           ' → logprob: -4.7683587074279785
    4. '
' → logprob: -10.26835823059082
    5. '       ' → logprob: -10.89335823059082
    6. '	return' → logprob: -12.14335823059082
    7. '{return' → logprob: -12.51835823059082
    8. ':return' → logprob: -12.76835823059082
    9. '```' → logprob: -12.89335823059082
    10. '   ' → logprob: -13.64335823059082

Token 192: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5759581327438354
    2. 'self' → logprob: -0.8259581327438354
    3. '       ' → logprob: -11.575958251953125
    4. '           ' → logprob: -12.825958251953125
    5. '0' → logprob: -13.200958251953125
    6. '	self' → logprob: -13.325958251953125
    7. '_self' → logprob: -14.325958251953125
    8. '(self' → logprob: -14.450958251953125
    9. '```' → logprob: -14.450958251953125
    10. ' ' → logprob: -14.700958251953125

Token 193: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -4.961759259458631e-06
    2. '       ' → logprob: -12.500004768371582
    3. '   ' → logprob: -14.250004768371582
    4. '_base' → logprob: -15.250004768371582
    5. '.' → logprob: -16.0000057220459
    6. ' .' → logprob: -16.1250057220459
    7. '.__' → logprob: -17.0000057220459
    8. '           ' → logprob: -18.6250057220459
    9. '_' → logprob: -18.8750057220459
    10. ' ' → logprob: -19.0000057220459

Token 194: 'base' (ID: 5423)
  Prédit: 'base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -3.249780638725497e-05
    2. '_base' → logprob: -10.375032424926758
    3. ' base' → logprob: -14.625032424926758
    4. 'baseline' → logprob: -15.250032424926758
    5. 'threshold' → logprob: -16.125032424926758
    6. '.base' → logprob: -16.125032424926758
    7. 'b' → logprob: -16.375032424926758
    8. 'bas' → logprob: -16.375032424926758
    9. '(base' → logprob: -16.625032424926758
    10. '	base' → logprob: -17.125032424926758

Token 195: '_fee' (ID: 75685)
  Prédit: '_fee'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fee' → logprob: -6.2729995988775045e-06
    2. '_' → logprob: -12.125006675720215
    3. '_f' → logprob: -14.625006675720215
    4. ' _' → logprob: -15.500006675720215
    5. '_fe' → logprob: -16.0000057220459
    6. 'fee' → logprob: -16.7500057220459
    7. '\' → logprob: -19.2500057220459
    8. ' fee' → logprob: -19.6250057220459
    9. '```' → logprob: -19.6250057220459
    10. '_floor' → logprob: -19.7500057220459

Token 196: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04001010209321976
    2. 'else' → logprob: -4.04000997543335
    3. ' else' → logprob: -4.29000997543335
    4. '
' → logprob: -4.91500997543335
    5. '        
' → logprob: -7.91500997543335
    6. 'return' → logprob: -9.290010452270508
    7. '<|end|>' → logprob: -9.415010452270508
    8. '	else' → logprob: -10.915010452270508
    9. '	' → logprob: -12.540010452270508
    10. '
' → logprob: -13.165010452270508

Token 197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011815639212727547
    2. 'else' → logprob: -4.761815547943115
    3. ' else' → logprob: -5.761815547943115
    4. 'return' → logprob: -10.386816024780273
    5. '
' → logprob: -11.886816024780273
    6. '        
' → logprob: -11.886816024780273
    7. '   ' → logprob: -13.511816024780273
    8. ' return' → logprob: -13.761816024780273
    9. '	else' → logprob: -14.261816024780273
    10. '```' → logprob: -14.386816024780273

Token 198: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8228466510772705
    2. 'else' (adapté à ' else') → logprob: -1.6978466510772705
    3. 'return' → logprob: -1.8228466510772705
    4. ' else' → logprob: -1.8228466510772705
    5. '
' → logprob: -3.5728466510772705
    6. ' return' → logprob: -3.8228466510772705
    7. '        
' → logprob: -5.447846412658691
    8. ' 
' → logprob: -8.822846412658691
    9. '    
' → logprob: -9.947846412658691
    10. '   ' → logprob: -10.197846412658691

Token 199: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20794887840747833
    2. ':
' → logprob: -1.957948923110962
    3. '           ' → logprob: -3.332948923110962
    4. '       ' → logprob: -5.207948684692383
    5. ':return' → logprob: -5.957948684692383
    6. ' return' → logprob: -6.832948684692383
    7. 'return' → logprob: -7.332948684692383
    8. ' :' → logprob: -7.957948684692383
    9. ' :
' → logprob: -8.332948684692383
    10. '        ' → logprob: -8.582948684692383

Token 200: '           ' (ID: 352)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1014864593744278
    2. ' self' → logprob: -2.8514864444732666
    3. '           ' → logprob: -3.3514864444732666
    4. 'return' → logprob: -5.851486682891846
    5. '       ' → logprob: -7.726486682891846
    6. ' return' → logprob: -8.601486206054688
    7. '   ' → logprob: -9.101486206054688
    8. '               ' → logprob: -9.476486206054688
    9. '(self' → logprob: -11.726486206054688
    10. ' ' → logprob: -12.101486206054688

Token 201: ' extra' (ID: 5018)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06842043250799179
    2. 'self' → logprob: -2.94342041015625
    3. ' return' → logprob: -4.81842041015625
    4. '           ' → logprob: -5.31842041015625
    5. ' self' → logprob: -7.81842041015625
    6. '       ' → logprob: -10.69342041015625
    7. '               ' → logprob: -10.69342041015625
    8. '   ' → logprob: -11.56842041015625
    9. '(self' → logprob: -12.44342041015625
    10. 'base' → logprob: -13.19342041015625

Token 202: '_l' (ID: 1478)
  Prédit: '_usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_usage' → logprob: -0.40252938866615295
    2. '_fee' → logprob: -1.4025293588638306
    3. '_l' → logprob: -2.65252947807312
    4. ' =' → logprob: -4.277529239654541
    5. '_amount' → logprob: -8.1525297164917
    6. '_' → logprob: -8.2775297164917
    7. '=' → logprob: -8.9025297164917
    8. '_units' → logprob: -9.2775297164917
    9. '_charge' → logprob: -9.7775297164917
    10. '_use' → logprob: -9.7775297164917

Token 203: 'iters' (ID: 195765)
  Prédit: 'iters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iters' → logprob: -0.0037794087547808886
    2. '_usage' → logprob: -6.378779411315918
    3. 'iter' → logprob: -7.128779411315918
    4. 'it' → logprob: -8.378779411315918
    5. 'usage' → logprob: -8.378779411315918
    6. '   ' → logprob: -8.628779411315918
    7. '```' → logprob: -8.878779411315918
    8. '_' → logprob: -9.378779411315918
    9. '       ' → logprob: -9.878779411315918
    10. '_iter' → logprob: -10.128779411315918

Token 204: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014164102263748646
    2. '=' → logprob: -4.264163970947266
    3. ' ' → logprob: -15.014163970947266
    4. '   ' → logprob: -16.264163970947266
    5. ' *' → logprob: -17.139163970947266
    6. 's' → logprob: -17.889163970947266
    7. ' -' → logprob: -17.889163970947266
    8. '-' → logprob: -18.139163970947266
    9. '_fee' → logprob: -18.514163970947266
    10. '       ' → logprob: -18.514163970947266

Token 205: ' usage' (ID: 16622)
  Prédit: ' usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' usage' → logprob: -0.01105206273496151
    2. 'usage' → logprob: -4.511052131652832
    3. ' use' → logprob: -13.136052131652832
    4. '           ' → logprob: -14.011052131652832
    5. '       ' → logprob: -14.511052131652832
    6. ' (' → logprob: -15.261052131652832
    7. 'use' → logprob: -15.761052131652832
    8. '   ' → logprob: -16.136051177978516
    9. '_usage' → logprob: -16.386051177978516
    10. ' ' → logprob: -16.636051177978516

Token 206: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.9361264946837764e-07
    2. '_literals' → logprob: -16.875
    3. '_' → logprob: -17.625
    4. 'lit' → logprob: -18.625
    5. '```' → logprob: -18.875
    6. ' -' → logprob: -19.375
    7. ' liters' → logprob: -19.625
    8. 'l' → logprob: -19.75
    9. '-l' → logprob: -19.875
    10. ' _' → logprob: -20.0

Token 207: 'iters' (ID: 195765)
  Prédit: 'iters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iters' → logprob: -0.007386435754597187
    2. '_l' → logprob: -5.382386207580566
    3. 'it' → logprob: -6.257386207580566
    4. 'iter' → logprob: -7.632386207580566
    5. '```' → logprob: -9.132386207580566
    6. '_' → logprob: -9.757386207580566
    7. '_iters' → logprob: -10.257386207580566
    8. '_t' → logprob: -10.882386207580566
    9. 'lit' → logprob: -11.132386207580566
    10. '-' → logprob: -11.132386207580566

Token 208: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0024909991770982742
    2. '-' → logprob: -6.002490997314453
    3. ' ' → logprob: -11.752490997314453
    4. '           ' → logprob: -12.252490997314453
    5. ' ' → logprob: -14.127490997314453
    6. '        ' → logprob: -14.252490997314453
    7. '            ' → logprob: -14.752490997314453
    8. '       ' → logprob: -14.877490997314453
    9. '               ' → logprob: -15.877490997314453
    10. '   ' → logprob: -16.252490997314453

Token 209: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0788951888680458
    2. ' self' → logprob: -2.578895092010498
    3. '           ' → logprob: -12.828895568847656
    4. '       ' → logprob: -13.203895568847656
    5. '_self' → logprob: -14.828895568847656
    6. '	self' → logprob: -15.828895568847656
    7. ' ' → logprob: -16.328895568847656
    8. '   ' → logprob: -16.453895568847656
    9. '(self' → logprob: -16.578895568847656
    10. '               ' → logprob: -17.078895568847656

Token 210: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.259079363080673e-05
    2. '_threshold' → logprob: -11.375012397766113
    3. '.threshold' → logprob: -14.875012397766113
    4. '.' → logprob: -15.000012397766113
    5. 'self' → logprob: -15.750012397766113
    6. '   ' → logprob: -16.12501335144043
    7. '.__' → logprob: -17.25001335144043
    8. '_' → logprob: -17.37501335144043
    9. '       ' → logprob: -17.62501335144043
    10. '_self' → logprob: -18.00001335144043

Token 211: 'threshold' (ID: 67677)
  Prédit: 'threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -0.0005543439765460789
    2. '_threshold' → logprob: -7.50055456161499
    3. ' threshold' → logprob: -14.000554084777832
    4. '.threshold' → logprob: -14.625554084777832
    5. '_THRESHOLD' → logprob: -19.12555503845215
    6. 'reshold' → logprob: -20.00055503845215
    7. 'th' → logprob: -20.25055503845215
    8. 'Threshold' → logprob: -20.50055503845215
    9. '   ' → logprob: -20.62555503845215
    10. '
' → logprob: -20.75055503845215

Token 212: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -4.320199877838604e-07
    2. '_literals' → logprob: -15.125
    3. '_' → logprob: -17.0
    4. '_threshold' → logprob: -17.125
    5. '```' → logprob: -17.125
    6. ' _' → logprob: -17.375
    7. '       ' → logprob: -18.75
    8. '\' → logprob: -19.0
    9. 'l' → logprob: -19.125
    10. 'lit' → logprob: -19.625

Token 213: 'iters' (ID: 195765)
  Prédit: 'iters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iters' → logprob: -0.00013452880375552922
    2. 'ters' → logprob: -9.500134468078613
    3. 'iter' → logprob: -10.875134468078613
    4. '_iters' → logprob: -11.250134468078613
    5. '```' → logprob: -11.500134468078613
    6. 'it' → logprob: -11.875134468078613
    7. '_' → logprob: -13.125134468078613
    8. 'iers' → logprob: -13.750134468078613
    9. 'itters' → logprob: -13.750134468078613
    10. '   ' → logprob: -13.875134468078613

Token 214: '
' (ID: 198)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.05393010750412941
    2. '*' → logprob: -3.4289300441741943
    3. '
' → logprob: -4.428930282592773
    4. '           ' → logprob: -5.053930282592773
    5. ' 
' → logprob: -8.053930282592773
    6. ' *
' → logprob: -8.053930282592773
    7. '       ' → logprob: -8.303930282592773
    8. '            
' → logprob: -8.303930282592773
    9. 'return' → logprob: -9.178930282592773
    10. '  
' → logprob: -9.428930282592773

Token 215: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31279829144477844
    2. '
' → logprob: -2.187798261642456
    3. 'return' → logprob: -2.437798261642456
    4. ' return' → logprob: -2.687798261642456
    5. '       ' → logprob: -7.812798500061035
    6. ' 
' → logprob: -8.187798500061035
    7. '            
' → logprob: -8.687798500061035
    8. '    
' → logprob: -9.562798500061035
    9. '   ' → logprob: -10.437798500061035
    10. '               ' → logprob: -10.687798500061035

Token 216: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.101958729326725
    2. ' return' → logprob: -2.351958751678467
    3. '           ' → logprob: -6.351958751678467
    4. '       ' → logprob: -12.476958274841309
    5. '   ' → logprob: -13.726958274841309
    6. '
' → logprob: -14.476958274841309
    7. '	return' → logprob: -14.851958274841309
    8. '               ' → logprob: -14.976958274841309
    9. '```' → logprob: -15.351958274841309
    10. ' ' → logprob: -15.476958274841309

Token 217: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.25194281339645386
    2. 'self' → logprob: -1.5019428730010986
    3. '           ' → logprob: -11.37694263458252
    4. '	self' → logprob: -14.62694263458252
    5. '(self' → logprob: -14.62694263458252
    6. '               ' → logprob: -15.00194263458252
    7. ' ' → logprob: -15.37694263458252
    8. ' ' → logprob: -15.50194263458252
    9. '   ' → logprob: -15.75194263458252
    10. '_self' → logprob: -16.126943588256836

Token 218: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -4.320199877838604e-07
    2. '.' → logprob: -15.5
    3. ' .' → logprob: -16.5
    4. 'self' → logprob: -17.375
    5. '_base' → logprob: -17.75
    6. '   ' → logprob: -18.0
    7. '.__' → logprob: -18.375
    8. ')._' → logprob: -18.5
    9. '       ' → logprob: -19.0
    10. '."_' → logprob: -19.375

Token 219: 'base' (ID: 5423)
  Prédit: 'base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -2.129266067640856e-05
    2. '_base' → logprob: -11.000020980834961
    3. ' base' → logprob: -12.875020980834961
    4. '(base' → logprob: -14.500020980834961
    5. 'threshold' → logprob: -14.875020980834961
    6. '_' → logprob: -15.750020980834961
    7. '	base' → logprob: -15.875020980834961
    8. 'rate' → logprob: -16.00002098083496
    9. 'baseline' → logprob: -16.00002098083496
    10. '.base' → logprob: -16.25002098083496

Token 220: '_fee' (ID: 75685)
  Prédit: '_fee'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fee' → logprob: -1.981667537620524e-06
    2. '_f' → logprob: -14.625001907348633
    3. 'fee' → logprob: -14.875001907348633
    4. '\' → logprob: -15.000001907348633
    5. ' _' → logprob: -15.000001907348633
    6. '_fe' → logprob: -16.125001907348633
    7. '_' → logprob: -16.375001907348633
    8. '._' → logprob: -16.625001907348633
    9. '_floor' → logprob: -16.750001907348633
    10. '```' → logprob: -16.875001907348633

Token 221: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519388198852539
    2. '+' → logprob: -1.501938819885254
    3. '+self' → logprob: -11.626938819885254
    4. ' plus' → logprob: -15.501938819885254
    5. '           ' → logprob: -15.876938819885254
    6. ' ' → logprob: -16.126937866210938
    7. '+(' → logprob: -16.626937866210938
    8. ' ' → logprob: -16.751937866210938
    9. '               ' → logprob: -16.751937866210938
    10. '＋' → logprob: -16.876937866210938

Token 222: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1517418473958969
    2. 'self' → logprob: -2.5267417430877686
    3. ' extra' → logprob: -3.0267417430877686
    4. 'extra' → logprob: -4.401741981506348
    5. '           ' → logprob: -9.401741981506348
    6. '(extra' → logprob: -10.526741981506348
    7. ' (' → logprob: -10.901741981506348
    8. '(self' → logprob: -11.401741981506348
    9. '               ' → logprob: -14.651741981506348
    10. '(' → logprob: -14.776741981506348

Token 223: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -6.158350151963532e-05
    2. '.' → logprob: -10.000061988830566
    3. '_extra' → logprob: -11.750061988830566
    4. '_' → logprob: -13.125061988830566
    5. '   ' → logprob: -13.125061988830566
    6. ' .' → logprob: -13.750061988830566
    7. '*' → logprob: -13.875061988830566
    8. '.*' → logprob: -14.500061988830566
    9. '->_' → logprob: -15.000061988830566
    10. ' ' → logprob: -15.375061988830566

Token 224: 'additional' (ID: 69631)
  Prédit: 'additional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'additional' → logprob: -0.002684087259694934
    2. '_add' → logprob: -6.002684116363525
    3. 'add' → logprob: -8.502683639526367
    4. 'addition' → logprob: -12.502683639526367
    5. ' additional' → logprob: -13.752683639526367
    6. '.additional' → logprob: -14.502683639526367
    7. 'extra' → logprob: -16.377683639526367
    8. '(add' → logprob: -16.752683639526367
    9. 'aditional' → logprob: -16.752683639526367
    10. '追加' → logprob: -17.752683639526367

Token 225: '_fee' (ID: 75685)
  Prédit: '_fee'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fee' → logprob: -5.080963092041202e-06
    2. '_' → logprob: -13.125004768371582
    3. '_f' → logprob: -13.375004768371582
    4. ' _' → logprob: -14.250004768371582
    5. '_fe' → logprob: -14.875004768371582
    6. '_code' → logprob: -15.500004768371582
    7. 'fee' → logprob: -17.2500057220459
    8. '_charge' → logprob: -17.3750057220459
    9. '```' → logprob: -17.5000057220459
    10. '\' → logprob: -17.5000057220459

Token 226: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -2.935296834039036e-06
    2. '_p' → logprob: -14.37500286102295
    3. 'per' → logprob: -14.50000286102295
    4. '_' → logprob: -14.62500286102295
    5. ' _' → logprob: -14.75000286102295
    6. '_for' → logprob: -15.37500286102295
    7. '_fee' → logprob: -15.62500286102295
    8. 's' → logprob: -16.375003814697266
    9. '_PER' → logprob: -16.625003814697266
    10. '_f' → logprob: -17.250003814697266

Token 227: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.9743012671824545e-05
    2. 'liter' → logprob: -11.125020027160645
    3. 'l' → logprob: -13.375020027160645
    4. '_' → logprob: -13.375020027160645
    5. '_literal' → logprob: -14.375020027160645
    6. ' _' → logprob: -14.375020027160645
    7. ' liter' → logprob: -15.750020027160645
    8. '_meter' → logprob: -16.375019073486328
    9. 'lit' → logprob: -17.000019073486328
    10. '_li' → logprob: -17.125019073486328

Token 228: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.0018741434905678034
    2. 'liter' → logprob: -6.501873970031738
    3. '_iter' → logprob: -8.501873970031738
    4. 'ter' → logprob: -10.501873970031738
    5. 'iteral' → logprob: -10.626873970031738
    6. 'iteration' → logprob: -11.126873970031738
    7. 'itter' → logprob: -11.251873970031738
    8. 'iterator' → logprob: -11.626873970031738
    9. 'iterr' → logprob: -12.126873970031738
    10. ' iter' → logprob: -12.251873970031738

Token 229: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0013263145228847861
    2. '*' → logprob: -6.626326084136963
    3. ' ' → logprob: -15.126326560974121
    4. ' ' → logprob: -16.251325607299805
    5. '<|end|>' → logprob: -18.376325607299805
    6. '```' → logprob: -18.751325607299805
    7. ' **' → logprob: -18.876325607299805
    8. '*object' → logprob: -18.876325607299805
    9. '**' → logprob: -19.251325607299805
    10. '#' → logprob: -19.751325607299805

Token 230: ' extra' (ID: 5018)
  Prédit: 'extra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extra' → logprob: -0.16022463142871857
    2. ' extra' → logprob: -1.9102246761322021
    3. '(extra' → logprob: -15.035224914550781
    4. 'extr' → logprob: -16.28522491455078
    5. '.extra' → logprob: -17.28522491455078
    6. '_extra' → logprob: -17.28522491455078
    7. 'ex' → logprob: -18.66022491455078
    8. 'Extra' → logprob: -18.91022491455078
    9. 'extras' → logprob: -18.91022491455078
    10. ' ' → logprob: -19.03522491455078

Token 231: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -9.088346359931165e-07
    2. ' _' → logprob: -14.750000953674316
    3. '_' → logprob: -15.000000953674316
    4. '_literals' → logprob: -16.125
    5. '       ' → logprob: -18.375
    6. '           ' → logprob: -19.0
    7. 'l' → logprob: -19.25
    8. 'lit' → logprob: -19.5
    9. '_li' → logprob: -19.875
    10. '```' → logprob: -20.0

Token 232: 'iters' (ID: 195765)
  Prédit: 'iters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iters' → logprob: -0.0103230532258749
    2. '_l' → logprob: -4.8853230476379395
    3. 'it' → logprob: -7.2603230476379395
    4. 'iter' → logprob: -7.3853230476379395
    5. 'lit' → logprob: -7.5103230476379395
    6. '```' → logprob: -8.010323524475098
    7. '_' → logprob: -9.010323524475098
    8. '   ' → logprob: -9.260323524475098
    9. 'ters' → logprob: -10.010323524475098
    10. '       ' → logprob: -10.135323524475098

Token 233: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.8462740778923035
    2. '<|end|>' → logprob: -1.0962741374969482
    3. '
' → logprob: -1.4712741374969482
    4. '#' → logprob: -6.346273899078369
    5. '```' → logprob: -6.721273899078369
    6. '

' → logprob: -6.846273899078369
    7. 'def' → logprob: -6.971273899078369
    8. '<|end|>' → logprob: -7.096273899078369
    9. '\n' → logprob: -8.596274375915527
    10. 'x' → logprob: -8.721274375915527

Token 234: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.45458731055259705
    2. 'def' → logprob: -1.3295873403549194
    3. '#' → logprob: -2.70458722114563
    4. 'x' → logprob: -4.204587459564209
    5. 'company' → logprob: -4.454587459564209
    6. 'water' → logprob: -5.954587459564209
    7. 'if' → logprob: -6.329587459564209
    8. 'companies' → logprob: -6.829587459564209
    9. 'import' → logprob: -7.704587459564209
    10. 'usage' → logprob: -7.829587459564209

Token 235: ' Water' (ID: 12303)
  Prédit: ' Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Z' → logprob: -0.04349203035235405
    2. 'Z' → logprob: -3.168492078781128
    3. ' X' → logprob: -8.793492317199707
    4. ' ' → logprob: -9.168492317199707
    5. ' Water' → logprob: -9.793492317199707
    6. ' Y' → logprob: -10.230992317199707
    7. '	Z' → logprob: -10.793492317199707
    8. 'Water' → logprob: -10.980992317199707
    9. ' Fixed' → logprob: -11.168492317199707
    10. ' Flat' → logprob: -11.418492317199707

Token 236: 'Usage' (ID: 23029)
  Prédit: 'Company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Company' → logprob: -0.025566868484020233
    2. 'Service' → logprob: -5.400567054748535
    3. 'System' → logprob: -5.775567054748535
    4. 'Fee' → logprob: -5.900567054748535
    5. 'Usage' → logprob: -6.150567054748535
    6. 'Manager' → logprob: -6.150567054748535
    7. 'Consumer' → logprob: -6.400567054748535
    8. 'Bill' → logprob: -6.650567054748535
    9. 'Factory' → logprob: -7.150567054748535
    10. 'User' → logprob: -7.275567054748535

Token 237: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1666775643825531
    2. ':
' → logprob: -2.541677474975586
    3. 'Calculator' → logprob: -3.291677474975586
    4. 'Manager' → logprob: -4.166677474975586
    5. 'Tracker' → logprob: -4.541677474975586
    6. 'Analyzer' → logprob: -5.666677474975586
    7. 'Estimator' → logprob: -5.666677474975586
    8. 'Report' → logprob: -7.166677474975586
    9. '(' → logprob: -7.291677474975586
    10. 'Summary' → logprob: -7.541677474975586

Token 238: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011329513508826494
    2. ':
' → logprob: -7.751132965087891
    3. 'def' → logprob: -8.12613296508789
    4. ':' → logprob: -8.25113296508789
    5. ' def' → logprob: -9.12613296508789
    6. '(' → logprob: -11.00113296508789
    7. '):
' → logprob: -12.25113296508789
    8. ',' → logprob: -12.50113296508789
    9. '    
' → logprob: -13.25113296508789
    10. ':def' → logprob: -13.75113296508789

Token 239: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.38789987564086914
    2. 'def' (adapté à ' def') → logprob: -1.1378998756408691
    3. '   ' → logprob: -6.887899875640869
    4. 'class' → logprob: -12.137899398803711
    5. ' ' → logprob: -14.012899398803711
    6. '	def' → logprob: -14.637899398803711
    7. 'de' → logprob: -14.637899398803711
    8. '    ' → logprob: -15.262899398803711
    9. ':def' → logprob: -15.387899398803711
    10. '```' → logprob: -15.762899398803711

Token 240: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.005535992793738842
    2. 'init' → logprob: -5.505536079406738
    3. '__' → logprob: -6.880536079406738
    4. '_init' → logprob: -8.005536079406738
    5. ' def' → logprob: -9.755536079406738
    6. ' init' → logprob: -10.755536079406738
    7. 'def' → logprob: -11.505536079406738
    8. ' ' → logprob: -13.505536079406738
    9. 'calculate' → logprob: -13.880536079406738
    10. ' calculate' → logprob: -14.005536079406738

Token 241: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.339278580620885e-06
    2. ' init' → logprob: -13.625001907348633
    3. '   ' → logprob: -14.125001907348633
    4. '_init' → logprob: -15.875001907348633
    5. '	init' → logprob: -16.125001907348633
    6. 'def' → logprob: -16.375001907348633
    7. '  ' → logprob: -17.625001907348633
    8. '```' → logprob: -18.000001907348633
    9. 'ini' → logprob: -18.625001907348633
    10. ' ' → logprob: -18.625001907348633

Token 242: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -7.541112427134067e-05
    2. '__' → logprob: -9.625075340270996
    3. '__(
' → logprob: -11.750075340270996
    4. '(self' → logprob: -13.750075340270996
    5. '_(' → logprob: -15.125075340270996
    6. '__((' → logprob: -16.375076293945312
    7. '__('' → logprob: -18.000076293945312
    8. '(' → logprob: -18.500076293945312
    9. '___' → logprob: -18.875076293945312
    10. '__("' → logprob: -18.875076293945312

Token 243: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00031985383247956634
    2. ' self' → logprob: -8.125319480895996
    3. ',' → logprob: -11.250319480895996
    4. '       ' → logprob: -12.250319480895996
    5. '   ' → logprob: -12.750319480895996
    6. '
' → logprob: -13.500319480895996
    7. '(self' → logprob: -14.000319480895996
    8. ',self' → logprob: -14.875319480895996
    9. '	self' → logprob: -15.500319480895996
    10. '__(' → logprob: -15.500319480895996

Token 244: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7383371591567993
    2. 'self' → logprob: -0.8633371591567993
    3. '(self' → logprob: -2.6133370399475098
    4. '__(' → logprob: -3.7383370399475098
    5. ' self' → logprob: -6.23833703994751
    6. ',self' → logprob: -7.98833703994751
    7. '__,' → logprob: -7.98833703994751
    8. ' ,' → logprob: -8.613337516784668
    9. '   ' → logprob: -9.113337516784668
    10. ' (' → logprob: -9.363337516784668

Token 245: ' usage' (ID: 16622)
  Prédit: 'company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'company' → logprob: -0.11067568510770798
    2. ' company' → logprob: -2.485675573348999
    3. 'usage' → logprob: -4.735675811767578
    4. 'water' → logprob: -4.860675811767578
    5. ' water' → logprob: -5.735675811767578
    6. ' usage' → logprob: -6.735675811767578
    7. 'user' → logprob: -9.235675811767578
    8. '   ' → logprob: -9.485675811767578
    9. 'customer' → logprob: -9.735675811767578
    10. ' ' → logprob: -9.985675811767578

Token 246: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.0325924449716695e-05
    2. '_amount' → logprob: -12.87501049041748
    3. '```' → logprob: -13.50001049041748
    4. ' _' → logprob: -14.00001049041748
    5. '_in' → logprob: -14.25001049041748
    6. ':' → logprob: -14.37501049041748
    7. '_' → logprob: -14.50001049041748
    8. ' ' → logprob: -14.87501049041748
    9. '_list' → logprob: -14.87501049041748
    10. '_ml' → logprob: -15.25001049041748

Token 247: 'iters' (ID: 195765)
  Prédit: 'iters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iters' → logprob: -0.000608198344707489
    2. '_l' → logprob: -8.375608444213867
    3. 'iter' → logprob: -8.875608444213867
    4. '_' → logprob: -9.375608444213867
    5. 'it' → logprob: -10.125608444213867
    6. '   ' → logprob: -10.250608444213867
    7. '_iters' → logprob: -10.375608444213867
    8. '```' → logprob: -11.375608444213867
    9. '_m' → logprob: -11.875608444213867
    10. 'itters' → logprob: -12.750608444213867

Token 248: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015484257601201534
    2. '):' → logprob: -7.0015482902526855
    3. ':int' → logprob: -7.5015482902526855
    4. ',' → logprob: -9.626548767089844
    5. ')' → logprob: -11.501548767089844
    6. ' :' → logprob: -12.251548767089844
    7. '=' → logprob: -13.501548767089844
    8. '):
' → logprob: -14.001548767089844
    9. ' ):' → logprob: -14.126548767089844
    10. ' ,' → logprob: -15.626548767089844

Token 249: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4740790128707886
    2. 'int' → logprob: -0.9740790128707886
    3. ':int' → logprob: -14.849079132080078
    4. '=int' → logprob: -14.974079132080078
    5. '   ' → logprob: -15.099079132080078
    6. ',int' → logprob: -15.099079132080078
    7. ' ' → logprob: -15.474079132080078
    8. '0' → logprob: -15.724079132080078
    9. ')' → logprob: -15.849079132080078
    10. '	int' → logprob: -16.099079132080078

Token 250: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10820983350276947
    2. ',' → logprob: -2.3582098484039307
    3. '):
' → logprob: -4.858209609985352
    4. ')' → logprob: -9.608209609985352
    5. ' ):' → logprob: -9.983209609985352
    6. '   ' → logprob: -10.483209609985352
    7. '       ' → logprob: -10.483209609985352
    8. ' ,' → logprob: -10.983209609985352
    9. '):
' → logprob: -11.483209609985352
    10. ':' → logprob: -11.983209609985352

Token 251: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023393364972434938
    2. ' self' → logprob: -8.50023365020752
    3. 'self' → logprob: -11.12523365020752
    4. '   ' → logprob: -11.50023365020752
    5. '      ' → logprob: -13.75023365020752
    6. ' def' → logprob: -13.87523365020752
    7. ' company' → logprob: -14.12523365020752
    8. ',' → logprob: -14.37523365020752
    9. '     ' → logprob: -14.75023365020752
    10. '        ' → logprob: -15.12523365020752

Token 252: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.06306803226470947
    2. ' self' → logprob: -2.81306791305542
    3. '       ' → logprob: -6.81306791305542
    4. '	self' → logprob: -15.563068389892578
    5. '   ' → logprob: -16.313068389892578
    6. ' ' → logprob: -16.563068389892578
    7. '_self' → logprob: -19.063068389892578
    8. '        ' → logprob: -19.188068389892578
    9. '(self' → logprob: -19.188068389892578
    10. '```' → logprob: -19.438068389892578

Token 253: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0009189624106511474
    2. ' .' → logprob: -7.250918865203857
    3. '   ' → logprob: -9.750919342041016
    4. ' =' → logprob: -10.000919342041016
    5. 'usage' → logprob: -10.375919342041016
    6. ' ' → logprob: -10.625919342041016
    7. '._' → logprob: -11.250919342041016
    8. '.us' → logprob: -11.625919342041016
    9. '       ' → logprob: -11.875919342041016
    10. '=' → logprob: -12.125919342041016

Token 254: 'usage' (ID: 25871)
  Prédit: 'usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -4.4418171455617994e-05
    2. '_usage' → logprob: -10.125044822692871
    3. ' usage' → logprob: -12.625044822692871
    4. 'use' → logprob: -15.000044822692871
    5. 'water' → logprob: -16.125043869018555
    6. ' ' → logprob: -16.250043869018555
    7. '   ' → logprob: -16.500043869018555
    8. 'user' → logprob: -16.500043869018555
    9. 'us' → logprob: -16.750043869018555
    10. 'Usage' → logprob: -16.875043869018555

Token 255: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -4.787507714354433e-05
    2. '_literals' → logprob: -10.62504768371582
    3. ' _' → logprob: -11.12504768371582
    4. '_' → logprob: -11.87504768371582
    5. '_li' → logprob: -14.87504768371582
    6. '_m' → logprob: -15.62504768371582
    7. '_letters' → logprob: -16.00004768371582
    8. '_n' → logprob: -16.12504768371582
    9. '_L' → logprob: -16.25004768371582
    10. '_inches' → logprob: -16.37504768371582

Token 256: 'iters' (ID: 195765)
  Prédit: 'iters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iters' → logprob: -3.750436007976532e-05
    2. 'it' → logprob: -11.75003719329834
    3. 'ters' → logprob: -11.87503719329834
    4. '```' → logprob: -12.00003719329834
    5. '   ' → logprob: -12.37503719329834
    6. '_iters' → logprob: -12.87503719329834
    7. 'iter' → logprob: -13.25003719329834
    8. 'itors' → logprob: -13.62503719329834
    9. 'itters' → logprob: -13.75003719329834
    10. 'eters' → logprob: -14.37503719329834

Token 257: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740850329399109
    2. ' =' → logprob: -0.9740850329399109
    3. ' ' → logprob: -11.849084854125977
    4. '   ' → logprob: -15.099084854125977
    5. '=int' → logprob: -15.349084854125977
    6. '_' → logprob: -15.974084854125977
    7. ')' → logprob: -16.349084854125977
    8. '    ' → logprob: -16.599084854125977
    9. '=self' → logprob: -16.974084854125977
    10. '       ' → logprob: -17.224084854125977

Token 258: ' usage' (ID: 16622)
  Prédit: ' usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' usage' → logprob: -0.018150178715586662
    2. 'usage' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.893150329589844
    4. '   ' → logprob: -16.893150329589844
    5. '_usage' → logprob: -17.018150329589844
    6. ' use' → logprob: -17.768150329589844
    7. ' ' → logprob: -18.393150329589844
    8. 'Usage' → logprob: -18.518150329589844
    9. '  ' → logprob: -19.393150329589844
    10. '       ' → logprob: -19.393150329589844

Token 259: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -2.3080716346157715e-05
    2. '_literals' → logprob: -11.250022888183594
    3. '_' → logprob: -11.625022888183594
    4. ' _' → logprob: -14.375022888183594
    5. '_li' → logprob: -16.125022888183594
    6. 'int' → logprob: -16.500022888183594
    7. '```' → logprob: -16.500022888183594
    8. '_letters' → logprob: -17.250022888183594
    9. '_t' → logprob: -17.375022888183594
    10. 'l' → logprob: -17.750022888183594

Token 260: 'iters' (ID: 195765)
  Prédit: 'iters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iters' → logprob: -0.0003065030323341489
    2. '_iters' → logprob: -9.125306129455566
    3. 'it' → logprob: -9.500306129455566
    4. '_' → logprob: -10.375306129455566
    5. '_l' → logprob: -10.500306129455566
    6. 'ters' → logprob: -11.000306129455566
    7. '```' → logprob: -11.375306129455566
    8. 'iter' → logprob: -11.500306129455566
    9. '   ' → logprob: -11.750306129455566
    10. '_it' → logprob: -12.500306129455566

Token 261: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1855957806110382
    2. '   ' → logprob: -1.8105957508087158
    3. '<|end|>' → logprob: -5.685595989227295
    4. 'def' → logprob: -6.435595989227295
    5. '    
' → logprob: -7.435595989227295
    6. ' def' → logprob: -9.310595512390137
    7. '

' → logprob: -9.435595512390137
    8. '<|end|>' → logprob: -10.310595512390137
    9. '
' → logprob: -11.810595512390137
    10. ' 
' → logprob: -11.935595512390137

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015309582464396954
    2. 'def' → logprob: -4.390309810638428
    3. ' def' → logprob: -5.890309810638428
    4. '    
' → logprob: -11.14030933380127
    5. '<|end|>' → logprob: -11.89030933380127
    6. '
' → logprob: -12.26530933380127
    7. '@property' → logprob: -14.01530933380127
    8. '	def' → logprob: -14.26530933380127
    9. '        
' → logprob: -14.51530933380127
    10. '    ' → logprob: -14.64030933380127

Token 263: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007137430948205292
    2. '@property' → logprob: -7.50071382522583
    3. ' def' → logprob: -8.750713348388672
    4. '   ' → logprob: -13.000713348388672
    5. 'de' → logprob: -16.375713348388672
    6. ' ' → logprob: -16.625713348388672
    7. '@' (adapté à ' @') → logprob: -17.375713348388672
    8. 'class' → logprob: -18.000713348388672
    9. '	def' → logprob: -18.750713348388672
    10. 'd' → logprob: -19.500713348388672

Token 264: 'property' (ID: 8813)
  Prédit: 'property'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -9.13388703338569e-06
    2. 'proper' → logprob: -12.000009536743164
    3. 'staticmethod' → logprob: -13.125009536743164
    4. 'pro' → logprob: -14.500009536743164
    5. 'classmethod' → logprob: -15.250009536743164
    6. ' property' → logprob: -16.375009536743164
    7. 'dat' → logprob: -16.375009536743164
    8. 'prop' → logprob: -17.250009536743164
    9. '@property' → logprob: -17.375009536743164
    10. 'p' → logprob: -18.875009536743164

Token 265: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02715419791638851
    2. '
' → logprob: -3.6521542072296143
    3. '   ' → logprob: -7.652153968811035
    4. ' def' → logprob: -8.152153968811035
    5. '	def' → logprob: -10.152153968811035
    6. '_def' → logprob: -10.152153968811035
    7. '    
' → logprob: -12.527153968811035
    8. '\' → logprob: -12.652153968811035
    9. '
' → logprob: -13.027153968811035
    10. '_' → logprob: -14.152153968811035

Token 266: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003147535026073456
    2. '   ' → logprob: -6.503147602081299
    3. ' def' → logprob: -6.878147602081299
    4. '
' → logprob: -7.753147602081299
    5. '	def' → logprob: -9.50314712524414
    6. '_def' → logprob: -9.50314712524414
    7. '_' → logprob: -10.62814712524414
    8. '    
' → logprob: -12.62814712524414
    9. '_usage' → logprob: -13.25314712524414
    10. ' ' → logprob: -13.87814712524414

Token 267: ' def' (ID: 1056)
  Prédit: '_usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_usage' → logprob: -0.42688706517219543
    2. ' usage' → logprob: -2.176887035369873
    3. 'usage' → logprob: -2.426887035369873
    4. 'def' (adapté à ' def') → logprob: -2.426887035369873
    5. '_' → logprob: -3.176887035369873
    6. ' def' → logprob: -4.676887035369873
    7. ' _' → logprob: -5.176887035369873
    8. '   ' → logprob: -8.051887512207031
    9. 'Usage' → logprob: -9.176887512207031
    10. '_def' → logprob: -9.426887512207031

Token 268: ' usage' (ID: 16622)
  Prédit: ' usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' usage' → logprob: -0.06691806763410568
    2. 'usage' → logprob: -2.941918134689331
    3. '_usage' → logprob: -4.816917896270752
    4. '_' → logprob: -6.191917896270752
    5. ' _' → logprob: -6.441917896270752
    6. ' ' → logprob: -8.81691837310791
    7. ' value' → logprob: -10.69191837310791
    8. ' water' → logprob: -11.06691837310791
    9. '   ' → logprob: -11.94191837310791
    10. '  ' → logprob: -12.19191837310791

Token 269: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -4.394135612528771e-05
    2. '_literals' → logprob: -10.375043869018555
    3. ' _' → logprob: -12.875043869018555
    4. '_' → logprob: -13.125043869018555
    5. '_li' → logprob: -13.625043869018555
    6. '```' → logprob: -13.750043869018555
    7. '_usage' → logprob: -13.875043869018555
    8. '_literal' → logprob: -14.125043869018555
    9. '_amount' → logprob: -14.125043869018555
    10. '(_' → logprob: -15.000043869018555

Token 270: 'iters' (ID: 195765)
  Prédit: 'iters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iters' → logprob: -0.00030841029365547
    2. '_l' → logprob: -9.1253080368042
    3. 'it' → logprob: -9.3753080368042
    4. '_' → logprob: -9.3753080368042
    5. '_iters' → logprob: -11.6253080368042
    6. 'itters' → logprob: -12.1253080368042
    7. '_it' → logprob: -12.6253080368042
    8. '```' → logprob: -12.6253080368042
    9. ' _' → logprob: -13.3753080368042
    10. 'iter' → logprob: -13.3753080368042

Token 271: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.012519658543169498
    2. 'self' → logprob: -5.012519836425781
    3. '(' → logprob: -5.262519836425781
    4. '<|end|>' → logprob: -7.887519836425781
    5. ')' → logprob: -9.137519836425781
    6. '()' → logprob: -9.512519836425781
    7. ' self' → logprob: -10.887519836425781
    8. '<|end|>' → logprob: -12.012519836425781
    9. '   ' → logprob: -12.387519836425781
    10. '```' → logprob: -12.637519836425781

Token 272: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10726141184568405
    2. '):' → logprob: -2.3572614192962646
    3. '):
' → logprob: -4.9822611808776855
    4. ' )' → logprob: -9.982261657714844
    5. ':' → logprob: -10.232261657714844
    6. '):

' → logprob: -10.482261657714844
    7. ' ):' → logprob: -11.232261657714844
    8. ')return' → logprob: -11.232261657714844
    9. '<|end|>' → logprob: -12.107261657714844
    10. ' ' → logprob: -12.232261657714844

Token 273: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5517314672470093
    2. '->' → logprob: -1.3017314672470093
    3. ')' → logprob: -3.301731586456299
    4. '       ' → logprob: -3.801731586456299
    5. ':return' → logprob: -4.051731586456299
    6. ' ->' → logprob: -4.176731586456299
    7. '(self' → logprob: -4.301731586456299
    8. '   ' → logprob: -4.426731586456299
    9. ':
' → logprob: -4.551731586456299
    10. '<|end|>' → logprob: -5.301731586456299

Token 274: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.25195297598838806
    2. 'int' → logprob: -1.5019530057907104
    3. ' self' → logprob: -10.751953125
    4. 'self' → logprob: -13.251953125
    5. ':int' → logprob: -15.001953125
    6. '   ' → logprob: -16.001953125
    7. '    ' → logprob: -16.626953125
    8. ' ' → logprob: -16.626953125
    9. '(int' → logprob: -16.876953125
    10. '	int' → logprob: -17.126953125

Token 275: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02650243416428566
    2. ':
' → logprob: -3.6515023708343506
    3. '):
' → logprob: -9.65150260925293
    4. ':return' → logprob: -10.15150260925293
    5. '):' → logprob: -10.40150260925293
    6. '():
' → logprob: -10.52650260925293
    7. '<|end|>' → logprob: -10.90150260925293
    8. '():' → logprob: -11.15150260925293
    9. '   ' → logprob: -13.15150260925293
    10. '       ' → logprob: -13.40150260925293

Token 276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034452839754521847
    2. 'return' → logprob: -6.253445148468018
    3. ' return' → logprob: -6.503445148468018
    4. '   ' → logprob: -11.253445625305176
    5. '
' → logprob: -14.003445625305176
    6. '```' → logprob: -14.003445625305176
    7. '        
' → logprob: -14.128445625305176
    8. 'self' → logprob: -14.878445625305176
    9. '	return' → logprob: -15.003445625305176
    10. '{return' → logprob: -15.128445625305176

Token 277: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.020785361528396606
    2. ' return' → logprob: -4.270785331726074
    3. '       ' → logprob: -5.020785331726074
    4. '   ' → logprob: -14.895785331726074
    5. '	return' → logprob: -14.895785331726074
    6. '{return' → logprob: -17.39578628540039
    7. 'self' → logprob: -18.27078628540039
    8. ':return' → logprob: -18.39578628540039
    9. ' ' → logprob: -18.64578628540039
    10. ' ' → logprob: -19.27078628540039

Token 278: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5759395360946655
    2. 'self' → logprob: -0.8259395360946655
    3. ' ' → logprob: -17.075939178466797
    4. '	self' → logprob: -17.575939178466797
    5. '       ' → logprob: -17.825939178466797
    6. '_self' → logprob: -18.950939178466797
    7. '(self' → logprob: -19.325939178466797
    8. '   ' → logprob: -20.325939178466797
    9. ' ' → logprob: -20.825939178466797
    10. ' _' → logprob: -21.200939178466797

Token 279: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.8624639324116288e-06
    2. '.' → logprob: -13.375001907348633
    3. ' .' → logprob: -15.375001907348633
    4. '_' → logprob: -17.375001907348633
    5. '.__' → logprob: -17.375001907348633
    6. '   ' → logprob: -17.625001907348633
    7. '       ' → logprob: -18.500001907348633
    8. ')._' → logprob: -18.875001907348633
    9. 'self' → logprob: -19.875001907348633
    10. '->_' → logprob: -20.125001907348633

Token 280: 'usage' (ID: 25871)
  Prédit: 'usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.0002036595979006961
    2. '_usage' → logprob: -8.500204086303711
    3. 'use' → logprob: -16.62520408630371
    4. ' usage' → logprob: -17.00020408630371
    5. '_' → logprob: -17.50020408630371
    6. 'us' → logprob: -18.37520408630371
    7. 'Usage' → logprob: -19.25020408630371
    8. '_us' → logprob: -19.62520408630371
    9. 'using' → logprob: -19.87520408630371
    10. '_USAGE' → logprob: -20.12520408630371

Token 281: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -2.696889623621246e-06
    2. '_literals' → logprob: -13.12500286102295
    3. ' _' → logprob: -15.00000286102295
    4. '_' → logprob: -15.00000286102295
    5. '_li' → logprob: -17.250001907348633
    6. '_t' → logprob: -17.750001907348633
    7. '_letters' → logprob: -18.500001907348633
    8. '_k' → logprob: -18.875001907348633
    9. '```' → logprob: -19.375001907348633
    10. '_f' → logprob: -19.500001907348633

Token 282: 'iters' (ID: 195765)
  Prédit: 'iters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iters' → logprob: -6.396757089532912e-05
    2. 'it' → logprob: -10.2500638961792
    3. 'ters' → logprob: -11.5000638961792
    4. '_' → logprob: -12.0000638961792
    5. 'iter' → logprob: -12.7500638961792
    6. '_l' → logprob: -13.0000638961792
    7. '_iters' → logprob: -13.6250638961792
    8. 'itors' → logprob: -13.7500638961792
    9. '```' → logprob: -14.1250638961792
    10. 'lit' → logprob: -14.5000638961792

Token 283: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.797515869140625
    2. '   ' → logprob: -0.922515869140625
    3. '<|end|>' → logprob: -2.297515869140625
    4. 'def' → logprob: -3.172515869140625
    5. '    
' → logprob: -5.047515869140625
    6. '<|end|>' → logprob: -6.922515869140625
    7. ' def' → logprob: -7.047515869140625
    8. 'class' → logprob: -7.922515869140625
    9. '	def' → logprob: -8.047515869140625
    10. '

' → logprob: -8.547515869140625

Token 284: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00012833021173719317
    2. 'def' → logprob: -9.625128746032715
    3. '<|end|>' → logprob: -10.625128746032715
    4. '
' → logprob: -10.875128746032715
    5. '   ' → logprob: -11.500128746032715
    6. ' class' → logprob: -12.250128746032715
    7. '```' → logprob: -13.250128746032715
    8. ' ' → logprob: -14.750128746032715
    9. '"class' → logprob: -15.000128746032715
    10. '    
' → logprob: -15.125128746032715

Token 285: ' Water' (ID: 12303)
  Prédit: 'Water'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Water' → logprob: -0.31965741515159607
    2. ' Water' → logprob: -2.694657325744629
    3. 'Billing' → logprob: -2.694657325744629
    4. 'Bill' → logprob: -2.944657325744629
    5. 'Customer' → logprob: -3.444657325744629
    6. 'Fee' → logprob: -4.194657325744629
    7. ' Billing' → logprob: -4.694657325744629
    8. 'User' → logprob: -4.694657325744629
    9. ' Bill' → logprob: -5.194657325744629
    10. 'Usage' → logprob: -5.444657325744629

Token 286: 'Rate' (ID: 11613)
  Prédit: 'Company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Company' → logprob: -0.0052788229659199715
    2. 'Bill' → logprob: -5.630278587341309
    3. 'Fee' → logprob: -6.630278587341309
    4. 'Billing' → logprob: -9.005278587341309
    5. 'Service' → logprob: -9.880278587341309
    6. 'Payment' → logprob: -10.380278587341309
    7. 'Customer' → logprob: -10.880278587341309
    8. 'Invoice' → logprob: -10.880278587341309
    9. 'Usage' → logprob: -11.005278587341309
    10. 'User' → logprob: -11.130278587341309

Token 287: 'Selector' (ID: 8011)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012472102418541908
    2. 'Calculator' → logprob: -5.262472152709961
    3. ':
' → logprob: -6.012472152709961
    4. '(' → logprob: -6.387472152709961
    5. 'Policy' → logprob: -7.637472152709961
    6. 'Company' → logprob: -7.637472152709961
    7. 'Provider' → logprob: -7.637472152709961
    8. 'Manager' → logprob: -8.137472152709961
    9. 'Plan' → logprob: -8.137472152709961
    10. '():' → logprob: -8.137472152709961

Token 288: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017272992990911007
    2. ':
' → logprob: -6.376727104187012
    3. ' :' → logprob: -11.001727104187012
    4. ':def' → logprob: -13.126727104187012
    5. '(' → logprob: -13.376727104187012
    6. '(W' → logprob: -13.751727104187012
    7. '):' → logprob: -13.876727104187012
    8. ':

' → logprob: -14.001727104187012
    9. '   ' → logprob: -14.126727104187012
    10. ',' → logprob: -14.751727104187012

Token 289: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20320263504981995
    2. ' def' → logprob: -1.7032026052474976
    3. 'def' → logprob: -6.328202724456787
    4. 'class' → logprob: -13.578202247619629
    5. '	def' → logprob: -14.578202247619629
    6. '```' → logprob: -14.703202247619629
    7. ' class' → logprob: -16.078203201293945
    8. '    ' → logprob: -16.328203201293945
    9. '    
' → logprob: -17.453203201293945
    10. ',' → logprob: -17.453203201293945

Token 290: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.315004825592041
    2. ' def' → logprob: -1.315004825592041
    3. '@' → logprob: -7.065004825592041
    4. '   ' → logprob: -7.190004825592041
    5. ' @' → logprob: -8.940004348754883
    6. ' ' → logprob: -14.065004348754883
    7. 'class' → logprob: -14.440004348754883
    8. 'de' → logprob: -15.815004348754883
    9. '	def' → logprob: -15.940004348754883
    10. '@property' → logprob: -16.315004348754883

Token 291: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.2833957076072693
    2. ' __' → logprob: -1.408395767211914
    3. 'def' → logprob: -6.283395767211914
    4. ' ' → logprob: -9.283395767211914
    5. ' define' → logprob: -9.658395767211914
    6. ' select' → logprob: -9.783395767211914
    7. ' _' → logprob: -10.033395767211914
    8. '__' → logprob: -10.783395767211914
    9. '_' → logprob: -11.033395767211914
    10. ' static' → logprob: -11.158395767211914

Token 292: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.214019307051785e-05
    2. 'new' → logprob: -10.375032424926758
    3. 'ini' → logprob: -15.500032424926758
    4. 'call' → logprob: -15.750032424926758
    5. 'int' → logprob: -16.000032424926758
    6. 'in' → logprob: -16.000032424926758
    7. 'def' → logprob: -17.250032424926758
    8. 'nit' → logprob: -17.250032424926758
    9. 'inite' → logprob: -17.375032424926758
    10. 'select' → logprob: -17.500032424926758

Token 293: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -6.861651490908116e-05
    2. '__(
' → logprob: -10.250068664550781
    3. '__' → logprob: -10.875068664550781
    4. '(self' → logprob: -11.250068664550781
    5. '_(' → logprob: -14.375068664550781
    6. '__((' → logprob: -14.750068664550781
    7. '(' → logprob: -15.500068664550781
    8. '__('' → logprob: -17.00006866455078
    9. 'self' → logprob: -17.12506866455078
    10. '__("' → logprob: -17.50006866455078

Token 294: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.3795937522663735e-05
    2. ' self' → logprob: -10.87502384185791
    3. '       ' → logprob: -13.37502384185791
    4. '):
' → logprob: -13.75002384185791
    5. '
' → logprob: -14.00002384185791
    6. '   ' → logprob: -14.37502384185791
    7. ')' → logprob: -15.12502384185791
    8. '(self' → logprob: -15.62502384185791
    9. ',' → logprob: -15.75002384185791
    10. ',self' → logprob: -17.625022888183594

Token 295: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06429139524698257
    2. '__(' → logprob: -2.939291477203369
    3. ' self' → logprob: -5.564291477203369
    4. ',' → logprob: -5.689291477203369
    5. '__' → logprob: -7.064291477203369
    6. '(self' → logprob: -7.439291477203369
    7. '   ' → logprob: -7.939291477203369
    8. '__,' → logprob: -8.689291000366211
    9. '       ' → logprob: -10.189291000366211
    10. '_' → logprob: -10.314291000366211

Token 296: ' companies' (ID: 6005)
  Prédit: ' company'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' company' → logprob: -1.09806489944458
    2. 'company' → logprob: -1.72306489944458
    3. ' water' → logprob: -1.97306489944458
    4. ' companies' → logprob: -2.22306489944458
    5. 'companies' → logprob: -2.34806489944458
    6. ' usage' → logprob: -2.97306489944458
    7. 'water' → logprob: -2.97306489944458
    8. 'usage' → logprob: -3.34806489944458
    9. 'rate' → logprob: -6.47306489944458
    10. ' rate' → logprob: -6.72306489944458

Token 297: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5736860632896423
    2. ':' → logprob: -0.9486860632896423
    3. '):
' → logprob: -3.573686122894287
    4. ':list' → logprob: -3.948686122894287
    5. ')' → logprob: -6.573686122894287
    6. ',' → logprob: -8.323685646057129
    7. ' ):' → logprob: -8.948685646057129
    8. ' :' → logprob: -9.323685646057129
    9. '[]):' → logprob: -10.823685646057129
    10. '=None' → logprob: -11.323685646057129

Token 298: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.22717545926570892
    2. ' list' → logprob: -1.6021754741668701
    3. 'List' → logprob: -7.102175235748291
    4. '[list' → logprob: -7.227175235748291
    5. '   ' → logprob: -9.47717571258545
    6. 'dict' → logprob: -9.60217571258545
    7. ' ' → logprob: -10.97717571258545
    8. ' dict' → logprob: -11.47717571258545
    9. '[' → logprob: -11.85217571258545
    10. ')' → logprob: -11.85217571258545

Token 299: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.015018060803413391
    2. '):' → logprob: -4.265017986297607
    3. '):
' → logprob: -7.390017986297607
    4. ')' → logprob: -8.515018463134766
    5. '[int' → logprob: -10.640018463134766
    6. ' [' → logprob: -13.015018463134766
    7. ':' → logprob: -13.140018463134766
    8. '):

' → logprob: -13.265018463134766
    9. ' ):' → logprob: -13.890018463134766
    10. '[str' → logprob: -14.015018463134766

Token 300: 'Water' (ID: 27874)
  Prédit: 'Water'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Water' → logprob: -1.6240566083070007e-06
    2. ' Water' → logprob: -13.500001907348633
    3. '   ' → logprob: -16.250001907348633
    4. 'type' → logprob: -16.500001907348633
    5. '[' → logprob: -17.625001907348633
    6. 'W' → logprob: -18.500001907348633
    7. 'Wat' → logprob: -19.500001907348633
    8. '       ' → logprob: -19.500001907348633
    9. ' ' → logprob: -19.625001907348633
    10. 'Type' → logprob: -19.875001907348633

Token 301: 'Company' (ID: 15545)
  Prédit: 'Company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Company' → logprob: 0.0
    2. '_company' → logprob: -19.25
    3. ' Company' → logprob: -20.625
    4. 'Companies' → logprob: -22.75
    5. 'company' → logprob: -22.875
    6. 'Water' → logprob: -24.0
    7. '.Company' → logprob: -24.75
    8. '```' → logprob: -25.0
    9. 'Компания' → logprob: -25.125
    10. '-company' → logprob: -26.0

Token 302: '],' (ID: 2155)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.05772526562213898
    2. '])' → logprob: -3.557725191116333
    3. ']):
' → logprob: -4.182725429534912
    4. ']' → logprob: -4.432725429534912
    5. '],' → logprob: -7.807725429534912
    6. ']:' → logprob: -11.432724952697754
    7. ')' → logprob: -11.557724952697754
    8. '[' → logprob: -11.682724952697754
    9. ']]' → logprob: -12.432724952697754
    10. '):' → logprob: -12.682724952697754

Token 303: ' usage' (ID: 16622)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.5059236288070679
    2. ' usage' → logprob: -1.1309236288070679
    3. ' water' → logprob: -3.1309237480163574
    4. 'water' → logprob: -4.255923748016357
    5. 'default' → logprob: -6.005923748016357
    6. ' default' → logprob: -6.005923748016357
    7. ' ' → logprob: -6.380923748016357
    8. ' current' → logprob: -6.505923748016357
    9. '   ' → logprob: -6.755923748016357
    10. ' company' → logprob: -7.130923748016357

Token 304: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004847684409469366
    2. '_l' → logprob: -5.379847526550293
    3. '_usage' → logprob: -8.754847526550293
    4. ' :' → logprob: -10.254847526550293
    5. '_:' → logprob: -11.754847526550293
    6. 'usage' → logprob: -11.879847526550293
    7. 's' → logprob: -12.129847526550293
    8. '_water' → logprob: -12.504847526550293
    9. '   ' → logprob: -12.879847526550293
    10. ' ' → logprob: -13.629847526550293

Token 305: ' Water' (ID: 12303)
  Prédit: 'Water'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Water' → logprob: -0.16022737324237823
    2. ' Water' → logprob: -1.9102274179458618
    3. 'int' → logprob: -13.28522777557373
    4. ' ' → logprob: -14.41022777557373
    5. ' int' → logprob: -14.66022777557373
    6. '   ' → logprob: -15.41022777557373
    7. '  ' → logprob: -15.78522777557373
    8. ' ' → logprob: -16.285226821899414
    9. ' water' → logprob: -16.910226821899414
    10. '    ' → logprob: -18.535226821899414

Token 306: 'Usage' (ID: 23029)
  Prédit: 'Usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Usage' → logprob: -2.2200749754119897e-06
    2. '_usage' → logprob: -14.125001907348633
    3. 'usage' → logprob: -14.375001907348633
    4. '_USAGE' → logprob: -15.000001907348633
    5. ' Usage' → logprob: -15.125001907348633
    6. ' usage' → logprob: -16.250001907348633
    7. '   ' → logprob: -17.625001907348633
    8. 'Use' → logprob: -17.625001907348633
    9. '-' → logprob: -18.000001907348633
    10. '```' → logprob: -18.750001907348633

Token 307: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0090725626796484
    2. '):
' → logprob: -4.759072780609131
    3. ')' → logprob: -7.759072780609131
    4. ':' → logprob: -10.759072303771973
    5. ' ):' → logprob: -12.259072303771973
    6. '   ' → logprob: -13.134072303771973
    7. ',' → logprob: -13.634072303771973
    8. '):
' → logprob: -13.759072303771973
    9. ' ' → logprob: -15.009072303771973
    10. '):

' → logprob: -15.384072303771973

Token 308: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015346218831837177
    2. ':' → logprob: -4.265346050262451
    3. ':
' → logprob: -7.015346050262451
    4. '   ' → logprob: -9.26534652709961
    5. '):
' → logprob: -10.14034652709961
    6. 'self' → logprob: -10.14034652709961
    7. ',' → logprob: -10.14034652709961
    8. '):' → logprob: -11.14034652709961
    9. ' self' → logprob: -11.76534652709961
    10. '(self' → logprob: -11.89034652709961

Token 309: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.052331116050481796
    2. ' self' → logprob: -3.5523312091827393
    3. '       ' → logprob: -3.8023312091827393
    4. '	self' → logprob: -12.30233097076416
    5. '   ' → logprob: -12.67733097076416
    6. ' ' → logprob: -14.17733097076416
    7. '     ' → logprob: -15.80233097076416
    8. '      ' → logprob: -15.92733097076416
    9. '(self' → logprob: -17.177331924438477
    10. '	' → logprob: -17.427331924438477

Token 310: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.018732644617557526
    2. '.com' → logprob: -4.01873254776001
    3. '.' → logprob: -8.393733024597168
    4. '   ' → logprob: -8.643733024597168
    5. '_comp' → logprob: -9.643733024597168
    6. ' .' → logprob: -9.768733024597168
    7. '.comp' → logprob: -11.143733024597168
    8. '       ' → logprob: -11.268733024597168
    9. '_com' → logprob: -11.268733024597168
    10. '_' → logprob: -12.643733024597168

Token 311: 'companies' (ID: 126324)
  Prédit: 'companies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'companies' → logprob: -4.320199877838604e-07
    2. ' companies' → logprob: -15.75
    3. 'company' → logprob: -15.875
    4. 'usage' → logprob: -17.125
    5. 'compan' → logprob: -17.5
    6. 'comp' → logprob: -17.5
    7. 'com' → logprob: -18.25
    8. 'selected' → logprob: -18.875
    9. 'c' → logprob: -19.0
    10. 'compet' → logprob: -19.25

Token 312: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048596687614917755
    2. '=' → logprob: -3.0485966205596924
    3. ' ' → logprob: -11.923596382141113
    4. ',' → logprob: -14.173596382141113
    5. '.extend' → logprob: -14.298596382141113
    6. '<|end|>' → logprob: -14.673596382141113
    7. ')' → logprob: -14.923596382141113
    8. '.append' → logprob: -15.673596382141113
    9. '[' → logprob: -16.17359733581543
    10. ' ,' → logprob: -16.29859733581543

Token 313: ' companies' (ID: 6005)
  Prédit: 'companies'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'companies' → logprob: -0.5759406089782715
    2. ' companies' → logprob: -0.8259406089782715
    3. 'company' → logprob: -14.20094108581543
    4. 'comp' → logprob: -15.07594108581543
    5. 'Companies' → logprob: -16.82594108581543
    6. 'compan' → logprob: -16.95094108581543
    7. ' ' → logprob: -17.32594108581543
    8. '   ' → logprob: -18.07594108581543
    9. '[' → logprob: -18.07594108581543
    10. '	' → logprob: -18.45094108581543

Token 314: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002930366899818182
    2. 'self' → logprob: -8.375292778015137
    3. '
' → logprob: -10.500292778015137
    4. ' self' → logprob: -10.625292778015137
    5. '   ' → logprob: -12.000292778015137
    6. '<|end|>' → logprob: -13.375292778015137
    7. '        
' → logprob: -14.250292778015137
    8. '	self' → logprob: -14.500292778015137
    9. '      ' → logprob: -14.875292778015137
    10. ' ' → logprob: -15.000292778015137

Token 315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039339158684015274
    2. 'self' → logprob: -3.289339065551758
    3. ' self' → logprob: -6.664339065551758
    4. '   ' → logprob: -11.414339065551758
    5. '	self' → logprob: -12.039339065551758
    6. '
' → logprob: -13.164339065551758
    7. '[self' → logprob: -15.039339065551758
    8. '	' → logprob: -15.164339065551758
    9. '      ' → logprob: -15.164339065551758
    10. '        
' → logprob: -15.164339065551758

Token 316: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0007456640596501529
    2. ' self' → logprob: -7.25074577331543
    3. '       ' → logprob: -10.25074577331543
    4. '
' → logprob: -15.87574577331543
    5. '   ' → logprob: -16.25074577331543
    6. '	self' → logprob: -16.37574577331543
    7. '        
' → logprob: -17.62574577331543
    8. 'usage' → logprob: -17.87574577331543
    9. '[self' → logprob: -18.25074577331543
    10. '(self' → logprob: -18.50074577331543

Token 317: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.01682344265282154
    2. '.' → logprob: -4.1418232917785645
    3. ' .' → logprob: -7.8918232917785645
    4. '   ' → logprob: -8.766823768615723
    5. '_usage' → logprob: -9.516823768615723
    6. '_' → logprob: -9.766823768615723
    7. 'usage' → logprob: -10.141823768615723
    8. '       ' → logprob: -10.391823768615723
    9. ' ' → logprob: -10.641823768615723
    10. '
' → logprob: -11.641823768615723

Token 318: 'usage' (ID: 25871)
  Prédit: 'usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -8.180258191714529e-06
    2. 'best' → logprob: -12.000008583068848
    3. 'selected' → logprob: -14.875008583068848
    4. 'optimal' → logprob: -15.375008583068848
    5. 'selection' → logprob: -15.500008583068848
    6. ' usage' → logprob: -15.625008583068848
    7. '_usage' → logprob: -15.875008583068848
    8. 'company' → logprob: -16.37500762939453
    9. 'fee' → logprob: -16.50000762939453
    10. 'current' → logprob: -16.50000762939453

Token 319: ' =' (ID: 314)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.034706491976976395
    2. '.' → logprob: -3.6597065925598145
    3. '_' → logprob: -5.2847065925598145
    4. '._' → logprob: -6.7847065925598145
    5. '_usage' → logprob: -7.0347065925598145
    6. '.l' → logprob: -7.5347065925598145
    7. ' =' → logprob: -7.9097065925598145
    8. '=' → logprob: -8.409706115722656
    9. '_literals' → logprob: -9.534706115722656
    10. ' .' → logprob: -10.284706115722656

Token 320: ' usage' (ID: 16622)
  Prédit: ' usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' usage' → logprob: -0.061967797577381134
    2. 'usage' → logprob: -2.8119678497314453
    3. '_usage' → logprob: -16.311967849731445
    4. 'Usage' → logprob: -18.311967849731445
    5. ' ' → logprob: -18.436967849731445
    6. ' use' → logprob: -18.936967849731445
    7. ' water' → logprob: -19.061967849731445
    8. '   ' → logprob: -19.686967849731445
    9. '       ' → logprob: -19.936967849731445
    10. ' ' → logprob: -20.061967849731445

Token 321: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11517776548862457
    2. '
' → logprob: -2.240177869796753
    3. '    
' → logprob: -6.490177631378174
    4. 'def' → logprob: -7.365177631378174
    5. '<|end|>' → logprob: -9.240178108215332
    6. '

' → logprob: -10.490178108215332
    7. ' def' → logprob: -10.990178108215332
    8. '  
' → logprob: -10.990178108215332
    9. ' 
' → logprob: -11.490178108215332
    10. '        
' → logprob: -11.615178108215332

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010213677771389484
    2. 'def' → logprob: -4.635213851928711
    3. '
' → logprob: -8.510213851928711
    4. ' def' → logprob: -8.635213851928711
    5. '    
' → logprob: -9.510213851928711
    6. '        
' → logprob: -13.010213851928711
    7. '  
' → logprob: -14.260213851928711
    8. '	def' → logprob: -14.510213851928711
    9. '   
' → logprob: -15.510213851928711
    10. ' 
' → logprob: -15.885213851928711

Token 323: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.919942486798391e-05
    2. ' def' → logprob: -9.750059127807617
    3. '   ' → logprob: -14.000059127807617
    4. '@property' → logprob: -17.375059127807617
    5. 'de' → logprob: -18.625059127807617
    6. '@' → logprob: -19.625059127807617
    7. '	def' → logprob: -20.250059127807617
    8. ' ' → logprob: -20.250059127807617
    9. '```' → logprob: -20.750059127807617
    10. 'class' → logprob: -21.000059127807617

Token 324: ' select' (ID: 4736)
  Prédit: ' select'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' select' → logprob: -0.30162742733955383
    2. 'select' → logprob: -1.5516273975372314
    3. ' calculate' → logprob: -4.0516276359558105
    4. ' best' → logprob: -4.5516276359558105
    5. 'calculate' → logprob: -4.8016276359558105
    6. 'best' → logprob: -5.4266276359558105
    7. ' get' → logprob: -5.4266276359558105
    8. 'get' → logprob: -6.3016276359558105
    9. ' find' → logprob: -7.6766276359558105
    10. 'choose' → logprob: -8.176627159118652

Token 325: '_min' (ID: 15950)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.42336952686309814
    2. '_best' → logprob: -1.5483695268630981
    3. '_company' → logprob: -2.1733694076538086
    4. '_' → logprob: -5.673369407653809
    5. '_rate' → logprob: -6.048369407653809
    6. '_fee' → logprob: -6.173369407653809
    7. '_comp' → logprob: -6.298369407653809
    8. '   ' → logprob: -6.423369407653809
    9. '_water' → logprob: -6.673369407653809
    10. '_opt' → logprob: -6.673369407653809

Token 326: 'imum' (ID: 4556)
  Prédit: '_fee'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fee' → logprob: -0.06485161930322647
    2. '_' → logprob: -3.0648515224456787
    3. 'imum' → logprob: -4.314851760864258
    4. '_cost' → logprob: -6.939851760864258
    5. '_company' → logprob: -8.064851760864258
    6. '()' → logprob: -8.564851760864258
    7. '```' → logprob: -8.564851760864258
    8. '(' → logprob: -8.939851760864258
    9. '_rate' → logprob: -9.189851760864258
    10. 'imal' → logprob: -9.189851760864258

Token 327: '_fee' (ID: 75685)
  Prédit: '_fee'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fee' → logprob: -0.0005854414775967598
    2. '_rate' → logprob: -8.500585556030273
    3. '_company' → logprob: -8.750585556030273
    4. '_' → logprob: -9.375585556030273
    5. ' _' → logprob: -10.000585556030273
    6. '_cost' → logprob: -10.625585556030273
    7. '(self' → logprob: -10.875585556030273
    8. '_price' → logprob: -11.750585556030273
    9. '_payment' → logprob: -11.875585556030273
    10. '_fe' → logprob: -12.125585556030273

Token 328: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0206720617134124e-05
    2. '(' → logprob: -11.87501049041748
    3. '   ' → logprob: -13.37501049041748
    4. 'self' → logprob: -14.00001049041748
    5. ' (' → logprob: -14.75001049041748
    6. '       ' → logprob: -15.12501049041748
    7. '(
' → logprob: -17.000009536743164
    8. ' self' → logprob: -17.375009536743164
    9. ' ' → logprob: -18.375009536743164
    10. '=self' → logprob: -18.750009536743164

Token 329: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015537863364443183
    2. 'self' → logprob: -7.501554012298584
    3. '(self' → logprob: -7.751554012298584
    4. '   ' → logprob: -8.501553535461426
    5. ' )' → logprob: -8.626553535461426
    6. '):
' → logprob: -9.501553535461426
    7. '):' → logprob: -10.001553535461426
    8. '       ' → logprob: -10.501553535461426
    9. ')->' → logprob: -11.001553535461426
    10. ',' → logprob: -11.126553535461426

Token 330: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.35254254937171936
    2. ' ->' → logprob: -1.852542519569397
    3. '->' → logprob: -1.977542519569397
    4. '(' → logprob: -7.102542400360107
    5. '       ' → logprob: -7.977542400360107
    6. ')' → logprob: -8.227542877197266
    7. 'self' → logprob: -8.477542877197266
    8. '   ' → logprob: -8.852542877197266
    9. ' self' → logprob: -10.852542877197266
    10. ':' → logprob: -10.977542877197266

Token 331: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5759492516517639
    2. 'int' → logprob: -0.8259492516517639
    3. ' Optional' → logprob: -12.325949668884277
    4. '   ' → logprob: -12.700949668884277
    5. 'Optional' → logprob: -13.825949668884277
    6. '	int' → logprob: -14.950949668884277
    7. '(int' → logprob: -14.950949668884277
    8. ' ' → logprob: -15.075949668884277
    9. '       ' → logprob: -15.950949668884277
    10. ' None' → logprob: -16.57594871520996

Token 332: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02363535761833191
    2. ':
' → logprob: -3.7736353874206543
    3. '       ' → logprob: -7.898635387420654
    4. '():' → logprob: -12.273634910583496
    5. '(self' → logprob: -12.273634910583496
    6. '   ' → logprob: -12.898634910583496
    7. ':
' → logprob: -13.648634910583496
    8. '):' → logprob: -13.898634910583496
    9. '():
' → logprob: -14.023634910583496
    10. ':

' → logprob: -14.398634910583496

Token 333: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.792751032160595e-05
    2. ' fee' → logprob: -10.75008773803711
    3. 'min' → logprob: -11.25008773803711
    4. ' fees' → logprob: -11.37508773803711
    5. 'minimum' → logprob: -11.37508773803711
    6. ' minimum' → logprob: -11.50008773803711
    7. ' min' → logprob: -12.12508773803711
    8. 'fee' → logprob: -12.37508773803711
    9. 'usage' → logprob: -13.12508773803711
    10. 'fees' → logprob: -13.37508773803711

Token 334: ' fees' (ID: 12634)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.994062066078186
    2. 'fees' (adapté à ' fees') → logprob: -1.244062066078186
    3. 'min' → logprob: -1.494062066078186
    4. 'return' → logprob: -2.9940619468688965
    5. ' fees' → logprob: -3.3690619468688965
    6. 'minimum' → logprob: -4.2440619468688965
    7. ' min' → logprob: -4.3690619468688965
    8. ' minimum' → logprob: -6.2440619468688965
    9. ' return' → logprob: -6.4940619468688965
    10. 'fee' → logprob: -6.8690619468688965

Token 335: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0036013787612318993
    2. '=' → logprob: -5.628601551055908
    3. ' =[' → logprob: -14.50360107421875
    4. '   ' → logprob: -14.75360107421875
    5. '=[]' → logprob: -15.50360107421875
    6. 's' → logprob: -16.62860107421875
    7. '_' → logprob: -17.12860107421875
    8. '=[' → logprob: -17.25360107421875
    9. ' ' → logprob: -17.37860107421875
    10. '       ' → logprob: -17.62860107421875

Token 336: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2655276358127594
    2. ' [' → logprob: -1.765527606010437
    3. '[self' → logprob: -3.0155277252197266
    4. '[
' → logprob: -4.515527725219727
    5. '[min' → logprob: -6.765527725219727
    6. ' [
' → logprob: -7.765527725219727
    7. '[int' → logprob: -8.765527725219727
    8. '[token' → logprob: -9.140527725219727
    9. '[item' → logprob: -9.515527725219727
    10. '[]' → logprob: -10.390527725219727

Token 337: 'company' (ID: 13003)
  Prédit: 'company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'company' → logprob: -0.00010151672904612496
    2. 'c' → logprob: -9.875101089477539
    3. ' company' → logprob: -10.000101089477539
    4. 'comp' → logprob: -12.500101089477539
    5. '   ' → logprob: -14.375101089477539
    6. '(company' → logprob: -16.37510108947754
    7. '       ' → logprob: -16.87510108947754
    8. 'cmp' → logprob: -17.12510108947754
    9. 'Company' → logprob: -17.25010108947754
    10. 'co' → logprob: -17.50010108947754

Token 338: '.calculate' (ID: 67851)
  Prédit: '.calculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.calculate' → logprob: -0.006791393738240004
    2. '.' → logprob: -5.006791591644287
    3. ' .' → logprob: -9.506791114807129
    4. '.compute' → logprob: -14.631791114807129
    5. '._' → logprob: -15.006791114807129
    6. '   ' → logprob: -15.131791114807129
    7. 'calculate' → logprob: -15.256791114807129
    8. '.select' → logprob: -16.256792068481445
    9. '.Calculate' → logprob: -16.381792068481445
    10. ' ' → logprob: -16.506792068481445

Token 339: '_fee' (ID: 75685)
  Prédit: '_fee'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fee' → logprob: -1.7432603272027336e-06
    2. '_' → logprob: -13.500001907348633
    3. '_fe' → logprob: -16.375001907348633
    4. 'fee' → logprob: -16.625001907348633
    5. '```' → logprob: -16.750001907348633
    6. '(_' → logprob: -16.750001907348633
    7. '_f' → logprob: -17.125001907348633
    8. ' _' → logprob: -17.875001907348633
    9. '(' → logprob: -18.625001907348633
    10. ' ' → logprob: -18.750001907348633

Token 340: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.201441690325737
    2. '(' → logprob: -1.7014416456222534
    3. '(
' → logprob: -10.701441764831543
    4. '(

' → logprob: -12.576441764831543
    5. ' (' → logprob: -13.701441764831543
    6. '(this' → logprob: -14.451441764831543
    7. '((' → logprob: -14.451441764831543
    8. 'self' → logprob: -15.576441764831543
    9. '(i' → logprob: -17.326440811157227
    10. '(int' → logprob: -18.076440811157227

Token 341: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6395898461341858
    2. '._' → logprob: -0.7645898461341858
    3. ' .' → logprob: -5.139589786529541
    4. '(self' → logprob: -8.0145902633667
    5. ' _' → logprob: -8.6395902633667
    6. ' ' → logprob: -8.7645902633667
    7. '_usage' → logprob: -9.1395902633667
    8. 'self' → logprob: -9.3895902633667
    9. ' self' → logprob: -9.5145902633667
    10. '_' → logprob: -9.7645902633667

Token 342: 'usage' (ID: 25871)
  Prédit: 'usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -2.3319124011322856e-05
    2. ' usage' → logprob: -11.000022888183594
    3. '.' → logprob: -12.500022888183594
    4. '_usage' → logprob: -13.125022888183594
    5. ' ' → logprob: -14.375022888183594
    6. '
' → logprob: -16.875022888183594
    7. 'use' → logprob: -17.125022888183594
    8. '  ' → logprob: -17.500022888183594
    9. '   ' → logprob: -17.500022888183594
    10. 'us' → logprob: -17.500022888183594

Token 343: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00553587730973959
    2. '.l' → logprob: -5.255536079406738
    3. ' .' → logprob: -8.380536079406738
    4. '.us' → logprob: -10.380536079406738
    5. '._' → logprob: -11.380536079406738
    6. '.used' → logprob: -11.505536079406738
    7. '_l' → logprob: -11.755536079406738
    8. 'usage' → logprob: -12.630536079406738
    9. ')' → logprob: -12.755536079406738
    10. '.use' → logprob: -13.755536079406738

Token 344: 'usage' (ID: 25871)
  Prédit: 'lit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lit' → logprob: -0.4743901193141937
    2. 'usage' → logprob: -0.9743901491165161
    3. '_usage' → logprob: -8.724390029907227
    4. '_l' → logprob: -9.099390029907227
    5. ' usage' → logprob: -10.974390029907227
    6. 'liter' → logprob: -11.599390029907227
    7. ' liters' → logprob: -11.974390029907227
    8. 'l' → logprob: -12.974390029907227
    9. '```' → logprob: -13.599390029907227
    10. '_' → logprob: -14.224390029907227

Token 345: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.2664456789934775e-06
    2. '_' → logprob: -14.375000953674316
    3. '_literals' → logprob: -14.750000953674316
    4. ' _' → logprob: -15.875000953674316
    5. '```' → logprob: -17.125001907348633
    6. '_li' → logprob: -18.625001907348633
    7. 'lit' → logprob: -18.625001907348633
    8. 'l' → logprob: -19.000001907348633
    9. '_letters' → logprob: -19.000001907348633
    10. 's' → logprob: -19.125001907348633

Token 346: 'iters' (ID: 195765)
  Prédit: 'iters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iters' → logprob: -0.0007548353751190007
    2. 'ters' → logprob: -7.3757548332214355
    3. '```' → logprob: -9.250755310058594
    4. 'it' → logprob: -11.625755310058594
    5. '``' → logprob: -12.250755310058594
    6. 'ers' → logprob: -12.250755310058594
    7. '
' → logprob: -12.750755310058594
    8. '   ' → logprob: -12.875755310058594
    9. 'eters' → logprob: -13.750755310058594
    10. 'itters' → logprob: -13.875755310058594

Token 347: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4881879400927573e-05
    2. ' )' → logprob: -10.375035285949707
    3. '       ' → logprob: -13.250035285949707
    4. ')]' → logprob: -13.875035285949707
    5. ')
' → logprob: -14.125035285949707
    6. '   ' → logprob: -17.12503433227539
    7. ']' → logprob: -17.37503433227539
    8. '))' → logprob: -18.00003433227539
    9. '        ' → logprob: -18.37503433227539
    10. '           ' → logprob: -18.87503433227539

Token 348: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06048392131924629
    2. '       ' → logprob: -3.560483932495117
    3. ']' → logprob: -3.685483932495117
    4. 'for' → logprob: -5.435483932495117
    5. ')' → logprob: -8.185483932495117
    6. '<|end|>' → logprob: -8.435483932495117
    7. ' ]' → logprob: -8.560483932495117
    8. '        ' → logprob: -9.685483932495117
    9. '	for' → logprob: -11.185483932495117
    10. ' ' → logprob: -11.560483932495117

Token 349: ' company' (ID: 3175)
  Prédit: ' company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' company' → logprob: -0.023386983200907707
    2. 'company' → logprob: -3.7733869552612305
    3. 'self' → logprob: -9.14838695526123
    4. ' self' → logprob: -10.27338695526123
    5. '(company' → logprob: -15.89838695526123
    6. '公司' → logprob: -16.398387908935547
    7. ' ' → logprob: -16.523387908935547
    8. '_company' → logprob: -16.523387908935547
    9. '.company' → logprob: -17.023387908935547
    10. '会社' → logprob: -17.523387908935547

Token 350: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028205662965774536
    2. 'in' → logprob: -5.8778204917907715
    3. ' ' → logprob: -12.00282096862793
    4. ' _' → logprob: -12.75282096862793
    5. 'self' → logprob: -13.25282096862793
    6. '_' → logprob: -13.87782096862793
    7. '	in' → logprob: -13.87782096862793
    8. 's' → logprob: -14.50282096862793
    9. '_in' → logprob: -14.62782096862793
    10. ' self' → logprob: -14.75282096862793

Token 351: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12693051993846893
    2. ' self' → logprob: -2.1269304752349854
    3. '(self' → logprob: -14.126930236816406
    4. '	self' → logprob: -14.251930236816406
    5. '       ' → logprob: -14.501930236816406
    6. '   ' → logprob: -15.876930236816406
    7. '=self' → logprob: -15.876930236816406
    8. ' ' → logprob: -16.501930236816406
    9. '
' → logprob: -16.626930236816406
    10. '[self' → logprob: -16.876930236816406

Token 352: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.6240566083070007e-06
    2. '.' → logprob: -14.250001907348633
    3. ' .' → logprob: -14.875001907348633
    4. '_comp' → logprob: -15.750001907348633
    5. '
' → logprob: -16.125001907348633
    6. '_' → logprob: -16.875001907348633
    7. '_company' → logprob: -17.000001907348633
    8. '   ' → logprob: -17.125001907348633
    9. '.__' → logprob: -17.250001907348633
    10. ']._' → logprob: -17.375001907348633

Token 353: 'companies' (ID: 126324)
  Prédit: 'companies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'companies' → logprob: -2.4153549020411447e-05
    2. 'usage' → logprob: -10.87502384185791
    3. 'company' → logprob: -13.00002384185791
    4. '_comp' → logprob: -13.87502384185791
    5. ' companies' → logprob: -14.37502384185791
    6. 'comp' → logprob: -15.00002384185791
    7. '   ' → logprob: -15.75002384185791
    8. '
' → logprob: -16.000024795532227
    9. '_usage' → logprob: -16.250024795532227
    10. 'compan' → logprob: -16.250024795532227

Token 354: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009373087668791413
    2. '       ' → logprob: -7.625937461853027
    3. ' ]' → logprob: -7.750937461853027
    4. ']
' → logprob: -11.000937461853027
    5. ')' → logprob: -14.625937461853027
    6. '   ' → logprob: -14.625937461853027
    7. ')]' → logprob: -15.125937461853027
    8. ']

' → logprob: -15.500937461853027
    9. '        ' → logprob: -15.875937461853027
    10. '()]' → logprob: -16.00093650817871

Token 355: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.161542609333992
    2. ' return' → logprob: -2.5365426540374756
    3. 'return' → logprob: -2.9115426540374756
    4. '
' → logprob: -4.1615424156188965
    5. '        
' → logprob: -10.786542892456055
    6. '   ' → logprob: -12.036542892456055
    7. '```' → logprob: -12.286542892456055
    8. ' 
' → logprob: -12.411542892456055
    9. '	return' → logprob: -12.411542892456055
    10. '
' → logprob: -12.411542892456055

Token 356: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0025630532763898373
    2. ' return' → logprob: -6.002562999725342
    3. '       ' → logprob: -9.5025634765625
    4. 'min' → logprob: -11.5025634765625
    5. '
' → logprob: -13.0025634765625
    6. ' min' → logprob: -16.5025634765625
    7. 'minimum' → logprob: -16.6275634765625
    8. '```' → logprob: -16.7525634765625
    9. '        
' → logprob: -16.8775634765625
    10. '   ' → logprob: -18.1275634765625

Token 357: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.1269282102584839
    2. 'min' → logprob: -2.1269283294677734
    3. '	min' → logprob: -16.751928329467773
    4. '(min' → logprob: -19.126928329467773
    5. '[min' → logprob: -19.751928329467773
    6. ' minimum' → logprob: -20.126928329467773
    7. '.min' → logprob: -20.751928329467773
    8. 'minimum' → logprob: -21.626928329467773
    9. '_min' → logprob: -21.626928329467773
    10. '   ' → logprob: -22.376928329467773

Token 358: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0001984146365430206
    2. '(' → logprob: -8.625198364257812
    3. '(fe' → logprob: -11.000198364257812
    4. ' (' → logprob: -13.125198364257812
    5. '(
' → logprob: -17.125198364257812
    6. 'fees' → logprob: -17.875198364257812
    7. ' fees' → logprob: -18.250198364257812
    8. '(freq' → logprob: -18.375198364257812
    9. '(fi' → logprob: -18.875198364257812
    10. '((' → logprob: -19.125198364257812

Token 359: 'ees' (ID: 7678)
  Prédit: 'ees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ees' → logprob: -0.0011712945997714996
    2. 'es' → logprob: -6.751171112060547
    3. 'e' → logprob: -14.251171112060547
    4. 'fees' → logprob: -15.251171112060547
    5. 'ee' → logprob: -15.626171112060547
    6. ' fees' → logprob: -17.876171112060547
    7. ' ees' → logprob: -17.876171112060547
    8. '```' → logprob: -18.626171112060547
    9. 'ess' → logprob: -18.751171112060547
    10. 's' → logprob: -19.001171112060547

Token 360: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0564331205387134e-05
    2. ')
' → logprob: -12.25001049041748
    3. '       ' → logprob: -12.75001049041748
    4. '<|end|>' → logprob: -13.50001049041748
    5. ' )' → logprob: -14.25001049041748
    6. '}' → logprob: -15.25001049041748
    7. '   ' → logprob: -15.50001049041748
    8. ')return' → logprob: -16.500011444091797
    9. '))' → logprob: -17.125011444091797
    10. '())' → logprob: -17.375011444091797

Token 361: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.18228597939014435
    2. '<|end|>' → logprob: -2.057286024093628
    3. 'class' → logprob: -3.932286024093628
    4. 'company' → logprob: -5.807285785675049
    5. '```' → logprob: -5.807285785675049
    6. 'def' → logprob: -5.807285785675049
    7. 'water' → logprob: -6.182285785675049
    8. '<|end|>' → logprob: -6.557285785675049
    9. 'x' → logprob: -6.682285785675049
    10. '
' → logprob: -6.682285785675049

Token 362: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.14237390458583832
    2. ' calculate' → logprob: -2.64237380027771
    3. ' test' → logprob: -3.01737380027771
    4. ' example' → logprob: -5.017374038696289
    5. ' create' → logprob: -6.392374038696289
    6. ' evaluate' → logprob: -6.517374038696289
    7. ' run' → logprob: -6.767374038696289
    8. ' compute' → logprob: -6.892374038696289
    9. ' compare' → logprob: -8.642374038696289
    10. ' get' → logprob: -8.892374038696289

Token 363: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00010533124441280961
    2. '():
' → logprob: -9.875104904174805
    3. ' ():' → logprob: -9.875104904174805
    4. '()' → logprob: -13.125104904174805
    5. '():
' → logprob: -16.125104904174805
    6. ':' → logprob: -16.125104904174805
    7. '(' → logprob: -16.500104904174805
    8. '()>' → logprob: -17.250104904174805
    9. '_' → logprob: -17.500104904174805
    10. '().' → logprob: -17.625104904174805

Token 364: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005772838369011879
    2. ' companies' → logprob: -5.755773067474365
    3. ' x' → logprob: -6.255773067474365
    4. 'companies' → logprob: -8.005772590637207
    5. 'x' → logprob: -8.255772590637207
    6. ' company' → logprob: -10.255772590637207
    7. 'company' → logprob: -11.005772590637207
    8. ' usage' → logprob: -12.255772590637207
    9. ' X' → logprob: -12.380772590637207
    10. ' water' → logprob: -12.380772590637207

Token 365: ' class' (ID: 744)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4498118460178375
    2. '   ' → logprob: -1.3248118162155151
    3. ' x' → logprob: -2.5748119354248047
    4. 'companies' → logprob: -4.824811935424805
    5. 'usage' → logprob: -4.949811935424805
    6. ' companies' → logprob: -6.449811935424805
    7. ' usage' → logprob: -6.699811935424805
    8. 'rate' → logprob: -6.824811935424805
    9. 'company' → logprob: -7.449811935424805
    10. '#' → logprob: -8.449811935424805

Token 366: ' Input' (ID: 10090)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.05348259583115578
    2. ' Water' → logprob: -3.1784825325012207
    3. 'X' → logprob: -5.303482532501221
    4. ' ' → logprob: -6.178482532501221
    5. '_' → logprob: -6.803482532501221
    6. ' Main' → logprob: -7.553482532501221
    7. ' User' → logprob: -7.678482532501221
    8. 'Water' → logprob: -8.053483009338379
    9. '<|end|>' → logprob: -8.303483009338379
    10. ' main' → logprob: -9.803483009338379

Token 367: 'Reader' (ID: 7171)
  Prédit: 'Data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Data' → logprob: -0.592225968837738
    2. ':' → logprob: -1.4672260284423828
    3. 'Handler' → logprob: -2.717226028442383
    4. '():' → logprob: -2.842226028442383
    5. 'Reader' → logprob: -3.217226028442383
    6. 'Water' → logprob: -3.967226028442383
    7. 'Processor' → logprob: -4.842226028442383
    8. 'Parser' → logprob: -4.967226028442383
    9. ':
' → logprob: -5.592226028442383
    10. 'Input' → logprob: -6.092226028442383

Token 368: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007755214814096689
    2. ':
' → logprob: -4.882755279541016
    3. '():' → logprob: -9.507755279541016
    4. '):' → logprob: -10.382755279541016
    5. '<|end|>' → logprob: -10.382755279541016
    6. '():
' → logprob: -12.257755279541016
    7. '(object' → logprob: -13.132755279541016
    8. ' :' → logprob: -13.632755279541016
    9. '<|end|>' → logprob: -13.882755279541016
    10. '(' → logprob: -14.382755279541016

Token 369: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5136836171150208
    2. '       ' → logprob: -1.513683557510376
    3. '   ' → logprob: -2.138683557510376
    4. '<|end|>' → logprob: -3.013683557510376
    5. ':
' → logprob: -4.638683795928955
    6. '<|end|>' → logprob: -6.388683795928955
    7. '    ' → logprob: -6.888683795928955
    8. '(object' → logprob: -7.388683795928955
    9. '(' → logprob: -7.763683795928955
    10. '():' → logprob: -8.263683319091797

Token 370: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.049782052636146545
    2. 'def' (adapté à ' def') → logprob: -3.0497820377349854
    3. ' @' → logprob: -6.9247822761535645
    4. '   ' → logprob: -8.799781799316406
    5. '@' → logprob: -9.924781799316406
    6. '       ' → logprob: -11.674781799316406
    7. '    ' → logprob: -13.924781799316406
    8. ' ' → logprob: -14.174781799316406
    9. '	def' → logprob: -14.674781799316406
    10. ' __' → logprob: -15.924781799316406

Token 371: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.04349385201931
    2. '__' → logprob: -3.1684937477111816
    3. ' init' → logprob: -8.41849422454834
    4. ' read' → logprob: -8.79349422454834
    5. 'init' → logprob: -10.66849422454834
    6. ' readline' → logprob: -11.04349422454834
    7. ' static' → logprob: -11.16849422454834
    8. ' run' → logprob: -11.29349422454834
    9. ' _' → logprob: -11.41849422454834
    10. ' def' → logprob: -11.54349422454834

Token 372: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -9.610702363715973e-06
    2. 'iter' → logprob: -12.500009536743164
    3. 'int' → logprob: -13.125009536743164
    4. 'it' → logprob: -13.500009536743164
    5. '_init' → logprob: -13.875009536743164
    6. ' init' → logprob: -14.375009536743164
    7. 'nit' → logprob: -14.625009536743164
    8. '__' → logprob: -15.875009536743164
    9. 'ini' → logprob: -16.000009536743164
    10. 'enter' → logprob: -16.125009536743164

Token 373: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0073996917344629765
    2. '__(' → logprob: -5.132399559020996
    3. '(' → logprob: -6.632399559020996
    4. ' (' → logprob: -9.257399559020996
    5. 'self' → logprob: -10.507399559020996
    6. '<|end|>' → logprob: -11.382399559020996
    7. '__(
' → logprob: -12.007399559020996
    8. '_(' → logprob: -13.257399559020996
    9. ',' → logprob: -13.382399559020996
    10. '__' → logprob: -13.507399559020996

Token 374: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0017637170385569334
    2. ')' → logprob: -6.876763820648193
    3. '):
' → logprob: -7.876763820648193
    4. '(self' → logprob: -8.751763343811035
    5. ' self' → logprob: -9.126763343811035
    6. '       ' → logprob: -10.501763343811035
    7. '           ' → logprob: -10.501763343811035
    8. ',' → logprob: -11.751763343811035
    9. '):' → logprob: -12.001763343811035
    10. '):

' → logprob: -12.251763343811035

Token 375: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5862857103347778
    2. '):' → logprob: -0.8362857103347778
    3. '):
' → logprob: -4.836285591125488
    4. 'self' → logprob: -6.461285591125488
    5. ',input' → logprob: -8.461285591125488
    6. ' ,' → logprob: -9.086285591125488
    7. '   ' → logprob: -9.336285591125488
    8. ' ):' → logprob: -9.461285591125488
    9. '       ' → logprob: -9.586285591125488
    10. ',self' → logprob: -9.961285591125488

Token 376: '           ' (ID: 352)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.14133977890014648
    2. '           ' → logprob: -2.5163397789001465
    3. ' self' → logprob: -3.0163397789001465
    4. '(self' → logprob: -6.6413397789001465
    5. '       ' → logprob: -8.266340255737305
    6. '```' → logprob: -8.516340255737305
    7. ')' → logprob: -9.141340255737305
    8. '               ' → logprob: -9.641340255737305
    9. '):
' → logprob: -10.391340255737305
    10. '   ' → logprob: -10.891340255737305

Token 377: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3359087407588959
    2. 'pass' → logprob: -1.3359087705612183
    3. '           ' → logprob: -4.585908889770508
    4. ' pass' → logprob: -4.710908889770508
    5. ' self' → logprob: -5.835908889770508
    6. '               ' → logprob: -9.085908889770508
    7. 'import' → logprob: -9.585908889770508
    8. '       ' → logprob: -10.835908889770508
    9. 's' → logprob: -10.960908889770508
    10. '	pass' → logprob: -11.585908889770508

Token 378: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.013056104071438313
    2. '.' → logprob: -4.88805627822876
    3. '.buffer' → logprob: -6.13805627822876
    4. '.input' → logprob: -6.38805627822876
    5. '.data' → logprob: -7.13805627822876
    6. '.inputs' → logprob: -8.513055801391602
    7. '.lines' → logprob: -8.638055801391602
    8. '.stdin' → logprob: -9.263055801391602
    9. '.value' → logprob: -10.388055801391602
    10. '.n' → logprob: -10.513055801391602

Token 379: 'inputs' (ID: 54250)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -1.1294394731521606
    2. 'inputs' → logprob: -1.3794394731521606
    3. 'input' → logprob: -1.6294394731521606
    4. 'buffer' → logprob: -2.254439353942871
    5. 'data' → logprob: -3.129439353942871
    6. '_lines' → logprob: -4.004439353942871
    7. 'values' → logprob: -4.004439353942871
    8. '_' → logprob: -4.379439353942871
    9. '_input' → logprob: -4.629439353942871
    10. '_buffer' → logprob: -5.379439353942871

Token 380: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08932045102119446
    2. '=' → logprob: -2.464320421218872
    3. ' ' → logprob: -8.839320182800293
    4. '<|end|>' → logprob: -9.089320182800293
    5. '=[]' → logprob: -9.214320182800293
    6. '<|end|>' → logprob: -12.464320182800293
    7. '   ' → logprob: -12.589320182800293
    8. '  ' → logprob: -12.839320182800293
    9. '=[]
' → logprob: -13.089320182800293
    10. '[]' → logprob: -13.464320182800293

Token 381: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.005767734721302986
    2. ' []' → logprob: -5.255767822265625
    3. '[' → logprob: -8.130767822265625
    4. 'input' → logprob: -9.130767822265625
    5. '[input' → logprob: -9.755767822265625
    6. '[]
' → logprob: -11.005767822265625
    7. '[]}' → logprob: -11.005767822265625
    8. 'iter' → logprob: -11.255767822265625
    9. 'list' → logprob: -12.255767822265625
    10. ' [' → logprob: -12.255767822265625

Token 382: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 383: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1653909534215927
    2. '   ' → logprob: -2.415390968322754
    3. ' def' → logprob: -3.290390968322754
    4. '       ' → logprob: -3.665390968322754
    5. '
' → logprob: -8.665390968322754
    6. '    ' → logprob: -10.415390968322754
    7. ' ' → logprob: -10.415390968322754
    8. '	def' → logprob: -10.790390968322754
    9. '  ' → logprob: -12.540390968322754
    10. '<|end|>' → logprob: -12.790390968322754

Token 384: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.07192116975784302
    2. ' read' → logprob: -3.5719211101531982
    3. 'input' → logprob: -4.196921348571777
    4. 'append' → logprob: -4.196921348571777
    5. ' readline' → logprob: -5.071921348571777
    6. ' input' → logprob: -5.696921348571777
    7. '_read' → logprob: -7.821921348571777
    8. ' append' → logprob: -8.071921348571777
    9. 'get' → logprob: -8.071921348571777
    10. '_input' → logprob: -8.571921348571777

Token 385: '_input' (ID: 12507)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.09453888982534409
    2. '()' → logprob: -2.844538927078247
    3. '_line' → logprob: -4.094538688659668
    4. 'line' → logprob: -4.344538688659668
    5. '(' → logprob: -6.969538688659668
    6. 'self' → logprob: -7.094538688659668
    7. '_input' → logprob: -8.469538688659668
    8. '(line' → logprob: -9.719538688659668
    9. ' line' → logprob: -9.844538688659668
    10. 'input' → logprob: -9.969538688659668

Token 386: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00072851701406762
    2. '(' → logprob: -7.500728607177734
    3. '()' → logprob: -9.375728607177734
    4. 'self' → logprob: -10.000728607177734
    5. '_line' → logprob: -10.625728607177734
    6. 'line' → logprob: -11.250728607177734
    7. '():' → logprob: -12.750728607177734
    8. 's' → logprob: -13.750728607177734
    9. '():
' → logprob: -13.750728607177734
    10. '(
' → logprob: -14.250728607177734

Token 387: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38766345381736755
    2. '):' → logprob: -1.13766348361969
    3. ')' → logprob: -7.6376633644104
    4. ',' → logprob: -8.637663841247559
    5. '():
' → logprob: -10.387663841247559
    6. '):

' → logprob: -10.762663841247559
    7. ' ):' → logprob: -10.762663841247559
    8. 'self' → logprob: -10.887663841247559
    9. '()):
' → logprob: -11.262663841247559
    10. ' ):
' → logprob: -11.387663841247559

Token 388: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00771357724443078
    2. ' for' → logprob: -5.507713794708252
    3. ' line' → logprob: -7.007713794708252
    4. 'for' → logprob: -7.757713794708252
    5. 'input' → logprob: -8.007713317871094
    6. ' user' → logprob: -8.382713317871094
    7. ' input' → logprob: -8.507713317871094
    8. '            ' → logprob: -8.757713317871094
    9. 'line' → logprob: -8.882713317871094
    10. ' pass' → logprob: -8.882713317871094

Token 389: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.002625823020935
    2. ' for' → logprob: -1.502625823020935
    3. 'self' → logprob: -1.877625823020935
    4. ' self' → logprob: -2.1276259422302246
    5. 'n' → logprob: -3.0026259422302246
    6. ' n' → logprob: -3.2526259422302246
    7. ' line' → logprob: -4.252625942230225
    8. 'line' → logprob: -4.252625942230225
    9. 'import' → logprob: -5.502625942230225
    10. 'while' → logprob: -5.877625942230225

Token 390: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.006069929338991642
    2. '_' → logprob: -5.131070137023926
    3. ' line' → logprob: -9.256070137023926
    4. ' i' → logprob: -10.381070137023926
    5. ' ' → logprob: -11.506070137023926
    6. 'line' → logprob: -13.256070137023926
    7. '_line' → logprob: -13.506070137023926
    8. ' in' → logprob: -14.381070137023926
    9. '_i' → logprob: -15.006070137023926
    10. 'i' → logprob: -16.38106918334961

Token 391: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007261329446919262
    2. 'in' → logprob: -7.375726222991943
    3. 'n' → logprob: -9.750725746154785
    4. ' ' → logprob: -11.375725746154785
    5. 'range' → logprob: -11.500725746154785
    6. '_' → logprob: -12.000725746154785
    7. ' range' → logprob: -13.000725746154785
    8. '
' → logprob: -13.125725746154785
    9. '  ' → logprob: -13.250725746154785
    10. ' _' → logprob: -13.500725746154785

Token 392: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38689103722572327
    2. ' range' → logprob: -1.1368910074234009
    3. '[' → logprob: -11.01189136505127
    4. 'input' → logprob: -13.63689136505127
    5. '["' → logprob: -15.01189136505127
    6. 'ran' → logprob: -15.13689136505127
    7. '	range' → logprob: -15.13689136505127
    8. ' ' → logprob: -15.38689136505127
    9. '[]' → logprob: -15.88689136505127
    10. 'iter' → logprob: -16.011890411376953

Token 393: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001304522156715393
    2. '(int' → logprob: -6.751304626464844
    3. '3' → logprob: -9.626304626464844
    4. ' ' → logprob: -10.501304626464844
    5. ' (' → logprob: -10.751304626464844
    6. '(
' → logprob: -12.126304626464844
    7. 'int' → logprob: -12.376304626464844
    8. '2' → logprob: -12.501304626464844
    9. '4' → logprob: -13.126304626464844
    10. ' int' → logprob: -13.501304626464844

Token 394: '5' (ID: 20)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.13375025987625122
    2. '2' → logprob: -2.1337502002716064
    3. 'int' → logprob: -5.3837504386901855
    4. ' ' → logprob: -6.7587504386901855
    5. '4' → logprob: -7.2587504386901855
    6. '5' → logprob: -8.633749961853027
    7. ' int' → logprob: -9.008749961853027
    8. '6' → logprob: -11.133749961853027
    9. '1' → logprob: -11.258749961853027
    10. '   ' → logprob: -12.133749961853027

Token 395: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04965478181838989
    2. '):' → logprob: -3.049654722213745
    3. ' ):
' → logprob: -7.049654960632324
    4. '):
' → logprob: -8.924654960632324
    5. ' ):' → logprob: -9.674654960632324
    6. '   ' → logprob: -14.049654960632324
    7. '():
' → logprob: -14.549654960632324
    8. ')' → logprob: -14.549654960632324
    9. ':' → logprob: -14.674654960632324
    10. '       ' → logprob: -15.299654960632324

Token 396: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008806154946796596
    2. '           ' → logprob: -8.250880241394043
    3. ' self' → logprob: -8.375880241394043
    4. 'self' → logprob: -8.500880241394043
    5. ' input' → logprob: -10.250880241394043
    6. '   ' → logprob: -10.375880241394043
    7. 'input' → logprob: -10.750880241394043
    8. '<|end|>' → logprob: -10.875880241394043
    9. '	           ' → logprob: -11.375880241394043
    10. '                
' → logprob: -11.750880241394043

Token 397: ' self' (ID: 1051)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.7352814674377441
    2. 'self' (adapté à ' self') → logprob: -1.7352814674377441
    3. 'line' → logprob: -1.8602814674377441
    4. ' self' → logprob: -1.9852814674377441
    5. 'value' → logprob: -4.610281467437744
    6. '                   ' → logprob: -4.735281467437744
    7. ' value' → logprob: -5.735281467437744
    8. 'input' → logprob: -5.985281467437744
    9. 'x' → logprob: -6.110281467437744
    10. 'user' → logprob: -6.110281467437744

Token 398: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0004574863996822387
    2. '.' → logprob: -7.875457286834717
    3. ' .' → logprob: -10.375457763671875
    4. '       ' → logprob: -11.250457763671875
    5. '   ' → logprob: -11.625457763671875
    6. '           ' → logprob: -12.125457763671875
    7. '.
' → logprob: -13.000457763671875
    8. '
' → logprob: -13.000457763671875
    9. '.__' → logprob: -13.250457763671875
    10. ' ' → logprob: -13.375457763671875

Token 399: 'inputs' (ID: 54250)
  Prédit: 'inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -0.00020687808864749968
    2. '_inputs' → logprob: -8.50020694732666
    3. '.inputs' → logprob: -13.62520694732666
    4. ' inputs' → logprob: -14.25020694732666
    5. 'append' → logprob: -14.87520694732666
    6. '_' → logprob: -15.62520694732666
    7. '(inputs' → logprob: -15.75020694732666
    8. 'outputs' → logprob: -15.75020694732666
    9. '
' → logprob: -16.250205993652344
    10. 'input' → logprob: -16.500205993652344

Token 400: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.07023128867149353
    2. '.' → logprob: -2.6952311992645264
    3. ' .' → logprob: -8.320231437683105
    4. '=' → logprob: -11.320231437683105
    5. 'append' → logprob: -11.570231437683105
    6. ' =' → logprob: -11.695231437683105
    7. '.extend' → logprob: -11.945231437683105
    8. '().' → logprob: -12.445231437683105
    9. '.app' → logprob: -12.570231437683105
    10. '.=' → logprob: -13.695231437683105

Token 401: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.115892194211483
    2. '(int' → logprob: -2.365892171859741
    3. 'input' → logprob: -4.86589241027832
    4. 'list' → logprob: -5.49089241027832
    5. ' int' → logprob: -5.99089241027832
    6. 'tuple' → logprob: -7.36589241027832
    7. '   ' → logprob: -8.24089241027832
    8. '(list' → logprob: -9.61589241027832
    9. '(' → logprob: -9.86589241027832
    10. '(tuple' → logprob: -9.99089241027832

Token 402: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -3.9292415749514475e-05
    2. 'input' → logprob: -10.500039100646973
    3. '(' → logprob: -11.375039100646973
    4. ' input' → logprob: -16.50004005432129
    5. ' (' → logprob: -17.62504005432129
    6. ',input' → logprob: -18.25004005432129
    7. '())' → logprob: -18.37504005432129
    8. '=input' → logprob: -18.37504005432129
    9. '	input' → logprob: -19.00004005432129
    10. '<input' → logprob: -19.25004005432129

Token 403: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.007126538082957268
    2. '())' → logprob: -5.507126331329346
    3. '()' → logprob: -6.507126331329346
    4. '().' → logprob: -7.382126331329346
    5. '())))' → logprob: -7.507126331329346
    6. '(' → logprob: -8.757126808166504
    7. '()))
' → logprob: -8.757126808166504
    8. '()));' → logprob: -10.507126808166504
    9. '()))

' → logprob: -11.382126808166504
    10. '("' → logprob: -12.382126808166504

Token 404: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 405: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19141890108585358
    2. '
' → logprob: -2.4414188861846924
    3. 'def' → logprob: -3.6914188861846924
    4. '<|end|>' → logprob: -3.6914188861846924
    5. '   ' → logprob: -3.9414188861846924
    6. '        
' → logprob: -5.4414191246032715
    7. 'return' (adapté à ' return') → logprob: -5.6914191246032715
    8. '

' → logprob: -6.4414191246032715
    9. '<|end|>' → logprob: -6.5664191246032715
    10. '    ' → logprob: -6.5664191246032715

Token 406: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10280805081129074
    2. ' self' → logprob: -2.3528079986572266
    3. '[self' → logprob: -6.352807998657227
    4. '[' → logprob: -7.727807998657227
    5. ' [' → logprob: -8.727807998657227
    6. 'None' → logprob: -9.102807998657227
    7. ' None' → logprob: -10.102807998657227
    8. 'list' → logprob: -10.352807998657227
    9. '[int' → logprob: -10.977807998657227
    10. 'tuple' → logprob: -11.352807998657227

Token 407: '._' (ID: 2697)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 408: 'inputs' (ID: 54250)
  Prédit: 'inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -9.088346359931165e-07
    2. '_inputs' → logprob: -14.250000953674316
    3. ' inputs' → logprob: -16.125
    4. '(inputs' → logprob: -17.0
    5. '.inputs' → logprob: -17.875
    6. 'outputs' → logprob: -18.375
    7. 'Inputs' → logprob: -18.75
    8. 'ints' → logprob: -18.875
    9. '   ' → logprob: -19.5
    10. 'input' → logprob: -19.625

Token 409: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 410: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008346008136868477
    2. '       ' → logprob: -5.258346080780029
    3. 'input' → logprob: -6.758346080780029
    4. 'x' → logprob: -7.633346080780029
    5. 'water' → logprob: -7.758346080780029
    6. 'inputs' → logprob: -8.508345603942871
    7. 'usage' → logprob: -8.633345603942871
    8. 'company' → logprob: -8.758345603942871
    9. '    
' → logprob: -9.383345603942871
    10. '
' → logprob: -10.383345603942871

Token 411: ' reader' (ID: 10958)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -0.009624337777495384
    2. 'input' → logprob: -5.759624481201172
    3. ' inputs' → logprob: -6.009624481201172
    4. 'x' → logprob: -6.384624481201172
    5. '   ' → logprob: -7.134624481201172
    6. '       ' → logprob: -7.759624481201172
    7. 'usage' → logprob: -8.134624481201172
    8. 'rates' → logprob: -8.509624481201172
    9. 'values' → logprob: -8.634624481201172
    10. 'reader' (adapté à ' reader') → logprob: -9.884624481201172

Token 412: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693093717098236
    2. '=' → logprob: -2.1269309520721436
    3. '()' → logprob: -13.751931190490723
    4. ' ' → logprob: -14.251931190490723
    5. '.' → logprob: -14.501931190490723
    6. '.read' → logprob: -15.626931190490723
    7. '   ' → logprob: -16.126930236816406
    8. ' .' → logprob: -16.251930236816406
    9. ' =
' → logprob: -16.751930236816406
    10. '().' → logprob: -16.751930236816406

Token 413: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -3.547789674485102e-05
    2. ' Input' → logprob: -10.250035285949707
    3. '	Input' → logprob: -21.250036239624023
    4. 'input' → logprob: -22.500036239624023
    5. '_input' → logprob: -23.125036239624023
    6. '_Input' → logprob: -23.500036239624023
    7. '<Input' → logprob: -25.000036239624023
    8. '\Input' → logprob: -25.125036239624023
    9. ' input' → logprob: -25.625036239624023
    10. 'I' → logprob: -26.000036239624023

Token 414: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: 0.0
    2. 'reader' → logprob: -16.75
    3. '_reader' → logprob: -18.25
    4. 'Read' → logprob: -20.0
    5. '.Reader' → logprob: -20.25
    6. 'Writer' → logprob: -20.375
    7. 'Readers' → logprob: -20.75
    8. ' Reader' → logprob: -21.625
    9. '-reader' → logprob: -22.5
    10. 'Receiver' → logprob: -22.75

Token 415: '()
' (ID: 1234)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -0.6824920773506165
    2. '   ' → logprob: -0.9324920773506165
    3. ' inputs' → logprob: -2.8074920177459717
    4. '
' → logprob: -3.9324920177459717
    5. 'values' → logprob: -4.807492256164551
    6. '    
' → logprob: -5.432492256164551
    7. 'rates' → logprob: -6.182492256164551
    8. 'input' → logprob: -6.807492256164551
    9. 'usage' → logprob: -6.932492256164551
    10. ' values' → logprob: -7.057492256164551

Token 416: '   ' (ID: 271)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -0.10312798619270325
    2. ' inputs' → logprob: -2.478127956390381
    3. 'values' → logprob: -4.853127956390381
    4. 'rates' → logprob: -6.103127956390381
    5. ' values' → logprob: -6.978127956390381
    6. ' rates' → logprob: -7.478127956390381
    7. 'input' → logprob: -7.478127956390381
    8. 'usage' → logprob: -7.478127956390381
    9. '   ' → logprob: -7.728127956390381
    10. ' usage' → logprob: -8.728128433227539

Token 417: ' A' (ID: 355)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -0.045918699353933334
    2. 'rates' → logprob: -3.4209187030792236
    3. 'values' → logprob: -4.9209184646606445
    4. ' inputs' → logprob: -6.4209184646606445
    5. 'rate' → logprob: -7.2959184646606445
    6. 'params' → logprob: -7.2959184646606445
    7. 'input' → logprob: -7.5459184646606445
    8. 'usage' → logprob: -8.545918464660645
    9. 'x' → logprob: -8.545918464660645
    10. 'company' → logprob: -8.920918464660645

Token 418: ',' (ID: 11)
  Prédit: '_inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inputs' → logprob: -1.080764889717102
    2. ',' → logprob: -1.330764889717102
    3. '_values' → logprob: -1.580764889717102
    4. '_rates' → logprob: -1.955764889717102
    5. ' =' → logprob: -3.8307647705078125
    6. '_rate' → logprob: -4.9557647705078125
    7. ',_' → logprob: -5.7057647705078125
    8. 's' → logprob: -5.9557647705078125
    9. '_vals' → logprob: -6.0807647705078125
    10. '_' → logprob: -6.3307647705078125

Token 419: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.04346543923020363
    2. ' B' → logprob: -3.1684653759002686
    3. 'T' → logprob: -9.043465614318848
    4. 'X' → logprob: -9.043465614318848
    5. 'M' → logprob: -10.418465614318848
    6. 'C' → logprob: -10.543465614318848
    7. ' ' → logprob: -10.543465614318848
    8. 'Q' → logprob: -10.668465614318848
    9. 'D' → logprob: -10.793465614318848
    10. 'K' → logprob: -10.918465614318848

Token 420: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001029471677611582
    2. ' ,' → logprob: -9.750102996826172
    3. ',C' → logprob: -10.250102996826172
    4. 'C' → logprob: -12.250102996826172
    5. ' =' → logprob: -13.125102996826172
    6. '=' → logprob: -13.250102996826172
    7. ' C' → logprob: -14.500102996826172
    8. '<|end|>' → logprob: -17.125102996826172
    9. ',\
' → logprob: -17.125102996826172
    10. '1' → logprob: -17.250102996826172

Token 421: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.18620353937149048
    2. 'T' → logprob: -2.3112034797668457
    3. ' C' → logprob: -2.9362034797668457
    4. 'threshold' → logprob: -4.936203479766846
    5. ' T' → logprob: -5.186203479766846
    6. ' threshold' → logprob: -5.936203479766846
    7. 'M' → logprob: -8.061203956604004
    8. ' ' → logprob: -8.436203956604004
    9. 'D' → logprob: -8.561203956604004
    10. 'X' → logprob: -8.686203956604004

Token 422: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013858173042535782
    2. ',D' → logprob: -9.125138282775879
    3. ' =' → logprob: -11.375138282775879
    4. ' ,' → logprob: -11.625138282775879
    5. 'D' → logprob: -12.125138282775879
    6. '=' → logprob: -12.750138282775879
    7. '=D' → logprob: -15.750138282775879
    8. ',d' → logprob: -16.125139236450195
    9. ' D' → logprob: -16.625139236450195
    10. ',E' → logprob: -16.750139236450195

Token 423: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.030339403077960014
    2. ' D' → logprob: -4.155339241027832
    3. 'T' → logprob: -4.530339241027832
    4. 'threshold' → logprob: -6.280339241027832
    5. ' T' → logprob: -8.155339241027832
    6. ' threshold' → logprob: -8.280339241027832
    7. 'M' → logprob: -8.405339241027832
    8. 'L' → logprob: -8.905339241027832
    9. 'S' → logprob: -9.155339241027832
    10. 'H' → logprob: -9.280339241027832

Token 424: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006952775875106454
    2. ' =' → logprob: -7.87569522857666
    3. '=' → logprob: -8.75069522857666
    4. ',E' → logprob: -9.12569522857666
    5. ' ,' → logprob: -10.00069522857666
    6. 'E' → logprob: -13.25069522857666
    7. ',C' → logprob: -15.75069522857666
    8. ' E' → logprob: -15.75069522857666
    9. ',e' → logprob: -16.125696182250977
    10. ' ' → logprob: -16.750696182250977

Token 425: ' P' (ID: 398)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.001719446387141943
    2. ' E' → logprob: -6.3767194747924805
    3. 'N' → logprob: -12.25171947479248
    4. 'Q' → logprob: -13.37671947479248
    5. 'M' → logprob: -13.37671947479248
    6. 'T' → logprob: -13.87671947479248
    7. 'U' → logprob: -14.00171947479248
    8. 'S' → logprob: -14.00171947479248
    9. 'L' → logprob: -14.00171947479248
    10. 'K' → logprob: -14.12671947479248

Token 426: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06199435144662857
    2. '=' → logprob: -2.8119943141937256
    3. ',' → logprob: -10.561994552612305
    4. ' ' → logprob: -16.436994552612305
    5. '<|end|>' → logprob: -16.436994552612305
    6. '=input' → logprob: -16.561994552612305
    7. ')' → logprob: -16.686994552612305
    8. '=user' → logprob: -16.811994552612305
    9. '=A' → logprob: -16.811994552612305
    10. '[' → logprob: -17.311994552612305

Token 427: ' reader' (ID: 10958)
  Prédit: ' reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reader' → logprob: -0.4741261601448059
    2. 'reader' → logprob: -0.9741261601448059
    3. 'map' → logprob: -11.349125862121582
    4. '(reader' → logprob: -11.349125862121582
    5. ' map' → logprob: -11.849125862121582
    6. 'tuple' → logprob: -11.974125862121582
    7. ' tuple' → logprob: -12.224125862121582
    8. '*' → logprob: -12.724125862121582
    9. '	reader' → logprob: -13.099125862121582
    10. '_reader' → logprob: -14.849125862121582

Token 428: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -5.319370302458992e-06
    2. '.' → logprob: -12.375005722045898
    3. ' .' → logprob: -14.375005722045898
    4. 'read' → logprob: -14.500005722045898
    5. '.readline' → logprob: -18.6250057220459
    6. '._' → logprob: -19.8750057220459
    7. ' read' → logprob: -20.2500057220459
    8. '.readlines' → logprob: -20.3750057220459
    9. '().' → logprob: -20.5000057220459
    10. '	read' → logprob: -20.5000057220459

Token 429: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: 0.0
    2. '_' → logprob: -17.0
    3. '_inputs' → logprob: -17.75
    4. '_line' → logprob: -18.375
    5. '_output' → logprob: -18.5
    6. 'input' → logprob: -18.5
    7. '```' → logprob: -18.625
    8. '_int' → logprob: -18.625
    9. ' _' → logprob: -19.0
    10. '
' → logprob: -19.25

Token 430: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.1557283111615106e-05
    2. '()
' → logprob: -10.125041961669922
    3. '()

' → logprob: -14.375041961669922
    4. '(' → logprob: -15.375041961669922
    5. '();' → logprob: -15.750041961669922
    6. '(),' → logprob: -16.000041961669922
    7. '())' → logprob: -16.625041961669922
    8. '()]' → logprob: -16.625041961669922
    9. '()
' → logprob: -16.875041961669922
    10. '()\' → logprob: -17.000041961669922

Token 431: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046455953270196915
    2. ' companies' → logprob: -3.5464558601379395
    3. 'companies' → logprob: -4.1714558601379395
    4. '    
' → logprob: -7.2964558601379395
    5. ' company' → logprob: -9.046456336975098
    6. '
' → logprob: -9.171456336975098
    7. 'company' → logprob: -9.546456336975098
    8. ' water' → logprob: -10.171456336975098
    9. '<|end|>' → logprob: -10.296456336975098
    10. '        
' → logprob: -11.671456336975098

Token 432: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.09646626561880112
    2. 'usage' → logprob: -2.721466302871704
    3. 'companies' → logprob: -3.846466302871704
    4. 'company' → logprob: -5.596466064453125
    5. 'water' → logprob: -7.346466064453125
    6. ' x' → logprob: -8.721466064453125
    7. 'X' → logprob: -9.096466064453125
    8. 'comp' → logprob: -10.471466064453125
    9. 'a' → logprob: -10.596466064453125
    10. '   ' → logprob: -10.721466064453125

Token 433: '_company' (ID: 77215)
  Prédit: '_company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_company' → logprob: -0.10073678195476532
    2. 'company' → logprob: -2.4757368564605713
    3. ' =' → logprob: -5.100736618041992
    4. '_rate' → logprob: -5.475736618041992
    5. '_comp' → logprob: -7.225736618041992
    6. '=' → logprob: -8.100736618041992
    7. 'rate' → logprob: -8.475736618041992
    8. '_com' → logprob: -9.475736618041992
    9. 'Company' → logprob: -10.225736618041992
    10. 'com' → logprob: -10.600736618041992

Token 434: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012531552463769913
    2. '=' → logprob: -4.387531757354736
    3. '_rate' → logprob: -11.012531280517578
    4. ' ' → logprob: -13.262531280517578
    5. '_fee' → logprob: -13.887531280517578
    6. 'rate' → logprob: -14.012531280517578
    7. '_rates' → logprob: -14.762531280517578
    8. '1' → logprob: -15.262531280517578
    9. 's' → logprob: -15.637531280517578
    10. ',' → logprob: -15.637531280517578

Token 435: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0002613358374219388
    2. ' X' → logprob: -8.250261306762695
    3. ' ' → logprob: -19.625261306762695
    4. '   ' → logprob: -20.125261306762695
    5. '  ' → logprob: -21.625261306762695
    6. '	X' → logprob: -21.750261306762695
    7. 'class' → logprob: -22.000261306762695
    8. 'Y' → logprob: -22.375261306762695
    9. 'x' → logprob: -22.625261306762695
    10. '
' → logprob: -22.750261306762695

Token 436: 'Company' (ID: 15545)
  Prédit: 'Company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Company' → logprob: 0.0
    2. '_company' → logprob: -18.75
    3. ' Company' → logprob: -19.25
    4. '_' → logprob: -20.75
    5. 'Com' → logprob: -20.875
    6. 'X' → logprob: -21.25
    7. 'company' → logprob: -21.625
    8. 'Class' → logprob: -22.375
    9. 'Comp' → logprob: -22.5
    10. '(' → logprob: -22.5

Token 437: '(rate' (ID: 163194)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.99044269323349
    2. '(P' → logprob: -0.99044269323349
    3. '(A' → logprob: -1.6154427528381348
    4. '(C' → logprob: -3.1154427528381348
    5. '(D' → logprob: -4.865442752838135
    6. '(rate' → logprob: -5.365442752838135
    7. '(' → logprob: -6.490442752838135
    8. 'P' → logprob: -9.990442276000977
    9. '(r' → logprob: -11.365442276000977
    10. '(R' → logprob: -11.365442276000977

Token 438: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -3.173704271830502e-06
    2. '=' → logprob: -12.87500286102295
    3. '=_' → logprob: -15.62500286102295
    4. '=P' → logprob: -15.75000286102295
    5. '_=' → logprob: -17.000003814697266
    6. 'per' → logprob: -17.125003814697266
    7. '_p' → logprob: -17.250003814697266
    8. 'Per' → logprob: -17.375003814697266
    9. '_rate' → logprob: -17.375003814697266
    10. '=A' → logprob: -17.500003814697266

Token 439: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.0874481350183487
    2. '=P' → logprob: -3.4624481201171875
    3. 'P' → logprob: -3.8374481201171875
    4. '=' → logprob: -3.9624481201171875
    5. 'liter' → logprob: -5.5874481201171875
    6. 'l' → logprob: -5.5874481201171875
    7. '=C' → logprob: -6.2124481201171875
    8. 'C' → logprob: -7.2124481201171875
    9. '_p' → logprob: -8.337448120117188
    10. '_P' → logprob: -8.462448120117188

Token 440: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.04707060381770134
    2. 'P' → logprob: -3.7970705032348633
    3. 'A' → logprob: -4.297070503234863
    4. 'C' → logprob: -5.422070503234863
    5. '   ' → logprob: -6.547070503234863
    6. 'B' → logprob: -6.547070503234863
    7. 'D' → logprob: -7.672070503234863
    8. 'it' → logprob: -7.797070503234863
    9. 'liter' → logprob: -8.422070503234863
    10. 'ter' → logprob: -8.672070503234863

Token 441: '=A' (ID: 112591)
  Prédit: '=A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=A' → logprob: -0.04245812073349953
    2. '=B' → logprob: -3.5424580574035645
    3. '=C' → logprob: -4.5424580574035645
    4. '=' → logprob: -7.1674580574035645
    5. '=D' → logprob: -7.1674580574035645
    6. '=P' → logprob: -8.167458534240723
    7. ' =' → logprob: -8.792458534240723
    8. 'A' → logprob: -14.417458534240723
    9. ' ' → logprob: -15.042458534240723
    10. '=X' → logprob: -15.542458534240723

Token 442: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02337673306465149
    2. ')
' → logprob: -3.773376703262329
    3. ' )' → logprob: -9.27337646484375
    4. ')
' → logprob: -10.64837646484375
    5. ' )
' → logprob: -11.52337646484375
    6. ')

' → logprob: -13.14837646484375
    7. '=' → logprob: -13.77337646484375
    8. '=P' → logprob: -15.77337646484375
    9. 'P' → logprob: -16.27337646484375
    10. '*' → logprob: -16.39837646484375

Token 443: '   ' (ID: 271)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03083035722374916
    2. ' y' → logprob: -3.6558303833007812
    3. '   ' → logprob: -5.405830383300781
    4. '    
' → logprob: -11.280830383300781
    5. '	y' → logprob: -12.405830383300781
    6. ' ' → logprob: -12.530830383300781
    7. '  ' → logprob: -13.530830383300781
    8. '
' → logprob: -13.655830383300781
    9. 'yb' → logprob: -14.280830383300781
    10. 'x' → logprob: -14.280830383300781

Token 444: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.0012866636971011758
    2. '   ' → logprob: -6.751286506652832
    3. ' y' → logprob: -9.251286506652832
    4. 'x' → logprob: -11.126286506652832
    5. '       ' → logprob: -13.626286506652832
    6. 'Y' → logprob: -14.001286506652832
    7. '    
' → logprob: -14.376286506652832
    8. '	y' → logprob: -14.376286506652832
    9. ' ' → logprob: -14.751286506652832
    10. 'water' → logprob: -14.751286506652832

Token 445: '_company' (ID: 77215)
  Prédit: '_company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_company' → logprob: -2.7014437364414334e-05
    2. 'Company' → logprob: -11.25002670288086
    3. '_' → logprob: -11.87502670288086
    4. 'company' → logprob: -12.25002670288086
    5. ' =' → logprob: -14.00002670288086
    6. '_comp' → logprob: -14.37502670288086
    7. '=' → logprob: -15.25002670288086
    8. '=_' → logprob: -15.50002670288086
    9. '_com' → logprob: -16.25002670288086
    10. '_class' → logprob: -16.75002670288086

Token 446: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759395360946655
    2. ' =' → logprob: -0.8259395360946655
    3. ' ' → logprob: -16.450939178466797
    4. '＝' → logprob: -16.575939178466797
    5. 'Y' → logprob: -18.950939178466797
    6. 's' → logprob: -19.325939178466797
    7. ')' → logprob: -19.700939178466797
    8. '=

' → logprob: -19.700939178466797
    9. ' ' → logprob: -19.888439178466797
    10. '	' → logprob: -19.950939178466797

Token 447: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.16022828221321106
    2. ' Y' → logprob: -1.9102282524108887
    3. ' ' → logprob: -13.160228729248047
    4. '   ' → logprob: -14.160228729248047
    5. '	Y' → logprob: -14.285228729248047
    6. '  ' → logprob: -15.535228729248047
    7. ' ' → logprob: -15.785228729248047
    8. '
' → logprob: -15.910228729248047
    9. '_Y' → logprob: -16.660228729248047
    10. 'y' → logprob: -16.660228729248047

Token 448: 'Company' (ID: 15545)
  Prédit: 'Company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Company' → logprob: -3.1424973713001236e-05
    2. 'Y' → logprob: -10.375031471252441
    3. '_company' → logprob: -16.125030517578125
    4. ' Company' → logprob: -17.500030517578125
    5. 'Class' → logprob: -17.750030517578125
    6. '_' → logprob: -18.500030517578125
    7. 'company' → logprob: -18.875030517578125
    8. '```' → logprob: -19.750030517578125
    9. '
' → logprob: -20.125030517578125
    10. 'C' → logprob: -20.625030517578125

Token 449: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -1.2664456789934775e-06
    2. '=' → logprob: -14.250000953674316
    3. 'base' → logprob: -15.375000953674316
    4. ' =' → logprob: -15.625000953674316
    5. '(' → logprob: -16.500001907348633
    6. ' base' → logprob: -16.750001907348633
    7. '(
' → logprob: -17.375001907348633
    8. ' (' → logprob: -17.750001907348633
    9. '   ' → logprob: -18.125001907348633
    10. '(b' → logprob: -18.750001907348633

Token 450: '_fee' (ID: 75685)
  Prédit: '_fee'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fee' → logprob: -2.927930654550437e-05
    2. 'fee' → logprob: -10.500029563903809
    3. '```' → logprob: -13.875029563903809
    4. '   ' → logprob: -15.750029563903809
    5. '
' → logprob: -15.875029563903809
    6. 'Fee' → logprob: -16.875028610229492
    7. '_fe' → logprob: -17.125028610229492
    8. '\' → logprob: -17.375028610229492
    9. '=' → logprob: -17.500028610229492
    10. 's' → logprob: -17.625028610229492

Token 451: '=B' (ID: 139140)
  Prédit: '=B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=B' → logprob: -0.16552776098251343
    2. '=D' → logprob: -2.165527820587158
    3. '=C' → logprob: -3.290527820587158
    4. '=' → logprob: -7.665527820587158
    5. 'B' → logprob: -9.04052734375
    6. 'D' → logprob: -11.16552734375
    7. '```' → logprob: -12.16552734375
    8. ' =' → logprob: -12.29052734375
    9. 'C' → logprob: -12.54052734375
    10. '=(' → logprob: -12.54052734375

Token 452: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026175130624324083
    2. ' ,' → logprob: -6.377617359161377
    3. ',C' → logprob: -7.127617359161377
    4. 'C' → logprob: -9.502617835998535
    5. ' C' → logprob: -11.502617835998535
    6. ')' → logprob: -12.252617835998535
    7. '   ' → logprob: -12.252617835998535
    8. ',
' → logprob: -12.502617835998535
    9. '=' → logprob: -12.502617835998535
    10. 'threshold' → logprob: -12.752617835998535

Token 453: ' threshold' (ID: 24313)
  Prédit: 'threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -0.014173968695104122
    2. ' threshold' → logprob: -4.264173984527588
    3. '   ' → logprob: -11.63917350769043
    4. ' ' → logprob: -14.26417350769043
    5. 'th' → logprob: -15.13917350769043
    6. '.threshold' → logprob: -15.63917350769043
    7. '  ' → logprob: -15.76417350769043
    8. '_threshold' → logprob: -16.01417350769043
    9. '    ' → logprob: -16.01417350769043
    10. 'reshold' → logprob: -17.01417350769043

Token 454: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -3.893480243277736e-05
    2. '=' → logprob: -11.125039100646973
    3. '=C' → logprob: -11.500039100646973
    4. '=D' → logprob: -11.750039100646973
    5. '=P' → logprob: -13.125039100646973
    6. '=_' → logprob: -13.250039100646973
    7. '_literals' → logprob: -14.500039100646973
    8. '_threshold' → logprob: -14.750039100646973
    9. '```' → logprob: -14.875039100646973
    10. '_p' → logprob: -16.125038146972656

Token 455: 'iters' (ID: 195765)
  Prédit: 'iters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iters' → logprob: -0.0003900391166098416
    2. 'ters' → logprob: -8.87539005279541
    3. 'iter' → logprob: -9.00039005279541
    4. '_l' → logprob: -10.25039005279541
    5. '_' → logprob: -11.12539005279541
    6. 'lit' → logprob: -11.25039005279541
    7. '```' → logprob: -11.37539005279541
    8. 'it' → logprob: -11.50039005279541
    9. '_iters' → logprob: -11.50039005279541
    10. '   ' → logprob: -12.25039005279541

Token 456: '=C' (ID: 93363)
  Prédit: '=C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=C' → logprob: -0.16144269704818726
    2. 'C' → logprob: -1.911442756652832
    3. '=D' → logprob: -7.286442756652832
    4. ' C' → logprob: -8.661442756652832
    5. 'D' → logprob: -8.661442756652832
    6. '	C' → logprob: -9.161442756652832
    7. '=' → logprob: -10.536442756652832
    8. '   ' → logprob: -10.911442756652832
    9. ' =' → logprob: -11.536442756652832
    10. ':C' → logprob: -12.536442756652832

Token 457: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006976616568863392
    2. ' ,' → logprob: -7.625697612762451
    3. ',D' → logprob: -8.50069808959961
    4. 'D' → logprob: -12.75069808959961
    5. ',
' → logprob: -13.37569808959961
    6. '   ' → logprob: -13.87569808959961
    7. ')' → logprob: -15.12569808959961
    8. ' D' → logprob: -15.87569808959961
    9. '=D' → logprob: -16.62569808959961
    10. ',P' → logprob: -16.75069808959961

Token 458: ' additional' (ID: 6623)
  Prédit: 'additional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'additional' → logprob: -0.035862334072589874
    2. ' additional' → logprob: -3.410862445831299
    3. 'D' → logprob: -6.160862445831299
    4. ' D' → logprob: -9.66086196899414
    5. '   ' → logprob: -10.91086196899414
    6. ' ' → logprob: -11.66086196899414
    7. 'Additional' → logprob: -12.41086196899414
    8. '  ' → logprob: -13.16086196899414
    9. '.additional' → logprob: -13.41086196899414
    10. '
' → logprob: -13.91086196899414

Token 459: '_fee' (ID: 75685)
  Prédit: '_fee'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fee' → logprob: -4.537180211627856e-05
    2. 'fee' → logprob: -10.375045776367188
    3. '_f' → logprob: -12.000045776367188
    4. '_per' → logprob: -13.000045776367188
    5. '_fe' → logprob: -13.750045776367188
    6. '```' → logprob: -13.750045776367188
    7. '_' → logprob: -14.250045776367188
    8. '_l' → logprob: -14.375045776367188
    9. '=_' → logprob: -14.375045776367188
    10. '_rate' → logprob: -15.125045776367188

Token 460: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -7.004696090007201e-05
    2. '=D' → logprob: -10.250069618225098
    3. 'per' → logprob: -10.500069618225098
    4. '=' → logprob: -12.500069618225098
    5. '=P' → logprob: -13.125069618225098
    6. 'Per' → logprob: -14.375069618225098
    7. 'P' → logprob: -14.875069618225098
    8. 's' → logprob: -15.625069618225098
    9. 'D' → logprob: -16.125070571899414
    10. '_rate' → logprob: -17.250070571899414

Token 461: '_l' (ID: 1478)
  Prédit: 'liter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liter' → logprob: -0.04934540018439293
    2. '_l' → logprob: -3.0493454933166504
    3. ' liter' → logprob: -8.424345016479492
    4. 'l' → logprob: -8.424345016479492
    5. 'lit' → logprob: -8.424345016479492
    6. 'iter' → logprob: -9.549345016479492
    7. 'Liter' → logprob: -11.299345016479492
    8. '-liter' → logprob: -11.924345016479492
    9. '```' → logprob: -13.049345016479492
    10. 'literal' → logprob: -13.174345016479492

Token 462: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.010591447353363037
    2. 'ter' → logprob: -4.760591506958008
    3. 'er' → logprob: -6.385591506958008
    4. 'P' → logprob: -9.010591506958008
    5. 'per' → logprob: -10.260591506958008
    6. 'liter' → logprob: -10.510591506958008
    7. 'it' → logprob: -10.760591506958008
    8. '_iter' → logprob: -10.885591506958008
    9. '   ' → logprob: -12.260591506958008
    10. 'iters' → logprob: -12.385591506958008

Token 463: '=D' (ID: 128772)
  Prédit: '=D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=D' → logprob: -0.00045426786527968943
    2. 'D' → logprob: -7.875454425811768
    3. '=' → logprob: -9.62545394897461
    4. ' D' → logprob: -12.25045394897461
    5. '=B' → logprob: -13.87545394897461
    6. ')' → logprob: -15.00045394897461
    7. '=P' → logprob: -15.00045394897461
    8. ' =' → logprob: -15.25045394897461
    9. '(D' → logprob: -15.50045394897461
    10. '   ' → logprob: -15.62545394897461

Token 464: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01623154804110527
    2. ')
' → logprob: -4.141231536865234
    3. ')

' → logprob: -8.891231536865234
    4. ')
' → logprob: -10.016231536865234
    5. '   ' → logprob: -11.891231536865234
    6. ' )' → logprob: -12.391231536865234
    7. ',' → logprob: -13.391231536865234
    8. '       ' → logprob: -14.016231536865234
    9. ')

' → logprob: -14.891231536865234
    10. ' )
' → logprob: -15.266231536865234

Token 465: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2815852761268616
    2. 'usage' → logprob: -1.6565852165222168
    3. ' usage' → logprob: -3.656585216522217
    4. ' water' → logprob: -4.031585216522217
    5. 'water' → logprob: -4.531585216522217
    6. '```' → logprob: -9.156585693359375
    7. 'rate' → logprob: -10.031585693359375
    8. ' ' → logprob: -10.281585693359375
    9. '    
' → logprob: -10.531585693359375
    10. ' rate' → logprob: -11.031585693359375

Token 466: ' usage' (ID: 16622)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' (adapté à ' usage') → logprob: -0.013247409835457802
    2. 'water' → logprob: -4.388247489929199
    3. ' usage' → logprob: -8.0132474899292
    4. '   ' → logprob: -8.1382474899292
    5. ' water' → logprob: -9.3882474899292
    6. 'rate' → logprob: -10.8882474899292
    7. ' ' → logprob: -12.8882474899292
    8. '```' → logprob: -13.1382474899292
    9. '       ' → logprob: -13.7632474899292
    10. '    
' → logprob: -14.1382474899292

Token 467: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759668350219727
    2. ' =' → logprob: -0.8259668350219727
    3. '_usage' → logprob: -11.075966835021973
    4. '_water' → logprob: -11.825966835021973
    5. '_' → logprob: -12.825966835021973
    6. ' ' → logprob: -13.575966835021973
    7. '_l' → logprob: -15.075966835021973
    8. '_=' → logprob: -16.325965881347656
    9. '```' → logprob: -16.700965881347656
    10. 'usage' → logprob: -16.700965881347656

Token 468: ' Water' (ID: 12303)
  Prédit: 'Water'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Water' → logprob: -7.493430894101039e-05
    2. ' Water' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.62507438659668
    4. 'W' → logprob: -19.12507438659668
    5. 'Wat' → logprob: -19.75007438659668
    6. ' ' → logprob: -21.87507438659668
    7. '  ' → logprob: -22.25007438659668
    8. 'water' → logprob: -22.87507438659668
    9. 'Wood' → logprob: -23.00007438659668
    10. ' water' → logprob: -23.12507438659668

Token 469: 'Usage' (ID: 23029)
  Prédit: 'Usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Usage' → logprob: -3.7697225252486533e-06
    2. 'Water' → logprob: -12.750003814697266
    3. 'usage' → logprob: -14.250003814697266
    4. 'Rate' → logprob: -17.250003814697266
    5. ' usage' → logprob: -17.250003814697266
    6. '_usage' → logprob: -17.750003814697266
    7. ' Usage' → logprob: -18.000003814697266
    8. 'Use' → logprob: -18.000003814697266
    9. '_USAGE' → logprob: -19.625003814697266
    10. '```' → logprob: -19.875003814697266

Token 470: '(' (ID: 7)
  Prédit: '(P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.005270515102893114
    2. '(' → logprob: -5.255270481109619
    3. 'usage' → logprob: -10.380270957946777
    4. 'P' → logprob: -12.130270957946777
    5. '(p' → logprob: -15.880270957946777
    6. '(int' → logprob: -17.00527000427246
    7. '(us' → logprob: -17.25527000427246
    8. '((' → logprob: -17.50527000427246
    9. '(rate' → logprob: -17.88027000427246
    10. '(
' → logprob: -18.13027000427246

Token 471: 'usage' (ID: 25871)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -4.961759259458631e-06
    2. ' P' → logprob: -12.375004768371582
    3. '   ' → logprob: -15.125004768371582
    4. ')' → logprob: -16.2500057220459
    5. '(P' → logprob: -16.5000057220459
    6. ' ' → logprob: -16.7500057220459
    7. 'usage' → logprob: -17.0000057220459
    8. '       ' → logprob: -17.0000057220459
    9. '
' → logprob: -17.3750057220459
    10. '           ' → logprob: -18.2500057220459

Token 472: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.0010448360117152333
    2. '=P' → logprob: -7.001044750213623
    3. 'P' → logprob: -10.251045227050781
    4. '(P' → logprob: -10.501045227050781
    5. '=' → logprob: -10.751045227050781
    6. 'lit' → logprob: -11.001045227050781
    7. '_literals' → logprob: -11.376045227050781
    8. 'Lit' → logprob: -11.626045227050781
    9. 'l' → logprob: -12.876045227050781
    10. '_p' → logprob: -13.126045227050781

Token 473: 'iters' (ID: 195765)
  Prédit: 'iters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iters' → logprob: -0.0004926258116029203
    2. 'ters' → logprob: -8.125493049621582
    3. '_l' → logprob: -10.000493049621582
    4. 'it' → logprob: -10.125493049621582
    5. 'ers' → logprob: -10.500493049621582
    6. '_' → logprob: -10.500493049621582
    7. 'P' → logprob: -11.250493049621582
    8. '_p' → logprob: -11.875493049621582
    9. 'its' → logprob: -12.000493049621582
    10. 'iter' → logprob: -12.125493049621582

Token 474: '=P' (ID: 178839)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.003150980919599533
    2. '(P' → logprob: -6.378150939941406
    3. ' P' → logprob: -6.628150939941406
    4. '=P' → logprob: -9.128150939941406
    5. ')' → logprob: -12.003150939941406
    6. '   ' → logprob: -12.378150939941406
    7. '=' → logprob: -12.628150939941406
    8. ' ' → logprob: -13.878150939941406
    9. '(' → logprob: -14.253150939941406
    10. ')
' → logprob: -14.628150939941406

Token 475: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014267869293689728
    2. ')
' → logprob: -4.264267921447754
    3. '   ' → logprob: -9.264267921447754
    4. ')
' → logprob: -12.264267921447754
    5. ')

' → logprob: -12.764267921447754
    6. ' )' → logprob: -13.264267921447754
    7. ' )
' → logprob: -15.889267921447754
    8. ' ' → logprob: -17.514266967773438
    9. '))' → logprob: -18.264266967773438
    10. '       ' → logprob: -18.264266967773438

Token 476: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7842403650283813
    2. 'selector' → logprob: -1.2842403650283813
    3. ' selector' → logprob: -1.4092403650283813
    4. 'rate' → logprob: -4.284240245819092
    5. ' rate' → logprob: -4.909240245819092
    6. ' water' → logprob: -8.15924072265625
    7. '
' → logprob: -8.65924072265625
    8. 'selectors' → logprob: -8.90924072265625
    9. 'water' → logprob: -9.03424072265625
    10. ' selectors' → logprob: -9.15924072265625

Token 477: ' selector' (ID: 19970)
  Prédit: 'selector'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'selector' (adapté à ' selector') → logprob: -0.024312611669301987
    2. ' selector' → logprob: -3.7743124961853027
    3. 'rate' → logprob: -6.899312496185303
    4. ' rate' → logprob: -10.524312973022461
    5. 'selectors' → logprob: -11.649312973022461
    6. 'water' → logprob: -12.149312973022461
    7. 'select' → logprob: -12.524312973022461
    8. 'companies' → logprob: -12.649312973022461
    9. 'rates' → logprob: -13.149312973022461
    10. '   ' → logprob: -13.524312973022461

Token 478: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141343772411346
    2. '=' → logprob: -1.7014133930206299
    3. ' ' → logprob: -16.951414108276367
    4. ')' → logprob: -17.201414108276367
    5. '.' → logprob: -17.451414108276367
    6. ' =
' → logprob: -17.826414108276367
    7. '   ' → logprob: -18.451414108276367
    8. '_' → logprob: -18.576414108276367
    9. '＝' → logprob: -18.826414108276367
    10. 's' → logprob: -19.076414108276367

Token 479: ' Water' (ID: 12303)
  Prédit: 'Water'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Water' → logprob: -0.004078639671206474
    2. ' Water' → logprob: -5.5040788650512695
    3. '   ' → logprob: -15.12907886505127
    4. '    ' → logprob: -20.379077911376953
    5. ' water' → logprob: -20.879077911376953
    6. '_water' → logprob: -22.004077911376953
    7. ' ' → logprob: -22.129077911376953
    8. '  ' → logprob: -23.254077911376953
    9. 'Wat' → logprob: -23.629077911376953
    10. 'water' → logprob: -23.754077911376953

Token 480: 'Rate' (ID: 11613)
  Prédit: 'Rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rate' → logprob: -1.9361264946837764e-07
    2. 'rate' → logprob: -16.125
    3. '_rate' → logprob: -17.875
    4. ' Rate' → logprob: -18.5
    5. 'ate' → logprob: -19.5
    6. 'Rates' → logprob: -19.5
    7. 'Water' → logprob: -19.875
    8. '   ' → logprob: -20.125
    9. 'RATE' → logprob: -20.125
    10. 'Selector' → logprob: -20.375

Token 481: 'Selector' (ID: 8011)
  Prédit: 'Selector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Selector' → logprob: -1.9361264946837764e-07
    2. 'selector' → logprob: -16.0
    3. 'Select' → logprob: -16.875
    4. '_SELECTOR' → logprob: -18.5
    5. '_selector' → logprob: -18.625
    6. ' Selector' → logprob: -19.5
    7. 'SELECT' → logprob: -19.875
    8. 'Sel' → logprob: -20.0
    9. 'Sele' → logprob: -20.25
    10. ' selector' → logprob: -21.125

Token 482: '(comp' (ID: 60272)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.31350526213645935
    2. '(comp' → logprob: -1.3135052919387817
    3. '   ' → logprob: -9.313505172729492
    4. '(company' → logprob: -9.313505172729492
    5. '(
' → logprob: -10.938505172729492
    6. '[' → logprob: -10.938505172729492
    7. '((' → logprob: -11.938505172729492
    8. 'comp' → logprob: -12.563505172729492
    9. '```' → logprob: -12.688505172729492
    10. '(' → logprob: -12.813505172729492

Token 483: 'anies' (ID: 22313)
  Prédit: 'anies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anies' → logprob: -0.0001984146365430206
    2. 'any' → logprob: -8.875198364257812
    3. 'an' → logprob: -10.625198364257812
    4. '[' → logprob: -11.000198364257812
    5. '   ' → logprob: -11.625198364257812
    6. '([' → logprob: -12.125198364257812
    7. '(' → logprob: -13.750198364257812
    8. 'on' → logprob: -14.375198364257812
    9. '       ' → logprob: -14.875198364257812
    10. 'anie' → logprob: -15.250198364257812

Token 484: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -5.466968650580384e-05
    2. '[' → logprob: -10.875054359436035
    3. '   ' → logprob: -11.125054359436035
    4. '=' → logprob: -11.625054359436035
    5. '=[
' → logprob: -12.000054359436035
    6. ' =[' → logprob: -13.250054359436035
    7. '       ' → logprob: -13.500054359436035
    8. '([' → logprob: -13.500054359436035
    9. ' =' → logprob: -14.125054359436035
    10. '=(' → logprob: -15.750054359436035

Token 485: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.704273118884885e-07
    2. ' x' → logprob: -14.375000953674316
    3. '   ' → logprob: -17.0
    4. '
' → logprob: -21.125
    5. '	x' → logprob: -21.375
    6. '(x' → logprob: -21.625
    7. '```' → logprob: -22.125
    8. ')x' → logprob: -22.75
    9. '       ' → logprob: -23.625
    10. '"x' → logprob: -23.625

Token 486: '_company' (ID: 77215)
  Prédit: '_company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_company' → logprob: -3.128163257315464e-07
    2. '_comp' → logprob: -15.25
    3. 'company' → logprob: -17.375
    4. '_' → logprob: -18.875
    5. '_com' → logprob: -18.875
    6. 'x' → logprob: -19.25
    7. 'Company' → logprob: -19.375
    8. '\' → logprob: -20.0
    9. '_country' → logprob: -21.375
    10. '_city' → logprob: -21.5

Token 487: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028536133468151093
    2. ',y' → logprob: -5.8778533935546875
    3. ' ,' → logprob: -10.002853393554688
    4. ',
' → logprob: -12.877853393554688
    5. 'y' → logprob: -14.377853393554688
    6. ',Y' → logprob: -16.377853393554688
    7. ',x' → logprob: -16.377853393554688
    8. ',user' → logprob: -17.502853393554688
    9. '‌,' → logprob: -17.627853393554688
    10. ',w' → logprob: -17.627853393554688

Token 488: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5759397745132446
    2. ' y' → logprob: -0.8259397745132446
    3. '	y' → logprob: -14.950940132141113
    4. ' ' → logprob: -17.825939178466797
    5. '   ' → logprob: -18.200939178466797
    6. ' ' → logprob: -18.575939178466797
    7. '    ' → logprob: -18.825939178466797
    8. ''y' → logprob: -19.450939178466797
    9. '       ' → logprob: -20.200939178466797
    10. ')y' → logprob: -20.450939178466797

Token 489: '_company' (ID: 77215)
  Prédit: '_company'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_company' → logprob: -3.5358694731257856e-05
    2. 'Company' → logprob: -10.750035285949707
    3. 'company' → logprob: -11.875035285949707
    4. 'y' → logprob: -12.125035285949707
    5. '_comp' → logprob: -14.250035285949707
    6. ',' → logprob: -14.750035285949707
    7. '_y' → logprob: -16.500036239624023
    8. '_com' → logprob: -16.750036239624023
    9. ',y' → logprob: -16.750036239624023
    10. '-company' → logprob: -16.750036239624023

Token 490: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00014001218369230628
    2. ',' → logprob: -9.000140190124512
    3. ' ],' → logprob: -11.125140190124512
    4. '       ' → logprob: -14.125140190124512
    5. '   ' → logprob: -14.625140190124512
    6. '],
' → logprob: -14.625140190124512
    7. ']' → logprob: -16.500139236450195
    8. '           ' → logprob: -17.625139236450195
    9. ''],' → logprob: -18.250139236450195
    10. ' ,' → logprob: -18.500139236450195

Token 491: ' usage' (ID: 16622)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.006716317031532526
    2. ' usage' → logprob: -5.006716251373291
    3. '   ' → logprob: -13.88171672821045
    4. '       ' → logprob: -17.256715774536133
    5. ' ' → logprob: -17.506715774536133
    6. '     ' → logprob: -17.881715774536133
    7. '    ' → logprob: -18.131715774536133
    8. '  ' → logprob: -18.256715774536133
    9. '      ' → logprob: -19.756715774536133
    10. '           ' → logprob: -20.256715774536133

Token 492: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018176397308707237
    2. ')' → logprob: -4.018176555633545
    3. 'usage' → logprob: -11.643176078796387
    4. '))' → logprob: -11.768176078796387
    5. ')=' → logprob: -11.768176078796387
    6. ')
' → logprob: -14.893176078796387
    7. '),' → logprob: -15.143176078796387
    8. ');' → logprob: -15.268176078796387
    9. '(' → logprob: -15.393176078796387
    10. ')]' → logprob: -15.768176078796387

Token 493: 'usage' (ID: 25871)
  Prédit: 'usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -2.7610454708337784e-05
    2. ' usage' → logprob: -10.500027656555176
    3. '   ' → logprob: -19.75002670288086
    4. 'Usage' → logprob: -20.25002670288086
    5. ' ' → logprob: -21.25002670288086
    6. '
' → logprob: -21.37502670288086
    7. '_usage' → logprob: -21.37502670288086
    8. '  ' → logprob: -22.62502670288086
    9. 'use' → logprob: -22.75002670288086
    10. '       ' → logprob: -23.50002670288086

Token 494: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3869408369064331
    2. ')
' → logprob: -1.136940836906433
    3. '   ' → logprob: -10.261940956115723
    4. ')
' → logprob: -10.636940956115723
    5. ')

' → logprob: -11.636940956115723
    6. ').' → logprob: -13.886940956115723
    7. ' ' → logprob: -14.886940956115723
    8. ' )
' → logprob: -15.261940956115723
    9. '       ' → logprob: -15.886940956115723
    10. ' )' → logprob: -16.011940002441406

Token 495: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6937985420227051
    2. 'print' → logprob: -0.6937985420227051
    3. 'result' → logprob: -7.568798542022705
    4. ' print' → logprob: -9.443798065185547
    5. 'fee' → logprob: -10.318798065185547
    6. 'minimum' → logprob: -11.443798065185547
    7. 'price' → logprob: -12.443798065185547
    8. 'min' → logprob: -13.193798065185547
    9. '```' → logprob: -13.318798065185547
    10. '	print' → logprob: -13.693798065185547

Token 496: ' min' (ID: 1349)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.013472664169967175
    2. 'minimum' → logprob: -4.513472557067871
    3. 'min' (adapté à ' min') → logprob: -6.513472557067871
    4. 'result' → logprob: -7.513472557067871
    5. 'fee' → logprob: -7.888472557067871
    6. '   ' → logprob: -11.638472557067871
    7. ' print' → logprob: -12.513472557067871
    8. 'minimal' → logprob: -13.138472557067871
    9. 'total' → logprob: -13.763472557067871
    10. ' minimum' → logprob: -14.013472557067871

Token 497: '_fee' (ID: 75685)
  Prédit: '_fee'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fee' → logprob: -8.566264295950532e-05
    2. 'imum' → logprob: -10.375085830688477
    3. 'fee' → logprob: -10.750085830688477
    4. '_price' → logprob: -10.875085830688477
    5. '_cost' → logprob: -11.500085830688477
    6. '_payment' → logprob: -13.125085830688477
    7. '_rate' → logprob: -14.375085830688477
    8. '_amount' → logprob: -14.875085830688477
    9. '_' → logprob: -15.000085830688477
    10. ' fee' → logprob: -15.750085830688477

Token 498: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061967797577381134
    2. '=' → logprob: -2.8119678497314453
    3. '   ' → logprob: -17.186967849731445
    4. ' ' → logprob: -17.311967849731445
    5. ' ' → logprob: -17.311967849731445
    6. '.' → logprob: -17.561967849731445
    7. '_' → logprob: -17.811967849731445
    8. 's' → logprob: -18.061967849731445
    9. '()' → logprob: -18.311967849731445
    10. ':' → logprob: -18.436967849731445

Token 499: ' selector' (ID: 19970)
  Prédit: 'selector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'selector' → logprob: -0.0015024791937321424
    2. ' selector' → logprob: -6.501502513885498
    3. '   ' → logprob: -17.376502990722656
    4. '(selector' → logprob: -17.376502990722656
    5. 'select' → logprob: -17.626502990722656
    6. 'sel' → logprob: -19.626502990722656
    7. '.selector' → logprob: -20.001502990722656
    8. 'setter' → logprob: -20.626502990722656
    9. '_selector' → logprob: -20.751502990722656
    10. 'selection' → logprob: -21.001502990722656

Token 500: '.select' (ID: 14997)
  Prédit: '.select'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.select' → logprob: -7.362307223957032e-05
    2. '.' → logprob: -9.875073432922363
    3. 'select' → logprob: -10.750073432922363
    4. ' .' → logprob: -14.500073432922363
    5. '<select' → logprob: -18.25007438659668
    6. '.choose' → logprob: -18.25007438659668
    7. '_select' → logprob: -18.62507438659668
    8. '.Select' → logprob: -19.12507438659668
    9. '.calculate' → logprob: -19.25007438659668
    10. '.selected' → logprob: -19.37507438659668

Token 501: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -1.6240566083070007e-06
    2. 'min' → logprob: -14.250001907348633
    3. 'minimum' → logprob: -14.500001907348633
    4. 'imum' → logprob: -15.125001907348633
    5. '_max' → logprob: -16.250001907348633
    6. 'ion' → logprob: -18.250001907348633
    7. '_m' → logprob: -18.375001907348633
    8. '_' → logprob: -18.500001907348633
    9. ' minimum' → logprob: -20.250001907348633
    10. '_
' → logprob: -20.500001907348633

Token 502: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.0007314971298910677
    2. 'um' → logprob: -7.250731468200684
    3. 'mum' → logprob: -11.625731468200684
    4. 'im' → logprob: -12.000731468200684
    5. 'ium' → logprob: -12.250731468200684
    6. 'inum' → logprob: -14.375731468200684
    7. '_' → logprob: -14.500731468200684
    8. 'IMUM' → logprob: -15.500731468200684
    9. '```' → logprob: -16.500732421875
    10. 'mium' → logprob: -16.875732421875

Token 503: '_fee' (ID: 75685)
  Prédit: '_fee'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fee' → logprob: -4.320199877838604e-07
    2. 'fee' → logprob: -15.5
    3. '_fe' → logprob: -16.625
    4. '_' → logprob: -17.0
    5. '```' → logprob: -18.0
    6. ' fee' → logprob: -18.5
    7. '_cost' → logprob: -18.75
    8. '\' → logprob: -19.25
    9. '_feed' → logprob: -20.0
    10. '_rate' → logprob: -20.125

Token 504: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015158153837546706
    2. 'print' → logprob: -6.501515865325928
    3. '
' → logprob: -11.75151538848877
    4. ' print' → logprob: -12.50151538848877
    5. '    
' → logprob: -13.37651538848877
    6. '```' → logprob: -15.75151538848877
    7. '<|end|>' → logprob: -16.001516342163086
    8. '	print' → logprob: -16.501516342163086
    9. '       ' → logprob: -17.251516342163086
    10. '(print' → logprob: -18.001516342163086

Token 505: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47408992052078247
    2. 'print' → logprob: -0.9740899205207825
    3. ' print' → logprob: -11.599089622497559
    4. '```' → logprob: -12.724089622497559
    5. '    
' → logprob: -15.099089622497559
    6. '	print' → logprob: -15.224089622497559
    7. '
' → logprob: -15.474089622497559
    8. 'return' → logprob: -16.474090576171875
    9. '       ' → logprob: -17.474090576171875
    10. '(print' → logprob: -19.099090576171875

Token 506: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03804321587085724
    2. '   ' → logprob: -3.288043260574341
    3. ' print' → logprob: -13.413043022155762
    4. '```' → logprob: -15.538043022155762
    5. '	print' → logprob: -16.913043975830078
    6. '
' → logprob: -18.288043975830078
    7. '    
' → logprob: -18.913043975830078
    8. '       ' → logprob: -21.163043975830078
    9. '``' → logprob: -21.538043975830078
    10. '`' → logprob: -21.663043975830078

Token 507: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.00026169343618676066
    2. '(' → logprob: -8.250261306762695
    3. '(f' → logprob: -14.875261306762695
    4. '(
' → logprob: -19.750261306762695
    5. '(max' → logprob: -20.125261306762695
    6. '()' → logprob: -20.375261306762695
    7. ' (' → logprob: -20.875261306762695
    8. '(M' → logprob: -21.500261306762695
    9. 'min' → logprob: -21.625261306762695
    10. '(m' → logprob: -22.000261306762695

Token 508: '_fee' (ID: 75685)
  Prédit: '_fee'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fee' → logprob: -2.816093228830141e-06
    2. '_fe' → logprob: -13.12500286102295
    3. '(_' → logprob: -15.12500286102295
    4. '(min' → logprob: -15.75000286102295
    5. 'fee' → logprob: -16.125001907348633
    6. '_f' → logprob: -16.375001907348633
    7. '\' → logprob: -17.375001907348633
    8. '_' → logprob: -17.625001907348633
    9. ' fee' → logprob: -18.000001907348633
    10. '_floor' → logprob: -18.000001907348633

Token 509: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -14.375000953674316
    3. ' )' → logprob: -17.125
    4. '())' → logprob: -17.375
    5. '()' → logprob: -18.5
    6. ')`' → logprob: -19.25
    7. '))' → logprob: -20.375
    8. '")' → logprob: -20.75
    9. '```' → logprob: -21.0
    10. '}' → logprob: -21.0

Token 510: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -8.895480277715251e-06
    2. ' if' → logprob: -11.875008583068848
    3. '```' → logprob: -13.750008583068848
    4. '<|end|>' → logprob: -14.625008583068848
    5. '
' → logprob: -15.875008583068848
    6. '#' → logprob: -16.250009536743164
    7. '\' → logprob: -17.250009536743164
    8. 'If' → logprob: -17.500009536743164
    9. '	if' → logprob: -18.750009536743164
    10. 'main' → logprob: -18.875009536743164

Token 511: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0789082944393158
    2. '__' → logprob: -2.5789082050323486
    3. '_name' → logprob: -11.45390796661377
    4. 'name' → logprob: -12.20390796661377
    5. '___' → logprob: -13.45390796661377
    6. '_' → logprob: -14.57890796661377
    7. ' ' → logprob: -14.95390796661377
    8. ' "__' → logprob: -15.20390796661377
    9. ' name' → logprob: -15.45390796661377
    10. '```' → logprob: -17.203908920288086

Token 512: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04723503440618515
    2. ' ==' → logprob: -3.4222350120544434
    3. ' __' → logprob: -4.672235012054443
    4. '==' → logprob: -5.672235012054443
    5. 'name' → logprob: -7.797235012054443
    6. '.__' → logprob: -8.422235488891602
    7. 'if' → logprob: -10.672235488891602
    8. '=="' → logprob: -11.547235488891602
    9. '__.__' → logprob: -11.672235488891602
    10. '```' → logprob: -11.922235488891602

Token 513: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.3425219549390022e-05
    2. '==' → logprob: -11.50001335144043
    3. '__.__' → logprob: -13.00001335144043
    4. ' ==' → logprob: -14.50001335144043
    5. '____' → logprob: -16.12501335144043
    6. '___' → logprob: -16.37501335144043
    7. '__.' → logprob: -16.50001335144043
    8. '=="' → logprob: -17.00001335144043
    9. '_' → logprob: -17.12501335144043
    10. '__('' → logprob: -17.62501335144043

Token 514: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07742682099342346
    2. '==' → logprob: -2.9524269104003906
    3. ' ==' → logprob: -3.8274269104003906
    4. '=="' → logprob: -7.577426910400391
    5. '__.__' → logprob: -11.95242691040039
    6. '=='' → logprob: -13.45242691040039
    7. '_' → logprob: -13.70242691040039
    8. '___' → logprob: -14.07742691040039
    9. '__":
' → logprob: -14.20242691040039
    10. '===' → logprob: -14.32742691040039

Token 515: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0024987291544675827
    2. ''' → logprob: -6.002498626708984
    3. ' "__' → logprob: -10.752498626708984
    4. '__' → logprob: -13.502498626708984
    5. '"name' → logprob: -16.752498626708984
    6. ' '__' → logprob: -16.877498626708984
    7. '"user' → logprob: -17.127498626708984
    8. ''"' → logprob: -17.127498626708984
    9. '("__' → logprob: -18.002498626708984
    10. '"class' → logprob: -18.127498626708984

Token 516: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.048625290393829346
    2. '__' → logprob: -3.0486252307891846
    3. '"' → logprob: -10.298624992370605
    4. 'name' → logprob: -13.048624992370605
    5. ''' → logprob: -14.673624992370605
    6. '__":
' → logprob: -14.673624992370605
    7. '_main' → logprob: -14.798624992370605
    8. ' main' → logprob: -15.548624992370605
    9. 'python' → logprob: -15.673624992370605
    10. 'built' → logprob: -16.298625946044922

Token 517: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.20156876742839813
    2. '__' → logprob: -1.7015687227249146
    3. '__':
' → logprob: -8.826568603515625
    4. '__.' → logprob: -12.201568603515625
    5. '__.__' → logprob: -13.576568603515625
    6. '__["' → logprob: -13.576568603515625
    7. '__
' → logprob: -14.826568603515625
    8. '__",' → logprob: -15.451568603515625
    9. '_' → logprob: -15.576568603515625
    10. '__:' → logprob: -15.701568603515625

Token 518: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0020351072307676077
    2. '__' → logprob: -6.502035140991211
    3. ' main' → logprob: -7.627035140991211
    4. '"' → logprob: -10.252035140991211
    5. '   ' → logprob: -12.127035140991211
    6. '	main' → logprob: -12.877035140991211
    7. '_main' → logprob: -13.752035140991211
    8. ' __' → logprob: -14.752035140991211
    9. ''' → logprob: -15.002035140991211
    10. '____' → logprob: -15.627035140991211

Token 519: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.5
    3. '	main' → logprob: -22.25
    4. '   ' → logprob: -23.25
    5. 'import' → logprob: -24.75
    6. '.main' → logprob: -25.875
    7. '(main' → logprob: -26.625
    8. '
' → logprob: -27.375
    9. '_main' → logprob: -27.75
    10. '```' → logprob: -28.0

Token 520: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 518
Tokens correctement prédits (1ère position, stricte): 317
Tokens correctement prédits (1ère position, avec adaptation): 341
Tokens correctement prédits (top 10): 489
Précision stricte (1ère position): 61.20%
Précision adaptée (1ère position): 65.83%
Précision (top 10): 94.40%
================================================================================
