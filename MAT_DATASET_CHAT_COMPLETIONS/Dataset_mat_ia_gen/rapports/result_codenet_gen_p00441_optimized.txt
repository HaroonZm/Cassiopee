================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:13:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

input = sys.stdin.readline

def max_square_area(points):
    pts = list(points)
    point_set = set(points)
    n = len(pts)
    max_area = 0
    # Pour chaque paire de points, déterminer les points qui complètent un carré
    for i in range(n):
        x1, y1 = pts[i]
        for j in range(i+1, n):
            x2, y2 = pts[j]
            dx = x2 - x1
            dy = y2 - y1
            # Les deux autres points possibles pour former un carré
            p3 = (x1 - dy, y1 + dx)
            p4 = (x2 - dy, y2 + dx)
            if p3 in point_set and p4 in point_set:
                area = dx*dx + dy*dy
                if area > max_area:
                    max_area = area
            p3 = (x1 + dy, y1 - dx)
            p4 = (x2 + dy, y2 - dx)
            if p3 in point_set and p4 in point_set:
                area = dx*dx + dy*dy
                if area > max_area:
                    max_area = area
    return max_area

while True:
    n = int(input())
    if n == 0:
        break
    points = set()
    for _ in range(n):
        x,y = map(int,input().split())
        points.add((x,y))
    res = max_square_area(points)
    print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0007114782347343862
    2. 'os' → logprob: -7.250711441040039
    3. ' math' → logprob: -14.250711441040039
    4. ' re' → logprob: -15.000711441040039
    5. '"os' → logprob: -15.250711441040039
    6. ' json' → logprob: -16.37571144104004
    7. '_os' → logprob: -16.37571144104004
    8. '	os' → logprob: -17.25071144104004
    9. ' io' → logprob: -18.12571144104004
    10. ' ' → logprob: -18.62571144104004

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1594877541065216
    2. '\n' → logprob: -3.034487724304199
    3. 'import' → logprob: -3.284487724304199
    4. '\' → logprob: -3.909487724304199
    5. '
' → logprob: -4.284487724304199
    6. '```' → logprob: -4.659487724304199
    7. '<|end|>' → logprob: -5.159487724304199
    8. '

' → logprob: -5.409487724304199
    9. ',' → logprob: -6.159487724304199
    10. '.
' → logprob: -6.534487724304199

Token 6: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0305110216140747
    2. '\' → logprob: -1.6555110216140747
    3. 'import' → logprob: -1.9055110216140747
    4. '.' → logprob: -1.9055110216140747
    5. '```' → logprob: -2.655510902404785
    6. 'def' → logprob: -3.405510902404785
    7. '
' → logprob: -4.030510902404785
    8. ',' → logprob: -4.655510902404785
    9. '<|end|>' → logprob: -5.405510902404785
    10. '#' → logprob: -5.405510902404785

Token 7: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20192955434322357
    2. '.' → logprob: -1.7019295692443848
    3. '_' → logprob: -9.076929092407227
    4. '(
' → logprob: -9.076929092407227
    5. ')' → logprob: -9.451929092407227
    6. ',' → logprob: -10.076929092407227
    7. '()' → logprob: -10.326929092407227
    8. '=' → logprob: -10.701929092407227
    9. ' (' → logprob: -11.201929092407227
    10. '(.)' → logprob: -11.326929092407227

Token 8: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.13701333105564117
    2. ' input' → logprob: -2.6370134353637695
    3. 'sys' → logprob: -3.2620134353637695
    4. 'input' → logprob: -4.0120134353637695
    5. '=sys' → logprob: -10.76201343536377
    6. ' ' → logprob: -11.26201343536377
    7. '	sys' → logprob: -12.13701343536377
    8. '(sys' → logprob: -12.51201343536377
    9. ' raw' → logprob: -12.88701343536377
    10. ' lambda' → logprob: -13.01201343536377

Token 9: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.028436392545700073
    2. '.stdin' → logprob: -3.6534364223480225
    3. ' .' → logprob: -7.653436183929443
    4. '.input' → logprob: -7.778436183929443
    5. '.argv' → logprob: -7.903436183929443
    6. '.stdout' → logprob: -8.153436660766602
    7. '.readline' → logprob: -8.528436660766602
    8. '.import' → logprob: -8.903436660766602
    9. '.exit' → logprob: -9.153436660766602
    10. '.path' → logprob: -9.778436660766602

Token 10: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.35391610860824585
    2. '.' → logprob: -1.2289161682128906
    3. '.read' → logprob: -5.228916168212891
    4. '.Read' → logprob: -10.60391616821289
    5. '.readlines' → logprob: -10.72891616821289
    6. 'read' → logprob: -11.22891616821289
    7. '<|end|>' → logprob: -12.10391616821289
    8. '.READ' → logprob: -12.22891616821289
    9. '```' → logprob: -12.22891616821289
    10. ')' → logprob: -12.72891616821289

Token 11: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06448341906070709
    2. '(' → logprob: -2.814483404159546
    3. '()
' → logprob: -7.064483642578125
    4. '().' → logprob: -7.189483642578125
    5. '(
' → logprob: -7.814483642578125
    6. '()\' → logprob: -8.564483642578125
    7. '()

' → logprob: -9.814483642578125
    8. ')' → logprob: -9.939483642578125
    9. '
' → logprob: -10.189483642578125
    10. '\' → logprob: -10.814483642578125

Token 12: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20349201560020447
    2. 'def' → logprob: -1.7034920454025269
    3. 'for' → logprob: -6.828492164611816
    4. 'N' → logprob: -8.203492164611816
    5. 't' → logprob: -8.703492164611816
    6. '(' → logprob: -9.328492164611816
    7. '(n' → logprob: -9.328492164611816
    8. 'num' → logprob: -9.328492164611816
    9. 'a' → logprob: -9.453492164611816
    10. 'data' → logprob: -9.953492164611816

Token 13: ' max' (ID: 2999)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.9930425882339478
    2. ' calculate' → logprob: -1.3680425882339478
    3. ' solve' → logprob: -1.9930425882339478
    4. ' ' → logprob: -2.243042469024658
    5. ' factorial' → logprob: -2.243042469024658
    6. ' space' → logprob: -5.493042469024658
    7. ' compute' → logprob: -5.493042469024658
    8. ' add' → logprob: -5.743042469024658
    9. ' factor' → logprob: -5.868042469024658
    10. ' area' → logprob: -5.868042469024658

Token 14: '_square' (ID: 99463)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3518301248550415
    2. '_' → logprob: -1.2268301248550415
    3. '_length' → logprob: -7.351830005645752
    4. '_sum' → logprob: -7.726830005645752
    5. '_size' → logprob: -7.851830005645752
    6. '_max' → logprob: -8.22683048248291
    7. ')' → logprob: -8.85183048248291
    8. '_depth' → logprob: -8.85183048248291
    9. '_number' → logprob: -8.97683048248291
    10. '_value' → logprob: -9.10183048248291

Token 15: '_area' (ID: 34097)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25757360458374023
    2. '_' → logprob: -1.5075736045837402
    3. '_area' → logprob: -6.38257360458374
    4. '_size' → logprob: -6.63257360458374
    5. '()' → logprob: -7.88257360458374
    6. '_parent' → logprob: -8.007574081420898
    7. '(_)' → logprob: -8.132574081420898
    8. '_space' → logprob: -8.632574081420898
    9. 's' → logprob: -8.632574081420898
    10. '(_' → logprob: -9.007574081420898

Token 16: '(points' (ID: 72131)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000536232371814549
    2. '():' → logprob: -8.75053596496582
    3. '(x' → logprob: -8.87553596496582
    4. ' (' → logprob: -10.37553596496582
    5. '()' → logprob: -10.50053596496582
    6. '(n' → logprob: -10.75053596496582
    7. '(user' → logprob: -11.37553596496582
    8. '(area' → logprob: -11.50053596496582
    9. '(size' → logprob: -11.62553596496582
    10. '(s' → logprob: -11.62553596496582

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03692033141851425
    2. ',' → logprob: -3.5369203090667725
    3. ')' → logprob: -5.411920547485352
    4. '[' → logprob: -6.036920547485352
    5. '[]):' → logprob: -9.161920547485352
    6. ':' → logprob: -9.661920547485352
    7. '):
' → logprob: -10.286920547485352
    8. '   ' → logprob: -10.661920547485352
    9. ' ):' → logprob: -11.536920547485352
    10. ']:' → logprob: -11.536920547485352

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015516313724219799
    2. ':' → logprob: -4.39051628112793
    3. '    
' → logprob: -6.76551628112793
    4. '(' → logprob: -7.01551628112793
    5. '    ' → logprob: -7.89051628112793
    6. ':
' → logprob: -9.14051628112793
    7. '():' → logprob: -9.64051628112793
    8. '(points' → logprob: -9.76551628112793
    9. '```' → logprob: -10.14051628112793
    10. ' :' → logprob: -10.26551628112793

Token 19: ' pts' (ID: 66515)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0429528951644897
    2. '    ' → logprob: -1.4179528951644897
    3. ' max' → logprob: -1.7929528951644897
    4. '     
' → logprob: -2.2929530143737793
    5. ' points' → logprob: -3.5429530143737793
    6. ' ' → logprob: -3.5429530143737793
    7. '    
' → logprob: -3.9179530143737793
    8. ' 
' → logprob: -4.042953014373779
    9. ' if' → logprob: -4.167953014373779
    10. ' n' → logprob: -5.167953014373779

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20875152945518494
    2. '=' → logprob: -2.2087514400482178
    3. '.' → logprob: -3.5837514400482178
    4. '[' → logprob: -3.9587514400482178
    5. '.append' → logprob: -3.9587514400482178
    6. '   ' → logprob: -5.708751678466797
    7. '.sort' → logprob: -5.958751678466797
    8. ')' → logprob: -6.458751678466797
    9. '.extend' → logprob: -6.833751678466797
    10. 'oints' → logprob: -6.833751678466797

Token 21: ' list' (ID: 1562)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.8694330453872681
    2. ' list' → logprob: -1.994433045387268
    3. ' sorted' → logprob: -2.3694329261779785
    4. ' set' → logprob: -2.3694329261779785
    5. ' [' → logprob: -2.7444329261779785
    6. 'sorted' → logprob: -2.9944329261779785
    7. 'set' → logprob: -3.1194329261779785
    8. 'list' → logprob: -3.3694329261779785
    9. 'points' → logprob: -3.4944329261779785
    10. '[' → logprob: -3.7444329261779785

Token 22: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.08005467802286148
    2. '(map' → logprob: -2.580054759979248
    3. '(' → logprob: -7.580054759979248
    4. '(set' → logprob: -7.955054759979248
    5. '(filter' → logprob: -8.20505428314209
    6. '(range' → logprob: -11.33005428314209
    7. '()' → logprob: -12.70505428314209
    8. '(sorted' → logprob: -12.83005428314209
    9. '({' → logprob: -13.58005428314209
    10. '(point' → logprob: -13.83005428314209

Token 23: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.159660890465602e-05
    2. '())' → logprob: -10.50007152557373
    3. '.values' → logprob: -11.12507152557373
    4. '   ' → logprob: -11.12507152557373
    5. ')
' → logprob: -12.37507152557373
    6. ' )' → logprob: -12.50007152557373
    7. '))' → logprob: -13.50007152557373
    8. '[' → logprob: -13.75007152557373
    9. ' ' → logprob: -14.25007152557373
    10. '()' → logprob: -14.37507152557373

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09723960608243942
    2. '
' → logprob: -3.3472394943237305
    3. '    
' → logprob: -3.5972394943237305
    4. ')' → logprob: -4.7222394943237305
    5. '.' → logprob: -5.2222394943237305
    6. '.sort' → logprob: -5.5972394943237305
    7. '[' → logprob: -5.8472394943237305
    8. '<|end|>' → logprob: -6.5972394943237305
    9. ':' → logprob: -6.9722394943237305
    10. '    ' → logprob: -7.0972394943237305

Token 25: ' point' (ID: 2438)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0034080743789673
    2. '
' → logprob: -1.1284080743789673
    3. ':' → logprob: -2.2534079551696777
    4. ' 
' → logprob: -2.6284079551696777
    5. '    
' → logprob: -3.1284079551696777
    6. '\n' → logprob: -3.8784079551696777
    7. ' ' → logprob: -4.128407955169678
    8. '  
' → logprob: -4.378407955169678
    9. '    ' → logprob: -4.753407955169678
    10. '   
' → logprob: -4.753407955169678

Token 26: '_set' (ID: 5451)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006851296406239271
    2. '_set' → logprob: -5.0068511962890625
    3. 'set' → logprob: -9.256851196289062
    4. '_s' → logprob: -11.631851196289062
    5. '_to' → logprob: -11.631851196289062
    6. '_positions' → logprob: -12.381851196289062
    7. 'Set' → logprob: -12.631851196289062
    8. ' s' → logprob: -12.756851196289062
    9. '_map' → logprob: -12.756851196289062
    10. ')' → logprob: -13.006851196289062

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03835553303360939
    2. '=' → logprob: -3.288355588912964
    3. ')' → logprob: -8.913355827331543
    4. '.' → logprob: -9.288355827331543
    5. '<|end|>' → logprob: -10.038355827331543
    6. '.add' → logprob: -11.663355827331543
    7. ' ' → logprob: -12.038355827331543
    8. ' =
' → logprob: -12.038355827331543
    9. '  ' → logprob: -12.413355827331543
    10. '<|end|>' → logprob: -12.663355827331543

Token 28: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.16022716462612152
    2. 'set' → logprob: -1.9102271795272827
    3. '{' → logprob: -14.035226821899414
    4. '	set' → logprob: -14.160226821899414
    5. ' ' → logprob: -14.410226821899414
    6. '(set' → logprob: -15.035226821899414
    7. '=set' → logprob: -15.035226821899414
    8. ' {' → logprob: -15.160226821899414
    9. ' ' → logprob: -16.785226821899414
    10. ')set' → logprob: -17.160226821899414

Token 29: '(points' (ID: 72131)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014235555194318295
    2. '(points' → logprob: -4.264235496520996
    3. ' (' → logprob: -9.639235496520996
    4. '(point' → logprob: -13.014235496520996
    5. '((' → logprob: -13.764235496520996
    6. '()' → logprob: -14.014235496520996
    7. '(
' → logprob: -14.264235496520996
    8. '(pt' → logprob: -14.264235496520996
    9. ' points' → logprob: -14.514235496520996
    10. 'points' → logprob: -15.264235496520996

Token 30: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014609156642109156
    2. '   ' → logprob: -9.12514591217041
    3. ')
' → logprob: -10.50014591217041
    4. ' )' → logprob: -12.00014591217041
    5. '))' → logprob: -14.12514591217041
    6. '}' → logprob: -15.12514591217041
    7. ' ' → logprob: -15.25014591217041
    8. ')}' → logprob: -15.37514591217041
    9. '),' → logprob: -15.50014591217041
    10. '`)' → logprob: -15.50014591217041

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04276781901717186
    2. '    
' → logprob: -3.2927677631378174
    3. '
' → logprob: -5.5427680015563965
    4. '   
' → logprob: -8.917767524719238
    5. '  
' → logprob: -9.667767524719238
    6. ' 
' → logprob: -9.667767524719238
    7. ')' → logprob: -9.792767524719238
    8. ':' → logprob: -9.792767524719238
    9. '    ' → logprob: -9.792767524719238
    10. '     
' → logprob: -9.792767524719238

Token 32: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06577392667531967
    2. ' max' → logprob: -3.3157739639282227
    3. 'max' → logprob: -3.6907739639282227
    4. ' ans' → logprob: -7.190773963928223
    5. '    
' → logprob: -7.940773963928223
    6. ' res' → logprob: -8.190773963928223
    7. ' for' → logprob: -8.565773963928223
    8. ' result' → logprob: -8.690773963928223
    9. 'result' → logprob: -8.940773963928223
    10. '
' → logprob: -8.940773963928223

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029756275936961174
    2. '=' → logprob: -3.5297563076019287
    3. ' ' → logprob: -12.654756546020508
    4. '=len' → logprob: -14.029756546020508
    5. '  ' → logprob: -14.154756546020508
    6. '=int' → logprob: -14.529756546020508
    7. ')' → logprob: -15.654756546020508
    8. '   ' → logprob: -15.779756546020508
    9. ' =)' → logprob: -16.404756546020508
    10. ' =
' → logprob: -16.529756546020508

Token 34: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.008617054671049118
    2. 'len' → logprob: -4.758616924285889
    3. '(len' → logprob: -13.258617401123047
    4. '=len' → logprob: -14.758617401123047
    5. ' ' → logprob: -16.258617401123047
    6. '[len' → logprob: -16.633617401123047
    7. '	len' → logprob: -16.883617401123047
    8. ',len' → logprob: -17.133617401123047
    9. ' n' → logprob: -17.883617401123047
    10. '   ' → logprob: -18.258617401123047

Token 35: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0022926367819309235
    2. '(points' → logprob: -6.127292633056641
    3. 'pts' → logprob: -9.75229263305664
    4. ' (' → logprob: -10.75229263305664
    5. ' pts' → logprob: -11.25229263305664
    6. '(pt' → logprob: -12.37729263305664
    7. '(point' → logprob: -12.37729263305664
    8. '_pts' → logprob: -13.25229263305664
    9. 'points' → logprob: -13.37729263305664
    10. ' points' → logprob: -13.87729263305664

Token 36: 'pts' (ID: 24040)
  Prédit: 'pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.027949513867497444
    2. ' pts' → logprob: -4.027949333190918
    3. 'points' → logprob: -4.652949333190918
    4. ' points' → logprob: -8.777949333190918
    5. 'pt' → logprob: -9.902949333190918
    6. 'point' → logprob: -12.277949333190918
    7. '_pts' → logprob: -12.527949333190918
    8. '(points' → logprob: -13.777949333190918
    9. ')' → logprob: -13.777949333190918
    10. 'Pts' → logprob: -14.277949333190918

Token 37: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018244501552544534
    2. ')
' → logprob: -9.000182151794434
    3. ' )' → logprob: -9.875182151794434
    4. '   ' → logprob: -12.000182151794434
    5. ' ' → logprob: -14.125182151794434
    6. ')

' → logprob: -15.250182151794434
    7. '))' → logprob: -16.12518310546875
    8. ')
' → logprob: -16.37518310546875
    9. ' )
' → logprob: -17.00018310546875
    10. '`)' → logprob: -17.25018310546875

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058758459985256195
    2. '    
' → logprob: -3.058758497238159
    3. '
' → logprob: -4.93375825881958
    4. ' 
' → logprob: -6.93375825881958
    5. '<|end|>' → logprob: -7.55875825881958
    6. '   
' → logprob: -7.93375825881958
    7. '    ' → logprob: -8.308758735656738
    8. ' ' → logprob: -8.683758735656738
    9. '  
' → logprob: -8.933758735656738
    10. '     
' → logprob: -9.058758735656738

Token 39: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5114820003509521
    2. '   ' → logprob: -2.386482000350952
    3. ' result' → logprob: -2.386482000350952
    4. ' ans' → logprob: -3.136482000350952
    5. 'result' → logprob: -3.386482000350952
    6. 'max' (adapté à ' max') → logprob: -3.386482000350952
    7. ' ' → logprob: -3.511482000350952
    8. ' for' → logprob: -3.761482000350952
    9. ' 
' → logprob: -3.761482000350952
    10. ' res' → logprob: -4.136482238769531

Token 40: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -6.575563020305708e-05
    2. '_' → logprob: -9.875065803527832
    3. '_size' → logprob: -11.750065803527832
    4. '_side' → logprob: -12.875065803527832
    5. 'area' → logprob: -13.125065803527832
    6. '_a' → logprob: -14.375065803527832
    7. '_square' → logprob: -14.875065803527832
    8. 'Area' → logprob: -15.000065803527832
    9. '_len' → logprob: -15.750065803527832
    10. '_val' → logprob: -15.750065803527832

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141421258449554
    2. '=' → logprob: -1.7014142274856567
    3. ' ' → logprob: -14.076414108276367
    4. ',' → logprob: -16.451414108276367
    5. ' =
' → logprob: -17.076414108276367
    6. '=

' → logprob: -17.201414108276367
    7. '=int' → logprob: -18.826414108276367
    8. '  ' → logprob: -19.076414108276367
    9. ' ' → logprob: -19.201414108276367
    10. ')' → logprob: -19.576414108276367

Token 42: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.048631083220243454
    2. ' ' → logprob: -3.048631191253662
    3. '   ' → logprob: -10.298630714416504
    4. ' ' → logprob: -12.173630714416504
    5. ' -' → logprob: -13.736130714416504
    6. '-' → logprob: -13.923630714416504
    7. '  ' → logprob: -14.048630714416504
    8. '1' → logprob: -14.361130714416504
    9. '	' → logprob: -15.986130714416504
    10. '=' → logprob: -16.04863166809082

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023500648967456073
    2. ' ' → logprob: -8.375234603881836
    3. '-' → logprob: -12.750234603881836
    4. '   ' → logprob: -14.375234603881836
    5. ' ' → logprob: -15.125234603881836
    6. ' -' → logprob: -15.375234603881836
    7. '1' → logprob: -16.000234603881836
    8. '  ' → logprob: -16.937734603881836
    9. '۰' → logprob: -17.312734603881836
    10. '_' → logprob: -17.500234603881836

Token 44: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36768946051597595
    2. '   ' → logprob: -1.9926894903182983
    3. '    
' → logprob: -2.742689371109009
    4. ' 
' → logprob: -3.242689371109009
    5. '  
' → logprob: -4.367689609527588
    6. '\n' → logprob: -4.367689609527588
    7. ' ' → logprob: -4.617689609527588
    8. '<|end|>' → logprob: -4.617689609527588
    9. '   
' → logprob: -4.867689609527588
    10. '' → logprob: -4.867689609527588

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44177642464637756
    2. '
' → logprob: -1.6917763948440552
    3. '    
' → logprob: -3.0667765140533447
    4. '\n' → logprob: -3.3167765140533447
    5. 'for' → logprob: -3.6917765140533447
    6. '' → logprob: -3.8167765140533447
    7. ' for' → logprob: -4.441776275634766
    8. '  
' → logprob: -4.566776275634766
    9. '   
' → logprob: -4.691776275634766
    10. ' 
' → logprob: -4.816776275634766

Token 46: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8272165656089783
    2. '   ' → logprob: -1.077216625213623
    3. ' for' → logprob: -1.577216625213623
    4. '
' → logprob: -4.327216625213623
    5. '    
' → logprob: -6.702216625213623
    6. ' 
' → logprob: -7.702216625213623
    7. '\n' → logprob: -8.702216148376465
    8. '  
' → logprob: -8.827216148376465
    9. '   
' → logprob: -8.952216148376465
    10. '	for' → logprob: -9.202216148376465

Token 47: ' Pour' (ID: 13931)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.583017110824585
    2. 'for' → logprob: -0.833017110824585
    3. '   ' → logprob: -4.958017349243164
    4. ' ' → logprob: -11.333017349243164
    5. '  ' → logprob: -12.083017349243164
    6. '```' → logprob: -12.458017349243164
    7. '	for' → logprob: -13.083017349243164
    8. '
' → logprob: -13.583017349243164
    9. '    ' → logprob: -14.958017349243164
    10. '``' → logprob: -15.833017349243164

Token 48: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.047805801033973694
    2. ' ' → logprob: -3.7978057861328125
    3. 'i' → logprob: -4.5478057861328125
    4. ' t' → logprob: -4.7978057861328125
    5. '   ' → logprob: -6.2978057861328125
    6. ' r' → logprob: -6.2978057861328125
    7. 'r' → logprob: -7.5478057861328125
    8. 't' → logprob: -8.547805786132812
    9. ' j' → logprob: -8.547805786132812
    10. '  ' → logprob: -8.672805786132812

Token 49: ' paire' (ID: 148856)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4743679165840149
    2. ' p' → logprob: -1.0993678569793701
    3. 'i' → logprob: -3.59936785697937
    4. 'p' → logprob: -4.724368095397949
    5. ' point' → logprob: -5.599368095397949
    6. ' ' → logprob: -5.974368095397949
    7. ' pt' → logprob: -6.474368095397949
    8. 'point' → logprob: -8.72436809539795
    9. 'pt' → logprob: -9.22436809539795
    10. '```' → logprob: -9.47436809539795

Token 50: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.16557906568050385
    2. ' (' → logprob: -2.415579080581665
    3. ' i' → logprob: -4.290578842163086
    4. 'de' → logprob: -4.290578842163086
    5. ' ' → logprob: -4.415578842163086
    6. '(i' → logprob: -5.040578842163086
    7. '(' → logprob: -5.290578842163086
    8. '(s' → logprob: -6.040578842163086
    9. ' d' → logprob: -6.290578842163086
    10. '  ' → logprob: -6.540578842163086

Token 51: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.10028085112571716
    2. 'points' → logprob: -2.47528076171875
    3. 'pts' → logprob: -4.85028076171875
    4. ' pts' → logprob: -5.72528076171875
    5. ' indices' → logprob: -10.35028076171875
    6. ' ' → logprob: -10.60028076171875
    7. 'indices' → logprob: -10.72528076171875
    8. ' point' → logprob: -11.10028076171875
    9. 'point' → logprob: -11.35028076171875
    10. 'pt' → logprob: -11.35028076171875

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7348705530166626
    2. '   ' → logprob: -1.1098705530166626
    3. ':' → logprob: -2.609870433807373
    4. ' ' → logprob: -2.859870433807373
    5. '  ' → logprob: -3.859870433807373
    6. ' ,' → logprob: -4.859870433807373
    7. ' (' → logprob: -4.859870433807373
    8. ' for' → logprob: -5.234870433807373
    9. '    ' → logprob: -5.734870433807373
    10. '<|end|>' → logprob: -5.734870433807373

Token 53: ' déterminer' (ID: 122024)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5011351704597473
    2. '    ' → logprob: -1.7511351108551025
    3. '   ' → logprob: -2.5011351108551025
    4. '<|end|>' → logprob: -2.6261351108551025
    5. ' for' → logprob: -3.1261351108551025
    6. '<|end|>' → logprob: -4.751135349273682
    7. '  ' → logprob: -5.251135349273682
    8. ' ' → logprob: -6.001135349273682
    9. 'for' → logprob: -6.001135349273682
    10. ' 
' → logprob: -7.001135349273682

Token 54: ' les' (ID: 1341)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: ' points' (ID: 5571)
  Prédit: ' vectors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vectors' → logprob: -1.1033883094787598
    2. ' vect' → logprob: -1.3533883094787598
    3. ' côtés' → logprob: -1.7283883094787598
    4. ' ' → logprob: -2.3533883094787598
    5. ' points' → logprob: -3.1033883094787598
    6. ' vector' → logprob: -3.9783883094787598
    7. ' autres' → logprob: -4.10338830947876
    8. ' possible' → logprob: -4.60338830947876
    9. 'c' → logprob: -5.10338830947876
    10. ' candidats' → logprob: -5.35338830947876

Token 56: ' qui' (ID: 2780)
  Prédit: ' qui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qui' → logprob: -1.566407561302185
    2. ' rest' → logprob: -1.566407561302185
    3. ' j' → logprob: -1.941407561302185
    4. '<|end|>' → logprob: -1.941407561302185
    5. ' forming' → logprob: -3.6914076805114746
    6. ' (' → logprob: -3.9414076805114746
    7. ' ' → logprob: -3.9414076805114746
    8. 'rest' → logprob: -3.9414076805114746
    9. ' supplémentaires' → logprob: -4.066407680511475
    10. ' i' → logprob: -4.066407680511475

Token 57: ' compl' (ID: 8432)
  Prédit: ' pourraient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pourraient' → logprob: -0.03670121356844902
    2. ' peuvent' → logprob: -4.411701202392578
    3. ' pourrait' → logprob: -4.786701202392578
    4. ' for' → logprob: -4.786701202392578
    5. ' could' → logprob: -6.036701202392578
    6. 'for' → logprob: -6.286701202392578
    7. ' forme' → logprob: -7.661701202392578
    8. ' form' → logprob: -8.036701202392578
    9. ' pourrais' → logprob: -8.036701202392578
    10. '   ' → logprob: -8.161701202392578

Token 58: 'ètent' (ID: 185043)
  Prédit: 'ètent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ètent' → logprob: -0.0030081309378147125
    2. 'è' → logprob: -6.0030083656311035
    3. 'èt' → logprob: -8.628007888793945
    4. 'ét' → logprob: -9.378007888793945
    5. 'ètement' → logprob: -9.503007888793945
    6. 'et' → logprob: -9.878007888793945
    7. 'tent' → logprob: -10.628007888793945
    8. '`' → logprob: -10.878007888793945
    9. 'ément' → logprob: -11.378007888793945
    10. '%' → logprob: -11.378007888793945

Token 59: ' un' (ID: 537)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.48462381958961487
    2. 'le' → logprob: -0.9846237897872925
    3. ' un' → logprob: -5.109623908996582
    4. 'un' → logprob: -6.234623908996582
    5. ' la' → logprob: -7.484623908996582
    6. 'a' → logprob: -7.609623908996582
    7. 'l' → logprob: -8.109623908996582
    8. '   ' → logprob: -8.359623908996582
    9. 'la' → logprob: -8.734623908996582
    10. '```' → logprob: -8.984623908996582

Token 60: ' carré' (ID: 191546)
  Prédit: ' carré'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' carré' → logprob: -0.01642822101712227
    2. ' carr' → logprob: -4.891427993774414
    3. 'c' → logprob: -5.016427993774414
    4. ' square' → logprob: -7.266427993774414
    5. 'car' → logprob: -7.266427993774414
    6. 'square' → logprob: -8.641427993774414
    7. ' carre' → logprob: -8.766427993774414
    8. '```' → logprob: -9.016427993774414
    9. ' ' → logprob: -9.516427993774414
    10. ' car' → logprob: -9.891427993774414

Token 61: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018729479983448982
    2. '    
' → logprob: -4.3937296867370605
    3. '  
' → logprob: -6.8937296867370605
    4. '    ' → logprob: -7.0187296867370605
    5. '   
' → logprob: -7.0187296867370605
    6. ' for' → logprob: -7.2687296867370605
    7. '  ' → logprob: -7.2687296867370605
    8. '
' → logprob: -7.6437296867370605
    9. 'for' → logprob: -7.7687296867370605
    10. ' ' → logprob: -8.268729209899902

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004978051409125328
    2. '    
' → logprob: -5.504978179931641
    3. ' for' → logprob: -7.754978179931641
    4. 'for' → logprob: -8.62997817993164
    5. '
' → logprob: -9.62997817993164
    6. ',' → logprob: -9.75497817993164
    7. '  
' → logprob: -10.25497817993164
    8. '   
' → logprob: -10.62997817993164
    9. '    ' → logprob: -10.75497817993164
    10. '<|end|>' → logprob: -10.87997817993164

Token 63: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055175747722387314
    2. '    
' → logprob: -4.05517578125
    3. '
' → logprob: -4.30517578125
    4. ' for' → logprob: -4.80517578125
    5. 'for' (adapté à ' for') → logprob: -4.80517578125
    6. '  
' → logprob: -5.93017578125
    7. ' ' → logprob: -6.93017578125
    8. ' 
' → logprob: -6.93017578125
    9. '   
' → logprob: -7.05517578125
    10. '  ' → logprob: -8.43017578125

Token 64: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0010447168024256825
    2. 'i' → logprob: -7.001044750213623
    3. ' ' → logprob: -9.001044273376465
    4. '	i' → logprob: -11.751044273376465
    5. ' ' → logprob: -13.751044273376465
    6. '  ' → logprob: -14.626044273376465
    7. '_i' → logprob: -16.00104522705078
    8. '```' → logprob: -16.37604522705078
    9. ' ' → logprob: -16.62604522705078
    10. '   ' → logprob: -16.62604522705078

Token 65: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055880457162857056
    2. 'in' → logprob: -2.930880546569824
    3. ' ' → logprob: -6.930880546569824
    4. '+' → logprob: -11.930880546569824
    5. '  ' → logprob: -12.055880546569824
    6. '	in' → logprob: -13.555880546569824
    7. 'n' → logprob: -13.805880546569824
    8. ' ' → logprob: -13.930880546569824
    9. '1' → logprob: -13.930880546569824
    10. ' i' → logprob: -14.180880546569824

Token 66: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.038043100386857986
    2. 'range' → logprob: -3.2880430221557617
    3. ' ' → logprob: -13.663043022155762
    4. '	range' → logprob: -15.663043022155762
    5. '  ' → logprob: -16.288043975830078
    6. '   ' → logprob: -16.288043975830078
    7. ' xrange' → logprob: -17.038043975830078
    8. '(range' → logprob: -17.413043975830078
    9. '```' → logprob: -17.788043975830078
    10. '    ' → logprob: -18.163043975830078

Token 67: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28763389587402344
    2. '(n' → logprob: -1.4126338958740234
    3. ' (' → logprob: -5.162633895874023
    4. ' ' → logprob: -8.037633895874023
    5. '(
' → logprob: -8.037633895874023
    6. ' n' → logprob: -10.287633895874023
    7. 'n' → logprob: -10.912633895874023
    8. '<|end|>' → logprob: -11.412633895874023
    9. ' (
' → logprob: -12.662633895874023
    10. '1' → logprob: -12.662633895874023

Token 68: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00905827060341835
    2. '):
' → logprob: -4.884058475494385
    3. ')' → logprob: -7.134058475494385
    4. ' ):' → logprob: -7.634058475494385
    5. '-' → logprob: -9.134057998657227
    6. '   ' → logprob: -10.509057998657227
    7. ' -' → logprob: -11.134057998657227
    8. '):
' → logprob: -12.259057998657227
    9. '1' → logprob: -12.384057998657227
    10. ':' → logprob: -12.634057998657227

Token 69: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9175859689712524
    2. '       ' → logprob: -0.9175859689712524
    3. ' ' → logprob: -2.417585849761963
    4. '<|end|>' → logprob: -2.667585849761963
    5. '    ' → logprob: -3.292585849761963
    6. ' for' → logprob: -6.292585849761963
    7. '<|end|>' → logprob: -7.417585849761963
    8. ' 
' → logprob: -7.417585849761963
    9. '  ' → logprob: -7.667585849761963
    10. '     ' → logprob: -7.667585849761963

Token 70: ' x' (ID: 1215)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05808268487453461
    2. '   ' → logprob: -2.9330825805664062
    3. 'for' → logprob: -6.558082580566406
    4. ' ' → logprob: -7.433082580566406
    5. '	for' → logprob: -7.933082580566406
    6. '1' → logprob: -8.183082580566406
    7. '    ' → logprob: -8.933082580566406
    8. '       ' → logprob: -9.058082580566406
    9. '  ' → logprob: -9.683082580566406
    10. '<|end|>' → logprob: -9.683082580566406

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3126541376113892
    2. ',' → logprob: -1.4376541376113892
    3. 'i' → logprob: -1.4376541376113892
    4. '=' → logprob: -2.3126540184020996
    5. ' =' → logprob: -3.0626540184020996
    6. '0' → logprob: -3.3126540184020996
    7. '+' → logprob: -4.3126540184021
    8. '_i' → logprob: -4.4376540184021
    9. ')' → logprob: -4.5626540184021
    10. '_' → logprob: -5.0626540184021

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025877889711409807
    2. ' ,' → logprob: -6.752587795257568
    3. ' =' → logprob: -7.502587795257568
    4. '=' → logprob: -8.00258731842041
    5. ')' → logprob: -8.37758731842041
    6. ',y' → logprob: -8.37758731842041
    7. ',i' → logprob: -11.25258731842041
    8. ',)' → logprob: -11.50258731842041
    9. ',x' → logprob: -11.87758731842041
    10. '),' → logprob: -11.87758731842041

Token 73: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.22652040421962738
    2. ' y' → logprob: -1.6015204191207886
    3. '<|end|>' → logprob: -6.976520538330078
    4. ' ' → logprob: -9.101520538330078
    5. '    ' → logprob: -11.101520538330078
    6. '<|end|>' → logprob: -11.226520538330078
    7. '	y' → logprob: -11.601520538330078
    8. 'space' → logprob: -12.226520538330078
    9. ' ' → logprob: -12.601520538330078
    10. ' =' → logprob: -12.851520538330078

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09050284326076508
    2. '=' → logprob: -2.8405027389526367
    3. ' =' → logprob: -3.5905027389526367
    4. ')' → logprob: -7.965502738952637
    5. '_' → logprob: -9.090502738952637
    6. ' ' → logprob: -10.840502738952637
    7. '   ' → logprob: -11.340502738952637
    8. 'i' → logprob: -11.465502738952637
    9. ',' → logprob: -11.590502738952637
    10. '    ' → logprob: -11.840502738952637

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25230661034584045
    2. '=' → logprob: -1.502306580543518
    3. '   ' → logprob: -8.377306938171387
    4. ')' → logprob: -9.502306938171387
    5. ',' → logprob: -10.127306938171387
    6. ' ' → logprob: -11.002306938171387
    7. '    ' → logprob: -12.002306938171387
    8. ' =
' → logprob: -12.877306938171387
    9. '<|end|>' → logprob: -13.252306938171387
    10. '  ' → logprob: -13.502306938171387

Token 76: ' pts' (ID: 66515)
  Prédit: ' pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pts' → logprob: -0.004633045755326748
    2. 'pts' → logprob: -5.379632949829102
    3. '_pts' → logprob: -11.504632949829102
    4. ' points' → logprob: -13.254632949829102
    5. 'Pts' → logprob: -14.129632949829102
    6. ' pt' → logprob: -15.379632949829102
    7. '    ' → logprob: -16.7546329498291
    8. 'points' → logprob: -17.8796329498291
    9. 'pt' → logprob: -17.8796329498291
    10. 'PTS' → logprob: -17.8796329498291

Token 77: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.65101717156358e-05
    2. '[' → logprob: -9.250096321105957
    3. '[
' → logprob: -15.625096321105957
    4. ' [' → logprob: -16.500097274780273
    5. 'i' → logprob: -16.875097274780273
    6. '[I' → logprob: -17.000097274780273
    7. ' ' → logprob: -17.375097274780273
    8. '[x' → logprob: -17.500097274780273
    9. '[j' → logprob: -18.250097274780273
    10. '```' → logprob: -19.000097274780273

Token 78: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008051596581935883
    2. ']' → logprob: -5.25805139541626
    3. '   ' → logprob: -6.38305139541626
    4. ')
' → logprob: -6.88305139541626
    5. '       ' → logprob: -11.133051872253418
    6. ' )' → logprob: -11.258051872253418
    7. '])' → logprob: -11.508051872253418
    8. '`)' → logprob: -11.508051872253418
    9. ' ' → logprob: -11.883051872253418
    10. '),' → logprob: -12.133051872253418

Token 79: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3837452828884125
    2. '<|end|>' → logprob: -2.0087451934814453
    3. '
' → logprob: -2.1337451934814453
    4. '  
' → logprob: -4.008745193481445
    5. ' 
' → logprob: -4.508745193481445
    6. '       ' → logprob: -4.633745193481445
    7. ' ' → logprob: -4.633745193481445
    8. '    
' → logprob: -4.633745193481445
    9. '<|end|>' → logprob: -6.258745193481445
    10. '```' → logprob: -6.758745193481445

Token 80: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8075851798057556
    2. '   ' → logprob: -1.5575852394104004
    3. 'for' (adapté à ' for') → logprob: -2.3075852394104004
    4. ' 
' → logprob: -2.4325852394104004
    5. '
' → logprob: -2.8075852394104004
    6. ' ' → logprob: -3.3075852394104004
    7. '       ' → logprob: -3.9325852394104004
    8. '<|end|>' → logprob: -4.0575852394104
    9. '	for' → logprob: -4.5575852394104
    10. '  
' → logprob: -5.1825852394104

Token 81: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6316326260566711
    2. ' j' → logprob: -0.8816326260566711
    3. 'range' → logprob: -3.2566325664520264
    4. ' ' → logprob: -4.7566328048706055
    5. 'j' → logprob: -5.0066328048706055
    6. ' in' → logprob: -8.631632804870605
    7. '1' → logprob: -9.756632804870605
    8. ' i' → logprob: -9.881632804870605
    9. ' (' → logprob: -11.256632804870605
    10. '0' → logprob: -11.506632804870605

Token 82: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03512357547879219
    2. 'in' → logprob: -3.410123586654663
    3. ' ' → logprob: -6.535123348236084
    4. 'range' → logprob: -11.410123825073242
    5. '  ' → logprob: -12.910123825073242
    6. ' i' → logprob: -13.410123825073242
    7. '	in' → logprob: -13.410123825073242
    8. '1' → logprob: -13.410123825073242
    9. '<|end|>' → logprob: -13.910123825073242
    10. 'i' → logprob: -14.035123825073242

Token 83: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.01815708540380001
    2. 'range' → logprob: -4.018157005310059
    3. ' ' → logprob: -12.643157005310059
    4. '(range' → logprob: -12.643157005310059
    5. '	range' → logprob: -14.393157005310059
    6. ' xrange' → logprob: -16.643157958984375
    7. '  ' → logprob: -17.393157958984375
    8. '_range' → logprob: -18.643157958984375
    9. ' (' → logprob: -18.768157958984375
    10. ' i' → logprob: -18.768157958984375

Token 84: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.044171806424856186
    2. '(range' → logprob: -3.6691718101501465
    3. ' range' → logprob: -4.1691718101501465
    4. 'range' → logprob: -6.1691718101501465
    5. '(n' → logprob: -9.544171333312988
    6. '(' → logprob: -9.919171333312988
    7. ' (' → logprob: -10.794171333312988
    8. '(j' → logprob: -12.044171333312988
    9. '   ' → logprob: -12.919171333312988
    10. 'Range' → logprob: -13.169171333312988

Token 85: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10026630759239197
    2. ' +' → logprob: -2.350266218185425
    3. '1' → logprob: -10.100266456604004
    4. ' ' → logprob: -10.975266456604004
    5. '+j' → logprob: -14.350266456604004
    6. '+
' → logprob: -15.475266456604004
    7. '+i' → logprob: -15.725266456604004
    8. ' +
' → logprob: -15.850266456604004
    9. ' plus' → logprob: -16.100265502929688
    10. '   ' → logprob: -16.350265502929688

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001093841710826382
    2. ' ' → logprob: -9.125109672546387
    3. '```' → logprob: -16.12510871887207
    4. ')' → logprob: -16.37510871887207
    5. '   ' → logprob: -16.62510871887207
    6. '2' → logprob: -17.18760871887207
    7. '
' → logprob: -17.87510871887207
    8. '１' → logprob: -17.87510871887207
    9. '

' → logprob: -18.12510871887207
    10. '  ' → logprob: -18.25010871887207

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00888920109719038
    2. ',n' → logprob: -5.008889198303223
    3. ' ,' → logprob: -6.133889198303223
    4. ',j' → logprob: -13.758889198303223
    5. 'n' → logprob: -14.258889198303223
    6. ',len' → logprob: -14.883889198303223
    7. '):' → logprob: -15.883889198303223
    8. ' ' → logprob: -16.13389015197754
    9. ',)' → logprob: -16.25889015197754
    10. '(n' → logprob: -16.38389015197754

Token 88: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25192990899086
    2. ' n' → logprob: -1.5019298791885376
    3. '	n' → logprob: -14.876930236816406
    4. ')n' → logprob: -15.501930236816406
    5. ' ' → logprob: -16.251930236816406
    6. ')' → logprob: -16.376930236816406
    7. '(n' → logprob: -16.626930236816406
    8. '_n' → logprob: -17.626930236816406
    9. '<n' → logprob: -17.876930236816406
    10. '   ' → logprob: -18.001930236816406

Token 89: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25209373235702515
    2. '):' → logprob: -1.50209379196167
    3. ':' → logprob: -9.752093315124512
    4. '   ' → logprob: -9.877093315124512
    5. '):
' → logprob: -10.377093315124512
    6. ')' → logprob: -11.877093315124512
    7. '       ' → logprob: -12.377093315124512
    8. ' ):
' → logprob: -12.377093315124512
    9. ':
' → logprob: -12.877093315124512
    10. '):

' → logprob: -13.252093315124512

Token 90: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7797871232032776
    2. ' ' → logprob: -1.0297870635986328
    3. 'x' → logprob: -2.279787063598633
    4. ' x' → logprob: -3.654787063598633
    5. '   ' → logprob: -4.154787063598633
    6. ' 
' → logprob: -4.654787063598633
    7. '           ' → logprob: -5.154787063598633
    8. '(x' → logprob: -5.529787063598633
    9. '        ' → logprob: -5.779787063598633
    10. ',' → logprob: -6.029787063598633

Token 91: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5363365411758423
    2. 'x' (adapté à ' x') → logprob: -1.1613365411758423
    3. ' x' → logprob: -2.5363364219665527
    4. ' 
' → logprob: -4.411336421966553
    5. ' ' → logprob: -4.786336421966553
    6. '    ' → logprob: -7.536336421966553
    7. '(x' → logprob: -7.661336421966553
    8. '   ' → logprob: -7.911336421966553
    9. '  ' → logprob: -8.286336898803711
    10. '<|end|>' → logprob: -8.786336898803711

Token 92: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.723352049040841e-06
    2. ',' → logprob: -12.625004768371582
    3. ' ' → logprob: -14.250004768371582
    4. '1' → logprob: -14.375004768371582
    5. ' ,' → logprob: -16.750003814697266
    6. '```' → logprob: -16.750003814697266
    7. '
' → logprob: -17.500003814697266
    8. '   ' → logprob: -18.562503814697266
    9. '_,' → logprob: -19.000003814697266
    10. '

' → logprob: -19.062503814697266

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023679454170633107
    2. ' ,' → logprob: -8.375236511230469
    3. ',y' → logprob: -12.250236511230469
    4. '1' → logprob: -14.750236511230469
    5. '=' → logprob: -14.875236511230469
    6. '‌,' → logprob: -15.625236511230469
    7. 'y' → logprob: -16.12523651123047
    8. ' y' → logprob: -16.12523651123047
    9. '2' → logprob: -16.37523651123047
    10. ',
' → logprob: -16.62523651123047

Token 94: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.008621551096439362
    2. 'y' → logprob: -4.758621692657471
    3. '<|end|>' → logprob: -12.258621215820312
    4. ',' → logprob: -13.758621215820312
    5. ' ' → logprob: -14.133621215820312
    6. ',y' → logprob: -15.383621215820312
    7. ' ' → logprob: -16.008621215820312
    8. '	y' → logprob: -16.383621215820312
    9. '    ' → logprob: -17.133621215820312
    10. '<|end|>' → logprob: -17.383621215820312

Token 95: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.779520092299208e-05
    2. ',' → logprob: -9.500078201293945
    3. '1' → logprob: -13.500078201293945
    4. ' ' → logprob: -13.750078201293945
    5. ' ,' → logprob: -15.125078201293945
    6. '```' → logprob: -15.875078201293945
    7. '_,' → logprob: -19.375078201293945
    8. ',j' → logprob: -19.500078201293945
    9. '3' → logprob: -19.750078201293945
    10. '   ' → logprob: -20.250078201293945

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141977071762085
    2. '=' → logprob: -1.7014198303222656
    3. '   ' → logprob: -12.951419830322266
    4. ' ' → logprob: -12.951419830322266
    5. '    ' → logprob: -14.201419830322266
    6. ')' → logprob: -15.201419830322266
    7. '       ' → logprob: -15.326419830322266
    8. '        ' → logprob: -15.826419830322266
    9. '           ' → logprob: -15.826419830322266
    10. ' =
' → logprob: -16.201419830322266

Token 97: ' pts' (ID: 66515)
  Prédit: ' pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pts' → logprob: -0.04859009385108948
    2. 'pts' → logprob: -3.0485901832580566
    3. '_pts' → logprob: -13.173589706420898
    4. 'Pts' → logprob: -15.548589706420898
    5. 'pt' → logprob: -15.673589706420898
    6. ' pt' → logprob: -15.923589706420898
    7. '    ' → logprob: -15.923589706420898
    8. ' ' → logprob: -16.4235897064209
    9. '   ' → logprob: -16.5485897064209
    10. '  ' → logprob: -17.6735897064209

Token 98: '[j' (ID: 7895)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013790512457489967
    2. ']
' → logprob: -4.388790607452393
    3. '           ' → logprob: -7.263790607452393
    4. ']
' → logprob: -8.388790130615234
    5. ' ]' → logprob: -8.513790130615234
    6. ')' → logprob: -10.013790130615234
    7. ']

' → logprob: -10.263790130615234
    8. '   ' → logprob: -10.638790130615234
    9. '       ' → logprob: -11.138790130615234
    10. '               ' → logprob: -11.388790130615234

Token 100: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027482921723276377
    2. '            
' → logprob: -6.002748489379883
    3. '
' → logprob: -8.627748489379883
    4. ' 
' → logprob: -10.877748489379883
    5. '  
' → logprob: -11.127748489379883
    6. '<|end|>' → logprob: -11.127748489379883
    7. '    
' → logprob: -11.502748489379883
    8. '               ' → logprob: -12.002748489379883
    9. '       ' → logprob: -12.127748489379883
    10. ',' → logprob: -12.252748489379883

Token 101: ' dx' (ID: 29472)
  Prédit: ' dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.3987257182598114
    2. 'dx' (adapté à ' dx') → logprob: -1.7737257480621338
    3. '           ' → logprob: -1.8987257480621338
    4. '
' → logprob: -4.898725509643555
    5. ' 
' → logprob: -7.273725509643555
    6. '            
' → logprob: -7.773725509643555
    7. 'd' → logprob: -9.273725509643555
    8. '            ' → logprob: -9.398725509643555
    9. '          ' → logprob: -9.773725509643555
    10. 'xd' → logprob: -9.898725509643555

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023732682690024376
    2. '=' → logprob: -4.148732662200928
    3. ',' → logprob: -4.898732662200928
    4. ' ,' → logprob: -8.648733139038086
    5. ' ' → logprob: -10.398733139038086
    6. ' =
' → logprob: -12.523733139038086
    7. ')' → logprob: -14.273733139038086
    8. '    ' → logprob: -15.273733139038086
    9. '            ' → logprob: -15.273733139038086
    10. ' =)' → logprob: -15.398733139038086

Token 103: ' x' (ID: 1215)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10988135635852814
    2. ' y' → logprob: -2.8598814010620117
    3. '-(' → logprob: -3.2348814010620117
    4. 'x' → logprob: -4.984881401062012
    5. ' -(' → logprob: -8.109881401062012
    6. ' x' → logprob: -8.609881401062012
    7. ' ' → logprob: -10.734881401062012
    8. '(y' → logprob: -10.859881401062012
    9. '-' → logprob: -10.984881401062012
    10. '   ' → logprob: -10.984881401062012

Token 104: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -14.625000953674316
    3. '1' → logprob: -15.000000953674316
    4. '₂' → logprob: -15.125000953674316
    5. '```' → logprob: -16.250001907348633
    6. ',' → logprob: -16.875001907348633
    7. ' ' → logprob: -17.250001907348633
    8. ')' → logprob: -17.625001907348633
    9. ']' → logprob: -17.625001907348633
    10. '_' → logprob: -19.375001907348633

Token 105: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03737863153219223
    2. '-' → logprob: -3.5373785495758057
    3. ',' → logprob: -5.412378787994385
    4. '<|end|>' → logprob: -6.537378787994385
    5. ' ' → logprob: -7.412378787994385
    6. ' ,' → logprob: -8.037378311157227
    7. ' dy' → logprob: -8.912378311157227
    8. ' y' → logprob: -9.287378311157227
    9. '           ' → logprob: -9.537378311157227
    10. '=' → logprob: -9.662378311157227

Token 106: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12692904472351074
    2. ' x' → logprob: -2.1269290447235107
    3. '<|end|>' → logprob: -15.25192928314209
    4. ' ' → logprob: -15.50192928314209
    5. '	x' → logprob: -15.87692928314209
    6. '(x' → logprob: -15.87692928314209
    7. ')x' → logprob: -16.126928329467773
    8. '           ' → logprob: -16.501928329467773
    9. ',' → logprob: -17.876928329467773
    10. ',x' → logprob: -18.126928329467773

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. ',' → logprob: -19.0
    4. 'x' → logprob: -21.375
    5. '' → logprob: -21.5
    6. '```' → logprob: -21.5
    7. '１' → logprob: -22.875
    8. 'y' → logprob: -23.125
    9. '<|end|>' → logprob: -23.5
    10. '১' → logprob: -23.5

Token 108: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0713944211602211
    2. ',' → logprob: -3.196394443511963
    3. ' dy' → logprob: -4.821394443511963
    4. 'y' → logprob: -5.196394443511963
    5. 'dy' → logprob: -5.196394443511963
    6. '            
' → logprob: -6.196394443511963
    7. ' ,' → logprob: -6.696394443511963
    8. '          ' → logprob: -7.196394443511963
    9. '            ' → logprob: -7.321394443511963
    10. '
' → logprob: -7.321394443511963

Token 109: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7345354557037354
    2. ' dy' → logprob: -0.7345354557037354
    3. 'dy' → logprob: -3.3595354557037354
    4. '            ' → logprob: -6.484535217285156
    5. ' y' → logprob: -6.734535217285156
    6. 'y' → logprob: -7.359535217285156
    7. '            
' → logprob: -7.484535217285156
    8. ' ' → logprob: -7.859535217285156
    9. '   ' → logprob: -8.359535217285156
    10. ',' → logprob: -8.484535217285156

Token 110: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' (adapté à ' dy') → logprob: -0.16022534668445587
    2. ' dy' → logprob: -1.9102253913879395
    3. ' ' → logprob: -15.160224914550781
    4. '           ' → logprob: -15.285224914550781
    5. '   ' → logprob: -15.410224914550781
    6. '-d' → logprob: -15.785224914550781
    7. 'Dy' → logprob: -16.16022491455078
    8. 'd' → logprob: -16.28522491455078
    9. '.dy' → logprob: -16.28522491455078
    10. '  ' → logprob: -17.28522491455078

Token 111: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13428029417991638
    2. '=' → logprob: -2.134280204772949
    3. '<|end|>' → logprob: -5.009280204772949
    4. ' ' → logprob: -7.759280204772949
    5. ',' → logprob: -9.00928020477295
    6. '<|end|>' → logprob: -10.38428020477295
    7. '    ' → logprob: -10.88428020477295
    8. ')' → logprob: -11.50928020477295
    9. ' ,' → logprob: -11.88428020477295
    10. '=-' → logprob: -12.38428020477295

Token 112: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6962887644767761
    2. ' y' → logprob: -1.071288824081421
    3. 'x' → logprob: -2.821288824081421
    4. '-' → logprob: -3.321288824081421
    5. ' -' → logprob: -3.446288824081421
    6. ' x' → logprob: -4.196288585662842
    7. '-y' → logprob: -4.946288585662842
    8. '-(' → logprob: -5.321288585662842
    9. '-x' → logprob: -5.946288585662842
    10. ' -(' → logprob: -6.696288585662842

Token 113: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.802049756515771e-05
    2. '2' → logprob: -10.750067710876465
    3. ' -' → logprob: -10.750067710876465
    4. '-' → logprob: -11.000067710876465
    5. ' ' → logprob: -12.000067710876465
    6. '   ' → logprob: -14.875067710876465
    7. ',' → logprob: -14.875067710876465
    8. 'x' → logprob: -15.250067710876465
    9. 'dx' → logprob: -15.250067710876465
    10. '```' → logprob: -15.250067710876465

Token 114: ' -' (ID: 533)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2593015432357788
    2. '*' → logprob: -1.5093015432357788
    3. ')' → logprob: -6.259301662445068
    4. ' ' → logprob: -6.384301662445068
    5. ',' → logprob: -7.009301662445068
    6. '<|end|>' → logprob: -7.259301662445068
    7. '**' → logprob: -7.759301662445068
    8. '    ' → logprob: -8.13430118560791
    9. '=' → logprob: -8.38430118560791
    10. '   ' → logprob: -8.75930118560791

Token 115: ' y' (ID: 342)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.08397921174764633
    2. ' dx' → logprob: -2.5839791297912598
    3. '(dx' → logprob: -5.95897912979126
    4. 'dy' → logprob: -6.33397912979126
    5. ' dy' → logprob: -8.333979606628418
    6. ' (' → logprob: -8.333979606628418
    7. '(' → logprob: -9.208979606628418
    8. '(x' → logprob: -9.583979606628418
    9. 'x' → logprob: -10.208979606628418
    10. '1' → logprob: -11.083979606628418

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.8232690460281447e-05
    2. '2' → logprob: -10.125048637390137
    3. ' ' → logprob: -13.125048637390137
    4. '```' → logprob: -13.125048637390137
    5. 'x' → logprob: -13.250048637390137
    6. '0' → logprob: -14.000048637390137
    7. 'dx' → logprob: -14.375048637390137
    8. '-' → logprob: -14.500048637390137
    9. 's' → logprob: -16.25004768371582
    10. '   ' → logprob: -16.37504768371582

Token 117: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09419329464435577
    2. '
' → logprob: -2.46919322013855
    3. '            
' → logprob: -5.344193458557129
    4. '  
' → logprob: -8.719193458557129
    5. '
' → logprob: -9.594193458557129
    6. ' 
' → logprob: -9.719193458557129
    7. '```' → logprob: -9.969193458557129
    8. '           
' → logprob: -10.719193458557129
    9. ',' → logprob: -11.344193458557129
    10. '    
' → logprob: -11.344193458557129

Token 118: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01278203446418047
    2. '
' → logprob: -4.637782096862793
    3. '            
' → logprob: -5.887782096862793
    4. '  
' → logprob: -9.637782096862793
    5. ' 
' → logprob: -10.387782096862793
    6. ' for' → logprob: -10.762782096862793
    7. 'for' → logprob: -10.887782096862793
    8. '
' → logprob: -11.012782096862793
    9. '           
' → logprob: -11.137782096862793
    10. '       ' → logprob: -11.387782096862793

Token 119: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.8781402707099915
    2. '           ' → logprob: -1.5031402111053467
    3. 'x' → logprob: -1.7531402111053467
    4. 'for' → logprob: -2.5031402111053467
    5. ' for' → logprob: -3.2531402111053467
    6. ' #' → logprob: -4.003140449523926
    7. ' x' → logprob: -4.003140449523926
    8. 'nx' → logprob: -4.753140449523926
    9. ' nx' → logprob: -5.253140449523926
    10. '            
' → logprob: -5.503140449523926

Token 120: ' Les' (ID: 7029)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3762398064136505
    2. ' #' → logprob: -2.751239776611328
    3. 'p' → logprob: -3.001239776611328
    4. ' perp' → logprob: -3.376239776611328
    5. ' px' → logprob: -3.626239776611328
    6. 'for' → logprob: -3.626239776611328
    7. ' for' → logprob: -3.626239776611328
    8. ' p' → logprob: -4.376239776611328
    9. '           ' → logprob: -4.501239776611328
    10. 'px' → logprob: -4.626239776611328

Token 121: ' deux' (ID: 10301)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7840452790260315
    2. 'p' → logprob: -1.9090452194213867
    3. ' p' → logprob: -2.4090452194213867
    4. 'x' → logprob: -2.7840452194213867
    5. ' #' → logprob: -2.9090452194213867
    6. 'px' → logprob: -3.1590452194213867
    7. ' px' → logprob: -3.2840452194213867
    8. ' candidates' → logprob: -4.534045219421387
    9. ' pts' → logprob: -4.534045219421387
    10. 'c' → logprob: -4.659045219421387

Token 122: ' autres' (ID: 18701)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.4254535138607025
    2. ' autres' → logprob: -1.550453543663025
    3. ' nouveaux' → logprob: -3.3004534244537354
    4. 'points' → logprob: -3.5504534244537354
    5. ' candidats' → logprob: -3.9254534244537354
    6. '#' → logprob: -5.0504536628723145
    7. ' vect' → logprob: -5.3004536628723145
    8. 'p' → logprob: -5.6754536628723145
    9. ' nouvelles' → logprob: -5.8004536628723145
    10. 'x' → logprob: -6.0504536628723145

Token 123: ' points' (ID: 5571)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.5805082321166992
    2. 'p' → logprob: -1.7055082321166992
    3. 'points' → logprob: -2.330508232116699
    4. ' points' → logprob: -2.705508232116699
    5. '#' → logprob: -3.705508232116699
    6. 'x' → logprob: -3.830508232116699
    7. ' px' → logprob: -3.955508232116699
    8. 'pts' → logprob: -5.205508232116699
    9. ' corners' → logprob: -5.330508232116699
    10. 'tx' → logprob: -5.455508232116699

Token 124: ' possibles' (ID: 97753)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010522671043872833
    2. ':' → logprob: -5.010522842407227
    3. '=' → logprob: -6.260522842407227
    4. ',' → logprob: -7.385522842407227
    5. ' are' → logprob: -8.135522842407227
    6. ' :' → logprob: -9.135522842407227
    7. 'a' → logprob: -9.385522842407227
    8. '<|end|>' → logprob: -9.385522842407227
    9. '           ' → logprob: -9.510522842407227
    10. ' sont' → logprob: -9.635522842407227

Token 125: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.142713189125061
    2. '           ' → logprob: -1.142713189125061
    3. ' =' → logprob: -1.267713189125061
    4. ' are' → logprob: -3.7677130699157715
    5. ' :' → logprob: -4.3927130699157715
    6. ',' → logprob: -4.7677130699157715
    7. ' for' → logprob: -5.1427130699157715
    8. ':
' → logprob: -5.3927130699157715
    9. '            
' → logprob: -5.7677130699157715
    10. ' x' → logprob: -6.0177130699157715

Token 126: ' former' (ID: 9254)
  Prédit: 'former'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'former' → logprob: -0.1846947968006134
    2. ' former' → logprob: -1.934694766998291
    3. ' compléter' → logprob: -4.184694766998291
    4. 'form' → logprob: -5.559694766998291
    5. ' formar' → logprob: -6.934694766998291
    6. 'x' → logprob: -7.184694766998291
    7. ' form' → logprob: -7.559694766998291
    8. 'le' → logprob: -8.18469524383545
    9. ' le' → logprob: -8.18469524383545
    10. '#' → logprob: -8.30969524383545

Token 127: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6478278040885925
    2. 'un' → logprob: -1.0228278636932373
    3. ' le' → logprob: -2.8978278636932373
    4. 'le' → logprob: -3.0228278636932373
    5. ' les' → logprob: -4.897827625274658
    6. 'les' → logprob: -5.397827625274658
    7. '(' → logprob: -8.647828102111816
    8. '(un' → logprob: -8.647828102111816
    9. '(x' → logprob: -9.022828102111816
    10. ''un' → logprob: -9.147828102111816

Token 128: ' carré' (ID: 191546)
  Prédit: ' carré'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' carré' → logprob: -0.04859020933508873
    2. 'c' → logprob: -3.9235901832580566
    3. ' square' → logprob: -4.798590183258057
    4. 'car' → logprob: -4.923590183258057
    5. ' carr' → logprob: -5.548590183258057
    6. ' car' → logprob: -5.798590183258057
    7. 'square' → logprob: -6.548590183258057
    8. ' carre' → logprob: -6.923590183258057
    9. ' ' → logprob: -6.923590183258057
    10. ' coin' → logprob: -7.798590183258057

Token 129: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.60572749376297
    2. '
' → logprob: -1.1057274341583252
    3. '            
' → logprob: -3.355727434158325
    4. ':' → logprob: -3.605727434158325
    5. '  
' → logprob: -3.730727434158325
    6. '<|end|>' → logprob: -4.105727672576904
    7. ',' → logprob: -4.730727672576904
    8. ' 
' → logprob: -6.105727672576904
    9. ':
' → logprob: -6.355727672576904
    10. '```' → logprob: -6.605727672576904

Token 130: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002270198310725391
    2. '            
' → logprob: -8.875226974487305
    3. '
' → logprob: -10.375226974487305
    4. ',' → logprob: -10.875226974487305
    5. '          ' → logprob: -12.500226974487305
    6. '       ' → logprob: -12.500226974487305
    7. '<|end|>' → logprob: -12.625226974487305
    8. ':' → logprob: -12.750226974487305
    9. ' =' → logprob: -12.750226974487305
    10. '               ' → logprob: -12.875226974487305

Token 131: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.5707040429115295
    2. 'x' → logprob: -1.3207039833068848
    3. 'px' → logprob: -2.3207039833068848
    4. ' p' → logprob: -3.0707039833068848
    5. ' px' → logprob: -4.320703983306885
    6. ' x' → logprob: -4.945703983306885
    7. '           ' → logprob: -7.195703983306885
    8. '#' → logprob: -7.445703983306885
    9. 'xp' → logprob: -7.945703983306885
    10. '   ' → logprob: -8.070704460144043

Token 132: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1017063558101654
    2. '1' → logprob: -2.3517062664031982
    3. 'x' → logprob: -6.601706504821777
    4. 'tx' → logprob: -10.101706504821777
    5. 'a' → logprob: -10.226706504821777
    6. 'ox' → logprob: -11.601706504821777
    7. 'ax' → logprob: -11.726706504821777
    8. 'rot' → logprob: -11.851706504821777
    9. 'cx' → logprob: -12.101706504821777
    10. '_x' → logprob: -12.476706504821777

Token 133: ' =' (ID: 314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6521350741386414
    2. ' =' → logprob: -1.1521351337432861
    3. '1' → logprob: -2.152135133743286
    4. 'x' → logprob: -3.902135133743286
    5. '_' → logprob: -4.152134895324707
    6. '=' → logprob: -4.527134895324707
    7. '_a' → logprob: -9.902134895324707
    8. '_x' → logprob: -10.402134895324707
    9. '=(' → logprob: -11.402134895324707
    10. '_right' → logprob: -12.277134895324707

Token 134: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0005686411168426275
    2. ' (' → logprob: -7.500568866729736
    3. '   ' → logprob: -11.125568389892578
    4. '(' → logprob: -14.625568389892578
    5. 'x' → logprob: -15.125568389892578
    6. '((' → logprob: -17.125568389892578
    7. ' ' → logprob: -17.250568389892578
    8. '(y' → logprob: -17.500568389892578
    9. '  ' → logprob: -18.000568389892578
    10. '[x' → logprob: -18.375568389892578

Token 135: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0006432149093598127
    2. '(x' → logprob: -7.875643253326416
    3. ' x' → logprob: -8.250642776489258
    4. '   ' → logprob: -13.875642776489258
    5. ' (' → logprob: -14.250642776489258
    6. '[x' → logprob: -16.625642776489258
    7. ',x' → logprob: -16.750642776489258
    8. ' ' → logprob: -16.875642776489258
    9. '	x' → logprob: -16.875642776489258
    10. '(' → logprob: -17.000642776489258

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012737659562844783
    2. '2' → logprob: -9.000127792358398
    3. '+' → logprob: -14.000127792358398
    4. ' -' → logprob: -14.375127792358398
    5. ',' → logprob: -14.687627792358398
    6. ' ' → logprob: -14.812627792358398
    7. ' +' → logprob: -14.812627792358398
    8. '```' → logprob: -15.375127792358398
    9. ')' → logprob: -15.625127792358398
    10. 'y' → logprob: -15.937627792358398

Token 137: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1935790777206421
    2. ' +' → logprob: -2.4435791969299316
    3. '-' → logprob: -2.9435791969299316
    4. '+' → logprob: -3.3185791969299316
    5. ' ' → logprob: -9.068578720092773
    6. ' dy' → logprob: -9.693578720092773
    7. ',' → logprob: -10.193578720092773
    8. ' y' → logprob: -11.318578720092773
    9. 'dy' → logprob: -11.693578720092773
    10. '-d' → logprob: -11.818578720092773

Token 138: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.01842547580599785
    2. ' dy' → logprob: -4.018425464630127
    3. '-d' → logprob: -8.518425941467285
    4. '   ' → logprob: -10.518425941467285
    5. '-' → logprob: -11.268425941467285
    6. 'd' → logprob: -12.018425941467285
    7. '.dy' → logprob: -12.268425941467285
    8. '/d' → logprob: -12.393425941467285
    9. ' ' → logprob: -12.643425941467285
    10. '  ' → logprob: -12.643425941467285

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007293514790944755
    2. ' ,' → logprob: -7.250729560852051
    3. ',y' → logprob: -11.12572956085205
    4. ',
' → logprob: -12.75072956085205
    5. 'y' → logprob: -13.87572956085205
    6. ',x' → logprob: -16.125728607177734
    7. 'p' → logprob: -16.250728607177734
    8. ',n' → logprob: -16.375728607177734
    9. '+' → logprob: -16.500728607177734
    10. ' y' → logprob: -16.625728607177734

Token 140: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.029753148555755615
    2. ' y' → logprob: -3.5297532081604004
    3. '   ' → logprob: -13.154752731323242
    4. '    ' → logprob: -14.529752731323242
    5. '	y' → logprob: -15.404752731323242
    6. 'x' → logprob: -16.779752731323242
    7. ' ' → logprob: -17.029752731323242
    8. '  ' → logprob: -17.154752731323242
    9. '     ' → logprob: -18.904752731323242
    10. '       ' → logprob: -20.279752731323242

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. '2' → logprob: -13.250004768371582
    3. ')' → logprob: -13.875004768371582
    4. '```' → logprob: -14.000004768371582
    5. '
' → logprob: -14.750004768371582
    6. ' ' → logprob: -16.0625057220459
    7. 'y' → logprob: -16.0625057220459
    8. ' -' → logprob: -16.3750057220459
    9. '``' → logprob: -16.5000057220459
    10. '-' → logprob: -16.6875057220459

Token 142: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.474091500043869
    2. '+' → logprob: -0.9740915298461914
    3. '+x' → logprob: -11.224091529846191
    4. '<|end|>' → logprob: -14.974091529846191
    5. '[' → logprob: -15.974091529846191
    6. '+d' → logprob: -16.099090576171875
    7. 'dx' → logprob: -16.474090576171875
    8. ' ' → logprob: -16.599090576171875
    9. ' -' → logprob: -17.099090576171875
    10. ' plus' → logprob: -17.224090576171875

Token 143: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0031777136027812958
    2. ' dx' → logprob: -5.753177642822266
    3. '_dx' → logprob: -17.003177642822266
    4. '   ' → logprob: -18.503177642822266
    5. '(dx' → logprob: -19.253177642822266
    6. '.dx' → logprob: -19.628177642822266
    7. ' ' → logprob: -19.753177642822266
    8. '  ' → logprob: -20.128177642822266
    9. 'Dx' → logprob: -21.378177642822266
    10. 'd' → logprob: -21.378177642822266

Token 144: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.38689419627189636
    2. ')' → logprob: -1.1368942260742188
    3. ')
' → logprob: -11.011894226074219
    4. ' )
' → logprob: -12.261894226074219
    5. ')

' → logprob: -13.761894226074219
    6. ' )' → logprob: -14.636894226074219
    7. '   ' → logprob: -15.011894226074219
    8. '),' → logprob: -17.01189422607422
    9. '       ' → logprob: -17.88689422607422
    10. ')p' → logprob: -17.88689422607422

Token 145: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004745891317725182
    2. ' p' → logprob: -6.129745960235596
    3. 'p' → logprob: -6.379745960235596
    4. ',' → logprob: -7.379745960235596
    5. '            
' → logprob: -9.129745483398438
    6. '
' → logprob: -10.629745483398438
    7. '<|end|>' → logprob: -10.629745483398438
    8. ',p' → logprob: -11.379745483398438
    9. '  
' → logprob: -11.629745483398438
    10. '          ' → logprob: -11.629745483398438

Token 146: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.7012033462524414
    2. ' p' → logprob: -0.7012033462524414
    3. '           ' → logprob: -4.826203346252441
    4. '   ' → logprob: -13.076203346252441
    5. '       ' → logprob: -13.826203346252441
    6. ',' → logprob: -13.826203346252441
    7. '
' → logprob: -14.326203346252441
    8. '          ' → logprob: -14.326203346252441
    9. ' ' → logprob: -15.076203346252441
    10. '            ' → logprob: -15.326203346252441

Token 147: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.3557529857498594e-05
    2. '3' → logprob: -10.75002384185791
    3. '=' → logprob: -14.00002384185791
    4. '
' → logprob: -14.50002384185791
    5. ' =' → logprob: -15.87502384185791
    6. '

' → logprob: -16.250022888183594
    7. '' → logprob: -16.375022888183594
    8. '2' → logprob: -16.625022888183594
    9. '```' → logprob: -17.000022888183594
    10. 'p' → logprob: -17.125022888183594

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023245595395565033
    2. '=' → logprob: -3.7732455730438232
    3. ' =(' → logprob: -16.398244857788086
    4. ' ' → logprob: -17.273244857788086
    5. ',' → logprob: -18.148244857788086
    6. ')' → logprob: -18.773244857788086
    7. '=(' → logprob: -19.648244857788086
    8. ' =
' → logprob: -20.398244857788086
    9. ' =)' → logprob: -20.523244857788086
    10. '＝' → logprob: -20.523244857788086

Token 149: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.07890785485506058
    2. '(x' → logprob: -2.5789079666137695
    3. '(' → logprob: -10.95390796661377
    4. '(p' → logprob: -15.57890796661377
    5. ' ' → logprob: -15.57890796661377
    6. ' x' → logprob: -16.078907012939453
    7. '   ' → logprob: -16.953907012939453
    8. '((' → logprob: -17.453907012939453
    9. '(s' → logprob: -17.703907012939453
    10. 'x' → logprob: -17.953907012939453

Token 150: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0024856459349393845
    2. '(x' → logprob: -6.127485752105713
    3. ' x' → logprob: -8.127485275268555
    4. ' (' → logprob: -12.502485275268555
    5. '   ' → logprob: -14.252485275268555
    6. 'p' → logprob: -15.877485275268555
    7. ' ' → logprob: -16.002485275268555
    8. '(' → logprob: -16.127485275268555
    9. '	x' → logprob: -16.377485275268555
    10. ')' → logprob: -16.502485275268555

Token 151: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10041531175374985
    2. '1' → logprob: -2.3504152297973633
    3. '3' → logprob: -9.475415229797363
    4. '-' → logprob: -9.975415229797363
    5. ' -' → logprob: -9.975415229797363
    6. '```' → logprob: -11.100415229797363
    7. '``' → logprob: -11.975415229797363
    8. '
' → logprob: -12.975415229797363
    9. ' ' → logprob: -13.037915229797363
    10. '[' → logprob: -13.225415229797363

Token 152: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.002493729814887047
    2. '-' → logprob: -6.002493858337402
    3. '-d' → logprob: -11.127493858337402
    4. ' ' → logprob: -13.127493858337402
    5. ',' → logprob: -13.752493858337402
    6. ' -
' → logprob: -16.627492904663086
    7. '<|end|>' → logprob: -16.877492904663086
    8. '  ' → logprob: -17.252492904663086
    9. ' ' → logprob: -17.377492904663086
    10. '   ' → logprob: -17.627492904663086

Token 153: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.04858953505754471
    2. ' dy' → logprob: -3.0485894680023193
    3. '.dy' → logprob: -13.548589706420898
    4. ' ' → logprob: -14.923589706420898
    5. 'Dy' → logprob: -16.1735897064209
    6. 'dym' → logprob: -16.6735897064209
    7. '	d' → logprob: -16.6735897064209
    8. '   ' → logprob: -16.7985897064209
    9. '```' → logprob: -16.9235897064209
    10. 'dyr' → logprob: -17.0485897064209

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0564331205387134e-05
    2. ' ,' → logprob: -11.62501049041748
    3. ',y' → logprob: -13.62501049041748
    4. 'y' → logprob: -16.500011444091797
    5. '<|end|>' → logprob: -16.500011444091797
    6. '‌,' → logprob: -17.000011444091797
    7. ')' → logprob: -17.000011444091797
    8. '),' → logprob: -17.125011444091797
    9. ',
' → logprob: -17.875011444091797
    10. ' y' → logprob: -18.125011444091797

Token 155: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5759400725364685
    2. ' y' → logprob: -0.8259400725364685
    3. '    ' → logprob: -15.075940132141113
    4. '	y' → logprob: -16.325939178466797
    5. ' ' → logprob: -16.450939178466797
    6. '   ' → logprob: -17.450939178466797
    7. '(y' → logprob: -17.825939178466797
    8. '     ' → logprob: -17.950939178466797
    9. '        ' → logprob: -18.075939178466797
    10. ''y' → logprob: -18.200939178466797

Token 156: '2' (ID: 17)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4197158217430115
    2. '+' → logprob: -1.1697158813476562
    3. '2' → logprob: -3.6697158813476562
    4. '4' → logprob: -6.294715881347656
    5. ' +' → logprob: -6.419715881347656
    6. '1' → logprob: -6.419715881347656
    7. ',' → logprob: -7.419715881347656
    8. '[' → logprob: -8.419715881347656
    9. '+x' → logprob: -8.544715881347656
    10. '```' → logprob: -8.919715881347656

Token 157: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931583285331726
    2. ' +' → logprob: -0.6931583285331726
    3. ')' → logprob: -12.068158149719238
    4. ' ' → logprob: -14.068158149719238
    5. ' +
' → logprob: -14.068158149719238
    6. '<|end|>' → logprob: -14.068158149719238
    7. ',' → logprob: -14.193158149719238
    8. '+
' → logprob: -14.568158149719238
    9. ' plus' → logprob: -15.193158149719238
    10. '+x' → logprob: -15.318158149719238

Token 158: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.014167623594403267
    2. ' dx' → logprob: -4.264167785644531
    3. '_dx' → logprob: -12.889167785644531
    4. '(dx' → logprob: -13.889167785644531
    5. '.dx' → logprob: -14.764167785644531
    6. ' ' → logprob: -16.63916778564453
    7. 'xd' → logprob: -16.88916778564453
    8. 'x' → logprob: -16.88916778564453
    9. '   ' → logprob: -17.76416778564453
    10. '  ' → logprob: -18.63916778564453

Token 159: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01815708540380001
    2. ')
' → logprob: -4.018157005310059
    3. ')

' → logprob: -12.643157005310059
    4. ')
' → logprob: -12.643157005310059
    5. ' )' → logprob: -15.143157005310059
    6. '   ' → logprob: -15.893157005310059
    7. '           ' → logprob: -16.768157958984375
    8. ' )
' → logprob: -17.393157958984375
    9. ')`
' → logprob: -17.643157958984375
    10. ')`' → logprob: -18.143157958984375

Token 160: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00486346147954464
    2. '
' → logprob: -6.254863262176514
    3. '            
' → logprob: -6.754863262176514
    4. '<|end|>' → logprob: -6.879863262176514
    5. '  
' → logprob: -8.254863739013672
    6. '       ' → logprob: -9.254863739013672
    7. ' 
' → logprob: -9.754863739013672
    8. '               ' → logprob: -10.004863739013672
    9. '   ' → logprob: -10.129863739013672
    10. '\n' → logprob: -10.254863739013672

Token 161: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01636301539838314
    2. 'if' (adapté à ' if') → logprob: -5.016363143920898
    3. ' if' → logprob: -5.391363143920898
    4. '
' → logprob: -5.891363143920898
    5. '            
' → logprob: -6.266363143920898
    6. '<|end|>' → logprob: -9.266363143920898
    7. '  
' → logprob: -9.516363143920898
    8. ' 
' → logprob: -9.891363143920898
    9. '       ' → logprob: -10.266363143920898
    10. '   ' → logprob: -10.766363143920898

Token 162: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.020558351650834084
    2. 'p' → logprob: -3.8955583572387695
    3. ' (' → logprob: -12.02055835723877
    4. '(p' → logprob: -12.14555835723877
    5. ' ' → logprob: -12.39555835723877
    6. '(' → logprob: -14.14555835723877
    7. '{' → logprob: -16.520557403564453
    8. ' ' → logprob: -16.645557403564453
    9. '	p' → logprob: -16.645557403564453
    10. '<p' → logprob: -17.145557403564453

Token 163: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.127333340875339e-06
    2. '4' → logprob: -12.750003814697266
    3. ' in' → logprob: -15.000003814697266
    4. '
' → logprob: -15.375003814697266
    5. '

' → logprob: -16.125003814697266
    6. '(p' → logprob: -16.562503814697266
    7. 'in' → logprob: -16.750003814697266
    8. '_' → logprob: -17.000003814697266
    9. ' ' → logprob: -17.000003814697266
    10. '```' → logprob: -17.187503814697266

Token 164: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25196754932403564
    2. 'in' → logprob: -1.5019675493240356
    3. ' ' → logprob: -10.501967430114746
    4. 'and' → logprob: -13.251967430114746
    5. ' not' → logprob: -13.751967430114746
    6. 'not' → logprob: -14.126967430114746
    7. ' ' → logprob: -14.126967430114746
    8. '<|end|>' → logprob: -14.126967430114746
    9. ' and' → logprob: -14.251967430114746
    10. '  ' → logprob: -14.376967430114746

Token 165: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.12692904472351074
    2. ' point' → logprob: -2.1269290447235107
    3. '(point' → logprob: -14.25192928314209
    4. '	point' → logprob: -15.25192928314209
    5. '_point' → logprob: -17.126928329467773
    6. '.point' → logprob: -18.001928329467773
    7. 'Point' → logprob: -18.626928329467773
    8. 'p' → logprob: -18.876928329467773
    9. 'punkt' → logprob: -19.501928329467773
    10. 'points' → logprob: -19.751928329467773

Token 166: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -8.180258191714529e-06
    2. 'set' → logprob: -11.875008583068848
    3. 's' → logprob: -13.875008583068848
    4. '_' → logprob: -16.50000762939453
    5. ' set' → logprob: -17.00000762939453
    6. 'Set' → logprob: -17.37500762939453
    7. '_SET' → logprob: -17.50000762939453
    8. '_sets' → logprob: -17.87500762939453
    9. 'et' → logprob: -18.25000762939453
    10. '_s' → logprob: -18.62500762939453

Token 167: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.004083624575287104
    2. 'and' → logprob: -5.504083633422852
    3. '           ' → logprob: -12.379083633422852
    4. '            ' → logprob: -14.254083633422852
    5. ' ' → logprob: -16.12908363342285
    6. '               ' → logprob: -16.25408363342285
    7. '        ' → logprob: -17.25408363342285
    8. '	and' → logprob: -17.25408363342285
    9. '          ' → logprob: -17.50408363342285
    10. ' ' → logprob: -17.62908363342285

Token 168: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.0067154900170862675
    2. 'p' → logprob: -5.006715297698975
    3. '(p' → logprob: -16.381715774536133
    4. ' (' → logprob: -17.256715774536133
    5. ' ' → logprob: -19.006715774536133
    6. ' ' → logprob: -19.256715774536133
    7. '(' → logprob: -20.631715774536133
    8. '	p' → logprob: -21.256715774536133
    9. '   ' → logprob: -22.006715774536133
    10. '<p' → logprob: -22.256715774536133

Token 169: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. '۴' → logprob: -18.625
    3. ' ' → logprob: -18.625
    4. '' → logprob: -19.0
    5. '٤' → logprob: -19.25
    6. '৪' → logprob: -19.375
    7. 'oint' → logprob: -19.375
    8. 'oints' → logprob: -19.5
    9. '४' → logprob: -19.5625
    10. '４' → logprob: -20.5

Token 170: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06197015196084976
    2. 'in' → logprob: -2.8119702339172363
    3. ' ' → logprob: -13.811969757080078
    4. '[' → logprob: -15.061969757080078
    5. 's' → logprob: -15.186969757080078
    6. 'In' → logprob: -15.186969757080078
    7. ')' → logprob: -15.186969757080078
    8. ' ' → logprob: -16.061969757080078
    9. 'import' → logprob: -16.561969757080078
    10. '	in' → logprob: -17.061969757080078

Token 171: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.023245712742209435
    2. ' point' → logprob: -3.7732458114624023
    3. '(point' → logprob: -15.523245811462402
    4. '	point' → logprob: -17.023244857788086
    5. '.point' → logprob: -19.273244857788086
    6. ' ' → logprob: -20.398244857788086
    7. '_point' → logprob: -20.398244857788086
    8. 'Point' → logprob: -20.523244857788086
    9. '   ' → logprob: -22.148244857788086
    10. 'points' → logprob: -22.148244857788086

Token 172: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -7.52919222577475e-05
    2. 'set' → logprob: -9.500075340270996
    3. 's' → logprob: -15.375075340270996
    4. '_' → logprob: -16.62507438659668
    5. 'Set' → logprob: -16.75007438659668
    6. 'point' → logprob: -17.37507438659668
    7. '_s' → logprob: -18.00007438659668
    8. 'et' → logprob: -18.25007438659668
    9. ' _' → logprob: -18.37507438659668
    10. '_SET' → logprob: -18.37507438659668

Token 173: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021657755598425865
    2. ':
' → logprob: -4.146657943725586
    3. '               ' → logprob: -5.396657943725586
    4. '           ' → logprob: -7.146657943725586
    5. ' and' → logprob: -8.646657943725586
    6. ' :' → logprob: -10.021657943725586
    7. ',' → logprob: -10.271657943725586
    8. '       ' → logprob: -11.646657943725586
    9. ' :
' → logprob: -12.396657943725586
    10. 'and' → logprob: -12.646657943725586

Token 174: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.88418151892256e-05
    2. '           ' → logprob: -10.125059127807617
    3. '                
' → logprob: -12.125059127807617
    4. ',' → logprob: -12.750059127807617
    5. '                               ' → logprob: -13.125059127807617
    6. '                   ' → logprob: -13.250059127807617
    7. '<|end|>' → logprob: -13.500059127807617
    8. ')' → logprob: -14.500059127807617
    9. '```' → logprob: -14.500059127807617
    10. '                       ' → logprob: -14.750059127807617

Token 175: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' (adapté à ' area') → logprob: -0.7053300738334656
    2. ' area' → logprob: -1.2053301334381104
    3. '               ' → logprob: -1.7053301334381104
    4. '                   ' → logprob: -4.330329895019531
    5. ' max' → logprob: -5.080329895019531
    6. '
' → logprob: -5.705329895019531
    7. 'max' → logprob: -6.830329895019531
    8. '           ' → logprob: -7.830329895019531
    9. 'side' → logprob: -9.580329895019531
    10. '                
' → logprob: -9.580329895019531

Token 176: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029762526974081993
    2. '=' → logprob: -3.5297625064849854
    3. '_candidate' → logprob: -12.404762268066406
    4. '   ' → logprob: -12.779762268066406
    5. ' ' → logprob: -13.279762268066406
    6. 's' → logprob: -14.529762268066406
    7. 'max' → logprob: -14.529762268066406
    8. '=max' → logprob: -14.779762268066406
    9. 'candidate' → logprob: -15.154762268066406
    10. ' +=' → logprob: -15.529762268066406

Token 177: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.007482514716684818
    2. '(dx' → logprob: -5.257482528686523
    3. ' dx' → logprob: -6.132482528686523
    4. 'abs' → logprob: -10.132482528686523
    5. '   ' → logprob: -11.132482528686523
    6. ' (' → logprob: -12.507482528686523
    7. '(' → logprob: -12.507482528686523
    8. 'max' → logprob: -12.757482528686523
    9. '```' → logprob: -12.882482528686523
    10. '           ' → logprob: -13.507482528686523

Token 178: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08737080544233322
    2. ' *' → logprob: -2.9623708724975586
    3. '**' → logprob: -3.4623708724975586
    4. ' **' → logprob: -7.712370872497559
    5. '2' → logprob: -8.837370872497559
    6. '```' → logprob: -11.962370872497559
    7. ' ' → logprob: -12.337370872497559
    8. '²' → logprob: -13.087370872497559
    9. ' ' → logprob: -13.962370872497559
    10. '^' → logprob: -14.462370872497559

Token 179: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.00016468366084154695
    2. ' dx' → logprob: -9.125164985656738
    3. 'dy' → logprob: -10.125164985656738
    4. '-d' → logprob: -11.750164985656738
    5. 'd' → logprob: -12.875164985656738
    6. '_dx' → logprob: -13.000164985656738
    7. '-' → logprob: -14.375164985656738
    8. '(dx' → logprob: -14.750164985656738
    9. '```' → logprob: -14.750164985656738
    10. '.dx' → logprob: -14.875164985656738

Token 180: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2016693353652954
    2. '+' → logprob: -1.7016693353652954
    3. '<|end|>' → logprob: -8.326669692993164
    4. ' ' → logprob: -11.951669692993164
    5. ' plus' → logprob: -12.701669692993164
    6. '<|end|>' → logprob: -13.451669692993164
    7. ' ' → logprob: -13.951669692993164
    8. ' +
' → logprob: -14.826669692993164
    9. ',' → logprob: -15.201669692993164
    10. '>' → logprob: -15.889169692993164

Token 181: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.00033558503491804004
    2. ' dy' → logprob: -8.000335693359375
    3. 'd' → logprob: -17.750335693359375
    4. ' ' → logprob: -17.750335693359375
    5. '.dy' → logprob: -17.750335693359375
    6. '   ' → logprob: -18.250335693359375
    7. 'dym' → logprob: -19.500335693359375
    8. '
' → logprob: -19.750335693359375
    9. '  ' → logprob: -19.750335693359375
    10. 'ddy' → logprob: -19.875335693359375

Token 182: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0005736440070904791
    2. '**' → logprob: -7.500573635101318
    3. ' *' → logprob: -11.000574111938477
    4. '*d' → logprob: -13.250574111938477
    5. '2' → logprob: -14.625574111938477
    6. 'dy' → logprob: -14.750574111938477
    7. '```' → logprob: -15.125574111938477
    8. '*y' → logprob: -15.625574111938477
    9. '*(' → logprob: -15.750574111938477
    10. '*&' → logprob: -15.875574111938477

Token 183: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.3485601246356964
    2. '2' → logprob: -1.223560094833374
    3. ' dy' → logprob: -9.473560333251953
    4. ' ' → logprob: -10.848560333251953
    5. '*' → logprob: -12.723560333251953
    6. 'ddy' → logprob: -12.973560333251953
    7. '```' → logprob: -12.973560333251953
    8. 'dx' → logprob: -13.223560333251953
    9. 'dym' → logprob: -13.223560333251953
    10. '**' → logprob: -13.598560333251953

Token 184: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3667002022266388
    2. '           ' → logprob: -1.2417001724243164
    3. '
' → logprob: -5.116700172424316
    4. ' if' → logprob: -5.616700172424316
    5. '                   ' → logprob: -5.741700172424316
    6. '       ' → logprob: -5.991700172424316
    7. 'if' → logprob: -6.241700172424316
    8. '   ' → logprob: -8.116700172424316
    9. '<|end|>' → logprob: -9.241700172424316
    10. 'max' → logprob: -9.866700172424316

Token 185: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09505339711904526
    2. '           ' → logprob: -2.5950534343719482
    3. '
' → logprob: -4.595053195953369
    4. ' if' → logprob: -5.845053195953369
    5. '       ' → logprob: -6.970053195953369
    6. '                   ' → logprob: -7.220053195953369
    7. 'if' → logprob: -7.845053195953369
    8. '            
' → logprob: -8.345053672790527
    9. '                
' → logprob: -8.720053672790527
    10. '  
' → logprob: -9.470053672790527

Token 186: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7756255269050598
    2. ' if' → logprob: -0.9006255269050598
    3. '               ' → logprob: -2.275625467300415
    4. 'max' → logprob: -3.650625467300415
    5. ' max' → logprob: -5.900625705718994
    6. '           ' → logprob: -6.900625705718994
    7. '
' → logprob: -7.775625705718994
    8. '                   ' → logprob: -8.150625228881836
    9. '   ' → logprob: -10.775625228881836
    10. ' ' → logprob: -11.025625228881836

Token 187: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.07888989895582199
    2. 'area' → logprob: -2.578889846801758
    3. '(area' → logprob: -15.953889846801758
    4. ' max' → logprob: -18.203889846801758
    5. 'Area' → logprob: -18.578889846801758
    6. ' ' → logprob: -18.828889846801758
    7. 'max' → logprob: -19.453889846801758
    8. ' ' → logprob: -19.453889846801758
    9. ' área' → logprob: -19.828889846801758
    10. '_area' → logprob: -19.828889846801758

Token 188: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.00865109171718359
    2. '>' → logprob: -4.758651256561279
    3. ' ' → logprob: -10.258650779724121
    4. ' >

' → logprob: -14.383650779724121
    5. ' ' → logprob: -15.008650779724121
    6. ' >
' → logprob: -15.633650779724121
    7. ' >
' → logprob: -16.133651733398438
    8. ')' → logprob: -16.133651733398438
    9. '   ' → logprob: -16.258651733398438
    10. '  ' → logprob: -16.633651733398438

Token 189: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.16022422909736633
    2. ' max' → logprob: -1.910224199295044
    3. '	max' → logprob: -17.28522491455078
    4. '_max' → logprob: -18.41022491455078
    5. '   ' → logprob: -18.91022491455078
    6. '(max' → logprob: -20.03522491455078
    7. '=max' → logprob: -20.66022491455078
    8. '[max' → logprob: -21.16022491455078
    9. ' ' → logprob: -21.16022491455078
    10. '
' → logprob: -21.28522491455078

Token 190: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: 0.0
    2. 'area' → logprob: -17.125
    3. '_max' → logprob: -18.25
    4. '_' → logprob: -18.875
    5. '_AREA' → logprob: -19.75
    6. 'Area' → logprob: -20.125
    7. '_space' → logprob: -20.125
    8. ' area' → logprob: -20.5
    9. ' _' → logprob: -21.125
    10. '_square' → logprob: -21.875

Token 191: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17618802189826965
    2. ':
' → logprob: -2.4261879920959473
    3. '                   ' → logprob: -2.8011879920959473
    4. '               ' → logprob: -4.551187992095947
    5. '                       ' → logprob: -7.176187992095947
    6. '           ' → logprob: -8.176188468933105
    7. ' :' → logprob: -8.676188468933105
    8. '=' → logprob: -9.426188468933105
    9. ' :
' → logprob: -9.426188468933105
    10. ' =' → logprob: -9.551188468933105

Token 192: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03091958910226822
    2. '               ' → logprob: -3.5309195518493652
    3. '                       ' → logprob: -7.030919551849365
    4. '           ' → logprob: -9.405920028686523
    5. '
' → logprob: -9.530920028686523
    6. '                    
' → logprob: -10.655920028686523
    7. '                               ' → logprob: -10.780920028686523
    8. ' max' → logprob: -11.405920028686523
    9. '                           ' → logprob: -11.655920028686523
    10. ' 
' → logprob: -11.655920028686523

Token 193: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.16996438801288605
    2. ' max' → logprob: -1.9199644327163696
    3. '                   ' → logprob: -4.66996431350708
    4. '                       ' → logprob: -8.419964790344238
    5. '               ' → logprob: -9.419964790344238
    6. '           ' → logprob: -11.919964790344238
    7. '   ' → logprob: -12.294964790344238
    8. '       ' → logprob: -12.669964790344238
    9. '	max' → logprob: -13.794964790344238
    10. '
' → logprob: -14.169964790344238

Token 194: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -8.895480277715251e-06
    2. '_' → logprob: -11.750008583068848
    3. '_space' → logprob: -14.875008583068848
    4. ' _' → logprob: -15.125008583068848
    5. '_square' → logprob: -15.625008583068848
    6. '_are' → logprob: -17.375009536743164
    7. 'area' → logprob: -17.500009536743164
    8. 'Area' → logprob: -17.750009536743164
    9. '_AREA' → logprob: -17.750009536743164
    10. '_code' → logprob: -18.500009536743164

Token 195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889033854007721
    2. '=' → logprob: -2.578890323638916
    3. ' ' → logprob: -14.828890800476074
    4. ' =
' → logprob: -16.203889846801758
    5. ',' → logprob: -16.328889846801758
    6. '=

' → logprob: -17.578889846801758
    7. ' =
' → logprob: -18.453889846801758
    8. ' area' → logprob: -18.578889846801758
    9. '＝' → logprob: -18.703889846801758
    10. '=max' → logprob: -18.828889846801758

Token 196: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.023245595395565033
    2. ' area' → logprob: -3.7732455730438232
    3. ' ' → logprob: -16.148244857788086
    4. '(area' → logprob: -18.023244857788086
    5. 'Area' → logprob: -19.023244857788086
    6. ' ' → logprob: -19.273244857788086
    7. 'areas' → logprob: -19.648244857788086
    8. '_area' → logprob: -19.773244857788086
    9. ' área' → logprob: -19.773244857788086
    10. '   ' → logprob: -19.773244857788086

Token 197: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2519382238388062
    2. '           ' → logprob: -1.5019382238388062
    3. 'return' → logprob: -1.7519382238388062
    4. '    
' → logprob: -2.2519383430480957
    5. ' return' → logprob: -2.6269383430480957
    6. '   ' → logprob: -2.7519383430480957
    7. '  
' → logprob: -4.001938343048096
    8. '\n' → logprob: -4.251938343048096
    9. '            
' → logprob: -4.376938343048096
    10. '       ' → logprob: -4.626938343048096

Token 198: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09024374186992645
    2. '   ' → logprob: -3.4652438163757324
    3. ' return' → logprob: -4.090243816375732
    4. 'return' → logprob: -4.465243816375732
    5. '       ' → logprob: -4.715243816375732
    6. '    
' → logprob: -5.465243816375732
    7. '            
' → logprob: -5.840243816375732
    8. '               ' → logprob: -6.090243816375732
    9. '
' → logprob: -6.215243816375732
    10. '  
' → logprob: -6.465243816375732

Token 199: ' p' (ID: 275)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03520505875349045
    2. 'p' (adapté à ' p') → logprob: -3.535205125808716
    3. ' p' → logprob: -5.660204887390137
    4. '       ' → logprob: -7.160204887390137
    5. '
' → logprob: -7.410204887390137
    6. 'return' → logprob: -8.660204887390137
    7. '            
' → logprob: -8.660204887390137
    8. '          ' → logprob: -9.785204887390137
    9. '               ' → logprob: -10.160204887390137
    10. ' return' → logprob: -10.285204887390137

Token 200: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.580929347255733e-05
    2. '4' → logprob: -11.750016212463379
    3. '5' → logprob: -12.125016212463379
    4. '33' → logprob: -14.375016212463379
    5. 'r' → logprob: -14.375016212463379
    6. '#' → logprob: -15.250016212463379
    7. '34' → logprob: -15.375016212463379
    8. '31' → logprob: -15.500016212463379
    9. 'rot' → logprob: -15.500016212463379
    10. '35' → logprob: -16.750015258789062

Token 201: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22549626231193542
    2. '=' → logprob: -1.6004962921142578
    3. '2' → logprob: -10.100496292114258
    4. 'p' → logprob: -10.475496292114258
    5. '1' → logprob: -12.100496292114258
    6. ' =(' → logprob: -12.850496292114258
    7. 'a' → logprob: -13.725496292114258
    8. '=(' → logprob: -13.725496292114258
    9. '_alt' → logprob: -13.975496292114258
    10. ' ' → logprob: -13.975496292114258

Token 202: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.008625566959381104
    2. ' (' → logprob: -4.758625507354736
    3. '(' → logprob: -11.508625984191895
    4. 'x' → logprob: -14.508625984191895
    5. '((' → logprob: -15.008625984191895
    6. ' ' → logprob: -16.508625030517578
    7. '   ' → logprob: -17.133625030517578
    8. ' x' → logprob: -17.758625030517578
    9. '{x' → logprob: -18.133625030517578
    10. '(X' → logprob: -18.258625030517578

Token 203: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.016163639724254608
    2. '(x' → logprob: -4.1411638259887695
    3. ' x' → logprob: -9.14116382598877
    4. ' (' → logprob: -11.01616382598877
    5. '(' → logprob: -12.76616382598877
    6. '   ' → logprob: -13.76616382598877
    7. '{x' → logprob: -14.76616382598877
    8. '(
' → logprob: -14.89116382598877
    9. '	x' → logprob: -15.51616382598877
    10. '```' → logprob: -15.89116382598877

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00418299064040184
    2. '2' → logprob: -5.754182815551758
    3. 'x' → logprob: -7.879182815551758
    4. 'y' → logprob: -8.379182815551758
    5. '(x' → logprob: -8.504182815551758
    6. '(' → logprob: -9.629182815551758
    7. '(y' → logprob: -10.629182815551758
    8. ' y' → logprob: -11.004182815551758
    9. '+' → logprob: -11.004182815551758
    10. '[' → logprob: -11.379182815551758

Token 205: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.28201478719711304
    2. ' +' → logprob: -1.4070148468017578
    3. 'dy' → logprob: -7.657014846801758
    4. ',' → logprob: -8.532014846801758
    5. 'y' → logprob: -9.907014846801758
    6. ' dy' → logprob: -10.032014846801758
    7. ' ,' → logprob: -10.782014846801758
    8. ' ' → logprob: -10.782014846801758
    9. '[' → logprob: -11.407014846801758
    10. '+,' → logprob: -11.657014846801758

Token 206: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0017054134514182806
    2. ' dy' → logprob: -6.376705646514893
    3. '-d' → logprob: -13.501705169677734
    4. '.dy' → logprob: -14.126705169677734
    5. '-' → logprob: -14.751705169677734
    6. ' ' → logprob: -15.626705169677734
    7. ' -' → logprob: -16.001705169677734
    8. '```' → logprob: -16.501705169677734
    9. '   ' → logprob: -16.626705169677734
    10. 'd' → logprob: -17.376705169677734

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023274161503650248
    2. ' ,' → logprob: -8.375232696533203
    3. ',y' → logprob: -13.250232696533203
    4. ')' → logprob: -16.500232696533203
    5. ',
' → logprob: -16.875232696533203
    6. '<|end|>' → logprob: -17.125232696533203
    7. '           ' → logprob: -17.250232696533203
    8. 'y' → logprob: -17.500232696533203
    9. '‌,' → logprob: -17.625232696533203
    10. '`,' → logprob: -17.625232696533203

Token 208: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.06196768581867218
    2. 'y' → logprob: -2.811967611312866
    3. '<|end|>' → logprob: -17.186967849731445
    4. ' ' → logprob: -17.311967849731445
    5. '(y' → logprob: -18.311967849731445
    6. '	y' → logprob: -18.311967849731445
    7. ',' → logprob: -18.686967849731445
    8. 'x' → logprob: -18.811967849731445
    9. ''y' → logprob: -19.061967849731445
    10. 'Y' → logprob: -19.061967849731445

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019364648323971778
    2. ' -' → logprob: -9.75019359588623
    3. ',' → logprob: -9.87519359588623
    4. '-' → logprob: -10.37519359588623
    5. ' y' → logprob: -11.00019359588623
    6. ' ' → logprob: -11.00019359588623
    7. 'y' → logprob: -11.12519359588623
    8. '```' → logprob: -12.62519359588623
    9. ')' → logprob: -15.00019359588623
    10. '   ' → logprob: -16.000194549560547

Token 210: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5759986042976379
    2. '-' → logprob: -0.8259986042976379
    3. '<|end|>' → logprob: -10.450998306274414
    4. ',' → logprob: -10.575998306274414
    5. ' ' → logprob: -13.325998306274414
    6. ')' → logprob: -13.575998306274414
    7. '-x' → logprob: -13.950998306274414
    8. '+' → logprob: -15.950998306274414
    9. '-d' → logprob: -16.325998306274414
    10. '—' → logprob: -16.325998306274414

Token 211: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0009119403548538685
    2. ' dx' → logprob: -7.000911712646484
    3. '_dx' → logprob: -14.750911712646484
    4. '(dx' → logprob: -16.875911712646484
    5. '.dx' → logprob: -17.250911712646484
    6. 'Dx' → logprob: -20.500911712646484
    7. 'd' → logprob: -20.750911712646484
    8. 'DX' → logprob: -21.500911712646484
    9. 'xd' → logprob: -21.750911712646484
    10. ' ' → logprob: -22.000911712646484

Token 212: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931917071342468
    2. ')
' → logprob: -0.6931917071342468
    3. ' )
' → logprob: -10.693191528320312
    4. ')
' → logprob: -11.568191528320312
    5. ' )' → logprob: -12.068191528320312
    6. '           ' → logprob: -12.818191528320312
    7. ')p' → logprob: -13.443191528320312
    8. '   ' → logprob: -14.318191528320312
    9. '       ' → logprob: -14.693191528320312
    10. ' ' → logprob: -14.943191528320312

Token 213: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5918782949447632
    2. ' p' → logprob: -1.3418782949447632
    3. 'p' → logprob: -2.0918784141540527
    4. '   ' → logprob: -3.0918784141540527
    5. '<|end|>' → logprob: -5.341878414154053
    6. ' ' → logprob: -5.466878414154053
    7. ',' → logprob: -5.466878414154053
    8. ',p' → logprob: -6.841878414154053
    9. '	p' → logprob: -7.341878414154053
    10. '       ' → logprob: -7.841878414154053

Token 214: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.07894409447908401
    2. 'p' (adapté à ' p') → logprob: -2.578944206237793
    3. '           ' → logprob: -9.828944206237793
    4. '   ' → logprob: -15.828944206237793
    5. '	p' → logprob: -15.828944206237793
    6. ' ' → logprob: -16.453943252563477
    7. ' ' → logprob: -16.578943252563477
    8. ',' → logprob: -16.828943252563477
    9. ',p' → logprob: -16.953943252563477
    10. '            ' → logprob: -17.328943252563477

Token 215: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00023095356300473213
    2. '3' → logprob: -8.37523078918457
    3. '(' → logprob: -16.25023078918457
    4. '=' → logprob: -16.62523078918457
    5. '[' → logprob: -16.87523078918457
    6. '```' → logprob: -17.37523078918457
    7. ' =' → logprob: -17.50023078918457
    8. '' → logprob: -17.81273078918457
    9. '
' → logprob: -17.93773078918457
    10. '(s' → logprob: -18.12523078918457

Token 216: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687145709991455
    2. ' =' → logprob: -1.1368714570999146
    3. ')' → logprob: -16.011871337890625
    4. '=(' → logprob: -16.011871337890625
    5. '<|end|>' → logprob: -16.886871337890625
    6. ',' → logprob: -17.011871337890625
    7. '＝' → logprob: -17.136871337890625
    8. ' =(' → logprob: -17.386871337890625
    9. '=
' → logprob: -17.636871337890625
    10. ' ' → logprob: -18.136871337890625

Token 217: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0052350712940096855
    2. ' (' → logprob: -5.255235195159912
    3. '(' → logprob: -13.630234718322754
    4. 'x' → logprob: -16.00523567199707
    5. '   ' → logprob: -18.88023567199707
    6. ' x' → logprob: -19.13023567199707
    7. ' ' → logprob: -19.25523567199707
    8. '((' → logprob: -20.50523567199707
    9. '(s' → logprob: -21.38023567199707
    10. '(
' → logprob: -21.75523567199707

Token 218: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.38691654801368713
    2. '(x' → logprob: -1.1369165182113647
    3. ' (' → logprob: -10.386916160583496
    4. ' x' → logprob: -11.261916160583496
    5. '   ' → logprob: -14.261916160583496
    6. '(' → logprob: -14.386916160583496
    7. '	x' → logprob: -15.761916160583496
    8. '(
' → logprob: -16.011917114257812
    9. ',x' → logprob: -16.886917114257812
    10. '{x' → logprob: -17.011917114257812

Token 219: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00043686782009899616
    2. 'j' → logprob: -8.625436782836914
    3. '[j' → logprob: -8.750436782836914
    4. '1' → logprob: -9.875436782836914
    5. '```' → logprob: -11.125436782836914
    6. '+' → logprob: -11.750436782836914
    7. ' j' → logprob: -12.500436782836914
    8. '[' → logprob: -12.500436782836914
    9. '3' → logprob: -12.625436782836914
    10. ' ' → logprob: -12.875436782836914

Token 220: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12693209946155548
    2. '+' → logprob: -2.126932144165039
    3. '[' → logprob: -13.876932144165039
    4. ' ' → logprob: -14.001932144165039
    5. ' +
' → logprob: -14.001932144165039
    6. '<|end|>' → logprob: -14.751932144165039
    7. ' plus' → logprob: -15.126932144165039
    8. '+
' → logprob: -15.376932144165039
    9. '...' → logprob: -16.12693214416504
    10. ',' → logprob: -16.50193214416504

Token 221: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.002805467927828431
    2. ' dy' → logprob: -5.877805233001709
    3. '.dy' → logprob: -15.127805709838867
    4. '<|end|>' → logprob: -16.377805709838867
    5. 'ddy' → logprob: -16.502805709838867
    6. 'dym' → logprob: -17.252805709838867
    7. ' ' → logprob: -17.502805709838867
    8. 'd' → logprob: -17.752805709838867
    9. 'dyr' → logprob: -17.877805709838867
    10. 'Dy' → logprob: -18.627805709838867

Token 222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.729906196298543e-06
    2. ' ,' → logprob: -11.625009536743164
    3. ',y' → logprob: -14.375009536743164
    4. ',
' → logprob: -16.500009536743164
    5. '<|end|>' → logprob: -16.875009536743164
    6. ',user' → logprob: -18.625009536743164
    7. '‌,' → logprob: -19.125009536743164
    8. 'y' → logprob: -19.375009536743164
    9. ',n' → logprob: -20.375009536743164
    10. '，' → logprob: -20.375009536743164

Token 223: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011047935113310814
    2. ' y' → logprob: -4.511047840118408
    3. '   ' → logprob: -17.63604736328125
    4. '	y' → logprob: -17.76104736328125
    5. ' ' → logprob: -17.88604736328125
    6. '    ' → logprob: -18.01104736328125
    7. 'x' → logprob: -19.13604736328125
    8. '  ' → logprob: -19.88604736328125
    9. ''y' → logprob: -20.26104736328125
    10. '     ' → logprob: -20.63604736328125

Token 224: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.314625690924004e-05
    2. '-' → logprob: -10.375073432922363
    3. ' -' → logprob: -10.375073432922363
    4. ' ' → logprob: -12.000073432922363
    5. '```' → logprob: -13.875073432922363
    6. '   ' → logprob: -13.875073432922363
    7. 'x' → logprob: -14.000073432922363
    8. '
' → logprob: -15.000073432922363
    9. '[' → logprob: -15.125073432922363
    10. '_' → logprob: -15.500073432922363

Token 225: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12693166732788086
    2. '-' → logprob: -2.126931667327881
    3. '-d' → logprob: -13.876932144165039
    4. ' ' → logprob: -13.876932144165039
    5. ')' → logprob: -14.376932144165039
    6. ',' → logprob: -14.501932144165039
    7. '[' → logprob: -15.251932144165039
    8. ' ' → logprob: -15.751932144165039
    9. ' dy' → logprob: -16.75193214416504
    10. '   ' → logprob: -16.87693214416504

Token 226: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0009319446398876607
    2. ' dx' → logprob: -7.000931739807129
    3. '(dx' → logprob: -12.375931739807129
    4. 'x' → logprob: -12.625931739807129
    5. '1' → logprob: -12.750931739807129
    6. '_dx' → logprob: -12.875931739807129
    7. 'xd' → logprob: -13.000931739807129
    8. 'dy' → logprob: -13.375931739807129
    9. 'cx' → logprob: -13.625931739807129
    10. 'kx' → logprob: -14.875931739807129

Token 227: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3132724165916443
    2. ')' → logprob: -1.313272476196289
    3. '           ' → logprob: -11.938272476196289
    4. ')
' → logprob: -12.938272476196289
    5. ' )
' → logprob: -14.188272476196289
    6. ')

' → logprob: -14.688272476196289
    7. 'if' → logprob: -14.813272476196289
    8. ' )' → logprob: -15.438272476196289
    9. ')`
' → logprob: -17.56327247619629
    10. '       ' → logprob: -17.68827247619629

Token 228: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00017076305812224746
    2. ' if' → logprob: -8.875170707702637
    3. 'if' → logprob: -11.250170707702637
    4. '       ' → logprob: -11.750170707702637
    5. '          ' → logprob: -12.750170707702637
    6. '<|end|>' → logprob: -12.875170707702637
    7. '               ' → logprob: -13.250170707702637
    8. '   ' → logprob: -13.500170707702637
    9. '            
' → logprob: -15.125170707702637
    10. '	       ' → logprob: -15.125170707702637

Token 229: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.41286635398864746
    2. ' if' → logprob: -1.1628663539886475
    3. '           ' → logprob: -3.6628663539886475
    4. '          ' → logprob: -14.537866592407227
    5. '   ' → logprob: -15.162866592407227
    6. '	if' → logprob: -15.537866592407227
    7. '               ' → logprob: -15.912866592407227
    8. '
' → logprob: -16.412866592407227
    9. '            ' → logprob: -16.537866592407227
    10. ' ' → logprob: -16.537866592407227

Token 230: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.04301357641816139
    2. 'p' → logprob: -3.168013572692871
    3. '(p' → logprob: -11.293013572692871
    4. ' (' → logprob: -13.293013572692871
    5. '(' → logprob: -15.543013572692871
    6. ' ' → logprob: -16.168014526367188
    7. ' ' → logprob: -17.918014526367188
    8. '	p' → logprob: -19.105514526367188
    9. '   ' → logprob: -19.543014526367188
    10. '$p' → logprob: -19.918014526367188

Token 231: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00012368128227535635
    2. '4' → logprob: -9.000123977661133
    3. '(' → logprob: -16.250123977661133
    4. ' ' → logprob: -17.187623977661133
    5. 'p' → logprob: -17.437623977661133
    6. '```' → logprob: -17.750123977661133
    7. '_' → logprob: -18.187623977661133
    8. '
' → logprob: -18.375123977661133
    9. '(p' → logprob: -18.500123977661133
    10. '{' → logprob: -19.062623977661133

Token 232: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0010331686353310943
    2. 'in' → logprob: -6.876033306121826
    3. ' ' → logprob: -15.751032829284668
    4. ' ' → logprob: -15.876032829284668
    5. ' not' → logprob: -17.501033782958984
    6. '[' → logprob: -17.626033782958984
    7. ')' → logprob: -18.251033782958984
    8. 'In' → logprob: -18.751033782958984
    9. '<|end|>' → logprob: -19.001033782958984
    10. 'n' → logprob: -19.251033782958984

Token 233: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.2014143168926239
    2. ' point' → logprob: -1.7014143466949463
    3. '(point' → logprob: -14.201414108276367
    4. 'p' → logprob: -15.951414108276367
    5. '	point' → logprob: -15.951414108276367
    6. 'Point' → logprob: -17.951414108276367
    7. '.point' → logprob: -18.201414108276367
    8. '_point' → logprob: -18.451414108276367
    9. ' ' → logprob: -18.701414108276367
    10. 'points' → logprob: -19.201414108276367

Token 234: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -1.9623810658231378e-05
    2. 'set' → logprob: -10.875020027160645
    3. 'et' → logprob: -15.375020027160645
    4. '_SET' → logprob: -15.875020027160645
    5. 'point' → logprob: -16.250019073486328
    6. 's' → logprob: -17.500019073486328
    7. '-set' → logprob: -17.500019073486328
    8. 'Set' → logprob: -17.750019073486328
    9. '_sets' → logprob: -17.875019073486328
    10. ' _' → logprob: -18.250019073486328

Token 235: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0040785204619169235
    2. 'and' → logprob: -5.504078388214111
    3. ' ' → logprob: -16.629077911376953
    4. ' ' → logprob: -17.254077911376953
    5. ' и' → logprob: -19.254077911376953
    6. 'et' → logprob: -19.629077911376953
    7. '           ' → logprob: -20.254077911376953
    8. 'in' → logprob: -20.379077911376953
    9. '	and' → logprob: -20.504077911376953
    10. ' in' → logprob: -20.879077911376953

Token 236: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.12692883610725403
    2. 'p' → logprob: -2.1269288063049316
    3. '(p' → logprob: -14.25192928314209
    4. ' (' → logprob: -16.876928329467773
    5. ' ' → logprob: -17.501928329467773
    6. ' ' → logprob: -17.501928329467773
    7. '   ' → logprob: -18.251928329467773
    8. '(' → logprob: -18.501928329467773
    9. '	p' → logprob: -18.626928329467773
    10. '    ' → logprob: -19.126928329467773

Token 237: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -5.080963092041202e-06
    2. 'p' → logprob: -12.250004768371582
    3. '(' → logprob: -16.2500057220459
    4. '3' → logprob: -16.7500057220459
    5. '(p' → logprob: -16.8750057220459
    6. '[' → logprob: -17.2500057220459
    7. ' p' → logprob: -17.5000057220459
    8. ' ' → logprob: -17.7500057220459
    9. 'four' → logprob: -18.1250057220459
    10. '{' → logprob: -18.3750057220459

Token 238: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0067154900170862675
    2. 'in' → logprob: -5.006715297698975
    3. ' ' → logprob: -16.756715774536133
    4. 'In' → logprob: -17.256715774536133
    5. ' ' → logprob: -17.881715774536133
    6. '<|end|>' → logprob: -17.881715774536133
    7. 'import' → logprob: -19.256715774536133
    8. '```' → logprob: -19.756715774536133
    9. ')' → logprob: -20.131715774536133
    10. '	in' → logprob: -20.256715774536133

Token 239: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.005234002135694027
    2. ' point' → logprob: -5.2552337646484375
    3. '(point' → logprob: -16.005233764648438
    4. 'p' → logprob: -18.255233764648438
    5. '	point' → logprob: -18.380233764648438
    6. '           ' → logprob: -18.630233764648438
    7. ' ' → logprob: -18.755233764648438
    8. '.point' → logprob: -19.880233764648438
    9. '   ' → logprob: -20.130233764648438
    10. 'Point' → logprob: -20.255233764648438

Token 240: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.0064044855535030365
    2. 'point' → logprob: -5.256404399871826
    3. 'set' → logprob: -6.756404399871826
    4. '_point' → logprob: -13.131404876708984
    5. '(point' → logprob: -13.381404876708984
    6. 'Set' → logprob: -13.756404876708984
    7. 'et' → logprob: -14.631404876708984
    8. 's' → logprob: -15.131404876708984
    9. ' point' → logprob: -15.381404876708984
    10. 'points' → logprob: -15.506404876708984

Token 241: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01637134701013565
    2. '               ' → logprob: -4.766371250152588
    3. ':
' → logprob: -4.891371250152588
    4. '           ' → logprob: -9.016371726989746
    5. ' and' → logprob: -10.266371726989746
    6. ':

' → logprob: -11.641371726989746
    7. '):' → logprob: -11.766371726989746
    8. '              ' → logprob: -11.766371726989746
    9. '<|end|>' → logprob: -11.891371726989746
    10. ',' → logprob: -12.391371726989746

Token 242: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.749814019713085e-06
    2. '           ' → logprob: -13.625006675720215
    3. '              ' → logprob: -13.750006675720215
    4. '<|end|>' → logprob: -14.000006675720215
    5. '                   ' → logprob: -14.375006675720215
    6. '```' → logprob: -14.500006675720215
    7. ' area' → logprob: -14.625006675720215
    8. ' if' → logprob: -15.250006675720215
    9. '                
' → logprob: -15.750006675720215
    10. '	           ' → logprob: -15.750006675720215

Token 243: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.7048870921134949
    2. 'area' (adapté à ' area') → logprob: -0.7048870921134949
    3. '               ' → logprob: -4.4548869132995605
    4. '           ' → logprob: -10.454887390136719
    5. '                   ' → logprob: -11.329887390136719
    6. '   ' → logprob: -12.454887390136719
    7. '(area' → logprob: -13.954887390136719
    8. '              ' → logprob: -14.079887390136719
    9. '             ' → logprob: -14.329887390136719
    10. '                ' → logprob: -14.579887390136719

Token 244: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009757150895893574
    2. '=' → logprob: -4.634757041931152
    3. ' +=' → logprob: -14.259757041931152
    4. ' ' → logprob: -15.509757041931152
    5. ')' → logprob: -15.759757041931152
    6. ' ' → logprob: -16.38475799560547
    7. ' =
' → logprob: -17.13475799560547
    8. ' =)' → logprob: -17.63475799560547
    9. '>' → logprob: -17.88475799560547
    10. ' ==' → logprob: -18.25975799560547

Token 245: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.02633931301534176
    2. ' dx' → logprob: -3.651339292526245
    3. '   ' → logprob: -10.401339530944824
    4. '(dx' → logprob: -12.651339530944824
    5. '           ' → logprob: -13.276339530944824
    6. 'dy' → logprob: -13.651339530944824
    7. ' ' → logprob: -14.401339530944824
    8. '       ' → logprob: -14.901339530944824
    9. '```' → logprob: -14.901339530944824
    10. '_dx' → logprob: -15.151339530944824

Token 246: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -7.822646693966817e-06
    2. '**' → logprob: -12.000007629394531
    3. '```' → logprob: -14.250007629394531
    4. ' *' → logprob: -14.625007629394531
    5. 'dx' → logprob: -14.625007629394531
    6. '2' → logprob: -16.87500762939453
    7. '   ' → logprob: -18.00000762939453
    8. '(dx' → logprob: -18.37500762939453
    9. '*
' → logprob: -18.62500762939453
    10. '_dx' → logprob: -18.75000762939453

Token 247: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.5761017799377441
    2. '2' → logprob: -0.8261017799377441
    3. ' dx' → logprob: -9.451101303100586
    4. '*' → logprob: -9.701101303100586
    5. '(dx' → logprob: -11.951101303100586
    6. ' ' → logprob: -12.076101303100586
    7. '_dx' → logprob: -12.826101303100586
    8. '**' → logprob: -13.326101303100586
    9. 'dy' → logprob: -13.451101303100586
    10. '```' → logprob: -13.826101303100586

Token 248: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12692831456661224
    2. '+' → logprob: -2.1269283294677734
    3. ' ' → logprob: -16.126928329467773
    4. ' plus' → logprob: -16.251928329467773
    5. ' ' → logprob: -16.876928329467773
    6. ' +
' → logprob: -17.376928329467773
    7. '+
' → logprob: -19.126928329467773
    8. '＋' → logprob: -19.126928329467773
    9. ' +

' → logprob: -19.751928329467773
    10. '```' → logprob: -19.751928329467773

Token 249: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.018150178715586662
    2. ' dy' → logprob: -4.018150329589844
    3. '.dy' → logprob: -16.018150329589844
    4. ' ' → logprob: -16.518150329589844
    5. 'd' → logprob: -17.268150329589844
    6. 'ddy' → logprob: -18.143150329589844
    7. ' dyd' → logprob: -18.268150329589844
    8. 'dym' → logprob: -18.393150329589844
    9. 'dx' → logprob: -18.518150329589844
    10. '```' → logprob: -18.893150329589844

Token 250: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -3.440506407059729e-05
    2. 'dy' → logprob: -10.37503433227539
    3. ' *' → logprob: -13.25003433227539
    4. '**' → logprob: -15.12503433227539
    5. '```' → logprob: -15.37503433227539
    6. ' dy' → logprob: -15.50003433227539
    7. '*
' → logprob: -15.75003433227539
    8. 'dx' → logprob: -16.00003433227539
    9. '[' → logprob: -16.12503433227539
    10. '.dy' → logprob: -16.75003433227539

Token 251: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.00021307668066583574
    2. '2' → logprob: -8.500212669372559
    3. ' dy' → logprob: -11.750212669372559
    4. 'ddy' → logprob: -14.000212669372559
    5. 'dx' → logprob: -15.500212669372559
    6. '*' → logprob: -16.000213623046875
    7. '```' → logprob: -16.000213623046875
    8. '.dy' → logprob: -16.250213623046875
    9. ' ' → logprob: -16.750213623046875
    10. '**' → logprob: -17.000213623046875

Token 252: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00017755765293259174
    2. '
' → logprob: -9.875177383422852
    3. '                   ' → logprob: -10.375177383422852
    4. '           ' → logprob: -10.500177383422852
    5. '                ' → logprob: -10.750177383422852
    6. '              ' → logprob: -11.250177383422852
    7. '>' → logprob: -11.625177383422852
    8. ' if' → logprob: -11.750177383422852
    9. '<|end|>' → logprob: -12.375177383422852
    10. ' >' → logprob: -12.500177383422852

Token 253: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009616006282158196
    2. ' if' → logprob: -7.625961780548096
    3. '                   ' → logprob: -8.250961303710938
    4. '                ' → logprob: -9.875961303710938
    5. '           ' → logprob: -10.250961303710938
    6. '              ' → logprob: -10.500961303710938
    7. '<|end|>' → logprob: -10.500961303710938
    8. 'if' → logprob: -10.625961303710938
    9. '>' → logprob: -11.500961303710938
    10. '
' → logprob: -11.750961303710938

Token 254: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6807007789611816
    2. 'if' (adapté à ' if') → logprob: -1.1807007789611816
    3. ' if' → logprob: -1.6807007789611816
    4. '                   ' → logprob: -7.930700778961182
    5. '           ' → logprob: -10.180700302124023
    6. '                ' → logprob: -10.805700302124023
    7. '              ' → logprob: -12.430700302124023
    8. '   ' → logprob: -13.180700302124023
    9. '```' → logprob: -13.555700302124023
    10. 'If' → logprob: -13.680700302124023

Token 255: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.029751529917120934
    2. 'area' → logprob: -3.5297515392303467
    3. '(area' → logprob: -13.904751777648926
    4. 'Area' → logprob: -16.02975082397461
    5. '_area' → logprob: -18.40475082397461
    6. ' área' → logprob: -18.65475082397461
    7. ' ' → logprob: -18.77975082397461
    8. '.area' → logprob: -19.65475082397461
    9. ' ' → logprob: -20.15475082397461
    10. '   ' → logprob: -20.65475082397461

Token 256: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.00975809432566166
    2. '>' → logprob: -4.634757995605469
    3. ' ' → logprob: -13.259757995605469
    4. ' ' → logprob: -15.384757995605469
    5. ' >
' → logprob: -16.63475799560547
    6. ' >

' → logprob: -18.00975799560547
    7. '[' → logprob: -18.25975799560547
    8. '<|end|>' → logprob: -18.25975799560547
    9. ')' → logprob: -18.63475799560547
    10. ' >=' → logprob: -19.00975799560547

Token 257: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.16027560830116272
    2. 'max' → logprob: -1.9102755784988403
    3. ' area' → logprob: -10.03527545928955
    4. 'area' → logprob: -11.78527545928955
    5. '(max' → logprob: -18.535276412963867
    6. '_max' → logprob: -18.910276412963867
    7. '[max' → logprob: -18.910276412963867
    8. '=max' → logprob: -19.410276412963867
    9. '   ' → logprob: -19.535276412963867
    10. ' ' → logprob: -19.660276412963867

Token 258: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -2.570319702499546e-05
    2. 'area' → logprob: -11.125025749206543
    3. 'max' → logprob: -11.500025749206543
    4. '_max' → logprob: -14.375025749206543
    5. '_' → logprob: -16.250024795532227
    6. 'Area' → logprob: -17.875024795532227
    7. ' area' → logprob: -18.750024795532227
    8. '_AREA' → logprob: -19.250024795532227
    9. '_space' → logprob: -19.375024795532227
    10. ' max' → logprob: -19.375024795532227

Token 259: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6392841935157776
    2. '=' → logprob: -1.5142841339111328
    3. ':' → logprob: -1.6392841339111328
    4. ' =' → logprob: -2.889284133911133
    5. ':
' → logprob: -6.514284133911133
    6. '                       ' → logprob: -8.139284133911133
    7. '               ' → logprob: -8.139284133911133
    8. ' :' → logprob: -9.014284133911133
    9. '           ' → logprob: -9.139284133911133
    10. '                  ' → logprob: -9.264284133911133

Token 260: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004675403703004122
    2. '               ' → logprob: -6.254675388336182
    3. ' max' → logprob: -6.379675388336182
    4. '                       ' → logprob: -7.129675388336182
    5. 'max' → logprob: -9.25467586517334
    6. '           ' → logprob: -9.75467586517334
    7. '                    ' → logprob: -10.25467586517334
    8. '                  ' → logprob: -10.87967586517334
    9. '       ' → logprob: -11.37967586517334
    10. '                ' → logprob: -11.37967586517334

Token 261: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.029781844466924667
    2. ' max' → logprob: -3.5297818183898926
    3. 'area' → logprob: -10.52978229522705
    4. ' area' → logprob: -12.52978229522705
    5. '                   ' → logprob: -13.77978229522705
    6. '                       ' → logprob: -17.654781341552734
    7. '               ' → logprob: -19.029781341552734
    8. '   ' → logprob: -19.154781341552734
    9. '	max' → logprob: -19.154781341552734
    10. '_max' → logprob: -19.404781341552734

Token 262: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -7.822646693966817e-06
    2. '_' → logprob: -11.875007629394531
    3. ' _' → logprob: -14.500007629394531
    4. 'area' → logprob: -15.750007629394531
    5. '_space' → logprob: -16.62500762939453
    6. '_square' → logprob: -17.25000762939453
    7. '_are' → logprob: -18.25000762939453
    8. '_code' → logprob: -18.37500762939453
    9. '_max' → logprob: -19.12500762939453
    10. 'Area' → logprob: -19.50000762939453

Token 263: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196846812963486
    2. ' =' → logprob: -2.8119685649871826
    3. '=max' → logprob: -14.311968803405762
    4. '=

' → logprob: -16.686967849731445
    5. ' ' → logprob: -17.186967849731445
    6. '=
' → logprob: -17.686967849731445
    7. '＝' → logprob: -18.061967849731445
    8. '.=' → logprob: -18.436967849731445
    9. 'max' → logprob: -18.686967849731445
    10. ' =
' → logprob: -19.311967849731445

Token 264: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.10020667314529419
    2. ' area' → logprob: -2.3502066135406494
    3. 'Area' → logprob: -18.22520637512207
    4. '(area' → logprob: -18.22520637512207
    5. '_area' → logprob: -18.85020637512207
    6. ' ' → logprob: -19.72520637512207
    7. ' área' → logprob: -19.97520637512207
    8. ' ' → logprob: -20.47520637512207
    9. 'space' → logprob: -20.60020637512207
    10. '   ' → logprob: -20.60020637512207

Token 265: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38841772079467773
    2. '
' → logprob: -1.8884177207946777
    3. 'return' → logprob: -2.1384177207946777
    4. '    
' → logprob: -3.6384177207946777
    5. ' return' → logprob: -3.8884177207946777
    6. '  
' → logprob: -6.138417720794678
    7. '	return' → logprob: -6.513417720794678
    8. ' 
' → logprob: -7.013417720794678
    9. '       ' → logprob: -7.638417720794678
    10. '        
' → logprob: -8.888418197631836

Token 266: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0395856611430645
    2. 'return' → logprob: -3.289585590362549
    3. ' return' → logprob: -7.039585590362549
    4. '
' → logprob: -7.414585590362549
    5. '    
' → logprob: -10.039586067199707
    6. '	return' → logprob: -11.289586067199707
    7. '       ' → logprob: -12.289586067199707
    8. '```' → logprob: -14.164586067199707
    9. '        
' → logprob: -14.539586067199707
    10. '  
' → logprob: -14.664586067199707

Token 267: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0866508036851883
    2. '   ' → logprob: -2.586650848388672
    3. ' return' → logprob: -5.086650848388672
    4. '
' → logprob: -6.711650848388672
    5. '    
' → logprob: -8.211650848388672
    6. '	return' → logprob: -10.586650848388672
    7. ' ' → logprob: -11.336650848388672
    8. '  
' → logprob: -11.586650848388672
    9. '       ' → logprob: -12.211650848388672
    10. ' 
' → logprob: -12.336650848388672

Token 268: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.015694350004196167
    2. ' max' → logprob: -4.2656941413879395
    3. 'math' → logprob: -6.5156941413879395
    4. ' math' → logprob: -10.140694618225098
    5. 'int' → logprob: -11.515694618225098
    6. ' int' → logprob: -16.64069366455078
    7. '(max' → logprob: -17.01569366455078
    8. '0' → logprob: -17.39069366455078
    9. '   ' → logprob: -17.51569366455078
    10. ' ' → logprob: -18.26569366455078

Token 269: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -2.1008713702030946e-06
    2. '_space' → logprob: -13.750001907348633
    3. '_square' → logprob: -14.375001907348633
    4. '_' → logprob: -15.125001907348633
    5. 'area' → logprob: -16.250001907348633
    6. '_are' → logprob: -18.375001907348633
    7. ' _' → logprob: -18.500001907348633
    8. '_max' → logprob: -19.375001907348633
    9. '_AREA' → logprob: -19.375001907348633
    10. 'Area' → logprob: -20.500001907348633

Token 270: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03441549837589264
    2. '

' → logprob: -4.0344157218933105
    3. '\n' → logprob: -5.1594157218933105
    4. '<|end|>' → logprob: -5.2844157218933105
    5. 'def' → logprob: -5.4094157218933105
    6. '  
' → logprob: -8.659415245056152
    7. '#' → logprob: -8.909415245056152
    8. 'n' → logprob: -9.284415245056152
    9. '```' → logprob: -9.284415245056152
    10. ' 
' → logprob: -9.409415245056152

Token 271: 'while' (ID: 7032)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09119036048650742
    2. 'n' → logprob: -2.5911903381347656
    3. 'def' → logprob: -4.591190338134766
    4. '#' → logprob: -6.466190338134766
    5. 'for' → logprob: -7.841190338134766
    6. 't' → logprob: -9.966190338134766
    7. ' if' → logprob: -10.591190338134766
    8. '```' → logprob: -10.716190338134766
    9. 'N' → logprob: -11.591190338134766
    10. '(n' → logprob: -11.966190338134766

Token 272: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0031821096781641245
    2. 'True' → logprob: -5.7531819343566895
    3. '(True' → logprob: -12.878182411193848
    4. '=True' → logprob: -13.878182411193848
    5. '1' → logprob: -15.003182411193848
    6. ' ' → logprob: -15.753182411193848
    7. ' T' → logprob: -15.753182411193848
    8. 'T' → logprob: -16.37818145751953
    9. '_' → logprob: -16.87818145751953
    10. '_true' → logprob: -17.00318145751953

Token 273: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003243798855692148
    2. ':
' → logprob: -8.625324249267578
    3. ' :' → logprob: -9.000324249267578
    4. '():' → logprob: -10.875324249267578
    5. ',' → logprob: -13.875324249267578
    6. '):' → logprob: -15.000324249267578
    7. ':**' → logprob: -15.125324249267578
    8. '(' → logprob: -15.750324249267578
    9. '   ' → logprob: -15.875324249267578
    10. ' :
' → logprob: -15.875324249267578

Token 274: '   ' (ID: 271)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.700079619884491
    2. 'line' → logprob: -1.4500796794891357
    3. ' line' → logprob: -1.7000796794891357
    4. '   ' → logprob: -2.9500796794891357
    5. ' try' → logprob: -3.7000796794891357
    6. 'n' → logprob: -4.825079441070557
    7. 'l' → logprob: -7.450079441070557
    8. ' n' → logprob: -7.825079441070557
    9. 't' → logprob: -9.450079917907715
    10. '	line' → logprob: -10.200079917907715

Token 275: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.2075558602809906
    2. 'line' → logprob: -1.707555890083313
    3. 'N' → logprob: -6.082555770874023
    4. 'try' → logprob: -6.207555770874023
    5. ' line' → logprob: -6.832555770874023
    6. 'l' → logprob: -7.582555770874023
    7. ' n' → logprob: -9.332555770874023
    8. 't' → logprob: -10.582555770874023
    9. 'k' → logprob: -10.582555770874023
    10. 'L' → logprob: -10.707555770874023

Token 276: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31335529685020447
    2. '=' → logprob: -1.3133553266525269
    3. '=int' → logprob: -9.313355445861816
    4. ' =
' → logprob: -13.563355445861816
    5. ' ' → logprob: -13.813355445861816
    6. '=input' → logprob: -15.563355445861816
    7. ' ' → logprob: -16.0633544921875
    8. '＝' → logprob: -16.1883544921875
    9. '=line' → logprob: -16.1883544921875
    10. '=

' → logprob: -16.5633544921875

Token 277: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1880955845117569
    2. ' int' → logprob: -1.8130955696105957
    3. 'input' → logprob: -5.313095569610596
    4. ' input' → logprob: -5.688095569610596
    5. ' ' → logprob: -13.438096046447754
    6. '=int' → logprob: -14.563096046447754
    7. 'in' → logprob: -14.813096046447754
    8. '(int' → logprob: -15.063096046447754
    9. ' in' → logprob: -15.438096046447754
    10. ' i' → logprob: -15.563096046447754

Token 278: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.006240183487534523
    2. 'input' → logprob: -5.506240367889404
    3. '(' → logprob: -6.256240367889404
    4. '()' → logprob: -8.381239891052246
    5. ' (' → logprob: -12.381239891052246
    6. '(sys' → logprob: -12.506239891052246
    7. ' input' → logprob: -13.006239891052246
    8. '=input' → logprob: -13.881239891052246
    9. '(
' → logprob: -15.131239891052246
    10. ' ()' → logprob: -16.631240844726562

Token 279: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05163522809743881
    2. '().' → logprob: -3.051635265350342
    3. '()' → logprob: -5.801635265350342
    4. '())
' → logprob: -10.926634788513184
    5. ' ())' → logprob: -14.051634788513184
    6. '()
' → logprob: -14.301634788513184
    7. '(' → logprob: -14.676634788513184
    8. ')' → logprob: -14.926634788513184
    9. '())

' → logprob: -15.176634788513184
    10. '();)' → logprob: -15.926634788513184

Token 280: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1487530916929245
    2. 'if' → logprob: -2.0237531661987305
    3. '   ' → logprob: -5.3987531661987305
    4. '<|end|>' → logprob: -6.5237531661987305
    5. ' ' → logprob: -10.64875316619873
    6. '    ' → logprob: -11.64875316619873
    7. ',' → logprob: -11.77375316619873
    8. '	if' → logprob: -12.02375316619873
    9. '<|end|>' → logprob: -12.39875316619873
    10. '  ' → logprob: -12.39875316619873

Token 281: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4753001928329468
    2. ' if' → logprob: -0.9753001928329468
    3. '   ' → logprob: -7.225300312042236
    4. '<|end|>' → logprob: -7.725300312042236
    5. ' ' → logprob: -10.350299835205078
    6. '	if' → logprob: -11.975299835205078
    7. '    ' → logprob: -12.100299835205078
    8. '  ' → logprob: -12.475299835205078
    9. ' 
' → logprob: -13.475299835205078
    10. '<|end|>' → logprob: -14.100299835205078

Token 282: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.03832937777042389
    2. 'n' → logprob: -3.2883293628692627
    3. ' not' → logprob: -8.163329124450684
    4. 'not' → logprob: -13.163329124450684
    5. '	n' → logprob: -14.288329124450684
    6. '0' → logprob: -15.288329124450684
    7. ' ' → logprob: -15.788329124450684
    8. ' ' → logprob: -16.538330078125
    9. '(n' → logprob: -17.538330078125
    10. ' н' → logprob: -17.663330078125

Token 283: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3869659900665283
    2. '==' → logprob: -1.1369659900665283
    3. ' ' → logprob: -10.26196575164795
    4. '0' → logprob: -11.13696575164795
    5. '=' → logprob: -11.26196575164795
    6. '<=' → logprob: -11.63696575164795
    7. ' <=' → logprob: -11.63696575164795
    8. ')==' → logprob: -12.26196575164795
    9. ')' → logprob: -12.88696575164795
    10. ' ' → logprob: -13.01196575164795

Token 284: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005530327325686812
    2. ' ' → logprob: -7.500553131103516
    3. ' ' → logprob: -18.125553131103516
    4. '  ' → logprob: -20.500553131103516
    5. '۰' → logprob: -21.375553131103516
    6. '   ' → logprob: -21.625553131103516
    7. '=' → logprob: -21.875553131103516
    8. '```' → logprob: -22.125553131103516
    9. 's' → logprob: -22.250553131103516
    10. '    ' → logprob: -22.375553131103516

Token 285: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '-' → logprob: -17.750019073486328
    4. '```' → logprob: -20.125019073486328
    5. '   ' → logprob: -20.625019073486328
    6. '  ' → logprob: -20.750019073486328
    7. '۰' → logprob: -20.750019073486328
    8. ' -' → logprob: -21.000019073486328
    9. '=' → logprob: -21.125019073486328
    10. ')' → logprob: -21.375019073486328

Token 286: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1271413266658783
    2. ':
' → logprob: -2.127141237258911
    3. '   ' → logprob: -8.502140998840332
    4. ' :' → logprob: -12.502140998840332
    5. ' :
' → logprob: -12.877140998840332
    6. ':
' → logprob: -13.377140998840332
    7. '	break' → logprob: -14.377140998840332
    8. '.' → logprob: -15.002140998840332
    9. ':return' → logprob: -15.002140998840332
    10. '       ' → logprob: -15.127140998840332

Token 287: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4741020202636719
    2. '       ' → logprob: -0.9741020202636719
    3. ' break' → logprob: -11.599102020263672
    4. '	break' → logprob: -11.724102020263672
    5. '   ' → logprob: -13.099102020263672
    6. 'break' → logprob: -13.724102020263672
    7. '	' → logprob: -13.849102020263672
    8. '     ' → logprob: -14.349102020263672
    9. '           ' → logprob: -14.349102020263672
    10. '	   ' → logprob: -14.599102020263672

Token 288: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.20224960148334503
    2. ' break' → logprob: -1.7022496461868286
    3. '   ' → logprob: -7.202249526977539
    4. '	break' → logprob: -9.327249526977539
    5. '       ' → logprob: -13.827249526977539
    6. '_break' → logprob: -14.952249526977539
    7. '```' → logprob: -15.327249526977539
    8. 'b' → logprob: -15.827249526977539
    9. '    
' → logprob: -16.32724952697754
    10. '
' → logprob: -16.82724952697754

Token 289: '
' (ID: 198)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.18564528226852417
    2. '   ' → logprob: -2.435645341873169
    3. ' points' → logprob: -2.810645341873169
    4. '	points' → logprob: -4.68564510345459
    5. '    
' → logprob: -5.06064510345459
    6. 'pts' → logprob: -6.06064510345459
    7. '(points' → logprob: -6.06064510345459
    8. 'coordinates' → logprob: -7.06064510345459
    9. '_points' → logprob: -8.43564510345459
    10. 'coords' → logprob: -9.43564510345459

Token 290: '   ' (ID: 271)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.034722041338682175
    2. '   ' → logprob: -3.534722089767456
    3. ' points' → logprob: -5.409721851348877
    4. '	points' → logprob: -8.284722328186035
    5. '    
' → logprob: -9.034722328186035
    6. '(points' → logprob: -9.659722328186035
    7. 'pts' → logprob: -11.034722328186035
    8. '_points' → logprob: -11.159722328186035
    9. '```' → logprob: -11.159722328186035
    10. '   ' → logprob: -12.909722328186035

Token 291: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -0.0015390269691124558
    2. ' points' → logprob: -6.50153923034668
    3. '   ' → logprob: -10.50153923034668
    4. 'pts' → logprob: -12.12653923034668
    5. '	points' → logprob: -12.87653923034668
    6. '(points' → logprob: -14.62653923034668
    7. '    
' → logprob: -15.25153923034668
    8. '_points' → logprob: -15.50153923034668
    9. 'coordinates' → logprob: -16.25153923034668
    10. 'coords' → logprob: -16.50153923034668

Token 292: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014152854681015
    2. '=' → logprob: -1.7014153003692627
    3. '=[]' → logprob: -13.326415061950684
    4. ' =[' → logprob: -15.826415061950684
    5. '=[]
' → logprob: -16.326416015625
    6. '＝' → logprob: -17.076416015625
    7. '=[' → logprob: -17.076416015625
    8. ' =
' → logprob: -17.201416015625
    9. ' ' → logprob: -18.076416015625
    10. '.' → logprob: -18.076416015625

Token 293: ' set' (ID: 920)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009929145453497767
    2. '[]' → logprob: -8.375992774963379
    3. '[s' → logprob: -9.000992774963379
    4. '[input' → logprob: -9.125992774963379
    5. '[array' → logprob: -9.625992774963379
    6. '[p' → logprob: -10.000992774963379
    7. 'set' → logprob: -10.250992774963379
    8. '[n' → logprob: -10.375992774963379
    9. '[list' → logprob: -10.625992774963379
    10. '[line' → logprob: -10.750992774963379

Token 294: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07555240392684937
    2. '(tuple' → logprob: -3.075552463531494
    3. '(' → logprob: -4.450552463531494
    4. '((' → logprob: -4.575552463531494
    5. '([' → logprob: -5.575552463531494
    6. '()
' → logprob: -7.950552463531494
    7. '(
' → logprob: -8.200551986694336
    8. '([(' → logprob: -8.950551986694336
    9. '();' → logprob: -10.825551986694336
    10. '(int' → logprob: -11.700551986694336

Token 295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009332789108157158
    2. '    
' → logprob: -5.259332656860352
    3. ' for' → logprob: -5.759332656860352
    4. 'for' → logprob: -8.259332656860352
    5. '  
' → logprob: -8.384332656860352
    6. '
' → logprob: -9.134332656860352
    7. '	for' → logprob: -9.259332656860352
    8. '<|end|>' → logprob: -9.259332656860352
    9. ' 
' → logprob: -9.884332656860352
    10. '   
' → logprob: -10.884332656860352

Token 296: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.030007338151335716
    2. ' for' → logprob: -3.5300073623657227
    3. '   ' → logprob: -8.655007362365723
    4. '	for' → logprob: -9.405007362365723
    5. '    
' → logprob: -15.905007362365723
    6. '[' → logprob: -17.030006408691406
    7. '
' → logprob: -17.655006408691406
    8. ' 
' → logprob: -18.280006408691406
    9. ' ' → logprob: -19.280006408691406
    10. '<|end|>' → logprob: -19.405006408691406

Token 297: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.15310683415737e-05
    2. ' _' → logprob: -10.750021934509277
    3. '_i' → logprob: -17.37502098083496
    4. '_range' → logprob: -17.62502098083496
    5. '_=' → logprob: -20.50002098083496
    6. ' in' → logprob: -21.00002098083496
    7. '_in' → logprob: -21.50002098083496
    8. '_

' → logprob: -22.25002098083496
    9. '_
' → logprob: -23.12502098083496
    10. '_]' → logprob: -23.37502098083496

Token 298: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04310789704322815
    2. 'in' → logprob: -3.1681079864501953
    3. 'range' → logprob: -9.543107986450195
    4. ' ' → logprob: -10.418107986450195
    5. '  ' → logprob: -12.793107986450195
    6. 'import' → logprob: -13.668107986450195
    7. ' range' → logprob: -14.293107986450195
    8. '0' → logprob: -14.793107986450195
    9. '   ' → logprob: -15.043107986450195
    10. '	in' → logprob: -15.418107986450195

Token 299: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.56102097814437e-05
    2. ' range' → logprob: -10.000045776367188
    3. 'points' → logprob: -17.250045776367188
    4. '	range' → logprob: -17.500045776367188
    5. '(range' → logprob: -18.750045776367188
    6. 'rang' → logprob: -19.375045776367188
    7. 'input' → logprob: -19.375045776367188
    8. 'r' → logprob: -19.750045776367188
    9. 'ra' → logprob: -20.125045776367188
    10. '[' → logprob: -20.625045776367188

Token 300: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0006535819848068058
    2. 'n' → logprob: -7.7506537437438965
    3. '(' → logprob: -8.875653266906738
    4. ' (' → logprob: -9.625653266906738
    5. ' n' → logprob: -11.125653266906738
    6. '   ' → logprob: -14.000653266906738
    7. '(range' → logprob: -14.750653266906738
    8. '	n' → logprob: -14.875653266906738
    9. 'range' → logprob: -15.250653266906738
    10. ' range' → logprob: -15.500653266906738

Token 301: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07965560257434845
    2. '):' → logprob: -2.579655647277832
    3. '   ' → logprob: -8.079655647277832
    4. ':
' → logprob: -8.579655647277832
    5. ':' → logprob: -9.079655647277832
    6. '():
' → logprob: -9.704655647277832
    7. ')' → logprob: -9.829655647277832
    8. '):
' → logprob: -10.829655647277832
    9. ' ):
' → logprob: -12.079655647277832
    10. ',' → logprob: -12.704655647277832

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005710135214030743
    2. ' points' → logprob: -6.130710124969482
    3. '   ' → logprob: -6.630710124969482
    4. '	points' → logprob: -7.005710124969482
    5. '<|end|>' → logprob: -8.00571060180664
    6. ' x' → logprob: -8.25571060180664
    7. '	   ' → logprob: -8.50571060180664
    8. ' line' → logprob: -9.13071060180664
    9. '(points' → logprob: -9.50571060180664
    10. '    ' → logprob: -9.88071060180664

Token 303: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.12693776190280914
    2. ' x' → logprob: -2.1269378662109375
    3. '	x' → logprob: -11.751937866210938
    4. '   ' → logprob: -13.501937866210938
    5. ' ' → logprob: -15.001937866210938
    6. '    
' → logprob: -17.126937866210938
    7. '  ' → logprob: -17.376937866210938
    8. ',x' → logprob: -17.626937866210938
    9. '_x' → logprob: -18.001937866210938
    10. ' line' → logprob: -18.126937866210938

Token 304: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006749047315679491
    2. ' ,' → logprob: -7.625674724578857
    3. ',y' → logprob: -8.625675201416016
    4. '<|end|>' → logprob: -13.250675201416016
    5. '‌,' → logprob: -13.625675201416016
    6. ',n' → logprob: -13.750675201416016
    7. ',int' → logprob: -14.375675201416016
    8. '_,' → logprob: -15.250675201416016
    9. 's' → logprob: -15.375675201416016
    10. ',
' → logprob: -15.500675201416016

Token 305: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07890763878822327
    2. ' =' → logprob: -2.5789077281951904
    3. '=input' → logprob: -11.20390796661377
    4. '=int' → logprob: -13.20390796661377
    5. '=line' → logprob: -13.95390796661377
    6. '=sys' → logprob: -14.70390796661377
    7. ',' → logprob: -14.95390796661377
    8. ' ' → logprob: -16.078907012939453
    9. ')' → logprob: -16.203907012939453
    10. ')=' → logprob: -16.203907012939453

Token 306: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.029750604182481766
    2. 'map' → logprob: -3.5297505855560303
    3. '	map' → logprob: -16.27975082397461
    4. '   ' → logprob: -19.02975082397461
    5. ' tuple' → logprob: -19.15475082397461
    6. ' ' → logprob: -19.15475082397461
    7. '(map' → logprob: -19.52975082397461
    8. ' ' → logprob: -19.77975082397461
    9. ' input' → logprob: -20.02975082397461
    10. ' list' → logprob: -20.02975082397461

Token 307: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.16032597422599792
    2. 'int' → logprob: -1.9103260040283203
    3. ' int' → logprob: -9.78532600402832
    4. '[int' → logprob: -10.53532600402832
    5. '(' → logprob: -11.91032600402832
    6. '<int' → logprob: -12.16032600402832
    7. '=int' → logprob: -13.03532600402832
    8. ',int' → logprob: -13.28532600402832
    9. 'input' → logprob: -13.53532600402832
    10. ']int' → logprob: -14.41032600402832

Token 308: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.17804871499538422
    2. ',' → logprob: -1.9280487298965454
    3. 'input' → logprob: -4.428048610687256
    4. '(input' → logprob: -5.178048610687256
    5. ' input' → logprob: -9.928049087524414
    6. '(' → logprob: -11.428049087524414
    7. '=input' → logprob: -11.428049087524414
    8. ' ,' → logprob: -11.803049087524414
    9. '   ' → logprob: -11.928049087524414
    10. '[input' → logprob: -13.428049087524414

Token 309: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.941850526549388e-06
    2. '()' → logprob: -11.750007629394531
    3. '(' → logprob: -18.37500762939453
    4. ' ().' → logprob: -19.25000762939453
    5. '()
' → logprob: -20.00000762939453
    6. '().__' → logprob: -21.37500762939453
    7. '.readline' → logprob: -22.50000762939453
    8. '()

' → logprob: -22.62500762939453
    9. '()[' → logprob: -22.62500762939453
    10. '.split' → logprob: -22.75000762939453

Token 310: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000566137779969722
    2. 'strip' → logprob: -7.500566005706787
    3. 'rstrip' → logprob: -11.250566482543945
    4. ' split' → logprob: -16.250566482543945
    5. '(split' → logprob: -18.375566482543945
    6. 'spl' → logprob: -18.750566482543945
    7. '.split' → logprob: -19.500566482543945
    8. '().' → logprob: -19.625566482543945
    9. 'read' → logprob: -19.750566482543945
    10. 'rs' → logprob: -20.250566482543945

Token 311: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004564818926155567
    2. ')' → logprob: -5.5045647621154785
    3. '()' → logprob: -7.7545647621154785
    4. '())
' → logprob: -10.379565238952637
    5. '()))' → logprob: -10.879565238952637
    6. '))' → logprob: -12.504565238952637
    7. '(' → logprob: -12.879565238952637
    8. ' ())' → logprob: -14.504565238952637
    9. '(),' → logprob: -15.129565238952637
    10. '().' → logprob: -15.754565238952637

Token 312: '       ' (ID: 309)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.9148665070533752
    2. ' points' → logprob: -1.4148664474487305
    3. '	points' → logprob: -1.6648664474487305
    4. '   ' → logprob: -2.2898664474487305
    5. '(points' → logprob: -3.7898664474487305
    6. '
' → logprob: -3.7898664474487305
    7. '       ' → logprob: -4.0398664474487305
    8. '_points' → logprob: -7.1648664474487305
    9. '<|end|>' → logprob: -7.5398664474487305
    10. '    
' → logprob: -7.6648664474487305

Token 313: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -0.02975454181432724
    2. ' points' → logprob: -3.529754638671875
    3. '	points' → logprob: -13.029754638671875
    4. '   ' → logprob: -13.404754638671875
    5. '(points' → logprob: -15.529754638671875
    6. '       ' → logprob: -16.154754638671875
    7. '.points' → logprob: -17.279754638671875
    8. '_points' → logprob: -17.654754638671875
    9. '
' → logprob: -18.154754638671875
    10. 'oints' → logprob: -19.529754638671875

Token 314: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.005953687243163586
    2. '.' → logprob: -5.130953788757324
    3. '.setdefault' → logprob: -11.255953788757324
    4. '.update' → logprob: -12.005953788757324
    5. ' .' → logprob: -12.505953788757324
    6. '.append' → logprob: -14.130953788757324
    7. ').' → logprob: -14.630953788757324
    8. '.Add' → logprob: -15.255953788757324
    9. '.insert' → logprob: -15.255953788757324
    10. '.emplace' → logprob: -16.130952835083008

Token 315: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.014169150963425636
    2. '(' → logprob: -4.264169216156006
    3. '(x' → logprob: -12.389168739318848
    4. ' (' → logprob: -13.514168739318848
    5. ' ((' → logprob: -16.514169692993164
    6. ' ' → logprob: -16.889169692993164
    7. '(
' → logprob: -17.889169692993164
    8. '(tuple' → logprob: -17.889169692993164
    9. '   ' → logprob: -18.264169692993164
    10. '  ' → logprob: -19.764169692993164

Token 316: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.941850526549388e-06
    2. ' x' → logprob: -11.750007629394531
    3. ')x' → logprob: -20.25000762939453
    4. '	x' → logprob: -20.50000762939453
    5. '   ' → logprob: -21.00000762939453
    6. ' ' → logprob: -21.50000762939453
    7. '(x' → logprob: -22.37500762939453
    8. '  ' → logprob: -22.87500762939453
    9. '"x' → logprob: -22.87500762939453
    10. '    ' → logprob: -23.37500762939453

Token 317: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3870740830898285
    2. ',y' → logprob: -1.1370741128921509
    3. ' ,' → logprob: -8.51207447052002
    4. ',
' → logprob: -13.63707447052002
    5. 'y' → logprob: -14.51207447052002
    6. ',Y' → logprob: -15.88707447052002
    7. ',x' → logprob: -17.512073516845703
    8. '<|end|>' → logprob: -17.637073516845703
    9. ',user' → logprob: -17.762073516845703
    10. '‌,' → logprob: -17.887073516845703

Token 318: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04859248176217079
    2. ')' → logprob: -3.0485925674438477
    3. '))
' → logprob: -12.298592567443848
    4. ')
' → logprob: -15.173592567443848
    5. ')))' → logprob: -15.298592567443848
    6. ' ))' → logprob: -17.17359161376953
    7. ')}' → logprob: -18.67359161376953
    8. '))

' → logprob: -18.92359161376953
    9. '),' → logprob: -18.92359161376953
    10. '()))' → logprob: -19.42359161376953

Token 319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009604740887880325
    2. '
' → logprob: -4.8846049308776855
    3. 'print' → logprob: -7.1346049308776855
    4. '    
' → logprob: -7.1346049308776855
    5. 'area' → logprob: -8.384604454040527
    6. ' print' → logprob: -9.634604454040527
    7. ' area' → logprob: -10.009604454040527
    8. '```' → logprob: -10.259604454040527
    9. 'result' → logprob: -11.634604454040527
    10. '<|end|>' → logprob: -12.634604454040527

Token 320: ' res' (ID: 694)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12269480526447296
    2. 'area' → logprob: -2.247694730758667
    3. 'result' → logprob: -5.497694969177246
    4. 'max' → logprob: -5.747694969177246
    5. ' print' → logprob: -6.372694969177246
    6. ' area' → logprob: -7.747694969177246
    7. 'res' (adapté à ' res') → logprob: -8.622694969177246
    8. 'ans' → logprob: -9.747694969177246
    9. 'answer' → logprob: -9.872694969177246
    10. '   ' → logprob: -9.997694969177246

Token 321: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026310862973332405
    2. '=' → logprob: -3.651310920715332
    3. '_' → logprob: -11.776310920715332
    4. ' ' → logprob: -14.401310920715332
    5. 'ult' → logprob: -14.651310920715332
    6. ')' → logprob: -14.901310920715332
    7. ' ' → logprob: -15.026310920715332
    8. '_=' → logprob: -15.026310920715332
    9. ' =
' → logprob: -15.776310920715332
    10. 's' → logprob: -16.151309967041016

Token 322: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.4740773141384125
    2. 'max' → logprob: -0.9740773439407349
    3. '(max' → logprob: -15.599077224731445
    4. ' math' → logprob: -16.849077224731445
    5. 'str' → logprob: -17.349077224731445
    6. ' str' → logprob: -17.849077224731445
    7. ' ' → logprob: -18.099077224731445
    8. 'math' → logprob: -18.224077224731445
    9. ',max' → logprob: -18.724077224731445
    10. '	max' → logprob: -18.974077224731445

Token 323: '_square' (ID: 99463)
  Prédit: '_square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_square' → logprob: -9.088346359931165e-07
    2. '_squared' → logprob: -14.375000953674316
    3. '_' → logprob: -15.375000953674316
    4. '_s' → logprob: -16.875
    5. 'square' → logprob: -16.875
    6. '_sq' → logprob: -17.875
    7. '_cube' → logprob: -18.375
    8. '_rectangle' → logprob: -19.375
    9. '_space' → logprob: -19.875
    10. '_triangle' → logprob: -20.0

Token 324: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -1.0280383548888494e-06
    2. 'area' → logprob: -13.875000953674316
    3. '_AREA' → logprob: -19.000001907348633
    4. 'Area' → logprob: -19.125001907348633
    5. '_' → logprob: -19.750001907348633
    6. '_are' → logprob: -20.125001907348633
    7. '   ' → logprob: -20.625001907348633
    8. ' _' → logprob: -21.000001907348633
    9. '_array' → logprob: -22.000001907348633
    10. '```' → logprob: -22.000001907348633

Token 325: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -5.512236498361744e-07
    2. ' (' → logprob: -15.000000953674316
    3. '(' → logprob: -16.875
    4. ' points' → logprob: -17.125
    5. '(point' → logprob: -17.625
    6. 'points' → logprob: -17.875
    7. '(
' → logprob: -20.25
    8. '	points' → logprob: -20.375
    9. '(parts' → logprob: -20.75
    10. '(p' → logprob: -21.125

Token 326: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0031804447062313557
    2. ')' → logprob: -5.753180503845215
    3. ')
' → logprob: -13.503180503845215
    4. '())
' → logprob: -14.753180503845215
    5. '   ' → logprob: -14.878180503845215
    6. ' )
' → logprob: -15.003180503845215
    7. '()
' → logprob: -15.128180503845215
    8. ')

' → logprob: -16.1281795501709
    9. '()' → logprob: -17.5031795501709
    10. 'print' → logprob: -18.6281795501709

Token 327: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001269162748940289
    2. '   ' → logprob: -7.001269340515137
    3. ' print' → logprob: -8.001269340515137
    4. '
' → logprob: -11.251269340515137
    5. '```' → logprob: -11.626269340515137
    6. '    
' → logprob: -14.751269340515137
    7. '``' → logprob: -16.12626838684082
    8. '	print' → logprob: -16.75126838684082
    9. '#print' → logprob: -17.12626838684082
    10. '
' → logprob: -17.25126838684082

Token 328: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.5
    3. '   ' → logprob: -17.25
    4. 'if' → logprob: -19.5
    5. 'printf' → logprob: -21.25
    6. '```' → logprob: -21.25
    7. '
' → logprob: -21.75
    8. '    
' → logprob: -21.75
    9. 'pr' → logprob: -22.375
    10. 'prin' → logprob: -23.625

Token 329: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0001710014621494338
    2. '(' → logprob: -8.750170707702637
    3. 'res' → logprob: -12.375170707702637
    4. '(math' → logprob: -12.375170707702637
    5. '(int' → logprob: -13.250170707702637
    6. '(f' → logprob: -13.375170707702637
    7. ' (' → logprob: -14.875170707702637
    8. '()' → logprob: -15.875170707702637
    9. '(max' → logprob: -16.250171661376953
    10. '(
' → logprob: -16.625171661376953

Token 330: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08188679069280624
    2. '())' → logprob: -2.5818867683410645
    3. '()' → logprob: -5.8318867683410645
    4. '(res' → logprob: -10.331887245178223
    5. '(' → logprob: -11.456887245178223
    6. ' )' → logprob: -11.581887245178223
    7. '))' → logprob: -13.581887245178223
    8. '*)' → logprob: -13.831887245178223
    9. ' ())' → logprob: -13.831887245178223
    10. '*' → logprob: -14.081887245178223


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 328
Tokens correctement prédits (1ère position, stricte): 179
Tokens correctement prédits (1ère position, avec adaptation): 197
Tokens correctement prédits (top 10): 300
Précision stricte (1ère position): 54.57%
Précision adaptée (1ère position): 60.06%
Précision (top 10): 91.46%
================================================================================
