================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input=sys.stdin.readline

n,m=map(int,input().split())
requests=[int(input()) for _ in range(m)]

pos=[0]*(n+1)
curr_pos=-(m+1)
for i in range(1,n+1):
    pos[i]=i+m

for i,e in enumerate(requests):
    pos[e]=m - i

result = sorted(range(1,n+1), key=lambda x: pos[x])
print('\n'.join(map(str,result)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18539276719093323
    2. '\n' → logprob: -2.0603928565979004
    3. '<|end|>' → logprob: -4.1853928565979
    4. '\' → logprob: -4.5603928565979
    5. 'newline' → logprob: -5.3103928565979
    6. '```' → logprob: -6.0603928565979
    7. 'import' → logprob: -6.1853928565979
    8. '<|end|>' → logprob: -6.5603928565979
    9. '' → logprob: -6.9353928565979
    10. '
' → logprob: -7.1853928565979

Token 4: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006619225605390966
    2. '.' → logprob: -8.125661849975586
    3. '(
' → logprob: -8.750661849975586
    4. '()' → logprob: -9.500661849975586
    5. ')' → logprob: -10.375661849975586
    6. ' (' → logprob: -10.500661849975586
    7. '('' → logprob: -11.250661849975586
    8. ''' → logprob: -11.375661849975586
    9. '(

' → logprob: -11.375661849975586
    10. '```' → logprob: -12.000661849975586

Token 5: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0007399422465823591
    2. '[' → logprob: -7.500740051269531
    3. '.readline' → logprob: -9.375740051269531
    4. ' .' → logprob: -10.375740051269531
    5. ''.' → logprob: -11.500740051269531
    6. '.[' → logprob: -11.500740051269531
    7. '```' → logprob: -12.000740051269531
    8. '.
' → logprob: -12.250740051269531
    9. '.setdefault' → logprob: -12.500740051269531
    10. '.get' → logprob: -12.500740051269531

Token 6: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2573619484901428
    2. '.readline' → logprob: -1.507361888885498
    3. '.read' → logprob: -5.257361888885498
    4. '.Read' → logprob: -9.757362365722656
    5. '```' → logprob: -10.632362365722656
    6. '.get' → logprob: -10.757362365722656
    7. '.
' → logprob: -11.132362365722656
    8. '[' → logprob: -11.257362365722656
    9. '.readlines' → logprob: -11.507362365722656
    10. '<|end|>' → logprob: -11.632362365722656

Token 7: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01727275550365448
    2. '().' → logprob: -4.51727294921875
    3. '(' → logprob: -5.26727294921875
    4. '()
' → logprob: -7.51727294921875
    5. '()\' → logprob: -8.39227294921875
    6. '(
' → logprob: -9.14227294921875
    7. '()

' → logprob: -10.01727294921875
    8. '(

' → logprob: -10.89227294921875
    9. ' ()' → logprob: -10.89227294921875
    10. ')' → logprob: -10.89227294921875

Token 8: 'n' (ID: 77)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5773168802261353
    2. '(' → logprob: -0.8273168802261353
    3. '(
' → logprob: -7.327316761016846
    4. '()
' → logprob: -8.077317237854004
    5. '().' → logprob: -8.327317237854004
    6. '()

' → logprob: -10.702317237854004
    7. ')' → logprob: -10.827317237854004
    8. '(

' → logprob: -11.327317237854004
    9. '()\' → logprob: -11.577317237854004
    10. '\(' → logprob: -11.702317237854004

Token 9: ',m' (ID: 26648)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5470204949378967
    2. ' =' → logprob: -1.047020435333252
    3. ' ' → logprob: -3.172020435333252
    4. ')' → logprob: -4.422020435333252
    5. '[' → logprob: -5.047020435333252
    6. '+' → logprob: -5.922020435333252
    7. '.' → logprob: -5.922020435333252
    8. '_' → logprob: -6.922020435333252
    9. '*' → logprob: -7.047020435333252
    10. 's' → logprob: -7.547020435333252

Token 10: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.253652960062027
    2. ' =' → logprob: -1.5036529302597046
    3. ',' → logprob: -6.503653049468994
    4. ' ' → logprob: -9.628652572631836
    5. ')' → logprob: -9.878652572631836
    6. ' ,' → logprob: -11.128652572631836
    7. ' =
' → logprob: -11.378652572631836
    8. ''' → logprob: -11.378652572631836
    9. '=input' → logprob: -11.503652572631836
    10. '[' → logprob: -11.628652572631836

Token 11: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.38688352704048157
    2. ' map' → logprob: -1.1368834972381592
    3. 'int' → logprob: -12.261883735656738
    4. 'list' → logprob: -12.511883735656738
    5. ' list' → logprob: -14.011883735656738
    6. '	map' → logprob: -14.136883735656738
    7. ' ' → logprob: -14.261883735656738
    8. 'input' → logprob: -14.386883735656738
    9. ' int' → logprob: -15.136883735656738
    10. 'm' → logprob: -15.511883735656738

Token 12: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.31737205386161804
    2. '(' → logprob: -1.3173720836639404
    3. '(str' → logprob: -6.192371845245361
    4. '(lambda' → logprob: -6.442371845245361
    5. '(list' → logprob: -9.44237232208252
    6. '[int' → logprob: -9.69237232208252
    7. '(input' → logprob: -9.81737232208252
    8. '(len' → logprob: -9.81737232208252
    9. '(tuple' → logprob: -9.81737232208252
    10. 'int' → logprob: -9.94237232208252

Token 13: ',input' (ID: 123014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09457121044397354
    2. '(' → logprob: -3.469571113586426
    3. ',input' → logprob: -3.469571113586426
    4. '(sys' → logprob: -3.844571113586426
    5. '(input' → logprob: -5.844571113586426
    6. ',int' → logprob: -6.844571113586426
    7. ')' → logprob: -7.094571113586426
    8. ',(' → logprob: -7.719571113586426
    9. ' ,' → logprob: -7.969571113586426
    10. '(),' → logprob: -8.844571113586426

Token 14: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.030255908146500587
    2. '())' → logprob: -3.5302557945251465
    3. '()' → logprob: -8.030256271362305
    4. ')' → logprob: -8.655256271362305
    5. '()))' → logprob: -13.655256271362305
    6. '(' → logprob: -13.780256271362305
    7. '());' → logprob: -14.030256271362305
    8. ' ())' → logprob: -14.780256271362305
    9. '(),' → logprob: -14.905256271362305
    10. '()[' → logprob: -15.030256271362305

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.011753206141293049
    2. 'strip' → logprob: -4.511753082275391
    3. 'rstrip' → logprob: -7.261753082275391
    4. ' split' → logprob: -13.26175308227539
    5. ')' → logprob: -14.88675308227539
    6. '(split' → logprob: -15.01175308227539
    7. 'rs' → logprob: -15.01175308227539
    8. 'read' → logprob: -15.63675308227539
    9. '```' → logprob: -16.26175308227539
    10. ' strip' → logprob: -16.63675308227539

Token 16: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021748353901784867
    2. '))' → logprob: -9.00021743774414
    3. '())' → logprob: -9.62521743774414
    4. '()' → logprob: -11.25021743774414
    5. '')' → logprob: -12.12521743774414
    6. '`)' → logprob: -12.75021743774414
    7. '(' → logprob: -13.37521743774414
    8. '),' → logprob: -13.87521743774414
    9. ')`' → logprob: -13.87521743774414
    10. ')
' → logprob: -14.25021743774414

Token 17: 'requests' (ID: 81811)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.6473602056503296
    2. 'arr' → logprob: -2.022360324859619
    3. 'graph' → logprob: -2.397360324859619
    4. 'a' → logprob: -2.397360324859619
    5. '
' → logprob: -3.147360324859619
    6. 'array' → logprob: -4.022360324859619
    7. ' 
' → logprob: -4.147360324859619
    8. 'lst' → logprob: -4.147360324859619
    9. 'numbers' → logprob: -4.522360324859619
    10. 'd' → logprob: -4.647360324859619

Token 18: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46634355187416077
    2. '[' → logprob: -1.4663435220718384
    3. ' =' → logprob: -2.216343641281128
    4. '=[]' → logprob: -4.216343402862549
    5. '.' → logprob: -4.591343402862549
    6. '[:]' → logprob: -5.716343402862549
    7. '=[' → logprob: -6.091343402862549
    8. ')' → logprob: -7.091343402862549
    9. ']' → logprob: -8.216343879699707
    10. '[]' → logprob: -8.466343879699707

Token 19: 'int' (ID: 491)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.07431679219007492
    2. 'tuple' → logprob: -2.8243167400360107
    3. 'map' → logprob: -4.94931697845459
    4. 'int' → logprob: -5.32431697845459
    5. ']' → logprob: -9.19931697845459
    6. '[]' → logprob: -9.82431697845459
    7. ' tuple' → logprob: -10.07431697845459
    8. ' list' → logprob: -10.44931697845459
    9. '(tuple' → logprob: -10.44931697845459
    10. '()]' → logprob: -11.19931697845459

Token 20: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.027584757655858994
    2. '(' → logprob: -3.9025847911834717
    3. '(x' → logprob: -5.152584552764893
    4. '()' → logprob: -7.277584552764893
    5. '(request' → logprob: -8.15258502960205
    6. '(i' → logprob: -9.02758502960205
    7. '()]' → logprob: -9.65258502960205
    8. '(a' → logprob: -11.15258502960205
    9. '(sys' → logprob: -11.52758502960205
    10. '(
' → logprob: -11.52758502960205

Token 21: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00026979928952641785
    2. '()' → logprob: -8.500269889831543
    3. '().' → logprob: -11.000269889831543
    4. ')' → logprob: -11.125269889831543
    5. '())
' → logprob: -11.125269889831543
    6. '()]' → logprob: -11.375269889831543
    7. '()),' → logprob: -12.750269889831543
    8. ' ())' → logprob: -12.875269889831543
    9. '()))' → logprob: -13.625269889831543
    10. '())

' → logprob: -14.375269889831543

Token 22: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002945489948615432
    2. '()' → logprob: -6.377945423126221
    3. 'for' → logprob: -7.502945423126221
    4. ' for' → logprob: -7.877945423126221
    5. '[i' → logprob: -9.002945899963379
    6. ')]' → logprob: -9.252945899963379
    7. '())' → logprob: -10.127945899963379
    8. ' )' → logprob: -11.252945899963379
    9. ']' → logprob: -11.627945899963379
    10. '[' → logprob: -11.627945899963379

Token 23: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4868761897087097
    2. ' _' → logprob: -1.4868762493133545
    3. '_' → logprob: -1.8618762493133545
    4. ' ' → logprob: -5.736876010894775
    5. '_range' → logprob: -7.861876010894775
    6. ' in' → logprob: -8.611876487731934
    7. ' i' → logprob: -9.361876487731934
    8. 'range' → logprob: -9.486876487731934
    9. '	range' → logprob: -10.861876487731934
    10. ' ' → logprob: -12.236876487731934

Token 24: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5614053606987
    2. ' range' → logprob: -1.6864054203033447
    3. ' in' → logprob: -2.0614054203033447
    4. 'in' → logprob: -2.1864054203033447
    5. '_' → logprob: -5.436405181884766
    6. ' ' → logprob: -8.311405181884766
    7. ' _' → logprob: -9.686405181884766
    8. 'i' → logprob: -10.311405181884766
    9. '	range' → logprob: -10.436405181884766
    10. '  ' → logprob: -10.686405181884766

Token 25: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.5491004129871726e-05
    2. ' range' → logprob: -10.000045776367188
    3. '(range' → logprob: -17.625045776367188
    4. '	range' → logprob: -18.000045776367188
    5. 'rang' → logprob: -18.625045776367188
    6. '[' → logprob: -20.000045776367188
    7. 'r' → logprob: -20.250045776367188
    8. ')' → logprob: -20.250045776367188
    9. 'ran' → logprob: -20.375045776367188
    10. ' ' → logprob: -20.625045776367188

Token 26: '(m' (ID: 2145)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.001310359570197761
    2. '(m' → logprob: -6.751310348510742
    3. '(' → logprob: -8.876310348510742
    4. 'n' → logprob: -15.126310348510742
    5. '(
' → logprob: -16.626310348510742
    6. ')n' → logprob: -16.876310348510742
    7. 'm' → logprob: -17.626310348510742
    8. ' n' → logprob: -18.376310348510742
    9. ' (' → logprob: -18.626310348510742
    10. ')' → logprob: -18.751310348510742

Token 27: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.014970721676945686
    2. ']' → logprob: -4.264970779418945
    3. ')' → logprob: -7.139970779418945
    4. '])]' → logprob: -11.639970779418945
    5. '])' → logprob: -13.264970779418945
    6. ')])' → logprob: -13.389970779418945
    7. '')]' → logprob: -14.514970779418945
    8. ')],' → logprob: -15.014970779418945
    9. ' ]' → logprob: -15.139970779418945
    10. '`]' → logprob: -15.389970779418945

Token 28: 'pos' (ID: 1103)
  Prédit: 'requests'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'requests' → logprob: -0.3266908824443817
    2. '
' → logprob: -1.826690912246704
    3. 'weights' → logprob: -4.076690673828125
    4. 'positions' → logprob: -4.076690673828125
    5. 'result' → logprob: -4.576690673828125
    6. 'answers' → logprob: -4.951690673828125
    7. 'stack' → logprob: -5.326690673828125
    8. 'count' → logprob: -5.451690673828125
    9. 'results' → logprob: -5.576690673828125
    10. 'request' → logprob: -5.576690673828125

Token 29: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11204823851585388
    2. ' =' → logprob: -2.3620481491088867
    3. '=[]' → logprob: -4.612048149108887
    4. 's' → logprob: -6.612048149108887
    5. '=[' → logprob: -8.737048149108887
    6. '_' → logprob: -9.362048149108887
    7. ' ' → logprob: -10.237048149108887
    8. '=s' → logprob: -10.362048149108887
    9. '_=' → logprob: -10.362048149108887
    10. '=[]
' → logprob: -10.862048149108887

Token 30: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6162557005882263
    2. '0' → logprob: -0.9912557005882263
    3. '1' → logprob: -2.491255760192871
    4. '-' → logprob: -5.616255760192871
    5. 'False' → logprob: -7.366255760192871
    6. '(i' → logprob: -7.741255760192871
    7. ']' → logprob: -8.241255760192871
    8. 'x' → logprob: -8.866255760192871
    9. 'n' → logprob: -8.866255760192871
    10. '[i' → logprob: -8.991255760192871

Token 31: ']*(' (ID: 92627)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.3955700397491455
    2. ']*(' → logprob: -1.1455700397491455
    3. ']' → logprob: -4.770569801330566
    4. ']+' → logprob: -8.895569801330566
    5. 'for' → logprob: -10.395569801330566
    6. ' for' → logprob: -11.270569801330566
    7. ',' → logprob: -12.645569801330566
    8. ' ]' → logprob: -14.145569801330566
    9. ',n' → logprob: -15.145569801330566
    10. ']]' → logprob: -15.645569801330566

Token 32: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001003155019134283
    2. '(n' → logprob: -7.501003265380859
    3. 'm' → logprob: -8.50100326538086
    4. '100' → logprob: -9.25100326538086
    5. '2' → logprob: -10.62600326538086
    6. '3' → logprob: -10.75100326538086
    7. '101' → logprob: -10.75100326538086
    8. ' n' → logprob: -10.87600326538086
    9. '10' → logprob: -11.00100326538086
    10. '(' → logprob: -11.75100326538086

Token 33: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20171445608139038
    2. ')' → logprob: -1.7017145156860352
    3. '+)' → logprob: -8.451714515686035
    4. '+n' → logprob: -10.576714515686035
    5. '))' → logprob: -10.951714515686035
    6. '*' → logprob: -11.701714515686035
    7. ')+' → logprob: -11.826714515686035
    8. ')n' → logprob: -11.826714515686035
    9. ')]' → logprob: -12.951714515686035
    10. '1' → logprob: -12.951714515686035

Token 34: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003452368837315589
    2. '2' → logprob: -8.000345230102539
    3. ' ' → logprob: -11.875345230102539
    4. '3' → logprob: -13.625345230102539
    5. '7' → logprob: -14.250345230102539
    6. '5' → logprob: -15.000345230102539
    7. '4' → logprob: -16.18784523010254
    8. '6' → logprob: -16.18784523010254
    9. '```' → logprob: -16.31284523010254
    10. '10' → logprob: -16.37534523010254

Token 35: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9504606825648807e-05
    2. ' )' → logprob: -11.125019073486328
    3. ')
' → logprob: -12.500019073486328
    4. ')

' → logprob: -15.500019073486328
    5. '))' → logprob: -16.000019073486328
    6. ']' → logprob: -16.250019073486328
    7. '),' → logprob: -16.250019073486328
    8. ')`' → logprob: -16.500019073486328
    9. '+' → logprob: -16.625019073486328
    10. '`)' → logprob: -16.750019073486328

Token 36: 'curr' (ID: 28376)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22007761895656586
    2. 'pos' → logprob: -2.3450775146484375
    3. 'stack' → logprob: -3.7200775146484375
    4. 'current' → logprob: -4.0950775146484375
    5. 'direction' → logprob: -4.7200775146484375
    6. 'idx' → logprob: -5.0950775146484375
    7. 'answer' → logprob: -5.5950775146484375
    8. 'last' → logprob: -5.8450775146484375
    9. 'count' → logprob: -5.8450775146484375
    10. 'ans' → logprob: -5.9700775146484375

Token 37: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.14989472925662994
    2. '=[' → logprob: -2.6498947143554688
    3. '=' → logprob: -3.0248947143554688
    4. 'pos' → logprob: -4.149894714355469
    5. 'ent' → logprob: -6.524894714355469
    6. '=[]' → logprob: -6.524894714355469
    7. 'ents' → logprob: -8.149894714355469
    8. '_positions' → logprob: -8.274894714355469
    9. 'Pos' → logprob: -8.524894714355469
    10. '=int' → logprob: -8.899894714355469

Token 38: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.025458218529820442
    2. ' =' → logprob: -3.900458335876465
    3. '=[' → logprob: -5.400458335876465
    4. '=[]' → logprob: -8.650458335876465
    5. '=int' → logprob: -9.525458335876465
    6. ' =[' → logprob: -10.025458335876465
    7. '={}' → logprob: -11.025458335876465
    8. '[' → logprob: -11.650458335876465
    9. '=n' → logprob: -11.900458335876465
    10. '=s' → logprob: -11.900458335876465

Token 39: '-(' (ID: 18825)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.42939677834510803
    2. '1' → logprob: -1.0543967485427856
    3. 'n' → logprob: -8.429396629333496
    4. '[' → logprob: -8.554396629333496
    5. '[]' → logprob: -9.304396629333496
    6. '[n' → logprob: -9.429396629333496
    7. '-' → logprob: -10.429396629333496
    8. 'm' → logprob: -10.679396629333496
    9. ' ' → logprob: -11.304396629333496
    10. '{}' → logprob: -11.554396629333496

Token 40: 'm' (ID: 76)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07733436673879623
    2. 'n' → logprob: -2.952334403991699
    3. 'm' → logprob: -4.077334403991699
    4. '(n' → logprob: -6.702334403991699
    5. '10' → logprob: -6.827334403991699
    6. '(' → logprob: -7.077334403991699
    7. '100' → logprob: -7.952334403991699
    8. '2' → logprob: -8.2023344039917
    9. '(m' → logprob: -8.2023344039917
    10. '-' → logprob: -8.3273344039917

Token 41: '+' (ID: 10)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.649388313293457
    2. ')' → logprob: -1.399388313293457
    3. '+' → logprob: -1.899388313293457
    4. '//' → logprob: -2.649388313293457
    5. ' )' → logprob: -5.524388313293457
    6. ' -' → logprob: -5.774388313293457
    7. ' //' → logprob: -7.149388313293457
    8. ' ' → logprob: -7.774388313293457
    9. ')//' → logprob: -8.024388313293457
    10. ' +' → logprob: -8.149388313293457

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019460106268525124
    2. '10' → logprob: -7.126945972442627
    3. '2' → logprob: -7.501945972442627
    4. '5' → logprob: -8.251946449279785
    5. ' ' → logprob: -8.501946449279785
    6. '100' → logprob: -10.001946449279785
    7. 'n' → logprob: -10.501946449279785
    8. 'm' → logprob: -10.751946449279785
    9. ')' → logprob: -11.626946449279785
    10. '7' → logprob: -12.001946449279785

Token 43: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003076950670219958
    2. ' )' → logprob: -8.2503080368042
    3. ')
' → logprob: -10.1253080368042
    4. '+' → logprob: -13.5003080368042
    5. '))' → logprob: -14.0003080368042
    6. ')

' → logprob: -14.3753080368042
    7. '0' → logprob: -15.0003080368042
    8. '```' → logprob: -15.0003080368042
    9. '1' → logprob: -15.2503080368042
    10. '-' → logprob: -15.5003080368042

Token 44: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06463742256164551
    2. ' for' → logprob: -2.8146374225616455
    3. 'answer' → logprob: -7.064637184143066
    4. 'ans' → logprob: -7.689637184143066
    5. 'result' → logprob: -7.689637184143066
    6. 'res' → logprob: -8.189637184143066
    7. 'idx' → logprob: -8.439637184143066
    8. 'count' → logprob: -9.564637184143066
    9. 'max' → logprob: -9.564637184143066
    10. 'total' → logprob: -10.689637184143066

Token 45: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.45072421431541443
    2. 'r' → logprob: -1.9507242441177368
    3. ' i' → logprob: -2.0757241249084473
    4. 'x' → logprob: -3.5757241249084473
    5. 'req' → logprob: -3.5757241249084473
    6. ' r' → logprob: -4.075724124908447
    7. 'request' → logprob: -4.950724124908447
    8. ' req' → logprob: -5.575724124908447
    9. ' x' → logprob: -6.200724124908447
    10. ' request' → logprob: -6.450724124908447

Token 46: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.314988374710083
    2. ' in' → logprob: -1.314988374710083
    3. ',' → logprob: -6.689988136291504
    4. 'n' → logprob: -8.439988136291504
    5. ' ' → logprob: -9.189988136291504
    6. ',in' → logprob: -9.314988136291504
    7. ' ,' → logprob: -10.439988136291504
    8. '	in' → logprob: -11.564988136291504
    9. ',n' → logprob: -11.689988136291504
    10. ' n' → logprob: -12.814988136291504

Token 47: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.015494470484554768
    2. 'requests' → logprob: -4.265494346618652
    3. ' range' → logprob: -6.640494346618652
    4. ' requests' → logprob: -11.015494346618652
    5. 'request' → logprob: -12.515494346618652
    6. '(range' → logprob: -13.140494346618652
    7. 'ranges' → logprob: -15.015494346618652
    8. '	range' → logprob: -15.265494346618652
    9. 'm' → logprob: -15.390494346618652
    10. 'requested' → logprob: -15.890494346618652

Token 48: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.632942795753479
    2. '(m' → logprob: -0.757942795753479
    3. '(len' → logprob: -8.757943153381348
    4. '(n' → logprob: -9.132943153381348
    5. ' (' → logprob: -9.632943153381348
    6. '(l' → logprob: -13.257943153381348
    7. '(a' → logprob: -13.882943153381348
    8. '(range' → logprob: -13.882943153381348
    9. '(length' → logprob: -13.882943153381348
    10. '(s' → logprob: -14.007943153381348

Token 49: '1' (ID: 16)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.026887785643339157
    2. '1' → logprob: -3.651887893676758
    3. 'n' → logprob: -8.276887893676758
    4. 'len' → logprob: -9.151887893676758
    5. '(m' → logprob: -9.151887893676758
    6. '(' → logprob: -9.651887893676758
    7. ' m' → logprob: -10.151887893676758
    8. ' ' → logprob: -12.776887893676758
    9. '   ' → logprob: -13.026887893676758
    10. '(n' → logprob: -13.026887893676758

Token 50: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12866170704364777
    2. ',n' → logprob: -2.128661632537842
    3. ' ,' → logprob: -6.378661632537842
    4. ',m' → logprob: -10.628662109375
    5. ',len' → logprob: -12.753662109375
    6. 'n' → logprob: -13.003662109375
    7. ',
' → logprob: -13.128662109375
    8. ',num' → logprob: -13.628662109375
    9. ' n' → logprob: -14.378662109375
    10. ',int' → logprob: -15.378662109375

Token 51: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.746380237629637e-05
    2. ' +' → logprob: -9.625097274780273
    3. '+
' → logprob: -10.500097274780273
    4. ')+' → logprob: -13.375097274780273
    5. '+)' → logprob: -14.375097274780273
    6. '+

' → logprob: -15.250097274780273
    7. '+n' → logprob: -15.250097274780273
    8. ')' → logprob: -15.625097274780273
    9. '+i' → logprob: -15.875097274780273
    10. '):' → logprob: -16.000097274780273

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.141186450899113e-05
    2. ' ' → logprob: -10.875020980834961
    3. '+' → logprob: -13.250020980834961
    4. ')' → logprob: -15.500020980834961
    5. '```' → logprob: -15.625020980834961
    6. '):
' → logprob: -16.12502098083496
    7. '2' → logprob: -17.25002098083496
    8. '-' → logprob: -17.50002098083496
    9. 'n' → logprob: -17.50002098083496
    10. '):' → logprob: -18.12502098083496

Token 53: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6760692000389099
    2. '):' → logprob: -0.9260692000389099
    3. '):
' → logprob: -2.5510692596435547
    4. ')' → logprob: -4.426069259643555
    5. ':
' → logprob: -5.426069259643555
    6. ' :' → logprob: -8.551069259643555
    7. ' ):' → logprob: -8.551069259643555
    8. ' ):
' → logprob: -8.676069259643555
    9. ',' → logprob: -8.926069259643555
    10. '):
' → logprob: -9.551069259643555

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01407523825764656
    2. ' pos' → logprob: -5.01407527923584
    3. 'pos' → logprob: -5.01407527923584
    4. ' ' → logprob: -7.88907527923584
    5. '	pos' → logprob: -8.26407527923584
    6. '  ' → logprob: -11.38907527923584
    7. '```' → logprob: -11.38907527923584
    8. ':' → logprob: -12.13907527923584
    9. '   ' → logprob: -12.13907527923584
    10. ',pos' → logprob: -12.13907527923584

Token 55: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.01921701245009899
    2. ' pos' → logprob: -4.144217014312744
    3. '   ' → logprob: -5.769217014312744
    4. '	pos' → logprob: -10.269216537475586
    5. ' ' → logprob: -12.019216537475586
    6. '
' → logprob: -12.019216537475586
    7. 'position' → logprob: -13.144216537475586
    8. '_pos' → logprob: -13.144216537475586
    9. '  ' → logprob: -13.769216537475586
    10. ',pos' → logprob: -14.644216537475586

Token 56: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3544423381972592e-05
    2. '[' → logprob: -11.25001335144043
    3. '\[' → logprob: -16.00001335144043
    4. '[I' → logprob: -16.37501335144043
    5. '```' → logprob: -16.37501335144043
    6. '[pos' → logprob: -17.12501335144043
    7. '[user' → logprob: -17.87501335144043
    8. '[input' → logprob: -18.00001335144043
    9. '[in' → logprob: -18.75001335144043
    10. '[int' → logprob: -18.87501335144043

Token 57: ']=' (ID: 9539)
  Prédit: '=i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=i' → logprob: -0.1474042385816574
    2. ']=' → logprob: -2.522404193878174
    3. '=' → logprob: -3.022404193878174
    4. ')=' → logprob: -5.772404193878174
    5. ']' → logprob: -5.897404193878174
    6. ']=-' → logprob: -7.022404193878174
    7. '=n' → logprob: -7.897404193878174
    8. ' =' → logprob: -8.272404670715332
    9. ')' → logprob: -8.272404670715332
    10. '=index' → logprob: -8.897404670715332

Token 58: 'i' (ID: 72)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.04359041154384613
    2. 'i' → logprob: -3.2935903072357178
    3. ' curr' → logprob: -6.043590545654297
    4. '-c' → logprob: -6.793590545654297
    5. '0' → logprob: -7.168590545654297
    6. ' i' → logprob: -8.043590545654297
    7. 'n' → logprob: -8.668590545654297
    8. '-' → logprob: -8.918590545654297
    9. '-i' → logprob: -8.918590545654297
    10. '-(' → logprob: -8.918590545654297

Token 59: '+m' (ID: 139456)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7622281312942505
    2. '+m' → logprob: -0.8872281312942505
    3. '+n' → logprob: -2.512228012084961
    4. '-' → logprob: -4.137228012084961
    5. '<|end|>' → logprob: -5.137228012084961
    6. '-m' → logprob: -5.262228012084961
    7. '-n' → logprob: -5.512228012084961
    8. '
' → logprob: -5.637228012084961
    9. '+i' → logprob: -6.762228012084961
    10. ' +' → logprob: -6.762228012084961

Token 60: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12614597380161285
    2. '+' → logprob: -2.501146078109741
    3. ' 
' → logprob: -4.501145839691162
    4. '-' → logprob: -5.376145839691162
    5. '
' → logprob: -5.376145839691162
    6. '```' → logprob: -5.501145839691162
    7. 'for' → logprob: -5.876145839691162
    8. '  
' → logprob: -6.751145839691162
    9. '\n' → logprob: -6.751145839691162
    10. 'pos' → logprob: -6.751145839691162

Token 61: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04579439014196396
    2. 'stack' → logprob: -3.4207944869995117
    3. ' for' → logprob: -5.045794486999512
    4. '```' → logprob: -6.795794486999512
    5. 'curr' → logprob: -7.295794486999512
    6. 'print' → logprob: -7.295794486999512
    7. 'pos' → logprob: -7.545794486999512
    8. 'max' → logprob: -7.795794486999512
    9. 'requests' → logprob: -8.170794486999512
    10. 'available' → logprob: -8.295794486999512

Token 62: ' i' (ID: 575)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5236778259277344
    2. ' _' → logprob: -1.6486778259277344
    3. ' i' → logprob: -1.8986778259277344
    4. ' request' → logprob: -3.6486778259277344
    5. ' req' → logprob: -4.523677825927734
    6. '_' → logprob: -4.773677825927734
    7. 'r' → logprob: -4.773677825927734
    8. ' m' → logprob: -5.523677825927734
    9. ' ' → logprob: -5.898677825927734
    10. ' requests' → logprob: -6.648677825927734

Token 63: ',e' (ID: 43127)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31451743841171265
    2. 'in' → logprob: -1.3145174980163574
    3. ' ' → logprob: -7.689517498016357
    4. ',' → logprob: -7.814517498016357
    5. ' ,' → logprob: -8.4395170211792
    6. ',in' → logprob: -9.4395170211792
    7. 'range' → logprob: -11.1895170211792
    8. 'to' → logprob: -11.1895170211792
    9. '   ' → logprob: -11.1895170211792
    10. '  ' → logprob: -11.9395170211792

Token 64: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0224244836717844
    2. 'in' → logprob: -4.147424697875977
    3. 'n' → logprob: -5.772424697875977
    4. 'm' → logprob: -6.897424697875977
    5. ',' → logprob: -7.147424697875977
    6. 's' → logprob: -7.272424697875977
    7. ',in' → logprob: -8.147424697875977
    8. ',n' → logprob: -9.147424697875977
    9. 'num' → logprob: -9.397424697875977
    10. 'x' → logprob: -9.522424697875977

Token 65: ' enumerate' (ID: 29671)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.22516947984695435
    2. ' enumerate' → logprob: -2.1001694202423096
    3. ' requests' → logprob: -2.7251694202423096
    4. 'range' → logprob: -4.975169658660889
    5. 'requests' → logprob: -5.225169658660889
    6. 'enumer' → logprob: -6.725169658660889
    7. '(range' → logprob: -9.35016918182373
    8. ' ' → logprob: -10.22516918182373
    9. '```' → logprob: -11.22516918182373
    10. '	range' → logprob: -12.22516918182373

Token 66: '(request' (ID: 9108)
  Prédit: '(request'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(request' → logprob: -0.0005060884868726134
    2. 'requests' → logprob: -7.8755059242248535
    3. ' (' → logprob: -9.500506401062012
    4. ' requests' → logprob: -10.125506401062012
    5. '(' → logprob: -11.500506401062012
    6. '=request' → logprob: -15.375506401062012
    7. '(range' → logprob: -15.500506401062012
    8. '(req' → logprob: -16.000505447387695
    9. '_requests' → logprob: -16.250505447387695
    10. '.requests' → logprob: -16.750505447387695

Token 67: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4855663721391466e-05
    2. 'requests' → logprob: -11.500015258789062
    3. ')s' → logprob: -13.250015258789062
    4. ' s' → logprob: -14.250015258789062
    5. ')' → logprob: -15.000015258789062
    6. 'sts' → logprob: -15.250015258789062
    7. 'es' → logprob: -15.500015258789062
    8. 'ues' → logprob: -15.875015258789062
    9. '_requests' → logprob: -15.875015258789062
    10. 'st' → logprob: -16.000015258789062

Token 68: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3881346583366394
    2. ',' → logprob: -1.1381347179412842
    3. ' ):' → logprob: -7.888134479522705
    4. ')' → logprob: -8.013134956359863
    5. '):
' → logprob: -8.013134956359863
    6. ' ,' → logprob: -8.638134956359863
    7. '),' → logprob: -11.763134956359863
    8. ' ' → logprob: -11.888134956359863
    9. ':' → logprob: -12.263134956359863
    10. ',:' → logprob: -12.513134956359863

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06266335397958755
    2. '
' → logprob: -3.3126633167266846
    3. '    
' → logprob: -4.187663555145264
    4. '```' → logprob: -5.812663555145264
    5. '<|end|>' → logprob: -6.937663555145264
    6. ' 
' → logprob: -7.062663555145264
    7. ',' → logprob: -7.062663555145264
    8. ':' → logprob: -7.812663555145264
    9. ' ' → logprob: -7.937663555145264
    10. '\n' → logprob: -8.062663078308105

Token 70: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.40223172307014465
    2. ' pos' → logprob: -1.1522316932678223
    3. '   ' → logprob: -4.527231693267822
    4. 'print' → logprob: -6.652231693267822
    5. 'curr' → logprob: -7.652231693267822
    6. ' if' → logprob: -7.777231693267822
    7. ' ' → logprob: -7.902231693267822
    8. ' curr' → logprob: -8.02723217010498
    9. '```' → logprob: -8.02723217010498
    10. ' print' → logprob: -8.40223217010498

Token 71: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -9.043078898685053e-05
    2. '[' → logprob: -9.375090599060059
    3. 'e' → logprob: -13.125090599060059
    4. '```' → logprob: -13.125090599060059
    5. '\[' → logprob: -15.625090599060059
    6. '[element' → logprob: -15.875090599060059
    7. '[s' → logprob: -16.000089645385742
    8. ' [' → logprob: -16.000089645385742
    9. '[
' → logprob: -16.125089645385742
    10. '	e' → logprob: -16.375089645385742

Token 72: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.012928908690810204
    2. ']' → logprob: -4.3879289627075195
    3. '=' → logprob: -8.51292896270752
    4. ')=' → logprob: -8.76292896270752
    5. ']=-' → logprob: -10.76292896270752
    6. ']+=' → logprob: -11.26292896270752
    7. ']=(' → logprob: -11.38792896270752
    8. '])' → logprob: -13.01292896270752
    9. ' ]' → logprob: -13.01292896270752
    10. ')' → logprob: -13.13792896270752

Token 73: 'm' (ID: 76)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.001959082670509815
    2. 'i' → logprob: -7.501958847045898
    3. '-c' → logprob: -7.501958847045898
    4. ' curr' → logprob: -7.626958847045898
    5. '-(' → logprob: -9.626958847045898
    6. 'm' → logprob: -9.876958847045898
    7. '-i' → logprob: -9.876958847045898
    8. '-' → logprob: -10.001958847045898
    9. '(curr' → logprob: -10.376958847045898
    10. ' ' → logprob: -10.626958847045898

Token 74: ' -' (ID: 533)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.08703354001045227
    2. ' -' → logprob: -2.71203351020813
    3. '-' → logprob: -4.087033748626709
    4. 'i' → logprob: -9.96203327178955
    5. '+i' → logprob: -10.33703327178955
    6. '+' → logprob: -10.71203327178955
    7. '−' → logprob: -11.71203327178955
    8. '-m' → logprob: -11.83703327178955
    9. '-(' → logprob: -11.96203327178955
    10. '-n' → logprob: -12.46203327178955

Token 75: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004631503485143185
    2. ' i' → logprob: -5.379631519317627
    3. '1' → logprob: -11.629631042480469
    4. ' ' → logprob: -13.879631042480469
    5. '-i' → logprob: -14.754631042480469
    6. '_i' → logprob: -15.004631042480469
    7. '	i' → logprob: -15.129631042480469
    8. '   ' → logprob: -16.25463104248047
    9. '[i' → logprob: -16.25463104248047
    10. '  ' → logprob: -16.50463104248047

Token 76: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42749378085136414
    2. 'print' → logprob: -2.3024938106536865
    3. ' for' → logprob: -2.4274938106536865
    4. '
' → logprob: -3.3024938106536865
    5. 'curr' → logprob: -3.4274938106536865
    6. ' ' → logprob: -3.9274938106536865
    7. '-' → logprob: -4.302493572235107
    8. '0' → logprob: -4.552493572235107
    9. 'pos' → logprob: -5.052493572235107
    10. '#' → logprob: -5.052493572235107

Token 77: 'result' (ID: 2521)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.764856219291687
    2. 'for' → logprob: -1.514856219291687
    3. ')' → logprob: -1.639856219291687
    4. 'curr' → logprob: -3.6398563385009766
    5. 'max' → logprob: -3.7648563385009766
    6. 'sorted' → logprob: -4.264856338500977
    7. ' for' → logprob: -4.514856338500977
    8. ' ' → logprob: -4.764856338500977
    9. 'answer' → logprob: -5.139856338500977
    10. 'min' → logprob: -5.264856338500977

Token 78: ' =' (ID: 314)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.7408009171485901
    2. '=' → logprob: -0.8658009171485901
    3. ' =' → logprob: -2.9908008575439453
    4. '=[' → logprob: -2.9908008575439453
    5. '=[]
' → logprob: -6.615800857543945
    6. '[' → logprob: -8.990800857543945
    7. '[:]' → logprob: -9.490800857543945
    8. 's' → logprob: -9.615800857543945
    9. '=[],' → logprob: -9.615800857543945
    10. ' =[' → logprob: -9.990800857543945

Token 79: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.11940228939056396
    2. '[' → logprob: -2.7444024085998535
    3. '[pos' → logprob: -3.9944024085998535
    4. '[]' → logprob: -3.9944024085998535
    5. ' sorted' → logprob: -5.9944024085998535
    6. 'pos' → logprob: -6.4944024085998535
    7. '[]
' → logprob: -6.8694024085998535
    8. '[max' → logprob: -6.8694024085998535
    9. 'list' → logprob: -6.9944024085998535
    10. '[len' → logprob: -7.1194024085998535

Token 80: '(range' (ID: 50017)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.015565725974738598
    2. '(' → logprob: -4.890565872192383
    3. '(range' → logprob: -5.265565872192383
    4. '((' → logprob: -6.140565872192383
    5. '([(' → logprob: -8.140565872192383
    6. 'pos' → logprob: -8.515565872192383
    7. '([' → logprob: -9.890565872192383
    8. '(lambda' → logprob: -11.015565872192383
    9. '(list' → logprob: -11.265565872192383
    10. '(
' → logprob: -11.390565872192383

Token 81: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0027520956937223673
    2. '(n' → logprob: -6.002752304077148
    3. '(len' → logprob: -8.252752304077148
    4. '1' → logprob: -11.252752304077148
    5. 'len' → logprob: -13.002752304077148
    6. ' (' → logprob: -15.377752304077148
    7. 'n' → logprob: -15.877752304077148
    8. '```' → logprob: -16.50275230407715
    9. '(m' → logprob: -16.75275230407715
    10. ')' → logprob: -17.75275230407715

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01052101980894804
    2. '(' → logprob: -4.760520935058594
    3. 'n' → logprob: -6.635520935058594
    4. 'len' → logprob: -8.135520935058594
    5. '(n' → logprob: -8.385520935058594
    6. ' ' → logprob: -10.385520935058594
    7. '   ' → logprob: -10.885520935058594
    8. '(len' → logprob: -11.635520935058594
    9. '```' → logprob: -12.635520935058594
    10. ' n' → logprob: -13.885520935058594

Token 83: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.02328578010201454
    2. ',' → logprob: -3.7732858657836914
    3. ',len' → logprob: -11.148285865783691
    4. ' ,' → logprob: -11.148285865783691
    5. 'n' → logprob: -11.648285865783691
    6. '(n' → logprob: -14.273285865783691
    7. '```' → logprob: -14.523285865783691
    8. ',num' → logprob: -14.898285865783691
    9. '   ' → logprob: -15.148285865783691
    10. '1' → logprob: -15.273285865783691

Token 84: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.5690089639974758e-05
    2. ' +' → logprob: -11.500015258789062
    3. '+n' → logprob: -12.375015258789062
    4. '+
' → logprob: -14.625015258789062
    5. '1' → logprob: -15.750015258789062
    6. ')+' → logprob: -16.000015258789062
    7. ',+' → logprob: -16.125015258789062
    8. '),' → logprob: -16.375015258789062
    9. '```' → logprob: -16.750015258789062
    10. '+)' → logprob: -17.000015258789062

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2471589798224159e-05
    2. '+' → logprob: -11.375012397766113
    3. '2' → logprob: -14.625012397766113
    4. ' ' → logprob: -14.875012397766113
    5. '```' → logprob: -17.00001335144043
    6. '   ' → logprob: -17.25001335144043
    7. '１' → logprob: -19.25001335144043
    8. 'i' → logprob: -19.25001335144043
    9. ')' → logprob: -19.37501335144043
    10. 'n' → logprob: -19.62501335144043

Token 86: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25539982318878174
    2. ',key' → logprob: -1.5053998231887817
    3. 'key' → logprob: -5.755399703979492
    4. '),' → logprob: -8.380399703979492
    5. ' key' → logprob: -10.005399703979492
    6. ' ,' → logprob: -10.880399703979492
    7. '   ' → logprob: -13.505399703979492
    8. '	key' → logprob: -14.005399703979492
    9. '],' → logprob: -14.130399703979492
    10. '},' → logprob: -14.380399703979492

Token 87: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.0003433296224102378
    2. ' key' → logprob: -8.000343322753906
    3. 'lambda' → logprob: -11.750343322753906
    4. ',key' → logprob: -18.000343322753906
    5. '(key' → logprob: -18.250343322753906
    6. '   ' → logprob: -18.500343322753906
    7. '	key' → logprob: -18.750343322753906
    8. ' lambda' → logprob: -19.625343322753906
    9. 'k' → logprob: -20.250343322753906
    10. '           ' → logprob: -21.500343322753906

Token 88: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.002475777640938759
    2. '=' → logprob: -6.002475738525391
    3. '=len' → logprob: -17.12747573852539
    4. '=
' → logprob: -17.25247573852539
    5. '=l' → logprob: -18.25247573852539
    6. '=_' → logprob: -18.37747573852539
    7. '=int' → logprob: -18.87747573852539
    8. 'lambda' → logprob: -19.00247573852539
    9. '=

' → logprob: -19.50247573852539
    10. '=str' → logprob: -19.87747573852539

Token 89: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4380258321762085
    2. ' x' → logprob: -1.0630258321762085
    3. 'lambda' → logprob: -5.438025951385498
    4. ' lambda' → logprob: -5.813025951385498
    5. 'k' → logprob: -6.813025951385498
    6. 'e' → logprob: -7.563025951385498
    7. ' i' → logprob: -9.06302547454834
    8. ' k' → logprob: -9.93802547454834
    9. ' e' → logprob: -10.31302547454834
    10. ':' → logprob: -10.31302547454834

Token 90: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.490809417096898e-05
    2. ' :' → logprob: -10.750055313110352
    3. ':return' → logprob: -10.750055313110352
    4. ':int' → logprob: -11.875055313110352
    5. ':e' → logprob: -14.000055313110352
    6. ':key' → logprob: -15.000055313110352
    7. ':x' → logprob: -15.000055313110352
    8. ':
' → logprob: -15.125055313110352
    9. ':param' → logprob: -15.125055313110352
    10. ':i' → logprob: -15.250055313110352

Token 91: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.05525290593504906
    2. ' pos' → logprob: -2.93025279045105
    3. '-pos' → logprob: -8.180253028869629
    4. ' -' → logprob: -10.430253028869629
    5. '-' → logprob: -10.555253028869629
    6. ' lambda' → logprob: -11.430253028869629
    7. 'lambda' → logprob: -11.555253028869629
    8. '   ' → logprob: -12.930253028869629
    9. '	pos' → logprob: -12.930253028869629
    10. ')' → logprob: -12.930253028869629

Token 92: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.4498052223643754e-05
    2. 'x' → logprob: -11.250014305114746
    3. '[' → logprob: -13.750014305114746
    4. '(x' → logprob: -16.125015258789062
    5. ')' → logprob: -16.375015258789062
    6. '[
' → logprob: -16.375015258789062
    7. ')x' → logprob: -16.875015258789062
    8. '<x' → logprob: -18.125015258789062
    9. ',x' → logprob: -18.375015258789062
    10. '```' → logprob: -19.000015258789062

Token 93: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008946668240241706
    2. '))' → logprob: -7.375894546508789
    3. ' )' → logprob: -8.500894546508789
    4. ',' → logprob: -10.625894546508789
    5. '})' → logprob: -10.625894546508789
    6. '),' → logprob: -12.375894546508789
    7. ',)' → logprob: -12.625894546508789
    8. '])' → logprob: -13.250894546508789
    9. ')
' → logprob: -13.625894546508789
    10. ')))' → logprob: -13.625894546508789

Token 94: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16063828766345978
    2. 'for' → logprob: -1.9106383323669434
    3. ')' → logprob: -8.785637855529785
    4. ')
' → logprob: -8.910637855529785
    5. '```' → logprob: -10.035637855529785
    6. ' for' → logprob: -10.410637855529785
    7. 'result' → logprob: -10.410637855529785
    8. '
' → logprob: -12.285637855529785
    9. '#print' → logprob: -12.910637855529785
    10. ')\' → logprob: -13.160637855529785

Token 95: '('\' (ID: 24345)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5281720757484436
    2. '(*' → logprob: -1.5281720161437988
    3. '(result' → logprob: -1.7781720161437988
    4. '('' → logprob: -3.903172016143799
    5. '("("' → logprob: -6.028172016143799
    6. '("' → logprob: -6.653172016143799
    7. '(*(' → logprob: -8.153172492980957
    8. '((' → logprob: -9.778172492980957
    9. 'result' → logprob: -10.153172492980957
    10. '(tuple' → logprob: -10.403172492980957

Token 96: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.35837464465294e-05
    2. ''' → logprob: -10.250043869018555
    3. ' ' → logprob: -12.875043869018555
    4. ''\' → logprob: -13.625043869018555
    5. 's' → logprob: -14.000043869018555
    6. 'w' → logprob: -14.250043869018555
    7. ')' → logprob: -14.375043869018555
    8. '1' → logprob: -14.625043869018555
    9. '\n' → logprob: -15.000043869018555
    10. '')' → logprob: -15.125043869018555

Token 97: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.030952641740441322
    2. '.join' → logprob: -4.405952453613281
    3. '.' → logprob: -4.530952453613281
    4. '".' → logprob: -5.405952453613281
    5. 'join' → logprob: -6.530952453613281
    6. '''.' → logprob: -6.905952453613281
    7. 'print' → logprob: -8.155952453613281
    8. ').' → logprob: -8.655952453613281
    9. '`.' → logprob: -10.530952453613281
    10. ''' → logprob: -10.780952453613281

Token 98: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -5.080963092041202e-06
    2. 'print' → logprob: -12.750004768371582
    3. 'jo' → logprob: -13.500004768371582
    4. 'j' → logprob: -14.375004768371582
    5. ' join' → logprob: -16.3750057220459
    6. '```' → logprob: -18.3750057220459
    7. 'write' → logprob: -18.6250057220459
    8. 'start' → logprob: -19.2500057220459
    9. 'strip' → logprob: -19.5000057220459
    10. 'format' → logprob: -19.6250057220459

Token 99: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.023791123181581497
    2. '(str' → logprob: -3.7737910747528076
    3. '(list' → logprob: -8.148791313171387
    4. 'map' → logprob: -8.648791313171387
    5. '(' → logprob: -9.773791313171387
    6. '([' → logprob: -11.023791313171387
    7. 'str' → logprob: -12.523791313171387
    8. ')' → logprob: -13.398791313171387
    9. '(result' → logprob: -14.523791313171387
    10. 'list' → logprob: -14.773791313171387

Token 100: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0007185076246969402
    2. 'str' → logprob: -7.250718593597412
    3. '(' → logprob: -11.875718116760254
    4. ' str' → logprob: -14.875718116760254
    5. ')' → logprob: -14.875718116760254
    6. '=str' → logprob: -15.500718116760254
    7. '[str' → logprob: -15.625718116760254
    8. ')(' → logprob: -16.00071907043457
    9. '	str' → logprob: -16.12571907043457
    10. ',str' → logprob: -16.37571907043457

Token 101: ',result' (ID: 129217)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.07905403524637222
    2. ',result' → logprob: -2.579054117202759
    3. ',' → logprob: -9.07905387878418
    4. 'result' → logprob: -10.82905387878418
    5. ',(' → logprob: -10.95405387878418
    6. '(' → logprob: -11.70405387878418
    7. ' (' → logprob: -12.82905387878418
    8. '(results' → logprob: -13.57905387878418
    9. ' ,' → logprob: -15.57905387878418
    10. ' result' → logprob: -16.20405387878418

Token 102: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.12713345885276794
    2. '))' → logprob: -2.127133369445801
    3. ')' → logprob: -8.5021333694458
    4. '))))' → logprob: -13.2521333694458
    5. ')))
' → logprob: -15.1271333694458
    6. ')));' → logprob: -16.502134323120117
    7. '))
' → logprob: -16.877134323120117
    8. ' ' → logprob: -17.252134323120117
    9. ' ))' → logprob: -17.502134323120117
    10. '}))' → logprob: -18.002134323120117


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 100
Tokens correctement prédits (1ère position, stricte): 41
Tokens correctement prédits (1ère position, avec adaptation): 43
Tokens correctement prédits (top 10): 82
Précision stricte (1ère position): 41.00%
Précision adaptée (1ère position): 43.00%
Précision (top 10): 82.00%
================================================================================
