================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:55:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
text = input()
result = ""
for char in text:
    if 'a' <= char <= 'z':
        result += chr(ord(char) - 32)
    else:
        result += char
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'text' (ID: 919)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004621422383934259
    2. ''' → logprob: -5.879621505737305
    3. '"' → logprob: -7.129621505737305
    4. '[' → logprob: -8.254621505737305
    5. '`' → logprob: -8.379621505737305
    6. '.' → logprob: -9.129621505737305
    7. '()' → logprob: -9.254621505737305
    8. '(
' → logprob: -9.379621505737305
    9. '```' → logprob: -9.754621505737305
    10. ')' → logprob: -10.004621505737305

Token 4: 'result' (ID: 2521)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.007893243804574013
    2. '.strip' → logprob: -5.507893085479736
    3. '=' → logprob: -6.632893085479736
    4. '_' → logprob: -8.007893562316895
    5. '.split' → logprob: -8.007893562316895
    6. ')' → logprob: -8.132893562316895
    7. '```' → logprob: -8.132893562316895
    8. '.lower' → logprob: -8.757893562316895
    9. 'if' → logprob: -8.882893562316895
    10. ''' → logprob: -9.007893562316895

Token 5: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4803194999694824
    2. '=' → logprob: -1.2303194999694824
    3. ' =' → logprob: -2.4803194999694824
    4. '.=' → logprob: -6.355319499969482
    5. '+' → logprob: -7.230319499969482
    6. '_' → logprob: -7.730319499969482
    7. '[' → logprob: -7.730319499969482
    8. '[:]' → logprob: -7.980319499969482
    9. '.append' → logprob: -8.35531997680664
    10. '(' → logprob: -8.35531997680664

Token 6: ' ""
' (ID: 18061)
  Prédit: ' text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.1002766489982605
    2. 'text' → logprob: -2.3502767086029053
    3. ' int' → logprob: -11.100276947021484
    4. ' input' → logprob: -11.225276947021484
    5. ' ' → logprob: -11.725276947021484
    6. 'int' → logprob: -11.975276947021484
    7. ' len' → logprob: -12.100276947021484
    8. '"text' → logprob: -12.100276947021484
    9. 'input' → logprob: -12.475276947021484
    10. ' f' → logprob: -12.725276947021484

Token 7: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008866164833307266
    2. ' for' → logprob: -4.883866310119629
    3. '=' → logprob: -7.383866310119629
    4. '+' → logprob: -8.883866310119629
    5. 'i' → logprob: -8.883866310119629
    6. '.' → logprob: -9.008866310119629
    7. 'f' → logprob: -9.758866310119629
    8. '\n' → logprob: -10.758866310119629
    9. '```' → logprob: -10.883866310119629
    10. '_' → logprob: -11.008866310119629

Token 8: ' char' (ID: 1826)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.017397761344909668
    2. ' i' → logprob: -4.142397880554199
    3. '  ' → logprob: -7.267397880554199
    4. ' token' → logprob: -8.2673978805542
    5. ' text' → logprob: -8.7673978805542
    6. ' _' → logprob: -9.8923978805542
    7. ' t' → logprob: -10.0173978805542
    8. ' ' → logprob: -10.7673978805542
    9. ' c' → logprob: -10.8923978805542
    10. ' item' → logprob: -11.1423978805542

Token 9: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007401226554065943
    2. 'in' → logprob: -5.507400989532471
    3. ' ' → logprob: -5.757400989532471
    4. ' =' → logprob: -10.132401466369629
    5. ' :' → logprob: -10.507401466369629
    6. '  ' → logprob: -10.507401466369629
    7. ' ,' → logprob: -11.132401466369629
    8. '=' → logprob: -12.007401466369629
    9. '<|end|>' → logprob: -12.007401466369629
    10. ',' → logprob: -12.257401466369629

Token 10: ' text' (ID: 2201)
  Prédit: ' text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.02630215883255005
    2. 'text' → logprob: -3.6513020992279053
    3. ' range' → logprob: -14.526302337646484
    4. '{text' → logprob: -15.526302337646484
    5. '"text' → logprob: -15.651302337646484
    6. '(text' → logprob: -15.651302337646484
    7. ' input' → logprob: -15.776302337646484
    8. '_text' → logprob: -15.776302337646484
    9. ' ' → logprob: -15.901302337646484
    10. ' ' → logprob: -15.901302337646484

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.620622712536715e-05
    2. ':
' → logprob: -10.625045776367188
    3. ' :' → logprob: -12.125045776367188
    4. '":' → logprob: -12.375045776367188
    5. ':**' → logprob: -12.750045776367188
    6. '":"' → logprob: -13.000045776367188
    7. '+:' → logprob: -13.500045776367188
    8. '>:' → logprob: -13.750045776367188
    9. '':' → logprob: -14.250045776367188
    10. '):' → logprob: -14.500045776367188

Token 12: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8694588541984558
    2. '   ' → logprob: -0.8694588541984558
    3. ' if' → logprob: -2.2444589138031006
    4. '<|end|>' → logprob: -4.1194586753845215
    5. '    ' → logprob: -4.2444586753845215
    6. ' "' → logprob: -5.4944586753845215
    7. ''' → logprob: -5.8694586753845215
    8. 'result' → logprob: -6.1194586753845215
    9. '```' → logprob: -6.1194586753845215
    10. ' ```' → logprob: -6.3694586753845215

Token 13: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7457708120346069
    2. ' if' → logprob: -0.8707708120346069
    3. 'result' → logprob: -2.4957709312438965
    4. 'i' → logprob: -4.4957709312438965
    5. ' result' → logprob: -4.9957709312438965
    6. '   ' → logprob: -5.4957709312438965
    7. ' ' → logprob: -7.4957709312438965
    8. ' i' → logprob: -8.120770454406738
    9. '```' → logprob: -8.495770454406738
    10. ' ```' → logprob: -8.620770454406738

Token 14: ' '' (ID: 461)
  Prédit: ' char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' char' → logprob: -0.012758845463395119
    2. 'char' → logprob: -4.512758731842041
    3. ' ' → logprob: -6.637758731842041
    4. ' not' → logprob: -8.5127592086792
    5. ' text' → logprob: -9.3877592086792
    6. '(char' → logprob: -10.3877592086792
    7. ' ord' → logprob: -11.2627592086792
    8. '<|end|>' → logprob: -11.3877592086792
    9. '<char' → logprob: -11.3877592086792
    10. ',char' → logprob: -11.5127592086792

Token 15: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07646630704402924
    2. 'A' → logprob: -2.8264663219451904
    3. '0' → logprob: -4.701466083526611
    4. ' '' → logprob: -5.451466083526611
    5. ''' → logprob: -7.451466083526611
    6. ''a' → logprob: -8.32646656036377
    7. 'а' → logprob: -9.95146656036377
    8. ''A' → logprob: -9.95146656036377
    9. ' a' → logprob: -10.70146656036377
    10. 'char' → logprob: -11.07646656036377

Token 16: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0008615575497969985
    2. '<=' → logprob: -7.875861644744873
    3. ' <=' → logprob: -8.375861167907715
    4. ' '' → logprob: -9.125861167907715
    5. 'e' → logprob: -10.375861167907715
    6. ''in' → logprob: -10.750861167907715
    7. ''<' → logprob: -11.250861167907715
    8. ' ' → logprob: -11.250861167907715
    9. 'a' → logprob: -11.375861167907715
    10. '"' → logprob: -11.875861167907715

Token 17: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.006422609556466341
    2. '<=' → logprob: -5.131422519683838
    3. ' ' → logprob: -7.881422519683838
    4. ' in' → logprob: -9.881422996520996
    5. ' <' → logprob: -10.756422996520996
    6. ' ==' → logprob: -11.131422996520996
    7. '<|end|>' → logprob: -11.631422996520996
    8. '  ' → logprob: -12.256422996520996
    9. ' ≤' → logprob: -12.631422996520996
    10. '+' → logprob: -13.381422996520996

Token 18: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.17976802587509155
    2. ' char' → logprob: -1.8047680854797363
    3. '<char' → logprob: -11.304767608642578
    4. 'c' → logprob: -12.304767608642578
    5. ' ' → logprob: -13.179767608642578
    6. '_char' → logprob: -13.304767608642578
    7. '	char' → logprob: -14.054767608642578
    8. '(char' → logprob: -14.554767608642578
    9. '```' → logprob: -14.679767608642578
    10. 'text' → logprob: -15.429767608642578

Token 19: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.010413313284516335
    2. '<=' → logprob: -4.63541316986084
    3. ' and' → logprob: -8.26041316986084
    4. '<|end|>' → logprob: -9.01041316986084
    5. ' ' → logprob: -9.26041316986084
    6. ' <' → logprob: -9.76041316986084
    7. '<' → logprob: -10.13541316986084
    8. 'and' → logprob: -11.38541316986084
    9. '<|end|>' → logprob: -11.38541316986084
    10. '    ' → logprob: -11.51041316986084

Token 20: ' '' (ID: 461)
  Prédit: ''z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''z' → logprob: -0.0004212594940327108
    2. ''' → logprob: -8.500421524047852
    3. ''y' → logprob: -9.625421524047852
    4. ' '' → logprob: -10.375421524047852
    5. ''t' → logprob: -10.750421524047852
    6. '"' → logprob: -10.875421524047852
    7. ''f' → logprob: -10.875421524047852
    8. '‘z' → logprob: -11.500421524047852
    9. ''s' → logprob: -11.750421524047852
    10. ''o' → logprob: -11.875421524047852

Token 21: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.38761207461357117
    2. ''z' → logprob: -1.1376121044158936
    3. 'm' → logprob: -7.3876118659973145
    4. ''' → logprob: -9.762612342834473
    5. ''m' → logprob: -10.262612342834473
    6. ''y' → logprob: -11.262612342834473
    7. '‘z' → logprob: -12.262612342834473
    8. ''s' → logprob: -12.762612342834473
    9. 'y' → logprob: -13.012612342834473
    10. '"' → logprob: -13.012612342834473

Token 22: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '':' → logprob: -0.5928019285202026
    2. ':' → logprob: -0.8428019285202026
    3. ''' → logprob: -4.342802047729492
    4. ' :' → logprob: -6.592802047729492
    5. ' ':' → logprob: -6.842802047729492
    6. '):' → logprob: -7.717802047729492
    7. ' or' → logprob: -8.092802047729492
    8. '':'' → logprob: -8.717802047729492
    9. ''or' → logprob: -9.467802047729492
    10. ' and' → logprob: -9.842802047729492

Token 23: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2583713233470917
    2. ' ' → logprob: -2.133371353149414
    3. 'result' → logprob: -3.008371353149414
    4. '    ' → logprob: -3.508371353149414
    5. '   ' → logprob: -4.258371353149414
    6. ' result' → logprob: -4.633371353149414
    7. '     ' → logprob: -6.883371353149414
    8. '        
' → logprob: -7.008371353149414
    9. '<|end|>' → logprob: -7.258371353149414
    10. '      ' → logprob: -7.383371353149414

Token 24: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.4788866937160492
    2. ' result' → logprob: -0.9788867235183716
    3. '       ' → logprob: -5.478886604309082
    4. '   ' → logprob: -8.103886604309082
    5. '    ' → logprob: -9.478886604309082
    6. ' ```' → logprob: -9.603886604309082
    7. '```' → logprob: -9.728886604309082
    8. '           ' → logprob: -10.978886604309082
    9. '	result' → logprob: -10.978886604309082
    10. '[result' → logprob: -11.228886604309082

Token 25: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.012300664559006691
    2. '+=' → logprob: -4.512300491333008
    3. '+' → logprob: -7.137300491333008
    4. '.append' → logprob: -8.387300491333008
    5. ' +' → logprob: -8.637300491333008
    6. '+='' → logprob: -10.137300491333008
    7. '+="' → logprob: -12.012300491333008
    8. ' =' → logprob: -13.387300491333008
    9. '.' → logprob: -13.762300491333008
    10. ' .=' → logprob: -14.012300491333008

Token 26: ' chr' (ID: 42767)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.16826359927654266
    2. 'chr' → logprob: -2.1682636737823486
    3. ' char' → logprob: -3.4182636737823486
    4. ' chr' → logprob: -4.9182634353637695
    5. ''' → logprob: -9.16826343536377
    6. '(char' → logprob: -9.29326343536377
    7. '(chr' → logprob: -10.04326343536377
    8. '"' → logprob: -10.16826343536377
    9. '<char' → logprob: -10.54326343536377
    10. ' ' → logprob: -11.04326343536377

Token 27: '(ord' (ID: 199585)
  Prédit: '(ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ord' → logprob: -0.004643722902983427
    2. '(' → logprob: -5.37964391708374
    3. 'ord' → logprob: -11.129643440246582
    4. '((' → logprob: -12.504643440246582
    5. '(
' → logprob: -13.129643440246582
    6. '(org' → logprob: -14.129643440246582
    7. '(o' → logprob: -14.629643440246582
    8. '(char' → logprob: -15.004643440246582
    9. '32' → logprob: -15.254643440246582
    10. '()' → logprob: -15.754643440246582

Token 28: '(char' (ID: 14823)
  Prédit: '(char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(char' → logprob: -0.0036142051685601473
    2. '(' → logprob: -5.62861442565918
    3. ' (' → logprob: -12.62861442565918
    4. 'char' → logprob: -12.87861442565918
    5. '('' → logprob: -13.12861442565918
    6. '(ord' → logprob: -13.12861442565918
    7. '("("' → logprob: -13.75361442565918
    8. '(chars' → logprob: -14.00361442565918
    9. '(chr' → logprob: -14.12861442565918
    10. '<char' → logprob: -14.75361442565918

Token 29: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3499354124069214
    2. ')' → logprob: -1.3499354124069214
    3. ' +' → logprob: -3.599935531616211
    4. '()' → logprob: -5.599935531616211
    5. ')+' → logprob: -5.724935531616211
    6. '()+' → logprob: -7.099935531616211
    7. ' ' → logprob: -7.974935531616211
    8. '(' → logprob: -8.349935531616211
    9. '   ' → logprob: -8.849935531616211
    10. ' )' → logprob: -9.849935531616211

Token 30: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06999634951353073
    2. ' +' → logprob: -2.6949963569641113
    3. ')' → logprob: -10.569995880126953
    4. '-' → logprob: -10.819995880126953
    5. ' ' → logprob: -12.194995880126953
    6. ' -' → logprob: -12.694995880126953
    7. ')+' → logprob: -12.944995880126953
    8. '+)' → logprob: -13.819995880126953
    9. '()+' → logprob: -14.319995880126953
    10. '   ' → logprob: -14.569995880126953

Token 31: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7607810497283936
    2. '32' → logprob: -0.7607810497283936
    3. ' ' → logprob: -2.7607810497283936
    4. '3' → logprob: -7.635781288146973
    5. '13' → logprob: -7.885781288146973
    6. '26' → logprob: -7.885781288146973
    7. '25' → logprob: -8.510781288146973
    8. '   ' → logprob: -8.635781288146973
    9. '31' → logprob: -8.635781288146973
    10. '23' → logprob: -9.385781288146973

Token 32: '32' (ID: 1398)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13224536180496216
    2. '32' → logprob: -2.1322453022003174
    3. ' ' → logprob: -5.3822455406188965
    4. '3' → logprob: -9.007245063781738
    5. '25' → logprob: -9.007245063781738
    6. '26' → logprob: -9.382245063781738
    7. '   ' → logprob: -9.507245063781738
    8. '31' → logprob: -9.632245063781738
    9. '13' → logprob: -10.132245063781738
    10. '2' → logprob: -10.257245063781738

Token 33: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.629921436891891e-05
    2. ')
' → logprob: -10.87502670288086
    3. '   ' → logprob: -12.50002670288086
    4. ' )' → logprob: -13.37502670288086
    5. '       ' → logprob: -14.12502670288086
    6. '')' → logprob: -14.75002670288086
    7. '))' → logprob: -15.50002670288086
    8. '`)' → logprob: -15.50002670288086
    9. ' ' → logprob: -16.12502670288086
    10. ')`' → logprob: -16.25002670288086

Token 34: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8434914350509644
    2. ' ' → logprob: -2.093491554260254
    3. 'else' → logprob: -2.093491554260254
    4. '<|end|>' → logprob: -2.343491554260254
    5. ' else' → logprob: -2.593491554260254
    6. '```' → logprob: -2.843491554260254
    7. ' 
' → logprob: -3.593491554260254
    8. '\' → logprob: -3.843491554260254
    9. '   ' → logprob: -4.343491554260254
    10. '\r' → logprob: -5.093491554260254

Token 35: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.250851035118103
    2. ' else' → logprob: -1.625851035118103
    3. ' ' → logprob: -4.750851154327393
    4. '   ' → logprob: -5.000851154327393
    5. 'elif' → logprob: -5.125851154327393
    6. 'e' → logprob: -6.500851154327393
    7. '\n' → logprob: -7.500851154327393
    8. '```' → logprob: -7.500851154327393
    9. '	else' → logprob: -7.625851154327393
    10. ' elif' → logprob: -8.250850677490234

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006055758567526937
    2. ' :' → logprob: -7.500605583190918
    3. ':
' → logprob: -10.250605583190918
    4. '       ' → logprob: -11.750605583190918
    5. '   ' → logprob: -12.000605583190918
    6. '<|end|>' → logprob: -13.875605583190918
    7. '    ' → logprob: -14.375605583190918
    8. ':return' → logprob: -15.000605583190918
    9. ' :
' → logprob: -15.125605583190918
    10. '<|end|>' → logprob: -16.1256046295166

Token 37: '       ' (ID: 309)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1762770712375641
    2. ' result' → logprob: -1.9262770414352417
    3. '       ' → logprob: -4.176277160644531
    4. '   ' → logprob: -7.801277160644531
    5. '    ' → logprob: -9.176277160644531
    6. '	result' → logprob: -10.926277160644531
    7. '        ' → logprob: -11.926277160644531
    8. ' ' → logprob: -11.926277160644531
    9. '        
' → logprob: -12.051277160644531
    10. '```' → logprob: -12.426277160644531

Token 38: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.08899280428886414
    2. ' result' → logprob: -2.4639928340911865
    3. '       ' → logprob: -11.088993072509766
    4. '   ' → logprob: -11.213993072509766
    5. 'r' → logprob: -11.838993072509766
    6. '	result' → logprob: -12.338993072509766
    7. '    ' → logprob: -12.338993072509766
    8. ' ' → logprob: -12.463993072509766
    9. 'res' → logprob: -14.088993072509766
    10. '        ' → logprob: -14.838993072509766

Token 39: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08722594380378723
    2. '+=' → logprob: -2.712225914001465
    3. ' +=' → logprob: -4.087225914001465
    4. ' +' → logprob: -8.087225914001465
    5. '+='' → logprob: -10.462225914001465
    6. '+="' → logprob: -11.837225914001465
    7. '_' → logprob: -12.087225914001465
    8. '=' → logprob: -12.837225914001465
    9. ']+=' → logprob: -13.837225914001465
    10. '+++' → logprob: -14.337225914001465

Token 40: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.3132685124874115
    2. ' char' → logprob: -1.3132685422897339
    3. '<char' → logprob: -12.688268661499023
    4. '(char' → logprob: -13.438268661499023
    5. ' ' → logprob: -13.688268661499023
    6. ',char' → logprob: -14.813268661499023
    7. '	char' → logprob: -15.063268661499023
    8. '.char' → logprob: -16.063268661499023
    9. '_char' → logprob: -16.688268661499023
    10. ' ' → logprob: -16.688268661499023

Token 41: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011151928454637527
    2. '(result' → logprob: -4.5111517906188965
    3. '("("' → logprob: -9.511152267456055
    4. '('' → logprob: -10.636152267456055
    5. '(text' → logprob: -13.511152267456055
    6. '(
' → logprob: -14.511152267456055
    7. '()' → logprob: -14.511152267456055
    8. '(re' → logprob: -14.761152267456055
    9. '(`' → logprob: -15.011152267456055
    10. '(res' → logprob: -15.011152267456055

Token 44: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. '))' → logprob: -13.750001907348633
    3. ' )' → logprob: -15.000001907348633
    4. ')`' → logprob: -16.875001907348633
    5. '`)' → logprob: -17.250001907348633
    6. '')' → logprob: -17.500001907348633
    7. ')
' → logprob: -18.875001907348633
    8. ')))' → logprob: -19.125001907348633
    9. '")' → logprob: -19.125001907348633
    10. '(' → logprob: -19.625001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 42
Tokens correctement prédits (1ère position, stricte): 13
Tokens correctement prédits (1ère position, avec adaptation): 17
Tokens correctement prédits (top 10): 34
Précision stricte (1ère position): 30.95%
Précision adaptée (1ère position): 40.48%
Précision (top 10): 80.95%
================================================================================
