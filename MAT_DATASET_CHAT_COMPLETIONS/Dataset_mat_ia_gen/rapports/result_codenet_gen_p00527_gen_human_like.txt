================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:15:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
M, N = map(int, input().split())
S = input()
T = input()

# Prétraitement : on ne peut enchaîner que des wagons alternant entre 'I' et 'O'
# et la première et dernière lettre doivent être 'I'.
# Le train est formé en choisissant un ordre intercalé à partir des deux dépôts.

INF = -10**9

# dp[i][j][k] = longueur max de train possible en ayant pris i wagons de S, j wagons de T,
# avec k = 0 si le dernier wagon pris vient de S, 1 si du T, 2 si on n'a pas encore commencé à prendre
dp = [[[INF]*(3) for _ in range(N+1)] for __ in range(M+1)]

# On peut commencer un train uniquement si la première voiture est 'I', et on commence à partir
# de la voiture 0 de S ou de T
for i in range(M):
    if S[i] == 'I':
        dp[i+1][0][0] = 1
    else:
        break
for j in range(N):
    if T[j] == 'I':
        dp[0][j+1][1] = 1
    else:
        break

# Fonction pour savoir si on peut enchaîner deux wagons (c1, c2)
def can_connect(c1, c2):
    return c1 != c2

for i in range(M+1):
    for j in range(N+1):
        for last in range(3):
            if dp[i][j][last] < 0:
                continue
            length = dp[i][j][last]
            # On peut essayer de prendre un nouveau wagon de S si possible
            if i < M:
                c = S[i]
                if last == 2:
                    # pas encore commencé, on l'a déjà géré, on ne doit pas arriver ici
                    pass
                elif last == 0:
                    # dernier wagon vient de S, on doit alterner donc c doit être différent de S[i-1]
                    prev = S[i-1]
                    if can_connect(prev, c):
                        dp[i+1][j][0] = max(dp[i+1][j][0], length+1)
                elif last == 1:
                    # dernier wagon vient de T, on doit alterner avec T[j-1]
                    if j > 0:
                        prev = T[j-1]
                        if can_connect(prev, c):
                            dp[i+1][j][0] = max(dp[i+1][j][0], length+1)
                    else:
                        # si j==0, alors la train ne vient que de S for now, donc alterner avec aucune est ok? Non, il faut qu'il y ait un wagon
                        # Donc on ne peut pas prendre S tout de suite dans ce cas
                        pass

            # On peut essayer de prendre un nouveau wagon de T si possible
            if j < N:
                c = T[j]
                if last == 2:
                    # idem pas encore commencé
                    pass
                elif last == 1:
                    # dernier wagon de T, on doit alterner avec précédent de T
                    prev = T[j-1]
                    if can_connect(prev, c):
                        dp[i][j+1][1] = max(dp[i][j+1][1], length+1)
                elif last == 0:
                    # dernier wagon de S, on doit alterner avec S[i-1]
                    if i > 0:
                        prev = S[i-1]
                        if can_connect(prev, c):
                            dp[i][j+1][1] = max(dp[i][j+1][1], length+1)
                    else:
                        # i==0, donc on n'a rien en S donc pas de problème mais on doit alterner...
                        pass

# Pour la partie mixte (commencer à prendre des wagons après avoir déposé certains),
# on peut aussi considérer commencer à prendre un nouveau wagon directement ici si last == 2

# En réalité, on doit pouvoir commencer à n'importe quel point dans S et T:

for i in range(M+1):
    for j in range(N+1):
        if i < M and S[i] == 'I': # commencer ici
            dp[i+1][j][0] = max(dp[i+1][j][0], 1)
        if j < N and T[j] == 'I':
            dp[i][j+1][1] = max(dp[i][j+1][1], 1)

# On applique une boucle pour tenter de prolonger de manière fiable :

# Nous réitérons plusieurs fois pour propager les améliorations (DP avec alternance)
for _ in range(max(M,N)):
    updated = False
    for i in range(M+1):
        for j in range(N+1):
            for last in range(2):
                if dp[i][j][last] < 0:
                    continue
                length = dp[i][j][last]
                # Essayer d'ajouter un wagon à partir de S
                if i < M:
                    c = S[i]
                    if last == 0:
                        prev = S[i-1]
                        if can_connect(prev, c):
                            if dp[i+1][j][0] < length + 1:
                                dp[i+1][j][0] = length + 1
                                updated = True
                    elif last == 1:
                        if j > 0:
                            prev = T[j-1]
                            if can_connect(prev, c):
                                if dp[i+1][j][0] < length + 1:
                                    dp[i+1][j][0] = length + 1
                                    updated = True
                    else:
                        if c == 'I':
                            if dp[i+1][j][0] < 1:
                                dp[i+1][j][0] = 1
                                updated = True
                # Essayer d'ajouter un wagon à partir de T
                if j < N:
                    c = T[j]
                    if last == 1:
                        prev = T[j-1]
                        if can_connect(prev, c):
                            if dp[i][j+1][1] < length + 1:
                                dp[i][j+1][1] = length + 1
                                updated = True
                    elif last == 0:
                        if i > 0:
                            prev = S[i-1]
                            if can_connect(prev, c):
                                if dp[i][j+1][1] < length + 1:
                                    dp[i][j+1][1] = length + 1
                                    updated = True
                    else:
                        if c == 'I':
                            if dp[i][j+1][1] < 1:
                                dp[i][j+1][1] = 1
                                updated = True
    if not updated:
        break

# On doit s'assurer que le train finis par un wagon 'I'
# donc on ne compte que dp[i][j][last] où la dernière wagon est 'I'

ans = 0
for i in range(M+1):
    for j in range(N+1):
        for last in range(2):
            length = dp[i][j][last]
            if length <= 0:
                continue
            # dernier wagon est dans S si last==0, T si last==1
            if last == 0:
                if i > 0 and S[i-1] == 'I':
                    if length > ans:
                        ans = length
            else:
                if j > 0 and T[j-1] == 'I':
                    if length > ans:
                        ans = length

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'M' (ID: 44)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' N' (ID: 478)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23460286855697632
    2. '=' → logprob: -1.734602928161621
    3. ' =' → logprob: -4.734602928161621
    4. '[' → logprob: -5.109602928161621
    5. '*' → logprob: -5.234602928161621
    6. ')' → logprob: -5.984602928161621
    7. '```' → logprob: -5.984602928161621
    8. '.' → logprob: -6.109602928161621
    9. ';' → logprob: -6.609602928161621
    10. '(' → logprob: -7.109602928161621

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.058784861117601395
    2. ' map' → logprob: -3.1837849617004395
    3. '10' → logprob: -4.4337849617004395
    4. 'map' → logprob: -6.1837849617004395
    5. ' input' → logprob: -7.9337849617004395
    6. '0' → logprob: -8.058784484863281
    7. '20' → logprob: -8.558784484863281
    8. '32' → logprob: -8.808784484863281
    9. 'input' → logprob: -9.308784484863281
    10. ' (' → logprob: -9.933784484863281

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06858573853969574
    2. '(lambda' → logprob: -3.5685856342315674
    3. '(int' → logprob: -3.6935856342315674
    4. '(str' → logprob: -4.8185858726501465
    5. '<|end|>' → logprob: -6.0685858726501465
    6. '```' → logprob: -6.8185858726501465
    7. ')' → logprob: -8.318585395812988
    8. '(len' → logprob: -8.693585395812988
    9. '(user' → logprob: -8.693585395812988
    10. '()' → logprob: -9.193585395812988

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08718607574701309
    2. ')' → logprob: -3.087186098098755
    3. 'input' → logprob: -3.337186098098755
    4. ' input' → logprob: -7.462185859680176
    5. ',input' → logprob: -7.712185859680176
    6. ',' → logprob: -7.962185859680176
    7. '(' → logprob: -7.962185859680176
    8. '<input' → logprob: -8.462185859680176
    9. '```' → logprob: -8.712185859680176
    10. '=input' → logprob: -9.212185859680176

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12696495652198792
    2. ' input' → logprob: -2.126965045928955
    3. ')' → logprob: -10.626964569091797
    4. '(input' → logprob: -11.501964569091797
    5. ',input' → logprob: -13.376964569091797
    6. ' )' → logprob: -15.001964569091797
    7. '=input' → logprob: -15.501964569091797
    8. '<input' → logprob: -15.751964569091797
    9. '```' → logprob: -16.251964569091797
    10. '[input' → logprob: -16.876964569091797

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7504867315292358
    2. '())' → logprob: -1.3754867315292358
    3. '()' → logprob: -1.8754867315292358
    4. '('' → logprob: -2.6254868507385254
    5. '(""))' → logprob: -4.500486850738525
    6. '(()' → logprob: -5.125486850738525
    7. '());' → logprob: -5.125486850738525
    8. ')' → logprob: -5.500486850738525
    9. '().' → logprob: -6.000486850738525
    10. '("("' → logprob: -6.250486850738525

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0006371428607963026
    2. 'strip' → logprob: -7.375637054443359
    3. 'rstrip' → logprob: -12.37563705444336
    4. ' split' → logprob: -12.50063705444336
    5. ')' → logprob: -13.62563705444336
    6. '(split' → logprob: -14.25063705444336
    7. 'read' → logprob: -14.25063705444336
    8. 'spl' → logprob: -16.25063705444336
    9. 'startswith' → logprob: -17.12563705444336
    10. 'replace' → logprob: -17.37563705444336

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7961803078651428
    2. '())' → logprob: -1.046180248260498
    3. '))' → logprob: -1.671180248260498
    4. '()))' → logprob: -4.796180248260498
    5. '()' → logprob: -6.796180248260498
    6. '`)' → logprob: -8.921180725097656
    7. '(' → logprob: -11.046180725097656
    8. '```' → logprob: -11.046180725097656
    9. ')))' → logprob: -11.296180725097656
    10. '('' → logprob: -11.671180725097656

Token 11: 'S' (ID: 50)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.6348636150360107
    2. '\n' → logprob: -1.6348636150360107
    3. 'x' → logprob: -2.1348636150360107
    4. '#' → logprob: -2.5098636150360107
    5. 'a' → logprob: -2.5098636150360107
    6. ',' → logprob: -3.1348636150360107
    7. '```' → logprob: -3.2598636150360107
    8. '`' → logprob: -3.3848636150360107
    9. '[' → logprob: -3.5098636150360107
    10. '\' → logprob: -3.6348636150360107

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2977510094642639
    2. '.' → logprob: -1.5477509498596191
    3. '=' → logprob: -4.047750949859619
    4. ' =' → logprob: -4.297750949859619
    5. '[i' → logprob: -5.297750949859619
    6. '[:]' → logprob: -6.047750949859619
    7. '[]' → logprob: -7.172750949859619
    8. '[input' → logprob: -7.297750949859619
    9. '_' → logprob: -7.422750949859619
    10. ')' → logprob: -7.672750949859619

Token 13: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.22923582792282104
    2. ' input' → logprob: -1.6042358875274658
    3. '""' → logprob: -6.479235649108887
    4. '[]' → logprob: -7.729235649108887
    5. '[input' → logprob: -7.729235649108887
    6. '"' → logprob: -7.979235649108887
    7. ' []' → logprob: -8.604235649108887
    8. '''' → logprob: -8.854235649108887
    9. 'list' → logprob: -9.104235649108887
    10. ' ' → logprob: -9.229235649108887

Token 14: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18811920285224915
    2. '()' → logprob: -1.8131191730499268
    3. ')' → logprob: -5.938119411468506
    4. ''' → logprob: -6.438119411468506
    5. '('' → logprob: -6.938119411468506
    6. '"' → logprob: -7.063119411468506
    7. '.' → logprob: -7.188119411468506
    8. '```' → logprob: -8.063118934631348
    9. ' ' → logprob: -8.813118934631348
    10. '("("' → logprob: -8.938118934631348

Token 15: 'T' (ID: 51)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.77901691198349
    2. 'result' → logprob: -1.9040169715881348
    3. 'count' → logprob: -2.0290169715881348
    4. 'i' → logprob: -2.6540169715881348
    5. 'if' → logprob: -2.7790169715881348
    6. '_' → logprob: -3.0290169715881348
    7. 'c' → logprob: -3.7790169715881348
    8. 'd' → logprob: -4.529016971588135
    9. 's' → logprob: -5.154016971588135
    10. 'r' → logprob: -5.154016971588135

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.037450291216373444
    2. '=' → logprob: -3.6624503135681152
    3. '[' → logprob: -5.287450313568115
    4. ' ' → logprob: -5.537450313568115
    5. '.' → logprob: -7.037450313568115
    6. '_' → logprob: -7.037450313568115
    7. '  ' → logprob: -9.037449836730957
    8. '[]' → logprob: -10.287449836730957
    9. 's' → logprob: -10.412449836730957
    10. ',' → logprob: -10.537449836730957

Token 17: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.15449713170528412
    2. 'input' → logprob: -2.0294971466064453
    3. ' ' → logprob: -5.154497146606445
    4. ' S' → logprob: -5.779497146606445
    5. ' []' → logprob: -7.029497146606445
    6. ' "' → logprob: -7.904497146606445
    7. ' list' → logprob: -8.029497146606445
    8. '"' → logprob: -8.154497146606445
    9. '[input' → logprob: -8.154497146606445
    10. 'S' → logprob: -9.029497146606445

Token 18: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38810473680496216
    2. '()' → logprob: -1.1381046772003174
    3. '.' → logprob: -7.0131049156188965
    4. ')' → logprob: -9.388104438781738
    5. '(
' → logprob: -9.763104438781738
    6. '```' → logprob: -9.763104438781738
    7. '().' → logprob: -10.138104438781738
    8. '(

' → logprob: -11.263104438781738
    9. '()`' → logprob: -11.763104438781738
    10. '`()' → logprob: -11.763104438781738

Token 19: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5612272620201111
    2. 'dp' → logprob: -1.3112273216247559
    3. 'count' → logprob: -2.936227321624756
    4. 'result' → logprob: -3.436227321624756
    5. 'if' → logprob: -3.561227321624756
    6. 'i' → logprob: -4.186227321624756
    7. 'd' → logprob: -4.436227321624756
    8. 'ans' → logprob: -5.686227321624756
    9. 'c' → logprob: -5.936227321624756
    10. 'diff' → logprob: -6.436227321624756

Token 20: ' Pré' (ID: 86400)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12660570442676544
    2. ' for' → logprob: -3.001605749130249
    3. 'dp' → logprob: -3.126605749130249
    4. 'count' → logprob: -4.75160551071167
    5. ' dp' → logprob: -5.50160551071167
    6. 'i' → logprob: -5.75160551071167
    7. 'result' → logprob: -6.25160551071167
    8. 'if' → logprob: -6.25160551071167
    9. 'f' → logprob: -6.62660551071167
    10. 'd' → logprob: -7.25160551071167

Token 21: 'trait' (ID: 18216)
  Prédit: 'paration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paration' → logprob: -0.4737853407859802
    2. 'd' → logprob: -1.348785400390625
    3. '#' → logprob: -2.973785400390625
    4. '-' → logprob: -4.723785400390625
    5. '```' → logprob: -4.973785400390625
    6. 'processing' → logprob: -5.098785400390625
    7. 'pa' → logprob: -5.348785400390625
    8. 'trait' → logprob: -5.473785400390625
    9. '``' → logprob: -5.473785400390625
    10. 'dict' → logprob: -5.973785400390625

Token 22: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.0004164913552813232
    2. 'e' → logprob: -8.12541675567627
    3. 'ements' → logprob: -9.87541675567627
    4. 'em' → logprob: -10.37541675567627
    5. 'er' → logprob: -11.12541675567627
    6. '#' → logprob: -11.75041675567627
    7. '```' → logprob: -11.87541675567627
    8. 'ment' → logprob: -13.50041675567627
    9. 'eme' → logprob: -13.50041675567627
    10. 'emen' → logprob: -13.75041675567627

Token 23: ' :' (ID: 712)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.285214900970459
    2. 's' → logprob: -2.160214900970459
    3. ' dp' → logprob: -2.660214900970459
    4. 'd' → logprob: -4.410214900970459
    5. 'count' → logprob: -4.785214900970459
    6. 'freq' → logprob: -5.660214900970459
    7. ' freq' → logprob: -5.660214900970459
    8. 'a' → logprob: -5.660214900970459
    9. '_' → logprob: -6.285214900970459
    10. ' count' → logprob: -6.410214900970459

Token 24: ' on' (ID: 402)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.727275013923645
    2. 'dp' → logprob: -1.102275013923645
    3. ' prefix' → logprob: -3.2272748947143555
    4. ' freq' → logprob: -3.8522748947143555
    5. ' next' → logprob: -4.2272748947143555
    6. ' l' → logprob: -4.4772748947143555
    7. ' positions' → logprob: -4.6022748947143555
    8. ' p' → logprob: -4.8522748947143555
    9. 'positions' → logprob: -5.1022748947143555
    10. ' d' → logprob: -5.1022748947143555

Token 25: ' ne' (ID: 453)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5394862294197083
    2. ' calc' → logprob: -2.4144861698150635
    3. 's' → logprob: -2.9144861698150635
    4. ' s' → logprob: -3.4144861698150635
    5. ' compte' → logprob: -3.6644861698150635
    6. 'len' → logprob: -3.9144861698150635
    7. ' va' → logprob: -4.164486408233643
    8. ' crée' → logprob: -4.164486408233643
    9. 'r' → logprob: -4.539486408233643
    10. ' a' → logprob: -4.664486408233643

Token 26: ' peut' (ID: 9216)
  Prédit: ' considère'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' considère' → logprob: -0.5516572594642639
    2. ' ' → logprob: -2.301657199859619
    3. ' peut' → logprob: -2.676657199859619
    4. 'g' → logprob: -3.051657199859619
    5. 's' → logprob: -3.176657199859619
    6. ' s' → logprob: -3.301657199859619
    7. 'l' → logprob: -3.926657199859619
    8. 'consider' → logprob: -4.551657199859619
    9. 'p' → logprob: -4.801657199859619
    10. ' consider' → logprob: -4.801657199859619

Token 27: ' en' (ID: 469)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.11458073556423187
    2. 'pas' → logprob: -3.2395806312561035
    3. ' utiliser' → logprob: -3.8645806312561035
    4. ' plus' → logprob: -5.2395806312561035
    5. ' considérer' → logprob: -5.2395806312561035
    6. ' compter' → logprob: -5.4895806312561035
    7. ' remplacer' → logprob: -5.4895806312561035
    8. ' continuer' → logprob: -5.7395806312561035
    9. 'plus' → logprob: -6.2395806312561035
    10. ' traiter' → logprob: -6.3645806312561035

Token 28: 'cha' (ID: 3836)
  Prédit: 'lever'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lever' → logprob: -1.6455625295639038
    2. 'cha' → logprob: -1.7705625295639038
    3. 'pas' → logprob: -2.6455626487731934
    4. 'changer' → logprob: -2.7705626487731934
    5. 'rem' → logprob: -3.0205626487731934
    6. 'aj' → logprob: -3.2705626487731934
    7. 'cho' → logprob: -3.2705626487731934
    8. 'tr' → logprob: -3.5205626487731934
    9. 'faire' → logprob: -3.7705626487731934
    10. 'placer' → logprob: -3.8955626487731934

Token 29: 'îner' (ID: 85414)
  Prédit: 'îner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îner' → logprob: -0.01568332128226757
    2. 'î' → logprob: -4.890683174133301
    3. 'iner' → logprob: -4.890683174133301
    4. '\' → logprob: -8.8906831741333
    5. 'ı' → logprob: -8.8906831741333
    6. 'ner' → logprob: -10.2656831741333
    7. 'i' → logprob: -10.5156831741333
    8. 'r' → logprob: -11.0156831741333
    9. 'ì' → logprob: -11.1406831741333
    10. 'í' → logprob: -11.3906831741333

Token 30: ' que' (ID: 661)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.7854234576225281
    2. ' que' → logprob: -1.5354235172271729
    3. 'de' → logprob: -1.6604235172271729
    4. ' ' → logprob: -2.535423517227173
    5. 'que' → logprob: -4.660423278808594
    6. 'les' → logprob: -5.160423278808594
    7. '  ' → logprob: -5.285423278808594
    8. ' les' → logprob: -5.535423278808594
    9. '_' → logprob: -5.660423278808594
    10. ' plus' → logprob: -5.785423278808594

Token 31: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.3236238360404968
    2. ' deux' → logprob: -2.6986238956451416
    3. ' ' → logprob: -2.9486238956451416
    4. ' les' → logprob: -3.4486238956451416
    5. 'des' → logprob: -3.6986238956451416
    6. ''' → logprob: -3.6986238956451416
    7. 'les' → logprob: -4.0736236572265625
    8. ' '' → logprob: -4.5736236572265625
    9. '  ' → logprob: -4.8236236572265625
    10. 'de' → logprob: -5.0736236572265625

Token 32: ' wag' (ID: 48065)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.4084794521331787
    2. ' caractères' → logprob: -2.0334794521331787
    3. ' ' → logprob: -2.2834794521331787
    4. ' '' → logprob: -2.7834794521331787
    5. '_' → logprob: -3.2834794521331787
    6. 's' → logprob: -3.5334794521331787
    7. ' lettres' → logprob: -3.5334794521331787
    8. ' espaces' → logprob: -3.6584794521331787
    9. '0' → logprob: -3.7834794521331787
    10. ' mots' → logprob: -3.9084794521331787

Token 33: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.24620550870895386
    2. 'ins' → logprob: -1.7462055683135986
    3. 'ages' → logprob: -3.7462055683135986
    4. 'a' → logprob: -5.8712053298950195
    5. '```' → logprob: -6.1212053298950195
    6. 'ags' → logprob: -6.3712053298950195
    7. 'age' → logprob: -6.3712053298950195
    8. 's' → logprob: -6.4962053298950195
    9. 'on' → logprob: -6.4962053298950195
    10. '#' → logprob: -6.6212053298950195

Token 34: ' altern' (ID: 7310)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.33991125226020813
    2. ' du' → logprob: -2.7149112224578857
    3. 's' → logprob: -2.8399112224578857
    4. 'de' → logprob: -2.9649112224578857
    5. ' '' → logprob: -3.5899112224578857
    6. ' of' → logprob: -3.7149112224578857
    7. ' ayant' → logprob: -4.464911460876465
    8. ' ' → logprob: -4.964911460876465
    9. ' qui' → logprob: -5.402411460876465
    10. 'd' → logprob: -5.464911460876465

Token 35: 'ant' (ID: 493)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.32447579503059387
    2. 'ativement' → logprob: -2.3244757652282715
    3. 'és' → logprob: -2.5744757652282715
    4. 'atifs' → logprob: -3.6994757652282715
    5. 'e' → logprob: -3.6994757652282715
    6. 'ant' → logprob: -4.1994757652282715
    7. 's' → logprob: -4.6994757652282715
    8. 'a' → logprob: -4.9494757652282715
    9. 'ants' → logprob: -5.4494757652282715
    10. 'ates' → logprob: -5.9494757652282715

Token 36: ' entre' (ID: 3853)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6406326293945312
    2. '_' → logprob: -1.0156326293945312
    3. 's' → logprob: -3.1406326293945312
    4. 'e' → logprob: -4.515632629394531
    5. ' entre' → logprob: -4.640632629394531
    6. ''' → logprob: -4.890632629394531
    7. 'es' → logprob: -5.015632629394531
    8. ',' → logprob: -5.140632629394531
    9. ' =' → logprob: -5.265632629394531
    10. ' _' → logprob: -5.515632629394531

Token 37: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5190399289131165
    2. ''' → logprob: -1.5190398693084717
    3. ' espaces' → logprob: -2.8940398693084717
    4. ' '' → logprob: -3.3940398693084717
    5. ' types' → logprob: -4.644040107727051
    6. 'e' → logprob: -4.894040107727051
    7. ' a' → logprob: -4.894040107727051
    8. '_' → logprob: -5.144040107727051
    9. ' M' → logprob: -5.269040107727051
    10. 's' → logprob: -5.519040107727051

Token 38: 'I' (ID: 40)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.32181835174560547
    2. ''' → logprob: -2.0718183517456055
    3. 'A' → logprob: -2.9468183517456055
    4. '0' → logprob: -3.1968183517456055
    5. 'B' → logprob: -4.5718183517456055
    6. ' '' → logprob: -4.6968183517456055
    7. ''S' → logprob: -5.0718183517456055
    8. 'M' → logprob: -5.4468183517456055
    9. ' ' → logprob: -5.5718183517456055
    10. 'G' → logprob: -5.8218183517456055

Token 39: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.18260811269283295
    2. ' '' → logprob: -2.057608127593994
    3. 'I' → logprob: -4.682608127593994
    4. 'R' → logprob: -5.057608127593994
    5. 'N' → logprob: -5.807608127593994
    6. 'n' → logprob: -5.932608127593994
    7. 'C' → logprob: -6.057608127593994
    8. ''I' → logprob: -6.557608127593994
    9. '/'' → logprob: -6.682608127593994
    10. 'E' → logprob: -7.057608127593994

Token 40: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5693193674087524
    2. ' et' → logprob: -1.9443193674087524
    3. ' ' → logprob: -2.569319248199463
    4. '_' → logprob: -3.069319248199463
    5. ''' → logprob: -3.194319248199463
    6. ' and' → logprob: -3.819319248199463
    7. 's' → logprob: -4.069319248199463
    8. 'n' → logprob: -4.069319248199463
    9. 'f' → logprob: -4.319319248199463
    10. '-' → logprob: -4.569319248199463

Token 41: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03318453207612038
    2. ' ' → logprob: -5.03318452835083
    3. ''O' → logprob: -5.15818452835083
    4. 'O' → logprob: -5.78318452835083
    5. ''S' → logprob: -5.90818452835083
    6. ''E' → logprob: -5.90818452835083
    7. ' '' → logprob: -6.40818452835083
    8. ''L' → logprob: -6.53318452835083
    9. ''M' → logprob: -6.65818452835083
    10. 'space' → logprob: -6.90818452835083

Token 42: 'O' (ID: 46)
  Prédit: 'O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.6077429056167603
    2. 'C' → logprob: -2.4827427864074707
    3. 'S' → logprob: -2.8577427864074707
    4. 'T' → logprob: -2.8577427864074707
    5. 'M' → logprob: -2.9827427864074707
    6. 'N' → logprob: -3.1077427864074707
    7. 'R' → logprob: -3.8577427864074707
    8. 'G' → logprob: -3.9827427864074707
    9. 'I' → logprob: -4.232742786407471
    10. 'D' → logprob: -4.232742786407471

Token 43: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0043904781341553
    2. 's' → logprob: -1.7543904781341553
    3. ',' → logprob: -1.8793904781341553
    4. ''' → logprob: -1.8793904781341553
    5. '')' → logprob: -2.6293904781341553
    6. '.' → logprob: -4.254390716552734
    7. ':' → logprob: -4.504390716552734
    8. '_' → logprob: -4.629390716552734
    9. '
' → logprob: -4.879390716552734
    10. ''s' → logprob: -4.879390716552734

Token 44: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9434774518013
    2. 'possible' → logprob: -2.1934773921966553
    3. 'for' → logprob: -2.5684773921966553
    4. 'valid' → logprob: -2.9434773921966553
    5. 'dp' → logprob: -3.0684773921966553
    6. '```' → logprob: -3.0684773921966553
    7. '\n' → logprob: -3.1934773921966553
    8. 'result' → logprob: -3.1934773921966553
    9. 's' → logprob: -3.6934773921966553
    10. 'prev' → logprob: -3.8184773921966553

Token 45: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1356979608535767
    2. 'valid' → logprob: -1.8856979608535767
    3. 'last' → logprob: -2.135697841644287
    4. 'prev' → logprob: -2.510697841644287
    5. 'dp' → logprob: -2.760697841644287
    6. ' valid' → logprob: -3.010697841644287
    7. ' for' → logprob: -3.010697841644287
    8. ' last' → logprob: -3.510697841644287
    9. 'allowed' → logprob: -3.635697841644287
    10. 'possible' → logprob: -3.885697841644287

Token 46: ' la' (ID: 557)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.4411296844482422
    2. ' les' → logprob: -1.6911296844482422
    3. 'les' → logprob: -2.066129684448242
    4. ' il' → logprob: -2.941129684448242
    5. 'il' → logprob: -3.066129684448242
    6. 'on' → logprob: -3.191129684448242
    7. ''' → logprob: -3.816129684448242
    8. 's' → logprob: -3.816129684448242
    9. 'len' → logprob: -3.941129684448242
    10. ' S' → logprob: -4.191129684448242

Token 47: ' première' (ID: 23423)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2142382860183716
    2. ' longueur' → logprob: -1.5892382860183716
    3. ' première' → logprob: -2.589238166809082
    4. 'r' → logprob: -3.339238166809082
    5. 'n' → logprob: -3.339238166809082
    6. ' même' → logprob: -4.089238166809082
    7. ' plus' → logprob: -4.339238166809082
    8. ' ' → logprob: -4.401738166809082
    9. 'u' → logprob: -4.589238166809082
    10. ' '' → logprob: -4.714238166809082

Token 48: ' et' (ID: 859)
  Prédit: ' lettre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lettre' → logprob: -0.3568940758705139
    2. 'car' → logprob: -2.356894016265869
    3. 'lett' → logprob: -3.106894016265869
    4. ' ' → logprob: -3.356894016265869
    5. 'wagon' → logprob: -3.731894016265869
    6. 's' → logprob: -3.856894016265869
    7. 'le' → logprob: -4.856894016265869
    8. ' let' → logprob: -4.981894016265869
    9. ' wag' → logprob: -5.231894016265869
    10. ' wagon' → logprob: -5.356894016265869

Token 49: ' dernière' (ID: 39497)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6691930890083313
    2. ' la' → logprob: -1.1691930294036865
    3. ' dernière' → logprob: -2.1691930294036865
    4. 'der' → logprob: -3.6691930294036865
    5. 'last' → logprob: -4.044193267822266
    6. ' last' → logprob: -4.544193267822266
    7. 'dern' → logprob: -5.669193267822266
    8. 'le' → logprob: -6.794193267822266
    9. '#' → logprob: -6.794193267822266
    10. ' dernier' → logprob: -7.669193267822266

Token 50: ' lettre' (ID: 68013)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2922546863555908
    2. '_' → logprob: -2.292254686355591
    3. 's' → logprob: -2.417254686355591
    4. ' lettre' → logprob: -4.042254447937012
    5. ' caract' → logprob: -5.354754447937012
    6. ' s' → logprob: -5.417254447937012
    7. ' I' → logprob: -5.479754447937012
    8. ' =' → logprob: -5.729754447937012
    9. ' S' → logprob: -5.854754447937012
    10. 'car' → logprob: -6.479754447937012

Token 51: ' doivent' (ID: 44722)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10657325387001038
    2. 'S' → logprob: -3.7315733432769775
    3. ' ' → logprob: -4.106573104858398
    4. ' =' → logprob: -4.356573104858398
    5. '=' → logprob: -4.856573104858398
    6. ' de' → logprob: -4.856573104858398
    7. ' S' → logprob: -5.356573104858398
    8. ' sont' → logprob: -5.606573104858398
    9. ' doivent' → logprob: -5.856573104858398
    10. '.' → logprob: -6.231573104858398

Token 52: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.08995047956705093
    2. 'être' → logprob: -3.2149505615234375
    3. ''être' → logprob: -3.9649505615234375
    4. ' be' → logprob: -4.3399505615234375
    5. ' etre' → logprob: -5.8399505615234375
    6. ''' → logprob: -6.2149505615234375
    7. 's' → logprob: -6.4649505615234375
    8. '’être' → logprob: -6.7149505615234375
    9. ' ' → logprob: -6.7149505615234375
    10. '<|end|>' → logprob: -7.3399505615234375

Token 53: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.9025932550430298
    2. ''I' → logprob: -1.6525932550430298
    3. ''O' → logprob: -1.6525932550430298
    4. 'I' → logprob: -2.9025931358337402
    5. ''' → logprob: -3.0275931358337402
    6. ''S' → logprob: -3.0275931358337402
    7. 'S' → logprob: -4.52759313583374
    8. 'O' → logprob: -4.52759313583374
    9. ' I' → logprob: -4.77759313583374
    10. ' S' → logprob: -5.52759313583374

Token 54: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.014412523247301579
    2. 'O' → logprob: -4.2644124031066895
    3. ''I' → logprob: -9.014412879943848
    4. 'S' → logprob: -10.389412879943848
    5. 'M' → logprob: -10.951912879943848
    6. ''O' → logprob: -10.951912879943848
    7. ''' → logprob: -11.201912879943848
    8. ' I' → logprob: -11.389412879943848
    9. '"I' → logprob: -12.826912879943848
    10. 'N' → logprob: -13.014412879943848

Token 55: ''.
' (ID: 49980)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.007544746622443199
    2. '')' → logprob: -5.00754451751709
    3. ''''' → logprob: -8.63254451751709
    4. '\'' → logprob: -9.25754451751709
    5. '#' → logprob: -9.38254451751709
    6. '"' → logprob: -9.38254451751709
    7. ')'' → logprob: -9.63254451751709
    8. 'I' → logprob: -9.75754451751709
    9. '''' → logprob: -10.25754451751709
    10. '’' → logprob: -10.38254451751709

Token 56: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0876351594924927
    2. 'i' → logprob: -1.9626351594924927
    3. 'valid' → logprob: -2.462635040283203
    4. 'possible' → logprob: -2.712635040283203
    5. '
' → logprob: -2.962635040283203
    6. 's' → logprob: -3.087635040283203
    7. 'I' → logprob: -3.212635040283203
    8. 'def' → logprob: -3.587635040283203
    9. 'for' → logprob: -3.962635040283203
    10. 'count' → logprob: -4.212635040283203

Token 57: ' Le' (ID: 2018)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.9634570479393005
    2. 'for' → logprob: -2.3384571075439453
    3. 'if' → logprob: -2.5884571075439453
    4. '#' → logprob: -2.5884571075439453
    5. 'possible' → logprob: -2.5884571075439453
    6. 'i' → logprob: -3.0884571075439453
    7. 'pattern' → logprob: -3.3384571075439453
    8. 'dp' → logprob: -3.4634571075439453
    9. ' valid' → logprob: -3.8384571075439453
    10. 'I' → logprob: -3.9634571075439453

Token 58: ' train' (ID: 8513)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.6633002758026123
    2. '#' → logprob: -2.0383002758026123
    3. 'n' → logprob: -2.2883002758026123
    4. ' code' → logprob: -2.7883002758026123
    5. ' #' → logprob: -2.9133002758026123
    6. ' pattern' → logprob: -3.0383002758026123
    7. 'i' → logprob: -3.7883002758026123
    8. 'len' → logprob: -3.7883002758026123
    9. ' motif' → logprob: -3.9133002758026123
    10. ' n' → logprob: -3.9133002758026123

Token 59: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4742682874202728
    2. ' =' → logprob: -1.7242683172225952
    3. ' doit' → logprob: -2.7242681980133057
    4. 's' → logprob: -2.8492681980133057
    5. 'est' → logprob: -4.349268436431885
    6. 'pe' → logprob: -4.474268436431885
    7. 'ne' → logprob: -4.599268436431885
    8. ' ne' → logprob: -4.724268436431885
    9. 'do' → logprob: -5.224268436431885
    10. ' peut' → logprob: -5.474268436431885

Token 60: ' form' (ID: 1625)
  Prédit: ' composé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' composé' → logprob: -0.8751567602157593
    2. ' constitué' → logprob: -1.2501567602157593
    3. ' form' → logprob: -3.125156879425049
    4. ' "' → logprob: -3.125156879425049
    5. ' toujours' → logprob: -3.250156879425049
    6. ' '' → logprob: -3.250156879425049
    7. '[]' → logprob: -3.625156879425049
    8. ''' → logprob: -3.875156879425049
    9. '"' → logprob: -3.875156879425049
    10. ' []' → logprob: -4.750156879425049

Token 61: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -6.158350151963532e-05
    2. 'ée' → logprob: -10.250061988830566
    3. 'ed' → logprob: -11.375061988830566
    4. 'e' → logprob: -11.625061988830566
    5. 'és' → logprob: -13.000061988830566
    6. '#' → logprob: -14.375061988830566
    7. '[' → logprob: -14.750061988830566
    8. '&eacute' → logprob: -14.750061988830566
    9. '```' → logprob: -15.375061988830566
    10. '"' → logprob: -15.375061988830566

Token 62: ' en' (ID: 469)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6789066791534424
    2. ' de' → logprob: -1.1789066791534424
    3. 'e' → logprob: -2.6789066791534424
    4. ' par' → logprob: -3.1789066791534424
    5. 'd' → logprob: -3.9289066791534424
    6. ' uniquement' → logprob: -4.053906440734863
    7. ' ' → logprob: -4.678906440734863
    8. 'de' → logprob: -4.803906440734863
    9. ' des' → logprob: -5.178906440734863
    10. ' =' → logprob: -5.303906440734863

Token 63: ' chois' (ID: 33475)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -1.3035727739334106
    2. ' respect' → logprob: -2.053572654724121
    3. ' ' → logprob: -2.178572654724121
    4. ' altern' → logprob: -2.553572654724121
    5. ''' → logprob: -2.678572654724121
    6. ' concaten' → logprob: -3.178572654724121
    7. ' I' → logprob: -3.303572654724121
    8. ' une' → logprob: -3.553572654724121
    9. ' "' → logprob: -3.553572654724121
    10. 'I' → logprob: -3.678572654724121

Token 64: 'issant' (ID: 31359)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5783723592758179
    2. 'ss' → logprob: -1.2033723592758179
    3. 'issant' → logprob: -2.0783724784851074
    4. 'e' → logprob: -5.453372478485107
    5. 'ant' → logprob: -5.828372478485107
    6. 'es' → logprob: -5.953372478485107
    7. 't' → logprob: -7.703372478485107
    8. '#' → logprob: -7.703372478485107
    9. '```' → logprob: -7.953372478485107
    10. 'is' → logprob: -8.45337200164795

Token 65: ' un' (ID: 537)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5598169565200806
    2. ' ' → logprob: -1.9348169565200806
    3. '<|end|>' → logprob: -1.9348169565200806
    4. ' uniquement' → logprob: -2.434816837310791
    5. ' un' → logprob: -4.184816837310791
    6. ' les' → logprob: -5.184816837310791
    7. '  ' → logprob: -5.309816837310791
    8. 's' → logprob: -5.559816837310791
    9. ' ' → logprob: -5.684816837310791
    10. 'des' → logprob: -5.809816837310791

Token 66: ' ordre' (ID: 103061)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7426625490188599
    2. ''' → logprob: -1.7426625490188599
    3. 'es' → logprob: -2.8676624298095703
    4. ' espace' → logprob: -3.2426624298095703
    5. ' ' → logprob: -3.6176624298095703
    6. ' '' → logprob: -3.8676624298095703
    7. 'a' → logprob: -3.9926624298095703
    8. 'i' → logprob: -3.9926624298095703
    9. 'I' → logprob: -3.9926624298095703
    10. ' morceau' → logprob: -4.24266242980957

Token 67: ' inter' (ID: 993)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.467221975326538
    2. ' des' → logprob: -2.342221975326538
    3. '```' → logprob: -2.842221975326538
    4. ',' → logprob: -3.217221975326538
    5. ' de' → logprob: -3.342221975326538
    6. 'strict' → logprob: -3.717221975326538
    7. '[]' → logprob: -3.842221975326538
    8. 'de' → logprob: -3.842221975326538
    9. ':' → logprob: -3.842221975326538
    10. 'des' → logprob: -4.092222213745117

Token 68: 'cal' (ID: 5842)
  Prédit: 'cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -1.185671091079712
    2. 'ne' → logprob: -2.310671091079712
    3. 'n' → logprob: -2.435671091079712
    4. 'nal' → logprob: -2.435671091079712
    5. 'val' → logprob: -2.685671091079712
    6. 'le' → logprob: -2.810671091079712
    7. 'ess' → logprob: -2.810671091079712
    8. 'm' → logprob: -2.935671091079712
    9. 'l' → logprob: -3.060671091079712
    10. 'ressant' → logprob: -4.185670852661133

Token 69: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.10882609337568283
    2. 'a' → logprob: -2.983826160430908
    3. 'e' → logprob: -3.108826160430908
    4. 'aire' → logprob: -5.358826160430908
    5. 'ée' → logprob: -7.483826160430908
    6. 'er' → logprob: -8.23382568359375
    7. 'è' → logprob: -8.35882568359375
    8. 'le' → logprob: -8.60882568359375
    9. 'ant' → logprob: -8.79632568359375
    10. '```' → logprob: -8.98382568359375

Token 70: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5013238191604614
    2. '<|end|>' → logprob: -1.6263238191604614
    3. ')' → logprob: -3.376323699951172
    4. '#' → logprob: -3.501323699951172
    5. 's' → logprob: -4.001323699951172
    6. 'I' → logprob: -4.126323699951172
    7. ',' → logprob: -4.251323699951172
    8. ' =' → logprob: -4.251323699951172
    9. '.' → logprob: -4.501323699951172
    10. '  ' → logprob: -5.001323699951172

Token 71: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.29887282848358154
    2. 'part' → logprob: -2.423872947692871
    3. 'p' → logprob: -2.548872947692871
    4. 'u' → logprob: -3.298872947692871
    5. 'l' → logprob: -4.048872947692871
    6. ''' → logprob: -4.923872947692871
    7. 'r' → logprob: -5.923872947692871
    8. 't' → logprob: -6.298872947692871
    9. 'I' → logprob: -6.423872947692871
    10. 'n' → logprob: -6.548872947692871

Token 72: ' des' (ID: 731)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5037829279899597
    2. ' des' → logprob: -1.0037829875946045
    3. 'de' → logprob: -4.378782749176025
    4. ' d' → logprob: -5.003782749176025
    5. ' du' → logprob: -5.503782749176025
    6. 'des' → logprob: -6.503782749176025
    7. ' ' → logprob: -7.128782749176025
    8. '[' → logprob: -7.253782749176025
    9. ' of' → logprob: -7.378782749176025
    10. '<|end|>' → logprob: -7.753782749176025

Token 73: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.5468226075172424
    2. ' indices' → logprob: -2.1718225479125977
    3. ' ' → logprob: -2.5468225479125977
    4. ' caractères' → logprob: -2.9218225479125977
    5. 'de' → logprob: -3.6718225479125977
    6. ' positions' → logprob: -3.7968225479125977
    7. ' S' → logprob: -3.9218225479125977
    8. ' wag' → logprob: -4.546822547912598
    9. ' lettres' → logprob: -4.546822547912598
    10. ' segments' → logprob: -4.796822547912598

Token 74: ' dép' (ID: 34015)
  Prédit: ' trains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trains' → logprob: -0.2841876149177551
    2. ' sequences' → logprob: -2.9091875553131104
    3. ' strings' → logprob: -3.1591875553131104
    4. ' chaînes' → logprob: -3.5341875553131104
    5. 's' → logprob: -3.7841875553131104
    6. 'tr' → logprob: -3.7841875553131104
    7. 'strings' → logprob: -4.1591877937316895
    8. '_' → logprob: -4.2841877937316895
    9. 'train' → logprob: -4.9091877937316895
    10. ' lignes' → logprob: -4.9091877937316895

Token 75: 'ôts' (ID: 121314)
  Prédit: 'ôts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ôts' → logprob: -0.28388711810112
    2. 'ots' → logprob: -1.7838871479034424
    3. 'uts' → logprob: -2.9088871479034424
    4. 'orts' → logprob: -5.658886909484863
    5. 'ôt' → logprob: -5.908886909484863
    6. 'ts' → logprob: -6.033886909484863
    7. 'ot' → logprob: -6.283886909484863
    8. 'ê' → logprob: -6.283886909484863
    9. 'o' → logprob: -6.408886909484863
    10. 'ut' → logprob: -6.783886909484863

Token 76: '.

' (ID: 364)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6347174644470215
    2. '
' → logprob: -2.0097174644470215
    3. 'def' → logprob: -2.6347174644470215
    4. 'i' → logprob: -2.8847174644470215
    5. 'I' → logprob: -3.6347174644470215
    6. 'possible' → logprob: -3.8847174644470215
    7. 's' → logprob: -4.0097174644470215
    8. '\' → logprob: -4.3847174644470215
    9. 'd' → logprob: -4.5097174644470215
    10. 'w' → logprob: -4.6347174644470215

Token 77: 'INF' (ID: 64358)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.43595632910728455
    2. 'i' → logprob: -1.685956358909607
    3. 'I' → logprob: -3.0609562397003174
    4. '
' → logprob: -4.3109564781188965
    5. 'for' → logprob: -4.4359564781188965
    6. ' for' → logprob: -4.5609564781188965
    7. '```' → logprob: -4.5609564781188965
    8. ' ' → logprob: -4.6859564781188965
    9. 'a' → logprob: -5.1859564781188965
    10. 'def' → logprob: -5.3109564781188965

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0031813981477171183
    2. '=' → logprob: -5.753181457519531
    3. ',' → logprob: -13.753181457519531
    4. ' ' → logprob: -13.878181457519531
    5. ')' → logprob: -14.878181457519531
    6. ' =
' → logprob: -15.003181457519531
    7. ' ' → logprob: -15.128181457519531
    8. '_' → logprob: -15.503181457519531
    9. '=int' → logprob: -15.628181457519531
    10. ' =)' → logprob: -16.00318145751953

Token 79: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5561745166778564
    2. '10' → logprob: -1.3061745166778564
    3. ' float' → logprob: -1.9311745166778564
    4. 'float' → logprob: -4.556174278259277
    5. ' int' → logprob: -8.806174278259277
    6. 'int' → logprob: -9.181174278259277
    7. '1' → logprob: -11.931174278259277
    8. ' ' → logprob: -13.056174278259277
    9. '	float' → logprob: -13.181174278259277
    10. '100' → logprob: -13.181174278259277

Token 80: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6462956070899963
    2. '1' → logprob: -0.8962956070899963
    3. 'float' → logprob: -2.7712955474853516
    4. '(' → logprob: -5.646295547485352
    5. 'int' → logprob: -6.396295547485352
    6. '100' → logprob: -9.146295547485352
    7. '(-' → logprob: -11.021295547485352
    8. '(float' → logprob: -11.646295547485352
    9. '999' → logprob: -12.021295547485352
    10. '987' → logprob: -12.021295547485352

Token 81: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.3131992816925049
    2. '**' → logprob: -1.6881992816925049
    3. '18' → logprob: -2.938199281692505
    4. '0' → logprob: -3.688199281692505
    5. '15' → logprob: -6.063199043273926
    6. '10' → logprob: -6.563199043273926
    7. '00' → logprob: -6.813199043273926
    8. '20' → logprob: -7.813199043273926
    9. '09' → logprob: -8.313199043273926
    10. '12' → logprob: -8.938199043273926

Token 82: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0053986962884664536
    2. '15' → logprob: -6.130398750305176
    3. '10' → logprob: -6.255398750305176
    4. '18' → logprob: -6.755398750305176
    5. '12' → logprob: -9.380398750305176
    6. '6' → logprob: -11.130398750305176
    7. '7' → logprob: -11.380398750305176
    8. '8' → logprob: -12.380398750305176
    9. '14' → logprob: -13.005398750305176
    10. '20' → logprob: -13.130398750305176

Token 83: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005547728389501572
    2. ' dp' → logprob: -5.755547523498535
    3. 'DP' → logprob: -6.505547523498535
    4. 'max' → logprob: -7.630547523498535
    5. '_dp' → logprob: -9.255547523498535
    6. 'for' → logprob: -10.255547523498535
    7. 'dist' → logprob: -10.630547523498535
    8. ')' → logprob: -10.755547523498535
    9. ' DP' → logprob: -10.880547523498535
    10. '#' → logprob: -10.880547523498535

Token 84: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.060467418283224106
    2. 'D' → logprob: -3.310467481613159
    3. 'd' → logprob: -4.06046724319458
    4. 'DP' → logprob: -6.06046724319458
    5. 'f' → logprob: -6.93546724319458
    6. '_' → logprob: -7.93546724319458
    7. ' dp' → logprob: -8.310467720031738
    8. '#' → logprob: -8.560467720031738
    9. 'max' → logprob: -9.060467720031738
    10. '`' → logprob: -9.185467720031738

Token 85: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0016056748572736979
    2. '#' → logprob: -7.50160551071167
    3. ' dp' → logprob: -7.75160551071167
    4. 'DP' → logprob: -7.87660551071167
    5. 'def' → logprob: -9.501605987548828
    6. 'f' → logprob: -10.126605987548828
    7. 'max' → logprob: -10.501605987548828
    8. 'from' → logprob: -11.001605987548828
    9. 'F' → logprob: -11.376605987548828
    10. '```' → logprob: -11.751605987548828

Token 86: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017163509037345648
    2. '=' → logprob: -6.376716136932373
    3. '=[' → logprob: -12.876716613769531
    4. '[' → logprob: -13.001716613769531
    5. ' ' → logprob: -13.126716613769531
    6. ' =[' → logprob: -13.251716613769531
    7. '```' → logprob: -13.876716613769531
    8. 'dp' → logprob: -14.126716613769531
    9. '1' → logprob: -14.376716613769531
    10. '=[[' → logprob: -14.501716613769531

Token 87: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.024003539234399796
    2. ']' → logprob: -4.024003505706787
    3. ' ][' → logprob: -5.649003505706787
    4. '1' → logprob: -6.899003505706787
    5. '+' → logprob: -7.524003505706787
    6. ',' → logprob: -7.649003505706787
    7. ' ]' → logprob: -10.149003982543945
    8. ',j' → logprob: -10.524003982543945
    9. 'a' → logprob: -10.649003982543945
    10. ']=' → logprob: -10.774003982543945

Token 88: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01008458063006401
    2. '0' → logprob: -5.135084629058838
    3. ']' → logprob: -6.760084629058838
    4. '1' → logprob: -6.760084629058838
    5. '][' → logprob: -7.760084629058838
    6. 's' → logprob: -8.01008415222168
    7. 'w' → logprob: -8.38508415222168
    8. 'm' → logprob: -8.51008415222168
    9. 'a' → logprob: -8.76008415222168
    10. 'M' → logprob: -9.51008415222168

Token 89: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06259594112634659
    2. '][' → logprob: -2.812595844268799
    3. ']=' → logprob: -7.937595844268799
    4. '=' → logprob: -9.437596321105957
    5. ' ]' → logprob: -9.562596321105957
    6. ' ][' → logprob: -10.312596321105957
    7. '][-' → logprob: -10.937596321105957
    8. '][]' → logprob: -11.187596321105957
    9. ']:' → logprob: -11.437596321105957
    10. ' =' → logprob: -11.687596321105957

Token 90: 'k' (ID: 74)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21586647629737854
    2. 'k' → logprob: -1.8408664464950562
    3. '2' → logprob: -3.4658665657043457
    4. ']' → logprob: -6.715866565704346
    5. '1' → logprob: -7.590866565704346
    6. '3' → logprob: -7.840866565704346
    7. 's' → logprob: -7.965866565704346
    8. '][' → logprob: -8.215866088867188
    9. 'i' → logprob: -8.340866088867188
    10. 'l' → logprob: -8.965866088867188

Token 91: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0022568334825336933
    2. ' ]' → logprob: -6.127256870269775
    3. ']=' → logprob: -10.502256393432617
    4. '=' → logprob: -10.752256393432617
    5. '][' → logprob: -11.627256393432617
    6. ' =' → logprob: -12.002256393432617
    7. ']:' → logprob: -13.627256393432617
    8. ')' → logprob: -14.127256393432617
    9. '],' → logprob: -14.252256393432617
    10. ' ][' → logprob: -14.252256393432617

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023418309167027473
    2. '=' → logprob: -3.773418426513672
    3. ' ' → logprob: -9.148418426513672
    4. ',' → logprob: -10.648418426513672
    5. '[' → logprob: -11.148418426513672
    6. ' =[' → logprob: -11.398418426513672
    7. '<|end|>' → logprob: -12.273418426513672
    8. '  ' → logprob: -13.148418426513672
    9. ':' → logprob: -13.523418426513672
    10. '0' → logprob: -13.648418426513672

Token 93: ' longueur' (ID: 104613)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.4595810174942017
    2. '0' → logprob: -1.7095810174942017
    3. 'max' → logprob: -1.7095810174942017
    4. ' maximum' → logprob: -2.459580898284912
    5. ' -' → logprob: -2.834580898284912
    6. 'INF' → logprob: -2.959580898284912
    7. ' ' → logprob: -3.084580898284912
    8. '-' → logprob: -3.709580898284912
    9. ' the' → logprob: -3.834580898284912
    10. ' le' → logprob: -4.209580898284912

Token 94: ' max' (ID: 2999)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05452348664402962
    2. ' ' → logprob: -4.179523468017578
    3. '=' → logprob: -4.554523468017578
    4. '[i' → logprob: -4.554523468017578
    5. ' =' → logprob: -4.804523468017578
    6. ',' → logprob: -6.679523468017578
    7. '  ' → logprob: -6.804523468017578
    8. ' [' → logprob: -6.804523468017578
    9. ']' → logprob: -6.929523468017578
    10. '```' → logprob: -7.304523468017578

Token 96: ' train' (ID: 8513)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5831242799758911
    2. 'la' → logprob: -1.0831242799758911
    3. 'chaine' → logprob: -3.0831241607666016
    4. 'l' → logprob: -3.9581241607666016
    5. 's' → logprob: -4.208124160766602
    6. ' l' → logprob: -4.958124160766602
    7. 'une' → logprob: -5.583124160766602
    8. ' chaîne' → logprob: -5.708124160766602
    9. 'train' → logprob: -6.833124160766602
    10. 'cha' → logprob: -7.208124160766602

Token 97: ' possible' (ID: 4149)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3220434188842773
    2. '[' → logprob: -1.4470434188842773
    3. ' =' → logprob: -1.4470434188842773
    4. '[i' → logprob: -2.1970434188842773
    5. ',' → logprob: -2.5720434188842773
    6. ' ,' → logprob: -3.8220434188842773
    7. 's' → logprob: -4.697043418884277
    8. ']' → logprob: -5.322043418884277
    9. '=' → logprob: -5.447043418884277
    10. '  ' → logprob: -5.447043418884277

Token 98: ' en' (ID: 469)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1891353130340576
    2. ',' → logprob: -1.4391353130340576
    3. ' avec' → logprob: -2.3141353130340576
    4. ' =' → logprob: -2.6891353130340576
    5. '[i' → logprob: -2.9391353130340576
    6. ' ,' → logprob: -3.0641353130340576
    7. ' with' → logprob: -3.3141353130340576
    8. '[
' → logprob: -3.5641353130340576
    9. ' à' → logprob: -3.9391353130340576
    10. '<|end|>' → logprob: -4.064135551452637

Token 99: ' ayant' (ID: 45436)
  Prédit: ' utilisant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisant' → logprob: -0.3832906186580658
    2. ' i' → logprob: -2.6332905292510986
    3. ' constru' → logprob: -2.7582905292510986
    4. 'i' → logprob: -3.0082905292510986
    5. ' chois' → logprob: -4.133290767669678
    6. 's' → logprob: -4.383290767669678
    7. 'form' → logprob: -4.508290767669678
    8. ' using' → logprob: -4.508290767669678
    9. ' continu' → logprob: -4.633290767669678
    10. 'using' → logprob: -4.633290767669678

Token 100: ' pris' (ID: 17549)
  Prédit: ' utilisé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -0.644652783870697
    2. 'i' → logprob: -1.2696528434753418
    3. 'util' → logprob: -2.019652843475342
    4. ' i' → logprob: -3.894652843475342
    5. ' pris' → logprob: -3.894652843475342
    6. 'u' → logprob: -4.769652843475342
    7. ' choisi' → logprob: -5.769652843475342
    8. 'pris' → logprob: -6.019652843475342
    9. ' ' → logprob: -6.269652843475342
    10. 's' → logprob: -7.519652843475342

Token 101: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.14469386637210846
    2. 'i' → logprob: -2.0196938514709473
    3. ' ' → logprob: -6.644693851470947
    4. '<|end|>' → logprob: -8.769694328308105
    5. '```' → logprob: -9.394694328308105
    6. ' un' → logprob: -9.519694328308105
    7. ' a' → logprob: -10.269694328308105
    8. ' `' → logprob: -10.269694328308105
    9. ' une' → logprob: -10.394694328308105
    10. ',' → logprob: -10.644694328308105

Token 102: ' wag' (ID: 48065)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5014666318893433
    2. ']' → logprob: -1.8764666318893433
    3. ' tokens' → logprob: -2.376466751098633
    4. '][' → logprob: -2.501466751098633
    5. 'tokens' → logprob: -2.501466751098633
    6. 'de' → logprob: -2.751466751098633
    7. '<|end|>' → logprob: -3.126466751098633
    8. ')' → logprob: -3.251466751098633
    9. 's' → logprob: -3.501466751098633
    10. ' caractères' → logprob: -3.751466751098633

Token 103: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.0022104429081082344
    2. '```' → logprob: -7.50221061706543
    3. 'on' → logprob: -7.62721061706543
    4. 'a' → logprob: -8.00221061706543
    5. 'aux' → logprob: -8.25221061706543
    6. '   ' → logprob: -9.50221061706543
    7. '``' → logprob: -9.50221061706543
    8. '[' → logprob: -10.00221061706543
    9. 'çons' → logprob: -10.00221061706543
    10. '{' → logprob: -10.12721061706543

Token 104: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9394799470901489
    2. ',' → logprob: -1.189479947090149
    3. 'de' → logprob: -2.0644798278808594
    4. 'from' → logprob: -2.0644798278808594
    5. '<|end|>' → logprob: -3.9394798278808594
    6. ' from' → logprob: -4.564479827880859
    7. ' des' → logprob: -4.564479827880859
    8. '```' → logprob: -6.064479827880859
    9. 'des' → logprob: -6.439479827880859
    10. ' depuis' → logprob: -6.814479827880859

Token 105: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.14366070926189423
    2. ' S' → logprob: -2.6436607837677
    3. 'M' → logprob: -3.7686607837677
    4. 'l' → logprob: -4.393660545349121
    5. ' M' → logprob: -4.518660545349121
    6. 'A' → logprob: -5.018660545349121
    7. 'I' → logprob: -6.268660545349121
    8. ' la' → logprob: -6.518660545349121
    9. ' A' → logprob: -6.768660545349121
    10. 'la' → logprob: -7.268660545349121

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7103500962257385
    2. '][' → logprob: -1.7103500366210938
    3. '[' → logprob: -2.0853500366210938
    4. '[i' → logprob: -2.9603500366210938
    5. '[k' → logprob: -3.4603500366210938
    6. ')' → logprob: -3.4603500366210938
    7. '<|end|>' → logprob: -3.8353500366210938
    8. ',k' → logprob: -3.9603500366210938
    9. '[j' → logprob: -4.585350036621094
    10. ' and' → logprob: -4.585350036621094

Token 107: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.42930808663368225
    2. 'j' → logprob: -1.0543080568313599
    3. '   ' → logprob: -9.17930793762207
    4. '    ' → logprob: -9.67930793762207
    5. '          ' → logprob: -9.92930793762207
    6. '  ' → logprob: -10.17930793762207
    7. ' ' → logprob: -10.17930793762207
    8. '           ' → logprob: -10.67930793762207
    9. '         ' → logprob: -10.80430793762207
    10. '                   ' → logprob: -10.80430793762207

Token 108: ' wag' (ID: 48065)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01124505139887333
    2. ']' → logprob: -5.011245250701904
    3. ' de' → logprob: -6.761245250701904
    4. 'de' → logprob: -6.886245250701904
    5. '+' → logprob: -7.886245250701904
    6. '[' → logprob: -8.261244773864746
    7. 'from' → logprob: -8.386244773864746
    8. 'wag' → logprob: -8.386244773864746
    9. ' of' → logprob: -8.761244773864746
    10. ' ][' → logprob: -9.261244773864746

Token 109: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.0002501343551557511
    2. '[' → logprob: -8.500249862670898
    3. 'on' → logprob: -10.625249862670898
    4. '][' → logprob: -11.500249862670898
    5. '[i' → logprob: -12.500249862670898
    6. '```' → logprob: -12.875249862670898
    7. '{' → logprob: -13.500249862670898
    8. '   ' → logprob: -14.125249862670898
    9. ']' → logprob: -14.375249862670898
    10. 's' → logprob: -14.500249862670898

Token 110: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.2208729088306427
    2. 'from' → logprob: -2.0958728790283203
    3. ' de' → logprob: -2.9708728790283203
    4. ' of' → logprob: -4.59587287902832
    5. '<|end|>' → logprob: -5.47087287902832
    6. '```' → logprob: -5.84587287902832
    7. 'of' → logprob: -5.97087287902832
    8. 'des' → logprob: -6.72087287902832
    9. ' from' → logprob: -7.59587287902832
    10. 'def' → logprob: -7.84587287902832

Token 111: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.00410274276509881
    2. ' T' → logprob: -5.50410270690918
    3. 'S' → logprob: -11.12910270690918
    4. 'N' → logprob: -12.12910270690918
    5. ' ' → logprob: -13.25410270690918
    6. 'M' → logprob: -14.00410270690918
    7. 'k' → logprob: -14.50410270690918
    8. 't' → logprob: -14.75410270690918
    9. '  ' → logprob: -15.50410270690918
    10. '   ' → logprob: -15.62910270690918

Token 112: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3714174032211304
    2. '][' → logprob: -1.4964174032211304
    3. '[' → logprob: -1.6214174032211304
    4. '[k' → logprob: -2.12141752243042
    5. ',k' → logprob: -2.24641752243042
    6. 'k' → logprob: -3.74641752243042
    7. '```' → logprob: -4.12141752243042
    8. ']' → logprob: -4.12141752243042
    9. ' and' → logprob: -4.37141752243042
    10. ' k' → logprob: -5.12141752243042

Token 113: '#' (ID: 2)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2441023588180542
    2. ' k' → logprob: -1.9941023588180542
    3. '#' → logprob: -2.8691024780273438
    4. '[' → logprob: -4.744102478027344
    5. ' #' → logprob: -5.119102478027344
    6. ' ' → logprob: -6.369102478027344
    7. ' and' → logprob: -6.744102478027344
    8. '3' → logprob: -6.869102478027344
    9. '][' → logprob: -6.869102478027344
    10. '[k' → logprob: -6.994102478027344

Token 114: ' avec' (ID: 3937)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4327430725097656
    2. ' k' → logprob: -1.0577430725097656
    3. ' et' → logprob: -5.682743072509766
    4. 'et' → logprob: -8.682743072509766
    5. ' ' → logprob: -8.807743072509766
    6. '0' → logprob: -9.057743072509766
    7. ' avec' → logprob: -9.807743072509766
    8. '3' → logprob: -10.682743072509766
    9. ' en' → logprob: -10.807743072509766
    10. '1' → logprob: -10.932743072509766

Token 115: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.004355940967798233
    2. ' k' → logprob: -5.8793559074401855
    3. 'le' → logprob: -7.0043559074401855
    4. 'l' → logprob: -8.504356384277344
    5. 'last' → logprob: -8.754356384277344
    6. 'la' → logprob: -9.004356384277344
    7. ' la' → logprob: -10.129356384277344
    8. ' le' → logprob: -10.379356384277344
    9. ' last' → logprob: -11.004356384277344
    10. 'i' → logprob: -11.254356384277344

Token 116: ' =' (ID: 314)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.9059357047080994
    2. ' =' → logprob: -1.6559357643127441
    3. ']' → logprob: -1.9059357643127441
    4. '=' → logprob: -2.530935764312744
    5. ' %' → logprob: -2.905935764312744
    6. ' ' → logprob: -3.405935764312744
    7. ')' → logprob: -4.655935764312744
    8. ' ]' → logprob: -4.780935764312744
    9. ' (' → logprob: -5.280935764312744
    10. ' en' → logprob: -5.405935764312744

Token 117: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009881336241960526
    2. '(i' → logprob: -4.759881496429443
    3. '((' → logprob: -8.134881019592285
    4. '(' → logprob: -8.259881019592285
    5. '1' → logprob: -8.634881019592285
    6. ' (' → logprob: -8.634881019592285
    7. 'i' → logprob: -9.009881019592285
    8. ' ' → logprob: -9.509881019592285
    9. '(S' → logprob: -10.009881019592285
    10. '(int' → logprob: -10.634881019592285

Token 118: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.036156948655843735
    2. '(i' → logprob: -3.4111568927764893
    3. '1' → logprob: -7.286157131195068
    4. '(' → logprob: -7.536157131195068
    5. 'i' → logprob: -7.911157131195068
    6. ' (' → logprob: -8.41115665435791
    7. '(S' → logprob: -8.53615665435791
    8. '((' → logprob: -8.53615665435791
    9. '(int' → logprob: -8.78615665435791
    10. ' ' → logprob: -10.03615665435791

Token 119: ' si' (ID: 1784)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.40336844325065613
    2. ',' → logprob: -1.4033684730529785
    3. 'or' → logprob: -2.7783684730529785
    4. ' ou' → logprob: -4.4033684730529785
    5. ' (' → logprob: -5.7783684730529785
    6. ':' → logprob: -6.5283684730529785
    7. ' ' → logprob: -7.0283684730529785
    8. ' ,' → logprob: -7.0283684730529785
    9. '0' → logprob: -7.2783684730529785
    10. ']' → logprob: -7.4033684730529785

Token 120: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.4942634701728821
    2. 'la' → logprob: -1.7442634105682373
    3. 'on' → logprob: -2.2442634105682373
    4. ' le' → logprob: -2.9942634105682373
    5. ' on' → logprob: -3.4942634105682373
    6. ' la' → logprob: -4.744263648986816
    7. 'last' → logprob: -4.994263648986816
    8. 'c' → logprob: -5.744263648986816
    9. 'S' → logprob: -6.119263648986816
    10. 'l' → logprob: -6.494263648986816

Token 121: ' dernier' (ID: 27982)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.022611092776060104
    2. ' dernier' → logprob: -4.272611141204834
    3. 'der' → logprob: -5.647611141204834
    4. 'last' → logprob: -6.147611141204834
    5. 'train' → logprob: -6.147611141204834
    6. ' prochain' → logprob: -9.397610664367676
    7. 'next' → logprob: -9.897610664367676
    8. '```' → logprob: -9.897610664367676
    9. 'Dern' → logprob: -10.272610664367676
    10. 'd' → logprob: -10.272610664367676

Token 122: ' wagon' (ID: 90907)
  Prédit: 'wagon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wagon' → logprob: -0.06653065234422684
    2. 'wag' → logprob: -3.566530704498291
    3. ' wagon' → logprob: -3.941530704498291
    4. ' pris' → logprob: -5.566530704498291
    5. 'cho' → logprob: -6.191530704498291
    6. 'train' → logprob: -6.191530704498291
    7. 'pris' → logprob: -6.316530704498291
    8. '```' → logprob: -6.941530704498291
    9. ' wag' → logprob: -7.191530704498291
    10. 'w' → logprob: -7.816530704498291

Token 123: ' pris' (ID: 17549)
  Prédit: ' pris'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pris' → logprob: -1.3714021444320679
    2. ' est' → logprob: -1.4964021444320679
    3. 'est' → logprob: -1.8714021444320679
    4. '=' → logprob: -1.9964021444320679
    5. ' choisi' → logprob: -3.3714022636413574
    6. ' =' → logprob: -3.4964022636413574
    7. 'pris' → logprob: -3.4964022636413574
    8. 'a' → logprob: -3.4964022636413574
    9. ' a' → logprob: -3.7464022636413574
    10. ' utilisé' → logprob: -4.246402263641357

Token 124: ' vient' (ID: 40370)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6203038096427917
    2. '=' → logprob: -1.4953038692474365
    3. ' de' → logprob: -2.3703038692474365
    4. 'from' → logprob: -2.8703038692474365
    5. '==' → logprob: -3.1203038692474365
    6. ' est' → logprob: -4.120303630828857
    7. 'est' → logprob: -5.370303630828857
    8. ']' → logprob: -5.620303630828857
    9. 's' → logprob: -5.870303630828857
    10. ' =' → logprob: -6.120303630828857

Token 125: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.43430253863334656
    2. 'de' → logprob: -1.059302568435669
    3. 'from' → logprob: -5.30930233001709
    4. ' from' → logprob: -8.43430233001709
    5. ' du' → logprob: -8.93430233001709
    6. 'd' → logprob: -9.30930233001709
    7. 'du' → logprob: -10.05930233001709
    8. ' ' → logprob: -10.43430233001709
    9. ')' → logprob: -10.80930233001709
    10. 's' → logprob: -11.18430233001709

Token 126: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.2519392669200897
    2. ' S' → logprob: -1.501939296722412
    3. ' ' → logprob: -12.126938819885254
    4. '0' → logprob: -13.126938819885254
    5. 's' → logprob: -13.751938819885254
    6. ' ' → logprob: -14.376938819885254
    7. 'M' → logprob: -15.126938819885254
    8. ''S' → logprob: -15.626938819885254
    9. '_S' → logprob: -15.876938819885254
    10. ',' → logprob: -16.12693977355957

Token 127: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4856741726398468
    2. ',' → logprob: -1.1106741428375244
    3. '[' → logprob: -3.8606741428375244
    4. ')' → logprob: -4.6106743812561035
    5. '][' → logprob: -4.8606743812561035
    6. '<|end|>' → logprob: -5.2356743812561035
    7. ' ' → logprob: -5.9856743812561035
    8. '<|end|>' → logprob: -6.9856743812561035
    9. ',k' → logprob: -7.3606743812561035
    10. '```' → logprob: -7.3606743812561035

Token 128: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05235239118337631
    2. ' k' → logprob: -3.6773524284362793
    3. 'k' → logprob: -4.302352428436279
    4. ' ' → logprob: -4.552352428436279
    5. '#' → logprob: -6.552352428436279
    6. ' #' → logprob: -8.677351951599121
    7. '   ' → logprob: -11.427351951599121
    8. '```' → logprob: -11.927351951599121
    9. '0' → logprob: -12.552351951599121
    10. ' or' → logprob: -12.552351951599121

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.044862616807222366
    2. 'k' → logprob: -3.1698625087738037
    3. ' k' → logprob: -6.419862747192383
    4. ' ' → logprob: -8.544862747192383
    5. '   ' → logprob: -10.919862747192383
    6. '#' → logprob: -12.294862747192383
    7. ',' → logprob: -12.919862747192383
    8. '```' → logprob: -13.044862747192383
    9. '  ' → logprob: -13.169862747192383
    10. '
' → logprob: -13.544862747192383

Token 130: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20646825432777405
    2. ')' → logprob: -3.206468343734741
    3. ']' → logprob: -3.206468343734741
    4. 'if' → logprob: -3.331468343734741
    5. ' si' → logprob: -3.456468343734741
    6. ' =' → logprob: -3.706468343734741
    7. ' ' → logprob: -5.456468105316162
    8. '<|end|>' → logprob: -5.831468105316162
    9. '=' → logprob: -6.206468105316162
    10. '```' → logprob: -6.831468105316162

Token 131: ' du' (ID: 1462)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.49352750182151794
    2. 'le' → logprob: -2.368527412414551
    3. ' du' → logprob: -2.493527412414551
    4. 'from' → logprob: -2.993527412414551
    5. ' ce' → logprob: -3.618527412414551
    6. ' k' → logprob: -3.743527412414551
    7. ' ' → logprob: -4.243527412414551
    8. 'k' → logprob: -4.368527412414551
    9. ' de' → logprob: -4.368527412414551
    10. ' from' → logprob: -4.368527412414551

Token 132: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.02975824475288391
    2. ' T' → logprob: -3.5297582149505615
    3. 't' → logprob: -13.15475845336914
    4. 'S' → logprob: -13.27975845336914
    5. ' ' → logprob: -13.65475845336914
    6. ' ' → logprob: -14.27975845336914
    7. ')' → logprob: -14.65475845336914
    8. '```' → logprob: -15.40475845336914
    9. 'k' → logprob: -15.84225845336914
    10. '[' → logprob: -16.21725845336914

Token 133: ',' (ID: 11)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03791053965687752
    2. ']' → logprob: -4.162910461425781
    3. '[' → logprob: -4.662910461425781
    4. ' =' → logprob: -5.912910461425781
    5. '[
' → logprob: -6.037910461425781
    6. '
' → logprob: -6.537910461425781
    7. ' dp' → logprob: -6.662910461425781
    8. '][' → logprob: -7.162910461425781
    9. ',' → logprob: -7.287910461425781
    10. 'import' → logprob: -7.412910461425781

Token 134: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8549690246582031
    2. '0' → logprob: -1.3549690246582031
    3. ' ' → logprob: -1.8549690246582031
    4. ' and' → logprob: -2.979969024658203
    5. 'k' → logprob: -3.729969024658203
    6. '#' → logprob: -3.729969024658203
    7. ']' → logprob: -3.979969024658203
    8. ' k' → logprob: -3.979969024658203
    9. 'and' → logprob: -5.229969024658203
    10. ')' → logprob: -5.729969024658203

Token 135: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.056147586554288864
    2. 'k' → logprob: -4.056147575378418
    3. '0' → logprob: -4.431147575378418
    4. ']' → logprob: -4.681147575378418
    5. 'and' → logprob: -5.181147575378418
    6. ' ' → logprob: -5.681147575378418
    7. '#' → logprob: -5.806147575378418
    8. ' and' → logprob: -6.306147575378418
    9. 'None' → logprob: -7.556147575378418
    10. ')' → logprob: -7.806147575378418

Token 136: ' si' (ID: 1784)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01829298958182335
    2. 'import' → logprob: -4.7682929039001465
    3. ',' → logprob: -5.7682929039001465
    4. ' =' → logprob: -6.8932929039001465
    5. '#' → logprob: -7.0182929039001465
    6. '```' → logprob: -7.0182929039001465
    7. 's' → logprob: -7.7682929039001465
    8. ' ]' → logprob: -7.8932929039001465
    9. '<|end|>' → logprob: -7.8932929039001465
    10. ' (' → logprob: -8.018293380737305

Token 137: ' on' (ID: 402)
  Prédit: 'auc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auc' → logprob: -0.09345905482769012
    2. 'on' → logprob: -2.968459129333496
    3. ' aucun' → logprob: -3.718459129333496
    4. ' on' → logprob: -4.968459129333496
    5. 'pas' → logprob: -5.218459129333496
    6. 'c' → logprob: -7.093459129333496
    7. 'ni' → logprob: -9.218459129333496
    8. '0' → logprob: -9.843459129333496
    9. ' aucune' → logprob: -9.968459129333496
    10. 'none' → logprob: -10.468459129333496

Token 138: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.013491002842783928
    2. ' n' → logprob: -4.388491153717041
    3. 'a' → logprob: -7.138491153717041
    4. 'na' → logprob: -8.763490676879883
    5. 'n't' → logprob: -11.388490676879883
    6. ' a' → logprob: -12.263490676879883
    7. 'ne' → logprob: -12.263490676879883
    8. '#' → logprob: -13.013490676879883
    9. 'pas' → logprob: -14.013490676879883
    10. '```' → logprob: -14.138490676879883

Token 139: ''a' (ID: 10443)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5761826634407043
    2. ''a' → logprob: -0.8261826634407043
    3. 'n' → logprob: -9.82618236541748
    4. ''ai' → logprob: -10.32618236541748
    5. '’a' → logprob: -10.45118236541748
    6. 'pas' → logprob: -11.20118236541748
    7. ''' → logprob: -11.20118236541748
    8. ''ont' → logprob: -11.20118236541748
    9. '_a' → logprob: -11.32618236541748
    10. ''en' → logprob: -11.82618236541748

Token 140: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.0023323555942624807
    2. 'enc' → logprob: -6.3773322105407715
    3. 'r' → logprob: -8.25233268737793
    4. 'pris' → logprob: -8.50233268737793
    5. ' pas' → logprob: -9.37733268737793
    6. '#' → logprob: -10.87733268737793
    7. ' encore' → logprob: -11.62733268737793
    8. ' ' → logprob: -11.75233268737793
    9. 'tou' → logprob: -12.37733268737793
    10. 'strict' → logprob: -12.50233268737793

Token 141: ' encore' (ID: 14043)
  Prédit: 'enc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enc' → logprob: -0.5189868807792664
    2. 'pris' → logprob: -1.0189869403839111
    3. 'comm' → logprob: -3.518986940383911
    4. ' encore' → logprob: -5.018986701965332
    5. ' pris' → logprob: -5.643986701965332
    6. ' commencé' → logprob: -6.893986701965332
    7. 'dé' → logprob: -7.518986701965332
    8. 'd' → logprob: -7.893986701965332
    9. 'prise' → logprob: -8.143986701965332
    10. 'prises' → logprob: -8.268986701965332

Token 142: ' commencé' (ID: 78085)
  Prédit: 'pris'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pris' → logprob: -0.13794372975826263
    2. ' pris' → logprob: -2.512943744659424
    3. 'cho' → logprob: -3.637943744659424
    4. ' choisi' → logprob: -4.512943744659424
    5. 'comm' → logprob: -5.387943744659424
    6. ' commencé' → logprob: -6.262943744659424
    7. 'prise' → logprob: -6.387943744659424
    8. 'prises' → logprob: -7.387943744659424
    9. 'pr' → logprob: -7.512943744659424
    10. 'posé' → logprob: -8.262943267822266

Token 143: ' à' (ID: 1221)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010079510509967804
    2. 'dp' → logprob: -4.885079383850098
    3. ' =' → logprob: -6.885079383850098
    4. ']
' → logprob: -7.635079383850098
    5. '```' → logprob: -8.385079383850098
    6. '=' → logprob: -8.885079383850098
    7. '][' → logprob: -9.010079383850098
    8. 'for' → logprob: -9.135079383850098
    9. ',' → logprob: -9.510079383850098
    10. 's' → logprob: -10.260079383850098

Token 144: ' prendre' (ID: 24257)
  Prédit: 'prendre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prendre' → logprob: -0.0264289453625679
    2. 'cho' → logprob: -4.901429176330566
    3. ' prendre' → logprob: -5.151429176330566
    4. 'former' → logprob: -5.401429176330566
    5. 'poser' → logprob: -5.651429176330566
    6. 'placer' → logprob: -6.401429176330566
    7. ' choisir' → logprob: -6.651429176330566
    8. 'mettre' → logprob: -7.776429176330566
    9. 'faire' → logprob: -8.151429176330566
    10. ' construire' → logprob: -8.401429176330566

Token 145: '
' (ID: 198)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0036743057426065207
    2. ' =' → logprob: -6.253674507141113
    3. 'dp' → logprob: -8.003674507141113
    4. '=' → logprob: -8.128674507141113
    5. '```' → logprob: -8.378674507141113
    6. ' ]' → logprob: -8.503674507141113
    7. 's' → logprob: -8.753674507141113
    8. ']
' → logprob: -9.128674507141113
    9. '][' → logprob: -9.253674507141113
    10. '[' → logprob: -9.753674507141113

Token 146: 'dp' (ID: 19037)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007202956476248801
    2. 'dp' → logprob: -8.625720024108887
    3. '```' → logprob: -9.250720024108887
    4. 's' → logprob: -9.250720024108887
    5. ' =' → logprob: -9.375720024108887
    6. ',' → logprob: -9.750720024108887
    7. ' ]' → logprob: -10.000720024108887
    8. '=' → logprob: -10.125720024108887
    9. '][' → logprob: -10.750720024108887
    10. ']=' → logprob: -11.000720024108887

Token 147: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023360783234238625
    2. '=' → logprob: -3.8983607292175293
    3. '[' → logprob: -6.023360729217529
    4. ']' → logprob: -8.148361206054688
    5. '=[' → logprob: -10.398361206054688
    6. ' ' → logprob: -11.398361206054688
    7. '[i' → logprob: -11.523361206054688
    8. ')' → logprob: -11.773361206054688
    9. ' =[' → logprob: -11.898361206054688
    10. '=[[' → logprob: -12.523361206054688

Token 148: ' [[[' (ID: 121934)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0020855467300862074
    2. '[' → logprob: -6.3770856857299805
    3. ' [[' → logprob: -8.50208568572998
    4. ' [[[' → logprob: -8.62708568572998
    5. '[['' → logprob: -14.75208568572998
    6. '[-' → logprob: -15.12708568572998
    7. '[
' → logprob: -15.50208568572998
    8. '([[' → logprob: -17.002084732055664
    9. '[(' → logprob: -17.127084732055664
    10. ' [' → logprob: -17.627084732055664

Token 149: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.0005780545179732144
    2. '-' → logprob: -7.750577926635742
    3. '-INF' → logprob: -8.875577926635742
    4. '-inf' → logprob: -12.875577926635742
    5. ' INF' → logprob: -13.000577926635742
    6. '0' → logprob: -13.375577926635742
    7. ' -' → logprob: -14.500577926635742
    8. 'inf' → logprob: -15.125577926635742
    9. 'None' → logprob: -16.000577926635742
    10. ' ' → logprob: -16.125577926635742

Token 150: ']*(' (ID: 92627)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8013181686401367
    2. 'for' → logprob: -1.1763181686401367
    3. ']' → logprob: -1.4263181686401367
    4. ')' → logprob: -6.426318168640137
    5. ']*' → logprob: -7.676318168640137
    6. ']*(' → logprob: -8.301318168640137
    7. ',' → logprob: -8.551318168640137
    8. '	for' → logprob: -10.301318168640137
    9. ' ' → logprob: -10.301318168640137
    10. ' ]' → logprob: -10.926318168640137

Token 151: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.375005722045898
    3. '   ' → logprob: -13.500005722045898
    4. '=' → logprob: -17.3750057220459
    5. ')' → logprob: -17.6250057220459
    6. '  ' → logprob: -17.6250057220459
    7. '```' → logprob: -17.6250057220459
    8. '    ' → logprob: -19.0625057220459
    9. '       ' → logprob: -19.1250057220459
    10. '۳' → logprob: -19.4375057220459

Token 152: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004946522531099617
    2. ' )' → logprob: -7.875494480133057
    3. 'for' → logprob: -9.500494956970215
    4. ' for' → logprob: -10.250494956970215
    5. ' ' → logprob: -13.000494956970215
    6. ')
' → logprob: -13.750494956970215
    7. '+' → logprob: -15.750494956970215
    8. '   ' → logprob: -16.2504940032959
    9. '(M' → logprob: -16.6254940032959
    10. '  ' → logprob: -16.7504940032959

Token 153: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16022484004497528
    2. 'for' → logprob: -1.9102247953414917
    3. ' ' → logprob: -15.410224914550781
    4. '	for' → logprob: -15.410224914550781
    5. ']' → logprob: -15.910224914550781
    6. '   ' → logprob: -16.53522491455078
    7. ')' → logprob: -17.41022491455078
    8. ' ' → logprob: -17.66022491455078
    9. ',' → logprob: -18.16022491455078
    10. ']*(' → logprob: -18.53522491455078

Token 154: ' _' (ID: 1175)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04537445679306984
    2. '(range' → logprob: -3.6703743934631348
    3. ' range' → logprob: -4.795374393463135
    4. 'range' → logprob: -4.795374393463135
    5. 'in' → logprob: -6.795374393463135
    6. '(' → logprob: -7.545374393463135
    7. '_' → logprob: -7.545374393463135
    8. '(j' → logprob: -9.920374870300293
    9. '()' → logprob: -10.045374870300293
    10. ' (' → logprob: -10.170374870300293

Token 155: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.42764875292778015
    2. ' range' → logprob: -1.1776487827301025
    3. ' in' → logprob: -3.3026487827301025
    4. 'in' → logprob: -5.927648544311523
    5. '(range' → logprob: -7.677648544311523
    6. '(N' → logprob: -11.177648544311523
    7. 'N' → logprob: -12.177648544311523
    8. ' ' → logprob: -12.302648544311523
    9. '(' → logprob: -12.427648544311523
    10. '_range' → logprob: -13.302648544311523

Token 156: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03836459666490555
    2. ' range' → logprob: -3.2883646488189697
    3. '(range' → logprob: -8.03836441040039
    4. '(M' → logprob: -16.53836441040039
    5. '(N' → logprob: -16.91336441040039
    6. ' ' → logprob: -17.28836441040039
    7. '	range' → logprob: -17.41336441040039
    8. '   ' → logprob: -18.41336441040039
    9. '_range' → logprob: -18.41336441040039
    10. '.range' → logprob: -18.41336441040039

Token 157: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0002233245177194476
    2. '(' → logprob: -8.875223159790039
    3. '(M' → logprob: -9.625223159790039
    4. '((' → logprob: -11.375223159790039
    5. ' (' → logprob: -12.625223159790039
    6. '(n' → logprob: -13.125223159790039
    7. 'N' → logprob: -15.625223159790039
    8. '(len' → logprob: -16.00022315979004
    9. '(j' → logprob: -16.50022315979004
    10. '(
' → logprob: -17.12522315979004

Token 158: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00091217877343297
    2. ' +' → logprob: -7.000912189483643
    3. ')]' → logprob: -15.000911712646484
    4. '+
' → logprob: -16.375911712646484
    5. '()+' → logprob: -16.625911712646484
    6. '+)' → logprob: -16.875911712646484
    7. ')])' → logprob: -17.000911712646484
    8. ')' → logprob: -17.125911712646484
    9. '＋' → logprob: -17.125911712646484
    10. '+[' → logprob: -18.750911712646484

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.666993507067673e-05
    2. ' ' → logprob: -10.500036239624023
    3. '(M' → logprob: -12.250036239624023
    4. '+' → logprob: -13.375036239624023
    5. '(' → logprob: -13.875036239624023
    6. '   ' → logprob: -14.750036239624023
    7. '2' → logprob: -14.750036239624023
    8. '(N' → logprob: -15.000036239624023
    9. '7' → logprob: -15.625036239624023
    10. ')' → logprob: -16.125036239624023

Token 160: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0032196608372032642
    2. ')' → logprob: -5.7532196044921875
    3. ' )' → logprob: -10.253219604492188
    4. ']' → logprob: -12.503219604492188
    5. '])' → logprob: -13.878219604492188
    6. ')])' → logprob: -14.128219604492188
    7. ')],' → logprob: -15.378219604492188
    8. '))' → logprob: -15.378219604492188
    9. ')][' → logprob: -15.503219604492188
    10. ')]
' → logprob: -15.878219604492188

Token 161: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47408226132392883
    2. 'for' → logprob: -0.9740822315216064
    3. '   ' → logprob: -12.724081993103027
    4. ']' → logprob: -13.224081993103027
    5. ' ' → logprob: -14.974081993103027
    6. '	for' → logprob: -16.099082946777344
    7. '       ' → logprob: -17.349082946777344
    8. ')' → logprob: -17.849082946777344
    9. '+' → logprob: -17.974082946777344
    10. '  ' → logprob: -18.349082946777344

Token 162: ' __' (ID: 2516)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.45156893134117126
    2. 'range' → logprob: -1.9515689611434937
    3. '_' → logprob: -2.076568841934204
    4. '(M' → logprob: -2.576568841934204
    5. ' (' → logprob: -4.701569080352783
    6. '(range' → logprob: -4.826569080352783
    7. ' in' → logprob: -6.826569080352783
    8. '_range' → logprob: -7.076569080352783
    9. '(' → logprob: -7.951569080352783
    10. ' _' → logprob: -8.201568603515625

Token 163: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.31440097093582153
    2. ' in' → logprob: -1.3144009113311768
    3. 'range' → logprob: -7.189401149749756
    4. '_' → logprob: -8.064400672912598
    5. ' range' → logprob: -10.064400672912598
    6. '_in' → logprob: -11.064400672912598
    7. '(range' → logprob: -11.689400672912598
    8. ' ' → logprob: -14.064400672912598
    9. '(' → logprob: -14.689400672912598
    10. 'i' → logprob: -15.064400672912598

Token 164: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038134440779685974
    2. ' range' → logprob: -3.2881343364715576
    3. '(range' → logprob: -9.288134574890137
    4. '(M' → logprob: -15.538134574890137
    5. '	range' → logprob: -15.788134574890137
    6. 'M' → logprob: -16.41313362121582
    7. '   ' → logprob: -17.28813362121582
    8. ' ' → logprob: -18.16313362121582
    9. '[M' → logprob: -18.16313362121582
    10. '_range' → logprob: -18.78813362121582

Token 165: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.00043674863991327584
    2. 'range' → logprob: -8.625436782836914
    3. ' range' → logprob: -8.750436782836914
    4. '(range' → logprob: -9.875436782836914
    5. ' (' → logprob: -10.125436782836914
    6. '(' → logprob: -12.750436782836914
    7. '((' → logprob: -13.000436782836914
    8. '   ' → logprob: -13.625436782836914
    9. 'M' → logprob: -14.875436782836914
    10. '(S' → logprob: -15.375436782836914

Token 166: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1472419600977446e-06
    2. ' +' → logprob: -14.875000953674316
    3. '()+' → logprob: -14.875000953674316
    4. '1' → logprob: -16.375001907348633
    5. '+
' → logprob: -16.750001907348633
    6. '+A' → logprob: -16.750001907348633
    7. ')]' → logprob: -17.125001907348633
    8. '+C' → logprob: -17.500001907348633
    9. '+)' → logprob: -17.625001907348633
    10. '(' → logprob: -17.875001907348633

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '+' → logprob: -14.750000953674316
    3. ' ' → logprob: -15.375000953674316
    4. '(' → logprob: -16.375
    5. ')' → logprob: -17.75
    6. '   ' → logprob: -18.625
    7. '2' → logprob: -18.75
    8. '```' → logprob: -19.5
    9. ']' → logprob: -19.625
    10. '۱' → logprob: -19.75

Token 168: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.392824874026701e-05
    2. ']' → logprob: -10.75003433227539
    3. '])]' → logprob: -12.12503433227539
    4. ')' → logprob: -12.62503433227539
    5. ')])' → logprob: -13.12503433227539
    6. ')],' → logprob: -13.75003433227539
    7. '])' → logprob: -15.00003433227539
    8. ')].' → logprob: -15.87503433227539
    9. ')][' → logprob: -16.62503433227539
    10. ']]' → logprob: -17.00003433227539

Token 169: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0005887754959985614
    2. ' dp' → logprob: -7.750588893890381
    3. '
' → logprob: -8.875588417053223
    4. '	dp' → logprob: -11.750588417053223
    5. '(dp' → logprob: -12.000588417053223
    6. ' 
' → logprob: -13.375588417053223
    7. '_dp' → logprob: -13.500588417053223
    8. '[' → logprob: -15.500588417053223
    9. 'for' → logprob: -15.625588417053223
    10. '```' → logprob: -15.625588417053223

Token 170: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00022094044834375381
    2. ' dp' → logprob: -8.500221252441406
    3. '2' → logprob: -12.000221252441406
    4. '
' → logprob: -12.625221252441406
    5. '#' → logprob: -13.125221252441406
    6. '0' → logprob: -13.500221252441406
    7. '(dp' → logprob: -13.875221252441406
    8. 'for' → logprob: -14.000221252441406
    9. '	dp' → logprob: -14.500221252441406
    10. ' ' → logprob: -14.625221252441406

Token 171: ' peut' (ID: 9216)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01582530327141285
    2. ' dp' → logprob: -5.140825271606445
    3. 'for' → logprob: -6.140825271606445
    4. 'n' → logprob: -6.515825271606445
    5. 'initialize' → logprob: -6.515825271606445
    6. 's' → logprob: -6.640825271606445
    7. 'initial' → logprob: -7.140825271606445
    8. '[' → logprob: -7.265825271606445
    9. 'pe' → logprob: -8.640825271606445
    10. ' initialise' → logprob: -8.890825271606445

Token 172: ' commencer' (ID: 66055)
  Prédit: 'mettre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mettre' → logprob: -0.9118154644966125
    2. 'prendre' → logprob: -1.1618154048919678
    3. 'comm' → logprob: -1.4118154048919678
    4. 'contin' → logprob: -4.161815643310547
    5. 'initial' → logprob: -5.286815643310547
    6. 'dp' → logprob: -5.661815643310547
    7. 'cho' → logprob: -5.661815643310547
    8. 'penser' → logprob: -5.786815643310547
    9. 'dé' → logprob: -6.411815643310547
    10. ' commencer' → logprob: -6.536815643310547

Token 173: ' un' (ID: 537)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006662558298557997
    2. ' dp' → logprob: -5.506662368774414
    3. 'par' → logprob: -6.631662368774414
    4. '(dp' → logprob: -7.506662368774414
    5. 'with' → logprob: -8.756662368774414
    6. 'avec' → logprob: -8.881662368774414
    7. '[' → logprob: -9.006662368774414
    8. ' avec' → logprob: -9.631662368774414
    9. ' par' → logprob: -9.881662368774414
    10. ' with' → logprob: -10.631662368774414

Token 174: ' train' (ID: 8513)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.04180039092898369
    2. 'wagon' → logprob: -3.9168004989624023
    3. ' train' → logprob: -5.791800498962402
    4. 'pe' → logprob: -5.791800498962402
    5. 'dp' → logprob: -6.416800498962402
    6. 'nou' → logprob: -6.541800498962402
    7. 'segment' → logprob: -6.666800498962402
    8. '0' → logprob: -7.041800498962402
    9. 'token' → logprob: -7.291800498962402
    10. 'che' → logprob: -7.416800498962402

Token 175: ' uniquement' (ID: 65527)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01492386870086193
    2. 'for' → logprob: -4.889924049377441
    3. ' dp' → logprob: -5.639924049377441
    4. '(dp' → logprob: -6.514924049377441
    5. ' at' → logprob: -7.514924049377441
    6. '[' → logprob: -7.514924049377441
    7. ' for' → logprob: -7.639924049377441
    8. ' =' → logprob: -8.514924049377441
    9. 'with' → logprob: -8.764924049377441
    10. ' with' → logprob: -9.764924049377441

Token 176: ' si' (ID: 1784)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.23348170518875122
    2. 'dp' → logprob: -2.3584816455841064
    3. ' en' → logprob: -3.1084816455841064
    4. 'avec' → logprob: -3.2334816455841064
    5. ' avec' → logprob: -4.4834818840026855
    6. 'with' → logprob: -4.8584818840026855
    7. 'from' → logprob: -6.2334818840026855
    8. 'par' → logprob: -6.2334818840026855
    9. '[' → logprob: -6.3584818840026855
    10. ' dp' → logprob: -6.7334818840026855

Token 177: ' la' (ID: 557)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.17059670388698578
    2. ' (' → logprob: -3.0455965995788574
    3. 'k' → logprob: -3.6705965995788574
    4. '(i' → logprob: -3.6705965995788574
    5. '(S' → logprob: -3.9205965995788574
    6. 'i' → logprob: -4.170596599578857
    7. ' S' → logprob: -4.420596599578857
    8. ' i' → logprob: -6.045596599578857
    9. '(M' → logprob: -6.295596599578857
    10. '(' → logprob: -6.420596599578857

Token 178: ' première' (ID: 23423)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.5866707563400269
    2. 'prem' → logprob: -1.0866707563400269
    3. 'first' → logprob: -2.8366708755493164
    4. 'i' → logprob: -3.7116708755493164
    5. 'next' → logprob: -5.711670875549316
    6. 'dé' → logprob: -5.836670875549316
    7. 'irst' → logprob: -6.086670875549316
    8. 'dp' → logprob: -6.086670875549316
    9. 'd' → logprob: -6.461670875549316
    10. ' premier' → logprob: -6.961670875549316

Token 179: ' voiture' (ID: 49186)
  Prédit: 'wagon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wagon' → logprob: -0.42118826508522034
    2. 'lett' → logprob: -1.671188235282898
    3. ' lettre' → logprob: -2.4211883544921875
    4. 'wag' → logprob: -3.6711883544921875
    5. ' wagon' → logprob: -4.9211883544921875
    6. 'vo' → logprob: -5.2961883544921875
    7. 'taken' → logprob: -5.9211883544921875
    8. 'I' → logprob: -6.0461883544921875
    9. 'Let' → logprob: -6.2961883544921875
    10. 'car' → logprob: -6.2961883544921875

Token 180: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.19743143022060394
    2. ' est' → logprob: -2.3224313259124756
    3. 'prise' → logprob: -3.6974313259124756
    4. 'vient' → logprob: -3.8224313259124756
    5. 'cho' → logprob: -5.447431564331055
    6. 's' → logprob: -5.697431564331055
    7. 'de' → logprob: -5.822431564331055
    8. ' is' → logprob: -5.822431564331055
    9. 'taken' → logprob: -5.947431564331055
    10. 'prises' → logprob: -6.072431564331055

Token 181: ' '' (ID: 461)
  Prédit: ''I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''I' → logprob: -0.009395611472427845
    2. 'I' → logprob: -5.134395599365234
    3. ' '' → logprob: -6.259395599365234
    4. '"I' → logprob: -6.759395599365234
    5. '‘I' → logprob: -9.009395599365234
    6. ''' → logprob: -9.134395599365234
    7. '’I' → logprob: -9.884395599365234
    8. '`' → logprob: -10.009395599365234
    9. ' I' → logprob: -11.009395599365234
    10. '```' → logprob: -11.634395599365234

Token 182: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -2.696889623621246e-06
    2. ''I' → logprob: -13.37500286102295
    3. ' I' → logprob: -14.50000286102295
    4. '`' → logprob: -16.250001907348633
    5. '_I' → logprob: -16.375001907348633
    6. 'O' → logprob: -16.500001907348633
    7. '"I' → logprob: -16.875001907348633
    8. '[I' → logprob: -17.000001907348633
    9. ''' → logprob: -17.125001907348633
    10. '```' → logprob: -17.250001907348633

Token 183: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0073628793470561504
    2. ''
' → logprob: -5.1323628425598145
    3. '',' → logprob: -7.8823628425598145
    4. 'S' → logprob: -8.257363319396973
    5. ']'' → logprob: -8.632363319396973
    6. ')'' → logprob: -9.507363319396973
    7. 's' → logprob: -9.632363319396973
    8. '']' → logprob: -9.632363319396973
    9. ''
' → logprob: -9.882363319396973
    10. ' '' → logprob: -10.132363319396973

Token 184: ' et' (ID: 859)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.19004519283771515
    2. 'for' → logprob: -2.065045118331909
    3. 'if' → logprob: -3.315045118331909
    4. ' for' → logprob: -5.065045356750488
    5. ' dp' → logprob: -6.065045356750488
    6. ' if' → logprob: -6.690045356750488
    7. ' and' → logprob: -11.190045356750488
    8. 'and' → logprob: -11.565045356750488
    9. '
' → logprob: -12.065045356750488
    10. ' ' → logprob: -12.190045356750488

Token 185: ' on' (ID: 402)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.736110270023346
    2. 'dp' → logprob: -1.4861102104187012
    3. ' (' → logprob: -1.9861102104187012
    4. '(S' → logprob: -2.611110210418701
    5. 'S' → logprob: -3.611110210418701
    6. 'k' → logprob: -4.111110210418701
    7. ' dp' → logprob: -4.111110210418701
    8. '(' → logprob: -4.736110210418701
    9. '(
' → logprob: -5.611110210418701
    10. '(k' → logprob: -5.986110210418701

Token 186: ' commence' (ID: 44755)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.405528724193573
    2. 'dp' → logprob: -1.5305287837982178
    3. 's' → logprob: -3.2805287837982178
    4. 'for' → logprob: -3.2805287837982178
    5. 'if' → logprob: -4.280528545379639
    6. 'S' → logprob: -5.030528545379639
    7. '```' → logprob: -5.530528545379639
    8. 'veux' → logprob: -6.030528545379639
    9. 'possible' → logprob: -6.155528545379639
    10. 'p' → logprob: -6.655528545379639

Token 187: ' à' (ID: 1221)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.8164771795272827
    2. 'if' → logprob: -1.3164771795272827
    3. ' with' → logprob: -2.5664772987365723
    4. ' if' → logprob: -3.3164772987365723
    5. 'dp' → logprob: -3.3164772987365723
    6. 'from' → logprob: -3.4414772987365723
    7. 'for' → logprob: -3.4414772987365723
    8. '=' → logprob: -4.691477298736572
    9. 's' → logprob: -4.691477298736572
    10. ' =' → logprob: -4.941477298736572

Token 188: ' partir' (ID: 12100)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5867714881896973
    2. 'prendre' → logprob: -0.9617714881896973
    3. 'i' → logprob: -3.3367714881896973
    4. 'S' → logprob: -4.336771488189697
    5. 'pr' → logprob: -6.086771488189697
    6. 'dp' → logprob: -6.211771488189697
    7. '1' → logprob: -6.336771488189697
    8. ' prendre' → logprob: -6.711771488189697
    9. 'cho' → logprob: -7.086771488189697
    10. '2' → logprob: -7.086771488189697

Token 189: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.26125121116638184
    2. '(' → logprob: -2.261251211166382
    3. 'for' → logprob: -2.886251211166382
    4. '(dp' → logprob: -3.386251211166382
    5. 'if' → logprob: -4.636251449584961
    6. ' dp' → logprob: -5.136251449584961
    7. '[' → logprob: -5.386251449584961
    8. ' of' → logprob: -6.136251449584961
    9. ' (' → logprob: -6.261251449584961
    10. 'S' → logprob: -6.386251449584961

Token 190: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03030679002404213
    2. ' dp' → logprob: -4.655306816101074
    3. '[' → logprob: -5.280306816101074
    4. 'for' → logprob: -5.780306816101074
    5. '#' → logprob: -5.905306816101074
    6. 's' → logprob: -6.155306816101074
    7. 'S' → logprob: -6.280306816101074
    8. 'from' → logprob: -7.155306816101074
    9. '0' → logprob: -7.405306816101074
    10. '(dp' → logprob: -7.530306816101074

Token 191: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4024012088775635
    2. 'S' → logprob: -1.5274012088775635
    3. '0' → logprob: -3.0274012088775635
    4. 'for' → logprob: -3.5274012088775635
    5. 'i' → logprob: -4.777400970458984
    6. '[' → logprob: -5.152400970458984
    7. ' dp' → logprob: -5.902400970458984
    8. 's' → logprob: -6.027400970458984
    9. '[
' → logprob: -6.152400970458984
    10. 'if' → logprob: -6.277400970458984

Token 192: ' la' (ID: 557)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.15091820061206818
    2. '0' → logprob: -2.6509182453155518
    3. 'i' → logprob: -3.5259182453155518
    4. 'dp' → logprob: -4.025918006896973
    5. ' S' → logprob: -4.775918006896973
    6. ' i' → logprob: -5.525918006896973
    7. ' ' → logprob: -6.150918006896973
    8. 'l' → logprob: -6.525918006896973
    9. ' dp' → logprob: -6.525918006896973
    10. 'k' → logprob: -7.025918006896973

Token 193: ' voiture' (ID: 49186)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.016353515908122063
    2. '0' → logprob: -5.266353607177734
    3. ' S' → logprob: -5.391353607177734
    4. 's' → logprob: -6.016353607177734
    5. 'i' → logprob: -7.141353607177734
    6. 'train' → logprob: -7.391353607177734
    7. 'prem' → logprob: -7.766353607177734
    8. 'dé' → logprob: -8.016353607177734
    9. 'd' → logprob: -8.391353607177734
    10. 'for' → logprob: -8.641353607177734

Token 194: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2166169881820679
    2. 'S' → logprob: -1.3416169881820679
    3. ' de' → logprob: -1.5916169881820679
    4. 's' → logprob: -2.0916171073913574
    5. 'de' → logprob: -2.5916171073913574
    6. ' ' → logprob: -4.341617107391357
    7. 'from' → logprob: -4.716617107391357
    8. '[' → logprob: -5.466617107391357
    9. ' S' → logprob: -5.966617107391357
    10. ' of' → logprob: -6.091617107391357

Token 195: '0' (ID: 15)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.2011268436908722
    2. 'S' → logprob: -2.32612681388855
    3. ' de' → logprob: -3.20112681388855
    4. '0' → logprob: -3.32612681388855
    5. 'from' → logprob: -5.576127052307129
    6. 's' → logprob: -5.951127052307129
    7. 'd' → logprob: -7.826127052307129
    8. '[' → logprob: -8.076127052307129
    9. ' ' → logprob: -8.826127052307129
    10. 'dans' → logprob: -9.451127052307129

Token 196: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01818588376045227
    2. ' for' → logprob: -4.643186092376709
    3. 'if' → logprob: -4.893186092376709
    4. 'dp' → logprob: -7.268186092376709
    5. ' if' → logprob: -9.39318561553955
    6. 's' → logprob: -10.14318561553955
    7. '
' → logprob: -10.76818561553955
    8. '0' → logprob: -10.89318561553955
    9. 'i' → logprob: -11.51818561553955
    10. '```' → logprob: -11.89318561553955

Token 197: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.020544925704598427
    2. ' S' → logprob: -3.89554500579834
    3. 'M' → logprob: -13.89554500579834
    4. ' ' → logprob: -14.89554500579834
    5. '(S' → logprob: -15.02054500579834
    6. 'range' → logprob: -15.02054500579834
    7. ' range' → logprob: -15.14554500579834
    8. ' ' → logprob: -15.64554500579834
    9. 's' → logprob: -15.89554500579834
    10. '0' → logprob: -15.89554500579834

Token 198: ' ou' (ID: 2031)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.017395077273249626
    2. 'dp' → logprob: -4.26739501953125
    3. 'for' → logprob: -5.76739501953125
    4. ' if' → logprob: -9.26739501953125
    5. '```' → logprob: -13.39239501953125
    6. '0' → logprob: -14.14239501953125
    7. ' for' → logprob: -14.39239501953125
    8. 's' → logprob: -14.89239501953125
    9. '
' → logprob: -15.39239501953125
    10. ' dp' → logprob: -15.64239501953125

Token 199: ' de' (ID: 334)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.5351206660270691
    2. ' T' → logprob: -0.9101206660270691
    3. ' de' → logprob: -4.785120487213135
    4. '#' → logprob: -7.035120487213135
    5. ' #' → logprob: -7.160120487213135
    6. ' ' → logprob: -7.410120487213135
    7. '0' → logprob: -7.785120487213135
    8. 'de' → logprob: -7.910120487213135
    9. ' ' → logprob: -8.160120964050293
    10. '```' → logprob: -9.535120964050293

Token 200: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.225567027926445
    2. ' T' → logprob: -1.6005669832229614
    3. 'S' → logprob: -9.225566864013672
    4. ' ' → logprob: -10.100566864013672
    5. ' S' → logprob: -12.100566864013672
    6. ' ' → logprob: -12.600566864013672
    7. '0' → logprob: -12.975566864013672
    8. ' la' → logprob: -14.600566864013672
    9. '1' → logprob: -14.725566864013672
    10. ',' → logprob: -15.350566864013672

Token 201: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03005732223391533
    2. 'for' → logprob: -3.530057430267334
    3. 'dp' → logprob: -8.155056953430176
    4. ' if' → logprob: -11.030056953430176
    5. 'i' → logprob: -13.530056953430176
    6. '
' → logprob: -14.030056953430176
    7. ' for' → logprob: -14.530056953430176
    8. '```' → logprob: -14.905056953430176
    9. '#' → logprob: -15.780056953430176
    10. 'ans' → logprob: -16.780057907104492

Token 202: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3174021542072296
    2. 'if' → logprob: -1.3174021244049072
    3. 'dp' → logprob: -6.317402362823486
    4. ' for' → logprob: -6.567402362823486
    5. ' if' → logprob: -7.192402362823486
    6. '
' → logprob: -9.567401885986328
    7. 's' → logprob: -10.317401885986328
    8. 'S' → logprob: -11.317401885986328
    9. '#' → logprob: -11.442401885986328
    10. '  
' → logprob: -11.817401885986328

Token 203: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3875746726989746
    2. 'i' → logprob: -1.1375746726989746
    3. ' start' → logprob: -8.762575149536133
    4. 'k' → logprob: -9.262575149536133
    5. ' s' → logprob: -9.637575149536133
    6. 'start' → logprob: -9.887575149536133
    7. ' k' → logprob: -10.012575149536133
    8. 's' → logprob: -10.012575149536133
    9. ' source' → logprob: -10.137575149536133
    10. '(i' → logprob: -10.762575149536133

Token 204: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05495777353644371
    2. 'in' → logprob: -2.929957866668701
    3. ' ' → logprob: -9.804957389831543
    4. '0' → logprob: -12.179957389831543
    5. 's' → logprob: -12.554957389831543
    6. ',' → logprob: -12.554957389831543
    7. '```' → logprob: -13.054957389831543
    8. '1' → logprob: -13.554957389831543
    9. 'In' → logprob: -13.804957389831543
    10. 'import' → logprob: -14.429957389831543

Token 205: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006845257245004177
    2. ' range' → logprob: -5.256845474243164
    3. '[' → logprob: -6.506845474243164
    4. '0' → logprob: -9.506845474243164
    5. '(' → logprob: -10.506845474243164
    6. '(range' → logprob: -11.381845474243164
    7. ' [' → logprob: -13.506845474243164
    8. ' ' → logprob: -13.881845474243164
    9. '   ' → logprob: -14.756845474243164
    10. '[-' → logprob: -15.131845474243164

Token 206: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.6326343417167664
    2. '(' → logprob: -0.7576343417167664
    3. '(min' → logprob: -11.632634162902832
    4. '(max' → logprob: -12.007634162902832
    5. '(len' → logprob: -12.507634162902832
    6. '((' → logprob: -12.632634162902832
    7. '()' → logprob: -12.882634162902832
    8. '(S' → logprob: -13.007634162902832
    9. ' (' → logprob: -13.382634162902832
    10. '1' → logprob: -13.507634162902832

Token 207: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.028938431292772293
    2. '):
' → logprob: -4.028938293457031
    3. '):' → logprob: -5.028938293457031
    4. ' +' → logprob: -5.653938293457031
    5. '1' → logprob: -7.653938293457031
    6. '2' → logprob: -9.153938293457031
    7. ' ' → logprob: -10.653938293457031
    8. ')' → logprob: -11.528938293457031
    9. '3' → logprob: -11.653938293457031
    10. '
' → logprob: -11.653938293457031

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036465611308813095
    2. ' if' → logprob: -3.536465644836426
    3. 'if' → logprob: -5.911465644836426
    4. ' for' → logprob: -6.161465644836426
    5. 'for' → logprob: -6.411465644836426
    6. ' ' → logprob: -9.411465644836426
    7. '<|end|>' → logprob: -10.036465644836426
    8. '	if' → logprob: -10.161465644836426
    9. '   ' → logprob: -10.661465644836426
    10. '```' → logprob: -11.286465644836426

Token 209: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.9003655910491943
    2. '   ' → logprob: -1.2753655910491943
    3. ' if' → logprob: -1.2753655910491943
    4. 'for' → logprob: -3.5253655910491943
    5. ' for' → logprob: -5.275365829467773
    6. ' ' → logprob: -8.150365829467773
    7. '	if' → logprob: -9.775365829467773
    8. '       ' → logprob: -12.150365829467773
    9. '    
' → logprob: -12.400365829467773
    10. '    ' → logprob: -13.150365829467773

Token 210: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6326600313186646
    2. ' S' → logprob: -0.7576600313186646
    3. '   ' → logprob: -10.382659912109375
    4. ' ' → logprob: -10.632659912109375
    5. ' ' → logprob: -13.257659912109375
    6. ' i' → logprob: -14.007659912109375
    7. '(S' → logprob: -14.132659912109375
    8. '  ' → logprob: -14.507659912109375
    9. '    ' → logprob: -14.882659912109375
    10. 'i' → logprob: -15.257659912109375

Token 211: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2352385965641588e-05
    2. '[' → logprob: -11.750012397766113
    3. ' [' → logprob: -12.750012397766113
    4. '[I' → logprob: -13.875012397766113
    5. 'i' → logprob: -15.750012397766113
    6. '[
' → logprob: -16.250011444091797
    7. '```' → logprob: -16.625011444091797
    8. '[S' → logprob: -17.250011444091797
    9. '   ' → logprob: -17.375011444091797
    10. ']' → logprob: -17.375011444091797

Token 212: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14567908644676208
    2. ']==' → logprob: -2.520678997039795
    3. '==' → logprob: -3.145678997039795
    4. ']=='' → logprob: -5.270678997039795
    5. '[' → logprob: -5.645678997039795
    6. ' ==' → logprob: -5.895678997039795
    7. ' ]' → logprob: -8.395679473876953
    8. '=='' → logprob: -8.520679473876953
    9. '[i' → logprob: -9.395679473876953
    10. '']' → logprob: -9.645679473876953

Token 213: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02748316526412964
    2. ' ==' → logprob: -3.6524832248687744
    3. '=='' → logprob: -7.277482986450195
    4. '=' → logprob: -7.902482986450195
    5. '[' → logprob: -9.652482986450195
    6. '==
' → logprob: -10.777482986450195
    7. ' ' → logprob: -11.527482986450195
    8. ']==' → logprob: -12.527482986450195
    9. '===' → logprob: -12.652482986450195
    10. ']' → logprob: -12.902482986450195

Token 214: ' '' (ID: 461)
  Prédit: ''I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''I' → logprob: -0.010160816833376884
    2. ' '' → logprob: -4.63516092300415
    3. 'I' → logprob: -8.510160446166992
    4. ''' → logprob: -9.135160446166992
    5. '"I' → logprob: -9.635160446166992
    6. ' I' → logprob: -11.135160446166992
    7. '’I' → logprob: -12.135160446166992
    8. '‘I' → logprob: -12.635160446166992
    9. ''O' → logprob: -13.135160446166992
    10. ' ' → logprob: -13.260160446166992

Token 215: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0006284446571953595
    2. ''I' → logprob: -7.375628471374512
    3. '"I' → logprob: -14.250628471374512
    4. ''' → logprob: -14.500628471374512
    5. ' I' → logprob: -15.375628471374512
    6. '‘I' → logprob: -16.250627517700195
    7. '’I' → logprob: -16.375627517700195
    8. ''i' → logprob: -17.000627517700195
    9. '['' → logprob: -17.000627517700195
    10. '	I' → logprob: -17.375627517700195

Token 216: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.22609205543994904
    2. '':
' → logprob: -1.7260921001434326
    3. ''' → logprob: -4.4760918617248535
    4. ':' → logprob: -4.8510918617248535
    5. 'dp' → logprob: -5.9760918617248535
    6. '':
' → logprob: -6.9760918617248535
    7. ':
' → logprob: -7.1010918617248535
    8. '   ' → logprob: -8.726092338562012
    9. ' dp' → logprob: -8.851092338562012
    10. ' and' → logprob: -9.101092338562012

Token 217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009606625884771347
    2. ' dp' → logprob: -5.009606838226318
    3. '   ' → logprob: -6.509606838226318
    4. 'dp' → logprob: -6.634606838226318
    5. '	dp' → logprob: -10.13460636138916
    6. '           ' → logprob: -11.63460636138916
    7. '     ' → logprob: -12.50960636138916
    8. '    ' → logprob: -12.50960636138916
    9. '      ' → logprob: -12.63460636138916
    10. ' for' → logprob: -12.63460636138916

Token 218: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.20198605954647064
    2. ' dp' → logprob: -1.7019860744476318
    3. '   ' → logprob: -7.701985836029053
    4. '       ' → logprob: -9.576986312866211
    5. '	dp' → logprob: -10.701986312866211
    6. ' ' → logprob: -11.701986312866211
    7. '           ' → logprob: -12.451986312866211
    8. 'for' → logprob: -12.451986312866211
    9. ' for' → logprob: -12.826986312866211
    10. '
' → logprob: -12.826986312866211

Token 219: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.796184723294573e-06
    2. '[' → logprob: -12.375005722045898
    3. 'i' → logprob: -13.625005722045898
    4. ' [' → logprob: -15.875005722045898
    5. '[I' → logprob: -16.3750057220459
    6. '   ' → logprob: -18.0000057220459
    7. '```' → logprob: -18.1250057220459
    8. '[S' → logprob: -19.1250057220459
    9. '][' → logprob: -19.1250057220459
    10. '
' → logprob: -19.3750057220459

Token 220: '+' (ID: 10)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.008982546627521515
    2. '+' → logprob: -4.7589826583862305
    3. ']' → logprob: -8.75898265838623
    4. '[i' → logprob: -9.38398265838623
    5. '[' → logprob: -10.00898265838623
    6. ' ][' → logprob: -10.25898265838623
    7. ' +' → logprob: -10.63398265838623
    8. '+i' → logprob: -12.00898265838623
    9. '   ' → logprob: -12.75898265838623
    10. '1' → logprob: -12.75898265838623

Token 221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002222516923211515
    2. '0' → logprob: -8.875222206115723
    3. ' ' → logprob: -9.500222206115723
    4. '```' → logprob: -12.750222206115723
    5. '   ' → logprob: -13.000222206115723
    6. '][' → logprob: -13.625222206115723
    7. '2' → logprob: -15.000222206115723
    8. ',' → logprob: -16.00022315979004
    9. '+' → logprob: -16.12522315979004
    10. ']' → logprob: -16.37522315979004

Token 222: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04385478422045708
    2. '[' → logprob: -3.1688547134399414
    3. '0' → logprob: -7.543854713439941
    4. ']' → logprob: -9.043854713439941
    5. ')[' → logprob: -9.918854713439941
    6. '   ' → logprob: -10.168854713439941
    7. '}[' → logprob: -10.543854713439941
    8. ' ' → logprob: -11.168854713439941
    9. ' [' → logprob: -11.293854713439941
    10. ' ][' → logprob: -11.418854713439941

Token 223: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.460291767027229e-05
    2. 'i' → logprob: -10.125094413757324
    3. ' ' → logprob: -10.875094413757324
    4. 'N' → logprob: -11.250094413757324
    5. '2' → logprob: -11.250094413757324
    6. '   ' → logprob: -12.500094413757324
    7. 'j' → logprob: -12.750094413757324
    8. '    ' → logprob: -14.375094413757324
    9. '  ' → logprob: -14.500094413757324
    10. '```' → logprob: -14.625094413757324

Token 224: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -1.5451681974809617e-05
    2. '[' → logprob: -11.750015258789062
    3. ']' → logprob: -12.000015258789062
    4. ' ][' → logprob: -14.625015258789062
    5. '0' → logprob: -14.750015258789062
    6. ''][' → logprob: -16.125015258789062
    7. ']=' → logprob: -16.250015258789062
    8. '2' → logprob: -16.375015258789062
    9. '1' → logprob: -16.875015258789062
    10. '=' → logprob: -16.875015258789062

Token 225: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '2' → logprob: -18.0
    4. '   ' → logprob: -18.75
    5. '۰' → logprob: -19.5
    6. '```' → logprob: -19.5
    7. '1' → logprob: -19.8125
    8. '０' → logprob: -20.8125
    9. '০' → logprob: -20.8125
    10. '०' → logprob: -21.6875

Token 226: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.949026571121067e-05
    2. ']=' → logprob: -9.375099182128906
    3. ' ]' → logprob: -11.250099182128906
    4. '=' → logprob: -13.375099182128906
    5. ' =' → logprob: -16.250099182128906
    6. ')' → logprob: -18.500099182128906
    7. '`]' → logprob: -18.750099182128906
    8. '1' → logprob: -19.000099182128906
    9. '']' → logprob: -19.875099182128906
    10. '   ' → logprob: -20.000099182128906

Token 227: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00020354038861114532
    2. ' =' → logprob: -8.500203132629395
    3. '=max' → logprob: -19.75020408630371
    4. '=

' → logprob: -21.37520408630371
    5. ']=' → logprob: -22.12520408630371
    6. '＝' → logprob: -22.50020408630371
    7. '=int' → logprob: -22.50020408630371
    8. '>' → logprob: -22.50020408630371
    9. ' ' → logprob: -22.75020408630371
    10. '=}' → logprob: -22.87520408630371

Token 228: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -15.375004768371582
    4. 'i' → logprob: -15.875004768371582
    5. 'max' → logprob: -18.125003814697266
    6. '  ' → logprob: -19.000003814697266
    7. '(' → logprob: -19.000003814697266
    8. ' ' → logprob: -19.000003814697266
    9. '１' → logprob: -19.687503814697266
    10. '0' → logprob: -19.937503814697266

Token 229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.749814019713085e-06
    2. ' ' → logprob: -12.625006675720215
    3. 'i' → logprob: -12.750006675720215
    4. '   ' → logprob: -14.750006675720215
    5. '(' → logprob: -16.62500762939453
    6. '(i' → logprob: -18.62500762939453
    7. ' i' → logprob: -18.87500762939453
    8. '  ' → logprob: -19.06250762939453
    9. ' ' → logprob: -19.06250762939453
    10. '`' → logprob: -19.12500762939453

Token 230: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001981333363801241
    2. ' for' → logprob: -6.501981258392334
    3. '   ' → logprob: -8.251981735229492
    4. '
' → logprob: -8.501981735229492
    5. '<|end|>' → logprob: -12.126981735229492
    6. '       ' → logprob: -12.626981735229492
    7. '        
' → logprob: -13.126981735229492
    8. '    
' → logprob: -13.751981735229492
    9. '```' → logprob: -13.876981735229492
    10. '	for' → logprob: -14.001981735229492

Token 231: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0077951829880476
    2. ' for' → logprob: -5.507795333862305
    3. '   ' → logprob: -5.632795333862305
    4. '
' → logprob: -9.257795333862305
    5. '       ' → logprob: -10.882795333862305
    6. '	for' → logprob: -12.507795333862305
    7. '<|end|>' → logprob: -12.632795333862305
    8. '        
' → logprob: -12.757795333862305
    9. '```' → logprob: -13.132795333862305
    10. '    
' → logprob: -13.382795333862305

Token 232: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.640352725982666
    2. 'for' → logprob: -0.765352725982666
    3. ' for' → logprob: -4.890352725982666
    4. '
' → logprob: -9.765352249145508
    5. 'if' → logprob: -10.015352249145508
    6. ' ' → logprob: -10.515352249145508
    7. '    
' → logprob: -10.515352249145508
    8. '       ' → logprob: -11.140352249145508
    9. '        
' → logprob: -11.890352249145508
    10. '	for' → logprob: -12.140352249145508

Token 233: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009933745488524437
    2. ':
' → logprob: -4.759933948516846
    3. '   ' → logprob: -7.509933948516846
    4. ' :' → logprob: -7.884933948516846
    5. 'if' → logprob: -9.134933471679688
    6. '       ' → logprob: -9.384933471679688
    7. ' if' → logprob: -9.384933471679688
    8. '    ' → logprob: -10.384933471679688
    9. ' :
' → logprob: -10.634933471679688
    10. '.' → logprob: -11.759933471679688

Token 234: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32287946343421936
    2. '       ' → logprob: -2.3228795528411865
    3. 'pass' → logprob: -2.5728795528411865
    4. 'break' → logprob: -3.0728795528411865
    5. ' pass' → logprob: -3.5728795528411865
    6. ' break' → logprob: -4.072879314422607
    7. 'for' → logprob: -4.947879314422607
    8. ' for' → logprob: -6.197879314422607
    9. 'continue' → logprob: -8.197879791259766
    10. '```' → logprob: -8.572879791259766

Token 235: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.06940062344074249
    2. 'pass' → logprob: -2.8194005489349365
    3. 'continue' → logprob: -5.069400787353516
    4. ' break' → logprob: -7.069400787353516
    5. '   ' → logprob: -8.694400787353516
    6. ' pass' → logprob: -9.944400787353516
    7. 'dp' → logprob: -10.444400787353516
    8. 'for' → logprob: -11.319400787353516
    9. ' continue' → logprob: -12.194400787353516
    10. '0' → logprob: -12.819400787353516

Token 236: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.4849443838757e-06
    2. ' for' → logprob: -12.375004768371582
    3. '```' → logprob: -15.750004768371582
    4. '   ' → logprob: -18.750003814697266
    5. '    
' → logprob: -19.250003814697266
    6. 'from' → logprob: -19.250003814697266
    7. '
' → logprob: -20.375003814697266
    8. '	for' → logprob: -20.625003814697266
    9. '<|end|>' → logprob: -20.750003814697266
    10. ')' → logprob: -20.875003814697266

Token 237: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.9153885558771435e-06
    2. ' for' → logprob: -12.125005722045898
    3. '   ' → logprob: -14.875005722045898
    4. '```' → logprob: -16.5000057220459
    5. '    
' → logprob: -18.5000057220459
    6. 'from' → logprob: -18.7500057220459
    7. ' ' → logprob: -19.6250057220459
    8. '	for' → logprob: -20.2500057220459
    9. '0' → logprob: -20.2500057220459
    10. 'i' → logprob: -20.6250057220459

Token 238: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6955292820930481
    2. ' j' → logprob: -0.6955292820930481
    3. 'i' → logprob: -6.695529460906982
    4. ' i' → logprob: -6.820529460906982
    5. ' ' → logprob: -10.820528984069824
    6. '_j' → logprob: -11.070528984069824
    7. '0' → logprob: -11.445528984069824
    8. '   ' → logprob: -13.070528984069824
    9. '	j' → logprob: -14.320528984069824
    10. '  ' → logprob: -14.695528984069824

Token 239: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013379817828536034
    2. 'in' → logprob: -6.626338005065918
    3. 'range' → logprob: -11.751338005065918
    4. ' range' → logprob: -12.751338005065918
    5. ' ' → logprob: -14.376338005065918
    6. '   ' → logprob: -15.001338005065918
    7. '(' → logprob: -15.001338005065918
    8. '1' → logprob: -17.5013370513916
    9. '  ' → logprob: -17.7513370513916
    10. 'int' → logprob: -17.7513370513916

Token 240: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0486019104719162
    2. ' range' → logprob: -3.0486018657684326
    3. '(N' → logprob: -11.923602104187012
    4. '1' → logprob: -12.548602104187012
    5. 'N' → logprob: -12.923602104187012
    6. '(range' → logprob: -13.673602104187012
    7. ' ' → logprob: -15.048602104187012
    8. '(' → logprob: -15.923602104187012
    9. 'for' → logprob: -16.173601150512695
    10. 'in' → logprob: -16.423601150512695

Token 241: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0001214237418025732
    2. '(' → logprob: -9.125121116638184
    3. 'N' → logprob: -11.500121116638184
    4. ' (' → logprob: -14.250121116638184
    5. '   ' → logprob: -14.500121116638184
    6. '1' → logprob: -14.875121116638184
    7. '(M' → logprob: -15.250121116638184
    8. 'range' → logprob: -15.375121116638184
    9. ' ' → logprob: -15.500121116638184
    10. '(n' → logprob: -16.7501220703125

Token 242: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8083057403564453
    2. '+' → logprob: -1.1833057403564453
    3. '):' → logprob: -1.4333057403564453
    4. '(' → logprob: -5.308305740356445
    5. ':' → logprob: -6.183305740356445
    6. '   ' → logprob: -6.683305740356445
    7. 'for' → logprob: -7.933305740356445
    8. ')' → logprob: -8.058305740356445
    9. '1' → logprob: -8.808305740356445
    10. ' ' → logprob: -8.933305740356445

Token 243: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.081584716506768e-05
    2. ' if' → logprob: -11.375020980834961
    3. 'if' → logprob: -12.000020980834961
    4. ':' → logprob: -13.250020980834961
    5. ':
' → logprob: -15.125020980834961
    6. '```' → logprob: -15.250020980834961
    7. '	if' → logprob: -15.625020980834961
    8. '   ' → logprob: -15.875020980834961
    9. ' ' → logprob: -16.00002098083496
    10. '  ' → logprob: -16.12502098083496

Token 244: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.017297012731432915
    2. '   ' → logprob: -4.26729679107666
    3. ' if' → logprob: -5.76729679107666
    4. '	if' → logprob: -15.39229679107666
    5. ' ' → logprob: -15.76729679107666
    6. '```' → logprob: -16.767297744750977
    7. '  ' → logprob: -16.892297744750977
    8. '    ' → logprob: -17.892297744750977
    9. '       ' → logprob: -18.392297744750977
    10. '
' → logprob: -19.142297744750977

Token 245: ' T' (ID: 353)
  Prédit: ' T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.17975309491157532
    2. 'T' → logprob: -1.804753065109253
    3. '   ' → logprob: -12.304753303527832
    4. ' ' → logprob: -13.054753303527832
    5. ' ' → logprob: -14.554753303527832
    6. '  ' → logprob: -14.929753303527832
    7. '(T' → logprob: -15.617253303527832
    8. '    ' → logprob: -16.117252349853516
    9. '	T' → logprob: -16.117252349853516
    10. 'S' → logprob: -16.179752349853516

Token 246: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.961759259458631e-06
    2. '[i' → logprob: -13.125004768371582
    3. '[' → logprob: -13.500004768371582
    4. 'j' → logprob: -13.625004768371582
    5. '   ' → logprob: -15.625004768371582
    6. '[
' → logprob: -16.8750057220459
    7. ' [' → logprob: -17.1250057220459
    8. '```' → logprob: -18.0000057220459
    9. '[J' → logprob: -18.1250057220459
    10. '[T' → logprob: -18.7500057220459

Token 247: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002417395357042551
    2. ']==' → logprob: -6.50241756439209
    3. '==' → logprob: -7.25241756439209
    4. ' ==' → logprob: -8.75241756439209
    5. '']' → logprob: -10.87741756439209
    6. ' ]' → logprob: -11.37741756439209
    7. ']=='' → logprob: -11.50241756439209
    8. '[' → logprob: -12.75241756439209
    9. ')' → logprob: -13.25241756439209
    10. '   ' → logprob: -14.62741756439209

Token 248: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07057849317789078
    2. ' ==' → logprob: -2.6955785751342773
    3. '=='' → logprob: -7.695578575134277
    4. ''' → logprob: -9.070578575134277
    5. '=' → logprob: -10.695578575134277
    6. ']==' → logprob: -10.945578575134277
    7. ']' → logprob: -10.945578575134277
    8. '[' → logprob: -11.945578575134277
    9. ')' → logprob: -12.820578575134277
    10. ' =='' → logprob: -13.570578575134277

Token 249: ' '' (ID: 461)
  Prédit: ''I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''I' → logprob: -0.2557753920555115
    2. ' '' → logprob: -1.5057754516601562
    3. ''' → logprob: -5.630775451660156
    4. ''O' → logprob: -9.380775451660156
    5. ' I' → logprob: -9.630775451660156
    6. 'I' → logprob: -9.755775451660156
    7. ' ' → logprob: -10.380775451660156
    8. '‘I' → logprob: -12.630775451660156
    9. '"I' → logprob: -12.880775451660156
    10. '  ' → logprob: -12.880775451660156

Token 250: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.055026598274707794
    2. ''I' → logprob: -2.9300265312194824
    3. ''' → logprob: -9.18002700805664
    4. ' I' → logprob: -11.30502700805664
    5. '"I' → logprob: -11.80502700805664
    6. ''i' → logprob: -11.93002700805664
    7. '‘I' → logprob: -12.68002700805664
    8. ' '' → logprob: -12.80502700805664
    9. '’I' → logprob: -13.18002700805664
    10. '`' → logprob: -13.43002700805664

Token 251: '':
' (ID: 7669)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.26626336574554443
    2. ''' → logprob: -1.8912633657455444
    3. ']' → logprob: -3.016263484954834
    4. '   ' → logprob: -4.891263484954834
    5. '')' → logprob: -5.016263484954834
    6. '==' → logprob: -5.016263484954834
    7. ' ==' → logprob: -5.516263484954834
    8. '':
' → logprob: -6.266263484954834
    9. ':
' → logprob: -6.641263484954834
    10. '':' → logprob: -6.766263484954834

Token 252: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8037114143371582
    2. '       ' → logprob: -0.9287114143371582
    3. ' dp' → logprob: -2.428711414337158
    4. '   ' → logprob: -2.678711414337158
    5. '	dp' → logprob: -8.5537109375
    6. '(dp' → logprob: -9.5537109375
    7. '_dp' → logprob: -10.0537109375
    8. ' ' → logprob: -10.3037109375
    9. '           ' → logprob: -10.8037109375
    10. '      ' → logprob: -10.9287109375

Token 253: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0004940562648698688
    2. ' dp' → logprob: -7.625494003295898
    3. '0' → logprob: -12.625494003295898
    4. '   ' → logprob: -13.375494003295898
    5. 'dj' → logprob: -14.125494003295898
    6. '	dp' → logprob: -16.0004940032959
    7. ' ' → logprob: -16.5004940032959
    8. 'dt' → logprob: -17.2504940032959
    9. '(dp' → logprob: -17.7504940032959
    10. '  ' → logprob: -17.8754940032959

Token 254: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000271706550847739
    2. '0' → logprob: -8.250271797180176
    3. '[j' → logprob: -12.250271797180176
    4. '[i' → logprob: -12.500271797180176
    5. ' [' → logprob: -14.125271797180176
    6. ' ' → logprob: -14.625271797180176
    7. 'j' → logprob: -15.375271797180176
    8. '[][' → logprob: -15.875271797180176
    9. '   ' → logprob: -16.00027084350586
    10. '[[' → logprob: -16.37527084350586

Token 255: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031970853451639414
    2. 'j' → logprob: -5.753197193145752
    3. ' ' → logprob: -11.128196716308594
    4. '[j' → logprob: -13.128196716308594
    5. '   ' → logprob: -13.503196716308594
    6. ' j' → logprob: -14.753196716308594
    7. '[' → logprob: -14.753196716308594
    8. '(j' → logprob: -16.253196716308594
    9. '  ' → logprob: -16.503196716308594
    10. '(' → logprob: -16.628196716308594

Token 256: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.07989620417356491
    2. 'j' → logprob: -2.5798962116241455
    3. '   ' → logprob: -7.329895973205566
    4. '][' → logprob: -8.079895973205566
    5. '+j' → logprob: -11.454895973205566
    6. ' j' → logprob: -12.079895973205566
    7. '(j' → logprob: -12.204895973205566
    8. '[' → logprob: -12.454895973205566
    9. '	j' → logprob: -12.454895973205566
    10. '
' → logprob: -13.579895973205566

Token 257: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.512236498361744e-07
    2. ' j' → logprob: -14.750000953674316
    3. '[j' → logprob: -17.0
    4. '   ' → logprob: -17.125
    5. '(j' → logprob: -18.0
    6. '	j' → logprob: -20.0
    7. '
' → logprob: -20.125
    8. '```' → logprob: -20.625
    9. ' ' → logprob: -21.0
    10. '{' → logprob: -21.0

Token 258: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.088346359931165e-07
    2. ' +' → logprob: -14.500000953674316
    3. '+j' → logprob: -15.375000953674316
    4. '1' → logprob: -16.375
    5. '+
' → logprob: -18.5
    6. '   ' → logprob: -19.875
    7. '+i' → logprob: -20.125
    8. '+[' → logprob: -20.125
    9. '+=' → logprob: -20.5
    10. '＋' → logprob: -20.75

Token 259: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.875003814697266
    3. '   ' → logprob: -14.000003814697266
    4. '```' → logprob: -15.875003814697266
    5. '0' → logprob: -16.750003814697266
    6. '+' → logprob: -17.750003814697266
    7. '  ' → logprob: -18.000003814697266
    8. ']' → logprob: -18.562503814697266
    9. '       ' → logprob: -18.875003814697266
    10. '           ' → logprob: -19.125003814697266

Token 260: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -9.722539834911004e-05
    2. '[' → logprob: -9.375097274780273
    3. ']' → logprob: -11.500097274780273
    4. ' ][' → logprob: -13.250097274780273
    5. '0' → logprob: -16.500097274780273
    6. ''][' → logprob: -16.625097274780273
    7. '   ' → logprob: -16.875097274780273
    8. '1' → logprob: -17.250097274780273
    9. '"][' → logprob: -17.375097274780273
    10. '}[' → logprob: -17.625097274780273

Token 261: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '0' → logprob: -15.25
    3. ' ' → logprob: -16.5
    4. '```' → logprob: -18.125
    5. '   ' → logprob: -18.25
    6. ']' → logprob: -19.625
    7. '[' → logprob: -19.875
    8. '۱' → logprob: -20.25
    9. '  ' → logprob: -20.375
    10. '2' → logprob: -20.6875

Token 262: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.4272752852994017e-05
    2. ']=' → logprob: -11.00002384185791
    3. '=' → logprob: -12.37502384185791
    4. ' ]' → logprob: -12.62502384185791
    5. ')' → logprob: -17.000024795532227
    6. '   ' → logprob: -17.250024795532227
    7. ' =' → logprob: -18.125024795532227
    8. '']' → logprob: -18.875024795532227
    9. '`]' → logprob: -19.625024795532227
    10. ' ' → logprob: -19.875024795532227

Token 263: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005530327325686812
    2. ' =' → logprob: -7.500553131103516
    3. ']' → logprob: -19.625553131103516
    4. ']=' → logprob: -20.500553131103516
    5. ' ' → logprob: -21.375553131103516
    6. '   ' → logprob: -21.625553131103516
    7. ')' → logprob: -22.000553131103516
    8. '＝' → logprob: -23.875553131103516
    9. '=
' → logprob: -23.875553131103516
    10. ')=' → logprob: -23.875553131103516

Token 264: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.500001907348633
    4. '```' → logprob: -20.750001907348633
    5. '  ' → logprob: -22.375001907348633
    6. '0' → logprob: -22.625001907348633
    7. '۱' → logprob: -23.375001907348633
    8. '１' → logprob: -23.375001907348633
    9. '       ' → logprob: -23.625001907348633
    10. '           ' → logprob: -24.125001907348633

Token 265: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -19.375
    4. '```' → logprob: -21.5
    5. '  ' → logprob: -22.25
    6. '=' → logprob: -22.75
    7. '0' → logprob: -22.75
    8. '۱' → logprob: -22.8125
    9. '１' → logprob: -23.1875
    10. '' → logprob: -23.6875

Token 266: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.747814349073451e-05
    2. 'else' → logprob: -11.000017166137695
    3. '<|end|>' → logprob: -15.750017166137695
    4. ' else' → logprob: -16.000017166137695
    5. '	else' → logprob: -16.500017166137695
    6. '  ' → logprob: -16.625017166137695
    7. '```' → logprob: -16.875017166137695
    8. '       ' → logprob: -16.875017166137695
    9. '<|end|>' → logprob: -17.250017166137695
    10. '   ' → logprob: -17.250017166137695

Token 267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.7968066206085496e-05
    2. 'else' → logprob: -10.500027656555176
    3. ' else' → logprob: -15.375027656555176
    4. '  ' → logprob: -16.500028610229492
    5. ' ' → logprob: -17.000028610229492
    6. '	else' → logprob: -17.500028610229492
    7. '   ' → logprob: -17.500028610229492
    8. '       ' → logprob: -17.625028610229492
    9. 'for' → logprob: -17.875028610229492
    10. '```' → logprob: -18.125028610229492

Token 268: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.005584013648331165
    2. ' else' → logprob: -5.505584239959717
    3. '   ' → logprob: -6.505584239959717
    4. '	else' → logprob: -12.130583763122559
    5. ' ' → logprob: -13.130583763122559
    6. '  ' → logprob: -13.755583763122559
    7. 'elif' → logprob: -14.005583763122559
    8. '```' → logprob: -17.130584716796875
    9. '       ' → logprob: -18.255584716796875
    10. '
' → logprob: -18.255584716796875

Token 269: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009008764289319515
    2. ':' → logprob: -4.759008884429932
    3. ':
' → logprob: -8.509008407592773
    4. '   ' → logprob: -9.634008407592773
    5. '           ' → logprob: -9.759008407592773
    6. '	break' → logprob: -10.384008407592773
    7. '	' → logprob: -11.509008407592773
    8. '<|end|>' → logprob: -11.759008407592773
    9. '	   ' → logprob: -12.384008407592773
    10. '	       ' → logprob: -12.509008407592773

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008197537390515208
    2. 'break' → logprob: -7.500819683074951
    3. ' break' → logprob: -8.25082015991211
    4. '	break' → logprob: -12.37582015991211
    5. '   ' → logprob: -13.62582015991211
    6. '           ' → logprob: -15.75082015991211
    7. '```' → logprob: -15.87582015991211
    8. '	' → logprob: -17.75082015991211
    9. '      ' → logprob: -18.25082015991211
    10. '_break' → logprob: -18.50082015991211

Token 271: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.001562000485137105
    2. '       ' → logprob: -7.001562118530273
    3. ' break' → logprob: -7.501562118530273
    4. '   ' → logprob: -9.626562118530273
    5. '	break' → logprob: -10.376562118530273
    6. '           ' → logprob: -14.251562118530273
    7. '```' → logprob: -16.626562118530273
    8. '_break' → logprob: -16.876562118530273
    9. '
' → logprob: -17.126562118530273
    10. 'Break' → logprob: -17.376562118530273

Token 272: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00040648187859915197
    2. ' for' → logprob: -7.875406265258789
    3. '```' → logprob: -11.000406265258789
    4. '<|end|>' → logprob: -13.000406265258789
    5. ')' → logprob: -13.375406265258789
    6. '#' → logprob: -13.500406265258789
    7. 'Next' → logprob: -13.625406265258789
    8. '
' → logprob: -13.625406265258789
    9. 'For' → logprob: -14.000406265258789
    10. '``' → logprob: -15.125406265258789

Token 273: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00027432903880253434
    2. ' for' → logprob: -8.250274658203125
    3. '```' → logprob: -12.500274658203125
    4. '#' → logprob: -12.625274658203125
    5. '<|end|>' → logprob: -12.750274658203125
    6. ')' → logprob: -14.625274658203125
    7. '0' → logprob: -14.625274658203125
    8. 'For' → logprob: -15.000274658203125
    9. 'from' → logprob: -15.125274658203125
    10. '...' → logprob: -15.500274658203125

Token 274: ' Fonction' (ID: 189149)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.088346359931165e-07
    2. ' for' → logprob: -14.000000953674316
    3. 'from' → logprob: -16.875
    4. '#' → logprob: -19.125
    5. 'def' → logprob: -19.375
    6. '```' → logprob: -20.125
    7. '
' → logprob: -20.5
    8. 'For' → logprob: -21.375
    9. '   ' → logprob: -21.75
    10. 'max' → logprob: -22.0

Token 275: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001259995042346418
    2. ' def' → logprob: -7.751259803771973
    3. 's' → logprob: -8.501259803771973
    4. 'is' → logprob: -8.751259803771973
    5. '#' → logprob: -9.501259803771973
    6. 'valid' → logprob: -9.501259803771973
    7. 'for' → logprob: -9.751259803771973
    8. '(' → logprob: -10.001259803771973
    9. ' is' → logprob: -10.626259803771973
    10. 'dp' → logprob: -10.751259803771973

Token 276: ' savoir' (ID: 22835)
  Prédit: 'ver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ver' → logprob: -1.8219201564788818
    2. 'altern' → logprob: -1.9469201564788818
    3. 'est' → logprob: -2.071920156478882
    4. 'is' → logprob: -2.071920156478882
    5. 'contin' → logprob: -2.946920156478882
    6. 'check' → logprob: -3.071920156478882
    7. 'v' → logprob: -3.071920156478882
    8. 'val' → logprob: -3.196920156478882
    9. 'alter' → logprob: -3.571920156478882
    10. ' vérifier' → logprob: -3.696920156478882

Token 277: ' si' (ID: 1784)
  Prédit: 'si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'si' → logprob: -0.2925388216972351
    2. 'if' → logprob: -2.04253888130188
    3. ' si' → logprob: -2.41753888130188
    4. 'le' → logprob: -3.91753888130188
    5. 'la' → logprob: -4.792538642883301
    6. ' if' → logprob: -5.917538642883301
    7. 'quel' → logprob: -6.792538642883301
    8. 's' → logprob: -7.417538642883301
    9. 'def' → logprob: -7.542538642883301
    10. ' la' → logprob: -8.0425386428833

Token 278: ' on' (ID: 402)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.6748241186141968
    2. 'les' → logprob: -1.6748241186141968
    3. '(S' → logprob: -2.5498242378234863
    4. 'c' → logprob: -2.6748242378234863
    5. ' la' → logprob: -2.6748242378234863
    6. 'la' → logprob: -2.7998242378234863
    7. ' (' → logprob: -3.0498242378234863
    8. ' deux' → logprob: -3.0498242378234863
    9. '(c' → logprob: -3.1748242378234863
    10. 'on' → logprob: -3.4248242378234863

Token 279: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.012081272900104523
    2. 'p' → logprob: -5.512081146240234
    3. 'pour' → logprob: -5.637081146240234
    4. ' peut' → logprob: -5.887081146240234
    5. ' peux' → logprob: -8.012081146240234
    6. 'pu' → logprob: -8.012081146240234
    7. '_pe' → logprob: -8.262081146240234
    8. 'can' → logprob: -8.637081146240234
    9. 'continue' → logprob: -8.762081146240234
    10. ' ' → logprob: -9.637081146240234

Token 280: ' en' (ID: 469)
  Prédit: 'prendre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prendre' → logprob: -1.1654611825942993
    2. ' prendre' → logprob: -2.0404610633850098
    3. 'alter' → logprob: -2.2904610633850098
    4. 'contin' → logprob: -2.5404610633850098
    5. 'mettre' → logprob: -2.5404610633850098
    6. 'aj' → logprob: -2.9154610633850098
    7. 'placer' → logprob: -3.0404610633850098
    8. ' ajouter' → logprob: -3.0404610633850098
    9. ' alter' → logprob: -3.0404610633850098
    10. ' mettre' → logprob: -3.9154610633850098

Token 281: 'cha' (ID: 3836)
  Prédit: 'cha'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.1899188905954361
    2. 'ch' → logprob: -1.814918875694275
    3. 'chaine' → logprob: -5.4399189949035645
    4. '```' → logprob: -5.8149189949035645
    5. 'chain' → logprob: -6.8149189949035645
    6. 'prendre' → logprob: -7.1899189949035645
    7. 'encha' → logprob: -8.939918518066406
    8. 'chai' → logprob: -8.939918518066406
    9. 'changer' → logprob: -9.314918518066406
    10. 'placer' → logprob: -9.439918518066406

Token 282: 'îner' (ID: 85414)
  Prédit: 'îner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îner' → logprob: -0.003256854135543108
    2. 'iner' → logprob: -6.378256797790527
    3. 'î' → logprob: -6.753256797790527
    4. 'ainer' → logprob: -8.128256797790527
    5. 'ner' → logprob: -11.003256797790527
    6. '   ' → logprob: -11.003256797790527
    7. 'ê' → logprob: -12.003256797790527
    8. 'à' → logprob: -12.003256797790527
    9. 'r' → logprob: -12.253256797790527
    10. '\' → logprob: -12.253256797790527

Token 283: ' deux' (ID: 10301)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(next' → logprob: -1.2775099277496338
    2. 'def' → logprob: -1.4025099277496338
    3. '(prev' → logprob: -1.9025099277496338
    4. '(last' → logprob: -2.652509927749634
    5. 'next' → logprob: -3.027509927749634
    6. '(' → logprob: -3.027509927749634
    7. '(c' → logprob: -3.652509927749634
    8. '(s' → logprob: -3.902509927749634
    9. '(current' → logprob: -4.027509689331055
    10. 'prev' → logprob: -4.027509689331055

Token 284: ' wag' (ID: 48065)
  Prédit: ' wag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wag' → logprob: -1.143983244895935
    2. 'car' → logprob: -1.768983244895935
    3. 'chars' → logprob: -2.3939833641052246
    4. 'wag' → logprob: -2.6439833641052246
    5. ' lettres' → logprob: -2.7689833641052246
    6. 'letters' → logprob: -3.1439833641052246
    7. 'tokens' → logprob: -3.5189833641052246
    8. ' caractères' → logprob: -3.6439833641052246
    9. ' ' → logprob: -3.8939833641052246
    10. 'cars' → logprob: -3.8939833641052246

Token 285: 'ons' (ID: 1808)
  Prédit: 'ets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.6823133826255798
    2. 'ons' → logprob: -1.6823134422302246
    3. 'ts' → logprob: -2.0573134422302246
    4. 'et' → logprob: -2.8073134422302246
    5. 'ots' → logprob: -3.0573134422302246
    6. 'on' → logprob: -3.3073134422302246
    7. 'ents' → logprob: -4.682313442230225
    8. 'ers' → logprob: -5.182313442230225
    9. 'rets' → logprob: -5.682313442230225
    10. 'onts' → logprob: -6.057313442230225

Token 286: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10422848910093307
    2. '(' → logprob: -2.4792284965515137
    3. '(next' → logprob: -5.104228496551514
    4. '(
' → logprob: -5.979228496551514
    5. '(i' → logprob: -6.604228496551514
    6. '(prev' → logprob: -6.604228496551514
    7. '(w' → logprob: -6.979228496551514
    8. '(token' → logprob: -7.854228496551514
    9. 'next' → logprob: -7.979228496551514
    10. '(c' → logprob: -7.979228496551514

Token 287: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6210696697235107
    2. 'a' → logprob: -1.7460696697235107
    3. ')' → logprob: -2.1210696697235107
    4. 'prev' → logprob: -2.7460696697235107
    5. 'def' → logprob: -3.8710696697235107
    6. ' prev' → logprob: -3.8710696697235107
    7. ' c' → logprob: -4.12106990814209
    8. 's' → logprob: -4.24606990814209
    9. ' def' → logprob: -5.24606990814209
    10. 'current' → logprob: -5.49606990814209

Token 288: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.284356713294983
    2. 'def' → logprob: -1.284356713294983
    3. '#' → logprob: -2.0343565940856934
    4. 'har' → logprob: -2.1593565940856934
    5. 'u' → logprob: -3.0343565940856934
    6. ')' → logprob: -3.2843565940856934
    7. 'h' → logprob: -3.6593565940856934
    8. ''est' → logprob: -4.034356594085693
    9. 's' → logprob: -4.284356594085693
    10. 'e' → logprob: -4.659356594085693

Token 289: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01730380766093731
    2. ',c' → logprob: -4.267303943634033
    3. ' ,' → logprob: -5.892303943634033
    4. ',
' → logprob: -8.517303466796875
    5. ',k' → logprob: -10.392303466796875
    6. ')' → logprob: -10.517303466796875
    7. ' c' → logprob: -10.767303466796875
    8. 'c' → logprob: -11.767303466796875
    9. ',v' → logprob: -11.767303466796875
    10. '==' → logprob: -11.767303466796875

Token 290: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12693209946155548
    2. ' c' → logprob: -2.126932144165039
    3. ' ' → logprob: -13.251932144165039
    4. ' ' → logprob: -14.376932144165039
    5. '  ' → logprob: -15.001932144165039
    6. '   ' → logprob: -15.126932144165039
    7. '
' → logprob: -15.376932144165039
    8. ')c' → logprob: -15.376932144165039
    9. ',' → logprob: -16.00193214416504
    10. '	c' → logprob: -16.25193214416504

Token 291: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0016314979875460267
    2. 'c' → logprob: -6.876631259918213
    3. ')' → logprob: -8.251631736755371
    4. ',' → logprob: -8.376631736755371
    5. 'o' → logprob: -9.751631736755371
    6. '1' → logprob: -11.001631736755371
    7. 's' → logprob: -11.126631736755371
    8. '),' → logprob: -12.751631736755371
    9. '_c' → logprob: -13.626631736755371
    10. ',c' → logprob: -13.751631736755371

Token 292: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07931284606456757
    2. '):
' → logprob: -3.079312801361084
    3. ')' → logprob: -3.829312801361084
    4. ',' → logprob: -4.829312801361084
    5. '):

' → logprob: -7.704312801361084
    6. '):
' → logprob: -9.954313278198242
    7. ' ):' → logprob: -10.829313278198242
    8. 'def' → logprob: -11.829313278198242
    9. ''):' → logprob: -13.079313278198242
    10. ' ,' → logprob: -13.329313278198242

Token 293: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.054500666621607e-06
    2. ' def' → logprob: -13.62500286102295
    3. '(' → logprob: -14.12500286102295
    4. '(
' → logprob: -14.37500286102295
    5. '(c' → logprob: -15.75000286102295
    6. '(def' → logprob: -16.375003814697266
    7. '```' → logprob: -16.500003814697266
    8. ')' → logprob: -16.625003814697266
    9. 'c' → logprob: -18.250003814697266
    10. '
' → logprob: -18.500003814697266

Token 294: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.03894218057394028
    2. ' can' → logprob: -3.2889420986175537
    3. 'is' → logprob: -7.413942337036133
    4. 'altern' → logprob: -9.538942337036133
    5. ' is' → logprob: -9.788942337036133
    6. 'chaine' → logprob: -10.538942337036133
    7. ' peut' → logprob: -10.913942337036133
    8. ' altern' → logprob: -10.913942337036133
    9. 'alternate' → logprob: -11.163942337036133
    10. 'valid' → logprob: -11.163942337036133

Token 295: '_connect' (ID: 32485)
  Prédit: '_chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chain' → logprob: -0.3591042459011078
    2. '_continue' → logprob: -2.1091041564941406
    3. '_connect' → logprob: -2.4841041564941406
    4. '_follow' → logprob: -3.1091041564941406
    5. '_append' → logprob: -4.109104156494141
    6. '_use' → logprob: -4.609104156494141
    7. '_al' → logprob: -4.859104156494141
    8. '_link' → logprob: -5.109104156494141
    9. '_take' → logprob: -5.359104156494141
    10. '_attach' → logprob: -5.609104156494141

Token 296: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0027648175600916147
    2. '(a' → logprob: -6.002764701843262
    3. '(' → logprob: -8.252764701843262
    4. ' (' → logprob: -10.877764701843262
    5. '(s' → logprob: -12.377764701843262
    6. '(
' → logprob: -13.252764701843262
    7. '(u' → logprob: -14.252764701843262
    8. '(prev' → logprob: -14.252764701843262
    9. '((' → logprob: -14.752764701843262
    10. '(C' → logprob: -14.752764701843262

Token 297: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002177977468818426
    2. ',' → logprob: -6.377178192138672
    3. '_' → logprob: -9.252178192138672
    4. 'on' → logprob: -9.377178192138672
    5. 'h' → logprob: -9.627178192138672
    6. '2' → logprob: -9.752178192138672
    7. ',c' → logprob: -10.377178192138672
    8. 'a' → logprob: -10.752178192138672
    9. 'c' → logprob: -11.002178192138672
    10. '):' → logprob: -11.252178192138672

Token 298: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019304130226373672
    2. ',c' → logprob: -4.019304275512695
    3. ' ,' → logprob: -6.769304275512695
    4. ' c' → logprob: -13.269304275512695
    5. 'c' → logprob: -14.144304275512695
    6. ',k' → logprob: -14.644304275512695
    7. ',
' → logprob: -14.894304275512695
    8. '(c' → logprob: -15.269304275512695
    9. ':c' → logprob: -15.394304275512695
    10. '   ' → logprob: -15.644304275512695

Token 299: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.25193482637405396
    2. ' c' → logprob: -1.5019347667694092
    3. ')c' → logprob: -12.626935005187988
    4. ')' → logprob: -14.376935005187988
    5. ' ' → logprob: -14.501935005187988
    6. '	c' → logprob: -14.626935005187988
    7. ' ' → logprob: -14.626935005187988
    8. '   ' → logprob: -15.751935005187988
    9. '):' → logprob: -16.751934051513672
    10. '):
' → logprob: -16.876934051513672

Token 300: '2' (ID: 17)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16392654180526733
    2. '1' → logprob: -3.038926601409912
    3. '2' → logprob: -3.163926601409912
    4. '):
' → logprob: -3.413926601409912
    5. '):' → logprob: -3.788926601409912
    6. ',c' → logprob: -5.913926601409912
    7. ')' → logprob: -7.163926601409912
    8. ' ,' → logprob: -8.163926124572754
    9. '```' → logprob: -8.288926124572754
    10. 'c' → logprob: -8.413926124572754

Token 301: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10080252587795258
    2. '):
' → logprob: -2.350802421569824
    3. ')' → logprob: -7.475802421569824
    4. '):
' → logprob: -10.725802421569824
    5. ':' → logprob: -12.975802421569824
    6. ' ):' → logprob: -13.100802421569824
    7. '):

' → logprob: -13.225802421569824
    8. '   ' → logprob: -14.350802421569824
    9. ' ):
' → logprob: -15.725802421569824
    10. ')：' → logprob: -17.10080337524414

Token 302: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024593794718384743
    2. ' return' → logprob: -3.7745938301086426
    3. 'return' → logprob: -6.899593830108643
    4. '	return' → logprob: -8.649593353271484
    5. '<|end|>' → logprob: -9.399593353271484
    6. ' ' → logprob: -10.649593353271484
    7. '    
' → logprob: -11.024593353271484
    8. ':return' → logprob: -11.274593353271484
    9. '   ' → logprob: -12.274593353271484
    10. ' 
' → logprob: -12.649593353271484

Token 303: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14782488346099854
    2. 'return' (adapté à ' return') → logprob: -2.147824764251709
    3. ' return' → logprob: -3.897824764251709
    4. '	return' → logprob: -8.022825241088867
    5. ' ' → logprob: -10.772825241088867
    6. '
' → logprob: -10.772825241088867
    7. '    
' → logprob: -12.147825241088867
    8. '       ' → logprob: -12.647825241088867
    9. '  ' → logprob: -13.147825241088867
    10. ':return' → logprob: -13.147825241088867

Token 304: ' c' (ID: 274)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0952763482928276
    2. ' (' → logprob: -2.845276355743408
    3. 'c' → logprob: -3.470276355743408
    4. ' c' → logprob: -6.970276355743408
    5. '((' → logprob: -8.09527587890625
    6. '(' → logprob: -8.84527587890625
    7. '   ' → logprob: -9.09527587890625
    8. '(
' → logprob: -9.84527587890625
    9. ' ' → logprob: -10.22027587890625
    10. '(abs' → logprob: -11.22027587890625

Token 305: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009264685213565826
    2. '2' → logprob: -7.000926494598389
    3. '==' → logprob: -11.87592601776123
    4. 'c' → logprob: -12.37592601776123
    5. ''' → logprob: -13.87592601776123
    6. '!=' → logprob: -14.25092601776123
    7. '[c' → logprob: -14.25092601776123
    8. ' ==' → logprob: -14.87592601776123
    9. '[' → logprob: -15.50092601776123
    10. '=='' → logprob: -15.75092601776123

Token 306: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0047602420672774315
    2. ' !=' → logprob: -5.379760265350342
    3. '!='' → logprob: -9.129759788513184
    4. '==' → logprob: -10.629759788513184
    5. '!==' → logprob: -13.254759788513184
    6. '()!=' → logprob: -13.504759788513184
    7. 'in' → logprob: -13.879759788513184
    8. ' in' → logprob: -13.879759788513184
    9. '!=(' → logprob: -14.629759788513184
    10. '=' → logprob: -14.629759788513184

Token 307: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0009119403548538685
    2. ' c' → logprob: -7.000911712646484
    3. ' ' → logprob: -15.000911712646484
    4. ''' → logprob: -17.125911712646484
    5. '   ' → logprob: -17.500911712646484
    6. '	c' → logprob: -18.000911712646484
    7. '  ' → logprob: -18.750911712646484
    8. ')c' → logprob: -19.625911712646484
    9. '    ' → logprob: -20.000911712646484
    10. '
' → logprob: -20.125911712646484

Token 308: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05970253795385361
    2. 'c' → logprob: -2.9347026348114014
    3. '_' → logprob: -5.684702396392822
    4. ''' → logprob: -6.809702396392822
    5. '_c' → logprob: -8.93470287322998
    6. ' c' → logprob: -10.30970287322998
    7. ')' → logprob: -10.80970287322998
    8. '1' → logprob: -10.80970287322998
    9. ''_' → logprob: -10.80970287322998
    10. '`' → logprob: -11.18470287322998

Token 309: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6157991290092468
    2. '<|end|>' → logprob: -1.4907991886138916
    3. 'for' → logprob: -1.9907991886138916
    4. ' for' → logprob: -2.8657991886138916
    5. '  
' → logprob: -3.8657991886138916
    6. ' 
' → logprob: -5.2407989501953125
    7. '<|end|>' → logprob: -5.6157989501953125
    8. '

' → logprob: -6.2407989501953125
    9. '```' → logprob: -6.3657989501953125
    10. ')' → logprob: -6.4907989501953125

Token 310: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003942112671211362
    2. ' for' → logprob: -7.875394344329834
    3. '
' → logprob: -11.250393867492676
    4. '```' → logprob: -15.125393867492676
    5. '   ' → logprob: -15.750393867492676
    6. 'next' → logprob: -15.875393867492676
    7. '

' → logprob: -16.250394821166992
    8. '	for' → logprob: -16.250394821166992
    9. ')' → logprob: -16.500394821166992
    10. '#' → logprob: -16.875394821166992

Token 311: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.014166918583214283
    2. 'i' → logprob: -4.264166831970215
    3. '   ' → logprob: -14.264166831970215
    4. '_i' → logprob: -14.264166831970215
    5. ' ' → logprob: -14.889166831970215
    6. ' _' → logprob: -15.014166831970215
    7. ' in' → logprob: -15.139166831970215
    8. '	i' → logprob: -15.389166831970215
    9. 'range' → logprob: -15.514166831970215
    10. ' range' → logprob: -15.889166831970215

Token 312: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0022125851828604937
    2. 'in' → logprob: -6.1272125244140625
    3. ',' → logprob: -11.252212524414062
    4. ' ' → logprob: -11.752212524414062
    5. '+' → logprob: -13.127212524414062
    6. '   ' → logprob: -13.752212524414062
    7. 'range' → logprob: -13.877212524414062
    8. '0' → logprob: -14.627212524414062
    9. '1' → logprob: -15.002212524414062
    10. '
' → logprob: -15.252212524414062

Token 313: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014169150963425636
    2. ' range' → logprob: -4.264169216156006
    3. '0' → logprob: -12.764168739318848
    4. '(M' → logprob: -13.639168739318848
    5. ' ' → logprob: -14.389168739318848
    6. '(range' → logprob: -14.639168739318848
    7. 'M' → logprob: -15.264168739318848
    8. '   ' → logprob: -16.264169692993164
    9. ' in' → logprob: -17.139169692993164
    10. 'in' → logprob: -17.639169692993164

Token 314: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -9.782141569303349e-05
    2. '(' → logprob: -9.25009822845459
    3. 'M' → logprob: -13.75009822845459
    4. '1' → logprob: -14.87509822845459
    5. '0' → logprob: -16.500097274780273
    6. ' (' → logprob: -17.250097274780273
    7. '(m' → logprob: -17.375097274780273
    8. '   ' → logprob: -17.375097274780273
    9. ' ' → logprob: -17.750097274780273
    10. ' M' → logprob: -18.125097274780273

Token 315: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00436935992911458
    2. '):
' → logprob: -5.629369258880615
    3. '):' → logprob: -7.754369258880615
    4. ' +' → logprob: -8.004369735717773
    5. '   ' → logprob: -12.254369735717773
    6. '1' → logprob: -15.004369735717773
    7. '+
' → logprob: -15.004369735717773
    8. ')' → logprob: -15.879369735717773
    9. '):

' → logprob: -16.129369735717773
    10. '+i' → logprob: -16.129369735717773

Token 316: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.000006675720215
    3. '+' → logprob: -15.875006675720215
    4. '   ' → logprob: -16.1250057220459
    5. '
' → logprob: -16.6250057220459
    6. '2' → logprob: -16.8750057220459
    7. '0' → logprob: -17.3750057220459
    8. '```' → logprob: -18.1250057220459
    9. 'N' → logprob: -18.3750057220459
    10. 'for' → logprob: -18.7500057220459

Token 317: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0007210109033621848
    2. '):' → logprob: -7.250720977783203
    3. '):
' → logprob: -12.125720977783203
    4. 'for' → logprob: -12.625720977783203
    5. '+' → logprob: -14.500720977783203
    6. '   ' → logprob: -14.500720977783203
    7. ':
' → logprob: -15.000720977783203
    8. ' ):
' → logprob: -15.125720977783203
    9. ':' → logprob: -15.375720977783203
    10. '):

' → logprob: -15.750720977783203

Token 318: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5280171632766724
    2. 'for' → logprob: -1.2780171632766724
    3. ' for' → logprob: -2.028017044067383
    4. '	for' → logprob: -10.278017044067383
    5. ' ' → logprob: -12.653017044067383
    6. ' range' → logprob: -13.528017044067383
    7. 'range' → logprob: -13.903017044067383
    8. '```' → logprob: -14.528017044067383
    9. '       ' → logprob: -14.903017044067383
    10. '   ' → logprob: -15.278017044067383

Token 319: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0021248033735901117
    2. ' for' → logprob: -6.252124786376953
    3. 'range' → logprob: -8.627124786376953
    4. '   ' → logprob: -11.127124786376953
    5. ' range' → logprob: -13.377124786376953
    6. ' ' → logprob: -15.127124786376953
    7. 'N' → logprob: -15.627124786376953
    8. '
' → logprob: -15.752124786376953
    9. '       ' → logprob: -17.377124786376953
    10. ',' → logprob: -17.502124786376953

Token 320: ' j' (ID: 441)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.007725872565060854
    2. ' N' → logprob: -5.132725715637207
    3. 'j' → logprob: -6.632725715637207
    4. '(N' → logprob: -8.632725715637207
    5. 'range' → logprob: -8.632725715637207
    6. '   ' → logprob: -9.632725715637207
    7. ' range' → logprob: -10.257725715637207
    8. '0' → logprob: -11.382725715637207
    9. ' ' → logprob: -12.632725715637207
    10. ' j' → logprob: -13.007725715637207

Token 321: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015478298300877213
    2. 'in' → logprob: -6.501547813415527
    3. 'for' → logprob: -11.376547813415527
    4. '(' → logprob: -11.626547813415527
    5. '   ' → logprob: -11.876547813415527
    6. '(N' → logprob: -12.751547813415527
    7. '(in' → logprob: -12.751547813415527
    8. ' ' → logprob: -12.876547813415527
    9. '+' → logprob: -13.126547813415527
    10. ',' → logprob: -13.126547813415527

Token 322: ' range' (ID: 3352)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.14941219985485077
    2. '(N' → logprob: -2.149412155151367
    3. 'range' → logprob: -4.024412155151367
    4. ' range' → logprob: -6.149412155151367
    5. ' N' → logprob: -6.149412155151367
    6. 'for' → logprob: -10.274412155151367
    7. ' ' → logprob: -10.774412155151367
    8. '   ' → logprob: -11.024412155151367
    9. ' (' → logprob: -12.149412155151367
    10. '0' → logprob: -12.774412155151367

Token 323: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0017208768986165524
    2. 'N' → logprob: -6.376720905303955
    3. '   ' → logprob: -11.751720428466797
    4. ' (' → logprob: -12.126720428466797
    5. '[N' → logprob: -13.501720428466797
    6. ' N' → logprob: -13.751720428466797
    7. ' ' → logprob: -14.376720428466797
    8. '(' → logprob: -14.376720428466797
    9. '  ' → logprob: -14.751720428466797
    10. '{' → logprob: -14.751720428466797

Token 324: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.759734732331708e-05
    2. ' +' → logprob: -11.500017166137695
    3. '):
' → logprob: -12.250017166137695
    4. '):' → logprob: -13.875017166137695
    5. '   ' → logprob: -14.250017166137695
    6. '1' → logprob: -14.375017166137695
    7. '+
' → logprob: -15.750017166137695
    8. ')+' → logprob: -16.250017166137695
    9. ' ' → logprob: -16.875017166137695
    10. '       ' → logprob: -17.500017166137695

Token 325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.125000953674316
    3. '+' → logprob: -14.875000953674316
    4. '   ' → logprob: -17.375001907348633
    5. '2' → logprob: -18.000001907348633
    6. ')' → logprob: -20.125001907348633
    7. '
' → logprob: -20.250001907348633
    8. '```' → logprob: -20.375001907348633
    9. 'j' → logprob: -20.750001907348633
    10. '(' → logprob: -21.187501907348633

Token 326: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01445153821259737
    2. '):' → logprob: -4.264451503753662
    3. ':' → logprob: -9.26445198059082
    4. '   ' → logprob: -9.51445198059082
    5. ':
' → logprob: -9.88945198059082
    6. '       ' → logprob: -10.63945198059082
    7. '):
' → logprob: -11.01445198059082
    8. '<|end|>' → logprob: -11.88945198059082
    9. '):

' → logprob: -12.01445198059082
    10. ',' → logprob: -12.01445198059082

Token 327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020497082732617855
    2. ' for' → logprob: -8.750205039978027
    3. 'for' → logprob: -10.250205039978027
    4. '   ' → logprob: -12.375205039978027
    5. '	' → logprob: -13.000205039978027
    6. '	   ' → logprob: -13.375205039978027
    7. ',' → logprob: -13.875205039978027
    8. '<|end|>' → logprob: -14.125205039978027
    9. '	for' → logprob: -14.625205039978027
    10. '           ' → logprob: -15.375205039978027

Token 328: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.007442282512784004
    2. ' for' → logprob: -5.257442474365234
    3. '           ' → logprob: -6.507442474365234
    4. '   ' → logprob: -7.257442474365234
    5. '       ' → logprob: -12.257442474365234
    6. ' ' → logprob: -12.632442474365234
    7. '	for' → logprob: -14.382442474365234
    8. '
' → logprob: -16.882442474365234
    9. 'k' → logprob: -16.882442474365234
    10. 'if' → logprob: -17.007442474365234

Token 329: ' last' (ID: 2174)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3132728636264801
    2. ' k' → logprob: -1.3132728338241577
    3. '[k' → logprob: -13.438272476196289
    4. '	k' → logprob: -13.438272476196289
    5. '   ' → logprob: -13.563272476196289
    6. 'last' → logprob: -13.688272476196289
    7. '{k' → logprob: -13.813272476196289
    8. ' ' → logprob: -13.813272476196289
    9. '```' → logprob: -14.063272476196289
    10. ' last' → logprob: -14.313272476196289

Token 330: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005262456834316254
    2. 'in' → logprob: -5.25526237487793
    3. '_in' → logprob: -11.50526237487793
    4. 'k' → logprob: -11.88026237487793
    5. ' ' → logprob: -12.25526237487793
    6. '```' → logprob: -13.88026237487793
    7. 's' → logprob: -14.00526237487793
    8. '_' → logprob: -14.00526237487793
    9. '	in' → logprob: -14.50526237487793
    10. '_token' → logprob: -14.75526237487793

Token 331: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06225593388080597
    2. ' range' → logprob: -2.812255859375
    3. '(' → logprob: -8.812255859375
    4. '[' → logprob: -9.062255859375
    5. '(range' → logprob: -10.687255859375
    6. '	range' → logprob: -15.687255859375
    7. ' (' → logprob: -15.812255859375
    8. '   ' → logprob: -16.437255859375
    9. ' [' → logprob: -16.437255859375
    10. '3' → logprob: -16.687255859375

Token 332: '(' (ID: 7)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3132745921611786
    2. '(' → logprob: -1.313274621963501
    3. '   ' → logprob: -12.063274383544922
    4. ' ' → logprob: -12.563274383544922
    5. '2' → logprob: -13.063274383544922
    6. '(
' → logprob: -14.313274383544922
    7. '```' → logprob: -15.688274383544922
    8. ' (' → logprob: -15.813274383544922
    9. ')' → logprob: -15.813274383544922
    10. '[' → logprob: -16.188274383544922

Token 333: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.4060561776859686e-05
    2. '2' → logprob: -10.375043869018555
    3. ' ' → logprob: -11.375043869018555
    4. '   ' → logprob: -13.875043869018555
    5. '0' → logprob: -15.500043869018555
    6. ')' → logprob: -17.125043869018555
    7. '       ' → logprob: -17.375043869018555
    8. '  ' → logprob: -17.625043869018555
    9. '    ' → logprob: -18.000043869018555
    10. '1' → logprob: -18.500043869018555

Token 334: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47411516308784485
    2. '):' → logprob: -0.9741151332855225
    3. '):
' → logprob: -11.349115371704102
    4. '):

' → logprob: -11.349115371704102
    5. ':' → logprob: -11.849115371704102
    6. '       ' → logprob: -12.849115371704102
    7. ' ):' → logprob: -13.599115371704102
    8. ' ):
' → logprob: -13.974115371704102
    9. ')' → logprob: -14.224115371704102
    10. '   ' → logprob: -14.474115371704102

Token 335: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027504269964993
    2. ' if' → logprob: -6.002750396728516
    3. '	       ' → logprob: -8.752750396728516
    4. '            
' → logprob: -10.502750396728516
    5. '		' → logprob: -10.877750396728516
    6. ' for' → logprob: -11.127750396728516
    7. 'if' → logprob: -11.752750396728516
    8. '   ' → logprob: -11.877750396728516
    9. '<|end|>' → logprob: -11.877750396728516
    10. '               ' → logprob: -12.252750396728516

Token 336: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.40937092900276184
    2. 'if' (adapté à ' if') → logprob: -1.4093708992004395
    3. '           ' → logprob: -3.4093708992004395
    4. ' val' → logprob: -3.9093708992004395
    5. 'cur' → logprob: -4.0343708992004395
    6. '               ' → logprob: -5.0343708992004395
    7. 'val' → logprob: -5.2843708992004395
    8. '   ' → logprob: -5.9093708992004395
    9. ' cur' → logprob: -6.0343708992004395
    10. ' current' → logprob: -6.9093708992004395

Token 337: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0036047017201781273
    2. ' dp' → logprob: -5.628604888916016
    3. '	dp' → logprob: -13.253604888916016
    4. '   ' → logprob: -13.628604888916016
    5. '(dp' → logprob: -13.753604888916016
    6. '           ' → logprob: -14.878604888916016
    7. ' ' → logprob: -16.628604888916016
    8. '0' → logprob: -16.878604888916016
    9. '               ' → logprob: -17.503604888916016
    10. '_dp' → logprob: -17.628604888916016

Token 338: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.941850526549388e-06
    2. ' [' → logprob: -12.250007629394531
    3. '           ' → logprob: -13.750007629394531
    4. '[I' → logprob: -14.375007629394531
    5. '][' → logprob: -14.875007629394531
    6. '[' → logprob: -15.375007629394531
    7. '[j' → logprob: -15.750007629394531
    8. ')[' → logprob: -16.00000762939453
    9. '
' → logprob: -16.25000762939453
    10. '```' → logprob: -16.62500762939453

Token 339: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -4.5014188799541444e-05
    2. '[i' → logprob: -11.000044822692871
    3. ' ][' → logprob: -12.000044822692871
    4. ')[' → logprob: -12.125044822692871
    5. ']' → logprob: -12.125044822692871
    6. '[j' → logprob: -12.625044822692871
    7. '[' → logprob: -13.250044822692871
    8. '>[' → logprob: -13.500044822692871
    9. '"][' → logprob: -13.625044822692871
    10. ']][' → logprob: -14.500044822692871

Token 340: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.7729658540920354e-05
    2. ' j' → logprob: -10.500027656555176
    3. '[j' → logprob: -16.000028610229492
    4. '	j' → logprob: -17.375028610229492
    5. '][' → logprob: -17.750028610229492
    6. ',j' → logprob: -18.125028610229492
    7. '   ' → logprob: -18.500028610229492
    8. '<|end|>' → logprob: -18.625028610229492
    9. '
' → logprob: -18.750028610229492
    10. ' ' → logprob: -18.875028610229492

Token 341: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20605815947055817
    2. ']==' → logprob: -1.706058144569397
    3. '==' → logprob: -5.956058025360107
    4. ']!=' → logprob: -6.956058025360107
    5. '[' → logprob: -7.706058025360107
    6. ']>' → logprob: -8.331058502197266
    7. ']<=' → logprob: -8.831058502197266
    8. ' ==' → logprob: -10.081058502197266
    9. '][' → logprob: -10.206058502197266
    10. ']<' → logprob: -10.206058502197266

Token 342: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.1726187765598297
    2. 'INF' → logprob: -1.9226187467575073
    3. '-' → logprob: -5.422618865966797
    4. '-INF' → logprob: -6.047618865966797
    5. '3' → logprob: -6.172618865966797
    6. '2' → logprob: -6.797618865966797
    7. ' last' → logprob: -7.672618865966797
    8. ']' → logprob: -7.672618865966797
    9. ' INF' → logprob: -8.422618865966797
    10. 'inf' → logprob: -8.797618865966797

Token 343: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3454098701477051
    2. ']' → logprob: -1.470409870147705
    3. ']==' → logprob: -3.470409870147705
    4. ' ==' → logprob: -3.970409870147705
    5. '>' → logprob: -4.845409870147705
    6. '<=' → logprob: -6.220409870147705
    7. '<' → logprob: -6.470409870147705
    8. '!=' → logprob: -7.720409870147705
    9. '==-' → logprob: -9.595409393310547
    10. ' ]' → logprob: -9.720409393310547

Token 344: ' <' (ID: 464)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0424451008439064
    2. ' ==' → logprob: -3.792445182800293
    3. '<' → logprob: -4.042445182800293
    4. '!=' → logprob: -7.417445182800293
    5. '<=' → logprob: -7.667445182800293
    6. '>' → logprob: -9.042445182800293
    7. ' <' → logprob: -9.167445182800293
    8. '==-' → logprob: -9.292445182800293
    9. '>=' → logprob: -9.667445182800293
    10. ' !=' → logprob: -11.792445182800293

Token 345: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015550498210359365
    2. '1' → logprob: -9.250155448913574
    3. ' ' → logprob: -9.750155448913574
    4. '   ' → logprob: -14.375155448913574
    5. '-' → logprob: -14.875155448913574
    6. '  ' → logprob: -16.62515640258789
    7. '=' → logprob: -18.12515640258789
    8. 'INF' → logprob: -18.18765640258789
    9. ' -' → logprob: -18.31265640258789
    10. '100' → logprob: -18.31265640258789

Token 346: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4974866644479334e-05
    2. '-' → logprob: -11.500015258789062
    3. ' ' → logprob: -12.375015258789062
    4. 'INF' → logprob: -15.375015258789062
    5. '1' → logprob: -15.625015258789062
    6. '   ' → logprob: -16.375015258789062
    7. ' -' → logprob: -16.875015258789062
    8. '-INF' → logprob: -17.000015258789062
    9. '
' → logprob: -18.000015258789062
    10. '  ' → logprob: -18.375015258789062

Token 347: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.036707304418087006
    2. ':
' → logprob: -3.5367074012756348
    3. '           ' → logprob: -5.786707401275635
    4. '               ' → logprob: -6.286707401275635
    5. ' or' → logprob: -6.661707401275635
    6. '       ' → logprob: -8.286706924438477
    7. 'continue' → logprob: -8.661706924438477
    8. ' continue' → logprob: -8.911706924438477
    9. '   ' → logprob: -10.286706924438477
    10. ':return' → logprob: -10.411706924438477

Token 348: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008640571613796055
    2. 'continue' → logprob: -7.750864028930664
    3. ' continue' → logprob: -8.375864028930664
    4. '           ' → logprob: -9.250864028930664
    5. '			' → logprob: -10.375864028930664
    6. '	continue' → logprob: -10.750864028930664
    7. '	           ' → logprob: -11.000864028930664
    8. '                   ' → logprob: -11.625864028930664
    9. '   ' → logprob: -12.125864028930664
    10. '		       ' → logprob: -12.250864028930664

Token 349: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.5338335633277893
    2. '               ' → logprob: -1.0338335037231445
    3. '                   ' → logprob: -3.0338335037231445
    4. ' continue' → logprob: -4.7838335037231445
    5. '   ' → logprob: -7.2838335037231445
    6. '           ' → logprob: -7.5338335037231445
    7. '	continue' → logprob: -8.533833503723145
    8. '       ' → logprob: -9.908833503723145
    9. '                       ' → logprob: -10.283833503723145
    10. '_continue' → logprob: -12.783833503723145

Token 350: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0033230306580662727
    2. '            
' → logprob: -6.128323078155518
    3. '<|end|>' → logprob: -8.25332260131836
    4. '               ' → logprob: -8.37832260131836
    5. ' for' → logprob: -9.12832260131836
    6. '            ' → logprob: -9.12832260131836
    7. ',' → logprob: -9.50332260131836
    8. '		' → logprob: -9.62832260131836
    9. '       ' → logprob: -9.87832260131836
    10. '<|end|>' → logprob: -10.12832260131836

Token 351: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002494191285222769
    2. '            
' → logprob: -8.375249862670898
    3. '               ' → logprob: -11.875249862670898
    4. '          ' → logprob: -13.125249862670898
    5. '		' → logprob: -13.250249862670898
    6. 'if' → logprob: -13.375249862670898
    7. '            ' → logprob: -13.625249862670898
    8. ' if' → logprob: -13.750249862670898
    9. '       ' → logprob: -13.875249862670898
    10. '#' → logprob: -14.750249862670898

Token 352: ' length' (ID: 5517)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36092498898506165
    2. 'if' → logprob: -1.3609249591827393
    3. '#' → logprob: -3.8609249591827393
    4. ' if' → logprob: -4.235925197601318
    5. 'next' → logprob: -4.610925197601318
    6. ' next' → logprob: -7.360925197601318
    7. ' #' → logprob: -8.36092472076416
    8. '            
' → logprob: -9.36092472076416
    9. '               ' → logprob: -10.86092472076416
    10. 'current' → logprob: -10.86092472076416

Token 353: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43189337849617004
    2. ' =' → logprob: -1.0568933486938477
    3. '+' → logprob: -5.931893348693848
    4. ' +=' → logprob: -9.056893348693848
    5. '+=' → logprob: -9.181893348693848
    6. ')' → logprob: -9.556893348693848
    7. ' +' → logprob: -9.681893348693848
    8. 'for' → logprob: -10.056893348693848
    9. ' ' → logprob: -10.306893348693848
    10. '>' → logprob: -10.931893348693848

Token 354: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06998223066329956
    2. ' dp' → logprob: -2.6949822902679443
    3. 'max' → logprob: -11.069982528686523
    4. '           ' → logprob: -11.819982528686523
    5. '	dp' → logprob: -12.194982528686523
    6. '0' → logprob: -12.319982528686523
    7. '               ' → logprob: -12.944982528686523
    8. '(dp' → logprob: -13.194982528686523
    9. '   ' → logprob: -13.319982528686523
    10. '
' → logprob: -13.319982528686523

Token 355: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. ' [' → logprob: -15.125000953674316
    3. '[' → logprob: -15.875000953674316
    4. '[I' → logprob: -15.875000953674316
    5. '```' → logprob: -16.375
    6. '][' → logprob: -16.625
    7. 'i' → logprob: -17.25
    8. '[
' → logprob: -17.375
    9. '
' → logprob: -17.875
    10. '<|end|>' → logprob: -17.875

Token 356: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0028427953366190195
    2. '[i' → logprob: -5.877842903137207
    3. ' ][' → logprob: -10.877842903137207
    4. ']' → logprob: -12.002842903137207
    5. 'i' → logprob: -12.377842903137207
    6. '}[' → logprob: -12.752842903137207
    7. '"][' → logprob: -13.502842903137207
    8. '[' → logprob: -13.877842903137207
    9. ' ' → logprob: -14.377842903137207
    10. ')[' → logprob: -14.752842903137207

Token 357: 'j' (ID: 73)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.060365608893335e-05
    2. ' i' → logprob: -10.750041007995605
    3. '][' → logprob: -11.250041007995605
    4. '[i' → logprob: -12.250041007995605
    5. 'j' → logprob: -14.625041007995605
    6. ' ' → logprob: -15.375041007995605
    7. '
' → logprob: -16.00004005432129
    8. ']' → logprob: -16.37504005432129
    9. '   ' → logprob: -16.50004005432129
    10. '[' → logprob: -16.50004005432129

Token 358: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00013202552509028465
    2. ' ][' → logprob: -9.625131607055664
    3. ']' → logprob: -10.375131607055664
    4. '[' → logprob: -11.000131607055664
    5. '}[' → logprob: -12.750131607055664
    6. ']][' → logprob: -13.000131607055664
    7. '"][' → logprob: -13.375131607055664
    8. '[last' → logprob: -13.750131607055664
    9. '           ' → logprob: -14.125131607055664
    10. '[k' → logprob: -14.250131607055664

Token 359: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -4.191489642835222e-05
    2. '[last' → logprob: -10.250041961669922
    3. ' last' → logprob: -12.250041961669922
    4. 'length' → logprob: -14.500041961669922
    5. ']' → logprob: -14.875041961669922
    6. '[' → logprob: -15.875041961669922
    7. '(last' → logprob: -16.000041961669922
    8. '	last' → logprob: -16.000041961669922
    9. '][' → logprob: -16.125041961669922
    10. '
' → logprob: -16.500041961669922

Token 360: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10397497564554214
    2. ']
' → logprob: -2.3539750576019287
    3. '
' → logprob: -6.10397481918335
    4. ']

' → logprob: -6.97897481918335
    5. ']+' → logprob: -8.353975296020508
    6. '           ' → logprob: -8.853975296020508
    7. ')' → logprob: -9.228975296020508
    8. '+' → logprob: -11.103975296020508
    9. ' ]' → logprob: -11.103975296020508
    10. '#' → logprob: -11.103975296020508

Token 361: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001238004770129919
    2. '            
' → logprob: -9.625123977661133
    3. ' if' → logprob: -10.125123977661133
    4. '
' → logprob: -11.750123977661133
    5. 'if' → logprob: -12.375123977661133
    6. '#' → logprob: -13.875123977661133
    7. '		' → logprob: -14.250123977661133
    8. '               ' → logprob: -14.375123977661133
    9. '```' → logprob: -14.375123977661133
    10. '       ' → logprob: -14.625123977661133

Token 362: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03808463364839554
    2. '#' (adapté à ' #') → logprob: -3.2880847454071045
    3. '           ' → logprob: -10.163084983825684
    4. ' if' → logprob: -12.663084983825684
    5. 'next' → logprob: -14.413084983825684
    6. '            
' → logprob: -14.663084983825684
    7. '```' → logprob: -15.163084983825684
    8. 'If' → logprob: -16.413084030151367
    9. '
' → logprob: -16.413084030151367
    10. ' #' → logprob: -16.663084030151367

Token 363: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002498490735888481
    2. '#' → logprob: -6.002498626708984
    3. '           ' → logprob: -11.127498626708984
    4. ' if' → logprob: -12.252498626708984
    5. 'next' → logprob: -13.627498626708984
    6. 'If' → logprob: -14.127498626708984
    7. '```' → logprob: -14.127498626708984
    8. '            
' → logprob: -15.002498626708984
    9. '
' → logprob: -15.877498626708984
    10. 'Next' → logprob: -17.002498626708984

Token 364: ' peut' (ID: 9216)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.46399882435798645
    2. ' if' → logprob: -1.838998794555664
    3. ' can' → logprob: -2.213998794555664
    4. '           ' → logprob: -2.588998794555664
    5. 'can' → logprob: -4.213998794555664
    6. ' peut' → logprob: -5.338998794555664
    7. 'continue' → logprob: -6.213998794555664
    8. ' continue' → logprob: -6.588998794555664
    9. '#' → logprob: -6.713998794555664
    10. ' peux' → logprob: -7.213998794555664

Token 365: ' essayer' (ID: 92713)
  Prédit: 'prendre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prendre' → logprob: -0.2468365877866745
    2. 'aj' → logprob: -2.7468366622924805
    3. ' prendre' → logprob: -2.8718366622924805
    4. 'contin' → logprob: -3.4968366622924805
    5. ' essayer' → logprob: -4.3718366622924805
    6. '   ' → logprob: -4.9968366622924805
    7. 'if' → logprob: -5.1218366622924805
    8. '#' → logprob: -5.1218366622924805
    9. 'try' → logprob: -5.3718366622924805
    10. ' ajouter' → logprob: -5.3718366622924805

Token 366: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.27487510442733765
    2. ' de' → logprob: -2.3998751640319824
    3. 'd' → logprob: -2.8998751640319824
    4. '   ' → logprob: -3.6498751640319824
    5. ':' → logprob: -4.524875164031982
    6. ' à' → logprob: -4.524875164031982
    7. ':
' → logprob: -4.899875164031982
    8. ' ' → logprob: -4.899875164031982
    9. 'à' → logprob: -5.399875164031982
    10. '    ' → logprob: -5.524875164031982

Token 367: ' prendre' (ID: 24257)
  Prédit: 'prendre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prendre' → logprob: -0.4429319202899933
    2. ' prendre' → logprob: -1.067931890487671
    3. ' ajouter' → logprob: -5.44293212890625
    4. ' ' → logprob: -5.69293212890625
    5. 'aj' → logprob: -6.31793212890625
    6. 'take' → logprob: -6.56793212890625
    7. '   ' → logprob: -7.56793212890625
    8. 'i' → logprob: -8.19293212890625
    9. ' continuer' → logprob: -8.19293212890625
    10. '
' → logprob: -8.44293212890625

Token 368: ' un' (ID: 537)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.87125563621521
    2. ' S' → logprob: -0.99625563621521
    3. ' next' → logprob: -2.74625563621521
    4. ' un' → logprob: -3.12125563621521
    5. ' le' → logprob: -3.62125563621521
    6. 'if' → logprob: -4.246255874633789
    7. ' i' → logprob: -4.371255874633789
    8. 'i' → logprob: -4.746255874633789
    9. ' if' → logprob: -4.871255874633789
    10. 'le' → logprob: -4.871255874633789

Token 369: ' nouveau' (ID: 23184)
  Prédit: 'wagon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wagon' → logprob: -0.3259876072406769
    2. 'S' → logprob: -1.4509875774383545
    3. 'wag' → logprob: -4.075987815856934
    4. ' wagon' → logprob: -4.450987815856934
    5. ' S' → logprob: -4.950987815856934
    6. 'i' → logprob: -5.825987815856934
    7. 'from' → logprob: -6.825987815856934
    8. '```' → logprob: -7.575987815856934
    9. ' wag' → logprob: -7.700987815856934
    10. 'de' → logprob: -8.200987815856934

Token 370: ' wagon' (ID: 90907)
  Prédit: ' wagon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wagon' → logprob: -0.5238122940063477
    2. 'wagon' → logprob: -0.8988122940063477
    3. 'w' → logprob: -8.398812294006348
    4. '
' → logprob: -9.273812294006348
    5. ' wag' → logprob: -9.648812294006348
    6. 'wag' → logprob: -9.648812294006348
    7. ' ' → logprob: -9.898812294006348
    8. ' token' → logprob: -9.898812294006348
    9. '   ' → logprob: -10.273812294006348
    10. 'wagen' → logprob: -11.023812294006348

Token 371: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010565371252596378
    2. ' from' → logprob: -4.760565280914307
    3. 'from' → logprob: -6.885565280914307
    4. '            
' → logprob: -8.135565757751465
    5. '		' → logprob: -8.510565757751465
    6. '            ' → logprob: -9.135565757751465
    7. ' if' → logprob: -9.385565757751465
    8. '#' → logprob: -9.885565757751465
    9. ',' → logprob: -10.260565757751465
    10. '               ' → logprob: -10.385565757751465

Token 372: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.08894394338130951
    2. ' S' → logprob: -2.4639439582824707
    3. 's' → logprob: -13.088943481445312
    4. ' ' → logprob: -13.838943481445312
    5. '```' → logprob: -15.088943481445312
    6. ' ' → logprob: -15.838943481445312
    7. '`' → logprob: -15.838943481445312
    8. '(S' → logprob: -16.213943481445312
    9. ''S' → logprob: -16.338943481445312
    10. ',' → logprob: -16.588943481445312

Token 373: ' si' (ID: 1784)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00341903162188828
    2. ' if' → logprob: -6.003418922424316
    3. '		' → logprob: -7.878418922424316
    4. ',' → logprob: -8.628418922424316
    5. '            
' → logprob: -9.003418922424316
    6. 'if' → logprob: -9.003418922424316
    7. '	       ' → logprob: -10.253418922424316
    8. '       ' → logprob: -11.003418922424316
    9. '   ' → logprob: -11.253418922424316
    10. '          ' → logprob: -11.378418922424316

Token 374: ' possible' (ID: 4149)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8807260990142822
    2. ' i' → logprob: -1.2557260990142822
    3. ' last' → logprob: -1.6307260990142822
    4. 'last' → logprob: -2.2557260990142822
    5. '(last' → logprob: -10.380725860595703
    6. '(i' → logprob: -11.380725860595703
    7. '   ' → logprob: -12.255725860595703
    8. ' (' → logprob: -12.255725860595703
    9. '           ' → logprob: -12.505725860595703
    10. ' ' → logprob: -13.130725860595703

Token 375: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005436639301478863
    2. ' if' → logprob: -5.880436420440674
    3. '		' → logprob: -7.005436420440674
    4. ',' → logprob: -7.255436420440674
    5. '            
' → logprob: -7.505436420440674
    6. ' and' → logprob: -8.755436897277832
    7. 'if' → logprob: -9.630436897277832
    8. '	       ' → logprob: -9.880436897277832
    9. '			
' → logprob: -10.755436897277832
    10. '<|end|>' → logprob: -10.880436897277832

Token 376: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007096902118064463
    2. ' if' → logprob: -7.875709533691406
    3. '            
' → logprob: -8.875709533691406
    4. '		' → logprob: -9.625709533691406
    5. ',' → logprob: -10.125709533691406
    6. 'if' → logprob: -10.375709533691406
    7. ' and' → logprob: -10.750709533691406
    8. '			           ' → logprob: -12.250709533691406
    9. '	       ' → logprob: -12.375709533691406
    10. ' ' → logprob: -12.625709533691406

Token 377: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15577161312103271
    2. ' if' → logprob: -2.2807717323303223
    3. '            ' → logprob: -4.280771732330322
    4. '            
' → logprob: -4.655771732330322
    5. 'if' (adapté à ' if') → logprob: -5.030771732330322
    6. ' 
' → logprob: -5.530771732330322
    7. '		' → logprob: -5.905771732330322
    8. '             
' → logprob: -6.905771732330322
    9. ' ' → logprob: -7.155771732330322
    10. '               ' → logprob: -7.655771732330322

Token 378: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.038058701902627945
    2. ' i' → logprob: -3.2880587577819824
    3. 'last' → logprob: -11.288058280944824
    4. ' last' → logprob: -12.538058280944824
    5. '   ' → logprob: -13.913058280944824
    6. ' ' → logprob: -15.663058280944824
    7. '	i' → logprob: -16.41305923461914
    8. '(i' → logprob: -17.03805923461914
    9. '
' → logprob: -17.03805923461914
    10. ' ' → logprob: -17.28805923461914

Token 379: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3915448784828186
    2. ' <' → logprob: -1.1415448188781738
    3. '<M' → logprob: -5.391544818878174
    4. '<N' → logprob: -9.516545295715332
    5. '+' → logprob: -11.516545295715332
    6. '<len' → logprob: -11.891545295715332
    7. '<m' → logprob: -12.141545295715332
    8. ' ' → logprob: -12.641545295715332
    9. '<n' → logprob: -13.016545295715332
    10. '<S' → logprob: -14.141545295715332

Token 380: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0067154900170862675
    2. ' M' → logprob: -5.006715297698975
    3. '   ' → logprob: -15.881715774536133
    4. ' ' → logprob: -16.881715774536133
    5. '```' → logprob: -18.881715774536133
    6. ',' → logprob: -19.006715774536133
    7. '  ' → logprob: -19.381715774536133
    8. '<M' → logprob: -19.506715774536133
    9. '
' → logprob: -19.631715774536133
    10. '	M' → logprob: -19.631715774536133

Token 381: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20144228637218475
    2. 'and' → logprob: -1.7014422416687012
    3. '           ' → logprob: -10.95144271850586
    4. '               ' → logprob: -12.32644271850586
    5. '   ' → logprob: -12.82644271850586
    6. ' ' → logprob: -13.70144271850586
    7. ':
' → logprob: -14.20144271850586
    8. '                   ' → logprob: -14.70144271850586
    9. '	and' → logprob: -14.70144271850586
    10. '       ' → logprob: -14.82644271850586

Token 382: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023416679352521896
    2. '               ' → logprob: -3.773416757583618
    3. 'and' → logprob: -9.773416519165039
    4. '                
' → logprob: -10.273416519165039
    5. ' ' → logprob: -10.773416519165039
    6. ',' → logprob: -11.773416519165039
    7. ' &&' → logprob: -12.023416519165039
    8. '                ' → logprob: -12.023416519165039
    9. ':
' → logprob: -12.023416519165039
    10. ' ' → logprob: -12.398416519165039

Token 383: ' c' (ID: 274)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7071762084960938
    2. ' if' → logprob: -1.4571762084960938
    3. 'c' (adapté à ' c') → logprob: -1.7071762084960938
    4. ' c' → logprob: -2.5821762084960938
    5. 'next' → logprob: -4.832176208496094
    6. ' next' → logprob: -5.207176208496094
    7. '#' → logprob: -7.582176208496094
    8. '               ' → logprob: -7.707176208496094
    9. 'new' → logprob: -8.082176208496094
    10. 'current' → logprob: -8.457176208496094

Token 384: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07789935171604156
    2. '=' → logprob: -2.95289945602417
    3. 'S' → logprob: -4.57789945602417
    4. ' S' → logprob: -5.32789945602417
    5. '=S' → logprob: -5.32789945602417
    6. 's' → logprob: -6.82789945602417
    7. ' ' → logprob: -7.70289945602417
    8. ',' → logprob: -7.95289945602417
    9. ' ==' → logprob: -8.702898979187012
    10. ')' → logprob: -9.202898979187012

Token 385: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -4.56102097814437e-05
    2. ' S' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.500045776367188
    4. ''S' → logprob: -18.000045776367188
    5. '           ' → logprob: -18.250045776367188
    6. ' ' → logprob: -19.000045776367188
    7. 's' → logprob: -19.375045776367188
    8. '"S' → logprob: -19.375045776367188
    9. '               ' → logprob: -19.500045776367188
    10. '       ' → logprob: -19.500045776367188

Token 386: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[' → logprob: -17.625
    3. '               ' → logprob: -17.625
    4. 'i' → logprob: -17.625
    5. '                   ' → logprob: -17.75
    6. '```' → logprob: -18.125
    7. '[c' → logprob: -18.25
    8. ' [' → logprob: -18.625
    9. '[I' → logprob: -18.75
    10. '   ' → logprob: -19.5

Token 387: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.1611987203359604
    2. ']' → logprob: -1.9111987352371216
    3. ' ]
' → logprob: -7.786198616027832
    4. ')
' → logprob: -8.036198616027832
    5. ')' → logprob: -9.036198616027832
    6. ']
' → logprob: -9.786198616027832
    7. ' ]' → logprob: -10.411198616027832
    8. ']

' → logprob: -11.661198616027832
    9. '])' → logprob: -11.661198616027832
    10. '])
' → logprob: -12.161198616027832

Token 388: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5154598951339722
    2. '               ' → logprob: -1.2654598951339722
    3. ' if' → logprob: -2.3904600143432617
    4. '
' → logprob: -4.015460014343262
    5. '            
' → logprob: -5.640460014343262
    6. '                
' → logprob: -5.890460014343262
    7. 'if' → logprob: -6.265460014343262
    8. ' 
' → logprob: -7.765460014343262
    9. '            ' → logprob: -7.765460014343262
    10. '                   ' → logprob: -8.015460014343262

Token 389: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0005060884868726134
    2. ' if' → logprob: -8.750506401062012
    3. 'prev' → logprob: -8.875506401062012
    4. '               ' → logprob: -9.750506401062012
    5. 'can' → logprob: -10.000506401062012
    6. 'next' → logprob: -10.000506401062012
    7. '#' → logprob: -10.000506401062012
    8. 'last' → logprob: -12.000506401062012
    9. '           ' → logprob: -12.625506401062012
    10. '                
' → logprob: -13.875506401062012

Token 390: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.5424554944038391
    2. '(last' → logprob: -0.9174554944038391
    3. '(i' → logprob: -4.917455673217773
    4. '((' → logprob: -5.042455673217773
    5. 'length' → logprob: -6.292455673217773
    6. '(c' → logprob: -7.042455673217773
    7. '(length' → logprob: -7.167455673217773
    8. ' (' → logprob: -7.292455673217773
    9. ' last' → logprob: -7.292455673217773
    10. '(' → logprob: -9.167455673217773

Token 391: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.480555921792984
    2. '!=' → logprob: -0.9805558919906616
    3. ' !=' → logprob: -5.480556011199951
    4. ' ==' → logprob: -6.105556011199951
    5. '==
' → logprob: -10.980555534362793
    6. '```' → logprob: -10.980555534362793
    7. '==-' → logprob: -11.855555534362793
    8. '!=-' → logprob: -12.105555534362793
    9. '=' → logprob: -12.730555534362793
    10. '0' → logprob: -13.230555534362793

Token 392: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002872750163078308
    2. '0' → logprob: -5.877872943878174
    3. ' ' → logprob: -9.752872467041016
    4. '2' → logprob: -12.690372467041016
    5. '   ' → logprob: -12.940372467041016
    6. '  ' → logprob: -14.127872467041016
    7. 'None' → logprob: -14.127872467041016
    8. '```' → logprob: -14.440372467041016
    9. '

' → logprob: -14.627872467041016
    10. '    ' → logprob: -15.377872467041016

Token 393: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.033732373267412186
    2. '0' → logprob: -3.4087324142456055
    3. ' ' → logprob: -9.533732414245605
    4. '   ' → logprob: -12.783732414245605
    5. '2' → logprob: -12.971232414245605
    6. '```' → logprob: -13.158732414245605
    7. '  ' → logprob: -13.783732414245605
    8. '

' → logprob: -14.033732414245605
    9. '``' → logprob: -14.346232414245605
    10. 'None' → logprob: -14.471232414245605

Token 394: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.4766123592853546
    2. 'or' → logprob: -0.9766123294830322
    3. 'and' → logprob: -6.351612567901611
    4. ' and' → logprob: -7.476612567901611
    5. ':' → logprob: -8.726612091064453
    6. '==' → logprob: -10.226612091064453
    7. ':
' → logprob: -11.976612091064453
    8. '           ' → logprob: -12.351612091064453
    9. '=' → logprob: -12.851612091064453
    10. ' ' → logprob: -12.851612091064453

Token 395: '                   ' (ID: 699)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3219243288040161
    2. '                   ' → logprob: -1.3219243288040161
    3. ' or' → logprob: -5.446924209594727
    4. 'and' → logprob: -6.696924209594727
    5. '                       ' → logprob: -6.821924209594727
    6. '               ' → logprob: -7.446924209594727
    7. '                    
' → logprob: -7.696924209594727
    8. ':' → logprob: -8.196924209594727
    9. ':
' → logprob: -8.446924209594727
    10. '                           ' → logprob: -9.446924209594727

Token 396: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6146554350852966
    2. 'if' → logprob: -0.8646554350852966
    3. ' if' → logprob: -3.6146554946899414
    4. ' dp' → logprob: -4.614655494689941
    5. '                   ' → logprob: -7.114655494689941
    6. '                       ' → logprob: -9.114655494689941
    7. '               ' → logprob: -10.114655494689941
    8. '#' (adapté à ' #') → logprob: -10.239655494689941
    9. '                           ' → logprob: -10.239655494689941
    10. 'pass' → logprob: -10.364655494689941

Token 397: ' pas' (ID: 2173)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04034459963440895
    2. 'dp' → logprob: -3.415344715118408
    3. ' if' → logprob: -5.040344715118408
    4. ' dp' → logprob: -9.41534423828125
    5. '#' → logprob: -9.91534423828125
    6. 'pass' → logprob: -10.54034423828125
    7. '                   ' → logprob: -10.66534423828125
    8. '               ' → logprob: -11.54034423828125
    9. '                       ' → logprob: -12.66534423828125
    10. '                           ' → logprob: -12.66534423828125

Token 398: ' encore' (ID: 14043)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8184065818786621
    2. 'possible' → logprob: -2.693406581878662
    3. '               ' → logprob: -2.818406581878662
    4. '#' → logprob: -2.943406581878662
    5. ')' → logprob: -3.193406581878662
    6. ' if' → logprob: -3.193406581878662
    7. ' possible' → logprob: -3.193406581878662
    8. '=' → logprob: -3.568406581878662
    9. 'dp' → logprob: -3.818406581878662
    10. ' (' → logprob: -3.943406581878662

Token 399: ' commencé' (ID: 78085)
  Prédit: 'comm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comm' → logprob: -0.06759248673915863
    2. ' commencé' → logprob: -3.4425923824310303
    3. 'd' → logprob: -4.317592620849609
    4. 'de' → logprob: -4.567592620849609
    5. 'dé' → logprob: -5.317592620849609
    6. 'start' → logprob: -6.567592620849609
    7. 'pris' → logprob: -6.817592620849609
    8. ' pris' → logprob: -7.692592620849609
    9. 'com' → logprob: -7.942592620849609
    10. 'enc' → logprob: -8.06759262084961

Token 400: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4096033275127411
    2. ':' → logprob: -2.1596033573150635
    3. ':
' → logprob: -2.5346033573150635
    4. '                       ' → logprob: -3.2846033573150635
    5. '                   ' → logprob: -4.034603118896484
    6. '               ' → logprob: -4.034603118896484
    7. '                               ' → logprob: -4.409603118896484
    8. '                           ' → logprob: -4.659603118896484
    9. '                        
' → logprob: -4.784603118896484
    10. ' or' → logprob: -5.034603118896484

Token 401: ' on' (ID: 402)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4850548505783081
    2. 'if' → logprob: -0.9850548505783081
    3. '                       ' → logprob: -5.360054969787598
    4. 'dp' → logprob: -6.110054969787598
    5. '                   ' → logprob: -6.235054969787598
    6. ' dp' → logprob: -6.985054969787598
    7. '                           ' → logprob: -7.735054969787598
    8. '                               ' → logprob: -8.110054969787598
    9. 'pass' → logprob: -9.360054969787598
    10. ' pass' → logprob: -9.610054969787598

Token 402: ' l' (ID: 305)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3800688087940216
    2. 'can' → logprob: -2.130068778991699
    3. 'pe' → logprob: -2.630068778991699
    4. 'if' → logprob: -2.880068778991699
    5. ' continue' → logprob: -3.630068778991699
    6. ' can' → logprob: -4.505068778991699
    7. '               ' → logprob: -5.505068778991699
    8. '#' → logprob: -5.505068778991699
    9. 'pour' → logprob: -5.630068778991699
    10. ' peux' → logprob: -5.755068778991699

Token 403: ''a' (ID: 10443)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.25430941581726074
    2. 'if' → logprob: -1.6293094158172607
    3. ''' → logprob: -5.37930965423584
    4. '```' → logprob: -5.50430965423584
    5. 'a' → logprob: -5.62930965423584
    6. 'es' → logprob: -6.00430965423584
    7. 'dp' → logprob: -6.75430965423584
    8. 'o' → logprob: -6.87930965423584
    9. ''ai' → logprob: -7.12930965423584
    10. ''''' → logprob: -7.12930965423584

Token 404: ' déjà' (ID: 21229)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.30192098021507263
    2. 'if' → logprob: -2.4269208908081055
    3. 'continue' → logprob: -3.3019208908081055
    4. ' peut' → logprob: -3.5519208908081055
    5. 'p' → logprob: -3.6769208908081055
    6. 'can' → logprob: -4.3019208908081055
    7. 'pour' → logprob: -4.5519208908081055
    8. 'ignore' → logprob: -5.0519208908081055
    9. ' peux' → logprob: -5.3019208908081055
    10. 'possible' → logprob: -5.4269208908081055

Token 405: ' g' (ID: 329)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0353997945785522
    2. 'continue' → logprob: -1.4103997945785522
    3. '\n' → logprob: -1.5353997945785522
    4. ' continue' → logprob: -2.535399913787842
    5. '               ' → logprob: -3.285399913787842
    6. ' 
' → logprob: -3.785399913787842
    7. '  
' → logprob: -4.660399913787842
    8. '                    
' → logprob: -5.035399913787842
    9. '                   ' → logprob: -5.285399913787842
    10. '#' → logprob: -5.660399913787842

Token 406: 'éré' (ID: 33338)
  Prédit: 'ard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ard' → logprob: -0.08873898535966873
    2. 'ar' → logprob: -2.9637389183044434
    3. 'arant' → logprob: -4.713738918304443
    4. 'arded' → logprob: -5.213738918304443
    5. 'éré' → logprob: -5.463738918304443
    6. 'estion' → logprob: -6.213738918304443
    7. 'r' → logprob: -6.213738918304443
    8. 'enerated' → logprob: -6.588738918304443
    9. 'u' → logprob: -7.088738918304443
    10. 'érée' → logprob: -7.463738918304443

Token 407: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007182692061178386
    2. '           ' → logprob: -8.125718116760254
    3. '
' → logprob: -8.500718116760254
    4. '                   ' → logprob: -8.750718116760254
    5. 'elif' → logprob: -10.500718116760254
    6. 'else' → logprob: -11.375718116760254
    7. '              ' → logprob: -12.750718116760254
    8. '                ' → logprob: -13.125718116760254
    9. 'continue' → logprob: -13.125718116760254
    10. '                
' → logprob: -13.125718116760254

Token 408: ' on' (ID: 402)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.35436341166496277
    2. ' pass' → logprob: -1.7293634414672852
    3. '                   ' → logprob: -2.854363441467285
    4. 'pass' → logprob: -4.104363441467285
    5. 'elif' → logprob: -4.479363441467285
    6. '                    
' → logprob: -4.604363441467285
    7. ')' → logprob: -5.354363441467285
    8. ' elif' → logprob: -6.104363441467285
    9. ' continue' → logprob: -6.104363441467285
    10. '                ' → logprob: -6.229363441467285

Token 409: ' ne' (ID: 453)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6566080451011658
    2. 'continue' → logprob: -0.7816080451011658
    3. '               ' → logprob: -4.6566081047058105
    4. 'n' → logprob: -5.4066081047058105
    5. '           ' → logprob: -5.4066081047058105
    6. 'pass' → logprob: -6.2816081047058105
    7. ' pass' → logprob: -6.5316081047058105
    8. 'contin' → logprob: -7.4066081047058105
    9. ' n' → logprob: -8.531607627868652
    10. 'pas' → logprob: -8.656607627868652

Token 410: ' doit' (ID: 21822)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.21630512177944183
    2. ' continue' → logprob: -1.841305136680603
    3. 'pas' → logprob: -3.4663050174713135
    4. 'contin' → logprob: -5.716305255889893
    5. 'pass' → logprob: -7.966305255889893
    6. '_continue' → logprob: -8.091304779052734
    7. '               ' → logprob: -8.966304779052734
    8. 's' → logprob: -9.091304779052734
    9. '           ' → logprob: -9.466304779052734
    10. 'p' → logprob: -9.966304779052734

Token 411: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.13609901070594788
    2. ' pas' → logprob: -2.136099100112915
    3. 'not' → logprob: -5.636098861694336
    4. 'n't' → logprob: -6.386098861694336
    5. 'continue' → logprob: -6.886098861694336
    6. 't' → logprob: -7.511098861694336
    7. '_pas' → logprob: -7.761098861694336
    8. ' not' → logprob: -7.886098861694336
    9. 'contin' → logprob: -8.011098861694336
    10. ' continue' → logprob: -8.261098861694336

Token 412: ' arriver' (ID: 78302)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.33850347995758057
    2. 'continue' → logprob: -1.3385034799575806
    3. 'pass' → logprob: -4.213503360748291
    4. ' continuer' → logprob: -5.588503360748291
    5. ' continue' → logprob: -6.838503360748291
    6. 'prendre' → logprob: -6.838503360748291
    7. 'faire' → logprob: -6.963503360748291
    8. 'continu' → logprob: -7.338503360748291
    9. 'repr' → logprob: -7.588503360748291
    10. 'cont' → logprob: -8.08850383758545

Token 413: ' ici' (ID: 27994)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.2038494348526
    2. ' ' → logprob: -1.5788494348526
    3. ' here' → logprob: -2.2038493156433105
    4. ' at' → logprob: -2.2038493156433105
    5. 'à' → logprob: -2.2038493156433105
    6. ')' → logprob: -2.9538493156433105
    7. ' ici' → logprob: -3.4538493156433105
    8. ' to' → logprob: -4.0788493156433105
    9. 'to' → logprob: -4.7038493156433105
    10. '=' → logprob: -4.8288493156433105

Token 414: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.668202817440033
    2. '\n' → logprob: -0.918202817440033
    3. '               ' → logprob: -2.6682028770446777
    4. ' 
' → logprob: -5.543202877044678
    5. '  
' → logprob: -5.668202877044678
    6. '                   ' → logprob: -6.668202877044678
    7. '                
' → logprob: -6.668202877044678
    8. ' or' → logprob: -6.793202877044678
    9. ')' → logprob: -6.918202877044678
    10. '                    
' → logprob: -7.168202877044678

Token 415: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.27838844060897827
    2. '
' → logprob: -1.528388500213623
    3. '\n' → logprob: -4.278388500213623
    4. '                   ' → logprob: -4.778388500213623
    5. ' 
' → logprob: -7.153388500213623
    6. '           ' → logprob: -7.278388500213623
    7. '  
' → logprob: -7.653388500213623
    8. '                    
' → logprob: -8.028388023376465
    9. '                
' → logprob: -8.403388023376465
    10. '    
' → logprob: -8.403388023376465

Token 416: ' pass' (ID: 1853)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.15709874033927917
    2. ' continue' → logprob: -2.4070987701416016
    3. 'pass' (adapté à ' pass') → logprob: -3.0320987701416016
    4. ' pass' → logprob: -5.032098770141602
    5. '                   ' → logprob: -8.407098770141602
    6. '               ' → logprob: -8.907098770141602
    7. '   ' → logprob: -9.657098770141602
    8. '                           ' → logprob: -9.782098770141602
    9. '           ' → logprob: -10.657098770141602
    10. '                       ' → logprob: -11.032098770141602

Token 417: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008096250821836293
    2. 'elif' → logprob: -7.375809669494629
    3. 'else' → logprob: -8.750809669494629
    4. ' else' → logprob: -11.000809669494629
    5. ' elif' → logprob: -12.375809669494629
    6. '			' → logprob: -13.250809669494629
    7. '
' → logprob: -14.000809669494629
    8. '           ' → logprob: -15.250809669494629
    9. '                
' → logprob: -16.125808715820312
    10. ')' → logprob: -16.375808715820312

Token 418: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00043698702938854694
    2. 'else' → logprob: -8.500436782836914
    3. 'elif' → logprob: -8.625436782836914
    4. ' else' → logprob: -10.250436782836914
    5. '```' → logprob: -11.625436782836914
    6. '			' → logprob: -12.500436782836914
    7. ' elif' → logprob: -13.250436782836914
    8. '           ' → logprob: -13.625436782836914
    9. '              ' → logprob: -14.375436782836914
    10. '                
' → logprob: -15.125436782836914

Token 419: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08031883835792542
    2. 'else' → logprob: -3.0803189277648926
    3. 'elif' (adapté à ' elif') → logprob: -3.5803189277648926
    4. ' else' → logprob: -5.955318927764893
    5. '           ' → logprob: -7.705318927764893
    6. ' elif' → logprob: -8.330318450927734
    7. '			' → logprob: -9.955318450927734
    8. '
' → logprob: -11.830318450927734
    9. '              ' → logprob: -12.205318450927734
    10. '                
' → logprob: -12.330318450927734

Token 420: ' last' (ID: 2174)
  Prédit: ' last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -1.3143117427825928
    2. 'last' → logprob: -1.3143117427825928
    3. '(last' → logprob: -1.6893117427825928
    4. ' (' → logprob: -2.3143117427825928
    5. ' can' → logprob: -2.5643117427825928
    6. 'can' → logprob: -2.8143117427825928
    7. '(can' → logprob: -4.314311981201172
    8. '(c' → logprob: -4.314311981201172
    9. 'c' → logprob: -5.314311981201172
    10. ' c' → logprob: -5.439311981201172

Token 421: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16042710840702057
    2. ' ==' → logprob: -1.9104270935058594
    3. '!=' → logprob: -9.16042709350586
    4. ' !=' → logprob: -10.16042709350586
    5. '[' → logprob: -11.16042709350586
    6. '0' → logprob: -11.28542709350586
    7. '==
' → logprob: -11.66042709350586
    8. '=' → logprob: -11.91042709350586
    9. ')==' → logprob: -12.66042709350586
    10. ']==' → logprob: -12.78542709350586

Token 422: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003063838230445981
    2. '1' → logprob: -8.125306129455566
    3. ' ' → logprob: -11.500306129455566
    4. '   ' → logprob: -16.875307083129883
    5. '۰' → logprob: -17.187807083129883
    6. '０' → logprob: -17.812807083129883
    7. '(' → logprob: -18.375307083129883
    8. '  ' → logprob: -18.687807083129883
    9. '```' → logprob: -18.687807083129883
    10. '[' → logprob: -18.750307083129883

Token 423: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010044389637187123
    2. '1' → logprob: -9.250100135803223
    3. ' ' → logprob: -12.375100135803223
    4. '   ' → logprob: -17.43760108947754
    5. '۰' → logprob: -17.56260108947754
    6. '０' → logprob: -18.37510108947754
    7. '০' → logprob: -18.56260108947754
    8. '  ' → logprob: -18.87510108947754
    9. '=' → logprob: -18.93760108947754
    10. '[' → logprob: -19.50010108947754

Token 424: ':
' (ID: 734)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.3158046007156372
    2. ' and' → logprob: -1.3158046007156372
    3. ' or' → logprob: -6.815804481506348
    4. 'or' → logprob: -7.315804481506348
    5. '               ' → logprob: -8.440804481506348
    6. '                   ' → logprob: -8.690804481506348
    7. '   ' → logprob: -9.065804481506348
    8. ':' → logprob: -9.565804481506348
    9. ':
' → logprob: -9.940804481506348
    10. '           ' → logprob: -10.065804481506348

Token 425: '                   ' (ID: 699)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2604338824748993
    2. '                   ' → logprob: -1.8854339122772217
    3. 'and' → logprob: -2.6354339122772217
    4. '               ' → logprob: -5.260433673858643
    5. '   ' → logprob: -8.3854341506958
    6. '                       ' → logprob: -9.3854341506958
    7. ':
' → logprob: -9.6354341506958
    8. ' ' → logprob: -9.6354341506958
    9. ':' → logprob: -9.8854341506958
    10. '                ' → logprob: -10.7604341506958

Token 426: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3474743664264679
    2. ' if' → logprob: -1.7224743366241455
    3. ' and' → logprob: -2.9724743366241455
    4. '               ' → logprob: -3.9724743366241455
    5. '                   ' → logprob: -3.9724743366241455
    6. 'continue' → logprob: -4.347474575042725
    7. ' continue' → logprob: -5.347474575042725
    8. 'and' → logprob: -5.472474575042725
    9. '                       ' → logprob: -6.097474575042725
    10. '   ' → logprob: -7.472474575042725

Token 427: ' dernier' (ID: 27982)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1839897483587265
    2. 'can' → logprob: -2.1839897632598877
    3. ' if' → logprob: -3.6839897632598877
    4. 'c' → logprob: -4.183989524841309
    5. ' can' → logprob: -4.933989524841309
    6. 'S' → logprob: -6.058989524841309
    7. '               ' → logprob: -6.558989524841309
    8. ' c' → logprob: -7.058989524841309
    9. 'i' → logprob: -7.183989524841309
    10. '                   ' → logprob: -7.683989524841309

Token 428: ' wagon' (ID: 90907)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.42762067914009094
    2. '!=' → logprob: -1.6776206493377686
    3. ' ==' → logprob: -2.8026206493377686
    4. '==' → logprob: -2.9276206493377686
    5. ']' → logprob: -4.302620887756348
    6. ' wagon' → logprob: -5.052620887756348
    7. ' wag' → logprob: -5.927620887756348
    8. 'wagon' → logprob: -6.052620887756348
    9. 'token' → logprob: -6.427620887756348
    10. '```' → logprob: -6.427620887756348

Token 429: ' vient' (ID: 40370)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4202803373336792
    2. '!=' → logprob: -1.7952803373336792
    3. ' ==' → logprob: -2.1702804565429688
    4. '==' → logprob: -3.1702804565429688
    5. ' est' → logprob: -5.045280456542969
    6. ')' → logprob: -5.795280456542969
    7. ' et' → logprob: -6.420280456542969
    8. 'et' → logprob: -6.670280456542969
    9. ' is' → logprob: -6.920280456542969
    10. ',' → logprob: -7.045280456542969

Token 430: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.3038066327571869
    2. ' de' → logprob: -1.5538066625595093
    3. 'from' → logprob: -3.0538065433502197
    4. ' from' → logprob: -6.553806781768799
    5. ' du' → logprob: -7.178806781768799
    6. 'd' → logprob: -7.803806781768799
    7. 'du' → logprob: -8.17880630493164
    8. '               ' → logprob: -8.80380630493164
    9. '   ' → logprob: -8.92880630493164
    10. '=' → logprob: -9.92880630493164

Token 431: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0031112879514694214
    2. 'T' → logprob: -6.128111362457275
    3. ' S' → logprob: -7.003111362457275
    4. ' T' → logprob: -12.128110885620117
    5. 's' → logprob: -12.128110885620117
    6. ' ' → logprob: -12.878110885620117
    7. ' ' → logprob: -14.315610885620117
    8. 'j' → logprob: -14.815610885620117
    9. 'i' → logprob: -14.878110885620117
    10. 'N' → logprob: -15.190610885620117

Token 432: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.15483006834983826
    2. 'and' → logprob: -2.529829978942871
    3. '                   ' → logprob: -3.154829978942871
    4. '                       ' → logprob: -4.654829978942871
    5. ':
' → logprob: -5.279829978942871
    6. ' or' → logprob: -5.904829978942871
    7. ',' → logprob: -6.904829978942871
    8. ':' → logprob: -7.154829978942871
    9. '               ' → logprob: -7.279829978942871
    10. ' et' → logprob: -7.654829978942871

Token 433: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.096052885055542
    2. ' if' → logprob: -1.596052885055542
    3. '                   ' → logprob: -1.971052885055542
    4. ' continue' → logprob: -2.096052885055542
    5. '                       ' → logprob: -2.471052885055542
    6. '                           ' → logprob: -3.596052885055542
    7. 'continue' → logprob: -3.846052885055542
    8. '#' → logprob: -4.221053123474121
    9. '   ' → logprob: -4.221053123474121
    10. ' #' → logprob: -4.721053123474121

Token 434: ' doit' (ID: 21822)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.14514276385307312
    2. ' continue' → logprob: -2.3951427936553955
    3. '#' → logprob: -4.020142555236816
    4. 'if' → logprob: -5.020142555236816
    5. '               ' → logprob: -5.770142555236816
    6. '           ' → logprob: -6.020142555236816
    7. 'n' → logprob: -6.395142555236816
    8. 'can' → logprob: -6.520142555236816
    9. 'ne' → logprob: -6.770142555236816
    10. ' peut' → logprob: -6.770142555236816

Token 435: ' alter' (ID: 14183)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -1.0141040086746216
    2. ' prendre' → logprob: -1.8891040086746216
    3. 'prendre' → logprob: -2.014103889465332
    4. 'if' → logprob: -2.139103889465332
    5. 'pass' → logprob: -2.639103889465332
    6. 'contin' → logprob: -3.389103889465332
    7. 'not' → logprob: -3.764103889465332
    8. ' continuer' → logprob: -3.764103889465332
    9. '   ' → logprob: -4.264103889465332
    10. 'continue' → logprob: -4.514103889465332

Token 436: 'ner' (ID: 1247)
  Prédit: 'ner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ner' → logprob: -0.00013357517309486866
    2. 'n' → logprob: -9.125133514404297
    3. 'nner' → logprob: -11.375133514404297
    4. 'er' → logprob: -11.500133514404297
    5. 'ne' → logprob: -13.750133514404297
    6. '   ' → logprob: -14.500133514404297
    7. '
' → logprob: -15.000133514404297
    8. 'nez' → logprob: -15.125133514404297
    9. '```' → logprob: -16.250133514404297
    10. 'r' → logprob: -16.375133514404297

Token 437: ' donc' (ID: 14206)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09097748249769211
    2. 'and' → logprob: -3.090977430343628
    3. '                   ' → logprob: -3.340977430343628
    4. '               ' → logprob: -6.590977668762207
    5. ' or' → logprob: -7.090977668762207
    6. '                       ' → logprob: -7.090977668762207
    7. ' if' → logprob: -7.215977668762207
    8. ',' → logprob: -7.340977668762207
    9. '                    
' → logprob: -7.715977668762207
    10. ' between' → logprob: -8.715977668762207

Token 438: ' c' (ID: 274)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20758861303329468
    2. 'S' → logprob: -2.5825886726379395
    3. 'can' → logprob: -2.9575886726379395
    4. ' if' → logprob: -3.5825886726379395
    5. 'c' → logprob: -4.0825886726379395
    6. ' c' → logprob: -5.7075886726379395
    7. ' S' → logprob: -6.0825886726379395
    8. '               ' → logprob: -6.0825886726379395
    9. '                   ' → logprob: -6.2075886726379395
    10. ' can' → logprob: -6.5825886726379395

Token 439: ' doit' (ID: 21822)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6327219605445862
    2. '!=' → logprob: -0.7577219605445862
    3. '=' → logprob: -10.132721900939941
    4. '==' → logprob: -10.257721900939941
    5. ' ==' → logprob: -10.632721900939941
    6. ' ' → logprob: -12.382721900939941
    7. '```' → logprob: -12.507721900939941
    8. ')!=' → logprob: -12.757721900939941
    9. ' =' → logprob: -13.007721900939941
    10. '()!=' → logprob: -13.007721900939941

Token 440: ' être' (ID: 9104)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.011449663899838924
    2. ' !=' → logprob: -5.511449813842773
    3. ' not' → logprob: -6.386449813842773
    4. 'not' → logprob: -6.386449813842773
    5. ' be' → logprob: -6.636449813842773
    6. '=' → logprob: -7.136449813842773
    7. '<|end|>' → logprob: -7.136449813842773
    8. '==' → logprob: -7.761449813842773
    9. 'be' → logprob: -7.886449813842773
    10. '!='' → logprob: -9.636449813842773

Token 441: ' différent' (ID: 114823)
  Prédit: ''O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''O' → logprob: -0.0722990483045578
    2. 'can' → logprob: -3.197299003601074
    3. ''I' → logprob: -4.322299003601074
    4. 'O' → logprob: -5.197299003601074
    5. ''' → logprob: -5.822299003601074
    6. ' '' → logprob: -6.072299003601074
    7. ''T' → logprob: -7.322299003601074
    8. ''o' → logprob: -7.572299003601074
    9. '"O' → logprob: -7.697299003601074
    10. 'different' → logprob: -7.697299003601074

Token 442: ' de' (ID: 334)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.26280540227890015
    2. 'from' → logprob: -1.512805461883545
    3. ' c' → logprob: -5.387805461883545
    4. 'c' → logprob: -5.887805461883545
    5. ' ' → logprob: -6.387805461883545
    6. '               ' → logprob: -7.387805461883545
    7. '                   ' → logprob: -7.637805461883545
    8. ' de' → logprob: -8.512804985046387
    9. '   ' → logprob: -9.512804985046387
    10. '	from' → logprob: -10.387804985046387

Token 443: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0014992679934948683
    2. 'c' → logprob: -7.126499176025391
    3. ' S' → logprob: -7.376499176025391
    4. ' ' → logprob: -10.25149917602539
    5. 'dp' → logprob: -11.12649917602539
    6. '   ' → logprob: -12.25149917602539
    7. ' c' → logprob: -12.62649917602539
    8. '(S' → logprob: -12.87649917602539
    9. 's' → logprob: -13.50149917602539
    10. '           ' → logprob: -14.25149917602539

Token 444: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.630610641877865e-06
    2. '[' → logprob: -12.500006675720215
    3. '[c' → logprob: -13.375006675720215
    4. 'i' → logprob: -14.750006675720215
    5. '[S' → logprob: -15.750006675720215
    6. '[j' → logprob: -15.750006675720215
    7. '[I' → logprob: -15.875006675720215
    8. '   ' → logprob: -16.1250057220459
    9. '[(' → logprob: -16.5000057220459
    10. '[max' → logprob: -17.5000057220459

Token 445: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05937647819519043
    2. '[i' → logprob: -3.0593764781951904
    3. ' -' → logprob: -5.1843767166137695
    4. ']' → logprob: -5.4343767166137695
    5. '])' → logprob: -7.9343767166137695
    6. 'i' → logprob: -9.43437671661377
    7. '[' → logprob: -9.55937671661377
    8. '   ' → logprob: -9.68437671661377
    9. '(i' → logprob: -10.18437671661377
    10. '][' → logprob: -10.43437671661377

Token 446: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11676415055990219
    2. '-' → logprob: -2.4917640686035156
    3. '1' → logprob: -3.9917640686035156
    4. ']' → logprob: -5.116764068603516
    5. '[i' → logprob: -6.116764068603516
    6. '   ' → logprob: -8.366764068603516
    7. ' -' → logprob: -9.116764068603516
    8. '(i' → logprob: -9.241764068603516
    9. ' i' → logprob: -9.616764068603516
    10. ' ' → logprob: -9.741764068603516

Token 447: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027238883078098297
    2. '])' → logprob: -3.6522388458251953
    3. '[i' → logprob: -8.027238845825195
    4. ']
' → logprob: -9.027238845825195
    5. ']:
' → logprob: -9.277238845825195
    6. ']):
' → logprob: -9.402238845825195
    7. ' ]' → logprob: -9.527238845825195
    8. '])
' → logprob: -9.902238845825195
    9. '[' → logprob: -10.152238845825195
    10. '],' → logprob: -10.527238845825195

Token 448: '                   ' (ID: 699)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.018726911395788193
    2. 'and' → logprob: -4.018726825714111
    3. '               ' → logprob: -8.39372730255127
    4. ' or' → logprob: -9.14372730255127
    5. ')' → logprob: -9.26872730255127
    6. '           ' → logprob: -9.76872730255127
    7. '                   ' → logprob: -10.76872730255127
    8. ' ' → logprob: -10.76872730255127
    9. '            ' → logprob: -11.26872730255127
    10. '                ' → logprob: -11.64372730255127

Token 449: ' prev' (ID: 10258)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.40960079431533813
    2. '               ' → logprob: -1.7846007347106934
    3. '                   ' → logprob: -2.5346007347106934
    4. 'and' → logprob: -3.6596007347106934
    5. '                       ' → logprob: -4.659600734710693
    6. ' ' → logprob: -4.784600734710693
    7. ':
' → logprob: -4.909600734710693
    8. ':' → logprob: -5.034600734710693
    9. ' =' → logprob: -5.284600734710693
    10. '=' → logprob: -5.534600734710693

Token 450: ' =' (ID: 314)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2460743635892868
    2. ' =' → logprob: -2.1210744380950928
    3. ' ==' → logprob: -3.6210744380950928
    4. '!=' → logprob: -3.6210744380950928
    5. ']' → logprob: -4.496074199676514
    6. '=' → logprob: -4.496074199676514
    7. 'S' → logprob: -5.121074199676514
    8. '==' → logprob: -6.246074199676514
    9. ' if' → logprob: -6.246074199676514
    10. ')' → logprob: -6.371074199676514

Token 451: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -7.517272024415433e-05
    2. ' S' → logprob: -9.500075340270996
    3. 's' → logprob: -16.75007438659668
    4. ' ' → logprob: -16.75007438659668
    5. '(S' → logprob: -17.12507438659668
    6. '   ' → logprob: -17.25007438659668
    7. '`' → logprob: -17.75007438659668
    8. ''S' → logprob: -18.00007438659668
    9. '_S' → logprob: -18.37507438659668
    10. '           ' → logprob: -18.50007438659668

Token 452: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00219273311085999
    2. 'i' → logprob: -6.127192497253418
    3. '[' → logprob: -12.752192497253418
    4. '   ' → logprob: -13.127192497253418
    5. '                   ' → logprob: -14.377192497253418
    6. '           ' → logprob: -14.502192497253418
    7. 's' → logprob: -15.127192497253418
    8. '```' → logprob: -15.627192497253418
    9. '[
' → logprob: -15.752192497253418
    10. '
' → logprob: -15.877192497253418

Token 453: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.11362652480602264
    2. 'i' → logprob: -2.238626480102539
    3. ']' → logprob: -7.863626480102539
    4. '[' → logprob: -8.863626480102539
    5. '-' → logprob: -9.488626480102539
    6. '][' → logprob: -9.613626480102539
    7. ' i' → logprob: -9.738626480102539
    8. '(i' → logprob: -10.238626480102539
    9. '   ' → logprob: -11.738626480102539
    10. '[
' → logprob: -11.863626480102539

Token 454: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017946491425391287
    2. ' ' → logprob: -8.875179290771484
    3. '-' → logprob: -10.875179290771484
    4. '   ' → logprob: -11.625179290771484
    5. 'i' → logprob: -12.000179290771484
    6. '```' → logprob: -13.000179290771484
    7. ' -' → logprob: -14.000179290771484
    8. ']' → logprob: -14.500179290771484
    9. '`' → logprob: -15.187679290771484
    10. '  ' → logprob: -15.250179290771484

Token 455: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.10025380551815033
    2. ']' → logprob: -2.3502538204193115
    3. ']
' → logprob: -10.72525405883789
    4. ' ]
' → logprob: -11.10025405883789
    5. ']

' → logprob: -12.47525405883789
    6. '']
' → logprob: -13.60025405883789
    7. ']==' → logprob: -13.72525405883789
    8. ' ]' → logprob: -13.72525405883789
    9. '[' → logprob: -14.97525405883789
    10. '   ' → logprob: -15.10025405883789

Token 456: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.25601351261138916
    2. '                   ' → logprob: -1.5060135126113892
    3. '                    
' → logprob: -6.3810133934021
    4. ' and' → logprob: -7.1310133934021
    5. '                
' → logprob: -7.6310133934021
    6. ' if' → logprob: -8.506013870239258
    7. ')' → logprob: -8.631013870239258
    8. '           ' → logprob: -8.756013870239258
    9. '
' → logprob: -9.506013870239258
    10. '                       ' → logprob: -9.506013870239258

Token 457: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8080938458442688
    2. ' if' → logprob: -1.558093786239624
    3. ' and' → logprob: -1.933093786239624
    4. '               ' → logprob: -2.433093786239624
    5. 'if' (adapté à ' if') → logprob: -2.808093786239624
    6. '                    
' → logprob: -3.808093786239624
    7. 'and' → logprob: -4.433094024658203
    8. ')' → logprob: -5.558094024658203
    9. '
' → logprob: -6.183094024658203
    10. ' 
' → logprob: -6.433094024658203

Token 458: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.5745992064476013
    2. ' can' → logprob: -1.074599266052246
    3. 'c' → logprob: -2.699599266052246
    4. ' c' → logprob: -3.574599266052246
    5. '           ' → logprob: -9.074599266052246
    6. ' not' → logprob: -9.324599266052246
    7. 'prev' → logprob: -10.074599266052246
    8. '               ' → logprob: -10.449599266052246
    9. 'not' → logprob: -10.949599266052246
    10. ' prev' → logprob: -11.199599266052246

Token 459: '_connect' (ID: 32485)
  Prédit: '_connect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_connect' → logprob: -4.0722858102526516e-05
    2. 'connect' → logprob: -10.250041007995605
    3. '_' → logprob: -13.375041007995605
    4. '_CONNECT' → logprob: -13.875041007995605
    5. '	connect' → logprob: -14.875041007995605
    6. '_disconnect' → logprob: -15.000041007995605
    7. '_predict' → logprob: -15.375041007995605
    8. '_c' → logprob: -15.500041007995605
    9. '_continue' → logprob: -15.625041007995605
    10. '_con' → logprob: -15.750041007995605

Token 460: '(prev' (ID: 59594)
  Prédit: '(prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prev' → logprob: -9.627176768844947e-05
    2. 'prev' → logprob: -9.625096321105957
    3. '(c' → logprob: -10.625096321105957
    4. '(' → logprob: -12.500096321105957
    5. ' (' → logprob: -14.625096321105957
    6. ')' → logprob: -14.875096321105957
    7. '(previous' → logprob: -14.875096321105957
    8. '	prev' → logprob: -15.500096321105957
    9. '(
' → logprob: -16.00009536743164
    10. '```' → logprob: -16.25009536743164

Token 461: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.049090176820755005
    2. ',c' → logprob: -3.4240901470184326
    3. ' ,' → logprob: -4.299090385437012
    4. 'c' → logprob: -6.799090385437012
    5. '(c' → logprob: -7.799090385437012
    6. ' c' → logprob: -8.549090385437012
    7. ',
' → logprob: -11.049090385437012
    8. '(' → logprob: -12.799090385437012
    9. '',' → logprob: -13.674090385437012
    10. '                   ' → logprob: -13.924090385437012

Token 462: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20141451060771942
    2. ' c' → logprob: -1.7014144659042358
    3. ')c' → logprob: -13.951414108276367
    4. ')' → logprob: -15.326414108276367
    5. '	c' → logprob: -16.951414108276367
    6. ' ' → logprob: -17.201414108276367
    7. '                   ' → logprob: -17.451414108276367
    8. ' ' → logprob: -18.201414108276367
    9. '(c' → logprob: -18.701414108276367
    10. '               ' → logprob: -18.701414108276367

Token 463: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.024297254160046577
    2. '):
' → logprob: -3.7742972373962402
    3. ')' → logprob: -6.89929723739624
    4. ' ):' → logprob: -10.774297714233398
    5. '):
' → logprob: -11.649297714233398
    6. ':' → logprob: -11.899297714233398
    7. '):

' → logprob: -12.774297714233398
    8. ' and' → logprob: -13.524297714233398
    9. ' ):
' → logprob: -14.524297714233398
    10. '                   ' → logprob: -14.774297714233398

Token 464: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.008658303879201412
    2. ' and' → logprob: -5.008658409118652
    3. ':
' → logprob: -6.508658409118652
    4. ':' → logprob: -8.133658409118652
    5. 'and' → logprob: -10.508658409118652
    6. '                   ' → logprob: -10.758658409118652
    7. ' dp' → logprob: -10.758658409118652
    8. '                           ' → logprob: -10.883658409118652
    9. 'dp' → logprob: -10.883658409118652
    10. ' :
' → logprob: -11.508658409118652

Token 465: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.2538158595561981
    2. ' dp' → logprob: -1.6288158893585205
    3. ' if' → logprob: -4.378815650939941
    4. 'if' → logprob: -4.628815650939941
    5. '                           ' → logprob: -5.253815650939941
    6. '                               ' → logprob: -8.503815650939941
    7. '                       ' → logprob: -8.628815650939941
    8. '	dp' → logprob: -10.878815650939941
    9. '   ' → logprob: -11.253815650939941
    10. ' ' → logprob: -11.378815650939941

Token 466: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. 'i' → logprob: -15.375000953674316
    3. '
' → logprob: -15.500000953674316
    4. '```' → logprob: -16.75
    5. ' [' → logprob: -17.0
    6. '[' → logprob: -17.625
    7. '                   ' → logprob: -17.625
    8. '   ' → logprob: -18.125
    9. '                       ' → logprob: -18.5
    10. '[next' → logprob: -18.75

Token 467: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.919942486798391e-05
    2. ' +' → logprob: -10.000059127807617
    3. '[' → logprob: -11.375059127807617
    4. '+i' → logprob: -13.750059127807617
    5. '[i' → logprob: -14.125059127807617
    6. '][' → logprob: -15.250059127807617
    7. '+[' → logprob: -16.625059127807617
    8. '+
' → logprob: -17.500059127807617
    9. '＋' → logprob: -17.750059127807617
    10. '           ' → logprob: -18.250059127807617

Token 468: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -13.00000286102295
    3. '   ' → logprob: -15.00000286102295
    4. '```' → logprob: -15.12500286102295
    5. '
' → logprob: -15.62500286102295
    6. '           ' → logprob: -18.312503814697266
    7. '       ' → logprob: -18.312503814697266
    8. '``' → logprob: -18.500003814697266
    9. '

' → logprob: -18.687503814697266
    10. '     ' → logprob: -18.750003814697266

Token 469: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00018006093159783632
    2. '[j' → logprob: -8.8751802444458
    3. ']' → logprob: -10.5001802444458
    4. ' ][' → logprob: -12.1251802444458
    5. '[' → logprob: -12.6251802444458
    6. '[i' → logprob: -13.8751802444458
    7. '   ' → logprob: -14.3751802444458
    8. '           ' → logprob: -14.7501802444458
    9. ' ' → logprob: -14.8751802444458
    10. '```' → logprob: -15.2501802444458

Token 470: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.8789383830153383e-05
    2. ' j' → logprob: -11.000019073486328
    3. '   ' → logprob: -13.625019073486328
    4. '	j' → logprob: -15.625019073486328
    5. '[j' → logprob: -15.625019073486328
    6. ',j' → logprob: -15.750019073486328
    7. '           ' → logprob: -16.750019073486328
    8. '```' → logprob: -17.125019073486328
    9. '       ' → logprob: -17.375019073486328
    10. ' ' → logprob: -17.500019073486328

Token 471: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001402025343850255
    2. '[' → logprob: -6.626401901245117
    3. ']' → logprob: -9.876401901245117
    4. ' ][' → logprob: -11.626401901245117
    5. '[last' → logprob: -12.001401901245117
    6. '[i' → logprob: -12.626401901245117
    7. '0' → logprob: -13.626401901245117
    8. ' ' → logprob: -14.376401901245117
    9. ''][' → logprob: -14.626401901245117
    10. '           ' → logprob: -15.126401901245117

Token 472: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2352385965641588e-05
    2. 'last' → logprob: -11.375012397766113
    3. ' ' → logprob: -14.125012397766113
    4. '   ' → logprob: -16.375011444091797
    5. '
' → logprob: -17.750011444091797
    6. '1' → logprob: -18.250011444091797
    7. '```' → logprob: -18.500011444091797
    8. '           ' → logprob: -18.937511444091797
    9. ' last' → logprob: -19.000011444091797
    10. '０' → logprob: -19.125011444091797

Token 473: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.4140441635390744e-05
    2. ']=' → logprob: -11.375014305114746
    3. ' ]' → logprob: -13.125014305114746
    4. 'max' → logprob: -14.875014305114746
    5. ')' → logprob: -15.875014305114746
    6. '])' → logprob: -17.50001335144043
    7. ']
' → logprob: -17.62501335144043
    8. '=' → logprob: -18.25001335144043
    9. ']+=' → logprob: -18.75001335144043
    10. ' =' → logprob: -18.75001335144043

Token 474: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3871089816093445
    2. ' =' → logprob: -1.1371090412139893
    3. '=max' → logprob: -8.38710880279541
    4. 'max' → logprob: -11.76210880279541
    5. ']=' → logprob: -13.51210880279541
    6. ']' → logprob: -14.76210880279541
    7. '           ' → logprob: -15.51210880279541
    8. '>' → logprob: -16.137109756469727
    9. '   ' → logprob: -16.512109756469727
    10. ' max' → logprob: -16.887109756469727

Token 475: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.011047935113310814
    2. ' max' → logprob: -4.511047840118408
    3. '	max' → logprob: -16.51104736328125
    4. '(max' → logprob: -19.26104736328125
    5. '=max' → logprob: -20.13604736328125
    6. '[max' → logprob: -20.26104736328125
    7. '   ' → logprob: -21.88604736328125
    8. '                       ' → logprob: -22.38604736328125
    9. '_max' → logprob: -23.01104736328125
    10. ',max' → logprob: -23.26104736328125

Token 476: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -2.1888679839321412e-05
    2. '(' → logprob: -10.750021934509277
    3. 'dp' → logprob: -15.375021934509277
    4. '(
' → logprob: -15.750021934509277
    5. ' (' → logprob: -19.00002098083496
    6. '	dp' → logprob: -19.75002098083496
    7. '(

' → logprob: -20.25002098083496
    8. '(d' → logprob: -20.25002098083496
    9. ' dp' → logprob: -20.37502098083496
    10. '(df' → logprob: -21.25002098083496

Token 477: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. 'i' → logprob: -14.750000953674316
    3. '[' → logprob: -16.0
    4. '```' → logprob: -16.125
    5. 'dp' → logprob: -17.75
    6. '   ' → logprob: -17.875
    7. '(i' → logprob: -18.0
    8. '[
' → logprob: -18.5
    9. '
' → logprob: -19.0
    10. ')' → logprob: -19.125

Token 478: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.925185440806672e-05
    2. '[i' → logprob: -9.875099182128906
    3. '[' → logprob: -10.375099182128906
    4. '][' → logprob: -11.500099182128906
    5. 'i' → logprob: -13.000099182128906
    6. ' +' → logprob: -13.750099182128906
    7. ']+' → logprob: -13.875099182128906
    8. '+i' → logprob: -13.875099182128906
    9. '   ' → logprob: -15.125099182128906
    10. '-' → logprob: -15.125099182128906

Token 479: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.23917081207037e-05
    2. '+' → logprob: -10.250041961669922
    3. ' ' → logprob: -12.375041961669922
    4. '   ' → logprob: -13.625041961669922
    5. '```' → logprob: -14.812541961669922
    6. '
' → logprob: -15.812541961669922
    7. '[i' → logprob: -16.000041961669922
    8. 'i' → logprob: -16.125041961669922
    9. 'dp' → logprob: -16.437541961669922
    10. '           ' → logprob: -16.500041961669922

Token 480: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005349211278371513
    2. '[j' → logprob: -7.750535011291504
    3. ' ][' → logprob: -9.875535011291504
    4. '   ' → logprob: -11.375535011291504
    5. '[' → logprob: -11.625535011291504
    6. ']' → logprob: -11.875535011291504
    7. '       ' → logprob: -12.000535011291504
    8. '           ' → logprob: -12.250535011291504
    9. '[i' → logprob: -12.250535011291504
    10. ' [' → logprob: -13.125535011291504

Token 481: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.763666947837919e-05
    2. ' j' → logprob: -10.00004768371582
    3. '[j' → logprob: -13.87504768371582
    4. '   ' → logprob: -14.37504768371582
    5. '```' → logprob: -15.25004768371582
    6. ',j' → logprob: -15.87504768371582
    7. '	j' → logprob: -15.87504768371582
    8. ' ' → logprob: -16.50004768371582
    9. '  ' → logprob: -17.25004768371582
    10. '       ' → logprob: -17.50004768371582

Token 482: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001977526117116213
    2. '[' → logprob: -6.251977443695068
    3. '0' → logprob: -10.376977920532227
    4. ' ][' → logprob: -11.251977920532227
    5. ']' → logprob: -13.126977920532227
    6. '   ' → logprob: -14.251977920532227
    7. '],' → logprob: -15.001977920532227
    8. ''][' → logprob: -15.251977920532227
    9. '"][' → logprob: -15.501977920532227
    10. '-' → logprob: -15.876977920532227

Token 483: '0' (ID: 15)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.22877617180347443
    2. '0' → logprob: -1.603776216506958
    3. '[last' → logprob: -6.728775978088379
    4. 'length' → logprob: -6.978775978088379
    5. '[' → logprob: -6.978775978088379
    6. '1' → logprob: -9.478775978088379
    7. 'max' → logprob: -9.478775978088379
    8. 'k' → logprob: -9.853775978088379
    9. ' last' → logprob: -10.603775978088379
    10. 'dp' → logprob: -10.978775978088379

Token 484: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04906974360346794
    2. '],' → logprob: -3.04906964302063
    3. ' ,' → logprob: -7.674069881439209
    4. ' ],' → logprob: -11.67406940460205
    5. 'dp' → logprob: -11.92406940460205
    6. ',
' → logprob: -14.42406940460205
    7. ']' → logprob: -14.67406940460205
    8. '],
' → logprob: -14.92406940460205
    9. ',d' → logprob: -15.67406940460205
    10. '   ' → logprob: -15.67406940460205

Token 485: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.5761644244194031
    2. ' length' → logprob: -0.8261644244194031
    3. 'dp' → logprob: -9.201164245605469
    4. ' dp' → logprob: -9.326164245605469
    5. '                           ' → logprob: -10.451164245605469
    6. '                       ' → logprob: -13.451164245605469
    7. '                               ' → logprob: -13.576164245605469
    8. '                            ' → logprob: -14.201164245605469
    9. '                          ' → logprob: -14.701164245605469
    10. '                   ' → logprob: -14.826164245605469

Token 486: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2014138251543045
    2. ' +' → logprob: -1.701413869857788
    3. ' ' → logprob: -16.451414108276367
    4. '```' → logprob: -16.451414108276367
    5. ')' → logprob: -16.576414108276367
    6. ' ' → logprob: -16.826414108276367
    7. ')+' → logprob: -16.951414108276367
    8. '   ' → logprob: -17.076414108276367
    9. '                           ' → logprob: -17.076414108276367
    10. '+
' → logprob: -17.451414108276367

Token 487: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.250006675720215
    3. '2' → logprob: -13.375006675720215
    4. '   ' → logprob: -16.8750057220459
    5. '```' → logprob: -17.8750057220459
    6. '-' → logprob: -18.5000057220459
    7. '0' → logprob: -18.7500057220459
    8. ')' → logprob: -19.1250057220459
    9. '  ' → logprob: -19.4375057220459
    10. '+' → logprob: -19.4375057220459

Token 488: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39106911420822144
    2. ')
' → logprob: -1.1410691738128662
    3. '           ' → logprob: -6.016068935394287
    4. '               ' → logprob: -6.391068935394287
    5. '                   ' → logprob: -10.516069412231445
    6. ')
' → logprob: -10.891069412231445
    7. '                       ' → logprob: -11.766069412231445
    8. ' )
' → logprob: -12.391069412231445
    9. ' )' → logprob: -12.516069412231445
    10. ')

' → logprob: -12.641069412231445

Token 489: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.30889880657196045
    2. '<|end|>' → logprob: -2.05889892578125
    3. ')' → logprob: -2.55889892578125
    4. '           ' → logprob: -3.55889892578125
    5. '```' → logprob: -5.18389892578125
    6. '                        
' → logprob: -5.55889892578125
    7. '                   ' → logprob: -5.55889892578125
    8. '                       ' → logprob: -6.05889892578125
    9. '                
' → logprob: -6.30889892578125
    10. '                           ' → logprob: -6.30889892578125

Token 490: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08411598950624466
    2. 'elif' (adapté à ' elif') → logprob: -3.459115982055664
    3. ' elif' → logprob: -3.709115982055664
    4. '           ' → logprob: -4.459115982055664
    5. ' else' → logprob: -4.709115982055664
    6. 'else' → logprob: -5.834115982055664
    7. ')' → logprob: -7.334115982055664
    8. '```' → logprob: -8.834115982055664
    9. '                   ' → logprob: -9.584115982055664
    10. ' ' → logprob: -9.584115982055664

Token 491: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.6459566950798035
    2. ' last' → logprob: -0.7709566950798035
    3. '1' → logprob: -4.395956516265869
    4. ' ' → logprob: -7.020956516265869
    5. '(last' → logprob: -11.020956993103027
    6. '0' → logprob: -11.145956993103027
    7. '   ' → logprob: -11.520956993103027
    8. '	last' → logprob: -13.520956993103027
    9. '[last' → logprob: -13.520956993103027
    10. 'Last' → logprob: -13.895956993103027

Token 492: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12694479525089264
    2. '==' → logprob: -2.1269447803497314
    3. '[' → logprob: -11.751944541931152
    4. '==
' → logprob: -12.876944541931152
    5. '=' → logprob: -13.126944541931152
    6. ' ' → logprob: -13.876944541931152
    7. ']==' → logprob: -14.376944541931152
    8. ' =' → logprob: -14.376944541931152
    9. ' ' → logprob: -14.876944541931152
    10. '	' → logprob: -15.001944541931152

Token 493: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003948072553612292
    2. ' ' → logprob: -7.875394821166992
    3. '0' → logprob: -11.500394821166992
    4. '   ' → logprob: -12.750394821166992
    5. '(' → logprob: -15.750394821166992
    6. '  ' → logprob: -15.812894821166992
    7. '    ' → logprob: -15.875394821166992
    8. ' (' → logprob: -16.562894821166992
    9. '```' → logprob: -16.625394821166992
    10. 'from' → logprob: -16.812894821166992

Token 494: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.9875325708417222e-05
    2. '0' → logprob: -10.750029563903809
    3. ' ' → logprob: -12.000029563903809
    4. '   ' → logprob: -13.812529563903809
    5. '```' → logprob: -15.750029563903809
    6. '
' → logprob: -15.875029563903809
    7. '

' → logprob: -16.187530517578125
    8. '  ' → logprob: -16.500030517578125
    9. '[' → logprob: -16.562530517578125
    10. '`' → logprob: -16.625030517578125

Token 495: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6987501382827759
    2. ':
' → logprob: -0.6987501382827759
    3. '                   ' → logprob: -5.448750019073486
    4. '               ' → logprob: -7.323750019073486
    5. ' and' → logprob: -8.698750495910645
    6. 'and' → logprob: -9.198750495910645
    7. '           ' → logprob: -9.698750495910645
    8. '                       ' → logprob: -9.948750495910645
    9. '=' → logprob: -10.198750495910645
    10. '{
' → logprob: -10.698750495910645

Token 496: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004853499587625265
    2. '               ' → logprob: -6.25485372543335
    3. '```' → logprob: -6.87985372543335
    4. ':' → logprob: -7.87985372543335
    5. '                       ' → logprob: -8.254853248596191
    6. ':
' → logprob: -8.504853248596191
    7. '                    
' → logprob: -8.754853248596191
    8. '                           ' → logprob: -9.129853248596191
    9. '   ' → logprob: -9.129853248596191
    10. '           ' → logprob: -9.504853248596191

Token 497: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3800852596759796
    2. '               ' → logprob: -1.7550852298736572
    3. 'if' → logprob: -2.1300852298736572
    4. ' if' → logprob: -4.755085468292236
    5. ' c' → logprob: -5.130085468292236
    6. '                   ' → logprob: -5.130085468292236
    7. '#' (adapté à ' #') → logprob: -5.630085468292236
    8. '           ' → logprob: -9.255084991455078
    9. '```' → logprob: -9.505084991455078
    10. ' #' → logprob: -10.005084991455078

Token 498: ' dernier' (ID: 27982)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.05155869200825691
    2. ' c' → logprob: -3.42655873298645
    3. 'if' → logprob: -4.801558494567871
    4. '               ' → logprob: -5.051558494567871
    5. '#' → logprob: -6.051558494567871
    6. ' if' → logprob: -7.551558494567871
    7. '                   ' → logprob: -9.051558494567871
    8. ' #' → logprob: -10.051558494567871
    9. 'prev' → logprob: -10.176558494567871
    10. '           ' → logprob: -10.676558494567871

Token 499: ' wagon' (ID: 90907)
  Prédit: 'wagon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wagon' → logprob: -0.49360156059265137
    2. ' wagon' → logprob: -1.7436015605926514
    3. ' ==' → logprob: -1.9936015605926514
    4. '==' → logprob: -3.3686015605926514
    5. 'wag' → logprob: -3.8686015605926514
    6. 'w' → logprob: -4.8686017990112305
    7. ' !=' → logprob: -5.4936017990112305
    8. 'wagen' → logprob: -6.4936017990112305
    9. ' wag' → logprob: -7.1186017990112305
    10. ' ' → logprob: -7.1186017990112305

Token 500: ' vient' (ID: 40370)
  Prédit: ' vient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vient' → logprob: -0.7329716086387634
    2. 'vient' → logprob: -0.7329716086387634
    3. '==' → logprob: -3.982971668243408
    4. ' ==' → logprob: -4.107971668243408
    5. 'ven' → logprob: -6.107971668243408
    6. 'viens' → logprob: -7.232971668243408
    7. 'venir' → logprob: -8.73297119140625
    8. ' viens' → logprob: -9.23297119140625
    9. ' venant' → logprob: -9.23297119140625
    10. 'comes' → logprob: -9.48297119140625

Token 501: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.8229663372039795
    2. 'from' → logprob: -0.9479663372039795
    3. ' de' → logprob: -2.0729663372039795
    4. '                   ' → logprob: -4.572966575622559
    5. '=' → logprob: -4.572966575622559
    6. '==' → logprob: -4.822966575622559
    7. '   ' → logprob: -5.072966575622559
    8. ' from' → logprob: -5.447966575622559
    9. '               ' → logprob: -5.697966575622559
    10. '[' → logprob: -7.322966575622559

Token 502: ' T' (ID: 353)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.06510575860738754
    2. 'T' → logprob: -3.565105676651001
    3. '0' → logprob: -3.815105676651001
    4. ' S' → logprob: -4.44010591506958
    5. ' T' → logprob: -7.69010591506958
    6. '1' → logprob: -8.565105438232422
    7. ' ' → logprob: -8.815105438232422
    8. '   ' → logprob: -9.565105438232422
    9. 's' → logprob: -11.190105438232422
    10. '2' → logprob: -11.815105438232422

Token 503: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2945735454559326
    2. '                       ' → logprob: -2.0445735454559326
    3. ':' → logprob: -3.1695735454559326
    4. ':
' → logprob: -3.1695735454559326
    5. ' and' → logprob: -4.169573783874512
    6. '               ' → logprob: -4.294573783874512
    7. '```' → logprob: -5.419573783874512
    8. ',' → logprob: -5.669573783874512
    9. '                        
' → logprob: -7.044573783874512
    10. '):
' → logprob: -7.544573783874512

Token 504: ' on' (ID: 402)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6184872388839722
    2. 'if' → logprob: -1.2434872388839722
    3. '                   ' → logprob: -2.7434873580932617
    4. ' c' → logprob: -2.8684873580932617
    5. 'c' → logprob: -3.1184873580932617
    6. '                       ' → logprob: -5.118487358093262
    7. '               ' → logprob: -7.493487358093262
    8. '```' → logprob: -7.993487358093262
    9. 'prev' → logprob: -8.243487358093262
    10. ' prev' → logprob: -9.993487358093262

Token 505: ' doit' (ID: 21822)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3006105422973633
    2. ' if' → logprob: -1.6756105422973633
    3. '               ' → logprob: -2.1756105422973633
    4. '                   ' → logprob: -2.4256105422973633
    5. '                       ' → logprob: -2.9256105422973633
    6. '=' → logprob: -3.4256105422973633
    7. ' c' → logprob: -3.4256105422973633
    8. '```' → logprob: -3.4256105422973633
    9. ' doit' → logprob: -3.6756105422973633
    10. '==' → logprob: -3.6756105422973633

Token 506: ' alter' (ID: 14183)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.755548357963562
    2. 'if' → logprob: -0.880548357963562
    3. ' continue' → logprob: -3.1305484771728516
    4. 'can' → logprob: -4.005548477172852
    5. ' can' → logprob: -4.755548477172852
    6. '                       ' → logprob: -5.005548477172852
    7. '                   ' → logprob: -5.005548477172852
    8. 'continue' → logprob: -5.630548477172852
    9. '   ' → logprob: -5.880548477172852
    10. '               ' → logprob: -5.880548477172852

Token 507: 'ner' (ID: 1247)
  Prédit: 'ter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ter' → logprob: -0.21990875899791718
    2. 'er' → logprob: -2.4699087142944336
    3. 'ner' → logprob: -2.5949087142944336
    4. 'rer' → logprob: -3.3449087142944336
    5. 'tern' → logprob: -6.594908714294434
    6. 'érer' → logprob: -7.969908714294434
    7. 'r' → logprob: -8.094908714294434
    8. '   ' → logprob: -8.344908714294434
    9. 'trer' → logprob: -9.094908714294434
    10. 'oter' → logprob: -9.594908714294434

Token 508: ' avec' (ID: 3937)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.381570041179657
    2. '                       ' → logprob: -1.5065701007843018
    3. ' and' → logprob: -3.0065701007843018
    4. ':
' → logprob: -4.006569862365723
    5. ':' → logprob: -5.006569862365723
    6. ' if' → logprob: -5.256569862365723
    7. 'and' → logprob: -5.756569862365723
    8. '               ' → logprob: -5.756569862365723
    9. ' c' → logprob: -6.006569862365723
    10. ',' → logprob: -6.256569862365723

Token 509: ' T' (ID: 353)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1327541619539261
    2. ' c' → logprob: -2.38275408744812
    3. 'S' → logprob: -3.50775408744812
    4. ' S' → logprob: -6.507754325866699
    5. 'can' → logprob: -8.1327543258667
    6. ' can' → logprob: -9.0077543258667
    7. ' ' → logprob: -10.2577543258667
    8. '   ' → logprob: -11.3202543258667
    9. 's' → logprob: -11.4452543258667
    10. 'C' → logprob: -11.6952543258667

Token 510: '[j' (ID: 7895)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4439929723739624
    2. ' and' → logprob: -1.8189929723739624
    3. ':' → logprob: -3.068993091583252
    4. ',' → logprob: -3.193993091583252
    5. 'and' → logprob: -3.568993091583252
    6. '               ' → logprob: -3.568993091583252
    7. ':
' → logprob: -3.818993091583252
    8. '                       ' → logprob: -4.818993091583252
    9. '```' → logprob: -5.443993091583252
    10. 'c' → logprob: -5.818993091583252

Token 511: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.36752790212631226
    2. '+' → logprob: -1.367527961730957
    3. '-' → logprob: -3.367527961730957
    4. ']+' → logprob: -4.742527961730957
    5. '],' → logprob: -5.992527961730957
    6. '])' → logprob: -6.867527961730957
    7. ']==' → logprob: -6.867527961730957
    8. '1' → logprob: -7.242527961730957
    9. ' +' → logprob: -7.367527961730957
    10. ']:
' → logprob: -7.492527961730957

Token 512: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005326599348336458
    2. 'j' → logprob: -8.875533103942871
    3. '```' → logprob: -9.000533103942871
    4. ']' → logprob: -9.250533103942871
    5. ' ' → logprob: -9.750533103942871
    6. '   ' → logprob: -10.000533103942871
    7. '-' → logprob: -11.000533103942871
    8. 'N' → logprob: -11.500533103942871
    9. ')' → logprob: -12.250533103942871
    10. '0' → logprob: -12.250533103942871

Token 513: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.281564325094223
    2. ']:
' → logprob: -1.9065643548965454
    3. '],' → logprob: -3.281564235687256
    4. ']
' → logprob: -3.406564235687256
    5. ']:' → logprob: -3.906564235687256
    6. '                   ' → logprob: -6.406564235687256
    7. '']' → logprob: -7.031564235687256
    8. ']'' → logprob: -7.906564235687256
    9. ']:

' → logprob: -7.906564235687256
    10. '+' → logprob: -8.156564712524414

Token 514: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3236691951751709
    2. '                       ' → logprob: -1.448669195175171
    3. '```' → logprob: -3.698669195175171
    4. '               ' → logprob: -4.57366943359375
    5. ',' → logprob: -5.69866943359375
    6. '                        
' → logprob: -6.94866943359375
    7. '       ' → logprob: -7.82366943359375
    8. '``' → logprob: -7.94866943359375
    9. ':' → logprob: -8.19866943359375
    10. '):
' → logprob: -8.57366943359375

Token 515: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06469764560461044
    2. 'prev' → logprob: -3.439697742462158
    3. 'c' → logprob: -4.564697742462158
    4. '                       ' → logprob: -5.564697742462158
    5. '```' → logprob: -5.564697742462158
    6. '               ' → logprob: -5.689697742462158
    7. 'if' (adapté à ' if') → logprob: -5.939697742462158
    8. ' c' → logprob: -5.939697742462158
    9. ' if' → logprob: -6.814697742462158
    10. ' prev' → logprob: -7.064697742462158

Token 516: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5123838782310486
    2. 'can' → logprob: -1.3873839378356934
    3. ' j' → logprob: -2.6373839378356934
    4. ' can' → logprob: -2.8873839378356934
    5. 'i' → logprob: -4.512383937835693
    6. 'dp' → logprob: -5.637383937835693
    7. ' i' → logprob: -6.137383937835693
    8. 'T' → logprob: -6.262383937835693
    9. ' dp' → logprob: -6.637383937835693
    10. '   ' → logprob: -6.637383937835693

Token 517: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.31345951557159424
    2. ' >' → logprob: -1.3134595155715942
    3. ' <' → logprob: -9.063459396362305
    4. 'and' → logprob: -10.063459396362305
    5. '<' → logprob: -11.313459396362305
    6. ' ' → logprob: -12.188459396362305
    7. '+' → logprob: -12.563459396362305
    8. ' and' → logprob: -12.563459396362305
    9. ')>' → logprob: -12.563459396362305
    10. '0' → logprob: -12.813459396362305

Token 518: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026181264547631145
    2. ' ' → logprob: -8.250262260437012
    3. '   ' → logprob: -15.125262260437012
    4. '=' → logprob: -15.875262260437012
    5. ' ' → logprob: -16.875261306762695
    6. '```' → logprob: -18.000261306762695
    7. '  ' → logprob: -18.500261306762695
    8. '           ' → logprob: -18.625261306762695
    9. '
' → logprob: -18.750261306762695
    10. '>' → logprob: -19.125261306762695

Token 519: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. '=' → logprob: -14.375000953674316
    3. ' ' → logprob: -14.500000953674316
    4. '```' → logprob: -17.000001907348633
    5. '``' → logprob: -17.875001907348633
    6. '   ' → logprob: -18.000001907348633
    7. '
' → logprob: -18.125001907348633
    8. '۰' → logprob: -18.500001907348633
    9. '1' → logprob: -18.750001907348633
    10. '	' → logprob: -19.375001907348633

Token 520: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07454252243041992
    2. 'and' → logprob: -2.82454252243042
    3. '                       ' → logprob: -4.44954252243042
    4. ':
' → logprob: -7.57454252243042
    5. '                   ' → logprob: -8.449542999267578
    6. ':' → logprob: -10.449542999267578
    7. '                           ' → logprob: -10.949542999267578
    8. ',' → logprob: -11.699542999267578
    9. '                      ' → logprob: -11.824542999267578
    10. '               ' → logprob: -12.074542999267578

Token 521: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.052893128246068954
    2. 'prev' → logprob: -3.3028931617736816
    3. ' prev' → logprob: -4.552893161773682
    4. '                   ' → logprob: -5.677893161773682
    5. ' and' → logprob: -8.677892684936523
    6. '                           ' → logprob: -8.677892684936523
    7. ' c' → logprob: -9.052892684936523
    8. '```' → logprob: -9.552892684936523
    9. '                     ' → logprob: -9.927892684936523
    10. 'c' → logprob: -10.427892684936523

Token 522: ' prev' (ID: 10258)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.11980600655078888
    2. ' c' → logprob: -2.2448060512542725
    3. 'prev' (adapté à ' prev') → logprob: -5.744805812835693
    4. 'if' → logprob: -6.869805812835693
    5. '                       ' → logprob: -7.244805812835693
    6. ' prev' → logprob: -7.244805812835693
    7. '                   ' → logprob: -7.869805812835693
    8. ' if' → logprob: -7.994805812835693
    9. '               ' → logprob: -8.994806289672852
    10. '                           ' → logprob: -8.994806289672852

Token 523: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6258042454719543
    2. 'T' → logprob: -1.1258041858673096
    3. '=' → logprob: -2.6258041858673096
    4. 'c' → logprob: -4.125804424285889
    5. ' ==' → logprob: -4.375804424285889
    6. '==' → logprob: -5.000804424285889
    7. '=T' → logprob: -5.125804424285889
    8. 'S' → logprob: -5.750804424285889
    9. ']' → logprob: -5.750804424285889
    10. 'char' → logprob: -5.875804424285889

Token 524: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0002614550176076591
    2. ' T' → logprob: -8.250261306762695
    3. '(T' → logprob: -16.875261306762695
    4. '       ' → logprob: -17.125261306762695
    5. '   ' → logprob: -17.375261306762695
    6. '[' → logprob: -17.375261306762695
    7. '#' → logprob: -17.500261306762695
    8. '`' → logprob: -17.625261306762695
    9. 't' → logprob: -18.125261306762695
    10. '           ' → logprob: -18.125261306762695

Token 525: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.25
    3. 'j' → logprob: -16.0
    4. '   ' → logprob: -17.0
    5. ' [' → logprob: -18.25
    6. '
' → logprob: -19.0
    7. '[
' → logprob: -19.0
    8. '                   ' → logprob: -19.625
    9. '```' → logprob: -20.0
    10. '       ' → logprob: -20.25

Token 526: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11782953888177872
    2. '[j' → logprob: -2.2428295612335205
    3. 'j' → logprob: -5.367829322814941
    4. ' -' → logprob: -8.742829322814941
    5. '[' → logprob: -9.867829322814941
    6. '           ' → logprob: -10.492829322814941
    7. '   ' → logprob: -10.742829322814941
    8. '1' → logprob: -10.992829322814941
    9. ' j' → logprob: -11.242829322814941
    10. '       ' → logprob: -11.617829322814941

Token 527: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.10870858281850815
    2. '1' → logprob: -2.358708620071411
    3. '-' → logprob: -4.858708381652832
    4. '   ' → logprob: -8.483708381652832
    5. ' j' → logprob: -8.733708381652832
    6. '[j' → logprob: -8.858708381652832
    7. '```' → logprob: -9.483708381652832
    8. '           ' → logprob: -10.108708381652832
    9. ' ' → logprob: -10.233708381652832
    10. '       ' → logprob: -11.358708381652832

Token 528: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.02979366108775139
    2. ']' → logprob: -3.5297937393188477
    3. ']
' → logprob: -11.279793739318848
    4. ' ]
' → logprob: -11.404793739318848
    5. ']

' → logprob: -12.029793739318848
    6. ']:
' → logprob: -12.279793739318848
    7. '[' → logprob: -13.154793739318848
    8. ')
' → logprob: -13.279793739318848
    9. '']
' → logprob: -13.279793739318848
    10. '                       ' → logprob: -14.154793739318848

Token 529: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.726784884929657
    2. ' and' → logprob: -1.2267849445343018
    3. '                           ' → logprob: -1.6017849445343018
    4. 'and' → logprob: -5.476784706115723
    5. ' if' → logprob: -5.726784706115723
    6. '<|end|>' → logprob: -5.976784706115723
    7. '```' → logprob: -6.101784706115723
    8. ',' → logprob: -6.476784706115723
    9. ')' → logprob: -6.601784706115723
    10. ':
' → logprob: -6.851784706115723

Token 530: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1327524036169052
    2. ' if' → logprob: -2.1327524185180664
    3. '                           ' → logprob: -5.882752418518066
    4. '                       ' → logprob: -6.257752418518066
    5. '```' → logprob: -7.007752418518066
    6. '                        
' → logprob: -9.632752418518066
    7. '<|end|>' → logprob: -10.382752418518066
    8. ' ' → logprob: -10.757752418518066
    9. '                   ' → logprob: -11.132752418518066
    10. '                               ' → logprob: -11.257752418518066

Token 531: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.004078639671206474
    2. ' can' → logprob: -5.5040788650512695
    3. '(can' → logprob: -16.504077911376953
    4. '	can' → logprob: -17.379077911376953
    5. '_can' → logprob: -17.754077911376953
    6. '                           ' → logprob: -17.879077911376953
    7. '```' → logprob: -18.004077911376953
    8. 'Can' → logprob: -18.129077911376953
    9. 'c' → logprob: -18.379077911376953
    10. 'not' → logprob: -18.504077911376953

Token 532: '_connect' (ID: 32485)
  Prédit: '_connect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_connect' → logprob: -0.0014785595703870058
    2. 'connect' → logprob: -6.626478672027588
    3. 'prev' → logprob: -8.87647819519043
    4. 'c' → logprob: -12.37647819519043
    5. 'Connect' → logprob: -13.00147819519043
    6. '_CONNECT' → logprob: -13.50147819519043
    7. '(prev' → logprob: -13.75147819519043
    8. '_prev' → logprob: -14.75147819519043
    9. 'can' → logprob: -15.12647819519043
    10. 'conn' → logprob: -15.12647819519043

Token 533: '(prev' (ID: 59594)
  Prédit: '(prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prev' → logprob: -0.07890532165765762
    2. 'prev' → logprob: -2.5789053440093994
    3. '(c' → logprob: -11.82890510559082
    4. 'c' → logprob: -12.70390510559082
    5. ' prev' → logprob: -12.82890510559082
    6. '(' → logprob: -13.57890510559082
    7. '	prev' → logprob: -14.32890510559082
    8. ' (' → logprob: -15.45390510559082
    9. '(
' → logprob: -16.32890510559082
    10. '.prev' → logprob: -16.32890510559082

Token 534: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007575734634883702
    2. ' ,' → logprob: -7.875757694244385
    3. ',c' → logprob: -8.000757217407227
    4. 'c' → logprob: -10.750757217407227
    5. '(c' → logprob: -11.750757217407227
    6. ' c' → logprob: -12.750757217407227
    7. ',
' → logprob: -12.875757217407227
    8. '),' → logprob: -13.125757217407227
    9. ')' → logprob: -13.875757217407227
    10. '                   ' → logprob: -14.375757217407227

Token 535: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.31328216195106506
    2. ' c' → logprob: -1.3132821321487427
    3. ')c' → logprob: -10.938282012939453
    4. ')' → logprob: -13.938282012939453
    5. '(c' → logprob: -14.688282012939453
    6. '	c' → logprob: -15.188282012939453
    7. '```' → logprob: -15.563282012939453
    8. ',c' → logprob: -15.938282012939453
    9. ' ' → logprob: -16.063282012939453
    10. '_c' → logprob: -16.563282012939453

Token 536: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4742986559867859
    2. '):
' → logprob: -0.9742986559867859
    3. ')' → logprob: -8.974298477172852
    4. '):

' → logprob: -9.724298477172852
    5. '):
' → logprob: -10.724298477172852
    6. ':' → logprob: -12.599298477172852
    7. ''):
' → logprob: -13.224298477172852
    8. ' ):' → logprob: -13.474298477172852
    9. ''):' → logprob: -13.974298477172852
    10. '                   ' → logprob: -14.099298477172852

Token 537: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.004359859973192215
    2. '                       ' → logprob: -6.129359722137451
    3. '                               ' → logprob: -6.379359722137451
    4. '                   ' → logprob: -9.12936019897461
    5. '```' → logprob: -9.12936019897461
    6. '                            
' → logprob: -10.00436019897461
    7. '               ' → logprob: -10.62936019897461
    8. '           ' → logprob: -10.62936019897461
    9. '                            ' → logprob: -10.62936019897461
    10. '                                   ' → logprob: -10.75436019897461

Token 538: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0019373197574168444
    2. ' dp' → logprob: -6.251937389373779
    3. '                               ' → logprob: -12.251936912536621
    4. '                           ' → logprob: -12.626936912536621
    5. '```' → logprob: -15.376936912536621
    6. '(dp' → logprob: -15.626936912536621
    7. '	dp' → logprob: -16.001937866210938
    8. '_dp' → logprob: -17.251937866210938
    9. '                             ' → logprob: -18.126937866210938
    10. '.dp' → logprob: -18.126937866210938

Token 539: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[j' → logprob: -15.375000953674316
    3. '[' → logprob: -15.500000953674316
    4. '```' → logprob: -16.875
    5. '[I' → logprob: -17.0
    6. 'i' → logprob: -17.0
    7. ' [' → logprob: -18.125
    8. '
' → logprob: -18.875
    9. '[int' → logprob: -19.0
    10. '[max' → logprob: -19.375

Token 540: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.93710636976175e-05
    2. '[' → logprob: -9.375099182128906
    3. '[i' → logprob: -11.500099182128906
    4. ' +' → logprob: -13.250099182128906
    5. '+i' → logprob: -14.250099182128906
    6. '][' → logprob: -14.875099182128906
    7. '```' → logprob: -15.125099182128906
    8. '+j' → logprob: -15.375099182128906
    9. '[j' → logprob: -15.375099182128906
    10. 'i' → logprob: -15.625099182128906

Token 541: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011808235431089997
    2. '+' → logprob: -6.751180648803711
    3. ' ' → logprob: -12.501180648803711
    4. '2' → logprob: -12.626180648803711
    5. '```' → logprob: -13.251180648803711
    6. '   ' → logprob: -14.501180648803711
    7. '5' → logprob: -15.626180648803711
    8. '3' → logprob: -15.876180648803711
    9. ' +' → logprob: -16.25118064880371
    10. '
' → logprob: -16.50118064880371

Token 542: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6934213638305664
    2. '[j' → logprob: -0.6934213638305664
    3. '[' → logprob: -8.818421363830566
    4. '           ' → logprob: -9.818421363830566
    5. '>[' → logprob: -10.693421363830566
    6. '[i' → logprob: -11.443421363830566
    7. '}[' → logprob: -12.193421363830566
    8. ',j' → logprob: -12.318421363830566
    9. '```' → logprob: -12.443421363830566
    10. '                   ' → logprob: -12.443421363830566

Token 543: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.465036105713807e-06
    2. ' j' → logprob: -11.875007629394531
    3. '   ' → logprob: -15.750007629394531
    4. '	j' → logprob: -16.12500762939453
    5. '[j' → logprob: -16.50000762939453
    6. '           ' → logprob: -17.37500762939453
    7. '       ' → logprob: -17.62500762939453
    8. '    ' → logprob: -18.62500762939453
    9. '  ' → logprob: -18.75000762939453
    10. '$j' → logprob: -18.75000762939453

Token 544: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011053833179175854
    2. '[' → logprob: -4.511054039001465
    3. ']' → logprob: -13.636054039001465
    4. ''][' → logprob: -13.761054039001465
    5. '"][' → logprob: -14.136054039001465
    6. '}[' → logprob: -14.261054039001465
    7. '>[' → logprob: -14.386054039001465
    8. '           ' → logprob: -14.636054039001465
    9. ' ][' → logprob: -15.136054039001465
    10. ')[' → logprob: -15.261054039001465

Token 545: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. 'max' → logprob: -12.750003814697266
    3. ' ' → logprob: -14.625003814697266
    4. '[' → logprob: -17.750003814697266
    5. '   ' → logprob: -18.500003814697266
    6. '1' → logprob: -18.875003814697266
    7. ' max' → logprob: -19.000003814697266
    8. '```' → logprob: -19.812503814697266
    9. '     ' → logprob: -20.625003814697266
    10. '           ' → logprob: -20.750003814697266

Token 546: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015415230300277472
    2. ']=' → logprob: -6.501541614532471
    3. ')' → logprob: -11.001541137695312
    4. '=' → logprob: -11.001541137695312
    5. '                           ' → logprob: -13.626541137695312
    6. ']
' → logprob: -13.876541137695312
    7. ']+=' → logprob: -14.251541137695312
    8. '],' → logprob: -14.376541137695312
    9. '           ' → logprob: -14.501541137695312
    10. ' ]' → logprob: -15.001541137695312

Token 547: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023246178403496742
    2. ' =' → logprob: -3.7732462882995605
    3. '                           ' → logprob: -15.523245811462402
    4. ')' → logprob: -16.02324676513672
    5. '=max' → logprob: -16.02324676513672
    6. '                               ' → logprob: -16.14824676513672
    7. ']=' → logprob: -16.52324676513672
    8. ']' → logprob: -16.77324676513672
    9. 'max' → logprob: -17.39824676513672
    10. '=
' → logprob: -17.52324676513672

Token 548: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.03804149478673935
    2. ' max' → logprob: -3.288041591644287
    3. '(max' → logprob: -16.913042068481445
    4. '	max' → logprob: -18.413042068481445
    5. '[max' → logprob: -19.038042068481445
    6. '=max' → logprob: -19.913042068481445
    7. ',max' → logprob: -21.163042068481445
    8. ' ' → logprob: -21.288042068481445
    9. '
' → logprob: -21.663042068481445
    10. '_max' → logprob: -21.788042068481445

Token 549: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.1994775377388578e-05
    2. '(' → logprob: -11.375012397766113
    3. 'dp' → logprob: -15.250012397766113
    4. '(
' → logprob: -15.875012397766113
    5. ' (' → logprob: -17.250011444091797
    6. '```' → logprob: -17.875011444091797
    7. '(df' → logprob: -18.125011444091797
    8. '	dp' → logprob: -18.375011444091797
    9. '(dt' → logprob: -19.000011444091797
    10. '(dm' → logprob: -20.125011444091797

Token 550: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005180051666684449
    2. 'dp' → logprob: -7.875517845153809
    3. '(dp' → logprob: -9.000517845153809
    4. '[' → logprob: -11.875517845153809
    5. '(i' → logprob: -12.500517845153809
    6. ' dp' → logprob: -13.625517845153809
    7. '_dp' → logprob: -14.000517845153809
    8. '```' → logprob: -14.125517845153809
    9. '	dp' → logprob: -14.500517845153809
    10. 'i' → logprob: -14.750517845153809

Token 551: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005297990282997489
    2. '[i' → logprob: -7.625529766082764
    3. '[' → logprob: -10.250530242919922
    4. '1' → logprob: -12.750530242919922
    5. '+i' → logprob: -13.625530242919922
    6. ' +' → logprob: -14.000530242919922
    7. '(i' → logprob: -15.000530242919922
    8. 'i' → logprob: -15.250530242919922
    9. ']+' → logprob: -15.875530242919922
    10. '][' → logprob: -16.000530242919922

Token 552: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03212998807430267
    2. '+' → logprob: -3.907130002975464
    3. 'j' → logprob: -4.657129764556885
    4. '[j' → logprob: -7.032129764556885
    5. 'i' → logprob: -8.032130241394043
    6. '[i' → logprob: -8.407130241394043
    7. '   ' → logprob: -9.032130241394043
    8. ' ' → logprob: -9.032130241394043
    9. '[' → logprob: -9.532130241394043
    10. '```' → logprob: -9.657130241394043

Token 553: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6044564247131348
    2. '+' → logprob: -0.9794564247131348
    3. '[i' → logprob: -2.6044564247131348
    4. '[' → logprob: -6.104456424713135
    5. '[j' → logprob: -6.479456424713135
    6. '```' → logprob: -8.479455947875977
    7. ']+' → logprob: -9.979455947875977
    8. '   ' → logprob: -10.729455947875977
    9. ')[' → logprob: -10.854455947875977
    10. '           ' → logprob: -11.104455947875977

Token 554: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0007873523863963783
    2. 'i' → logprob: -7.625787258148193
    3. '[j' → logprob: -8.375787734985352
    4. ' j' → logprob: -11.000787734985352
    5. '[i' → logprob: -11.125787734985352
    6. '
' → logprob: -11.250787734985352
    7. '   ' → logprob: -11.500787734985352
    8. '[' → logprob: -13.000787734985352
    9. '0' → logprob: -13.250787734985352
    10. '       ' → logprob: -13.500787734985352

Token 555: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.020931532606482506
    2. '+' → logprob: -3.8959314823150635
    3. '[' → logprob: -7.895931720733643
    4. '   ' → logprob: -12.270931243896484
    5. ']' → logprob: -12.645931243896484
    6. ' ][' → logprob: -12.645931243896484
    7. '```' → logprob: -14.020931243896484
    8. '-' → logprob: -14.145931243896484
    9. ']+' → logprob: -14.520931243896484
    10. '           ' → logprob: -14.520931243896484

Token 556: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006347626447677612
    2. '[' → logprob: -5.75634765625
    3. 'length' → logprob: -6.13134765625
    4. 'i' → logprob: -8.75634765625
    5. '1' → logprob: -8.75634765625
    6. '
' → logprob: -9.00634765625
    7. '[i' → logprob: -9.13134765625
    8. ',' → logprob: -9.25634765625
    9. 'j' → logprob: -9.63134765625
    10. ' ' → logprob: -10.13134765625

Token 557: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00784912146627903
    2. ',' → logprob: -4.882849216461182
    3. ']+' → logprob: -9.007848739624023
    4. 'length' → logprob: -9.882848739624023
    5. ']' → logprob: -10.632848739624023
    6. ' ],' → logprob: -11.382848739624023
    7. '+' → logprob: -11.507848739624023
    8. '][' → logprob: -11.507848739624023
    9. ' ,' → logprob: -12.882848739624023
    10. ',length' → logprob: -13.007848739624023

Token 558: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.3132622241973877
    2. ' length' → logprob: -1.3132622241973877
    3. '                           ' → logprob: -15.563261985778809
    4. '                            ' → logprob: -16.563262939453125
    5. '                               ' → logprob: -16.813262939453125
    6. ' ' → logprob: -17.188262939453125
    7. '                        ' → logprob: -17.688262939453125
    8. 'Length' → logprob: -17.813262939453125
    9. '                       ' → logprob: -17.938262939453125
    10. '                          ' → logprob: -18.063262939453125

Token 559: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003364158037584275
    2. ' +' → logprob: -8.000336647033691
    3. ')+' → logprob: -14.750336647033691
    4. '```' → logprob: -15.500336647033691
    5. '[' → logprob: -15.875336647033691
    6. '()+' → logprob: -16.375335693359375
    7. '＋' → logprob: -16.750335693359375
    8. '+
' → logprob: -17.375335693359375
    9. ']+' → logprob: -17.500335693359375
    10. '   ' → logprob: -17.625335693359375

Token 560: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6405310816480778e-05
    2. '+' → logprob: -11.625016212463379
    3. ' ' → logprob: -11.875016212463379
    4. '```' → logprob: -15.250016212463379
    5. ')' → logprob: -15.625016212463379
    6. '   ' → logprob: -16.625017166137695
    7. '
' → logprob: -17.125017166137695
    8. '2' → logprob: -18.125017166137695
    9. ' +' → logprob: -18.125017166137695
    10. '  ' → logprob: -18.625017166137695

Token 561: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014537633978761733
    2. ')
' → logprob: -9.375144958496094
    3. '           ' → logprob: -10.000144958496094
    4. '               ' → logprob: -11.875144958496094
    5. '                           ' → logprob: -12.125144958496094
    6. ' )' → logprob: -13.750144958496094
    7. '                   ' → logprob: -14.375144958496094
    8. '                       ' → logprob: -14.500144958496094
    9. '       ' → logprob: -15.375144958496094
    10. ')

' → logprob: -16.375144958496094

Token 562: '                   ' (ID: 699)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0073083266615867615
    2. '               ' → logprob: -5.382308483123779
    3. '```' → logprob: -6.882308483123779
    4. '<|end|>' → logprob: -7.132308483123779
    5. '		' → logprob: -8.882308006286621
    6. '                           ' → logprob: -9.007308006286621
    7. '       ' → logprob: -9.132308006286621
    8. 'elif' → logprob: -9.382308006286621
    9. '          ' → logprob: -9.507308006286621
    10. '                   ' → logprob: -9.632308006286621

Token 563: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 564: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.35001152753829956
    2. ':' → logprob: -1.3500115871429443
    3. ':
' → logprob: -3.6000115871429443
    4. '                   ' → logprob: -5.725011348724365
    5. '                           ' → logprob: -5.725011348724365
    6. '               ' → logprob: -7.350011348724365
    7. '                               ' → logprob: -7.725011348724365
    8. ' pass' → logprob: -8.350011825561523
    9. ' continue' → logprob: -8.975011825561523
    10. ' :' → logprob: -8.975011825561523

Token 565: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.9576565623283386
    2. ' pass' → logprob: -1.0826566219329834
    3. '                           ' → logprob: -2.2076566219329834
    4. '                               ' → logprob: -2.4576566219329834
    5. 'pass' → logprob: -3.3326566219329834
    6. ' continue' → logprob: -4.082656383514404
    7. '                   ' → logprob: -4.957656383514404
    8. '```' → logprob: -4.957656383514404
    9. 'continue' → logprob: -5.082656383514404
    10. '               ' → logprob: -5.082656383514404

Token 566: ' #' (ID: 1069)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.0037056582514196634
    2. 'continue' → logprob: -5.8787055015563965
    3. ' pass' → logprob: -7.5037055015563965
    4. '#' (adapté à ' #') → logprob: -8.628705978393555
    5. 'if' → logprob: -9.003705978393555
    6. '               ' → logprob: -11.253705978393555
    7. 'dp' → logprob: -11.378705978393555
    8. '                   ' → logprob: -12.003705978393555
    9. ' continue' → logprob: -12.378705978393555
    10. '   ' → logprob: -12.503705978393555

Token 567: ' si' (ID: 1784)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.02300110086798668
    2. 'continue' → logprob: -4.648001194000244
    3. '#' → logprob: -5.148001194000244
    4. ' pass' → logprob: -5.523001194000244
    5. 'if' → logprob: -6.398001194000244
    6. 'dp' → logprob: -6.648001194000244
    7. '```' → logprob: -8.273000717163086
    8. ' continue' → logprob: -9.523000717163086
    9. ' #' → logprob: -11.523000717163086
    10. ' if' → logprob: -11.648000717163086

Token 568: ' j' (ID: 441)
  Prédit: ' last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.45606547594070435
    2. 'last' → logprob: -1.7060654163360596
    3. ' not' → logprob: -3.2060654163360596
    4. 'False' → logprob: -3.5810654163360596
    5. ' i' → logprob: -3.7060654163360596
    6. ' c' → logprob: -3.7060654163360596
    7. 'i' → logprob: -4.206065654754639
    8. 'c' → logprob: -4.456065654754639
    9. ' False' → logprob: -4.706065654754639
    10. 'not' → logprob: -4.706065654754639

Token 569: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4741610288619995
    2. '==' → logprob: -0.9741610288619995
    3. '>' → logprob: -10.099161148071289
    4. '=' → logprob: -11.349161148071289
    5. ' >' → logprob: -11.599161148071289
    6. '+' → logprob: -12.224161148071289
    7. '```' → logprob: -12.349161148071289
    8. ' <' → logprob: -12.474161148071289
    9. ' ' → logprob: -13.224161148071289
    10. ')' → logprob: -13.224161148071289

Token 570: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.250004768371582
    3. '=' → logprob: -16.0000057220459
    4. '   ' → logprob: -17.0000057220459
    5. '```' → logprob: -17.8750057220459
    6. '
' → logprob: -19.1250057220459
    7. '1' → logprob: -19.8750057220459
    8. ' ' → logprob: -20.0000057220459
    9. '  ' → logprob: -20.4375057220459
    10. '۰' → logprob: -20.5000057220459

Token 571: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6722126603126526
    2. ':' → logprob: -1.1722126007080078
    3. ',' → logprob: -2.297212600708008
    4. '                           ' → logprob: -2.672212600708008
    5. ' and' → logprob: -5.297212600708008
    6. '                       ' → logprob: -5.922212600708008
    7. '                               ' → logprob: -7.547212600708008
    8. ' continue' → logprob: -7.797212600708008
    9. ' :
' → logprob: -8.297212600708008
    10. '```' → logprob: -8.422212600708008

Token 572: ' alors' (ID: 17971)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.32942113280296326
    2. 'pass' → logprob: -1.5794211626052856
    3. ' continue' → logprob: -3.579421043395996
    4. '#' → logprob: -4.079421043395996
    5. '                           ' → logprob: -4.704421043395996
    6. ' #' → logprob: -4.829421043395996
    7. ' if' → logprob: -5.704421043395996
    8. 'continue' → logprob: -6.204421043395996
    9. ' on' → logprob: -6.329421043395996
    10. 'if' → logprob: -6.704421043395996

Token 573: ' la' (ID: 557)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.8929417133331299
    2. 'False' → logprob: -1.7679417133331299
    3. '#' → logprob: -2.14294171333313
    4. 'pass' → logprob: -2.26794171333313
    5. 'on' → logprob: -2.51794171333313
    6. 'c' → logprob: -3.39294171333313
    7. 'True' → logprob: -4.017941474914551
    8. 'i' → logprob: -4.392941474914551
    9. 'can' → logprob: -4.642941474914551
    10. 'le' → logprob: -4.767941474914551

Token 574: ' train' (ID: 8513)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.0626330375671387
    2. ' last' → logprob: -2.0626330375671387
    3. '#' → logprob: -2.1876330375671387
    4. 'dern' → logprob: -2.3126330375671387
    5. 'last' → logprob: -2.8126330375671387
    6. ' next' → logprob: -3.4376330375671387
    7. ' dernier' → logprob: -3.5626330375671387
    8. ' dernière' → logprob: -3.9376330375671387
    9. 'code' → logprob: -4.062633037567139
    10. 'next' → logprob: -4.062633037567139

Token 575: ' ne' (ID: 453)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.601971447467804
    2. 'n' → logprob: -1.1019713878631592
    3. 'pe' → logprob: -2.851971387863159
    4. ' peut' → logprob: -3.101971387863159
    5. ' ne' → logprob: -5.726971626281738
    6. '#' → logprob: -5.851971626281738
    7. 'ne' → logprob: -6.726971626281738
    8. 's' → logprob: -6.726971626281738
    9. '=' → logprob: -7.351971626281738
    10. ' peux' → logprob: -7.351971626281738

Token 576: ' vient' (ID: 40370)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.007179202977567911
    2. ' peut' → logprob: -6.007179260253906
    3. 'pour' → logprob: -6.007179260253906
    4. 'pas' → logprob: -7.007179260253906
    5. 'a' → logprob: -8.132179260253906
    6. 's' → logprob: -8.257179260253906
    7. '```' → logprob: -8.882179260253906
    8. 'comm' → logprob: -9.132179260253906
    9. 'do' → logprob: -9.257179260253906
    10. 'p' → logprob: -9.757179260253906

Token 577: ' que' (ID: 661)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.39076462388038635
    2. ' pas' → logprob: -1.140764594078064
    3. 'd' → logprob: -6.2657647132873535
    4. ' d' → logprob: -7.2657647132873535
    5. '_pas' → logprob: -8.140764236450195
    6. ' jamais' → logprob: -8.640764236450195
    7. 'plus' → logprob: -8.765764236450195
    8. 'from' → logprob: -9.265764236450195
    9. 't' → logprob: -9.390764236450195
    10. ' probablement' → logprob: -9.515764236450195

Token 578: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5446653366088867
    2. ' de' → logprob: -0.9196653366088867
    3. ' pas' → logprob: -4.919665336608887
    4. 'pas' → logprob: -5.169665336608887
    5. 'd' → logprob: -5.419665336608887
    6. 'from' → logprob: -6.669665336608887
    7. ' du' → logprob: -6.669665336608887
    8. ' d' → logprob: -7.419665336608887
    9. 'du' → logprob: -8.294665336608887
    10. ' from' → logprob: -8.919665336608887

Token 579: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.048713404685258865
    2. ' S' → logprob: -3.048713445663452
    3. 's' → logprob: -9.798713684082031
    4. 'T' → logprob: -10.923713684082031
    5. ' ' → logprob: -10.923713684082031
    6. ' la' → logprob: -11.298713684082031
    7. 'l' → logprob: -12.423713684082031
    8. ' T' → logprob: -12.548713684082031
    9. 'la' → logprob: -12.673713684082031
    10. ' ' → logprob: -13.423713684082031

Token 580: ' for' (ID: 395)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.9245125651359558
    2. ':' → logprob: -1.1745126247406006
    3. ',' → logprob: -1.9245126247406006
    4. '                               ' → logprob: -2.6745126247406006
    5. '.' → logprob: -3.5495126247406006
    6. '```' → logprob: -4.1745123863220215
    7. ':
' → logprob: -4.4245123863220215
    8. '                       ' → logprob: -5.2995123863220215
    9. '<|end|>' → logprob: -5.5495123863220215
    10. '                   ' → logprob: -5.9245123863220215

Token 581: ' now' (ID: 1954)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.01943378895521164
    2. 't' → logprob: -5.394433975219727
    3. 'me' → logprob: -6.019433975219727
    4. 'ment' → logprob: -6.144433975219727
    5. 'mé' → logprob: -6.144433975219727
    6. 'mul' → logprob: -6.394433975219727
    7. 'mant' → logprob: -6.894433975219727
    8. 's' → logprob: -7.019433975219727
    9. 'mat' → logprob: -7.019433975219727
    10. '```' → logprob: -7.269433975219727

Token 582: ',' (ID: 11)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.16009777784347534
    2. '                           ' → logprob: -2.03509783744812
    3. ',' → logprob: -5.035097599029541
    4. ':' → logprob: -5.910097599029541
    5. '                        
' → logprob: -6.035097599029541
    6. '```' → logprob: -6.160097599029541
    7. ':
' → logprob: -6.660097599029541
    8. '                               ' → logprob: -7.285097599029541
    9. '                            
' → logprob: -7.785097599029541
    10. '
' → logprob: -7.910097599029541

Token 583: ' donc' (ID: 14206)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.6028002500534058
    2. ' continue' → logprob: -0.9778002500534058
    3. 'pass' → logprob: -3.6028003692626953
    4. '#' → logprob: -3.9778003692626953
    5. 'continue' → logprob: -3.9778003692626953
    6. ' #' → logprob: -5.852800369262695
    7. '                           ' → logprob: -5.977800369262695
    8. '                               ' → logprob: -5.977800369262695
    9. '```' → logprob: -6.477800369262695
    10. '                       ' → logprob: -7.602800369262695

Token 584: ' alter' (ID: 14183)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.5881336331367493
    2. '#' → logprob: -1.7131335735321045
    3. 'if' → logprob: -1.9631335735321045
    4. 'continue' → logprob: -2.3381335735321045
    5. ' continue' → logprob: -4.963133811950684
    6. 'prev' → logprob: -4.963133811950684
    7. ' pass' → logprob: -5.463133811950684
    8. ' if' → logprob: -5.963133811950684
    9. 'dp' → logprob: -6.588133811950684
    10. '```' → logprob: -6.713133811950684

Token 585: 'ner' (ID: 1247)
  Prédit: 'ner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ner' → logprob: -0.0074201528914272785
    2. 'n' → logprob: -5.132420063018799
    3. 'nera' → logprob: -6.882420063018799
    4. 'ne' → logprob: -8.257420539855957
    5. 'er' → logprob: -9.757420539855957
    6. 'nner' → logprob: -10.382420539855957
    7. 'nt' → logprob: -10.882420539855957
    8. 'né' → logprob: -11.132420539855957
    9. 'nez' → logprob: -11.382420539855957
    10. 'nant' → logprob: -12.007420539855957

Token 586: ' avec' (ID: 3937)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.15890829265117645
    2. ' avec' → logprob: -3.2839083671569824
    3. 'c' → logprob: -3.4089083671569824
    4. ',' → logprob: -3.7839083671569824
    5. ' with' → logprob: -4.158908367156982
    6. ' ce' → logprob: -5.533908367156982
    7. ' if' → logprob: -5.783908367156982
    8. ' le' → logprob: -6.033908367156982
    9. 'with' → logprob: -6.283908367156982
    10. 'if' → logprob: -6.283908367156982

Token 587: ' aucune' (ID: 51173)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5547141432762146
    2. 'S' → logprob: -1.3047142028808594
    3. 'prev' → logprob: -2.1797142028808594
    4. 'T' → logprob: -3.9297142028808594
    5. ' c' → logprob: -4.679714202880859
    6. 'None' → logprob: -5.429714202880859
    7. ' S' → logprob: -5.804714202880859
    8. 'last' → logprob: -6.304714202880859
    9. 'previous' → logprob: -7.054714202880859
    10. ' prev' → logprob: -7.179714202880859

Token 588: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.094557762145996
    2. '<|end|>' → logprob: -1.094557762145996
    3. '                           ' → logprob: -2.219557762145996
    4. '                               ' → logprob: -3.094557762145996
    5. 'pass' → logprob: -3.594557762145996
    6. '.' → logprob: -3.594557762145996
    7. ' ' → logprob: -4.219557762145996
    8. ':
' → logprob: -4.219557762145996
    9. '<|end|>' → logprob: -4.344557762145996
    10. ' pass' → logprob: -4.344557762145996

Token 589: ' ok' (ID: 4763)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.8837466239929199
    2. 'possible' → logprob: -1.38374662399292
    3. ' True' → logprob: -1.88374662399292
    4. ' possible' → logprob: -2.38374662399292
    5. '```' → logprob: -3.13374662399292
    6. 'pass' → logprob: -4.00874662399292
    7. 'False' → logprob: -4.63374662399292
    8. 'not' → logprob: -5.38374662399292
    9. ' ok' → logprob: -6.13374662399292
    10. 'ok' → logprob: -6.25874662399292

Token 590: '?' (ID: 30)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6335508823394775
    2. '                           ' → logprob: -1.7585508823394775
    3. ':
' → logprob: -2.0085508823394775
    4. '```' → logprob: -2.7585508823394775
    5. '                               ' → logprob: -3.3835508823394775
    6. '<|end|>' → logprob: -4.008550643920898
    7. ',' → logprob: -4.383550643920898
    8. '                       ' → logprob: -4.758550643920898
    9. '\n' → logprob: -5.133550643920898
    10. '.' → logprob: -5.383550643920898

Token 591: ' Non' (ID: 13763)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.7798026204109192
    2. '```' → logprob: -1.9048025608062744
    3. '
' → logprob: -2.1548025608062744
    4. '                       ' → logprob: -2.5298025608062744
    5. ' pass' → logprob: -2.7798025608062744
    6. '                               ' → logprob: -2.9048025608062744
    7. ' continue' → logprob: -4.2798027992248535
    8. '\n' → logprob: -4.6548027992248535
    9. 'pass' → logprob: -4.7798027992248535
    10. ' 
' → logprob: -4.9048027992248535

Token 592: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6703893542289734
    2. '<|end|>' → logprob: -1.2953894138336182
    3. '```' → logprob: -2.420389413833618
    4. '.' → logprob: -3.420389413833618
    5. '                           ' → logprob: -3.545389413833618
    6. ',' → logprob: -3.795389413833618
    7. '                               ' → logprob: -3.920389413833618
    8. '                       ' → logprob: -5.045389175415039
    9. '#' → logprob: -5.795389175415039
    10. '<|end|>' → logprob: -6.295389175415039

Token 593: ' il' (ID: 1793)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.24547815322875977
    2. '#' → logprob: -2.7454781532287598
    3. ' pass' → logprob: -2.7454781532287598
    4. 'continue' → logprob: -3.1204781532287598
    5. '                           ' → logprob: -3.9954781532287598
    6. ' continue' → logprob: -4.49547815322876
    7. '                               ' → logprob: -4.74547815322876
    8. '                       ' → logprob: -5.24547815322876
    9. ' #' → logprob: -7.74547815322876
    10. '```' → logprob: -7.87047815322876

Token 594: ' faut' (ID: 17821)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3843885660171509
    2. ' continue' → logprob: -2.0093884468078613
    3. ' faut' → logprob: -2.6343884468078613
    4. 'n' → logprob: -3.1343884468078613
    5. '	continue' → logprob: -3.6343884468078613
    6. '   ' → logprob: -3.7593884468078613
    7. '               ' → logprob: -5.634388446807861
    8. '           ' → logprob: -5.884388446807861
    9. ' n' → logprob: -6.009388446807861
    10. ' continues' → logprob: -6.509388446807861

Token 595: ' qu' (ID: 474)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.756183385848999
    2. 'continue' → logprob: -0.881183385848999
    3. 'pass' → logprob: -2.256183385848999
    4. '#' → logprob: -5.506183624267578
    5. ' continuer' → logprob: -6.381183624267578
    6. '```' → logprob: -7.131183624267578
    7. 'pas' → logprob: -7.256183624267578
    8. ' continue' → logprob: -7.381183624267578
    9. 'une' → logprob: -7.631183624267578
    10. 'que' → logprob: -7.756183624267578

Token 596: ''il' (ID: 14683)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.362126886844635
    2. ''un' → logprob: -2.1121268272399902
    3. ''avoir' → logprob: -2.2371268272399902
    4. ''au' → logprob: -3.4871268272399902
    5. ''une' → logprob: -3.6121268272399902
    6. ''on' → logprob: -4.86212682723999
    7. ''à' → logprob: -5.98712682723999
    8. ''' → logprob: -6.11212682723999
    9. ''il' → logprob: -6.36212682723999
    10. 'u' → logprob: -7.36212682723999

Token 597: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6332088112831116
    2. 'altern' → logprob: -1.3832087516784668
    3. '```' → logprob: -3.258208751678467
    4. 's' → logprob: -3.383208751678467
    5. 'e' → logprob: -3.383208751678467
    6. 'have' → logprob: -4.008208751678467
    7. 'continue' → logprob: -4.008208751678467
    8. 'alternate' → logprob: -4.258208751678467
    9. 'f' → logprob: -4.758208751678467
    10. 'ait' → logprob: -5.008208751678467

Token 598: ' ait' (ID: 43015)
  Prédit: 'ait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ait' → logprob: -0.18245555460453033
    2. ' ait' → logprob: -2.682455539703369
    3. 'a' → logprob: -3.307455539703369
    4. 'ai' → logprob: -3.682455539703369
    5. ''ai' → logprob: -4.182455539703369
    6. 'aie' → logprob: -4.807455539703369
    7. 'have' → logprob: -5.307455539703369
    8. 'ail' → logprob: -6.182455539703369
    9. 'aye' → logprob: -6.932455539703369
    10. 'avoir' → logprob: -7.057455539703369

Token 599: ' un' (ID: 537)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.6303604245185852
    2. 'un' → logprob: -0.8803604245185852
    3. 'au' → logprob: -3.6303603649139404
    4. ' une' → logprob: -5.0053606033325195
    5. ' au' → logprob: -5.5053606033325195
    6. ' un' → logprob: -5.6303606033325195
    7. '```' → logprob: -5.8803606033325195
    8. 'pas' → logprob: -6.2553606033325195
    9. '#' → logprob: -6.3803606033325195
    10. 'contin' → logprob: -7.0053606033325195

Token 600: ' wagon' (ID: 90907)
  Prédit: 'wagon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wagon' → logprob: -1.0838371515274048
    2. 'break' → logprob: -1.7088371515274048
    3. 'continue' → logprob: -2.2088370323181152
    4. '```' → logprob: -2.5838370323181152
    5. ' break' → logprob: -2.9588370323181152
    6. 'pass' → logprob: -3.0838370323181152
    7. ' wagon' → logprob: -3.4588370323181152
    8. ' continue' → logprob: -3.9588370323181152
    9. ' wag' → logprob: -4.208837032318115
    10. 'wag' → logprob: -4.208837032318115

Token 601: '
' (ID: 198)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.9091906547546387
    2. '                           ' → logprob: -1.2841906547546387
    3. '                       ' → logprob: -2.2841906547546387
    4. ' continue' → logprob: -2.6591906547546387
    5. '                               ' → logprob: -2.9091906547546387
    6. '               ' → logprob: -3.1591906547546387
    7. '                   ' → logprob: -3.9091906547546387
    8. '```' → logprob: -4.784190654754639
    9. '<|end|>' → logprob: -5.034190654754639
    10. '	continue' → logprob: -5.784190654754639

Token 602: '                       ' (ID: 968)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.2346359491348267
    2. '<|end|>' → logprob: -1.6096359491348267
    3. '```' → logprob: -1.8596359491348267
    4. ':' → logprob: -2.484635829925537
    5. '\n' → logprob: -2.484635829925537
    6. '                           ' → logprob: -2.734635829925537
    7. ')' → logprob: -3.734635829925537
    8. ',' → logprob: -3.734635829925537
    9. '                               ' → logprob: -3.859635829925537
    10. ':
' → logprob: -3.984635829925537

Token 603: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.39620840549468994
    2. ' continue' → logprob: -1.52120840549469
    3. '                           ' → logprob: -3.0212082862854004
    4. '                               ' → logprob: -3.5212082862854004
    5. '```' → logprob: -3.8962082862854004
    6. '                       ' → logprob: -5.8962082862854
    7. 'pass' → logprob: -6.0212082862854
    8. '               ' → logprob: -6.3962082862854
    9. ' pass' → logprob: -6.3962082862854
    10. '                   ' → logprob: -7.7712082862854

Token 604: ' Donc' (ID: 88837)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.21004462242126465
    2. ' continue' → logprob: -1.9600446224212646
    3. 'pass' → logprob: -3.2100446224212646
    4. ' pass' → logprob: -4.835044860839844
    5. '   ' → logprob: -9.335044860839844
    6. '                           ' → logprob: -9.960044860839844
    7. '                   ' → logprob: -10.085044860839844
    8. '```' → logprob: -10.085044860839844
    9. '               ' → logprob: -10.335044860839844
    10. '                       ' → logprob: -10.585044860839844

Token 605: ' on' (ID: 402)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.05710665136575699
    2. 'pass' → logprob: -3.0571067333221436
    3. ' continue' → logprob: -4.8071064949035645
    4. ' pass' → logprob: -8.932106971740723
    5. '                       ' → logprob: -9.432106971740723
    6. '```' → logprob: -9.932106971740723
    7. '                   ' → logprob: -10.932106971740723
    8. '   ' → logprob: -12.057106971740723
    9. '	continue' → logprob: -12.182106971740723
    10. '                           ' → logprob: -12.182106971740723

Token 606: ' ne' (ID: 453)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.038122277706861496
    2. ' continue' → logprob: -3.4131221771240234
    3. 'n' → logprob: -6.413122177124023
    4. 'ne' → logprob: -7.038122177124023
    5. 'pass' → logprob: -7.288122177124023
    6. 'contin' → logprob: -8.038122177124023
    7. '#' → logprob: -8.788122177124023
    8. ' ne' → logprob: -8.788122177124023
    9. '                       ' → logprob: -8.788122177124023
    10. '```' → logprob: -9.163122177124023

Token 607: ' peut' (ID: 9216)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3825317621231079
    2. 'pas' → logprob: -1.507531762123108
    3. 'pass' → logprob: -2.3825316429138184
    4. 'contin' → logprob: -6.257531642913818
    5. 'do' → logprob: -6.882531642913818
    6. '                           ' → logprob: -8.007532119750977
    7. ' continue' → logprob: -8.757532119750977
    8. '                       ' → logprob: -8.757532119750977
    9. '           ' → logprob: -8.882532119750977
    10. '                               ' → logprob: -9.132532119750977

Token 608: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.026407936587929726
    2. ' pas' → logprob: -3.9014079570770264
    3. '                           ' → logprob: -6.026407718658447
    4. '_pas' → logprob: -7.151407718658447
    5. 'continue' → logprob: -7.526407718658447
    6. 'contin' → logprob: -7.526407718658447
    7. 'prendre' → logprob: -7.776407718658447
    8. 'pass' → logprob: -7.901407718658447
    9. '+' → logprob: -8.651408195495605
    10. '                       ' → logprob: -8.901408195495605

Token 609: ' prendre' (ID: 24257)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.004524942487478256
    2. ' continue' → logprob: -5.8795247077941895
    3. '                               ' → logprob: -6.8795247077941895
    4. '                           ' → logprob: -7.8795247077941895
    5. '               ' → logprob: -9.254525184631348
    6. '                   ' → logprob: -9.754525184631348
    7. 'pass' → logprob: -9.879525184631348
    8. '                       ' → logprob: -10.004525184631348
    9. '           ' → logprob: -11.379525184631348
    10. '                                   ' → logprob: -11.629525184631348

Token 610: ' S' (ID: 336)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -1.0463776588439941
    2. 'continue' → logprob: -1.7963776588439941
    3. '\n' → logprob: -1.9213776588439941
    4. '                           ' → logprob: -2.421377658843994
    5. '```' → logprob: -2.546377658843994
    6. ' continue' → logprob: -3.171377658843994
    7. '                                   ' → logprob: -3.671377658843994
    8. 'i' → logprob: -4.296377658843994
    9. '+' → logprob: -4.921377658843994
    10. '<|end|>' → logprob: -4.921377658843994

Token 611: ' tout' (ID: 5501)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 612: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.4309562146663666
    2. 'à' → logprob: -1.430956244468689
    3. 'se' → logprob: -2.5559561252593994
    4. ' de' → logprob: -4.4309563636779785
    5. 'suite' → logprob: -4.8059563636779785
    6. '```' → logprob: -5.0559563636779785
    7. 'd' → logprob: -5.6809563636779785
    8. '#' → logprob: -7.8059563636779785
    9. ' à' → logprob: -7.9309563636779785
    10. 'court' → logprob: -7.9309563636779785

Token 613: ' suite' (ID: 13800)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.00043281487887725234
    2. 's' → logprob: -9.125432968139648
    3. 'row' → logprob: -9.125432968139648
    4. 'range' → logprob: -9.750432968139648
    5. 'rang' → logprob: -10.250432968139648
    6. 'la' → logprob: -10.250432968139648
    7. 'file' → logprob: -10.750432968139648
    8. '0' → logprob: -10.750432968139648
    9. 'continue' → logprob: -12.250432968139648
    10. 'l' → logprob: -12.250432968139648

Token 614: ' dans' (ID: 2671)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6629061698913574
    2. '                           ' → logprob: -2.0379061698913574
    3. '                               ' → logprob: -2.2879061698913574
    4. 'continue' → logprob: -2.2879061698913574
    5. ' continue' → logprob: -2.4129061698913574
    6. '                   ' → logprob: -3.5379061698913574
    7. '           ' → logprob: -4.537906169891357
    8. '                       ' → logprob: -4.662906169891357
    9. '<|end|>' → logprob: -5.787906169891357
    10. '```' → logprob: -5.912906169891357

Token 615: ' ce' (ID: 2357)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.44789427518844604
    2. 'last' → logprob: -1.3228943347930908
    3. 'ce' → logprob: -3.447894334793091
    4. ' this' → logprob: -3.447894334793091
    5. ' ce' → logprob: -4.197894096374512
    6. 'c' → logprob: -4.947894096374512
    7. ' last' → logprob: -6.072894096374512
    8. ' cette' → logprob: -6.197894096374512
    9. 'cet' → logprob: -6.572894096374512
    10. 'le' → logprob: -7.197894096374512

Token 616: ' cas' (ID: 2108)
  Prédit: 'cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cas' → logprob: -0.6741376519203186
    2. 'if' → logprob: -1.4241375923156738
    3. 'case' → logprob: -2.424137592315674
    4. '```' → logprob: -2.674137592315674
    5. 'block' → logprob: -3.299137592315674
    6. 'bloc' → logprob: -3.924137592315674
    7. 'elif' → logprob: -4.299137592315674
    8. 'for' → logprob: -4.424137592315674
    9. 'pass' → logprob: -5.799137592315674
    10. 'else' → logprob: -6.049137592315674

Token 617: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5559748411178589
    2. '                       ' → logprob: -1.6809748411178589
    3. '                           ' → logprob: -1.9309748411178589
    4. '                               ' → logprob: -3.3059749603271484
    5. '                   ' → logprob: -3.6809749603271484
    6. '<|end|>' → logprob: -4.180974960327148
    7. '           ' → logprob: -5.680974960327148
    8. 'continue' → logprob: -5.680974960327148
    9. '```' → logprob: -6.180974960327148
    10. ' continue' → logprob: -6.430974960327148

Token 618: '                       ' (ID: 968)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011011389084160328
    2. '           ' → logprob: -4.761011600494385
    3. 'elif' → logprob: -7.011011600494385
    4. '```' → logprob: -7.636011600494385
    5. '                   ' → logprob: -8.011011123657227
    6. 'else' → logprob: -8.136011123657227
    7. '                           ' → logprob: -9.261011123657227
    8. '                       ' → logprob: -9.386011123657227
    9. '			' → logprob: -10.011011123657227
    10. ' elif' → logprob: -10.261011123657227

Token 619: ' pass' (ID: 1853)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.329580694437027
    2. 'pass' (adapté à ' pass') → logprob: -1.5795806646347046
    3. ' pass' → logprob: -3.329580783843994
    4. ' continue' → logprob: -3.704580783843994
    5. '                               ' → logprob: -4.579580783843994
    6. '                           ' → logprob: -6.454580783843994
    7. '```' → logprob: -6.954580783843994
    8. '   ' → logprob: -7.204580783843994
    9. '               ' → logprob: -7.704580783843994
    10. '                                   ' → logprob: -9.204580307006836

Token 620: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1347694396972656
    2. '                           ' → logprob: -1.1347694396972656
    3. '               ' → logprob: -1.3847694396972656
    4. '                               ' → logprob: -3.1347694396972656
    5. 'else' → logprob: -4.384769439697266
    6. '<|end|>' → logprob: -4.634769439697266
    7. '                   ' → logprob: -4.884769439697266
    8. 'elif' → logprob: -5.509769439697266
    9. '                            ' → logprob: -5.634769439697266
    10. '                       ' → logprob: -5.634769439697266

Token 621: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3244265019893646
    2. '               ' → logprob: -1.699426531791687
    3. '```' → logprob: -2.8244264125823975
    4. 'elif' → logprob: -4.074426651000977
    5. '                           ' → logprob: -5.574426651000977
    6. ' elif' → logprob: -5.824426651000977
    7. '       ' → logprob: -6.074426651000977
    8. '                   ' → logprob: -6.074426651000977
    9. '                       ' → logprob: -6.699426651000977
    10. ' if' → logprob: -6.949426651000977

Token 622: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004845346265938133
    2. '		' → logprob: -8.500484466552734
    3. '       ' → logprob: -9.125484466552734
    4. 'elif' → logprob: -9.375484466552734
    5. 'if' → logprob: -10.125484466552734
    6. '               ' → logprob: -11.000484466552734
    7. '            
' → logprob: -11.750484466552734
    8. '```' → logprob: -11.875484466552734
    9. '
' → logprob: -12.750484466552734
    10. '	       ' → logprob: -13.000484466552734

Token 623: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12845666706562042
    2. '           ' → logprob: -2.1284565925598145
    3. ' if' → logprob: -6.6284565925598145
    4. 'j' → logprob: -9.128457069396973
    5. '#' → logprob: -10.378457069396973
    6. '               ' → logprob: -10.628457069396973
    7. '   ' → logprob: -11.378457069396973
    8. '       ' → logprob: -11.378457069396973
    9. '```' → logprob: -12.378457069396973
    10. ' ' → logprob: -12.503457069396973

Token 624: ' peut' (ID: 9216)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7402043342590332
    2. ' can' → logprob: -1.1152043342590332
    3. ' peut' → logprob: -2.990204334259033
    4. 'f' → logprob: -3.240204334259033
    5. 'if' → logprob: -3.740204334259033
    6. 'can' → logprob: -3.865204334259033
    7. '=' → logprob: -4.615204334259033
    8. '               ' → logprob: -4.865204334259033
    9. '       ' → logprob: -5.115204334259033
    10. '   ' → logprob: -5.240204334259033

Token 625: ' essayer' (ID: 92713)
  Prédit: ' try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.46766865253448486
    2. 'try' → logprob: -1.3426686525344849
    3. ' essayer' → logprob: -2.4676685333251953
    4. 'j' → logprob: -4.092668533325195
    5. '   ' → logprob: -5.717668533325195
    6. ' j' → logprob: -5.967668533325195
    7. '    ' → logprob: -6.342668533325195
    8. '           ' → logprob: -7.092668533325195
    9. ' continuer' → logprob: -7.842668533325195
    10. '       ' → logprob: -8.342668533325195

Token 626: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.22153468430042267
    2. 'to' → logprob: -2.8465347290039062
    3. ' of' → logprob: -2.9715347290039062
    4. '           ' → logprob: -3.5965347290039062
    5. ' to' → logprob: -3.7215347290039062
    6. 'de' → logprob: -4.221534729003906
    7. ' d' → logprob: -4.471534729003906
    8. '   ' → logprob: -5.846534729003906
    9. '          ' → logprob: -6.096534729003906
    10. 'of' → logprob: -6.346534729003906

Token 627: ' prendre' (ID: 24257)
  Prédit: 'prendre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prendre' → logprob: -0.1589873880147934
    2. ' prendre' → logprob: -2.408987283706665
    3. 'take' → logprob: -2.908987283706665
    4. 'pr' → logprob: -6.783987522125244
    5. 'j' → logprob: -6.908987522125244
    6. ' j' → logprob: -8.408987045288086
    7. ' take' → logprob: -10.158987045288086
    8. '   ' → logprob: -10.658987045288086
    9. 'taken' → logprob: -10.908987045288086
    10. '  ' → logprob: -11.283987045288086

Token 628: ' un' (ID: 537)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9054379463195801
    2. ' T' → logprob: -1.90543794631958
    3. '   ' → logprob: -2.03043794631958
    4. ' un' → logprob: -2.53043794631958
    5. ' a' → logprob: -2.78043794631958
    6. 'T' → logprob: -2.90543794631958
    7. ' j' → logprob: -3.53043794631958
    8. '               ' → logprob: -3.65543794631958
    9. 'un' → logprob: -4.03043794631958
    10. 'a' → logprob: -4.28043794631958

Token 629: ' nouveau' (ID: 23184)
  Prédit: 'wagon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wagon' → logprob: -0.5234455466270447
    2. 'T' → logprob: -1.6484456062316895
    3. 'new' → logprob: -2.0234456062316895
    4. 'j' → logprob: -2.6484456062316895
    5. ' wagon' → logprob: -6.0234456062316895
    6. 'wag' → logprob: -6.3984456062316895
    7. 't' → logprob: -6.3984456062316895
    8. ' new' → logprob: -6.5234456062316895
    9. 'w' → logprob: -6.8984456062316895
    10. 'train' → logprob: -7.1484456062316895

Token 630: ' wagon' (ID: 90907)
  Prédit: 'wagon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wagon' → logprob: -0.5763108730316162
    2. ' wagon' → logprob: -0.8263108730316162
    3. 'wag' → logprob: -8.701311111450195
    4. 'j' → logprob: -9.951311111450195
    5. 'wagen' → logprob: -10.201311111450195
    6. ' wag' → logprob: -10.451311111450195
    7. ' ' → logprob: -11.076311111450195
    8. 'w' → logprob: -11.576311111450195
    9. ' j' → logprob: -11.701311111450195
    10. '   ' → logprob: -11.701311111450195

Token 631: ' de' (ID: 334)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0795114040374756
    2. '           ' → logprob: -1.2045114040374756
    3. ' from' → logprob: -1.5795114040374756
    4. ' of' → logprob: -2.5795114040374756
    5. ' de' → logprob: -2.5795114040374756
    6. 'of' → logprob: -7.204511642456055
    7. 'de' → logprob: -7.454511642456055
    8. '		' → logprob: -8.204511642456055
    9. '   ' → logprob: -8.704511642456055
    10. '            ' → logprob: -8.704511642456055

Token 632: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.005234121344983578
    2. ' T' → logprob: -5.255234241485596
    3. '           ' → logprob: -16.255233764648438
    4. '   ' → logprob: -16.380233764648438
    5. ' ' → logprob: -16.630233764648438
    6. 't' → logprob: -17.255233764648438
    7. '```' → logprob: -17.630233764648438
    8. '
' → logprob: -18.505233764648438
    9. '  ' → logprob: -18.505233764648438
    10. '       ' → logprob: -18.880233764648438

Token 633: ' si' (ID: 1784)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.033117424696683884
    2. ' if' → logprob: -3.6581175327301025
    3. 'if' → logprob: -5.158117294311523
    4. '=' → logprob: -8.033117294311523
    5. '               ' → logprob: -8.408117294311523
    6. ' =' → logprob: -8.408117294311523
    7. ':' → logprob: -9.408117294311523
    8. '```' → logprob: -9.783117294311523
    9. '          ' → logprob: -10.408117294311523
    10. ',' → logprob: -10.408117294311523

Token 634: ' possible' (ID: 4149)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5759421586990356
    2. ' j' → logprob: -0.8259421586990356
    3. '   ' → logprob: -13.700942039489746
    4. '(j' → logprob: -14.325942039489746
    5. '	j' → logprob: -15.450942039489746
    6. '           ' → logprob: -15.575942039489746
    7. ' ' → logprob: -15.825942039489746
    8. '    ' → logprob: -16.325942993164062
    9. '[j' → logprob: -16.450942993164062
    10. '```' → logprob: -16.575942993164062

Token 635: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00590710761025548
    2. '           ' → logprob: -5.88090705871582
    3. '```' → logprob: -6.63090705871582
    4. ' if' → logprob: -7.38090705871582
    5. ':' → logprob: -7.88090705871582
    6. ':
' → logprob: -8.50590705871582
    7. '                
' → logprob: -8.75590705871582
    8. '[' → logprob: -10.00590705871582
    9. 'if' → logprob: -10.00590705871582
    10. '                   ' → logprob: -10.00590705871582

Token 636: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10810135304927826
    2. '           ' → logprob: -2.3581013679504395
    3. '```' → logprob: -4.9831013679504395
    4. ' if' → logprob: -7.7331013679504395
    5. '<|end|>' → logprob: -9.233100891113281
    6. '            ' → logprob: -9.233100891113281
    7. '``' → logprob: -9.983100891113281
    8. '                   ' → logprob: -10.108100891113281
    9. ',' → logprob: -10.108100891113281
    10. '	           ' → logprob: -10.358100891113281

Token 637: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021783350966870785
    2. ' if' → logprob: -6.502178192138672
    3. '               ' → logprob: -7.877178192138672
    4. '            ' → logprob: -9.127178192138672
    5. '       ' → logprob: -9.502178192138672
    6. 'if' (adapté à ' if') → logprob: -10.377178192138672
    7. '```' → logprob: -10.502178192138672
    8. '          ' → logprob: -11.127178192138672
    9. ' ' → logprob: -12.002178192138672
    10. '                   ' → logprob: -12.127178192138672

Token 638: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.5759415030479431
    2. 'j' → logprob: -0.8259415030479431
    3. '   ' → logprob: -13.57594108581543
    4. '	j' → logprob: -15.32594108581543
    5. ' ' → logprob: -16.20094108581543
    6. '[j' → logprob: -16.32594108581543
    7. '(j' → logprob: -16.32594108581543
    8. '    ' → logprob: -16.45094108581543
    9. '           ' → logprob: -16.57594108581543
    10. '_j' → logprob: -16.70094108581543

Token 639: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3135889768600464
    2. '<' → logprob: -1.3135889768600464
    3. '<N' → logprob: -8.063589096069336
    4. '<M' → logprob: -11.563589096069336
    5. '+' → logprob: -13.813589096069336
    6. '<n' → logprob: -14.313589096069336
    7. '<T' → logprob: -14.688589096069336
    8. ' ' → logprob: -15.188589096069336
    9. ' ' → logprob: -16.063589096069336
    10. '<len' → logprob: -16.063589096069336

Token 640: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.547789674485102e-05
    2. ' N' → logprob: -10.250035285949707
    3. '(N' → logprob: -17.625036239624023
    4. '```' → logprob: -18.875036239624023
    5. '	N' → logprob: -19.000036239624023
    6. ' ' → logprob: -19.000036239624023
    7. '   ' → logprob: -19.250036239624023
    8. '<N' → logprob: -20.250036239624023
    9. '>N' → logprob: -20.625036239624023
    10. '[N' → logprob: -21.000036239624023

Token 641: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16083166003227234
    2. ':' → logprob: -1.9108316898345947
    3. '               ' → logprob: -8.410831451416016
    4. '           ' → logprob: -8.410831451416016
    5. '{
' → logprob: -9.660831451416016
    6. '):
' → logprob: -10.535831451416016
    7. '+' → logprob: -11.035831451416016
    8. '       ' → logprob: -11.535831451416016
    9. ' :
' → logprob: -11.535831451416016
    10. ':

' → logprob: -11.785831451416016

Token 642: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005952088395133615
    2. ' c' → logprob: -8.625595092773438
    3. '	           ' → logprob: -9.000595092773438
    4. 'c' → logprob: -9.750595092773438
    5. '			' → logprob: -10.500595092773438
    6. '   ' → logprob: -10.750595092773438
    7. '                ' → logprob: -10.875595092773438
    8. ' ' → logprob: -10.875595092773438
    9. '	       ' → logprob: -10.875595092773438
    10. '              ' → logprob: -10.875595092773438

Token 643: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.14971481263637543
    2. ' c' → logprob: -2.524714708328247
    3. '	c' → logprob: -2.899714708328247
    4. '               ' → logprob: -6.149714946746826
    5. '   ' → logprob: -6.649714946746826
    6. '                   ' → logprob: -8.274714469909668
    7. '           ' → logprob: -10.149714469909668
    8. ' ' → logprob: -10.274714469909668
    9. '```' → logprob: -10.899714469909668
    10. '			' → logprob: -11.274714469909668

Token 644: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132648468017578
    2. '=' → logprob: -1.3132648468017578
    3. ' ' → logprob: -13.313264846801758
    4. '=T' → logprob: -14.313264846801758
    5. '   ' → logprob: -14.813264846801758
    6. '  ' → logprob: -15.938264846801758
    7. 't' → logprob: -16.688264846801758
    8. '_' → logprob: -17.063264846801758
    9. ' ' → logprob: -17.188264846801758
    10. 'T' → logprob: -17.188264846801758

Token 645: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.002805110299959779
    2. ' T' → logprob: -5.877805233001709
    3. '   ' → logprob: -15.75280475616455
    4. ' ' → logprob: -16.877805709838867
    5. '	T' → logprob: -17.127805709838867
    6. ' ' → logprob: -17.627805709838867
    7. '           ' → logprob: -17.877805709838867
    8. '  ' → logprob: -18.752805709838867
    9. '```' → logprob: -18.877805709838867
    10. '`' → logprob: -19.002805709838867

Token 646: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0019562290981411934
    2. '[T' → logprob: -6.251956462860107
    3. 'T' → logprob: -10.75195598602295
    4. 'j' → logprob: -12.25195598602295
    5. '[' → logprob: -14.62695598602295
    6. '   ' → logprob: -14.87695598602295
    7. '```' → logprob: -15.50195598602295
    8. '       ' → logprob: -15.87695598602295
    9. '[J' → logprob: -15.87695598602295
    10. '           ' → logprob: -16.001956939697266

Token 647: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04868115857243538
    2. ']
' → logprob: -3.0486812591552734
    3. '[j' → logprob: -11.048681259155273
    4. '']' → logprob: -11.048681259155273
    5. ')' → logprob: -11.298681259155273
    6. '               ' → logprob: -11.423681259155273
    7. ']
' → logprob: -11.548681259155273
    8. '[' → logprob: -11.673681259155273
    9. ' ]' → logprob: -12.423681259155273
    10. ']

' → logprob: -13.298681259155273

Token 648: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004032634024042636
    2. '```' → logprob: -8.50040340423584
    3. '                   ' → logprob: -9.00040340423584
    4. 'if' → logprob: -10.25040340423584
    5. ' if' → logprob: -11.25040340423584
    6. '           ' → logprob: -11.25040340423584
    7. '                ' → logprob: -12.00040340423584
    8. '   ' → logprob: -13.00040340423584
    9. '              ' → logprob: -13.12540340423584
    10. '                
' → logprob: -13.37540340423584

Token 649: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.15296991169452667
    2. '               ' → logprob: -2.6529698371887207
    3. ' if' → logprob: -2.6529698371887207
    4. '```' → logprob: -7.527969837188721
    5. '           ' → logprob: -7.902969837188721
    6. '                   ' → logprob: -10.027970314025879
    7. '``' → logprob: -13.027970314025879
    8. ' ' → logprob: -13.027970314025879
    9. '   ' → logprob: -13.402970314025879
    10. 'elif' → logprob: -13.902970314025879

Token 650: ' last' (ID: 2174)
  Prédit: ' last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.16022686660289764
    2. 'last' → logprob: -1.910226821899414
    3. 'j' → logprob: -14.285226821899414
    4. ' j' → logprob: -14.410226821899414
    5. '(last' → logprob: -14.910226821899414
    6. '   ' → logprob: -15.035226821899414
    7. ' ' → logprob: -15.410226821899414
    8. '2' → logprob: -15.410226821899414
    9. '	last' → logprob: -15.660226821899414
    10. '[last' → logprob: -16.160226821899414

Token 651: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31326353549957275
    2. '==' → logprob: -1.3132635354995728
    3. '==
' → logprob: -13.813263893127441
    4. ' ' → logprob: -15.438263893127441
    5. '=' → logprob: -16.063262939453125
    6. '```' → logprob: -16.313262939453125
    7. ']==' → logprob: -16.563262939453125
    8. ')==' → logprob: -16.938262939453125
    9. ' ==
' → logprob: -17.438262939453125
    10. ' ' → logprob: -17.438262939453125

Token 652: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018657172098755836
    2. '0' → logprob: -4.018657207489014
    3. ' ' → logprob: -7.643657207489014
    4. '1' → logprob: -11.018656730651855
    5. '   ' → logprob: -11.768656730651855
    6. '  ' → logprob: -13.956156730651855
    7. '```' → logprob: -14.331156730651855
    8. '    ' → logprob: -14.456156730651855
    9. '	' → logprob: -15.331156730651855
    10. '     ' → logprob: -15.831156730651855

Token 653: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38711312413215637
    2. '2' → logprob: -1.137113094329834
    3. '1' → logprob: -8.637113571166992
    4. ' ' → logprob: -9.762113571166992
    5. '```' → logprob: -13.137113571166992
    6. '   ' → logprob: -14.012113571166992
    7. '  ' → logprob: -15.074613571166992
    8. '[' → logprob: -15.324613571166992
    9. '-' → logprob: -15.449613571166992
    10. '(' → logprob: -15.512113571166992

Token 654: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3955518901348114
    2. '                   ' → logprob: -1.6455519199371338
    3. ':' → logprob: -2.020551919937134
    4. '               ' → logprob: -7.145551681518555
    5. '                       ' → logprob: -9.145551681518555
    6. '   ' → logprob: -9.395551681518555
    7. '```' → logprob: -9.645551681518555
    8. '           ' → logprob: -10.020551681518555
    9. '                  ' → logprob: -10.895551681518555
    10. '=' → logprob: -11.270551681518555

Token 655: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0017544300062581897
    2. '               ' → logprob: -7.126754283905029
    3. '                       ' → logprob: -7.876754283905029
    4. ':' → logprob: -8.251754760742188
    5. '                    
' → logprob: -9.751754760742188
    6. '           ' → logprob: -10.251754760742188
    7. ':
' → logprob: -10.376754760742188
    8. '                    ' → logprob: -10.751754760742188
    9. '                ' → logprob: -10.876754760742188
    10. '                  ' → logprob: -10.876754760742188

Token 656: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7554159164428711
    2. 'pass' → logprob: -1.005415916442871
    3. '               ' → logprob: -2.380415916442871
    4. '#' (adapté à ' #') → logprob: -3.130415916442871
    5. '                       ' → logprob: -4.130415916442871
    6. 'if' → logprob: -4.755415916442871
    7. ' pass' → logprob: -5.880415916442871
    8. 'for' → logprob: -9.130415916442871
    9. '           ' → logprob: -9.255415916442871
    10. '                ' → logprob: -9.505415916442871

Token 657: ' idem' (ID: 171310)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.4062292277812958
    2. 'if' → logprob: -1.7812292575836182
    3. 'dp' → logprob: -1.9062292575836182
    4. '#' → logprob: -4.656229019165039
    5. '                   ' → logprob: -5.156229019165039
    6. '               ' → logprob: -7.031229019165039
    7. ' pass' → logprob: -8.281229019165039
    8. ' if' → logprob: -9.156229019165039
    9. 'continue' → logprob: -9.781229019165039
    10. 'for' → logprob: -9.906229019165039

Token 658: ' pas' (ID: 2173)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1766146421432495
    2. '                       ' → logprob: -2.051614761352539
    3. '               ' → logprob: -3.926614761352539
    4. '```' → logprob: -5.051614761352539
    5. 'pass' → logprob: -6.551614761352539
    6. '#' → logprob: -6.551614761352539
    7. ':' → logprob: -7.051614761352539
    8. ':
' → logprob: -7.301614761352539
    9. 'elif' → logprob: -7.676614761352539
    10. '                        
' → logprob: -7.801614761352539

Token 659: ' encore' (ID: 14043)
  Prédit: 'enc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enc' → logprob: -0.1246519610285759
    2. ' encore' → logprob: -2.4996519088745117
    3. 'yet' → logprob: -3.9996519088745117
    4. '#' → logprob: -4.749651908874512
    5. '_' → logprob: -5.874651908874512
    6. 'd' → logprob: -6.999651908874512
    7. 'for' → logprob: -7.249651908874512
    8. 'en' → logprob: -7.499651908874512
    9. '=' → logprob: -7.874651908874512
    10. ' yet' → logprob: -7.999651908874512

Token 660: ' commencé' (ID: 78085)
  Prédit: 'enc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enc' → logprob: -0.004419793840497732
    2. 'comm' → logprob: -5.629419803619385
    3. 'com' → logprob: -8.754419326782227
    4. 'yet' → logprob: -8.879419326782227
    5. '#' → logprob: -9.504419326782227
    6. ' encore' → logprob: -9.629419326782227
    7. 'started' → logprob: -9.629419326782227
    8. '   ' → logprob: -9.754419326782227
    9. 'for' → logprob: -10.254419326782227
    10. '...' → logprob: -10.879419326782227

Token 661: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6678948998451233
    2. '                       ' → logprob: -0.7928948998451233
    3. '               ' → logprob: -3.7928948402404785
    4. ':' → logprob: -5.2928948402404785
    5. ':
' → logprob: -5.2928948402404785
    6. '                        
' → logprob: -7.4178948402404785
    7. '                           ' → logprob: -8.167895317077637
    8. 'if' → logprob: -8.542895317077637
    9. '<|end|>' → logprob: -8.792895317077637
    10. '```' → logprob: -8.792895317077637

Token 662: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0668930932879448
    2. '                       ' → logprob: -2.9418931007385254
    3. '               ' → logprob: -4.566893100738525
    4. ':' → logprob: -6.941893100738525
    5. ':
' → logprob: -7.941893100738525
    6. 'pass' → logprob: -9.191892623901367
    7. '           ' → logprob: -10.566892623901367
    8. '       ' → logprob: -10.941892623901367
    9. ' pass' → logprob: -11.066892623901367
    10. '```' → logprob: -11.566892623901367

Token 663: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.014614248648285866
    2. ' pass' → logprob: -4.264614105224609
    3. '               ' → logprob: -8.38961410522461
    4. '                   ' → logprob: -9.01461410522461
    5. 'continue' → logprob: -9.51461410522461
    6. '                       ' → logprob: -11.26461410522461
    7. '                           ' → logprob: -12.01461410522461
    8. '	pass' → logprob: -12.88961410522461
    9. 'if' → logprob: -13.01461410522461
    10. '           ' → logprob: -13.51461410522461

Token 664: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16027864813804626
    2. 'elif' → logprob: -1.9102786779403687
    3. ' elif' → logprob: -10.0352783203125
    4. '```' → logprob: -12.2852783203125
    5. '#elif' → logprob: -13.2852783203125
    6. '	elif' → logprob: -13.4102783203125
    7. '                   ' → logprob: -14.2852783203125
    8. '              ' → logprob: -14.9102783203125
    9. '<|end|>' → logprob: -14.9102783203125
    10. '           ' → logprob: -15.0352783203125

Token 665: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02640189416706562
    2. 'elif' → logprob: -3.651401996612549
    3. '```' → logprob: -9.77640151977539
    4. ' elif' → logprob: -10.65140151977539
    5. '              ' → logprob: -11.90140151977539
    6. '           ' → logprob: -11.90140151977539
    7. '                   ' → logprob: -13.02640151977539
    8. '	elif' → logprob: -13.77640151977539
    9. '             ' → logprob: -14.02640151977539
    10. '                ' → logprob: -14.27640151977539

Token 666: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.01125978585332632
    2. '               ' → logprob: -4.51125955581665
    3. ' elif' → logprob: -8.511260032653809
    4. '                   ' → logprob: -11.761260032653809
    5. 'el' → logprob: -13.511260032653809
    6. '           ' → logprob: -14.011260032653809
    7. '   ' → logprob: -14.886260032653809
    8. '	elif' → logprob: -15.886260032653809
    9. ' ' → logprob: -16.511259078979492
    10. '```' → logprob: -16.761259078979492

Token 667: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.08894535154104233
    2. ' last' → logprob: -2.4639453887939453
    3. '(last' → logprob: -13.213945388793945
    4. '[last' → logprob: -13.838945388793945
    5. '   ' → logprob: -14.088945388793945
    6. '           ' → logprob: -14.838945388793945
    7. 'j' → logprob: -15.213945388793945
    8. '	last' → logprob: -15.338945388793945
    9. 'Last' → logprob: -15.588945388793945
    10. '0' → logprob: -15.713945388793945

Token 668: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931535601615906
    2. ' ==' → logprob: -0.6931535601615906
    3. '==
' → logprob: -12.443153381347656
    4. '=' → logprob: -13.818153381347656
    5. ']==' → logprob: -14.943153381347656
    6. ' ' → logprob: -15.068153381347656
    7. '===' → logprob: -15.318153381347656
    8. '[' → logprob: -16.193153381347656
    9. ' ==
' → logprob: -16.568153381347656
    10. '()==' → logprob: -16.568153381347656

Token 669: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011411691084504128
    2. ' ' → logprob: -7.25114107131958
    3. '1' → logprob: -7.75114107131958
    4. '   ' → logprob: -15.501141548156738
    5. '  ' → logprob: -16.751140594482422
    6. ' ' → logprob: -16.813640594482422
    7. '[' → logprob: -16.938640594482422
    8. '(' → logprob: -16.938640594482422
    9. '```' → logprob: -17.063640594482422
    10. '=' → logprob: -17.063640594482422

Token 670: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006731472443789244
    2. '1' → logprob: -5.0067315101623535
    3. ' ' → logprob: -11.131731033325195
    4. '   ' → logprob: -14.506731033325195
    5. '```' → logprob: -15.819231033325195
    6. '۰' → logprob: -16.444231033325195
    7. '    ' → logprob: -16.569231033325195
    8. '  ' → logprob: -16.756731033325195
    9. '
' → logprob: -17.069231033325195
    10. '=' → logprob: -17.131731033325195

Token 671: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5735629796981812
    2. '                   ' → logprob: -1.0735629796981812
    3. ':
' → logprob: -2.4485630989074707
    4. '               ' → logprob: -4.948563098907471
    5. '```' → logprob: -7.323563098907471
    6. '           ' → logprob: -8.448562622070312
    7. '                       ' → logprob: -9.198562622070312
    8. '   ' → logprob: -9.323562622070312
    9. '==' → logprob: -10.323562622070312
    10. '=' → logprob: -10.573562622070312

Token 672: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01679612509906292
    2. ':' → logprob: -5.016796112060547
    3. '               ' → logprob: -5.016796112060547
    4. ':
' → logprob: -6.141796112060547
    5. '   ' → logprob: -7.641796112060547
    6. '           ' → logprob: -7.766796112060547
    7. '#' → logprob: -8.766796112060547
    8. '```' → logprob: -9.266796112060547
    9. '                       ' → logprob: -10.266796112060547
    10. '       ' → logprob: -11.141796112060547

Token 673: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6122675538063049
    2. '#' (adapté à ' #') → logprob: -0.8622675538063049
    3. '               ' → logprob: -3.61226749420166
    4. 'prev' → logprob: -5.11226749420166
    5. '```' → logprob: -6.36226749420166
    6. '   ' → logprob: -7.98726749420166
    7. '                       ' → logprob: -8.11226749420166
    8. '           ' → logprob: -8.73726749420166
    9. ' #' → logprob: -9.98726749420166
    10. 'if' → logprob: -10.36226749420166

Token 674: ' dernier' (ID: 27982)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5956495404243469
    2. 'prev' → logprob: -1.3456494808197021
    3. '#' → logprob: -1.9706494808197021
    4. '                   ' → logprob: -3.595649480819702
    5. 'c' → logprob: -3.970649480819702
    6. '           ' → logprob: -7.220649719238281
    7. '```' → logprob: -7.345649719238281
    8. 'last' → logprob: -7.470649719238281
    9. '   ' → logprob: -8.220649719238281
    10. '                       ' → logprob: -9.220649719238281

Token 675: ' wagon' (ID: 90907)
  Prédit: 'wagon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wagon' → logprob: -0.009561880491673946
    2. '==' → logprob: -5.509562015533447
    3. 'wag' → logprob: -6.134562015533447
    4. ' wagon' → logprob: -6.634562015533447
    5. ' ==' → logprob: -7.259562015533447
    6. 'w' → logprob: -7.759562015533447
    7. 'c' → logprob: -8.884561538696289
    8. '   ' → logprob: -9.009561538696289
    9. '```' → logprob: -9.259561538696289
    10. 'wagen' → logprob: -9.259561538696289

Token 676: ' de' (ID: 334)
  Prédit: ' vient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vient' → logprob: -0.29593491554260254
    2. 'vient' → logprob: -1.9209349155426025
    3. ' ==' → logprob: -3.1709349155426025
    4. '==' → logprob: -3.7959349155426025
    5. '                   ' → logprob: -4.295934677124023
    6. 'ven' → logprob: -4.420934677124023
    7. 'viens' → logprob: -5.170934677124023
    8. 'venir' → logprob: -5.920934677124023
    9. ' comes' → logprob: -6.295934677124023
    10. ' venant' → logprob: -6.420934677124023

Token 677: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -9.019237768370658e-05
    2. ' T' → logprob: -9.375090599060059
    3. 't' → logprob: -12.625090599060059
    4. '   ' → logprob: -14.000090599060059
    5. 'j' → logprob: -15.250090599060059
    6. ' ' → logprob: -15.500090599060059
    7. '  ' → logprob: -16.125089645385742
    8. 'if' → logprob: -16.250089645385742
    9. 'for' → logprob: -16.375089645385742
    10. '
' → logprob: -16.500089645385742

Token 678: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5367538332939148
    2. ',' → logprob: -1.5367538928985596
    3. ':' → logprob: -2.0367538928985596
    4. ':
' → logprob: -3.9117538928985596
    5. '=' → logprob: -4.1617536544799805
    6. ' =' → logprob: -4.7867536544799805
    7. '               ' → logprob: -4.7867536544799805
    8. '   ' → logprob: -5.6617536544799805
    9. '                       ' → logprob: -6.0367536544799805
    10. ' c' → logprob: -6.1617536544799805

Token 679: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5713914036750793
    2. 'prev' → logprob: -1.6963913440704346
    3. 'c' → logprob: -2.1963913440704346
    4. '               ' → logprob: -2.4463913440704346
    5. '                   ' → logprob: -3.1963913440704346
    6. 'if' → logprob: -5.446391582489014
    7. ' #' → logprob: -5.571391582489014
    8. '                       ' → logprob: -6.696391582489014
    9. '   ' → logprob: -6.946391582489014
    10. '```' → logprob: -7.196391582489014

Token 680: ' doit' (ID: 21822)
  Prédit: ' doit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.31988200545310974
    2. 'do' → logprob: -2.4448819160461426
    3. '   ' → logprob: -2.8198819160461426
    4. ' must' → logprob: -3.3198819160461426
    5. '               ' → logprob: -3.4448819160461426
    6. '#' → logprob: -3.8198819160461426
    7. 'if' → logprob: -4.569881916046143
    8. ' if' → logprob: -5.194881916046143
    9. 'must' → logprob: -5.194881916046143
    10. ' do' → logprob: -5.694881916046143

Token 681: ' alter' (ID: 14183)
  Prédit: 'alter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alter' → logprob: -0.6357986330986023
    2. 'altern' → logprob: -1.010798692703247
    3. 'contin' → logprob: -3.385798692703247
    4. 'continue' → logprob: -4.135798454284668
    5. '#' → logprob: -4.510798454284668
    6. ' altern' → logprob: -4.760798454284668
    7. 'alt' → logprob: -4.885798454284668
    8. 'elif' → logprob: -5.135798454284668
    9. 'alternate' → logprob: -5.510798454284668
    10. ' alter' → logprob: -5.635798454284668

Token 682: 'ner' (ID: 1247)
  Prédit: 'ner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ner' → logprob: -0.13120515644550323
    2. 'er' → logprob: -2.2562050819396973
    3. 'rer' → logprob: -4.131205081939697
    4. 'r' → logprob: -6.381205081939697
    5. 'ter' → logprob: -8.506205558776855
    6. 'n' → logprob: -9.006205558776855
    7. 'nner' → logprob: -10.006205558776855
    8. 'ater' → logprob: -11.006205558776855
    9. '```' → logprob: -11.631205558776855
    10. '   ' → logprob: -11.631205558776855

Token 683: ' avec' (ID: 3937)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.028514491394162178
    2. '               ' → logprob: -3.9035143852233887
    3. '                       ' → logprob: -5.278514385223389
    4. ',' → logprob: -7.028514385223389
    5. 'c' → logprob: -7.653514385223389
    6. ':
' → logprob: -8.153514862060547
    7. '```' → logprob: -8.153514862060547
    8. ' c' → logprob: -8.403514862060547
    9. 'prev' → logprob: -8.653514862060547
    10. ':' → logprob: -9.403514862060547

Token 684: ' précédent' (ID: 128462)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.03128404915332794
    2. ' T' → logprob: -3.7812840938568115
    3. 'c' → logprob: -4.906283855438232
    4. ' c' → logprob: -7.906283855438232
    5. 't' → logprob: -9.53128433227539
    6. 'S' → logprob: -9.78128433227539
    7. '   ' → logprob: -10.40628433227539
    8. ' ' → logprob: -10.53128433227539
    9. '```' → logprob: -11.40628433227539
    10. 'prev' → logprob: -12.40628433227539

Token 685: ' de' (ID: 334)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8040431141853333
    2. 'prev' → logprob: -1.9290430545806885
    3. 'T' → logprob: -2.1790430545806885
    4. '                       ' → logprob: -2.8040430545806885
    5. '               ' → logprob: -2.9290430545806885
    6. 'elif' → logprob: -3.1790430545806885
    7. 'c' → logprob: -3.3040430545806885
    8. '```' → logprob: -4.054043292999268
    9. '=' → logprob: -4.679043292999268
    10. ' T' → logprob: -4.679043292999268

Token 686: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -5.6457742175552994e-05
    2. ' T' → logprob: -9.875056266784668
    3. 'c' → logprob: -13.875056266784668
    4. 't' → logprob: -14.000056266784668
    5. '   ' → logprob: -14.000056266784668
    6. '```' → logprob: -14.000056266784668
    7. '
' → logprob: -14.125056266784668
    8. '`' → logprob: -14.875056266784668
    9. ' ' → logprob: -16.125057220458984
    10. 'if' → logprob: -16.625057220458984

Token 687: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.033204372972249985
    2. 'prev' → logprob: -3.9082043170928955
    3. 'if' → logprob: -5.283204555511475
    4. '                       ' → logprob: -5.283204555511475
    5. ' if' → logprob: -6.783204555511475
    6. '               ' → logprob: -7.908204555511475
    7. '```' → logprob: -8.158204078674316
    8. '           ' → logprob: -9.158204078674316
    9. '
' → logprob: -9.533204078674316
    10. ' prev' → logprob: -9.658204078674316

Token 688: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.020967721939086914
    2. '                       ' → logprob: -4.645967483520508
    3. 'prev' → logprob: -4.770967483520508
    4. '```' → logprob: -6.270967483520508
    5. '               ' → logprob: -7.395967483520508
    6. 'if' → logprob: -9.770967483520508
    7. '``' → logprob: -10.395967483520508
    8. 'elif' → logprob: -10.770967483520508
    9. '   ' → logprob: -11.770967483520508
    10. '                           ' → logprob: -11.895967483520508

Token 689: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -0.0017201616428792477
    2. '                   ' → logprob: -6.501719951629639
    3. ' prev' → logprob: -8.751720428466797
    4. '                       ' → logprob: -10.501720428466797
    5. 'if' → logprob: -10.626720428466797
    6. '               ' → logprob: -12.501720428466797
    7. '   ' → logprob: -13.751720428466797
    8. '	prev' → logprob: -14.001720428466797
    9. '```' → logprob: -14.376720428466797
    10. '
' → logprob: -15.001720428466797

Token 690: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326996088027954
    2. ' =' → logprob: -0.7576996088027954
    3. '=T' → logprob: -9.382699966430664
    4. 't' → logprob: -12.382699966430664
    5. 'T' → logprob: -12.507699966430664
    6. 'c' → logprob: -12.882699966430664
    7. '   ' → logprob: -13.507699966430664
    8. '=j' → logprob: -13.632699966430664
    9. ' ' → logprob: -14.257699966430664
    10. '=t' → logprob: -15.007699966430664

Token 691: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.001929228543303907
    2. ' T' → logprob: -6.25192928314209
    3. '   ' → logprob: -14.75192928314209
    4. ' ' → logprob: -16.376928329467773
    5. '  ' → logprob: -17.751928329467773
    6. '	T' → logprob: -18.001928329467773
    7. 't' → logprob: -18.126928329467773
    8. '       ' → logprob: -18.376928329467773
    9. '           ' → logprob: -18.501928329467773
    10. ' ' → logprob: -18.751928329467773

Token 692: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.1517960956552997e-05
    2. 'j' → logprob: -11.375011444091797
    3. '[' → logprob: -17.875011444091797
    4. '   ' → logprob: -18.875011444091797
    5. 'T' → logprob: -19.375011444091797
    6. '(j' → logprob: -19.750011444091797
    7. '[max' → logprob: -19.750011444091797
    8. '[i' → logprob: -20.375011444091797
    9. '           ' → logprob: -20.500011444091797
    10. '       ' → logprob: -20.875011444091797

Token 693: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.747814349073451e-05
    2. ' -' → logprob: -11.000017166137695
    3. '1' → logprob: -14.750017166137695
    4. '```' → logprob: -16.000017166137695
    5. ']-' → logprob: -16.125017166137695
    6. '[' → logprob: -16.375017166137695
    7. '[j' → logprob: -17.250017166137695
    8. ']' → logprob: -17.250017166137695
    9. '−' → logprob: -17.750017166137695
    10. '   ' → logprob: -18.000017166137695

Token 694: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -13.500003814697266
    3. '-' → logprob: -14.000003814697266
    4. '   ' → logprob: -14.625003814697266
    5. 'j' → logprob: -14.812503814697266
    6. '```' → logprob: -15.687503814697266
    7. '2' → logprob: -17.000003814697266
    8. '
' → logprob: -17.125003814697266
    9. '  ' → logprob: -17.312503814697266
    10. ']' → logprob: -17.437503814697266

Token 695: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.07903289049863815
    2. ']' → logprob: -2.5790328979492188
    3. '                   ' → logprob: -9.204032897949219
    4. ']
' → logprob: -11.079032897949219
    5. '']
' → logprob: -11.829032897949219
    6. '               ' → logprob: -11.829032897949219
    7. ' ]
' → logprob: -12.704032897949219
    8. ']

' → logprob: -12.704032897949219
    9. '']' → logprob: -13.454032897949219
    10. '                       ' → logprob: -13.829032897949219

Token 696: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0025032442063093185
    2. 'if' → logprob: -7.377503395080566
    3. ' if' → logprob: -7.752503395080566
    4. '                       ' → logprob: -7.752503395080566
    5. '```' → logprob: -7.752503395080566
    6. '               ' → logprob: -8.002503395080566
    7. '<|end|>' → logprob: -8.752503395080566
    8. '           ' → logprob: -10.627503395080566
    9. '                           ' → logprob: -11.252503395080566
    10. '<|end|>' → logprob: -11.377503395080566

Token 697: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0009193199803121388
    2. ' if' → logprob: -7.250919342041016
    3. '                   ' → logprob: -8.500919342041016
    4. '```' → logprob: -12.375919342041016
    5. '               ' → logprob: -14.000919342041016
    6. '                    
' → logprob: -14.375919342041016
    7. '           ' → logprob: -16.000919342041016
    8. '                       ' → logprob: -16.375919342041016
    9. '``' → logprob: -16.750919342041016
    10. '   ' → logprob: -16.875919342041016

Token 698: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.0009118211455643177
    2. ' can' → logprob: -7.000911712646484
    3. 'c' → logprob: -15.125911712646484
    4. 'not' → logprob: -18.125911712646484
    5. '(can' → logprob: -18.250911712646484
    6. '```' → logprob: -18.625911712646484
    7. '	can' → logprob: -18.750911712646484
    8. ' ' → logprob: -19.000911712646484
    9. '   ' → logprob: -19.125911712646484
    10. '_can' → logprob: -19.250911712646484

Token 699: '_connect' (ID: 32485)
  Prédit: '_connect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_connect' → logprob: -0.002268731826916337
    2. 'connect' → logprob: -6.1272687911987305
    3. 'prev' → logprob: -10.12726879119873
    4. 'Connect' → logprob: -11.87726879119873
    5. '(prev' → logprob: -11.87726879119873
    6. '```' → logprob: -11.87726879119873
    7. 'can' → logprob: -12.75226879119873
    8. '_prev' → logprob: -12.75226879119873
    9. '_connection' → logprob: -12.87726879119873
    10. '_can' → logprob: -13.12726879119873

Token 700: '(prev' (ID: 59594)
  Prédit: '(prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prev' → logprob: -0.0003391574718989432
    2. 'prev' → logprob: -8.00033950805664
    3. '(c' → logprob: -12.62533950805664
    4. '(last' → logprob: -15.75033950805664
    5. '(' → logprob: -15.87533950805664
    6. 'c' → logprob: -16.50033950805664
    7. '	prev' → logprob: -17.00033950805664
    8. ' prev' → logprob: -17.87533950805664
    9. ' (' → logprob: -18.62533950805664
    10. '_prev' → logprob: -19.25033950805664

Token 701: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006382156861945987
    2. ',c' → logprob: -7.625638008117676
    3. ' ,' → logprob: -9.000638008117676
    4. 'c' → logprob: -11.875638008117676
    5. '),' → logprob: -12.375638008117676
    6. ')' → logprob: -12.750638008117676
    7. '           ' → logprob: -12.875638008117676
    8. ',
' → logprob: -13.250638008117676
    9. ' c' → logprob: -13.375638008117676
    10. '',' → logprob: -13.625638008117676

Token 702: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2519298195838928
    2. ' c' → logprob: -1.501929759979248
    3. ')c' → logprob: -14.376930236816406
    4. ')' → logprob: -16.626930236816406
    5. ' ' → logprob: -16.876930236816406
    6. '(c' → logprob: -17.376930236816406
    7. ' ' → logprob: -17.501930236816406
    8. ',' → logprob: -17.626930236816406
    9. '	c' → logprob: -17.751930236816406
    10. ',c' → logprob: -18.126930236816406

Token 703: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0009575550211593509
    2. '):' → logprob: -7.000957489013672
    3. '                       ' → logprob: -10.500957489013672
    4. '                   ' → logprob: -11.750957489013672
    5. '):
' → logprob: -12.125957489013672
    6. '                           ' → logprob: -13.250957489013672
    7. ':
' → logprob: -14.125957489013672
    8. '               ' → logprob: -14.125957489013672
    9. '):

' → logprob: -14.125957489013672
    10. '():
' → logprob: -15.250957489013672

Token 704: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.02084152027964592
    2. '                           ' → logprob: -4.145841598510742
    3. 'dp' → logprob: -6.020841598510742
    4. '                   ' → logprob: -6.520841598510742
    5. '                               ' → logprob: -7.395841598510742
    6. ' dp' → logprob: -8.395841598510742
    7. '                        ' → logprob: -11.020841598510742
    8. '               ' → logprob: -11.770841598510742
    9. '```' → logprob: -11.895841598510742
    10. '                      ' → logprob: -12.020841598510742

Token 705: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -4.5491004129871726e-05
    2. ' dp' → logprob: -10.000045776367188
    3. '```' → logprob: -17.500045776367188
    4. '(dp' → logprob: -17.750045776367188
    5. '	dp' → logprob: -18.250045776367188
    6. '                   ' → logprob: -18.250045776367188
    7. '                           ' → logprob: -19.500045776367188
    8. '           ' → logprob: -19.500045776367188
    9. '_dp' → logprob: -20.000045776367188
    10. 'dj' → logprob: -20.250045776367188

Token 706: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.5941604690160602e-05
    2. '[j' → logprob: -10.625025749206543
    3. 'i' → logprob: -13.625025749206543
    4. '[' → logprob: -15.125025749206543
    5. ' [' → logprob: -17.12502670288086
    6. '[I' → logprob: -17.75002670288086
    7. '   ' → logprob: -17.87502670288086
    8. '```' → logprob: -18.12502670288086
    9. '=i' → logprob: -18.75002670288086
    10. '           ' → logprob: -18.87502670288086

Token 707: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00013238313840702176
    2. '][' → logprob: -9.75013256072998
    3. 'i' → logprob: -10.50013256072998
    4. '[j' → logprob: -10.87513256072998
    5. '           ' → logprob: -11.12513256072998
    6. '   ' → logprob: -12.25013256072998
    7. '       ' → logprob: -13.25013256072998
    8. '+' → logprob: -13.62513256072998
    9. ' [' → logprob: -13.62513256072998
    10. '               ' → logprob: -13.75013256072998

Token 708: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.9153885558771435e-06
    2. ' j' → logprob: -12.875005722045898
    3. '   ' → logprob: -12.875005722045898
    4. '[j' → logprob: -14.375005722045898
    5. '(j' → logprob: -16.5000057220459
    6. '	j' → logprob: -16.8750057220459
    7. '           ' → logprob: -17.7500057220459
    8. '
' → logprob: -18.1250057220459
    9. ' ' → logprob: -18.2500057220459
    10. '  ' → logprob: -18.3750057220459

Token 709: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3856492842023727e-06
    2. ' +' → logprob: -13.750000953674316
    3. '+[' → logprob: -16.500001907348633
    4. '+j' → logprob: -16.625001907348633
    5. '][' → logprob: -16.875001907348633
    6. '+
' → logprob: -18.000001907348633
    7. '[' → logprob: -18.500001907348633
    8. '1' → logprob: -18.625001907348633
    9. ']+' → logprob: -18.750001907348633
    10. '```' → logprob: -19.000001907348633

Token 710: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '+' → logprob: -14.625000953674316
    3. ' ' → logprob: -16.625
    4. '   ' → logprob: -17.125
    5. '```' → logprob: -18.625
    6. '       ' → logprob: -20.75
    7. '  ' → logprob: -20.75
    8. '2' → logprob: -20.875
    9. '	' → logprob: -20.875
    10. '           ' → logprob: -20.875

Token 711: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006319015519693494
    2. '[' → logprob: -7.375631809234619
    3. '1' → logprob: -12.750632286071777
    4. ']' → logprob: -13.250632286071777
    5. ' ][' → logprob: -14.625632286071777
    6. '   ' → logprob: -17.12563133239746
    7. ''][' → logprob: -17.25063133239746
    8. '```' → logprob: -17.37563133239746
    9. '"][' → logprob: -17.87563133239746
    10. '}[' → logprob: -18.25063133239746

Token 712: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.0
    3. ' ' → logprob: -16.625
    4. '   ' → logprob: -18.25
    5. '```' → logprob: -19.125
    6. '  ' → logprob: -19.6875
    7. '(' → logprob: -19.75
    8. '۱' → logprob: -19.8125
    9. '<|end|>' → logprob: -19.875
    10. ']' → logprob: -20.1875

Token 713: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019512299913913012
    2. ']=' → logprob: -6.251951217651367
    3. '=' → logprob: -10.876951217651367
    4. ')' → logprob: -12.751951217651367
    5. '])' → logprob: -14.751951217651367
    6. ' ]' → logprob: -15.751951217651367
    7. '],' → logprob: -16.126951217651367
    8. ']
' → logprob: -17.001951217651367
    9. ' =' → logprob: -17.376951217651367
    10. '           ' → logprob: -17.376951217651367

Token 714: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031777136027812958
    2. ' =' → logprob: -5.753177642822266
    3. '=max' → logprob: -17.503177642822266
    4. ']=' → logprob: -17.753177642822266
    5. '```' → logprob: -18.128177642822266
    6. ']' → logprob: -18.378177642822266
    7. '                           ' → logprob: -19.128177642822266
    8. ')' → logprob: -19.503177642822266
    9. '           ' → logprob: -19.628177642822266
    10. '   ' → logprob: -20.253177642822266

Token 715: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.006715370807796717
    2. ' max' → logprob: -5.006715297698975
    3. '(max' → logprob: -20.131715774536133
    4. '=max' → logprob: -20.756715774536133
    5. '	max' → logprob: -20.881715774536133
    6. '[max' → logprob: -21.381715774536133
    7. '_max' → logprob: -22.631715774536133
    8. ',max' → logprob: -23.006715774536133
    9. ' ' → logprob: -23.256715774536133
    10. 'min' → logprob: -23.381715774536133

Token 716: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.0325924449716695e-05
    2. 'dp' → logprob: -11.50001049041748
    3. '(' → logprob: -15.75001049041748
    4. '(
' → logprob: -17.875009536743164
    5. '```' → logprob: -17.875009536743164
    6. '	dp' → logprob: -18.125009536743164
    7. ' (' → logprob: -19.000009536743164
    8. '(df' → logprob: -20.250009536743164
    9. '(dt' → logprob: -20.625009536743164
    10. ' dp' → logprob: -21.000009536743164

Token 717: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001847062085289508
    2. 'dp' → logprob: -8.625185012817383
    3. '(i' → logprob: -12.875185012817383
    4. 'i' → logprob: -14.375185012817383
    5. '[' → logprob: -14.500185012817383
    6. '```' → logprob: -14.500185012817383
    7. '(dp' → logprob: -15.000185012817383
    8. '[j' → logprob: -15.625185012817383
    9. '_dp' → logprob: -16.375185012817383
    10. '[
' → logprob: -16.375185012817383

Token 718: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006749835796654224
    2. '][' → logprob: -5.006749629974365
    3. '[j' → logprob: -11.506750106811523
    4. '[' → logprob: -11.756750106811523
    5. 'i' → logprob: -12.381750106811523
    6. '+' → logprob: -12.506750106811523
    7. '```' → logprob: -12.631750106811523
    8. ']' → logprob: -14.006750106811523
    9. ')[' → logprob: -14.256750106811523
    10. '           ' → logprob: -14.506750106811523

Token 719: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0012091610115021467
    2. '[j' → logprob: -6.876209259033203
    3. 'i' → logprob: -9.376209259033203
    4. '][' → logprob: -9.751209259033203
    5. '[i' → logprob: -10.626209259033203
    6. '+' → logprob: -12.376209259033203
    7. '
' → logprob: -13.251209259033203
    8. '   ' → logprob: -14.501209259033203
    9. ' j' → logprob: -14.626209259033203
    10. '```' → logprob: -14.751209259033203

Token 720: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.35073766112327576
    2. '][' → logprob: -1.2257376909255981
    3. '[i' → logprob: -6.975737571716309
    4. '[j' → logprob: -7.350737571716309
    5. '1' → logprob: -8.475737571716309
    6. '[' → logprob: -8.600737571716309
    7. '   ' → logprob: -9.100737571716309
    8. '           ' → logprob: -9.600737571716309
    9. '```' → logprob: -10.350737571716309
    10. ']' → logprob: -10.725737571716309

Token 721: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.35837464465294e-05
    2. '+' → logprob: -11.000043869018555
    3. '[j' → logprob: -11.875043869018555
    4. 'j' → logprob: -12.125043869018555
    5. '0' → logprob: -12.250043869018555
    6. '[' → logprob: -12.875043869018555
    7. '
' → logprob: -13.375043869018555
    8. '[i' → logprob: -13.500043869018555
    9. '   ' → logprob: -13.750043869018555
    10. ' ' → logprob: -14.000043869018555

Token 722: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0028582511004060507
    2. '[i' → logprob: -5.8778581619262695
    3. '[j' → logprob: -10.25285816192627
    4. '```' → logprob: -12.37785816192627
    5. ' ][' → logprob: -12.50285816192627
    6. '[' → logprob: -12.50285816192627
    7. ']' → logprob: -13.37785816192627
    8. '   ' → logprob: -13.87785816192627
    9. ')[' → logprob: -14.25285816192627
    10. '           ' → logprob: -14.50285816192627

Token 723: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2346528321504593
    2. '0' → logprob: -1.8596528768539429
    3. 'i' → logprob: -2.9846527576446533
    4. '1' → logprob: -5.984652996063232
    5. '   ' → logprob: -8.859652519226074
    6. '[j' → logprob: -10.109652519226074
    7. '
' → logprob: -10.609652519226074
    8. 'last' → logprob: -10.734652519226074
    9. ' j' → logprob: -11.109652519226074
    10. '[' → logprob: -11.234652519226074

Token 724: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -7.541112427134067e-05
    2. ']' → logprob: -10.375075340270996
    3. ']+' → logprob: -10.625075340270996
    4. '][' → logprob: -12.125075340270996
    5. ',' → logprob: -12.500075340270996
    6. 'length' → logprob: -12.625075340270996
    7. '],
' → logprob: -13.375075340270996
    8. '[i' → logprob: -13.875075340270996
    9. '+' → logprob: -13.875075340270996
    10. ' ],' → logprob: -14.000075340270996

Token 725: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -9.627176768844947e-05
    2. ' length' → logprob: -9.250096321105957
    3. 'dp' → logprob: -17.25009536743164
    4. '   ' → logprob: -17.50009536743164
    5. '           ' → logprob: -17.50009536743164
    6. ' ' → logprob: -18.75009536743164
    7. '       ' → logprob: -19.50009536743164
    8. '                       ' → logprob: -19.50009536743164
    9. '                   ' → logprob: -19.50009536743164
    10. '  ' → logprob: -19.50009536743164

Token 726: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.5716304410016164e-05
    2. ' +' → logprob: -10.250035285949707
    3. ')+' → logprob: -15.375035285949707
    4. '()+' → logprob: -17.625036239624023
    5. '```' → logprob: -17.875036239624023
    6. '   ' → logprob: -18.750036239624023
    7. ']+' → logprob: -18.875036239624023
    8. '+
' → logprob: -19.125036239624023
    9. '＋' → logprob: -19.125036239624023
    10. ')' → logprob: -19.250036239624023

Token 727: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.875003814697266
    3. '+' → logprob: -13.500003814697266
    4. '   ' → logprob: -18.000003814697266
    5. '```' → logprob: -18.125003814697266
    6. ')' → logprob: -19.125003814697266
    7. ' +' → logprob: -19.875003814697266
    8. '
' → logprob: -20.000003814697266
    9. '2' → logprob: -20.125003814697266
    10. '[' → logprob: -20.250003814697266

Token 728: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002713215071707964
    2. ')
' → logprob: -6.002713203430176
    3. '               ' → logprob: -8.502713203430176
    4. '           ' → logprob: -10.627713203430176
    5. '                   ' → logprob: -12.002713203430176
    6. ' )' → logprob: -14.002713203430176
    7. '                       ' → logprob: -14.127713203430176
    8. '```' → logprob: -14.502713203430176
    9. ')`' → logprob: -14.877713203430176
    10. '                           ' → logprob: -14.877713203430176

Token 729: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010136152617633343
    2. '```' → logprob: -4.760136127471924
    3. 'elif' → logprob: -6.635136127471924
    4. '           ' → logprob: -9.010136604309082
    5. '                   ' → logprob: -9.635136604309082
    6. ' elif' → logprob: -11.635136604309082
    7. '       ' → logprob: -12.885136604309082
    8. '``' → logprob: -13.010136604309082
    9. '                       ' → logprob: -13.135136604309082
    10. 'else' → logprob: -13.510136604309082

Token 730: ' elif' (ID: 9497)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3718153238296509
    2. '               ' → logprob: -1.2468153238296509
    3. 'elif' (adapté à ' elif') → logprob: -4.246815204620361
    4. '                   ' → logprob: -5.121815204620361
    5. '           ' → logprob: -6.746815204620361
    6. ' elif' → logprob: -7.121815204620361
    7. '                       ' → logprob: -8.37181568145752
    8. '``' → logprob: -8.49681568145752
    9. '                               ' → logprob: -9.12181568145752
    10. 'else' → logprob: -9.24681568145752

Token 731: ' last' (ID: 2174)
  Prédit: ' last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.052317555993795395
    2. 'last' → logprob: -3.3023176193237305
    3. '0' → logprob: -4.3023176193237305
    4. ' ' → logprob: -7.4273176193237305
    5. '(last' → logprob: -10.55231761932373
    6. '[last' → logprob: -12.42731761932373
    7. '   ' → logprob: -12.92731761932373
    8. '	last' → logprob: -13.55231761932373
    9. '[' → logprob: -13.80231761932373
    10. '2' → logprob: -14.05231761932373

Token 732: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2014177292585373
    2. '==' → logprob: -1.7014176845550537
    3. '==
' → logprob: -13.326417922973633
    4. '[' → logprob: -14.451417922973633
    5. ']==' → logprob: -14.576417922973633
    6. '=' → logprob: -14.701417922973633
    7. ' ' → logprob: -15.201417922973633
    8. ' ==
' → logprob: -15.326417922973633
    9. '===' → logprob: -15.576417922973633
    10. '()==' → logprob: -15.951417922973633

Token 733: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -17.250085830688477
    4. '(' → logprob: -18.250085830688477
    5. '۰' → logprob: -18.500085830688477
    6. '  ' → logprob: -19.125085830688477
    7. '```' → logprob: -19.750085830688477
    8. '[' → logprob: -19.812585830688477
    9. '<|end|>' → logprob: -19.875085830688477
    10. '    ' → logprob: -20.562585830688477

Token 734: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -18.062501907348633
    4. '1' → logprob: -18.312501907348633
    5. '(' → logprob: -18.687501907348633
    6. '```' → logprob: -18.937501907348633
    7. '۰' → logprob: -19.125001907348633
    8. '=' → logprob: -19.625001907348633
    9. '2' → logprob: -19.687501907348633
    10. 'O' → logprob: -19.937501907348633

Token 735: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.35924383997917175
    2. ':' → logprob: -1.3592438697814941
    3. ':
' → logprob: -3.359243869781494
    4. '               ' → logprob: -4.859243869781494
    5. '```' → logprob: -6.734243869781494
    6. '                       ' → logprob: -7.359243869781494
    7. '           ' → logprob: -8.734243392944336
    8. '                           ' → logprob: -9.609243392944336
    9. '                  ' → logprob: -9.859243392944336
    10. '                 ' → logprob: -10.234243392944336

Token 736: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007152927573770285
    2. '               ' → logprob: -7.875715255737305
    3. '```' → logprob: -8.875715255737305
    4. '                       ' → logprob: -9.750715255737305
    5. '                  ' → logprob: -10.875715255737305
    6. ':
' → logprob: -10.875715255737305
    7. 'if' → logprob: -11.000715255737305
    8. '#' → logprob: -11.000715255737305
    9. ':' → logprob: -11.500715255737305
    10. '                    ' → logprob: -11.625715255737305

Token 737: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5855867862701416
    2. '#' (adapté à ' #') → logprob: -0.8355867862701416
    3. '               ' → logprob: -4.8355865478515625
    4. '```' → logprob: -7.8355865478515625
    5. '                       ' → logprob: -8.085586547851562
    6. 'if' → logprob: -8.335586547851562
    7. 'prev' → logprob: -8.335586547851562
    8. ' #' → logprob: -8.710586547851562
    9. '           ' → logprob: -8.960586547851562
    10. '   ' → logprob: -9.085586547851562

Token 738: ' dernier' (ID: 27982)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9216006994247437
    2. 'if' → logprob: -1.1716006994247437
    3. '                   ' → logprob: -1.7966006994247437
    4. '               ' → logprob: -2.421600818634033
    5. 'prev' → logprob: -3.546600818634033
    6. 'last' → logprob: -5.546600818634033
    7. ' if' → logprob: -6.796600818634033
    8. '           ' → logprob: -7.171600818634033
    9. '
' → logprob: -7.546600818634033
    10. '   ' → logprob: -7.671600818634033

Token 739: ' wagon' (ID: 90907)
  Prédit: 'wagon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wagon' → logprob: -0.7134093046188354
    2. ' ==' → logprob: -1.2134093046188354
    3. '==' → logprob: -2.088409423828125
    4. ' wagon' → logprob: -2.963409423828125
    5. 'wag' → logprob: -4.213409423828125
    6. 'w' → logprob: -5.213409423828125
    7. '   ' → logprob: -5.713409423828125
    8. '```' → logprob: -6.088409423828125
    9. ' =' → logprob: -6.463409423828125
    10. '[j' → logprob: -6.588409423828125

Token 740: ' de' (ID: 334)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.092837929725647
    2. '==' → logprob: -1.217837929725647
    3. ' ==' → logprob: -1.217837929725647
    4. '               ' → logprob: -2.8428378105163574
    5. '=' → logprob: -5.342837810516357
    6. ' =' → logprob: -6.467837810516357
    7. ' vient' → logprob: -6.717837810516357
    8. ':' → logprob: -6.967837810516357
    9. '!=' → logprob: -6.967837810516357
    10. '```' → logprob: -7.092837810516357

Token 741: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.000923965300898999
    2. 'i' → logprob: -7.875924110412598
    3. '1' → logprob: -8.250924110412598
    4. ' S' → logprob: -8.500924110412598
    5. 'M' → logprob: -10.625924110412598
    6. '0' → logprob: -10.875924110412598
    7. 'last' → logprob: -11.500924110412598
    8. ' ' → logprob: -11.750924110412598
    9. '   ' → logprob: -12.750924110412598
    10. ' i' → logprob: -12.750924110412598

Token 742: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004282230511307716
    2. '```' → logprob: -6.504281997680664
    3. '               ' → logprob: -6.629281997680664
    4. ':' → logprob: -7.379281997680664
    5. ':
' → logprob: -7.879281997680664
    6. '                       ' → logprob: -8.129281997680664
    7. 'prev' → logprob: -10.004281997680664
    8. '           ' → logprob: -10.879281997680664
    9. ' =' → logprob: -10.879281997680664
    10. '=' → logprob: -11.254281997680664

Token 743: ' on' (ID: 402)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.025248540565371513
    2. '#' → logprob: -4.4002485275268555
    3. '               ' → logprob: -5.1502485275268555
    4. 'prev' → logprob: -5.2752485275268555
    5. 'if' → logprob: -7.2752485275268555
    6. '                       ' → logprob: -7.4002485275268555
    7. '```' → logprob: -8.025248527526855
    8. '           ' → logprob: -10.025248527526855
    9. ' prev' → logprob: -11.400248527526855
    10. '                  ' → logprob: -11.525248527526855

Token 744: ' doit' (ID: 21822)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11476174741983414
    2. '               ' → logprob: -2.9897618293762207
    3. 'if' → logprob: -3.4897618293762207
    4. '                       ' → logprob: -4.239761829376221
    5. '```' → logprob: -5.489761829376221
    6. '=' → logprob: -6.239761829376221
    7. '   ' → logprob: -6.239761829376221
    8. ' if' → logprob: -6.489761829376221
    9. '           ' → logprob: -6.614761829376221
    10. ' =' → logprob: -7.989761829376221

Token 745: ' alter' (ID: 14183)
  Prédit: 'altern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'altern' → logprob: -0.923258364200592
    2. '                   ' → logprob: -1.6732583045959473
    3. '#' → logprob: -1.9232583045959473
    4. 'alter' → logprob: -2.7982583045959473
    5. '               ' → logprob: -2.9232583045959473
    6. 'if' → logprob: -3.4232583045959473
    7. ' altern' → logprob: -3.9232583045959473
    8. '```' → logprob: -3.9232583045959473
    9. 'alt' → logprob: -4.298258304595947
    10. '                       ' → logprob: -4.548258304595947

Token 746: 'ner' (ID: 1247)
  Prédit: 'ner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ner' → logprob: -0.07448940724134445
    2. 'ter' → logprob: -2.9494893550872803
    3. 'rer' → logprob: -4.949489593505859
    4. 'er' → logprob: -5.199489593505859
    5. 'n' → logprob: -5.824489593505859
    6. 'tern' → logprob: -6.199489593505859
    7. 'r' → logprob: -6.949489593505859
    8. 'rn' → logprob: -7.949489593505859
    9. 'nner' → logprob: -8.44948959350586
    10. 'alter' → logprob: -9.94948959350586

Token 747: ' avec' (ID: 3937)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.16567625105381012
    2. 'with' → logprob: -2.0406763553619385
    3. '                       ' → logprob: -4.540676116943359
    4. '               ' → logprob: -5.415676116943359
    5. 'c' → logprob: -6.165676116943359
    6. '```' → logprob: -6.290676116943359
    7. '=' → logprob: -6.915676116943359
    8. ' with' → logprob: -7.665676116943359
    9. '#' → logprob: -8.16567611694336
    10. '(c' → logprob: -8.16567611694336

Token 748: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.003766351379454136
    2. ' S' → logprob: -5.6287665367126465
    3. 'prev' → logprob: -9.003766059875488
    4. '           ' → logprob: -11.753766059875488
    5. '   ' → logprob: -11.878766059875488
    6. '               ' → logprob: -11.878766059875488
    7. ' ' → logprob: -12.628766059875488
    8. '```' → logprob: -13.003766059875488
    9. '       ' → logprob: -13.128766059875488
    10. '(S' → logprob: -13.128766059875488

Token 749: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003607296966947615
    2. 'i' → logprob: -9.125360488891602
    3. '           ' → logprob: -10.125360488891602
    4. 'prev' → logprob: -10.250360488891602
    5. '[' → logprob: -10.500360488891602
    6. '               ' → logprob: -10.625360488891602
    7. '```' → logprob: -10.625360488891602
    8. '#' → logprob: -10.875360488891602
    9. '[I' → logprob: -11.125360488891602
    10. '   ' → logprob: -11.125360488891602

Token 750: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.636475493200123e-05
    2. ']' → logprob: -10.000076293945312
    3. ' -' → logprob: -10.750076293945312
    4. '   ' → logprob: -12.625076293945312
    5. '```' → logprob: -12.875076293945312
    6. '[i' → logprob: -13.750076293945312
    7. ' ' → logprob: -14.625076293945312
    8. '1' → logprob: -14.875076293945312
    9. '           ' → logprob: -14.875076293945312
    10. '       ' → logprob: -15.375076293945312

Token 751: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022606621496379375
    2. '-' → logprob: -8.500226020812988
    3. ' ' → logprob: -11.375226020812988
    4. '```' → logprob: -12.375226020812988
    5. '   ' → logprob: -12.750226020812988
    6. ']' → logprob: -13.250226020812988
    7. 'i' → logprob: -14.625226020812988
    8. ' -' → logprob: -15.250226020812988
    9. '``' → logprob: -15.500226020812988
    10. '2' → logprob: -15.687726020812988

Token 752: ']
' (ID: 1592)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.06912420690059662
    2. ']
' → logprob: -3.319124221801758
    3. ']' → logprob: -3.569124221801758
    4. '                   ' → logprob: -7.069124221801758
    5. ']:' → logprob: -7.194124221801758
    6. '']:
' → logprob: -8.444124221801758
    7. '               ' → logprob: -8.944124221801758
    8. '```' → logprob: -9.069124221801758
    9. '           ' → logprob: -10.194124221801758
    10. '']' → logprob: -10.194124221801758

Token 753: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.16981269419193268
    2. '```' → logprob: -2.0448126792907715
    3. '                       ' → logprob: -3.9198126792907715
    4. '               ' → logprob: -5.1698126792907715
    5. '``' → logprob: -7.1698126792907715
    6. 'if' → logprob: -8.41981315612793
    7. ' if' → logprob: -9.91981315612793
    8. '                               ' → logprob: -10.54481315612793
    9. '                           ' → logprob: -10.54481315612793
    10. '#' → logprob: -10.79481315612793

Token 754: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2791009247303009
    2. '                   ' → logprob: -1.7791008949279785
    3. 'prev' → logprob: -2.6541008949279785
    4. ' if' → logprob: -6.4041008949279785
    5. '                       ' → logprob: -6.4041008949279785
    6. '```' → logprob: -7.2791008949279785
    7. '               ' → logprob: -8.279101371765137
    8. ' prev' → logprob: -9.654101371765137
    9. '``' → logprob: -11.154101371765137
    10. '   ' → logprob: -12.029101371765137

Token 755: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0017126628663390875
    2. ' i' → logprob: -6.376712799072266
    3. '               ' → logprob: -12.751712799072266
    4. '   ' → logprob: -12.876712799072266
    5. '                   ' → logprob: -12.876712799072266
    6. '           ' → logprob: -13.251712799072266
    7. '       ' → logprob: -15.376712799072266
    8. '0' → logprob: -15.626712799072266
    9. ' ' → logprob: -16.751712799072266
    10. '  ' → logprob: -16.876712799072266

Token 756: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4287315607070923
    2. '>' → logprob: -1.0537315607070923
    3. '-' → logprob: -11.053731918334961
    4. '   ' → logprob: -12.553731918334961
    5. ' <' → logprob: -12.928731918334961
    6. ' ' → logprob: -13.303731918334961
    7. '```' → logprob: -13.303731918334961
    8. '           ' → logprob: -13.428731918334961
    9. '0' → logprob: -13.803731918334961
    10. '       ' → logprob: -15.178731918334961

Token 757: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1398757123970427e-05
    2. ' ' → logprob: -11.500011444091797
    3. '   ' → logprob: -13.875011444091797
    4. '=' → logprob: -16.000011444091797
    5. '1' → logprob: -16.500011444091797
    6. '```' → logprob: -17.500011444091797
    7. '
' → logprob: -18.500011444091797
    8. '  ' → logprob: -18.750011444091797
    9. '``' → logprob: -18.875011444091797
    10. '       ' → logprob: -19.000011444091797

Token 758: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.750011444091797
    3. '   ' → logprob: -13.375011444091797
    4. '1' → logprob: -14.375011444091797
    5. '```' → logprob: -14.500011444091797
    6. '``' → logprob: -14.750011444091797
    7. '
' → logprob: -16.312511444091797
    8. '۰' → logprob: -16.625011444091797
    9. '(' → logprob: -16.875011444091797
    10. '=' → logprob: -16.937511444091797

Token 759: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.19591498374938965
    2. ':
' → logprob: -1.8209149837493896
    3. '                   ' → logprob: -4.695915222167969
    4. ':' → logprob: -5.195915222167969
    5. '```' → logprob: -7.320915222167969
    6. ' and' → logprob: -7.820915222167969
    7. '                      ' → logprob: -9.820915222167969
    8. 'and' → logprob: -10.070915222167969
    9. '                     ' → logprob: -10.320915222167969
    10. '                           ' → logprob: -10.445915222167969

Token 760: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.04847516492009163
    2. '```' → logprob: -3.4234752655029297
    3. 'prev' → logprob: -4.67347526550293
    4. '                   ' → logprob: -5.29847526550293
    5. '``' → logprob: -8.54847526550293
    6. '                           ' → logprob: -8.92347526550293
    7. '#' → logprob: -11.29847526550293
    8. '                               ' → logprob: -11.54847526550293
    9. '               ' → logprob: -11.67347526550293
    10. ' prev' → logprob: -12.29847526550293

Token 761: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -0.0041114045307040215
    2. '                       ' → logprob: -6.004111289978027
    3. ' prev' → logprob: -7.129111289978027
    4. '                           ' → logprob: -7.379111289978027
    5. '                   ' → logprob: -9.004111289978027
    6. '```' → logprob: -10.379111289978027
    7. '	prev' → logprob: -11.004111289978027
    8. '   ' → logprob: -11.129111289978027
    9. ' ' → logprob: -12.004111289978027
    10. 'c' → logprob: -12.254111289978027

Token 762: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6327915191650391
    2. '=' → logprob: -0.7577915191650391
    3. '=S' → logprob: -9.132791519165039
    4. '                       ' → logprob: -10.257791519165039
    5. 'S' → logprob: -10.882791519165039
    6. '   ' → logprob: -12.007791519165039
    7. '                           ' → logprob: -12.257791519165039
    8. '                   ' → logprob: -12.632791519165039
    9. '==' → logprob: -12.882791519165039
    10. '=
' → logprob: -13.132791519165039

Token 763: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0019287518225610256
    2. ' S' → logprob: -6.251928806304932
    3. '           ' → logprob: -16.626928329467773
    4. '   ' → logprob: -16.876928329467773
    5. '               ' → logprob: -18.001928329467773
    6. '                   ' → logprob: -18.626928329467773
    7. '       ' → logprob: -18.751928329467773
    8. ' ' → logprob: -18.876928329467773
    9. 's' → logprob: -19.251928329467773
    10. '  ' → logprob: -19.751928329467773

Token 764: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002632430987432599
    2. 'i' → logprob: -8.250263214111328
    3. '           ' → logprob: -14.500263214111328
    4. '```' → logprob: -14.625263214111328
    5. '       ' → logprob: -15.250263214111328
    6. '-' → logprob: -15.500263214111328
    7. '[' → logprob: -15.625263214111328
    8. '                   ' → logprob: -15.875263214111328
    9. '
' → logprob: -16.375263214111328
    10. '   ' → logprob: -16.375263214111328

Token 765: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.4868770196917467e-05
    2. '[' → logprob: -11.125024795532227
    3. ' -' → logprob: -12.125024795532227
    4. '1' → logprob: -13.125024795532227
    5. '```' → logprob: -13.375024795532227
    6. 'i' → logprob: -14.250024795532227
    7. '   ' → logprob: -15.750024795532227
    8. '[i' → logprob: -15.875024795532227
    9. ']-' → logprob: -17.000024795532227
    10. '``' → logprob: -17.250024795532227

Token 766: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5941604690160602e-05
    2. '-' → logprob: -11.125025749206543
    3. '```' → logprob: -11.875025749206543
    4. ' ' → logprob: -13.500025749206543
    5. '   ' → logprob: -13.500025749206543
    6. '2' → logprob: -14.750025749206543
    7. '``' → logprob: -15.437525749206543
    8. 'i' → logprob: -16.18752670288086
    9. '[' → logprob: -16.25002670288086
    10. '  ' → logprob: -16.50002670288086

Token 767: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.004820157308131456
    2. ']' → logprob: -5.379820346832275
    3. ']
' → logprob: -9.379819869995117
    4. ']:
' → logprob: -9.504819869995117
    5. '                       ' → logprob: -10.379819869995117
    6. '                   ' → logprob: -12.754819869995117
    7. '']
' → logprob: -12.879819869995117
    8. '```' → logprob: -13.004819869995117
    9. '                           ' → logprob: -14.004819869995117
    10. ']

' → logprob: -14.254819869995117

Token 768: '                       ' (ID: 968)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1023319959640503
    2. '                           ' → logprob: -1.3523319959640503
    3. '                       ' → logprob: -1.4773319959640503
    4. 'if' → logprob: -1.7273319959640503
    5. ' if' → logprob: -6.35233211517334
    6. '                               ' → logprob: -7.47733211517334
    7. '``' → logprob: -7.60233211517334
    8. '                   ' → logprob: -8.35233211517334
    9. '           ' → logprob: -9.60233211517334
    10. '               ' → logprob: -9.85233211517334

Token 769: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.003529398003593087
    2. '                       ' → logprob: -6.0035295486450195
    3. '                           ' → logprob: -7.2535295486450195
    4. ' if' → logprob: -8.12852954864502
    5. '```' → logprob: -10.00352954864502
    6. '                               ' → logprob: -13.12852954864502
    7. '                   ' → logprob: -13.25352954864502
    8. '           ' → logprob: -14.12852954864502
    9. '               ' → logprob: -15.25352954864502
    10. '``' → logprob: -15.50352954864502

Token 770: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.00861456897109747
    2. ' can' → logprob: -4.758614540100098
    3. 'c' → logprob: -17.633615493774414
    4. '```' → logprob: -17.758615493774414
    5. '	can' → logprob: -18.758615493774414
    6. '   ' → logprob: -19.008615493774414
    7. '           ' → logprob: -19.133615493774414
    8. ' ' → logprob: -19.258615493774414
    9. '(can' → logprob: -19.258615493774414
    10. 'not' → logprob: -19.508615493774414

Token 771: '_connect' (ID: 32485)
  Prédit: '_connect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_connect' → logprob: -0.002761367941275239
    2. 'can' → logprob: -6.127761363983154
    3. 'connect' → logprob: -7.502761363983154
    4. '_can' → logprob: -12.002761840820312
    5. ' can' → logprob: -12.252761840820312
    6. 'not' → logprob: -12.377761840820312
    7. 'c' → logprob: -12.752761840820312
    8. 'conn' → logprob: -13.252761840820312
    9. '_CONNECT' → logprob: -13.627761840820312
    10. '_conn' → logprob: -13.877761840820312

Token 772: '(prev' (ID: 59594)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.0021960523445159197
    2. '(prev' → logprob: -6.252195835113525
    3. ' prev' → logprob: -8.252196311950684
    4. '	prev' → logprob: -12.752196311950684
    5. 'c' → logprob: -13.377196311950684
    6. '(' → logprob: -13.752196311950684
    7. '   ' → logprob: -15.127196311950684
    8. '.prev' → logprob: -15.377196311950684
    9. '_prev' → logprob: -15.877196311950684
    10. ' ' → logprob: -16.252195358276367

Token 773: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001101991510950029
    2. ',c' → logprob: -7.126101970672607
    3. ' ,' → logprob: -8.626102447509766
    4. 'prev' → logprob: -9.626102447509766
    5. '(prev' → logprob: -10.626102447509766
    6. '           ' → logprob: -12.126102447509766
    7. 'c' → logprob: -12.251102447509766
    8. '(c' → logprob: -13.001102447509766
    9. '                           ' → logprob: -13.126102447509766
    10. '               ' → logprob: -13.251102447509766

Token 774: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03804321587085724
    2. ' c' → logprob: -3.288043260574341
    3. 'prev' → logprob: -13.663043022155762
    4. ')c' → logprob: -16.038043975830078
    5. ' ' → logprob: -16.288043975830078
    6. ' prev' → logprob: -16.413043975830078
    7. '	c' → logprob: -16.538043975830078
    8. '   ' → logprob: -16.788043975830078
    9. '           ' → logprob: -17.413043975830078
    10. '```' → logprob: -17.663043975830078

Token 775: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.024120964109897614
    2. '                           ' → logprob: -4.149120807647705
    3. '):' → logprob: -5.024120807647705
    4. '                       ' → logprob: -6.774120807647705
    5. ''):
' → logprob: -9.399121284484863
    6. ':
' → logprob: -10.149121284484863
    7. '                               ' → logprob: -10.149121284484863
    8. ')' → logprob: -10.274121284484863
    9. '```' → logprob: -10.274121284484863
    10. '():
' → logprob: -10.649121284484863

Token 776: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.007938181981444359
    2. '                               ' → logprob: -5.132938385009766
    3. '```' → logprob: -6.632938385009766
    4. '                       ' → logprob: -7.382938385009766
    5. '``' → logprob: -11.132938385009766
    6. '                                   ' → logprob: -11.257938385009766
    7. '                            ' → logprob: -11.382938385009766
    8. '                   ' → logprob: -12.132938385009766
    9. '                          ' → logprob: -12.257938385009766
    10. '                         ' → logprob: -12.882938385009766

Token 777: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0004399671161081642
    2. ' dp' → logprob: -7.7504401206970215
    3. '                               ' → logprob: -12.000439643859863
    4. '                           ' → logprob: -13.000439643859863
    5. '	dp' → logprob: -15.375439643859863
    6. '```' → logprob: -15.375439643859863
    7. '                                   ' → logprob: -15.500439643859863
    8. '(dp' → logprob: -16.25044059753418
    9. '   ' → logprob: -16.87544059753418
    10. 'dj' → logprob: -17.00044059753418

Token 778: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. '[j' → logprob: -14.375000953674316
    3. 'i' → logprob: -15.250000953674316
    4. 'dp' → logprob: -15.500000953674316
    5. '[' → logprob: -15.875000953674316
    6. '           ' → logprob: -17.250001907348633
    7. '```' → logprob: -17.375001907348633
    8. '   ' → logprob: -17.625001907348633
    9. ' [' → logprob: -18.625001907348633
    10. '
' → logprob: -18.625001907348633

Token 779: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011107130907475948
    2. '[i' → logprob: -4.511106967926025
    3. '           ' → logprob: -11.261107444763184
    4. '[' → logprob: -11.511107444763184
    5. '[j' → logprob: -11.511107444763184
    6. ')[' → logprob: -11.761107444763184
    7. ' ][' → logprob: -12.136107444763184
    8. '+' → logprob: -12.261107444763184
    9. '```' → logprob: -13.261107444763184
    10. '   ' → logprob: -13.261107444763184

Token 780: 'j' (ID: 73)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023251768201589584
    2. 'j' → logprob: -3.77325177192688
    3. ' i' → logprob: -12.7732515335083
    4. '   ' → logprob: -13.0232515335083
    5. '+' → logprob: -14.5232515335083
    6. '           ' → logprob: -15.8982515335083
    7. ' j' → logprob: -15.8982515335083
    8. '```' → logprob: -16.148252487182617
    9. ' ' → logprob: -16.773252487182617
    10. '     ' → logprob: -17.023252487182617

Token 781: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.014684110297821e-06
    2. '+j' → logprob: -12.375008583068848
    3. '][' → logprob: -13.000008583068848
    4. ' +' → logprob: -13.625008583068848
    5. '+[' → logprob: -14.500008583068848
    6. '+i' → logprob: -15.875008583068848
    7. '```' → logprob: -15.875008583068848
    8. '   ' → logprob: -16.250009536743164
    9. '[' → logprob: -16.625009536743164
    10. '+
' → logprob: -16.750009536743164

Token 782: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004319804720580578
    2. '+' → logprob: -7.750432014465332
    3. ' ' → logprob: -14.750432014465332
    4. '   ' → logprob: -15.250432014465332
    5. 'j' → logprob: -15.375432014465332
    6. '```' → logprob: -15.875432014465332
    7. '           ' → logprob: -16.125431060791016
    8. ' +' → logprob: -17.375431060791016
    9. 'max' → logprob: -17.375431060791016
    10. '+=' → logprob: -17.625431060791016

Token 783: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006729110609740019
    2. '[' → logprob: -5.0067291259765625
    3. ']' → logprob: -12.006729125976562
    4. '0' → logprob: -13.131729125976562
    5. ''][' → logprob: -14.006729125976562
    6. ' ][' → logprob: -14.006729125976562
    7. '```' → logprob: -14.381729125976562
    8. '           ' → logprob: -14.506729125976562
    9. ',' → logprob: -14.756729125976562
    10. '1' → logprob: -15.006729125976562

Token 784: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003062646137550473
    2. 'max' → logprob: -8.125306129455566
    3. '(' → logprob: -12.125306129455566
    4. ' ' → logprob: -13.625306129455566
    5. '   ' → logprob: -13.750306129455566
    6. '[' → logprob: -13.750306129455566
    7. '0' → logprob: -14.250306129455566
    8. ' max' → logprob: -15.250306129455566
    9. '2' → logprob: -15.875306129455566
    10. '           ' → logprob: -16.500307083129883

Token 785: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32776567339897156
    2. ']' → logprob: -1.452765703201294
    3. ']=' → logprob: -3.577765703201294
    4. ' =' → logprob: -4.577765464782715
    5. ')' → logprob: -5.077765464782715
    6. '],' → logprob: -7.702765464782715
    7. '                           ' → logprob: -8.202765464782715
    8. ')=' → logprob: -8.577765464782715
    9. ',' → logprob: -9.827765464782715
    10. '),' → logprob: -10.452765464782715

Token 786: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815064437687397
    2. ' =' → logprob: -4.018150806427002
    3. '                           ' → logprob: -15.143150329589844
    4. '=max' → logprob: -15.643150329589844
    5. '                               ' → logprob: -15.768150329589844
    6. 'max' → logprob: -15.768150329589844
    7. '```' → logprob: -17.268150329589844
    8. ')' → logprob: -18.518150329589844
    9. '   ' → logprob: -18.643150329589844
    10. '                            ' → logprob: -19.268150329589844

Token 787: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2014133334159851
    2. ' max' → logprob: -1.7014133930206299
    3. '(max' → logprob: -16.701414108276367
    4. '=max' → logprob: -19.701414108276367
    5. '[max' → logprob: -19.951414108276367
    6. '	max' → logprob: -20.326414108276367
    7. '_max' → logprob: -20.951414108276367
    8. ',max' → logprob: -21.201414108276367
    9. '.max' → logprob: -22.201414108276367
    10. ' ' → logprob: -22.326414108276367

Token 788: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -3.128163257315464e-07
    2. 'dp' → logprob: -15.25
    3. '(' → logprob: -17.5
    4. '(
' → logprob: -17.75
    5. '```' → logprob: -18.625
    6. '(df' → logprob: -19.375
    7. '	dp' → logprob: -19.375
    8. ' (' → logprob: -20.375
    9. '(dt' → logprob: -21.125
    10. '(max' → logprob: -21.375

Token 789: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002633565105497837
    2. 'dp' → logprob: -6.377633571624756
    3. '(dp' → logprob: -7.627633571624756
    4. '[j' → logprob: -7.752633571624756
    5. '[' → logprob: -12.252633094787598
    6. '(i' → logprob: -12.877633094787598
    7. '_dp' → logprob: -13.127633094787598
    8. '[k' → logprob: -13.377633094787598
    9. '```' → logprob: -14.252633094787598
    10. '[d' → logprob: -14.502633094787598

Token 790: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1989976465702057
    2. '][' → logprob: -1.8239976167678833
    3. '+' → logprob: -4.323997497558594
    4. '[j' → logprob: -5.323997497558594
    5. 'i' → logprob: -8.073997497558594
    6. '+i' → logprob: -8.198997497558594
    7. '   ' → logprob: -9.573997497558594
    8. ')[' → logprob: -9.698997497558594
    9. '[' → logprob: -10.323997497558594
    10. '-' → logprob: -10.448997497558594

Token 791: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0007401806069537997
    2. '1' → logprob: -7.625740051269531
    3. '
' → logprob: -9.125740051269531
    4. 'i' → logprob: -9.875740051269531
    5. '[j' → logprob: -10.875740051269531
    6. '+' → logprob: -11.000740051269531
    7. '0' → logprob: -11.125740051269531
    8. ' j' → logprob: -11.375740051269531
    9. 'N' → logprob: -11.625740051269531
    10. '   ' → logprob: -12.000740051269531

Token 792: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01607108674943447
    2. '][' → logprob: -4.641071319580078
    3. '[i' → logprob: -6.016071319580078
    4. '[j' → logprob: -6.141071319580078
    5. '1' → logprob: -7.141071319580078
    6. '[' → logprob: -8.266071319580078
    7. '   ' → logprob: -8.891071319580078
    8. '+i' → logprob: -9.141071319580078
    9. '+j' → logprob: -9.266071319580078
    10. 'i' → logprob: -9.266071319580078

Token 793: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025202499236911535
    2. '+' → logprob: -6.1275200843811035
    3. 'j' → logprob: -8.127520561218262
    4. '   ' → logprob: -11.877520561218262
    5. '[j' → logprob: -12.002520561218262
    6. ']' → logprob: -12.377520561218262
    7. ' ' → logprob: -12.627520561218262
    8. '```' → logprob: -12.877520561218262
    9. '][' → logprob: -13.002520561218262
    10. '
' → logprob: -13.002520561218262

Token 794: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002938833087682724
    2. '[' → logprob: -6.002938747406006
    3. '+' → logprob: -8.127939224243164
    4. '[j' → logprob: -9.502939224243164
    5. '1' → logprob: -10.752939224243164
    6. '[i' → logprob: -11.502939224243164
    7. '       ' → logprob: -11.752939224243164
    8. '           ' → logprob: -11.752939224243164
    9. '-' → logprob: -12.002939224243164
    10. ']' → logprob: -12.127939224243164

Token 795: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6391562819480896
    2. 'j' → logprob: -1.2641563415527344
    3. 'i' → logprob: -1.7641563415527344
    4. '0' → logprob: -4.014156341552734
    5. '[i' → logprob: -9.139156341552734
    6. '(i' → logprob: -9.764156341552734
    7. '   ' → logprob: -9.889156341552734
    8. '
' → logprob: -10.264156341552734
    9. '[j' → logprob: -10.639156341552734
    10. ' j' → logprob: -11.014156341552734

Token 796: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.030932530760765076
    2. ',' → logprob: -3.6559324264526367
    3. '+' → logprob: -6.030932426452637
    4. '][' → logprob: -6.280932426452637
    5. ',length' → logprob: -9.030932426452637
    6. ']+' → logprob: -9.905932426452637
    7. ']' → logprob: -10.030932426452637
    8. '           ' → logprob: -10.155932426452637
    9. 'length' → logprob: -10.530932426452637
    10. '[' → logprob: -11.905932426452637

Token 797: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.023249322548508644
    2. ' length' → logprob: -3.773249387741089
    3. 'dp' → logprob: -12.648249626159668
    4. '(length' → logprob: -15.148249626159668
    5. ',length' → logprob: -16.14824867248535
    6. 'leng' → logprob: -16.39824867248535
    7. ' dp' → logprob: -16.64824867248535
    8. 'l' → logprob: -16.89824867248535
    9. '                           ' → logprob: -17.14824867248535
    10. 'ength' → logprob: -17.39824867248535

Token 798: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.822646693966817e-06
    2. ' +' → logprob: -11.875007629394531
    3. ']+' → logprob: -15.000007629394531
    4. ')+' → logprob: -15.250007629394531
    5. '()+' → logprob: -15.875007629394531
    6. ',' → logprob: -16.00000762939453
    7. '[' → logprob: -16.75000762939453
    8. '+
' → logprob: -17.12500762939453
    9. '```' → logprob: -17.87500762939453
    10. '           ' → logprob: -18.62500762939453

Token 799: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.500017166137695
    3. '+' → logprob: -12.500017166137695
    4. '0' → logprob: -13.375017166137695
    5. '```' → logprob: -14.125017166137695
    6. '2' → logprob: -15.250017166137695
    7. '   ' → logprob: -15.500017166137695
    8. '-' → logprob: -16.000017166137695
    9. '``' → logprob: -16.375017166137695
    10. ')' → logprob: -17.062517166137695

Token 800: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009392123320139945
    2. ')
' → logprob: -7.25093936920166
    3. '                           ' → logprob: -9.25093936920166
    4. '                       ' → logprob: -9.87593936920166
    5. '               ' → logprob: -10.25093936920166
    6. '           ' → logprob: -10.75093936920166
    7. '                   ' → logprob: -11.00093936920166
    8. '       ' → logprob: -13.00093936920166
    9. ' )' → logprob: -13.12593936920166
    10. '                               ' → logprob: -13.37593936920166

Token 801: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 802: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012941661989316344
    2. '                   ' → logprob: -7.376294136047363
    3. 'else' (adapté à ' else') → logprob: -8.251294136047363
    4. '                       ' → logprob: -8.376294136047363
    5. '           ' → logprob: -9.126294136047363
    6. ' else' → logprob: -10.501294136047363
    7. ')' → logprob: -10.876294136047363
    8. '```' → logprob: -11.751294136047363
    9. '			' → logprob: -12.501294136047363
    10. '              ' → logprob: -13.001294136047363

Token 803: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.018583573400974274
    2. '```' → logprob: -4.26858377456665
    3. ':' → logprob: -6.26858377456665
    4. '                   ' → logprob: -7.14358377456665
    5. ':
' → logprob: -7.26858377456665
    6. '                           ' → logprob: -8.143583297729492
    7. '``' → logprob: -8.518583297729492
    8. '#' → logprob: -8.518583297729492
    9. '                               ' → logprob: -9.018583297729492
    10. '               ' → logprob: -9.268583297729492

Token 804: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0036525758914649487
    2. '```' → logprob: -5.753652572631836
    3. '                   ' → logprob: -7.878652572631836
    4. '``' → logprob: -10.128652572631836
    5. '               ' → logprob: -10.753652572631836
    6. '                           ' → logprob: -12.003652572631836
    7. '#' → logprob: -12.128652572631836
    8. '                        ' → logprob: -12.128652572631836
    9. '       ' → logprob: -12.378652572631836
    10. '           ' → logprob: -12.753652572631836

Token 805: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3962244987487793
    2. '#' (adapté à ' #') → logprob: -1.1462244987487793
    3. ' #' → logprob: -5.396224498748779
    4. '```' → logprob: -6.271224498748779
    5. 'pass' → logprob: -6.396224498748779
    6. ' pass' → logprob: -7.271224498748779
    7. '                   ' → logprob: -8.271224975585938
    8. '               ' → logprob: -8.771224975585938
    9. '``' → logprob: -10.396224975585938
    10. '                           ' → logprob: -10.396224975585938

Token 806: ' i' (ID: 575)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.2870021164417267
    2. '#' → logprob: -1.4120020866394043
    3. 'pass' → logprob: -5.412002086639404
    4. '               ' → logprob: -7.287002086639404
    5. '                   ' → logprob: -7.787002086639404
    6. '```' → logprob: -8.912002563476562
    7. ' pass' → logprob: -10.787002563476562
    8. '           ' → logprob: -10.787002563476562
    9. '                               ' → logprob: -10.787002563476562
    10. '                           ' → logprob: -10.912002563476562

Token 807: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38689786195755005
    2. ' ==' → logprob: -1.1368978023529053
    3. '=' → logprob: -11.511898040771484
    4. '>' → logprob: -12.011898040771484
    5. ' >' → logprob: -12.636898040771484
    6. '```' → logprob: -13.011898040771484
    7. '==
' → logprob: -13.386898040771484
    8. '           ' → logprob: -14.011898040771484
    9. '<' → logprob: -14.761898040771484
    10. '#' → logprob: -14.886898040771484

Token 808: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009130131802521646
    2. ' ' → logprob: -7.000913143157959
    3. '=' → logprob: -13.7509126663208
    4. '```' → logprob: -15.5009126663208
    5. '   ' → logprob: -16.750913619995117
    6. '                       ' → logprob: -17.000913619995117
    7. '==' → logprob: -17.125913619995117
    8. '``' → logprob: -17.500913619995117
    9. '           ' → logprob: -17.625913619995117
    10. '                           ' → logprob: -17.750913619995117

Token 809: ',' (ID: 11)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.09062226861715317
    2. '```' → logprob: -2.4656221866607666
    3. '``' → logprob: -7.715622425079346
    4. '                   ' → logprob: -8.090621948242188
    5. ':
' → logprob: -8.340621948242188
    6. '                           ' → logprob: -8.340621948242188
    7. ':' → logprob: -9.090621948242188
    8. '               ' → logprob: -9.215621948242188
    9. ',' → logprob: -9.465621948242188
    10. '           ' → logprob: -9.965621948242188

Token 810: ' donc' (ID: 14206)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.015213076956570148
    2. ' pass' → logprob: -4.7652130126953125
    3. '#' → logprob: -5.3902130126953125
    4. ' #' → logprob: -7.2652130126953125
    5. '```' → logprob: -7.6402130126953125
    6. 'pass' → logprob: -7.8902130126953125
    7. '                           ' → logprob: -9.140213012695312
    8. '                   ' → logprob: -9.515213012695312
    9. '                               ' → logprob: -9.640213012695312
    10. '               ' → logprob: -9.765213012695312

Token 811: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4200294017791748
    2. '                       ' → logprob: -1.1700294017791748
    3. 'pass' → logprob: -3.795029401779175
    4. '```' → logprob: -5.420029640197754
    5. ' #' → logprob: -5.795029640197754
    6. ' pass' → logprob: -6.420029640197754
    7. '                   ' → logprob: -7.920029640197754
    8. '               ' → logprob: -8.170029640197754
    9. '                           ' → logprob: -8.795029640197754
    10. '                        ' → logprob: -9.795029640197754

Token 812: ' n' (ID: 297)
  Prédit: ' ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.3051658272743225
    2. 'ne' → logprob: -1.4301657676696777
    3. 'n' → logprob: -5.305165767669678
    4. ' pass' → logprob: -5.430165767669678
    5. ' continue' → logprob: -5.555165767669678
    6. '#' → logprob: -5.555165767669678
    7. ' n' → logprob: -5.805165767669678
    8. 'pass' → logprob: -6.680165767669678
    9. 'continue' → logprob: -7.180165767669678
    10. ' cannot' → logprob: -7.555165767669678

Token 813: ''a' (ID: 10443)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.21078412234783173
    2. 'pe' → logprob: -2.8357841968536377
    3. 'pass' → logprob: -3.2107841968536377
    4. 'ne' → logprob: -3.5857841968536377
    5. ' ne' → logprob: -3.7107841968536377
    6. 'pas' → logprob: -4.460783958435059
    7. '``' → logprob: -4.835783958435059
    8. 'n' → logprob: -5.585783958435059
    9. '_pass' → logprob: -5.835783958435059
    10. '   ' → logprob: -6.585783958435059

Token 814: ' rien' (ID: 23082)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.04172217845916748
    2. 'pass' → logprob: -3.291722297668457
    3. ' pas' → logprob: -6.416722297668457
    4. '               ' → logprob: -7.041722297668457
    5. ' pass' → logprob: -7.791722297668457
    6. '                   ' → logprob: -8.791722297668457
    7. '_pas' → logprob: -9.041722297668457
    8. '```' → logprob: -9.166722297668457
    9. '_pass' → logprob: -9.291722297668457
    10. '       ' → logprob: -9.666722297668457

Token 815: ' en' (ID: 469)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.05217510089278221
    2. '#' → logprob: -3.8021750450134277
    3. '```' → logprob: -4.802175045013428
    4. '                           ' → logprob: -5.177175045013428
    5. 'n' → logprob: -6.052175045013428
    6. '                   ' → logprob: -6.177175045013428
    7. 'à' → logprob: -6.552175045013428
    8. '               ' → logprob: -6.677175045013428
    9. '                               ' → logprob: -6.802175045013428
    10. '           ' → logprob: -6.927175045013428

Token 816: ' S' (ID: 336)
  Prédit: 'prise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prise' → logprob: -0.6533358693122864
    2. 'j' → logprob: -2.1533358097076416
    3. '#' → logprob: -3.1533358097076416
    4. 'part' → logprob: -3.1533358097076416
    5. 'S' → logprob: -3.4033358097076416
    6. 'i' → logprob: -3.5283358097076416
    7. 'dp' → logprob: -3.5283358097076416
    8. 'pas' → logprob: -3.6533358097076416
    9. '```' → logprob: -4.028336048126221
    10. '0' → logprob: -4.153336048126221

Token 817: ' donc' (ID: 14206)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.001058890949934721
    2. '                   ' → logprob: -7.251059055328369
    3. '               ' → logprob: -8.751058578491211
    4. '```' → logprob: -9.876058578491211
    5. '                           ' → logprob: -10.126058578491211
    6. '           ' → logprob: -10.626058578491211
    7. 'continue' → logprob: -11.126058578491211
    8. ':' → logprob: -11.376058578491211
    9. '                        
' → logprob: -11.376058578491211
    10. ',' → logprob: -11.751058578491211

Token 818: ' pas' (ID: 2173)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.4970482587814331
    2. ' pass' → logprob: -0.9970482587814331
    3. '#' → logprob: -4.747048377990723
    4. '                       ' → logprob: -4.997048377990723
    5. '```' → logprob: -4.997048377990723
    6. ' #' → logprob: -8.872048377990723
    7. '                           ' → logprob: -9.372048377990723
    8. '``' → logprob: -9.622048377990723
    9. 'continue' → logprob: -10.247048377990723
    10. ' ' → logprob: -10.372048377990723

Token 819: ' de' (ID: 334)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.6150326728820801
    2. '#' → logprob: -1.49003267288208
    3. 'le' → logprob: -3.49003267288208
    4. 'd' → logprob: -3.61503267288208
    5. 'de' → logprob: -3.74003267288208
    6. 'pass' → logprob: -3.86503267288208
    7. '               ' → logprob: -3.99003267288208
    8. '       ' → logprob: -4.74003267288208
    9. 'poss' → logprob: -4.86503267288208
    10. '           ' → logprob: -4.86503267288208

Token 820: ' problème' (ID: 35630)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.04503367468714714
    2. 'continue' → logprob: -4.0450334548950195
    3. 'j' → logprob: -4.5450334548950195
    4. '```' → logprob: -5.4200334548950195
    5. 'prev' → logprob: -5.7950334548950195
    6. '#' → logprob: -6.2950334548950195
    7. 'break' → logprob: -6.7950334548950195
    8. 'T' → logprob: -7.0450334548950195
    9. 'contin' → logprob: -7.5450334548950195
    10. 'poss' → logprob: -7.5450334548950195

Token 821: ' mais' (ID: 2899)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0024210833944380283
    2. '                           ' → logprob: -7.377420902252197
    3. '```' → logprob: -7.752420902252197
    4. '               ' → logprob: -7.877420902252197
    5. '                               ' → logprob: -8.377421379089355
    6. '<|end|>' → logprob: -8.502421379089355
    7. '           ' → logprob: -8.752421379089355
    8. '                        
' → logprob: -8.752421379089355
    9. '                   ' → logprob: -9.127421379089355
    10. '                        ' → logprob: -10.002421379089355

Token 822: ' on' (ID: 402)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.6790639162063599
    2. ' pass' → logprob: -0.9290639162063599
    3. '```' → logprob: -2.8040637969970703
    4. '#' → logprob: -3.6790637969970703
    5. '                       ' → logprob: -5.17906379699707
    6. ' continue' → logprob: -6.42906379699707
    7. ' #' → logprob: -6.80406379699707
    8. 'continue' → logprob: -6.80406379699707
    9. '                           ' → logprob: -7.30406379699707
    10. '``' → logprob: -7.42906379699707

Token 823: ' doit' (ID: 21822)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.19720615446567535
    2. ' ne' → logprob: -2.9472062587738037
    3. '                           ' → logprob: -3.0722062587738037
    4. '                               ' → logprob: -3.3222062587738037
    5. 'continue' → logprob: -4.697206020355225
    6. 'n' → logprob: -4.947206020355225
    7. 'ne' → logprob: -5.197206020355225
    8. ' continue' → logprob: -5.322206020355225
    9. ' n' → logprob: -5.572206020355225
    10. '               ' → logprob: -6.197206020355225

Token 824: ' alter' (ID: 14183)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.030119895935058594
    2. '                       ' → logprob: -4.530119895935059
    3. ' pass' → logprob: -5.030119895935059
    4. 'pas' → logprob: -5.655119895935059
    5. '```' → logprob: -5.780119895935059
    6. 'continue' → logprob: -6.530119895935059
    7. '                   ' → logprob: -7.155119895935059
    8. 'contin' → logprob: -7.405119895935059
    9. '               ' → logprob: -7.655119895935059
    10. '#' → logprob: -7.905119895935059

Token 825: 'ner' (ID: 1247)
  Prédit: 'ner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ner' → logprob: -0.005310012027621269
    2. 'er' → logprob: -5.25531005859375
    3. 'nner' → logprob: -9.88031005859375
    4. '               ' → logprob: -11.38031005859375
    5. '                   ' → logprob: -12.63031005859375
    6. 'n' → logprob: -12.75531005859375
    7. 'iner' → logprob: -13.50531005859375
    8. 'pass' → logprob: -14.00531005859375
    9. '   ' → logprob: -14.13031005859375
    10. '       ' → logprob: -14.13031005859375

Token 826: '...
' (ID: 4908)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.005193082150071859
    2. '```' → logprob: -5.63019323348999
    3. '                           ' → logprob: -7.13019323348999
    4. '                        
' → logprob: -8.505192756652832
    5. '                               ' → logprob: -8.630192756652832
    6. '               ' → logprob: -8.880192756652832
    7. '                   ' → logprob: -9.380192756652832
    8. '                        ' → logprob: -10.130192756652832
    9. '<|end|>' → logprob: -10.130192756652832
    10. '           ' → logprob: -10.880192756652832

Token 827: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.2592398524284363
    2. '```' → logprob: -1.509239912033081
    3. '                           ' → logprob: -5.134239673614502
    4. '                               ' → logprob: -7.384239673614502
    5. '``' → logprob: -8.13424015045166
    6. '               ' → logprob: -8.88424015045166
    7. '           ' → logprob: -9.13424015045166
    8. '                   ' → logprob: -9.50924015045166
    9. '                        
' → logprob: -9.88424015045166
    10. '                        ' → logprob: -10.13424015045166

Token 828: ' pass' (ID: 1853)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.516670823097229
    2. ' pass' → logprob: -1.266670823097229
    3. 'pass' (adapté à ' pass') → logprob: -2.1416707038879395
    4. '                           ' → logprob: -6.7666707038879395
    5. '```' → logprob: -6.8916707038879395
    6. '               ' → logprob: -7.5166707038879395
    7. '                   ' → logprob: -7.7666707038879395
    8. '                               ' → logprob: -7.8916707038879395
    9. '#' → logprob: -8.266671180725098
    10. '           ' → logprob: -8.516671180725098

Token 829: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 830: '#' (ID: 2)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.3550643920898438
    2. '<|end|>' → logprob: -1.4800643920898438
    3. '                           ' → logprob: -1.9800643920898438
    4. '+' → logprob: -2.7300643920898438
    5. '           ' → logprob: -2.9800643920898438
    6. '               ' → logprob: -3.2300643920898438
    7. ')' → logprob: -3.6050643920898438
    8. 'else' → logprob: -3.7300643920898438
    9. '                   ' → logprob: -3.8550643920898438
    10. '                               ' → logprob: -3.8550643920898438

Token 831: ' Pour' (ID: 13931)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7369926571846008
    2. 'result' → logprob: -0.9869926571846008
    3. 'ans' → logprob: -2.486992597579956
    4. 'answer' → logprob: -2.986992597579956
    5. 'max' → logprob: -4.236992835998535
    6. '#' → logprob: -7.736992835998535
    7. 'best' → logprob: -8.486992835998535
    8. 'rés' → logprob: -10.486992835998535
    9. '```' → logprob: -11.736992835998535
    10. ' result' → logprob: -11.861992835998535

Token 832: ' la' (ID: 557)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8971457481384277
    2. 'res' → logprob: -1.1471457481384277
    3. 'ans' → logprob: -1.8971457481384277
    4. 'i' → logprob: -3.2721457481384277
    5. 'max' → logprob: -3.2721457481384277
    6. 'answer' → logprob: -3.3971457481384277
    7. 'rés' → logprob: -4.772145748138428
    8. ' result' → logprob: -6.272145748138428
    9. ' res' → logprob: -6.772145748138428
    10. 'r' → logprob: -6.772145748138428

Token 833: ' partie' (ID: 22139)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3255539834499359
    2. 'max' → logprob: -2.4505538940429688
    3. 'rés' → logprob: -2.4505538940429688
    4. 'res' → logprob: -2.8255538940429688
    5. 'answer' → logprob: -3.7005538940429688
    6. ' result' → logprob: -5.200553894042969
    7. 'i' → logprob: -5.325553894042969
    8. 'best' → logprob: -5.950553894042969
    9. ' res' → logprob: -6.575553894042969
    10. '#' → logprob: -6.825553894042969

Token 834: ' mix' (ID: 9762)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6515287756919861
    2. 'max' → logprob: -1.4015288352966309
    3. 'answer' → logprob: -1.6515288352966309
    4. 'res' → logprob: -4.276528835296631
    5. 'ans' → logprob: -4.276528835296631
    6. 'best' → logprob: -4.526528835296631
    7. 'rés' → logprob: -6.901528835296631
    8. '#' → logprob: -7.276528835296631
    9. 'final' → logprob: -9.276528358459473
    10. '
' → logprob: -9.401528358459473

Token 835: 'te' (ID: 411)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.27184146642684937
    2. 'ed' → logprob: -2.396841526031494
    3. 'te' → logprob: -2.771841526031494
    4. 'for' → logprob: -3.271841526031494
    5. 'ée' → logprob: -4.271841526031494
    6. 'é' → logprob: -4.396841526031494
    7. '#' → logprob: -4.521841526031494
    8. 'éd' → logprob: -5.896841526031494
    9. 'def' → logprob: -6.146841526031494
    10. 'imum' → logprob: -6.646841526031494

Token 836: ' (' (ID: 350)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.10320454835891724
    2. 'for' → logprob: -2.6032044887542725
    3. '#' → logprob: -3.9782044887542725
    4. 'result' → logprob: -5.978204727172852
    5. 'best' → logprob: -7.103204727172852
    6. '
' → logprob: -7.478204727172852
    7. 'answer' → logprob: -7.853204727172852
    8. ' max' → logprob: -8.103204727172852
    9. ' for' → logprob: -8.353204727172852
    10. 'res' → logprob: -8.478204727172852

Token 837: 'comm' (ID: 2280)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06001702696084976
    2. '#' → logprob: -3.6850171089172363
    3. ' for' → logprob: -4.060017108917236
    4. '           ' → logprob: -4.185017108917236
    5. ' #' → logprob: -8.935016632080078
    6. '   ' → logprob: -9.185016632080078
    7. '
' → logprob: -9.310016632080078
    8. '       ' → logprob: -9.685016632080078
    9. '                   ' → logprob: -9.935016632080078
    10. 'if' → logprob: -10.060016632080078

Token 838: 'encer' (ID: 19726)
  Prédit: 'encé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'encé' → logprob: -0.2322760373353958
    2. 'ent' → logprob: -2.10727596282959
    3. 'ence' → logprob: -3.10727596282959
    4. 'e' → logprob: -4.10727596282959
    5. 'enc' → logprob: -4.23227596282959
    6. '#' → logprob: -5.73227596282959
    7. 'enç' → logprob: -6.23227596282959
    8. 'en' → logprob: -6.60727596282959
    9. 'ancée' → logprob: -7.35727596282959
    10. 'ée' → logprob: -7.48227596282959

Token 839: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8558663725852966
    2. '):' → logprob: -1.9808664321899414
    3. 'à' → logprob: -2.6058664321899414
    4. ',' → logprob: -2.9808664321899414
    5. 'from' → logprob: -2.9808664321899414
    6. ' à' → logprob: -3.2308664321899414
    7. 'for' → logprob: -3.3558664321899414
    8. 'par' → logprob: -3.4808664321899414
    9. '),' → logprob: -3.6058664321899414
    10. ' par' → logprob: -3.8558664321899414

Token 840: ' prendre' (ID: 24257)
  Prédit: 'prendre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prendre' → logprob: -0.5417216420173645
    2. '0' → logprob: -1.7917215824127197
    3. 'i' → logprob: -2.1667215824127197
    4. '1' → logprob: -2.7917215824127197
    5. '2' → logprob: -3.7917215824127197
    6. 'comb' → logprob: -4.541721820831299
    7. 'part' → logprob: -4.916721820831299
    8. 'altern' → logprob: -5.416721820831299
    9. 'inter' → logprob: -5.541721820831299
    10. 'dp' → logprob: -5.666721820831299

Token 841: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.9570443630218506
    2. 'des' → logprob: -1.9570443630218506
    3. 'un' → logprob: -2.2070443630218506
    4. 'from' → logprob: -2.4570443630218506
    5. ')' → logprob: -2.5820443630218506
    6. 'de' → logprob: -2.9570443630218506
    7. ' un' → logprob: -2.9570443630218506
    8. '#' → logprob: -2.9570443630218506
    9. ',' → logprob: -3.3320443630218506
    10. 'S' → logprob: -3.5820443630218506

Token 842: ' wag' (ID: 48065)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.2800230085849762
    2. 'wag' → logprob: -2.4050230979919434
    3. ' wag' → logprob: -2.6550230979919434
    4. ' S' → logprob: -3.5300230979919434
    5. 's' → logprob: -4.030023097991943
    6. '```' → logprob: -4.780023097991943
    7. 'i' → logprob: -4.905023097991943
    8. 'train' → logprob: -5.530023097991943
    9. 'w' → logprob: -5.655023097991943
    10. 'wagon' → logprob: -6.155023097991943

Token 843: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.004045987036079168
    2. 'on' → logprob: -6.2540459632873535
    3. 'a' → logprob: -7.3790459632873535
    4. '```' → logprob: -7.8790459632873535
    5. 'aux' → logprob: -8.754046440124512
    6. '#' → logprob: -8.754046440124512
    7. '{' → logprob: -8.879046440124512
    8. '``' → logprob: -9.129046440124512
    9. '[' → logprob: -9.504046440124512
    10. '\' → logprob: -9.754046440124512

Token 844: ' après' (ID: 16460)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45850515365600586
    2. ' for' → logprob: -1.5835051536560059
    3. ',' → logprob: -2.708505153656006
    4. '<|end|>' → logprob: -3.583505153656006
    5. ')' → logprob: -3.708505153656006
    6. '           ' → logprob: -5.083505153656006
    7. '   ' → logprob: -5.333505153656006
    8. '```' → logprob: -5.333505153656006
    9. '),' → logprob: -5.458505153656006
    10. ':' → logprob: -5.833505153656006

Token 845: ' avoir' (ID: 16595)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1896497011184692
    2. '```' → logprob: -1.6896497011184692
    3. '#' → logprob: -2.0646495819091797
    4. ')' → logprob: -2.3146495819091797
    5. 'S' → logprob: -2.8146495819091797
    6. 'i' → logprob: -3.3146495819091797
    7. ' for' → logprob: -3.3146495819091797
    8. 'le' → logprob: -3.5646495819091797
    9. 'the' → logprob: -4.06464958190918
    10. '   ' → logprob: -4.31464958190918

Token 846: ' dé' (ID: 2393)
  Prédit: 'comm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comm' → logprob: -0.8097066879272461
    2. 'continu' → logprob: -1.809706687927246
    3. 'pris' → logprob: -2.434706687927246
    4. '```' → logprob: -2.934706687927246
    5. '#' → logprob: -3.309706687927246
    6. 'repr' → logprob: -3.309706687927246
    7. 'cho' → logprob: -3.809706687927246
    8. 'arr' → logprob: -3.934706687927246
    9. 'termin' → logprob: -4.184706687927246
    10. 'contin' → logprob: -4.184706687927246

Token 847: 'posé' (ID: 119301)
  Prédit: 'but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'but' → logprob: -0.8496479988098145
    2. 'f' → logprob: -1.3496479988098145
    3. 'com' → logprob: -2.4746479988098145
    4. 'clar' → logprob: -2.5996479988098145
    5. 'velopp' → logprob: -3.0996479988098145
    6. 'mar' → logprob: -3.7246479988098145
    7. 'pass' → logprob: -4.0996479988098145
    8. 'fin' → logprob: -4.4746479988098145
    9. 'bug' → logprob: -4.7246479988098145
    10. 'jà' → logprob: -5.2246479988098145

Token 848: ' certains' (ID: 30681)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1568634510040283
    2. 'S' → logprob: -1.2818634510040283
    3. 'les' → logprob: -2.1568634510040283
    4. 'le' → logprob: -3.0318634510040283
    5. 'the' → logprob: -3.4068634510040283
    6. '...' → logprob: -3.5318634510040283
    7. '#' → logprob: -3.6568634510040283
    8. ' les' → logprob: -3.9068634510040283
    9. 's' → logprob: -4.531863212585449
    10. 'i' → logprob: -4.531863212585449

Token 849: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2622333765029907
    2. '):
' → logprob: -3.137233257293701
    3. '):' → logprob: -3.137233257293701
    4. '),' → logprob: -3.762233257293701
    5. '#' → logprob: -3.887233257293701
    6. ',' → logprob: -4.137233257293701
    7. '```' → logprob: -4.387233257293701
    8. ')
' → logprob: -4.512233257293701
    9. 'w' → logprob: -4.637233257293701
    10. 'de' → logprob: -5.137233257293701

Token 850: '#' (ID: 2)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0465816929936409
    2. ' max' → logprob: -4.171581745147705
    3. 'result' → logprob: -4.296581745147705
    4. 'res' → logprob: -4.421581745147705
    5. 'best' → logprob: -6.296581745147705
    6. '#' → logprob: -6.921581745147705
    7. 'answer' → logprob: -7.671581745147705
    8. 'ans' → logprob: -7.921581745147705
    9. ' res' → logprob: -8.046581268310547
    10. ' result' → logprob: -8.671581268310547

Token 851: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013308928348124027
    2. '#' → logprob: -4.388309001922607
    3. ' for' → logprob: -7.388309001922607
    4. '           ' → logprob: -9.51330852508545
    5. 'max' → logprob: -9.76330852508545
    6. '
' → logprob: -10.88830852508545
    7. 'continue' → logprob: -11.51330852508545
    8. 'pass' → logprob: -11.76330852508545
    9. ' #' → logprob: -12.76330852508545
    10. 'import' → logprob: -13.26330852508545

Token 852: ' peut' (ID: 9216)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02511962503194809
    2. ' for' → logprob: -3.7751195430755615
    3. '#' → logprob: -7.025119781494141
    4. 'continue' → logprob: -7.400119781494141
    5. '...' → logprob: -9.15011978149414
    6. ' continue' → logprob: -9.65011978149414
    7. '           ' → logprob: -9.90011978149414
    8. '
' → logprob: -10.02511978149414
    9. '   ' → logprob: -10.77511978149414
    10. ' #' → logprob: -11.40011978149414

Token 853: ' aussi' (ID: 9894)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8561888933181763
    2. ' for' → logprob: -0.9811888933181763
    3. ' continuer' → logprob: -2.1061887741088867
    4. 'contin' → logprob: -3.3561887741088867
    5. ' continue' → logprob: -4.106188774108887
    6. '#' → logprob: -4.981188774108887
    7. 'continue' → logprob: -4.981188774108887
    8. ' #' → logprob: -5.856188774108887
    9. 'aj' → logprob: -6.356188774108887
    10. ' ajouter' → logprob: -6.731188774108887

Token 854: ' considérer' (ID: 172894)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17427009344100952
    2. 'contin' → logprob: -2.9242701530456543
    3. '#' → logprob: -3.5492701530456543
    4. ' for' → logprob: -3.6742701530456543
    5. ' continuer' → logprob: -4.674270153045654
    6. 'aj' → logprob: -4.799270153045654
    7. 'repr' → logprob: -5.174270153045654
    8. 'continue' → logprob: -5.299270153045654
    9. 'try' → logprob: -5.424270153045654
    10. 'prendre' → logprob: -5.674270153045654

Token 855: ' commencer' (ID: 66055)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.157598853111267
    2. 'for' → logprob: -1.407598853111267
    3. '   ' → logprob: -1.782598853111267
    4. '#' → logprob: -2.0325989723205566
    5. 'if' → logprob: -3.0325989723205566
    6. ' for' → logprob: -4.032598972320557
    7. ' if' → logprob: -4.407598972320557
    8. '       ' → logprob: -4.407598972320557
    9. 'the' → logprob: -4.532598972320557
    10. '               ' → logprob: -5.157598972320557

Token 856: ' à' (ID: 1221)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5385527610778809
    2. '#' → logprob: -2.163552761077881
    3. 'for' → logprob: -2.663552761077881
    4. '           ' → logprob: -3.038552761077881
    5. 'with' → logprob: -3.288552761077881
    6. '...' → logprob: -3.538552761077881
    7. '```' → logprob: -3.788552761077881
    8. 'à' → logprob: -4.038552761077881
    9. 'at' → logprob: -4.538552761077881
    10. '   ' → logprob: -4.663552761077881

Token 857: ' prendre' (ID: 24257)
  Prédit: 'prendre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prendre' → logprob: -0.04190133139491081
    2. 'part' → logprob: -3.9169013500213623
    3. '0' → logprob: -4.916901111602783
    4. 'repr' → logprob: -5.916901111602783
    5. 'pr' → logprob: -6.166901111602783
    6. 'i' → logprob: -6.791901111602783
    7. '```' → logprob: -6.916901111602783
    8. 'for' → logprob: -6.916901111602783
    9. 'from' → logprob: -7.166901111602783
    10. 'new' → logprob: -7.166901111602783

Token 858: ' un' (ID: 537)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.2392933368682861
    2. 'un' → logprob: -1.4892933368682861
    3. 'des' → logprob: -1.8642933368682861
    4. 'de' → logprob: -2.239293336868286
    5. 'à' → logprob: -3.114293336868286
    6. '#' → logprob: -3.489293336868286
    7. 'wag' → logprob: -3.864293336868286
    8. 'new' → logprob: -3.989293336868286
    9. 'w' → logprob: -4.364293098449707
    10. 'a' → logprob: -4.489293098449707

Token 859: ' nouveau' (ID: 23184)
  Prédit: 'wagon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wagon' → logprob: -0.24514161050319672
    2. 'nou' → logprob: -2.4951415061950684
    3. 'train' → logprob: -2.8701415061950684
    4. 'new' → logprob: -3.8701415061950684
    5. 'wag' → logprob: -3.9951415061950684
    6. ' nouveau' → logprob: -4.120141506195068
    7. ' wagon' → logprob: -4.370141506195068
    8. '```' → logprob: -5.370141506195068
    9. 'token' → logprob: -6.995141506195068
    10. 'w' → logprob: -7.620141506195068

Token 860: ' wagon' (ID: 90907)
  Prédit: 'wagon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wagon' → logprob: -0.06198684871196747
    2. ' wagon' → logprob: -2.9369869232177734
    3. 'train' → logprob: -6.186986923217773
    4. 'token' → logprob: -6.811986923217773
    5. 'w' → logprob: -6.936986923217773
    6. '#' → logprob: -7.061986923217773
    7. 'wag' → logprob: -7.311986923217773
    8. '
' → logprob: -8.311986923217773
    9. ' train' → logprob: -8.561986923217773
    10. '```' → logprob: -8.561986923217773

Token 861: ' directement' (ID: 52317)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09123791009187698
    2. 'from' → logprob: -3.716238021850586
    3. ' at' → logprob: -3.966238021850586
    4. ' from' → logprob: -4.466238021850586
    5. '               ' → logprob: -4.716238021850586
    6. '                   ' → logprob: -4.966238021850586
    7. '                       ' → logprob: -5.341238021850586
    8. '       ' → logprob: -5.966238021850586
    9. 'for' → logprob: -6.091238021850586
    10. '                           ' → logprob: -6.466238021850586

Token 862: ' ici' (ID: 27994)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7064130306243896
    2. 'for' → logprob: -0.8314130306243896
    3. ' for' → logprob: -3.2064130306243896
    4. '<|end|>' → logprob: -4.706413269042969
    5. '                           ' → logprob: -5.456413269042969
    6. '                   ' → logprob: -5.581413269042969
    7. '#' → logprob: -5.956413269042969
    8. 'from' → logprob: -6.206413269042969
    9. '               ' → logprob: -6.331413269042969
    10. '                       ' → logprob: -6.956413269042969

Token 863: ' si' (ID: 1784)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16344407200813293
    2. '               ' → logprob: -2.9134440422058105
    3. '                       ' → logprob: -3.6634440422058105
    4. '                   ' → logprob: -4.1634440422058105
    5. '                           ' → logprob: -4.2884440422058105
    6. '
' → logprob: -4.7884440422058105
    7. '       ' → logprob: -5.0384440422058105
    8. '                        
' → logprob: -5.1634440422058105
    9. '   ' → logprob: -5.5384440422058105
    10. '            
' → logprob: -6.2884440422058105

Token 864: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.004276888445019722
    2. '(last' → logprob: -6.254276752471924
    3. ' last' → logprob: -6.504276752471924
    4. '(i' → logprob: -7.879276752471924
    5. 'False' → logprob: -8.879277229309082
    6. 'i' → logprob: -8.879277229309082
    7. 'dp' → logprob: -9.504277229309082
    8. '(S' → logprob: -10.629277229309082
    9. '0' → logprob: -11.129277229309082
    10. ' (' → logprob: -11.129277229309082

Token 865: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5765840411186218
    2. ' ==' → logprob: -0.8265840411186218
    3. '```' → logprob: -8.201583862304688
    4. 'in' → logprob: -8.951583862304688
    5. ' !=' → logprob: -10.076583862304688
    6. ' in' → logprob: -10.201583862304688
    7. '==
' → logprob: -10.576583862304688
    8. '!=' → logprob: -10.701583862304688
    9. ']==' → logprob: -11.201583862304688
    10. ')' → logprob: -11.201583862304688

Token 866: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.668304245569743e-05
    2. ' ' → logprob: -10.250046730041504
    3. '```' → logprob: -12.000046730041504
    4. '0' → logprob: -13.000046730041504
    5. '   ' → logprob: -13.250046730041504
    6. '
' → logprob: -15.062546730041504
    7. '1' → logprob: -15.562546730041504
    8. '``' → logprob: -15.875046730041504
    9. '  ' → logprob: -16.187545776367188
    10. '`' → logprob: -16.437545776367188

Token 867: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.750004768371582
    3. '0' → logprob: -14.250004768371582
    4. '```' → logprob: -15.250004768371582
    5. '   ' → logprob: -15.937504768371582
    6. '1' → logprob: -16.562503814697266
    7. '۲' → logprob: -17.250003814697266
    8. '``' → logprob: -17.562503814697266
    9. '２' → logprob: -17.687503814697266
    10. '  ' → logprob: -17.875003814697266

Token 868: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04857544228434563
    2. '                   ' → logprob: -4.048575401306152
    3. '               ' → logprob: -4.173575401306152
    4. '                       ' → logprob: -4.548575401306152
    5. 'if' → logprob: -6.298575401306152
    6. '                           ' → logprob: -7.048575401306152
    7. ' if' → logprob: -7.673575401306152
    8. 'for' → logprob: -7.798575401306152
    9. '       ' → logprob: -9.548575401306152
    10. '```' → logprob: -9.548575401306152

Token 869: '#' (ID: 2)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05247082933783531
    2. 'for' → logprob: -3.5524709224700928
    3. ' for' → logprob: -4.677470684051514
    4. 'if' → logprob: -5.302470684051514
    5. '       ' → logprob: -5.927470684051514
    6. ' if' → logprob: -6.052470684051514
    7. '<|end|>' → logprob: -7.427470684051514
    8. '               ' → logprob: -7.552470684051514
    9. '```' → logprob: -7.552470684051514
    10. '          ' → logprob: -8.302471160888672

Token 870: ' En' (ID: 2130)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03452293947339058
    2. '           ' → logprob: -3.9095230102539062
    3. 'if' → logprob: -4.784523010253906
    4. ' for' → logprob: -5.284523010253906
    5. '#' → logprob: -8.284523010253906
    6. ' if' → logprob: -9.284523010253906
    7. '   ' → logprob: -10.159523010253906
    8. '```' → logprob: -10.534523010253906
    9. '       ' → logprob: -10.909523010253906
    10. '...' → logprob: -11.284523010253906

Token 871: ' réalité' (ID: 63047)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23043732345104218
    2. 'range' → logprob: -2.1054372787475586
    3. ' range' → logprob: -2.9804372787475586
    4. ' for' → logprob: -3.4804372787475586
    5. '```' → logprob: -6.605437278747559
    6. 'umer' → logprob: -8.605437278747559
    7. '
' → logprob: -8.730437278747559
    8. 't' → logprob: -8.980437278747559
    9. '#' → logprob: -9.105437278747559
    10. '       ' → logprob: -9.230437278747559

Token 872: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06315790116786957
    2. ' for' → logprob: -2.938157796859741
    3. ':' → logprob: -5.56315803527832
    4. ',' → logprob: -5.68815803527832
    5. '           ' → logprob: -7.68815803527832
    6. '...' → logprob: -8.43815803527832
    7. ':
' → logprob: -9.06315803527832
    8. '
' → logprob: -9.68815803527832
    9. '   ' → logprob: -10.06315803527832
    10. '#' → logprob: -10.18815803527832

Token 873: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012711768969893456
    2. ' for' → logprob: -4.512712001800537
    3. '#' → logprob: -7.012712001800537
    4. 'pass' → logprob: -7.637712001800537
    5. 'continue' → logprob: -9.262711524963379
    6. 'if' → logprob: -9.887711524963379
    7. '...' → logprob: -10.137711524963379
    8. '           ' → logprob: -10.262711524963379
    9. 'pour' → logprob: -11.012711524963379
    10. ' pass' → logprob: -11.512711524963379

Token 874: ' doit' (ID: 21822)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00436994805932045
    2. 'continue' → logprob: -6.129369735717773
    3. ' for' → logprob: -6.629369735717773
    4. '#' → logprob: -8.379369735717773
    5. 'n' → logprob: -8.754369735717773
    6. '```' → logprob: -8.879369735717773
    7. 'should' → logprob: -9.254369735717773
    8. '...' → logprob: -9.879369735717773
    9. 'range' → logprob: -10.129369735717773
    10. '       ' → logprob: -10.754369735717773

Token 875: ' pouvoir' (ID: 27197)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008350973948836327
    2. ' for' → logprob: -5.258350849151611
    3. 'continue' → logprob: -6.383350849151611
    4. 'contin' → logprob: -7.258350849151611
    5. '#' → logprob: -7.633350849151611
    6. '```' → logprob: -9.38335132598877
    7. ' continuer' → logprob: -10.75835132598877
    8. 'aj' → logprob: -10.75835132598877
    9. '...' → logprob: -10.88335132598877
    10. ' continue' → logprob: -11.00835132598877

Token 876: ' commencer' (ID: 66055)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.569145143032074
    2. 'repr' → logprob: -1.5691452026367188
    3. 'for' → logprob: -2.4441452026367188
    4. 'comm' → logprob: -2.9441452026367188
    5. 'prendre' → logprob: -3.0691452026367188
    6. 'continue' → logprob: -4.819145202636719
    7. 'aj' → logprob: -5.319145202636719
    8. 'part' → logprob: -5.569145202636719
    9. 'start' → logprob: -5.694145202636719
    10. '#' → logprob: -6.069145202636719

Token 877: ' à' (ID: 1221)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08213038742542267
    2. 'for' → logprob: -2.8321304321289062
    3. 'if' → logprob: -4.582130432128906
    4. ' for' → logprob: -5.832130432128906
    5. ' if' → logprob: -5.957130432128906
    6. '               ' → logprob: -6.457130432128906
    7. '       ' → logprob: -7.207130432128906
    8. '                   ' → logprob: -7.457130432128906
    9. 'from' → logprob: -7.957130432128906
    10. '                       ' → logprob: -8.082130432128906

Token 878: ' n' (ID: 297)
  Prédit: 'prendre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prendre' → logprob: -0.00495907012373209
    2. 'part' → logprob: -6.5049591064453125
    3. 'contin' → logprob: -7.2549591064453125
    4. 'repr' → logprob: -7.3799591064453125
    5. 'for' → logprob: -7.7549591064453125
    6. 'pr' → logprob: -7.7549591064453125
    7. '```' → logprob: -7.7549591064453125
    8. 'penser' → logprob: -8.504959106445312
    9. 'take' → logprob: -8.754959106445312
    10. 'prise' → logprob: -9.254959106445312

Token 879: ''importe' (ID: 103032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5252820253372192
    2. 'prendre' → logprob: -1.0252820253372192
    3. 'ouveau' → logprob: -4.65028190612793
    4. ' prendre' → logprob: -4.90028190612793
    5. 'ow' → logprob: -5.02528190612793
    6. 'ous' → logprob: -5.90028190612793
    7. 'o' → logprob: -5.90028190612793
    8. 'one' → logprob: -6.02528190612793
    9. 'on' → logprob: -6.40028190612793
    10. 'pour' → logprob: -6.52528190612793

Token 880: ' quel' (ID: 10613)
  Prédit: 'importe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'importe' → logprob: -0.3856821656227112
    2. ''importe' → logprob: -1.2606821060180664
    3. '#' → logprob: -4.635682106018066
    4. 'import' → logprob: -4.885682106018066
    5. '``' → logprob: -4.885682106018066
    6. '```' → logprob: -5.510682106018066
    7. '’importe' → logprob: -6.385682106018066
    8. 'any' → logprob: -6.635682106018066
    9. 'prendre' → logprob: -7.260682106018066
    10. 'tout' → logprob: -7.385682106018066

Token 881: ' point' (ID: 2438)
  Prédit: 'moment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moment' → logprob: -0.4157220721244812
    2. 'point' → logprob: -1.665722131729126
    3. 'i' → logprob: -2.665722131729126
    4. ' moment' → logprob: -3.665722131729126
    5. '```' → logprob: -3.790722131729126
    6. 'indice' → logprob: -4.290721893310547
    7. 'wagon' → logprob: -4.790721893310547
    8. 'mom' → logprob: -6.165721893310547
    9. 'for' → logprob: -6.790721893310547
    10. 'token' → logprob: -6.915721893310547

Token 882: ' dans' (ID: 2671)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49172237515449524
    2. ' for' → logprob: -1.7417223453521729
    3. 'for' → logprob: -1.8667223453521729
    4. '<|end|>' → logprob: -3.366722345352173
    5. '                           ' → logprob: -4.866722583770752
    6. '<|end|>' → logprob: -5.991722583770752
    7. '                   ' → logprob: -6.241722583770752
    8. '                       ' → logprob: -6.616722583770752
    9. '...' → logprob: -6.741722583770752
    10. '               ' → logprob: -6.866722583770752

Token 883: ' S' (ID: 336)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2645410895347595
    2. 'S' → logprob: -1.6395411491394043
    3. 'for' → logprob: -3.6395411491394043
    4. 'la' → logprob: -5.014541149139404
    5. 'the' → logprob: -6.264541149139404
    6. ' range' → logprob: -6.514541149139404
    7. 'le' → logprob: -7.264541149139404
    8. 'M' → logprob: -7.639541149139404
    9. '#' → logprob: -8.514540672302246
    10. '```' → logprob: -8.764540672302246

Token 884: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47003796696662903
    2. ' for' → logprob: -1.5950379371643066
    3. '   ' → logprob: -2.5950379371643066
    4. ' or' → logprob: -3.0950379371643066
    5. ' and' → logprob: -4.095037937164307
    6. '           ' → logprob: -4.470037937164307
    7. '       ' → logprob: -4.845037937164307
    8. '#' → logprob: -5.970037937164307
    9. '<|end|>' → logprob: -6.095037937164307
    10. ' ' → logprob: -6.220037937164307

Token 885: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0022279294207692146
    2. ' T' → logprob: -6.127227783203125
    3. '#' → logprob: -11.002227783203125
    4. '```' → logprob: -11.252227783203125
    5. 'N' → logprob: -13.127227783203125
    6. ' ' → logprob: -13.127227783203125
    7. '
' → logprob: -13.377227783203125
    8. '`' → logprob: -13.627227783203125
    9. '...' → logprob: -14.002227783203125
    10. 'n' → logprob: -14.127227783203125

Token 886: ':

' (ID: 1402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04726596921682358
    2. ' for' → logprob: -3.4222660064697266
    3. '<|end|>' → logprob: -4.922266006469727
    4. '           ' → logprob: -5.922266006469727
    5. '#' → logprob: -6.422266006469727
    6. '...' → logprob: -6.672266006469727
    7. '```' → logprob: -8.422266006469727
    8. '<|end|>' → logprob: -8.672266006469727
    9. '
' → logprob: -9.922266006469727
    10. '.' → logprob: -10.047266006469727

Token 887: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006689209956675768
    2. ' for' → logprob: -5.381689071655273
    3. '           ' → logprob: -6.381689071655273
    4. '```' → logprob: -8.131689071655273
    5. '       ' → logprob: -10.381689071655273
    6. '   ' → logprob: -10.631689071655273
    7. '#' → logprob: -11.006689071655273
    8. 'if' → logprob: -13.006689071655273
    9. '
' → logprob: -13.131689071655273
    10. 'continue' → logprob: -13.756689071655273

Token 888: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009765887632966042
    2. ' i' → logprob: -4.634766101837158
    3. '_i' → logprob: -12.259765625
    4. 'j' → logprob: -13.509765625
    5. 'x' → logprob: -13.634765625
    6. '_' → logprob: -14.134765625
    7. 'a' → logprob: -15.384765625
    8. '	i' → logprob: -15.384765625
    9. 'ii' → logprob: -15.509765625
    10. '```' → logprob: -15.509765625

Token 889: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04304828494787216
    2. 'in' → logprob: -3.16804838180542
    3. 'range' → logprob: -11.168047904968262
    4. ' ' → logprob: -12.543047904968262
    5. '   ' → logprob: -12.668047904968262
    6. 'n' → logprob: -12.668047904968262
    7. '1' → logprob: -12.668047904968262
    8. 's' → logprob: -12.918047904968262
    9. 'd' → logprob: -12.918047904968262
    10. '0' → logprob: -13.168047904968262

Token 890: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007102862582542002
    2. ' range' → logprob: -7.250710487365723
    3. '(range' → logprob: -15.000710487365723
    4. ' ' → logprob: -17.875709533691406
    5. '   ' → logprob: -18.750709533691406
    6. '  ' → logprob: -19.625709533691406
    7. 'in' → logprob: -20.125709533691406
    8. '(' → logprob: -20.375709533691406
    9. '	range' → logprob: -20.375709533691406
    10. '
' → logprob: -20.750709533691406

Token 891: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -3.5954712075181305e-05
    2. 'range' → logprob: -11.125036239624023
    3. '(' → logprob: -11.250036239624023
    4. '(range' → logprob: -12.000036239624023
    5. 'M' → logprob: -13.250036239624023
    6. '(m' → logprob: -16.000036239624023
    7. ' range' → logprob: -17.500036239624023
    8. '((' → logprob: -17.500036239624023
    9. '(min' → logprob: -17.750036239624023
    10. 'in' → logprob: -18.125036239624023

Token 892: '+' (ID: 10)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5597609877586365
    2. '+' → logprob: -0.9347609877586365
    3. '):' → logprob: -3.4347610473632812
    4. ',' → logprob: -6.184761047363281
    5. '   ' → logprob: -6.934761047363281
    6. '(M' → logprob: -8.559761047363281
    7. '(' → logprob: -9.434761047363281
    8. ':' → logprob: -9.559761047363281
    9. ' +' → logprob: -9.809761047363281
    10. '=' → logprob: -9.934761047363281

Token 893: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -12.000007629394531
    3. '+' → logprob: -14.875007629394531
    4. '0' → logprob: -15.375007629394531
    5. '2' → logprob: -15.500007629394531
    6. 'N' → logprob: -15.625007629394531
    7. '   ' → logprob: -16.12500762939453
    8. '(' → logprob: -17.25000762939453
    9. ')' → logprob: -17.50000762939453
    10. '```' → logprob: -17.75000762939453

Token 894: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.009170614182949066
    2. '):' → logprob: -4.8841705322265625
    3. '   ' → logprob: -6.6341705322265625
    4. ':' → logprob: -9.259170532226562
    5. ':
' → logprob: -9.509170532226562
    6. '+' → logprob: -10.134170532226562
    7. 'for' → logprob: -11.134170532226562
    8. '       ' → logprob: -12.134170532226562
    9. ',' → logprob: -12.259170532226562
    10. '):
' → logprob: -12.259170532226562

Token 895: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015633940347470343
    2. ' for' → logprob: -9.50015640258789
    3. 'for' → logprob: -9.50015640258789
    4. '```' → logprob: -12.00015640258789
    5. '   ' → logprob: -15.37515640258789
    6. '	for' → logprob: -16.00015640258789
    7. '       ' → logprob: -17.00015640258789
    8. '``' → logprob: -17.62515640258789
    9. '<|end|>' → logprob: -18.50015640258789
    10. '    ' → logprob: -19.12515640258789

Token 896: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09776709228754044
    2. ' for' → logprob: -2.8477671146392822
    3. '   ' → logprob: -3.3477671146392822
    4. ' ' → logprob: -13.347766876220703
    5. '	for' → logprob: -13.347766876220703
    6. '```' → logprob: -16.597766876220703
    7. '  ' → logprob: -17.222766876220703
    8. '   ' → logprob: -17.347766876220703
    9. 'j' → logprob: -17.472766876220703
    10. '       ' → logprob: -18.222766876220703

Token 897: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16022473573684692
    2. ' j' → logprob: -1.9102246761322021
    3. '   ' → logprob: -15.785224914550781
    4. '<|end|>' → logprob: -16.28522491455078
    5. 'i' → logprob: -16.41022491455078
    6. '	j' → logprob: -16.53522491455078
    7. ' ' → logprob: -16.78522491455078
    8. '_j' → logprob: -17.16022491455078
    9. '```' → logprob: -17.78522491455078
    10. '$j' → logprob: -18.28522491455078

Token 898: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03824712336063385
    2. 'in' → logprob: -3.2882471084594727
    3. '[' → logprob: -9.663247108459473
    4. '   ' → logprob: -9.663247108459473
    5. '(' → logprob: -11.163247108459473
    6. 'In' → logprob: -11.413247108459473
    7. '    ' → logprob: -12.038247108459473
    8. '	in' → logprob: -12.038247108459473
    9. '1' → logprob: -12.163247108459473
    10. ',' → logprob: -12.163247108459473

Token 899: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02216240018606186
    2. ' range' → logprob: -4.022162437438965
    3. '(N' → logprob: -5.522162437438965
    4. '(range' → logprob: -12.897162437438965
    5. ' (' → logprob: -13.147162437438965
    6. 'N' → logprob: -13.272162437438965
    7. '(M' → logprob: -14.897162437438965
    8. '[N' → logprob: -15.647162437438965
    9. '   ' → logprob: -15.897162437438965
    10. ' ' → logprob: -16.14716148376465

Token 900: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0005113297956995666
    2. 'N' → logprob: -8.000511169433594
    3. '(' → logprob: -8.750511169433594
    4. '0' → logprob: -12.625511169433594
    5. 'range' → logprob: -12.625511169433594
    6. '(M' → logprob: -12.625511169433594
    7. '   ' → logprob: -12.625511169433594
    8. ' (' → logprob: -13.625511169433594
    9. '(i' → logprob: -14.375511169433594
    10. '1' → logprob: -14.625511169433594

Token 901: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0445127372804563e-05
    2. ' +' → logprob: -12.50001049041748
    3. '   ' → logprob: -13.50001049041748
    4. '+
' → logprob: -13.62501049041748
    5. '1' → logprob: -14.12501049041748
    6. ',' → logprob: -14.25001049041748
    7. '+j' → logprob: -14.25001049041748
    8. '+i' → logprob: -14.62501049041748
    9. '```' → logprob: -15.12501049041748
    10. ')+' → logprob: -15.25001049041748

Token 902: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018363336857873946
    2. '+' → logprob: -8.625184059143066
    3. 'j' → logprob: -13.500184059143066
    4. ' ' → logprob: -13.625184059143066
    5. '```' → logprob: -14.000184059143066
    6. '   ' → logprob: -14.625184059143066
    7. '``' → logprob: -16.37518310546875
    8. ')' → logprob: -18.12518310546875
    9. '+j' → logprob: -18.12518310546875
    10. '`' → logprob: -18.37518310546875

Token 903: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.09120678901672363
    2. '):' → logprob: -2.7162067890167236
    3. ':' → logprob: -4.7162065505981445
    4. '       ' → logprob: -5.0912065505981445
    5. ':
' → logprob: -6.2162065505981445
    6. ',' → logprob: -6.3412065505981445
    7. '   ' → logprob: -6.5912065505981445
    8. ']:
' → logprob: -8.091206550598145
    9. '           ' → logprob: -8.966206550598145
    10. '():
' → logprob: -9.341206550598145

Token 904: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007898683659732342
    2. '   ' → logprob: -5.007898807525635
    3. ' for' → logprob: -6.757898807525635
    4. '<|end|>' → logprob: -12.132898330688477
    5. ' if' → logprob: -12.382898330688477
    6. '	   ' → logprob: -12.382898330688477
    7. 'for' → logprob: -13.507898330688477
    8. '```' → logprob: -13.632898330688477
    9. ',' → logprob: -14.007898330688477
    10. '	for' → logprob: -14.007898330688477

Token 905: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16332562267780304
    2. ' for' → logprob: -2.538325548171997
    3. '       ' → logprob: -2.663325548171997
    4. 'for' → logprob: -6.288325786590576
    5. '	for' → logprob: -10.163325309753418
    6. ' if' → logprob: -10.538325309753418
    7. '           ' → logprob: -10.788325309753418
    8. '   ' → logprob: -11.538325309753418
    9. '	   ' → logprob: -12.538325309753418
    10. ' ' → logprob: -12.663325309753418

Token 906: ' i' (ID: 575)
  Prédit: ' last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.9966411590576172
    2. 'last' → logprob: -0.9966411590576172
    3. 'dp' → logprob: -1.7466411590576172
    4. ' dp' → logprob: -2.496641159057617
    5. ' i' → logprob: -6.621641159057617
    6. '0' → logprob: -6.871641159057617
    7. 'i' → logprob: -6.996641159057617
    8. '2' → logprob: -7.746641159057617
    9. ' j' → logprob: -8.121641159057617
    10. 'j' → logprob: -8.246641159057617

Token 907: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.13929112255573273
    2. ' >' → logprob: -2.2642910480499268
    3. ' <' → logprob: -4.514291286468506
    4. '+' → logprob: -5.139291286468506
    5. '<' → logprob: -5.639291286468506
    6. '[' → logprob: -6.514291286468506
    7. 'and' → logprob: -6.639291286468506
    8. '==' → logprob: -7.514291286468506
    9. ' and' → logprob: -7.514291286468506
    10. ' ==' → logprob: -7.889291286468506

Token 908: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0004324573092162609
    2. ' M' → logprob: -7.75043249130249
    3. 'len' → logprob: -14.875432014465332
    4. ' ' → logprob: -15.375432014465332
    5. '   ' → logprob: -15.625432014465332
    6. '(M' → logprob: -15.750432014465332
    7. '<M' → logprob: -16.25043296813965
    8. '=M' → logprob: -16.25043296813965
    9. '1' → logprob: -16.37543296813965
    10. '	M' → logprob: -16.37543296813965

Token 909: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.029979458078742027
    2. 'and' → logprob: -3.5299794673919678
    3. '           ' → logprob: -8.904979705810547
    4. '       ' → logprob: -10.154979705810547
    5. '   ' → logprob: -10.279979705810547
    6. ':
' → logprob: -12.529979705810547
    7. ' ' → logprob: -12.779979705810547
    8. ' or' → logprob: -13.029979705810547
    9. '	and' → logprob: -13.029979705810547
    10. '          ' → logprob: -13.279979705810547

Token 910: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0018838961841538548
    2. ' S' → logprob: -6.6268839836120605
    3. '(S' → logprob: -7.7518839836120605
    4. '(' → logprob: -10.251883506774902
    5. ' (' → logprob: -10.501883506774902
    6. 'dp' → logprob: -10.626883506774902
    7. 'i' → logprob: -11.751883506774902
    8. 'can' → logprob: -12.001883506774902
    9. '   ' → logprob: -12.251883506774902
    10. ' ' → logprob: -12.376883506774902

Token 911: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.650518920039758e-06
    2. '```' → logprob: -13.375003814697266
    3. '[j' → logprob: -14.250003814697266
    4. '[' → logprob: -14.375003814697266
    5. '[I' → logprob: -15.250003814697266
    6. ' [' → logprob: -15.625003814697266
    7. 'i' → logprob: -16.375003814697266
    8. '[
' → logprob: -17.375003814697266
    9. '][' → logprob: -17.375003814697266
    10. ')[' → logprob: -17.375003814697266

Token 912: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04317503049969673
    2. ']==' → logprob: -3.293174982070923
    3. ']=='' → logprob: -5.793175220489502
    4. '==' → logprob: -6.668175220489502
    5. ' ]' → logprob: -7.793175220489502
    6. ' ==' → logprob: -8.543174743652344
    7. '[i' → logprob: -9.168174743652344
    8. '[' → logprob: -9.668174743652344
    9. '=='' → logprob: -11.168174743652344
    10. ']=="' → logprob: -13.043174743652344

Token 913: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2531183362007141
    2. ' ==' → logprob: -1.5031182765960693
    3. '=='' → logprob: -6.753118515014648
    4. ' =='' → logprob: -12.003118515014648
    5. ']==' → logprob: -12.503118515014648
    6. '=' → logprob: -12.628118515014648
    7. '==
' → logprob: -13.003118515014648
    8. '[' → logprob: -13.128118515014648
    9. ']' → logprob: -13.878118515014648
    10. '=="' → logprob: -14.128118515014648

Token 914: ' '' (ID: 461)
  Prédit: ''I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''I' → logprob: -3.333223139634356e-05
    2. 'I' → logprob: -11.250033378601074
    3. ' '' → logprob: -11.500033378601074
    4. '"I' → logprob: -12.500033378601074
    5. '‘I' → logprob: -12.500033378601074
    6. ''O' → logprob: -13.500033378601074
    7. ''' → logprob: -14.375033378601074
    8. '’I' → logprob: -14.875033378601074
    9. ''S' → logprob: -16.625032424926758
    10. ''U' → logprob: -16.625032424926758

Token 915: 'I' (ID: 40)
  Prédit: ''I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''I' → logprob: -0.014175030402839184
    2. 'I' → logprob: -4.264174938201904
    3. '"I' → logprob: -12.264175415039062
    4. '‘I' → logprob: -12.389175415039062
    5. '’I' → logprob: -13.139175415039062
    6. ''' → logprob: -15.514175415039062
    7. ' '' → logprob: -15.639175415039062
    8. ''i' → logprob: -16.014175415039062
    9. ' I' → logprob: -16.889175415039062
    10. ''O' → logprob: -16.889175415039062

Token 916: '':' (ID: 2337)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.44460198283195496
    2. ':
' → logprob: -1.5696020126342773
    3. ':' → logprob: -2.5696020126342773
    4. '           ' → logprob: -2.6946020126342773
    5. 'and' → logprob: -5.319602012634277
    6. '       ' → logprob: -7.569602012634277
    7. ' :
' → logprob: -7.694602012634277
    8. ' :' → logprob: -8.569602012634277
    9. '               ' → logprob: -9.319602012634277
    10. '):
' → logprob: -9.569602012634277

Token 917: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00021259987261146307
    2. ' dp' → logprob: -9.125212669372559
    3. 'dp' → logprob: -9.875212669372559
    4. '               ' → logprob: -11.250212669372559
    5. '            
' → logprob: -11.250212669372559
    6. '```' → logprob: -12.250212669372559
    7. '	       ' → logprob: -12.500212669372559
    8. '#' → logprob: -13.000212669372559
    9. '
' → logprob: -13.000212669372559
    10. ' for' → logprob: -13.125212669372559

Token 918: ' commencer' (ID: 66055)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008020383305847645
    2. ' dp' → logprob: -5.258020401000977
    3. 'dp' → logprob: -6.008020401000977
    4. '               ' → logprob: -9.008020401000977
    5. '   ' → logprob: -9.383020401000977
    6. ' for' → logprob: -10.008020401000977
    7. '                   ' → logprob: -10.758020401000977
    8. ' if' → logprob: -11.133020401000977
    9. '	dp' → logprob: -11.633020401000977
    10. '```' → logprob: -12.133020401000977

Token 919: ' ici' (ID: 27994)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0680752545595169
    2. ' and' → logprob: -2.818075180053711
    3. ':
' → logprob: -5.568075180053711
    4. ':' → logprob: -7.318075180053711
    5. '
' → logprob: -8.318075180053711
    6. '               ' → logprob: -8.443075180053711
    7. 'and' → logprob: -8.568075180053711
    8. '   ' → logprob: -8.943075180053711
    9. ' =' → logprob: -9.318075180053711
    10. '       ' → logprob: -9.318075180053711

Token 920: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010514537803828716
    2. ' and' → logprob: -5.010514736175537
    3. ':
' → logprob: -6.385514736175537
    4. ':' → logprob: -6.510514736175537
    5. '               ' → logprob: -8.010514259338379
    6. '       ' → logprob: -9.760514259338379
    7. '   ' → logprob: -10.010514259338379
    8. ',' → logprob: -10.135514259338379
    9. 'and' → logprob: -10.510514259338379
    10. '```' → logprob: -10.760514259338379

Token 921: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.457669562427327e-05
    2. '               ' → logprob: -10.50007438659668
    3. ' and' → logprob: -10.62507438659668
    4. ' for' → logprob: -12.75007438659668
    5. '```' → logprob: -12.75007438659668
    6. ' if' → logprob: -12.87507438659668
    7. ',' → logprob: -13.25007438659668
    8. '       ' → logprob: -13.37507438659668
    9. 'dp' → logprob: -13.62507438659668
    10. ' dp' → logprob: -13.62507438659668

Token 922: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.14435113966464996
    2. ' dp' → logprob: -2.0193512439727783
    3. '               ' → logprob: -6.894351005554199
    4. 'if' → logprob: -8.1443510055542
    5. '           ' → logprob: -8.6443510055542
    6. ' if' → logprob: -8.7693510055542
    7. '	dp' → logprob: -10.7693510055542
    8. 'for' → logprob: -12.1443510055542
    9. '   ' → logprob: -13.0193510055542
    10. ' for' → logprob: -13.0193510055542

Token 923: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. 'i' → logprob: -14.500000953674316
    3. '=i' → logprob: -17.25
    4. ' =' → logprob: -18.0
    5. '[I' → logprob: -18.125
    6. '   ' → logprob: -18.25
    7. '=' → logprob: -18.5
    8. '[' → logprob: -18.625
    9. ' [' → logprob: -18.625
    10. '```' → logprob: -18.75

Token 924: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.876193169271573e-05
    2. '][' → logprob: -9.625088691711426
    3. ' +' → logprob: -10.875088691711426
    4. '[' → logprob: -13.500088691711426
    5. '+[' → logprob: -13.500088691711426
    6. '＋' → logprob: -14.875088691711426
    7. '+i' → logprob: -15.625088691711426
    8. '+
' → logprob: -16.250089645385742
    9. ']+' → logprob: -16.375089645385742
    10. '   ' → logprob: -16.625089645385742

Token 925: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. '+' → logprob: -14.500001907348633
    3. ' ' → logprob: -14.500001907348633
    4. '2' → logprob: -14.875001907348633
    5. '   ' → logprob: -15.187501907348633
    6. '0' → logprob: -15.937501907348633
    7. '```' → logprob: -15.937501907348633
    8. '`' → logprob: -17.250001907348633
    9. 'i' → logprob: -17.375001907348633
    10. '(' → logprob: -18.125001907348633

Token 926: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.013333285227417946
    2. '[' → logprob: -4.388333320617676
    3. '[j' → logprob: -7.138333320617676
    4. ' ][' → logprob: -11.638333320617676
    5. ']' → logprob: -12.388333320617676
    6. '```' → logprob: -12.763333320617676
    7. '[i' → logprob: -12.888333320617676
    8. '           ' → logprob: -13.013333320617676
    9. '   ' → logprob: -13.388333320617676
    10. '       ' → logprob: -13.513333320617676

Token 927: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.3954463510308415e-05
    2. '0' → logprob: -9.875054359436035
    3. ' j' → logprob: -13.000054359436035
    4. '   ' → logprob: -16.25005340576172
    5. '	j' → logprob: -17.37505340576172
    6. '[j' → logprob: -18.25005340576172
    7. ',j' → logprob: -18.37505340576172
    8. ' ' → logprob: -18.75005340576172
    9. '```' → logprob: -18.75005340576172
    10. '_j' → logprob: -19.75005340576172

Token 928: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0008367887930944562
    2. '[' → logprob: -7.1258368492126465
    3. ' ][' → logprob: -11.125836372375488
    4. ']' → logprob: -11.250836372375488
    5. ''][' → logprob: -13.250836372375488
    6. '"][' → logprob: -14.500836372375488
    7. '2' → logprob: -14.875836372375488
    8. '   ' → logprob: -15.813336372375488
    9. '0' → logprob: -16.000837326049805
    10. '           ' → logprob: -16.063337326049805

Token 929: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '2' → logprob: -18.375
    3. '۰' → logprob: -18.75
    4. '   ' → logprob: -19.375
    5. ' ' → logprob: -19.625
    6. '０' → logprob: -20.125
    7. '1' → logprob: -20.4375
    8. '```' → logprob: -20.5
    9. '০' → logprob: -20.5625
    10. '०' → logprob: -20.625

Token 930: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009785723872482777
    2. ']=' → logprob: -4.7597856521606445
    3. '=' → logprob: -6.7597856521606445
    4. ' =' → logprob: -11.634785652160645
    5. ' ]' → logprob: -13.384785652160645
    6. 'max' → logprob: -14.634785652160645
    7. '           ' → logprob: -17.25978660583496
    8. '```' → logprob: -17.50978660583496
    9. '=max' → logprob: -17.63478660583496
    10. ']+=' → logprob: -17.75978660583496

Token 931: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006718571297824383
    2. ' =' → logprob: -5.006718635559082
    3. '=max' → logprob: -13.131718635559082
    4. ']=' → logprob: -14.006718635559082
    5. 'max' → logprob: -15.256718635559082
    6. '```' → logprob: -17.006717681884766
    7. ']' → logprob: -17.256717681884766
    8. '>' → logprob: -17.256717681884766
    9. '   ' → logprob: -17.881717681884766
    10. '           ' → logprob: -18.256717681884766

Token 932: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3869030177593231
    2. '1' → logprob: -1.1369030475616455
    3. ' max' → logprob: -10.511902809143066
    4. '   ' → logprob: -12.511902809143066
    5. '           ' → logprob: -14.761902809143066
    6. '	max' → logprob: -15.386902809143066
    7. '=max' → logprob: -15.761902809143066
    8. ' ' → logprob: -16.136903762817383
    9. '[max' → logprob: -16.636903762817383
    10. '       ' → logprob: -16.886903762817383

Token 933: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.4140441635390744e-05
    2. '(' → logprob: -11.375014305114746
    3. 'dp' → logprob: -13.000014305114746
    4. '(
' → logprob: -15.000014305114746
    5. ' (' → logprob: -18.25001335144043
    6. '   ' → logprob: -18.50001335144043
    7. '	dp' → logprob: -18.50001335144043
    8. '```' → logprob: -18.62501335144043
    9. '0' → logprob: -19.37501335144043
    10. ' dp' → logprob: -19.62501335144043

Token 934: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007066635414958
    2. 'dp' → logprob: -5.00706672668457
    3. '(dp' → logprob: -8.75706672668457
    4. '_dp' → logprob: -9.63206672668457
    5. '[' → logprob: -9.75706672668457
    6. ' dp' → logprob: -10.38206672668457
    7. '	dp' → logprob: -11.25706672668457
    8. '+' → logprob: -12.38206672668457
    9. '(i' → logprob: -12.63206672668457
    10. '[
' → logprob: -12.75706672668457

Token 935: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002387018030276522
    2. '[i' → logprob: -8.500238418579102
    3. '][' → logprob: -10.750238418579102
    4. '[' → logprob: -12.125238418579102
    5. ']+' → logprob: -12.375238418579102
    6. '1' → logprob: -13.375238418579102
    7. '+i' → logprob: -14.250238418579102
    8. ']' → logprob: -14.375238418579102
    9. 'i' → logprob: -15.250238418579102
    10. ' +' → logprob: -15.500238418579102

Token 936: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018339496455155313
    2. '+' → logprob: -8.62518310546875
    3. '
' → logprob: -14.81268310546875
    4. '   ' → logprob: -14.81268310546875
    5. 'dp' → logprob: -14.93768310546875
    6. '0' → logprob: -15.06268310546875
    7. 'i' → logprob: -15.25018310546875
    8. 'max' → logprob: -15.31268310546875
    9. '```' → logprob: -15.43768310546875
    10. 'j' → logprob: -15.43768310546875

Token 937: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.010472421534359455
    2. '[j' → logprob: -5.010472297668457
    3. '[i' → logprob: -5.635472297668457
    4. ' ][' → logprob: -9.385472297668457
    5. '[' → logprob: -10.510472297668457
    6. '   ' → logprob: -10.885472297668457
    7. ']' → logprob: -11.010472297668457
    8. ')[' → logprob: -11.260472297668457
    9. '```' → logprob: -12.885472297668457
    10. ' ' → logprob: -12.885472297668457

Token 938: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.080963092041202e-06
    2. ' j' → logprob: -12.625004768371582
    3. '[j' → logprob: -14.250004768371582
    4. '0' → logprob: -15.000004768371582
    5. '   ' → logprob: -15.250004768371582
    6. '][' → logprob: -15.750004768371582
    7. '```' → logprob: -16.0000057220459
    8. '	j' → logprob: -16.1250057220459
    9. ':j' → logprob: -17.0000057220459
    10. ',j' → logprob: -17.0000057220459

Token 939: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004137496289331466
    2. '[' → logprob: -8.25041389465332
    3. '+' → logprob: -9.12541389465332
    4. ' ][' → logprob: -10.62541389465332
    5. ']' → logprob: -11.12541389465332
    6. '```' → logprob: -13.37541389465332
    7. '   ' → logprob: -13.62541389465332
    8. ''][' → logprob: -15.25041389465332
    9. ')[' → logprob: -15.50041389465332
    10. ']][' → logprob: -15.87541389465332

Token 940: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.802049756515771e-05
    2. '2' → logprob: -9.625067710876465
    3. '1' → logprob: -14.375067710876465
    4. '   ' → logprob: -14.750067710876465
    5. ' ' → logprob: -15.500067710876465
    6. '[' → logprob: -15.500067710876465
    7. '```' → logprob: -15.875067710876465
    8. ']' → logprob: -16.62506866455078
    9. '
' → logprob: -16.87506866455078
    10. '(' → logprob: -17.06256866455078

Token 941: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009610046399757266
    2. '],' → logprob: -7.000960826873779
    3. ' ,' → logprob: -10.000961303710938
    4. 'dp' → logprob: -13.500961303710938
    5. '           ' → logprob: -13.750961303710938
    6. ',
' → logprob: -14.625961303710938
    7. '   ' → logprob: -15.250961303710938
    8. ' ],' → logprob: -15.750961303710938
    9. '(dp' → logprob: -16.000961303710938
    10. '               ' → logprob: -16.250961303710938

Token 942: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000287795381154865
    2. ' ' → logprob: -8.875288009643555
    3. 'dp' → logprob: -9.125288009643555
    4. '   ' → logprob: -10.500288009643555
    5. '0' → logprob: -12.125288009643555
    6. '       ' → logprob: -13.375288009643555
    7. '           ' → logprob: -13.375288009643555
    8. '                   ' → logprob: -14.500288009643555
    9. ' dp' → logprob: -14.500288009643555
    10. '               ' → logprob: -15.250288009643555

Token 943: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004658233083318919
    2. 'dp' → logprob: -8.000465393066406
    3. '0' → logprob: -9.000465393066406
    4. 'max' → logprob: -12.500465393066406
    5. ' ' → logprob: -13.625465393066406
    6. '   ' → logprob: -14.125465393066406
    7. '2' → logprob: -14.375465393066406
    8. 'INF' → logprob: -15.750465393066406
    9. '(dp' → logprob: -16.312965393066406
    10. '```' → logprob: -16.375465393066406

Token 944: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004087066277861595
    2. ')
' → logprob: -5.504086971282959
    3. ' )' → logprob: -12.629087448120117
    4. '           ' → logprob: -12.754087448120117
    5. '       ' → logprob: -14.129087448120117
    6. ')

' → logprob: -14.379087448120117
    7. ')
' → logprob: -14.379087448120117
    8. '   ' → logprob: -15.504087448120117
    9. '               ' → logprob: -16.129087448120117
    10. ')
/' → logprob: -16.754087448120117

Token 945: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02398388274013996
    2. '<|end|>' → logprob: -3.898983955383301
    3. '           ' → logprob: -6.648983955383301
    4. ' for' → logprob: -7.648983955383301
    5. 'for' → logprob: -7.773983955383301
    6. '        
' → logprob: -7.773983955383301
    7. '<|end|>' → logprob: -8.8989839553833
    8. ' if' → logprob: -8.8989839553833
    9. '```' → logprob: -9.1489839553833
    10. '   ' → logprob: -9.2739839553833

Token 946: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006642425432801247
    2. ' if' → logprob: -5.2566423416137695
    3. 'if' (adapté à ' if') → logprob: -6.6316423416137695
    4. '<|end|>' → logprob: -10.13164234161377
    5. '           ' → logprob: -11.13164234161377
    6. '   ' → logprob: -11.25664234161377
    7. ' ' → logprob: -12.13164234161377
    8. 'for' → logprob: -12.25664234161377
    9. ' for' → logprob: -12.50664234161377
    10. '```' → logprob: -13.00664234161377

Token 947: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.4741152822971344
    2. 'j' → logprob: -0.974115252494812
    3. '   ' → logprob: -10.474115371704102
    4. '    ' → logprob: -12.724115371704102
    5. ' ' → logprob: -13.099115371704102
    6. '  ' → logprob: -13.474115371704102
    7. '	j' → logprob: -13.724115371704102
    8. '(j' → logprob: -13.849115371704102
    9. ' ' → logprob: -14.974115371704102
    10. ' (' → logprob: -15.474115371704102

Token 948: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.16046123206615448
    2. '<' → logprob: -1.910461187362671
    3. '<N' → logprob: -8.41046142578125
    4. '+' → logprob: -12.16046142578125
    5. '<J' → logprob: -13.03546142578125
    6. '<n' → logprob: -13.03546142578125
    7. '[j' → logprob: -13.66046142578125
    8. '<len' → logprob: -13.91046142578125
    9. '<M' → logprob: -14.41046142578125
    10. '[' → logprob: -14.53546142578125

Token 949: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0019286326132714748
    2. ' N' → logprob: -6.251928806304932
    3. '	N' → logprob: -17.626928329467773
    4. '   ' → logprob: -18.126928329467773
    5. '(N' → logprob: -18.376928329467773
    6. ' ' → logprob: -18.626928329467773
    7. '_N' → logprob: -19.876928329467773
    8. ' ' → logprob: -20.251928329467773
    9. '=N' → logprob: -20.251928329467773
    10. '  ' → logprob: -20.376928329467773

Token 950: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6931649446487427
    2. 'and' → logprob: -0.6931649446487427
    3. '       ' → logprob: -11.818164825439453
    4. '   ' → logprob: -12.818164825439453
    5. '           ' → logprob: -13.443164825439453
    6. '```' → logprob: -13.568164825439453
    7. '[j' → logprob: -13.818164825439453
    8. '>' → logprob: -13.818164825439453
    9. '        ' → logprob: -13.943164825439453
    10. ' ' → logprob: -15.193164825439453

Token 951: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.5759463310241699
    2. ' T' → logprob: -0.8259463310241699
    3. ' ' → logprob: -12.700946807861328
    4. ' ' → logprob: -12.950946807861328
    5. '   ' → logprob: -13.950946807861328
    6. ' (' → logprob: -15.700946807861328
    7. '  ' → logprob: -16.075946807861328
    8. '```' → logprob: -16.450946807861328
    9. '    ' → logprob: -16.950946807861328
    10. '(T' → logprob: -17.200946807861328

Token 952: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.128163257315464e-07
    2. 'j' → logprob: -15.5
    3. '```' → logprob: -17.5
    4. '[i' → logprob: -17.875
    5. '[
' → logprob: -18.5
    6. ' [' → logprob: -18.5
    7. '   ' → logprob: -19.375
    8. '[' → logprob: -19.5
    9. '
' → logprob: -20.0
    10. '+j' → logprob: -20.375

Token 953: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004597218707203865
    2. ']==' → logprob: -5.629597187042236
    3. '+' → logprob: -7.504597187042236
    4. '[j' → logprob: -8.379597663879395
    5. '][' → logprob: -8.629597663879395
    6. ' ]' → logprob: -11.129597663879395
    7. ']=='' → logprob: -11.754597663879395
    8. '==' → logprob: -11.879597663879395
    9. '   ' → logprob: -13.379597663879395
    10. '[i' → logprob: -13.504597663879395

Token 954: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.018641138449311256
    2. ' ==' → logprob: -4.018640995025635
    3. ']==' → logprob: -8.143641471862793
    4. ']' → logprob: -9.143641471862793
    5. '=='' → logprob: -10.018641471862793
    6. '[' → logprob: -10.268641471862793
    7. '=' → logprob: -11.518641471862793
    8. '[j' → logprob: -13.268641471862793
    9. '==
' → logprob: -13.893641471862793
    10. ']=='' → logprob: -14.518641471862793

Token 955: ' '' (ID: 461)
  Prédit: ''I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''I' → logprob: -0.0031797364354133606
    2. ' '' → logprob: -6.128179550170898
    3. 'I' → logprob: -7.628179550170898
    4. ''' → logprob: -7.753179550170898
    5. ' I' → logprob: -9.628179550170898
    6. ' ' → logprob: -12.628179550170898
    7. ''O' → logprob: -13.003179550170898
    8. '‘I' → logprob: -13.003179550170898
    9. '’I' → logprob: -13.253179550170898
    10. '"I' → logprob: -13.503179550170898

Token 956: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.018161997199058533
    2. ''I' → logprob: -4.018161773681641
    3. ''' → logprob: -12.26816177368164
    4. '"I' → logprob: -12.89316177368164
    5. ''i' → logprob: -13.51816177368164
    6. '`' → logprob: -13.89316177368164
    7. ' I' → logprob: -14.39316177368164
    8. '‘I' → logprob: -14.64316177368164
    9. '’I' → logprob: -14.89316177368164
    10. '```' → logprob: -15.14316177368164

Token 957: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8681617379188538
    2. ']' → logprob: -1.493161678314209
    3. ':' → logprob: -1.743161678314209
    4. ']:
' → logprob: -2.243161678314209
    5. ']:' → logprob: -3.368161678314209
    6. '):
' → logprob: -3.868161678314209
    7. '           ' → logprob: -5.118161678314209
    8. '][' → logprob: -5.993161678314209
    9. ')' → logprob: -6.118161678314209
    10. '[' → logprob: -6.243161678314209

Token 958: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07207822799682617
    2. ' dp' → logprob: -2.697078227996826
    3. 'dp' → logprob: -6.697078227996826
    4. '(dp' → logprob: -7.697078227996826
    5. '	dp' → logprob: -8.947078704833984
    6. '	       ' → logprob: -9.572078704833984
    7. '[' → logprob: -9.822078704833984
    8. '          ' → logprob: -9.947078704833984
    9. ' =' → logprob: -10.822078704833984
    10. '               ' → logprob: -11.072078704833984

Token 959: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.1270727813243866
    2. ' dp' → logprob: -2.127072811126709
    3. '           ' → logprob: -8.87707233428955
    4. '	dp' → logprob: -13.00207233428955
    5. '(dp' → logprob: -14.12707233428955
    6. '               ' → logprob: -14.12707233428955
    7. '   ' → logprob: -14.87707233428955
    8. '_dp' → logprob: -15.00207233428955
    9. ' ' → logprob: -15.12707233428955
    10. 'max' → logprob: -15.37707233428955

Token 960: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005610156804323196
    2. '[' → logprob: -7.500561237335205
    3. '[j' → logprob: -11.875560760498047
    4. 'i' → logprob: -14.250560760498047
    5. '   ' → logprob: -14.875560760498047
    6. '0' → logprob: -16.500560760498047
    7. ' [' → logprob: -18.000560760498047
    8. '       ' → logprob: -18.625560760498047
    9. '           ' → logprob: -19.375560760498047
    10. ' ' → logprob: -19.375560760498047

Token 961: '][' (ID: 2696)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3591915965080261
    2. '][' → logprob: -1.359191656112671
    3. '[j' → logprob: -3.109191656112671
    4. '+j' → logprob: -8.60919189453125
    5. 'j' → logprob: -10.35919189453125
    6. '   ' → logprob: -10.98419189453125
    7. '[' → logprob: -11.23419189453125
    8. '[i' → logprob: -13.23419189453125
    9. '+[' → logprob: -13.23419189453125
    10. ' +' → logprob: -13.85919189453125

Token 962: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.9361264946837764e-07
    2. ' j' → logprob: -16.125
    3. '[j' → logprob: -17.25
    4. '   ' → logprob: -18.25
    5. '	j' → logprob: -19.125
    6. ':j' → logprob: -20.375
    7. '(j' → logprob: -21.125
    8. '$j' → logprob: -21.375
    9. '
' → logprob: -21.75
    10. '=j' → logprob: -21.875

Token 963: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.128163257315464e-07
    2. ' +' → logprob: -15.625
    3. '+j' → logprob: -17.75
    4. '1' → logprob: -19.875
    5. '＋' → logprob: -21.125
    6. '+
' → logprob: -21.125
    7. '+[' → logprob: -21.875
    8. '```' → logprob: -21.875
    9. '   ' → logprob: -22.625
    10. '[' → logprob: -22.625

Token 964: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16022758185863495
    2. '+' → logprob: -1.9102275371551514
    3. 'j' → logprob: -12.91022777557373
    4. ' +' → logprob: -14.66022777557373
    5. '   ' → logprob: -15.91022777557373
    6. ' ' → logprob: -15.91022777557373
    7. '```' → logprob: -16.035226821899414
    8. '{' → logprob: -17.035226821899414
    9. '+
' → logprob: -17.535226821899414
    10. '+j' → logprob: -17.660226821899414

Token 965: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.012551332823932171
    2. '[' → logprob: -4.387551307678223
    3. ']' → logprob: -10.887551307678223
    4. ' ][' → logprob: -11.262551307678223
    5. '```' → logprob: -12.887551307678223
    6. '>[' → logprob: -13.512551307678223
    7. ')[' → logprob: -13.887551307678223
    8. ''][' → logprob: -13.887551307678223
    9. '}[' → logprob: -13.887551307678223
    10. '[j' → logprob: -14.137551307678223

Token 966: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. 'max' → logprob: -14.250000953674316
    3. '0' → logprob: -16.375
    4. ' ' → logprob: -17.0
    5. '   ' → logprob: -17.875
    6. '
' → logprob: -19.0
    7. '```' → logprob: -19.5
    8. '[' → logprob: -19.5
    9. '  ' → logprob: -20.25
    10. '    ' → logprob: -21.375

Token 967: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019956084433943033
    2. ']=' → logprob: -6.25199556350708
    3. '=' → logprob: -9.876996040344238
    4. ')' → logprob: -11.501996040344238
    5. ' ]' → logprob: -12.501996040344238
    6. '])' → logprob: -14.251996040344238
    7. ']+=' → logprob: -14.876996040344238
    8. '[' → logprob: -15.501996040344238
    9. ']
' → logprob: -15.626996040344238
    10. '   ' → logprob: -16.376995086669922

Token 968: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002063307212665677
    2. ']' → logprob: -7.002063274383545
    3. ' =' → logprob: -7.127063274383545
    4. ']=' → logprob: -8.002063751220703
    5. '[' → logprob: -11.502063751220703
    6. ')' → logprob: -13.877063751220703
    7. '=max' → logprob: -14.002063751220703
    8. ')=' → logprob: -14.877063751220703
    9. '           ' → logprob: -15.002063751220703
    10. '][' → logprob: -15.127063751220703

Token 969: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -2.1008713702030946e-06
    2. ' max' → logprob: -13.250001907348633
    3. '1' → logprob: -15.250001907348633
    4. '   ' → logprob: -21.250001907348633
    5. '	max' → logprob: -21.375001907348633
    6. '(max' → logprob: -22.500001907348633
    7. 'maximum' → logprob: -23.500001907348633
    8. '=max' → logprob: -23.625001907348633
    9. '[max' → logprob: -24.000001907348633
    10. '           ' → logprob: -24.000001907348633

Token 970: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -13.625000953674316
    3. 'dp' → logprob: -18.750001907348633
    4. ' (' → logprob: -18.750001907348633
    5. '(
' → logprob: -19.000001907348633
    6. '(dt' → logprob: -20.625001907348633
    7. '(df' → logprob: -21.250001907348633
    8. '(lp' → logprob: -21.500001907348633
    9. '(max' → logprob: -21.875001907348633
    10. '```' → logprob: -21.875001907348633

Token 971: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001443035143893212
    2. 'dp' → logprob: -9.250144004821777
    3. '[j' → logprob: -10.000144004821777
    4. '(dp' → logprob: -14.000144004821777
    5. '(i' → logprob: -14.125144004821777
    6. '[' → logprob: -14.250144004821777
    7. 'i' → logprob: -15.500144004821777
    8. '_dp' → logprob: -15.750144004821777
    9. '{i' → logprob: -16.500144958496094
    10. ' dp' → logprob: -16.875144958496094

Token 972: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.5988873839378357
    2. '[i' → logprob: -0.8488873839378357
    3. '+' → logprob: -3.9738874435424805
    4. '][' → logprob: -5.5988874435424805
    5. '[' → logprob: -9.22388744354248
    6. '```' → logprob: -10.84888744354248
    7. ')[' → logprob: -11.09888744354248
    8. 'i' → logprob: -11.84888744354248
    9. '}[' → logprob: -11.84888744354248
    10. '[
' → logprob: -11.97388744354248

Token 973: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.1008713702030946e-06
    2. '+' → logprob: -14.250001907348633
    3. ' j' → logprob: -14.250001907348633
    4. '   ' → logprob: -15.250001907348633
    5. '[j' → logprob: -15.500001907348633
    6. ':j' → logprob: -16.625001907348633
    7. '```' → logprob: -16.750001907348633
    8. '(j' → logprob: -17.000001907348633
    9. '$j' → logprob: -17.375001907348633
    10. '           ' → logprob: -17.875001907348633

Token 974: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0012803568970412016
    2. '][' → logprob: -6.876280307769775
    3. '[j' → logprob: -9.251280784606934
    4. '+j' → logprob: -9.251280784606934
    5. 'j' → logprob: -10.251280784606934
    6. '[' → logprob: -11.751280784606934
    7. ']+' → logprob: -12.251280784606934
    8. '1' → logprob: -12.876280784606934
    9. '```' → logprob: -13.001280784606934
    10. ']' → logprob: -14.126280784606934

Token 975: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6060808522743173e-05
    2. '+' → logprob: -10.875025749206543
    3. 'j' → logprob: -12.000025749206543
    4. '   ' → logprob: -14.875025749206543
    5. '```' → logprob: -16.12502670288086
    6. ' ' → logprob: -16.50002670288086
    7. '
' → logprob: -16.87502670288086
    8. 'N' → logprob: -17.56252670288086
    9. '[j' → logprob: -17.75002670288086
    10. '     ' → logprob: -18.06252670288086

Token 976: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.4575522243976593
    2. '][' → logprob: -1.082552194595337
    3. '[' → logprob: -3.582552194595337
    4. '[i' → logprob: -8.457551956176758
    5. '1' → logprob: -8.832551956176758
    6. ']' → logprob: -9.707551956176758
    7. '```' → logprob: -9.832551956176758
    8. ')[' → logprob: -10.082551956176758
    9. '
' → logprob: -10.832551956176758
    10. 'j' → logprob: -11.082551956176758

Token 977: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003676324849948287
    2. 'j' → logprob: -8.000367164611816
    3. '[' → logprob: -11.625367164611816
    4. '(' → logprob: -12.250367164611816
    5. '0' → logprob: -12.250367164611816
    6. 'dp' → logprob: -12.500367164611816
    7. '   ' → logprob: -13.250367164611816
    8. '[j' → logprob: -13.250367164611816
    9. '
' → logprob: -13.500367164611816
    10. ']' → logprob: -13.500367164611816

Token 978: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.009794929064810276
    2. ',' → logprob: -4.75979471206665
    3. ']+' → logprob: -7.25979471206665
    4. ']' → logprob: -8.259795188903809
    5. '+' → logprob: -8.634795188903809
    6. ' ],' → logprob: -10.634795188903809
    7. '           ' → logprob: -12.759795188903809
    8. '][' → logprob: -13.134795188903809
    9. '[' → logprob: -13.259795188903809
    10. '),' → logprob: -13.384795188903809

Token 979: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. 'max' → logprob: -16.8750057220459
    4. '   ' → logprob: -17.0000057220459
    5. 'dp' → logprob: -17.2500057220459
    6. '```' → logprob: -19.8750057220459
    7. '       ' → logprob: -20.1250057220459
    8. '  ' → logprob: -20.9375057220459
    9. ')' → logprob: -21.0625057220459
    10. ' max' → logprob: -21.3750057220459

Token 980: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '   ' → logprob: -19.625
    4. 'max' → logprob: -20.0
    5. '```' → logprob: -20.25
    6. '
' → logprob: -21.0
    7. ')' → logprob: -21.8125
    8. '１' → logprob: -22.125
    9. '
' → logprob: -22.4375
    10. '`' → logprob: -22.5625

Token 981: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7610454708337784e-05
    2. '           ' → logprob: -11.000027656555176
    3. ')
' → logprob: -12.250027656555176
    4. ' )' → logprob: -12.750027656555176
    5. '       ' → logprob: -13.500027656555176
    6. '   ' → logprob: -13.750027656555176
    7. '               ' → logprob: -15.500027656555176
    8. '          ' → logprob: -16.00002670288086
    9. ')

' → logprob: -16.75002670288086
    10. '))' → logprob: -17.00002670288086

Token 982: '#' (ID: 2)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.23563075065612793
    2. '#' → logprob: -1.860630750656128
    3. 'result' → logprob: -3.610630750656128
    4. 'print' → logprob: -4.485630989074707
    5. 'answer' → logprob: -4.985630989074707
    6. 'for' → logprob: -5.110630989074707
    7. '<|end|>' → logprob: -6.860630989074707
    8. '```' → logprob: -7.485630989074707
    9. 'best' → logprob: -7.860630989074707
    10. 'pass' → logprob: -8.610630989074707

Token 983: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01145991776138544
    2. 'max' → logprob: -4.511459827423096
    3. '#' → logprob: -8.886460304260254
    4. ' for' → logprob: -8.886460304260254
    5. 'result' → logprob: -9.136460304260254
    6. '```' → logprob: -11.511460304260254
    7. 'answer' → logprob: -11.761460304260254
    8. 'print' → logprob: -12.386460304260254
    9. 'best' → logprob: -13.511460304260254
    10. 'res' → logprob: -13.511460304260254

Token 984: ' applique' (ID: 180579)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3250678479671478
    2. '#' → logprob: -2.2000677585601807
    3. 'ans' → logprob: -2.7000677585601807
    4. 's' → logprob: -3.2000677585601807
    5. 'answer' → logprob: -3.8250677585601807
    6. 'result' → logprob: -4.57506799697876
    7. '=' → logprob: -5.07506799697876
    8. 'for' → logprob: -5.45006799697876
    9. 'final' → logprob: -5.45006799697876
    10. ' =' → logprob: -5.82506799697876

Token 985: ' une' (ID: 2463)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016451673582196236
    2. ' for' → logprob: -4.141451835632324
    3. 'max' → logprob: -8.016451835632324
    4. '#' → logprob: -10.641451835632324
    5. 'result' → logprob: -11.266451835632324
    6. ' max' → logprob: -11.891451835632324
    7. '
' → logprob: -11.891451835632324
    8. 'ans' → logprob: -12.391451835632324
    9. 'range' → logprob: -12.391451835632324
    10. '```' → logprob: -12.391451835632324

Token 986: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019202042371034622
    2. ' for' → logprob: -4.89420223236084
    3. 'f' → logprob: -6.14420223236084
    4. '#' → logprob: -6.26920223236084
    5. 'double' → logprob: -7.01920223236084
    6. '
' → logprob: -7.26920223236084
    7. 'de' → logprob: -7.39420223236084
    8. 'pour' → logprob: -7.39420223236084
    9. 'range' → logprob: -8.39420223236084
    10. 'der' → logprob: -8.39420223236084

Token 987: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0027334284968674183
    2. ' for' → logprob: -6.00273323059082
    3. 'while' → logprob: -8.50273323059082
    4. 'pour' → logprob: -10.37773323059082
    5. 'to' → logprob: -12.00273323059082
    6. 'changed' → logprob: -12.37773323059082
    7. '   ' → logprob: -13.37773323059082
    8. 'again' → logprob: -13.50273323059082
    9. '#' → logprob: -13.62773323059082
    10. 'max' → logprob: -13.62773323059082

Token 988: ' tenter' (ID: 109833)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23706308007240295
    2. 'True' → logprob: -1.8620630502700806
    3. ' True' → logprob: -3.11206316947937
    4. 'for' → logprob: -5.612062931060791
    5. 'range' → logprob: -5.987062931060791
    6. 'max' → logprob: -6.112062931060791
    7. '_true' → logprob: -7.487062931060791
    8. ' _' → logprob: -7.487062931060791
    9. '_range' → logprob: -8.23706340789795
    10. '_max' → logprob: -8.61206340789795

Token 989: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08926583081483841
    2. ' for' → logprob: -2.964265823364258
    3. '   ' → logprob: -4.214265823364258
    4. ' de' → logprob: -5.464265823364258
    5. ' ' → logprob: -6.089265823364258
    6. ' encore' → logprob: -6.589265823364258
    7. 'while' → logprob: -6.589265823364258
    8. '100' → logprob: -6.714265823364258
    9. 'de' → logprob: -6.839265823364258
    10. '       ' → logprob: -7.339265823364258

Token 990: ' prolong' (ID: 35010)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0516921691596508
    2. 'rel' → logprob: -4.051692008972168
    3. 'range' → logprob: -4.551692008972168
    4. 'expand' → logprob: -5.176692008972168
    5. 'extend' → logprob: -6.176692008972168
    6. 'repeat' → logprob: -6.176692008972168
    7. 'prop' → logprob: -6.176692008972168
    8. 'max' → logprob: -6.301692008972168
    9. 'ré' → logprob: -6.426692008972168
    10. ' for' → logprob: -6.801692008972168

Token 991: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.1398757123970427e-05
    2. 'ger' → logprob: -12.500011444091797
    3. 'iter' → logprob: -13.125011444091797
    4. 'ter' → logprob: -13.375011444091797
    5. 'for' → logprob: -14.000011444091797
    6. 'ver' → logprob: -14.000011444091797
    7. 'ent' → logprob: -14.625011444091797
    8. '```' → logprob: -14.625011444091797
    9. '#' → logprob: -15.500011444091797
    10. 'ation' → logprob: -15.625011444091797

Token 992: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005670425482094288
    2. ' for' → logprob: -5.505670547485352
    3. 'while' → logprob: -6.505670547485352
    4. 'changed' → logprob: -9.505670547485352
    5. '
' → logprob: -12.005670547485352
    6. '```' → logprob: -12.255670547485352
    7. 'True' → logprob: -12.755670547485352
    8. 'found' → logprob: -13.255670547485352
    9. 'pour' → logprob: -13.880670547485352
    10. 'true' → logprob: -14.130670547485352

Token 993: ' manière' (ID: 35013)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7688177824020386
    2. 'plus' → logprob: -0.8938177824020386
    3. ' nouveau' → logprob: -3.768817901611328
    4. 'l' → logprob: -4.268817901611328
    5. 'for' → logprob: -4.393817901611328
    6. 'nombre' → logprob: -4.518817901611328
    7. '2' → logprob: -4.768817901611328
    8. 'max' → logprob: -4.768817901611328
    9. 's' → logprob: -5.018817901611328
    10. 'M' → logprob: -5.143817901611328

Token 994: ' fiable' (ID: 116385)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.1301010400056839
    2. 'continue' → logprob: -3.255100965499878
    3. 'stable' → logprob: -3.255100965499878
    4. '1' → logprob: -5.005101203918457
    5. 'True' → logprob: -5.005101203918457
    6. 'for' → logprob: -5.380101203918457
    7. 'une' → logprob: -5.380101203918457
    8. '+' → logprob: -5.505101203918457
    9. 'contin' → logprob: -6.005101203918457
    10. 'suite' → logprob: -6.005101203918457

Token 995: ' :

' (ID: 11287)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011910604080185294
    2. ' for' → logprob: -6.751191139221191
    3. '```' → logprob: -10.876191139221191
    4. '
' → logprob: -14.126191139221191
    5. 'while' → logprob: -14.626191139221191
    6. '<|end|>' → logprob: -15.626191139221191
    7. '``' → logprob: -15.876191139221191
    8. 'from' → logprob: -16.126190185546875
    9. '   ' → logprob: -17.126190185546875
    10. 'and' → logprob: -17.126190185546875

Token 996: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.236549335066229e-05
    2. 'changed' → logprob: -11.000021934509277
    3. '```' → logprob: -12.375021934509277
    4. 'while' → logprob: -14.375021934509277
    5. ' for' → logprob: -14.875021934509277
    6. 'found' → logprob: -15.000021934509277
    7. 'updated' → logprob: -16.125022888183594
    8. 'done' → logprob: -18.000022888183594
    9. 'from' → logprob: -18.125022888183594
    10. 'modified' → logprob: -19.125022888183594

Token 997: ' Nous' (ID: 20193)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0020032229367643595
    2. 'changed' → logprob: -6.252003192901611
    3. 'updated' → logprob: -9.62700366973877
    4. ' for' → logprob: -12.50200366973877
    5. 'changes' → logprob: -13.37700366973877
    6. 'change' → logprob: -13.50200366973877
    7. '```' → logprob: -14.37700366973877
    8. 'modified' → logprob: -14.50200366973877
    9. 'while' → logprob: -15.37700366973877
    10. 'found' → logprob: -15.50200366973877

Token 998: ' ré' (ID: 3146)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011008031433448195
    2. ' for' → logprob: -7.251101016998291
    3. '=' → logprob: -8.501100540161133
    4. '
' → logprob: -9.001100540161133
    5. ' =' → logprob: -10.376100540161133
    6. '```' → logprob: -11.501100540161133
    7. 'continue' → logprob: -11.876100540161133
    8. '#' → logprob: -12.001100540161133
    9. '=
' → logprob: -12.626100540161133
    10. 'max' → logprob: -13.751100540161133

Token 999: 'it' (ID: 278)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02010384574532509
    2. 'import' → logprob: -4.145103931427002
    3. 'sum' → logprob: -6.770103931427002
    4. 'p' → logprob: -7.020103931427002
    5. 'main' → logprob: -8.020103454589844
    6. 'pe' → logprob: -8.645103454589844
    7. '#' → logprob: -8.895103454589844
    8. 'cur' → logprob: -9.020103454589844
    9. 'peat' → logprob: -9.395103454589844
    10. 'current' → logprob: -9.395103454589844

Token 1000: 'érons' (ID: 167835)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6504620313644409
    2. 'érons' → logprob: -0.7754620313644409
    3. 'érer' → logprob: -4.4004621505737305
    4. '#' → logprob: -6.2754621505737305
    5. 'érant' → logprob: -6.9004621505737305
    6. 'ér' → logprob: -7.0254621505737305
    7. 'for' → logprob: -8.02546215057373
    8. 'èr' → logprob: -8.02546215057373
    9. 'ons' → logprob: -8.52546215057373
    10. 'rer' → logprob: -8.65046215057373

Token 1001: ' plusieurs' (ID: 20875)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01410426665097475
    2. ' for' → logprob: -4.63910436630249
    3. '10' → logprob: -6.76410436630249
    4. '3' → logprob: -7.13910436630249
    5. '4' → logprob: -7.13910436630249
    6. '5' → logprob: -7.51410436630249
    7. '
' → logprob: -7.63910436630249
    8. '6' → logprob: -8.514103889465332
    9. '7' → logprob: -9.014103889465332
    10. '```' → logprob: -9.639103889465332

Token 1002: ' fois' (ID: 14697)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9197607040405273
    2. 'fois' → logprob: -1.0447607040405273
    3. ' fois' → logprob: -1.4197607040405273
    4. 'times' → logprob: -5.169760704040527
    5. ' times' → logprob: -7.169760704040527
    6. ' for' → logprob: -7.294760704040527
    7. ' vezes' → logprob: -9.169760704040527
    8. 'iterations' → logprob: -9.169760704040527
    9. 'pass' → logprob: -9.294760704040527
    10. ' veces' → logprob: -9.669760704040527

Token 1003: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004349417518824339
    2. ' for' → logprob: -5.879349231719971
    3. '
' → logprob: -6.504349231719971
    4. 'while' → logprob: -10.879349708557129
    5. '```' → logprob: -11.004349708557129
    6. 'changed' → logprob: -13.004349708557129
    7. '10' → logprob: -13.379349708557129
    8. 'max' → logprob: -13.754349708557129
    9. '_' → logprob: -14.504349708557129
    10. ' 
' → logprob: -14.879349708557129

Token 1004: ' prop' (ID: 5892)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.45174431800842285
    2. 'True' → logprob: -1.7017443180084229
    3. 'for' → logprob: -2.326744318008423
    4. '_' → logprob: -3.201744318008423
    5. '_true' → logprob: -3.451744318008423
    6. ' for' → logprob: -4.701744079589844
    7. '_range' → logprob: -7.951744079589844
    8. '```' → logprob: -8.076744079589844
    9. 'range' → logprob: -8.451744079589844
    10. '_TRUE' → logprob: -8.701744079589844

Token 1005: 'ager' (ID: 1790)
  Prédit: 'ager'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ager' → logprob: -0.004494684748351574
    2. 'oser' → logprob: -5.629494667053223
    3. 'pager' → logprob: -7.754494667053223
    4. 'oger' → logprob: -8.754494667053223
    5. 'r' → logprob: -9.879494667053223
    6. 'ag' → logprob: -10.254494667053223
    7. 'roger' → logprob: -10.254494667053223
    8. 'érer' → logprob: -10.379494667053223
    9. 'er' → logprob: -10.629494667053223
    10. 'ro' → logprob: -10.754494667053223

Token 1006: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19068683683872223
    2. ' for' → logprob: -2.3156869411468506
    3. 'changes' → logprob: -3.1906869411468506
    4. 'the' → logprob: -3.9406869411468506
    5. ' the' → logprob: -5.1906867027282715
    6. 'updates' → logprob: -5.6906867027282715
    7. ' True' → logprob: -6.4406867027282715
    8. ' changes' → logprob: -6.5656867027282715
    9. 'True' → logprob: -7.3156867027282715
    10. 'dp' → logprob: -7.4406867027282715

Token 1007: ' amélior' (ID: 118625)
  Prédit: 'updates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'updates' → logprob: -1.1530981063842773
    2. 'chang' → logprob: -1.2780981063842773
    3. 'val' → logprob: -1.7780981063842773
    4. 'mod' → logprob: -2.6530981063842773
    5. 'changes' → logprob: -3.0280981063842773
    6. 'max' → logprob: -3.5280981063842773
    7. 'dp' → logprob: -3.9030981063842773
    8. 'ch' → logprob: -4.278098106384277
    9. 'm' → logprob: -4.653098106384277
    10. ' changements' → logprob: -4.653098106384277

Token 1008: 'ations' (ID: 929)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.03664605692028999
    2. 'érations' → logprob: -4.536645889282227
    3. 'ations' → logprob: -5.036645889282227
    4. 'oration' → logprob: -5.411645889282227
    5. 'cements' → logprob: -6.036645889282227
    6. 'ancements' → logprob: -6.286645889282227
    7. '#' → logprob: -6.411645889282227
    8. 'ocations' → logprob: -6.411645889282227
    9. 'ements' → logprob: -7.161645889282227
    10. 'ort' → logprob: -7.286645889282227

Token 1009: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003255719493608922
    2. ' for' → logprob: -9.000325202941895
    3. 'changed' → logprob: -9.000325202941895
    4. 'while' → logprob: -10.250325202941895
    5. '```' → logprob: -10.750325202941895
    6. '
' → logprob: -11.125325202941895
    7. 'max' → logprob: -13.125325202941895
    8. 'updated' → logprob: -13.250325202941895
    9. 'found' → logprob: -13.250325202941895
    10. '``' → logprob: -14.500325202941895

Token 1010: 'DP' (ID: 16851)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007089786231517792
    2. '10' → logprob: -8.50070858001709
    3. ' for' → logprob: -8.62570858001709
    4. 'True' → logprob: -8.75070858001709
    5. '3' → logprob: -9.87570858001709
    6. '5' → logprob: -10.62570858001709
    7. '50' → logprob: -11.12570858001709
    8. '
' → logprob: -11.37570858001709
    9. '_' → logprob: -11.50070858001709
    10. '20' → logprob: -11.75070858001709

Token 1011: ' avec' (ID: 3937)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03969977796077728
    2. ' for' → logprob: -3.2896997928619385
    3. ')' → logprob: -7.289699554443359
    4. '=' → logprob: -8.16469955444336
    5. '
' → logprob: -8.28969955444336
    6. 'while' → logprob: -8.78969955444336
    7. ' =' → logprob: -9.03969955444336
    8. '):
' → logprob: -10.03969955444336
    9. ')
' → logprob: -10.28969955444336
    10. 'iterations' → logprob: -11.03969955444336

Token 1012: ' altern' (ID: 7310)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05279858782887459
    2. 'rel' → logprob: -3.8027985095977783
    3. 'for' → logprob: -5.177798748016357
    4. '```' → logprob: -5.802798748016357
    5. 'bou' → logprob: -5.802798748016357
    6. 'fix' → logprob: -6.052798748016357
    7. 'ré' → logprob: -6.052798748016357
    8. 'f' → logprob: -6.177798748016357
    9. 'con' → logprob: -6.427798748016357
    10. 'B' → logprob: -6.802798748016357

Token 1013: 'ance' (ID: 766)
  Prédit: 'ances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.6806378364562988
    2. 'ance' → logprob: -0.8056378364562988
    3. 'ations' → logprob: -3.305637836456299
    4. 'ation' → logprob: -5.430637836456299
    5. '#' → logprob: -5.555637836456299
    6. 'ences' → logprob: -7.805637836456299
    7. '```' → logprob: -7.805637836456299
    8. 'ence' → logprob: -8.55563735961914
    9. 'e' → logprob: -9.05563735961914
    10. '
' → logprob: -9.18063735961914

Token 1014: ')
' (ID: 446)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1175495982170105
    2. ' for' → logprob: -2.8675496578216553
    3. '
' → logprob: -3.6175496578216553
    4. '):
' → logprob: -4.492549419403076
    5. ')
' → logprob: -5.117549419403076
    6. ')' → logprob: -5.242549419403076
    7. 'pour' → logprob: -6.742549419403076
    8. '#' → logprob: -7.367549419403076
    9. 'while' → logprob: -7.492549419403076
    10. '```' → logprob: -7.867549419403076

Token 1015: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0017054134514182806
    2. 'changed' → logprob: -6.501705646514893
    3. 'updated' → logprob: -8.626705169677734
    4. 'while' → logprob: -11.001705169677734
    5. ' for' → logprob: -12.626705169677734
    6. 'changes' → logprob: -13.626705169677734
    7. '```' → logprob: -14.251705169677734
    8. 'max' → logprob: -14.376705169677734
    9. 'found' → logprob: -14.501705169677734
    10. 'done' → logprob: -15.751705169677734

Token 1016: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0034303157590329647
    2. '_k' → logprob: -6.003430366516113
    3. ' _' → logprob: -7.878430366516113
    4. 'k' → logprob: -9.003430366516113
    5. '_iter' → logprob: -9.253430366516113
    6. '_M' → logprob: -9.503430366516113
    7. '_i' → logprob: -9.753430366516113
    8. '_m' → logprob: -9.753430366516113
    9. '_step' → logprob: -10.253430366516113
    10. '_repeat' → logprob: -10.628430366516113

Token 1017: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02975187823176384
    2. 'in' → logprob: -3.529751777648926
    3. 'range' → logprob: -14.154751777648926
    4. '_' → logprob: -14.904751777648926
    5. ' ' → logprob: -14.904751777648926
    6. '```' → logprob: -17.279752731323242
    7. 'import' → logprob: -17.779752731323242
    8. 's' → logprob: -18.404752731323242
    9. '1' → logprob: -19.029752731323242
    10. '  ' → logprob: -19.279752731323242

Token 1018: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.318681188422488e-05
    2. ' range' → logprob: -11.25001335144043
    3. '(range' → logprob: -16.37501335144043
    4. '_' → logprob: -21.12501335144043
    5. '   ' → logprob: -22.12501335144043
    6. '```' → logprob: -22.25001335144043
    7. 'r' → logprob: -22.37501335144043
    8. '
' → logprob: -22.62501335144043
    9. '	range' → logprob: -22.75001335144043
    10. '10' → logprob: -22.87501335144043

Token 1019: '(max' (ID: 17178)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.4636654853820801
    2. 'max' → logprob: -1.83866548538208
    3. '10' → logprob: -2.33866548538208
    4. '100' → logprob: -3.08866548538208
    5. '(M' → logprob: -3.33866548538208
    6. '50' → logprob: -4.71366548538208
    7. '20' → logprob: -4.83866548538208
    8. '5' → logprob: -5.21366548538208
    9. '2' → logprob: -5.71366548538208
    10. '200' → logprob: -5.83866548538208

Token 1020: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -2.2723104848410003e-05
    2. '(' → logprob: -10.875022888183594
    3. 'M' → logprob: -12.625022888183594
    4. '(
' → logprob: -14.750022888183594
    5. '((' → logprob: -17.500022888183594
    6. ' (' → logprob: -17.625022888183594
    7. '   ' → logprob: -18.375022888183594
    8. ')' → logprob: -18.625022888183594
    9. '(len' → logprob: -18.875022888183594
    10. '```' → logprob: -19.125022888183594

Token 1021: ',N' (ID: 49539)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09728416800498962
    2. ',N' → logprob: -3.0972840785980225
    3. ',' → logprob: -3.4722840785980225
    4. 'N' → logprob: -4.347284317016602
    5. ' +' → logprob: -6.972284317016602
    6. '(N' → logprob: -6.972284317016602
    7. '),' → logprob: -8.347284317016602
    8. '+
' → logprob: -8.472284317016602
    9. '*N' → logprob: -8.472284317016602
    10. '*' → logprob: -9.097284317016602

Token 1022: ')):
' (ID: 22530)
  Prédit: ')):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.5606188774108887
    2. '+' → logprob: -1.0606188774108887
    3. ')):' → logprob: -2.8106188774108887
    4. '):
' → logprob: -4.810618877410889
    5. '*' → logprob: -4.810618877410889
    6. '):' → logprob: -5.810618877410889
    7. ' +' → logprob: -6.560618877410889
    8. ')+' → logprob: -6.560618877410889
    9. '   ' → logprob: -8.935619354248047
    10. ')' → logprob: -9.060619354248047

Token 1023: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008735861047171056
    2. ' for' → logprob: -7.125873565673828
    3. 'for' → logprob: -9.625873565673828
    4. '	for' → logprob: -13.500873565673828
    5. '   ' → logprob: -13.875873565673828
    6. '       ' → logprob: -14.875873565673828
    7. ' ' → logprob: -15.500873565673828
    8. '```' → logprob: -16.000873565673828
    9. '  ' → logprob: -17.250873565673828
    10. '    ' → logprob: -18.000873565673828

Token 1024: ' updated' (ID: 8489)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06273365765810013
    2. '   ' → logprob: -2.8127336502075195
    3. ' for' → logprob: -7.1877336502075195
    4. '	for' → logprob: -12.31273365020752
    5. '```' → logprob: -12.43773365020752
    6. '       ' → logprob: -14.06273365020752
    7. 'found' → logprob: -15.56273365020752
    8. 'updated' (adapté à ' updated') → logprob: -15.68773365020752
    9. 'changed' → logprob: -15.81273365020752
    10. ' ' → logprob: -16.187734603881836

Token 1025: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08001594245433807
    2. ' =' → logprob: -2.5800158977508545
    3. '=False' → logprob: -7.455016136169434
    4. '=True' → logprob: -7.580016136169434
    5. '   ' → logprob: -10.580016136169434
    6. '=
' → logprob: -12.080016136169434
    7. 'for' → logprob: -13.330016136169434
    8. ' ' → logprob: -14.455016136169434
    9. ' =
' → logprob: -14.580016136169434
    10. '  ' → logprob: -14.705016136169434

Token 1026: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00011033779446734115
    2. ' False' → logprob: -9.500110626220703
    3. 'True' → logprob: -10.250110626220703
    4. '   ' → logprob: -17.875110626220703
    5. ' True' → logprob: -19.750110626220703
    6. '(False' → logprob: -22.125110626220703
    7. 'false' → logprob: -22.125110626220703
    8. '0' → logprob: -23.250110626220703
    9. '  ' → logprob: -23.875110626220703
    10. ' ' → logprob: -24.000110626220703

Token 1027: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3171597421169281
    2. ' for' → logprob: -1.9421597719192505
    3. '
' → logprob: -2.692159652709961
    4. 'for' → logprob: -2.942159652709961
    5. '	for' → logprob: -5.442159652709961
    6. '<|end|>' → logprob: -6.442159652709961
    7. '```' → logprob: -7.067159652709961
    8. '       ' → logprob: -7.817159652709961
    9. '    
' → logprob: -7.942159652709961
    10. '<|end|>' → logprob: -9.317159652709961

Token 1028: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2675168514251709
    2. 'for' → logprob: -1.767516851425171
    3. ' for' → logprob: -2.767516851425171
    4. '       ' → logprob: -7.26751708984375
    5. '	for' → logprob: -8.14251708984375
    6. '```' → logprob: -8.89251708984375
    7. ' ' → logprob: -11.89251708984375
    8. '    ' → logprob: -12.64251708984375
    9. '<|end|>' → logprob: -12.76751708984375
    10. '           ' → logprob: -13.01751708984375

Token 1029: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.014239903539419174
    2. '   ' → logprob: -4.26423978805542
    3. ' for' → logprob: -9.514240264892578
    4. '	for' → logprob: -13.389240264892578
    5. 'new' → logprob: -13.889240264892578
    6. '       ' → logprob: -16.014240264892578
    7. '    
' → logprob: -18.389240264892578
    8. '```' → logprob: -18.639240264892578
    9. ' ' → logprob: -18.889240264892578
    10. 'next' → logprob: -19.264240264892578

Token 1030: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12694427371025085
    2. ' i' → logprob: -2.1269443035125732
    3. 'M' → logprob: -11.501944541931152
    4. ' M' → logprob: -12.876944541931152
    5. '   ' → logprob: -13.501944541931152
    6. '_i' → logprob: -14.251944541931152
    7. 'range' → logprob: -14.376944541931152
    8. ' in' → logprob: -15.501944541931152
    9. ' ' → logprob: -15.626944541931152
    10. ' range' → logprob: -16.001943588256836

Token 1031: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004120311699807644
    2. 'in' → logprob: -5.504120349884033
    3. ' ' → logprob: -11.004119873046875
    4. '   ' → logprob: -11.629119873046875
    5. 'range' → logprob: -11.754119873046875
    6. '    ' → logprob: -12.879119873046875
    7. '0' → logprob: -13.129119873046875
    8. ' range' → logprob: -14.504119873046875
    9. '  ' → logprob: -14.754119873046875
    10. '[' → logprob: -15.004119873046875

Token 1032: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015024791937321424
    2. ' range' → logprob: -6.501502513885498
    3. '0' → logprob: -16.501502990722656
    4. ' ' → logprob: -21.251502990722656
    5. '(range' → logprob: -21.251502990722656
    6. '   ' → logprob: -23.251502990722656
    7. '
' → logprob: -23.751502990722656
    8. '	range' → logprob: -24.126502990722656
    9. '  ' → logprob: -26.126502990722656
    10. '1' → logprob: -26.126502990722656

Token 1033: '(M' (ID: 6103)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.17587213218212128
    2. '(M' → logprob: -1.9258720874786377
    3. '0' → logprob: -4.175872325897217
    4. 'range' → logprob: -9.175871849060059
    5. '   ' → logprob: -10.425871849060059
    6. ' M' → logprob: -10.675871849060059
    7. '(' → logprob: -12.300871849060059
    8. ' ' → logprob: -14.300871849060059
    9. '[M' → logprob: -14.300871849060059
    10. '1' → logprob: -14.425871849060059

Token 1034: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.7385154428193346e-05
    2. ' +' → logprob: -10.37503719329834
    3. '+
' → logprob: -12.50003719329834
    4. '   ' → logprob: -13.37503719329834
    5. ')+' → logprob: -14.62503719329834
    6. '):
' → logprob: -15.62503719329834
    7. '       ' → logprob: -16.250038146972656
    8. '
' → logprob: -16.750038146972656
    9. ')' → logprob: -17.125038146972656
    10. '[' → logprob: -18.125038146972656

Token 1035: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.348472535610199
    2. '1' → logprob: -1.2234725952148438
    3. '```' → logprob: -11.598472595214844
    4. '   ' → logprob: -12.598472595214844
    5. ' ' → logprob: -12.848472595214844
    6. '0' → logprob: -13.223472595214844
    7. 'i' → logprob: -13.223472595214844
    8. ' +' → logprob: -13.348472595214844
    9. 'for' → logprob: -13.598472595214844
    10. 'M' → logprob: -13.598472595214844

Token 1036: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0015448570484295487
    2. '   ' → logprob: -6.876544952392578
    3. '):' → logprob: -8.126544952392578
    4. '       ' → logprob: -8.751544952392578
    5. '+' → logprob: -10.126544952392578
    6. ':
' → logprob: -11.876544952392578
    7. '):
' → logprob: -12.251544952392578
    8. '):

' → logprob: -13.876544952392578
    9. ':' → logprob: -14.001544952392578
    10. ',' → logprob: -14.251544952392578

Token 1037: '       ' (ID: 309)
  Prédit: '	for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.766147792339325
    2. '       ' → logprob: -0.891147792339325
    3. '   ' → logprob: -3.2661478519439697
    4. ' for' → logprob: -3.2661478519439697
    5. '```' → logprob: -3.5161478519439697
    6. '	' → logprob: -4.516147613525391
    7. 'for' → logprob: -5.641147613525391
    8. '	   ' → logprob: -5.766147613525391
    9. '	       ' → logprob: -7.766147613525391
    10. '    ' → logprob: -8.64114761352539

Token 1038: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.40431565046310425
    2. '       ' → logprob: -1.279315710067749
    3. '   ' → logprob: -3.029315710067749
    4. ' for' → logprob: -5.27931547164917
    5. '           ' → logprob: -7.65431547164917
    6. '	for' → logprob: -8.279315948486328
    7. '	   ' → logprob: -9.154315948486328
    8. '```' → logprob: -10.904315948486328
    9. '	       ' → logprob: -11.404315948486328
    10. ' ' → logprob: -11.904315948486328

Token 1039: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.048588622361421585
    2. ' j' → logprob: -3.048588514328003
    3. '   ' → logprob: -14.298588752746582
    4. '0' → logprob: -14.923588752746582
    5. 'N' → logprob: -16.423587799072266
    6. '	j' → logprob: -16.673587799072266
    7. ' ' → logprob: -17.298587799072266
    8. ' N' → logprob: -17.673587799072266
    9. 'range' → logprob: -17.923587799072266
    10. '$j' → logprob: -18.048587799072266

Token 1040: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014187601394951344
    2. 'in' → logprob: -4.264187812805176
    3. '<|end|>' → logprob: -11.764187812805176
    4. '       ' → logprob: -12.514187812805176
    5. '[' → logprob: -12.764187812805176
    6. ' ' → logprob: -13.014187812805176
    7. '(' → logprob: -13.514187812805176
    8. '0' → logprob: -14.139187812805176
    9. '           ' → logprob: -14.389187812805176
    10. 'range' → logprob: -14.639187812805176

Token 1041: ' range' (ID: 3352)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.10780932009220123
    2. '(N' → logprob: -2.98280930519104
    3. 'range' → logprob: -2.98280930519104
    4. '0' → logprob: -7.732809543609619
    5. ' range' → logprob: -7.982809543609619
    6. ' N' → logprob: -9.857809066772461
    7. '       ' → logprob: -10.732809066772461
    8. '   ' → logprob: -11.482809066772461
    9. '[N' → logprob: -11.982809066772461
    10. '           ' → logprob: -12.107809066772461

Token 1042: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -2.1008713702030946e-06
    2. 'N' → logprob: -13.875001907348633
    3. ' (' → logprob: -14.625001907348633
    4. '   ' → logprob: -16.000001907348633
    5. '(' → logprob: -16.125001907348633
    6. '[N' → logprob: -16.375001907348633
    7. 'range' → logprob: -16.625001907348633
    8. '(M' → logprob: -16.750001907348633
    9. '       ' → logprob: -17.125001907348633
    10. '<N' → logprob: -17.375001907348633

Token 1043: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.961759259458631e-06
    2. ' +' → logprob: -12.875004768371582
    3. '1' → logprob: -13.875004768371582
    4. '+
' → logprob: -14.375004768371582
    5. '+j' → logprob: -14.750004768371582
    6. '           ' → logprob: -16.2500057220459
    7. ')+' → logprob: -16.5000057220459
    8. '[' → logprob: -16.8750057220459
    9. '```' → logprob: -16.8750057220459
    10. 'j' → logprob: -17.3750057220459

Token 1044: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003825293097179383
    2. '+' → logprob: -7.875382423400879
    3. 'j' → logprob: -13.625382423400879
    4. '   ' → logprob: -14.750382423400879
    5. 'N' → logprob: -14.875382423400879
    6. '```' → logprob: -15.375382423400879
    7. ' ' → logprob: -15.875382423400879
    8. '
' → logprob: -16.875383377075195
    9. '+j' → logprob: -17.500383377075195
    10. '           ' → logprob: -17.750383377075195

Token 1045: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.011837674304842949
    2. '):' → logprob: -5.136837482452393
    3. '+' → logprob: -5.886837482452393
    4. '           ' → logprob: -6.886837482452393
    5. ':
' → logprob: -7.261837482452393
    6. ':' → logprob: -7.511837482452393
    7. '       ' → logprob: -8.01183795928955
    8. ')' → logprob: -9.26183795928955
    9. '[' → logprob: -9.76183795928955
    10. ',' → logprob: -9.88683795928955

Token 1046: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0024399817921221256
    2. '```' → logprob: -7.252439975738525
    3. ' for' → logprob: -7.502439975738525
    4. '       ' → logprob: -7.627439975738525
    5. '	       ' → logprob: -8.127440452575684
    6. '               ' → logprob: -8.752440452575684
    7. 'for' → logprob: -8.877440452575684
    8. '   ' → logprob: -10.252440452575684
    9. '<|end|>' → logprob: -10.877440452575684
    10. '		' → logprob: -11.752440452575684

Token 1047: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.39286479353904724
    2. 'for' (adapté à ' for') → logprob: -1.1428648233413696
    3. '           ' → logprob: -5.26786470413208
    4. ' for' → logprob: -7.26786470413208
    5. '       ' → logprob: -10.142865180969238
    6. '                   ' → logprob: -10.642865180969238
    7. '			' → logprob: -11.017865180969238
    8. '	for' → logprob: -11.517865180969238
    9. '   ' → logprob: -11.642865180969238
    10. '	           ' → logprob: -12.142865180969238

Token 1048: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.0007274442468769848
    2. ' last' → logprob: -7.250727653503418
    3. 'k' → logprob: -11.000727653503418
    4. '0' → logprob: -14.750727653503418
    5. 'l' → logprob: -16.0007266998291
    6. 'lasti' → logprob: -16.2507266998291
    7. ' k' → logprob: -16.5007266998291
    8. '	last' → logprob: -16.5007266998291
    9. '(last' → logprob: -16.8757266998291
    10. '_last' → logprob: -17.0007266998291

Token 1049: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3870360255241394
    2. 'in' → logprob: -1.1370360851287842
    3. ')' → logprob: -9.137036323547363
    4. ' ' → logprob: -10.512036323547363
    5. '[' → logprob: -11.137036323547363
    6. '```' → logprob: -12.262036323547363
    7. '+' → logprob: -13.262036323547363
    8. ',' → logprob: -13.887036323547363
    9. '(' → logprob: -13.887036323547363
    10. '<|end|>' → logprob: -14.012036323547363

Token 1050: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5761436223983765
    2. '(' → logprob: -0.8261436223983765
    3. ' range' → logprob: -8.576143264770508
    4. '3' → logprob: -11.826143264770508
    5. '(range' → logprob: -11.826143264770508
    6. '[' → logprob: -14.076143264770508
    7. ' (' → logprob: -16.076143264770508
    8. '2' → logprob: -17.326143264770508
    9. '
' → logprob: -17.451143264770508
    10. '	range' → logprob: -17.451143264770508

Token 1051: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07890267670154572
    2. '3' → logprob: -2.5789027214050293
    3. ' (' → logprob: -12.203902244567871
    4. '(
' → logprob: -12.828902244567871
    5. '           ' → logprob: -13.078902244567871
    6. '[' → logprob: -14.328902244567871
    7. '                               ' → logprob: -15.078902244567871
    8. '   ' → logprob: -15.078902244567871
    9. ' ' → logprob: -15.453902244567871
    10. '                       ' → logprob: -15.453902244567871

Token 1052: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.750001907348633
    3. '   ' → logprob: -15.625001907348633
    4. '2' → logprob: -15.625001907348633
    5. '           ' → logprob: -16.125001907348633
    6. '(' → logprob: -17.500001907348633
    7. '       ' → logprob: -18.000001907348633
    8. ')' → logprob: -18.375001907348633
    9. '```' → logprob: -18.750001907348633
    10. '0' → logprob: -18.875001907348633

Token 1053: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7196534276008606
    2. ',' → logprob: -0.7196534276008606
    3. '3' → logprob: -4.219653606414795
    4. '):
' → logprob: -4.719653606414795
    5. ' +' → logprob: -6.469653606414795
    6. ':' → logprob: -8.719653129577637
    7. '           ' → logprob: -8.844653129577637
    8. '```' → logprob: -9.094653129577637
    9. '(' → logprob: -9.594653129577637
    10. '):' → logprob: -9.844653129577637

Token 1054: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007479215855710208
    2. ' if' → logprob: -8.625747680664062
    3. '<|end|>' → logprob: -8.875747680664062
    4. '	           ' → logprob: -9.500747680664062
    5. '                               ' → logprob: -9.875747680664062
    6. '```' → logprob: -9.875747680664062
    7. '	       ' → logprob: -10.375747680664062
    8. '		       ' → logprob: -10.500747680664062
    9. 'if' → logprob: -10.875747680664062
    10. '			' → logprob: -11.000747680664062

Token 1055: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.26969265937805176
    2. ' if' → logprob: -1.5196926593780518
    3. 'if' (adapté à ' if') → logprob: -5.019692420959473
    4. '                           ' → logprob: -6.019692420959473
    5. '	               ' → logprob: -6.644692420959473
    6. '                       ' → logprob: -6.769692420959473
    7. '				' → logprob: -7.019692420959473
    8. '                               ' → logprob: -7.144692420959473
    9. '		           ' → logprob: -7.519692420959473
    10. '               ' → logprob: -7.519692420959473

Token 1056: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04306598752737045
    2. ' dp' → logprob: -3.1680660247802734
    3. '0' → logprob: -10.793066024780273
    4. '               ' → logprob: -10.918066024780273
    5. '                   ' → logprob: -11.418066024780273
    6. '(dp' → logprob: -11.793066024780273
    7. '	dp' → logprob: -12.918066024780273
    8. '           ' → logprob: -13.168066024780273
    9. ' ' → logprob: -14.043066024780273
    10. '   ' → logprob: -14.293066024780273

Token 1057: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. 'i' → logprob: -14.625000953674316
    3. '[
' → logprob: -15.875000953674316
    4. '[' → logprob: -16.25
    5. ' [' → logprob: -16.375
    6. '[I' → logprob: -16.875
    7. '```' → logprob: -17.75
    8. '][' → logprob: -17.75
    9. '[j' → logprob: -18.25
    10. '[u' → logprob: -18.375

Token 1058: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.12779513001441956
    2. '[i' → logprob: -2.1277952194213867
    3. '[j' → logprob: -7.127795219421387
    4. '[' → logprob: -11.502795219421387
    5. ']][' → logprob: -11.502795219421387
    6. '[I' → logprob: -12.127795219421387
    7. ' ][' → logprob: -12.252795219421387
    8. ']' → logprob: -12.627795219421387
    9. '"][' → logprob: -12.752795219421387
    10. '}[' → logprob: -12.752795219421387

Token 1059: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.688212614681106e-05
    2. ' j' → logprob: -11.000017166137695
    3. '[j' → logprob: -16.125017166137695
    4. ',j' → logprob: -17.625017166137695
    5. '	j' → logprob: -17.875017166137695
    6. 'N' → logprob: -19.000017166137695
    7. '[' → logprob: -19.125017166137695
    8. '<|end|>' → logprob: -19.250017166137695
    9. ':j' → logprob: -19.500017166137695
    10. '$j' → logprob: -19.750017166137695

Token 1060: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.030012311413884163
    2. '[last' → logprob: -3.530012369155884
    3. '[' → logprob: -9.155012130737305
    4. ']' → logprob: -10.030012130737305
    5. '[l' → logprob: -10.280012130737305
    6. ' ][' → logprob: -10.280012130737305
    7. '[k' → logprob: -11.530012130737305
    8. '[next' → logprob: -12.280012130737305
    9. '[length' → logprob: -12.780012130737305
    10. '"][' → logprob: -13.030012130737305

Token 1061: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.00027575582498684525
    2. '[last' → logprob: -8.250275611877441
    3. ' last' → logprob: -11.500275611877441
    4. '(last' → logprob: -13.250275611877441
    5. '	last' → logprob: -13.750275611877441
    6. '2' → logprob: -14.625275611877441
    7. 'lasti' → logprob: -15.000275611877441
    8. ':last' → logprob: -15.125275611877441
    9. ',last' → logprob: -16.375276565551758
    10. ']' → logprob: -16.500276565551758

Token 1062: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009515985148027539
    2. ']<' → logprob: -7.125951766967773
    3. '<' → logprob: -9.000951766967773
    4. ']==' → logprob: -11.750951766967773
    5. ']>=' → logprob: -11.875951766967773
    6. ' ]' → logprob: -12.500951766967773
    7. ' <' → logprob: -12.875951766967773
    8. '[' → logprob: -14.125951766967773
    9. ']>' → logprob: -14.500951766967773
    10. ')' → logprob: -15.000951766967773

Token 1063: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5196582078933716
    2. ']' → logprob: -1.8946582078933716
    3. '>=' → logprob: -2.019658088684082
    4. ' <' → logprob: -3.144658088684082
    5. ']>=' → logprob: -3.144658088684082
    6. '>' → logprob: -4.019658088684082
    7. ' >=' → logprob: -4.144658088684082
    8. ']<' → logprob: -7.019658088684082
    9. ']>' → logprob: -8.144658088684082
    10. ' >' → logprob: -8.519658088684082

Token 1064: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2471589798224159e-05
    2. ' ' → logprob: -11.375012397766113
    3. '1' → logprob: -14.125012397766113
    4. '-' → logprob: -16.37501335144043
    5. '   ' → logprob: -16.87501335144043
    6. 'INF' → logprob: -18.25001335144043
    7. '=' → logprob: -18.31251335144043
    8. '100' → logprob: -18.50001335144043
    9. ')' → logprob: -18.68751335144043
    10. '```' → logprob: -18.81251335144043

Token 1065: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8312570318812504e-05
    2. '1' → logprob: -11.375018119812012
    3. ' ' → logprob: -12.000018119812012
    4. 'INF' → logprob: -15.625018119812012
    5. '-' → logprob: -15.875018119812012
    6. '   ' → logprob: -16.125019073486328
    7. '100' → logprob: -17.000019073486328
    8. 'max' → logprob: -17.000019073486328
    9. '
' → logprob: -17.250019073486328
    10. 'i' → logprob: -17.312519073486328

Token 1066: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04552436247467995
    2. ':' → logprob: -4.045524597167969
    3. '               ' → logprob: -4.420524597167969
    4. ':
' → logprob: -4.420524597167969
    5. ' or' → logprob: -6.545524597167969
    6. '                       ' → logprob: -6.670524597167969
    7. '                           ' → logprob: -9.420524597167969
    8. '           ' → logprob: -9.795524597167969
    9. '                  ' → logprob: -10.920524597167969
    10. ' continue' → logprob: -11.170524597167969

Token 1067: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0021975983399897814
    2. '               ' → logprob: -6.502197742462158
    3. '                       ' → logprob: -8.002197265625
    4. '                           ' → logprob: -9.002197265625
    5. '           ' → logprob: -9.377197265625
    6. ' continue' → logprob: -10.127197265625
    7. 'continue' → logprob: -10.877197265625
    8. '   ' → logprob: -10.877197265625
    9. '                               ' → logprob: -10.877197265625
    10. '	               ' → logprob: -11.252197265625

Token 1068: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.13439670205116272
    2. '                   ' → logprob: -2.13439679145813
    3. '                       ' → logprob: -5.134396553039551
    4. ' continue' → logprob: -6.634396553039551
    5. '                               ' → logprob: -9.50939655303955
    6. '                           ' → logprob: -9.63439655303955
    7. '               ' → logprob: -9.75939655303955
    8. '```' → logprob: -11.25939655303955
    9. '	continue' → logprob: -11.63439655303955
    10. '				' → logprob: -12.38439655303955

Token 1069: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.45398613810539246
    2. '               ' → logprob: -1.0789861679077148
    3. '           ' → logprob: -3.828986167907715
    4. '                       ' → logprob: -6.578986167907715
    5. '                           ' → logprob: -7.953986167907715
    6. '                ' → logprob: -8.828986167907715
    7. '```' → logprob: -8.828986167907715
    8. '                    
' → logprob: -9.078986167907715
    9. ' for' → logprob: -9.203986167907715
    10. '   ' → logprob: -9.328986167907715

Token 1070: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12642450630664825
    2. '                   ' → logprob: -2.376424551010132
    3. '           ' → logprob: -3.876424551010132
    4. '```' → logprob: -6.876424312591553
    5. '                       ' → logprob: -7.001424312591553
    6. ' if' → logprob: -7.376424312591553
    7. ' for' → logprob: -7.751424312591553
    8. '                ' → logprob: -8.251424789428711
    9. '	           ' → logprob: -8.251424789428711
    10. '			' → logprob: -8.626424789428711

Token 1071: ' length' (ID: 5517)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5947909355163574
    2. '               ' → logprob: -1.2197909355163574
    3. 'for' → logprob: -2.0947909355163574
    4. '#' → logprob: -4.469790935516357
    5. '                   ' → logprob: -4.594790935516357
    6. ' if' → logprob: -5.844790935516357
    7. 'next' → logprob: -6.219790935516357
    8. ' for' → logprob: -6.844790935516357
    9. 'length' (adapté à ' length') → logprob: -6.844790935516357
    10. '           ' → logprob: -7.719790935516357

Token 1072: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8880937695503235
    2. ' =' → logprob: -1.2630937099456787
    3. '           ' → logprob: -2.1380937099456787
    4. ' +=' → logprob: -2.3880937099456787
    5. '+=' → logprob: -3.1380937099456787
    6. '+' → logprob: -3.5130937099456787
    7. '               ' → logprob: -4.638093948364258
    8. 'for' → logprob: -5.513093948364258
    9. '```' → logprob: -6.388093948364258
    10. '                   ' → logprob: -6.638093948364258

Token 1073: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10020990669727325
    2. ' dp' → logprob: -2.350209951400757
    3. '                   ' → logprob: -13.350210189819336
    4. '               ' → logprob: -14.100210189819336
    5. '	dp' → logprob: -14.725210189819336
    6. '(dp' → logprob: -15.350210189819336
    7. '_dp' → logprob: -16.725210189819336
    8. '           ' → logprob: -17.475210189819336
    9. '                ' → logprob: -17.850210189819336
    10. '.dp' → logprob: -17.850210189819336

Token 1074: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011585070751607418
    2. '               ' → logprob: -5.636585235595703
    3. '                   ' → logprob: -6.136585235595703
    4. '           ' → logprob: -6.386585235595703
    5. ' =' → logprob: -6.761585235595703
    6. 'for' → logprob: -7.511585235595703
    7. '=' → logprob: -7.886585235595703
    8. 'i' → logprob: -8.511585235595703
    9. '
' → logprob: -8.761585235595703
    10. '                           ' → logprob: -8.761585235595703

Token 1075: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.576068639755249
    2. '[i' → logprob: -0.826068639755249
    3. '           ' → logprob: -9.576068878173828
    4. 'i' → logprob: -11.576068878173828
    5. '               ' → logprob: -11.576068878173828
    6. ')[' → logprob: -11.576068878173828
    7. '}[' → logprob: -12.201068878173828
    8. '[I' → logprob: -12.201068878173828
    9. '                   ' → logprob: -12.326068878173828
    10. ' ][' → logprob: -12.576068878173828

Token 1076: 'j' (ID: 73)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0793890506029129
    2. 'j' → logprob: -2.5793890953063965
    3. '[i' → logprob: -7.7043890953063965
    4. ' i' → logprob: -10.579388618469238
    5. '[j' → logprob: -11.329388618469238
    6. '
' → logprob: -12.454388618469238
    7. ' j' → logprob: -13.329388618469238
    8. '   ' → logprob: -13.954388618469238
    9. '][' → logprob: -14.204388618469238
    10. '[' → logprob: -14.204388618469238

Token 1077: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04867582395672798
    2. ']
' → logprob: -3.548675775527954
    3. ']+' → logprob: -4.798676013946533
    4. '               ' → logprob: -5.548676013946533
    5. '           ' → logprob: -6.048676013946533
    6. '][' → logprob: -6.048676013946533
    7. '                   ' → logprob: -7.048676013946533
    8. ' ]' → logprob: -8.173675537109375
    9. '
' → logprob: -9.048675537109375
    10. '                       ' → logprob: -9.548675537109375

Token 1078: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -2.522638169466518e-05
    2. '[last' → logprob: -10.750024795532227
    3. ' last' → logprob: -13.125024795532227
    4. '(last' → logprob: -13.625024795532227
    5. '	last' → logprob: -15.000024795532227
    6. 'length' → logprob: -17.500024795532227
    7. ':last' → logprob: -17.750024795532227
    8. ',last' → logprob: -17.875024795532227
    9. 'first' → logprob: -18.250024795532227
    10. 'lasti' → logprob: -18.500024795532227

Token 1079: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2673461437225342
    2. '           ' → logprob: -1.5173461437225342
    3. '                   ' → logprob: -5.142346382141113
    4. ']
' → logprob: -6.017346382141113
    5. ')
' → logprob: -6.392346382141113
    6. ']' → logprob: -6.767346382141113
    7. '
' → logprob: -6.892346382141113
    8. ')' → logprob: -6.892346382141113
    9. '       ' → logprob: -7.642346382141113
    10. '                
' → logprob: -8.267346382141113

Token 1080: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00030566859641112387
    2. '                   ' → logprob: -8.250306129455566
    3. '           ' → logprob: -10.625306129455566
    4. '                ' → logprob: -12.250306129455566
    5. '```' → logprob: -12.500306129455566
    6. '#' → logprob: -13.250306129455566
    7. '                       ' → logprob: -13.250306129455566
    8. '              ' → logprob: -13.375306129455566
    9. '                           ' → logprob: -13.375306129455566
    10. '			' → logprob: -13.500306129455566

Token 1081: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05238168686628342
    2. 'if' → logprob: -3.552381753921509
    3. '#' (adapté à ' #') → logprob: -3.802381753921509
    4. ' if' → logprob: -11.05238151550293
    5. '           ' → logprob: -11.55238151550293
    6. '```' → logprob: -11.67738151550293
    7. '                
' → logprob: -11.67738151550293
    8. ' #' → logprob: -11.92738151550293
    9. 'for' → logprob: -12.30238151550293
    10. '                   ' → logprob: -12.92738151550293

Token 1082: ' Ess' (ID: 12256)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08388549089431763
    2. '#' → logprob: -2.583885431289673
    3. '               ' → logprob: -5.333885669708252
    4. '           ' → logprob: -8.958885192871094
    5. '```' → logprob: -11.333885192871094
    6. ' if' → logprob: -11.583885192871094
    7. '   ' → logprob: -13.083885192871094
    8. ' #' → logprob: -13.333885192871094
    9. '       ' → logprob: -13.583885192871094
    10. '                   ' → logprob: -13.958885192871094

Token 1083: 'ayer' (ID: 1630)
  Prédit: 'ayer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ayer' → logprob: -0.00021605310030281544
    2. 'uyer' → logprob: -8.500216484069824
    3. '               ' → logprob: -12.750216484069824
    4. 'aye' → logprob: -12.875216484069824
    5. 'AYER' → logprob: -13.125216484069824
    6. 'ayers' → logprob: -13.500216484069824
    7. '           ' → logprob: -14.125216484069824
    8. 'oyer' → logprob: -14.625216484069824
    9. 'eyer' → logprob: -14.875216484069824
    10. 'yer' → logprob: -15.000216484069824

Token 1084: ' d' (ID: 272)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8688797354698181
    2. '                   ' → logprob: -1.493879795074463
    3. '               ' → logprob: -1.868879795074463
    4. ' if' → logprob: -2.368879795074463
    5. '           ' → logprob: -3.243879795074463
    6. ' to' → logprob: -3.493879795074463
    7. 'i' → logprob: -3.868879795074463
    8. 'to' → logprob: -4.743879795074463
    9. '   ' → logprob: -5.618879795074463
    10. ' i' → logprob: -6.118879795074463

Token 1085: ''aj' (ID: 116735)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13369309902191162
    2. ' if' → logprob: -2.508693218231201
    3. 'for' → logprob: -4.133693218231201
    4. 'i' → logprob: -4.383693218231201
    5. '   ' → logprob: -4.508693218231201
    6. ' for' → logprob: -6.133693218231201
    7. ' i' → logprob: -7.008693218231201
    8. '           ' → logprob: -7.758693218231201
    9. ' ' → logprob: -8.383692741394043
    10. '       ' → logprob: -8.883692741394043

Token 1086: 'outer' (ID: 5838)
  Prédit: 'outer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outer' → logprob: -7.465036105713807e-06
    2. 'out' → logprob: -12.250007629394531
    3. 'oute' → logprob: -14.000007629394531
    4. 'ouer' → logprob: -14.375007629394531
    5. 'outez' → logprob: -14.375007629394531
    6. 'o' → logprob: -15.500007629394531
    7. 'Outer' → logprob: -15.625007629394531
    8. '_outer' → logprob: -16.75000762939453
    9. 'ou' → logprob: -16.87500762939453
    10. 'our' → logprob: -17.25000762939453

Token 1087: ' un' (ID: 537)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4949114918708801
    2. ' if' → logprob: -1.2449114322662354
    3. 'S' → logprob: -3.2449114322662354
    4. '   ' → logprob: -4.2449116706848145
    5. '               ' → logprob: -4.6199116706848145
    6. '                   ' → logprob: -4.7449116706848145
    7. 'i' → logprob: -5.1199116706848145
    8. '```' → logprob: -5.4949116706848145
    9. ' i' → logprob: -5.6199116706848145
    10. ' S' → logprob: -5.8699116706848145

Token 1088: ' wagon' (ID: 90907)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7753856182098389
    2. 'wagon' → logprob: -1.5253856182098389
    3. 'new' → logprob: -1.7753856182098389
    4. 's' → logprob: -3.275385618209839
    5. ' new' → logprob: -3.650385618209839
    6. ' if' → logprob: -3.900385618209839
    7. 'w' → logprob: -4.275385856628418
    8. ' wagon' → logprob: -4.275385856628418
    9. 'token' → logprob: -4.650385856628418
    10. 'wag' → logprob: -5.025385856628418

Token 1089: ' à' (ID: 1221)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010662743588909507
    2. '                   ' → logprob: -7.626066207885742
    3. 'from' → logprob: -9.001066207885742
    4. ' if' → logprob: -9.501066207885742
    5. '           ' → logprob: -9.626066207885742
    6. '			' → logprob: -9.751066207885742
    7. ' of' → logprob: -10.001066207885742
    8. 'if' → logprob: -10.376066207885742
    9. '                ' → logprob: -10.626066207885742
    10. '                
' → logprob: -10.751066207885742

Token 1090: ' partir' (ID: 12100)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.09012576937675476
    2. 'i' → logprob: -2.590125799179077
    3. 's' → logprob: -4.590125560760498
    4. ' S' → logprob: -7.715125560760498
    5. ' i' → logprob: -8.340126037597656
    6. '```' → logprob: -9.215126037597656
    7. 'l' → logprob: -9.965126037597656
    8. 'la' → logprob: -10.215126037597656
    9. '[i' → logprob: -10.340126037597656
    10. ' s' → logprob: -10.590126037597656

Token 1091: ' de' (ID: 334)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6979259848594666
    2. 'S' → logprob: -1.1979260444641113
    3. '                   ' → logprob: -2.6979260444641113
    4. ' i' → logprob: -2.8229260444641113
    5. ' S' → logprob: -3.5729260444641113
    6. '               ' → logprob: -3.8229260444641113
    7. '(i' → logprob: -4.697926044464111
    8. ' (' → logprob: -5.947926044464111
    9. 's' → logprob: -5.947926044464111
    10. '(S' → logprob: -6.322926044464111

Token 1092: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.007620587479323149
    2. ' S' → logprob: -4.882620811462402
    3. ''S' → logprob: -12.007620811462402
    4. 's' → logprob: -12.632620811462402
    5. '(S' → logprob: -13.507620811462402
    6. ''s' → logprob: -14.007620811462402
    7. '_S' → logprob: -14.382620811462402
    8. ''' → logprob: -15.257620811462402
    9. '```' → logprob: -15.257620811462402
    10. '`' → logprob: -15.632620811462402

Token 1093: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004896456957794726
    2. ' if' → logprob: -8.250489234924316
    3. 'if' → logprob: -9.250489234924316
    4. '                   ' → logprob: -9.500489234924316
    5. '```' → logprob: -10.750489234924316
    6. '<|end|>' → logprob: -11.625489234924316
    7. '<|end|>' → logprob: -12.375489234924316
    8. '	           ' → logprob: -12.500489234924316
    9. '   ' → logprob: -12.875489234924316
    10. '			' → logprob: -12.875489234924316

Token 1094: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0024164419155567884
    2. ' if' → logprob: -7.002416610717773
    3. '                   ' → logprob: -7.127416610717773
    4. '			' → logprob: -8.252416610717773
    5. 'if' → logprob: -8.752416610717773
    6. '                ' → logprob: -9.377416610717773
    7. '                
' → logprob: -10.377416610717773
    8. '	           ' → logprob: -10.377416610717773
    9. '                               ' → logprob: -10.877416610717773
    10. '                       ' → logprob: -11.377416610717773

Token 1095: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.17266571521759033
    2. '               ' → logprob: -2.422665596008301
    3. ' if' → logprob: -2.672665596008301
    4. '                   ' → logprob: -7.172665596008301
    5. '                ' → logprob: -11.6726655960083
    6. '           ' → logprob: -11.6726655960083
    7. '   ' → logprob: -11.6726655960083
    8. '                       ' → logprob: -11.7976655960083
    9. '```' → logprob: -11.7976655960083
    10. 'for' → logprob: -11.9226655960083

Token 1096: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11282410472631454
    2. 'i' → logprob: -2.2378242015838623
    3. 'j' → logprob: -14.487824440002441
    4. ' j' → logprob: -14.862824440002441
    5. ' ' → logprob: -15.112824440002441
    6. '(i' → logprob: -15.487824440002441
    7. '   ' → logprob: -16.112823486328125
    8. ' (' → logprob: -16.987823486328125
    9. '	i' → logprob: -17.237823486328125
    10. 'I' → logprob: -17.487823486328125

Token 1097: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04932861030101776
    2. '<' → logprob: -3.049328565597534
    3. '<M' → logprob: -7.424328804016113
    4. '<N' → logprob: -9.674328804016113
    5. '+' → logprob: -9.799328804016113
    6. '<n' → logprob: -11.674328804016113
    7. '<m' → logprob: -11.924328804016113
    8. '<int' → logprob: -13.299328804016113
    9. ' +' → logprob: -13.424328804016113
    10. '<size' → logprob: -13.799328804016113

Token 1098: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.011047935113310814
    2. ' M' → logprob: -4.511047840118408
    3. '   ' → logprob: -17.13604736328125
    4. ' ' → logprob: -17.13604736328125
    5. ' ' → logprob: -18.26104736328125
    6. '	M' → logprob: -18.38604736328125
    7. '```' → logprob: -18.76104736328125
    8. '+' → logprob: -18.88604736328125
    9. '=M' → logprob: -19.26104736328125
    10. '<M' → logprob: -19.26104736328125

Token 1099: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7210565805435181
    2. '                   ' → logprob: -0.8460565805435181
    3. ':
' → logprob: -2.7210564613342285
    4. 'and' → logprob: -4.7210564613342285
    5. ':' → logprob: -5.0960564613342285
    6. '               ' → logprob: -6.5960564613342285
    7. '                       ' → logprob: -6.8460564613342285
    8. '   ' → logprob: -7.7210564613342285
    9. ' :
' → logprob: -9.346056938171387
    10. '                    ' → logprob: -9.346056938171387

Token 1100: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01415187306702137
    2. '                       ' → logprob: -5.5141520500183105
    3. '				' → logprob: -6.0141520500183105
    4. '			       ' → logprob: -6.6391520500183105
    5. '	               ' → logprob: -6.8891520500183105
    6. '                    ' → logprob: -7.0141520500183105
    7. '		           ' → logprob: -7.3891520500183105
    8. '                    
' → logprob: -7.5141520500183105
    9. '               ' → logprob: -7.7641520500183105
    10. '                ' → logprob: -8.389151573181152

Token 1101: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.1147802472114563
    2. ' c' → logprob: -2.2397801876068115
    3. '                   ' → logprob: -7.114780426025391
    4. '                       ' → logprob: -7.364780426025391
    5. ' if' → logprob: -8.98978042602539
    6. 'if' → logprob: -9.11478042602539
    7. '                               ' → logprob: -9.61478042602539
    8. '	c' → logprob: -9.61478042602539
    9. '```' → logprob: -9.73978042602539
    10. '                           ' → logprob: -10.61478042602539

Token 1102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16032850742340088
    2. '=' → logprob: -1.9103285074234009
    3. '_' → logprob: -10.53532886505127
    4. '=
' → logprob: -11.16032886505127
    5. '=S' → logprob: -11.28532886505127
    6. ' =
' → logprob: -11.53532886505127
    7. ' ==' → logprob: -12.03532886505127
    8. 's' → logprob: -12.16032886505127
    9. ')' → logprob: -12.41032886505127
    10. 'c' → logprob: -12.78532886505127

Token 1103: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.12692831456661224
    2. ' S' → logprob: -2.1269283294677734
    3. ' ' → logprob: -16.126928329467773
    4. ''S' → logprob: -16.251928329467773
    5. ' ' → logprob: -17.001928329467773
    6. '_S' → logprob: -17.126928329467773
    7. ''' → logprob: -17.501928329467773
    8. '	S' → logprob: -17.626928329467773
    9. '`' → logprob: -17.876928329467773
    10. '   ' → logprob: -17.876928329467773

Token 1104: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.750001907348633
    3. 'i' → logprob: -16.000001907348633
    4. '   ' → logprob: -16.125001907348633
    5. '[
' → logprob: -16.375001907348633
    6. '[I' → logprob: -16.875001907348633
    7. '```' → logprob: -17.250001907348633
    8. '[M' → logprob: -17.250001907348633
    9. '[j' → logprob: -17.375001907348633
    10. '[next' → logprob: -17.875001907348633

Token 1105: ']
' (ID: 1592)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.49521350860595703
    2. ']
' → logprob: -1.620213508605957
    3. ']' → logprob: -2.620213508605957
    4. ')
' → logprob: -3.495213508605957
    5. 'if' → logprob: -3.995213508605957
    6. ':
' → logprob: -4.120213508605957
    7. '               ' → logprob: -4.495213508605957
    8. '
' → logprob: -4.620213508605957
    9. '                           ' → logprob: -5.120213508605957
    10. '                       ' → logprob: -5.120213508605957

Token 1106: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09496524930000305
    2. '                       ' → logprob: -2.4699652194976807
    3. ' if' → logprob: -6.46996545791626
    4. '                           ' → logprob: -6.71996545791626
    5. '				' → logprob: -7.09496545791626
    6. 'if' → logprob: -7.46996545791626
    7. '                               ' → logprob: -8.094964981079102
    8. '                    
' → logprob: -8.094964981079102
    9. '                        
' → logprob: -8.344964981079102
    10. '                    ' → logprob: -8.469964981079102

Token 1107: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02043292112648487
    2. '                   ' → logprob: -4.020432949066162
    3. 'prev' → logprob: -6.270432949066162
    4. ' if' → logprob: -8.020432472229004
    5. '                       ' → logprob: -10.145432472229004
    6. '```' → logprob: -12.270432472229004
    7. '                           ' → logprob: -12.395432472229004
    8. '               ' → logprob: -13.020432472229004
    9. 'next' → logprob: -13.270432472229004
    10. '                    ' → logprob: -13.520432472229004

Token 1108: ' last' (ID: 2174)
  Prédit: '(last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(last' → logprob: -0.6202861070632935
    2. 'last' → logprob: -0.8702861070632935
    3. ' last' → logprob: -4.245285987854004
    4. 'can' → logprob: -4.495285987854004
    5. ' (' → logprob: -5.245285987854004
    6. '(can' → logprob: -5.370285987854004
    7. '((' → logprob: -5.620285987854004
    8. '(i' → logprob: -6.245285987854004
    9. '(' → logprob: -6.620285987854004
    10. ' can' → logprob: -7.995285987854004

Token 1109: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.34900885820388794
    2. ' ==' → logprob: -1.2240087985992432
    3. '=' → logprob: -8.974008560180664
    4. '!=' → logprob: -9.099008560180664
    5. ' !=' → logprob: -9.224008560180664
    6. ']==' → logprob: -10.224008560180664
    7. '[' → logprob: -10.349008560180664
    8. '==
' → logprob: -10.474008560180664
    9. ')' → logprob: -10.599008560180664
    10. ']' → logprob: -11.349008560180664

Token 1110: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28395506739616394
    2. '1' → logprob: -1.4089550971984863
    3. 'last' → logprob: -6.283955097198486
    4. ' ' → logprob: -7.033955097198486
    5. '(last' → logprob: -10.908954620361328
    6. ' last' → logprob: -11.908954620361328
    7. '(' → logprob: -11.908954620361328
    8. '   ' → logprob: -12.033954620361328
    9. '[last' → logprob: -12.908954620361328
    10. '  ' → logprob: -14.158954620361328

Token 1111: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10021055489778519
    2. '0' → logprob: -2.350210666656494
    3. ' ' → logprob: -13.225210189819336
    4. '   ' → logprob: -14.787710189819336
    5. '
' → logprob: -14.850210189819336
    6. '(' → logprob: -15.412710189819336
    7. '```' → logprob: -15.787710189819336
    8. '[' → logprob: -16.225210189819336
    9. '``' → logprob: -16.787710189819336
    10. '01' → logprob: -16.850210189819336

Token 1112: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5126884579658508
    2. ':
' → logprob: -1.887688398361206
    3. '                       ' → logprob: -1.887688398361206
    4. ':' → logprob: -2.637688398361206
    5. 'and' → logprob: -3.762688398361206
    6. '                   ' → logprob: -6.137688636779785
    7. '                           ' → logprob: -6.887688636779785
    8. '                               ' → logprob: -10.137688636779785
    9. ' :
' → logprob: -10.262688636779785
    10. '   ' → logprob: -10.262688636779785

Token 1113: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.013873044401407242
    2. ' and' → logprob: -4.388873100280762
    3. '                           ' → logprob: -8.013873100280762
    4. ':
' → logprob: -8.388873100280762
    5. '					' → logprob: -8.388873100280762
    6. '                   ' → logprob: -8.638873100280762
    7. ':' → logprob: -9.138873100280762
    8. 'and' → logprob: -9.263873100280762
    9. '                               ' → logprob: -10.013873100280762
    10. '                        ' → logprob: -10.388873100280762

Token 1114: ' prev' (ID: 10258)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.8692688345909119
    2. 'prev' (adapté à ' prev') → logprob: -0.8692688345909119
    3. 'if' → logprob: -1.8692688941955566
    4. ' if' → logprob: -5.494268894195557
    5. '                           ' → logprob: -6.994268894195557
    6. ' prev' → logprob: -7.119268894195557
    7. '```' → logprob: -7.619268894195557
    8. '                   ' → logprob: -7.869268894195557
    9. '                     ' → logprob: -9.744268417358398
    10. '                               ' → logprob: -9.744268417358398

Token 1115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2915116250514984
    2. ' ==' → logprob: -2.1665115356445312
    3. '=' → logprob: -2.4165115356445312
    4. '==' → logprob: -3.0415115356445312
    5. '!=' → logprob: -7.416511535644531
    6. ' !=' → logprob: -7.541511535644531
    7. '_prev' → logprob: -9.666511535644531
    8. 'prev' → logprob: -10.666511535644531
    9. '=S' → logprob: -11.291511535644531
    10. '==
' → logprob: -11.541511535644531

Token 1116: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.01815064437687397
    2. ' S' → logprob: -4.018150806427002
    3. '                       ' → logprob: -14.643150329589844
    4. ' ' → logprob: -15.893150329589844
    5. '                   ' → logprob: -17.143150329589844
    6. 'c' → logprob: -17.143150329589844
    7. '                           ' → logprob: -17.518150329589844
    8. '   ' → logprob: -17.643150329589844
    9. 's' → logprob: -17.893150329589844
    10. ' ' → logprob: -18.518150329589844

Token 1117: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -13.25000286102295
    3. '[max' → logprob: -14.87500286102295
    4. '```' → logprob: -15.50000286102295
    5. 'i' → logprob: -15.75000286102295
    6. '[j' → logprob: -16.250001907348633
    7. '[I' → logprob: -16.500001907348633
    8. '[
' → logprob: -17.250001907348633
    9. '           ' → logprob: -17.375001907348633
    10. '                   ' → logprob: -17.625001907348633

Token 1118: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0006143859936855733
    2. '[' → logprob: -8.000614166259766
    3. '[i' → logprob: -8.500614166259766
    4. ' -' → logprob: -10.250614166259766
    5. 'i' → logprob: -10.500614166259766
    6. '```' → logprob: -11.750614166259766
    7. '   ' → logprob: -13.750614166259766
    8. ']' → logprob: -14.000614166259766
    9. ' ' → logprob: -14.750614166259766
    10. '+' → logprob: -15.125614166259766

Token 1119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007783354260027409
    2. '-' → logprob: -4.88278341293335
    3. '```' → logprob: -8.757782936096191
    4. ' ' → logprob: -11.882782936096191
    5. '   ' → logprob: -12.507782936096191
    6. '...' → logprob: -12.757782936096191
    7. '``' → logprob: -12.882782936096191
    8. ' -' → logprob: -14.257782936096191
    9. 'i' → logprob: -14.632782936096191
    10. ']' → logprob: -14.757782936096191

Token 1120: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.0010879473993554711
    2. ']' → logprob: -7.0010881423950195
    3. '                       ' → logprob: -8.87608814239502
    4. ']
' → logprob: -10.87608814239502
    5. '                   ' → logprob: -11.87608814239502
    6. '']
' → logprob: -12.75108814239502
    7. '                           ' → logprob: -12.87608814239502
    8. 'if' → logprob: -12.87608814239502
    9. '```' → logprob: -13.62608814239502
    10. ' ]
' → logprob: -14.50108814239502

Token 1121: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.07966990768909454
    2. '                           ' → logprob: -2.704669952392578
    3. '                               ' → logprob: -5.329669952392578
    4. ' if' → logprob: -6.954669952392578
    5. '                        
' → logprob: -7.079669952392578
    6. '```' → logprob: -7.454669952392578
    7. '                   ' → logprob: -7.579669952392578
    8. '					' → logprob: -7.704669952392578
    9. '                        ' → logprob: -8.079669952392578
    10. '						' → logprob: -8.329669952392578

Token 1122: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.09488405287265778
    2. '                       ' → logprob: -3.469884157180786
    3. ' if' → logprob: -3.469884157180786
    4. '                           ' → logprob: -3.594884157180786
    5. '                   ' → logprob: -7.844883918762207
    6. '                               ' → logprob: -8.344883918762207
    7. '```' → logprob: -8.969883918762207
    8. '                        ' → logprob: -11.094883918762207
    9. '                            ' → logprob: -11.969883918762207
    10. '                         ' → logprob: -12.094883918762207

Token 1123: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.0031781906727701426
    2. ' can' → logprob: -5.753178119659424
    3. 'c' → logprob: -14.878178596496582
    4. '(can' → logprob: -16.878177642822266
    5. 'not' → logprob: -17.628177642822266
    6. 'dp' → logprob: -18.003177642822266
    7. '	can' → logprob: -18.753177642822266
    8. ' not' → logprob: -18.753177642822266
    9. '_can' → logprob: -19.503177642822266
    10. ' c' → logprob: -19.878177642822266

Token 1124: '_connect' (ID: 32485)
  Prédit: '_connect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_connect' → logprob: -0.00030316898482851684
    2. 'connect' → logprob: -8.125303268432617
    3. '_predict' → logprob: -13.375303268432617
    4. 'Connect' → logprob: -13.500303268432617
    5. '_CONNECT' → logprob: -13.750303268432617
    6. 'c' → logprob: -14.125303268432617
    7. '```' → logprob: -14.625303268432617
    8. '_continue' → logprob: -14.625303268432617
    9. '-connect' → logprob: -15.875303268432617
    10. '_replace' → logprob: -16.500303268432617

Token 1125: '(prev' (ID: 59594)
  Prédit: '(prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prev' → logprob: -0.3869079351425171
    2. 'prev' → logprob: -1.136907935142517
    3. '(' → logprob: -11.011907577514648
    4. '(c' → logprob: -11.886907577514648
    5. ' prev' → logprob: -12.011907577514648
    6. 'c' → logprob: -12.761907577514648
    7. '	prev' → logprob: -13.011907577514648
    8. ' (' → logprob: -13.636907577514648
    9. '_prev' → logprob: -14.636907577514648
    10. '.prev' → logprob: -15.136907577514648

Token 1126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019671740010380745
    2. ',c' → logprob: -6.251966953277588
    3. ' ,' → logprob: -10.251967430114746
    4. '                           ' → logprob: -13.501967430114746
    5. 'c' → logprob: -14.001967430114746
    6. '                               ' → logprob: -15.001967430114746
    7. ',
' → logprob: -15.376967430114746
    8. ' c' → logprob: -15.626967430114746
    9. '(c' → logprob: -16.00196647644043
    10. '                       ' → logprob: -16.50196647644043

Token 1127: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.25193077325820923
    2. ' c' → logprob: -1.5019307136535645
    3. ' ' → logprob: -14.876931190490723
    4. ')c' → logprob: -14.876931190490723
    5. ')' → logprob: -15.251931190490723
    6. ' ' → logprob: -15.751931190490723
    7. ',c' → logprob: -15.751931190490723
    8. '<|end|>' → logprob: -15.876931190490723
    9. '_c' → logprob: -16.501930236816406
    10. ''' → logprob: -16.501930236816406

Token 1128: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02154330350458622
    2. '                           ' → logprob: -4.021543502807617
    3. '):' → logprob: -6.146543502807617
    4. ':
' → logprob: -7.521543502807617
    5. '                       ' → logprob: -7.521543502807617
    6. '                               ' → logprob: -10.021543502807617
    7. ':' → logprob: -10.021543502807617
    8. ')' → logprob: -10.521543502807617
    9. '                   ' → logprob: -11.271543502807617
    10. '):
' → logprob: -11.646543502807617

Token 1129: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0018021537689492106
    2. '                               ' → logprob: -6.37680196762085
    3. '                       ' → logprob: -10.251802444458008
    4. 'dp' → logprob: -10.751802444458008
    5. '```' → logprob: -11.501802444458008
    6. ':
' → logprob: -11.751802444458008
    7. ':' → logprob: -11.876802444458008
    8. '                                   ' → logprob: -12.126802444458008
    9. '                            ' → logprob: -12.376802444458008
    10. ' dp' → logprob: -13.626802444458008

Token 1130: ' if' (ID: 538)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.39073851704597473
    2. 'if' (adapté à ' if') → logprob: -1.1407384872436523
    3. ' if' → logprob: -5.890738487243652
    4. '                           ' → logprob: -7.765738487243652
    5. '                               ' → logprob: -7.890738487243652
    6. ' dp' → logprob: -8.640738487243652
    7. 'updated' → logprob: -9.515738487243652
    8. '```' → logprob: -11.015738487243652
    9. '                       ' → logprob: -11.890738487243652
    10. '                                   ' → logprob: -12.515738487243652

Token 1131: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.029755352064967155
    2. ' dp' → logprob: -3.5297553539276123
    3. '(dp' → logprob: -12.654755592346191
    4. '	dp' → logprob: -14.279755592346191
    5. '                   ' → logprob: -15.029755592346191
    6. '                           ' → logprob: -15.404755592346191
    7. '_dp' → logprob: -16.029754638671875
    8. '                       ' → logprob: -16.529754638671875
    9. '   ' → logprob: -16.779754638671875
    10. '               ' → logprob: -17.279754638671875

Token 1132: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.306760805164231e-05
    2. 'i' → logprob: -11.25001335144043
    3. '   ' → logprob: -18.25001335144043
    4. '_i' → logprob: -18.75001335144043
    5. '```' → logprob: -18.87501335144043
    6. '[I' → logprob: -19.25001335144043
    7. '=i' → logprob: -19.50001335144043
    8. '[u' → logprob: -19.62501335144043
    9. '[min' → logprob: -19.62501335144043
    10. '[max' → logprob: -19.62501335144043

Token 1133: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0552675724029541
    2. '[i' → logprob: -2.930267572402954
    3. '+i' → logprob: -8.430267333984375
    4. ' +' → logprob: -9.555267333984375
    5. '[' → logprob: -9.680267333984375
    6. 'i' → logprob: -10.555267333984375
    7. '][' → logprob: -13.430267333984375
    8. '```' → logprob: -13.430267333984375
    9. '+[' → logprob: -13.930267333984375
    10. '[
' → logprob: -14.180267333984375

Token 1134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0833817720413208
    2. '+' → logprob: -2.5833816528320312
    3. 'i' → logprob: -5.583381652832031
    4. 'j' → logprob: -7.833381652832031
    5. '[i' → logprob: -9.333381652832031
    6. '```' → logprob: -9.458381652832031
    7. '(i' → logprob: -10.083381652832031
    8. 'M' → logprob: -11.333381652832031
    9. '][' → logprob: -11.333381652832031
    10. '[' → logprob: -11.333381652832031

Token 1135: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.25219035148620605
    2. '][' → logprob: -1.502190351486206
    3. '>[' → logprob: -9.377190589904785
    4. '[' → logprob: -10.002190589904785
    5. '[j' → logprob: -10.002190589904785
    6. '[I' → logprob: -10.627190589904785
    7. '```' → logprob: -11.127190589904785
    8. '                           ' → logprob: -11.627190589904785
    9. '}[' → logprob: -12.002190589904785
    10. ')[' → logprob: -12.252190589904785

Token 1136: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.153795766294934e-06
    2. '[j' → logprob: -12.375005722045898
    3. ' j' → logprob: -13.250005722045898
    4. '	j' → logprob: -16.6250057220459
    5. '   ' → logprob: -17.5000057220459
    6. ',j' → logprob: -19.5000057220459
    7. '```' → logprob: -19.5000057220459
    8. '$j' → logprob: -19.8750057220459
    9. ':j' → logprob: -20.1250057220459
    10. '][' → logprob: -20.8750057220459

Token 1137: '][' (ID: 2696)
  Prédit: '[last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[last' → logprob: -0.0756494402885437
    2. '[' → logprob: -2.7006494998931885
    3. '][' → logprob: -5.200649261474609
    4. '[next' → logprob: -9.32564926147461
    5. '[max' → logprob: -10.82564926147461
    6. '[now' → logprob: -11.20064926147461
    7. '[left' → logprob: -11.32564926147461
    8. '[current' → logprob: -11.95064926147461
    9. '[first' → logprob: -12.07564926147461
    10. ')[' → logprob: -12.45064926147461

Token 1138: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.292907877039397e-06
    2. 'last' → logprob: -12.75000286102295
    3. ' ' → logprob: -15.00000286102295
    4. '   ' → logprob: -18.875003814697266
    5. '[last' → logprob: -19.000003814697266
    6. ' last' → logprob: -19.500003814697266
    7. '(last' → logprob: -19.500003814697266
    8. '۰' → logprob: -20.500003814697266
    9. '```' → logprob: -20.500003814697266
    10. '
' → logprob: -20.750003814697266

Token 1139: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01170878205448389
    2. ']<' → logprob: -5.136708736419678
    3. '<' → logprob: -5.261708736419678
    4. ' <' → logprob: -7.636708736419678
    5. '[' → logprob: -10.261709213256836
    6. ' ]' → logprob: -10.886709213256836
    7. '                           ' → logprob: -11.261709213256836
    8. '=' → logprob: -12.761709213256836
    9. ']=' → logprob: -12.761709213256836
    10. '']' → logprob: -12.886709213256836

Token 1140: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.27311399579048157
    2. '<' → logprob: -1.5231139659881592
    3. '=' → logprob: -4.398114204406738
    4. ' =' → logprob: -4.898114204406738
    5. '                           ' → logprob: -7.648114204406738
    6. '                               ' → logprob: -8.898114204406738
    7. ']' → logprob: -9.148114204406738
    8. '>' → logprob: -9.648114204406738
    9. '[' → logprob: -9.773114204406738
    10. '                            ' → logprob: -9.898114204406738

Token 1141: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.06212889775633812
    2. ' length' → logprob: -2.812128782272339
    3. 'dp' → logprob: -9.062129020690918
    4. 'max' → logprob: -10.687129020690918
    5. ' dp' → logprob: -11.062129020690918
    6. ' max' → logprob: -12.687129020690918
    7. '(length' → logprob: -12.812129020690918
    8. '[length' → logprob: -15.687129020690918
    9. '	length' → logprob: -16.1871280670166
    10. ' ' → logprob: -16.1871280670166

Token 1142: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014172324910759926
    2. ' +' → logprob: -4.264172554016113
    3. '                               ' → logprob: -12.264172554016113
    4. '                           ' → logprob: -12.639172554016113
    5. '                                   ' → logprob: -15.264172554016113
    6. '```' → logprob: -15.389172554016113
    7. '()+' → logprob: -16.389171600341797
    8. '＋' → logprob: -16.389171600341797
    9. '                       ' → logprob: -16.764171600341797
    10. ']+' → logprob: -17.264171600341797

Token 1143: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -16.750001907348633
    4. '<|end|>' → logprob: -18.625001907348633
    5. '   ' → logprob: -19.000001907348633
    6. '+' → logprob: -20.000001907348633
    7. '
' → logprob: -20.125001907348633
    8. '2' → logprob: -20.250001907348633
    9. '                               ' → logprob: -20.750001907348633
    10. '#' → logprob: -20.875001907348633

Token 1144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -18.25
    4. '<|end|>' → logprob: -18.625
    5. '
' → logprob: -19.5
    6. '+' → logprob: -19.5
    7. '2' → logprob: -19.75
    8. '...' → logprob: -20.875
    9. '<|end|>' → logprob: -20.9375
    10. '۱' → logprob: -21.125

Token 1145: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6035051345825195
    2. ':
' → logprob: -1.2285051345825195
    3. '                           ' → logprob: -2.7285051345825195
    4. '):' → logprob: -3.3535051345825195
    5. '):
' → logprob: -3.4785051345825195
    6. '                               ' → logprob: -4.4785051345825195
    7. '():
' → logprob: -4.7285051345825195
    8. ')' → logprob: -5.8535051345825195
    9. '<|end|>' → logprob: -6.6035051345825195
    10. '```' → logprob: -6.9785051345825195

Token 1146: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.004294807557016611
    2. '                           ' → logprob: -6.7542948722839355
    3. ':' → logprob: -6.8792948722839355
    4. ':
' → logprob: -6.8792948722839355
    5. ' =' → logprob: -8.004294395446777
    6. '                                   ' → logprob: -8.879294395446777
    7. '```' → logprob: -9.254294395446777
    8. '):
' → logprob: -9.504294395446777
    9. ' :' → logprob: -9.504294395446777
    10. '=' → logprob: -10.004294395446777

Token 1147: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0015661651268601418
    2. '                               ' → logprob: -6.876565933227539
    3. ' dp' → logprob: -7.626565933227539
    4. '                                   ' → logprob: -11.126565933227539
    5. '```' → logprob: -11.376565933227539
    6. '                                       ' → logprob: -11.626565933227539
    7. '(dp' → logprob: -13.001565933227539
    8. '	dp' → logprob: -13.001565933227539
    9. '                           ' → logprob: -13.251565933227539
    10. '``' → logprob: -13.751565933227539

Token 1148: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.292907877039397e-06
    2. 'i' → logprob: -13.12500286102295
    3. '<|end|>' → logprob: -14.62500286102295
    4. '[' → logprob: -15.75000286102295
    5. '<|end|>' → logprob: -15.75000286102295
    6. '[I' → logprob: -16.500003814697266
    7. '[
' → logprob: -17.000003814697266
    8. '[next' → logprob: -17.000003814697266
    9. 's' → logprob: -17.250003814697266
    10. '[int' → logprob: -17.500003814697266

Token 1149: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0037884353660047054
    2. '[i' → logprob: -5.628788471221924
    3. '+i' → logprob: -9.378787994384766
    4. '][' → logprob: -9.878787994384766
    5. '[' → logprob: -10.503787994384766
    6. 'i' → logprob: -11.753787994384766
    7. '+
' → logprob: -12.378787994384766
    8. '```' → logprob: -12.503787994384766
    9. ' +' → logprob: -12.628787994384766
    10. '+[' → logprob: -13.753787994384766

Token 1150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.6100132496794686e-05
    2. '+' → logprob: -9.875056266784668
    3. '```' → logprob: -12.875056266784668
    4. '2' → logprob: -14.125056266784668
    5. '   ' → logprob: -14.625056266784668
    6. ' ' → logprob: -15.625056266784668
    7. '
' → logprob: -16.00005531311035
    8. '           ' → logprob: -16.12505531311035
    9. '``' → logprob: -16.50005531311035
    10. '       ' → logprob: -17.06255531311035

Token 1151: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.09363645315170288
    2. '[i' → logprob: -2.4686365127563477
    3. '[j' → logprob: -5.593636512756348
    4. '[' → logprob: -7.218636512756348
    5. '```' → logprob: -9.218636512756348
    6. '}[' → logprob: -10.343636512756348
    7. '[][' → logprob: -10.968636512756348
    8. '"][' → logprob: -11.593636512756348
    9. '>[' → logprob: -11.718636512756348
    10. ''][' → logprob: -11.718636512756348

Token 1152: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.531315314830863e-06
    2. ' j' → logprob: -12.625003814697266
    3. '	j' → logprob: -16.000003814697266
    4. '[j' → logprob: -18.375003814697266
    5. '   ' → logprob: -18.500003814697266
    6. '$j' → logprob: -18.750003814697266
    7. ':j' → logprob: -20.125003814697266
    8. ',j' → logprob: -20.875003814697266
    9. '_j' → logprob: -20.875003814697266
    10. '(j' → logprob: -21.375003814697266

Token 1153: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.008860491216182709
    2. '[' → logprob: -4.7588605880737305
    3. '[last' → logprob: -8.63386058807373
    4. '"][' → logprob: -11.38386058807373
    5. ''][' → logprob: -11.63386058807373
    6. '}[' → logprob: -11.75886058807373
    7. '[next' → logprob: -11.88386058807373
    8. '>[' → logprob: -12.00886058807373
    9. ' ][' → logprob: -12.13386058807373
    10. '[i' → logprob: -12.50886058807373

Token 1154: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. 'length' → logprob: -17.125
    4. '[' → logprob: -17.5
    5. '1' → logprob: -17.75
    6. 'last' → logprob: -17.75
    7. 'max' → logprob: -18.25
    8. '   ' → logprob: -18.625
    9. '[last' → logprob: -19.875
    10. '{' → logprob: -20.1875

Token 1155: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5762503147125244
    2. ' =' → logprob: -0.8262503147125244
    3. ']' → logprob: -8.451250076293945
    4. ']=' → logprob: -9.576250076293945
    5. '                               ' → logprob: -11.076250076293945
    6. '                                   ' → logprob: -12.576250076293945
    7. '=
' → logprob: -12.951250076293945
    8. ' =
' → logprob: -13.701250076293945
    9. ' +=' → logprob: -13.701250076293945
    10. '=True' → logprob: -13.826250076293945

Token 1156: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007100477814674377
    2. ' =' → logprob: -7.2507100105285645
    3. '=
' → logprob: -18.125709533691406
    4. '+=' → logprob: -18.375709533691406
    5. '=

' → logprob: -19.500709533691406
    6. '.=' → logprob: -20.250709533691406
    7. ']=' → logprob: -20.875709533691406
    8. '=max' → logprob: -21.625709533691406
    9. '=True' → logprob: -21.750709533691406
    10. '=int' → logprob: -21.875709533691406

Token 1157: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.011047814972698689
    2. ' length' → logprob: -4.511047840118408
    3. '(length' → logprob: -19.38604736328125
    4. 'Length' → logprob: -19.38604736328125
    5. '	length' → logprob: -20.51104736328125
    6. '_length' → logprob: -21.13604736328125
    7. 'leng' → logprob: -21.38604736328125
    8. '[length' → logprob: -21.38604736328125
    9. 'len' → logprob: -21.76104736328125
    10. 'ength' → logprob: -22.88604736328125

Token 1158: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00317783304490149
    2. ' +' → logprob: -5.753177642822266
    3. '＋' → logprob: -16.503177642822266
    4. '[' → logprob: -17.003177642822266
    5. '```' → logprob: -17.503177642822266
    6. '+i' → logprob: -17.878177642822266
    7. '                               ' → logprob: -18.003177642822266
    8. '()+' → logprob: -18.003177642822266
    9. '+[' → logprob: -18.003177642822266
    10. '+j' → logprob: -19.128177642822266

Token 1159: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '```' → logprob: -14.250000953674316
    3. ' ' → logprob: -15.125000953674316
    4. '
' → logprob: -18.875001907348633
    5. '<|end|>' → logprob: -19.250001907348633
    6. '``' → logprob: -20.250001907348633
    7. '   ' → logprob: -20.250001907348633
    8. '                               ' → logprob: -20.875001907348633
    9. '...' → logprob: -21.000001907348633
    10. '+' → logprob: -21.000001907348633

Token 1160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '```' → logprob: -17.25
    4. '
' → logprob: -20.125
    5. '   ' → logprob: -20.875
    6. '``' → logprob: -21.25
    7. '<|end|>' → logprob: -21.5625
    8. 'max' → logprob: -22.0
    9. '１' → logprob: -22.0
    10. '۱' → logprob: -22.125

Token 1161: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.29525449872016907
    2. '```' → logprob: -2.0452544689178467
    3. '<|end|>' → logprob: -3.5452544689178467
    4. '                                
' → logprob: -3.7952544689178467
    5. '\n' → logprob: -4.170254707336426
    6. '``' → logprob: -4.545254707336426
    7. '                           ' → logprob: -4.795254707336426
    8. '                                   ' → logprob: -5.045254707336426
    9. '\' → logprob: -5.045254707336426
    10. ' and' → logprob: -5.420254707336426

Token 1162: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.12096825242042542
    2. '<|end|>' → logprob: -3.1209683418273926
    3. '                           ' → logprob: -3.8709683418273926
    4. '\n' → logprob: -4.245968341827393
    5. '\' → logprob: -4.745968341827393
    6. '```' → logprob: -4.995968341827393
    7. '                                
' → logprob: -5.120968341827393
    8. '                                   ' → logprob: -5.495968341827393
    9. '
' → logprob: -6.120968341827393
    10. '``' → logprob: -7.370968341827393

Token 1163: ' updated' (ID: 8489)
  Prédit: 'updated'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'updated' (adapté à ' updated') → logprob: -0.01918964274227619
    2. ' updated' → logprob: -4.644189834594727
    3. '                               ' → logprob: -5.019189834594727
    4. '                                   ' → logprob: -6.019189834594727
    5. '```' → logprob: -8.269189834594727
    6. '                                       ' → logprob: -10.769189834594727
    7. '                           ' → logprob: -11.144189834594727
    8. '``' → logprob: -11.269189834594727
    9. '   ' → logprob: -11.769189834594727
    10. '                                           ' → logprob: -11.894189834594727

Token 1164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07925987988710403
    2. '=' → logprob: -2.5792598724365234
    3. '=True' → logprob: -7.954259872436523
    4. '                               ' → logprob: -11.954259872436523
    5. '=False' → logprob: -12.204259872436523
    6. '                                   ' → logprob: -12.829259872436523
    7. '                           ' → logprob: -14.204259872436523
    8. '                                       ' → logprob: -14.454259872436523
    9. '```' → logprob: -14.704259872436523
    10. '<|end|>' → logprob: -14.704259872436523

Token 1165: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0002613358374219388
    2. ' True' → logprob: -8.250261306762695
    3. '                               ' → logprob: -19.000261306762695
    4. '                           ' → logprob: -19.250261306762695
    5. '(True' → logprob: -19.375261306762695
    6. '   ' → logprob: -19.750261306762695
    7. 'true' → logprob: -20.125261306762695
    8. '                                   ' → logprob: -20.250261306762695
    9. '=True' → logprob: -20.375261306762695
    10. '                       ' → logprob: -20.750261306762695

Token 1166: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1075516939163208
    2. '```' → logprob: -1.2325516939163208
    3. '                               ' → logprob: -1.6075516939163208
    4. '                           ' → logprob: -2.6075515747070312
    5. '<|end|>' → logprob: -2.8575515747070312
    6. '                   ' → logprob: -4.357551574707031
    7. '           ' → logprob: -5.482551574707031
    8. '                       ' → logprob: -5.732551574707031
    9. ')' → logprob: -5.857551574707031
    10. '                                
' → logprob: -6.232551574707031

Token 1167: '                   ' (ID: 699)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6370018124580383
    2. '               ' → logprob: -1.5120017528533936
    3. '                   ' → logprob: -1.7620017528533936
    4. '                               ' → logprob: -3.0120017528533936
    5. '                           ' → logprob: -4.012001991271973
    6. '                       ' → logprob: -5.637001991271973
    7. '``' → logprob: -6.262001991271973
    8. '           ' → logprob: -6.512001991271973
    9. '<|end|>' → logprob: -7.262001991271973
    10. '			' → logprob: -7.762001991271973

Token 1168: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07415065914392471
    2. 'elif' (adapté à ' elif') → logprob: -2.824150562286377
    3. '                   ' → logprob: -4.574150562286377
    4. '```' → logprob: -6.949150562286377
    5. ' elif' → logprob: -7.574150562286377
    6. 'else' → logprob: -9.074151039123535
    7. '           ' → logprob: -9.699151039123535
    8. '                               ' → logprob: -9.824151039123535
    9. '                       ' → logprob: -10.949151039123535
    10. '   ' → logprob: -11.199151039123535

Token 1169: ' last' (ID: 2174)
  Prédit: ' last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.4027866721153259
    2. 'last' → logprob: -1.5277867317199707
    3. '1' → logprob: -2.2777867317199707
    4. '0' → logprob: -4.902786731719971
    5. ' ' → logprob: -5.402786731719971
    6. '(last' → logprob: -9.902786254882812
    7. '[last' → logprob: -11.277786254882812
    8. '	last' → logprob: -12.402786254882812
    9. '   ' → logprob: -12.777786254882812
    10. '```' → logprob: -13.027786254882812

Token 1170: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10021626949310303
    2. '==' → logprob: -2.3502163887023926
    3. '=' → logprob: -12.600215911865234
    4. ' =' → logprob: -12.600215911865234
    5. '==
' → logprob: -13.600215911865234
    6. '```' → logprob: -14.850215911865234
    7. '<|end|>' → logprob: -15.475215911865234
    8. ']==' → logprob: -15.600215911865234
    9. '[' → logprob: -15.725215911865234
    10. ')==' → logprob: -15.850215911865234

Token 1171: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004623203072696924
    2. ' ' → logprob: -5.3796234130859375
    3. '0' → logprob: -12.879623413085938
    4. '   ' → logprob: -15.379623413085938
    5. '<|end|>' → logprob: -16.504623413085938
    6. '(' → logprob: -16.629623413085938
    7. '[' → logprob: -17.192123413085938
    8. '```' → logprob: -17.629623413085938
    9. '  ' → logprob: -17.754623413085938
    10. ' ' → logprob: -17.817123413085938

Token 1172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.875000953674316
    3. '0' → logprob: -15.625000953674316
    4. '```' → logprob: -17.250001907348633
    5. '   ' → logprob: -17.375001907348633
    6. '
' → logprob: -18.187501907348633
    7. '...' → logprob: -19.625001907348633
    8. '১' → logprob: -19.875001907348633
    9. '' → logprob: -20.000001907348633
    10. '(' → logprob: -20.000001907348633

Token 1173: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.6796714663505554
    2. ':' → logprob: -1.4296715259552002
    3. '                               ' → logprob: -2.3046715259552
    4. '                           ' → logprob: -2.6796715259552
    5. ':
' → logprob: -3.4296715259552
    6. '                   ' → logprob: -3.6796715259552
    7. '```' → logprob: -3.8046715259552
    8. '<|end|>' → logprob: -7.179671287536621
    9. ' and' → logprob: -7.304671287536621
    10. ',' → logprob: -7.804671287536621

Token 1174: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0024827925954014063
    2. '                               ' → logprob: -6.877482891082764
    3. '                           ' → logprob: -6.877482891082764
    4. '                     ' → logprob: -9.502482414245605
    5. '```' → logprob: -9.502482414245605
    6. '                        ' → logprob: -9.627482414245605
    7. '                   ' → logprob: -9.877482414245605
    8. '					' → logprob: -10.127482414245605
    9. '                        
' → logprob: -11.127482414245605
    10. '                      ' → logprob: -11.377482414245605

Token 1175: ' if' (ID: 538)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.604097843170166
    2. '                               ' → logprob: -1.104097843170166
    3. '                       ' → logprob: -2.604097843170166
    4. ' prev' → logprob: -4.104097843170166
    5. ' if' → logprob: -4.479097843170166
    6. '```' → logprob: -5.354097843170166
    7. 'prev' → logprob: -5.604097843170166
    8. '                                   ' → logprob: -6.479097843170166
    9. '						' → logprob: -6.729097843170166
    10. '                            ' → logprob: -6.854097843170166

Token 1176: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0939350426197052
    2. 'j' → logprob: -2.468935012817383
    3. ' i' → logprob: -5.468935012817383
    4. ' j' → logprob: -7.218935012817383
    5. '   ' → logprob: -10.593935012817383
    6. '                   ' → logprob: -13.093935012817383
    7. '           ' → logprob: -13.968935012817383
    8. '0' → logprob: -14.093935012817383
    9. '               ' → logprob: -14.218935012817383
    10. '(i' → logprob: -14.343935012817383

Token 1177: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.004472370259463787
    2. '<' → logprob: -5.504472255706787
    3. '+' → logprob: -8.254472732543945
    4. ' >' → logprob: -9.629472732543945
    5. ' +' → logprob: -9.879472732543945
    6. '>' → logprob: -11.879472732543945
    7. '```' → logprob: -13.629472732543945
    8. '<int' → logprob: -13.754472732543945
    9. ' ' → logprob: -13.754472732543945
    10. '<len' → logprob: -14.004472732543945

Token 1178: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002736639464274049
    2. ' ' → logprob: -6.252736568450928
    3. '=' → logprob: -7.127736568450928
    4. 'j' → logprob: -13.002737045288086
    5. '```' → logprob: -13.877737045288086
    6. '   ' → logprob: -14.127737045288086
    7. '+' → logprob: -15.377737045288086
    8. '``' → logprob: -15.752737045288086
    9. ' =' → logprob: -15.877737045288086
    10. '=j' → logprob: -16.127737045288086

Token 1179: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6047699318733066e-05
    2. '=' → logprob: -11.375016212463379
    3. ' ' → logprob: -12.500016212463379
    4. 'j' → logprob: -14.750016212463379
    5. '
' → logprob: -16.625015258789062
    6. '```' → logprob: -17.125015258789062
    7. '   ' → logprob: -17.437515258789062
    8. '``' → logprob: -17.562515258789062
    9. 'i' → logprob: -17.625015258789062
    10. '`' → logprob: -17.687515258789062

Token 1180: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.029734177514910698
    2. '```' → logprob: -4.404734134674072
    3. '                               ' → logprob: -5.154734134674072
    4. ' and' → logprob: -5.279734134674072
    5. ':
' → logprob: -5.279734134674072
    6. ':' → logprob: -7.779734134674072
    7. '                       ' → logprob: -7.779734134674072
    8. '``' → logprob: -9.40473461151123
    9. '                            ' → logprob: -9.65473461151123
    10. 'and' → logprob: -10.02973461151123

Token 1181: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0950738787651062
    2. '```' → logprob: -2.470073938369751
    3. '                               ' → logprob: -5.220073699951172
    4. '``' → logprob: -7.845073699951172
    5. '                       ' → logprob: -9.595073699951172
    6. '                                   ' → logprob: -9.845073699951172
    7. '                            ' → logprob: -9.970073699951172
    8. '						' → logprob: -10.220073699951172
    9. 'prev' → logprob: -10.470073699951172
    10. '                             ' → logprob: -10.720073699951172

Token 1182: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -0.030420811846852303
    2. ' prev' → logprob: -4.155420780181885
    3. '                               ' → logprob: -4.280420780181885
    4. '                           ' → logprob: -8.280421257019043
    5. '```' → logprob: -9.405421257019043
    6. '                                   ' → logprob: -10.155421257019043
    7. '	prev' → logprob: -10.405421257019043
    8. '(prev' → logprob: -12.030421257019043
    9. ' ' → logprob: -12.280421257019043
    10. '                       ' → logprob: -12.405421257019043

Token 1183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.4518643617630005
    2. '=' → logprob: -1.7018643617630005
    3. '[T' → logprob: -1.8268643617630005
    4. '                           ' → logprob: -2.201864242553711
    5. ' >' → logprob: -2.826864242553711
    6. ' ==' → logprob: -3.451864242553711
    7. '>=' → logprob: -3.451864242553711
    8. '>' → logprob: -3.451864242553711
    9. '[j' → logprob: -3.576864242553711
    10. '>T' → logprob: -3.701864242553711

Token 1184: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.25192946195602417
    2. ' T' → logprob: -1.501929521560669
    3. '                           ' → logprob: -16.126930236816406
    4. '   ' → logprob: -16.376930236816406
    5. ' ' → logprob: -16.626930236816406
    6. '                       ' → logprob: -17.251930236816406
    7. '	T' → logprob: -17.501930236816406
    8. '`' → logprob: -18.001930236816406
    9. '```' → logprob: -18.001930236816406
    10. '_T' → logprob: -18.126930236816406

Token 1185: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.2664456789934775e-06
    2. '```' → logprob: -14.250000953674316
    3. ' [' → logprob: -15.375000953674316
    4. '-' → logprob: -16.000001907348633
    5. '                           ' → logprob: -16.875001907348633
    6. '           ' → logprob: -17.250001907348633
    7. '[' → logprob: -17.375001907348633
    8. '   ' → logprob: -17.625001907348633
    9. '[i' → logprob: -17.875001907348633
    10. '
' → logprob: -18.125001907348633

Token 1186: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.978233846486546e-05
    2. ' -' → logprob: -10.625049591064453
    3. '[j' → logprob: -11.375049591064453
    4. '                           ' → logprob: -11.625049591064453
    5. '[' → logprob: -13.125049591064453
    6. '                               ' → logprob: -13.750049591064453
    7. '```' → logprob: -14.750049591064453
    8. '1' → logprob: -15.250049591064453
    9. '[-' → logprob: -15.750049591064453
    10. '                                   ' → logprob: -15.750049591064453

Token 1187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021882106084376574
    2. '-' → logprob: -6.127188205718994
    3. '```' → logprob: -13.127188682556152
    4. ' ' → logprob: -14.502188682556152
    5. '   ' → logprob: -15.752188682556152
    6. '
' → logprob: -16.002187728881836
    7. '``' → logprob: -16.377187728881836
    8. ' -' → logprob: -16.877187728881836
    9. '0' → logprob: -16.877187728881836
    10. '...' → logprob: -17.502187728881836

Token 1188: ']
' (ID: 1592)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.6447306871414185
    2. '                               ' → logprob: -1.3947306871414185
    3. '):
' → logprob: -2.269730567932129
    4. '```' → logprob: -3.019730567932129
    5. ')' → logprob: -3.269730567932129
    6. ':
' → logprob: -4.394730567932129
    7. ')
' → logprob: -4.394730567932129
    8. '                       ' → logprob: -5.519730567932129
    9. ''):
' → logprob: -6.269730567932129
    10. '<|end|>' → logprob: -6.644730567932129

Token 1189: '                           ' (ID: 1686)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.035057853907346725
    2. '                           ' → logprob: -3.910057783126831
    3. '```' → logprob: -4.28505802154541
    4. ' if' → logprob: -8.91005802154541
    5. '                                   ' → logprob: -8.91005802154541
    6. '                             ' → logprob: -9.53505802154541
    7. '``' → logprob: -9.78505802154541
    8. '                            ' → logprob: -9.78505802154541
    9. 'if' → logprob: -9.91005802154541
    10. '                       ' → logprob: -10.41005802154541

Token 1190: ' if' (ID: 538)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.4320068657398224
    2. 'if' (adapté à ' if') → logprob: -1.5570068359375
    3. ' if' → logprob: -2.0570068359375
    4. '```' → logprob: -4.9320068359375
    5. '                           ' → logprob: -5.4320068359375
    6. '                                   ' → logprob: -8.3070068359375
    7. '                             ' → logprob: -8.9320068359375
    8. '``' → logprob: -9.3070068359375
    9. '                            ' → logprob: -10.1820068359375
    10. '                              ' → logprob: -10.8070068359375

Token 1191: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.0024768433067947626
    2. ' can' → logprob: -6.002476692199707
    3. 'not' → logprob: -14.877476692199707
    4. '```' → logprob: -14.877476692199707
    5. '(can' → logprob: -15.502476692199707
    6. '_can' → logprob: -16.502477645874023
    7. ' not' → logprob: -17.627477645874023
    8. '	can' → logprob: -17.627477645874023
    9. '                           ' → logprob: -17.877477645874023
    10. 'c' → logprob: -18.502477645874023

Token 1192: '_connect' (ID: 32485)
  Prédit: '_connect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_connect' → logprob: -0.1706443428993225
    2. 'can' → logprob: -2.5456442832946777
    3. 'connect' → logprob: -2.5456442832946777
    4. ' can' → logprob: -11.670644760131836
    5. '_can' → logprob: -12.420644760131836
    6. '(can' → logprob: -12.420644760131836
    7. '_CONNECT' → logprob: -12.545644760131836
    8. 'conn' → logprob: -12.795644760131836
    9. '```' → logprob: -13.545644760131836
    10. 'not' → logprob: -13.545644760131836

Token 1193: '(prev' (ID: 59594)
  Prédit: '(prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prev' → logprob: -0.0486382357776165
    2. 'prev' → logprob: -3.048638343811035
    3. ' prev' → logprob: -10.048638343811035
    4. ' (' → logprob: -12.923638343811035
    5. '	prev' → logprob: -13.048638343811035
    6. '(' → logprob: -13.173638343811035
    7. '.prev' → logprob: -14.798638343811035
    8. '_prev' → logprob: -15.673638343811035
    9. '                           ' → logprob: -15.798638343811035
    10. '(
' → logprob: -16.54863739013672

Token 1194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031846018973737955
    2. ',c' → logprob: -6.378184795379639
    3. '(prev' → logprob: -6.753184795379639
    4. ' ,' → logprob: -8.87818431854248
    5. 'prev' → logprob: -9.62818431854248
    6. '                               ' → logprob: -9.75318431854248
    7. '                           ' → logprob: -10.87818431854248
    8. '(c' → logprob: -11.25318431854248
    9. '```' → logprob: -11.75318431854248
    10. '                                   ' → logprob: -12.87818431854248

Token 1195: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3870050311088562
    2. ' c' → logprob: -1.137005090713501
    3. 'prev' → logprob: -9.137004852294922
    4. ' prev' → logprob: -11.137004852294922
    5. ' ' → logprob: -12.012004852294922
    6. '```' → logprob: -13.512004852294922
    7. ' ' → logprob: -13.887004852294922
    8. ')c' → logprob: -14.387004852294922
    9. '	c' → logprob: -14.512004852294922
    10. '    ' → logprob: -15.137004852294922

Token 1196: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.018438229337334633
    2. '):' → logprob: -4.143438339233398
    3. ')' → logprob: -6.768438339233398
    4. '                               ' → logprob: -6.893438339233398
    5. '                           ' → logprob: -8.768438339233398
    6. '):

' → logprob: -10.518438339233398
    7. ''):
' → logprob: -10.768438339233398
    8. ':
' → logprob: -11.018438339233398
    9. '):
' → logprob: -12.268438339233398
    10. '```' → logprob: -12.768438339233398

Token 1197: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.007348208222538233
    2. '```' → logprob: -5.13234806060791
    3. '                                   ' → logprob: -7.63234806060791
    4. '                           ' → logprob: -7.88234806060791
    5. '``' → logprob: -7.88234806060791
    6. '                                       ' → logprob: -9.50734806060791
    7. '                                
' → logprob: -10.50734806060791
    8. '                             ' → logprob: -11.13234806060791
    9. '                              ' → logprob: -11.25734806060791
    10. '                                ' → logprob: -11.38234806060791

Token 1198: ' if' (ID: 538)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -1.111858606338501
    2. 'if' (adapté à ' if') → logprob: -1.236858606338501
    3. 'dp' → logprob: -1.236858606338501
    4. ' if' → logprob: -2.611858606338501
    5. ' dp' → logprob: -4.736858367919922
    6. '                                   ' → logprob: -5.611858367919922
    7. '```' → logprob: -5.611858367919922
    8. '                           ' → logprob: -7.736858367919922
    9. '                                       ' → logprob: -8.736858367919922
    10. '``' → logprob: -8.861858367919922

Token 1199: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.4740838408470154
    2. 'dp' → logprob: -0.9740838408470154
    3. '(dp' → logprob: -12.09908390045166
    4. '	dp' → logprob: -14.09908390045166
    5. '_dp' → logprob: -14.84908390045166
    6. '.dp' → logprob: -16.474082946777344
    7. ' ' → logprob: -18.099082946777344
    8. '                           ' → logprob: -18.224082946777344
    9. 'Dp' → logprob: -18.224082946777344
    10. '                   ' → logprob: -18.849082946777344

Token 1200: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.096126576769166e-05
    2. 'i' → logprob: -10.125041007995605
    3. '{i' → logprob: -15.875041007995605
    4. '[j' → logprob: -16.25004005432129
    5. '[I' → logprob: -16.37504005432129
    6. '           ' → logprob: -16.62504005432129
    7. '```' → logprob: -16.75004005432129
    8. 'I' → logprob: -16.75004005432129
    9. ' i' → logprob: -16.87504005432129
    10. '(i' → logprob: -17.00004005432129

Token 1201: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3871188461780548
    2. '+' → logprob: -1.1371188163757324
    3. '][' → logprob: -9.01211929321289
    4. '[j' → logprob: -9.76211929321289
    5. '+i' → logprob: -10.26211929321289
    6. 'i' → logprob: -10.63711929321289
    7. '[' → logprob: -12.38711929321289
    8. ' +' → logprob: -13.63711929321289
    9. '+
' → logprob: -14.38711929321289
    10. '+[' → logprob: -14.51211929321289

Token 1202: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5827805995941162
    2. '+' → logprob: -1.2077805995941162
    3. '1' → logprob: -1.9577805995941162
    4. 'i' → logprob: -6.832780838012695
    5. '```' → logprob: -8.332780838012695
    6. '[j' → logprob: -9.457780838012695
    7. '][' → logprob: -9.707780838012695
    8. '   ' → logprob: -10.582780838012695
    9. ' j' → logprob: -10.582780838012695
    10. '[' → logprob: -10.582780838012695

Token 1203: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.38706493377685547
    2. '][' → logprob: -1.1370649337768555
    3. '[i' → logprob: -9.387064933776855
    4. '[' → logprob: -10.012064933776855
    5. '>[' → logprob: -10.887064933776855
    6. '           ' → logprob: -11.262064933776855
    7. '```' → logprob: -11.512064933776855
    8. '                   ' → logprob: -12.637064933776855
    9. ' [' → logprob: -12.637064933776855
    10. '>' → logprob: -12.887064933776855

Token 1204: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.054500666621607e-06
    2. ' j' → logprob: -12.87500286102295
    3. '	j' → logprob: -15.00000286102295
    4. '[j' → logprob: -17.875003814697266
    5. '   ' → logprob: -18.250003814697266
    6. '$j' → logprob: -18.375003814697266
    7. ':j' → logprob: -18.625003814697266
    8. ',j' → logprob: -18.625003814697266
    9. '           ' → logprob: -18.875003814697266
    10. '<|end|>' → logprob: -19.875003814697266

Token 1205: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01102506648749113
    2. '[' → logprob: -4.6360249519348145
    3. '[i' → logprob: -7.0110249519348145
    4. '[j' → logprob: -8.136025428771973
    5. '>[' → logprob: -11.386025428771973
    6. '                               ' → logprob: -11.511025428771973
    7. '                           ' → logprob: -11.636025428771973
    8. ''][' → logprob: -12.011025428771973
    9. '                                   ' → logprob: -12.011025428771973
    10. ']' → logprob: -12.511025428771973

Token 1206: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.0
    3. '[' → logprob: -16.625
    4. '1' → logprob: -17.375
    5. 'updated' → logprob: -18.0
    6. 'length' → logprob: -19.125
    7. '۰' → logprob: -20.125
    8. '   ' → logprob: -20.125
    9. '(' → logprob: -20.25
    10. '           ' → logprob: -20.5

Token 1207: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3537425398826599
    2. '<' → logprob: -1.2287425994873047
    3. ']' → logprob: -5.603742599487305
    4. ']<' → logprob: -7.103742599487305
    5. '[' → logprob: -7.978742599487305
    6. '<|end|>' → logprob: -8.853742599487305
    7. '                               ' → logprob: -9.603742599487305
    8. '][' → logprob: -10.103742599487305
    9. '```' → logprob: -10.228742599487305
    10. '<span' → logprob: -10.728742599487305

Token 1208: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3870311975479126
    2. '<' → logprob: -1.1370311975479126
    3. '                               ' → logprob: -9.887031555175781
    4. '<size' → logprob: -10.637031555175781
    5. '<|end|>' → logprob: -11.262031555175781
    6. '                                   ' → logprob: -11.637031555175781
    7. '```' → logprob: -11.762031555175781
    8. '<p' → logprob: -11.887031555175781
    9. '<span' → logprob: -12.262031555175781
    10. '<int' → logprob: -12.262031555175781

Token 1209: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0015023599844425917
    2. ' length' → logprob: -6.501502513885498
    3. 'Length' → logprob: -18.251502990722656
    4. '                           ' → logprob: -18.376502990722656
    5. '   ' → logprob: -18.751502990722656
    6. '                               ' → logprob: -19.376502990722656
    7. '                   ' → logprob: -19.751502990722656
    8. '(length' → logprob: -20.251502990722656
    9. '	length' → logprob: -20.251502990722656
    10. '                       ' → logprob: -20.501502990722656

Token 1210: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12692968547344208
    2. '+' → logprob: -2.126929759979248
    3. '                               ' → logprob: -13.87692928314209
    4. '＋' → logprob: -15.37692928314209
    5. '<|end|>' → logprob: -15.75192928314209
    6. '                                   ' → logprob: -16.376930236816406
    7. ' ' → logprob: -16.626930236816406
    8. '```' → logprob: -17.001930236816406
    9. '()+' → logprob: -17.251930236816406
    10. '<|end|>' → logprob: -17.876930236816406

Token 1211: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.12500286102295
    3. '```' → logprob: -15.12500286102295
    4. '   ' → logprob: -17.125001907348633
    5. '+' → logprob: -17.250001907348633
    6. '                               ' → logprob: -18.062501907348633
    7. '2' → logprob: -18.125001907348633
    8. '...' → logprob: -18.187501907348633
    9. '
' → logprob: -18.500001907348633
    10. '                                   ' → logprob: -19.125001907348633

Token 1212: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.5
    3. ' ' → logprob: -17.5
    4. '+' → logprob: -18.875
    5. '2' → logprob: -19.125
    6. '``' → logprob: -19.375
    7. '
' → logprob: -20.0
    8. 'from' → logprob: -20.4375
    9. '   ' → logprob: -20.4375
    10. 'Please' → logprob: -20.8125

Token 1213: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7990540266036987
    2. ':' → logprob: -0.9240540266036987
    3. '                               ' → logprob: -1.9240540266036987
    4. '):
' → logprob: -5.549054145812988
    5. '                                   ' → logprob: -6.549054145812988
    6. '<|end|>' → logprob: -7.299054145812988
    7. '                           ' → logprob: -8.299054145812988
    8. '):' → logprob: -8.424054145812988
    9. '():
' → logprob: -8.674054145812988
    10. '```' → logprob: -8.924054145812988

Token 1214: '                                   ' (ID: 3523)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.07219613343477249
    2. '                                   ' → logprob: -2.9471962451934814
    3. '```' → logprob: -4.447196006774902
    4. '                                       ' → logprob: -5.697196006774902
    5. '                                ' → logprob: -7.697196006774902
    6. '``' → logprob: -8.197196006774902
    7. '                           ' → logprob: -8.322196006774902
    8. '                                           ' → logprob: -8.322196006774902
    9. '                                
' → logprob: -8.447196006774902
    10. '<|end|>' → logprob: -9.197196006774902

Token 1215: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.00015335931675508618
    2. ' dp' → logprob: -8.875153541564941
    3. '                               ' → logprob: -11.625153541564941
    4. '                                   ' → logprob: -12.750153541564941
    5. '```' → logprob: -13.750153541564941
    6. '                                       ' → logprob: -16.000152587890625
    7. '(dp' → logprob: -16.000152587890625
    8. '	dp' → logprob: -16.375152587890625
    9. '                           ' → logprob: -16.375152587890625
    10. '_dp' → logprob: -16.750152587890625

Token 1216: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005033504567109048
    2. '[' → logprob: -7.6255035400390625
    3. 'i' → logprob: -12.250503540039062
    4. '<|end|>' → logprob: -12.500503540039062
    5. '```' → logprob: -13.375503540039062
    6. '+' → logprob: -13.625503540039062
    7. '[++' → logprob: -14.125503540039062
    8. '[
' → logprob: -14.375503540039062
    9. '[next' → logprob: -14.875503540039062
    10. '(i' → logprob: -15.250503540039062

Token 1217: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3425219549390022e-05
    2. '[' → logprob: -11.25001335144043
    3. '1' → logprob: -15.87501335144043
    4. ' +' → logprob: -16.00001335144043
    5. '```' → logprob: -16.50001335144043
    6. '+
' → logprob: -16.62501335144043
    7. '+[' → logprob: -17.00001335144043
    8. ']+' → logprob: -18.00001335144043
    9. '[i' → logprob: -18.12501335144043
    10. '＋' → logprob: -18.25001335144043

Token 1218: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4868770196917467e-05
    2. '+' → logprob: -10.625024795532227
    3. ' ' → logprob: -15.125024795532227
    4. '
' → logprob: -16.125024795532227
    5. '```' → logprob: -16.125024795532227
    6. '   ' → logprob: -17.375024795532227
    7. 'j' → logprob: -17.500024795532227
    8. '0' → logprob: -18.125024795532227
    9. 'i' → logprob: -18.375024795532227
    10. '[' → logprob: -18.375024795532227

Token 1219: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.10941161960363388
    2. '[j' → logprob: -2.8594117164611816
    3. '[i' → logprob: -3.1094117164611816
    4. '+' → logprob: -6.984411716461182
    5. '[' → logprob: -7.734411716461182
    6. '>[' → logprob: -10.359411239624023
    7. '```' → logprob: -10.484411239624023
    8. '[][' → logprob: -10.484411239624023
    9. '}[' → logprob: -10.609411239624023
    10. '           ' → logprob: -10.859411239624023

Token 1220: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.981667537620524e-06
    2. ' j' → logprob: -13.500001907348633
    3. '[j' → logprob: -15.500001907348633
    4. '	j' → logprob: -16.250001907348633
    5. '$j' → logprob: -16.250001907348633
    6. 'i' → logprob: -16.875001907348633
    7. '   ' → logprob: -17.000001907348633
    8. '```' → logprob: -17.250001907348633
    9. '_j' → logprob: -18.875001907348633
    10. '       ' → logprob: -18.875001907348633

Token 1221: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.020348237827420235
    2. '+' → logprob: -4.020348072052002
    3. '[' → logprob: -6.395348072052002
    4. '[j' → logprob: -7.645348072052002
    5. '[i' → logprob: -11.77034854888916
    6. '           ' → logprob: -12.02034854888916
    7. '```' → logprob: -12.02034854888916
    8. '                               ' → logprob: -12.27034854888916
    9. '                           ' → logprob: -12.39534854888916
    10. ']' → logprob: -13.02034854888916

Token 1222: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.022749193012714386
    2. 'j' → logprob: -3.897749185562134
    3. '1' → logprob: -6.147749423980713
    4. '```' → logprob: -10.397748947143555
    5. 'True' → logprob: -12.147748947143555
    6. '+' → logprob: -12.272748947143555
    7. ' ' → logprob: -12.522748947143555
    8. '[' → logprob: -12.647748947143555
    9. '   ' → logprob: -13.022748947143555
    10. '           ' → logprob: -13.397748947143555

Token 1223: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05577031150460243
    2. ' =' → logprob: -2.9307703971862793
    3. ']=' → logprob: -7.930770397186279
    4. ']' → logprob: -8.055769920349121
    5. '                               ' → logprob: -8.805769920349121
    6. '                                   ' → logprob: -10.805769920349121
    7. '+=' → logprob: -11.055769920349121
    8. ')' → logprob: -12.305769920349121
    9. ']+=' → logprob: -12.680769920349121
    10. '```' → logprob: -12.680769920349121

Token 1224: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011103355325758457
    2. ' =' → logprob: -4.51110315322876
    3. '                                   ' → logprob: -11.261103630065918
    4. '                               ' → logprob: -11.386103630065918
    5. '                                       ' → logprob: -11.511103630065918
    6. '+=' → logprob: -12.011103630065918
    7. '```' → logprob: -12.011103630065918
    8. '=
' → logprob: -13.136103630065918
    9. '<|end|>' → logprob: -13.261103630065918
    10. '=True' → logprob: -13.386103630065918

Token 1225: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.25192928314208984
    2. ' length' → logprob: -1.5019292831420898
    3. '                                   ' → logprob: -16.751930236816406
    4. 'Length' → logprob: -17.126930236816406
    5. '(length' → logprob: -17.876930236816406
    6. '_length' → logprob: -18.376930236816406
    7. 'len' → logprob: -18.501930236816406
    8. '	length' → logprob: -18.626930236816406
    9. '                               ' → logprob: -18.751930236816406
    10. '                                    ' → logprob: -19.001930236816406

Token 1226: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759432911872864
    2. '+' → logprob: -0.8259432911872864
    3. '```' → logprob: -13.075942993164062
    4. '                               ' → logprob: -14.700942993164062
    5. '＋' → logprob: -15.075942993164062
    6. ' ' → logprob: -15.200942993164062
    7. '                                   ' → logprob: -15.200942993164062
    8. '   ' → logprob: -16.200942993164062
    9. '           ' → logprob: -16.950942993164062
    10. '1' → logprob: -16.950942993164062

Token 1227: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '
' → logprob: -17.25
    4. '```' → logprob: -17.5
    5. '   ' → logprob: -18.875
    6. '                               ' → logprob: -19.5
    7. '``' → logprob: -20.125
    8. '                                   ' → logprob: -20.875
    9. '0' → logprob: -21.125
    10. '...' → logprob: -21.375

Token 1228: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011927806917810813
    2. 'length' → logprob: -9.12511920928955
    3. '```' → logprob: -12.62511920928955
    4. '+' → logprob: -12.87511920928955
    5. 'len' → logprob: -14.25011920928955
    6. '
' → logprob: -14.75011920928955
    7. 'Length' → logprob: -15.00011920928955
    8. '2' → logprob: -15.12511920928955
    9. ' ' → logprob: -15.12511920928955
    10. 'dp' → logprob: -15.43761920928955

Token 1229: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.7836501002311707
    2. '<|end|>' → logprob: -1.2836501598358154
    3. '                                   ' → logprob: -2.1586501598358154
    4. '```' → logprob: -2.2836501598358154
    5. '                                       ' → logprob: -3.7836501598358154
    6. '                                           ' → logprob: -5.408649921417236
    7. '                           ' → logprob: -5.533649921417236
    8. '                                
' → logprob: -5.908649921417236
    9. '<|end|>' → logprob: -5.908649921417236
    10. '                                    
' → logprob: -6.033649921417236

Token 1230: '                                   ' (ID: 3523)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.4128612279891968
    2. '                                   ' → logprob: -1.2878612279891968
    3. '```' → logprob: -3.6628613471984863
    4. '                                       ' → logprob: -4.412861347198486
    5. '<|end|>' → logprob: -4.412861347198486
    6. '                           ' → logprob: -5.537861347198486
    7. '                                           ' → logprob: -5.912861347198486
    8. '                                    
' → logprob: -6.787861347198486
    9. '                                
' → logprob: -6.787861347198486
    10. '								' → logprob: -8.037860870361328

Token 1231: ' updated' (ID: 8489)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.27762940526008606
    2. '                                   ' → logprob: -2.0276293754577637
    3. '                               ' → logprob: -3.4026293754577637
    4. 'updated' (adapté à ' updated') → logprob: -3.4026293754577637
    5. '```' → logprob: -3.7776293754577637
    6. ' True' → logprob: -4.277629375457764
    7. '                                       ' → logprob: -6.527629375457764
    8. '               ' → logprob: -7.152629375457764
    9. '                           ' → logprob: -7.402629375457764
    10. '                                           ' → logprob: -7.527629375457764

Token 1232: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.034481022506952286
    2. ' =' → logprob: -3.9094810485839844
    3. '=True' → logprob: -4.284481048583984
    4. '                               ' → logprob: -10.784481048583984
    5. '=False' → logprob: -10.909481048583984
    6. '+=' → logprob: -12.284481048583984
    7. '<|end|>' → logprob: -12.284481048583984
    8. '                           ' → logprob: -12.909481048583984
    9. '=
' → logprob: -13.034481048583984
    10. '                                   ' → logprob: -13.159481048583984

Token 1233: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.10020710527896881
    2. 'True' → logprob: -2.3502070903778076
    3. '=True' → logprob: -15.225207328796387
    4. '(True' → logprob: -15.350207328796387
    5. ' ' → logprob: -19.10020637512207
    6. '_true' → logprob: -19.60020637512207
    7. '.True' → logprob: -20.35020637512207
    8. ' Tru' → logprob: -20.85020637512207
    9. '
' → logprob: -21.47520637512207
    10. ' true' → logprob: -21.72520637512207

Token 1234: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6666231155395508
    2. '               ' → logprob: -0.9166231155395508
    3. '```' → logprob: -2.791623115539551
    4. '                               ' → logprob: -4.041623115539551
    5. '                           ' → logprob: -5.541623115539551
    6. '                       ' → logprob: -5.791623115539551
    7. '
' → logprob: -8.29162311553955
    8. '           ' → logprob: -8.54162311553955
    9. '``' → logprob: -8.66662311553955
    10. '                                   ' → logprob: -9.91662311553955

Token 1235: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19209705293178558
    2. '                   ' → logprob: -2.1920969486236572
    3. '```' → logprob: -3.3170969486236572
    4. '                               ' → logprob: -3.8170969486236572
    5. '                           ' → logprob: -5.817097187042236
    6. '                       ' → logprob: -6.817097187042236
    7. '           ' → logprob: -8.067096710205078
    8. 'elif' → logprob: -8.942096710205078
    9. '                                   ' → logprob: -9.317096710205078
    10. '                                       ' → logprob: -10.067096710205078

Token 1236: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00925482902675867
    2. '                   ' → logprob: -5.1342549324035645
    3. '```' → logprob: -6.3842549324035645
    4. '                               ' → logprob: -6.5092549324035645
    5. '           ' → logprob: -9.759254455566406
    6. '                           ' → logprob: -10.384254455566406
    7. 'elif' → logprob: -11.259254455566406
    8. '                       ' → logprob: -11.384254455566406
    9. '                                   ' → logprob: -11.634254455566406
    10. '``' → logprob: -12.259254455566406

Token 1237: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5522108674049377
    2. '                       ' → logprob: -1.552210807800293
    3. ':' → logprob: -2.677210807800293
    4. '                               ' → logprob: -2.802210807800293
    5. '```' → logprob: -3.427210807800293
    6. ':
' → logprob: -3.927210807800293
    7. '                           ' → logprob: -4.177210807800293
    8. '               ' → logprob: -5.802210807800293
    9. '<|end|>' → logprob: -6.302210807800293
    10. '   ' → logprob: -6.552210807800293

Token 1238: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.07689833641052246
    2. '                               ' → logprob: -2.9518983364105225
    3. '                   ' → logprob: -4.451898574829102
    4. '                           ' → logprob: -4.826898574829102
    5. 'continue' → logprob: -7.826898574829102
    6. '               ' → logprob: -7.951898574829102
    7. '```' → logprob: -7.951898574829102
    8. '                                   ' → logprob: -8.326898574829102
    9. '                                           ' → logprob: -8.826898574829102
    10. '                                       ' → logprob: -9.451898574829102

Token 1239: ' if' (ID: 538)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.1967802196741104
    2. '                       ' → logprob: -2.821780204772949
    3. '                   ' → logprob: -3.321780204772949
    4. '                           ' → logprob: -3.321780204772949
    5. 'continue' → logprob: -4.321780204772949
    6. '```' → logprob: -4.446780204772949
    7. '                                   ' → logprob: -4.696780204772949
    8. '               ' → logprob: -5.696780204772949
    9. '                                       ' → logprob: -5.821780204772949
    10. ' continue' → logprob: -6.321780204772949

Token 1240: ' c' (ID: 274)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4453229606151581
    2. 'False' → logprob: -1.6953229904174805
    3. ' i' → logprob: -1.9453229904174805
    4. ' False' → logprob: -3.8203229904174805
    5. 'j' → logprob: -5.5703229904174805
    6. '0' → logprob: -5.9453229904174805
    7. 'True' → logprob: -6.8203229904174805
    8. ' j' → logprob: -6.9453229904174805
    9. 'last' → logprob: -6.9453229904174805
    10. ' last' → logprob: -7.6953229904174805

Token 1241: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11616265028715134
    2. '==' → logprob: -2.2411625385284424
    3. '[' → logprob: -6.8661627769470215
    4. '<|end|>' → logprob: -6.9911627769470215
    5. ' !=' → logprob: -7.8661627769470215
    6. '```' → logprob: -8.741162300109863
    7. ')' → logprob: -8.866162300109863
    8. '=' → logprob: -8.991162300109863
    9. '[i' → logprob: -9.366162300109863
    10. ' ' → logprob: -9.366162300109863

Token 1242: ' '' (ID: 461)
  Prédit: ''I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''I' → logprob: -0.2528950870037079
    2. ''' → logprob: -1.5028951168060303
    3. ' '' → logprob: -7.127894878387451
    4. ''O' → logprob: -9.75289535522461
    5. 'I' → logprob: -10.00289535522461
    6. '"I' → logprob: -10.12789535522461
    7. ''S' → logprob: -11.62789535522461
    8. '‘I' → logprob: -13.12789535522461
    9. ''A' → logprob: -13.75289535522461
    10. ' I' → logprob: -14.00289535522461

Token 1243: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.581388533115387
    2. ''I' → logprob: -0.831388533115387
    3. ''' → logprob: -5.456388473510742
    4. '"I' → logprob: -7.081388473510742
    5. '')' → logprob: -9.706388473510742
    6. ''O' → logprob: -9.706388473510742
    7. ' I' → logprob: -9.956388473510742
    8. ' '' → logprob: -10.206388473510742
    9. 'O' → logprob: -11.081388473510742
    10. '’I' → logprob: -11.206388473510742

Token 1244: '':
' (ID: 7669)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -1.1843372583389282
    2. ')' → logprob: -1.5593372583389282
    3. ':' → logprob: -1.8093372583389282
    4. '                               ' → logprob: -2.1843371391296387
    5. '<|end|>' → logprob: -2.1843371391296387
    6. '):' → logprob: -3.3093371391296387
    7. '                       ' → logprob: -4.184337139129639
    8. '):
' → logprob: -4.809337139129639
    9. '<|end|>' → logprob: -5.059337139129639
    10. ':
' → logprob: -5.184337139129639

Token 1245: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.6384546756744385
    2. '                               ' → logprob: -0.7634546756744385
    3. '                       ' → logprob: -6.513454437255859
    4. '                            ' → logprob: -7.388454437255859
    5. ':' → logprob: -7.513454437255859
    6. '<|end|>' → logprob: -7.513454437255859
    7. '```' → logprob: -7.513454437255859
    8. ':
' → logprob: -7.763454437255859
    9. '                                   ' → logprob: -7.763454437255859
    10. '                            
' → logprob: -8.63845443725586

Token 1246: ' if' (ID: 538)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2800293266773224
    2. ' dp' → logprob: -1.530029296875
    3. '                               ' → logprob: -3.655029296875
    4. '                                   ' → logprob: -7.530029296875
    5. '                           ' → logprob: -8.405029296875
    6. ' if' → logprob: -8.405029296875
    7. 'if' (adapté à ' if') → logprob: -8.530029296875
    8. '   ' → logprob: -8.655029296875
    9. '```' → logprob: -8.780029296875
    10. '	dp' → logprob: -9.405029296875

Token 1247: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3870944082736969
    2. ' dp' → logprob: -1.1370943784713745
    3. '                               ' → logprob: -9.762094497680664
    4. '1' → logprob: -9.887094497680664
    5. '                           ' → logprob: -10.512094497680664
    6. '0' → logprob: -10.762094497680664
    7. '(dp' → logprob: -10.762094497680664
    8. '                                   ' → logprob: -11.387094497680664
    9. '	dp' → logprob: -12.262094497680664
    10. '_dp' → logprob: -12.637094497680664

Token 1248: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4021237802808173e-05
    2. 'i' → logprob: -11.250014305114746
    3. '[' → logprob: -15.000014305114746
    4. '[
' → logprob: -16.00001335144043
    5. '[I' → logprob: -16.00001335144043
    6. '```' → logprob: -16.00001335144043
    7. '{i' → logprob: -16.50001335144043
    8. '   ' → logprob: -17.25001335144043
    9. '(i' → logprob: -17.25001335144043
    10. '[j' → logprob: -17.25001335144043

Token 1249: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0010675819357857108
    2. '[i' → logprob: -7.001067638397217
    3. '][' → logprob: -9.126067161560059
    4. '[' → logprob: -10.251067161560059
    5. '+[' → logprob: -12.501067161560059
    6. '+i' → logprob: -12.751067161560059
    7. ' +' → logprob: -13.001067161560059
    8. '```' → logprob: -13.126067161560059
    9. '＋' → logprob: -15.251067161560059
    10. '[j' → logprob: -15.251067161560059

Token 1250: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002188925864174962
    2. '+' → logprob: -6.1271891593933105
    3. ' ' → logprob: -13.127188682556152
    4. '```' → logprob: -13.752188682556152
    5. '[' → logprob: -15.752188682556152
    6. ' +' → logprob: -16.12718963623047
    7. 'i' → logprob: -16.37718963623047
    8. '   ' → logprob: -16.50218963623047
    9. '[i' → logprob: -16.50218963623047
    10. '
' → logprob: -17.00218963623047

Token 1251: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006047654896974564
    2. '[j' → logprob: -5.13104772567749
    3. '[i' → logprob: -9.506047248840332
    4. '           ' → logprob: -11.006047248840332
    5. ' ][' → logprob: -11.381047248840332
    6. '[' → logprob: -12.381047248840332
    7. '                   ' → logprob: -12.881047248840332
    8. '```' → logprob: -13.006047248840332
    9. '   ' → logprob: -13.256047248840332
    10. ']' → logprob: -13.506047248840332

Token 1252: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.696889623621246e-06
    2. ' j' → logprob: -12.87500286102295
    3. '	j' → logprob: -17.125001907348633
    4. '   ' → logprob: -17.375001907348633
    5. '[j' → logprob: -18.375001907348633
    6. '$j' → logprob: -19.125001907348633
    7. '    ' → logprob: -19.500001907348633
    8. '           ' → logprob: -19.750001907348633
    9. '                   ' → logprob: -20.250001907348633
    10. '```' → logprob: -20.250001907348633

Token 1253: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04309955984354019
    2. '[' → logprob: -3.1680996417999268
    3. '<|end|>' → logprob: -9.918099403381348
    4. '```' → logprob: -11.293099403381348
    5. ''][' → logprob: -11.668099403381348
    6. '[i' → logprob: -11.793099403381348
    7. ']' → logprob: -12.168099403381348
    8. '>[' → logprob: -12.918099403381348
    9. '[][' → logprob: -13.043099403381348
    10. '"][' → logprob: -13.043099403381348

Token 1254: '0' (ID: 15)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.204720582696609e-05
    2. '0' → logprob: -9.875052452087402
    3. ' ' → logprob: -14.750052452087402
    4. '   ' → logprob: -17.125051498413086
    5. '```' → logprob: -17.625051498413086
    6. '
' → logprob: -17.875051498413086
    7. '1' → logprob: -19.250051498413086
    8. 'last' → logprob: -19.500051498413086
    9. '``' → logprob: -19.625051498413086
    10. '[' → logprob: -19.625051498413086

Token 1255: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0035561234690248966
    2. ']<' → logprob: -5.878556251525879
    3. '<' → logprob: -8.003556251525879
    4. '                           ' → logprob: -8.628556251525879
    5. '                               ' → logprob: -9.503556251525879
    6. '[' → logprob: -9.878556251525879
    7. ' <' → logprob: -9.878556251525879
    8. ' ]' → logprob: -11.628556251525879
    9. '```' → logprob: -11.753556251525879
    10. '']' → logprob: -11.878556251525879

Token 1256: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6350434422492981
    2. ' <' → logprob: -0.7600434422492981
    3. '=' → logprob: -6.135043621063232
    4. ' =' → logprob: -9.135043144226074
    5. '                           ' → logprob: -10.135043144226074
    6. '                               ' → logprob: -10.385043144226074
    7. ']' → logprob: -10.760043144226074
    8. '[' → logprob: -11.260043144226074
    9. ']<' → logprob: -12.010043144226074
    10. '```' → logprob: -12.385043144226074

Token 1257: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.370294846012257e-05
    2. ' ' → logprob: -10.125043869018555
    3. 'length' → logprob: -13.625043869018555
    4. '                               ' → logprob: -14.125043869018555
    5. '   ' → logprob: -14.375043869018555
    6. '0' → logprob: -15.000043869018555
    7. '                                   ' → logprob: -15.250043869018555
    8. '                           ' → logprob: -15.250043869018555
    9. '                       ' → logprob: -16.625043869018555
    10. '                   ' → logprob: -17.375043869018555

Token 1258: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.3596853831550106e-05
    2. 'length' → logprob: -9.875053405761719
    3. ' ' → logprob: -13.875053405761719
    4. '   ' → logprob: -15.000053405761719
    5. 'max' → logprob: -15.125053405761719
    6. '
' → logprob: -15.625053405761719
    7. '0' → logprob: -16.12505340576172
    8. 'dp' → logprob: -16.62505340576172
    9. ' length' → logprob: -17.25005340576172
    10. '
' → logprob: -17.68755340576172

Token 1259: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6139562129974365
    2. '                               ' → logprob: -0.8639562129974365
    3. ':' → logprob: -3.4889562129974365
    4. '                           ' → logprob: -5.363956451416016
    5. '):
' → logprob: -6.988956451416016
    6. '```' → logprob: -7.613956451416016
    7. '                                   ' → logprob: -8.363956451416016
    8. '                       ' → logprob: -9.363956451416016
    9. ')' → logprob: -9.738956451416016
    10. '():
' → logprob: -10.738956451416016

Token 1260: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.2130880057811737
    2. '```' → logprob: -1.838088035583496
    3. '                           ' → logprob: -4.213088035583496
    4. ':' → logprob: -5.213088035583496
    5. ':
' → logprob: -5.588088035583496
    6. '                                   ' → logprob: -5.838088035583496
    7. '):
' → logprob: -6.588088035583496
    8. '``' → logprob: -6.713088035583496
    9. '():
' → logprob: -7.213088035583496
    10. '<|end|>' → logprob: -8.088088035583496

Token 1261: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.4750475585460663
    2. ' dp' → logprob: -0.9750475883483887
    3. '                               ' → logprob: -7.100047588348389
    4. '                                   ' → logprob: -9.35004711151123
    5. '(dp' → logprob: -10.35004711151123
    6. '                           ' → logprob: -12.10004711151123
    7. '_dp' → logprob: -12.22504711151123
    8. '```' → logprob: -12.47504711151123
    9. '                                       ' → logprob: -12.60004711151123
    10. '	dp' → logprob: -13.35004711151123

Token 1262: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. 'i' → logprob: -15.125
    3. '```' → logprob: -16.5
    4. '   ' → logprob: -16.875
    5. ' [' → logprob: -18.5
    6. '[' → logprob: -18.75
    7. '           ' → logprob: -19.0
    8. '                   ' → logprob: -19.5
    9. '(i' → logprob: -19.75
    10. '       ' → logprob: -20.125

Token 1263: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.475158154964447
    2. '[i' → logprob: -0.975158154964447
    3. '[' → logprob: -7.100158214569092
    4. 'i' → logprob: -8.725157737731934
    5. '+i' → logprob: -9.975157737731934
    6. '```' → logprob: -10.975157737731934
    7. '   ' → logprob: -11.725157737731934
    8. '+
' → logprob: -12.850157737731934
    9. '1' → logprob: -12.975157737731934
    10. '+[' → logprob: -13.100157737731934

Token 1264: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10345211625099182
    2. '+' → logprob: -2.603452205657959
    3. 'i' → logprob: -3.728452205657959
    4. ' ' → logprob: -9.7284517288208
    5. '```' → logprob: -9.9784517288208
    6. '[i' → logprob: -10.1034517288208
    7. ' i' → logprob: -10.8534517288208
    8. '
' → logprob: -11.1034517288208
    9. '(i' → logprob: -11.2284517288208
    10. '   ' → logprob: -11.3534517288208

Token 1265: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3145797550678253
    2. '[i' → logprob: -1.314579725265503
    3. '[' → logprob: -7.314579963684082
    4. '```' → logprob: -7.814579963684082
    5. '}[' → logprob: -9.939579963684082
    6. '[j' → logprob: -10.189579963684082
    7. '[][' → logprob: -10.314579963684082
    8. '           ' → logprob: -10.564579963684082
    9. ' ][' → logprob: -11.064579963684082
    10. ''][' → logprob: -11.314579963684082

Token 1266: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.107425062713446e-06
    2. ' j' → logprob: -11.875006675720215
    3. '[j' → logprob: -16.87500762939453
    4. '   ' → logprob: -16.87500762939453
    5. '	j' → logprob: -17.62500762939453
    6. 'i' → logprob: -18.12500762939453
    7. '```' → logprob: -18.12500762939453
    8. '       ' → logprob: -19.37500762939453
    9. '
' → logprob: -19.75000762939453
    10. ' ' → logprob: -20.00000762939453

Token 1267: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011060673743486404
    2. '[' → logprob: -4.51106071472168
    3. '[i' → logprob: -13.01106071472168
    4. ''][' → logprob: -13.38606071472168
    5. '           ' → logprob: -13.51106071472168
    6. ' ][' → logprob: -13.63606071472168
    7. '```' → logprob: -13.88606071472168
    8. ']' → logprob: -14.01106071472168
    9. '"][' → logprob: -14.38606071472168
    10. ' [' → logprob: -14.76106071472168

Token 1268: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. '[' → logprob: -12.875003814697266
    3. ' ' → logprob: -14.250003814697266
    4. '
' → logprob: -15.375003814697266
    5. 'i' → logprob: -15.500003814697266
    6. '1' → logprob: -15.750003814697266
    7. 'j' → logprob: -16.000003814697266
    8. '   ' → logprob: -16.000003814697266
    9. '```' → logprob: -16.125003814697266
    10. '       ' → logprob: -17.875003814697266

Token 1269: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17221654951572418
    2. ']' → logprob: -2.1722166538238525
    3. ']=' → logprob: -3.2972166538238525
    4. ' =' → logprob: -5.047216415405273
    5. '                               ' → logprob: -7.297216415405273
    6. '                                   ' → logprob: -9.047216415405273
    7. ')' → logprob: -10.672216415405273
    8. ']+=' → logprob: -11.047216415405273
    9. ')=' → logprob: -11.922216415405273
    10. '                           ' → logprob: -12.422216415405273

Token 1270: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.493430894101039e-05
    2. ' =' → logprob: -9.500075340270996
    3. '                               ' → logprob: -18.25007438659668
    4. '=
' → logprob: -18.25007438659668
    5. '```' → logprob: -19.75007438659668
    6. '                           ' → logprob: -20.12507438659668
    7. '+=' → logprob: -20.25007438659668
    8. ']=' → logprob: -20.50007438659668
    9. '=

' → logprob: -20.75007438659668
    10. '                                   ' → logprob: -20.87507438659668

Token 1271: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '                               ' → logprob: -14.500000953674316
    3. ' ' → logprob: -14.625000953674316
    4. '   ' → logprob: -18.250001907348633
    5. '                                   ' → logprob: -18.250001907348633
    6. '                           ' → logprob: -19.500001907348633
    7. '```' → logprob: -20.750001907348633
    8. '                                ' → logprob: -21.125001907348633
    9. '                                           ' → logprob: -21.500001907348633
    10. '                                       ' → logprob: -21.750001907348633

Token 1272: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.625
    3. '                               ' → logprob: -18.875
    4. '   ' → logprob: -19.625
    5. '```' → logprob: -20.25
    6. '' → logprob: -21.625
    7. '                                   ' → logprob: -21.875
    8. '                           ' → logprob: -21.875
    9. '۱' → logprob: -22.75
    10. '0' → logprob: -22.875

Token 1273: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.2252180278301239
    2. '```' → logprob: -1.8502180576324463
    3. '<|end|>' → logprob: -3.7252180576324463
    4. '                                   ' → logprob: -5.100217819213867
    5. '                           ' → logprob: -5.350217819213867
    6. '                                
' → logprob: -6.100217819213867
    7. '``' → logprob: -6.350217819213867
    8. '\n' → logprob: -6.850217819213867
    9. '\
' → logprob: -7.100217819213867
    10. '                                ' → logprob: -7.725217819213867

Token 1274: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.03661651909351349
    2. '```' → logprob: -4.161616325378418
    3. '                           ' → logprob: -4.536616325378418
    4. '                                   ' → logprob: -4.786616325378418
    5. '``' → logprob: -7.661616325378418
    6. '                                
' → logprob: -8.661616325378418
    7. '                       ' → logprob: -9.036616325378418
    8. '                   ' → logprob: -9.161616325378418
    9. '<|end|>' → logprob: -9.411616325378418
    10. '                                       ' → logprob: -9.786616325378418

Token 1275: ' updated' (ID: 8489)
  Prédit: 'updated'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'updated' (adapté à ' updated') → logprob: -0.19397416710853577
    2. '                               ' → logprob: -2.193974256515503
    3. ' updated' → logprob: -3.068974256515503
    4. '                                   ' → logprob: -4.068974018096924
    5. '```' → logprob: -7.693974018096924
    6. '
' → logprob: -7.943974018096924
    7. '``' → logprob: -8.693974494934082
    8. '                                       ' → logprob: -9.568974494934082
    9. '                                ' → logprob: -9.943974494934082
    10. '                           ' → logprob: -10.318974494934082

Token 1276: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0032305908389389515
    2. ' =' → logprob: -6.003230571746826
    3. '=True' → logprob: -7.253230571746826
    4. '                               ' → logprob: -10.253231048583984
    5. '=False' → logprob: -12.503231048583984
    6. '=
' → logprob: -12.878231048583984
    7. '                                   ' → logprob: -13.878231048583984
    8. '<|end|>' → logprob: -13.878231048583984
    9. '                           ' → logprob: -14.378231048583984
    10. '                                ' → logprob: -14.628231048583984

Token 1277: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.006715370807796717
    2. ' True' → logprob: -5.006715297698975
    3. '(True' → logprob: -18.631715774536133
    4. '=True' → logprob: -18.881715774536133
    5. ' ' → logprob: -21.756715774536133
    6. '
' → logprob: -22.006715774536133
    7. '_true' → logprob: -22.631715774536133
    8. 'true' → logprob: -23.131715774536133
    9. '.True' → logprob: -23.381715774536133
    10. '```' → logprob: -24.631715774536133

Token 1278: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3908011317253113
    2. '                               ' → logprob: -1.265801191329956
    3. '                           ' → logprob: -3.515801191329956
    4. '               ' → logprob: -5.640800952911377
    5. '                   ' → logprob: -6.140800952911377
    6. '``' → logprob: -6.390800952911377
    7. '                       ' → logprob: -6.515800952911377
    8. '                                   ' → logprob: -6.890800952911377
    9. '<|end|>' → logprob: -7.640800952911377
    10. '\
' → logprob: -8.140801429748535

Token 1279: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.38675153255462646
    2. '               ' → logprob: -1.5117515325546265
    3. '                   ' → logprob: -3.636751651763916
    4. '<|end|>' → logprob: -3.761751651763916
    5. '                               ' → logprob: -4.011751651763916
    6. '                           ' → logprob: -4.386751651763916
    7. '``' → logprob: -5.636751651763916
    8. '           ' → logprob: -5.761751651763916
    9. '                       ' → logprob: -6.386751651763916
    10. '<|end|>' → logprob: -6.511751651763916

Token 1280: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007518012076616287
    2. '```' → logprob: -5.0075178146362305
    3. '           ' → logprob: -7.6325178146362305
    4. '                   ' → logprob: -8.25751781463623
    5. '                               ' → logprob: -10.75751781463623
    6. '                       ' → logprob: -11.63251781463623
    7. '                           ' → logprob: -11.88251781463623
    8. '       ' → logprob: -12.13251781463623
    9. '``' → logprob: -12.75751781463623
    10. 'elif' → logprob: -12.88251781463623

Token 1281: ' Ess' (ID: 12256)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3194132149219513
    2. '               ' → logprob: -1.319413185119629
    3. 'elif' → logprob: -5.819413185119629
    4. ' if' → logprob: -6.069413185119629
    5. '           ' → logprob: -7.819413185119629
    6. '                   ' → logprob: -8.194413185119629
    7. '```' → logprob: -9.694413185119629
    8. '                
' → logprob: -10.569413185119629
    9. '   ' → logprob: -10.944413185119629
    10. '                ' → logprob: -11.569413185119629

Token 1282: 'ayer' (ID: 1630)
  Prédit: 'ayer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ayer' → logprob: -0.00024822709383443
    2. 'ay' → logprob: -8.625247955322266
    3. '           ' → logprob: -10.500247955322266
    4. 'aye' → logprob: -11.375247955322266
    5. 'uyer' → logprob: -12.125247955322266
    6. '               ' → logprob: -12.375247955322266
    7. '```' → logprob: -12.375247955322266
    8. 'yer' → logprob: -12.625247955322266
    9. 'AYER' → logprob: -12.625247955322266
    10. '       ' → logprob: -13.000247955322266

Token 1283: ' d' (ID: 272)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1100120544433594
    2. ' to' → logprob: -1.8600120544433594
    3. 'to' → logprob: -2.1100120544433594
    4. '           ' → logprob: -2.4850120544433594
    5. ' d' → logprob: -2.7350120544433594
    6. ' de' → logprob: -2.7350120544433594
    7. '[j' → logprob: -3.1100120544433594
    8. ' à' → logprob: -3.4850120544433594
    9. '```' → logprob: -3.6100120544433594
    10. '                   ' → logprob: -3.8600120544433594

Token 1284: ''aj' (ID: 116735)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06788057088851929
    2. '[j' → logprob: -2.942880630493164
    3. ' j' → logprob: -5.442880630493164
    4. 'try' → logprob: -5.567880630493164
    5. '_j' → logprob: -6.442880630493164
    6. 'for' → logprob: -6.567880630493164
    7. '```' → logprob: -7.192880630493164
    8. '(j' → logprob: -7.692880630493164
    9. ' try' → logprob: -9.442880630493164
    10. '[' → logprob: -9.442880630493164

Token 1285: 'outer' (ID: 5838)
  Prédit: 'outer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outer' → logprob: -2.5776860184123507e-06
    2. 'out' → logprob: -13.75000286102295
    3. 'oute' → logprob: -14.50000286102295
    4. 'outez' → logprob: -15.00000286102295
    5. 'j' → logprob: -15.50000286102295
    6. 'oter' → logprob: -15.62500286102295
    7. 'ou' → logprob: -16.125001907348633
    8. '_outer' → logprob: -16.250001907348633
    9. '```' → logprob: -16.625001907348633
    10. 'outside' → logprob: -18.125001907348633

Token 1286: ' un' (ID: 537)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.2069618701934814
    2. '[' → logprob: -1.9569618701934814
    3. '[j' → logprob: -2.0819618701934814
    4. ' j' → logprob: -2.4569618701934814
    5. '```' → logprob: -2.7069618701934814
    6. '                   ' → logprob: -2.8319618701934814
    7. ' dp' → logprob: -3.0819618701934814
    8. ' ' → logprob: -3.8319618701934814
    9. ' a' → logprob: -3.8319618701934814
    10. '                ' → logprob: -3.9569618701934814

Token 1287: ' wagon' (ID: 90907)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.050096746534109116
    2. ' j' → logprob: -4.30009651184082
    3. 't' → logprob: -4.42509651184082
    4. '[j' → logprob: -4.55009651184082
    5. ' ' → logprob: -5.55009651184082
    6. 'T' → logprob: -6.05009651184082
    7. '```' → logprob: -6.05009651184082
    8. ' T' → logprob: -6.80009651184082
    9. 'w' → logprob: -7.17509651184082
    10. '   ' → logprob: -7.67509651184082

Token 1288: ' à' (ID: 1221)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14399024844169617
    2. '                   ' → logprob: -2.7689902782440186
    3. '```' → logprob: -3.3939902782440186
    4. '[j' → logprob: -4.3939900398254395
    5. 'to' → logprob: -4.8939900398254395
    6. ' à' → logprob: -5.0189900398254395
    7. 'à' → logprob: -5.7689900398254395
    8. '           ' → logprob: -5.8939900398254395
    9. ' to' → logprob: -6.2689900398254395
    10. '[' → logprob: -6.8939900398254395

Token 1289: ' partir' (ID: 12100)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.26833856105804443
    2. ' partir' → logprob: -2.018338680267334
    3. 'j' → logprob: -3.018338680267334
    4. 'from' → logprob: -3.393338680267334
    5. ' j' → logprob: -4.768338680267334
    6. '[' → logprob: -5.393338680267334
    7. ' from' → logprob: -6.518338680267334
    8. '```' → logprob: -6.518338680267334
    9. 't' → logprob: -7.018338680267334
    10. ' [' → logprob: -7.518338680267334

Token 1290: ' de' (ID: 334)
  Prédit: ' T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.3776055872440338
    2. 'T' → logprob: -1.3776055574417114
    3. '               ' → logprob: -3.002605676651001
    4. '                ' → logprob: -4.752605438232422
    5. '                   ' → logprob: -6.877605438232422
    6. '[' → logprob: -7.002605438232422
    7. 't' → logprob: -7.877605438232422
    8. '[T' → logprob: -8.002605438232422
    9. '                 ' → logprob: -8.252605438232422
    10. '              ' → logprob: -9.002605438232422

Token 1291: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.25193437933921814
    2. ' T' → logprob: -1.5019344091415405
    3. 't' → logprob: -12.626934051513672
    4. ' ' → logprob: -13.876934051513672
    5. '
' → logprob: -15.126934051513672
    6. ' t' → logprob: -15.501934051513672
    7. '               ' → logprob: -15.876934051513672
    8. '   ' → logprob: -16.001934051513672
    9. '```' → logprob: -16.126934051513672
    10. ' ' → logprob: -16.376934051513672

Token 1292: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01121887844055891
    2. '                   ' → logprob: -5.261219024658203
    3. '```' → logprob: -5.261219024658203
    4. 'if' → logprob: -7.761219024658203
    5. ' if' → logprob: -9.386219024658203
    6. '``' → logprob: -9.511219024658203
    7. '                       ' → logprob: -10.136219024658203
    8. '           ' → logprob: -10.386219024658203
    9. '                ' → logprob: -10.511219024658203
    10. '              ' → logprob: -10.761219024658203

Token 1293: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8398892879486084
    2. '```' → logprob: -0.8398892879486084
    3. '               ' → logprob: -2.3398892879486084
    4. '                       ' → logprob: -3.9648892879486084
    5. '<|end|>' → logprob: -5.2148895263671875
    6. '                               ' → logprob: -5.5898895263671875
    7. '                        
' → logprob: -6.0898895263671875
    8. '``' → logprob: -6.4648895263671875
    9. '	               ' → logprob: -7.0898895263671875
    10. '                    
' → logprob: -7.2148895263671875

Token 1294: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004100485239177942
    2. '```' → logprob: -6.004100322723389
    3. '                   ' → logprob: -6.629100322723389
    4. '``' → logprob: -9.129100799560547
    5. 'if' (adapté à ' if') → logprob: -9.879100799560547
    6. '           ' → logprob: -10.129100799560547
    7. ' if' → logprob: -10.129100799560547
    8. '                ' → logprob: -10.254100799560547
    9. '              ' → logprob: -11.629100799560547
    10. '                       ' → logprob: -12.004100799560547

Token 1295: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.008615042082965374
    2. 'j' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.633615493774414
    4. '(j' → logprob: -16.133615493774414
    5. ' ' → logprob: -16.508615493774414
    6. '	j' → logprob: -16.758615493774414
    7. ' ' → logprob: -17.258615493774414
    8. ' (' → logprob: -17.633615493774414
    9. '    ' → logprob: -17.883615493774414
    10. '           ' → logprob: -18.133615493774414

Token 1296: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03878222778439522
    2. '+' → logprob: -3.6637821197509766
    3. '<' → logprob: -4.413782119750977
    4. ' +' → logprob: -8.538782119750977
    5. '[j' → logprob: -10.538782119750977
    6. '[' → logprob: -10.788782119750977
    7. '```' → logprob: -11.288782119750977
    8. '<n' → logprob: -11.413782119750977
    9. '<int' → logprob: -12.038782119750977
    10. '<len' → logprob: -12.538782119750977

Token 1297: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0009115827269852161
    2. ' N' → logprob: -7.000911712646484
    3. '	N' → logprob: -17.875911712646484
    4. '   ' → logprob: -18.375911712646484
    5. '(N' → logprob: -18.875911712646484
    6. ' ' → logprob: -19.000911712646484
    7. '               ' → logprob: -19.125911712646484
    8. '                   ' → logprob: -19.875911712646484
    9. '```' → logprob: -19.875911712646484
    10. '           ' → logprob: -20.000911712646484

Token 1298: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.46418312191963196
    2. ':' → logprob: -1.9641830921173096
    3. '                   ' → logprob: -2.0891830921173096
    4. '               ' → logprob: -2.5891830921173096
    5. '{
' → logprob: -4.214183330535889
    6. '```' → logprob: -4.714183330535889
    7. '[' → logprob: -5.839183330535889
    8. '                       ' → logprob: -6.339183330535889
    9. '+' → logprob: -7.339183330535889
    10. '           ' → logprob: -7.464183330535889

Token 1299: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.048342179507017136
    2. '```' → logprob: -3.798342227935791
    3. '                       ' → logprob: -4.673342227935791
    4. '               ' → logprob: -5.798342227935791
    5. '                           ' → logprob: -6.173342227935791
    6. '                               ' → logprob: -6.298342227935791
    7. '	               ' → logprob: -6.423342227935791
    8. '                    ' → logprob: -6.673342227935791
    9. '				' → logprob: -7.673342227935791
    10. '                ' → logprob: -7.673342227935791

Token 1300: ' c' (ID: 274)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.33410122990608215
    2. 'c' (adapté à ' c') → logprob: -1.5841012001037598
    3. ' c' → logprob: -3.2091012001037598
    4. '                       ' → logprob: -3.4591012001037598
    5. '	c' → logprob: -6.20910120010376
    6. '                    ' → logprob: -6.83410120010376
    7. '```' → logprob: -7.33410120010376
    8. '               ' → logprob: -7.58410120010376
    9. '				' → logprob: -7.58410120010376
    10. '	               ' → logprob: -7.83410120010376

Token 1301: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759395360946655
    2. '=' → logprob: -0.8259395360946655
    3. '=
' → logprob: -17.075939178466797
    4. ' ' → logprob: -17.450939178466797
    5. '                   ' → logprob: -17.700939178466797
    6. '   ' → logprob: -17.950939178466797
    7. ' =
' → logprob: -18.200939178466797
    8. 'c' → logprob: -18.450939178466797
    9. ')' → logprob: -18.575939178466797
    10. '=c' → logprob: -18.700939178466797

Token 1302: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.011047814972698689
    2. ' T' → logprob: -4.511047840118408
    3. '	T' → logprob: -17.63604736328125
    4. '   ' → logprob: -18.26104736328125
    5. ' ' → logprob: -19.01104736328125
    6. '_T' → logprob: -19.63604736328125
    7. ' ' → logprob: -19.63604736328125
    8. '=T' → logprob: -20.38604736328125
    9. '"T' → logprob: -20.38604736328125
    10. '```' → logprob: -20.51104736328125

Token 1303: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -5.512236498361744e-07
    2. 'j' → logprob: -14.625000953674316
    3. '[
' → logprob: -17.625
    4. '[' → logprob: -18.0
    5. '```' → logprob: -18.75
    6. '   ' → logprob: -19.25
    7. '
' → logprob: -19.75
    8. '[i' → logprob: -20.5
    9. '	j' → logprob: -21.5
    10. '`' → logprob: -21.75

Token 1304: ']
' (ID: 1592)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00016337241686414927
    2. '][' → logprob: -9.375163078308105
    3. 'j' → logprob: -9.750163078308105
    4. ']' → logprob: -11.375163078308105
    5. '[' → logprob: -12.625163078308105
    6. '   ' → logprob: -13.250163078308105
    7. '                   ' → logprob: -14.250163078308105
    8. '[
' → logprob: -14.250163078308105
    9. '[i' → logprob: -14.750163078308105
    10. '           ' → logprob: -14.750163078308105

Token 1305: '                   ' (ID: 699)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.01768895424902439
    2. '                   ' → logprob: -4.517688751220703
    3. '```' → logprob: -5.767688751220703
    4. '                           ' → logprob: -7.017688751220703
    5. '                    ' → logprob: -7.017688751220703
    6. '                               ' → logprob: -7.642688751220703
    7. '                        ' → logprob: -7.892688751220703
    8. ' if' → logprob: -8.642688751220703
    9. '                        
' → logprob: -8.767688751220703
    10. '                     ' → logprob: -9.017688751220703

Token 1306: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.18082983791828156
    2. 'if' (adapté à ' if') → logprob: -2.5558297634124756
    3. ' if' → logprob: -3.0558297634124756
    4. '                       ' → logprob: -3.3058297634124756
    5. '               ' → logprob: -6.680830001831055
    6. '                    ' → logprob: -6.805830001831055
    7. '```' → logprob: -6.930830001831055
    8. '                           ' → logprob: -8.930830001831055
    9. '           ' → logprob: -9.180830001831055
    10. '                               ' → logprob: -9.805830001831055

Token 1307: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.20141762495040894
    2. ' last' → logprob: -1.7014176845550537
    3. '(last' → logprob: -13.451417922973633
    4. 'j' → logprob: -13.701417922973633
    5. '   ' → logprob: -14.326417922973633
    6. ' j' → logprob: -15.076417922973633
    7. '1' → logprob: -15.201417922973633
    8. ' ' → logprob: -15.576417922973633
    9. '0' → logprob: -15.701417922973633
    10. '	last' → logprob: -16.076417922973633

Token 1308: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.05488701909780502
    2. '==' → logprob: -2.929887056350708
    3. ']==' → logprob: -13.179886817932129
    4. '[' → logprob: -14.679886817932129
    5. ' ' → logprob: -14.679886817932129
    6. ')==' → logprob: -14.929886817932129
    7. ' !=' → logprob: -14.929886817932129
    8. '```' → logprob: -14.929886817932129
    9. '==
' → logprob: -15.054886817932129
    10. '=' → logprob: -15.554886817932129

Token 1309: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.32287636399269104
    2. '0' → logprob: -1.4478763341903687
    3. ' ' → logprob: -3.197876453399658
    4. '   ' → logprob: -11.1978759765625
    5. '(' → logprob: -13.5103759765625
    6. '  ' → logprob: -13.6978759765625
    7. '```' → logprob: -14.5728759765625
    8. '    ' → logprob: -14.8853759765625
    9. ' (' → logprob: -15.1978759765625
    10. '`' → logprob: -15.6978759765625

Token 1310: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018175693228840828
    2. '0' → logprob: -4.0181756019592285
    3. ' ' → logprob: -10.643176078796387
    4. '   ' → logprob: -13.393176078796387
    5. '
' → logprob: -15.643176078796387
    6. '(' → logprob: -16.26817512512207
    7. '    ' → logprob: -17.08067512512207
    8. '  ' → logprob: -17.14317512512207
    9. '```' → logprob: -17.26817512512207
    10. '' → logprob: -17.89317512512207

Token 1311: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6017062067985535
    2. ':
' → logprob: -1.1017062664031982
    3. '                       ' → logprob: -2.2267062664031982
    4. '                   ' → logprob: -4.476706027984619
    5. '                               ' → logprob: -9.101706504821777
    6. '                           ' → logprob: -9.351706504821777
    7. '<|end|>' → logprob: -9.476706504821777
    8. '               ' → logprob: -9.976706504821777
    9. '```' → logprob: -10.476706504821777
    10. '       ' → logprob: -10.726706504821777

Token 1312: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.002823777496814728
    2. '                               ' → logprob: -6.377823829650879
    3. '                           ' → logprob: -7.127823829650879
    4. '```' → logprob: -8.377823829650879
    5. '                        ' → logprob: -10.627823829650879
    6. '                   ' → logprob: -11.502823829650879
    7. '                        
' → logprob: -11.877823829650879
    8. 'if' → logprob: -11.877823829650879
    9. '<|end|>' → logprob: -11.877823829650879
    10. '                                   ' → logprob: -12.002823829650879

Token 1313: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -0.39424288272857666
    2. '                       ' → logprob: -1.1442428827285767
    3. ' prev' → logprob: -5.644242763519287
    4. '                           ' → logprob: -5.894242763519287
    5. '                               ' → logprob: -7.269242763519287
    6. 'if' → logprob: -9.144243240356445
    7. '	prev' → logprob: -9.269243240356445
    8. '   ' → logprob: -10.019243240356445
    9. '                   ' → logprob: -10.394243240356445
    10. '```' → logprob: -11.019243240356445

Token 1314: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868870735168457
    2. ' =' → logprob: -1.1368870735168457
    3. '=T' → logprob: -11.761886596679688
    4. '                       ' → logprob: -12.261886596679688
    5. '                           ' → logprob: -13.761886596679688
    6. 'T' → logprob: -14.386886596679688
    7. '   ' → logprob: -14.511886596679688
    8. '                   ' → logprob: -14.761886596679688
    9. '=j' → logprob: -15.511886596679688
    10. 'if' → logprob: -15.886886596679688

Token 1315: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.029751529917120934
    2. ' T' → logprob: -3.5297515392303467
    3. ' ' → logprob: -15.404751777648926
    4. 't' → logprob: -15.779751777648926
    5. '[' → logprob: -16.15475082397461
    6. '`' → logprob: -16.15475082397461
    7. ' ' → logprob: -16.52975082397461
    8. '_T' → logprob: -16.65475082397461
    9. 's' → logprob: -17.02975082397461
    10. '(T' → logprob: -17.52975082397461

Token 1316: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.392202976712724e-06
    2. 'j' → logprob: -12.000006675720215
    3. '```' → logprob: -16.1250057220459
    4. '[' → logprob: -17.8750057220459
    5. ',j' → logprob: -18.2500057220459
    6. '                   ' → logprob: -18.5000057220459
    7. '(j' → logprob: -19.1250057220459
    8. '   ' → logprob: -19.2500057220459
    9. '_j' → logprob: -19.5000057220459
    10. '`' → logprob: -19.5000057220459

Token 1317: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00034476007567718625
    2. '[j' → logprob: -8.125345230102539
    3. '[' → logprob: -11.250345230102539
    4. '```' → logprob: -11.500345230102539
    5. 'j' → logprob: -11.625345230102539
    6. ' -' → logprob: -11.750345230102539
    7. '][' → logprob: -12.250345230102539
    8. ']' → logprob: -14.000345230102539
    9. '                   ' → logprob: -14.250345230102539
    10. '`' → logprob: -14.625345230102539

Token 1318: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. '-' → logprob: -13.250005722045898
    3. 'j' → logprob: -13.250005722045898
    4. '```' → logprob: -13.500005722045898
    5. ' ' → logprob: -14.625005722045898
    6. '   ' → logprob: -15.750005722045898
    7. '+' → logprob: -16.7500057220459
    8. '2' → logprob: -16.8125057220459
    9. '``' → logprob: -17.1250057220459
    10. '           ' → logprob: -17.5625057220459

Token 1319: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.006201684474945068
    2. ']' → logprob: -5.13120174407959
    3. '                       ' → logprob: -8.88120174407959
    4. '```' → logprob: -9.63120174407959
    5. ']
' → logprob: -11.13120174407959
    6. '                           ' → logprob: -11.13120174407959
    7. '']
' → logprob: -11.25620174407959
    8. '                   ' → logprob: -11.25620174407959
    9. '``' → logprob: -13.13120174407959
    10. '                               ' → logprob: -13.25620174407959

Token 1320: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.047163400799036026
    2. '                           ' → logprob: -3.672163486480713
    3. '```' → logprob: -4.297163486480713
    4. '                               ' → logprob: -5.422163486480713
    5. 'if' → logprob: -6.047163486480713
    6. ' if' → logprob: -9.422163009643555
    7. '                   ' → logprob: -10.172163009643555
    8. '``' → logprob: -10.422163009643555
    9. '<|end|>' → logprob: -10.422163009643555
    10. '                        ' → logprob: -10.672163009643555

Token 1321: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11326447129249573
    2. '                           ' → logprob: -2.613264560699463
    3. ' if' → logprob: -4.238264560699463
    4. '                               ' → logprob: -4.738264560699463
    5. '```' → logprob: -4.988264560699463
    6. '                       ' → logprob: -5.613264560699463
    7. '``' → logprob: -9.988264083862305
    8. '                                   ' → logprob: -10.863264083862305
    9. '                            ' → logprob: -11.238264083862305
    10. '                         ' → logprob: -11.738264083862305

Token 1322: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.002805821830406785
    2. ' can' → logprob: -5.877805709838867
    3. 'not' → logprob: -14.752805709838867
    4. 'c' → logprob: -15.252805709838867
    5. '(can' → logprob: -16.377805709838867
    6. '```' → logprob: -16.377805709838867
    7. 'dp' → logprob: -16.752805709838867
    8. ' not' → logprob: -16.877805709838867
    9. '	can' → logprob: -18.502805709838867
    10. '_can' → logprob: -18.627805709838867

Token 1323: '_connect' (ID: 32485)
  Prédit: '_connect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_connect' → logprob: -0.2157541662454605
    2. 'can' → logprob: -2.215754270553589
    3. 'connect' → logprob: -2.465754270553589
    4. '_can' → logprob: -10.715754508972168
    5. '```' → logprob: -11.590754508972168
    6. ' can' → logprob: -11.840754508972168
    7. '_CONNECT' → logprob: -12.965754508972168
    8. 'Connect' → logprob: -13.215754508972168
    9. 'conn' → logprob: -13.715754508972168
    10. '(can' → logprob: -14.090754508972168

Token 1324: '(prev' (ID: 59594)
  Prédit: '(prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prev' → logprob: -0.0019287518225610256
    2. 'prev' → logprob: -6.251928806304932
    3. '	prev' → logprob: -16.626928329467773
    4. '.prev' → logprob: -17.251928329467773
    5. ' prev' → logprob: -17.751928329467773
    6. '(previous' → logprob: -18.001928329467773
    7. 'Prev' → logprob: -18.376928329467773
    8. '_prev' → logprob: -18.751928329467773
    9. '-prev' → logprob: -19.126928329467773
    10. '           ' → logprob: -20.126928329467773

Token 1325: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032283368054777384
    2. ',c' → logprob: -5.753228187561035
    3. ' ,' → logprob: -10.503228187561035
    4. 'c' → logprob: -11.378228187561035
    5. '(c' → logprob: -11.878228187561035
    6. '```' → logprob: -13.128228187561035
    7. '',' → logprob: -14.378228187561035
    8. '                           ' → logprob: -14.378228187561035
    9. ',
' → logprob: -15.378228187561035
    10. '[c' → logprob: -15.503228187561035

Token 1326: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0067154900170862675
    2. ' c' → logprob: -5.006715297698975
    3. ')c' → logprob: -17.131715774536133
    4. '```' → logprob: -17.756715774536133
    5. '(c' → logprob: -19.131715774536133
    6. '	c' → logprob: -19.631715774536133
    7. '_c' → logprob: -19.756715774536133
    8. ',c' → logprob: -20.256715774536133
    9. '[c' → logprob: -20.506715774536133
    10. ')' → logprob: -20.631715774536133

Token 1327: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02201034687459469
    2. '                           ' → logprob: -4.397010326385498
    3. '):' → logprob: -5.147010326385498
    4. '                               ' → logprob: -6.147010326385498
    5. ')' → logprob: -6.772010326385498
    6. '                       ' → logprob: -8.772010803222656
    7. ''):
' → logprob: -9.272010803222656
    8. ':
' → logprob: -10.272010803222656
    9. '```' → logprob: -10.772010803222656
    10. '):

' → logprob: -11.397010803222656

Token 1328: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.421854704618454
    2. '                               ' → logprob: -1.1718547344207764
    3. '```' → logprob: -3.4218547344207764
    4. '                       ' → logprob: -6.796854496002197
    5. '``' → logprob: -8.171854972839355
    6. '                                   ' → logprob: -8.921854972839355
    7. '                            ' → logprob: -9.796854972839355
    8. '                             ' → logprob: -10.171854972839355
    9. '<|end|>' → logprob: -11.046854972839355
    10. 'if' → logprob: -11.296854972839355

Token 1329: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008909993804991245
    2. 'dp' → logprob: -5.258910179138184
    3. ' if' → logprob: -6.008910179138184
    4. '                               ' → logprob: -7.008910179138184
    5. '```' → logprob: -8.508910179138184
    6. '                           ' → logprob: -9.508910179138184
    7. '                                   ' → logprob: -10.883910179138184
    8. '{
' → logprob: -12.383910179138184
    9. '                                       ' → logprob: -12.633910179138184
    10. '                                           ' → logprob: -13.633910179138184

Token 1330: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.014164921827614307
    2. ' dp' → logprob: -4.264164924621582
    3. '(dp' → logprob: -14.014164924621582
    4. '                           ' → logprob: -16.014163970947266
    5. '	dp' → logprob: -16.014163970947266
    6. '                   ' → logprob: -16.139163970947266
    7. '_dp' → logprob: -16.764163970947266
    8. '               ' → logprob: -17.764163970947266
    9. '   ' → logprob: -18.139163970947266
    10. '           ' → logprob: -18.139163970947266

Token 1331: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.10029292851686478
    2. '[i' → logprob: -2.350292921066284
    3. 'j' → logprob: -9.475293159484863
    4. '                   ' → logprob: -12.850293159484863
    5. '           ' → logprob: -13.350293159484863
    6. 'i' → logprob: -13.350293159484863
    7. '```' → logprob: -13.350293159484863
    8. '[k' → logprob: -14.225293159484863
    9. 'dp' → logprob: -14.975293159484863
    10. '               ' → logprob: -15.100293159484863

Token 1332: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.030204327777028084
    2. '[j' → logprob: -3.9052042961120605
    3. '+' → logprob: -4.6552042961120605
    4. '[' → logprob: -10.030204772949219
    5. '[i' → logprob: -10.905204772949219
    6. 'j' → logprob: -11.155204772949219
    7. '+j' → logprob: -11.530204772949219
    8. ']' → logprob: -12.280204772949219
    9. '```' → logprob: -13.030204772949219
    10. '1' → logprob: -13.280204772949219

Token 1333: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1472419600977446e-06
    2. ' j' → logprob: -13.875000953674316
    3. '   ' → logprob: -15.625000953674316
    4. '[j' → logprob: -16.875001907348633
    5. '	j' → logprob: -18.500001907348633
    6. '(j' → logprob: -18.625001907348633
    7. '           ' → logprob: -19.375001907348633
    8. '$j' → logprob: -19.375001907348633
    9. '```' → logprob: -19.500001907348633
    10. ':j' → logprob: -19.875001907348633

Token 1334: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.610702363715973e-06
    2. ' +' → logprob: -12.250009536743164
    3. '+j' → logprob: -12.375009536743164
    4. ']+' → logprob: -15.500009536743164
    5. '[' → logprob: -15.875009536743164
    6. '][' → logprob: -16.500009536743164
    7. 'j' → logprob: -16.500009536743164
    8. '+[' → logprob: -17.125009536743164
    9. '+
' → logprob: -17.500009536743164
    10. '[j' → logprob: -17.875009536743164

Token 1335: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003812217037193477
    2. '+' → logprob: -7.875380992889404
    3. '```' → logprob: -14.750381469726562
    4. '   ' → logprob: -15.125381469726562
    5. ' ' → logprob: -15.875381469726562
    6. '
' → logprob: -16.125381469726562
    7. 'j' → logprob: -16.250381469726562
    8. '           ' → logprob: -17.125381469726562
    9. '[j' → logprob: -18.125381469726562
    10. ']' → logprob: -19.000381469726562

Token 1336: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00029601677670143545
    2. ']<' → logprob: -8.875295639038086
    3. '[' → logprob: -9.125295639038086
    4. ']' → logprob: -10.125295639038086
    5. '[j' → logprob: -13.250295639038086
    6. '<' → logprob: -13.375295639038086
    7. ' ][' → logprob: -14.000295639038086
    8. '[i' → logprob: -14.750295639038086
    9. ']][' → logprob: -15.125295639038086
    10. '```' → logprob: -15.250295639038086

Token 1337: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2566611170768738
    2. 'last' → logprob: -1.5066611766815186
    3. 'length' → logprob: -5.3816609382629395
    4. '[last' → logprob: -10.256661415100098
    5. '(last' → logprob: -11.006661415100098
    6. '
' → logprob: -11.131661415100098
    7. ' last' → logprob: -11.131661415100098
    8. '0' → logprob: -11.631661415100098
    9. 'max' → logprob: -12.006661415100098
    10. ' ' → logprob: -12.006661415100098

Token 1338: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09862400591373444
    2. '<' → logprob: -2.5986239910125732
    3. ']<' → logprob: -4.473624229431152
    4. ' <' → logprob: -4.848624229431152
    5. '                           ' → logprob: -9.473624229431152
    6. '                               ' → logprob: -9.598624229431152
    7. '[' → logprob: -9.848624229431152
    8. ')' → logprob: -10.348624229431152
    9. '][' → logprob: -10.598624229431152
    10. '```' → logprob: -11.473624229431152

Token 1339: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3868981599807739
    2. '<' → logprob: -1.136898159980774
    3. '=' → logprob: -10.886898040771484
    4. ' =' → logprob: -12.886898040771484
    5. '<p' → logprob: -13.636898040771484
    6. '                               ' → logprob: -14.011898040771484
    7. '                           ' → logprob: -14.136898040771484
    8. '[' → logprob: -14.886898040771484
    9. '<int' → logprob: -15.011898040771484
    10. '<th' → logprob: -15.136898040771484

Token 1340: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0007099286303855479
    2. ' length' → logprob: -7.2507100105285645
    3. '                           ' → logprob: -18.250709533691406
    4. 'Length' → logprob: -19.625709533691406
    5. '   ' → logprob: -19.875709533691406
    6. '                       ' → logprob: -20.375709533691406
    7. '(length' → logprob: -20.500709533691406
    8. '           ' → logprob: -20.875709533691406
    9. 'len' → logprob: -20.875709533691406
    10. '	length' → logprob: -21.000709533691406

Token 1341: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868720829486847
    2. '+' → logprob: -1.1368720531463623
    3. '                               ' → logprob: -15.011872291564941
    4. '                           ' → logprob: -15.761872291564941
    5. '＋' → logprob: -15.761872291564941
    6. ' ' → logprob: -16.261871337890625
    7. '()+' → logprob: -16.261871337890625
    8. '1' → logprob: -16.761871337890625
    9. '```' → logprob: -16.761871337890625
    10. ' ' → logprob: -16.886871337890625

Token 1342: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.375004768371582
    3. '                               ' → logprob: -14.500004768371582
    4. '                           ' → logprob: -16.5000057220459
    5. '                                   ' → logprob: -17.2500057220459
    6. '+' → logprob: -17.5000057220459
    7. '2' → logprob: -17.7500057220459
    8. '   ' → logprob: -18.3750057220459
    9. '                                       ' → logprob: -18.8750057220459
    10. '```' → logprob: -18.8750057220459

Token 1343: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -15.750000953674316
    4. '   ' → logprob: -18.875001907348633
    5. '...' → logprob: -19.625001907348633
    6. '+' → logprob: -19.625001907348633
    7. '
' → logprob: -19.750001907348633
    8. '                               ' → logprob: -21.125001907348633
    9. '<|end|>' → logprob: -21.125001907348633
    10. '``' → logprob: -21.500001907348633

Token 1344: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.32719025015830994
    2. ':' → logprob: -1.5771902799606323
    3. '):
' → logprob: -3.4521901607513428
    4. '                               ' → logprob: -3.4521901607513428
    5. '):' → logprob: -5.327190399169922
    6. '                           ' → logprob: -5.827190399169922
    7. ')' → logprob: -7.327190399169922
    8. '```' → logprob: -8.327190399169922
    9. '                       ' → logprob: -9.452190399169922
    10. ':

' → logprob: -9.702190399169922

Token 1345: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.020404307171702385
    2. '```' → logprob: -4.02040433883667
    3. '                           ' → logprob: -7.02040433883667
    4. '                                   ' → logprob: -7.52040433883667
    5. '                                       ' → logprob: -8.520403861999512
    6. '``' → logprob: -8.770403861999512
    7. '<|end|>' → logprob: -9.145403861999512
    8. '                                ' → logprob: -9.270403861999512
    9. '                                
' → logprob: -9.395403861999512
    10. '                                           ' → logprob: -10.020403861999512

Token 1346: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -1.6286106983898208e-05
    2. ' dp' → logprob: -11.250016212463379
    3. '                               ' → logprob: -13.125016212463379
    4. '```' → logprob: -14.500016212463379
    5. '                                   ' → logprob: -14.625016212463379
    6. '                           ' → logprob: -16.875017166137695
    7. '_dp' → logprob: -17.250017166137695
    8. '                                       ' → logprob: -17.625017166137695
    9. '``' → logprob: -18.125017166137695
    10. '	dp' → logprob: -18.125017166137695

Token 1347: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3902033970225602e-05
    2. 'i' → logprob: -11.500014305114746
    3. '[j' → logprob: -12.625014305114746
    4. '[' → logprob: -15.625014305114746
    5. '           ' → logprob: -16.25001335144043
    6. '{i' → logprob: -17.37501335144043
    7. '[
' → logprob: -17.37501335144043
    8. '```' → logprob: -17.75001335144043
    9. '(i' → logprob: -18.00001335144043
    10. '                   ' → logprob: -18.62501335144043

Token 1348: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2529897689819336
    2. '[i' → logprob: -1.5029897689819336
    3. '[j' → logprob: -6.877989768981934
    4. '           ' → logprob: -11.502989768981934
    5. '[' → logprob: -12.002989768981934
    6. '}[' → logprob: -12.877989768981934
    7. 'i' → logprob: -13.002989768981934
    8. ']][' → logprob: -13.252989768981934
    9. ']' → logprob: -13.377989768981934
    10. '```' → logprob: -14.127989768981934

Token 1349: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.8921695047756657e-05
    2. 'i' → logprob: -10.750028610229492
    3. ' j' → logprob: -11.875028610229492
    4. '[j' → logprob: -15.625028610229492
    5. '```' → logprob: -16.125028610229492
    6. '   ' → logprob: -16.375028610229492
    7. '           ' → logprob: -16.375028610229492
    8. '	j' → logprob: -18.375028610229492
    9. '       ' → logprob: -19.125028610229492
    10. '=j' → logprob: -19.375028610229492

Token 1350: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002043748099822551
    2. '][' → logprob: -9.000204086303711
    3. '+j' → logprob: -10.000204086303711
    4. '[j' → logprob: -10.500204086303711
    5. ' +' → logprob: -13.250204086303711
    6. '[' → logprob: -13.250204086303711
    7. '```' → logprob: -13.500204086303711
    8. '   ' → logprob: -14.125204086303711
    9. 'j' → logprob: -14.250204086303711
    10. '+[' → logprob: -14.500204086303711

Token 1351: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16174563765525818
    2. '1' → logprob: -1.9117456674575806
    3. '+' → logprob: -6.536745548248291
    4. ' j' → logprob: -10.66174602508545
    5. '
' → logprob: -11.16174602508545
    6. '   ' → logprob: -11.16174602508545
    7. '[j' → logprob: -12.03674602508545
    8. '(j' → logprob: -12.28674602508545
    9. '```' → logprob: -12.53674602508545
    10. ' ' → logprob: -13.78674602508545

Token 1352: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2013069987297058
    2. '[j' → logprob: -1.8263070583343506
    3. '[i' → logprob: -4.2013068199157715
    4. '+' → logprob: -5.0763068199157715
    5. '[' → logprob: -10.07630729675293
    6. '```' → logprob: -10.57630729675293
    7. '+j' → logprob: -11.95130729675293
    8. '[
' → logprob: -12.07630729675293
    9. '           ' → logprob: -12.57630729675293
    10. ']' → logprob: -12.70130729675293

Token 1353: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -8.65707261255011e-06
    2. ' j' → logprob: -12.750008583068848
    3. '1' → logprob: -13.000008583068848
    4. '   ' → logprob: -13.125008583068848
    5. '
' → logprob: -14.375008583068848
    6. '[j' → logprob: -15.750008583068848
    7. '           ' → logprob: -15.875008583068848
    8. ' ' → logprob: -16.250009536743164
    9. '+' → logprob: -16.250009536743164
    10. '       ' → logprob: -16.625009536743164

Token 1354: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01644018106162548
    2. ' =' → logprob: -4.141440391540527
    3. ']=' → logprob: -8.641440391540527
    4. ']' → logprob: -8.766440391540527
    5. '                               ' → logprob: -9.766440391540527
    6. '                                   ' → logprob: -11.641440391540527
    7. ')' → logprob: -13.516440391540527
    8. '+=' → logprob: -14.016440391540527
    9. '```' → logprob: -14.016440391540527
    10. '                           ' → logprob: -14.266440391540527

Token 1355: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00018387178715784103
    2. ' =' → logprob: -8.625184059143066
    3. '                               ' → logprob: -13.000184059143066
    4. '                                   ' → logprob: -14.000184059143066
    5. '```' → logprob: -14.125184059143066
    6. '<' → logprob: -16.25018310546875
    7. '+=' → logprob: -16.25018310546875
    8. '                           ' → logprob: -17.00018310546875
    9. '=
' → logprob: -17.50018310546875
    10. '                                  ' → logprob: -17.75018310546875

Token 1356: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0009115827269852161
    2. ' length' → logprob: -7.000911712646484
    3. 'Length' → logprob: -18.750911712646484
    4. '(length' → logprob: -18.875911712646484
    5. 'len' → logprob: -18.875911712646484
    6. 'leng' → logprob: -19.125911712646484
    7. '1' → logprob: -19.875911712646484
    8. '   ' → logprob: -20.000911712646484
    9. '                               ' → logprob: -20.125911712646484
    10. '	length' → logprob: -20.125911712646484

Token 1357: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931546926498413
    2. ' +' → logprob: -0.6931546926498413
    3. '                               ' → logprob: -12.068154335021973
    4. '                                   ' → logprob: -14.818154335021973
    5. '＋' → logprob: -15.068154335021973
    6. '                           ' → logprob: -15.443154335021973
    7. '[' → logprob: -15.443154335021973
    8. '<|end|>' → logprob: -16.19315528869629
    9. '+[' → logprob: -16.31815528869629
    10. '+
' → logprob: -16.31815528869629

Token 1358: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8789383830153383e-05
    2. ' ' → logprob: -11.000019073486328
    3. '+' → logprob: -13.375019073486328
    4. '                               ' → logprob: -15.000019073486328
    5. '```' → logprob: -17.250019073486328
    6. '                                   ' → logprob: -17.375019073486328
    7. '   ' → logprob: -17.375019073486328
    8. '           ' → logprob: -17.750019073486328
    9. '2' → logprob: -18.500019073486328
    10. '                           ' → logprob: -18.875019073486328

Token 1359: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.375
    3. '+' → logprob: -16.125
    4. '```' → logprob: -17.375
    5. '                               ' → logprob: -19.0
    6. '
' → logprob: -19.0
    7. '   ' → logprob: -19.5
    8. '2' → logprob: -20.3125
    9. '                                   ' → logprob: -20.5625
    10. 'True' → logprob: -20.625

Token 1360: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.12501907348632812
    2. '```' → logprob: -2.500019073486328
    3. '                                   ' → logprob: -3.750019073486328
    4. '<|end|>' → logprob: -5.000019073486328
    5. '                                       ' → logprob: -6.750019073486328
    6. '                           ' → logprob: -7.000019073486328
    7. '                                ' → logprob: -7.125019073486328
    8. '``' → logprob: -7.375019073486328
    9. '                                
' → logprob: -7.500019073486328
    10. '                                           ' → logprob: -8.750019073486328

Token 1361: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.1794525533914566
    2. '```' → logprob: -2.179452657699585
    3. '                                   ' → logprob: -3.554452657699585
    4. '``' → logprob: -4.804452419281006
    5. '                                       ' → logprob: -5.679452419281006
    6. '                                
' → logprob: -5.804452419281006
    7. '<|end|>' → logprob: -5.804452419281006
    8. '                                ' → logprob: -6.554452419281006
    9. '                           ' → logprob: -6.929452419281006
    10. '                                           ' → logprob: -7.429452419281006

Token 1362: ' updated' (ID: 8489)
  Prédit: 'updated'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'updated' (adapté à ' updated') → logprob: -0.7672889828681946
    2. '                               ' → logprob: -1.0172889232635498
    3. '                                   ' → logprob: -2.39228892326355
    4. '```' → logprob: -2.64228892326355
    5. '                                       ' → logprob: -5.392289161682129
    6. '                           ' → logprob: -6.767289161682129
    7. ' updated' → logprob: -6.892289161682129
    8. '                                ' → logprob: -7.017289161682129
    9. '                                           ' → logprob: -7.017289161682129
    10. '                                    ' → logprob: -7.142289161682129

Token 1363: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029894310981035233
    2. ' =' → logprob: -3.5298943519592285
    3. '=True' → logprob: -8.90489387512207
    4. '                               ' → logprob: -11.90489387512207
    5. '=
' → logprob: -14.52989387512207
    6. '                           ' → logprob: -15.15489387512207
    7. '                                   ' → logprob: -15.52989387512207
    8. '=False' → logprob: -16.02989387512207
    9. '               ' → logprob: -16.90489387512207
    10. '                              ' → logprob: -17.27989387512207

Token 1364: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0007099286303855479
    2. ' True' → logprob: -7.2507100105285645
    3. '(True' → logprob: -18.750709533691406
    4. '=True' → logprob: -20.250709533691406
    5. 'true' → logprob: -21.000709533691406
    6. '                               ' → logprob: -21.500709533691406
    7. '                           ' → logprob: -22.500709533691406
    8. '_true' → logprob: -22.875709533691406
    9. 'False' → logprob: -23.250709533691406
    10. '                   ' → logprob: -23.500709533691406

Token 1365: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.5380600690841675
    2. '```' → logprob: -0.9130600690841675
    3. '                                   ' → logprob: -4.788060188293457
    4. '                           ' → logprob: -5.788060188293457
    5. '``' → logprob: -5.913060188293457
    6. '                                       ' → logprob: -8.038060188293457
    7. '                                           ' → logprob: -9.288060188293457
    8. '                       ' → logprob: -9.413060188293457
    9. '                                
' → logprob: -9.913060188293457
    10. '                   ' → logprob: -10.413060188293457

Token 1366: '                   ' (ID: 699)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.2155722975730896
    2. '                               ' → logprob: -1.7155723571777344
    3. '                           ' → logprob: -4.465572357177734
    4. '``' → logprob: -6.590572357177734
    5. '                                   ' → logprob: -7.090572357177734
    6. '                       ' → logprob: -9.215572357177734
    7. '                                       ' → logprob: -9.590572357177734
    8. '                                           ' → logprob: -9.590572357177734
    9. '                   ' → logprob: -10.715572357177734
    10. '               ' → logprob: -10.840572357177734

Token 1367: ' elif' (ID: 9497)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3104060888290405
    2. '```' → logprob: -1.4354060888290405
    3. '                               ' → logprob: -4.31040620803833
    4. '                       ' → logprob: -4.81040620803833
    5. '               ' → logprob: -5.68540620803833
    6. '                           ' → logprob: -6.18540620803833
    7. 'elif' (adapté à ' elif') → logprob: -7.06040620803833
    8. '``' → logprob: -7.81040620803833
    9. '           ' → logprob: -8.685405731201172
    10. '                                   ' → logprob: -9.810405731201172

Token 1368: ' last' (ID: 2174)
  Prédit: ' last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.04865901172161102
    2. 'last' → logprob: -3.048659086227417
    3. '0' → logprob: -9.798659324645996
    4. '(last' → logprob: -11.798659324645996
    5. ' ' → logprob: -13.048659324645996
    6. '                   ' → logprob: -13.298659324645996
    7. '1' → logprob: -14.173659324645996
    8. '[last' → logprob: -14.298659324645996
    9. 'Last' → logprob: -14.923659324645996
    10. '	last' → logprob: -14.923659324645996

Token 1369: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.029756972566246986
    2. '==' → logprob: -3.529757022857666
    3. '```' → logprob: -12.404756546020508
    4. '[' → logprob: -14.529756546020508
    5. '   ' → logprob: -14.904756546020508
    6. ' ' → logprob: -15.279756546020508
    7. ']==' → logprob: -15.404756546020508
    8. '                           ' → logprob: -15.654756546020508
    9. ')==' → logprob: -15.779756546020508
    10. '           ' → logprob: -16.279756546020508

Token 1370: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004078758880496025
    2. ' ' → logprob: -5.5040788650512695
    3. '   ' → logprob: -16.129077911376953
    4. '(' → logprob: -16.129077911376953
    5. '1' → logprob: -17.629077911376953
    6. '[' → logprob: -18.254077911376953
    7. '<|end|>' → logprob: -18.254077911376953
    8. '  ' → logprob: -18.504077911376953
    9. '    ' → logprob: -18.754077911376953
    10. '۰' → logprob: -19.254077911376953

Token 1371: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.872261317563243e-05
    2. ' ' → logprob: -9.750059127807617
    3. '1' → logprob: -15.250059127807617
    4. '   ' → logprob: -15.750059127807617
    5. '
' → logprob: -17.375059127807617
    6. '```' → logprob: -17.750059127807617
    7. '  ' → logprob: -19.000059127807617
    8. '(' → logprob: -20.000059127807617
    9. '2' → logprob: -20.062559127807617
    10. '    ' → logprob: -20.187559127807617

Token 1372: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.024796390905976295
    2. '                               ' → logprob: -4.149796485900879
    3. '                           ' → logprob: -5.649796485900879
    4. ':' → logprob: -6.274796485900879
    5. '                   ' → logprob: -6.399796485900879
    6. ':
' → logprob: -6.774796485900879
    7. '```' → logprob: -8.899796485900879
    8. '                     ' → logprob: -9.524796485900879
    9. '                        ' → logprob: -9.649796485900879
    10. '                      ' → logprob: -10.524796485900879

Token 1373: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.014398897998034954
    2. '                               ' → logprob: -4.38939905166626
    3. '                           ' → logprob: -7.13939905166626
    4. '```' → logprob: -7.26439905166626
    5. '                   ' → logprob: -8.264398574829102
    6. '                     ' → logprob: -10.639398574829102
    7. 'if' → logprob: -11.014398574829102
    8. '                                   ' → logprob: -11.139398574829102
    9. '                        ' → logprob: -11.264398574829102
    10. '                                       ' → logprob: -11.514398574829102

Token 1374: ' if' (ID: 538)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.5054351091384888
    2. '```' → logprob: -1.6304351091384888
    3. '                       ' → logprob: -2.380434989929199
    4. '                           ' → logprob: -2.380434989929199
    5. 'if' (adapté à ' if') → logprob: -4.380434989929199
    6. '``' → logprob: -6.255434989929199
    7. '                                   ' → logprob: -7.755434989929199
    8. ' if' → logprob: -8.3804349899292
    9. '                   ' → logprob: -8.8804349899292
    10. '                             ' → logprob: -9.1304349899292

Token 1375: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03806444630026817
    2. ' i' → logprob: -3.288064479827881
    3. '                   ' → logprob: -10.913064002990723
    4. '                       ' → logprob: -13.163064002990723
    5. '   ' → logprob: -13.788064002990723
    6. '                           ' → logprob: -14.038064002990723
    7. ' ' → logprob: -15.413064002990723
    8. '               ' → logprob: -15.788064002990723
    9. '                               ' → logprob: -15.788064002990723
    10. '(i' → logprob: -15.788064002990723

Token 1376: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2813127636909485
    2. '>' → logprob: -1.4063127040863037
    3. ' <' → logprob: -9.406312942504883
    4. '                           ' → logprob: -10.531312942504883
    5. '                       ' → logprob: -10.906312942504883
    6. '0' → logprob: -11.906312942504883
    7. '<' → logprob: -12.031312942504883
    8. '                        ' → logprob: -12.281312942504883
    9. '                   ' → logprob: -12.656312942504883
    10. '                            ' → logprob: -12.781312942504883

Token 1377: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010199354437645525
    2. ' ' → logprob: -9.250102043151855
    3. '=' → logprob: -12.250102043151855
    4. '   ' → logprob: -14.125102043151855
    5. '```' → logprob: -15.875102043151855
    6. '``' → logprob: -17.75010108947754
    7. '       ' → logprob: -18.25010108947754
    8. '>' → logprob: -18.62510108947754
    9. '  ' → logprob: -18.75010108947754
    10. '           ' → logprob: -18.75010108947754

Token 1378: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013321757433004677
    2. ' ' → logprob: -9.000133514404297
    3. '=' → logprob: -11.875133514404297
    4. '   ' → logprob: -13.250133514404297
    5. 'i' → logprob: -15.625133514404297
    6. '```' → logprob: -16.000133514404297
    7. '       ' → logprob: -16.250133514404297
    8. '           ' → logprob: -16.250133514404297
    9. '  ' → logprob: -16.250133514404297
    10. '
' → logprob: -16.250133514404297

Token 1379: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.1567111313343048
    2. ':
' → logprob: -2.7817111015319824
    3. '                               ' → logprob: -3.4067111015319824
    4. '                       ' → logprob: -3.6567111015319824
    5. ':' → logprob: -4.281711101531982
    6. '```' → logprob: -4.781711101531982
    7. '{
' → logprob: -7.156711101531982
    8. ' and' → logprob: -8.03171157836914
    9. '                                   ' → logprob: -8.78171157836914
    10. '                            ' → logprob: -9.03171157836914

Token 1380: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.7111244201660156
    2. '                               ' → logprob: -0.9611244201660156
    3. '```' → logprob: -2.0861244201660156
    4. '                       ' → logprob: -6.586124420166016
    5. '``' → logprob: -8.211124420166016
    6. '                                   ' → logprob: -8.336124420166016
    7. '                             ' → logprob: -9.211124420166016
    8. '                            ' → logprob: -9.461124420166016
    9. '                                       ' → logprob: -10.586124420166016
    10. '                                           ' → logprob: -10.711124420166016

Token 1381: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -0.7969480156898499
    2. '                               ' → logprob: -1.546947956085205
    3. 'if' → logprob: -1.796947956085205
    4. '```' → logprob: -1.796947956085205
    5. '                           ' → logprob: -5.546947956085205
    6. '                                   ' → logprob: -7.796947956085205
    7. '``' → logprob: -8.171948432922363
    8. '                       ' → logprob: -9.421948432922363
    9. ' prev' → logprob: -10.796948432922363
    10. '                                       ' → logprob: -10.796948432922363

Token 1382: ' =' (ID: 314)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0979440212249756
    2. '[S' → logprob: -1.7229440212249756
    3. '[' → logprob: -1.8479440212249756
    4. '[i' → logprob: -2.0979440212249756
    5. '                           ' → logprob: -2.3479440212249756
    6. '                               ' → logprob: -2.7229440212249756
    7. '>' → logprob: -4.097944259643555
    8. '```' → logprob: -4.722944259643555
    9. '[-' → logprob: -5.472944259643555
    10. '<S' → logprob: -5.597944259643555

Token 1383: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0015024791937321424
    2. ' S' → logprob: -6.501502513885498
    3. '                       ' → logprob: -17.126502990722656
    4. '   ' → logprob: -17.251502990722656
    5. '                   ' → logprob: -17.251502990722656
    6. '                           ' → logprob: -18.126502990722656
    7. '           ' → logprob: -18.126502990722656
    8. ' ' → logprob: -18.751502990722656
    9. '               ' → logprob: -19.126502990722656
    10. '```' → logprob: -19.626502990722656

Token 1384: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.36574100604048e-06
    2. '-' → logprob: -13.375004768371582
    3. 'i' → logprob: -13.500004768371582
    4. '```' → logprob: -14.125004768371582
    5. '                           ' → logprob: -14.750004768371582
    6. '(i' → logprob: -16.750003814697266
    7. ' [' → logprob: -17.000003814697266
    8. '                   ' → logprob: -17.500003814697266
    9. '                               ' → logprob: -17.500003814697266
    10. '[' → logprob: -17.750003814697266

Token 1385: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.4121114822482923e-06
    2. ' -' → logprob: -13.250003814697266
    3. '[' → logprob: -14.125003814697266
    4. '1' → logprob: -15.125003814697266
    5. '```' → logprob: -15.750003814697266
    6. '                           ' → logprob: -15.875003814697266
    7. '[i' → logprob: -16.375003814697266
    8. 'i' → logprob: -17.125003814697266
    9. '0' → logprob: -17.375003814697266
    10. '   ' → logprob: -17.750003814697266

Token 1386: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012561921030282974
    2. '-' → logprob: -4.387561798095703
    3. '```' → logprob: -10.262561798095703
    4. ' ' → logprob: -11.637561798095703
    5. '0' → logprob: -12.762561798095703
    6. ' -' → logprob: -13.137561798095703
    7. '   ' → logprob: -13.387561798095703
    8. 'i' → logprob: -14.262561798095703
    9. '``' → logprob: -14.637561798095703
    10. '...' → logprob: -15.137561798095703

Token 1387: ']
' (ID: 1592)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.3012803792953491
    2. '                           ' → logprob: -1.5512803792953491
    3. '```' → logprob: -3.5512804985046387
    4. ':
' → logprob: -4.176280498504639
    5. '):
' → logprob: -6.926280498504639
    6. '                                   ' → logprob: -7.676280498504639
    7. '                       ' → logprob: -7.801280498504639
    8. '                            ' → logprob: -8.17628002166748
    9. '][' → logprob: -8.17628002166748
    10. '[' → logprob: -8.17628002166748

Token 1388: '                           ' (ID: 1686)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3177168071269989
    2. '                               ' → logprob: -1.3177168369293213
    3. '``' → logprob: -6.192716598510742
    4. '                           ' → logprob: -6.442716598510742
    5. '                                   ' → logprob: -7.817716598510742
    6. 'if' → logprob: -7.942716598510742
    7. '                                       ' → logprob: -11.567716598510742
    8. '                             ' → logprob: -11.692716598510742
    9. '                                           ' → logprob: -11.692716598510742
    10. '                              ' → logprob: -12.192716598510742

Token 1389: ' if' (ID: 538)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.1781429946422577
    2. '                           ' → logprob: -2.67814302444458
    3. 'if' (adapté à ' if') → logprob: -2.80314302444458
    4. '```' → logprob: -3.42814302444458
    5. '                                   ' → logprob: -6.92814302444458
    6. ' if' → logprob: -8.553142547607422
    7. '``' → logprob: -9.678142547607422
    8. '                                       ' → logprob: -9.928142547607422
    9. '                            ' → logprob: -10.178142547607422
    10. '                             ' → logprob: -10.428142547607422

Token 1390: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -2.339278580620885e-06
    2. ' can' → logprob: -13.000001907348633
    3. '(can' → logprob: -17.750001907348633
    4. '                               ' → logprob: -18.000001907348633
    5. '                           ' → logprob: -18.625001907348633
    6. '```' → logprob: -18.750001907348633
    7. '	can' → logprob: -20.875001907348633
    8. '_can' → logprob: -21.125001907348633
    9. '.can' → logprob: -21.250001907348633
    10. '                             ' → logprob: -21.375001907348633

Token 1391: '_connect' (ID: 32485)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.034502215683460236
    2. 'connect' → logprob: -3.5345022678375244
    3. '_connect' → logprob: -5.409502029418945
    4. '_can' → logprob: -8.909502029418945
    5. ' can' → logprob: -10.159502029418945
    6. '(can' → logprob: -10.534502029418945
    7. 'conn' → logprob: -11.159502029418945
    8. 'c' → logprob: -11.409502029418945
    9. '```' → logprob: -11.659502029418945
    10. '(' → logprob: -12.534502029418945

Token 1392: '(prev' (ID: 59594)
  Prédit: '(prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prev' → logprob: -0.31335121393203735
    2. 'prev' → logprob: -1.3133511543273926
    3. '                               ' → logprob: -9.93835163116455
    4. '                           ' → logprob: -10.93835163116455
    5. ' prev' → logprob: -10.93835163116455
    6. '                                   ' → logprob: -13.06335163116455
    7. '	prev' → logprob: -13.93835163116455
    8. ' (' → logprob: -14.93835163116455
    9. '_prev' → logprob: -14.93835163116455
    10. '(' → logprob: -15.06335163116455

Token 1393: ',' (ID: 11)
  Prédit: '(prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prev' → logprob: -0.002806656062602997
    2. 'prev' → logprob: -6.502806663513184
    3. '                               ' → logprob: -7.127806663513184
    4. ',' → logprob: -7.877806663513184
    5. '```' → logprob: -9.502806663513184
    6. '                           ' → logprob: -10.752806663513184
    7. '                                   ' → logprob: -11.377806663513184
    8. '(c' → logprob: -12.627806663513184
    9. ' (' → logprob: -13.377806663513184
    10. '.prev' → logprob: -13.502806663513184

Token 1394: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.016136538237333298
    2. ' c' → logprob: -4.141136646270752
    3. 'prev' → logprob: -9.516136169433594
    4. '```' → logprob: -11.141136169433594
    5. '                           ' → logprob: -12.891136169433594
    6. ' prev' → logprob: -13.141136169433594
    7. '                               ' → logprob: -13.266136169433594
    8. 'S' → logprob: -13.766136169433594
    9. '   ' → logprob: -14.016136169433594
    10. ' ' → logprob: -14.016136169433594

Token 1395: '):
' (ID: 1883)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.00775119848549366
    2. '                           ' → logprob: -5.507750988006592
    3. '):
' → logprob: -6.132750988006592
    4. '```' → logprob: -7.257750988006592
    5. '                                   ' → logprob: -7.757750988006592
    6. ':
' → logprob: -9.63275146484375
    7. ')' → logprob: -9.88275146484375
    8. 'if' → logprob: -10.00775146484375
    9. '                              ' → logprob: -10.50775146484375
    10. '):' → logprob: -10.75775146484375

Token 1396: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.07921010255813599
    2. '```' → logprob: -2.704210042953491
    3. '                           ' → logprob: -5.32921028137207
    4. '                                   ' → logprob: -5.82921028137207
    5. '``' → logprob: -7.20421028137207
    6. '                                       ' → logprob: -7.95421028137207
    7. '                                           ' → logprob: -8.82921028137207
    8. '                             ' → logprob: -10.32921028137207
    9. '                                
' → logprob: -10.32921028137207
    10. 'if' → logprob: -10.45421028137207

Token 1397: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.15354274213314056
    2. 'dp' → logprob: -2.1535427570343018
    3. '                               ' → logprob: -4.403542518615723
    4. '```' → logprob: -4.653542518615723
    5. ' if' → logprob: -5.903542518615723
    6. '                                   ' → logprob: -7.153542518615723
    7. '                           ' → logprob: -7.528542518615723
    8. ' dp' → logprob: -8.778542518615723
    9. '(dp' → logprob: -9.278542518615723
    10. '``' → logprob: -9.778542518615723

Token 1398: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.001170460251159966
    2. ' dp' → logprob: -6.751170635223389
    3. '(dp' → logprob: -17.126171112060547
    4. '                           ' → logprob: -17.501171112060547
    5. '	dp' → logprob: -17.501171112060547
    6. '_dp' → logprob: -17.876171112060547
    7. '   ' → logprob: -18.001171112060547
    8. '                               ' → logprob: -18.376171112060547
    9. '           ' → logprob: -18.626171112060547
    10. ' ' → logprob: -19.126171112060547

Token 1399: '[i' (ID: 1768)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.21864676475524902
    2. '[i' → logprob: -1.718646764755249
    3. '[j' → logprob: -4.343647003173828
    4. ' dp' → logprob: -5.593647003173828
    5. '[' → logprob: -8.843647003173828
    6. 'i' → logprob: -9.218647003173828
    7. '(dp' → logprob: -10.343647003173828
    8. '_dp' → logprob: -10.593647003173828
    9. '                           ' → logprob: -10.968647003173828
    10. '           ' → logprob: -11.343647003173828

Token 1400: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2008812576532364
    2. '+' → logprob: -1.8258812427520752
    3. '[' → logprob: -4.825881481170654
    4. '>' → logprob: -5.325881481170654
    5. '[i' → logprob: -5.700881481170654
    6. '[j' → logprob: -5.825881481170654
    7. '1' → logprob: -7.825881481170654
    8. '0' → logprob: -7.950881481170654
    9. '           ' → logprob: -8.200881004333496
    10. ' >' → logprob: -8.200881004333496

Token 1401: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0007156503852456808
    2. 'i' → logprob: -7.250715732574463
    3. ' j' → logprob: -12.875715255737305
    4. '```' → logprob: -13.250715255737305
    5. '+' → logprob: -14.125715255737305
    6. '   ' → logprob: -15.500715255737305
    7. '           ' → logprob: -15.750715255737305
    8. ']' → logprob: -17.000715255737305
    9. '[j' → logprob: -17.250715255737305
    10. '][' → logprob: -17.375715255737305

Token 1402: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.718606891809031e-05
    2. '1' → logprob: -10.250066757202148
    3. '[' → logprob: -11.500066757202148
    4. ' +' → logprob: -12.000066757202148
    5. '```' → logprob: -12.000066757202148
    6. '][' → logprob: -12.875066757202148
    7. 'j' → logprob: -13.250066757202148
    8. '+j' → logprob: -13.500066757202148
    9. '           ' → logprob: -14.375066757202148
    10. '[j' → logprob: -14.625066757202148

Token 1403: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5014787316322327
    2. '+' → logprob: -1.001478672027588
    3. '1' → logprob: -3.626478672027588
    4. '   ' → logprob: -8.376479148864746
    5. '
' → logprob: -9.751479148864746
    6. ' j' → logprob: -10.876479148864746
    7. ' +' → logprob: -11.001479148864746
    8. '```' → logprob: -11.001479148864746
    9. '+j' → logprob: -11.376479148864746
    10. '           ' → logprob: -11.376479148864746

Token 1404: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.020768320187926292
    2. '[' → logprob: -3.895768404006958
    3. '0' → logprob: -9.895768165588379
    4. '[j' → logprob: -10.020768165588379
    5. '[i' → logprob: -10.020768165588379
    6. '                           ' → logprob: -10.395768165588379
    7. ']<' → logprob: -11.645768165588379
    8. '1' → logprob: -11.770768165588379
    9. '                               ' → logprob: -11.770768165588379
    10. ']' → logprob: -12.145768165588379

Token 1405: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020866614067927003
    2. '0' → logprob: -8.875208854675293
    3. 'length' → logprob: -10.250208854675293
    4. '
' → logprob: -11.625208854675293
    5. ' ' → logprob: -11.625208854675293
    6. '   ' → logprob: -12.375208854675293
    7. '[' → logprob: -12.875208854675293
    8. 'dp' → logprob: -13.375208854675293
    9. 'j' → logprob: -13.875208854675293
    10. 'max' → logprob: -13.875208854675293

Token 1406: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3155554533004761
    2. '<' → logprob: -1.315555453300476
    3. '                                   ' → logprob: -7.190555572509766
    4. ']<' → logprob: -8.190555572509766
    5. '=' → logprob: -8.440555572509766
    6. '                               ' → logprob: -8.565555572509766
    7. ']' → logprob: -8.690555572509766
    8. '```' → logprob: -8.815555572509766
    9. '<size' → logprob: -9.190555572509766
    10. '<th' → logprob: -9.315555572509766

Token 1407: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.40179914236068726
    2. '<' → logprob: -1.151799201965332
    3. '                               ' → logprob: -4.776799201965332
    4. '```' → logprob: -6.151799201965332
    5. '<size' → logprob: -6.776799201965332
    6. '                                   ' → logprob: -6.776799201965332
    7. '<th' → logprob: -8.401799201965332
    8. '<int' → logprob: -8.401799201965332
    9. '=' → logprob: -8.651799201965332
    10. '<span' → logprob: -9.026799201965332

Token 1408: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.048587486147880554
    2. ' length' → logprob: -3.0485875606536865
    3. 'Length' → logprob: -16.423587799072266
    4. '   ' → logprob: -17.423587799072266
    5. '	length' → logprob: -18.048587799072266
    6. '                           ' → logprob: -18.423587799072266
    7. '_length' → logprob: -18.423587799072266
    8. '(length' → logprob: -18.673587799072266
    9. '                               ' → logprob: -19.548587799072266
    10. '           ' → logprob: -20.298587799072266

Token 1409: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31329280138015747
    2. '+' → logprob: -1.3132927417755127
    3. '                               ' → logprob: -10.813292503356934
    4. '```' → logprob: -12.438292503356934
    5. '                                   ' → logprob: -12.688292503356934
    6. '1' → logprob: -13.188292503356934
    7. '                           ' → logprob: -14.813292503356934
    8. 'length' → logprob: -15.063292503356934
    9. '[' → logprob: -15.813292503356934
    10. '                                ' → logprob: -15.813292503356934

Token 1410: ' ' (ID: 220)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.005625497084110975
    2. ' length' → logprob: -5.5056257247924805
    3. '1' → logprob: -6.5056257247924805
    4. '                           ' → logprob: -11.50562572479248
    5. '   ' → logprob: -11.88062572479248
    6. '                               ' → logprob: -12.38062572479248
    7. '                   ' → logprob: -12.50562572479248
    8. ' ' → logprob: -12.50562572479248
    9. '           ' → logprob: -12.63062572479248
    10. '                                   ' → logprob: -12.75562572479248

Token 1411: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010890735575230792
    2. 'length' → logprob: -9.25010871887207
    3. ' ' → logprob: -11.75010871887207
    4. '
' → logprob: -13.37510871887207
    5. '+' → logprob: -13.75010871887207
    6. '   ' → logprob: -13.87510871887207
    7. '                               ' → logprob: -15.37510871887207
    8. 'dp' → logprob: -15.87510871887207
    9. '           ' → logprob: -16.00010871887207
    10. '```' → logprob: -16.12510871887207

Token 1412: ':
' (ID: 734)
  Prédit: '                                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.1366501748561859
    2. '                               ' → logprob: -2.1366500854492188
    3. '                                       ' → logprob: -5.011650085449219
    4. '```' → logprob: -7.011650085449219
    5. ':
' → logprob: -7.261650085449219
    6. '                                           ' → logprob: -8.136650085449219
    7. ':' → logprob: -8.136650085449219
    8. '                                  ' → logprob: -8.511650085449219
    9. '                                    ' → logprob: -8.761650085449219
    10. '                           ' → logprob: -8.761650085449219

Token 1413: '                                   ' (ID: 3523)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.034655600786209106
    2. '                                   ' → logprob: -3.5346555709838867
    3. '```' → logprob: -6.034655570983887
    4. '                                       ' → logprob: -6.159655570983887
    5. '                           ' → logprob: -8.784655570983887
    6. '                                ' → logprob: -9.784655570983887
    7. '                                           ' → logprob: -9.909655570983887
    8. '``' → logprob: -10.034655570983887
    9. '                                 ' → logprob: -11.409655570983887
    10. '                       ' → logprob: -11.534655570983887

Token 1414: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0005071613122709095
    2. ' dp' → logprob: -8.750507354736328
    3. '                               ' → logprob: -9.000507354736328
    4. '                                   ' → logprob: -9.000507354736328
    5. '                                       ' → logprob: -9.750507354736328
    6. '```' → logprob: -10.500507354736328
    7. '                                           ' → logprob: -12.375507354736328
    8. '``' → logprob: -12.500507354736328
    9. '(dp' → logprob: -12.500507354736328
    10. '                           ' → logprob: -13.250507354736328

Token 1415: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.2994620242971e-06
    2. 'i' → logprob: -12.625008583068848
    3. '[j' → logprob: -13.000008583068848
    4. '```' → logprob: -13.500008583068848
    5. '[' → logprob: -14.000008583068848
    6. 'dp' → logprob: -15.500008583068848
    7. '[
' → logprob: -16.12500762939453
    8. '           ' → logprob: -16.87500762939453
    9. '
' → logprob: -17.12500762939453
    10. '(i' → logprob: -17.87500762939453

Token 1416: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07951808720827103
    2. '[i' → logprob: -2.8295180797576904
    3. '+' → logprob: -4.3295183181762695
    4. '[j' → logprob: -5.5795183181762695
    5. '[' → logprob: -7.9545183181762695
    6. ')[' → logprob: -10.82951831817627
    7. '+[' → logprob: -11.07951831817627
    8. '```' → logprob: -11.20451831817627
    9. '}[' → logprob: -11.32951831817627
    10. ']' → logprob: -11.95451831817627

Token 1417: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0005699523026123643
    2. '[j' → logprob: -7.750569820404053
    3. 'i' → logprob: -9.375570297241211
    4. '```' → logprob: -11.375570297241211
    5. '][' → logprob: -11.500570297241211
    6. '1' → logprob: -11.500570297241211
    7. '[i' → logprob: -11.875570297241211
    8. '           ' → logprob: -12.250570297241211
    9. ' j' → logprob: -12.500570297241211
    10. '
' → logprob: -12.750570297241211

Token 1418: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0010784220648929477
    2. '[' → logprob: -7.1260786056518555
    3. '][' → logprob: -8.251078605651855
    4. '```' → logprob: -12.626078605651855
    5. '[j' → logprob: -12.876078605651855
    6. ']+' → logprob: -13.251078605651855
    7. '1' → logprob: -13.876078605651855
    8. '+j' → logprob: -14.001078605651855
    9. ' +' → logprob: -14.001078605651855
    10. '+[' → logprob: -14.376078605651855

Token 1419: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00031985383247956634
    2. 'j' → logprob: -8.125319480895996
    3. '+' → logprob: -11.500319480895996
    4. '```' → logprob: -12.375319480895996
    5. '
' → logprob: -13.375319480895996
    6. ' ' → logprob: -13.812819480895996
    7. '   ' → logprob: -13.875319480895996
    8. '3' → logprob: -14.125319480895996
    9. '[j' → logprob: -14.562819480895996
    10. '5' → logprob: -14.562819480895996

Token 1420: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.08527600020170212
    2. '[i' → logprob: -2.960275888442993
    3. '[j' → logprob: -3.585275888442993
    4. '[' → logprob: -7.210276126861572
    5. '                               ' → logprob: -7.335276126861572
    6. '                                   ' → logprob: -7.710276126861572
    7. '+' → logprob: -9.085275650024414
    8. '                                       ' → logprob: -9.835275650024414
    9. '                           ' → logprob: -10.085275650024414
    10. ']' → logprob: -10.710275650024414

Token 1421: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011823653243482113
    2. 'length' → logprob: -4.636823654174805
    3. 'j' → logprob: -6.261823654174805
    4. '   ' → logprob: -10.261823654174805
    5. '           ' → logprob: -11.011823654174805
    6. 'dp' → logprob: -11.136823654174805
    7. '```' → logprob: -11.386823654174805
    8. 'i' → logprob: -11.511823654174805
    9. '       ' → logprob: -11.886823654174805
    10. ' ' → logprob: -12.011823654174805

Token 1422: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5612151622772217
    2. ']' → logprob: -1.5612151622772217
    3. '+=' → logprob: -2.8112151622772217
    4. '+' → logprob: -3.1862151622772217
    5. '                                       ' → logprob: -3.3112151622772217
    6. ']=' → logprob: -3.8112151622772217
    7. '                               ' → logprob: -4.061215400695801
    8. '                                   ' → logprob: -4.186215400695801
    9. ' =' → logprob: -5.061215400695801
    10. ']+=' → logprob: -5.186215400695801

Token 1423: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00045021495316177607
    2. ' =' → logprob: -8.375450134277344
    3. '                                   ' → logprob: -9.250450134277344
    4. '                                       ' → logprob: -9.875450134277344
    5. '+=' → logprob: -10.500450134277344
    6. '                               ' → logprob: -10.875450134277344
    7. '```' → logprob: -11.000450134277344
    8. '=
' → logprob: -12.250450134277344
    9. '=True' → logprob: -13.875450134277344
    10. '                                    ' → logprob: -14.375450134277344

Token 1424: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.00020401719666551799
    2. ' length' → logprob: -8.500204086303711
    3. '   ' → logprob: -14.625204086303711
    4. '           ' → logprob: -17.75020408630371
    5. '	length' → logprob: -17.87520408630371
    6. '1' → logprob: -18.00020408630371
    7. 'len' → logprob: -18.00020408630371
    8. 'max' → logprob: -18.25020408630371
    9. '(length' → logprob: -19.00020408630371
    10. 'Length' → logprob: -19.37520408630371

Token 1425: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1002422571182251
    2. ' +' → logprob: -2.3502421379089355
    3. '[' → logprob: -11.100242614746094
    4. '                                   ' → logprob: -11.600242614746094
    5. '1' → logprob: -12.225242614746094
    6. '                               ' → logprob: -12.850242614746094
    7. '][' → logprob: -14.225242614746094
    8. '           ' → logprob: -14.600242614746094
    9. '```' → logprob: -14.600242614746094
    10. '+[' → logprob: -14.725242614746094

Token 1426: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.875007629394531
    3. '```' → logprob: -15.250007629394531
    4. '+' → logprob: -15.500007629394531
    5. '   ' → logprob: -15.875007629394531
    6. '0' → logprob: -16.00000762939453
    7. '2' → logprob: -16.25000762939453
    8. '``' → logprob: -17.18750762939453
    9. '
' → logprob: -17.25000762939453
    10. '3' → logprob: -17.37500762939453

Token 1427: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. '```' → logprob: -13.625004768371582
    3. '
' → logprob: -14.750004768371582
    4. ' ' → logprob: -14.875004768371582
    5. 'True' → logprob: -15.125004768371582
    6. 'length' → logprob: -15.312504768371582
    7. '+' → logprob: -15.375004768371582
    8. 'max' → logprob: -15.562504768371582
    9. 'dp' → logprob: -15.625004768371582
    10. '   ' → logprob: -15.937504768371582

Token 1428: '
' (ID: 198)
  Prédit: '                                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                                       ' → logprob: -0.7999824285507202
    2. '```' → logprob: -1.1749824285507202
    3. '                               ' → logprob: -1.9249824285507202
    4. '                                   ' → logprob: -2.7999825477600098
    5. '``' → logprob: -4.17498254776001
    6. '                                           ' → logprob: -5.04998254776001
    7. '                                        
' → logprob: -5.17498254776001
    8. '<|end|>' → logprob: -6.17498254776001
    9. '                                    
' → logprob: -6.79998254776001
    10. '                                
' → logprob: -6.92498254776001

Token 1429: '                                   ' (ID: 3523)
  Prédit: '                                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                       ' → logprob: -0.15852941572666168
    2. '                               ' → logprob: -2.53352952003479
    3. '                                   ' → logprob: -3.15852952003479
    4. '```' → logprob: -4.158529281616211
    5. '                                           ' → logprob: -5.283529281616211
    6. '``' → logprob: -6.533529281616211
    7. '                                        
' → logprob: -7.033529281616211
    8. '                                        ' → logprob: -8.158529281616211
    9. '                                               ' → logprob: -8.533529281616211
    10. '                                
' → logprob: -8.783529281616211

Token 1430: ' updated' (ID: 8489)
  Prédit: '                                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                       ' → logprob: -0.6317980885505676
    2. '                                   ' → logprob: -1.5067980289459229
    3. 'updated' (adapté à ' updated') → logprob: -1.5067980289459229
    4. '                               ' → logprob: -4.256798267364502
    5. '               ' → logprob: -5.381798267364502
    6. '                                           ' → logprob: -6.006798267364502
    7. '```' → logprob: -6.631798267364502
    8. '                                    ' → logprob: -7.381798267364502
    9. '                           ' → logprob: -7.881798267364502
    10. '                                     ' → logprob: -8.006797790527344

Token 1431: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5319927334785461
    2. '=True' → logprob: -0.9069927334785461
    3. ' =' → logprob: -5.2819929122924805
    4. '                               ' → logprob: -6.1569929122924805
    5. 'True' → logprob: -7.5319929122924805
    6. '                                   ' → logprob: -7.9069929122924805
    7. '           ' → logprob: -9.03199291229248
    8. '=False' → logprob: -9.03199291229248
    9. '               ' → logprob: -9.15699291229248
    10. '(True' → logprob: -9.28199291229248

Token 1432: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -7.493430894101039e-05
    2. ' True' → logprob: -9.500075340270996
    3. '=True' → logprob: -17.00007438659668
    4. '(True' → logprob: -17.75007438659668
    5. '
' → logprob: -19.12507438659668
    6. 'true' → logprob: -20.37507438659668
    7. '_true' → logprob: -20.75007438659668
    8. '1' → logprob: -20.87507438659668
    9. 'False' → logprob: -20.87507438659668
    10. ' ' → logprob: -22.25007438659668

Token 1433: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0991138443350792
    2. '                           ' → logprob: -3.099113941192627
    3. '                       ' → logprob: -3.599113941192627
    4. '                                   ' → logprob: -4.974113941192627
    5. '                   ' → logprob: -5.099113941192627
    6. '               ' → logprob: -5.474113941192627
    7. '```' → logprob: -5.724113941192627
    8. 'else' → logprob: -7.349113941192627
    9. '           ' → logprob: -8.349113464355469
    10. '                                       ' → logprob: -8.599113464355469

Token 1434: '                   ' (ID: 699)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.5321006178855896
    2. '                       ' → logprob: -1.7821006774902344
    3. '                           ' → logprob: -2.1571006774902344
    4. '                   ' → logprob: -2.6571006774902344
    5. '               ' → logprob: -3.9071006774902344
    6. 'else' → logprob: -3.9071006774902344
    7. '                                   ' → logprob: -5.032100677490234
    8. '```' → logprob: -5.657100677490234
    9. '           ' → logprob: -5.782100677490234
    10. '                                       ' → logprob: -7.157100677490234

Token 1435: ' else' (ID: 1203)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.1380123645067215
    2. '                       ' → logprob: -2.388012409210205
    3. 'else' (adapté à ' else') → logprob: -4.013012409210205
    4. '                   ' → logprob: -4.888012409210205
    5. '                           ' → logprob: -4.888012409210205
    6. '```' → logprob: -6.888012409210205
    7. 'elif' → logprob: -7.013012409210205
    8. '                                   ' → logprob: -7.013012409210205
    9. '               ' → logprob: -7.138012409210205
    10. '           ' → logprob: -9.638011932373047

Token 1436: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.26316094398498535
    2. '                   ' → logprob: -1.5131609439849854
    3. ':' → logprob: -5.263160705566406
    4. '                           ' → logprob: -5.763160705566406
    5. '```' → logprob: -7.263160705566406
    6. '                               ' → logprob: -7.638160705566406
    7. '               ' → logprob: -8.138160705566406
    8. ':
' → logprob: -8.138160705566406
    9. '                        ' → logprob: -8.388160705566406
    10. '                    ' → logprob: -8.388160705566406

Token 1437: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.013899499550461769
    2. '                               ' → logprob: -5.138899326324463
    3. '                           ' → logprob: -5.263899326324463
    4. '                   ' → logprob: -6.263899326324463
    5. '```' → logprob: -7.638899326324463
    6. 'if' → logprob: -9.263899803161621
    7. '                        ' → logprob: -9.638899803161621
    8. '                                   ' → logprob: -10.138899803161621
    9. '               ' → logprob: -10.638899803161621
    10. '                        
' → logprob: -10.763899803161621

Token 1438: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.03294672071933746
    2. '                           ' → logprob: -4.157946586608887
    3. '                               ' → logprob: -4.907946586608887
    4. 'if' (adapté à ' if') → logprob: -5.407946586608887
    5. '                        ' → logprob: -6.032946586608887
    6. '```' → logprob: -7.032946586608887
    7. ' if' → logprob: -7.657946586608887
    8. '                   ' → logprob: -7.907946586608887
    9. '                            ' → logprob: -8.782946586608887
    10. '                    ' → logprob: -8.907946586608887

Token 1439: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.027361616492271423
    2. ' c' → logprob: -3.7773616313934326
    3. 'dp' → logprob: -5.9023613929748535
    4. 'j' → logprob: -6.7773613929748535
    5. ' dp' → logprob: -8.777361869812012
    6. ' j' → logprob: -10.277361869812012
    7. 'T' → logprob: -10.402361869812012
    8. 'i' → logprob: -12.527361869812012
    9. '   ' → logprob: -13.277361869812012
    10. 'C' → logprob: -13.402361869812012

Token 1440: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06999845802783966
    2. '==' → logprob: -2.6949985027313232
    3. '=='' → logprob: -10.069998741149902
    4. '```' → logprob: -11.944998741149902
    5. '=' → logprob: -12.194998741149902
    6. '[' → logprob: -13.069998741149902
    7. ' =='' → logprob: -13.194998741149902
    8. '==
' → logprob: -13.694998741149902
    9. ')' → logprob: -14.194998741149902
    10. '<|end|>' → logprob: -14.569998741149902

Token 1441: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00418702932074666
    2. ''I' → logprob: -6.004187107086182
    3. ' '' → logprob: -6.379187107086182
    4. ''O' → logprob: -11.879186630249023
    5. '"' → logprob: -12.879186630249023
    6. '"I' → logprob: -13.629186630249023
    7. 'I' → logprob: -14.254186630249023
    8. '`' → logprob: -14.379186630249023
    9. '('' → logprob: -14.754186630249023
    10. ''S' → logprob: -15.504186630249023

Token 1442: 'I' (ID: 40)
  Prédit: ''I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''I' → logprob: -0.10034049302339554
    2. 'I' → logprob: -2.3503406047821045
    3. '"I' → logprob: -9.600340843200684
    4. ''' → logprob: -9.850340843200684
    5. '‘I' → logprob: -12.100340843200684
    6. '’I' → logprob: -12.475340843200684
    7. ' '' → logprob: -13.600340843200684
    8. '`' → logprob: -14.225340843200684
    9. ''i' → logprob: -14.600340843200684
    10. ''O' → logprob: -14.850340843200684

Token 1443: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4747823476791382
    2. '                           ' → logprob: -1.3497823476791382
    3. '                               ' → logprob: -2.4747824668884277
    4. ':' → logprob: -4.099782466888428
    5. '                       ' → logprob: -5.224782466888428
    6. '[' → logprob: -5.349782466888428
    7. '):
' → logprob: -6.099782466888428
    8. '':
' → logprob: -6.599782466888428
    9. '==' → logprob: -6.849782466888428
    10. ' :
' → logprob: -7.599782466888428

Token 1444: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.2861621081829071
    2. '                               ' → logprob: -1.4111621379852295
    3. '                       ' → logprob: -6.03616189956665
    4. '```' → logprob: -6.41116189956665
    5. '<|end|>' → logprob: -8.786162376403809
    6. '                            ' → logprob: -8.786162376403809
    7. 'if' → logprob: -8.911162376403809
    8. ' if' → logprob: -9.536162376403809
    9. '                            
' → logprob: -9.661162376403809
    10. '                                   ' → logprob: -9.911162376403809

Token 1445: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7728517651557922
    2. ' if' → logprob: -0.7728517651557922
    3. '                               ' → logprob: -2.7728517055511475
    4. '                           ' → logprob: -4.272851943969727
    5. '                                   ' → logprob: -9.897851943969727
    6. '                            ' → logprob: -10.022851943969727
    7. '                       ' → logprob: -10.647851943969727
    8. '                             ' → logprob: -11.022851943969727
    9. '                              ' → logprob: -11.022851943969727
    10. '```' → logprob: -11.272851943969727

Token 1446: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0005532711511477828
    2. ' dp' → logprob: -7.500553131103516
    3. '(dp' → logprob: -16.375553131103516
    4. '	dp' → logprob: -16.875553131103516
    5. '```' → logprob: -17.500553131103516
    6. '           ' → logprob: -17.875553131103516
    7. 'if' → logprob: -17.875553131103516
    8. '
' → logprob: -18.000553131103516
    9. '_dp' → logprob: -18.875553131103516
    10. '   ' → logprob: -19.000553131103516

Token 1447: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. '[j' → logprob: -13.875001907348633
    3. 'i' → logprob: -14.125001907348633
    4. '```' → logprob: -15.625001907348633
    5. '[' → logprob: -16.500001907348633
    6. '[I' → logprob: -18.125001907348633
    7. '(i' → logprob: -18.250001907348633
    8. '   ' → logprob: -18.375001907348633
    9. '           ' → logprob: -18.375001907348633
    10. '[
' → logprob: -18.500001907348633

Token 1448: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.20485012233257294
    2. '][' → logprob: -1.7048500776290894
    3. '[j' → logprob: -6.204850196838379
    4. '[' → logprob: -6.704850196838379
    5. '+' → logprob: -9.704850196838379
    6. '}[' → logprob: -10.079850196838379
    7. '```' → logprob: -10.204850196838379
    8. '           ' → logprob: -12.079850196838379
    9. '[I' → logprob: -12.329850196838379
    10. '   ' → logprob: -12.329850196838379

Token 1449: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.749814019713085e-06
    2. ' j' → logprob: -12.000006675720215
    3. '[j' → logprob: -15.000006675720215
    4. '+' → logprob: -15.750006675720215
    5. '   ' → logprob: -17.00000762939453
    6. '	j' → logprob: -18.00000762939453
    7. '(j' → logprob: -18.25000762939453
    8. '```' → logprob: -19.12500762939453
    9. '$j' → logprob: -19.50000762939453
    10. '+j' → logprob: -19.50000762939453

Token 1450: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00014132341311778873
    2. '+j' → logprob: -9.125141143798828
    3. '][' → logprob: -10.875141143798828
    4. '[j' → logprob: -12.375141143798828
    5. ']+' → logprob: -12.500141143798828
    6. '+[' → logprob: -12.750141143798828
    7. 'j' → logprob: -14.375141143798828
    8. ' +' → logprob: -14.375141143798828
    9. '```' → logprob: -14.375141143798828
    10. '[' → logprob: -14.625141143798828

Token 1451: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16051606833934784
    2. 'j' → logprob: -1.9105160236358643
    3. '+j' → logprob: -8.785515785217285
    4. '1' → logprob: -9.285515785217285
    5. ' j' → logprob: -11.285515785217285
    6. '   ' → logprob: -11.535515785217285
    7. '[j' → logprob: -12.035515785217285
    8. '```' → logprob: -12.160515785217285
    9. ' +' → logprob: -12.410515785217285
    10. '++' → logprob: -12.535515785217285

Token 1452: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011105360463261604
    2. '[' → logprob: -4.511105537414551
    3. '[i' → logprob: -11.01110553741455
    4. '                           ' → logprob: -11.76110553741455
    5. '```' → logprob: -11.76110553741455
    6. '[j' → logprob: -12.13610553741455
    7. ']' → logprob: -12.51110553741455
    8. '>[' → logprob: -12.88610553741455
    9. ' ][' → logprob: -13.13610553741455
    10. ''][' → logprob: -13.26110553741455

Token 1453: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.248469718324486e-05
    2. '[' → logprob: -10.875022888183594
    3. ' ' → logprob: -12.875022888183594
    4. '0' → logprob: -14.750022888183594
    5. '   ' → logprob: -15.625022888183594
    6. '
' → logprob: -15.875022888183594
    7. '+' → logprob: -16.375022888183594
    8. ']' → logprob: -16.375022888183594
    9. '(' → logprob: -16.875022888183594
    10. '```' → logprob: -17.000022888183594

Token 1454: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5447439551353455
    2. ']' → logprob: -1.2947440147399902
    3. ' <' → logprob: -2.0447440147399902
    4. ']<' → logprob: -4.29474401473999
    5. '[' → logprob: -6.29474401473999
    6. '<|end|>' → logprob: -7.66974401473999
    7. '][' → logprob: -7.91974401473999
    8. ')' → logprob: -9.419743537902832
    9. '```' → logprob: -9.919743537902832
    10. '                           ' → logprob: -10.169743537902832

Token 1455: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.02055169641971588
    2. ' <' → logprob: -3.8955516815185547
    3. '<int' → logprob: -13.270551681518555
    4. '<|end|>' → logprob: -13.270551681518555
    5. '<size' → logprob: -13.895551681518555
    6. '=' → logprob: -14.145551681518555
    7. '<n' → logprob: -14.395551681518555
    8. '[' → logprob: -14.520551681518555
    9. '<num' → logprob: -14.645551681518555
    10. ']<' → logprob: -14.770551681518555

Token 1456: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -15.375001907348633
    4. '                               ' → logprob: -18.125001907348633
    5. '                           ' → logprob: -19.375001907348633
    6. '                       ' → logprob: -19.625001907348633
    7. '                   ' → logprob: -20.375001907348633
    8. '```' → logprob: -20.500001907348633
    9. '                                   ' → logprob: -21.000001907348633
    10. '  ' → logprob: -21.000001907348633

Token 1457: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '   ' → logprob: -18.375
    4. '```' → logprob: -19.625
    5. 'max' → logprob: -20.0
    6. '
' → logprob: -21.3125
    7. '0' → logprob: -21.625
    8. '                               ' → logprob: -22.0
    9. '  ' → logprob: -22.4375
    10. '{
' → logprob: -22.5

Token 1458: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.027883440256118774
    2. '                               ' → logprob: -3.777883529663086
    3. ':' → logprob: -5.402883529663086
    4. '):
' → logprob: -9.777883529663086
    5. '                           ' → logprob: -10.402883529663086
    6. '                              ' → logprob: -11.777883529663086
    7. '                                   ' → logprob: -12.277883529663086
    8. ':

' → logprob: -12.277883529663086
    9. ' :
' → logprob: -12.527883529663086
    10. '=' → logprob: -12.777883529663086

Token 1459: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0005923516000621021
    2. '                           ' → logprob: -8.250592231750488
    3. '```' → logprob: -9.125592231750488
    4. '                                   ' → logprob: -9.250592231750488
    5. '                                ' → logprob: -10.500592231750488
    6. '                       ' → logprob: -10.625592231750488
    7. '                              ' → logprob: -10.875592231750488
    8. '                                
' → logprob: -11.125592231750488
    9. '                                       ' → logprob: -11.250592231750488
    10. '                            ' → logprob: -12.375592231750488

Token 1460: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.004122923128306866
    2. ' dp' → logprob: -5.504122734069824
    3. '                               ' → logprob: -10.254122734069824
    4. '                                   ' → logprob: -11.879122734069824
    5. '	dp' → logprob: -14.254122734069824
    6. '                                       ' → logprob: -14.879122734069824
    7. '```' → logprob: -15.004122734069824
    8. '(dp' → logprob: -15.379122734069824
    9. '_dp' → logprob: -15.629122734069824
    10. '                           ' → logprob: -16.25412368774414

Token 1461: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9146995327901095e-05
    2. '[j' → logprob: -11.000019073486328
    3. '[' → logprob: -13.500019073486328
    4. 'i' → logprob: -13.875019073486328
    5. '```' → logprob: -17.500019073486328
    6. ' [' → logprob: -17.750019073486328
    7. '   ' → logprob: -17.875019073486328
    8. '[
' → logprob: -18.375019073486328
    9. '[k' → logprob: -18.625019073486328
    10. '{i' → logprob: -18.750019073486328

Token 1462: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.43466347455978394
    2. '+' → logprob: -1.5596635341644287
    3. '][' → logprob: -2.0596635341644287
    4. '[' → logprob: -4.80966329574585
    5. '[j' → logprob: -5.55966329574585
    6. '+[' → logprob: -6.43466329574585
    7. '+i' → logprob: -8.309663772583008
    8. '```' → logprob: -8.809663772583008
    9. 'i' → logprob: -8.934663772583008
    10. ']+' → logprob: -8.934663772583008

Token 1463: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.003772174008190632
    2. '1' → logprob: -5.753772258758545
    3. '+' → logprob: -7.503772258758545
    4. '
' → logprob: -11.128771781921387
    5. '[j' → logprob: -11.878771781921387
    6. ' j' → logprob: -12.253771781921387
    7. '   ' → logprob: -12.753771781921387
    8. '```' → logprob: -12.878771781921387
    9. '+j' → logprob: -13.003771781921387
    10. '(j' → logprob: -13.503771781921387

Token 1464: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.659005157416686e-05
    2. '[' → logprob: -9.875066757202148
    3. '][' → logprob: -11.500066757202148
    4. '+[' → logprob: -12.625066757202148
    5. ' +' → logprob: -14.500066757202148
    6. ']+' → logprob: -15.250066757202148
    7. '           ' → logprob: -15.625066757202148
    8. '+
' → logprob: -15.625066757202148
    9. '```' → logprob: -15.750066757202148
    10. '   ' → logprob: -16.00006675720215

Token 1465: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1398757123970427e-05
    2. '+' → logprob: -11.500011444091797
    3. '
' → logprob: -14.375011444091797
    4. ' ' → logprob: -15.250011444091797
    5. '   ' → logprob: -15.625011444091797
    6. '```' → logprob: -16.125011444091797
    7. '           ' → logprob: -18.000011444091797
    8. '0' → logprob: -18.000011444091797
    9. 'j' → logprob: -18.250011444091797
    10. '       ' → logprob: -18.375011444091797

Token 1466: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7458828091621399
    2. '][' → logprob: -0.8708828091621399
    3. '[j' → logprob: -2.245882749557495
    4. '[' → logprob: -7.120882987976074
    5. '+' → logprob: -9.120882987976074
    6. '```' → logprob: -9.120882987976074
    7. '                           ' → logprob: -10.370882987976074
    8. '           ' → logprob: -10.495882987976074
    9. '                               ' → logprob: -10.995882987976074
    10. '[k' → logprob: -11.120882987976074

Token 1467: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3915141355246305e-05
    2. 'j' → logprob: -10.75002384185791
    3. '
' → logprob: -14.12502384185791
    4. '+' → logprob: -14.25002384185791
    5. ' ' → logprob: -15.00002384185791
    6. '[j' → logprob: -15.37502384185791
    7. '   ' → logprob: -15.75002384185791
    8. '0' → logprob: -16.125024795532227
    9. '```' → logprob: -16.250024795532227
    10. ']' → logprob: -16.875024795532227

Token 1468: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18842333555221558
    2. '=' → logprob: -1.9384233951568604
    3. ']=' → logprob: -4.188423156738281
    4. '                               ' → logprob: -5.188423156738281
    5. ']+=' → logprob: -5.938423156738281
    6. '+=' → logprob: -6.438423156738281
    7. ' =' → logprob: -7.188423156738281
    8. '<' → logprob: -7.813423156738281
    9. '```' → logprob: -8.063423156738281
    10. ')' → logprob: -8.438423156738281

Token 1469: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00029613598599098623
    2. ' =' → logprob: -8.125296592712402
    3. '                               ' → logprob: -16.875295639038086
    4. '+=' → logprob: -19.250295639038086
    5. '                                   ' → logprob: -19.750295639038086
    6. '=
' → logprob: -20.000295639038086
    7. '=

' → logprob: -21.000295639038086
    8. '							' → logprob: -21.125295639038086
    9. '＝' → logprob: -21.250295639038086
    10. '```' → logprob: -21.250295639038086

Token 1470: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '                               ' → logprob: -17.62506675720215
    4. ' ' → logprob: -18.75006675720215
    5. '   ' → logprob: -18.87506675720215
    6. '```' → logprob: -19.12506675720215
    7. '0' → logprob: -20.25006675720215
    8. '                           ' → logprob: -20.37506675720215
    9. '	' → logprob: -20.87506675720215
    10. '' → logprob: -20.87506675720215

Token 1471: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.5
    3. '```' → logprob: -22.125
    4. '   ' → logprob: -22.5
    5. '0' → logprob: -23.375
    6. '' → logprob: -23.5
    7. '۱' → logprob: -23.875
    8. '１' → logprob: -24.5
    9. '                               ' → logprob: -24.75
    10. 'max' → logprob: -24.75

Token 1472: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.04070988669991493
    2. '                                   ' → logprob: -3.915709972381592
    3. '                                
' → logprob: -5.165709972381592
    4. '```' → logprob: -5.790709972381592
    5. '
' → logprob: -6.040709972381592
    6. '                                ' → logprob: -6.415709972381592
    7. '                                       ' → logprob: -6.665709972381592
    8. '                                    
' → logprob: -6.790709972381592
    9. ' 
' → logprob: -7.415709972381592
    10. '``' → logprob: -7.790709972381592

Token 1473: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.004310361109673977
    2. '                                
' → logprob: -5.754310131072998
    3. '                                   ' → logprob: -7.879310131072998
    4. '                                ' → logprob: -8.379310607910156
    5. '```' → logprob: -8.754310607910156
    6. '                                    
' → logprob: -9.879310607910156
    7. '							' → logprob: -10.004310607910156
    8. '                           ' → logprob: -10.004310607910156
    9. '                              ' → logprob: -10.004310607910156
    10. '                                       ' → logprob: -10.379310607910156

Token 1474: ' updated' (ID: 8489)
  Prédit: 'updated'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'updated' (adapté à ' updated') → logprob: -0.4109608232975006
    2. '                               ' → logprob: -1.1609607934951782
    3. ' updated' → logprob: -3.7859609127044678
    4. '                                   ' → logprob: -6.910960674285889
    5. '                                ' → logprob: -10.035961151123047
    6. '                           ' → logprob: -11.535961151123047
    7. '           ' → logprob: -11.535961151123047
    8. '                                       ' → logprob: -11.660961151123047
    9. '               ' → logprob: -11.660961151123047
    10. '                                 ' → logprob: -12.160961151123047

Token 1475: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03001474402844906
    2. ' =' → logprob: -3.530014753341675
    3. '=True' → logprob: -8.405014991760254
    4. '                               ' → logprob: -10.280014991760254
    5. '=False' → logprob: -13.280014991760254
    6. '=
' → logprob: -13.780014991760254
    7. '                                ' → logprob: -14.155014991760254
    8. '                           ' → logprob: -14.655014991760254
    9. '                              ' → logprob: -14.655014991760254
    10. '                                   ' → logprob: -15.030014991760254

Token 1476: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.0206720617134124e-05
    2. ' True' → logprob: -11.50001049041748
    3. '=True' → logprob: -20.500009536743164
    4. 'true' → logprob: -22.125009536743164
    5. '(True' → logprob: -22.250009536743164
    6. '_true' → logprob: -23.125009536743164
    7. '   ' → logprob: -23.750009536743164
    8. '​' → logprob: -24.000009536743164
    9. 'False' → logprob: -24.125009536743164
    10. ' ' → logprob: -24.625009536743164

Token 1477: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8551944494247437
    2. 'if' → logprob: -2.105194568634033
    3. '```' → logprob: -2.480194568634033
    4. '<|end|>' → logprob: -2.730194568634033
    5. '                           ' → logprob: -2.855194568634033
    6. ' if' → logprob: -2.980194568634033
    7. '                               ' → logprob: -3.230194568634033
    8. '           ' → logprob: -3.480194568634033
    9. '               ' → logprob: -3.605194568634033
    10. '       ' → logprob: -3.605194568634033

Token 1478: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014356116764247417
    2. 'if' → logprob: -5.2643561363220215
    3. ' if' → logprob: -6.0143561363220215
    4. '       ' → logprob: -6.3893561363220215
    5. '```' → logprob: -6.8893561363220215
    6. '<|end|>' → logprob: -6.8893561363220215
    7. '           ' → logprob: -7.0143561363220215
    8. '#' → logprob: -7.5143561363220215
    9. 'continue' → logprob: -7.5143561363220215
    10. '               ' → logprob: -8.889355659484863

Token 1479: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009506147354841232
    2. 'if' (adapté à ' if') → logprob: -4.8845062255859375
    3. ' if' → logprob: -6.8845062255859375
    4. '#' → logprob: -8.009506225585938
    5. '       ' → logprob: -8.384506225585938
    6. '```' → logprob: -8.759506225585938
    7. 'break' → logprob: -10.009506225585938
    8. '           ' → logprob: -10.384506225585938
    9. '<|end|>' → logprob: -11.259506225585938
    10. ')' → logprob: -11.384506225585938

Token 1480: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0009334942442364991
    2. ' not' → logprob: -7.000933647155762
    3. '   ' → logprob: -10.750933647155762
    4. '
' → logprob: -14.500933647155762
    5. 'updated' → logprob: -18.000932693481445
    6. '	not' → logprob: -18.000932693481445
    7. '(not' → logprob: -19.125932693481445
    8. '_not' → logprob: -19.125932693481445
    9. '!' → logprob: -19.250932693481445
    10. '       ' → logprob: -19.500932693481445

Token 1481: ' updated' (ID: 8489)
  Prédit: 'updated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'updated' → logprob: -0.07888989895582199
    2. ' updated' → logprob: -2.578889846801758
    3. '(updated' → logprob: -16.828889846801758
    4. ' ' → logprob: -17.203889846801758
    5. '   ' → logprob: -17.328889846801758
    6. 'Updated' → logprob: -18.703889846801758
    7. ' ' → logprob: -19.078889846801758
    8. 'update' → logprob: -19.328889846801758
    9. '_updated' → logprob: -19.453889846801758
    10. '.updated' → logprob: -19.453889846801758

Token 1482: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20016992092132568
    2. ':' → logprob: -2.5751700401306152
    3. '   ' → logprob: -2.9501700401306152
    4. ':
' → logprob: -2.9501700401306152
    5. '           ' → logprob: -8.450169563293457
    6. 'break' → logprob: -8.950169563293457
    7. '	break' → logprob: -9.325169563293457
    8. '=' → logprob: -9.700169563293457
    9. ' break' → logprob: -10.700169563293457
    10. '               ' → logprob: -11.075169563293457

Token 1483: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028203281108289957
    2. '   ' → logprob: -5.8778204917907715
    3. 'break' → logprob: -11.377820014953613
    4. '           ' → logprob: -13.252820014953613
    5. '	break' → logprob: -13.752820014953613
    6. ' break' → logprob: -14.502820014953613
    7. '	' → logprob: -15.002820014953613
    8. '               ' → logprob: -15.627820014953613
    9. '```' → logprob: -17.00282096862793
    10. '   ' → logprob: -17.12782096862793

Token 1484: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.3137354254722595
    2. '       ' → logprob: -1.3137354850769043
    3. '   ' → logprob: -8.188735008239746
    4. ' break' → logprob: -8.813735008239746
    5. '	break' → logprob: -10.313735008239746
    6. '           ' → logprob: -11.313735008239746
    7. '_break' → logprob: -14.188735008239746
    8. '               ' → logprob: -14.563735008239746
    9. '
' → logprob: -15.563735008239746
    10. 'Break' → logprob: -16.438735961914062

Token 1485: '

' (ID: 279)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.226377934217453
    2. 'res' → logprob: -2.4763779640197754
    3. 'answer' → logprob: -2.7263779640197754
    4. 'max' → logprob: -3.2263779640197754
    5. 'ans' → logprob: -4.851377964019775
    6. '#' → logprob: -6.226377964019775
    7. 'best' → logprob: -6.226377964019775
    8. '```' → logprob: -6.601377964019775
    9. '``' → logprob: -9.351377487182617
    10. '
' → logprob: -9.601377487182617

Token 1486: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5056149363517761
    2. 'res' → logprob: -1.505614995956421
    3. 'max' → logprob: -2.255614995956421
    4. 'answer' → logprob: -3.255614995956421
    5. 'ans' → logprob: -3.505614995956421
    6. 'best' → logprob: -7.005614757537842
    7. 'print' → logprob: -8.255615234375
    8. '#' → logprob: -8.505615234375
    9. '```' → logprob: -8.880615234375
    10. 'maximum' → logprob: -10.755615234375

Token 1487: ' On' (ID: 2160)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6435624957084656
    2. 'result' → logprob: -1.6435625553131104
    3. 'answer' → logprob: -1.8935625553131104
    4. 'ans' → logprob: -2.1435625553131104
    5. 'max' → logprob: -4.893562316894531
    6. '#' → logprob: -5.143562316894531
    7. 'best' → logprob: -8.768562316894531
    8. 'rés' → logprob: -10.893562316894531
    9. 'ret' → logprob: -11.643562316894531
    10. 'maximum' → logprob: -13.268562316894531

Token 1488: ' doit' (ID: 21822)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.29512929916381836
    2. 'result' → logprob: -2.1701292991638184
    3. '#' → logprob: -3.0451292991638184
    4. ' =' → logprob: -3.5451292991638184
    5. '
' → logprob: -4.045129299163818
    6. 'best' → logprob: -4.295129299163818
    7. '=' → logprob: -4.420129299163818
    8. 'ans' → logprob: -5.295129299163818
    9. 'print' → logprob: -5.295129299163818
    10. 'answer' → logprob: -5.295129299163818

Token 1489: ' s' (ID: 265)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.34690403938293457
    2. '#' → logprob: -1.4719040393829346
    3. 'maint' → logprob: -4.2219038009643555
    4. 'result' → logprob: -4.5969038009643555
    5. 'rés' → logprob: -5.2219038009643555
    6. 'aff' → logprob: -5.3469038009643555
    7. 'answer' → logprob: -5.3469038009643555
    8. 'print' → logprob: -5.3469038009643555
    9. 'ans' → logprob: -5.5969038009643555
    10. 'tr' → logprob: -5.5969038009643555

Token 1490: ''assurer' (ID: 193756)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1528429985046387
    2. 'olution' → logprob: -1.4028429985046387
    3. 'e' → logprob: -2.4028429985046387
    4. '=' → logprob: -2.4028429985046387
    5. 'max' → logprob: -2.6528429985046387
    6. 'ort' → logprob: -3.5278429985046387
    7. 'best' → logprob: -3.5278429985046387
    8. 'ans' → logprob: -3.9028429985046387
    9. '=max' → logprob: -4.152842998504639
    10. 'core' → logprob: -4.152842998504639

Token 1491: ' que' (ID: 661)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.17906494438648224
    2. 'd' → logprob: -2.554064989089966
    3. 'final' → logprob: -3.929064989089966
    4. '#' → logprob: -4.304064750671387
    5. 'que' → logprob: -4.429064750671387
    6. ' de' → logprob: -4.679064750671387
    7. '```' → logprob: -4.804064750671387
    8. 'max' → logprob: -4.929064750671387
    9. 'maint' → logprob: -5.179064750671387
    10. ' que' → logprob: -5.679064750671387

Token 1492: ' le' (ID: 505)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4982543885707855
    2. 'result' → logprob: -1.248254418373108
    3. 'res' → logprob: -2.9982542991638184
    4. 'la' → logprob: -3.8732542991638184
    5. ' la' → logprob: -4.873254299163818
    6. ' max' → logprob: -5.123254299163818
    7. 'le' → logprob: -5.248254299163818
    8. 'the' → logprob: -5.248254299163818
    9. ' result' → logprob: -5.998254299163818
    10. '#' → logprob: -5.998254299163818

Token 1493: ' train' (ID: 8513)
  Prédit: 'train'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'train' → logprob: -0.6647897362709045
    2. 'dern' → logprob: -1.7897896766662598
    3. '#' → logprob: -1.9147896766662598
    4. 'result' → logprob: -2.4147896766662598
    5. 'max' → logprob: -3.1647896766662598
    6. 'maximum' → logprob: -4.03978967666626
    7. 'rés' → logprob: -4.28978967666626
    8. 'last' → logprob: -6.28978967666626
    9. 'plus' → logprob: -6.66478967666626
    10. 'long' → logprob: -6.78978967666626

Token 1494: ' finis' (ID: 175592)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -1.1764464378356934
    2. '#' → logprob: -1.3014464378356934
    3. 'length' → logprob: -1.3014464378356934
    4. 'est' → logprob: -2.4264464378356934
    5. 'max' → logprob: -4.426446437835693
    6. 'len' → logprob: -4.426446437835693
    7. 'long' → logprob: -4.676446437835693
    8. 'n' → logprob: -4.926446437835693
    9. 'pe' → logprob: -5.301446437835693
    10. 'ne' → logprob: -5.801446437835693

Token 1495: ' par' (ID: 686)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2655418813228607
    2. 'sur' → logprob: -1.765541911125183
    3. 'par' → logprob: -3.5155417919158936
    4. 'se' → logprob: -3.8905417919158936
    5. '#' → logprob: -5.015542030334473
    6. 't' → logprob: -7.140542030334473
    7. 'son' → logprob: -7.390542030334473
    8. 'it' → logprob: -7.390542030334473
    9. 'ant' → logprob: -7.390542030334473
    10. ' par' → logprob: -7.390542030334473

Token 1496: ' un' (ID: 537)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.06300311535596848
    2. ''une' → logprob: -3.3130030632019043
    3. 'un' → logprob: -3.9380030632019043
    4. ''I' → logprob: -5.938003063201904
    5. 'une' → logprob: -6.438003063201904
    6. 'I' → logprob: -8.563003540039062
    7. ''' → logprob: -8.563003540039062
    8. ''n' → logprob: -8.813003540039062
    9. 'n' → logprob: -9.313003540039062
    10. 'le' → logprob: -9.813003540039062

Token 1497: ' wagon' (ID: 90907)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.8383896350860596
    2. ''I' → logprob: -0.9633896350860596
    3. 'wagon' → logprob: -1.9633896350860596
    4. ''' → logprob: -3.9633896350860596
    5. 'wag' → logprob: -5.3383893966674805
    6. ''w' → logprob: -5.5883893966674805
    7. '```' → logprob: -5.5883893966674805
    8. ''i' → logprob: -5.5883893966674805
    9. '`' → logprob: -6.7133893966674805
    10. '"I' → logprob: -6.7133893966674805

Token 1498: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.514394998550415
    2. 'd' → logprob: -1.764394998550415
    3. 'I' → logprob: -2.514394998550415
    4. 'de' → logprob: -2.514394998550415
    5. 'qui' → logprob: -2.639394998550415
    6. 'for' → logprob: -2.639394998550415
    7. '#' → logprob: -2.764394998550415
    8. ''I' → logprob: -2.764394998550415
    9. '```' → logprob: -3.514394998550415
    10. 's' → logprob: -3.514394998550415

Token 1499: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0037212190218269825
    2. ''I' → logprob: -5.628721237182617
    3. ''' → logprob: -9.253721237182617
    4. '`' → logprob: -12.253721237182617
    5. '"I' → logprob: -12.253721237182617
    6. ' I' → logprob: -12.878721237182617
    7. '_I' → logprob: -13.253721237182617
    8. 'O' → logprob: -13.753721237182617
    9. '```' → logprob: -13.878721237182617
    10. '’I' → logprob: -14.003721237182617

Token 1500: ''
' (ID: 2207)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.032040055841207504
    2. 'max' → logprob: -4.032040119171143
    3. 'result' → logprob: -5.532040119171143
    4. '#' → logprob: -5.657040119171143
    5. ' for' → logprob: -6.032040119171143
    6. 'ans' → logprob: -6.907040119171143
    7. '
' → logprob: -6.907040119171143
    8. 'res' → logprob: -7.532040119171143
    9. 'answer' → logprob: -7.532040119171143
    10. 'final' → logprob: -8.407039642333984

Token 1501: '#' (ID: 2)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8816449046134949
    2. 'result' → logprob: -1.1316449642181396
    3. 'answer' → logprob: -2.1316449642181396
    4. 'max' → logprob: -2.6316449642181396
    5. 'ans' → logprob: -2.6316449642181396
    6. 'best' → logprob: -7.2566447257995605
    7. '
' → logprob: -10.131645202636719
    8. '#' → logprob: -10.381645202636719
    9. 'maximum' → logprob: -10.756645202636719
    10. 'rés' → logprob: -11.131645202636719

Token 1502: ' donc' (ID: 14206)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.2591743469238281
    2. 'result' → logprob: -2.259174346923828
    3. 'ans' → logprob: -2.759174346923828
    4. 'answer' → logprob: -3.009174346923828
    5. 'max' → logprob: -4.509174346923828
    6. 'best' → logprob: -8.759174346923828
    7. 'ret' → logprob: -11.634174346923828
    8. '#' → logprob: -11.634174346923828
    9. '
' → logprob: -11.759174346923828
    10. 'rés' → logprob: -12.259174346923828

Token 1503: ' on' (ID: 402)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.1334503889083862
    2. 'ans' → logprob: -1.3834503889083862
    3. 'max' → logprob: -1.3834503889083862
    4. 'result' → logprob: -2.133450508117676
    5. 'answer' → logprob: -2.883450508117676
    6. 'best' → logprob: -6.133450508117676
    7. '
' → logprob: -10.133450508117676
    8. 'rés' → logprob: -10.633450508117676
    9. 'maximum' → logprob: -11.133450508117676
    10. 'ret' → logprob: -11.633450508117676

Token 1504: ' ne' (ID: 453)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7523424625396729
    2. 'ans' → logprob: -1.5023424625396729
    3. 'answer' → logprob: -1.7523424625396729
    4. 'result' → logprob: -2.502342462539673
    5. 'res' → logprob: -3.002342462539673
    6. 'best' → logprob: -7.127342224121094
    7. 'rés' → logprob: -8.127342224121094
    8. 'final' → logprob: -10.627342224121094
    9. '#' → logprob: -11.002342224121094
    10. 'maximum' → logprob: -11.252342224121094

Token 1505: ' compte' (ID: 19657)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.005269803572446108
    2. 'result' → logprob: -6.630270004272461
    3. 'ans' → logprob: -7.380270004272461
    4. 'answer' → logprob: -7.380270004272461
    5. 'best' → logprob: -7.505270004272461
    6. 's' → logprob: -7.630270004272461
    7. '=' → logprob: -8.255270004272461
    8. '#' → logprob: -8.255270004272461
    9. 'val' → logprob: -8.505270004272461
    10. 'final' → logprob: -8.630270004272461

Token 1506: ' que' (ID: 661)
  Prédit: 'only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'only' → logprob: -0.37893521785736084
    2. ' uniquement' → logprob: -3.1289353370666504
    3. 'final' → logprob: -3.2539353370666504
    4. 'que' → logprob: -3.2539353370666504
    5. 'max' → logprob: -3.5039353370666504
    6. 'se' → logprob: -3.5039353370666504
    7. 'for' → logprob: -3.6289353370666504
    8. 'pas' → logprob: -4.00393533706665
    9. ' only' → logprob: -4.12893533706665
    10. '=' → logprob: -4.12893533706665

Token 1507: ' dp' (ID: 21546)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.17926165461540222
    2. 'res' → logprob: -1.9292616844177246
    3. 'result' → logprob: -4.429261684417725
    4. 'ans' → logprob: -5.304261684417725
    5. 'best' → logprob: -7.054261684417725
    6. 'answer' → logprob: -7.804261684417725
    7. 'final' → logprob: -8.304261207580566
    8. 'long' → logprob: -9.304261207580566
    9. 'val' → logprob: -9.679261207580566
    10. ' max' → logprob: -9.929261207580566

Token 1508: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.08098725974559784
    2. 'max' → logprob: -3.2059872150421143
    3. 'final' → logprob: -4.830987453460693
    4. 'val' → logprob: -5.330987453460693
    5. 'i' → logprob: -5.330987453460693
    6. '[' → logprob: -6.330987453460693
    7. '_max' → logprob: -6.330987453460693
    8. 'vals' → logprob: -6.330987453460693
    9. '```' → logprob: -6.330987453460693
    10. '_val' → logprob: -6.580987453460693

Token 1509: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00034702493576332927
    2. 'for' → logprob: -8.375347137451172
    3. '[i' → logprob: -10.000347137451172
    4. '[j' → logprob: -11.000347137451172
    5. '[M' → logprob: -11.000347137451172
    6. ']' → logprob: -11.625347137451172
    7. '```' → logprob: -12.250347137451172
    8. '
' → logprob: -12.375347137451172
    9. '[' → logprob: -12.500347137451172
    10. '#' → logprob: -12.750347137451172

Token 1510: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006883027032017708
    2. '][' → logprob: -5.006883144378662
    3. 'M' → logprob: -9.381882667541504
    4. 'i' → logprob: -10.006882667541504
    5. '```' → logprob: -11.381882667541504
    6. ']' → logprob: -11.881882667541504
    7. '
' → logprob: -12.006882667541504
    8. '[j' → logprob: -12.756882667541504
    9. ' j' → logprob: -12.881882667541504
    10. ':j' → logprob: -13.256882667541504

Token 1511: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0023706546053290367
    2. '[last' → logprob: -6.877370834350586
    3. '[k' → logprob: -7.252370834350586
    4. '[' → logprob: -7.877370834350586
    5. ']' → logprob: -9.502370834350586
    6. 'k' → logprob: -9.877370834350586
    7. 'for' → logprob: -10.252370834350586
    8. '<|end|>' → logprob: -11.127370834350586
    9. '[end' → logprob: -11.877370834350586
    10. 'last' → logprob: -11.877370834350586

Token 1512: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.37908557057380676
    2. '0' → logprob: -1.5040855407714844
    3. 'k' → logprob: -2.3790855407714844
    4. 'l' → logprob: -7.754085540771484
    5. '...]' → logprob: -10.254085540771484
    6. '_]' → logprob: -10.379085540771484
    7. '
' → logprob: -10.504085540771484
    8. 'x' → logprob: -11.004085540771484
    9. '(last' → logprob: -11.504085540771484
    10. 'LAST' → logprob: -11.754085540771484

Token 1513: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014726031804457307
    2. 'for' → logprob: -7.376472473144531
    3. '])' → logprob: -7.626472473144531
    4. ']
' → logprob: -8.751472473144531
    5. '][' → logprob: -10.376472473144531
    6. ']:
' → logprob: -10.376472473144531
    7. '].' → logprob: -10.376472473144531
    8. 'if' → logprob: -10.626472473144531
    9. '],' → logprob: -10.876472473144531
    10. ']==' → logprob: -11.001472473144531

Token 1514: ' où' (ID: 15113)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5528780817985535
    2. 'ans' → logprob: -1.6778781414031982
    3. 'answer' → logprob: -2.1778781414031982
    4. 'result' → logprob: -2.5528781414031982
    5. 'res' → logprob: -3.1778781414031982
    6. '
' → logprob: -5.927877902984619
    7. 'best' → logprob: -7.177877902984619
    8. '#' → logprob: -7.927877902984619
    9. 'final' → logprob: -7.927877902984619
    10. '=' → logprob: -8.177878379821777

Token 1515: ' la' (ID: 557)
  Prédit: '(last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(last' → logprob: -0.04441618546843529
    2. 'last' → logprob: -3.5444161891937256
    3. '(S' → logprob: -5.0444159507751465
    4. '(i' → logprob: -6.0444159507751465
    5. '(
' → logprob: -6.2944159507751465
    6. '((' → logprob: -6.6694159507751465
    7. ' (' → logprob: -6.7944159507751465
    8. '(dp' → logprob: -6.9194159507751465
    9. '(' → logprob: -8.294416427612305
    10. ' last' → logprob: -9.294416427612305

Token 1516: ' dernière' (ID: 39497)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.007561906240880489
    2. '(last' → logprob: -5.882561683654785
    3. ' last' → logprob: -6.507561683654785
    4. 'S' → logprob: -7.007561683654785
    5. 'for' → logprob: -7.132561683654785
    6. '
' → logprob: -8.257561683654785
    7. '[last' → logprob: -8.507561683654785
    8. 'i' → logprob: -8.507561683654785
    9. '#' → logprob: -8.632561683654785
    10. 'dp' → logprob: -8.757561683654785

Token 1517: ' wagon' (ID: 90907)
  Prédit: 'lett'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lett' → logprob: -0.7354423999786377
    2. 'wagon' → logprob: -1.4854423999786377
    3. 'vo' → logprob: -1.9854423999786377
    4. 'token' → logprob: -3.4854423999786377
    5. 'w' → logprob: -3.7354423999786377
    6. 'position' → logprob: -3.9854423999786377
    7. '```' → logprob: -4.485442161560059
    8. 'car' → logprob: -4.735442161560059
    9. '#' → logprob: -4.860442161560059
    10. 'let' → logprob: -5.110442161560059

Token 1518: ' est' (ID: 893)
  Prédit: 'vient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vient' → logprob: -0.34228944778442383
    2. 'prise' → logprob: -2.342289447784424
    3. 'est' → logprob: -2.592289447784424
    4. 'ven' → logprob: -3.467289447784424
    5. '```' → logprob: -3.842289447784424
    6. 'pris' → logprob: -3.842289447784424
    7. 'venir' → logprob: -4.967289447784424
    8. 'a' → logprob: -4.967289447784424
    9. 'taken' → logprob: -5.342289447784424
    10. 'v' → logprob: -5.467289447784424

Token 1519: ' '' (ID: 461)
  Prédit: ''I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''I' → logprob: -0.0014033254701644182
    2. '0' → logprob: -7.501403331756592
    3. ''i' → logprob: -8.376402854919434
    4. '"I' → logprob: -8.751402854919434
    5. 'I' → logprob: -8.876402854919434
    6. '('' → logprob: -9.251402854919434
    7. ' '' → logprob: -10.001402854919434
    8. ''' → logprob: -10.626402854919434
    9. ''S' → logprob: -10.626402854919434
    10. '’I' → logprob: -11.126402854919434

Token 1520: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0006566775846295059
    2. ''I' → logprob: -7.375656604766846
    3. '`' → logprob: -11.875657081604004
    4. 'i' → logprob: -12.125657081604004
    5. ''' → logprob: -12.500657081604004
    6. '['' → logprob: -12.750657081604004
    7. '0' → logprob: -12.875657081604004
    8. ''i' → logprob: -13.500657081604004
    9. '"I' → logprob: -13.500657081604004
    10. ''s' → logprob: -13.625657081604004

Token 1521: ''

' (ID: 7497)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4513726830482483
    2. 'res' → logprob: -2.2013726234436035
    3. 'ans' → logprob: -2.2013726234436035
    4. 'result' → logprob: -2.4513726234436035
    5. 'answer' → logprob: -2.9513726234436035
    6. '
' → logprob: -5.8263726234436035
    7. 'best' → logprob: -7.7013726234436035
    8. 'ret' → logprob: -10.451373100280762
    9. 'maximum' → logprob: -10.701373100280762
    10. 'rés' → logprob: -11.826373100280762

Token 1522: 'ans' (ID: 616)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.1413317173719406
    2. 'result' → logprob: -2.641331672668457
    3. 'answer' → logprob: -3.391331672668457
    4. 'ans' → logprob: -3.641331672668457
    5. 'max' → logprob: -7.391331672668457
    6. 'best' → logprob: -10.391331672668457
    7. 'rés' → logprob: -13.641331672668457
    8. 'ret' → logprob: -13.766331672668457
    9. '#' → logprob: -14.016331672668457
    10. '
' → logprob: -14.516331672668457

Token 1523: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020678490400314
    2. ' =' → logprob: -2.3502068519592285
    3. '=max' → logprob: -16.72520637512207
    4. '＝' → logprob: -17.60020637512207
    5. 'max' → logprob: -18.10020637512207
    6. '=int' → logprob: -19.10020637512207
    7. ' ' → logprob: -19.85020637512207
    8. ',' → logprob: -20.72520637512207
    9. '=

' → logprob: -20.72520637512207
    10. '_=' → logprob: -20.85020637512207

Token 1524: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3425219549390022e-05
    2. 'max' → logprob: -11.25001335144043
    3. ' ' → logprob: -15.25001335144043
    4. '-' → logprob: -16.25001335144043
    5. '```' → logprob: -18.62501335144043
    6. '   ' → logprob: -18.75001335144043
    7. '1' → logprob: -19.12501335144043
    8. ' max' → logprob: -19.25001335144043
    9. '``' → logprob: -20.12501335144043
    10. 'INF' → logprob: -20.25001335144043

Token 1525: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000510856625624001
    2. 'max' → logprob: -7.6255106925964355
    3. 'INF' → logprob: -11.000511169433594
    4. '-' → logprob: -12.250511169433594
    5. '-INF' → logprob: -14.125511169433594
    6. '-max' → logprob: -15.625511169433594
    7. ' ' → logprob: -15.875511169433594
    8. 'float' → logprob: -15.875511169433594
    9. ' max' → logprob: -16.500511169433594
    10. 'MAX' → logprob: -16.625511169433594

Token 1526: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. ' for' → logprob: -15.625
    3. '
' → logprob: -19.25
    4. '```' → logprob: -20.375
    5. '	for' → logprob: -22.75
    6. '   ' → logprob: -24.125
    7. 'from' → logprob: -24.25
    8. '``' → logprob: -24.75
    9. '  
' → logprob: -24.875
    10. 'For' → logprob: -25.125

Token 1527: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -20.375
    3. '```' → logprob: -22.0
    4. '
' → logprob: -24.25
    5. '	for' → logprob: -26.25
    6. '``' → logprob: -27.125
    7. 'from' → logprob: -27.25
    8. '   ' → logprob: -27.75
    9. 'For' → logprob: -28.75
    10. '#' → logprob: -29.125

Token 1528: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0280383548888494e-06
    2. 'last' → logprob: -14.000000953674316
    3. ' i' → logprob: -16.000001907348633
    4. '_i' → logprob: -18.875001907348633
    5. '	i' → logprob: -19.250001907348633
    6. '```' → logprob: -20.125001907348633
    7. 'k' → logprob: -20.625001907348633
    8. '0' → logprob: -20.750001907348633
    9. '   ' → logprob: -20.875001907348633
    10. 'end' → logprob: -20.875001907348633

Token 1529: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4741171598434448
    2. ' in' → logprob: -0.9741171598434448
    3. 'range' → logprob: -10.599117279052734
    4. '
' → logprob: -12.224117279052734
    5. 'for' → logprob: -12.474117279052734
    6. '0' → logprob: -13.599117279052734
    7. '```' → logprob: -13.974117279052734
    8. '   ' → logprob: -13.974117279052734
    9. '[' → logprob: -14.099117279052734
    10. ' ' → logprob: -14.349117279052734

Token 1530: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.320199877838604e-07
    2. ' range' → logprob: -14.75
    3. '(range' → logprob: -21.625
    4. '0' → logprob: -23.75
    5. 'in' → logprob: -24.25
    6. 'r' → logprob: -24.5
    7. '
' → logprob: -25.125
    8. '```' → logprob: -25.375
    9. 'i' → logprob: -25.5
    10. 'list' → logprob: -25.5

Token 1531: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.000158842682139948
    2. 'M' → logprob: -8.75015926361084
    3. '
' → logprob: -16.625158309936523
    4. '[M' → logprob: -16.625158309936523
    5. '(' → logprob: -16.750158309936523
    6. '   ' → logprob: -17.500158309936523
    7. 'range' → logprob: -17.625158309936523
    8. '1' → logprob: -18.250158309936523
    9. 'len' → logprob: -18.750158309936523
    10. ' M' → logprob: -19.125158309936523

Token 1532: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.935296834039036e-06
    2. ' +' → logprob: -12.75000286102295
    3. '+
' → logprob: -17.125003814697266
    4. '):
' → logprob: -18.375003814697266
    5. '
' → logprob: -19.125003814697266
    6. '```' → logprob: -19.375003814697266
    7. 'for' → logprob: -19.625003814697266
    8. '＋' → logprob: -20.125003814697266
    9. ')+' → logprob: -21.000003814697266
    10. '+j' → logprob: -21.000003814697266

Token 1533: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28206244111061096
    2. '+' → logprob: -1.4070624113082886
    3. 'N' → logprob: -7.032062530517578
    4. '```' → logprob: -11.782062530517578
    5. 'for' → logprob: -12.032062530517578
    6. 'i' → logprob: -12.657062530517578
    7. ' +' → logprob: -12.782062530517578
    8. '
' → logprob: -13.407062530517578
    9. '(N' → logprob: -14.032062530517578
    10. '(' → logprob: -14.407062530517578

Token 1534: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.007780891377478838
    2. '   ' → logprob: -5.507781028747559
    3. ':
' → logprob: -6.007781028747559
    4. 'for' → logprob: -7.257781028747559
    5. ':' → logprob: -8.757781028747559
    6. '):' → logprob: -9.132781028747559
    7. '       ' → logprob: -9.382781028747559
    8. '```' → logprob: -10.257781028747559
    9. ',' → logprob: -10.507781028747559
    10. '+' → logprob: -10.507781028747559

Token 1535: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1315675526857376
    2. 'for' → logprob: -2.1315674781799316
    3. ' for' → logprob: -5.381567478179932
    4. '	for' → logprob: -10.63156795501709
    5. '```' → logprob: -12.50656795501709
    6. ' ' → logprob: -15.75656795501709
    7. '   ' → logprob: -15.88156795501709
    8. '       ' → logprob: -16.381567001342773
    9. '  ' → logprob: -18.381567001342773
    10. '``' → logprob: -18.381567001342773

Token 1536: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -9.424530435353518e-05
    2. '   ' → logprob: -9.750094413757324
    3. ' for' → logprob: -10.250094413757324
    4. '	for' → logprob: -14.750094413757324
    5. '```' → logprob: -16.125093460083008
    6. ' ' → logprob: -18.750093460083008
    7. '       ' → logprob: -19.000093460083008
    8. 'from' → logprob: -19.000093460083008
    9. 'range' → logprob: -19.000093460083008
    10. '_for' → logprob: -19.250093460083008

Token 1537: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.000158842682139948
    2. ' j' → logprob: -8.75015926361084
    3. '   ' → logprob: -15.50015926361084
    4. 'for' → logprob: -16.875158309936523
    5. '```' → logprob: -17.250158309936523
    6. '[j' → logprob: -18.875158309936523
    7. '_j' → logprob: -19.000158309936523
    8. '$j' → logprob: -19.125158309936523
    9. '	j' → logprob: -19.250158309936523
    10. '(j' → logprob: -19.750158309936523

Token 1538: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31336304545402527
    2. 'in' → logprob: -1.3133630752563477
    3. '   ' → logprob: -9.938363075256348
    4. '[' → logprob: -10.438363075256348
    5. 'for' → logprob: -11.813363075256348
    6. ' ' → logprob: -12.063363075256348
    7. '(' → logprob: -13.438363075256348
    8. 'range' → logprob: -14.188363075256348
    9. '	in' → logprob: -14.188363075256348
    10. 'In' → logprob: -14.313363075256348

Token 1539: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3173050582408905
    2. 'N' → logprob: -1.317305088043213
    3. '(N' → logprob: -5.692305088043213
    4. ' range' → logprob: -7.817305088043213
    5. 'for' → logprob: -8.442304611206055
    6. '[N' → logprob: -11.067304611206055
    7. '0' → logprob: -11.192304611206055
    8. ' N' → logprob: -11.442304611206055
    9. '(range' → logprob: -13.067304611206055
    10. 'Range' → logprob: -14.067304611206055

Token 1540: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.003180921310558915
    2. 'N' → logprob: -5.753180980682373
    3. '[N' → logprob: -13.503180503845215
    4. 'range' → logprob: -14.128180503845215
    5. '(' → logprob: -14.753180503845215
    6. '0' → logprob: -15.628180503845215
    7. '   ' → logprob: -16.12818145751953
    8. 'for' → logprob: -16.62818145751953
    9. '<N' → logprob: -16.87818145751953
    10. '{' → logprob: -17.25318145751953

Token 1541: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.512236498361744e-07
    2. '+j' → logprob: -15.750000953674316
    3. '```' → logprob: -16.25
    4. 'j' → logprob: -16.625
    5. ' +' → logprob: -17.0
    6. '1' → logprob: -17.625
    7. '[' → logprob: -17.875
    8. '):
' → logprob: -18.0
    9. '+
' → logprob: -18.5
    10. 'for' → logprob: -18.625

Token 1542: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.541112427134067e-05
    2. '+' → logprob: -9.500075340270996
    3. ' ' → logprob: -15.125075340270996
    4. '```' → logprob: -16.000076293945312
    5. '   ' → logprob: -16.375076293945312
    6. '
' → logprob: -17.000076293945312
    7. 'j' → logprob: -19.125076293945312
    8. ')' → logprob: -19.250076293945312
    9. '``' → logprob: -19.375076293945312
    10. ' +' → logprob: -19.500076293945312

Token 1543: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.09420782327651978
    2. ':
' → logprob: -3.344207763671875
    3. '[' → logprob: -4.094207763671875
    4. '):' → logprob: -4.344207763671875
    5. ':' → logprob: -4.469207763671875
    6. '           ' → logprob: -6.219207763671875
    7. '   ' → logprob: -6.344207763671875
    8. '       ' → logprob: -6.344207763671875
    9. '               ' → logprob: -6.344207763671875
    10. 'for' → logprob: -6.344207763671875

Token 1544: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010136391036212444
    2. 'for' → logprob: -4.760136604309082
    3. ' for' → logprob: -6.510136604309082
    4. '```' → logprob: -10.510136604309082
    5. '	for' → logprob: -12.510136604309082
    6. '   ' → logprob: -14.260136604309082
    7. '       ' → logprob: -14.510136604309082
    8. '``' → logprob: -15.760136604309082
    9. ' ' → logprob: -16.135135650634766
    10. '  ' → logprob: -18.760135650634766

Token 1545: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -7.576873758807778e-05
    2. '   ' → logprob: -9.750075340270996
    3. ' for' → logprob: -11.375075340270996
    4. '           ' → logprob: -12.125075340270996
    5. '       ' → logprob: -15.000075340270996
    6. '	for' → logprob: -15.875075340270996
    7. '```' → logprob: -17.500076293945312
    8. '               ' → logprob: -19.250076293945312
    9. ' ' → logprob: -19.375076293945312
    10. '
' → logprob: -21.375076293945312

Token 1546: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -5.1689596148207784e-05
    2. ' last' → logprob: -10.000051498413086
    3. 'k' → logprob: -12.000051498413086
    4. '0' → logprob: -17.000051498413086
    5. '[last' → logprob: -17.750051498413086
    6. 'l' → logprob: -18.125051498413086
    7. '	last' → logprob: -19.375051498413086
    8. '_last' → logprob: -19.625051498413086
    9. 'lasti' → logprob: -20.000051498413086
    10. '(last' → logprob: -20.000051498413086

Token 1547: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.038042984902858734
    2. ' in' → logprob: -3.2880430221557617
    3. '```' → logprob: -13.913043022155762
    4. '
' → logprob: -15.788043022155762
    5. '   ' → logprob: -16.288042068481445
    6. '0' → logprob: -16.288042068481445
    7. 'range' → logprob: -16.413042068481445
    8. '[' → logprob: -16.663042068481445
    9. '	in' → logprob: -17.413042068481445
    10. ' ' → logprob: -17.538042068481445

Token 1548: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00024013224174268544
    2. '(' → logprob: -8.750240325927734
    3. '[' → logprob: -9.500240325927734
    4. ' range' → logprob: -12.375240325927734
    5. '(range' → logprob: -12.875240325927734
    6. '2' → logprob: -17.250240325927734
    7. '([' → logprob: -18.250240325927734
    8. '	range' → logprob: -18.750240325927734
    9. '{' → logprob: -20.250240325927734
    10. 'in' → logprob: -20.625240325927734

Token 1549: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002412992063909769
    2. '3' → logprob: -6.377412796020508
    3. '2' → logprob: -7.252412796020508
    4. '(
' → logprob: -13.627412796020508
    5. ' (' → logprob: -14.627412796020508
    6. '```' → logprob: -15.127412796020508
    7. '[' → logprob: -16.252412796020508
    8. ' ' → logprob: -17.377412796020508
    9. '   ' → logprob: -17.502412796020508
    10. '{' → logprob: -17.877412796020508

Token 1550: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.619311974034645e-05
    2. '3' → logprob: -10.250036239624023
    3. ' ' → logprob: -15.125036239624023
    4. '   ' → logprob: -15.375036239624023
    5. '1' → logprob: -15.875036239624023
    6. '```' → logprob: -16.625036239624023
    7. '(' → logprob: -16.875036239624023
    8. '0' → logprob: -17.500036239624023
    9. '[' → logprob: -17.750036239624023
    10. '           ' → logprob: -18.375036239624023

Token 1551: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0109663475304842
    2. '+' → logprob: -4.7609663009643555
    3. '           ' → logprob: -6.5109663009643555
    4. '):' → logprob: -8.010966300964355
    5. '       ' → logprob: -9.010966300964355
    6. ':
' → logprob: -9.010966300964355
    7. ':' → logprob: -10.385966300964355
    8. ',' → logprob: -10.510966300964355
    9. ')' → logprob: -10.635966300964355
    10. ''):
' → logprob: -10.635966300964355

Token 1552: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017812105361372232
    2. '   ' → logprob: -7.126780986785889
    3. 'if' → logprob: -7.376780986785889
    4. ' if' → logprob: -8.126781463623047
    5. '```' → logprob: -10.501781463623047
    6. '               ' → logprob: -11.126781463623047
    7. '                   ' → logprob: -13.251781463623047
    8. '	       ' → logprob: -13.251781463623047
    9. 'token' → logprob: -13.501781463623047
    10. '       ' → logprob: -13.501781463623047

Token 1553: ' length' (ID: 5517)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.028377650305628777
    2. 'c' → logprob: -3.7783775329589844
    3. '               ' → logprob: -5.653377532958984
    4. '           ' → logprob: -7.028377532958984
    5. ' if' → logprob: -7.403377532958984
    6. '   ' → logprob: -10.278377532958984
    7. '                   ' → logprob: -10.903377532958984
    8. ' c' → logprob: -11.028377532958984
    9. 'wagon' → logprob: -11.028377532958984
    10. 'ch' → logprob: -11.653377532958984

Token 1554: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14979209005832672
    2. ' =' → logprob: -2.024792194366455
    3. '>' → logprob: -5.899792194366455
    4. '           ' → logprob: -6.274792194366455
    5. 'if' → logprob: -6.899792194366455
    6. ' if' → logprob: -7.774792194366455
    7. '               ' → logprob: -8.899791717529297
    8. ' >' → logprob: -9.149791717529297
    9. '+=' → logprob: -9.149791717529297
    10. '=max' → logprob: -9.149791717529297

Token 1555: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00409502349793911
    2. ' dp' → logprob: -5.504095077514648
    3. '           ' → logprob: -11.629095077514648
    4. 'max' → logprob: -11.879095077514648
    5. '(dp' → logprob: -15.254095077514648
    6. '0' → logprob: -15.629095077514648
    7. '               ' → logprob: -15.629095077514648
    8. ' max' → logprob: -16.12909507751465
    9. '	dp' → logprob: -16.25409507751465
    10. '   ' → logprob: -17.62909507751465

Token 1556: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.451116051815916e-05
    2. 'i' → logprob: -10.625024795532227
    3. '[' → logprob: -16.500024795532227
    4. '```' → logprob: -17.125024795532227
    5. ' i' → logprob: -17.625024795532227
    6. '[I' → logprob: -17.750024795532227
    7. '][' → logprob: -17.875024795532227
    8. '[
' → logprob: -18.250024795532227
    9. '[int' → logprob: -18.500024795532227
    10. '{i' → logprob: -18.875024795532227

Token 1557: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.47435805201530457
    2. '][' → logprob: -0.974358081817627
    3. 'i' → logprob: -8.474357604980469
    4. ']][' → logprob: -11.349357604980469
    5. ')[' → logprob: -11.474357604980469
    6. ')][' → logprob: -11.474357604980469
    7. ''][' → logprob: -11.724357604980469
    8. '[' → logprob: -11.974357604980469
    9. '"][' → logprob: -12.099357604980469
    10. '```' → logprob: -12.474357604980469

Token 1558: 'j' (ID: 73)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0052398028783500195
    2. 'j' → logprob: -5.255239963531494
    3. ' i' → logprob: -13.130239486694336
    4. '[i' → logprob: -13.130239486694336
    5. '
' → logprob: -14.255239486694336
    6. '][' → logprob: -14.505239486694336
    7. '```' → logprob: -15.380239486694336
    8. '           ' → logprob: -15.755239486694336
    9. '   ' → logprob: -16.005239486694336
    10. 'M' → logprob: -16.505239486694336

Token 1559: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0022294751834124327
    2. '[last' → logprob: -6.127229690551758
    3. '[' → logprob: -10.502229690551758
    4. '           ' → logprob: -12.502229690551758
    5. '[length' → logprob: -13.002229690551758
    6. ' ][' → logprob: -13.502229690551758
    7. '"][' → logprob: -13.502229690551758
    8. ')[' → logprob: -13.752229690551758
    9. ''][' → logprob: -13.752229690551758
    10. '}[' → logprob: -13.877229690551758

Token 1560: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -3.7697225252486533e-06
    2. '[last' → logprob: -12.875003814697266
    3. ' last' → logprob: -14.250003814697266
    4. 'length' → logprob: -15.500003814697266
    5. '(last' → logprob: -16.125003814697266
    6. '	last' → logprob: -16.500003814697266
    7. '_last' → logprob: -17.000003814697266
    8. ':last' → logprob: -17.750003814697266
    9. 'Last' → logprob: -17.875003814697266
    10. 'lasti' → logprob: -18.125003814697266

Token 1561: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6311073899269104
    2. ']
' → logprob: -0.8811073899269104
    3. ']' → logprob: -3.2561073303222656
    4. 'if' → logprob: -5.006107330322266
    5. '               ' → logprob: -5.506107330322266
    6. '                       ' → logprob: -7.006107330322266
    7. '                   ' → logprob: -7.256107330322266
    8. '][' → logprob: -7.506107330322266
    9. ' if' → logprob: -7.631107330322266
    10. '                           ' → logprob: -8.131107330322266

Token 1562: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16885189712047577
    2. '           ' → logprob: -2.043851852416992
    3. '```' → logprob: -3.793851852416992
    4. ' if' → logprob: -6.293851852416992
    5. 'if' → logprob: -6.793851852416992
    6. '                       ' → logprob: -9.168851852416992
    7. '``' → logprob: -9.293851852416992
    8. '                   ' → logprob: -9.543851852416992
    9. '                               ' → logprob: -10.543851852416992
    10. '   ' → logprob: -11.043851852416992

Token 1563: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4529600739479065
    2. '           ' → logprob: -1.0779600143432617
    3. ' if' → logprob: -4.452960014343262
    4. 'c' → logprob: -4.952960014343262
    5. '               ' → logprob: -5.452960014343262
    6. ' c' → logprob: -7.827960014343262
    7. '```' → logprob: -8.452960014343262
    8. 'token' → logprob: -8.577960014343262
    9. '                   ' → logprob: -10.202960014343262
    10. 'last' → logprob: -10.702960014343262

Token 1564: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.042312897741794586
    2. '(length' → logprob: -4.042313098907471
    3. 'last' → logprob: -4.542313098907471
    4. ' length' → logprob: -4.792313098907471
    5. 'dp' → logprob: -6.292313098907471
    6. '(last' → logprob: -6.667313098907471
    7. '(S' → logprob: -7.542313098907471
    8. '(dp' → logprob: -7.667313098907471
    9. ' (' → logprob: -8.292312622070312
    10. ' last' → logprob: -8.667312622070312

Token 1565: ' <=' (ID: 5017)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.08947829157114029
    2. ' >' → logprob: -2.4644782543182373
    3. '           ' → logprob: -8.214478492736816
    4. 'and' → logprob: -9.339478492736816
    5. ' and' → logprob: -9.589478492736816
    6. '>=' → logprob: -10.589478492736816
    7. '               ' → logprob: -10.714478492736816
    8. '==' → logprob: -11.214478492736816
    9. '```' → logprob: -11.339478492736816
    10. '                           ' → logprob: -11.464478492736816

Token 1566: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017362393555231392
    2. ' ' → logprob: -8.875173568725586
    3. '1' → logprob: -10.375173568725586
    4. 'ans' → logprob: -13.375173568725586
    5. '   ' → logprob: -14.750173568725586
    6. '           ' → logprob: -15.875173568725586
    7. 'length' → logprob: -16.125173568725586
    8. '```' → logprob: -16.250173568725586
    9. '#' → logprob: -16.625173568725586
    10. '=' → logprob: -17.375173568725586

Token 1567: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003143704670947045
    2. 'ans' → logprob: -8.250314712524414
    3. ' ' → logprob: -10.375314712524414
    4. '1' → logprob: -11.000314712524414
    5. 'INF' → logprob: -13.000314712524414
    6. '```' → logprob: -15.062814712524414
    7. '   ' → logprob: -15.187814712524414
    8. '(ans' → logprob: -15.187814712524414
    9. '#' → logprob: -15.375314712524414
    10. '
' → logprob: -15.500314712524414

Token 1568: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15131935477256775
    2. ' and' → logprob: -2.1513192653656006
    3. 'and' → logprob: -4.40131950378418
    4. ' or' → logprob: -5.15131950378418
    5. '           ' → logprob: -6.15131950378418
    6. '                   ' → logprob: -6.90131950378418
    7. ':' → logprob: -7.27631950378418
    8. '                       ' → logprob: -7.52631950378418
    9. '              ' → logprob: -7.65131950378418
    10. '                           ' → logprob: -7.90131950378418

Token 1569: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00032759839086793363
    2. '```' → logprob: -8.875328063964844
    3. '           ' → logprob: -9.500328063964844
    4. '                   ' → logprob: -10.250328063964844
    5. '                       ' → logprob: -10.250328063964844
    6. '              ' → logprob: -11.250328063964844
    7. '                               ' → logprob: -11.750328063964844
    8. '                           ' → logprob: -12.000328063964844
    9. '             ' → logprob: -12.500328063964844
    10. '                ' → logprob: -12.625328063964844

Token 1570: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005951198749244213
    2. 'continue' (adapté à ' continue') → logprob: -5.630951404571533
    3. ' continue' → logprob: -6.380951404571533
    4. '```' → logprob: -7.505951404571533
    5. '           ' → logprob: -9.755950927734375
    6. '                   ' → logprob: -10.880950927734375
    7. '                       ' → logprob: -11.880950927734375
    8. '``' → logprob: -12.380950927734375
    9. '                               ' → logprob: -12.755950927734375
    10. ' ' → logprob: -12.880950927734375

Token 1571: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38719162344932556
    2. '               ' → logprob: -1.137191653251648
    3. '                   ' → logprob: -9.512191772460938
    4. '                       ' → logprob: -9.512191772460938
    5. '```' → logprob: -9.512191772460938
    6. '       ' → logprob: -10.762191772460938
    7. ' if' → logprob: -10.762191772460938
    8. ' c' → logprob: -11.137191772460938
    9. '	       ' → logprob: -12.012191772460938
    10. '   ' → logprob: -12.262191772460938

Token 1572: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6541983485221863
    2. '           ' → logprob: -0.7791983485221863
    3. ' if' → logprob: -4.529198169708252
    4. 'if' → logprob: -5.404198169708252
    5. ' c' → logprob: -6.029198169708252
    6. '                   ' → logprob: -6.779198169708252
    7. '                       ' → logprob: -6.779198169708252
    8. '                           ' → logprob: -7.029198169708252
    9. '```' → logprob: -9.15419864654541
    10. '                               ' → logprob: -9.52919864654541

Token 1573: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.493158221244812
    2. 'if' → logprob: -1.618158221244812
    3. 'last' → logprob: -1.743158221244812
    4. '           ' → logprob: -4.493158340454102
    5. '#' (adapté à ' #') → logprob: -6.993158340454102
    6. '   ' → logprob: -7.118158340454102
    7. ' c' → logprob: -7.618158340454102
    8. ' if' → logprob: -7.743158340454102
    9. 'pos' → logprob: -7.868158340454102
    10. 'wagon' → logprob: -7.993158340454102

Token 1574: ' dernier' (ID: 27982)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6625726222991943
    2. 'last' → logprob: -1.1625726222991943
    3. 'c' → logprob: -1.7875726222991943
    4. '#' → logprob: -6.037572860717773
    5. '           ' → logprob: -7.287572860717773
    6. 'pos' → logprob: -7.412572860717773
    7. 'end' → logprob: -8.162572860717773
    8. '   ' → logprob: -9.287572860717773
    9. 'prev' → logprob: -9.287572860717773
    10. ' if' → logprob: -10.037572860717773

Token 1575: ' wagon' (ID: 90907)
  Prédit: 'wagon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wagon' → logprob: -0.5316728353500366
    2. '_w' → logprob: -1.9066728353500366
    3. 'w' → logprob: -2.281672954559326
    4. 'car' → logprob: -3.281672954559326
    5. 'c' → logprob: -3.656672954559326
    6. '_c' → logprob: -3.781672954559326
    7. 'char' → logprob: -3.781672954559326
    8. '_char' → logprob: -4.156672954559326
    9. 'wag' → logprob: -4.781672954559326
    10. 'if' → logprob: -5.156672954559326

Token 1576: ' est' (ID: 893)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30090248584747314
    2. ' ==' → logprob: -2.5509023666381836
    3. 'if' → logprob: -3.0509023666381836
    4. '==' → logprob: -3.1759023666381836
    5. 'c' → logprob: -3.8009023666381836
    6. ' if' → logprob: -3.9259023666381836
    7. '#' → logprob: -4.425902366638184
    8. ' =' → logprob: -4.800902366638184
    9. ' c' → logprob: -4.925902366638184
    10. '=' → logprob: -5.175902366638184

Token 1577: ' dans' (ID: 2671)
  Prédit: ''I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''I' → logprob: -0.16272728145122528
    2. ''S' → logprob: -2.6627273559570312
    3. '('' → logprob: -3.5377273559570312
    4. 'I' → logprob: -3.7877273559570312
    5. 'S' → logprob: -4.287727355957031
    6. '(I' → logprob: -5.037727355957031
    7. ''' → logprob: -5.662727355957031
    8. ' '' → logprob: -6.412727355957031
    9. '   ' → logprob: -7.287727355957031
    10. ' (' → logprob: -7.412727355957031

Token 1578: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.4863530695438385
    2. '(S' → logprob: -1.1113530397415161
    3. ' (' → logprob: -3.6113531589508057
    4. '(i' → logprob: -4.736352920532227
    5. '(' → logprob: -4.736352920532227
    6. ' S' → logprob: -5.486352920532227
    7. '(
' → logprob: -6.236352920532227
    8. '(T' → logprob: -6.861352920532227
    9. '(M' → logprob: -7.111352920532227
    10. '('' → logprob: -7.361352920532227

Token 1579: ' si' (ID: 1784)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7912143468856812
    2. 'and' → logprob: -1.0412143468856812
    3. 'if' → logprob: -2.0412144660949707
    4. ' and' → logprob: -2.7912144660949707
    5. ' if' → logprob: -6.666214466094971
    6. '   ' → logprob: -7.916214466094971
    7. '```' → logprob: -8.041213989257812
    8. '               ' → logprob: -8.416213989257812
    9. '       ' → logprob: -9.791213989257812
    10. ' ' → logprob: -10.291213989257812

Token 1580: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.20242050290107727
    2. '(last' → logprob: -1.7024204730987549
    3. ' last' → logprob: -7.077420711517334
    4. ' (' → logprob: -8.952420234680176
    5. '(
' → logprob: -11.452420234680176
    6. '(' → logprob: -11.827420234680176
    7. '[last' → logprob: -12.202420234680176
    8. '           ' → logprob: -12.702420234680176
    9. '((' → logprob: -13.327420234680176
    10. '   ' → logprob: -14.327420234680176

Token 1581: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.023358216509222984
    2. ' ==' → logprob: -3.773358106613159
    3. 'in' → logprob: -9.898358345031738
    4. '```' → logprob: -10.273358345031738
    5. '           ' → logprob: -11.898358345031738
    6. ' in' → logprob: -12.273358345031738
    7. '0' → logprob: -12.273358345031738
    8. '==
' → logprob: -12.773358345031738
    9. 'and' → logprob: -12.898358345031738
    10. 'if' → logprob: -13.523358345031738

Token 1582: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.00000286102295
    3. '1' → logprob: -15.50000286102295
    4. '```' → logprob: -15.62500286102295
    5. '   ' → logprob: -17.125001907348633
    6. '`' → logprob: -18.625001907348633
    7. '=' → logprob: -18.875001907348633
    8. '
' → logprob: -19.125001907348633
    9. '==' → logprob: -20.000001907348633
    10. '``' → logprob: -20.062501907348633

Token 1583: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00046033994294703007
    2. 'if' → logprob: -8.750460624694824
    3. '               ' → logprob: -9.125460624694824
    4. 'and' → logprob: -9.250460624694824
    5. ' and' → logprob: -10.250460624694824
    6. ' if' → logprob: -10.750460624694824
    7. ',' → logprob: -11.250460624694824
    8. '		' → logprob: -12.000460624694824
    9. '                   ' → logprob: -12.250460624694824
    10. '```' → logprob: -12.375460624694824

Token 1584: ' T' (ID: 353)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.44230809807777405
    2. '           ' → logprob: -1.6923080682754517
    3. '#' → logprob: -2.817308187484741
    4. 'c' → logprob: -3.692308187484741
    5. '```' → logprob: -3.692308187484741
    6. '               ' → logprob: -3.817308187484741
    7. ' if' → logprob: -3.942308187484741
    8. 'last' → logprob: -5.192307949066162
    9. '                   ' → logprob: -5.442307949066162
    10. ' c' → logprob: -5.817307949066162

Token 1585: ' si' (ID: 1784)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019285179674625397
    2. 'and' → logprob: -5.019285202026367
    3. ' and' → logprob: -5.644285202026367
    4. '               ' → logprob: -6.144285202026367
    5. '```' → logprob: -6.519285202026367
    6. ',' → logprob: -6.769285202026367
    7. 'if' → logprob: -7.269285202026367
    8. ':
' → logprob: -7.269285202026367
    9. 'last' → logprob: -7.394285202026367
    10. 'et' → logprob: -7.769285202026367

Token 1586: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.03468116372823715
    2. ' last' → logprob: -3.9096810817718506
    3. '1' → logprob: -4.40968132019043
    4. '0' → logprob: -6.65968132019043
    5. '(last' → logprob: -7.65968132019043
    6. ' ' → logprob: -9.40968132019043
    7. ' (' → logprob: -11.15968132019043
    8. '(' → logprob: -11.53468132019043
    9. '==' → logprob: -12.53468132019043
    10. '[last' → logprob: -12.78468132019043

Token 1587: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0003888470819219947
    2. ' ==' → logprob: -7.8753886222839355
    3. '```' → logprob: -12.875389099121094
    4. ']==' → logprob: -13.000389099121094
    5. '==
' → logprob: -14.000389099121094
    6. 'last' → logprob: -14.000389099121094
    7. '==-' → logprob: -14.125389099121094
    8. '[' → logprob: -14.375389099121094
    9. '+' → logprob: -15.750389099121094
    10. '=' → logprob: -15.875389099121094

Token 1588: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.259079363080673e-05
    2. '0' → logprob: -11.500012397766113
    3. ' ' → logprob: -13.250012397766113
    4. '```' → logprob: -15.125012397766113
    5. '
' → logprob: -16.00001335144043
    6. '   ' → logprob: -16.25001335144043
    7. '(' → logprob: -17.18751335144043
    8. '`' → logprob: -17.37501335144043
    9. '``' → logprob: -17.81251335144043
    10. '=' → logprob: -18.06251335144043

Token 1589: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020661605522036552
    2. 'if' → logprob: -6.377066135406494
    3. 'prev' → logprob: -9.127066612243652
    4. '```' → logprob: -9.502066612243652
    5. ' if' → logprob: -9.877066612243652
    6. 'last' → logprob: -10.002066612243652
    7. '#' → logprob: -10.752066612243652
    8. 'w' → logprob: -11.127066612243652
    9. 'c' → logprob: -11.502066612243652
    10. 'final' → logprob: -12.002066612243652

Token 1590: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03774559497833252
    2. '               ' → logprob: -4.037745475769043
    3. 'if' → logprob: -4.162745475769043
    4. ' if' → logprob: -6.412745475769043
    5. '```' → logprob: -7.412745475769043
    6. '                   ' → logprob: -7.662745475769043
    7. 'prev' → logprob: -8.037745475769043
    8. ' c' → logprob: -8.537745475769043
    9. 'c' → logprob: -8.787745475769043
    10. '                       ' → logprob: -9.287745475769043

Token 1591: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.18337787687778473
    2. 'c' → logprob: -2.308377981185913
    3. '           ' → logprob: -2.933377981185913
    4. 'last' → logprob: -4.808377742767334
    5. 'prev' → logprob: -5.683377742767334
    6. 'wagon' → logprob: -6.433377742767334
    7. ' if' → logprob: -7.683377742767334
    8. '```' → logprob: -7.808377742767334
    9. 'pos' → logprob: -8.433378219604492
    10. 'w' → logprob: -8.433378219604492

Token 1592: ' last' (ID: 2174)
  Prédit: '(last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(last' → logprob: -0.023263417184352875
    2. 'last' → logprob: -4.148263454437256
    3. ' (' → logprob: -5.023263454437256
    4. ' last' → logprob: -8.023262977600098
    5. '((' → logprob: -9.148262977600098
    6. '(
' → logprob: -9.648262977600098
    7. '   ' → logprob: -10.023262977600098
    8. '(' → logprob: -10.148262977600098
    9. '(S' → logprob: -12.148262977600098
    10. '[last' → logprob: -12.148262977600098

Token 1593: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.012727898545563221
    2. ' ==' → logprob: -4.387727737426758
    3. '<' → logprob: -9.387727737426758
    4. '!=' → logprob: -9.387727737426758
    5. ']==' → logprob: -11.512727737426758
    6. ' !=' → logprob: -11.762727737426758
    7. '==
' → logprob: -11.762727737426758
    8. '<=' → logprob: -11.887727737426758
    9. '0' → logprob: -12.262727737426758
    10. ']' → logprob: -12.762727737426758

Token 1594: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.625065803527832
    3. '=' → logprob: -16.50006675720215
    4. '1' → logprob: -16.62506675720215
    5. '           ' → logprob: -17.62506675720215
    6. '   ' → logprob: -18.12506675720215
    7. '۰' → logprob: -18.37506675720215
    8. '<|end|>' → logprob: -19.37506675720215
    9. '(' → logprob: -19.50006675720215
    10. '#' → logprob: -19.62506675720215

Token 1595: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.759734732331708e-05
    2. ' ' → logprob: -11.000017166137695
    3. '1' → logprob: -14.500017166137695
    4. '
' → logprob: -16.500017166137695
    5. '   ' → logprob: -17.375017166137695
    6. '(' → logprob: -18.062517166137695
    7. '۰' → logprob: -18.125017166137695
    8. '<|end|>' → logprob: -18.187517166137695
    9. '  ' → logprob: -18.750017166137695
    10. '[' → logprob: -18.812517166137695

Token 1596: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6944928765296936
    2. 'and' → logprob: -0.6944928765296936
    3. '           ' → logprob: -6.819492816925049
    4. '               ' → logprob: -8.444493293762207
    5. ':
' → logprob: -10.694493293762207
    6. '                   ' → logprob: -12.569493293762207
    7. '              ' → logprob: -13.069493293762207
    8. '          ' → logprob: -13.319493293762207
    9. '	and' → logprob: -13.319493293762207
    10. '   ' → logprob: -13.819493293762207

Token 1597: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2295035570859909
    2. ' and' → logprob: -1.7295035123825073
    3. 'and' → logprob: -3.604503631591797
    4. '           ' → logprob: -8.479503631591797
    5. 'if' → logprob: -9.229503631591797
    6. '   ' → logprob: -9.729503631591797
    7. '                   ' → logprob: -10.104503631591797
    8. ' if' → logprob: -10.229503631591797
    9. '              ' → logprob: -10.604503631591797
    10. ' ' → logprob: -11.729503631591797

Token 1598: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02720826305449009
    2. 'S' → logprob: -4.40220832824707
    3. 'and' → logprob: -4.40220832824707
    4. '               ' → logprob: -7.27720832824707
    5. 'ans' → logprob: -7.27720832824707
    6. '                   ' → logprob: -7.77720832824707
    7. '           ' → logprob: -8.15220832824707
    8. ' if' → logprob: -9.02720832824707
    9. ' and' → logprob: -10.02720832824707
    10. 'dp' → logprob: -10.77720832824707

Token 1599: ' i' (ID: 575)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.12939336895942688
    2. 'i' → logprob: -2.1293933391571045
    3. 'dp' → logprob: -6.379393577575684
    4. ' S' → logprob: -8.004393577575684
    5. ' i' → logprob: -8.504393577575684
    6. 'length' → logprob: -8.879393577575684
    7. '   ' → logprob: -10.504393577575684
    8. '(i' → logprob: -11.254393577575684
    9. '           ' → logprob: -11.504393577575684
    10. '(S' → logprob: -11.879393577575684

Token 1600: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0792008563876152
    2. ' >' → logprob: -2.5792007446289062
    3. '-' → logprob: -8.454200744628906
    4. 'and' → logprob: -9.704200744628906
    5. ' and' → logprob: -11.079200744628906
    6. '                   ' → logprob: -11.954200744628906
    7. '           ' → logprob: -12.204200744628906
    8. '               ' → logprob: -12.454200744628906
    9. '   ' → logprob: -13.454200744628906
    10. ' -' → logprob: -13.829200744628906

Token 1601: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.88418151892256e-05
    2. ' ' → logprob: -9.750059127807617
    3. '1' → logprob: -15.875059127807617
    4. '=' → logprob: -15.875059127807617
    5. '   ' → logprob: -16.000059127807617
    6. 'i' → logprob: -16.875059127807617
    7. '           ' → logprob: -18.375059127807617
    8. '  ' → logprob: -18.625059127807617
    9. '```' → logprob: -18.875059127807617
    10. '     ' → logprob: -19.375059127807617

Token 1602: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. 'i' → logprob: -16.625
    4. '=' → logprob: -17.75
    5. '   ' → logprob: -17.75
    6. '1' → logprob: -19.0
    7. '
' → logprob: -19.25
    8. '(i' → logprob: -19.5
    9. '```' → logprob: -19.875
    10. '  ' → logprob: -20.75

Token 1603: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.3160208761692047
    2. ' and' → logprob: -1.3160208463668823
    3. '               ' → logprob: -6.191020965576172
    4. '                   ' → logprob: -7.316020965576172
    5. '              ' → logprob: -11.191020965576172
    6. '                  ' → logprob: -11.691020965576172
    7. '                ' → logprob: -12.191020965576172
    8. '                 ' → logprob: -12.191020965576172
    9. '           ' → logprob: -12.566020965576172
    10. '                       ' → logprob: -13.066020965576172

Token 1604: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00038455575122497976
    2. ' S' → logprob: -7.875384330749512
    3. '               ' → logprob: -13.125384330749512
    4. '                   ' → logprob: -13.750384330749512
    5. 'dp' → logprob: -14.250384330749512
    6. '   ' → logprob: -15.375384330749512
    7. '           ' → logprob: -15.375384330749512
    8. '                       ' → logprob: -16.625385284423828
    9. ' ' → logprob: -16.625385284423828
    10. '(S' → logprob: -16.875385284423828

Token 1605: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. 'i' → logprob: -13.875000953674316
    3. '[' → logprob: -16.000001907348633
    4. '```' → logprob: -16.250001907348633
    5. '   ' → logprob: -16.750001907348633
    6. '
' → logprob: -17.125001907348633
    7. '[
' → logprob: -17.625001907348633
    8. '(i' → logprob: -17.750001907348633
    9. '`' → logprob: -18.250001907348633
    10. '[j' → logprob: -18.625001907348633

Token 1606: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02800087444484234
    2. '[i' → logprob: -3.653000831604004
    3. 'i' → logprob: -6.403000831604004
    4. ' -' → logprob: -10.528000831604004
    5. '(i' → logprob: -12.278000831604004
    6. '1' → logprob: -12.903000831604004
    7. '```' → logprob: -12.903000831604004
    8. '   ' → logprob: -13.653000831604004
    9. '-i' → logprob: -14.028000831604004
    10. ']' → logprob: -14.528000831604004

Token 1607: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005678066518157721
    2. '-' → logprob: -7.75056791305542
    3. '```' → logprob: -9.250567436218262
    4. 'i' → logprob: -10.625567436218262
    5. ']' → logprob: -12.000567436218262
    6. ' ' → logprob: -12.500567436218262
    7. '   ' → logprob: -13.000567436218262
    8. '``' → logprob: -13.375567436218262
    9. '`' → logprob: -13.875567436218262
    10. ' -' → logprob: -15.250567436218262

Token 1608: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008272233419120312
    2. ']==' → logprob: -4.883272171020508
    3. ']=='' → logprob: -7.508272171020508
    4. '']' → logprob: -9.633272171020508
    5. '==' → logprob: -10.133272171020508
    6. ' ==' → logprob: -12.633272171020508
    7. '']=='' → logprob: -13.508272171020508
    8. '```' → logprob: -13.508272171020508
    9. ' ]' → logprob: -13.633272171020508
    10. '']==' → logprob: -13.883272171020508

Token 1609: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02953176386654377
    2. ' ==' → logprob: -3.654531717300415
    3. '=='' → logprob: -5.904531955718994
    4. ']==' → logprob: -7.904531955718994
    5. ']' → logprob: -9.279531478881836
    6. ']=='' → logprob: -10.779531478881836
    7. '==
' → logprob: -12.029531478881836
    8. '```' → logprob: -13.279531478881836
    9. '=' → logprob: -13.404531478881836
    10. '']=='' → logprob: -13.529531478881836

Token 1610: ' '' (ID: 461)
  Prédit: ''I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''I' → logprob: -0.00020652047533076257
    2. 'I' → logprob: -8.75020694732666
    3. ' '' → logprob: -10.25020694732666
    4. '"I' → logprob: -11.62520694732666
    5. '‘I' → logprob: -13.75020694732666
    6. '’I' → logprob: -13.87520694732666
    7. ''O' → logprob: -14.37520694732666
    8. ''' → logprob: -14.62520694732666
    9. '`' → logprob: -15.37520694732666
    10. '('' → logprob: -15.75020694732666

Token 1611: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.4741116464138031
    2. ''I' → logprob: -0.9741116762161255
    3. '"I' → logprob: -10.599111557006836
    4. '’I' → logprob: -12.599111557006836
    5. ''' → logprob: -13.224111557006836
    6. '‘I' → logprob: -13.349111557006836
    7. ' I' → logprob: -13.974111557006836
    8. ''i' → logprob: -14.099111557006836
    9. '`' → logprob: -15.349111557006836
    10. '_I' → logprob: -15.599111557006836

Token 1612: '':
' (ID: 7669)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14711029827594757
    2. ':
' → logprob: -2.2721102237701416
    3. '               ' → logprob: -4.147110462188721
    4. ' and' → logprob: -4.397110462188721
    5. ':' → logprob: -6.147110462188721
    6. '                       ' → logprob: -6.897110462188721
    7. 'and' → logprob: -7.397110462188721
    8. '                  ' → logprob: -7.647110462188721
    9. '):
' → logprob: -8.022109985351562
    10. '':
' → logprob: -8.022109985351562

Token 1613: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0024883802980184555
    2. '               ' → logprob: -6.502488613128662
    3. '                       ' → logprob: -7.502488613128662
    4. ' and' → logprob: -8.002488136291504
    5. '                  ' → logprob: -10.127488136291504
    6. '```' → logprob: -10.877488136291504
    7. 'and' → logprob: -11.002488136291504
    8. '                           ' → logprob: -12.002488136291504
    9. '                 ' → logprob: -12.377488136291504
    10. ':
' → logprob: -12.752488136291504

Token 1614: ' if' (ID: 538)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.037093229591846466
    2. '                   ' → logprob: -4.037093162536621
    3. '                       ' → logprob: -4.287093162536621
    4. 'if' (adapté à ' if') → logprob: -6.037093162536621
    5. ' ans' → logprob: -6.162093162536621
    6. '                               ' → logprob: -8.537093162536621
    7. '                           ' → logprob: -9.037093162536621
    8. '               ' → logprob: -9.037093162536621
    9. ' if' → logprob: -10.037093162536621
    10. '   ' → logprob: -11.412093162536621

Token 1615: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0291238222271204
    2. ' length' → logprob: -3.6541237831115723
    3. 'ans' → logprob: -5.904123783111572
    4. ' ans' → logprob: -9.52912425994873
    5. 'dp' → logprob: -11.02912425994873
    6. ' dp' → logprob: -14.15412425994873
    7. 'answer' → logprob: -14.27912425994873
    8. '   ' → logprob: -15.40412425994873
    9. 'max' → logprob: -15.40412425994873
    10. '(length' → logprob: -15.65412425994873

Token 1616: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.04890288785099983
    2. ' >' → logprob: -3.048902988433838
    3. '                           ' → logprob: -9.04890251159668
    4. '                               ' → logprob: -9.79890251159668
    5. '                       ' → logprob: -9.92390251159668
    6. '                   ' → logprob: -10.04890251159668
    7. '               ' → logprob: -11.79890251159668
    8. '>
' → logprob: -11.79890251159668
    9. '```' → logprob: -12.67390251159668
    10. '+' → logprob: -12.79890251159668

Token 1617: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0024779161904007196
    2. ' ans' → logprob: -6.002478122711182
    3. '                   ' → logprob: -13.377477645874023
    4. '           ' → logprob: -15.502477645874023
    5. '	ans' → logprob: -15.502477645874023
    6. '               ' → logprob: -16.002477645874023
    7. '(ans' → logprob: -16.002477645874023
    8. '                       ' → logprob: -16.252477645874023
    9. 'answer' → logprob: -17.252477645874023
    10. '                           ' → logprob: -18.127477645874023

Token 1618: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.13418106734752655
    2. ':
' → logprob: -2.134181022644043
    3. ':' → logprob: -5.509181022644043
    4. '                   ' → logprob: -6.259181022644043
    5. '=' → logprob: -7.884181022644043
    6. '                               ' → logprob: -8.384181022644043
    7. '                           ' → logprob: -8.509181022644043
    8. '):
' → logprob: -8.509181022644043
    9. '                      ' → logprob: -9.884181022644043
    10. 'ans' → logprob: -10.009181022644043

Token 1619: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.009059689939022064
    2. '                               ' → logprob: -5.259059906005859
    3. '                           ' → logprob: -5.884059906005859
    4. '                   ' → logprob: -7.509059906005859
    5. '                                   ' → logprob: -8.75905990600586
    6. '                                       ' → logprob: -9.25905990600586
    7. '                                           ' → logprob: -9.50905990600586
    8. '                                               ' → logprob: -9.63405990600586
    9. '```' → logprob: -9.88405990600586
    10. '               ' → logprob: -11.13405990600586

Token 1620: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00028386167832650244
    2. ' ans' → logprob: -9.000284194946289
    3. '                               ' → logprob: -9.250284194946289
    4. '                                   ' → logprob: -10.250284194946289
    5. '                           ' → logprob: -10.625284194946289
    6. '                                       ' → logprob: -13.500284194946289
    7. '                       ' → logprob: -13.625284194946289
    8. '(ans' → logprob: -14.500284194946289
    9. '	ans' → logprob: -14.625284194946289
    10. '                                           ' → logprob: -15.000284194946289

Token 1621: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00043853666284121573
    2. ' =' → logprob: -7.750438690185547
    3. '=
' → logprob: -12.000438690185547
    4. '                       ' → logprob: -14.625438690185547
    5. '+=' → logprob: -14.625438690185547
    6. '                           ' → logprob: -15.000438690185547
    7. '```' → logprob: -15.625438690185547
    8. '=max' → logprob: -17.000438690185547
    9. '|=
' → logprob: -17.000438690185547
    10. 'ans' → logprob: -17.125438690185547

Token 1622: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.00033546582562848926
    2. ' length' → logprob: -8.000335693359375
    3. 'leng' → logprob: -19.375335693359375
    4. '                   ' → logprob: -19.750335693359375
    5. 'len' → logprob: -20.500335693359375
    6. 'ength' → logprob: -20.750335693359375
    7. '                       ' → logprob: -20.875335693359375
    8. '	length' → logprob: -21.000335693359375
    9. 'l' → logprob: -21.375335693359375
    10. '_length' → logprob: -21.750335693359375

Token 1623: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06427138298749924
    2. '               ' → logprob: -2.8142714500427246
    3. '                   ' → logprob: -6.439271450042725
    4. '                       ' → logprob: -8.439270973205566
    5. '                           ' → logprob: -8.564270973205566
    6. '```' → logprob: -8.939270973205566
    7. '                               ' → logprob: -10.189270973205566
    8. '		' → logprob: -10.314270973205566
    9. '<|end|>' → logprob: -10.439270973205566
    10. 'elif' → logprob: -10.564270973205566

Token 1624: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1314504146575928
    2. '               ' → logprob: -1.5064504146575928
    3. '```' → logprob: -1.8814504146575928
    4. '                   ' → logprob: -2.0064504146575928
    5. '                       ' → logprob: -2.2564504146575928
    6. '                           ' → logprob: -3.5064504146575928
    7. '                               ' → logprob: -3.5064504146575928
    8. '                                   ' → logprob: -6.381450653076172
    9. '       ' → logprob: -7.006450653076172
    10. '                                       ' → logprob: -8.006450653076172

Token 1625: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2937336564064026
    2. '               ' → logprob: -1.4187335968017578
    3. '                   ' → logprob: -5.043733596801758
    4. '                       ' → logprob: -5.668733596801758
    5. 'elif' → logprob: -6.668733596801758
    6. '       ' → logprob: -7.668733596801758
    7. '```' → logprob: -8.668733596801758
    8. '                           ' → logprob: -8.793733596801758
    9. 'if' → logprob: -8.918733596801758
    10. '                               ' → logprob: -9.043733596801758

Token 1626: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02457832172513008
    2. '                       ' → logprob: -4.399578094482422
    3. '                   ' → logprob: -5.274578094482422
    4. ' if' → logprob: -6.399578094482422
    5. ':
' → logprob: -6.524578094482422
    6. '           ' → logprob: -6.649578094482422
    7. '                           ' → logprob: -7.149578094482422
    8. 'if' → logprob: -7.274578094482422
    9. '                               ' → logprob: -7.524578094482422
    10. ':' → logprob: -8.399578094482422

Token 1627: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0040760282427072525
    2. '                   ' → logprob: -6.00407600402832
    3. '                       ' → logprob: -7.12907600402832
    4. '           ' → logprob: -7.87907600402832
    5. '```' → logprob: -8.75407600402832
    6. 'if' → logprob: -9.75407600402832
    7. '             ' → logprob: -10.25407600402832
    8. '                ' → logprob: -10.37907600402832
    9. '              ' → logprob: -10.50407600402832
    10. '                               ' → logprob: -10.87907600402832

Token 1628: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.015126321464776993
    2. '               ' → logprob: -4.5151262283325195
    3. '                   ' → logprob: -6.0151262283325195
    4. ' if' → logprob: -6.5151262283325195
    5. '0' → logprob: -9.14012622833252
    6. '           ' → logprob: -10.89012622833252
    7. '                       ' → logprob: -11.26512622833252
    8. '1' → logprob: -12.64012622833252
    9. '```' → logprob: -13.51512622833252
    10. '   ' → logprob: -13.89012622833252

Token 1629: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00043353010551072657
    2. ' j' → logprob: -7.750433444976807
    3. '   ' → logprob: -13.000433921813965
    4. '(j' → logprob: -15.375433921813965
    5. 'T' → logprob: -16.00043296813965
    6. '	j' → logprob: -16.50043296813965
    7. '  ' → logprob: -16.62543296813965
    8. '           ' → logprob: -17.12543296813965
    9. ' ' → logprob: -17.50043296813965
    10. '    ' → logprob: -17.75043296813965

Token 1630: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.47409868240356445
    2. '>' → logprob: -0.9740986824035645
    3. '           ' → logprob: -11.224098205566406
    4. '                   ' → logprob: -12.724098205566406
    5. '               ' → logprob: -12.974098205566406
    6. '[j' → logprob: -14.724098205566406
    7. '   ' → logprob: -14.849098205566406
    8. '            ' → logprob: -15.224098205566406
    9. '          ' → logprob: -15.224098205566406
    10. '[' → logprob: -15.224098205566406

Token 1631: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -17.250003814697266
    4. '
' → logprob: -18.250003814697266
    5. '=' → logprob: -18.625003814697266
    6. '           ' → logprob: -19.000003814697266
    7. '       ' → logprob: -20.375003814697266
    8. '               ' → logprob: -20.625003814697266
    9. '  ' → logprob: -20.875003814697266
    10. '```' → logprob: -21.000003814697266

Token 1632: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '
' → logprob: -16.750001907348633
    4. '   ' → logprob: -17.125001907348633
    5. '>' → logprob: -19.125001907348633
    6. '```' → logprob: -19.250001907348633
    7. '1' → logprob: -19.437501907348633
    8. '           ' → logprob: -19.562501907348633
    9. '  ' → logprob: -19.625001907348633
    10. '=' → logprob: -19.937501907348633

Token 1633: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.011195539496839046
    2. ' and' → logprob: -4.511195659637451
    3. '               ' → logprob: -9.011195182800293
    4. '                   ' → logprob: -11.636195182800293
    5. '           ' → logprob: -11.886195182800293
    6. '                       ' → logprob: -12.761195182800293
    7. '              ' → logprob: -13.261195182800293
    8. '```' → logprob: -13.636195182800293
    9. 'if' → logprob: -13.761195182800293
    10. '                ' → logprob: -14.261195182800293

Token 1634: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0019287518225610256
    2. ' T' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.126928329467773
    4. '(T' → logprob: -17.626928329467773
    5. '           ' → logprob: -17.876928329467773
    6. '               ' → logprob: -18.751928329467773
    7. '
' → logprob: -19.001928329467773
    8. ' ' → logprob: -19.126928329467773
    9. '	T' → logprob: -19.126928329467773
    10. ' ' → logprob: -19.126928329467773

Token 1635: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.5048530030981055e-06
    2. 'j' → logprob: -14.750001907348633
    3. '[' → logprob: -15.375001907348633
    4. '```' → logprob: -15.500001907348633
    5. '
' → logprob: -15.750001907348633
    6. '[
' → logprob: -16.000001907348633
    7. '   ' → logprob: -16.500001907348633
    8. '           ' → logprob: -16.625001907348633
    9. '-' → logprob: -16.750001907348633
    10. ' [' → logprob: -16.875001907348633

Token 1636: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.29340603761375e-05
    2. '[j' → logprob: -9.375092506408691
    3. '][' → logprob: -12.375092506408691
    4. ' -' → logprob: -13.875092506408691
    5. '[' → logprob: -14.000092506408691
    6. '1' → logprob: -14.750092506408691
    7. ']-' → logprob: -14.875092506408691
    8. ']' → logprob: -15.250092506408691
    9. 'j' → logprob: -15.625092506408691
    10. '           ' → logprob: -15.750092506408691

Token 1637: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00035357745946384966
    2. 'j' → logprob: -8.125353813171387
    3. '-' → logprob: -10.000353813171387
    4. '```' → logprob: -12.250353813171387
    5. '   ' → logprob: -13.375353813171387
    6. '
' → logprob: -13.625353813171387
    7. '0' → logprob: -13.875353813171387
    8. 'ans' → logprob: -13.875353813171387
    9. ' ' → logprob: -14.125353813171387
    10. '[j' → logprob: -14.375353813171387

Token 1638: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05575723573565483
    2. ']==' → logprob: -2.9307572841644287
    3. '==' → logprob: -7.30575704574585
    4. ' ==' → logprob: -8.805757522583008
    5. '][' → logprob: -10.930757522583008
    6. ']=='' → logprob: -11.305757522583008
    7. '```' → logprob: -11.430757522583008
    8. ' ]' → logprob: -12.680757522583008
    9. '[j' → logprob: -13.180757522583008
    10. '[' → logprob: -13.180757522583008

Token 1639: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.127963587641716
    2. ' ==' → logprob: -2.1279635429382324
    3. '=='' → logprob: -7.502963542938232
    4. ']==' → logprob: -7.752963542938232
    5. ']' → logprob: -10.62796401977539
    6. '```' → logprob: -11.25296401977539
    7. '[' → logprob: -11.50296401977539
    8. ']=='' → logprob: -12.50296401977539
    9. ' =='' → logprob: -14.00296401977539
    10. '=="' → logprob: -14.12796401977539

Token 1640: ' '' (ID: 461)
  Prédit: ''I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''I' → logprob: -0.00010914575977949426
    2. 'I' → logprob: -9.37510871887207
    3. ' '' → logprob: -10.87510871887207
    4. ''O' → logprob: -12.87510871887207
    5. '‘I' → logprob: -14.00010871887207
    6. '"I' → logprob: -14.00010871887207
    7. '’I' → logprob: -14.25010871887207
    8. ''' → logprob: -15.50010871887207
    9. '`' → logprob: -16.00010871887207
    10. '('' → logprob: -16.62510871887207

Token 1641: 'I' (ID: 40)
  Prédit: ''I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''I' → logprob: -0.014175502583384514
    2. 'I' → logprob: -4.2641754150390625
    3. '"I' → logprob: -12.389175415039062
    4. ''O' → logprob: -12.389175415039062
    5. '‘I' → logprob: -13.389175415039062
    6. '’I' → logprob: -13.639175415039062
    7. '`' → logprob: -15.014175415039062
    8. ' '' → logprob: -15.264175415039062
    9. ' I' → logprob: -16.139175415039062
    10. '('' → logprob: -16.764175415039062

Token 1642: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1754329949617386
    2. '                   ' → logprob: -2.0504329204559326
    3. '               ' → logprob: -4.175433158874512
    4. ']:
' → logprob: -4.550433158874512
    5. '```' → logprob: -6.800433158874512
    6. '                       ' → logprob: -6.800433158874512
    7. ' and' → logprob: -6.925433158874512
    8. '):
' → logprob: -7.175433158874512
    9. 'and' → logprob: -7.175433158874512
    10. ':' → logprob: -7.175433158874512

Token 1643: '                   ' (ID: 699)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.4850051999092102
    2. '                           ' → logprob: -2.2350051403045654
    3. '```' → logprob: -2.2350051403045654
    4. '                   ' → logprob: -2.7350051403045654
    5. ' if' → logprob: -3.6100051403045654
    6. 'if' → logprob: -3.9850051403045654
    7. '                                   ' → logprob: -4.1100053787231445
    8. '                       ' → logprob: -4.2350053787231445
    9. '                                       ' → logprob: -4.3600053787231445
    10. '               ' → logprob: -4.3600053787231445

Token 1644: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.21039219200611115
    2. ' if' → logprob: -1.7103922367095947
    3. '                               ' → logprob: -5.835391998291016
    4. '                       ' → logprob: -5.960391998291016
    5. '                           ' → logprob: -6.460391998291016
    6. 'ans' → logprob: -6.460391998291016
    7. '                   ' → logprob: -9.210391998291016
    8. '```' → logprob: -9.335391998291016
    9. ' ans' → logprob: -9.835391998291016
    10. '                                   ' → logprob: -10.585391998291016

Token 1645: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.3132619559764862
    2. ' length' → logprob: -1.3132619857788086
    3. '(length' → logprob: -16.438261032104492
    4. 'ans' → logprob: -16.938261032104492
    5. ' ans' → logprob: -17.188261032104492
    6. 'leng' → logprob: -17.813261032104492
    7. ' lenght' → logprob: -18.938261032104492
    8. '	length' → logprob: -19.438261032104492
    9. 'len' → logprob: -19.563261032104492
    10. 'ength' → logprob: -19.938261032104492

Token 1646: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.20142601430416107
    2. '>' → logprob: -1.7014260292053223
    3. '                           ' → logprob: -12.326425552368164
    4. '                               ' → logprob: -12.701425552368164
    5. '                       ' → logprob: -13.826425552368164
    6. '```' → logprob: -13.951425552368164
    7. '                   ' → logprob: -14.451425552368164
    8. '>
' → logprob: -14.451425552368164
    9. ' ' → logprob: -15.076425552368164
    10. '   ' → logprob: -15.576425552368164

Token 1647: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0003360582049936056
    2. ' ans' → logprob: -8.000335693359375
    3. '(ans' → logprob: -15.250335693359375
    4. '
' → logprob: -15.625335693359375
    5. '	ans' → logprob: -16.000335693359375
    6. '_ans' → logprob: -17.000335693359375
    7. 'length' → logprob: -17.750335693359375
    8. 'answer' → logprob: -17.875335693359375
    9. '```' → logprob: -18.625335693359375
    10. 'Ans' → logprob: -19.250335693359375

Token 1648: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.36824023723602295
    2. ':
' → logprob: -1.243240237236023
    3. ':' → logprob: -4.2432403564453125
    4. '=' → logprob: -6.2432403564453125
    5. '):
' → logprob: -6.6182403564453125
    6. '                   ' → logprob: -6.9932403564453125
    7. '                               ' → logprob: -7.7432403564453125
    8. '                           ' → logprob: -8.618240356445312
    9. '               ' → logprob: -9.243240356445312
    10. '                      ' → logprob: -9.243240356445312

Token 1649: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3383091390132904
    2. '```' → logprob: -1.3383091688156128
    3. '                               ' → logprob: -4.588309288024902
    4. 'ans' → logprob: -5.088309288024902
    5. '                   ' → logprob: -5.713309288024902
    6. '                           ' → logprob: -5.838309288024902
    7. '``' → logprob: -6.838309288024902
    8. ' ans' → logprob: -7.838309288024902
    9. '(ans' → logprob: -8.338309288024902
    10. '               ' → logprob: -8.963309288024902

Token 1650: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -2.816093228830141e-06
    2. ' ans' → logprob: -13.50000286102295
    3. '```' → logprob: -14.25000286102295
    4. '(ans' → logprob: -14.87500286102295
    5. '                           ' → logprob: -15.75000286102295
    6. '                   ' → logprob: -15.87500286102295
    7. '                       ' → logprob: -16.375001907348633
    8. '	ans' → logprob: -17.250001907348633
    9. '_ans' → logprob: -18.000001907348633
    10. 'j' → logprob: -18.125001907348633

Token 1651: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -6.749814019713085e-06
    2. ' =' → logprob: -12.125006675720215
    3. '=
' → logprob: -13.625006675720215
    4. '```' → logprob: -16.62500762939453
    5. 'ans' → logprob: -17.37500762939453
    6. '=

' → logprob: -18.00000762939453
    7. '+=' → logprob: -18.87500762939453
    8. '                       ' → logprob: -19.75000762939453
    9. '=max' → logprob: -19.75000762939453
    10. '                           ' → logprob: -19.87500762939453

Token 1652: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0031777136027812958
    2. ' length' → logprob: -5.753177642822266
    3. 'ans' → logprob: -17.628177642822266
    4. '                   ' → logprob: -18.503177642822266
    5. '_length' → logprob: -20.003177642822266
    6. 'leng' → logprob: -20.253177642822266
    7. 'len' → logprob: -20.253177642822266
    8. '(length' → logprob: -20.253177642822266
    9. 'Length' → logprob: -20.503177642822266
    10. ' ans' → logprob: -20.628177642822266

Token 1653: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003977242857217789
    2. '
' → logprob: -5.628977298736572
    3. '```' → logprob: -8.003976821899414
    4. '<|end|>' → logprob: -11.003976821899414
    5. ' print' → logprob: -11.378976821899414
    6. ')
' → logprob: -12.003976821899414
    7. '#' → logprob: -13.253976821899414
    8. '``' → logprob: -13.253976821899414
    9. ')' → logprob: -13.253976821899414
    10. '
' → logprob: -14.503976821899414

Token 1654: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.612634362885728e-05
    2. '```' → logprob: -9.500076293945312
    3. '``' → logprob: -14.125076293945312
    4. ' print' → logprob: -15.250076293945312
    5. '
' → logprob: -15.375076293945312
    6. '#' → logprob: -18.500076293945312
    7. '\' → logprob: -19.250076293945312
    8. '#print' → logprob: -19.375076293945312
    9. ')
' → logprob: -19.750076293945312
    10. '`' → logprob: -19.750076293945312

Token 1655: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0015028368216007948
    2. 'ans' → logprob: -6.501502990722656
    3. '(max' → logprob: -15.251502990722656
    4. '(' → logprob: -16.126502990722656
    5. '	ans' → logprob: -16.501502990722656
    6. 'max' → logprob: -16.751502990722656
    7. ' ans' → logprob: -16.876502990722656
    8. '_ans' → logprob: -18.251502990722656
    9. 'Ans' → logprob: -18.501502990722656
    10. 'ANS' → logprob: -18.626502990722656

Token 1656: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ')
' → logprob: -13.500003814697266
    3. '))' → logprob: -14.375003814697266
    4. ' )' → logprob: -14.500003814697266
    5. ')`' → logprob: -15.000003814697266
    6. '())' → logprob: -15.375003814697266
    7. '+' → logprob: -15.375003814697266
    8. '()' → logprob: -16.125003814697266
    9. '```' → logprob: -16.375003814697266
    10. '`)' → logprob: -16.875003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1654
Tokens correctement prédits (1ère position, stricte): 631
Tokens correctement prédits (1ère position, avec adaptation): 693
Tokens correctement prédits (top 10): 1309
Précision stricte (1ère position): 38.15%
Précision adaptée (1ère position): 41.90%
Précision (top 10): 79.14%
================================================================================
