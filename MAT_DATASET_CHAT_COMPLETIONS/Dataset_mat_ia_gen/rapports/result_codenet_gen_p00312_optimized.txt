================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:03:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
D,L=map(int,input().split())
q,r=divmod(D,L)
print(q+r)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'D' (ID: 35)
  → Token d'amorce (pas de prédiction)

Token 1: ',L' (ID: 68006)
  → Token d'amorce (pas de prédiction)

Token 2: '=' (ID: 28)
  → Token d'amorce (pas de prédiction)

Token 3: 'map' (ID: 3726)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6073071360588074
    2. '10' → logprob: -1.8573071956634521
    3. '32' → logprob: -2.357307195663452
    4. ' ' → logprob: -2.732307195663452
    5. 'map' → logprob: -3.732307195663452
    6. '[' → logprob: -3.857307195663452
    7. '[]' → logprob: -3.857307195663452
    8. '5' → logprob: -4.107306957244873
    9. '1' → logprob: -4.607306957244873
    10. ' map' → logprob: -5.232306957244873

Token 4: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05889827385544777
    2. '(int' → logprob: -3.1838982105255127
    3. '(lambda' → logprob: -4.433898448944092
    4. '<|end|>' → logprob: -6.683898448944092
    5. '(str' → logprob: -7.183898448944092
    6. '(input' → logprob: -7.808898448944092
    7. '(len' → logprob: -8.308897972106934
    8. '```' → logprob: -8.558897972106934
    9. '(eval' → logprob: -8.683897972106934
    10. '((' → logprob: -9.058897972106934

Token 5: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.12536154687404633
    2. ')' → logprob: -2.250361442565918
    3. '(' → logprob: -4.875361442565918
    4. 'input' → logprob: -5.875361442565918
    5. ',input' → logprob: -7.250361442565918
    6. '(user' → logprob: -8.750361442565918
    7. '=input' → logprob: -8.750361442565918
    8. '(raw' → logprob: -8.875361442565918
    9. '(int' → logprob: -9.125361442565918
    10. '`)' → logprob: -9.375361442565918

Token 6: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2963043451309204
    2. '()' → logprob: -1.4213043451309204
    3. ')' → logprob: -5.671304225921631
    4. '(' → logprob: -5.796304225921631
    5. '());' → logprob: -6.296304225921631
    6. '();)' → logprob: -6.546304225921631
    7. '().' → logprob: -6.671304225921631
    8. '('' → logprob: -7.046304225921631
    9. '()">' → logprob: -7.546304225921631
    10. '(()' → logprob: -8.046304702758789

Token 7: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00011856284982059151
    2. 'strip' → logprob: -9.500118255615234
    3. 'rstrip' → logprob: -10.500118255615234
    4. ')' → logprob: -11.375118255615234
    5. ' split' → logprob: -13.375118255615234
    6. 'read' → logprob: -13.500118255615234
    7. '(split' → logprob: -13.875118255615234
    8. '```' → logprob: -15.125118255615234
    9. 'spl' → logprob: -15.875118255615234
    10. 'replace' → logprob: -16.000118255615234

Token 8: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0508534274995327
    2. '))' → logprob: -3.6758534908294678
    3. '())' → logprob: -3.8008534908294678
    4. '`)' → logprob: -6.675853252410889
    5. '()' → logprob: -8.050853729248047
    6. '()))' → logprob: -9.550853729248047
    7. ')`' → logprob: -10.175853729248047
    8. ')))' → logprob: -10.300853729248047
    9. '')' → logprob: -10.300853729248047
    10. '),' → logprob: -10.425853729248047

Token 9: 'q' (ID: 80)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9984804391860962
    2. 'a' → logprob: -1.4984804391860962
    3. 'for' → logprob: -2.1234803199768066
    4. 'r' → logprob: -2.9984803199768066
    5. 'if' → logprob: -3.2484803199768066
    6. ',' → logprob: -3.4984803199768066
    7. 'print' → logprob: -3.9984803199768066
    8. ';' → logprob: -4.123480319976807
    9. 'd' → logprob: -4.123480319976807
    10. '```' → logprob: -4.623480319976807

Token 10: ',r' (ID: 33654)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.027621634304523468
    2. 'u' → logprob: -3.9026217460632324
    3. '.' → logprob: -5.652621746063232
    4. ' =' → logprob: -6.027621746063232
    5. '=int' → logprob: -7.527621746063232
    6. '=u' → logprob: -8.027621269226074
    7. '=input' → logprob: -9.527621269226074
    8. '=[]' → logprob: -9.902621269226074
    9. ',' → logprob: -9.902621269226074
    10. ',u' → logprob: -10.527621269226074

Token 11: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006760248448699713
    2. ' =' → logprob: -5.006760120391846
    3. ',' → logprob: -10.131760597229004
    4. '=input' → logprob: -14.006760597229004
    5. '=int' → logprob: -14.006760597229004
    6. '=q' → logprob: -14.256760597229004
    7. ',q' → logprob: -14.506760597229004
    8. ' ' → logprob: -15.006760597229004
    9. '=

' → logprob: -15.131760597229004
    10. ')' → logprob: -15.381760597229004

Token 12: 'div' (ID: 862)
  Prédit: 'div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -2.3438327843905427e-05
    2. ' div' → logprob: -10.87502384185791
    3. 'D' → logprob: -12.37502384185791
    4. 'DIV' → logprob: -16.000022888183594
    5. 'q' → logprob: -18.000022888183594
    6. '<div' → logprob: -18.125022888183594
    7. 'Div' → logprob: -18.750022888183594
    8. 'd' → logprob: -19.125022888183594
    9. '	div' → logprob: -19.250022888183594
    10. 'dl' → logprob: -19.500022888183594

Token 13: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -6.630610641877865e-06
    2. 'ision' → logprob: -13.625006675720215
    3. ' mod' → logprob: -13.750006675720215
    4. 'ide' → logprob: -14.000006675720215
    5. 's' → logprob: -14.125006675720215
    6. '/mod' → logprob: -14.250006675720215
    7. '-mod' → logprob: -14.500006675720215
    8. 'q' → logprob: -14.625006675720215
    9. '(mod' → logprob: -15.000006675720215
    10. '_mod' → logprob: -15.750006675720215

Token 14: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.038530707359313965
    2. '(' → logprob: -3.5385308265686035
    3. '(L' → logprob: -4.7885308265686035
    4. 'D' → logprob: -8.538530349731445
    5. '(S' → logprob: -10.288530349731445
    6. '(q' → logprob: -10.663530349731445
    7. '(d' → logprob: -10.788530349731445
    8. '(n' → logprob: -10.913530349731445
    9. '(int' → logprob: -11.163530349731445
    10. '((' → logprob: -11.288530349731445

Token 15: ',L' (ID: 68006)
  Prédit: ',L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',L' → logprob: -0.28793224692344666
    2. ',' → logprob: -1.412932276725769
    3. ' ,' → logprob: -5.537932395935059
    4. 'L' → logprob: -6.037932395935059
    5. ',D' → logprob: -8.162932395935059
    6. ',r' → logprob: -10.037932395935059
    7. ' L' → logprob: -10.162932395935059
    8. ',l' → logprob: -10.912932395935059
    9. ',q' → logprob: -11.162932395935059
    10. 'r' → logprob: -11.787932395935059

Token 16: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.3458322731312364e-06
    2. '))' → logprob: -12.375007629394531
    3. ')
' → logprob: -13.625007629394531
    4. '`)' → logprob: -14.125007629394531
    5. ' )' → logprob: -15.500007629394531
    6. ')`' → logprob: -15.500007629394531
    7. '),' → logprob: -15.750007629394531
    8. '')' → logprob: -15.750007629394531
    9. ')

' → logprob: -17.00000762939453
    10. '[' → logprob: -17.25000762939453

Token 17: 'print' (ID: 1598)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.33256569504737854
    2. 'print' → logprob: -1.5825656652450562
    3. ' if' → logprob: -3.8325657844543457
    4. 'i' → logprob: -3.8325657844543457
    5. '\n' → logprob: -4.457565784454346
    6. ',' → logprob: -5.457565784454346
    7. '```' → logprob: -5.707565784454346
    8. 'p' → logprob: -5.957565784454346
    9. ',
' → logprob: -6.582565784454346
    10. 'q' → logprob: -6.707565784454346

Token 18: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.16036629676818848
    2. '(' → logprob: -1.9103662967681885
    3. '((' → logprob: -9.03536605834961
    4. '("("' → logprob: -12.03536605834961
    5. '('' → logprob: -12.16036605834961
    6. '(r' → logprob: -12.41036605834961
    7. '(Q' → logprob: -13.91036605834961
    8. 'q' → logprob: -13.91036605834961
    9. '(round' → logprob: -14.28536605834961
    10. '(D' → logprob: -14.41036605834961

Token 19: '+r' (ID: 133712)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03325752913951874
    2. ',' → logprob: -3.533257484436035
    3. ',)' → logprob: -6.533257484436035
    4. ',r' → logprob: -6.783257484436035
    5. ',q' → logprob: -7.283257484436035
    6. '+' → logprob: -9.158257484436035
    7. '*' → logprob: -10.408257484436035
    8. '))' → logprob: -10.908257484436035
    9. '`)' → logprob: -11.408257484436035
    10. '+r' → logprob: -11.658257484436035

Token 20: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7835754988482222e-05
    2. '))' → logprob: -11.000018119812012
    3. '`)' → logprob: -14.500018119812012
    4. '')' → logprob: -15.375018119812012
    5. ' )' → logprob: -15.750018119812012
    6. ')
' → logprob: -16.875017166137695
    7. '```' → logprob: -17.000017166137695
    8. ')))' → logprob: -17.125017166137695
    9. ')`' → logprob: -17.125017166137695
    10. '()' → logprob: -17.375017166137695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 18
Tokens correctement prédits (1ère position, stricte): 8
Tokens correctement prédits (1ère position, avec adaptation): 8
Tokens correctement prédits (top 10): 15
Précision stricte (1ère position): 44.44%
Précision adaptée (1ère position): 44.44%
Précision (top 10): 83.33%
================================================================================
