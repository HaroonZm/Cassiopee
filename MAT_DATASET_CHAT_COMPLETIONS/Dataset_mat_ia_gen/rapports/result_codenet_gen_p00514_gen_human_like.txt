================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:53:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import comb

def main():
    n, m, r = map(int, input().split())
    # On cherche le nombre de combinaisons (k1,...,kn) avec ki >= m et sum ki = r
    # Cela revient à chercher les compositions de r - n*m en n parties >= 0
    # Donc nombre de combinaisons = comb(r - n*m + n -1, n -1) si r >= n*m, sinon 0
    rem = r - n * m
    if rem < 0:
        print(0)
        return
    # comb avec r >= n*m >=0
    res = comb(rem + n -1, n -1)
    print(res)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' comb' (ID: 4134)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.3573816120624542
    2. ' sqrt' → logprob: -1.3573815822601318
    3. 'pow' → logprob: -4.107381820678711
    4. 'sin' → logprob: -4.732381820678711
    5. ' pi' → logprob: -4.982381820678711
    6. 'pi' → logprob: -5.482381820678711
    7. ' sin' → logprob: -6.607381820678711
    8. 'import' → logprob: -6.732381820678711
    9. 'ceil' → logprob: -6.857381820678711
    10. 'cos' → logprob: -7.357381820678711

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00018065694894175977
    2. '\(' → logprob: -9.2501802444458
    3. '(
' → logprob: -9.7501802444458
    4. 'a' → logprob: -11.8751802444458
    5. ',' → logprob: -12.7501802444458
    6. ''' → logprob: -12.7501802444458
    7. '```' → logprob: -13.6251802444458
    8. '`' → logprob: -13.6251802444458
    9. '.' → logprob: -13.8751802444458
    10. 'w' → logprob: -14.1251802444458

Token 5: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009855312528088689
    2. '(
' → logprob: -7.250985622406006
    3. '\(' → logprob: -8.375985145568848
    4. 'a' → logprob: -11.125985145568848
    5. ',' → logprob: -11.625985145568848
    6. '#' → logprob: -12.250985145568848
    7. '(

' → logprob: -12.500985145568848
    8. '```' → logprob: -13.250985145568848
    9. ' (' → logprob: -13.500985145568848
    10. '\' → logprob: -13.875985145568848

Token 6: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0013773757964372635
    2. ' factorial' → logprob: -7.626377582550049
    3. ' calculate' → logprob: -8.00137710571289
    4. ' comb' → logprob: -8.00137710571289
    5. ' space' → logprob: -9.75137710571289
    6. ' factor' → logprob: -10.25137710571289
    7. ' ' → logprob: -11.12637710571289
    8. ' combination' → logprob: -11.37637710571289
    9. ' ```' → logprob: -11.50137710571289
    10. ' combine' → logprob: -11.62637710571289

Token 7: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005735859740525484
    2. '():' → logprob: -5.505735874176025
    3. ':' → logprob: -7.130735874176025
    4. '(:' → logprob: -8.255735397338867
    5. '(
' → logprob: -8.755735397338867
    6. '```' → logprob: -8.755735397338867
    7. '):' → logprob: -9.255735397338867
    8. ' (' → logprob: -10.130735397338867
    9. '(":' → logprob: -10.880735397338867
    10. '(`' → logprob: -11.130735397338867

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04929252713918686
    2. '(' → logprob: -3.42429256439209
    3. '    ' → logprob: -5.17429256439209
    4. ' ' → logprob: -5.29929256439209
    5. '\' → logprob: -6.54929256439209
    6. '(n' → logprob: -7.54929256439209
    7. '[' → logprob: -7.67429256439209
    8. ' print' → logprob: -7.79929256439209
    9. '    
' → logprob: -7.79929256439209
    10. ' (' → logprob: -8.42429256439209

Token 9: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.28563231229782104
    2. ' n' → logprob: -1.5356323719024658
    3. 'result' → logprob: -4.285632133483887
    4. '   ' → logprob: -4.785632133483887
    5. ' result' → logprob: -5.160632133483887
    6. ' print' → logprob: -7.035632133483887
    7. 'print' → logprob: -7.285632133483887
    8. 'count' → logprob: -7.535632133483887
    9. '    ' → logprob: -7.785632133483887
    10. ' ' → logprob: -7.785632133483887

Token 10: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3828277885913849
    2. ' =' → logprob: -2.3828277587890625
    3. '=' → logprob: -2.6328277587890625
    4. '  ' → logprob: -2.8828277587890625
    5. ',' → logprob: -3.5078277587890625
    6. '   ' → logprob: -3.7578277587890625
    7. ')' → logprob: -4.2578277587890625
    8. ' ,' → logprob: -4.7578277587890625
    9. '    ' → logprob: -5.3828277587890625
    10. 'u' → logprob: -5.6328277587890625

Token 11: ' m' (ID: 284)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7341810464859009
    2. ' k' → logprob: -0.7341810464859009
    3. ' r' → logprob: -3.4841809272766113
    4. 'r' → logprob: -4.734180927276611
    5. ' ' → logprob: -8.23418140411377
    6. 'm' → logprob: -8.35918140411377
    7. ' m' → logprob: -8.60918140411377
    8. '    ' → logprob: -12.10918140411377
    9. '=' → logprob: -12.23418140411377
    10. ' p' → logprob: -12.42168140411377

Token 12: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4298800230026245
    2. '=' → logprob: -1.0548800230026245
    3. ',' → logprob: -6.804880142211914
    4. ' ,' → logprob: -10.179880142211914
    5. ' ' → logprob: -11.554880142211914
    6. '   ' → logprob: -11.804880142211914
    7. ')' → logprob: -12.429880142211914
    8. ' =
' → logprob: -12.804880142211914
    9. '  ' → logprob: -12.929880142211914
    10. '=
' → logprob: -13.929880142211914

Token 13: ' r' (ID: 428)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.09907778352499008
    2. 'k' → logprob: -2.7240777015686035
    3. ' r' → logprob: -4.0990777015686035
    4. ' p' → logprob: -5.3490777015686035
    5. ' ' → logprob: -5.5990777015686035
    6. 'r' → logprob: -6.9740777015686035
    7. ' =' → logprob: -7.5990777015686035
    8. ' l' → logprob: -8.349078178405762
    9. '   ' → logprob: -8.349078178405762
    10. ' d' → logprob: -8.349078178405762

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038074202835559845
    2. '=' → logprob: -3.288074254989624
    3. ',' → logprob: -10.538074493408203
    4. '  ' → logprob: -13.163074493408203
    5. ' ' → logprob: -13.413074493408203
    6. ')' → logprob: -14.038074493408203
    7. ' ,' → logprob: -14.288074493408203
    8. '   ' → logprob: -14.538074493408203
    9. ' =
' → logprob: -15.413074493408203
    10. '    ' → logprob: -15.538074493408203

Token 15: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.11073970049619675
    2. 'map' → logprob: -2.9857397079467773
    3. ' ' → logprob: -3.2357397079467773
    4. '0' → logprob: -5.110739707946777
    5. ' input' → logprob: -5.360739707946777
    6. 'input' → logprob: -6.485739707946777
    7. '10' → logprob: -7.610739707946777
    8. '5' → logprob: -7.610739707946777
    9. '1' → logprob: -7.985739707946777
    10. ' [' → logprob: -8.110739707946777

Token 16: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3854439854621887
    2. '(int' → logprob: -1.385443925857544
    3. '(lambda' → logprob: -3.385443925857544
    4. '(str' → logprob: -3.635443925857544
    5. '<|end|>' → logprob: -5.260444164276123
    6. '(input' → logprob: -6.760444164276123
    7. '(range' → logprob: -7.135444164276123
    8. 'int' → logprob: -7.635444164276123
    9. '(
' → logprob: -8.385443687438965
    10. '(eval' → logprob: -9.010443687438965

Token 17: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22319737076759338
    2. '(input' → logprob: -2.4731974601745605
    3. ')' → logprob: -3.2231974601745605
    4. ',input' → logprob: -3.2231974601745605
    5. 'input' → logprob: -3.7231974601745605
    6. '(' → logprob: -4.7231974601745605
    7. ' input' → logprob: -6.9731974601745605
    8. '),' → logprob: -7.3481974601745605
    9. ' ,' → logprob: -8.223196983337402
    10. '=input' → logprob: -8.598196983337402

Token 18: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4742697477340698
    2. ' input' → logprob: -0.9742697477340698
    3. ')' → logprob: -8.72426986694336
    4. ' )' → logprob: -11.59926986694336
    5. '(input' → logprob: -11.97426986694336
    6. ',input' → logprob: -12.34926986694336
    7. '=input' → logprob: -12.59926986694336
    8. ' ' → logprob: -12.72426986694336
    9. '	input' → logprob: -13.34926986694336
    10. '   ' → logprob: -14.34926986694336

Token 19: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0008504862780682743
    2. '()' → logprob: -8.250850677490234
    3. '())' → logprob: -8.625850677490234
    4. ')' → logprob: -9.000850677490234
    5. '('' → logprob: -9.125850677490234
    6. '(' → logprob: -9.125850677490234
    7. '("' → logprob: -10.750850677490234
    8. '()))' → logprob: -11.625850677490234
    9. '('').' → logprob: -11.625850677490234
    10. '))' → logprob: -12.125850677490234

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00010437761375214905
    2. 'strip' → logprob: -9.250103950500488
    3. ' split' → logprob: -12.125103950500488
    4. 'rstrip' → logprob: -13.125103950500488
    5. '(split' → logprob: -14.500103950500488
    6. 'spl' → logprob: -15.875103950500488
    7. ')' → logprob: -17.250104904174805
    8. ' ' → logprob: -17.375104904174805
    9. '```' → logprob: -17.375104904174805
    10. 'read' → logprob: -18.875104904174805

Token 21: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0431039035320282
    2. '))' → logprob: -3.1681039333343506
    3. ')))' → logprob: -10.16810417175293
    4. '),' → logprob: -10.91810417175293
    5. ')
' → logprob: -11.16810417175293
    6. '())' → logprob: -11.66810417175293
    7. '()' → logprob: -12.29310417175293
    8. '))
' → logprob: -12.54310417175293
    9. '`)' → logprob: -12.54310417175293
    10. ')`' → logprob: -12.66810417175293

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6794109344482422
    2. '\n' → logprob: -1.8044109344482422
    3. '
' → logprob: -2.679410934448242
    4. ':' → logprob: -2.929410934448242
    5. '    
' → logprob: -2.929410934448242
    6. '\' → logprob: -3.054410934448242
    7. ')' → logprob: -3.929410934448242
    8. ' 
' → logprob: -4.054410934448242
    9. '```' → logprob: -4.179410934448242
    10. ',' → logprob: -4.429410934448242

Token 23: ' #' (ID: 1069)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.1434483528137207
    2. '   ' → logprob: -2.3934483528137207
    3. 'result' → logprob: -2.6434483528137207
    4. '    
' → logprob: -2.7684483528137207
    5. ' if' → logprob: -2.7684483528137207
    6. 'print' → logprob: -2.8934483528137207
    7. '\n' → logprob: -2.8934483528137207
    8. '\' → logprob: -2.8934483528137207
    9. ' result' → logprob: -3.8934483528137207
    10. 'p' → logprob: -4.018448352813721

Token 24: ' On' (ID: 2160)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.497192144393921
    2. ' ways' → logprob: -1.497192144393921
    3. ' dp' → logprob: -1.622192144393921
    4. ' ans' → logprob: -1.997192144393921
    5. ' answer' → logprob: -3.247192144393921
    6. ' res' → logprob: -3.497192144393921
    7. ' total' → logprob: -3.997192144393921
    8. ' print' → logprob: -4.1221923828125
    9. ' if' → logprob: -4.2471923828125
    10. ' count' → logprob: -4.6221923828125

Token 25: ' cherche' (ID: 52345)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.007110198028385639
    2. ' the' → logprob: -6.007110118865967
    3. 'ly' → logprob: -6.632110118865967
    4. 'es' → logprob: -7.257110118865967
    5. ' e' → logprob: -7.257110118865967
    6. 'el' → logprob: -8.132110595703125
    7. ' combinations' → logprob: -8.132110595703125
    8. 'ce' → logprob: -8.507110595703125
    9. 'eline' → logprob: -8.882110595703125
    10. 'line' → logprob: -9.132110595703125

Token 26: ' le' (ID: 505)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.2480701208114624
    2. ' ' → logprob: -2.748070240020752
    3. ' la' → logprob: -2.998070240020752
    4. ' le' → logprob: -3.123070240020752
    5. 'à' → logprob: -3.873070240020752
    6. ' l' → logprob: -4.998070240020752
    7. ' a' → logprob: -5.248070240020752
    8. ' les' → logprob: -5.373070240020752
    9. '  ' → logprob: -5.498070240020752
    10. ' des' → logprob: -5.748070240020752

Token 27: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.04087973013520241
    2. 'nombre' → logprob: -3.915879726409912
    3. ' ' → logprob: -4.915879726409912
    4. ' maximum' → logprob: -5.290879726409912
    5. 's' → logprob: -5.540879726409912
    6. ' nombres' → logprob: -6.790879726409912
    7. 'maximum' → logprob: -8.29088020324707
    8. ' number' → logprob: -8.54088020324707
    9. 'n' → logprob: -8.79088020324707
    10. 'r' → logprob: -8.79088020324707

Token 28: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6269479393959045
    2. ' de' → logprob: -1.1269478797912598
    3. '  ' → logprob: -3.0019478797912598
    4. 'd' → logprob: -3.1269478797912598
    5. ' ' → logprob: -3.7519478797912598
    6. '<|end|>' → logprob: -4.62694787979126
    7. ' total' → logprob: -4.87694787979126
    8. 'de' → logprob: -6.12694787979126
    9. 'total' → logprob: -7.50194787979126
    10. '   ' → logprob: -7.50194787979126

Token 29: ' comb' (ID: 4134)
  Prédit: ' façons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' façons' → logprob: -0.8219002485275269
    2. ' man' → logprob: -1.1969002485275269
    3. ' ' → logprob: -2.9469003677368164
    4. ' ways' → logprob: -3.0719003677368164
    5. 'man' → logprob: -3.3219003677368164
    6. 's' → logprob: -3.5719003677368164
    7. ' k' → logprob: -5.009400367736816
    8. '_' → logprob: -5.134400367736816
    9. 'élé' → logprob: -5.134400367736816
    10. ' sous' → logprob: -5.259400367736816

Token 30: 'inais' (ID: 42744)
  Prédit: 'inais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inais' → logprob: -0.05775035172700882
    2. 'ina' → logprob: -2.9327504634857178
    3. 'ais' → logprob: -6.557750225067139
    4. 'i' → logprob: -7.682750225067139
    5. 'inas' → logprob: -7.932750225067139
    6. '```' → logprob: -8.682750701904297
    7. 'inations' → logprob: -9.557750701904297
    8. '{}' → logprob: -9.807750701904297
    9. 'in' → logprob: -10.057750701904297
    10. '_' → logprob: -10.057750701904297

Token 31: 'ons' (ID: 1808)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.7292734980583191
    2. 'ons' → logprob: -0.7292734980583191
    3. 's' → logprob: -3.479273557662964
    4. 'sons' → logprob: -5.604273319244385
    5. 'on' → logprob: -8.104273796081543
    6. 'son' → logprob: -8.354273796081543
    7. 'os' → logprob: -9.229273796081543
    8. 't' → logprob: -9.479273796081543
    9. '#' → logprob: -9.979273796081543
    10. '{"' → logprob: -10.479273796081543

Token 32: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.35234901309013367
    2. ' (' → logprob: -1.602349042892456
    3. ' possible' → logprob: -4.102348804473877
    4. ' ' → logprob: -4.352348804473877
    5. 'possible' → logprob: -4.602348804473877
    6. ',' → logprob: -4.602348804473877
    7. '   ' → logprob: -4.727348804473877
    8. ')' → logprob: -5.602348804473877
    9. 's' → logprob: -5.727348804473877
    10. ' ,' → logprob: -5.727348804473877

Token 33: 'k' (ID: 74)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.6136229038238525
    2. ' ' → logprob: -1.9886229038238525
    3. ')' → logprob: -2.1136229038238525
    4. 'n' → logprob: -2.2386229038238525
    5. 'de' → logprob: -2.2386229038238525
    6. 'm' → logprob: -2.7386229038238525
    7. 'r' → logprob: -2.9886229038238525
    8. 'd' → logprob: -3.1136229038238525
    9. ' n' → logprob: -3.2386229038238525
    10. ' )' → logprob: -3.8636229038238525

Token 34: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5961169600486755
    2. ',' → logprob: -1.4711170196533203
    3. ' )' → logprob: -1.8461170196533203
    4. ' ,' → logprob: -2.9711170196533203
    5. ' k' → logprob: -6.09611701965332
    6. ',)' → logprob: -6.22111701965332
    7. '=' → logprob: -6.84611701965332
    8. ',k' → logprob: -6.97111701965332
    9. 's' → logprob: -7.47111701965332
    10. ' ' → logprob: -7.47111701965332

Token 35: ',...' (ID: 35229)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29844993352890015
    2. ' ,' → logprob: -1.923449993133545
    3. ',k' → logprob: -3.173449993133545
    4. ')' → logprob: -4.048449993133545
    5. ' )' → logprob: -4.173449993133545
    6. '=' → logprob: -4.673449993133545
    7. ' ' → logprob: -4.798449993133545
    8. ' k' → logprob: -5.298449993133545
    9. '+k' → logprob: -5.423449993133545
    10. ',)' → logprob: -5.673449993133545

Token 36: ',' (ID: 11)
  Prédit: ',k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.28353172540664673
    2. ',' → logprob: -1.408531665802002
    3. 'k' → logprob: -6.408531665802002
    4. ')' → logprob: -8.28353214263916
    5. ',n' → logprob: -9.03353214263916
    6. ' ,' → logprob: -9.40853214263916
    7. ' k' → logprob: -9.53353214263916
    8. '<|end|>' → logprob: -9.65853214263916
    9. '_k' → logprob: -10.15853214263916
    10. ',r' → logprob: -10.65853214263916

Token 37: 'kn' (ID: 5068)
  Prédit: 'kr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kr' → logprob: -0.30193835496902466
    2. 'k' → logprob: -1.8019382953643799
    3. ' kr' → logprob: -3.05193829536438
    4. 'kn' → logprob: -3.55193829536438
    5. 'km' → logprob: -4.801938533782959
    6. ' k' → logprob: -4.926938533782959
    7. ' ' → logprob: -7.176938533782959
    8. ' km' → logprob: -7.301938533782959
    9. ' kn' → logprob: -7.301938533782959
    10. 'kk' → logprob: -7.551938533782959

Token 38: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020539083052426577
    2. ' )' → logprob: -7.252053737640381
    3. ',k' → logprob: -7.752053737640381
    4. ',' → logprob: -7.752053737640381
    5. 'k' → logprob: -8.502054214477539
    6. ' k' → logprob: -9.877054214477539
    7. '_k' → logprob: -10.377054214477539
    8. '_)' → logprob: -10.627054214477539
    9. '),' → logprob: -11.127054214477539
    10. '`)' → logprob: -11.127054214477539

Token 39: ' avec' (ID: 3937)
  Prédit: ' telles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' telles' → logprob: -1.4753451347351074
    2. '<|end|>' → logprob: -1.4753451347351074
    3. '_' → logprob: -2.3503451347351074
    4. ' ' → logprob: -2.3503451347351074
    5. ')' → logprob: -2.4753451347351074
    6. ',' → logprob: -2.9753451347351074
    7. ' such' → logprob: -3.1003451347351074
    8. '   ' → logprob: -3.6003451347351074
    9. '```' → logprob: -3.9753451347351074
    10. ' ,' → logprob: -4.100345134735107

Token 40: ' ki' (ID: 3314)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.3025810420513153
    2. 'k' → logprob: -1.5525810718536377
    3. ' ' → logprob: -3.4275810718536377
    4. '<|end|>' → logprob: -4.927580833435059
    5. '0' → logprob: -5.802580833435059
    6. 'sum' → logprob: -7.052580833435059
    7. '_k' → logprob: -7.177580833435059
    8. 's' → logprob: -7.427580833435059
    9. ' sum' → logprob: -7.677580833435059
    10. '<|end|>' → logprob: -7.677580833435059

Token 41: ' >=' (ID: 5064)
  Prédit: '≥'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '≥' → logprob: -0.5461174845695496
    2. ' >=' → logprob: -1.7961175441741943
    3. '>=' → logprob: -2.0461175441741943
    4. ' ≥' → logprob: -2.2961175441741943
    5. 's' → logprob: -4.046117305755615
    6. ' ' → logprob: -6.421117305755615
    7. ' ' → logprob: -6.671117305755615
    8. ' \' → logprob: -6.921117305755615
    9. ''s' → logprob: -7.171117305755615
    10. '<|end|>' → logprob: -7.171117305755615

Token 42: ' m' (ID: 284)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05206918716430664
    2. ' ' → logprob: -3.0520691871643066
    3. '1' → logprob: -5.677069187164307
    4. 'r' → logprob: -11.489568710327148
    5. '```' → logprob: -12.114568710327148
    6. 'k' → logprob: -12.177068710327148
    7. 's' → logprob: -12.364568710327148
    8. '2' → logprob: -12.552068710327148
    9. '  ' → logprob: -13.052068710327148
    10. '   ' → logprob: -13.114568710327148

Token 43: ' et' (ID: 859)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.29882657527923584
    2. ',' → logprob: -1.7988265752792358
    3. '<|end|>' → logprob: -3.0488266944885254
    4. ' ' → logprob: -3.6738266944885254
    5. ' and' → logprob: -4.548826694488525
    6. ' for' → logprob: -6.298826694488525
    7. '  ' → logprob: -6.423826694488525
    8. ' et' → logprob: -6.423826694488525
    9. ')' → logprob: -6.923826694488525
    10. ' )' → logprob: -7.548826694488525

Token 44: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.4530121386051178
    2. 'sum' → logprob: -1.7030121088027954
    3. ' k' → logprob: -1.8280121088027954
    4. 'k' → logprob: -4.578011989593506
    5. ' ' → logprob: -5.203011989593506
    6. ' n' → logprob: -6.953011989593506
    7. '  ' → logprob: -7.328011989593506
    8. ' ki' → logprob: -7.578011989593506
    9. '(sum' → logprob: -7.828011989593506
    10. '```' → logprob: -7.828011989593506

Token 45: ' ki' (ID: 3314)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.47159239649772644
    2. '_' → logprob: -1.9715924263000488
    3. '(' → logprob: -2.346592426300049
    4. '_k' → logprob: -2.596592426300049
    5. '(i' → logprob: -3.971592426300049
    6. '_{' → logprob: -4.096592426300049
    7. '=' → logprob: -4.596592426300049
    8. '_i' → logprob: -5.096592426300049
    9. 'k' → logprob: -5.846592426300049
    10. 'a' → logprob: -6.096592426300049

Token 46: ' =' (ID: 314)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.8265386819839478
    2. ' =' → logprob: -1.7015386819839478
    3. '=' → logprob: -1.8265386819839478
    4. ' >=' → logprob: -2.076538562774658
    5. ' ==' → logprob: -2.701538562774658
    6. '<=' → logprob: -4.576538562774658
    7. '>=' → logprob: -5.076538562774658
    8. '==' → logprob: -5.326538562774658
    9. '<|end|>' → logprob: -5.826538562774658
    10. ')' → logprob: -7.076538562774658

Token 47: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.21956302225589752
    2. 'r' → logprob: -1.7195630073547363
    3. ' n' → logprob: -4.344563007354736
    4. ' ' → logprob: -5.969563007354736
    5. 'n' → logprob: -6.094563007354736
    6. ' ' → logprob: -9.594563484191895
    7. '    ' → logprob: -10.969563484191895
    8. ' `' → logprob: -11.094563484191895
    9. '1' → logprob: -11.469563484191895
    10. '	r' → logprob: -11.719563484191895

Token 48: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38275274634361267
    2. ' ' → logprob: -1.632752776145935
    3. '
' → logprob: -3.3827526569366455
    4. '<|end|>' → logprob: -3.6327526569366455
    5. '  ' → logprob: -4.507752895355225
    6. ':' → logprob: -4.632752895355225
    7. ',' → logprob: -4.632752895355225
    8. '  
' → logprob: -5.132752895355225
    9. '<|end|>' → logprob: -5.382752895355225
    10. '    ' → logprob: -5.382752895355225

Token 49: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5226700305938721
    2. ' :' → logprob: -1.897670030593872
    3. ' ' → logprob: -2.397670030593872
    4. '   ' → logprob: -2.522670030593872
    5. ',' → logprob: -3.397670030593872
    6. '<|end|>' → logprob: -4.022669792175293
    7. ' ,' → logprob: -4.647669792175293
    8. '  ' → logprob: -5.272669792175293
    9. '<|end|>' → logprob: -5.272669792175293
    10. '
' → logprob: -5.647669792175293

Token 50: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6780150532722473
    2. '
' → logprob: -1.5530149936676025
    3. ' ' → logprob: -2.8030149936676025
    4. '   ' → logprob: -2.8030149936676025
    5. ' :' → logprob: -3.5530149936676025
    6. '\n' → logprob: -3.8030149936676025
    7. ',' → logprob: -4.053015232086182
    8. '\' → logprob: -4.303015232086182
    9. '    ' → logprob: -4.303015232086182
    10. ' 
' → logprob: -4.553015232086182

Token 51: ' Cela' (ID: 44403)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0652381032705307
    2. '   ' → logprob: -3.4402379989624023
    3. '    ' → logprob: -4.940237998962402
    4. 'n' → logprob: -5.940237998962402
    5. '  ' → logprob: -6.065237998962402
    6. ',' → logprob: -6.440237998962402
    7. ' #' → logprob: -6.815237998962402
    8. 'r' → logprob: -6.940237998962402
    9. ' 
' → logprob: -6.940237998962402
    10. ' if' → logprob: -7.190237998962402

Token 52: ' revient' (ID: 95900)
  Prédit: ' revient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' revient' → logprob: -0.17222127318382263
    2. ' =' → logprob: -2.5472211837768555
    3. 's' → logprob: -3.7972211837768555
    4. 'rev' → logprob: -4.1722211837768555
    5. '=' → logprob: -4.5472211837768555
    6. ' s' → logprob: -4.7972211837768555
    7. 'se' → logprob: -5.4222211837768555
    8. ' équ' → logprob: -5.4222211837768555
    9. ' se' → logprob: -6.1722211837768555
    10. ' correspond' → logprob: -6.2972211837768555

Token 53: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.2864553928375244
    2. ' à' → logprob: -1.4114553928375244
    3. 'a' → logprob: -6.161455154418945
    4. ' a' → logprob: -6.911455154418945
    5. ''à' → logprob: -7.036455154418945
    6. ' ' → logprob: -7.411455154418945
    7. '’à' → logprob: -9.161455154418945
    8. '```' → logprob: -9.598955154418945
    9. '-à' → logprob: -9.786455154418945
    10. '  ' → logprob: -9.973955154418945

Token 54: ' chercher' (ID: 79602)
  Prédit: ' compter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compter' → logprob: -0.1581263691186905
    2. ' chercher' → logprob: -2.2831263542175293
    3. ' calcul' → logprob: -4.033126354217529
    4. 'calcul' → logprob: -5.408126354217529
    5. 'count' → logprob: -5.533126354217529
    6. ' trouver' → logprob: -5.658126354217529
    7. ' compt' → logprob: -6.408126354217529
    8. 'comp' → logprob: -6.533126354217529
    9. ' considérer' → logprob: -6.908126354217529
    10. 'chercher' → logprob: -6.908126354217529

Token 55: ' les' (ID: 1341)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.016598116606473923
    2. 'le' → logprob: -4.391598224639893
    3. ' ' → logprob: -6.016598224639893
    4. ' nombre' → logprob: -7.891598224639893
    5. ' la' → logprob: -8.266597747802734
    6. ' combien' → logprob: -8.516597747802734
    7. ' à' → logprob: -9.016597747802734
    8. 'nombre' → logprob: -9.266597747802734
    9. 'comb' → logprob: -9.391597747802734
    10. ' comb' → logprob: -9.391597747802734

Token 56: ' compositions' (ID: 81710)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.8953402638435364
    2. ' nombre' → logprob: -1.1453402042388916
    3. 'nombre' → logprob: -2.1453402042388916
    4. 'k' → logprob: -2.3953402042388916
    5. ' k' → logprob: -3.8953402042388916
    6. 'n' → logprob: -4.020340442657471
    7. ' n' → logprob: -5.270340442657471
    8. ' (' → logprob: -5.395340442657471
    9. ' comb' → logprob: -6.020340442657471
    10. ' number' → logprob: -6.020340442657471

Token 57: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3634038269519806
    2. ' of' → logprob: -1.4884037971496582
    3. '<|end|>' → logprob: -3.613403797149658
    4. ' with' → logprob: -5.113403797149658
    5. 'de' → logprob: -5.113403797149658
    6. ' ,' → logprob: -5.488403797149658
    7. ' (' → logprob: -5.613403797149658
    8. 'r' → logprob: -5.863403797149658
    9. 'def' → logprob: -5.988403797149658
    10. ' des' → logprob: -6.238403797149658

Token 58: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5234710574150085
    2. ' r' → logprob: -0.8984710574150085
    3. '(r' → logprob: -8.273470878601074
    4. ' (' → logprob: -10.523470878601074
    5. 'n' → logprob: -11.398470878601074
    6. '`' → logprob: -11.523470878601074
    7. ' n' → logprob: -11.773470878601074
    8. ' ' → logprob: -11.898470878601074
    9. '[r' → logprob: -12.398470878601074
    10. '```' → logprob: -12.773470878601074

Token 59: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4063880443572998
    2. '-' → logprob: -2.1563880443573
    3. ' ' → logprob: -3.1563880443573
    4. '-n' → logprob: -3.2813880443573
    5. '-r' → logprob: -3.4063880443573
    6. ' into' → logprob: -3.9063880443573
    7. ',' → logprob: -4.531388282775879
    8. 'r' → logprob: -4.531388282775879
    9. ' ,' → logprob: -4.656388282775879
    10. '<|end|>' → logprob: -4.781388282775879

Token 60: ' n' (ID: 297)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5961745977401733
    2. ' m' → logprob: -1.2211745977401733
    3. ' n' → logprob: -2.346174716949463
    4. 'n' → logprob: -2.846174716949463
    5. ' (' → logprob: -9.096174240112305
    6. '(m' → logprob: -9.221174240112305
    7. '(n' → logprob: -9.596174240112305
    8. 'nm' → logprob: -10.096174240112305
    9. ' nm' → logprob: -10.846174240112305
    10. ' ' → logprob: -10.971174240112305

Token 61: '*m' (ID: 85049)
  Prédit: '*m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*m' → logprob: -0.05087551474571228
    2. ' *' → logprob: -3.550875425338745
    3. '*' → logprob: -3.925875425338745
    4. 'm' → logprob: -7.050875663757324
    5. '*(' → logprob: -8.300875663757324
    6. ' m' → logprob: -11.300875663757324
    7. '**' → logprob: -11.300875663757324
    8. '*r' → logprob: -11.550875663757324
    9. '(m' → logprob: -12.425875663757324
    10. ' ' → logprob: -12.675875663757324

Token 62: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2928885221481323
    2. ' ' → logprob: -1.9178885221481323
    3. ' )' → logprob: -2.042888641357422
    4. ' ,' → logprob: -2.292888641357422
    5. ',' → logprob: -2.417888641357422
    6. '.' → logprob: -2.417888641357422
    7. '  ' → logprob: -3.542888641357422
    8. '<|end|>' → logprob: -3.667888641357422
    9. ' +' → logprob: -3.917888641357422
    10. ' .' → logprob: -3.917888641357422

Token 63: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.09926530718803406
    2. 'n' → logprob: -2.5992653369903564
    3. ' k' → logprob: -4.974265098571777
    4. 'com' → logprob: -5.724265098571777
    5. ' ' → logprob: -6.224265098571777
    6. 'k' → logprob: -6.474265098571777
    7. ' non' → logprob: -6.724265098571777
    8. ' parts' → logprob: -6.849265098571777
    9. ' m' → logprob: -7.349265098571777
    10. ' comb' → logprob: -7.599265098571777

Token 64: ' parties' (ID: 13531)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5588144063949585
    2. '+' → logprob: -1.6838144063949585
    3. ')' → logprob: -2.808814525604248
    4. '<|end|>' → logprob: -3.183814525604248
    5. ' )' → logprob: -3.308814525604248
    6. ' ,' → logprob: -3.433814525604248
    7. ' parts' → logprob: -3.558814525604248
    8. 'tokens' → logprob: -4.183814525604248
    9. ' tokens' → logprob: -4.933814525604248
    10. ',' → logprob: -4.933814525604248

Token 65: ' >=' (ID: 5064)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5657398700714111
    2. '   ' → logprob: -2.190739870071411
    3. ' :' → logprob: -2.315739870071411
    4. ')' → logprob: -2.565739870071411
    5. ',' → logprob: -2.940739870071411
    6. ' ' → logprob: -3.315739870071411
    7. '.' → logprob: -4.190739631652832
    8. '
' → logprob: -4.690739631652832
    9. ' ,' → logprob: -5.440739631652832
    10. '<|end|>' → logprob: -5.565739631652832

Token 66: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0701008290052414
    2. '1' → logprob: -2.820100784301758
    3. ' ' → logprob: -4.820100784301758
    4. '```' → logprob: -11.195100784301758
    5. '<|end|>' → logprob: -11.820100784301758
    6. '  ' → logprob: -12.820100784301758
    7. '   ' → logprob: -12.945100784301758
    8. ' ' → logprob: -13.195100784301758
    9. '۰' → logprob: -13.945100784301758
    10. ' zero' → logprob: -14.320100784301758

Token 67: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008157044649124146
    2. ' ' → logprob: -7.5008158683776855
    3. '1' → logprob: -8.250815391540527
    4. '<|end|>' → logprob: -14.375815391540527
    5. '```' → logprob: -15.250815391540527
    6. '  ' → logprob: -15.250815391540527
    7. '   ' → logprob: -15.500815391540527
    8. '۰' → logprob: -15.625815391540527
    9. 'zero' → logprob: -17.063316345214844
    10. ' zero' → logprob: -17.375816345214844

Token 68: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3790331780910492
    2. ')' → logprob: -2.129033088684082
    3. ':' → logprob: -2.129033088684082
    4. '
' → logprob: -4.379033088684082
    5. ',' → logprob: -4.504033088684082
    6. '\' → logprob: -4.629033088684082
    7. '\n' → logprob: -4.754033088684082
    8. '<|end|>' → logprob: -4.879033088684082
    9. '.' → logprob: -5.379033088684082
    10. '):' → logprob: -5.629033088684082

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025173919275403023
    2. ':' → logprob: -4.275174140930176
    3. ')' → logprob: -4.900174140930176
    4. '    ' → logprob: -7.400174140930176
    5. ' ' → logprob: -7.775174140930176
    6. '):' → logprob: -7.775174140930176
    7. '\n' → logprob: -7.900174140930176
    8. ',' → logprob: -7.900174140930176
    9. '    
' → logprob: -8.025174140930176
    10. ' :' → logprob: -8.275174140930176

Token 70: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003468332579359412
    2. '    ' → logprob: -6.6284685134887695
    3. 'n' → logprob: -7.7534685134887695
    4. ' ' → logprob: -8.00346851348877
    5. ')' → logprob: -8.50346851348877
    6. '\n' → logprob: -8.50346851348877
    7. '  ' → logprob: -8.75346851348877
    8. ',' → logprob: -9.37846851348877
    9. '    
' → logprob: -9.37846851348877
    10. '
' → logprob: -9.62846851348877

Token 71: ' Donc' (ID: 88837)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3772163689136505
    2. 'n' → logprob: -2.377216339111328
    3. 'result' → logprob: -3.252216339111328
    4. ' return' → logprob: -3.502216339111328
    5. '    ' → logprob: -3.877216339111328
    6. ')' → logprob: -4.002216339111328
    7. 'return' → logprob: -4.127216339111328
    8. 'r' → logprob: -4.752216339111328
    9. ' ' → logprob: -4.752216339111328
    10. ' )' → logprob: -4.877216339111328

Token 72: ' nombre' (ID: 9733)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.23680855333805084
    2. ' print' → logprob: -1.8618085384368896
    3. 'print' → logprob: -3.4868085384368896
    4. 'comb' → logprob: -4.361808776855469
    5. '   ' → logprob: -4.611808776855469
    6. ' return' → logprob: -7.736808776855469
    7. 'com' → logprob: -7.861808776855469
    8. '    ' → logprob: -8.611808776855469
    9. 'return' → logprob: -8.986808776855469
    10. ' on' → logprob: -9.361808776855469

Token 73: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4947558343410492
    2. ' de' → logprob: -1.3697558641433716
    3. '=' → logprob: -2.744755744934082
    4. 'de' → logprob: -3.119755744934082
    5. '_de' → logprob: -4.119755744934082
    6. ' d' → logprob: -5.244755744934082
    7. 'd' → logprob: -6.244755744934082
    8. '   ' → logprob: -6.994755744934082
    9. '_com' → logprob: -7.119755744934082
    10. '_d' → logprob: -7.994755744934082

Token 74: ' comb' (ID: 4134)
  Prédit: ' comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.37925565242767334
    2. 'comb' → logprob: -1.6292556524276733
    3. 'com' → logprob: -2.129255771636963
    4. ' combinations' → logprob: -8.504255294799805
    5. ' ways' → logprob: -9.004255294799805
    6. ' compositions' → logprob: -9.379255294799805
    7. ' façons' → logprob: -9.754255294799805
    8. '(com' → logprob: -10.004255294799805
    9. ' ' → logprob: -10.254255294799805
    10. '   ' → logprob: -11.004255294799805

Token 75: 'inais' (ID: 42744)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.9553226828575134
    2. '(r' → logprob: -1.2053227424621582
    3. '(' → logprob: -1.3303227424621582
    4. ')' → logprob: -3.205322742462158
    5. '(com' → logprob: -5.955322742462158
    6. '}' → logprob: -6.830322742462158
    7. '(c' → logprob: -7.080322742462158
    8. 'inations' → logprob: -7.205322742462158
    9. 'ations' → logprob: -7.205322742462158
    10. 'r' → logprob: -7.330322742462158

Token 76: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.00014978687977418303
    2. 'sons' → logprob: -9.125149726867676
    3. 's' → logprob: -11.000149726867676
    4. '#' → logprob: -11.375149726867676
    5. 'asons' → logprob: -12.250149726867676
    6. 'a' → logprob: -13.500149726867676
    7. 'ais' → logprob: -13.625149726867676
    8. 'on' → logprob: -13.875149726867676
    9. 'ations' → logprob: -14.750149726867676
    10. 't' → logprob: -14.875149726867676

Token 77: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1902892589569092
    2. '(' → logprob: -1.3152892589569092
    3. ' =' → logprob: -1.8152892589569092
    4. ' ' → logprob: -2.065289258956909
    5. '=' → logprob: -3.690289258956909
    6. ')' → logprob: -3.940289258956909
    7. ' return' → logprob: -4.190289497375488
    8. 'return' → logprob: -4.565289497375488
    9. ' (' → logprob: -4.565289497375488
    10. '    ' → logprob: -4.690289497375488

Token 78: ' comb' (ID: 4134)
  Prédit: ' comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.3870217502117157
    2. 'comb' → logprob: -1.137021780014038
    3. 'com' → logprob: -9.512022018432617
    4. '```' → logprob: -10.012022018432617
    5. '   ' → logprob: -11.262022018432617
    6. '`' → logprob: -11.512022018432617
    7. 'Comb' → logprob: -13.012022018432617
    8. '(com' → logprob: -14.262022018432617
    9. ' ' → logprob: -14.262022018432617
    10. '_comb' → logprob: -14.387022018432617

Token 79: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.15664803981781006
    2. '(n' → logprob: -2.1566481590270996
    3. '(' → logprob: -3.5316481590270996
    4. '((' → logprob: -11.031647682189941
    5. '(
' → logprob: -12.656647682189941
    6. ' (' → logprob: -13.281647682189941
    7. ')' → logprob: -13.781647682189941
    8. 'n' → logprob: -13.906647682189941
    9. '\(' → logprob: -14.656647682189941
    10. 'r' → logprob: -15.031647682189941

Token 80: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1830063760280609
    2. '-' → logprob: -1.9330064058303833
    3. '-n' → logprob: -3.8080062866210938
    4. '   ' → logprob: -9.183006286621094
    5. ' ' → logprob: -9.558006286621094
    6. ')' → logprob: -9.933006286621094
    7. ',n' → logprob: -10.183006286621094
    8. ',' → logprob: -11.058006286621094
    9. ' n' → logprob: -11.058006286621094
    10. '-r' → logprob: -11.558006286621094

Token 81: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12713809311389923
    2. ' n' → logprob: -2.127138137817383
    3. '(n' → logprob: -9.002138137817383
    4. 'nm' → logprob: -10.252138137817383
    5. '	n' → logprob: -11.002138137817383
    6. '   ' → logprob: -11.002138137817383
    7. ' (' → logprob: -12.502138137817383
    8. 'm' → logprob: -13.002138137817383
    9. ' nm' → logprob: -13.002138137817383
    10. '(' → logprob: -13.127138137817383

Token 82: '*m' (ID: 85049)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7373449206352234
    2. ',' → logprob: -1.8623449802398682
    3. '*n' → logprob: -1.9873449802398682
    4. '-' → logprob: -2.862344980239868
    5. '-n' → logprob: -3.237344980239868
    6. ',n' → logprob: -3.237344980239868
    7. '*m' → logprob: -4.112344741821289
    8. ')' → logprob: -4.362344741821289
    9. 'n' → logprob: -4.737344741821289
    10. '+n' → logprob: -4.862344741821289

Token 83: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4136710464954376
    2. '+n' → logprob: -1.7886710166931152
    3. '+' → logprob: -2.1636710166931152
    4. ',' → logprob: -2.9136710166931152
    5. ',n' → logprob: -7.038671016693115
    6. '+r' → logprob: -7.413671016693115
    7. ' ,' → logprob: -7.913671016693115
    8. ')' → logprob: -8.538671493530273
    9. '   ' → logprob: -8.663671493530273
    10. '+,' → logprob: -9.038671493530273

Token 84: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014222975820302963
    2. ' n' → logprob: -4.264223098754883
    3. '(n' → logprob: -10.264223098754883
    4. ')n' → logprob: -11.764223098754883
    5. '<|end|>' → logprob: -11.764223098754883
    6. '	n' → logprob: -12.264223098754883
    7. '[n' → logprob: -13.389223098754883
    8. '/n' → logprob: -14.014223098754883
    9. '```' → logprob: -15.139223098754883
    10. '_n' → logprob: -15.389223098754883

Token 85: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05488431453704834
    2. ' -' → logprob: -2.929884433746338
    3. ' ' → logprob: -13.67988395690918
    4. ')' → logprob: -14.17988395690918
    5. '   ' → logprob: -16.80488395690918
    6. '−' → logprob: -17.17988395690918
    7. '1' → logprob: -17.30488395690918
    8. '```' → logprob: -17.67988395690918
    9. ''-' → logprob: -18.17988395690918
    10. '"' → logprob: -18.17988395690918

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005974896252155304
    2. '-' → logprob: -5.130974769592285
    3. ' -' → logprob: -10.505974769592285
    4. ' ' → logprob: -11.005974769592285
    5. '
' → logprob: -14.255974769592285
    6. '<|end|>' → logprob: -14.380974769592285
    7. ')' → logprob: -15.005974769592285
    8. '```' → logprob: -15.380974769592285
    9. '_' → logprob: -16.2559757232666
    10. '−' → logprob: -16.2559757232666

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021356288343667984
    2. ' ,' → logprob: -6.877135753631592
    3. ',n' → logprob: -7.502135753631592
    4. ',r' → logprob: -7.877135753631592
    5. ')' → logprob: -8.752135276794434
    6. '   ' → logprob: -12.752135276794434
    7. ',k' → logprob: -13.252135276794434
    8. 'r' → logprob: -13.502135276794434
    9. ' ' → logprob: -13.627135276794434
    10. '`,' → logprob: -14.002135276794434

Token 88: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.012572633102536201
    2. 'n' → logprob: -4.387572765350342
    3. '<|end|>' → logprob: -10.012572288513184
    4. ')n' → logprob: -11.637572288513184
    5. '	n' → logprob: -12.637572288513184
    6. ')' → logprob: -13.512572288513184
    7. '(n' → logprob: -13.512572288513184
    8. ' ' → logprob: -13.637572288513184
    9. '<|end|>' → logprob: -13.887572288513184
    10. '[n' → logprob: -15.637572288513184

Token 89: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20477932691574097
    2. ' -' → logprob: -1.7047793865203857
    3. ')' → logprob: -5.704779148101807
    4. '-)' → logprob: -10.829779624938965
    5. ' )' → logprob: -12.329779624938965
    6. '   ' → logprob: -12.829779624938965
    7. ' ' → logprob: -13.829779624938965
    8. ')-' → logprob: -13.954779624938965
    9. '1' → logprob: -14.954779624938965
    10. '  ' → logprob: -15.454779624938965

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. '<|end|>' → logprob: -12.875003814697266
    3. ' ' → logprob: -14.250003814697266
    4. ')' → logprob: -15.875003814697266
    5. '<|end|>' → logprob: -16.000003814697266
    6. '```' → logprob: -17.125003814697266
    7. '   ' → logprob: -17.750003814697266
    8. '１' → logprob: -18.250003814697266
    9. '[' → logprob: -18.375003814697266
    10. '
' → logprob: -18.625003814697266

Token 91: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ' )' → logprob: -13.250003814697266
    3. '))' → logprob: -13.875003814697266
    4. '   ' → logprob: -15.500003814697266
    5. ')
' → logprob: -15.875003814697266
    6. '),' → logprob: -16.875003814697266
    7. ').' → logprob: -17.000003814697266
    8. ')))' → logprob: -17.125003814697266
    9. '')' → logprob: -17.375003814697266
    10. '")' → logprob: -17.500003814697266

Token 92: ' si' (ID: 1784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23140215873718262
    2. '   ' → logprob: -1.8564021587371826
    3. ':' → logprob: -3.1064021587371826
    4. ' ' → logprob: -6.981402397155762
    5. '
' → logprob: -7.231402397155762
    6. ':return' → logprob: -7.231402397155762
    7. ',' → logprob: -7.606402397155762
    8. '\n' → logprob: -8.356402397155762
    9. ':
' → logprob: -8.481402397155762
    10. '(' → logprob: -8.606402397155762

Token 93: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.02326492965221405
    2. 'r' → logprob: -3.7732648849487305
    3. ' (' → logprob: -11.52326488494873
    4. ' ' → logprob: -12.14826488494873
    5. '(r' → logprob: -13.14826488494873
    6. ' n' → logprob: -13.77326488494873
    7. ' ' → logprob: -14.14826488494873
    8. '   ' → logprob: -15.77326488494873
    9. 'n' → logprob: -16.148265838623047
    10. '(' → logprob: -16.648265838623047

Token 94: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.03935784101486206
    2. '>=' → logprob: -3.414357900619507
    3. ' >' → logprob: -5.539357662200928
    4. ' ' → logprob: -7.414357662200928
    5. '>' → logprob: -7.539357662200928
    6. '-' → logprob: -8.414358139038086
    7. ' <' → logprob: -9.164358139038086
    8. ' -' → logprob: -9.164358139038086
    9. '   ' → logprob: -10.539358139038086
    10. ']>=' → logprob: -10.664358139038086

Token 95: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4740873873233795
    2. ' n' → logprob: -0.9740873575210571
    3. '0' → logprob: -12.099087715148926
    4. 'm' → logprob: -12.974087715148926
    5. '   ' → logprob: -14.349087715148926
    6. ' m' → logprob: -14.724087715148926
    7. '	n' → logprob: -14.724087715148926
    8. 'nm' → logprob: -14.849087715148926
    9. '(n' → logprob: -14.974087715148926
    10. ' ' → logprob: -15.224087715148926

Token 96: '*m' (ID: 85049)
  Prédit: '*m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*m' → logprob: -0.019345629960298538
    2. ' *' → logprob: -4.269345760345459
    3. '*' → logprob: -5.269345760345459
    4. 'm' → logprob: -11.0193452835083
    5. '**' → logprob: -12.8943452835083
    6. '*n' → logprob: -13.8943452835083
    7. '*r' → logprob: -15.0193452835083
    8. '*(' → logprob: -15.2693452835083
    9. ')' → logprob: -15.8943452835083
    10. ' ' → logprob: -16.019346237182617

Token 97: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09651833772659302
    2. ')' → logprob: -3.2215182781219482
    3. '   ' → logprob: -3.5965182781219482
    4. '):' → logprob: -4.471518516540527
    5. '
' → logprob: -4.971518516540527
    6. ':
' → logprob: -6.346518516540527
    7. ',' → logprob: -6.596518516540527
    8. '<|end|>' → logprob: -7.346518516540527
    9. ' ' → logprob: -7.596518516540527
    10. ' 
' → logprob: -7.971518516540527

Token 98: ' sinon' (ID: 52915)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5477709770202637
    2. ' else' → logprob: -0.9227709770202637
    3. 'else' → logprob: -3.7977709770202637
    4. '    ' → logprob: -6.547770977020264
    5. '    
' → logprob: -9.172771453857422
    6. ' ' → logprob: -9.547771453857422
    7. ' sinon' → logprob: -9.672771453857422
    8. ' elif' → logprob: -9.797771453857422
    9. '  ' → logprob: -10.172771453857422
    10. ',' → logprob: -10.922771453857422

Token 99: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3869211673736572
    2. ' ' → logprob: -1.1369211673736572
    3. '   ' → logprob: -10.011920928955078
    4. '  ' → logprob: -13.386920928955078
    5. ' ' → logprob: -13.386920928955078
    6. '    ' → logprob: -13.761920928955078
    7. '```' → logprob: -15.011920928955078
    8. ',' → logprob: -15.386920928955078
    9. ' 
' → logprob: -16.324420928955078
    10. '000' → logprob: -16.761920928955078

Token 100: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.244413766078651e-05
    2. ' ' → logprob: -9.500082015991211
    3. '   ' → logprob: -11.875082015991211
    4. '`' → logprob: -16.12508201599121
    5. ''' → logprob: -16.25008201599121
    6. '"' → logprob: -16.62508201599121
    7. 'print' → logprob: -16.62508201599121
    8. '```' → logprob: -16.62508201599121
    9. '000' → logprob: -16.87508201599121
    10. '  ' → logprob: -17.25008201599121

Token 101: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025859545916318893
    2. ':' → logprob: -5.025859355926514
    3. ')' → logprob: -5.275859355926514
    4. '
' → logprob: -5.400859355926514
    5. '    
' → logprob: -5.775859355926514
    6. ' ' → logprob: -6.650859355926514
    7. ' 
' → logprob: -6.650859355926514
    8. '\n' → logprob: -7.275859355926514
    9. '   
' → logprob: -7.775859355926514
    10. '  ' → logprob: -7.900859355926514

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002504793694242835
    2. ':' → logprob: -6.877504825592041
    3. '    
' → logprob: -7.877504825592041
    4. ' ' → logprob: -8.127504348754883
    5. ' 
' → logprob: -8.377504348754883
    6. '  ' → logprob: -8.752504348754883
    7. '\n' → logprob: -9.127504348754883
    8. '
' → logprob: -9.377504348754883
    9. '    ' → logprob: -9.877504348754883
    10. '   
' → logprob: -9.877504348754883

Token 103: ' rem' (ID: 1662)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005920620169490576
    2. 'if' → logprob: -5.75592041015625
    3. ' if' → logprob: -6.25592041015625
    4. '    
' → logprob: -8.13092041015625
    5. '    ' → logprob: -8.88092041015625
    6. 'return' → logprob: -8.88092041015625
    7. '  ' → logprob: -9.38092041015625
    8. ' ' → logprob: -9.88092041015625
    9. ' return' → logprob: -9.88092041015625
    10. 'result' → logprob: -11.00592041015625

Token 104: ' =' (ID: 314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5367758274078369
    2. ' =' → logprob: -1.786775827407837
    3. 'aining' → logprob: -1.786775827407837
    4. 'ainer' → logprob: -3.536775827407837
    5. 'ain' → logprob: -3.661775827407837
    6. '   ' → logprob: -4.161775588989258
    7. 'inder' → logprob: -5.536775588989258
    8. '=' → logprob: -6.161775588989258
    9. 'ains' → logprob: -6.161775588989258
    10. '_a' → logprob: -7.911775588989258

Token 105: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.048589982092380524
    2. ' r' → logprob: -3.0485899448394775
    3. '   ' → logprob: -13.048589706420898
    4. 'max' → logprob: -15.048589706420898
    5. ' max' → logprob: -16.2985897064209
    6. '	r' → logprob: -17.1735897064209
    7. ' ' → logprob: -17.4235897064209
    8. '(r' → logprob: -18.1735897064209
    9. '0' → logprob: -18.4235897064209
    10. '  ' → logprob: -18.5485897064209

Token 106: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.020673619583249092
    2. '-' → logprob: -3.8956735134124756
    3. '<|end|>' → logprob: -9.895673751831055
    4. ' ' → logprob: -10.520673751831055
    5. '   ' → logprob: -11.270673751831055
    6. '    ' → logprob: -11.520673751831055
    7. ' -=' → logprob: -12.020673751831055
    8. '-n' → logprob: -12.020673751831055
    9. ')' → logprob: -12.770673751831055
    10. '<|end|>' → logprob: -12.895673751831055

Token 107: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.029757322743535042
    2. 'n' → logprob: -3.529757261276245
    3. ' (' → logprob: -12.904757499694824
    4. '(n' → logprob: -12.904757499694824
    5. '	n' → logprob: -13.404757499694824
    6. '   ' → logprob: -15.904757499694824
    7. '_n' → logprob: -16.529756546020508
    8. '(' → logprob: -17.029756546020508
    9. ')n' → logprob: -17.029756546020508
    10. '    ' → logprob: -17.154756546020508

Token 108: ' *' (ID: 425)
  Prédit: '*m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*m' → logprob: -0.004221928305923939
    2. '*' → logprob: -5.7542219161987305
    3. ' *' → logprob: -6.8792219161987305
    4. '**' → logprob: -12.25422191619873
    5. '*n' → logprob: -12.50422191619873
    6. '*num' → logprob: -13.75422191619873
    7. '   ' → logprob: -14.00422191619873
    8. ''*' → logprob: -14.25422191619873
    9. '*r' → logprob: -14.87922191619873
    10. '*u' → logprob: -15.00422191619873

Token 109: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0004307884373702109
    2. ' m' → logprob: -7.750430583953857
    3. '   ' → logprob: -16.625431060791016
    4. '	m' → logprob: -17.000431060791016
    5. '*m' → logprob: -17.500431060791016
    6. ' ' → logprob: -18.250431060791016
    7. '  ' → logprob: -19.375431060791016
    8. 'м' → logprob: -19.625431060791016
    9. ')m' → logprob: -20.375431060791016
    10. '_m' → logprob: -20.625431060791016

Token 110: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31558606028556824
    2. '   ' → logprob: -1.9405860900878906
    3. ' if' → logprob: -2.5655860900878906
    4. '<|end|>' → logprob: -4.065586090087891
    5. 'if' → logprob: -4.315586090087891
    6. ' 
' → logprob: -4.690586090087891
    7. '<|end|>' → logprob: -6.065586090087891
    8. '    
' → logprob: -6.315586090087891
    9. ' ' → logprob: -6.440586090087891
    10. '	if' → logprob: -6.565586090087891

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014915307983756065
    2. '
' → logprob: -7.626491546630859
    3. '<|end|>' → logprob: -7.876491546630859
    4. 'if' → logprob: -8.12649154663086
    5. ' if' → logprob: -8.75149154663086
    6. '    
' → logprob: -8.87649154663086
    7. '<|end|>' → logprob: -11.62649154663086
    8. '    ' → logprob: -11.75149154663086
    9. '	if' → logprob: -12.12649154663086
    10. ' 
' → logprob: -13.62649154663086

Token 112: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.01935451291501522
    2. '   ' → logprob: -4.269354343414307
    3. ' if' → logprob: -5.394354343414307
    4. 'print' → logprob: -7.769354343414307
    5. 'result' → logprob: -8.519354820251465
    6. 'return' → logprob: -12.144354820251465
    7. '    
' → logprob: -13.144354820251465
    8. 'answer' → logprob: -13.394354820251465
    9. '
' → logprob: -13.644354820251465
    10. 'res' → logprob: -14.519354820251465

Token 113: ' rem' (ID: 1662)
  Prédit: ' rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rem' → logprob: -0.00015872348740231246
    2. 'rem' → logprob: -8.750158309936523
    3. ' r' → logprob: -16.250158309936523
    4. '(rem' → logprob: -16.500158309936523
    5. ' ' → logprob: -16.875158309936523
    6. '   ' → logprob: -18.250158309936523
    7. ' ' → logprob: -19.500158309936523
    8. 'r' → logprob: -20.000158309936523
    9. ' remin' → logprob: -20.625158309936523
    10. '  ' → logprob: -21.750158309936523

Token 114: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2692502439022064
    2. ' >=' → logprob: -1.5192502737045288
    3. '<' → logprob: -4.644250392913818
    4. '>=' → logprob: -4.894250392913818
    5. ' ' → logprob: -9.76924991607666
    6. '   ' → logprob: -12.89424991607666
    7. ']>=' → logprob: -13.76924991607666
    8. '>' → logprob: -14.14424991607666
    9. '  ' → logprob: -14.39424991607666
    10. ')>=' → logprob: -14.51924991607666

Token 115: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47407716512680054
    2. '0' → logprob: -0.9740771651268005
    3. '=' → logprob: -16.599077224731445
    4. 'n' → logprob: -17.349077224731445
    5. ' n' → logprob: -17.599077224731445
    6. '۰' → logprob: -17.724077224731445
    7. '    ' → logprob: -18.349077224731445
    8. ' ' → logprob: -18.411577224731445
    9. '  ' → logprob: -18.474077224731445
    10. '<|end|>' → logprob: -18.536577224731445

Token 116: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '۰' → logprob: -19.500009536743164
    4. '```' → logprob: -20.625009536743164
    5. '   ' → logprob: -20.750009536743164
    6. '０' → logprob: -21.500009536743164
    7. ':' → logprob: -22.000009536743164
    8. '=' → logprob: -22.125009536743164
    9. '٠' → logprob: -22.500009536743164
    10. '  ' → logprob: -22.625009536743164

Token 117: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010553185129538178
    2. ':
' → logprob: -7.0010552406311035
    3. '):' → logprob: -9.751055717468262
    4. ':return' → logprob: -10.376055717468262
    5. '       ' → logprob: -10.501055717468262
    6. '   ' → logprob: -10.876055717468262
    7. ',' → logprob: -12.751055717468262
    8. ')' → logprob: -13.501055717468262
    9. '):
' → logprob: -14.126055717468262
    10. '():' → logprob: -14.376055717468262

Token 118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003623985394369811
    2. '0' → logprob: -8.250362396240234
    3. '   ' → logprob: -10.250362396240234
    4. ' return' → logprob: -10.875362396240234
    5. 'return' → logprob: -11.000362396240234
    6. '
' → logprob: -11.750362396240234
    7. '1' → logprob: -11.875362396240234
    8. '    
' → logprob: -12.750362396240234
    9. 'print' → logprob: -12.875362396240234
    10. '        
' → logprob: -13.375362396240234

Token 119: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.10284516215324402
    2. '   ' → logprob: -2.8528451919555664
    3. '       ' → logprob: -3.7278451919555664
    4. ' print' → logprob: -4.227845191955566
    5. 'return' → logprob: -6.602845191955566
    6. ' return' → logprob: -9.852845191955566
    7. '    ' → logprob: -11.977845191955566
    8. '	print' → logprob: -12.852845191955566
    9. '```' → logprob: -13.477845191955566
    10. 'pr' → logprob: -13.852845191955566

Token 120: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013282144209370017
    2. '0' → logprob: -6.626327991485596
    3. ' (' → logprob: -13.376328468322754
    4. '("' → logprob: -14.751328468322754
    5. '('' → logprob: -15.251328468322754
    6. '(
' → logprob: -17.376327514648438
    7. ' ' → logprob: -18.251327514648438
    8. '()' → logprob: -18.501327514648438
    9. '   ' → logprob: -18.751327514648438
    10. '(`' → logprob: -18.876327514648438

Token 121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -18.375
    4. ')' → logprob: -19.0
    5. '"' → logprob: -19.25
    6. '```' → logprob: -19.75
    7. '۰' → logprob: -19.875
    8. '(' → logprob: -20.625
    9. '０' → logprob: -20.625
    10. '`' → logprob: -20.75

Token 122: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023584702983498573
    2. '   ' → logprob: -3.7735846042633057
    3. ')
' → logprob: -8.148584365844727
    4. ')return' → logprob: -10.273584365844727
    5. '       ' → logprob: -11.523584365844727
    6. '')' → logprob: -13.773584365844727
    7. ' )' → logprob: -13.773584365844727
    8. '<|end|>' → logprob: -14.148584365844727
    9. '")' → logprob: -14.273584365844727
    10. '`)' → logprob: -14.898584365844727

Token 123: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014277744106948376
    2. '       ' → logprob: -4.264277935028076
    3. 'else' → logprob: -9.889277458190918
    4. '<|end|>' → logprob: -10.264277458190918
    5. ')' → logprob: -11.014277458190918
    6. '```' → logprob: -12.639277458190918
    7. '    
' → logprob: -13.014277458190918
    8. ' else' → logprob: -13.389277458190918
    9. '<|end|>' → logprob: -13.639277458190918
    10. '	else' → logprob: -14.389277458190918

Token 124: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5135142803192139
    2. '       ' → logprob: -1.2635142803192139
    3. 'return' (adapté à ' return') → logprob: -2.138514280319214
    4. 'else' → logprob: -7.013514518737793
    5. ' return' → logprob: -8.763514518737793
    6. ')' → logprob: -11.138514518737793
    7. '
' → logprob: -11.138514518737793
    8. '	return' → logprob: -11.888514518737793
    9. '```' → logprob: -12.013514518737793
    10. '    
' → logprob: -12.513514518737793

Token 125: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027706626802682877
    2. '    
' → logprob: -3.6527066230773926
    3. '
' → logprob: -7.152706623077393
    4. ' 
' → logprob: -8.77770709991455
    5. '   
' → logprob: -9.27770709991455
    6. '  
' → logprob: -9.65270709991455
    7. '     
' → logprob: -9.90270709991455
    8. 'print' → logprob: -9.90270709991455
    9. '        
' → logprob: -10.15270709991455
    10. '\n' → logprob: -10.52770709991455

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2015017420053482
    2. 'print' → logprob: -1.826501727104187
    3. '    
' → logprob: -4.451501846313477
    4. ' print' → logprob: -5.201501846313477
    5. '
' → logprob: -6.201501846313477
    6. '  
' → logprob: -7.076501846313477
    7. ' 
' → logprob: -7.576501846313477
    8. '   
' → logprob: -7.826501846313477
    9. '  ' → logprob: -9.201501846313477
    10. '```' → logprob: -9.201501846313477

Token 127: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05850506201386452
    2. '   ' → logprob: -3.058505058288574
    3. 'result' → logprob: -4.933505058288574
    4. ' print' → logprob: -6.683505058288574
    5. 'count' → logprob: -7.183505058288574
    6. '    
' → logprob: -7.808505058288574
    7. 'answer' → logprob: -9.933505058288574
    8. '
' → logprob: -10.183505058288574
    9. 'res' → logprob: -10.433505058288574
    10. 'ans' → logprob: -10.558505058288574

Token 128: ' comb' (ID: 4134)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014060676097869873
    2. ' print' → logprob: -4.7640604972839355
    3. 'comb' → logprob: -6.0140604972839355
    4. 'result' → logprob: -7.0140604972839355
    5. '   ' → logprob: -7.2640604972839355
    6. ')' → logprob: -7.6390604972839355
    7. ' comb' → logprob: -7.8890604972839355
    8. 'rem' → logprob: -8.639060974121094
    9. 'n' → logprob: -9.264060974121094
    10. 'r' → logprob: -9.639060974121094

Token 129: ' avec' (ID: 3937)
  Prédit: '(rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(rem' → logprob: -0.0016005600336939096
    2. '(r' → logprob: -7.126600742340088
    3. 'rem' → logprob: -7.376600742340088
    4. '(' → logprob: -8.87660026550293
    5. ' rem' → logprob: -11.37660026550293
    6. ' (' → logprob: -12.12660026550293
    7. '(
' → logprob: -12.25160026550293
    8. '   ' → logprob: -13.50160026550293
    9. ')' → logprob: -13.87660026550293
    10. 'er' → logprob: -14.00160026550293

Token 130: ' r' (ID: 428)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.16133394837379456
    2. '(rem' → logprob: -2.4113340377807617
    3. ' rem' → logprob: -2.9113340377807617
    4. '(n' → logprob: -6.036334037780762
    5. 'n' → logprob: -6.661334037780762
    6. 'r' → logprob: -7.536334037780762
    7. '(r' → logprob: -8.286334037780762
    8. 'comb' → logprob: -8.661334037780762
    9. ' (' → logprob: -9.411334037780762
    10. '(' → logprob: -9.536334037780762

Token 131: ' >=' (ID: 5064)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.1756062507629395
    2. '-' → logprob: -1.5506062507629395
    3. '(rem' → logprob: -1.8006062507629395
    4. 'rem' → logprob: -1.9256062507629395
    5. ' rem' → logprob: -2.6756062507629395
    6. 'em' → logprob: -3.3006062507629395
    7. '-n' → logprob: -4.1756062507629395
    8. '-rem' → logprob: -4.5506062507629395
    9. ',' → logprob: -4.9256062507629395
    10. '   ' → logprob: -5.3006062507629395

Token 132: ' n' (ID: 297)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.7510573267936707
    2. ' rem' → logprob: -1.1260573863983154
    3. 'n' → logprob: -1.8760573863983154
    4. ' n' → logprob: -3.1260573863983154
    5. '0' → logprob: -5.751057147979736
    6. 'r' → logprob: -6.251057147979736
    7. '   ' → logprob: -7.626057147979736
    8. ' ' → logprob: -8.126057624816895
    9. '(rem' → logprob: -8.126057624816895
    10. ' r' → logprob: -8.751057624816895

Token 133: '*m' (ID: 85049)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3525192439556122
    2. ' ,' → logprob: -2.1025192737579346
    3. 'rem' → logprob: -3.2275192737579346
    4. ' rem' → logprob: -3.2275192737579346
    5. '-' → logprob: -3.4775192737579346
    6. ' *' → logprob: -3.7275192737579346
    7. 'comb' → logprob: -4.9775190353393555
    8. ' -' → logprob: -5.2275190353393555
    9. 'm' → logprob: -5.3525190353393555
    10. ')' → logprob: -5.3525190353393555

Token 134: ' >=' (ID: 5064)
  Prédit: '(rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(rem' → logprob: -0.09059058874845505
    2. '(' → logprob: -2.715590476989746
    3. '   ' → logprob: -4.090590476989746
    4. '(r' → logprob: -6.215590476989746
    5. ')' → logprob: -7.340590476989746
    6. '(
' → logprob: -7.965590476989746
    7. 'rem' → logprob: -8.215590476989746
    8. ',' → logprob: -8.840590476989746
    9. '(com' → logprob: -8.965590476989746
    10. ' (' → logprob: -9.465590476989746

Token 135: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8058758974075317
    2. 'n' → logprob: -1.0558758974075317
    3. 'rem' → logprob: -2.055875778198242
    4. ' n' → logprob: -3.305875778198242
    5. ' rem' → logprob: -3.680875778198242
    6. ' ' → logprob: -5.180875778198242
    7. 'r' → logprob: -5.180875778198242
    8. '1' → logprob: -5.805875778198242
    9. '   ' → logprob: -8.055875778198242
    10. ' r' → logprob: -8.180875778198242

Token 136: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8447547554969788
    2. ')' → logprob: -1.094754695892334
    3. '(' → logprob: -1.719754695892334
    4. 'print' → logprob: -3.219754695892334
    5. ',' → logprob: -5.094754695892334
    6. ':' → logprob: -5.844754695892334
    7. ' print' → logprob: -6.219754695892334
    8. '()' → logprob: -6.344754695892334
    9. ')
' → logprob: -7.469754695892334
    10. '(
' → logprob: -7.469754695892334

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5653004050254822
    2. 'print' → logprob: -1.440300464630127
    3. ')' → logprob: -2.065300464630127
    4. '(' → logprob: -3.190300464630127
    5. ',' → logprob: -4.690300464630127
    6. ' print' → logprob: -5.440300464630127
    7. 'result' → logprob: -5.940300464630127
    8. '    
' → logprob: -6.190300464630127
    9. 'n' → logprob: -6.565300464630127
    10. '(n' → logprob: -6.940300464630127

Token 138: ' res' (ID: 694)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0734342634677887
    2. '   ' → logprob: -3.448434352874756
    3. 'result' → logprob: -3.698434352874756
    4. ' print' → logprob: -4.323434352874756
    5. ' result' → logprob: -8.323433876037598
    6. 'res' (adapté à ' res') → logprob: -8.448433876037598
    7. 'count' → logprob: -8.948433876037598
    8. 'answer' → logprob: -9.073433876037598
    9. ' ans' → logprob: -9.323433876037598
    10. 'ans' → logprob: -9.323433876037598

Token 139: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759572386741638
    2. ' =' → logprob: -0.8259572386741638
    3. ')' → logprob: -11.325957298278809
    4. ' ' → logprob: -13.200957298278809
    5. '   ' → logprob: -13.950957298278809
    6. ',' → logprob: -14.575957298278809
    7. '(' → logprob: -14.700957298278809
    8. ' =
' → logprob: -14.825957298278809
    9. ' ' → logprob: -15.575957298278809
    10. '.' → logprob: -15.575957298278809

Token 140: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.1602362096309662
    2. ' comb' → logprob: -1.9102362394332886
    3. 'com' → logprob: -11.910236358642578
    4. '   ' → logprob: -12.285236358642578
    5. 'Comb' → logprob: -15.535236358642578
    6. '```' → logprob: -15.535236358642578
    7. '(com' → logprob: -16.410236358642578
    8. 'comm' → logprob: -17.160236358642578
    9. '_comb' → logprob: -17.285236358642578
    10. 'compl' → logprob: -17.410236358642578

Token 141: '(rem' (ID: 150425)
  Prédit: '(rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rem' → logprob: -1.6405310816480778e-05
    2. '(' → logprob: -11.375016212463379
    3. 'rem' → logprob: -12.375016212463379
    4. ' rem' → logprob: -14.875016212463379
    5. ' (' → logprob: -16.625017166137695
    6. '(rest' → logprob: -17.500017166137695
    7. '(r' → logprob: -17.625017166137695
    8. '(
' → logprob: -17.750017166137695
    9. '.rem' → logprob: -18.250017166137695
    10. '(Rem' → logprob: -18.875017166137695

Token 142: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.017846817150712013
    2. '+n' → logprob: -4.267846584320068
    3. '   ' → logprob: -6.142846584320068
    4. '+' → logprob: -6.517846584320068
    5. 'n' → logprob: -11.267847061157227
    6. ' n' → logprob: -11.517847061157227
    7. '+r' → logprob: -11.642847061157227
    8. '    ' → logprob: -12.267847061157227
    9. ',' → logprob: -12.517847061157227
    10. ' ' → logprob: -12.642847061157227

Token 143: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3869211673736572
    2. ' n' → logprob: -1.1369211673736572
    3. '(n' → logprob: -10.136920928955078
    4. '	n' → logprob: -12.636920928955078
    5. '<|end|>' → logprob: -12.636920928955078
    6. ' (' → logprob: -13.761920928955078
    7. '   ' → logprob: -14.136920928955078
    8. ' ' → logprob: -14.261920928955078
    9. ')n' → logprob: -14.636920928955078
    10. '_n' → logprob: -14.886920928955078

Token 144: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06196948140859604
    2. '-' → logprob: -2.811969518661499
    3. ' ' → logprob: -13.311969757080078
    4. '   ' → logprob: -16.436969757080078
    5. '<|end|>' → logprob: -17.186969757080078
    6. '
' → logprob: -17.811969757080078
    7. ')' → logprob: -18.186969757080078
    8. '−' → logprob: -18.436969757080078
    9. ' ' → logprob: -18.561969757080078
    10. '  ' → logprob: -18.686969757080078

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -16.875017166137695
    4. '   ' → logprob: -17.000017166137695
    5. '<|end|>' → logprob: -17.500017166137695
    6. '

' → logprob: -18.062517166137695
    7. '
' → logprob: -18.125017166137695
    8. ' ' → logprob: -18.562517166137695
    9. ')' → logprob: -18.875017166137695
    10. '۱' → logprob: -19.062517166137695

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019722258730325848
    2. ',n' → logprob: -9.250197410583496
    3. ' ,' → logprob: -9.250197410583496
    4. ')' → logprob: -12.750197410583496
    5. '   ' → logprob: -13.750197410583496
    6. ',
' → logprob: -14.625197410583496
    7. ',r' → logprob: -16.50019645690918
    8. ',m' → logprob: -16.75019645690918
    9. '',' → logprob: -17.12519645690918
    10. '),' → logprob: -17.25019645690918

Token 147: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.023245712742209435
    2. 'n' → logprob: -3.7732458114624023
    3. '	n' → logprob: -15.773245811462402
    4. ')n' → logprob: -16.648244857788086
    5. ' ' → logprob: -17.523244857788086
    6. '    ' → logprob: -17.523244857788086
    7. ' ' → logprob: -18.023244857788086
    8. ')' → logprob: -18.148244857788086
    9. '<|end|>' → logprob: -18.648244857788086
    10. '   ' → logprob: -18.648244857788086

Token 148: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07893837243318558
    2. ' -' → logprob: -2.5789384841918945
    3. ')' → logprob: -10.578938484191895
    4. '1' → logprob: -11.578938484191895
    5. '<|end|>' → logprob: -11.703938484191895
    6. '   ' → logprob: -12.703938484191895
    7. '<|end|>' → logprob: -13.828938484191895
    8. ' ' → logprob: -14.328938484191895
    9. '-)' → logprob: -15.078938484191895
    10. ')-' → logprob: -15.203938484191895

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.975612187583465e-05
    2. '<|end|>' → logprob: -10.875029563903809
    3. ' ' → logprob: -11.500029563903809
    4. '<|end|>' → logprob: -14.750029563903809
    5. '```' → logprob: -16.000030517578125
    6. '   ' → logprob: -16.250030517578125
    7. ')' → logprob: -17.312530517578125
    8. '2' → logprob: -18.000030517578125
    9. '
' → logprob: -18.187530517578125
    10. '１' → logprob: -18.250030517578125

Token 150: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006277294596657157
    2. ')
' → logprob: -7.375627517700195
    3. ' )' → logprob: -14.375627517700195
    4. '   ' → logprob: -14.750627517700195
    5. ')
' → logprob: -15.625627517700195
    6. ')

' → logprob: -17.500627517700195
    7. '))' → logprob: -18.250627517700195
    8. '),' → logprob: -18.375627517700195
    9. ')}' → logprob: -18.625627517700195
    10. ').' → logprob: -19.000627517700195

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001327499165199697
    2. 'print' → logprob: -7.3763275146484375
    3. '
' → logprob: -8.001327514648438
    4. '    
' → logprob: -8.626327514648438
    5. ')' → logprob: -9.501327514648438
    6. '\n' → logprob: -10.376327514648438
    7. ' print' → logprob: -10.376327514648438
    8. '<|end|>' → logprob: -10.751327514648438
    9. '```' → logprob: -11.126327514648438
    10. '  
' → logprob: -12.626327514648438

Token 152: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03805147483944893
    2. '   ' → logprob: -3.2880513668060303
    3. ' print' → logprob: -11.78805160522461
    4. '```' → logprob: -13.16305160522461
    5. '	print' → logprob: -15.03805160522461
    6. '    
' → logprob: -15.66305160522461
    7. '  ' → logprob: -17.66305160522461
    8. '
' → logprob: -17.91305160522461
    9. '.print' → logprob: -18.53805160522461
    10. 'printf' → logprob: -18.78805160522461

Token 153: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.02325631119310856
    2. '(' → logprob: -3.773256301879883
    3. 'res' → logprob: -11.523256301879883
    4. ' (' → logprob: -14.773256301879883
    5. '(
' → logprob: -14.773256301879883
    6. '()' → logprob: -17.023256301879883
    7. ' res' → logprob: -18.273256301879883
    8. '(

' → logprob: -18.273256301879883
    9. '(re' → logprob: -18.398256301879883
    10. '(resp' → logprob: -18.398256301879883

Token 154: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.25
    3. ')
' → logprob: -16.75
    4. ')`' → logprob: -18.75
    5. '))' → logprob: -19.375
    6. '`)' → logprob: -20.25
    7. '')' → logprob: -20.5
    8. ')

' → logprob: -20.75
    9. ')**' → logprob: -20.75
    10. '```' → logprob: -21.0

Token 155: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 156: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.03366656228899956
    2. '__' → logprob: -3.4086666107177734
    3. ' ' → logprob: -12.033666610717773
    4. '_' → logprob: -12.033666610717773
    5. '_name' → logprob: -12.158666610717773
    6. ' _' → logprob: -13.408666610717773
    7. ' name' → logprob: -13.908666610717773
    8. ' ' → logprob: -14.658666610717773
    9. ' main' → logprob: -15.033666610717773
    10. 'name' → logprob: -15.033666610717773

Token 157: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.17032667994499207
    2. ' ==' → logprob: -2.2953267097473145
    3. '==' → logprob: -2.9203267097473145
    4. '=="' → logprob: -6.6703267097473145
    5. ' __' → logprob: -8.795326232910156
    6. '=='' → logprob: -9.170326232910156
    7. '[' → logprob: -9.545326232910156
    8. '.__' → logprob: -9.920326232910156
    9. '```' → logprob: -10.170326232910156
    10. '__.__' → logprob: -10.420326232910156

Token 158: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.2246291337069124e-05
    2. '__.__' → logprob: -11.000021934509277
    3. '==' → logprob: -12.375021934509277
    4. '__.' → logprob: -14.625021934509277
    5. '=="' → logprob: -15.500021934509277
    6. '_' → logprob: -16.000022888183594
    7. '__["' → logprob: -16.125022888183594
    8. ' ==' → logprob: -16.250022888183594
    9. '__('' → logprob: -16.625022888183594
    10. '___' → logprob: -17.000022888183594

Token 159: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.051776617765426636
    2. '==' → logprob: -3.051776647567749
    3. '__' → logprob: -6.30177640914917
    4. '=="' → logprob: -6.80177640914917
    5. '=='' → logprob: -8.426776885986328
    6. '=' → logprob: -12.301776885986328
    7. ' =="' → logprob: -12.426776885986328
    8. ' =' → logprob: -12.551776885986328
    9. '"' → logprob: -13.301776885986328
    10. '===' → logprob: -13.926776885986328

Token 160: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.313296377658844
    2. ''' → logprob: -1.3132963180541992
    3. '__' → logprob: -10.4382963180542
    4. ' "__' → logprob: -12.5632963180542
    5. ' '__' → logprob: -14.3132963180542
    6. ''"' → logprob: -14.8132963180542
    7. '"user' → logprob: -15.3132963180542
    8. '"'' → logprob: -16.563297271728516
    9. ''user' → logprob: -17.188297271728516
    10. ''post' → logprob: -17.188297271728516

Token 161: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0007012377609498799
    2. 'name' → logprob: -7.625701427459717
    3. '__' → logprob: -8.500700950622559
    4. '_main' → logprob: -12.375700950622559
    5. 'built' → logprob: -13.625700950622559
    6. '__":
' → logprob: -14.000700950622559
    7. '"' → logprob: -14.125700950622559
    8. 'python' → logprob: -14.250700950622559
    9. '```' → logprob: -14.750700950622559
    10. '_MAIN' → logprob: -15.000700950622559

Token 162: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.474131315946579
    2. '__' → logprob: -0.9741313457489014
    3. '__':
' → logprob: -10.34913158416748
    4. '__:' → logprob: -10.97413158416748
    5. '__.' → logprob: -13.47413158416748
    6. '__["' → logprob: -13.47413158416748
    7. '_' → logprob: -13.59913158416748
    8. '"' → logprob: -15.59913158416748
    9. '":' → logprob: -15.59913158416748
    10. '__("' → logprob: -15.72413158416748

Token 163: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.06199469417333603
    2. ' main' → logprob: -2.811994791030884
    3. '	main' → logprob: -11.061994552612305
    4. '   ' → logprob: -11.936994552612305
    5. '_main' → logprob: -12.561994552612305
    6. 'ma' → logprob: -15.311994552612305
    7. '(main' → logprob: -15.436994552612305
    8. '__' → logprob: -15.686994552612305
    9. ' ' → logprob: -15.686994552612305
    10. 'm' → logprob: -16.061994552612305

Token 164: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.320199877838604e-07
    2. ' main' → logprob: -14.875
    3. '	main' → logprob: -19.75
    4. '_main' → logprob: -22.75
    5. 'm' → logprob: -23.0
    6. '(main' → logprob: -23.125
    7. '.main' → logprob: -23.5
    8. 'mai' → logprob: -23.625
    9. '   ' → logprob: -24.125
    10. 'mainwindow' → logprob: -24.25

Token 165: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 163
Tokens correctement prédits (1ère position, stricte): 63
Tokens correctement prédits (1ère position, avec adaptation): 68
Tokens correctement prédits (top 10): 123
Précision stricte (1ère position): 38.65%
Précision adaptée (1ère position): 41.72%
Précision (top 10): 75.46%
================================================================================
