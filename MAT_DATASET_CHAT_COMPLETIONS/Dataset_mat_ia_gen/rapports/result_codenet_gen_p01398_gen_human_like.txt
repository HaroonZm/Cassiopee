================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def shift_char(c, diff):
    # -diff because we are reversing the encryption (which shifted backward)
    # but here we're decoding, so we shift forward by diff
    offset = (ord(c) - ord('a') + diff) % 26
    return chr(ord('a') + offset)

while True:
    N = input().strip()
    if N == '0':
        break
    N = int(N)
    message = list(input().strip())
    swaps = [tuple(map(int, input().split())) for _ in range(N)]

    # To decode, we must reverse the encryption steps in reverse order
    # because the encryption applied swaps from 1 to N
    # decoding applies swaps from N to 1 (inverse operation)
    for a, b in reversed(swaps):
        # indices to zero-based
        a -= 1
        b -= 1
        diff = abs(a - b)

        # first, reverse the character shifting:
        # encryption: took chars at a,b, swapped them,
        # then shifted both backward by diff.
        # So to decode:
        # before swapping back, shift both chars forward by diff
        message[a] = shift_char(message[a], diff)
        message[b] = shift_char(message[b], diff)

        # then swap back to original places
        message[a], message[b] = message[b], message[a]

    print("".join(message))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' shift' (ID: 12847)
  → Token d'amorce (pas de prédiction)

Token 2: '_char' (ID: 23398)
  → Token d'amorce (pas de prédiction)

Token 3: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20316730439662933
    2. '_' → logprob: -1.7031673192977905
    3. 's' → logprob: -7.45316743850708
    4. '(_' → logprob: -8.078166961669922
    5. '_(' → logprob: -8.203166961669922
    6. '```' → logprob: -8.703166961669922
    7. '(_:' → logprob: -9.328166961669922
    8. '_:' → logprob: -9.578166961669922
    9. '(a' → logprob: -10.328166961669922
    10. '(s' → logprob: -10.328166961669922

Token 4: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026616785675287247
    2. ')' → logprob: -3.6516168117523193
    3. ',' → logprob: -8.526617050170898
    4. ':' → logprob: -9.901617050170898
    5. '):
' → logprob: -10.776617050170898
    6. 'a' → logprob: -11.651617050170898
    7. 's' → logprob: -11.776617050170898
    8. ' ):' → logprob: -11.776617050170898
    9. 'e' → logprob: -12.026617050170898
    10. '=' → logprob: -12.901617050170898

Token 5: ' diff' (ID: 8868)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5691193342208862
    2. 'shift' → logprob: -2.069119453430176
    3. ' shift' → logprob: -2.069119453430176
    4. 'n' → logprob: -2.819119453430176
    5. ' offset' → logprob: -2.944119453430176
    6. 'offset' → logprob: -3.944119453430176
    7. ' key' → logprob: -4.569119453430176
    8. ' s' → logprob: -4.694119453430176
    9. ')' → logprob: -5.194119453430176
    10. 's' → logprob: -5.194119453430176

Token 6: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0036586259957402945
    2. ')' → logprob: -5.628658771514893
    3. ':' → logprob: -10.628658294677734
    4. '=' → logprob: -11.378658294677734
    5. 's' → logprob: -11.878658294677734
    6. ' ):' → logprob: -12.503658294677734
    7. '_' → logprob: -12.628658294677734
    8. '):
' → logprob: -13.003658294677734
    9. ')=' → logprob: -13.878658294677734
    10. ',' → logprob: -14.003658294677734

Token 7: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4176993668079376
    2. '   ' → logprob: -1.1676993370056152
    3. '```' → logprob: -3.9176993370056152
    4. ''' → logprob: -5.542699337005615
    5. '(' → logprob: -6.667699337005615
    6. ':return' → logprob: -6.792699337005615
    7. ' if' → logprob: -7.542699337005615
    8. ' ' → logprob: -7.667699337005615
    9. ''s' → logprob: -7.917699337005615
    10. ' return' → logprob: -8.167699813842773

Token 8: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12280847877264023
    2. '    ' → logprob: -3.4978084564208984
    3. ' if' → logprob: -3.6228084564208984
    4. '```' → logprob: -3.7478084564208984
    5. 'if' → logprob: -4.122808456420898
    6. 'return' → logprob: -4.747808456420898
    7. ' return' → logprob: -6.122808456420898
    8. 'i' → logprob: -6.247808456420898
    9. '       ' → logprob: -6.622808456420898
    10. ' ' → logprob: -6.747808456420898

Token 9: ' -' (ID: 533)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7005240321159363
    2. '   ' → logprob: -1.325524091720581
    3. 'if' → logprob: -2.325524091720581
    4. 'return' → logprob: -3.575524091720581
    5. ' return' → logprob: -3.575524091720581
    6. ' ' → logprob: -3.825524091720581
    7. '    ' → logprob: -4.075523853302002
    8. '#' → logprob: -4.325523853302002
    9. ' #' → logprob: -4.950523853302002
    10. 'i' → logprob: -4.950523853302002

Token 10: 'diff' (ID: 31460)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5063993334770203
    2. '-' → logprob: -1.381399393081665
    3. ''' → logprob: -2.631399393081665
    4. '>' → logprob: -3.381399393081665
    5. '#' → logprob: -4.506399154663086
    6. '=' → logprob: -5.131399154663086
    7. ' if' → logprob: -5.131399154663086
    8. '   ' → logprob: -6.006399154663086
    9. ' >' → logprob: -6.131399154663086
    10. '"' → logprob: -6.631399154663086

Token 11: ' because' (ID: 2236)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3675578236579895
    2. ')' → logprob: -2.1175577640533447
    3. '   ' → logprob: -2.2425577640533447
    4. '-' → logprob: -4.117558002471924
    5. 'd' → logprob: -4.867558002471924
    6. '```' → logprob: -4.867558002471924
    7. ' return' → logprob: -4.867558002471924
    8. ' )' → logprob: -5.117558002471924
    9. 'c' → logprob: -5.367558002471924
    10. 'r' → logprob: -5.492558002471924

Token 12: ' we' (ID: 581)
  Prédit: ' we'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.39636728167533875
    2. ' the' → logprob: -1.5213673114776611
    3. ' shifting' → logprob: -3.646367311477661
    4. 'we' → logprob: -4.396367073059082
    5. ' we're' → logprob: -4.521367073059082
    6. ' in' → logprob: -4.771367073059082
    7. ' c' → logprob: -4.771367073059082
    8. ' you' → logprob: -5.146367073059082
    9. ' to' → logprob: -5.396367073059082
    10. ' it' → logprob: -5.396367073059082

Token 13: ' are' (ID: 553)
  Prédit: ' want'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' want' → logprob: -0.04505327343940735
    2. ' are' → logprob: -3.545053243637085
    3. ''re' → logprob: -5.795053482055664
    4. ' shift' → logprob: -5.795053482055664
    5. ' need' → logprob: -5.920053482055664
    6. 'want' → logprob: -6.045053482055664
    7. ' have' → logprob: -7.420053482055664
    8. 'shift' → logprob: -7.795053482055664
    9. 'are' → logprob: -7.795053482055664
    10. ' wrap' → logprob: -7.920053482055664

Token 14: ' reversing' (ID: 156690)
  Prédit: ' shifting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shifting' → logprob: -0.6066176891326904
    2. 'sh' → logprob: -1.6066176891326904
    3. 'decrypt' → logprob: -3.1066176891326904
    4. ' decoding' → logprob: -3.3566176891326904
    5. 'undo' → logprob: -3.4816176891326904
    6. ' decrypt' → logprob: -3.6066176891326904
    7. ' undo' → logprob: -3.7316176891326904
    8. ' reversing' → logprob: -4.7316179275512695
    9. 'dec' → logprob: -4.8566179275512695
    10. ' implementing' → logprob: -4.9816179275512695

Token 15: ' the' (ID: 290)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.046323373913764954
    2. '   ' → logprob: -3.296323299407959
    3. 'return' → logprob: -5.671323299407959
    4. ' ' → logprob: -6.921323299407959
    5. '<|end|>' → logprob: -7.421323299407959
    6. '```' → logprob: -7.546323299407959
    7. 's' → logprob: -7.671323299407959
    8. ' return' → logprob: -7.796323299407959
    9. ',' → logprob: -8.421323776245117
    10. 'n' → logprob: -8.546323776245117

Token 16: ' encryption' (ID: 48827)
  Prédit: ' shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shift' → logprob: -0.1617221236228943
    2. 'shift' → logprob: -2.286722183227539
    3. ' encryption' → logprob: -4.161722183227539
    4. ' original' → logprob: -4.911722183227539
    5. ' direction' → logprob: -5.036722183227539
    6. ' encoding' → logprob: -6.036722183227539
    7. 'cipher' → logprob: -6.161722183227539
    8. ' process' → logprob: -6.161722183227539
    9. 'en' → logprob: -6.286722183227539
    10. ' cipher' → logprob: -6.286722183227539

Token 17: ' (' (ID: 350)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 18: 'which' (ID: 13980)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 19: ' shifted' (ID: 58644)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6277598142623901
    2. ' was' → logprob: -1.0027598142623901
    3. ' shifts' → logprob: -3.2527599334716797
    4. ')' → logprob: -4.50275993347168
    5. ' used' → logprob: -4.50275993347168
    6. ' caused' → logprob: -4.87775993347168
    7. ' )' → logprob: -5.62775993347168
    8. ' means' → logprob: -5.75275993347168
    9. 'was' → logprob: -6.00275993347168
    10. ' def' → logprob: -6.12775993347168

Token 20: ' backward' (ID: 58986)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8906773924827576
    2. ' by' → logprob: -1.6406774520874023
    3. ' each' → logprob: -2.1406774520874023
    4. ' characters' → logprob: -2.1406774520874023
    5. 'c' → logprob: -2.6406774520874023
    6. ' c' → logprob: -4.015677452087402
    7. 'the' → logprob: -4.140677452087402
    8. ' backwards' → logprob: -4.640677452087402
    9. ' forward' → logprob: -4.765677452087402
    10. ' letters' → logprob: -4.765677452087402

Token 21: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.056211378425359726
    2. ' by' → logprob: -3.181211471557617
    3. ' in' → logprob: -4.931211471557617
    4. ' )' → logprob: -5.431211471557617
    5. ' to' → logprob: -8.306211471557617
    6. '   ' → logprob: -8.556211471557617
    7. 'def' → logprob: -8.931211471557617
    8. ' for' → logprob: -8.931211471557617
    9. 'in' → logprob: -9.056211471557617
    10. 'by' → logprob: -9.181211471557617

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2203049659729004
    2. ')' → logprob: -1.7203049659729004
    3. ' return' → logprob: -4.8453049659729
    4. 'return' → logprob: -5.5953049659729
    5. ' )' → logprob: -5.9703049659729
    6. '    ' → logprob: -6.4703049659729
    7. '```' → logprob: -6.8453049659729
    8. ' ' → logprob: -7.5953049659729
    9. ',' → logprob: -8.345304489135742
    10. '`' → logprob: -8.595304489135742

Token 23: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1803939938545227
    2. ' return' → logprob: -2.430393934249878
    3. 'return' → logprob: -2.680393934249878
    4. '    ' → logprob: -5.805394172668457
    5. ')' → logprob: -6.430394172668457
    6. '```' → logprob: -6.805394172668457
    7. 'n' → logprob: -7.180394172668457
    8. ' ' → logprob: -7.430394172668457
    9. ' )' → logprob: -8.055394172668457
    10. ',' → logprob: -9.055394172668457

Token 24: ' but' (ID: 889)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8354657888412476
    2. '   ' → logprob: -0.9604657888412476
    3. 'return' → logprob: -1.8354657888412476
    4. 'n' → logprob: -5.585465908050537
    5. 'shift' → logprob: -5.710465908050537
    6. '    ' → logprob: -5.835465908050537
    7. ')' → logprob: -5.960465908050537
    8. ' new' → logprob: -6.335465908050537
    9. ' shift' → logprob: -6.460465908050537
    10. 'result' → logprob: -6.460465908050537

Token 25: ' here' (ID: 2105)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0852669477462769
    2. ' we' → logprob: -1.0852669477462769
    3. ' since' → logprob: -2.0852670669555664
    4. ' to' → logprob: -2.7102670669555664
    5. ' in' → logprob: -4.210267066955566
    6. 'we' → logprob: -4.210267066955566
    7. ' here' → logprob: -4.335267066955566
    8. ' this' → logprob: -4.335267066955566
    9. ' diff' → logprob: -4.585267066955566
    10. ' because' → logprob: -4.835267066955566

Token 26: ' we're' (ID: 15929)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.006686125881969929
    2. ',' → logprob: -5.631686210632324
    3. 'we' → logprob: -6.256686210632324
    4. ' the' → logprob: -7.631686210632324
    5. ' ' → logprob: -8.131686210632324
    6. ' diff' → logprob: -8.881686210632324
    7. ' we're' → logprob: -9.756686210632324
    8. '    ' → logprob: -9.756686210632324
    9. 'diff' → logprob: -10.131686210632324
    10. ' is' → logprob: -11.006686210632324

Token 27: ' decoding' (ID: 105891)
  Prédit: 'sh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sh' → logprob: -0.45048531889915466
    2. ' shifting' → logprob: -1.575485348701477
    3. 'undo' → logprob: -3.7004852294921875
    4. 'app' → logprob: -3.8254852294921875
    5. '   ' → logprob: -4.2004852294921875
    6. 'decrypt' → logprob: -4.3254852294921875
    7. ' undo' → logprob: -4.5754852294921875
    8. 're' → logprob: -4.5754852294921875
    9. 'trying' → logprob: -5.2004852294921875
    10. 'going' → logprob: -5.2004852294921875

Token 28: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14957737922668457
    2. ')' → logprob: -2.2745773792266846
    3. '):' → logprob: -3.8995773792266846
    4. ',' → logprob: -4.6495771408081055
    5. ' ' → logprob: -6.3995771408081055
    6. ':' → logprob: -6.8995771408081055
    7. '):
' → logprob: -7.2745771408081055
    8. '    ' → logprob: -7.6495771408081055
    9. ' )' → logprob: -7.7745771408081055
    10. ' return' → logprob: -8.274577140808105

Token 29: ' so' (ID: 813)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.5751433372497559
    2. '   ' → logprob: -1.4501433372497559
    3. ' ):' → logprob: -2.825143337249756
    4. ')' → logprob: -2.950143337249756
    5. '    ' → logprob: -3.075143337249756
    6. ' ' → logprob: -3.700143337249756
    7. ' ):
' → logprob: -4.825143337249756
    8. ' return' → logprob: -5.200143337249756
    9. '):' → logprob: -6.450143337249756
    10. ' )
' → logprob: -6.950143337249756

Token 30: ' we' (ID: 581)
  Prédit: ' we'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.24985873699188232
    2. ' shift' → logprob: -2.374858856201172
    3. ' ' → logprob: -3.374858856201172
    4. '    ' → logprob: -3.499858856201172
    5. ' return' → logprob: -3.499858856201172
    6. ' diff' → logprob: -4.374858856201172
    7. ' the' → logprob: -5.124858856201172
    8. 'we' → logprob: -5.624858856201172
    9. ' a' → logprob: -6.249858856201172
    10. ' we're' → logprob: -6.624858856201172

Token 31: ' shift' (ID: 12847)
  Prédit: ' want'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' want' → logprob: -0.38395026326179504
    2. ' add' → logprob: -1.7589502334594727
    3. ' shift' → logprob: -2.7589502334594727
    4. ' need' → logprob: -2.8839502334594727
    5. ' are' → logprob: -4.633950233459473
    6. ' use' → logprob: -5.758950233459473
    7. ' reverse' → logprob: -6.008950233459473
    8. ' apply' → logprob: -6.383950233459473
    9. ' have' → logprob: -6.633950233459473
    10. ' ' → logprob: -6.633950233459473

Token 32: ' forward' (ID: 6687)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8586853742599487
    2. ' ' → logprob: -1.8586853742599487
    3. ' c' → logprob: -1.8586853742599487
    4. ' forward' → logprob: -2.3586854934692383
    5. '_' → logprob: -2.6086854934692383
    6. ' by' → logprob: -2.7336854934692383
    7. ' backwards' → logprob: -2.7336854934692383
    8. 'c' → logprob: -2.8586854934692383
    9. ' backward' → logprob: -2.9836854934692383
    10. '_forward' → logprob: -3.3586854934692383

Token 33: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18793633580207825
    2. ')' → logprob: -1.8129363059997559
    3. ' ' → logprob: -6.312936305999756
    4. ',' → logprob: -6.437936305999756
    5. ' )' → logprob: -6.812936305999756
    6. ' return' → logprob: -7.187936305999756
    7. '
' → logprob: -7.562936305999756
    8. 'return' → logprob: -7.687936305999756
    9. '    ' → logprob: -7.812936305999756
    10. '):' → logprob: -8.187936782836914

Token 34: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.7985391616821289
    2. 'diff' → logprob: -1.173539161682129
    3. ' -' → logprob: -1.798539161682129
    4. '-d' → logprob: -2.673539161682129
    5. '	diff' → logprob: -6.298539161682129
    6. '-' → logprob: -6.548539161682129
    7. ' ' → logprob: -6.798539161682129
    8. '1' → logprob: -7.673539161682129
    9. '(diff' → logprob: -7.673539161682129
    10. '    ' → logprob: -8.423539161682129

Token 35: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01757686585187912
    2. ')' → logprob: -4.517576694488525
    3. '
' → logprob: -6.017576694488525
    4. '```' → logprob: -7.642576694488525
    5. '\n' → logprob: -7.642576694488525
    6. ',' → logprob: -7.767576694488525
    7. ' return' → logprob: -7.767576694488525
    8. '    
' → logprob: -7.892576694488525
    9. ':' → logprob: -8.017577171325684
    10. ' ' → logprob: -8.267577171325684

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009194592945277691
    2. '
' → logprob: -6.134194374084473
    3. 'n' → logprob: -6.509194374084473
    4. ' return' → logprob: -6.634194374084473
    5. 'return' → logprob: -7.134194374084473
    6. '\n' → logprob: -7.134194374084473
    7. '    
' → logprob: -7.259194374084473
    8. '```' → logprob: -7.759194374084473
    9. ' 
' → logprob: -8.009194374084473
    10. ')' → logprob: -8.259194374084473

Token 37: ' offset' (ID: 8985)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0687057226896286
    2. ' return' → logprob: -3.3187057971954346
    3. 'return' → logprob: -4.4437055587768555
    4. 'n' → logprob: -5.0687055587768555
    5. '    ' → logprob: -5.5687055587768555
    6. ' ' → logprob: -6.6937055587768555
    7. ')' → logprob: -6.8187055587768555
    8. ' 
' → logprob: -6.9437055587768555
    9. '```' → logprob: -6.9437055587768555
    10. '    
' → logprob: -7.6937055587768555

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14315544068813324
    2. '=' → logprob: -2.018155336380005
    3. ' ' → logprob: -8.393155097961426
    4. 's' → logprob: -9.018155097961426
    5. '_' → logprob: -9.143155097961426
    6. ',' → logprob: -11.518155097961426
    7. ')' → logprob: -12.768155097961426
    8. '(' → logprob: -13.518155097961426
    9. ' +=' → logprob: -13.643155097961426
    10. ' =)' → logprob: -13.768155097961426

Token 39: ' (' (ID: 350)
  Prédit: ' ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ord' → logprob: -0.0846780389547348
    2. ' ' → logprob: -2.5846779346466064
    3. 'ord' → logprob: -5.7096781730651855
    4. '65' → logprob: -6.8346781730651855
    5. '(ord' → logprob: -7.3346781730651855
    6. '32' → logprob: -7.8346781730651855
    7. '97' → logprob: -8.334677696228027
    8. '   ' → logprob: -10.459677696228027
    9. ' (' → logprob: -11.334677696228027
    10. ' ' → logprob: -11.584677696228027

Token 40: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.16205589473247528
    2. ' ord' → logprob: -2.1620559692382812
    3. '(ord' → logprob: -3.4120559692382812
    4. '   ' → logprob: -7.537055969238281
    5. ' (' → logprob: -7.662055969238281
    6. '65' → logprob: -8.912055969238281
    7. '97' → logprob: -9.287055969238281
    8. '(' → logprob: -9.662055969238281
    9. ' ' → logprob: -9.662055969238281
    10. 'c' → logprob: -10.287055969238281

Token 41: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.004572173114866018
    2. '(' → logprob: -5.50457239151001
    3. 'c' → logprob: -8.004571914672852
    4. '('' → logprob: -8.879571914672852
    5. ')c' → logprob: -11.879571914672852
    6. ')' → logprob: -12.254571914672852
    7. ' c' → logprob: -12.879571914672852
    8. ' (' → logprob: -13.379571914672852
    9. '(a' → logprob: -14.254571914672852
    10. ' ' → logprob: -14.379571914672852

Token 42: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00344456871971488
    2. ' )' → logprob: -5.753444671630859
    3. ' ' → logprob: -9.12844467163086
    4. '')' → logprob: -9.50344467163086
    5. ')+' → logprob: -11.50344467163086
    6. '-)' → logprob: -11.50344467163086
    7. '-' → logprob: -11.75344467163086
    8. '))' → logprob: -11.75344467163086
    9. '   ' → logprob: -11.87844467163086
    10. ')-' → logprob: -11.87844467163086

Token 43: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4851592183113098
    2. '+' → logprob: -1.485159158706665
    3. ' -' → logprob: -2.235159158706665
    4. ')' → logprob: -3.610159158706665
    5. '-' → logprob: -4.485159397125244
    6. ' ' → logprob: -4.610159397125244
    7. ' )' → logprob: -6.360159397125244
    8. ')+' → logprob: -8.485158920288086
    9. '+)' → logprob: -8.485158920288086
    10. '   ' → logprob: -9.110158920288086

Token 44: ' ord' (ID: 6608)
  Prédit: '97'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '97' → logprob: -0.44328004121780396
    2. ' ord' → logprob: -1.8182799816131592
    3. 'ord' → logprob: -2.193279981613159
    4. '65' → logprob: -3.193279981613159
    5. ' ' → logprob: -3.818279981613159
    6. '32' → logprob: -4.318280220031738
    7. 'a' → logprob: -5.193280220031738
    8. '   ' → logprob: -7.068280220031738
    9. '(ord' → logprob: -7.318280220031738
    10. '96' → logprob: -8.193280220031738

Token 45: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0007437567692250013
    2. '(' → logprob: -7.250743865966797
    3. ''a' → logprob: -10.875743865966797
    4. '("' → logprob: -12.375743865966797
    5. ''' → logprob: -12.875743865966797
    6. 'a' → logprob: -13.125743865966797
    7. ')' → logprob: -13.625743865966797
    8. ''s' → logprob: -14.125743865966797
    9. '('\' → logprob: -14.250743865966797
    10. ''A' → logprob: -14.375743865966797

Token 46: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011201790533959866
    2. 'A' → logprob: -4.511201858520508
    3. 'а' → logprob: -10.011201858520508
    4. ''a' → logprob: -10.136201858520508
    5. ''' → logprob: -10.886201858520508
    6. ''A' → logprob: -11.261201858520508
    7. ' ')' → logprob: -11.511201858520508
    8. ' '' → logprob: -11.636201858520508
    9. ' a' → logprob: -12.386201858520508
    10. '0' → logprob: -12.886201858520508

Token 47: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20783644914627075
    2. '')' → logprob: -1.707836389541626
    3. ''))' → logprob: -5.707836627960205
    4. '))' → logprob: -5.832836627960205
    5. ' )' → logprob: -9.957836151123047
    6. '+' → logprob: -10.207836151123047
    7. ''' → logprob: -10.957836151123047
    8. ' +' → logprob: -11.457836151123047
    9. '")' → logprob: -11.582836151123047
    10. ')+' → logprob: -11.832836151123047

Token 48: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1367703676223755
    2. '+' → logprob: -2.136770248413086
    3. ')' → logprob: -4.636770248413086
    4. ' ' → logprob: -10.136770248413086
    5. ' )' → logprob: -10.261770248413086
    6. '+)' → logprob: -11.886770248413086
    7. ')+' → logprob: -11.886770248413086
    8. '   ' → logprob: -12.136770248413086
    9. ' -' → logprob: -12.636770248413086
    10. '    ' → logprob: -12.886770248413086

Token 49: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.34857913851737976
    2. ' diff' → logprob: -1.2235791683197021
    3. '	diff' → logprob: -9.098579406738281
    4. '(diff' → logprob: -11.598579406738281
    5. '    ' → logprob: -12.223579406738281
    6. ')' → logprob: -12.848579406738281
    7. ' ' → logprob: -13.473579406738281
    8. '1' → logprob: -13.723579406738281
    9. '_diff' → logprob: -14.098579406738281
    10. '   ' → logprob: -14.598579406738281

Token 50: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.3213025744771585e-05
    2. ' )' → logprob: -10.750033378601074
    3. ')%' → logprob: -12.250033378601074
    4. '   ' → logprob: -12.875033378601074
    5. '))' → logprob: -13.000033378601074
    6. '')' → logprob: -14.375033378601074
    7. '`)' → logprob: -14.375033378601074
    8. ')))' → logprob: -16.000032424926758
    9. '")' → logprob: -16.250032424926758
    10. '%' → logprob: -16.250032424926758

Token 51: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032459204085171223
    2. ' )' → logprob: -6.503245830535889
    3. ')%' → logprob: -7.003245830535889
    4. '%' → logprob: -7.378245830535889
    5. ' %' → logprob: -8.628246307373047
    6. '   ' → logprob: -11.378246307373047
    7. '`)' → logprob: -12.628246307373047
    8. '%)' → logprob: -12.878246307373047
    9. '')' → logprob: -13.003246307373047
    10. ' ' → logprob: -13.128246307373047

Token 52: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -20.500001907348633
    4. '27' → logprob: -21.000001907348633
    5. '25' → logprob: -21.625001907348633
    6. 'abcdefghijklmnopqrstuvwxyz' → logprob: -21.750001907348633
    7. '   ' → logprob: -22.125001907348633
    8. '2' → logprob: -23.375001907348633
    9. '262' → logprob: -23.750001907348633
    10. '{' → logprob: -23.750001907348633

Token 53: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '```' → logprob: -20.375
    4. '27' → logprob: -21.75
    5. '25' → logprob: -22.125
    6. '2' → logprob: -22.125
    7. 'abcdefghijklmnopqrstuvwxyz' → logprob: -22.5
    8. '   ' → logprob: -22.875
    9. '{' → logprob: -23.5
    10. '262' → logprob: -24.0

Token 54: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08778078109025955
    2. '   ' → logprob: -2.837780714035034
    3. '
' → logprob: -4.962780952453613
    4. 'return' → logprob: -4.962780952453613
    5. '+' → logprob: -6.087780952453613
    6. ')
' → logprob: -6.212780952453613
    7. ' )' → logprob: -6.337780952453613
    8. ' +' → logprob: -6.962780952453613
    9. ' return' → logprob: -7.087780952453613
    10. ')+' → logprob: -7.337780952453613

Token 55: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2441425919532776
    2. '   ' → logprob: -1.6191425323486328
    3. 'return' → logprob: -5.119142532348633
    4. ' return' → logprob: -5.619142532348633
    5. '<|end|>' → logprob: -5.744142532348633
    6. '
' → logprob: -6.494142532348633
    7. ' ' → logprob: -7.119142532348633
    8. ' )' → logprob: -7.369142532348633
    9. ')
' → logprob: -7.494142532348633
    10. 'a' → logprob: -7.744142532348633

Token 56: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0972735807299614
    2. 'return' (adapté à ' return') → logprob: -2.847273588180542
    3. ' return' → logprob: -3.472273588180542
    4. 'r' → logprob: -6.722273349761963
    5. ' ' → logprob: -7.597273349761963
    6. '    ' → logprob: -7.972273349761963
    7. '    
' → logprob: -8.097273826599121
    8. 'n' → logprob: -8.472273826599121
    9. ')' → logprob: -8.722273826599121
    10. '	return' → logprob: -8.722273826599121

Token 57: ' chr' (ID: 42767)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.38694387674331665
    2. ' chr' → logprob: -1.1369438171386719
    3. '(chr' → logprob: -9.636943817138672
    4. ' ' → logprob: -12.761943817138672
    5. '   ' → logprob: -12.886943817138672
    6. '_chr' → logprob: -13.636943817138672
    7. ' ' → logprob: -15.261943817138672
    8. ''' → logprob: -15.636943817138672
    9. ' Chr' → logprob: -16.136943817138672
    10. '  ' → logprob: -16.136943817138672

Token 58: '(ord' (ID: 199585)
  Prédit: '(ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ord' → logprob: -0.056291382759809494
    2. '(' → logprob: -2.931291341781616
    3. '(offset' → logprob: -6.681291580200195
    4. ' (' → logprob: -9.306291580200195
    5. '((' → logprob: -10.056291580200195
    6. '('' → logprob: -12.431291580200195
    7. 'ord' → logprob: -12.556291580200195
    8. 'offset' → logprob: -13.056291580200195
    9. ' ' → logprob: -13.306291580200195
    10. '(
' → logprob: -13.681291580200195

Token 59: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0003706126008182764
    2. '(' → logprob: -8.625370979309082
    3. ''a' → logprob: -8.625370979309082
    4. 'a' → logprob: -12.125370979309082
    5. '(a' → logprob: -12.125370979309082
    6. ''' → logprob: -15.125370979309082
    7. ''s' → logprob: -15.750370979309082
    8. '("' → logprob: -15.875370979309082
    9. ')' → logprob: -17.375370025634766
    10. ''z' → logprob: -18.000370025634766

Token 60: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.5776860184123507e-06
    2. ''a' → logprob: -12.87500286102295
    3. 'а' → logprob: -18.750001907348633
    4. ''' → logprob: -18.750001907348633
    5. 'abcdefghijklmnopqrstuvwxyz' → logprob: -19.625001907348633
    6. ' a' → logprob: -20.125001907348633
    7. '```' → logprob: -20.375001907348633
    8. '')' → logprob: -21.375001907348633
    9. '`' → logprob: -21.750001907348633
    10. ')a' → logprob: -22.875001907348633

Token 61: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018216200172901154
    2. '')' → logprob: -4.018216133117676
    3. ')+' → logprob: -9.893216133117676
    4. ' )' → logprob: -11.893216133117676
    5. '+' → logprob: -12.268216133117676
    6. '")' → logprob: -13.518216133117676
    7. '+)' → logprob: -14.018216133117676
    8. ' +' → logprob: -14.143216133117676
    9. '`)' → logprob: -15.143216133117676
    10. '+')' → logprob: -15.143216133117676

Token 62: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12693031132221222
    2. ' +' → logprob: -2.1269302368164062
    3. ')' → logprob: -14.126930236816406
    4. ')+' → logprob: -14.501930236816406
    5. '+)' → logprob: -14.876930236816406
    6. ' plus' → logprob: -15.501930236816406
    7. ' ' → logprob: -15.626930236816406
    8. '   ' → logprob: -17.376930236816406
    9. '+c' → logprob: -17.376930236816406
    10. '+
' → logprob: -17.501930236816406

Token 63: ' offset' (ID: 8985)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.0031777136027812958
    2. ' offset' → logprob: -5.753177642822266
    3. '	offset' → logprob: -17.253177642822266
    4. '[offset' → logprob: -18.253177642822266
    5. ')' → logprob: -18.503177642822266
    6. '(offset' → logprob: -19.128177642822266
    7. 'off' → logprob: -19.878177642822266
    8. ' ' → logprob: -20.253177642822266
    9. '.offset' → logprob: -20.378177642822266
    10. '_offset' → logprob: -20.628177642822266

Token 64: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.125
    3. ')`' → logprob: -17.0
    4. '))' → logprob: -17.75
    5. ')
' → logprob: -18.375
    6. '')' → logprob: -18.875
    7. '),' → logprob: -19.375
    8. '`)' → logprob: -19.625
    9. '}' → logprob: -20.0
    10. ')}' → logprob: -20.25

Token 65: 'while' (ID: 7032)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9960220456123352
    2. '<|end|>' → logprob: -1.3710219860076904
    3. ')' → logprob: -1.9960219860076904
    4. '#' → logprob: -2.3710219860076904
    5. '\n' → logprob: -2.8710219860076904
    6. '```' → logprob: -3.7460219860076904
    7. ' ' → logprob: -3.9960219860076904
    8. 'newline' → logprob: -4.3710222244262695
    9. 'def' → logprob: -4.7460222244262695
    10. '\' → logprob: -5.1210222244262695

Token 66: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.002003461355343461
    2. ' ' → logprob: -6.3770036697387695
    3. ' not' → logprob: -8.87700366973877
    4. 'True' → logprob: -9.12700366973877
    5. ' i' → logprob: -10.50200366973877
    6. ' input' → logprob: -12.37700366973877
    7. ' user' → logprob: -12.50200366973877
    8. '_' → logprob: -12.62700366973877
    9. ' a' → logprob: -12.75200366973877
    10. ' ' → logprob: -13.25200366973877

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001422770437784493
    2. ' :' → logprob: -9.375142097473145
    3. ':**' → logprob: -11.125142097473145
    4. ':
' → logprob: -11.250142097473145
    5. '):' → logprob: -11.500142097473145
    6. '():' → logprob: -11.750142097473145
    7. '':'' → logprob: -13.000142097473145
    8. ',' → logprob: -13.625142097473145
    9. ':def' → logprob: -13.875142097473145
    10. '   ' → logprob: -14.125142097473145

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0055528320372104645
    2. '    
' → logprob: -6.255552768707275
    3. ' input' → logprob: -6.505552768707275
    4. 'input' → logprob: -7.880552768707275
    5. ' readline' → logprob: -8.380553245544434
    6. '    ' → logprob: -8.505553245544434
    7. '<|end|>' → logprob: -8.630553245544434
    8. ':' → logprob: -8.755553245544434
    9. ' c' → logprob: -9.130553245544434
    10. ' 
' → logprob: -9.255553245544434

Token 69: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.876214861869812
    2. ' user' → logprob: -1.126214861869812
    3. ' inp' → logprob: -2.3762149810791016
    4. 'user' → logprob: -2.7512149810791016
    5. ' input' → logprob: -3.7512149810791016
    6. 'text' → logprob: -3.8762149810791016
    7. ' text' → logprob: -4.251214981079102
    8. ' c' → logprob: -4.876214981079102
    9. 'input' → logprob: -5.001214981079102
    10. ' line' → logprob: -5.001214981079102

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05237840861082077
    2. '=' → logprob: -3.1773784160614014
    3. ' ' → logprob: -6.177378177642822
    4. ',' → logprob: -6.302378177642822
    5. '  ' → logprob: -7.052378177642822
    6. 'o' → logprob: -7.052378177642822
    7. '_' → logprob: -7.427378177642822
    8. '   ' → logprob: -7.427378177642822
    9. ' >' → logprob: -7.427378177642822
    10. '>' → logprob: -7.552378177642822

Token 71: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6319065093994141
    2. ' int' → logprob: -1.256906509399414
    3. ' input' → logprob: -2.006906509399414
    4. 'input' → logprob: -3.006906509399414
    5. ' ' → logprob: -11.006906509399414
    6. '=int' → logprob: -12.131906509399414
    7. '<int' → logprob: -12.631906509399414
    8. '(int' → logprob: -13.131906509399414
    9. '   ' → logprob: -13.131906509399414
    10. '  ' → logprob: -13.131906509399414

Token 72: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07472705096006393
    2. '()' → logprob: -2.6997270584106445
    3. '('' → logprob: -5.8247270584106445
    4. '("("' → logprob: -6.5747270584106445
    5. '("' → logprob: -8.449727058410645
    6. '("")' → logprob: -9.824727058410645
    7. '(`' → logprob: -10.074727058410645
    8. '().' → logprob: -10.324727058410645
    9. '()(' → logprob: -10.824727058410645
    10. ' ()' → logprob: -12.074727058410645

Token 73: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0007207724265754223
    2. 'rstrip' → logprob: -7.250720977783203
    3. 'lower' → logprob: -11.500720977783203
    4. 'split' → logprob: -14.875720977783203
    5. ' strip' → logprob: -15.750720977783203
    6. 'replace' → logprob: -16.375720977783203
    7. 'isdigit' → logprob: -16.500720977783203
    8. 'str' → logprob: -18.250720977783203
    9. 'l' → logprob: -18.500720977783203
    10. 'startswith' → logprob: -19.250720977783203

Token 74: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02941937744617462
    2. '(' → logprob: -3.654419422149658
    3. '('' → logprob: -5.904419422149658
    4. '("("' → logprob: -8.5294189453125
    5. ''' → logprob: -9.4044189453125
    6. '("' → logprob: -10.6544189453125
    7. '().' → logprob: -10.9044189453125
    8. '()`' → logprob: -12.0294189453125
    9. '"' → logprob: -12.2794189453125
    10. '(`' → logprob: -12.4044189453125

Token 75: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.23114921152591705
    2. 'if' (adapté à ' if') → logprob: -1.6061491966247559
    3. 'i' → logprob: -5.356149196624756
    4. ' i' → logprob: -7.731149196624756
    5. ' ' → logprob: -8.231149673461914
    6. '<|end|>' → logprob: -8.356149673461914
    7. 'I' → logprob: -11.731149673461914
    8. ' 
' → logprob: -11.856149673461914
    9. 'If' → logprob: -11.981149673461914
    10. '   ' → logprob: -11.981149673461914

Token 77: ' N' (ID: 478)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0078332694247365
    2. ' N' → logprob: -4.882833480834961
    3. ' ' → logprob: -9.132833480834961
    4. 'not' → logprob: -9.132833480834961
    5. 'N' → logprob: -11.757833480834961
    6. ' ' → logprob: -12.757833480834961
    7. '	not' → logprob: -16.25783348083496
    8. '  ' → logprob: -16.38283348083496
    9. '<|end|>' → logprob: -16.63283348083496
    10. ' n' → logprob: -17.63283348083496

Token 78: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0013646431034430861
    2. '==' → logprob: -6.626364707946777
    3. ' ' → logprob: -10.626364707946777
    4. ' =' → logprob: -11.876364707946777
    5. ' .' → logprob: -13.251364707946777
    6. '.' → logprob: -13.376364707946777
    7. '=' → logprob: -13.751364707946777
    8. ')' → logprob: -14.251364707946777
    9. ' =="' → logprob: -15.001364707946777
    10. '.startswith' → logprob: -15.501364707946777

Token 79: ' '' (ID: 461)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.6247386932373047
    2. '''' → logprob: -1.4997386932373047
    3. '"' → logprob: -1.9997386932373047
    4. ''' → logprob: -2.2497386932373047
    5. ' ""' → logprob: -8.624738693237305
    6. '"":' → logprob: -9.124738693237305
    7. ' ''' → logprob: -10.249738693237305
    8. '"""' → logprob: -10.499738693237305
    9. ''''' → logprob: -10.499738693237305
    10. '""""' → logprob: -10.499738693237305

Token 80: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.44497549533843994
    2. '''' → logprob: -1.56997549533844
    3. '"' → logprob: -3.1949753761291504
    4. '':' → logprob: -3.3199753761291504
    5. '0' → logprob: -3.4449753761291504
    6. '"":' → logprob: -4.44497537612915
    7. '""' → logprob: -5.06997537612915
    8. ''ex' → logprob: -5.31997537612915
    9. 'q' → logprob: -5.69497537612915
    10. '```' → logprob: -5.69497537612915

Token 81: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.017158862203359604
    2. ':' → logprob: -4.1421589851379395
    3. '':
' → logprob: -7.3921589851379395
    4. ''' → logprob: -7.8921589851379395
    5. '':
' → logprob: -9.767158508300781
    6. '":' → logprob: -10.017158508300781
    7. ':
' → logprob: -12.017158508300781
    8. ' ':' → logprob: -12.392158508300781
    9. '):' → logprob: -12.392158508300781
    10. '   ' → logprob: -12.642158508300781

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014355534687638283
    2. '   ' → logprob: -4.264355659484863
    3. ' break' → logprob: -9.264355659484863
    4. '	break' → logprob: -10.639355659484863
    5. 'break' → logprob: -11.389355659484863
    6. '     ' → logprob: -11.389355659484863
    7. ' ' → logprob: -11.764355659484863
    8. '      ' → logprob: -11.764355659484863
    9. '    ' → logprob: -12.014355659484863
    10. ':' → logprob: -12.014355659484863

Token 83: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5966693162918091
    2. '       ' → logprob: -0.8466693162918091
    3. 'break' (adapté à ' break') → logprob: -4.2216691970825195
    4. '   ' → logprob: -5.8466691970825195
    5. '	break' → logprob: -5.8466691970825195
    6. '_break' → logprob: -10.84666919708252
    7. '\n' → logprob: -11.22166919708252
    8. '           ' → logprob: -11.72166919708252
    9. '-break' → logprob: -12.59666919708252
    10. '```' → logprob: -12.72166919708252

Token 84: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02315533719956875
    2. '
' → logprob: -4.523155212402344
    3. '    
' → logprob: -4.773155212402344
    4. 'n' → logprob: -6.898155212402344
    5. '```' → logprob: -7.523155212402344
    6. '\n' → logprob: -8.648155212402344
    7. ' 
' → logprob: -8.648155212402344
    8. '    ' → logprob: -9.023155212402344
    9. '   
' → logprob: -9.148155212402344
    10. 'c' → logprob: -9.398155212402344

Token 85: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31963473558425903
    2. '   ' → logprob: -1.6946346759796143
    3. '    
' → logprob: -2.5696346759796143
    4. ' 
' → logprob: -5.694634914398193
    5. 'n' → logprob: -5.944634914398193
    6. '```' → logprob: -6.319634914398193
    7. '   
' → logprob: -6.319634914398193
    8. '  
' → logprob: -6.569634914398193
    9. '    ' → logprob: -8.319634437561035
    10. '<|end|>' → logprob: -8.444634437561035

Token 86: ' N' (ID: 478)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.5938552618026733
    2. 'n' → logprob: -1.9688552618026733
    3. ' n' → logprob: -1.9688552618026733
    4. '   ' → logprob: -2.093855381011963
    5. 'd' → logprob: -2.343855381011963
    6. ' key' → logprob: -2.843855381011963
    7. '    
' → logprob: -3.343855381011963
    8. ' s' → logprob: -3.468855381011963
    9. '
' → logprob: -3.843855381011963
    10. ' N' → logprob: -4.468855381011963

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13767212629318237
    2. '=' → logprob: -2.262672185897827
    3. ' ' → logprob: -4.262671947479248
    4. ',' → logprob: -5.137671947479248
    5. '.' → logprob: -6.387671947479248
    6. ')' → logprob: -7.137671947479248
    7. '[' → logprob: -7.387671947479248
    8. 's' → logprob: -7.887671947479248
    9. '_' → logprob: -8.512672424316406
    10. '.split' → logprob: -8.762672424316406

Token 88: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.31340086460113525
    2. ' int' → logprob: -1.3134008646011353
    3. '[int' → logprob: -9.063401222229004
    4. 'len' → logprob: -12.063401222229004
    5. '(int' → logprob: -12.813401222229004
    6. '   ' → logprob: -12.813401222229004
    7. '[' → logprob: -13.438401222229004
    8. ' [' → logprob: -13.563401222229004
    9. '<int' → logprob: -13.688401222229004
    10. '  ' → logprob: -13.813401222229004

Token 89: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.386891633272171
    2. '(' → logprob: -1.1368916034698486
    3. '()' → logprob: -11.88689136505127
    4. '(
' → logprob: -12.38689136505127
    5. '('' → logprob: -12.51189136505127
    6. ' (' → logprob: -12.88689136505127
    7. '(input' → logprob: -14.01189136505127
    8. '(n' → logprob: -14.38689136505127
    9. '(`' → logprob: -15.13689136505127
    10. '(

' → logprob: -15.13689136505127

Token 90: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002096197713399306
    2. ' )' → logprob: -8.87520980834961
    3. ')
' → logprob: -10.25020980834961
    4. '+' → logprob: -11.87520980834961
    5. '*' → logprob: -12.37520980834961
    6. '   ' → logprob: -12.75020980834961
    7. '[' → logprob: -12.75020980834961
    8. '))' → logprob: -13.00020980834961
    9. ' ' → logprob: -13.12520980834961
    10. '')' → logprob: -13.25020980834961

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5997344851493835
    2. ' 
' → logprob: -1.7247345447540283
    3. ' ' → logprob: -2.5997345447540283
    4. '
' → logprob: -2.8497345447540283
    5. '    
' → logprob: -2.8497345447540283
    6. 'n' → logprob: -3.8497345447540283
    7. 'a' → logprob: -4.099734306335449
    8. '  
' → logprob: -5.224734306335449
    9. '    ' → logprob: -5.474734306335449
    10. ')' → logprob: -5.599734306335449

Token 92: ' message' (ID: 3176)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013377861119806767
    2. '_' → logprob: -5.013377666473389
    3. '=' → logprob: -5.263377666473389
    4. ' ' → logprob: -6.763377666473389
    5. 's' → logprob: -9.763378143310547
    6. '[' → logprob: -9.888378143310547
    7. '_input' → logprob: -10.013378143310547
    8. ',' → logprob: -10.138378143310547
    9. '(' → logprob: -10.763378143310547
    10. '[:]' → logprob: -11.138378143310547

Token 94: ' list' (ID: 1562)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.062011487782001495
    2. 'input' → logprob: -2.812011480331421
    3. ' ' → logprob: -11.31201171875
    4. ' []' → logprob: -11.56201171875
    5. '[]' → logprob: -12.18701171875
    6. '   ' → logprob: -12.43701171875
    7. '[input' → logprob: -12.93701171875
    8. ' list' → logprob: -13.31201171875
    9. '(input' → logprob: -13.56201171875
    10. '"' → logprob: -13.56201171875

Token 95: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03809599578380585
    2. '(' → logprob: -3.2880959510803223
    3. '()' → logprob: -9.91309642791748
    4. '('' → logprob: -13.91309642791748
    5. '(str' → logprob: -14.03809642791748
    6. '(eval' → logprob: -14.41309642791748
    7. '(
' → logprob: -14.53809642791748
    8. '(raw' → logprob: -14.91309642791748
    9. '("("' → logprob: -14.91309642791748
    10. 'input' → logprob: -15.66309642791748

Token 96: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3537992537021637
    2. '())' → logprob: -1.3537992238998413
    3. '().' → logprob: -3.228799343109131
    4. ')' → logprob: -10.103798866271973
    5. '();)' → logprob: -10.978798866271973
    6. '()))' → logprob: -11.228798866271973
    7. '()>' → logprob: -11.353798866271973
    8. '());' → logprob: -11.728798866271973
    9. '()).' → logprob: -11.728798866271973
    10. '()]' → logprob: -12.603798866271973

Token 97: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0005786505062133074
    2. 'lower' → logprob: -7.500578880310059
    3. 'rstrip' → logprob: -10.625578880310059
    4. ' strip' → logprob: -14.000578880310059
    5. 'split' → logprob: -14.875578880310059
    6. '.strip' → logprob: -16.750577926635742
    7. '_strip' → logprob: -16.875577926635742
    8. '(strip' → logprob: -16.875577926635742
    9. 'upper' → logprob: -17.500577926635742
    10. 'read' → logprob: -18.750577926635742

Token 98: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0487508699297905
    2. '()' → logprob: -3.048750877380371
    3. ')' → logprob: -8.923750877380371
    4. ' ())' → logprob: -11.423750877380371
    5. '()))' → logprob: -11.798750877380371
    6. '();)' → logprob: -12.423750877380371
    7. '())
' → logprob: -12.798750877380371
    8. '().' → logprob: -13.548750877380371
    9. '()]' → logprob: -14.173750877380371
    10. '())

' → logprob: -14.423750877380371

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7064904570579529
    2. '
' → logprob: -1.0814905166625977
    3. '    
' → logprob: -2.8314905166625977
    4. 'for' → logprob: -3.7064905166625977
    5. ' for' → logprob: -3.8314905166625977
    6. '<|end|>' → logprob: -4.206490516662598
    7. ' 
' → logprob: -4.331490516662598
    8. ' ' → logprob: -4.456490516662598
    9. '    ' → logprob: -5.456490516662598
    10. '     
' → logprob: -6.331490516662598

Token 100: ' swaps' (ID: 150699)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9546933770179749
    2. 'for' → logprob: -1.95469331741333
    3. ' ' → logprob: -2.45469331741333
    4. ' for' → logprob: -2.45469331741333
    5. 'd' → logprob: -2.57969331741333
    6. ' 
' → logprob: -2.70469331741333
    7. '    
' → logprob: -3.45469331741333
    8. 'diff' → logprob: -3.45469331741333
    9. 'i' → logprob: -3.95469331741333
    10. '
' → logprob: -3.95469331741333

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00372573034837842
    2. '=' → logprob: -5.628725528717041
    3. ' ' → logprob: -9.7537260055542
    4. '_' → logprob: -10.5037260055542
    5. '(' → logprob: -11.1287260055542
    6. '   ' → logprob: -12.1287260055542
    7. '[' → logprob: -12.7537260055542
    8. ',' → logprob: -12.8787260055542
    9. '  ' → logprob: -13.5037260055542
    10. ')' → logprob: -13.5037260055542

Token 102: ' [' (ID: 723)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: 'tuple' (ID: 52834)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8587777614593506
    2. 'list' → logprob: -1.9837777614593506
    3. 'tuple' → logprob: -2.2337777614593506
    4. '0' → logprob: -2.3587777614593506
    5. 'int' → logprob: -2.4837777614593506
    6. '[]' → logprob: -2.8587777614593506
    7. 'map' → logprob: -3.1087777614593506
    8. '()]' → logprob: -3.6087777614593506
    9. 'input' → logprob: -5.23377799987793
    10. '(int' → logprob: -5.48377799987793

Token 104: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.2042466700077057
    2. '(input' → logprob: -1.7042466402053833
    3. '(int' → logprob: -6.204246520996094
    4. '(' → logprob: -7.329246520996094
    5. '()' → logprob: -9.454246520996094
    6. 'input' → logprob: -10.579246520996094
    7. 'map' → logprob: -10.954246520996094
    8. '()]' → logprob: -11.329246520996094
    9. '(i' → logprob: -12.079246520996094
    10. '(
' → logprob: -12.454246520996094

Token 105: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.04391331598162651
    2. '(str' → logprob: -3.1689133644104004
    3. '(' → logprob: -7.5439133644104
    4. 'str' → logprob: -8.918912887573242
    5. 'int' → logprob: -9.293912887573242
    6. ')' → logprob: -9.668912887573242
    7. '(lambda' → logprob: -10.293912887573242
    8. '(ord' → logprob: -11.293912887573242
    9. ',int' → logprob: -11.418912887573242
    10. ']int' → logprob: -11.543912887573242

Token 106: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.02455458603799343
    2. ',input' → logprob: -4.14955472946167
    3. 'input' → logprob: -5.14955472946167
    4. ')' → logprob: -6.52455472946167
    5. '(' → logprob: -7.02455472946167
    6. ',' → logprob: -8.649554252624512
    7. '=input' → logprob: -10.399554252624512
    8. '))' → logprob: -10.399554252624512
    9. ' input' → logprob: -10.649554252624512
    10. ')]' → logprob: -11.399554252624512

Token 107: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006758236791938543
    2. ' input' → logprob: -5.006758213043213
    3. ')' → logprob: -10.756758689880371
    4. '(input' → logprob: -11.256758689880371
    5. ',input' → logprob: -12.881758689880371
    6. '))' → logprob: -13.006758689880371
    7. '   ' → logprob: -14.131758689880371
    8. ' ' → logprob: -14.256758689880371
    9. '=input' → logprob: -14.506758689880371
    10. '[input' → logprob: -15.006758689880371

Token 108: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0007392307161353528
    2. '()' → logprob: -7.250739097595215
    3. '(' → logprob: -11.750739097595215
    4. ' ().' → logprob: -11.875739097595215
    5. '   ' → logprob: -12.375739097595215
    6. ' ' → logprob: -12.500739097595215
    7. '.' → logprob: -13.250739097595215
    8. '()
' → logprob: -13.375739097595215
    9. ')' → logprob: -13.625739097595215
    10. '	' → logprob: -14.750739097595215

Token 109: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.04859213903546333
    2. 'strip' → logprob: -3.0485920906066895
    3. 'rstrip' → logprob: -12.798592567443848
    4. ' split' → logprob: -13.548592567443848
    5. 'read' → logprob: -14.798592567443848
    6. ' strip' → logprob: -15.423592567443848
    7. '(split' → logprob: -15.673592567443848
    8. '(strip' → logprob: -18.54859161376953
    9. 'replace' → logprob: -18.92359161376953
    10. 'str' → logprob: -19.17359161376953

Token 110: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.002101252321153879
    2. '()' → logprob: -6.502101421356201
    3. '()))
' → logprob: -8.002100944519043
    4. '))' → logprob: -9.377100944519043
    5. '())' → logprob: -9.377100944519043
    6. '().' → logprob: -10.002100944519043
    7. '(' → logprob: -10.502100944519043
    8. '('' → logprob: -11.627100944519043
    9. '())))' → logprob: -12.877100944519043
    10. '()));' → logprob: -13.252100944519043

Token 111: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22277335822582245
    2. ')]' → logprob: -1.9727733135223389
    3. '()' → logprob: -3.472773313522339
    4. '()]' → logprob: -4.347773551940918
    5. 'for' → logprob: -5.222773551940918
    6. ']' → logprob: -5.472773551940918
    7. '())' → logprob: -5.472773551940918
    8. '(' → logprob: -6.597773551940918
    9. ' for' → logprob: -6.722773551940918
    10. ' ' → logprob: -9.847773551940918

Token 112: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4006775915622711
    2. '_' → logprob: -1.1506775617599487
    3. ' _' → logprob: -4.650677680969238
    4. 'range' → logprob: -5.650677680969238
    5. '(range' → logprob: -8.400677680969238
    6. '_range' → logprob: -8.400677680969238
    7. ' in' → logprob: -9.025677680969238
    8. '(' → logprob: -9.900677680969238
    9. ' i' → logprob: -11.525677680969238
    10. ' ' → logprob: -11.900677680969238

Token 113: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00019364648323971778
    2. 'in' → logprob: -9.25019359588623
    3. ' range' → logprob: -9.50019359588623
    4. '(range' → logprob: -10.87519359588623
    5. ' in' → logprob: -13.25019359588623
    6. ' ' → logprob: -14.62519359588623
    7. '   ' → logprob: -14.75019359588623
    8. '  ' → logprob: -14.87519359588623
    9. 'ran' → logprob: -15.87519359588623
    10. '```' → logprob: -16.125194549560547

Token 114: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011717714369297028
    2. ' range' → logprob: -6.751171588897705
    3. '(range' → logprob: -13.501172065734863
    4. ' ' → logprob: -16.751171112060547
    5. '	range' → logprob: -17.876171112060547
    6. '   ' → logprob: -18.001171112060547
    7. '[' → logprob: -18.126171112060547
    8. 'rang' → logprob: -18.376171112060547
    9. 'ra' → logprob: -19.001171112060547
    10. '  ' → logprob: -19.126171112060547

Token 115: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00020520923135336488
    2. '(' → logprob: -8.500205039978027
    3. '(n' → logprob: -13.625205039978027
    4. ' (' → logprob: -14.875205039978027
    5. 'N' → logprob: -16.375205993652344
    6. '(
' → logprob: -16.500205993652344
    7. '((' → logprob: -18.500205993652344
    8. ' N' → logprob: -18.625205993652344
    9. '(M' → logprob: -19.625205993652344
    10. ' ' → logprob: -19.625205993652344

Token 116: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.519893501419574e-05
    2. ']' → logprob: -9.87509536743164
    3. ')' → logprob: -10.12509536743164
    4. ' ' → logprob: -14.25009536743164
    5. ' )' → logprob: -14.25009536743164
    6. ')]
' → logprob: -14.87509536743164
    7. '))' → logprob: -15.25009536743164
    8. '   ' → logprob: -15.25009536743164
    9. ')])' → logprob: -15.50009536743164
    10. '])]' → logprob: -15.62509536743164

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33232858777046204
    2. 'for' → logprob: -1.5823285579681396
    3. ' for' → logprob: -3.4573285579681396
    4. '
' → logprob: -3.7073285579681396
    5. '    
' → logprob: -3.9573285579681396
    6. '```' → logprob: -7.582328796386719
    7. ' 
' → logprob: -8.457328796386719
    8. 'message' → logprob: -8.582328796386719
    9. '<|end|>' → logprob: -8.832328796386719
    10. 'i' → logprob: -9.082328796386719

Token 118: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002409896580502391
    2. 'decoded' → logprob: -6.627409934997559
    3. 'message' → logprob: -7.502409934997559
    4. '#' (adapté à ' #') → logprob: -8.752409934997559
    5. 'diff' → logprob: -9.377409934997559
    6. 'encoded' → logprob: -9.627409934997559
    7. ' for' → logprob: -9.877409934997559
    8. '   ' → logprob: -10.127409934997559
    9. 'result' → logprob: -10.877409934997559
    10. 'swap' → logprob: -11.627409934997559

Token 119: ' To' (ID: 2514)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021398155018687248
    2. '#' → logprob: -3.8963980674743652
    3. ' for' → logprob: -7.896398067474365
    4. '   ' → logprob: -8.521398544311523
    5. 'message' → logprob: -9.896398544311523
    6. 'decoded' → logprob: -10.771398544311523
    7. 'For' → logprob: -10.896398544311523
    8. 'def' → logprob: -10.896398544311523
    9. 'sw' → logprob: -11.021398544311523
    10. 'swap' → logprob: -11.146398544311523

Token 120: ' decode' (ID: 32043)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -1.8079149723052979
    2. '#' → logprob: -1.9329149723052979
    3. '```' → logprob: -2.432914972305298
    4. ' reverse' → logprob: -2.432914972305298
    5. '_reverse' → logprob: -3.182914972305298
    6. ' process' → logprob: -3.432914972305298
    7. 'do' → logprob: -3.557914972305298
    8. 'apply' → logprob: -3.682914972305298
    9. '
' → logprob: -3.682914972305298
    10. ' correct' → logprob: -3.807914972305298

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8621103763580322
    2. ' the' → logprob: -0.9871103763580322
    3. 'the' → logprob: -2.3621103763580322
    4. ' swaps' → logprob: -3.3621103763580322
    5. '<|end|>' → logprob: -3.6121103763580322
    6. 'message' → logprob: -3.9871103763580322
    7. ' ,' → logprob: -4.612110137939453
    8. ' message' → logprob: -4.737110137939453
    9. '   ' → logprob: -5.612110137939453
    10. '<|end|>' → logprob: -6.237110137939453

Token 122: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6862010955810547
    2. ' for' → logprob: -0.9362010955810547
    3. ' swaps' → logprob: -3.3112010955810547
    4. '#' → logprob: -3.8112010955810547
    5. 'diff' → logprob: -4.186201095581055
    6. 'reverse' → logprob: -5.186201095581055
    7. 'swap' → logprob: -5.811201095581055
    8. ' reverse' → logprob: -5.936201095581055
    9. '<|end|>' → logprob: -6.061201095581055
    10. ' #' → logprob: -6.061201095581055

Token 123: ' must' (ID: 2804)
  Prédit: ' should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' should' → logprob: -1.0042721033096313
    2. ' need' → logprob: -1.6292721033096313
    3. ' want' → logprob: -1.7542721033096313
    4. 'apply' → logprob: -3.129271984100342
    5. 'for' → logprob: -3.254271984100342
    6. ' apply' → logprob: -3.379271984100342
    7. ' reverse' → logprob: -3.879271984100342
    8. 'should' → logprob: -3.879271984100342
    9. ' for' → logprob: -4.004271984100342
    10. 'reverse' → logprob: -4.004271984100342

Token 124: ' reverse' (ID: 18199)
  Prédit: 'apply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apply' → logprob: -0.3945850133895874
    2. 'perform' → logprob: -2.144585132598877
    3. 'reverse' → logprob: -2.519585132598877
    4. ' apply' → logprob: -2.769585132598877
    5. ' reverse' → logprob: -3.644585132598877
    6. 'swap' → logprob: -4.394585132598877
    7. ' perform' → logprob: -4.519585132598877
    8. 'simulate' → logprob: -5.144585132598877
    9. 'undo' → logprob: -6.144585132598877
    10. ' swap' → logprob: -6.519585132598877

Token 125: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.45154550671577454
    2. ' the' → logprob: -1.0765454769134521
    3. 'sw' → logprob: -4.326545715332031
    4. ' swaps' → logprob: -5.451545715332031
    5. '<|end|>' → logprob: -5.701545715332031
    6. '(sw' → logprob: -6.701545715332031
    7. '   ' → logprob: -8.826545715332031
    8. '<|end|>' → logprob: -9.076545715332031
    9. 's' → logprob: -9.701545715332031
    10. ' sw' → logprob: -9.701545715332031

Token 126: ' encryption' (ID: 48827)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sw' → logprob: -0.03511149063706398
    2. ' swaps' → logprob: -3.410111427307129
    3. ' sw' → logprob: -7.535111427307129
    4. 'swap' → logprob: -8.535111427307129
    5. 're' → logprob: -8.660111427307129
    6. '	sw' → logprob: -9.035111427307129
    7. 'range' → logprob: -9.285111427307129
    8. 's' → logprob: -9.285111427307129
    9. '(sw' → logprob: -10.035111427307129
    10. 'for' → logprob: -10.285111427307129

Token 127: ' steps' (ID: 10331)
  Prédit: ' swaps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' swaps' → logprob: -0.3937779366970062
    2. ',' → logprob: -1.8937779664993286
    3. '
' → logprob: -2.768777847290039
    4. '   ' → logprob: -3.143777847290039
    5. '<|end|>' → logprob: -3.518777847290039
    6. ' for' → logprob: -3.893777847290039
    7. 'sw' → logprob: -5.893777847290039
    8. '<|end|>' → logprob: -6.143777847290039
    9. '.' → logprob: -6.268777847290039
    10. ':' → logprob: -6.393777847290039

Token 128: ' in' (ID: 306)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0241422653198242
    2. '   ' → logprob: -1.6491422653198242
    3. 'for' → logprob: -1.7741422653198242
    4. '
' → logprob: -2.024142265319824
    5. ' swaps' → logprob: -2.024142265319824
    6. '    
' → logprob: -4.774142265319824
    7. 'sw' → logprob: -6.024142265319824
    8. '<|end|>' → logprob: -6.149142265319824
    9. 's' → logprob: -8.149142265319824
    10. ' 
' → logprob: -8.774142265319824

Token 129: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.6192765831947327
    2. ' reverse' → logprob: -0.9942765831947327
    3. 're' → logprob: -2.994276523590088
    4. ' reversed' → logprob: -3.369276523590088
    5. ' range' → logprob: -5.619276523590088
    6. 'range' → logprob: -5.744276523590088
    7. '[::-' → logprob: -8.119277000427246
    8. '.reverse' → logprob: -10.744277000427246
    9. ' the' → logprob: -11.369277000427246
    10. 'sw' → logprob: -12.119277000427246

Token 130: ' order' (ID: 2569)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7329677939414978
    2. 'for' → logprob: -1.2329678535461426
    3. ' swaps' → logprob: -1.7329678535461426
    4. '   ' → logprob: -3.3579678535461426
    5. 'sw' → logprob: -4.857967853546143
    6. ' order' → logprob: -5.732967853546143
    7. 's' → logprob: -6.607967853546143
    8. 'order' → logprob: -6.732967853546143
    9. '_sw' → logprob: -7.107967853546143
    10. '<|end|>' → logprob: -7.857967853546143

Token 131: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13529933989048004
    2. ' for' → logprob: -2.8852994441986084
    3. '
' → logprob: -3.5102994441986084
    4. 'for' → logprob: -3.6352994441986084
    5. '<|end|>' → logprob: -4.760299205780029
    6. '    
' → logprob: -5.635299205780029
    7. ' swaps' → logprob: -6.760299205780029
    8. ',' → logprob: -8.260299682617188
    9. '<|end|>' → logprob: -8.260299682617188
    10. ':' → logprob: -9.385299682617188

Token 132: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3072133958339691
    2. '   ' → logprob: -1.4322134256362915
    3. ' for' → logprob: -4.932213306427002
    4. '<|end|>' → logprob: -4.932213306427002
    5. '    
' → logprob: -5.057213306427002
    6. 'for' → logprob: -6.307213306427002
    7. ':' → logprob: -7.057213306427002
    8. ',' → logprob: -7.557213306427002
    9. '  
' → logprob: -7.807213306427002
    10. '<|end|>' → logprob: -8.30721378326416

Token 133: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003931384126190096
    2. ' for' → logprob: -8.37539291381836
    3. '   ' → logprob: -9.00039291381836
    4. 'sw' → logprob: -10.25039291381836
    5. ' swaps' → logprob: -13.12539291381836
    6. 'message' → logprob: -13.87539291381836
    7. '    
' → logprob: -14.50039291381836
    8. '
' → logprob: -15.75039291381836
    9. 'swap' → logprob: -16.50039291381836
    10. '```' → logprob: -16.87539291381836

Token 134: ' because' (ID: 2236)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19767378270626068
    2. ' for' → logprob: -1.8226737976074219
    3. 'sw' → logprob: -4.697673797607422
    4. ' swaps' → logprob: -5.197673797607422
    5. '   ' → logprob: -5.822673797607422
    6. '
' → logprob: -9.322673797607422
    7. '    
' → logprob: -10.447673797607422
    8. ' sw' → logprob: -10.697673797607422
    9. 'swap' → logprob: -11.822673797607422
    10. 'message' → logprob: -12.697673797607422

Token 135: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.14163419604301453
    2. 'the' → logprob: -3.141634225845337
    3. ' swaps' → logprob: -3.391634225845337
    4. ' we' → logprob: -3.891634225845337
    5. ' encryption' → logprob: -4.141633987426758
    6. ' each' → logprob: -5.016633987426758
    7. 'sw' → logprob: -5.766633987426758
    8. 'we' → logprob: -6.016633987426758
    9. 'en' → logprob: -6.266633987426758
    10. ' swapping' → logprob: -6.766633987426758

Token 136: ' encryption' (ID: 48827)
  Prédit: ' swaps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' swaps' → logprob: -0.9885290265083313
    2. 'sw' → logprob: -1.4885289669036865
    3. ' encryption' → logprob: -1.6135289669036865
    4. 'en' → logprob: -2.3635289669036865
    5. ' code' → logprob: -3.9885289669036865
    6. ' message' → logprob: -3.9885289669036865
    7. ' original' → logprob: -4.113529205322266
    8. 're' → logprob: -4.988529205322266
    9. ' for' → logprob: -5.113529205322266
    10. 'for' → logprob: -5.363529205322266

Token 137: ' applied' (ID: 13335)
  Prédit: ' steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' steps' → logprob: -0.671955943107605
    2. ' was' → logprob: -1.296955943107605
    3. ' swaps' → logprob: -2.4219560623168945
    4. ' process' → logprob: -2.6719560623168945
    5. 'steps' → logprob: -3.1719560623168945
    6. ' swapped' → logprob: -5.7969560623168945
    7. 'was' → logprob: -6.4219560623168945
    8. 'sw' → logprob: -6.5469560623168945
    9. '_steps' → logprob: -6.6719560623168945
    10. '<|end|>' → logprob: -6.7969560623168945

Token 138: ' swaps' (ID: 150699)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3193669319152832
    2. ' swaps' → logprob: -1.9443669319152832
    3. 'sw' → logprob: -2.694366931915283
    4. 'the' → logprob: -2.944366931915283
    5. ' each' → logprob: -4.944366931915283
    6. 'each' → logprob: -7.694366931915283
    7. ' steps' → logprob: -7.819366931915283
    8. '   ' → logprob: -7.819366931915283
    9. ' sw' → logprob: -8.319366455078125
    10. ' in' → logprob: -8.319366455078125

Token 139: ' from' (ID: 591)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.26854056119918823
    2. ' in' → logprob: -1.518540620803833
    3. ' and' → logprob: -5.518540382385254
    4. 'in' → logprob: -5.518540382385254
    5. '   ' → logprob: -6.393540382385254
    6. ' reversed' → logprob: -6.768540382385254
    7. 's' → logprob: -6.893540382385254
    8. '.reverse' → logprob: -7.018540382385254
    9. 'and' → logprob: -7.768540382385254
    10. ',' → logprob: -7.893540382385254

Token 140: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06025801971554756
    2. 'left' → logprob: -3.185257911682129
    3. 'first' → logprob: -4.435257911682129
    4. 'i' → logprob: -6.435257911682129
    5. '1' → logprob: -7.185257911682129
    6. 'start' → logprob: -7.185257911682129
    7. 'the' → logprob: -7.310257911682129
    8. ' ' → logprob: -7.685257911682129
    9. ' left' → logprob: -7.810257911682129
    10. 'range' → logprob: -8.310257911682129

Token 141: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010469590313732624
    2. 'left' → logprob: -5.010469436645508
    3. 'first' → logprob: -6.635469436645508
    4. 'range' → logprob: -6.635469436645508
    5. 'i' → logprob: -7.385469436645508
    6. 'the' → logprob: -8.510469436645508
    7. 'start' → logprob: -9.385469436645508
    8. ' ' → logprob: -9.635469436645508
    9. 'begin' → logprob: -10.510469436645508
    10. '1' → logprob: -10.635469436645508

Token 142: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.28171613812446594
    2. 'to' → logprob: -1.4067161083221436
    3. ' through' → logprob: -8.656716346740723
    4. ' up' → logprob: -9.031716346740723
    5. '   ' → logprob: -9.781716346740723
    6. ',' → logprob: -10.156716346740723
    7. ' ' → logprob: -10.156716346740723
    8. ')' → logprob: -10.531716346740723
    9. 'through' → logprob: -11.031716346740723
    10. '<|end|>' → logprob: -11.281716346740723

Token 143: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.000805341056548059
    2. ' N' → logprob: -7.125805377960205
    3. 'n' → logprob: -14.375804901123047
    4. 'len' → logprob: -15.500804901123047
    5. '	N' → logprob: -18.625804901123047
    6. ' ' → logprob: -18.625804901123047
    7. '<|end|>' → logprob: -18.750804901123047
    8. '(N' → logprob: -19.375804901123047
    9. 'Nth' → logprob: -19.375804901123047
    10. '_N' → logprob: -19.625804901123047

Token 144: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2603715658187866
    2. ' for' → logprob: -1.5103715658187866
    3. '
' → logprob: -5.135371685028076
    4. '   ' → logprob: -6.260371685028076
    5. ' swaps' → logprob: -7.885371685028076
    6. '<|end|>' → logprob: -10.260371208190918
    7. ',' → logprob: -10.385371208190918
    8. '    
' → logprob: -10.385371208190918
    9. '#' → logprob: -11.010371208190918
    10. ')' → logprob: -11.135371208190918

Token 145: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2296103686094284
    2. ' for' → logprob: -1.6046103239059448
    3. '   ' → logprob: -5.604610443115234
    4. '
' → logprob: -7.979610443115234
    5. ' swaps' → logprob: -9.229610443115234
    6. '```' → logprob: -10.854610443115234
    7. ',' → logprob: -11.229610443115234
    8. ')' → logprob: -11.479610443115234
    9. '    
' → logprob: -12.104610443115234
    10. '<|end|>' → logprob: -12.604610443115234

Token 146: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00858514104038477
    2. ' for' → logprob: -4.883584976196289
    3. 'sw' → logprob: -8.133584976196289
    4. '   ' → logprob: -8.383584976196289
    5. ' swaps' → logprob: -8.383584976196289
    6. '
' → logprob: -9.008584976196289
    7. 'message' → logprob: -9.508584976196289
    8. 's' → logprob: -11.633584976196289
    9. '    
' → logprob: -11.758584976196289
    10. '```' → logprob: -12.383584976196289

Token 147: ' decoding' (ID: 105891)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005104491487145424
    2. 'sw' → logprob: -5.7551045417785645
    3. ' for' → logprob: -6.3801045417785645
    4. '
' → logprob: -9.505104064941406
    5. '   ' → logprob: -9.505104064941406
    6. ' swaps' → logprob: -9.880104064941406
    7. 'message' → logprob: -11.130104064941406
    8. '```' → logprob: -13.005104064941406
    9. '    
' → logprob: -13.130104064941406
    10. '#' → logprob: -13.130104064941406

Token 148: ' applies' (ID: 28134)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17375202476978302
    2. ' we' → logprob: -2.4237520694732666
    3. 'we' → logprob: -2.7987520694732666
    4. ' swaps' → logprob: -6.4237518310546875
    5. ' ,' → logprob: -6.6737518310546875
    6. 'for' → logprob: -6.7987518310546875
    7. ' involves' → logprob: -6.7987518310546875
    8. ' for' → logprob: -7.5487518310546875
    9. ' requires' → logprob: -7.5487518310546875
    10. ' the' → logprob: -7.9237518310546875

Token 149: ' swaps' (ID: 150699)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sw' → logprob: -0.7911931872367859
    2. ' them' → logprob: -1.7911932468414307
    3. ' swaps' → logprob: -1.7911932468414307
    4. 'them' → logprob: -2.4161932468414307
    5. ' the' → logprob: -3.0411932468414307
    6. 'the' → logprob: -3.1661932468414307
    7. 'from' → logprob: -4.041193008422852
    8. ' from' → logprob: -5.416193008422852
    9. 're' → logprob: -5.416193008422852
    10. '   ' → logprob: -6.541193008422852

Token 150: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5371319651603699
    2. ' from' → logprob: -0.9121319651603699
    3. ' in' → logprob: -4.7871317863464355
    4. '[::-' → logprob: -5.4121317863464355
    5. 'in' → logprob: -7.2871317863464355
    6. '[from' → logprob: -8.912132263183594
    7. '	from' → logprob: -10.162132263183594
    8. '[N' → logprob: -10.287132263183594
    9. ' =' → logprob: -10.412132263183594
    10. '[' → logprob: -10.412132263183594

Token 151: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.47412362694740295
    2. ' N' → logprob: -0.9741235971450806
    3. 'n' → logprob: -11.09912395477295
    4. ' range' → logprob: -11.47412395477295
    5. 'range' → logprob: -12.09912395477295
    6. ' n' → logprob: -12.59912395477295
    7. '	N' → logprob: -12.84912395477295
    8. ' ' → logprob: -13.09912395477295
    9. 'reverse' → logprob: -13.47412395477295
    10. '(N' → logprob: -13.84912395477295

Token 152: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7606736421585083
    2. '-' → logprob: -0.8856736421585083
    3. ' down' → logprob: -2.6356735229492188
    4. 'to' → logprob: -3.2606735229492188
    5. 'down' → logprob: -5.510673522949219
    6. ' -' → logprob: -5.760673522949219
    7. '   ' → logprob: -6.760673522949219
    8. ' ' → logprob: -6.760673522949219
    9. ',' → logprob: -8.135673522949219
    10. '<|end|>' → logprob: -8.885673522949219

Token 153: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04074319452047348
    2. ' ' → logprob: -3.290743112564087
    3. '0' → logprob: -5.915743350982666
    4. '<|end|>' → logprob: -14.540742874145508
    5. '-' → logprob: -15.290742874145508
    6. '   ' → logprob: -15.415742874145508
    7. '```' → logprob: -15.540742874145508
    8. ' -' → logprob: -16.290742874145508
    9. '
' → logprob: -16.478242874145508
    10. '`' → logprob: -17.353242874145508

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001587462262250483
    2. '0' → logprob: -6.501587390899658
    3. ' ' → logprob: -9.376587867736816
    4. '```' → logprob: -15.501587867736816
    5. '-' → logprob: -16.4390869140625
    6. '
' → logprob: -16.8140869140625
    7. '2' → logprob: -17.0015869140625
    8. '<|end|>' → logprob: -17.1265869140625
    9. '[' → logprob: -17.8140869140625
    10. '   ' → logprob: -17.8140869140625

Token 155: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46941420435905457
    2. '   ' → logprob: -1.219414234161377
    3. ' for' → logprob: -3.094414234161377
    4. '
' → logprob: -3.469414234161377
    5. '    
' → logprob: -5.969414234161377
    6. ' swaps' → logprob: -10.344413757324219
    7. ')' → logprob: -10.469413757324219
    8. '

' → logprob: -10.594413757324219
    9. '[::-' → logprob: -10.594413757324219
    10. '```' → logprob: -10.969413757324219

Token 156: 'inverse' (ID: 153422)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15467393398284912
    2. '[::-' → logprob: -2.0296740531921387
    3. ' in' → logprob: -5.404674053192139
    4. ' reversed' → logprob: -5.904674053192139
    5. ',' → logprob: -6.404674053192139
    6. '   ' → logprob: -6.904674053192139
    7. '):' → logprob: -7.529674053192139
    8. ').' → logprob: -8.27967357635498
    9. ' )' → logprob: -8.77967357635498
    10. 'in' → logprob: -8.90467357635498

Token 157: ' operation' (ID: 9506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24510344862937927
    2. ' order' → logprob: -1.6201034784317017
    3. ' )' → logprob: -4.870103359222412
    4. ' swaps' → logprob: -5.495103359222412
    5. ' of' → logprob: -5.745103359222412
    6. ' in' → logprob: -7.245103359222412
    7. 'order' → logprob: -7.245103359222412
    8. ' to' → logprob: -7.370103359222412
    9. ')
' → logprob: -7.870103359222412
    10. ' and' → logprob: -8.49510383605957

Token 158: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006147435633465648
    2. ' )' → logprob: -8.250615119934082
    3. '   ' → logprob: -9.875615119934082
    4. ').' → logprob: -10.125615119934082
    5. '[::-' → logprob: -10.125615119934082
    6. ',' → logprob: -10.250615119934082
    7. ')
' → logprob: -10.500615119934082
    8. ' in' → logprob: -10.625615119934082
    9. '):' → logprob: -10.750615119934082
    10. '))' → logprob: -11.000615119934082

Token 159: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05636968836188316
    2. '
' → logprob: -3.3063697814941406
    3. '   ' → logprob: -4.556369781494141
    4. ' for' → logprob: -4.931369781494141
    5. '    
' → logprob: -8.68136978149414
    6. '```' → logprob: -8.80636978149414
    7. '

' → logprob: -10.30636978149414
    8. ')' → logprob: -10.55636978149414
    9. ' 
' → logprob: -11.68136978149414
    10. 'i' → logprob: -11.68136978149414

Token 160: ' for' (ID: 395)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 161: ' a' (ID: 261)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.015577815473079681
    2. ' _' → logprob: -4.515577793121338
    3. 'i' → logprob: -6.015577793121338
    4. '_' → logprob: -7.515577793121338
    5. ' swap' → logprob: -8.265578269958496
    6. ' s' → logprob: -8.390578269958496
    7. ' idx' → logprob: -8.390578269958496
    8. ' ' → logprob: -8.515578269958496
    9. '_i' → logprob: -8.765578269958496
    10. ' x' → logprob: -9.640578269958496

Token 162: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.27138736844062805
    2. ',' → logprob: -1.5213873386383057
    3. 'in' → logprob: -4.146387577056885
    4. ' ,' → logprob: -5.771387577056885
    5. 'a' → logprob: -9.521387100219727
    6. 's' → logprob: -10.021387100219727
    7. 'n' → logprob: -10.021387100219727
    8. ',_' → logprob: -10.646387100219727
    9. '_,' → logprob: -11.021387100219727
    10. ' i' → logprob: -11.021387100219727

Token 163: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0788901224732399
    2. ' b' → logprob: -2.578890085220337
    3. ' ' → logprob: -15.953889846801758
    4. '>b' → logprob: -16.078889846801758
    5. '	b' → logprob: -16.828889846801758
    6. '<|end|>' → logprob: -17.078889846801758
    7. ')b' → logprob: -17.203889846801758
    8. ',b' → logprob: -17.578889846801758
    9. 's' → logprob: -18.203889846801758
    10. '    ' → logprob: -18.203889846801758

Token 164: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10023751109838486
    2. 'in' → logprob: -2.3502376079559326
    3. ')' → logprob: -11.600237846374512
    4. '	in' → logprob: -11.850237846374512
    5. ',' → logprob: -12.225237846374512
    6. ' ' → logprob: -12.600237846374512
    7. '_in' → logprob: -13.975237846374512
    8. 'a' → logprob: -14.225237846374512
    9. 'In' → logprob: -14.850237846374512
    10. ',in' → logprob: -14.975237846374512

Token 165: ' reversed' (ID: 57184)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.03493974730372429
    2. 'sw' → logprob: -3.784939765930176
    3. ' reversed' → logprob: -4.534939765930176
    4. ' swaps' → logprob: -7.409939765930176
    5. '   ' → logprob: -8.784939765930176
    6. 'sorted' → logprob: -9.659939765930176
    7. 'range' → logprob: -11.034939765930176
    8. ' ' → logprob: -11.284939765930176
    9. 'reverse' → logprob: -11.534939765930176
    10. ' swapped' → logprob: -11.659939765930176

Token 166: '(sw' (ID: 132758)
  Prédit: '(sw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sw' → logprob: -0.00010080150241265073
    2. '(s' → logprob: -10.250101089477539
    3. '(' → logprob: -10.625101089477539
    4. 'sw' → logprob: -10.875101089477539
    5. ' (' → logprob: -12.125101089477539
    6. '```' → logprob: -12.500101089477539
    7. ' swaps' → logprob: -12.750101089477539
    8. ')' → logprob: -12.875101089477539
    9. '(range' → logprob: -13.500101089477539
    10. ')(' → logprob: -13.750101089477539

Token 167: 'aps' (ID: 3506)
  Prédit: 'aps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aps' → logprob: -1.6405310816480778e-05
    2. 'a' → logprob: -11.625016212463379
    3. 'ap' → logprob: -12.500016212463379
    4. '[' → logprob: -13.125016212463379
    5. '(' → logprob: -15.375016212463379
    6. '   ' → logprob: -15.375016212463379
    7. 'apped' → logprob: -15.750016212463379
    8. 'apping' → logprob: -16.250017166137695
    9. '(a' → logprob: -16.250017166137695
    10. '```' → logprob: -16.250017166137695

Token 168: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005642342148348689
    2. '):
' → logprob: -7.500564098358154
    3. ')' → logprob: -12.500564575195312
    4. ':' → logprob: -12.500564575195312
    5. ' ):' → logprob: -13.250564575195312
    6. '):
' → logprob: -14.000564575195312
    7. ']:' → logprob: -14.250564575195312
    8. '   ' → logprob: -15.125564575195312
    9. '():' → logprob: -16.250564575195312
    10. '}:' → logprob: -16.875564575195312

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1542932242155075
    2. ':' → logprob: -2.6542932987213135
    3. '<|end|>' → logprob: -3.1542932987213135
    4. '   ' → logprob: -4.404293060302734
    5. ',' → logprob: -4.654293060302734
    6. '[' → logprob: -6.779293060302734
    7. '<|end|>' → logprob: -6.904293060302734
    8. '):
' → logprob: -7.029293060302734
    9. ':
' → logprob: -7.154293060302734
    10. ' message' → logprob: -7.404293060302734

Token 170: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8458604216575623
    2. ' message' → logprob: -0.8458604216575623
    3. 'message' → logprob: -1.970860481262207
    4. '       ' → logprob: -6.470860481262207
    5. '
' → logprob: -7.970860481262207
    6. '    
' → logprob: -9.220860481262207
    7. '    ' → logprob: -9.345860481262207
    8. '	message' → logprob: -9.470860481262207
    9. ' 
' → logprob: -10.845860481262207
    10. '```' → logprob: -10.970860481262207

Token 171: ' indices' (ID: 30378)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.004181567579507828
    2. ' message' → logprob: -6.004181385040283
    3. '   ' → logprob: -6.379181385040283
    4. '       ' → logprob: -12.254181861877441
    5. '	message' → logprob: -14.129181861877441
    6. '           ' → logprob: -14.254181861877441
    7. 'swap' → logprob: -14.504181861877441
    8. '```' → logprob: -15.254181861877441
    9. 'm' → logprob: -15.754181861877441
    10. '(message' → logprob: -16.129180908203125

Token 172: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03732994943857193
    2. 'a' → logprob: -4.287330150604248
    3. '=' → logprob: -4.412330150604248
    4. ',' → logprob: -5.412330150604248
    5. '   ' → logprob: -5.787330150604248
    6. ' a' → logprob: -7.412330150604248
    7. ')' → logprob: -7.412330150604248
    8. ' ' → logprob: -7.662330150604248
    9. '[' → logprob: -8.16232967376709
    10. ' are' → logprob: -8.41232967376709

Token 173: ' zero' (ID: 12421)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.5551009178161621
    2. 'a' → logprob: -2.055100917816162
    3. ' swap' → logprob: -2.055100917816162
    4. 'b' → logprob: -3.055100917816162
    5. 'message' → logprob: -3.555100917816162
    6. ' a' → logprob: -3.805100917816162
    7. ' be' → logprob: -4.305100917816162
    8. 'range' → logprob: -4.555100917816162
    9. ' message' → logprob: -5.055100917816162
    10. '_swap' → logprob: -5.555100917816162

Token 174: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.04952308535575867
    2. 'based' → logprob: -3.049523115158081
    3. '-' → logprob: -7.799522876739502
    4. '-index' → logprob: -7.924522876739502
    5. ' -' → logprob: -9.79952335357666
    6. '_based' → logprob: -9.92452335357666
    7. ' based' → logprob: -10.42452335357666
    8. '-base' → logprob: -10.79952335357666
    9. 'indexed' → logprob: -12.29952335357666
    10. 'Based' → logprob: -13.67452335357666

Token 175: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 176: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 177: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3132670223712921
    2. 'a' (adapté à ' a') → logprob: -1.3132669925689697
    3. '[a' → logprob: -13.68826675415039
    4. '_a' → logprob: -14.31326675415039
    5. '    ' → logprob: -14.43826675415039
    6. 'i' → logprob: -14.56326675415039
    7. ',a' → logprob: -14.81326675415039
    8. '   ' → logprob: -14.93826675415039
    9. '	a' → logprob: -15.06326675415039
    10. ')a' → logprob: -15.18826675415039

Token 178: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.2561664283275604
    2. ',' → logprob: -2.381166458129883
    3. ' =' → logprob: -2.506166458129883
    4. '-' → logprob: -3.381166458129883
    5. '-=' → logprob: -5.006166458129883
    6. ' -' → logprob: -5.256166458129883
    7. '=' → logprob: -6.006166458129883
    8. 'a' → logprob: -6.756166458129883
    9. ',a' → logprob: -6.756166458129883
    10. ' ,' → logprob: -7.506166458129883

Token 179: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007607220206409693
    2. ' ' → logprob: -4.8826069831848145
    3. '<|end|>' → logprob: -13.882607460021973
    4. '   ' → logprob: -16.382606506347656
    5. '```' → logprob: -17.257606506347656
    6. '2' → logprob: -18.007606506347656
    7. ' ' → logprob: -18.320106506347656
    8. '>' → logprob: -18.507606506347656
    9. '１' → logprob: -18.695106506347656
    10. '<|end|>' → logprob: -18.695106506347656

Token 180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.583550642360933e-05
    2. ' ' → logprob: -10.250036239624023
    3. '<|end|>' → logprob: -15.000036239624023
    4. '2' → logprob: -17.250036239624023
    5. '```' → logprob: -17.437536239624023
    6. '   ' → logprob: -17.687536239624023
    7. '１' → logprob: -18.562536239624023
    8. '0' → logprob: -18.687536239624023
    9. '۱' → logprob: -18.875036239624023
    10. '
' → logprob: -18.937536239624023

Token 181: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.046331338584423065
    2. ',' → logprob: -3.6713314056396484
    3. '<|end|>' → logprob: -4.796331405639648
    4. 'b' → logprob: -4.921331405639648
    5. '       ' → logprob: -6.546331405639648
    6. ',b' → logprob: -7.421331405639648
    7. ' 
' → logprob: -7.796331405639648
    8. ';' → logprob: -7.921331405639648
    9. '   ' → logprob: -8.296331405639648
    10. '
' → logprob: -8.421331405639648

Token 182: '       ' (ID: 309)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.21503102779388428
    2. '   ' → logprob: -2.465031147003174
    3. ' b' → logprob: -2.715031147003174
    4. '
' → logprob: -3.465031147003174
    5. ',' → logprob: -4.965031147003174
    6. ' 
' → logprob: -6.215031147003174
    7. 'message' → logprob: -8.215030670166016
    8. '    
' → logprob: -8.590030670166016
    9. '	b' → logprob: -8.715030670166016
    10. ' ,' → logprob: -8.715030670166016

Token 183: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.004079708829522133
    2. ' b' → logprob: -5.504079818725586
    3. '   ' → logprob: -13.754079818725586
    4. '    ' → logprob: -16.004079818725586
    5. '	b' → logprob: -16.254079818725586
    6. '       ' → logprob: -17.754079818725586
    7. '_b' → logprob: -18.879079818725586
    8. 'B' → logprob: -19.254079818725586
    9. ' ' → logprob: -20.004079818725586
    10. '  ' → logprob: -20.254079818725586

Token 184: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.012940318323671818
    2. '-=' → logprob: -4.387940406799316
    3. '-' → logprob: -7.762940406799316
    4. ' -' → logprob: -12.762940406799316
    5. ' ' → logprob: -14.012940406799316
    6. '>' → logprob: -14.637940406799316
    7. '   ' → logprob: -15.387940406799316
    8. '=' → logprob: -15.387940406799316
    9. ')' → logprob: -15.512940406799316
    10. '```' → logprob: -15.887940406799316

Token 185: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06197104603052139
    2. ' ' → logprob: -2.8119709491729736
    3. '0' → logprob: -13.311970710754395
    4. '   ' → logprob: -14.561970710754395
    5. '<|end|>' → logprob: -14.811970710754395
    6. '```' → logprob: -15.436970710754395
    7. '    ' → logprob: -16.18697166442871
    8. '  ' → logprob: -16.68697166442871
    9. '2' → logprob: -16.81197166442871
    10. '	' → logprob: -16.99947166442871

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.668304245569743e-05
    2. ' ' → logprob: -10.000046730041504
    3. '0' → logprob: -13.750046730041504
    4. '<|end|>' → logprob: -17.500045776367188
    5. '```' → logprob: -17.500045776367188
    6. '   ' → logprob: -17.750045776367188
    7. '2' → logprob: -18.500045776367188
    8. '  ' → logprob: -18.500045776367188
    9. '-' → logprob: -19.562545776367188
    10. '１' → logprob: -19.625045776367188

Token 187: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3513298034667969
    2. '
' → logprob: -1.2263298034667969
    3. '       ' → logprob: -6.726329803466797
    4. ',' → logprob: -7.476329803466797
    5. ',
' → logprob: -8.226329803466797
    6. '    
' → logprob: -8.351329803466797
    7. '<|end|>' → logprob: -8.476329803466797
    8. ')
' → logprob: -9.101329803466797
    9. 'message' → logprob: -9.226329803466797
    10. '  
' → logprob: -10.101329803466797

Token 188: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018160004168748856
    2. 'message' → logprob: -4.393159866333008
    3. '
' → logprob: -5.268159866333008
    4. '    
' → logprob: -8.393159866333008
    5. ' message' → logprob: -9.143159866333008
    6. ',' → logprob: -10.768159866333008
    7. '<|end|>' → logprob: -10.768159866333008
    8. '       ' → logprob: -10.893159866333008
    9. ')
' → logprob: -11.268159866333008
    10. '(message' → logprob: -11.643159866333008

Token 189: ' diff' (ID: 8868)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.000593543634749949
    2. '   ' → logprob: -7.500593662261963
    3. ' message' → logprob: -10.125593185424805
    4. '
' → logprob: -15.625593185424805
    5. '	message' → logprob: -16.125593185424805
    6. '    
' → logprob: -16.750593185424805
    7. '       ' → logprob: -17.000593185424805
    8. '(message' → logprob: -17.250593185424805
    9. '#' → logprob: -17.750593185424805
    10. 'm' → logprob: -17.875593185424805

Token 190: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4414905309677124
    2. '=' → logprob: -1.0664905309677124
    3. ',' → logprob: -4.441490650177002
    4. ')' → logprob: -8.316490173339844
    5. '   ' → logprob: -8.691490173339844
    6. '[' → logprob: -9.066490173339844
    7. ' ' → logprob: -9.566490173339844
    8. ' ,' → logprob: -9.691490173339844
    9. ']' → logprob: -9.816490173339844
    10. 'message' → logprob: -9.941490173339844

Token 191: ' abs' (ID: 8443)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.4681052267551422
    2. 'ord' → logprob: -1.9681051969528198
    3. ' ord' → logprob: -2.2181053161621094
    4. ' message' → logprob: -2.4681053161621094
    5. '(ord' → logprob: -4.218105316162109
    6. '(message' → logprob: -4.593105316162109
    7. '1' → logprob: -4.968105316162109
    8. '0' → logprob: -6.093105316162109
    9. ' (' → logprob: -6.343105316162109
    10. 'abs' → logprob: -6.593105316162109

Token 192: '(a' (ID: 6271)
  Prédit: '(message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(message' → logprob: -0.2183396816253662
    2. '(a' → logprob: -1.7183396816253662
    3. '(b' → logprob: -4.218339920043945
    4. '(ord' → logprob: -7.218339920043945
    5. '(sw' → logprob: -7.343339920043945
    6. '(' → logprob: -8.093339920043945
    7. '(s' → logprob: -8.718339920043945
    8. '((' → logprob: -9.468339920043945
    9. '(N' → logprob: -10.218339920043945
    10. 'a' → logprob: -10.468339920043945

Token 193: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10031913220882416
    2. '-' → logprob: -2.3503191471099854
    3. ' ' → logprob: -9.475318908691406
    4. '-b' → logprob: -10.850318908691406
    5. '   ' → logprob: -11.475318908691406
    6. ')' → logprob: -12.725318908691406
    7. '  ' → logprob: -14.100318908691406
    8. ' ' → logprob: -14.475318908691406
    9. ',' → logprob: -14.850318908691406
    10. ' -
' → logprob: -15.225318908691406

Token 194: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002319071936653927
    2. ' b' → logprob: -8.375231742858887
    3. '   ' → logprob: -14.125231742858887
    4. ' ' → logprob: -15.750231742858887
    5. ')' → logprob: -16.000232696533203
    6. ')b' → logprob: -16.375232696533203
    7. '    ' → logprob: -16.625232696533203
    8. '  ' → logprob: -17.500232696533203
    9. '	b' → logprob: -17.750232696533203
    10. '0' → logprob: -17.875232696533203

Token 195: ')

' (ID: 1029)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5769230127334595
    2. ')' → logprob: -0.8269230127334595
    3. '       ' → logprob: -7.07692289352417
    4. ')
' → logprob: -9.326923370361328
    5. ')

' → logprob: -10.701923370361328
    6. '   ' → logprob: -11.451923370361328
    7. '
' → logprob: -12.826923370361328
    8. ' )
' → logprob: -13.076923370361328
    9. '<|end|>' → logprob: -13.326923370361328
    10. '+' → logprob: -13.701923370361328

Token 196: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28145933151245117
    2. '
' → logprob: -1.6564593315124512
    3. '    
' → logprob: -3.281459331512451
    4. '<|end|>' → logprob: -5.156459331512451
    5. ' 
' → logprob: -6.031459331512451
    6. ')
' → logprob: -6.531459331512451
    7. 'message' → logprob: -6.531459331512451
    8. ')' → logprob: -6.781459331512451
    9. '  
' → logprob: -6.781459331512451
    10. ',' → logprob: -7.031459331512451

Token 197: ' #' (ID: 1069)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'message' → logprob: -4.954393079970032e-05
    2. '   ' → logprob: -10.000049591064453
    3. ' message' → logprob: -12.625049591064453
    4. '#' (adapté à ' #') → logprob: -14.750049591064453
    5. '(message' → logprob: -16.125049591064453
    6. '       ' → logprob: -16.500049591064453
    7. '	message' → logprob: -16.625049591064453
    8. 'm' → logprob: -17.625049591064453
    9. '    
' → logprob: -18.000049591064453
    10. '
' → logprob: -18.000049591064453

Token 198: ' first' (ID: 1577)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.000116655595775228
    2. '#' → logprob: -9.875116348266602
    3. '   ' → logprob: -10.625116348266602
    4. ' message' → logprob: -10.750116348266602
    5. '       ' → logprob: -11.375116348266602
    6. 'for' → logprob: -12.500116348266602
    7. 'swap' → logprob: -13.875116348266602
    8. 'if' → logprob: -14.000116348266602
    9. '           ' → logprob: -14.625116348266602
    10. 'while' → logprob: -15.000116348266602

Token 199: ',' (ID: 11)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.6160714030265808
    2. ' message' → logprob: -1.1160714626312256
    3. ',' → logprob: -2.6160714626312256
    4. ' c' → logprob: -3.4910714626312256
    5. 'c' → logprob: -4.3660712242126465
    6. ',message' → logprob: -5.9910712242126465
    7. '   ' → logprob: -6.1160712242126465
    8. ' ,' → logprob: -6.2410712242126465
    9. ' swap' → logprob: -6.9910712242126465
    10. ' =' → logprob: -6.9910712242126465

Token 200: ' reverse' (ID: 18199)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.04941326379776001
    2. ' message' → logprob: -3.0494132041931152
    3. '#' → logprob: -7.674413204193115
    4. '   ' → logprob: -8.424413681030273
    5. '       ' → logprob: -10.049413681030273
    6. ' #' → logprob: -10.424413681030273
    7. 'for' → logprob: -10.924413681030273
    8. 'swap' → logprob: -11.049413681030273
    9. '        
' → logprob: -12.549413681030273
    10. '
' → logprob: -12.549413681030273

Token 201: ' the' (ID: 290)
  Prédit: ' message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' message' → logprob: -0.6691669225692749
    2. 'message' → logprob: -1.044166922569275
    3. ' the' → logprob: -2.5441670417785645
    4. '   ' → logprob: -4.0441670417785645
    5. 'swap' → logprob: -4.0441670417785645
    6. ' swap' → logprob: -4.7941670417785645
    7. 'the' → logprob: -5.1691670417785645
    8. '       ' → logprob: -5.4191670417785645
    9. ' swaps' → logprob: -6.9191670417785645
    10. ')' → logprob: -8.169166564941406

Token 202: ' character' (ID: 5855)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.3365749418735504
    2. ' swap' → logprob: -1.586574912071228
    3. 'sw' → logprob: -3.5865750312805176
    4. 'message' → logprob: -3.7115750312805176
    5. ' message' → logprob: -4.461575031280518
    6. ' swaps' → logprob: -5.336575031280518
    7. '   ' → logprob: -5.711575031280518
    8. 'character' → logprob: -5.836575031280518
    9. ' character' → logprob: -6.336575031280518
    10. ' swapping' → logprob: -6.711575031280518

Token 203: ' shifting' (ID: 53586)
  Prédit: ' swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' swap' → logprob: -0.3098651170730591
    2. 'swap' → logprob: -2.0598649978637695
    3. 's' → logprob: -2.4348649978637695
    4. ' swaps' → logprob: -3.8098649978637695
    5. ' shift' → logprob: -4.5598649978637695
    6. ' at' → logprob: -5.1848649978637695
    7. '_swap' → logprob: -5.5598649978637695
    8. '   ' → logprob: -6.3098649978637695
    9. ' swapping' → logprob: -6.5598649978637695
    10. ' positions' → logprob: -6.6848649978637695

Token 204: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01056690700352192
    2. '   ' → logprob: -5.385566711425781
    3. ' for' → logprob: -5.760566711425781
    4. 'for' → logprob: -6.010566711425781
    5. 'message' → logprob: -8.760566711425781
    6. ',' → logprob: -9.635566711425781
    7. '        
' → logprob: -9.885566711425781
    8. '
' → logprob: -11.510566711425781
    9. ' message' → logprob: -11.760566711425781
    10. 'if' → logprob: -12.260566711425781

Token 205: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5053609013557434
    2. 'for' → logprob: -1.5053608417510986
    3. ' for' → logprob: -2.3803608417510986
    4. 'message' → logprob: -3.0053608417510986
    5. '       ' → logprob: -3.6303608417510986
    6. ' message' → logprob: -5.130361080169678
    7. 'if' → logprob: -10.00536060333252
    8. ' ' → logprob: -10.63036060333252
    9. '	message' → logprob: -10.63036060333252
    10. ')' → logprob: -10.75536060333252

Token 206: ' #' (ID: 1069)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.007129019591957331
    2. 'for' → logprob: -5.757129192352295
    3. '   ' → logprob: -6.257129192352295
    4. ' message' → logprob: -6.257129192352295
    5. ' for' → logprob: -10.257128715515137
    6. 'if' → logprob: -10.507128715515137
    7. 'c' → logprob: -10.632128715515137
    8. '       ' → logprob: -11.507128715515137
    9. 'm' → logprob: -13.132128715515137
    10. '	message' → logprob: -13.632128715515137

Token 207: ' encryption' (ID: 48827)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.015017475932836533
    2. ' message' → logprob: -4.515017509460449
    3. 'for' → logprob: -5.890017509460449
    4. '   ' → logprob: -7.015017509460449
    5. ' for' → logprob: -8.89001750946045
    6. 'c' → logprob: -9.51501750946045
    7. '       ' → logprob: -11.01501750946045
    8. 'if' → logprob: -11.14001750946045
    9. 'm' → logprob: -11.39001750946045
    10. ' c' → logprob: -11.64001750946045

Token 208: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8501803874969482
    2. ' for' → logprob: -0.9751803874969482
    3. 'for' → logprob: -2.1001803874969482
    4. '       ' → logprob: -4.475180625915527
    5. ' applies' → logprob: -5.100180625915527
    6. ' message' → logprob: -5.225180625915527
    7. ' was' → logprob: -5.225180625915527
    8. '=' → logprob: -5.225180625915527
    9. ':' → logprob: -5.475180625915527
    10. 'message' → logprob: -5.600180625915527

Token 209: ' took' (ID: 6066)
  Prédit: ' message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' message' → logprob: -1.0749258995056152
    2. 'message' → logprob: -1.0749258995056152
    3. 'for' → logprob: -1.6999258995056152
    4. ' for' → logprob: -2.1999258995056152
    5. '   ' → logprob: -3.8249258995056152
    6. 'c' → logprob: -7.699925899505615
    7. ' c' → logprob: -7.949925899505615
    8. '       ' → logprob: -8.074926376342773
    9. '    ' → logprob: -8.824926376342773
    10. 'shift' → logprob: -9.324926376342773

Token 210: ' chars' (ID: 47991)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.5057515501976013
    2. ' message' → logprob: -2.130751609802246
    3. 'c' → logprob: -2.505751609802246
    4. 'original' → logprob: -3.255751609802246
    5. 'for' → logprob: -3.630751609802246
    6. 'the' → logprob: -3.755751609802246
    7. ' the' → logprob: -3.880751609802246
    8. ' original' → logprob: -4.130751609802246
    9. 'char' → logprob: -4.505751609802246
    10. 'ord' → logprob: -4.630751609802246

Token 211: ' at' (ID: 540)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.012687163427472115
    2. ' at' → logprob: -5.2626872062683105
    3. '[b' → logprob: -6.0126872062683105
    4. 'a' → logprob: -6.1376872062683105
    5. ' =' → logprob: -7.3876872062683105
    6. 'at' → logprob: -7.5126872062683105
    7. '[' → logprob: -7.8876872062683105
    8. '=' → logprob: -8.387686729431152
    9. ' a' → logprob: -8.637686729431152
    10. '   ' → logprob: -8.887686729431152

Token 212: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.307416707277298
    2. ' a' → logprob: -1.4324166774749756
    3. '[a' → logprob: -4.432416915893555
    4. 'b' → logprob: -5.682416915893555
    5. ' b' → logprob: -5.807416915893555
    6. ' [' → logprob: -6.057416915893555
    7. ' positions' → logprob: -6.057416915893555
    8. 'positions' → logprob: -6.807416915893555
    9. ' indices' → logprob: -7.557416915893555
    10. '[b' → logprob: -7.557416915893555

Token 213: ',b' (ID: 17568)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.17523902654647827
    2. 'and' → logprob: -1.925239086151123
    3. ']' → logprob: -5.300239086151123
    4. ',' → logprob: -6.050239086151123
    5. ',b' → logprob: -6.050239086151123
    6. '[b' → logprob: -6.425239086151123
    7. '],' → logprob: -6.550239086151123
    8. '[a' → logprob: -7.425239086151123
    9. '][' → logprob: -8.050238609313965
    10. '
' → logprob: -8.675238609313965

Token 214: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.530028223991394
    2. ' =' → logprob: -2.0300283432006836
    3. '   ' → logprob: -2.6550283432006836
    4. '       ' → logprob: -2.9050283432006836
    5. '[' → logprob: -3.1550283432006836
    6. ',' → logprob: -3.7800283432006836
    7. 'and' → logprob: -3.9050283432006836
    8. '=' → logprob: -4.530028343200684
    9. ' at' → logprob: -4.655028343200684
    10. ' for' → logprob: -4.780028343200684

Token 215: ' swapped' (ID: 125210)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.7299184203147888
    2. ' message' → logprob: -0.8549184203147888
    3. '   ' → logprob: -3.8549184799194336
    4. 'shift' → logprob: -4.604918479919434
    5. ' for' → logprob: -4.729918479919434
    6. 'for' → logprob: -4.729918479919434
    7. ' and' → logprob: -4.854918479919434
    8. '#' → logprob: -4.979918479919434
    9. ' shifted' → logprob: -4.979918479919434
    10. 'and' → logprob: -5.354918479919434

Token 216: ' them' (ID: 1373)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7542544603347778
    2. ' and' → logprob: -1.5042544603347778
    3. 'and' → logprob: -1.8792544603347778
    4. '   ' → logprob: -3.6292543411254883
    5. ',
' → logprob: -4.004254341125488
    6. '[' → logprob: -4.004254341125488
    7. ')
' → logprob: -4.504254341125488
    8. ' ' → logprob: -4.754254341125488
    9. ' positions' → logprob: -4.754254341125488
    10. 'positions' → logprob: -4.879254341125488

Token 217: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20117023587226868
    2. ',' → logprob: -2.5761702060699463
    3. '
' → logprob: -3.0761702060699463
    4. ' and' → logprob: -3.8261702060699463
    5. 'and' → logprob: -4.951170444488525
    6. '    
' → logprob: -4.951170444488525
    7. '       ' → logprob: -5.326170444488525
    8. ',
' → logprob: -5.326170444488525
    9. '<|end|>' → logprob: -5.826170444488525
    10. ')
' → logprob: -6.076170444488525

Token 218: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.014762043952942
    2. ' and' → logprob: -1.389762043952942
    3. '       ' → logprob: -1.764762043952942
    4. ' then' → logprob: -2.5147619247436523
    5. 'and' → logprob: -2.6397619247436523
    6. '<|end|>' → logprob: -3.7647619247436523
    7. ' #' → logprob: -4.139761924743652
    8. ' but' → logprob: -5.139761924743652
    9. ' so' → logprob: -5.639761924743652
    10. '   ' → logprob: -5.889761924743652

Token 219: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.7679639458656311
    2. ' and' → logprob: -1.1429638862609863
    3. 'and' → logprob: -2.2679638862609863
    4. ' then' → logprob: -2.7679638862609863
    5. ' #' → logprob: -4.267963886260986
    6. ' but' → logprob: -4.267963886260986
    7. '       ' → logprob: -4.767963886260986
    8. ' so' → logprob: -5.142963886260986
    9. '   ' → logprob: -6.392963886260986
    10. 'then' → logprob: -6.892963886260986

Token 220: ' then' (ID: 1815)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4001219272613525
    2. ' for' → logprob: -2.0251219272613525
    3. ' and' → logprob: -2.1501219272613525
    4. '       ' → logprob: -2.4001219272613525
    5. '   ' → logprob: -2.4001219272613525
    6. ' message' → logprob: -2.4001219272613525
    7. 'message' → logprob: -2.7751219272613525
    8. 'for' → logprob: -2.9001219272613525
    9. ' #' → logprob: -3.1501219272613525
    10. 'and' → logprob: -3.4001219272613525

Token 221: ' shifted' (ID: 58644)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.13479474186897278
    2. ' message' → logprob: -3.1347947120666504
    3. 'shift' → logprob: -3.3847947120666504
    4. 'for' → logprob: -3.7597947120666504
    5. '
' → logprob: -4.25979471206665
    6. '   ' → logprob: -5.25979471206665
    7. ' for' → logprob: -5.88479471206665
    8. ' shifted' → logprob: -6.88479471206665
    9. '    
' → logprob: -7.88479471206665
    10. 'decoded' → logprob: -8.259795188903809

Token 222: ' both' (ID: 2973)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.525351881980896
    2. ' message' → logprob: -0.900351881980896
    3. '   ' → logprob: -6.6503520011901855
    4. '(message' → logprob: -8.275351524353027
    5. ' for' → logprob: -9.275351524353027
    6. ')' → logprob: -9.525351524353027
    7. '<|end|>' → logprob: -9.525351524353027
    8. '	message' → logprob: -10.275351524353027
    9. 'for' → logprob: -10.400351524353027
    10. '[' → logprob: -10.400351524353027

Token 223: ' backward' (ID: 58986)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0046495418064296246
    2. '[' → logprob: -5.754649639129639
    3. ' [' → logprob: -7.879649639129639
    4. '[b' → logprob: -8.00464916229248
    5. '   ' → logprob: -8.62964916229248
    6. 'message' → logprob: -8.87964916229248
    7. 'a' → logprob: -9.00464916229248
    8. '[c' → logprob: -9.00464916229248
    9. '[
' → logprob: -9.62964916229248
    10. ' a' → logprob: -10.12964916229248

Token 224: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.10803105682134628
    2. '       ' → logprob: -2.6080310344696045
    3. 'by' → logprob: -4.358031272888184
    4. '   ' → logprob: -4.733031272888184
    5. '        
' → logprob: -6.608031272888184
    6. ')' → logprob: -6.858031272888184
    7. ',' → logprob: -7.233031272888184
    8. 'for' → logprob: -7.483031272888184
    9. '
' → logprob: -7.608031272888184
    10. '    
' → logprob: -7.733031272888184

Token 225: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.5771822333335876
    2. ' diff' → logprob: -0.8271822333335876
    3. '1' → logprob: -6.827182292938232
    4. '	diff' → logprob: -9.577181816101074
    5. ' ' → logprob: -9.702181816101074
    6. '(diff' → logprob: -11.327181816101074
    7. '
' → logprob: -12.202181816101074
    8. ' dif' → logprob: -12.577181816101074
    9. '   ' → logprob: -13.327181816101074
    10. '2' → logprob: -14.202181816101074

Token 226: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23603610694408417
    2. '
' → logprob: -2.2360360622406006
    3. '    
' → logprob: -2.4860360622406006
    4. '  
' → logprob: -4.98603630065918
    5. ',' → logprob: -5.73603630065918
    6. '\n' → logprob: -5.98603630065918
    7. '   
' → logprob: -6.48603630065918
    8. '        
' → logprob: -6.61103630065918
    9. '       ' → logprob: -6.98603630065918
    10. ',
' → logprob: -6.98603630065918

Token 227: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1954083889722824
    2. '       ' → logprob: -2.320408344268799
    3. ' for' → logprob: -3.570408344268799
    4. 'for' → logprob: -3.820408344268799
    5. 'message' → logprob: -3.820408344268799
    6. ' message' → logprob: -5.195408344268799
    7. '        
' → logprob: -7.695408344268799
    8. '    
' → logprob: -7.820408344268799
    9. ' c' → logprob: -9.320408821105957
    10. ')' → logprob: -9.445408821105957

Token 228: ' #' (ID: 1069)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.23007994890213013
    2. '   ' → logprob: -2.2300798892974854
    3. ' message' → logprob: -2.7300798892974854
    4. 'for' → logprob: -4.6050801277160645
    5. 'c' → logprob: -5.1050801277160645
    6. '#' (adapté à ' #') → logprob: -5.1050801277160645
    7. ' for' → logprob: -5.2300801277160645
    8. 'temp' → logprob: -6.2300801277160645
    9. ' c' → logprob: -6.8550801277160645
    10. '    
' → logprob: -7.7300801277160645

Token 229: ' So' (ID: 2632)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.3192307949066162
    2. '#' → logprob: -1.5692307949066162
    3. 'for' → logprob: -3.319230794906616
    4. ' message' → logprob: -4.319231033325195
    5. '   ' → logprob: -5.444231033325195
    6. 'c' → logprob: -5.569231033325195
    7. ' for' → logprob: -6.069231033325195
    8. 'a' → logprob: -6.319231033325195
    9. ' #' → logprob: -6.569231033325195
    10. 'char' → logprob: -7.694231033325195

Token 230: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033755891025066376
    2. ',' → logprob: -4.658755779266357
    3. '   ' → logprob: -4.658755779266357
    4. ' for' → logprob: -5.658755779266357
    5. '
' → logprob: -5.908755779266357
    6. '#' → logprob: -5.908755779266357
    7. ' we' → logprob: -6.533755779266357
    8. 'for' → logprob: -6.908755779266357
    9. '    ' → logprob: -7.783755779266357
    10. ':' → logprob: -8.283756256103516

Token 231: ' decode' (ID: 32043)
  Prédit: 'decode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -0.8732123374938965
    2. ' reverse' → logprob: -1.3732123374938965
    3. ' decode' → logprob: -1.7482123374938965
    4. 'reverse' → logprob: -2.4982123374938965
    5. 'undo' → logprob: -3.3732123374938965
    6. ' undo' → logprob: -4.1232123374938965
    7. 'decrypt' → logprob: -4.3732123374938965
    8. ' decrypt' → logprob: -5.9982123374938965
    9. '#' → logprob: -6.6232123374938965
    10. '
' → logprob: -7.1232123374938965

Token 232: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.057772859930992126
    2. ' ,' → logprob: -3.8077728748321533
    3. ':' → logprob: -3.9327728748321533
    4. ' we' → logprob: -4.682772636413574
    5. '   ' → logprob: -6.307772636413574
    6. ':
' → logprob: -7.307772636413574
    7. 'we' → logprob: -7.807772636413574
    8. '       ' → logprob: -8.182772636413574
    9. '),' → logprob: -8.307772636413574
    10. ' both' → logprob: -8.307772636413574

Token 233: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38111770153045654
    2. 'message' → logprob: -1.7561177015304565
    3. ' message' → logprob: -2.631117820739746
    4. '       ' → logprob: -2.756117820739746
    5. ' for' → logprob: -5.756117820739746
    6. 'for' → logprob: -5.881117820739746
    7. ' c' → logprob: -7.506117820739746
    8. 'c' → logprob: -7.631117820739746
    9. '    
' → logprob: -7.881117820739746
    10. '#' → logprob: -8.381117820739746

Token 234: ' #' (ID: 1069)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.17157380282878876
    2. ' message' → logprob: -2.0465738773345947
    3. '#' (adapté à ' #') → logprob: -4.171573638916016
    4. '   ' → logprob: -4.671573638916016
    5. 'for' → logprob: -6.671573638916016
    6. ' #' → logprob: -7.296573638916016
    7. ' for' → logprob: -7.671573638916016
    8. 'c' → logprob: -7.796573638916016
    9. 'temp' → logprob: -8.796573638916016
    10. ' c' → logprob: -8.921573638916016

Token 235: ' before' (ID: 2254)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.08410250395536423
    2. '#' → logprob: -2.9591023921966553
    3. ' message' → logprob: -3.8341023921966553
    4. '   ' → logprob: -5.459102630615234
    5. '       ' → logprob: -7.209102630615234
    6. 'c' → logprob: -7.584102630615234
    7. 'for' → logprob: -7.959102630615234
    8. ' #' → logprob: -8.209102630615234
    9. 'temp' → logprob: -8.209102630615234
    10. '
' → logprob: -8.959102630615234

Token 236: ' swapping' (ID: 132194)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sw' → logprob: -0.39162391424179077
    2. ' swapping' → logprob: -2.1416239738464355
    3. ' shifting' → logprob: -2.7666239738464355
    4. 'sh' → logprob: -2.7666239738464355
    5. 'the' → logprob: -3.5166239738464355
    6. 'swap' → logprob: -4.1416239738464355
    7. '   ' → logprob: -4.2666239738464355
    8. ' the' → logprob: -4.8916239738464355
    9. 'shift' → logprob: -5.7666239738464355
    10. 'message' → logprob: -6.6416239738464355

Token 237: ' back' (ID: 1602)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.049208998680114746
    2. '   ' → logprob: -3.5492091178894043
    3. '),' → logprob: -5.049209117889404
    4. ' ,' → logprob: -5.299209117889404
    5. ':' → logprob: -6.299209117889404
    6. ')' → logprob: -6.299209117889404
    7. 'message' → logprob: -6.799209117889404
    8. ',
' → logprob: -7.424209117889404
    9. 'for' → logprob: -7.924209117889404
    10. ' we' → logprob: -8.174208641052246

Token 238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.035637229681015015
    2. '   ' → logprob: -4.160637378692627
    3. '       ' → logprob: -4.535637378692627
    4. ' ,' → logprob: -5.535637378692627
    5. ':' → logprob: -5.910637378692627
    6. ',
' → logprob: -6.785637378692627
    7. ' we' → logprob: -8.285636901855469
    8. ' for' → logprob: -9.410636901855469
    9. '        
' → logprob: -9.410636901855469
    10. '),' → logprob: -9.535636901855469

Token 239: ' shift' (ID: 12847)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38391736149787903
    2. ' for' → logprob: -1.2589173316955566
    3. 'message' → logprob: -4.008917331695557
    4. '   ' → logprob: -4.633917331695557
    5. ' message' → logprob: -5.258917331695557
    6. ' we' → logprob: -7.008917331695557
    7. '#' → logprob: -8.383917808532715
    8. 'we' → logprob: -8.633917808532715
    9. ')' → logprob: -9.133917808532715
    10. ' shift' → logprob: -9.633917808532715

Token 240: ' both' (ID: 2973)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.28483912348747253
    2. ' message' → logprob: -1.534839153289795
    3. '   ' → logprob: -3.534839153289795
    4. '_char' → logprob: -7.034839153289795
    5. '(message' → logprob: -7.534839153289795
    6. '       ' → logprob: -7.909839153289795
    7. '_message' → logprob: -8.159838676452637
    8. ')' → logprob: -8.534838676452637
    9. '	message' → logprob: -9.034838676452637
    10. 'char' → logprob: -9.534838676452637

Token 241: ' chars' (ID: 47991)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.21310025453567505
    2. ' message' → logprob: -1.9631001949310303
    3. '(message' → logprob: -3.9631001949310303
    4. '   ' → logprob: -4.338100433349609
    5. ' by' → logprob: -4.588100433349609
    6. '[' → logprob: -5.713100433349609
    7. 'by' → logprob: -6.213100433349609
    8. ')' → logprob: -7.338100433349609
    9. 'for' → logprob: -8.33810043334961
    10. ' [' → logprob: -8.33810043334961

Token 242: ' forward' (ID: 6687)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48637306690216064
    2. '[' → logprob: -1.3613730669021606
    3. 'message' → logprob: -2.361372947692871
    4. ' message' → logprob: -3.986372947692871
    5. ' at' → logprob: -4.611372947692871
    6. ' [' → logprob: -7.236372947692871
    7. '=' → logprob: -7.236372947692871
    8. '(message' → logprob: -7.361372947692871
    9. ' =' → logprob: -7.361372947692871
    10. '[a' → logprob: -7.611372947692871

Token 243: ' by' (ID: 656)
  Prédit: '(message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(message' → logprob: -0.6614152789115906
    2. ' by' → logprob: -1.6614153385162354
    3. 'message' → logprob: -2.2864153385162354
    4. '   ' → logprob: -2.4114153385162354
    5. ' (' → logprob: -2.7864153385162354
    6. ' message' → logprob: -4.286415100097656
    7. ')' → logprob: -4.411415100097656
    8. 'by' → logprob: -5.161415100097656
    9. '       ' → logprob: -5.911415100097656
    10. '(' → logprob: -5.911415100097656

Token 244: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.038043901324272156
    2. ' diff' → logprob: -3.288043975830078
    3. '	diff' → logprob: -13.538043975830078
    4. '(diff' → logprob: -14.038043975830078
    5. 'd' → logprob: -16.538043975830078
    6. '```' → logprob: -17.038043975830078
    7. '_diff' → logprob: -17.163043975830078
    8. '
' → logprob: -17.163043975830078
    9. ' ' → logprob: -17.663043975830078
    10. '.diff' → logprob: -17.788043975830078

Token 245: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016689805313944817
    2. '        
' → logprob: -4.391689777374268
    3. '
' → logprob: -6.766689777374268
    4. ',' → logprob: -6.766689777374268
    5. '<|end|>' → logprob: -7.391689777374268
    6. '   ' → logprob: -7.891689777374268
    7. '  
' → logprob: -8.516690254211426
    8. ')' → logprob: -8.516690254211426
    9. '       
' → logprob: -9.391690254211426
    10. '    
' → logprob: -9.391690254211426

Token 246: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038564540445804596
    2. '       ' → logprob: -3.413564443588257
    3. '    
' → logprob: -6.413564682006836
    4. 'message' → logprob: -6.788564682006836
    5. '        
' → logprob: -6.788564682006836
    6. '
' → logprob: -7.663564682006836
    7. '<|end|>' → logprob: -9.038564682006836
    8. ' 
' → logprob: -9.788564682006836
    9. '   
' → logprob: -10.163564682006836
    10. '  
' → logprob: -10.163564682006836

Token 247: ' message' (ID: 3176)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18221932649612427
    2. ' message' → logprob: -2.4322192668914795
    3. 'message' (adapté à ' message') → logprob: -2.6822192668914795
    4. '    
' → logprob: -5.432219505310059
    5. '       ' → logprob: -5.807219505310059
    6. ' 
' → logprob: -7.057219505310059
    7. '    ' → logprob: -7.307219505310059
    8. '        
' → logprob: -7.807219505310059
    9. '
' → logprob: -8.432219505310059
    10. ' for' → logprob: -8.682219505310059

Token 248: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.00026288547087460756
    2. '[' → logprob: -8.625263214111328
    3. '[b' → logprob: -9.500263214111328
    4. ' [' → logprob: -13.000263214111328
    5. 'a' → logprob: -13.250263214111328
    6. '][' → logprob: -14.125263214111328
    7. '[
' → logprob: -14.250263214111328
    8. '```' → logprob: -14.500263214111328
    9. '[m' → logprob: -14.625263214111328
    10. ')[' → logprob: -14.875263214111328

Token 249: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00037144700763747096
    2. ' ]' → logprob: -8.125370979309082
    3. ']=' → logprob: -9.500370979309082
    4. ')' → logprob: -16.1253719329834
    5. '=' → logprob: -16.1253719329834
    6. '   ' → logprob: -16.6253719329834
    7. ']='' → logprob: -16.6253719329834
    8. '])' → logprob: -17.0003719329834
    9. ']=(' → logprob: -17.0003719329834
    10. ']+=' → logprob: -17.1253719329834

Token 250: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47454482316970825
    2. ' =' → logprob: -0.9745448231697083
    3. ']' → logprob: -7.724545001983643
    4. ']=' → logprob: -10.724544525146484
    5. ')' → logprob: -12.974544525146484
    6. ')=' → logprob: -14.224544525146484
    7. ' ]' → logprob: -14.599544525146484
    8. ' ' → logprob: -15.474544525146484
    9. '＝' → logprob: -16.349544525146484
    10. ',' → logprob: -16.474544525146484

Token 251: ' shift' (ID: 12847)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.0031777136027812958
    2. ' shift' → logprob: -5.753177642822266
    3. 'chr' → logprob: -17.253177642822266
    4. '.shift' → logprob: -17.878177642822266
    5. 'sh' → logprob: -18.628177642822266
    6. '   ' → logprob: -19.628177642822266
    7. ' ' → logprob: -20.503177642822266
    8. 'hift' → logprob: -20.503177642822266
    9. 'strip' → logprob: -21.003177642822266
    10. ' chr' → logprob: -21.378177642822266

Token 252: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -1.5094070477061905e-05
    2. 'char' → logprob: -11.250015258789062
    3. '_chars' → logprob: -14.500015258789062
    4. ''_' → logprob: -15.000015258789062
    5. 'Char' → logprob: -15.125015258789062
    6. '_' → logprob: -15.500015258789062
    7. '
' → logprob: -15.625015258789062
    8. '```' → logprob: -15.875015258789062
    9. '`' → logprob: -16.625015258789062
    10. '_message' → logprob: -17.000015258789062

Token 253: '(message' (ID: 13343)
  Prédit: '(message'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(message' → logprob: -0.004080420359969139
    2. '(' → logprob: -5.504080295562744
    3. '(
' → logprob: -14.004080772399902
    4. ' (' → logprob: -14.504080772399902
    5. '('' → logprob: -15.504080772399902
    6. '(m' → logprob: -15.879080772399902
    7. 'message' → logprob: -16.004079818725586
    8. '(

' → logprob: -17.879079818725586
    9. ',message' → logprob: -18.129079818725586
    10. '(me' → logprob: -18.379079818725586

Token 254: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.00013810492237098515
    2. '[b' → logprob: -9.375138282775879
    3. 'a' → logprob: -10.000138282775879
    4. '[' → logprob: -12.125138282775879
    5. '```' → logprob: -13.500138282775879
    6. '[
' → logprob: -15.000138282775879
    7. ' [' → logprob: -15.250138282775879
    8. ' a' → logprob: -16.125137329101562
    9. ']' → logprob: -16.750137329101562
    10. ' ' → logprob: -17.000137329101562

Token 255: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007056408794596791
    2. ' ,' → logprob: -7.500705718994141
    3. '',' → logprob: -9.25070571899414
    4. ',b' → logprob: -10.37570571899414
    5. '   ' → logprob: -12.25070571899414
    6. '`,' → logprob: -12.37570571899414
    7. ' ' → logprob: -12.75070571899414
    8. 'b' → logprob: -13.00070571899414
    9. ',a' → logprob: -13.00070571899414
    10. '],' → logprob: -13.25070571899414

Token 256: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.01815205067396164
    2. ' diff' → logprob: -4.018152236938477
    3. '	diff' → logprob: -13.268152236938477
    4. '(diff' → logprob: -15.393152236938477
    5. '+' → logprob: -16.393152236938477
    6. ')' → logprob: -18.143152236938477
    7. 'dif' → logprob: -18.643152236938477
    8. '.diff' → logprob: -18.768152236938477
    9. ' ' → logprob: -18.893152236938477
    10. '    ' → logprob: -19.018152236938477

Token 257: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.038163818418979645
    2. ')' → logprob: -3.288163900375366
    3. ')
' → logprob: -9.038164138793945
    4. ')

' → logprob: -13.163164138793945
    5. ' )
' → logprob: -14.038164138793945
    6. '   ' → logprob: -14.663164138793945
    7. '       ' → logprob: -15.038164138793945
    8. '),' → logprob: -17.913164138793945
    9. ' )' → logprob: -17.913164138793945
    10. ')`
' → logprob: -18.038164138793945

Token 258: '       ' (ID: 309)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.8555948138237
    2. '   ' → logprob: -1.3555948734283447
    3. ' message' → logprob: -1.4805948734283447
    4. '       ' → logprob: -3.6055948734283447
    5. '<|end|>' → logprob: -3.6055948734283447
    6. '
' → logprob: -4.605594635009766
    7. ' ' → logprob: -4.730594635009766
    8. ' 
' → logprob: -5.605594635009766
    9. '    
' → logprob: -6.355594635009766
    10. ')' → logprob: -6.355594635009766

Token 259: ' message' (ID: 3176)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'message' (adapté à ' message') → logprob: -0.15375220775604248
    2. ' message' → logprob: -2.028752326965332
    3. '       ' → logprob: -4.653752326965332
    4. '   ' → logprob: -7.028752326965332
    5. ' ' → logprob: -8.403752326965332
    6. ' 
' → logprob: -8.528752326965332
    7. '        
' → logprob: -10.153752326965332
    8. '	message' → logprob: -10.403752326965332
    9. '
' → logprob: -11.028752326965332
    10. '    ' → logprob: -11.153752326965332

Token 260: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -2.7252845029579476e-05
    2. '[' → logprob: -10.875027656555176
    3. 'b' → logprob: -11.750027656555176
    4. ' [' → logprob: -16.12502670288086
    5. '[
' → logprob: -16.12502670288086
    6. '[a' → logprob: -16.37502670288086
    7. '```' → logprob: -17.00002670288086
    8. '   ' → logprob: -18.12502670288086
    9. ' b' → logprob: -19.00002670288086
    10. '[m' → logprob: -19.12502670288086

Token 261: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006413076189346611
    2. '],' → logprob: -8.125640869140625
    3. ')' → logprob: -8.500640869140625
    4. ']=' → logprob: -9.875640869140625
    5. ' ]' → logprob: -10.125640869140625
    6. '])' → logprob: -10.375640869140625
    7. ')]' → logprob: -11.500640869140625
    8. '=' → logprob: -12.375640869140625
    9. ',' → logprob: -13.375640869140625
    10. '   ' → logprob: -13.500640869140625

Token 262: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741474390029907
    2. ' =' → logprob: -0.9741474390029907
    3. ']' → logprob: -10.09914779663086
    4. ')' → logprob: -10.47414779663086
    5. ' ' → logprob: -14.84914779663086
    6. ']=' → logprob: -15.47414779663086
    7. ')=' → logprob: -16.09914779663086
    8. ',' → logprob: -16.22414779663086
    9. ' )' → logprob: -16.59914779663086
    10. ' ]' → logprob: -16.84914779663086

Token 263: ' shift' (ID: 12847)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.07889033854007721
    2. ' shift' → logprob: -2.578890323638916
    3. '.shift' → logprob: -15.203890800476074
    4. 'sh' → logprob: -15.828890800476074
    5. '   ' → logprob: -16.703889846801758
    6. ' ' → logprob: -16.828889846801758
    7. 'hift' → logprob: -17.953889846801758
    8. '    ' → logprob: -18.203889846801758
    9. ' ' → logprob: -18.453889846801758
    10. '```' → logprob: -18.703889846801758

Token 264: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -3.128163257315464e-07
    2. 'char' → logprob: -15.5
    3. 'Char' → logprob: -18.125
    4. '_CHAR' → logprob: -18.625
    5. '<char' → logprob: -19.125
    6. '_chars' → logprob: -19.5
    7. '-char' → logprob: -20.75
    8. '.char' → logprob: -21.0
    9. '_' → logprob: -21.125
    10. ''_' → logprob: -21.625

Token 265: '(message' (ID: 13343)
  Prédit: '(message'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(message' → logprob: -4.961759259458631e-06
    2. '(' → logprob: -12.250004768371582
    3. 'message' → logprob: -16.1250057220459
    4. ',message' → logprob: -17.8750057220459
    5. ' (' → logprob: -19.2500057220459
    6. ' message' → logprob: -19.8750057220459
    7. '$message' → logprob: -20.1250057220459
    8. '	message' → logprob: -20.5000057220459
    9. '(
' → logprob: -20.5000057220459
    10. '```' → logprob: -21.0000057220459

Token 266: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -2.1888679839321412e-05
    2. 'b' → logprob: -10.750021934509277
    3. '[' → logprob: -15.875021934509277
    4. ' b' → logprob: -16.62502098083496
    5. '```' → logprob: -17.25002098083496
    6. '[a' → logprob: -17.37502098083496
    7. '   ' → logprob: -18.25002098083496
    8. ' ' → logprob: -18.37502098083496
    9. '][' → logprob: -18.37502098083496
    10. ',' → logprob: -18.37502098083496

Token 267: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.10032258182764053
    2. ',' → logprob: -2.3503224849700928
    3. ' ,' → logprob: -9.850322723388672
    4. ']' → logprob: -10.475322723388672
    5. ' ],' → logprob: -10.975322723388672
    6. '),' → logprob: -11.225322723388672
    7. '[b' → logprob: -13.850322723388672
    8. '   ' → logprob: -13.975322723388672
    9. ',b' → logprob: -14.100322723388672
    10. ' ' → logprob: -14.725322723388672

Token 268: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.038042180240154266
    2. ' diff' → logprob: -3.2880420684814453
    3. '	diff' → logprob: -14.538042068481445
    4. '(diff' → logprob: -15.288042068481445
    5. '.diff' → logprob: -18.913042068481445
    6. 'd' → logprob: -19.163042068481445
    7. '   ' → logprob: -19.413042068481445
    8. ' ' → logprob: -19.788042068481445
    9. '_diff' → logprob: -20.663042068481445
    10. 'def' → logprob: -21.163042068481445

Token 269: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04326510429382324
    2. ')
' → logprob: -3.1682651042938232
    3. '       ' → logprob: -8.293265342712402
    4. '   ' → logprob: -11.668265342712402
    5. ')

' → logprob: -12.168265342712402
    6. ')
' → logprob: -13.918265342712402
    7. ')#' → logprob: -16.168264389038086
    8. '),' → logprob: -16.293264389038086
    9. ')`' → logprob: -16.293264389038086
    10. ')\' → logprob: -16.793264389038086

Token 270: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3940379321575165
    2. '       ' → logprob: -1.1440379619598389
    3. 'message' → logprob: -5.51903772354126
    4. '<|end|>' → logprob: -6.01903772354126
    5. '```' → logprob: -7.89403772354126
    6. ' message' → logprob: -9.769038200378418
    7. ')' → logprob: -10.269038200378418
    8. '(message' → logprob: -10.269038200378418
    9. '    ' → logprob: -10.394038200378418
    10. '[' → logprob: -10.644038200378418

Token 271: ' #' (ID: 1069)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.0012078535510227084
    2. '   ' → logprob: -7.1262078285217285
    3. '       ' → logprob: -8.001208305358887
    4. ' message' → logprob: -9.626208305358887
    5. '	message' → logprob: -14.251208305358887
    6. '(message' → logprob: -14.376208305358887
    7. '```' → logprob: -15.001208305358887
    8. ',message' → logprob: -15.876208305358887
    9. 'm' → logprob: -16.12620735168457
    10. ')' → logprob: -16.37620735168457

Token 272: ' then' (ID: 1815)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.00014120421838015318
    2. '#' → logprob: -9.250141143798828
    3. ' message' → logprob: -10.625141143798828
    4. '       ' → logprob: -11.125141143798828
    5. '   ' → logprob: -12.125141143798828
    6. '        
' → logprob: -16.000141143798828
    7. 'm' → logprob: -16.250141143798828
    8. '	message' → logprob: -16.500141143798828
    9. '     ' → logprob: -17.375141143798828
    10. '           ' → logprob: -17.500141143798828

Token 273: ' swap' (ID: 25489)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.16745102405548096
    2. ' message' → logprob: -1.917451024055481
    3. '       ' → logprob: -5.042450904846191
    4. '   ' → logprob: -7.792450904846191
    5. '#' → logprob: -8.292450904846191
    6. 'swap' → logprob: -10.542450904846191
    7. ' #' → logprob: -11.042450904846191
    8. ',' → logprob: -11.917450904846191
    9. '	message' → logprob: -12.292450904846191
    10. ' swap' → logprob: -12.292450904846191

Token 274: ' back' (ID: 1602)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.0491514652967453
    2. ' message' → logprob: -3.0491514205932617
    3. '   ' → logprob: -7.549151420593262
    4. '(message' → logprob: -10.549151420593262
    5. ',message' → logprob: -12.299151420593262
    6. '	message' → logprob: -12.674151420593262
    7. '       ' → logprob: -13.299151420593262
    8. 'essage' → logprob: -14.549151420593262
    9. '
' → logprob: -15.174151420593262
    10. '.message' → logprob: -15.299151420593262

Token 275: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07485801726579666
    2. 'message' → logprob: -2.6998579502105713
    3. '       ' → logprob: -6.44985818862915
    4. '(message' → logprob: -6.69985818862915
    5. '<|end|>' → logprob: -7.19985818862915
    6. ' message' → logprob: -7.82485818862915
    7. '[' → logprob: -8.074857711791992
    8. ')' → logprob: -8.949857711791992
    9. ',message' → logprob: -9.449857711791992
    10. '	message' → logprob: -9.574857711791992

Token 276: ' original' (ID: 4756)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.09014134854078293
    2. ' message' → logprob: -2.4651412963867188
    3. '   ' → logprob: -8.465141296386719
    4. '       ' → logprob: -8.590141296386719
    5. 'swap' → logprob: -8.590141296386719
    6. 'essage' → logprob: -9.090141296386719
    7. 'reverse' → logprob: -9.090141296386719
    8. 'restore' → logprob: -9.215141296386719
    9. ' ' → logprob: -10.215141296386719
    10. 'm' → logprob: -10.215141296386719

Token 277: ' places' (ID: 9610)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4823102056980133
    2. 'message' → logprob: -0.9823101758956909
    3. ' message' → logprob: -4.9823102951049805
    4. '       ' → logprob: -6.7323102951049805
    5. '(message' → logprob: -9.60731029510498
    6. ',message' → logprob: -10.23231029510498
    7. '	message' → logprob: -10.98231029510498
    8. ',' → logprob: -12.10731029510498
    9. '[' → logprob: -12.23231029510498
    10. '.message' → logprob: -12.35731029510498

Token 278: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06006843224167824
    2. '       ' → logprob: -2.935068368911743
    3. 'message' → logprob: -5.560068607330322
    4. '
' → logprob: -7.060068607330322
    5. '    
' → logprob: -8.685068130493164
    6. '        
' → logprob: -9.185068130493164
    7. ' message' → logprob: -9.810068130493164
    8. '<|end|>' → logprob: -9.810068130493164
    9. '(message' → logprob: -10.935068130493164
    10. '	message' → logprob: -11.185068130493164

Token 279: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47913825511932373
    2. '   ' → logprob: -1.3541382551193237
    3. 'message' → logprob: -2.1041383743286133
    4. ' message' → logprob: -7.729138374328613
    5. '(message' → logprob: -10.479138374328613
    6. '<|end|>' → logprob: -10.979138374328613
    7. '[' → logprob: -11.104138374328613
    8. '	message' → logprob: -11.104138374328613
    9. ',message' → logprob: -11.354138374328613
    10. '```' → logprob: -11.854138374328613

Token 280: ' message' (ID: 3176)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'message' (adapté à ' message') → logprob: -1.1279553291387856e-05
    2. ' message' → logprob: -11.625011444091797
    3. '   ' → logprob: -13.250011444091797
    4. '       ' → logprob: -14.625011444091797
    5. '(message' → logprob: -17.375011444091797
    6. '	message' → logprob: -17.750011444091797
    7. ',message' → logprob: -18.000011444091797
    8. 'essage' → logprob: -18.750011444091797
    9. '```' → logprob: -19.375011444091797
    10. '$message' → logprob: -19.625011444091797

Token 281: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.474481463432312
    2. '[b' → logprob: -0.974481463432312
    3. '[' → logprob: -7.849481582641602
    4. 'a' → logprob: -11.849481582641602
    5. '```' → logprob: -12.724481582641602
    6. 'b' → logprob: -12.974481582641602
    7. '[m' → logprob: -15.099481582641602
    8. ' [' → logprob: -15.474481582641602
    9. '\[' → logprob: -15.474481582641602
    10. '[
' → logprob: -15.849481582641602

Token 282: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -8.470901229884475e-05
    2. ']' → logprob: -9.50008487701416
    3. ',' → logprob: -11.62508487701416
    4. '],[' → logprob: -15.37508487701416
    5. ' ],' → logprob: -15.37508487701416
    6. '[b' → logprob: -16.125083923339844
    7. '[' → logprob: -16.875083923339844
    8. '>,' → logprob: -17.000083923339844
    9. ''],' → logprob: -17.125083923339844
    10. '][' → logprob: -17.375083923339844

Token 283: ' message' (ID: 3176)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.00026169343618676066
    2. ' message' → logprob: -8.250261306762695
    3. '	message' → logprob: -15.875261306762695
    4. '<|end|>' → logprob: -15.875261306762695
    5. '   ' → logprob: -17.000261306762695
    6. '$message' → logprob: -17.500261306762695
    7. '(message' → logprob: -17.750261306762695
    8. 'm' → logprob: -18.625261306762695
    9. 'essage' → logprob: -19.000261306762695
    10. ',message' → logprob: -19.000261306762695

Token 284: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.00011117222311440855
    2. 'b' → logprob: -9.25011157989502
    3. '[' → logprob: -11.12511157989502
    4. '```' → logprob: -16.375110626220703
    5. '[a' → logprob: -16.625110626220703
    6. '[
' → logprob: -17.125110626220703
    7. '][' → logprob: -17.375110626220703
    8. '[s' → logprob: -18.750110626220703
    9. '[user' → logprob: -18.875110626220703
    10. ' [' → logprob: -19.125110626220703

Token 285: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.660315895918757e-05
    2. ']=' → logprob: -9.500076293945312
    3. '=' → logprob: -13.375076293945312
    4. ' ]' → logprob: -15.750076293945312
    5. '<|end|>' → logprob: -18.125076293945312
    6. '[' → logprob: -18.500076293945312
    7. 'message' → logprob: -18.500076293945312
    8. '   ' → logprob: -18.750076293945312
    9. '']' → logprob: -19.000076293945312
    10. ']
' → logprob: -19.250076293945312

Token 286: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00091217877343297
    2. ' =' → logprob: -7.000912189483643
    3. '<|end|>' → logprob: -14.625911712646484
    4. '=

' → logprob: -16.000911712646484
    5. '=
' → logprob: -17.000911712646484
    6. ',' → logprob: -17.625911712646484
    7. '.=' → logprob: -17.750911712646484
    8. '=}' → logprob: -17.875911712646484
    9. ')=' → logprob: -18.250911712646484
    10. '=user' → logprob: -18.750911712646484

Token 287: ' message' (ID: 3176)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.0005530327325686812
    2. ' message' → logprob: -7.500553131103516
    3. '	message' → logprob: -17.500553131103516
    4. ' ' → logprob: -17.875553131103516
    5. '   ' → logprob: -17.875553131103516
    6. '(message' → logprob: -19.500553131103516
    7. 'mess' → logprob: -19.500553131103516
    8. '  ' → logprob: -19.625553131103516
    9. 'essage' → logprob: -19.750553131103516
    10. 'm' → logprob: -19.875553131103516

Token 288: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -8.101369894575328e-05
    2. 'b' → logprob: -9.625081062316895
    3. '[a' → logprob: -11.125081062316895
    4. '[' → logprob: -16.500080108642578
    5. 'a' → logprob: -17.125080108642578
    6. '```' → logprob: -17.625080108642578
    7. '   ' → logprob: -18.000080108642578
    8. ' b' → logprob: -18.000080108642578
    9. '(b' → logprob: -19.000080108642578
    10. '<b' → logprob: -19.500080108642578

Token 289: '],' (ID: 2155)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.09945299476385117
    2. ',' → logprob: -2.9744529724121094
    3. '],' → logprob: -3.5994529724121094
    4. 'a' → logprob: -4.224452972412109
    5. ',a' → logprob: -6.474452972412109
    6. ']' → logprob: -9.72445297241211
    7. '],[' → logprob: -12.47445297241211
    8. '[' → logprob: -12.59945297241211
    9. '][' → logprob: -12.97445297241211
    10. ' a' → logprob: -13.34945297241211

Token 290: ' message' (ID: 3176)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.0004330532974563539
    2. ' message' → logprob: -7.750432968139648
    3. 'a' → logprob: -13.125432968139648
    4. '   ' → logprob: -15.750432968139648
    5. ' ' → logprob: -16.75043296813965
    6. '	message' → logprob: -17.37543296813965
    7. ' a' → logprob: -17.62543296813965
    8. 'm' → logprob: -18.37543296813965
    9. '[a' → logprob: -18.37543296813965
    10. '(message' → logprob: -18.50043296813965

Token 291: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0007102862582542002
    2. 'a' → logprob: -7.250710487365723
    3. '```' → logprob: -15.125710487365723
    4. '[' → logprob: -17.250709533691406
    5. ' a' → logprob: -17.875709533691406
    6. '<a' → logprob: -18.000709533691406
    7. '	a' → logprob: -18.750709533691406
    8. '[
' → logprob: -18.750709533691406
    9. '(a' → logprob: -18.750709533691406
    10. '[b' → logprob: -19.250709533691406

Token 292: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.3544423381972592e-05
    2. '<|end|>' → logprob: -11.87501335144043
    3. ']
' → logprob: -12.62501335144043
    4. ')' → logprob: -13.12501335144043
    5. ' ]' → logprob: -15.25001335144043
    6. '[a' → logprob: -15.37501335144043
    7. '}' → logprob: -15.37501335144043
    8. '']' → logprob: -16.25001335144043
    9. ']

' → logprob: -16.50001335144043
    10. '[' → logprob: -16.50001335144043

Token 293: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000727325037587434
    2. '   ' → logprob: -7.37572717666626
    3. ' print' → logprob: -10.000727653503418
    4. ')' → logprob: -11.000727653503418
    5. '
' → logprob: -11.125727653503418
    6. '    
' → logprob: -11.625727653503418
    7. '```' → logprob: -11.750727653503418
    8. '<|end|>' → logprob: -12.375727653503418
    9. '  
' → logprob: -14.250727653503418
    10. '	print' → logprob: -14.375727653503418

Token 294: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.5048530030981055e-06
    2. '```' → logprob: -14.375001907348633
    3. ' print' → logprob: -14.500001907348633
    4. '   ' → logprob: -14.750001907348633
    5. '    
' → logprob: -18.500001907348633
    6. '	print' → logprob: -19.125001907348633
    7. '
' → logprob: -19.250001907348633
    8. '#print' → logprob: -19.750001907348633
    9. 'pr' → logprob: -20.125001907348633
    10. '``' → logprob: -20.375001907348633

Token 295: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.048670027405023575
    2. '("' → logprob: -3.0486700534820557
    3. '(' → logprob: -9.423669815063477
    4. '(""' → logprob: -14.298669815063477
    5. ' (' → logprob: -15.298669815063477
    6. '''.' → logprob: -15.798669815063477
    7. '('').' → logprob: -15.798669815063477
    8. '()' → logprob: -15.923669815063477
    9. '"' → logprob: -16.173669815063477
    10. '("")' → logprob: -16.298669815063477

Token 296: '".' (ID: 4050)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06236066669225693
    2. '''.' → logprob: -2.8123607635498047
    3. '""' → logprob: -8.062360763549805
    4. ' "".' → logprob: -10.062360763549805
    5. '''' → logprob: -11.062360763549805
    6. ' ''.' → logprob: -11.437360763549805
    7. ''' → logprob: -12.687360763549805
    8. '".' → logprob: -13.062360763549805
    9. '("' → logprob: -13.812360763549805
    10. '```' → logprob: -14.312360763549805

Token 297: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.1041145626222715e-05
    2. 'print' → logprob: -12.000011444091797
    3. ' join' → logprob: -13.125011444091797
    4. 'jo' → logprob: -13.375011444091797
    5. 'strip' → logprob: -14.500011444091797
    6. 'j' → logprob: -16.000011444091797
    7. 'rstrip' → logprob: -16.000011444091797
    8. '.join' → logprob: -16.125011444091797
    9. 'Join' → logprob: -16.750011444091797
    10. 'joined' → logprob: -16.875011444091797

Token 298: '(message' (ID: 13343)
  Prédit: '(message'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(message' → logprob: -4.56102097814437e-05
    2. 'message' → logprob: -10.000045776367188
    3. ')' → logprob: -16.750045776367188
    4. ',message' → logprob: -17.500045776367188
    5. '(' → logprob: -18.500045776367188
    6. ' message' → logprob: -18.875045776367188
    7. '$message' → logprob: -19.000045776367188
    8. '	message' → logprob: -19.125045776367188
    9. 'essage' → logprob: -21.125045776367188
    10. ' (' → logprob: -21.500045776367188

Token 299: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01817721500992775
    2. '))' → logprob: -4.018177032470703
    3. '())' → logprob: -10.518177032470703
    4. '()' → logprob: -15.893177032470703
    5. ')))' → logprob: -16.393177032470703
    6. '])' → logprob: -17.018177032470703
    7. ')}' → logprob: -17.393177032470703
    8. ')`' → logprob: -17.393177032470703
    9. '})' → logprob: -17.643177032470703
    10. ' )' → logprob: -17.643177032470703


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 297
Tokens correctement prédits (1ère position, stricte): 81
Tokens correctement prédits (1ère position, avec adaptation): 86
Tokens correctement prédits (top 10): 213
Précision stricte (1ère position): 27.27%
Précision adaptée (1ère position): 28.96%
Précision (top 10): 71.72%
================================================================================
