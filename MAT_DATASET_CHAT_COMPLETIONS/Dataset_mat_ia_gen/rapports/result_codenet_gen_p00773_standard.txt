================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def calc_after_tax(p, rate):
    return (p * (100 + rate) + 50) // 100

while True:
    x, y, s = map(int, input().split())
    if x == 0 and y == 0 and s == 0:
        break
    max_price = 0
    for a in range(1, s):
        b = s - a
        # check all pairs that sum to s at VAT rate x
        if calc_after_tax(a, x) + calc_after_tax(b, x) == s:
            price = calc_after_tax(a, y) + calc_after_tax(b, y)
            if price > max_price:
                max_price = price
    print(max_price)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' calc' (ID: 25691)
  → Token d'amorce (pas de prédiction)

Token 2: '_after' (ID: 46788)
  → Token d'amorce (pas de prédiction)

Token 3: '_tax' (ID: 61146)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.003256973112002015
    2. '```' → logprob: -7.128256797790527
    3. '_calc' → logprob: -7.628256797790527
    4. '_tax' → logprob: -7.753256797790527
    5. '_return' → logprob: -8.003256797790527
    6. '_space' → logprob: -8.128256797790527
    7. '_fee' → logprob: -8.378256797790527
    8. '(_' → logprob: -9.503256797790527
    9. '_discount' → logprob: -9.753256797790527
    10. ' _' → logprob: -10.003256797790527

Token 4: '(p' (ID: 2407)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1344504952430725
    2. '_' → logprob: -2.2594504356384277
    3. '(_' → logprob: -4.634450435638428
    4. '(_:' → logprob: -5.009450435638428
    5. '(:' → logprob: -6.509450435638428
    6. '():' → logprob: -7.009450435638428
    7. '```' → logprob: -7.259450435638428
    8. '_:' → logprob: -7.759450435638428
    9. 's' → logprob: -7.759450435638428
    10. '_parent' → logprob: -8.884450912475586

Token 5: ',' (ID: 11)
  Prédit: 'rice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rice' → logprob: -0.9716679453849792
    2. '_' → logprob: -1.221668004989624
    3. 'urchase' → logprob: -1.971668004989624
    4. 'ar' → logprob: -3.596668004989624
    5. '_r' → logprob: -3.721668004989624
    6. '):' → logprob: -3.846668004989624
    7. 'ay' → logprob: -3.971668004989624
    8. ')' → logprob: -4.096667766571045
    9. '_price' → logprob: -4.221667766571045
    10. '_a' → logprob: -4.471667766571045

Token 6: ' rate' (ID: 6251)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7446871399879456
    2. ' t' → logprob: -1.1196870803833008
    3. 'r' → logprob: -3.494687080383301
    4. 'i' → logprob: -3.869687080383301
    5. ' income' → logprob: -4.119687080383301
    6. 'tax' → logprob: -4.119687080383301
    7. 'y' → logprob: -4.244687080383301
    8. 's' → logprob: -4.619687080383301
    9. 'q' → logprob: -4.619687080383301
    10. 'income' → logprob: -4.869687080383301

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012958350125700235
    2. ')' → logprob: -7.251296043395996
    3. '_' → logprob: -8.501296043395996
    4. '*' → logprob: -9.126296043395996
    5. ',' → logprob: -9.376296043395996
    6. ':' → logprob: -9.501296043395996
    7. '=' → logprob: -10.876296043395996
    8. '```' → logprob: -10.876296043395996
    9. '_tax' → logprob: -11.501296043395996
    10. '):
' → logprob: -11.626296043395996

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09777866303920746
    2. ':' → logprob: -2.472778558731079
    3. '```' → logprob: -6.347778797149658
    4. ' ' → logprob: -6.472778797149658
    5. ' return' → logprob: -6.847778797149658
    6. '    ' → logprob: -6.847778797149658
    7. '	return' → logprob: -7.222778797149658
    8. ':return' → logprob: -7.347778797149658
    9. '\' → logprob: -8.0977783203125
    10. ''' → logprob: -8.0977783203125

Token 9: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3003406226634979
    2. ' return' → logprob: -1.6753406524658203
    3. 'return' (adapté à ' return') → logprob: -3.1753406524658203
    4. ' ' → logprob: -4.05034065246582
    5. '    ' → logprob: -5.67534065246582
    6. '```' → logprob: -5.92534065246582
    7. ''' → logprob: -6.42534065246582
    8. 'r' → logprob: -6.92534065246582
    9. '\t' → logprob: -7.42534065246582
    10. '_' → logprob: -7.55034065246582

Token 10: ' (' (ID: 350)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.001442376640625298
    2. 'p' → logprob: -7.2514424324035645
    3. ' ' → logprob: -7.2514424324035645
    4. ' (' → logprob: -12.126441955566406
    5. ' round' → logprob: -12.501441955566406
    6. '(p' → logprob: -12.626441955566406
    7. '(' → logprob: -13.376441955566406
    8. ' max' → logprob: -13.751441955566406
    9. ' ' → logprob: -13.751441955566406
    10. ' price' → logprob: -13.876441955566406

Token 11: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.22545354068279266
    2. ' p' → logprob: -1.600453495979309
    3. '   ' → logprob: -10.72545337677002
    4. ')' → logprob: -11.60045337677002
    5. '1' → logprob: -12.35045337677002
    6. ')p' → logprob: -13.85045337677002
    7. ' ' → logprob: -13.97545337677002
    8. ' (' → logprob: -14.10045337677002
    9. '(p' → logprob: -14.35045337677002
    10. '    ' → logprob: -14.47545337677002

Token 12: ' *' (ID: 425)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5038596391677856
    2. ' *' → logprob: -1.0038596391677856
    3. '*' → logprob: -4.128859519958496
    4. '-' → logprob: -4.628859519958496
    5. ')' → logprob: -6.128859519958496
    6. ' ' → logprob: -7.128859519958496
    7. ' )' → logprob: -8.253859519958496
    8. ',' → logprob: -10.253859519958496
    9. '   ' → logprob: -10.628859519958496
    10. ' ,' → logprob: -10.753859519958496

Token 13: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1810976266860962
    2. '(' → logprob: -1.8060976266860962
    3. ')' → logprob: -6.681097507476807
    4. '1' → logprob: -10.181097984313965
    5. ' )' → logprob: -11.306097984313965
    6. '<|end|>' → logprob: -11.306097984313965
    7. '(rate' → logprob: -11.556097984313965
    8. ' ' → logprob: -11.681097984313965
    9. 'rate' → logprob: -12.181097984313965
    10. ' rate' → logprob: -13.056097984313965

Token 14: '100' (ID: 1353)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007241101702675223
    2. ' ' → logprob: -7.5007243156433105
    3. '(' → logprob: -9.125723838806152
    4. ' (' → logprob: -10.375723838806152
    5. '100' → logprob: -10.500723838806152
    6. '   ' → logprob: -12.875723838806152
    7. 'rate' → logprob: -14.250723838806152
    8. '  ' → logprob: -16.87572479248047
    9. '```' → logprob: -17.00072479248047
    10. ' rate' → logprob: -17.25072479248047

Token 15: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14275793731212616
    2. '-' → logprob: -2.0177578926086426
    3. ' ' → logprob: -10.0177583694458
    4. '0' → logprob: -11.7677583694458
    5. '   ' → logprob: -12.0177583694458
    6. ' ' → logprob: -12.3927583694458
    7. '100' → logprob: -12.6427583694458
    8. '1' → logprob: -12.8927583694458
    9. ')' → logprob: -13.1427583694458
    10. '```' → logprob: -13.3927583694458

Token 16: ' rate' (ID: 6251)
  Prédit: ' rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rate' → logprob: -0.17983436584472656
    2. 'rate' → logprob: -1.8048343658447266
    3. '(rate' → logprob: -10.304834365844727
    4. ' ' → logprob: -11.054834365844727
    5. '   ' → logprob: -11.179834365844727
    6. '    ' → logprob: -11.679834365844727
    7. '_rate' → logprob: -12.179834365844727
    8. '-rate' → logprob: -12.554834365844727
    9. '  ' → logprob: -12.804834365844727
    10. ')' → logprob: -13.054834365844727

Token 17: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01236448809504509
    2. '))' → logprob: -4.887364387512207
    3. ' )' → logprob: -5.387364387512207
    4. ' ))' → logprob: -9.512364387512207
    5. ')/' → logprob: -9.512364387512207
    6. '))/' → logprob: -10.887364387512207
    7. '   ' → logprob: -12.887364387512207
    8. '))/(' → logprob: -13.762364387512207
    9. ')))' → logprob: -14.637364387512207
    10. ' ' → logprob: -14.637364387512207

Token 18: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031235255300998688
    2. ' )' → logprob: -5.878123760223389
    3. ')/' → logprob: -8.75312328338623
    4. '   ' → logprob: -9.25312328338623
    5. '```' → logprob: -10.75312328338623
    6. '`)' → logprob: -11.12812328338623
    7. ' /' → logprob: -12.12812328338623
    8. '`' → logprob: -12.50312328338623
    9. '    ' → logprob: -12.62812328338623
    10. '))' → logprob: -12.75312328338623

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03704807907342911
    2. '0' → logprob: -3.537048101425171
    3. '  ' → logprob: -6.537047863006592
    4. '50' → logprob: -6.537047863006592
    5. ')' → logprob: -6.787047863006592
    6. '    ' → logprob: -7.287047863006592
    7. ' )' → logprob: -7.412047863006592
    8. '   ' → logprob: -7.662047863006592
    9. '5' → logprob: -7.787047863006592
    10. ' p' → logprob: -8.28704833984375

Token 20: '50' (ID: 1434)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32239121198654175
    2. '0' → logprob: -1.6973912715911865
    3. '50' → logprob: -2.5723912715911865
    4. '  ' → logprob: -5.322391033172607
    5. '   ' → logprob: -5.447391033172607
    6. '5' → logprob: -5.947391033172607
    7. '    ' → logprob: -6.822391033172607
    8. ')' → logprob: -7.072391033172607
    9. ' p' → logprob: -7.572391033172607
    10. '     ' → logprob: -8.072391510009766

Token 21: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017635977128520608
    2. ' )' → logprob: -6.376763820648193
    3. '0' → logprob: -10.376763343811035
    4. ')//' → logprob: -10.626763343811035
    5. ' ' → logprob: -13.751763343811035
    6. ' //' → logprob: -13.876763343811035
    7. '```' → logprob: -13.876763343811035
    8. '   ' → logprob: -14.626763343811035
    9. '//' → logprob: -14.751763343811035
    10. '`)' → logprob: -14.751763343811035

Token 22: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.09324926882982254
    2. ' ' → logprob: -3.3432493209838867
    3. ')' → logprob: -3.4682493209838867
    4. '//' → logprob: -4.218249320983887
    5. ' /' → logprob: -5.968249320983887
    6. '0' → logprob: -6.218249320983887
    7. ' )' → logprob: -6.843249320983887
    8. '00' → logprob: -7.468249320983887
    9. '%' → logprob: -7.843249320983887
    10. '<|end|>' → logprob: -8.593249320983887

Token 23: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0002659847668837756
    2. ' ' → logprob: -8.250266075134277
    3. '   ' → logprob: -12.875266075134277
    4. '1' → logprob: -14.000266075134277
    5. '  ' → logprob: -14.375266075134277
    6. '```' → logprob: -14.500266075134277
    7. '10' → logprob: -15.625266075134277
    8. '    ' → logprob: -17.00026512145996
    9. '`' → logprob: -18.00026512145996
    10. '101' → logprob: -18.12526512145996

Token 24: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -3.869639476761222e-05
    2. '1' → logprob: -10.750039100646973
    3. ' ' → logprob: -11.250039100646973
    4. '10' → logprob: -12.500039100646973
    5. '   ' → logprob: -15.250039100646973
    6. '```' → logprob: -16.375038146972656
    7. '  ' → logprob: -16.500038146972656
    8. '99' → logprob: -18.500038146972656
    9. '101' → logprob: -19.125038146972656
    10. '0' → logprob: -19.125038146972656

Token 25: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8029307723045349
    2. '*' → logprob: -1.5529308319091797
    3. '(' → logprob: -2.3029308319091797
    4. '\n' → logprob: -2.4279308319091797
    5. ' ' → logprob: -2.8029308319091797
    6. '<|end|>' → logprob: -3.5529308319091797
    7. '+' → logprob: -4.05293083190918
    8. '#' → logprob: -4.92793083190918
    9. '.' → logprob: -5.30293083190918
    10. '
' → logprob: -5.30293083190918

Token 26: 'while' (ID: 7032)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0785176753997803
    2. '
' → logprob: -1.9535176753997803
    3. '(' → logprob: -2.0785176753997803
    4. '*' → logprob: -2.2035176753997803
    5. '\n' → logprob: -2.7035176753997803
    6. '%' → logprob: -2.8285176753997803
    7. '<|end|>' → logprob: -3.2035176753997803
    8. '#' → logprob: -3.3285176753997803
    9. '+' → logprob: -4.078517913818359
    10. ' ' → logprob: -4.328517913818359

Token 27: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.03856855258345604
    2. ' ' → logprob: -3.2885684967041016
    3. 'True' → logprob: -8.288568496704102
    4. '  ' → logprob: -9.163568496704102
    5. ' not' → logprob: -9.288568496704102
    6. ' p' → logprob: -10.663568496704102
    7. ' user' → logprob: -11.663568496704102
    8. ' input' → logprob: -11.788568496704102
    9. ' i' → logprob: -12.038568496704102
    10. '_' → logprob: -12.038568496704102

Token 28: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0037320225965231657
    2. ' :' → logprob: -5.628732204437256
    3. '():' → logprob: -9.503731727600098
    4. '   ' → logprob: -10.503731727600098
    5. '):' → logprob: -11.378731727600098
    6. ':
' → logprob: -11.628731727600098
    7. ':**' → logprob: -13.378731727600098
    8. '(:' → logprob: -13.503731727600098
    9. ' :
' → logprob: -13.878731727600098
    10. '(":' → logprob: -14.128731727600098

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015777897089719772
    2. ' p' → logprob: -4.890778064727783
    3. ' input' → logprob: -5.390778064727783
    4. '    
' → logprob: -6.265778064727783
    5. ' user' → logprob: -7.515778064727783
    6. ' try' → logprob: -8.140777587890625
    7. 'p' → logprob: -8.765777587890625
    8. ' readline' → logprob: -9.140777587890625
    9. '```' → logprob: -9.140777587890625
    10. ' 
' → logprob: -9.515777587890625

Token 30: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3296887874603271
    2. 'price' → logprob: -1.4546887874603271
    3. ' price' → logprob: -1.5796887874603271
    4. ' p' → logprob: -2.454688787460327
    5. 'try' → logprob: -2.829688787460327
    6. ' try' → logprob: -3.079688787460327
    7. 'p' → logprob: -3.329688787460327
    8. ' inp' → logprob: -3.954688787460327
    9. ' user' → logprob: -4.329689025878906
    10. 'user' → logprob: -4.579689025878906

Token 31: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005995632149279118
    2. '=' → logprob: -5.130995750427246
    3. '_' → logprob: -10.880995750427246
    4. '=input' → logprob: -11.005995750427246
    5. ' ' → logprob: -11.255995750427246
    6. ',' → logprob: -11.630995750427246
    7. 's' → logprob: -13.255995750427246
    8. ' >' → logprob: -13.505995750427246
    9. ' ==' → logprob: -14.005995750427246
    10. ' =)' → logprob: -14.130995750427246

Token 32: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5760010480880737
    2. 'y' → logprob: -0.8260010480880737
    3. ' ' → logprob: -10.326001167297363
    4. ' =' → logprob: -11.951001167297363
    5. '  ' → logprob: -12.451001167297363
    6. ' p' → logprob: -12.451001167297363
    7. '=' → logprob: -13.201001167297363
    8. '    ' → logprob: -13.451001167297363
    9. '_y' → logprob: -13.451001167297363
    10. 'space' → logprob: -13.576001167297363

Token 33: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31329265236854553
    2. '=' → logprob: -1.3132926225662231
    3. ',' → logprob: -11.188292503356934
    4. '=input' → logprob: -11.188292503356934
    5. ')' → logprob: -13.813292503356934
    6. ' ' → logprob: -14.438292503356934
    7. '<|end|>' → logprob: -14.563292503356934
    8. '  ' → logprob: -15.688292503356934
    9. '=int' → logprob: -15.813292503356934
    10. ' =)' → logprob: -16.06329345703125

Token 34: ' s' (ID: 265)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.282246470451355
    2. '=' → logprob: -2.1572465896606445
    3. ' z' → logprob: -2.6572465896606445
    4. ' =' → logprob: -3.4072465896606445
    5. '*' → logprob: -5.4072465896606445
    6. '=input' → logprob: -6.0322465896606445
    7. '_' → logprob: -6.1572465896606445
    8. 's' → logprob: -6.2822465896606445
    9. 'input' → logprob: -6.2822465896606445
    10. '*z' → logprob: -6.4072465896606445

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3487526476383209
    2. '=' → logprob: -1.2237526178359985
    3. '=input' → logprob: -8.348752975463867
    4. ',' → logprob: -9.848752975463867
    5. ' ' → logprob: -12.223752975463867
    6. ')' → logprob: -12.848752975463867
    7. 'input' → logprob: -12.973752975463867
    8. '  ' → logprob: -13.848752975463867
    9. 'p' → logprob: -13.848752975463867
    10. '=line' → logprob: -14.161252975463867

Token 36: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.25708654522895813
    2. 'map' → logprob: -1.8820865154266357
    3. ' input' → logprob: -2.8820865154266357
    4. 'input' → logprob: -4.007086753845215
    5. ' list' → logprob: -9.757086753845215
    6. ' ' → logprob: -10.132086753845215
    7. ' [' → logprob: -10.132086753845215
    8. '[' → logprob: -10.757086753845215
    9. 'list' → logprob: -11.132086753845215
    10. '(map' → logprob: -11.257086753845215

Token 37: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0033867184538394213
    2. '(' → logprob: -5.753386497497559
    3. '(str' → logprob: -9.128386497497559
    4. '(input' → logprob: -9.753386497497559
    5. 'int' → logprob: -10.628386497497559
    6. '<int' → logprob: -12.253386497497559
    7. '[int' → logprob: -12.628386497497559
    8. '(eval' → logprob: -12.878386497497559
    9. '(s' → logprob: -13.128386497497559
    10. '(lambda' → logprob: -13.628386497497559

Token 38: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.024824069812893867
    2. 'input' → logprob: -4.774824142456055
    3. '(' → logprob: -4.899824142456055
    4. ')' → logprob: -5.524824142456055
    5. ',input' → logprob: -5.649824142456055
    6. ',' → logprob: -7.274824142456055
    7. ' input' → logprob: -8.524824142456055
    8. ')(' → logprob: -8.899824142456055
    9. '=input' → logprob: -10.774824142456055
    10. '```' → logprob: -11.399824142456055

Token 39: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3869103789329529
    2. ' input' → logprob: -1.1369104385375977
    3. ' ' → logprob: -10.886910438537598
    4. ')' → logprob: -11.761910438537598
    5. '   ' → logprob: -12.261910438537598
    6. '	input' → logprob: -12.761910438537598
    7. '=input' → logprob: -13.636910438537598
    8. ',input' → logprob: -13.636910438537598
    9. '(input' → logprob: -14.136910438537598
    10. '  ' → logprob: -14.636910438537598

Token 40: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.02150246687233448
    2. '()' → logprob: -3.8965024948120117
    3. '(' → logprob: -7.896502494812012
    4. '('' → logprob: -8.396502494812012
    5. '('').' → logprob: -8.646502494812012
    6. '())' → logprob: -9.521502494812012
    7. ')' → logprob: -10.271502494812012
    8. '(()' → logprob: -11.021502494812012
    9. '("").' → logprob: -11.021502494812012
    10. ' ().' → logprob: -11.521502494812012

Token 41: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.3464544432936236e-05
    2. 'strip' → logprob: -10.500043869018555
    3. ' split' → logprob: -11.875043869018555
    4. 'rstrip' → logprob: -11.875043869018555
    5. '(split' → logprob: -13.250043869018555
    6. 'spl' → logprob: -16.125043869018555
    7. '```' → logprob: -17.125043869018555
    8. ' ' → logprob: -17.875043869018555
    9. '().' → logprob: -18.250043869018555
    10. 's' → logprob: -18.375043869018555

Token 42: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.012387447990477085
    2. ')' → logprob: -4.762387275695801
    3. '()' → logprob: -5.762387275695801
    4. '()))' → logprob: -7.512387275695801
    5. '))' → logprob: -9.6373872756958
    6. ' ())' → logprob: -12.6373872756958
    7. '()),' → logprob: -13.7623872756958
    8. '())
' → logprob: -13.7623872756958
    9. '(),' → logprob: -14.0123872756958
    10. '();)' → logprob: -14.0123872756958

Token 43: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.32491159439086914
    2. '<|end|>' → logprob: -1.5749115943908691
    3. '   ' → logprob: -3.199911594390869
    4. 'if' (adapté à ' if') → logprob: -4.449911594390869
    5. ' ' → logprob: -4.824911594390869
    6. ' 
' → logprob: -6.074911594390869
    7. '<|end|>' → logprob: -6.199911594390869
    8. '
' → logprob: -6.949911594390869
    9. '  ' → logprob: -6.949911594390869
    10. '\n' → logprob: -7.074911594390869

Token 45: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.25197067856788635
    2. 'x' → logprob: -1.501970648765564
    3. ' not' → logprob: -10.626970291137695
    4. '(x' → logprob: -11.876970291137695
    5. ' (' → logprob: -12.126970291137695
    6. ' ' → logprob: -12.751970291137695
    7. 'not' → logprob: -13.376970291137695
    8. '(' → logprob: -15.751970291137695
    9. '	x' → logprob: -15.751970291137695
    10. '0' → logprob: -16.126970291137695

Token 46: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6937811970710754
    2. ' ==' → logprob: -0.6937811970710754
    3. ' <' → logprob: -8.693780899047852
    4. ' <=' → logprob: -8.818780899047852
    5. '<|end|>' → logprob: -9.443780899047852
    6. ' ' → logprob: -9.568780899047852
    7. '<' → logprob: -9.818780899047852
    8. '<=' → logprob: -10.068780899047852
    9. '=' → logprob: -10.943780899047852
    10. '==-' → logprob: -11.318780899047852

Token 47: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023031625896692276
    2. ' ' → logprob: -4.148031711578369
    3. 'y' → logprob: -5.148031711578369
    4. ' y' → logprob: -6.773031711578369
    5. '-' → logprob: -12.648031234741211
    6. '```' → logprob: -12.710531234741211
    7. '  ' → logprob: -12.960531234741211
    8. 's' → logprob: -13.648031234741211
    9. '   ' → logprob: -13.835531234741211
    10. '1' → logprob: -13.960531234741211

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010457082651555538
    2. 'y' → logprob: -4.8854570388793945
    3. ' ' → logprob: -5.8854570388793945
    4. ' y' → logprob: -10.010457038879395
    5. '-' → logprob: -11.635457038879395
    6. 's' → logprob: -12.635457038879395
    7. '1' → logprob: -13.322957038879395
    8. '```' → logprob: -13.760457038879395
    9. '  ' → logprob: -13.947957038879395
    10. '7' → logprob: -14.197957038879395

Token 49: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.061972059309482574
    2. 'and' → logprob: -2.811972141265869
    3. ' or' → logprob: -13.186971664428711
    4. ' ' → logprob: -13.436971664428711
    5. '	and' → logprob: -15.186971664428711
    6. '<|end|>' → logprob: -15.436971664428711
    7. '   ' → logprob: -15.686971664428711
    8. ':' → logprob: -16.43697166442871
    9. ' a' → logprob: -16.43697166442871
    10. ' и' → logprob: -17.06197166442871

Token 50: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5759703516960144
    2. 'y' → logprob: -0.8259703516960144
    3. '   ' → logprob: -11.575970649719238
    4. '    ' → logprob: -11.575970649719238
    5. '	y' → logprob: -11.575970649719238
    6. ' ' → logprob: -13.575970649719238
    7. ' ' → logprob: -14.575970649719238
    8. 'x' → logprob: -14.825970649719238
    9. '  ' → logprob: -14.950970649719238
    10. ' and' → logprob: -16.700969696044922

Token 51: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0041407374665141106
    2. '==' → logprob: -5.504140853881836
    3. '<|end|>' → logprob: -10.004140853881836
    4. ' ' → logprob: -11.129140853881836
    5. '<|end|>' → logprob: -13.754140853881836
    6. ' =' → logprob: -14.879140853881836
    7. '0' → logprob: -15.504140853881836
    8. ' ' → logprob: -15.629140853881836
    9. '  ' → logprob: -16.129140853881836
    10. ')' → logprob: -16.254140853881836

Token 52: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31327781081199646
    2. ' ' → logprob: -1.3132778406143188
    3. ' and' → logprob: -11.563278198242188
    4. '   ' → logprob: -13.313278198242188
    5. 's' → logprob: -13.688278198242188
    6. '  ' → logprob: -13.938278198242188
    7. ' s' → logprob: -14.063278198242188
    8. 'and' → logprob: -14.188278198242188
    9. '<|end|>' → logprob: -14.313278198242188
    10. ' ' → logprob: -15.500778198242188

Token 53: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033593899570405483
    2. ' ' → logprob: -8.000335693359375
    3. '  ' → logprob: -15.500335693359375
    4. '   ' → logprob: -15.750335693359375
    5. 's' → logprob: -16.687835693359375
    6. 'and' → logprob: -17.375335693359375
    7. '    ' → logprob: -17.500335693359375
    8. ' and' → logprob: -17.562835693359375
    9. '۰' → logprob: -18.062835693359375
    10. ' ' → logprob: -18.625335693359375

Token 54: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.008635842241346836
    2. 'and' → logprob: -4.758635997772217
    3. ' ' → logprob: -11.758635520935059
    4. '<|end|>' → logprob: -12.508635520935059
    5. '	and' → logprob: -12.508635520935059
    6. '<|end|>' → logprob: -12.633635520935059
    7. '   ' → logprob: -13.258635520935059
    8. ' и' → logprob: -15.383635520935059
    9. '    ' → logprob: -15.633635520935059
    10. ':' → logprob: -15.758635520935059

Token 55: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.16030089557170868
    2. 's' → logprob: -1.910300850868225
    3. '0' → logprob: -9.660301208496094
    4. ' ' → logprob: -11.285301208496094
    5. '	s' → logprob: -16.035301208496094
    6. '   ' → logprob: -16.285301208496094
    7. '  ' → logprob: -16.535301208496094
    8. 'x' → logprob: -16.660301208496094
    9. ' ' → logprob: -17.660301208496094
    10. ' and' → logprob: -17.910301208496094

Token 56: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07914159446954727
    2. '==' → logprob: -2.579141616821289
    3. '<|end|>' → logprob: -8.454141616821289
    4. '<|end|>' → logprob: -11.579141616821289
    5. ' ' → logprob: -12.204141616821289
    6. '  ' → logprob: -12.329141616821289
    7. ' ' → logprob: -12.454141616821289
    8. '```' → logprob: -12.454141616821289
    9. '=' → logprob: -12.704141616821289
    10. ')==' → logprob: -13.579141616821289

Token 57: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005535095697268844
    2. ' ' → logprob: -7.500553607940674
    3. '   ' → logprob: -15.000553131103516
    4. '  ' → logprob: -16.000553131103516
    5. '۰' → logprob: -18.375553131103516
    6. '    ' → logprob: -19.063053131103516
    7. '০' → logprob: -19.438053131103516
    8. '<|end|>' → logprob: -19.563053131103516
    9. '०' → logprob: -20.063053131103516
    10. '０' → logprob: -20.250553131103516

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '۰' → logprob: -18.2500057220459
    4. 'o' → logprob: -18.4375057220459
    5. '০' → logprob: -18.5625057220459
    6. '  ' → logprob: -18.7500057220459
    7. '   ' → logprob: -18.7500057220459
    8. '०' → logprob: -18.8750057220459
    9. '```' → logprob: -18.8750057220459
    10. '-' → logprob: -18.9375057220459

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00020711649267468601
    2. ':
' → logprob: -8.50020694732666
    3. '   ' → logprob: -12.87520694732666
    4. ' :' → logprob: -14.62520694732666
    5. ':return' → logprob: -14.87520694732666
    6. '):' → logprob: -16.000207901000977
    7. '       ' → logprob: -17.375207901000977
    8. '.' → logprob: -17.500207901000977
    9. '<|end|>' → logprob: -17.500207901000977
    10. '():' → logprob: -17.500207901000977

Token 60: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6019238233566284
    2. ':' → logprob: -1.2269238233566284
    3. '       ' → logprob: -1.8519238233566284
    4. '<|end|>' → logprob: -7.351923942565918
    5. ' break' → logprob: -8.101923942565918
    6. '    ' → logprob: -8.226923942565918
    7. ':
' → logprob: -8.226923942565918
    8. '	break' → logprob: -8.476923942565918
    9. '     ' → logprob: -9.476923942565918
    10. '  ' → logprob: -9.726923942565918

Token 61: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.010427831672132015
    2. '   ' → logprob: -5.010427951812744
    3. '       ' → logprob: -5.885427951812744
    4. 'break' (adapté à ' break') → logprob: -7.260427951812744
    5. '	break' → logprob: -9.135427474975586
    6. '    ' → logprob: -9.385427474975586
    7. '    
' → logprob: -11.635427474975586
    8. '_break' → logprob: -12.760427474975586
    9. '     ' → logprob: -12.885427474975586
    10. '  ' → logprob: -13.135427474975586

Token 62: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8220852017402649
    2. '
' → logprob: -0.9470852017402649
    3. '<|end|>' → logprob: -2.57208514213562
    4. '    
' → logprob: -2.69708514213562
    5. '\n' → logprob: -5.072085380554199
    6. '  
' → logprob: -5.072085380554199
    7. '<|end|>' → logprob: -5.697085380554199
    8. ' 
' → logprob: -5.822085380554199
    9. '```' → logprob: -6.447085380554199
    10. '   
' → logprob: -6.822085380554199

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28314489126205444
    2. '
' → logprob: -1.9081449508666992
    3. '<|end|>' → logprob: -2.908144950866699
    4. '```' → logprob: -3.783144950866699
    5. '    
' → logprob: -4.783144950866699
    6. ':' → logprob: -5.658144950866699
    7. '\n' → logprob: -5.908144950866699
    8. '<|end|>' → logprob: -6.158144950866699
    9. 'n' → logprob: -7.033144950866699
    10. 'newline' → logprob: -7.908144950866699

Token 64: ' max' (ID: 2999)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.724183201789856
    2. 'p' → logprob: -1.849183201789856
    3. ' 
' → logprob: -2.0991830825805664
    4. '    ' → logprob: -2.4741830825805664
    5. 'n' → logprob: -3.4741830825805664
    6. ' p' → logprob: -3.7241830825805664
    7. ' ' → logprob: -3.7241830825805664
    8. '    
' → logprob: -4.224183082580566
    9. '     
' → logprob: -4.974183082580566
    10. 'result' → logprob: -5.099183082580566

Token 65: '_price' (ID: 18814)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2952243387699127
    2. '_price' → logprob: -1.6702243089675903
    3. '_profit' → logprob: -3.92022442817688
    4. '_amount' → logprob: -4.045224189758301
    5. '_cost' → logprob: -5.170224189758301
    6. '_re' → logprob: -5.170224189758301
    7. '_tax' → logprob: -5.920224189758301
    8. '_p' → logprob: -6.420224189758301
    9. '_payment' → logprob: -6.420224189758301
    10. '_money' → logprob: -6.795224189758301

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011084727942943573
    2. '=' → logprob: -4.51108455657959
    3. ',' → logprob: -11.26108455657959
    4. '_' → logprob: -11.38608455657959
    5. ' ' → logprob: -11.76108455657959
    6. 's' → logprob: -13.01108455657959
    7. '  ' → logprob: -14.13608455657959
    8. '   ' → logprob: -15.13608455657959
    9. '.' → logprob: -15.63608455657959
    10. ' ,' → logprob: -15.76108455657959

Token 67: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4487718343734741
    2. '0' → logprob: -1.0737718343734741
    3. ' x' → logprob: -4.948771953582764
    4. ' s' → logprob: -5.073771953582764
    5. 's' → logprob: -6.198771953582764
    6. 'x' → logprob: -6.573771953582764
    7. ' (' → logprob: -6.823771953582764
    8. ' -' → logprob: -7.448771953582764
    9. ' max' → logprob: -7.573771953582764
    10. ' y' → logprob: -8.073771476745605

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.039595406502485275
    2. ' ' → logprob: -4.164595603942871
    3. '-' → logprob: -4.289595603942871
    4. 's' → logprob: -5.414595603942871
    5. ' -' → logprob: -6.539595603942871
    6. ' (' → logprob: -7.039595603942871
    7. 'x' → logprob: -7.164595603942871
    8. '(x' → logprob: -7.664595603942871
    9. '(s' → logprob: -7.914595603942871
    10. ' s' → logprob: -8.164595603942871

Token 69: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6060433983802795
    2. ' for' → logprob: -1.1060433387756348
    3. '   ' → logprob: -2.1060433387756348
    4. '    ' → logprob: -7.481043338775635
    5. ' ' → logprob: -7.731043338775635
    6. '	for' → logprob: -8.231043815612793
    7. '  ' → logprob: -8.606043815612793
    8. '\t' → logprob: -9.856043815612793
    9. 'price' → logprob: -9.981043815612793
    10. '    
' → logprob: -10.231043815612793

Token 72: ' a' (ID: 261)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0990850180387497
    2. ' i' → logprob: -2.4740850925445557
    3. '_' → logprob: -5.099084854125977
    4. ' p' → logprob: -6.224084854125977
    5. ' price' → logprob: -7.599084854125977
    6. ' product' → logprob: -7.849084854125977
    7. ' ' → logprob: -7.974084854125977
    8. ' item' → logprob: -8.099084854125977
    9. ' range' → logprob: -9.349084854125977
    10. ' s' → logprob: -9.474084854125977

Token 73: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014895460568368435
    2. 'in' → logprob: -4.264895439147949
    3. ' ' → logprob: -7.514895439147949
    4. ',' → logprob: -9.38989543914795
    5. 'a' → logprob: -10.13989543914795
    6. ' i' → logprob: -11.26489543914795
    7. 'n' → logprob: -11.88989543914795
    8. 'i' → logprob: -12.26489543914795
    9. 's' → logprob: -12.26489543914795
    10. 'range' → logprob: -12.26489543914795

Token 74: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06199771910905838
    2. 'range' → logprob: -2.811997652053833
    3. ' ' → logprob: -11.186997413635254
    4. '	range' → logprob: -12.311997413635254
    5. ' ra' → logprob: -12.686997413635254
    6. '  ' → logprob: -13.436997413635254
    7. ' xrange' → logprob: -13.686997413635254
    8. ' s' → logprob: -13.811997413635254
    9. '(range' → logprob: -14.186997413635254
    10. 's' → logprob: -14.311997413635254

Token 75: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2838839590549469
    2. '(s' → logprob: -1.4088839292526245
    3. '(x' → logprob: -6.283884048461914
    4. '(y' → logprob: -7.408884048461914
    5. '(a' → logprob: -9.283884048461914
    6. '(min' → logprob: -9.533884048461914
    7. ' (' → logprob: -9.783884048461914
    8. '(n' → logprob: -12.033884048461914
    9. '((' → logprob: -12.033884048461914
    10. '(max' → logprob: -12.283884048461914

Token 76: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15412023663520813
    2. 'x' → logprob: -2.1541202068328857
    3. '0' → logprob: -4.279120445251465
    4. '1' → logprob: -5.154120445251465
    5. ' s' → logprob: -6.279120445251465
    6. 'min' → logprob: -6.529120445251465
    7. 'y' → logprob: -7.029120445251465
    8. ' x' → logprob: -7.154120445251465
    9. ' ' → logprob: -7.904120445251465
    10. '101' → logprob: -8.154120445251465

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0270206518471241
    2. ' ,' → logprob: -3.6520206928253174
    3. ',s' → logprob: -7.652020454406738
    4. ',x' → logprob: -9.027020454406738
    5. 's' → logprob: -10.027020454406738
    6. ',y' → logprob: -10.777020454406738
    7. ' s' → logprob: -10.777020454406738
    8. ' ' → logprob: -10.902020454406738
    9. 'x' → logprob: -12.777020454406738
    10. ',min' → logprob: -12.777020454406738

Token 78: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5181451439857483
    2. ' s' → logprob: -1.0181450843811035
    3. 'x' → logprob: -3.7681450843811035
    4. ' x' → logprob: -4.0181450843811035
    5. ' min' → logprob: -7.3931450843811035
    6. ' ' → logprob: -7.8931450843811035
    7. '100' → logprob: -8.018145561218262
    8. ' y' → logprob: -8.268145561218262
    9. 'y' → logprob: -9.018145561218262
    10. 'min' → logprob: -9.518145561218262

Token 79: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3982944190502167
    2. ' +' → logprob: -1.273294448852539
    3. '):' → logprob: -3.148294448852539
    4. ' //' → logprob: -6.273294448852539
    5. ' ):' → logprob: -6.398294448852539
    6. '//' → logprob: -6.523294448852539
    7. '-' → logprob: -8.398294448852539
    8. '   ' → logprob: -8.523294448852539
    9. ' -' → logprob: -9.523294448852539
    10. ' ' → logprob: -9.898294448852539

Token 80: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.482023149728775
    2. '       ' → logprob: -1.8570231199264526
    3. '<|end|>' → logprob: -2.357023239135742
    4. '   ' → logprob: -2.732023239135742
    5. ' ' → logprob: -3.607023239135742
    6. '    ' → logprob: -3.982023239135742
    7. '+' → logprob: -4.982023239135742
    8. '<|end|>' → logprob: -5.232023239135742
    9. ',' → logprob: -6.232023239135742
    10. '):' → logprob: -6.982023239135742

Token 81: ' b' (ID: 287)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4559778571128845
    2. '   ' → logprob: -1.8309779167175293
    3. ' ' → logprob: -2.3309779167175293
    4. '<|end|>' → logprob: -2.7059779167175293
    5. '    ' → logprob: -3.8309779167175293
    6. 'for' → logprob: -5.080977916717529
    7. '       ' → logprob: -5.455977916717529
    8. '	for' → logprob: -5.955977916717529
    9. 'b' (adapté à ' b') → logprob: -6.705977916717529
    10. ' b' → logprob: -6.705977916717529

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.523141086101532
    2. '=' → logprob: -0.898141086101532
    3. '＝' → logprob: -11.648140907287598
    4. ' ' → logprob: -12.523140907287598
    5. ',' → logprob: -13.148140907287598
    6. ')' → logprob: -14.273140907287598
    7. ' in' → logprob: -14.648140907287598
    8. 's' → logprob: -14.898140907287598
    9. 'space' → logprob: -14.898140907287598
    10. '=int' → logprob: -15.023140907287598

Token 83: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2914538085460663
    2. ' s' → logprob: -1.4164538383483887
    3. '(s' → logprob: -5.041453838348389
    4. ' (' → logprob: -5.791453838348389
    5. '(' → logprob: -8.54145336151123
    6. ' ' → logprob: -8.66645336151123
    7. '100' → logprob: -9.66645336151123
    8. 'x' → logprob: -10.04145336151123
    9. '   ' → logprob: -10.04145336151123
    10. '(a' → logprob: -10.29145336151123

Token 84: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5759708881378174
    2. '-' → logprob: -0.8259708881378174
    3. '-a' → logprob: -10.700970649719238
    4. ' ' → logprob: -12.075970649719238
    5. '<|end|>' → logprob: -14.700970649719238
    6. '-ai' → logprob: -15.075970649719238
    7. '-k' → logprob: -15.325970649719238
    8. '-b' → logprob: -15.325970649719238
    9. '   ' → logprob: -15.450970649719238
    10. '...' → logprob: -15.825970649719238

Token 85: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0564331205387134e-05
    2. ' a' → logprob: -11.50001049041748
    3. '1' → logprob: -15.50001049041748
    4. '   ' → logprob: -16.625011444091797
    5. ' ' → logprob: -17.250011444091797
    6. '>a' → logprob: -17.250011444091797
    7. '<|end|>' → logprob: -17.250011444091797
    8. '	a' → logprob: -18.000011444091797
    9. 'а' → logprob: -19.250011444091797
    10. ''a' → logprob: -19.250011444091797

Token 86: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2711299955844879
    2. '<|end|>' → logprob: -2.146130084991455
    3. '
' → logprob: -2.771130084991455
    4. '    
' → logprob: -3.896130084991455
    5. ' ' → logprob: -4.396130084991455
    6. '  
' → logprob: -5.521130084991455
    7. '-' → logprob: -5.771130084991455
    8. '       ' → logprob: -6.146130084991455
    9. '<|end|>' → logprob: -6.146130084991455
    10. ':' → logprob: -6.271130084991455

Token 87: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5977982878684998
    2. '<|end|>' → logprob: -1.4727983474731445
    3. ' 
' → logprob: -2.5977983474731445
    4. '   ' → logprob: -2.8477983474731445
    5. ' ' → logprob: -3.2227983474731445
    6. '    
' → logprob: -3.9727983474731445
    7. '  
' → logprob: -4.2227983474731445
    8. '   
' → logprob: -5.4727983474731445
    9. ' if' → logprob: -5.5977983474731445
    10. '<|end|>' → logprob: -6.4727983474731445

Token 88: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41455236077308655
    2. ' 
' → logprob: -2.0395524501800537
    3. ' if' → logprob: -2.2895524501800537
    4. 'price' → logprob: -3.4145524501800537
    5. ' price' → logprob: -4.164552211761475
    6. 'if' → logprob: -4.289552211761475
    7. '    
' → logprob: -4.539552211761475
    8. ' max' → logprob: -4.789552211761475
    9. '   ' → logprob: -4.914552211761475
    10. 'max' → logprob: -5.289552211761475

Token 89: ' check' (ID: 2371)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.1104919910430908
    2. ' price' → logprob: -1.4854919910430908
    3. ' if' → logprob: -2.110491991043091
    4. ' a' → logprob: -2.735491991043091
    5. '   ' → logprob: -2.985491991043091
    6. 'price' → logprob: -3.235491991043091
    7. ' current' → logprob: -3.735491991043091
    8. 'max' → logprob: -3.860491991043091
    9. 'if' → logprob: -4.485491752624512
    10. ' tax' → logprob: -4.485491752624512

Token 90: ' all' (ID: 722)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: ' pairs' (ID: 24702)
  Prédit: ' combinations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combinations' → logprob: -0.8641993999481201
    2. ' a' → logprob: -1.8641993999481201
    3. 'a' → logprob: -2.11419939994812
    4. ' possible' → logprob: -2.48919939994812
    5. ' pairs' → logprob: -2.61419939994812
    6. 'possible' → logprob: -3.61419939994812
    7. ' price' → logprob: -3.98919939994812
    8. ' for' → logprob: -3.98919939994812
    9. 'pairs' → logprob: -4.614199638366699
    10. ' if' → logprob: -4.739199638366699

Token 92: ' that' (ID: 484)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: ' sum' (ID: 4215)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.8701348900794983
    2. ' could' → logprob: -1.7451348304748535
    3. ' have' → logprob: -2.2451348304748535
    4. ' satisfy' → logprob: -2.8701348304748535
    5. '<|end|>' → logprob: -3.3701348304748535
    6. 'could' → logprob: -3.8701348304748535
    7. ' a' → logprob: -4.1201348304748535
    8. ' do' → logprob: -4.1201348304748535
    9. ' are' → logprob: -4.2451348304748535
    10. ' pass' → logprob: -4.2451348304748535

Token 94: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7111881971359253
    2. ' up' → logprob: -0.9611881971359253
    3. 'to' → logprob: -2.086188316345215
    4. '=' → logprob: -6.461188316345215
    5. 'up' → logprob: -8.086188316345215
    6. '<|end|>' → logprob: -8.836188316345215
    7. ' ' → logprob: -9.086188316345215
    8. '   ' → logprob: -10.211188316345215
    9. '<=' → logprob: -10.586188316345215
    10. 's' → logprob: -10.586188316345215

Token 95: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.06209573894739151
    2. 's' → logprob: -2.8120956420898438
    3. ' ' → logprob: -9.187095642089844
    4. ' a' → logprob: -11.687095642089844
    5. ' b' → logprob: -12.062095642089844
    6. '<|end|>' → logprob: -12.937095642089844
    7. ' x' → logprob: -13.187095642089844
    8. 'a' → logprob: -13.312095642089844
    9. ' `' → logprob: -13.687095642089844
    10. 'b' → logprob: -13.812095642089844

Token 96: ' at' (ID: 540)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 97: ' VAT' (ID: 56356)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.7376829385757446
    2. ' ' → logprob: -1.4876829385757446
    3. ' least' → logprob: -1.9876829385757446
    4. 'a' → logprob: -3.237682819366455
    5. 'ax' → logprob: -3.987682819366455
    6. 's' → logprob: -4.112682819366455
    7. ' most' → logprob: -4.612682819366455
    8. ' s' → logprob: -5.112682819366455
    9. '   ' → logprob: -5.112682819366455
    10. 'he' → logprob: -5.237682819366455

Token 98: ' rate' (ID: 6251)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2865740954875946
    2. '<|end|>' → logprob: -1.661574125289917
    3. ':' → logprob: -3.786574125289917
    4. ',' → logprob: -3.786574125289917
    5. '<|end|>' → logprob: -5.786573886871338
    6. '       ' → logprob: -6.161573886871338
    7. ' ' → logprob: -6.411573886871338
    8. ' and' → logprob: -6.536573886871338
    9. '    
' → logprob: -6.911573886871338
    10. ')' → logprob: -7.161573886871338

Token 99: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4680487811565399
    2. '<|end|>' → logprob: -1.7180488109588623
    3. ':' → logprob: -3.0930488109588623
    4. ' ' → logprob: -3.2180488109588623
    5. '=' → logprob: -3.9680488109588623
    6. '+' → logprob: -3.9680488109588623
    7. ',' → logprob: -4.218048572540283
    8. '    ' → logprob: -4.968048572540283
    9. '*' → logprob: -5.093048572540283
    10. ' *' → logprob: -5.218048572540283

Token 100: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7365440130233765
    2. '<|end|>' → logprob: -0.7365440130233765
    3. ' ' → logprob: -4.486544132232666
    4. '       ' → logprob: -4.736544132232666
    5. ',' → logprob: -4.736544132232666
    6. ':' → logprob: -5.111544132232666
    7. '<|end|>' → logprob: -5.611544132232666
    8. '  ' → logprob: -7.236544132232666
    9. '    
' → logprob: -7.361544132232666
    10. ')' → logprob: -7.611544132232666

Token 101: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.350333571434021
    2. '<|end|>' → logprob: -1.600333571434021
    3. ',' → logprob: -3.3503336906433105
    4. ':' → logprob: -3.7253336906433105
    5. ' ' → logprob: -4.4753336906433105
    6. '       ' → logprob: -4.6003336906433105
    7. ' and' → logprob: -5.3503336906433105
    8. '<|end|>' → logprob: -6.3503336906433105
    9. '    
' → logprob: -6.7253336906433105
    10. '  ' → logprob: -7.1003336906433105

Token 102: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.268782377243042
    2. '       ' → logprob: -1.518782377243042
    3. ' if' → logprob: -5.768782615661621
    4. 'price' → logprob: -5.768782615661621
    5. ' price' → logprob: -6.393782615661621
    6. '
' → logprob: -6.643782615661621
    7. ',' → logprob: -6.768782615661621
    8. '    
' → logprob: -7.018782615661621
    9. ' for' → logprob: -7.018782615661621
    10. '<|end|>' → logprob: -7.018782615661621

Token 103: ' calc' (ID: 25691)
  Prédit: ' calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.0344511941075325
    2. 'calc' → logprob: -3.4094512462615967
    3. '(calc' → logprob: -7.409451007843018
    4. ' max' → logprob: -9.659451484680176
    5. ' x' → logprob: -10.659451484680176
    6. ' (' → logprob: -10.659451484680176
    7. ' a' → logprob: -10.909451484680176
    8. ' abs' → logprob: -11.284451484680176
    9. ' p' → logprob: -11.659451484680176
    10. 'a' → logprob: -11.784451484680176

Token 104: '_after' (ID: 46788)
  Prédit: '_after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_after' → logprob: -1.2664456789934775e-06
    2. '_before' → logprob: -14.000000953674316
    3. 'after' → logprob: -15.125000953674316
    4. '_AFTER' → logprob: -17.000001907348633
    5. '_a' → logprob: -17.375001907348633
    6. '_' → logprob: -17.375001907348633
    7. ' after' → logprob: -17.750001907348633
    8. 'After' → logprob: -19.000001907348633
    9. '_for' → logprob: -19.625001907348633
    10. '_to' → logprob: -20.625001907348633

Token 105: '_tax' (ID: 61146)
  Prédit: '_tax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tax' → logprob: -5.438573680294212e-06
    2. '_' → logprob: -12.500005722045898
    3. '_price' → logprob: -14.000005722045898
    4. 'tax' → logprob: -14.500005722045898
    5. '-tax' → logprob: -16.3750057220459
    6. ' _' → logprob: -16.6250057220459
    7. '_t' → logprob: -16.7500057220459
    8. '_tar' → logprob: -17.5000057220459
    9. '_tex' → logprob: -17.8750057220459
    10. '_cost' → logprob: -18.2500057220459

Token 106: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0006908706855028868
    2. '(' → logprob: -7.500690937042236
    3. '(x' → logprob: -10.125690460205078
    4. '(b' → logprob: -10.375690460205078
    5. '(p' → logprob: -10.375690460205078
    6. '<|end|>' → logprob: -10.625690460205078
    7. ' (' → logprob: -12.625690460205078
    8. '(s' → logprob: -13.125690460205078
    9. '((' → logprob: -13.875690460205078
    10. '(max' → logprob: -14.000690460205078

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001692911726422608
    2. ',x' → logprob: -7.126692771911621
    3. ' ,' → logprob: -7.251692771911621
    4. ',y' → logprob: -9.001692771911621
    5. 'x' → logprob: -12.001692771911621
    6. ',
' → logprob: -12.001692771911621
    7. ')' → logprob: -12.001692771911621
    8. ',b' → logprob: -12.251692771911621
    9. ',p' → logprob: -12.376692771911621
    10. ' ' → logprob: -12.626692771911621

Token 108: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006216844078153372
    2. 'y' → logprob: -5.631217002868652
    3. ' x' → logprob: -6.006217002868652
    4. ' y' → logprob: -8.881217002868652
    5. '<|end|>' → logprob: -12.631217002868652
    6. ')' → logprob: -13.256217002868652
    7. ' ' → logprob: -13.381217002868652
    8. ')x' → logprob: -13.506217002868652
    9. '%x' → logprob: -14.506217002868652
    10. '	x' → logprob: -14.506217002868652

Token 109: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006070998962968588
    2. ')==' → logprob: -5.131071090698242
    3. '==' → logprob: -9.006071090698242
    4. ' )' → logprob: -11.881071090698242
    5. ')!=' → logprob: -12.881071090698242
    6. ' ==' → logprob: -13.006071090698242
    7. ')<=' → logprob: -13.381071090698242
    8. '```' → logprob: -13.506071090698242
    9. '）' → logprob: -13.881071090698242
    10. ')+' → logprob: -14.256071090698242

Token 110: ' +' (ID: 659)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.44808506965637207
    2. ' ==' → logprob: -1.323085069656372
    3. '+' → logprob: -2.948085069656372
    4. ' +' → logprob: -3.948085069656372
    5. '<=' → logprob: -4.198084831237793
    6. ' <=' → logprob: -5.073084831237793
    7. '=' → logprob: -7.198084831237793
    8. '>=' → logprob: -8.323084831237793
    9. '>' → logprob: -8.698084831237793
    10. '<' → logprob: -8.823084831237793

Token 111: ' calc' (ID: 25691)
  Prédit: ' calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.1602766215801239
    2. 'calc' → logprob: -1.9102766513824463
    3. '(calc' → logprob: -9.910276412963867
    4. '.calc' → logprob: -13.410276412963867
    5. 'cal' → logprob: -15.160276412963867
    6. '_calc' → logprob: -15.535276412963867
    7. ' ' → logprob: -15.535276412963867
    8. 'Calc' → logprob: -15.660276412963867
    9. 'c' → logprob: -16.910276412963867
    10. ' cal' → logprob: -17.035276412963867

Token 112: '_after' (ID: 46788)
  Prédit: '_after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_after' → logprob: -7.896309739408025e-07
    2. 'after' → logprob: -15.000000953674316
    3. '_before' → logprob: -15.500000953674316
    4. '(' → logprob: -16.875
    5. ' after' → logprob: -17.5
    6. '(_' → logprob: -17.5
    7. '_AFTER' → logprob: -17.625
    8. '(after' → logprob: -17.75
    9. '_at' → logprob: -18.0
    10. '_a' → logprob: -18.375

Token 113: '_tax' (ID: 61146)
  Prédit: '_tax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tax' → logprob: -0.00020985817536711693
    2. 'tax' → logprob: -8.50020980834961
    3. '_' → logprob: -13.50020980834961
    4. '-tax' → logprob: -13.62520980834961
    5. '_t' → logprob: -13.87520980834961
    6. 'Tax' → logprob: -14.50020980834961
    7. '_tar' → logprob: -15.12520980834961
    8. '_price' → logprob: -15.50020980834961
    9. 'a' → logprob: -15.62520980834961
    10. 's' → logprob: -15.87520980834961

Token 114: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.029931336641311646
    2. '(' → logprob: -3.5299313068389893
    3. '(y' → logprob: -9.65493106842041
    4. '<|end|>' → logprob: -9.90493106842041
    5. '(s' → logprob: -10.90493106842041
    6. '(a' → logprob: -11.52993106842041
    7. ' (' → logprob: -11.65493106842041
    8. '(f' → logprob: -11.90493106842041
    9. 'b' → logprob: -12.02993106842041
    10. ')' → logprob: -12.90493106842041

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012236819602549076
    2. ',y' → logprob: -6.876223564147949
    3. ' ,' → logprob: -9.25122356414795
    4. 'y' → logprob: -9.87622356414795
    5. ')' → logprob: -11.37622356414795
    6. '<|end|>' → logprob: -11.50122356414795
    7. '(' → logprob: -11.62622356414795
    8. ' y' → logprob: -11.87622356414795
    9. '(y' → logprob: -12.62622356414795
    10. ')y' → logprob: -14.87622356414795

Token 116: ' x' (ID: 1215)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.16657432913780212
    2. 'x' → logprob: -2.166574239730835
    3. ' y' → logprob: -3.291574239730835
    4. ' x' → logprob: -6.666574478149414
    5. ')' → logprob: -8.416574478149414
    6. ')y' → logprob: -9.666574478149414
    7. '<|end|>' → logprob: -10.041574478149414
    8. '	y' → logprob: -11.166574478149414
    9. ')x' → logprob: -11.791574478149414
    10. ' ' → logprob: -11.854074478149414

Token 117: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002509687910787761
    2. ')<=' → logprob: -8.750250816345215
    3. ')>' → logprob: -9.625250816345215
    4. ')==' → logprob: -11.250250816345215
    5. ' )' → logprob: -12.125250816345215
    6. ')>=' → logprob: -12.250250816345215
    7. ')<' → logprob: -13.625250816345215
    8. '<=' → logprob: -14.875250816345215
    9. '')' → logprob: -15.375250816345215
    10. '>' → logprob: -15.750250816345215

Token 118: ' ==' (ID: 951)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.7942840456962585
    2. ' <=' → logprob: -1.1692841053009033
    3. '==' → logprob: -1.7942841053009033
    4. ' ==' → logprob: -3.0442841053009033
    5. '>' → logprob: -4.294283866882324
    6. ' >' → logprob: -4.919283866882324
    7. '>=' → logprob: -6.669283866882324
    8. '<' → logprob: -7.419283866882324
    9. ' >=' → logprob: -7.919283866882324
    10. ' <' → logprob: -8.544283866882324

Token 119: ' s' (ID: 265)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3794676959514618
    2. ' y' → logprob: -1.3794677257537842
    3. 's' → logprob: -3.129467725753784
    4. ' s' → logprob: -4.629467487335205
    5. 'calc' → logprob: -5.004467487335205
    6. ' calc' → logprob: -5.879467487335205
    7. ' ' → logprob: -7.879467487335205
    8. '(calc' → logprob: -8.504467964172363
    9. 'p' → logprob: -9.004467964172363
    10. ' (' → logprob: -10.566967964172363

Token 120: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003555289236828685
    2. ' and' → logprob: -6.3785552978515625
    3. ':
' → logprob: -6.3785552978515625
    4. 'and' → logprob: -9.003555297851562
    5. '   ' → logprob: -11.378555297851562
    6. ' :' → logprob: -11.878555297851562
    7. '):' → logprob: -12.253555297851562
    8. ' or' → logprob: -13.253555297851562
    9. '<|end|>' → logprob: -13.378555297851562
    10. ':

' → logprob: -13.753555297851562

Token 121: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03685576468706131
    2. ':' → logprob: -3.411855697631836
    3. ' and' → logprob: -6.536855697631836
    4. '   ' → logprob: -7.036855697631836
    5. ':
' → logprob: -7.536855697631836
    6. 'and' → logprob: -8.911855697631836
    7. '<|end|>' → logprob: -9.911855697631836
    8. ' or' → logprob: -10.161855697631836
    9. ',' → logprob: -10.286855697631836
    10. '           ' → logprob: -10.536855697631836

Token 122: ' price' (ID: 3911)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5006103515625
    2. '   ' → logprob: -1.3756103515625
    3. ' max' → logprob: -2.6256103515625
    4. '           ' → logprob: -3.1256103515625
    5. 'if' → logprob: -4.6256103515625
    6. ' if' → logprob: -5.0006103515625
    7. '       ' → logprob: -5.1256103515625
    8. '               ' → logprob: -7.1256103515625
    9. '	max' → logprob: -7.5006103515625
    10. ' ' → logprob: -7.8756103515625

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1759932041168213
    2. '=' → logprob: -2.0509932041168213
    3. 's' → logprob: -3.4259932041168213
    4. '   ' → logprob: -9.800992965698242
    5. '_candidate' → logprob: -9.925992965698242
    6. 'r' → logprob: -10.550992965698242
    7. '_' → logprob: -10.550992965698242
    8. '1' → logprob: -10.675992965698242
    9. ' ' → logprob: -11.550992965698242
    10. 'sible' → logprob: -11.925992965698242

Token 124: ' calc' (ID: 25691)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3524574041366577
    2. 'max' → logprob: -2.1024575233459473
    3. 'calc' → logprob: -2.3524575233459473
    4. ' max' → logprob: -3.2274575233459473
    5. ' a' → logprob: -3.6024575233459473
    6. ' calc' → logprob: -4.477457523345947
    7. '   ' → logprob: -7.852457523345947
    8. ' ' → logprob: -8.477457046508789
    9. 'min' → logprob: -8.727457046508789
    10. 's' → logprob: -8.852457046508789

Token 125: '_after' (ID: 46788)
  Prédit: '_after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_after' → logprob: -3.03521392197581e-05
    2. 'after' → logprob: -11.625030517578125
    3. '_before' → logprob: -11.625030517578125
    4. '_' → logprob: -12.125030517578125
    5. '_price' → logprob: -12.125030517578125
    6. '_a' → logprob: -14.250030517578125
    7. '_for' → logprob: -15.625030517578125
    8. 'After' → logprob: -15.750030517578125
    9. ' after' → logprob: -16.500030517578125
    10. '_max' → logprob: -16.500030517578125

Token 126: '_tax' (ID: 61146)
  Prédit: '_tax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tax' → logprob: -0.0004612935590557754
    2. 'tax' → logprob: -7.750461101531982
    3. '-tax' → logprob: -10.87546157836914
    4. '_price' → logprob: -12.75046157836914
    5. 'a' → logprob: -13.00046157836914
    6. 'Tax' → logprob: -14.12546157836914
    7. ' tax' → logprob: -14.25046157836914
    8. '_token' → logprob: -14.50046157836914
    9. '_' → logprob: -14.87546157836914
    10. '_tx' → logprob: -14.87546157836914

Token 127: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0015248565468937159
    2. '(max' → logprob: -6.876524925231934
    3. '(' → logprob: -8.501524925231934
    4. '(b' → logprob: -9.001524925231934
    5. '(s' → logprob: -9.251524925231934
    6. 'max' → logprob: -10.376524925231934
    7. 'a' → logprob: -10.501524925231934
    8. '((' → logprob: -12.501524925231934
    9. '(min' → logprob: -13.126524925231934
    10. '(x' → logprob: -13.251524925231934

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007423263159580529
    2. ',y' → logprob: -7.625742435455322
    3. 'y' → logprob: -9.250741958618164
    4. ' ,' → logprob: -9.875741958618164
    5. '+y' → logprob: -10.250741958618164
    6. '+' → logprob: -10.750741958618164
    7. 'b' → logprob: -11.500741958618164
    8. ' +' → logprob: -11.625741958618164
    9. ' y' → logprob: -12.250741958618164
    10. ',b' → logprob: -12.750741958618164

Token 129: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.009822317399084568
    2. ' y' → logprob: -4.884822368621826
    3. 'x' → logprob: -6.384822368621826
    4. '100' → logprob: -8.884821891784668
    5. '
' → logprob: -9.259821891784668
    6. '   ' → logprob: -9.759821891784668
    7. '0' → logprob: -10.009821891784668
    8. ' ' → logprob: -10.509821891784668
    9. 's' → logprob: -10.884821891784668
    10. '    ' → logprob: -11.197321891784668

Token 130: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006708591827191412
    2. ')+' → logprob: -7.625670909881592
    3. ' )' → logprob: -9.375670433044434
    4. ')
' → logprob: -9.500670433044434
    5. '+' → logprob: -11.000670433044434
    6. ' +' → logprob: -13.625670433044434
    7. '<|end|>' → logprob: -13.875670433044434
    8. ')

' → logprob: -14.125670433044434
    9. '+)' → logprob: -14.250670433044434
    10. ')+(' → logprob: -15.000670433044434

Token 131: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026309702545404434
    2. ' +' → logprob: -3.6513097286224365
    3. '+b' → logprob: -12.151309967041016
    4. '+
' → logprob: -13.151309967041016
    5. '+c' → logprob: -14.026309967041016
    6. '   ' → logprob: -15.526309967041016
    7. '+a' → logprob: -15.651309967041016
    8. '+r' → logprob: -16.151309967041016
    9. ' +
' → logprob: -16.526309967041016
    10. '+

' → logprob: -16.651309967041016

Token 132: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.012516011483967304
    2. ' calc' → logprob: -4.387516021728516
    3. '(calc' → logprob: -12.262516021728516
    4. 'cal' → logprob: -14.512516021728516
    5. ' ' → logprob: -14.887516021728516
    6. '.calc' → logprob: -15.137516021728516
    7. '   ' → logprob: -15.512516021728516
    8. '           ' → logprob: -16.012516021728516
    9. '  ' → logprob: -16.637516021728516
    10. '    ' → logprob: -17.387516021728516

Token 133: '_after' (ID: 46788)
  Prédit: '_after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_after' → logprob: -2.45848218582978e-06
    2. 'after' → logprob: -13.12500286102295
    3. '_before' → logprob: -15.62500286102295
    4. '_tax' → logprob: -16.500001907348633
    5. 'After' → logprob: -18.125001907348633
    6. '_AFTER' → logprob: -18.250001907348633
    7. ' after' → logprob: -18.375001907348633
    8. '_at' → logprob: -18.625001907348633
    9. '_' → logprob: -18.625001907348633
    10. '_to' → logprob: -19.125001907348633

Token 134: '_tax' (ID: 61146)
  Prédit: '_tax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tax' → logprob: -0.002489926293492317
    2. 'tax' → logprob: -6.002490043640137
    3. 'ax' → logprob: -12.002490043640137
    4. '-tax' → logprob: -13.127490043640137
    5. 'Tax' → logprob: -13.627490043640137
    6. ' tax' → logprob: -13.752490043640137
    7. '_' → logprob: -14.502490043640137
    8. 'a' → logprob: -14.752490043640137
    9. 'x' → logprob: -15.002490043640137
    10. 'at' → logprob: -15.127490043640137

Token 135: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -3.173704271830502e-06
    2. '(' → logprob: -12.75000286102295
    3. ' (' → logprob: -16.125003814697266
    4. 'b' → logprob: -16.750003814697266
    5. '((' → logprob: -19.375003814697266
    6. '(a' → logprob: -19.500003814697266
    7. '(s' → logprob: -20.625003814697266
    8. '	b' → logprob: -21.000003814697266
    9. '(
' → logprob: -21.125003814697266
    10. '(B' → logprob: -21.250003814697266

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004273315134923905
    2. ',y' → logprob: -8.00042724609375
    3. ' ,' → logprob: -9.75042724609375
    4. '(' → logprob: -10.75042724609375
    5. '(y' → logprob: -11.75042724609375
    6. ')' → logprob: -13.62542724609375
    7. 'y' → logprob: -14.25042724609375
    8. '   ' → logprob: -15.00042724609375
    9. '),' → logprob: -15.00042724609375
    10. '```' → logprob: -15.12542724609375

Token 137: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5759979486465454
    2. 'y' → logprob: -0.8259979486465454
    3. ')' → logprob: -10.575998306274414
    4. '(y' → logprob: -11.200998306274414
    5. ')y' → logprob: -12.075998306274414
    6. '<|end|>' → logprob: -12.075998306274414
    7. '	y' → logprob: -12.325998306274414
    8. ' ' → logprob: -13.450998306274414
    9. '(' → logprob: -14.700998306274414
    10. '   ' → logprob: -14.950998306274414

Token 138: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029966961592435837
    2. ')
' → logprob: -3.5299670696258545
    3. '           ' → logprob: -9.779967308044434
    4. '<|end|>' → logprob: -9.904967308044434
    5. '   ' → logprob: -10.404967308044434
    6. 'if' → logprob: -10.529967308044434
    7. '<|end|>' → logprob: -11.779967308044434
    8. ')
' → logprob: -11.779967308044434
    9. ' )' → logprob: -12.279967308044434
    10. '
' → logprob: -12.279967308044434

Token 139: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0514085479080677
    2. '
' → logprob: -3.176408529281616
    3. '<|end|>' → logprob: -5.301408767700195
    4. '<|end|>' → logprob: -6.801408767700195
    5. ' if' → logprob: -6.926408767700195
    6. '  
' → logprob: -8.551408767700195
    7. ' 
' → logprob: -8.551408767700195
    8. '            
' → logprob: -8.801408767700195
    9. '   ' → logprob: -8.926408767700195
    10. '		' → logprob: -9.176408767700195

Token 140: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.32750505208969116
    2. ' if' → logprob: -1.952505111694336
    3. '           ' → logprob: -2.077505111694336
    4. '   ' → logprob: -5.077505111694336
    5. 'max' → logprob: -5.202505111694336
    6. '       ' → logprob: -8.702505111694336
    7. '
' → logprob: -9.327505111694336
    8. ' max' → logprob: -9.577505111694336
    9. ' ' → logprob: -11.077505111694336
    10. '	if' → logprob: -11.202505111694336

Token 141: ' price' (ID: 3911)
  Prédit: ' price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.3133203387260437
    2. 'price' → logprob: -1.3133203983306885
    3. '	price' → logprob: -10.06332015991211
    4. '(price' → logprob: -11.81332015991211
    5. 'max' → logprob: -12.06332015991211
    6. ' max' → logprob: -13.93832015991211
    7. 'Price' → logprob: -13.93832015991211
    8. '_price' → logprob: -15.56332015991211
    9. ' ' → logprob: -15.81332015991211
    10. ' ' → logprob: -16.56332015991211

Token 142: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.06994221359491348
    2. ' >' → logprob: -2.6949422359466553
    3. '<' → logprob: -12.819942474365234
    4. 'max' → logprob: -14.069942474365234
    5. ' ' → logprob: -14.569942474365234
    6. '>

' → logprob: -15.069942474365234
    7. '>`' → logprob: -15.319942474365234
    8. ' <' → logprob: -15.694942474365234
    9. '<=' → logprob: -15.944942474365234
    10. '>
' → logprob: -15.944942474365234

Token 143: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.000553151941858232
    2. ' max' → logprob: -7.500553131103516
    3. '	max' → logprob: -15.875553131103516
    4. '           ' → logprob: -17.000553131103516
    5. '0' → logprob: -18.625553131103516
    6. '
' → logprob: -19.000553131103516
    7. '_max' → logprob: -19.250553131103516
    8. '=max' → logprob: -19.375553131103516
    9. '   ' → logprob: -19.625553131103516
    10. 'maxlength' → logprob: -19.875553131103516

Token 144: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -1.9361264946837764e-07
    2. '_max' → logprob: -16.75
    3. '_' → logprob: -16.875
    4. 'price' → logprob: -18.875
    5. '_pr' → logprob: -18.875
    6. '_PRICE' → logprob: -19.5
    7. '_value' → logprob: -20.125
    8. '\' → logprob: -20.25
    9. '_code' → logprob: -20.25
    10. '_p' → logprob: -20.75

Token 145: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023258987814188004
    2. ':
' → logprob: -3.773258924484253
    3. '   ' → logprob: -12.898259162902832
    4. '=' → logprob: -13.148259162902832
    5. ':max' → logprob: -13.398259162902832
    6. '):
' → logprob: -13.523259162902832
    7. ':
' → logprob: -13.648259162902832
    8. ' :' → logprob: -13.773259162902832
    9. '):' → logprob: -13.898259162902832
    10. 'max' → logprob: -14.273259162902832

Token 146: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0026403414085507393
    2. ' max' → logprob: -6.377640247344971
    3. '           ' → logprob: -7.127640247344971
    4. 'max' → logprob: -9.252640724182129
    5. '   ' → logprob: -11.627640724182129
    6. '
' → logprob: -11.627640724182129
    7. '```' → logprob: -12.127640724182129
    8. '<|end|>' → logprob: -13.252640724182129
    9. '(max' → logprob: -13.377640724182129
    10. '	max' → logprob: -13.627640724182129

Token 147: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.06338170170783997
    2. 'max' (adapté à ' max') → logprob: -2.8133816719055176
    3. '               ' → logprob: -6.813381671905518
    4. '                   ' → logprob: -8.313382148742676
    5. ' price' → logprob: -9.938382148742676
    6. 'price' → logprob: -11.313382148742676
    7. '   ' → logprob: -12.563382148742676
    8. '	max' → logprob: -13.563382148742676
    9. '```' → logprob: -13.938382148742676
    10. '                ' → logprob: -14.313382148742676

Token 148: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.75
    3. '_score' → logprob: -16.5
    4. '_code' → logprob: -18.125
    5. 'price' → logprob: -18.25
    6. '_prices' → logprob: -18.375
    7. '_max' → logprob: -18.75
    8. '_password' → logprob: -20.125
    9. 'Price' → logprob: -20.25
    10. '_p' → logprob: -20.25

Token 149: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759406089782715
    2. '=' → logprob: -0.8259406089782715
    3. '=max' → logprob: -14.70094108581543
    4. ' ' → logprob: -14.95094108581543
    5. '<|end|>' → logprob: -15.95094108581543
    6. '＝' → logprob: -16.45094108581543
    7. ' =)' → logprob: -17.57594108581543
    8. '=int' → logprob: -17.70094108581543
    9. 'max' → logprob: -17.70094108581543
    10. ' =
' → logprob: -17.82594108581543

Token 150: ' price' (ID: 3911)
  Prédit: ' price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.25192946195602417
    2. 'price' → logprob: -1.501929521560669
    3. '	price' → logprob: -15.62692928314209
    4. '(price' → logprob: -17.376930236816406
    5. 'max' → logprob: -17.626930236816406
    6. ' max' → logprob: -17.876930236816406
    7. 'Price' → logprob: -18.001930236816406
    8. '_price' → logprob: -18.501930236816406
    9. '
' → logprob: -19.501930236816406
    10. '               ' → logprob: -19.751930236816406

Token 151: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09025473147630692
    2. '
' → logprob: -2.840254783630371
    3. '    
' → logprob: -3.715254783630371
    4. 'print' → logprob: -5.715254783630371
    5. '<|end|>' → logprob: -9.090254783630371
    6. '  
' → logprob: -9.840254783630371
    7. '        
' → logprob: -10.965254783630371
    8. '\n' → logprob: -11.340254783630371
    9. '   
' → logprob: -11.465254783630371
    10. ' print' → logprob: -11.840254783630371

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02488429844379425
    2. 'print' → logprob: -3.7748842239379883
    3. '
' → logprob: -6.524884223937988
    4. '    
' → logprob: -8.774884223937988
    5. ' print' → logprob: -12.024884223937988
    6. '<|end|>' → logprob: -12.399884223937988
    7. '```' → logprob: -13.524884223937988
    8. '  
' → logprob: -13.774884223937988
    9. '       ' → logprob: -14.024884223937988
    10. '	print' → logprob: -14.024884223937988

Token 153: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.01826373115181923
    2. '   ' → logprob: -4.018263816833496
    3. ' print' → logprob: -9.768263816833496
    4. '
' → logprob: -9.893263816833496
    5. '    
' → logprob: -12.268263816833496
    6. '```' → logprob: -14.268263816833496
    7. '	print' → logprob: -15.518263816833496
    8. '<|end|>' → logprob: -16.14326286315918
    9. '  
' → logprob: -16.51826286315918
    10. '
' → logprob: -16.64326286315918

Token 154: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -1.3663626305060461e-05
    2. '(' → logprob: -11.25001335144043
    3. 'max' → logprob: -15.12501335144043
    4. '(f' → logprob: -15.37501335144043
    5. '(min' → logprob: -17.87501335144043
    6. ' (' → logprob: -18.37501335144043
    7. '((' → logprob: -18.75001335144043
    8. '(int' → logprob: -19.37501335144043
    9. ' max' → logprob: -19.37501335144043
    10. '(m' → logprob: -19.62501335144043

Token 155: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -5.512236498361744e-07
    2. 'price' → logprob: -14.500000953674316
    3. '(price' → logprob: -17.5
    4. '_score' → logprob: -17.875
    5. 'Price' → logprob: -18.75
    6. '_pr' → logprob: -19.0
    7. '_' → logprob: -19.625
    8. '(max' → logprob: -19.625
    9. ')' → logprob: -20.125
    10. ' price' → logprob: -20.5

Token 156: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ' )' → logprob: -12.87500286102295
    3. ')
' → logprob: -14.62500286102295
    4. ')`' → logprob: -17.250003814697266
    5. '')' → logprob: -17.875003814697266
    6. '())' → logprob: -18.125003814697266
    7. '))' → logprob: -18.250003814697266
    8. '   ' → logprob: -18.625003814697266
    9. '`)' → logprob: -18.875003814697266
    10. '）' → logprob: -19.125003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 154
Tokens correctement prédits (1ère position, stricte): 76
Tokens correctement prédits (1ère position, avec adaptation): 79
Tokens correctement prédits (top 10): 127
Précision stricte (1ère position): 49.35%
Précision adaptée (1ère position): 51.30%
Précision (top 10): 82.47%
================================================================================
