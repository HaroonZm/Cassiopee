================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
coins = [i*i for i in range(1,18)]
dp = [1] + [0]*300
for c in coins:
    for i in range(c,301):
        dp[i] += dp[i-c]
while True:
    n = int(input())
    if n == 0:
        break
    print(dp[n])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'coins' (ID: 48264)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' [' (ID: 723)
  → Token d'amorce (pas de prédiction)

Token 3: 'i' (ID: 72)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03548434004187584
    2. '0' → logprob: -4.160484313964844
    3. '10' → logprob: -4.160484313964844
    4. '100' → logprob: -6.035484313964844
    5. '5' → logprob: -7.160484313964844
    6. '50' → logprob: -8.410484313964844
    7. ']' → logprob: -9.285484313964844
    8. ' ' → logprob: -10.285484313964844
    9. '```' → logprob: -10.285484313964844
    10. '42' → logprob: -10.410484313964844

Token 4: '*i' (ID: 51147)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2842051088809967
    2. ' for' → logprob: -1.5342050790786743
    3. 'for' → logprob: -4.659204959869385
    4. '+' → logprob: -4.784204959869385
    5. 'nt' → logprob: -4.909204959869385
    6. '*' → logprob: -6.034204959869385
    7. ',' → logprob: -6.909204959869385
    8. '**' → logprob: -7.034204959869385
    9. ' ' → logprob: -7.534204959869385
    10. ']' → logprob: -7.784204959869385

Token 5: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25195977091789246
    2. 'for' → logprob: -1.5019598007202148
    3. ' ' → logprob: -10.751959800720215
    4. ']' → logprob: -12.626959800720215
    5. '	for' → logprob: -13.501959800720215
    6. '```' → logprob: -13.626959800720215
    7. '+' → logprob: -13.876959800720215
    8. ')' → logprob: -14.501959800720215
    9. '-' → logprob: -15.001959800720215
    10. '   ' → logprob: -15.126959800720215

Token 6: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.05700992792844772
    2. ' ' → logprob: -3.6820099353790283
    3. ' i' → logprob: -4.182009696960449
    4. 'range' → logprob: -4.557009696960449
    5. ' coins' → logprob: -5.557009696960449
    6. 'i' → logprob: -8.68200969696045
    7. ' coin' → logprob: -8.80700969696045
    8. 'coins' → logprob: -8.80700969696045
    9. '  ' → logprob: -9.05700969696045
    10. ' in' → logprob: -10.68200969696045

Token 7: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04303092882037163
    2. 'in' → logprob: -3.1680309772491455
    3. ' ' → logprob: -11.043030738830566
    4. '	in' → logprob: -12.418030738830566
    5. 'import' → logprob: -12.668030738830566
    6. '<|end|>' → logprob: -13.418030738830566
    7. '```' → logprob: -13.418030738830566
    8. '  ' → logprob: -13.543030738830566
    9. '   ' → logprob: -14.793030738830566
    10. ']' → logprob: -14.793030738830566

Token 8: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03812607005238533
    2. 'range' → logprob: -3.288125991821289
    3. ' coins' → logprob: -9.538125991821289
    4. ' ' → logprob: -11.663125991821289
    5. 'coins' → logprob: -13.288125991821289
    6. '	range' → logprob: -14.288125991821289
    7. ' xrange' → logprob: -14.538125991821289
    8. ' coin' → logprob: -14.663125991821289
    9. '(range' → logprob: -14.788125991821289
    10. '  ' → logprob: -16.78812599182129

Token 9: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.632542913896032e-05
    2. '(len' → logprob: -10.750046730041504
    3. '```' → logprob: -11.375046730041504
    4. ' (' → logprob: -12.625046730041504
    5. '((' → logprob: -13.125046730041504
    6. '(
' → logprob: -13.375046730041504
    7. '(

' → logprob: -13.875046730041504
    8. '(n' → logprob: -14.250046730041504
    9. '(i' → logprob: -14.500046730041504
    10. '(int' → logprob: -14.750046730041504

Token 10: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10913311690092087
    2. '1' → logprob: -2.359133005142212
    3. '100' → logprob: -5.234133243560791
    4. '20' → logprob: -6.984133243560791
    5. ' ' → logprob: -7.109133243560791
    6. '11' → logprob: -7.609133243560791
    7. '50' → logprob: -7.859133243560791
    8. '0' → logprob: -8.234132766723633
    9. '101' → logprob: -8.359132766723633
    10. '5' → logprob: -8.984132766723633

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004406855441629887
    2. ' ,' → logprob: -5.754406929016113
    3. '20' → logprob: -7.504406929016113
    4. '10' → logprob: -8.254406929016113
    5. '25' → logprob: -8.754406929016113
    6. '18' → logprob: -9.754406929016113
    7. ',len' → logprob: -10.129406929016113
    8. '0' → logprob: -10.754406929016113
    9. '15' → logprob: -11.254406929016113
    10. '21' → logprob: -11.504406929016113

Token 12: '18' (ID: 1157)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '11' → logprob: -0.335589200258255
    2. ' ' → logprob: -1.8355891704559326
    3. '101' → logprob: -2.3355891704559326
    4. '10' → logprob: -3.8355891704559326
    5. '100' → logprob: -5.335589408874512
    6. '21' → logprob: -6.460589408874512
    7. '51' → logprob: -7.710589408874512
    8. '20' → logprob: -8.960589408874512
    9. '50' → logprob: -9.460589408874512
    10. '13' → logprob: -10.085589408874512

Token 13: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.028536492725834e-05
    2. ')' → logprob: -9.750070571899414
    3. ')])' → logprob: -12.000070571899414
    4. '+' → logprob: -12.500070571899414
    5. '])]' → logprob: -14.625070571899414
    6. ']' → logprob: -15.000070571899414
    7. ')}' → logprob: -15.250070571899414
    8. '')]' → logprob: -15.750070571899414
    9. '))' → logprob: -15.750070571899414
    10. ')],' → logprob: -15.875070571899414

Token 14: 'dp' (ID: 19037)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9758484363555908
    2. '[' → logprob: -1.1008484363555908
    3. '+' → logprob: -2.600848436355591
    4. '.' → logprob: -3.225848436355591
    5. '```' → logprob: -3.350848436355591
    6. '=' → logprob: -3.475848436355591
    7. ')' → logprob: -3.725848436355591
    8. '#' → logprob: -3.725848436355591
    9. '(' → logprob: -3.975848436355591
    10. ' ' → logprob: -4.350848197937012

Token 15: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.027869408950209618
    2. ' =' → logprob: -4.40286922454834
    3. '=' → logprob: -4.65286922454834
    4. '_' → logprob: -5.27786922454834
    5. '\[' → logprob: -8.77786922454834
    6. ' ' → logprob: -9.15286922454834
    7. 's' → logprob: -9.40286922454834
    8. '[:]' → logprob: -9.77786922454834
    9. '```' → logprob: -10.02786922454834
    10. ']' → logprob: -10.15286922454834

Token 16: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3869316279888153
    2. ' [' → logprob: -1.1369316577911377
    3. '[len' → logprob: -10.011931419372559
    4. '[int' → logprob: -11.761931419372559
    5. '[-' → logprob: -13.011931419372559
    6. '{}' → logprob: -13.886931419372559
    7. '[i' → logprob: -14.636931419372559
    8. '[m' → logprob: -14.636931419372559
    9. '[[' → logprob: -14.761931419372559
    10. '{' → logprob: -14.886931419372559

Token 17: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006229164078831673
    2. '100' → logprob: -5.506229400634766
    3. 'float' → logprob: -6.256229400634766
    4. ' ' → logprob: -9.506229400634766
    5. '10' → logprob: -9.881229400634766
    6. '999' → logprob: -10.131229400634766
    7. ' float' → logprob: -11.131229400634766
    8. '1' → logprob: -11.506229400634766
    9. 'False' → logprob: -11.756229400634766
    10. '101' → logprob: -11.756229400634766

Token 18: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1319321095943451
    2. ',' → logprob: -2.256932020187378
    3. ']+' → logprob: -4.631932258605957
    4. ']*' → logprob: -5.631932258605957
    5. ' ]' → logprob: -6.506932258605957
    6. ' for' → logprob: -6.506932258605957
    7. '0' → logprob: -6.881932258605957
    8. '*' → logprob: -7.631932258605957
    9. ']*(' → logprob: -7.756932258605957
    10. '+' → logprob: -8.506932258605957

Token 19: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04923691973090172
    2. ' +' → logprob: -3.174237012863159
    3. '0' → logprob: -5.42423677444458
    4. '*' → logprob: -7.54923677444458
    5. '+[' → logprob: -7.67423677444458
    6. ',' → logprob: -8.549237251281738
    7. ']' → logprob: -8.799237251281738
    8. ' for' → logprob: -8.924237251281738
    9. '[' → logprob: -9.299237251281738
    10. ']+' → logprob: -9.799237251281738

Token 20: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00317783304490149
    2. ' [' → logprob: -5.753177642822266
    3. '[-' → logprob: -16.378177642822266
    4. '([' → logprob: -16.628177642822266
    5. '{' → logprob: -18.378177642822266
    6. '[i' → logprob: -18.378177642822266
    7. ' ' → logprob: -18.378177642822266
    8. '0' → logprob: -18.878177642822266
    9. ' ' → logprob: -19.003177642822266
    10. '[n' → logprob: -19.253177642822266

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17376834154129028
    2. '100' → logprob: -1.9237682819366455
    3. '10' → logprob: -5.173768520355225
    4. 'float' → logprob: -5.423768520355225
    5. '999' → logprob: -6.548768520355225
    6. '500' → logprob: -7.548768520355225
    7. '-' → logprob: -7.798768520355225
    8. '400' → logprob: -8.798768043518066
    9. '200' → logprob: -9.048768043518066
    10. 'amount' → logprob: -9.048768043518066

Token 22: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.20817232131958008
    2. ']' → logprob: -1.70817232131958
    3. ']*(' → logprob: -5.08317232131958
    4. ' ]' → logprob: -8.208171844482422
    5. ']+' → logprob: -8.708171844482422
    6. '*' → logprob: -9.833171844482422
    7. ',' → logprob: -10.208171844482422
    8. ' for' → logprob: -12.833171844482422
    9. '```' → logprob: -13.333171844482422
    10. '*i' → logprob: -14.458171844482422

Token 23: '300' (ID: 4095)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.09475958347320557
    2. '17' → logprob: -3.844759464263916
    3. '99' → logprob: -4.594759464263916
    4. '102' → logprob: -4.719759464263916
    5. '180' → logprob: -5.719759464263916
    6. '101' → logprob: -5.719759464263916
    7. '200' → logprob: -5.969759464263916
    8. '179' → logprob: -5.969759464263916
    9. '178' → logprob: -5.969759464263916
    10. '117' → logprob: -6.344759464263916

Token 24: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8910971879959106
    2. '
' → logprob: -1.5160971879959106
    3. ' 
' → logprob: -1.8910971879959106
    4. ' for' → logprob: -3.141097068786621
    5. '\' → logprob: -3.391097068786621
    6. '0' → logprob: -3.391097068786621
    7. ' ' → logprob: -3.516097068786621
    8. '+' → logprob: -4.016097068786621
    9. '  
' → logprob: -4.266097068786621
    10. '<|end|>' → logprob: -4.516097068786621

Token 25: 'for' (ID: 1938)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3191032409667969
    2. 'for' → logprob: -1.8191032409667969
    3. '\n' → logprob: -2.944103240966797
    4. '```' → logprob: -3.944103240966797
    5. '
' → logprob: -4.694103240966797
    6. ',' → logprob: -4.944103240966797
    7. '  
' → logprob: -5.319103240966797
    8. '\' → logprob: -5.444103240966797
    9. '+' → logprob: -5.444103240966797
    10. '<|end|>' → logprob: -6.194103240966797

Token 26: ' c' (ID: 274)
  Prédit: ' coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.3410046100616455
    2. ' i' → logprob: -1.3410046100616455
    3. ' c' → logprob: -3.7160046100616455
    4. ' ' → logprob: -6.216004371643066
    5. 'coin' → logprob: -7.841004371643066
    6. 'i' → logprob: -8.966004371643066
    7. '  ' → logprob: -9.341004371643066
    8. ' amount' → logprob: -9.341004371643066
    9. '   ' → logprob: -9.466004371643066
    10. ' coins' → logprob: -9.841004371643066

Token 27: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0892251580953598
    2. 'in' → logprob: -2.4642250537872314
    3. 'n' → logprob: -9.214224815368652
    4. ' ' → logprob: -9.214224815368652
    5. 'i' → logprob: -10.464224815368652
    6. '	in' → logprob: -10.714224815368652
    7. '  ' → logprob: -10.839224815368652
    8. 'o' → logprob: -12.214224815368652
    9. 'oin' → logprob: -12.339224815368652
    10. ' i' → logprob: -12.839224815368652

Token 28: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.029752103611826897
    2. ' coins' → logprob: -3.529752016067505
    3. 'co' → logprob: -13.904751777648926
    4. ' ' → logprob: -15.279751777648926
    5. 'coin' → logprob: -15.779751777648926
    6. ' range' → logprob: -16.279752731323242
    7. 'c' → logprob: -16.654752731323242
    8. 'range' → logprob: -16.654752731323242
    9. '[' → logprob: -17.154752731323242
    10. 'Coins' → logprob: -17.404752731323242

Token 29: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.060365608893335e-05
    2. ' :' → logprob: -11.000041007995605
    3. ':
' → logprob: -11.000041007995605
    4. '):' → logprob: -13.000041007995605
    5. ':**' → logprob: -13.125041007995605
    6. '<|end|>' → logprob: -14.125041007995605
    7. '>' → logprob: -15.125041007995605
    8. '>:' → logprob: -15.750041007995605
    9. ',' → logprob: -15.750041007995605
    10. ')' → logprob: -15.875041007995605

Token 30: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7346711754798889
    2. ' for' → logprob: -1.6096711158752441
    3. ' dp' → logprob: -1.6096711158752441
    4. '   ' → logprob: -2.484671115875244
    5. '    ' → logprob: -3.984671115875244
    6. ' 
' → logprob: -4.234671115875244
    7. '    
' → logprob: -7.234671115875244
    8. '  ' → logprob: -7.734671115875244
    9. ' i' → logprob: -7.734671115875244
    10. '     
' → logprob: -7.984671115875244

Token 31: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -9.627176768844947e-05
    2. '   ' → logprob: -10.000096321105957
    3. 'for' (adapté à ' for') → logprob: -10.375096321105957
    4. ' range' → logprob: -11.375096321105957
    5. '    ' → logprob: -12.375096321105957
    6. ' ' → logprob: -12.625096321105957
    7. ' dp' → logprob: -15.500096321105957
    8. '	for' → logprob: -16.62509536743164
    9. ' if' → logprob: -16.62509536743164
    10. ' space' → logprob: -16.75009536743164

Token 32: ' i' (ID: 575)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.6171915531158447
    2. ' i' → logprob: -1.1171915531158447
    3. ' x' → logprob: -2.8671915531158447
    4. ' v' → logprob: -3.2421915531158447
    5. ' amount' → logprob: -3.6171915531158447
    6. ' range' → logprob: -4.992191314697266
    7. ' s' → logprob: -6.992191314697266
    8. 'j' → logprob: -7.492191314697266
    9. ' a' → logprob: -7.492191314697266
    10. ' ' → logprob: -7.867191314697266

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007077865884639323
    2. 'in' → logprob: -7.375707626342773
    3. ' ' → logprob: -10.375707626342773
    4. ' c' → logprob: -10.625707626342773
    5. ' range' → logprob: -11.750707626342773
    6. '   ' → logprob: -12.250707626342773
    7. ' i' → logprob: -12.625707626342773
    8. 'c' → logprob: -13.000707626342773
    9. '	in' → logprob: -13.125707626342773
    10. 'range' → logprob: -13.750707626342773

Token 34: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2523804306983948
    2. 'range' → logprob: -1.50238037109375
    3. ' c' → logprob: -8.37738037109375
    4. 'c' → logprob: -8.50238037109375
    5. '(range' → logprob: -11.75238037109375
    6. ' coin' → logprob: -13.00238037109375
    7. 'coin' → logprob: -13.25238037109375
    8. 'r' → logprob: -13.50238037109375
    9. ' xrange' → logprob: -13.75238037109375
    10. ' coins' → logprob: -13.87738037109375

Token 35: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.009765299037098885
    2. '(' → logprob: -4.634765148162842
    3. '(len' → logprob: -12.134765625
    4. '(co' → logprob: -13.384765625
    5. ' (' → logprob: -13.884765625
    6. 'c' → logprob: -15.259765625
    7. '	c' → logprob: -15.884765625
    8. '(i' → logprob: -16.009765625
    9. ' c' → logprob: -16.259765625
    10. '(C' → logprob: -16.259765625

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0921942703134846e-05
    2. ' ,' → logprob: -11.75001049041748
    3. ',len' → logprob: -12.87501049041748
    4. '，' → logprob: -15.50001049041748
    5. '300' → logprob: -16.625011444091797
    6. ',n' → logprob: -17.250011444091797
    7. ',max' → logprob: -18.750011444091797
    8. ',)' → logprob: -19.250011444091797
    9. '‌,' → logprob: -19.500011444091797
    10. '

' → logprob: -19.625011444091797

Token 37: '301' (ID: 22083)
  Prédit: '301'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '301' → logprob: -1.4021237802808173e-05
    2. ' ' → logprob: -11.875014305114746
    3. 'len' → logprob: -13.000014305114746
    4. '311' → logprob: -13.125014305114746
    5. '300' → logprob: -13.750014305114746
    6. '31' → logprob: -14.125014305114746
    7. '304' → logprob: -15.750014305114746
    8. '30' → logprob: -15.875014305114746
    9. '302' → logprob: -16.37501335144043
    10. '3' → logprob: -16.62501335144043

Token 38: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004793941974639893
    2. '):
' → logprob: -5.379794120788574
    3. '+' → logprob: -9.254794120788574
    4. ':' → logprob: -9.754794120788574
    5. ')' → logprob: -11.379794120788574
    6. '):
' → logprob: -13.004794120788574
    7. ']:' → logprob: -13.004794120788574
    8. ' ):' → logprob: -13.629794120788574
    9. '   ' → logprob: -14.004794120788574
    10. '+:' → logprob: -14.379794120788574

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027420541271567345
    2. ' dp' → logprob: -4.277420520782471
    3. '    ' → logprob: -4.902420520782471
    4. 'dp' → logprob: -6.027420520782471
    5. '   ' → logprob: -6.402420520782471
    6. '	dp' → logprob: -8.027420997619629
    7. '        ' → logprob: -8.277420997619629
    8. ' ' → logprob: -8.277420997619629
    9. '<|end|>' → logprob: -8.652420997619629
    10. '        
' → logprob: -8.777420997619629

Token 40: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.07998435199260712
    2. ' dp' → logprob: -2.579984426498413
    3. '           ' → logprob: -6.829984188079834
    4. '	dp' → logprob: -11.829984664916992
    5. '   ' → logprob: -13.079984664916992
    6. '       ' → logprob: -13.204984664916992
    7. '               ' → logprob: -13.829984664916992
    8. ' ' → logprob: -15.454984664916992
    9. '(dp' → logprob: -15.579984664916992
    10. '          ' → logprob: -16.204984664916992

Token 41: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1994775377388578e-05
    2. '[' → logprob: -11.375012397766113
    3. '[j' → logprob: -16.375011444091797
    4. '```' → logprob: -16.375011444091797
    5. '[I' → logprob: -16.500011444091797
    6. 'i' → logprob: -17.125011444091797
    7. '\[' → logprob: -17.250011444091797
    8. '`' → logprob: -18.625011444091797
    9. '[int' → logprob: -19.500011444091797
    10. '[
' → logprob: -19.500011444091797

Token 42: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13268381357192993
    2. ']+=' → logprob: -2.132683753967285
    3. '+=' → logprob: -5.882683753967285
    4. ' ]' → logprob: -6.507683753967285
    5. ' +=' → logprob: -6.882683753967285
    6. '|' → logprob: -9.007683753967285
    7. '+' → logprob: -9.132683753967285
    8. ')' → logprob: -9.257683753967285
    9. '+]' → logprob: -10.007683753967285
    10. ']+' → logprob: -10.757683753967285

Token 43: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0006791924242861569
    2. ' +=' → logprob: -7.875679016113281
    3. '|' → logprob: -9.000679016113281
    4. '=' → logprob: -9.375679016113281
    5. ']+=' → logprob: -10.000679016113281
    6. '+' → logprob: -10.125679016113281
    7. '(' → logprob: -13.000679016113281
    8. '```' → logprob: -13.750679016113281
    9. '+=(' → logprob: -13.750679016113281
    10. '[' → logprob: -14.750679016113281

Token 44: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.008616581559181213
    2. ' dp' → logprob: -4.7586164474487305
    3. '	dp' → logprob: -13.63361644744873
    4. '   ' → logprob: -14.13361644744873
    5. '(dp' → logprob: -17.008617401123047
    6. '_dp' → logprob: -17.508617401123047
    7. '           ' → logprob: -17.758617401123047
    8. ' ' → logprob: -18.133617401123047
    9. '```' → logprob: -18.258617401123047
    10. '       ' → logprob: -18.258617401123047

Token 45: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.875
    3. 'i' → logprob: -16.125
    4. '```' → logprob: -16.625
    5. '[
' → logprob: -19.0
    6. '[j' → logprob: -19.25
    7. '`' → logprob: -19.625
    8. '[I' → logprob: -19.75
    9. '\[' → logprob: -20.125
    10. '[int' → logprob: -20.375

Token 46: '-c' (ID: 3452)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2015896439552307
    2. '-' → logprob: -2.076589584350586
    3. '-c' → logprob: -2.951589584350586
    4. '-i' → logprob: -5.326589584350586
    5. '[i' → logprob: -10.826589584350586
    6. '   ' → logprob: -10.826589584350586
    7. '	' → logprob: -11.576589584350586
    8. '[' → logprob: -11.576589584350586
    9. ' ' → logprob: -12.076589584350586
    10. ''-' → logprob: -12.201589584350586

Token 47: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0055231922306120396
    2. ']' → logprob: -5.255523204803467
    3. ')]' → logprob: -8.255522727966309
    4. '])' → logprob: -10.630522727966309
    5. ')
' → logprob: -12.505522727966309
    6. ')`' → logprob: -14.630522727966309
    7. ')])' → logprob: -14.880522727966309
    8. ' )' → logprob: -15.255522727966309
    9. '）' → logprob: -15.380522727966309
    10. '))' → logprob: -16.380523681640625

Token 48: 'while' (ID: 7032)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7414078712463379
    2. '\n' → logprob: -1.366407871246338
    3. '<|end|>' → logprob: -1.491407871246338
    4. '
' → logprob: -4.241407871246338
    5. '[' → logprob: -4.491407871246338
    6. 'newline' → logprob: -5.491407871246338
    7. '#' → logprob: -5.741407871246338
    8. ' ' → logprob: -5.991407871246338
    9. '\' → logprob: -5.991407871246338
    10. ')' → logprob: -6.491407871246338

Token 49: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.07165077328681946
    2. 'True' → logprob: -2.696650743484497
    3. '(True' → logprob: -6.571650981903076
    4. ' dp' → logprob: -9.321650505065918
    5. '1' → logprob: -9.446650505065918
    6. ' ' → logprob: -9.946650505065918
    7. ' input' → logprob: -10.071650505065918
    8. ' not' → logprob: -11.071650505065918
    9. 'dp' → logprob: -11.946650505065918
    10. '(' → logprob: -12.321650505065918

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.607391408877447e-05
    2. ':
' → logprob: -10.625036239624023
    3. '():' → logprob: -11.750036239624023
    4. ' :' → logprob: -13.375036239624023
    5. ':**' → logprob: -14.000036239624023
    6. '):' → logprob: -14.750036239624023
    7. ',' → logprob: -15.500036239624023
    8. ':

' → logprob: -16.000036239624023
    9. '>:' → logprob: -16.125036239624023
    10. ':def' → logprob: -16.625036239624023

Token 51: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13800790905952454
    2. '   ' → logprob: -2.138007879257202
    3. '<|end|>' → logprob: -5.888008117675781
    4. ':
' → logprob: -6.513008117675781
    5. '```' → logprob: -6.513008117675781
    6. '():' → logprob: -6.638008117675781
    7. '):' → logprob: -7.388008117675781
    8. '(' → logprob: -7.388008117675781
    9. '\' → logprob: -7.763008117675781
    10. '    
' → logprob: -8.138008117675781

Token 52: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.5468255877494812
    2. '   ' → logprob: -1.171825647354126
    3. ' n' → logprob: -2.421825647354126
    4. 'try' → logprob: -4.421825408935547
    5. ' try' → logprob: -5.421825408935547
    6. 'x' → logprob: -6.296825408935547
    7. 's' → logprob: -6.546825408935547
    8. 'num' → logprob: -7.296825408935547
    9. ' s' → logprob: -8.046825408935547
    10. 'N' → logprob: -8.296825408935547

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602766215801239
    2. '=' → logprob: -1.9102766513824463
    3. '=int' → logprob: -10.285276412963867
    4. '=input' → logprob: -11.285276412963867
    5. ' ' → logprob: -12.910276412963867
    6. ' ==' → logprob: -14.535276412963867
    7. '>' → logprob: -14.660276412963867
    8. '  ' → logprob: -14.785276412963867
    9. '==' → logprob: -15.160276412963867
    10. 's' → logprob: -15.410276412963867

Token 54: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.061969365924596786
    2. ' int' → logprob: -2.81196928024292
    3. 'input' → logprob: -14.186969757080078
    4. '=int' → logprob: -14.686969757080078
    5. '(int' → logprob: -15.436969757080078
    6. ' input' → logprob: -16.061969757080078
    7. '[int' → logprob: -16.311969757080078
    8. '<int' → logprob: -16.686969757080078
    9. ' ' → logprob: -16.686969757080078
    10. '   ' → logprob: -17.436969757080078

Token 55: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0005562512087635696
    2. '(' → logprob: -7.500556468963623
    3. 'input' → logprob: -12.750555992126465
    4. '(
' → logprob: -16.62555694580078
    5. '()' → logprob: -16.62555694580078
    6. ' (' → logprob: -16.87555694580078
    7. ' input' → logprob: -16.87555694580078
    8. '=input' → logprob: -17.25055694580078
    9. '(in' → logprob: -17.62555694580078
    10. '(raw' → logprob: -18.25055694580078

Token 56: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.010016132146120071
    2. '()' → logprob: -4.635015964508057
    3. '())
' → logprob: -8.885016441345215
    4. '(' → logprob: -10.510016441345215
    5. '('' → logprob: -10.760016441345215
    6. '("' → logprob: -11.010016441345215
    7. ' ())' → logprob: -11.260016441345215
    8. '()))' → logprob: -11.760016441345215
    9. '()>' → logprob: -12.010016441345215
    10. '(""))' → logprob: -12.260016441345215

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34960654377937317
    2. ' if' → logprob: -1.5996065139770508
    3. '<|end|>' → logprob: -2.724606513977051
    4. 'if' → logprob: -4.599606513977051
    5. '\n' → logprob: -5.099606513977051
    6. '<|end|>' → logprob: -5.474606513977051
    7. '>' → logprob: -6.099606513977051
    8. '\' → logprob: -7.224606513977051
    9. '...' → logprob: -7.224606513977051
    10. ')' → logprob: -7.349606513977051

Token 58: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1144183948636055
    2. 'if' (adapté à ' if') → logprob: -2.2394185066223145
    3. '   ' → logprob: -6.4894185066223145
    4. '<|end|>' → logprob: -9.989418029785156
    5. '	if' → logprob: -11.739418029785156
    6. ' If' → logprob: -11.864418029785156
    7. 'If' → logprob: -12.489418029785156
    8. '    ' → logprob: -12.489418029785156
    9. '<|end|>' → logprob: -13.739418029785156
    10. ';if' → logprob: -13.989418029785156

Token 59: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04369756206870079
    2. ' not' → logprob: -3.1686975955963135
    3. 'n' → logprob: -7.293697357177734
    4. 'not' → logprob: -11.043697357177734
    5. ' ' → logprob: -13.418697357177734
    6. ' ' → logprob: -14.543697357177734
    7. '	n' → logprob: -15.293697357177734
    8. 'n't' → logprob: -17.168697357177734
    9. ')n' → logprob: -17.543697357177734
    10. '	not' → logprob: -17.918697357177734

Token 60: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7256003022193909
    2. '==' → logprob: -0.8506003022193909
    3. '<' → logprob: -2.725600242614746
    4. ' <' → logprob: -4.225600242614746
    5. '<=' → logprob: -5.100600242614746
    6. ' <=' → logprob: -6.100600242614746
    7. '=' → logprob: -8.600600242614746
    8. '0' → logprob: -10.600600242614746
    9. ' =' → logprob: -10.725600242614746
    10. '<|end|>' → logprob: -11.225600242614746

Token 61: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1002165898680687
    2. ' ' → logprob: -2.3502166271209717
    3. '-' → logprob: -12.60021686553955
    4. ' -' → logprob: -13.35021686553955
    5. ' ' → logprob: -13.60021686553955
    6. '```' → logprob: -13.97521686553955
    7. '  ' → logprob: -14.72521686553955
    8. 's' → logprob: -14.78771686553955
    9. '=' → logprob: -15.28771686553955
    10. '"' → logprob: -15.35021686553955

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043555660522542894
    2. '-' → logprob: -7.7504353523254395
    3. ' ' → logprob: -12.500435829162598
    4. '```' → logprob: -13.875435829162598
    5. ' -' → logprob: -16.12543487548828
    6. '_' → logprob: -17.50043487548828
    7. '``' → logprob: -17.87543487548828
    8. '1' → logprob: -18.12543487548828
    9. '`' → logprob: -18.25043487548828
    10. '   ' → logprob: -18.37543487548828

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004908377304673195
    2. ':
' → logprob: -7.750490665435791
    3. ' :' → logprob: -10.12549114227295
    4. '   ' → logprob: -10.87549114227295
    5. ':
' → logprob: -15.50049114227295
    6. ':return' → logprob: -15.62549114227295
    7. '.' → logprob: -15.75049114227295
    8. ' :
' → logprob: -15.87549114227295
    9. '	break' → logprob: -16.375490188598633
    10. ' break' → logprob: -16.375490188598633

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020709581673145294
    2. ':' → logprob: -4.02070951461792
    3. '   ' → logprob: -6.02070951461792
    4. '      ' → logprob: -10.270709991455078
    5. '     ' → logprob: -10.895709991455078
    6. '    ' → logprob: -10.895709991455078
    7. '	' → logprob: -11.395709991455078
    8. ':
' → logprob: -11.395709991455078
    9. '	break' → logprob: -11.645709991455078
    10. '           ' → logprob: -12.270709991455078

Token 65: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07974091172218323
    2. ' break' → logprob: -3.0797410011291504
    3. '   ' → logprob: -4.07974100112915
    4. '	break' → logprob: -4.57974100112915
    5. 'break' (adapté à ' break') → logprob: -5.82974100112915
    6. '           ' → logprob: -8.579740524291992
    7. ' ' → logprob: -10.079740524291992
    8. '	' → logprob: -10.079740524291992
    9. '\t' → logprob: -10.329740524291992
    10. '    ' → logprob: -10.329740524291992

Token 66: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36928725242614746
    2. '   ' → logprob: -1.3692872524261475
    3. '<|end|>' → logprob: -3.8692872524261475
    4. 'print' → logprob: -4.119287490844727
    5. '    
' → logprob: -4.369287490844727
    6. '  
' → logprob: -6.494287490844727
    7. '<|end|>' → logprob: -7.119287490844727
    8. '\n' → logprob: -7.369287490844727
    9. '```' → logprob: -7.744287490844727
    10. ' 
' → logprob: -8.244287490844727

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002765644807368517
    2. '
' → logprob: -6.502765655517578
    3. 'print' → logprob: -7.252765655517578
    4. '```' → logprob: -8.252765655517578
    5. '    
' → logprob: -8.502765655517578
    6. '<|end|>' → logprob: -9.877765655517578
    7. ' print' → logprob: -11.002765655517578
    8. '  
' → logprob: -12.252765655517578
    9. '<|end|>' → logprob: -12.502765655517578
    10. '[' → logprob: -12.627765655517578

Token 68: ' print' (ID: 2123)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5004948973655701
    2. '   ' → logprob: -1.2504949569702148
    3. 'print' (adapté à ' print') → logprob: -2.250494956970215
    4. ' print' → logprob: -7.375494956970215
    5. '    
' → logprob: -7.750494956970215
    6. '```' → logprob: -7.875494956970215
    7. '\n' → logprob: -8.125494956970215
    8. '  
' → logprob: -9.625494956970215
    9. '	print' → logprob: -9.750494956970215
    10. '
' → logprob: -9.750494956970215

Token 69: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.00023476807109545916
    2. '(' → logprob: -8.500234603881836
    3. 'dp' → logprob: -10.625234603881836
    4. '(f' → logprob: -12.125234603881836
    5. ' dp' → logprob: -13.750234603881836
    6. ' (' → logprob: -15.500234603881836
    7. '	dp' → logprob: -16.500234603881836
    8. '(df' → logprob: -17.000234603881836
    9. '()' → logprob: -17.000234603881836
    10. '("' → logprob: -17.375234603881836

Token 70: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.375000953674316
    3. ']' → logprob: -16.375
    4. ')n' → logprob: -16.875
    5. '][' → logprob: -17.0
    6. 'n' → logprob: -17.5
    7. '[i' → logprob: -17.625
    8. '[
' → logprob: -17.875
    9. ' [' → logprob: -18.5
    10. ')' → logprob: -18.625

Token 71: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -1.664371848164592e-05
    2. ')' → logprob: -12.125016212463379
    3. ']' → logprob: -12.250016212463379
    4. ' ])' → logprob: -12.250016212463379
    5. '])
' → logprob: -13.875016212463379
    6. '],' → logprob: -15.750016212463379
    7. '))' → logprob: -15.875016212463379
    8. ']])' → logprob: -16.625017166137695
    9. ')])' → logprob: -16.625017166137695
    10. ''])' → logprob: -16.750017166137695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 69
Tokens correctement prédits (1ère position, stricte): 33
Tokens correctement prédits (1ère position, avec adaptation): 35
Tokens correctement prédits (top 10): 61
Précision stricte (1ère position): 47.83%
Précision adaptée (1ère position): 50.72%
Précision (top 10): 88.41%
================================================================================
