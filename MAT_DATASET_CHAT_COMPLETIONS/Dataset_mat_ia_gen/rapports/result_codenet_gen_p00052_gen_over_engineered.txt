================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:17:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class FactorialTrailingZeroCounter:
    class InputHandler:
        def __init__(self):
            self._inputs = []
            self._terminated = False

        def read_inputs(self):
            count = 0
            while not self._terminated and count < 20:
                line = input().strip()
                if not line.isdigit():
                    continue
                n = int(line)
                if n == 0:
                    self._terminated = True
                    break
                self._inputs.append(n)
                count += 1
            return self._inputs

    class TrailingZeroCalculator:
        def __init__(self, base_factor=5):
            self.base_factor = base_factor

        def count_trailing_zeros(self, n: int) -> int:
            # Count the number of times base_factor divides n!
            count = 0
            divisor = self.base_factor
            while divisor <= n:
                count += n // divisor
                divisor *= self.base_factor
            return count

    class OutputHandler:
        @staticmethod
        def print_trailing_zeros(results):
            for res in results:
                print(res)

    def __init__(self):
        self.input_handler = self.InputHandler()
        self.calculator = self.TrailingZeroCalculator()
        self.output_handler = self.OutputHandler()

    def process(self):
        inputs = self.input_handler.read_inputs()
        results = []
        for n in inputs:
            zeros = self.calculator.count_trailing_zeros(n)
            results.append(zeros)
        self.output_handler.print_trailing_zeros(results)

if __name__ == "__main__":
    app = FactorialTrailingZeroCounter()
    app.process()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Factor' (ID: 63743)
  → Token d'amorce (pas de prédiction)

Token 2: 'ial' (ID: 563)
  → Token d'amorce (pas de prédiction)

Token 3: 'Trailing' (ID: 144756)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04072602838277817
    2. '{' → logprob: -3.2907259464263916
    3. ':' → logprob: -6.040726184844971
    4. ' {' → logprob: -9.290725708007812
    5. '```' → logprob: -9.290725708007812
    6. '(:' → logprob: -10.165725708007812
    7. ' (' → logprob: -10.540725708007812
    8. ' ' → logprob: -11.165725708007812
    9. '.' → logprob: -12.290725708007812
    10. '():' → logprob: -12.540725708007812

Token 4: 'Zero' (ID: 20870)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48457950353622437
    2. '{' → logprob: -0.9845795035362244
    3. '```' → logprob: -5.234579563140869
    4. 's' → logprob: -6.109579563140869
    5. ':' → logprob: -6.234579563140869
    6. '_' → logprob: -7.984579563140869
    7. '[' → logprob: -8.984579086303711
    8. '.' → logprob: -9.859579086303711
    9. ' ' → logprob: -10.234579086303711
    10. ' (' → logprob: -10.359579086303711

Token 5: 'Counter' (ID: 16263)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.025660648941993713
    2. '(' → logprob: -3.775660753250122
    3. ' {' → logprob: -7.150660514831543
    4. '```' → logprob: -7.525660514831543
    5. '{
' → logprob: -7.900660514831543
    6. '[' → logprob: -8.400660514831543
    7. ' ' → logprob: -8.400660514831543
    8. ':' → logprob: -9.525660514831543
    9. '`' → logprob: -10.150660514831543
    10. 's' → logprob: -10.275660514831543

Token 6: ':
' (ID: 734)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.1480996012687683
    2. '(' → logprob: -2.273099660873413
    3. ':' → logprob: -3.398099660873413
    4. ' {' → logprob: -7.273099422454834
    5. '```' → logprob: -8.648099899291992
    6. '.' → logprob: -8.898099899291992
    7. '(:' → logprob: -9.898099899291992
    8. ' ' → logprob: -10.273099899291992
    9. '[' → logprob: -10.648099899291992
    10. ' (' → logprob: -10.773099899291992

Token 7: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.051673147827386856
    2. '(' → logprob: -3.051673173904419
    3. '```' → logprob: -6.42667293548584
    4. ':
' → logprob: -7.30167293548584
    5. '   ' → logprob: -7.67667293548584
    6. '():' → logprob: -9.67667293548584
    7. '(:' → logprob: -9.92667293548584
    8. '(
' → logprob: -10.05167293548584
    9. '{' → logprob: -10.05167293548584
    10. '.' → logprob: -10.42667293548584

Token 8: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47969719767570496
    2. '```' → logprob: -1.8546972274780273
    3. ' ' → logprob: -2.4796972274780273
    4. '(' → logprob: -2.9796972274780273
    5. ':' → logprob: -3.3546972274780273
    6. ' def' → logprob: -3.8546972274780273
    7. 'def' → logprob: -5.604697227478027
    8. '    ' → logprob: -5.729697227478027
    9. '\' → logprob: -5.729697227478027
    10. '`' → logprob: -5.854697227478027

Token 9: ' Input' (ID: 10090)
  Prédit: ' Factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Factor' → logprob: -0.7454397082328796
    2. ' ' → logprob: -1.6204397678375244
    3. 'Factor' → logprob: -2.3704397678375244
    4. '  ' → logprob: -3.1204397678375244
    5. 'Method' → logprob: -3.7454397678375244
    6. '    ' → logprob: -3.8704397678375244
    7. ' def' → logprob: -3.8704397678375244
    8. '   ' → logprob: -4.120439529418945
    9. ' Method' → logprob: -4.120439529418945
    10. ':' → logprob: -4.120439529418945

Token 10: 'Handler' (ID: 4139)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023239420726895332
    2. '):' → logprob: -4.023239612579346
    3. '(' → logprob: -6.023239612579346
    4. ' :' → logprob: -7.023239612579346
    5. '(object' → logprob: -8.023239135742188
    6. ':
' → logprob: -8.023239135742188
    7. '{' → logprob: -8.648239135742188
    8. 'Data' → logprob: -9.023239135742188
    9. '():' → logprob: -9.273239135742188
    10. 'Input' → logprob: -9.273239135742188

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002063661115244031
    2. '(' → logprob: -6.752063751220703
    3. ' :' → logprob: -7.877063751220703
    4. '<|end|>' → logprob: -8.502063751220703
    5. '   ' → logprob: -9.502063751220703
    6. '():' → logprob: -9.877063751220703
    7. '```' → logprob: -10.127063751220703
    8. ':
' → logprob: -10.377063751220703
    9. '[' → logprob: -11.127063751220703
    10. '):' → logprob: -11.127063751220703

Token 12: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2831816077232361
    2. '   ' → logprob: -2.283181667327881
    3. '    ' → logprob: -2.408181667327881
    4. '(n' → logprob: -4.533181667327881
    5. '<|end|>' → logprob: -4.658181667327881
    6. 'n' → logprob: -4.908181667327881
    7. ' ' → logprob: -5.283181667327881
    8. '     ' → logprob: -5.658181667327881
    9. '        ' → logprob: -5.783181667327881
    10. '(' → logprob: -5.908181667327881

Token 13: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.21814848482608795
    2. '        ' → logprob: -2.4681484699249268
    3. '       ' → logprob: -2.9681484699249268
    4. ' def' → logprob: -3.5931484699249268
    5. '    ' → logprob: -4.843148708343506
    6. '   ' → logprob: -4.843148708343506
    7. '           ' → logprob: -4.968148708343506
    8. ' ' → logprob: -6.093148708343506
    9. '            ' → logprob: -6.718148708343506
    10. '\' → logprob: -6.968148708343506

Token 14: ' __' (ID: 2516)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.24066287279129028
    2. ' __' → logprob: -1.8656628131866455
    3. ' process' → logprob: -4.240663051605225
    4. ' get' → logprob: -4.740663051605225
    5. ' handle' → logprob: -4.990663051605225
    6. ' init' → logprob: -5.115663051605225
    7. ' _' → logprob: -5.240663051605225
    8. ' initialize' → logprob: -5.615663051605225
    9. ' compute' → logprob: -5.990663051605225
    10. ' ' → logprob: -6.115663051605225

Token 15: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -9.491498531133402e-06
    2. 'ini' → logprob: -12.000009536743164
    3. ' init' → logprob: -13.000009536743164
    4. 'i' → logprob: -14.125009536743164
    5. 'in' → logprob: -15.375009536743164
    6. 'int' → logprob: -16.750009536743164
    7. 'inti' → logprob: -16.875009536743164
    8. 'innit' → logprob: -17.625009536743164
    9. '	init' → logprob: -17.875009536743164
    10. 'inite' → logprob: -18.250009536743164

Token 16: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.07552819699048996
    2. '(' → logprob: -3.075528144836426
    3. '__' → logprob: -3.825528144836426
    4. '(self' → logprob: -6.200528144836426
    5. '__(
' → logprob: -6.575528144836426
    6. ' (' → logprob: -7.325528144836426
    7. '__((' → logprob: -8.825528144836426
    8. '_' → logprob: -8.825528144836426
    9. '<|end|>' → logprob: -9.575528144836426
    10. '__(*' → logprob: -9.700528144836426

Token 17: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009818308055400848
    2. ' self' → logprob: -4.634818077087402
    3. ')' → logprob: -10.134818077087402
    4. '(self' → logprob: -11.384818077087402
    5. ' ' → logprob: -12.884818077087402
    6. ' )' → logprob: -13.384818077087402
    7. '       ' → logprob: -14.259818077087402
    8. ',self' → logprob: -14.259818077087402
    9. ',' → logprob: -14.384818077087402
    10. '        ' → logprob: -14.509818077087402

Token 18: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01128383632749319
    2. ' ,' → logprob: -4.636283874511719
    3. 'self' → logprob: -6.636283874511719
    4. ',self' → logprob: -9.261283874511719
    5. ' self' → logprob: -9.511283874511719
    6. ')' → logprob: -11.636283874511719
    7. '_self' → logprob: -12.511283874511719
    8. '(self' → logprob: -12.511283874511719
    9. ',input' → logprob: -12.511283874511719
    10. '<|end|>' → logprob: -12.636283874511719

Token 19: '           ' (ID: 352)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.23353314399719238
    2. ' self' → logprob: -1.6085331439971924
    3. '        ' → logprob: -5.733532905578613
    4. '           ' → logprob: -5.983532905578613
    5. '(self' → logprob: -6.483532905578613
    6. '            ' → logprob: -8.108532905578613
    7. ',' → logprob: -8.858532905578613
    8. '       ' → logprob: -9.233532905578613
    9. '               ' → logprob: -10.108532905578613
    10. ' (' → logprob: -10.358532905578613

Token 20: ' self' (ID: 1051)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.6065213680267334
    2. 'self' (adapté à ' self') → logprob: -0.9815213680267334
    3. ' pass' → logprob: -3.2315213680267334
    4. '               ' → logprob: -3.7315213680267334
    5. '           ' → logprob: -4.9815216064453125
    6. '       ' → logprob: -4.9815216064453125
    7. ' self' → logprob: -6.2315216064453125
    8. '   ' → logprob: -8.731521606445312
    9. ' ' → logprob: -8.856521606445312
    10. '<|end|>' → logprob: -9.356521606445312

Token 21: '._' (ID: 2697)
  Prédit: '.value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -1.234404444694519
    2. '.input' → logprob: -1.609404444694519
    3. '.data' → logprob: -1.984404444694519
    4. '.' → logprob: -2.3594045639038086
    5. '.n' → logprob: -2.9844045639038086
    6. '._' → logprob: -2.9844045639038086
    7. '.count' → logprob: -3.2344045639038086
    8. '.factor' → logprob: -3.6094045639038086
    9. '.counter' → logprob: -3.8594045639038086
    10. '.inputs' → logprob: -3.9844045639038086

Token 22: 'inputs' (ID: 54250)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.42190173268318176
    2. 'value' → logprob: -2.0469017028808594
    3. 'input' → logprob: -2.4219017028808594
    4. 'n' → logprob: -3.0469017028808594
    5. 'num' → logprob: -3.9219017028808594
    6. 'data' → logprob: -4.546901702880859
    7. 'factor' → logprob: -4.671901702880859
    8. 'numbers' → logprob: -4.671901702880859
    9. 'count' → logprob: -5.171901702880859
    10. 'cache' → logprob: -5.296901702880859

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03367820754647255
    2. '=' → logprob: -3.4086782932281494
    3. '=[]' → logprob: -11.15867805480957
    4. ' ' → logprob: -11.90867805480957
    5. '.' → logprob: -13.15867805480957
    6. '.append' → logprob: -13.65867805480957
    7. '[]' → logprob: -13.65867805480957
    8. '[' → logprob: -13.78367805480957
    9. '.setdefault' → logprob: -14.15867805480957
    10. 's' → logprob: -14.28367805480957

Token 24: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.04872407391667366
    2. '[]' → logprob: -3.0487241744995117
    3. ' {}' → logprob: -9.048724174499512
    4. ' ' → logprob: -11.798724174499512
    5. '{}' → logprob: -11.923724174499512
    6. ' []
' → logprob: -13.048724174499512
    7. '[]}' → logprob: -14.298724174499512
    8. ' []

' → logprob: -14.423724174499512
    9. ' [' → logprob: -14.923724174499512
    10. '[' → logprob: -15.173724174499512

Token 25: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3507055044174194
    2. '    
' → logprob: -1.4757055044174194
    3. '   ' → logprob: -1.9757055044174194
    4. '
' → logprob: -2.225705623626709
    5. '<|end|>' → logprob: -2.350705623626709
    6. '        
' → logprob: -2.475705623626709
    7. ' 
' → logprob: -3.225705623626709
    8. 'def' → logprob: -3.725705623626709
    9. '<|end|>' → logprob: -4.725705623626709
    10. ' ' → logprob: -5.475705623626709

Token 27: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.010277514345943928
    2. '._' → logprob: -4.76027774810791
    3. '.append' → logprob: -7.13527774810791
    4. ' .' → logprob: -7.88527774810791
    5. '.readline' → logprob: -9.26027774810791
    6. '.add' → logprob: -9.76027774810791
    7. '.input' → logprob: -10.01027774810791
    8. '.clear' → logprob: -10.26027774810791
    9. '.next' → logprob: -10.51027774810791
    10. '.read' → logprob: -10.63527774810791

Token 28: 'terminated' (ID: 161801)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -0.830012857913971
    2. 'outputs' → logprob: -1.4550127983093262
    3. 'index' → logprob: -3.080012798309326
    4. 'max' → logprob: -3.205012798309326
    5. 'input' → logprob: -3.205012798309326
    6. 'factor' → logprob: -3.455012798309326
    7. 'results' → logprob: -3.580012798309326
    8. 'count' → logprob: -3.705012798309326
    9. 'current' → logprob: -3.830012798309326
    10. 'output' → logprob: -3.955012798309326

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033659301698207855
    2. '=' → logprob: -3.4086592197418213
    3. ' ' → logprob: -12.033658981323242
    4. '_' → logprob: -12.783658981323242
    5. '   ' → logprob: -13.408658981323242
    6. '=False' → logprob: -13.658658981323242
    7. '  ' → logprob: -13.908658981323242
    8. '=True' → logprob: -14.908658981323242
    9. '    ' → logprob: -15.908658981323242
    10. '<|end|>' → logprob: -16.158658981323242

Token 30: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.2014157623052597
    2. 'False' → logprob: -1.701415777206421
    3. ' True' → logprob: -13.326416015625
    4. '(False' → logprob: -14.576416015625
    5. 'True' → logprob: -15.701416015625
    6. '=False' → logprob: -16.326416015625
    7. ' ' → logprob: -16.951416015625
    8. '   ' → logprob: -17.451416015625
    9. '[]' → logprob: -17.576416015625
    10. '.False' → logprob: -18.326416015625

Token 31: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4412845969200134
    2. '<|end|>' → logprob: -1.3162846565246582
    3. '    
' → logprob: -3.191284656524658
    4. '       ' → logprob: -4.316284656524658
    5. '        
' → logprob: -4.566284656524658
    6. ' 
' → logprob: -4.566284656524658
    7. '   ' → logprob: -4.941284656524658
    8. '<|end|>' → logprob: -5.691284656524658
    9. '

' → logprob: -7.941284656524658
    10. 'newline' → logprob: -7.941284656524658

Token 33: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.09925828874111176
    2. ' def' → logprob: -2.5992581844329834
    3. '   ' → logprob: -4.0992584228515625
    4. '
' → logprob: -5.9742584228515625
    5. '    
' → logprob: -7.8492584228515625
    6. '       ' → logprob: -8.224258422851562
    7. '        
' → logprob: -9.099258422851562
    8. '	def' → logprob: -9.099258422851562
    9. '<|end|>' → logprob: -9.724258422851562
    10. ' 
' → logprob: -10.224258422851562

Token 34: ' read' (ID: 1729)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.17162510752677917
    2. ' get' → logprob: -2.4216251373291016
    3. ' read' → logprob: -3.0466251373291016
    4. ' append' → logprob: -4.046625137329102
    5. 'append' → logprob: -6.921625137329102
    6. 'add' → logprob: -7.546625137329102
    7. ' readline' → logprob: -7.921625137329102
    8. 'get' → logprob: -8.046625137329102
    9. ' has' → logprob: -8.171625137329102
    10. ' def' → logprob: -8.171625137329102

Token 35: '_inputs' (ID: 67304)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.12078052759170532
    2. '_input' → logprob: -2.4957804679870605
    3. '_' → logprob: -3.9957804679870605
    4. '()' → logprob: -4.8707804679870605
    5. '(self' → logprob: -6.6207804679870605
    6. '(' → logprob: -6.6207804679870605
    7. 'line' → logprob: -6.9957804679870605
    8. '_token' → logprob: -7.4957804679870605
    9. '_number' → logprob: -8.245780944824219
    10. '_lines' → logprob: -8.745780944824219

Token 36: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3147735595703125
    2. '(' → logprob: -1.3147735595703125
    3. ' (' → logprob: -6.8147735595703125
    4. 'self' → logprob: -8.939773559570312
    5. '()' → logprob: -9.314773559570312
    6. '       ' → logprob: -9.939773559570312
    7. '   ' → logprob: -10.064773559570312
    8. '(
' → logprob: -10.564773559570312
    9. '<|end|>' → logprob: -10.939773559570312
    10. ' ' → logprob: -11.314773559570312

Token 37: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004265608265995979
    2. ',' → logprob: -5.879265785217285
    3. '):
' → logprob: -6.879265785217285
    4. ')' → logprob: -8.129265785217285
    5. ' ):' → logprob: -9.004265785217285
    6. 'self' → logprob: -11.879265785217285
    7. '):
' → logprob: -13.129265785217285
    8. '):

' → logprob: -13.754265785217285
    9. ' ,' → logprob: -14.379265785217285
    10. ' )' → logprob: -15.129265785217285

Token 38: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09547650068998337
    2. '       ' → logprob: -3.5954763889312744
    3. '               ' → logprob: -3.7204763889312744
    4. '<|end|>' → logprob: -3.8454763889312744
    5. '()' → logprob: -4.5954766273498535
    6. '<|end|>' → logprob: -6.0954766273498535
    7. '   ' → logprob: -6.7204766273498535
    8. '\' → logprob: -7.3454766273498535
    9. '\n' → logprob: -7.4704766273498535
    10. ':' → logprob: -7.8454766273498535

Token 39: ' count' (ID: 3605)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5072866082191467
    2. ' try' → logprob: -1.382286548614502
    3. 'try' → logprob: -2.882286548614502
    4. 'while' → logprob: -3.132286548614502
    5. '       ' → logprob: -3.882286548614502
    6. ' pass' → logprob: -4.632286548614502
    7. ' line' → logprob: -4.882286548614502
    8. ' for' → logprob: -6.132286548614502
    9. 'pass' → logprob: -6.632286548614502
    10. ' ' → logprob: -7.132286548614502

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0434364415705204
    2. '=' → logprob: -3.1684365272521973
    3. 's' → logprob: -9.293436050415039
    4. '_' → logprob: -9.293436050415039
    5. 'er' → logprob: -9.418436050415039
    6. ' ' → logprob: -9.918436050415039
    7. '   ' → logprob: -10.043436050415039
    8. '  ' → logprob: -10.793436050415039
    9. '_tokens' → logprob: -11.918436050415039
    10. '=int' → logprob: -12.043436050415039

Token 41: ' ' (ID: 220)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.10080910474061966
    2. ' ' → logprob: -2.975809097290039
    3. 'int' → logprob: -3.475809097290039
    4. '0' → logprob: -4.975809097290039
    5. ' len' → logprob: -5.225809097290039
    6. ' input' → logprob: -6.975809097290039
    7. 'len' → logprob: -8.100809097290039
    8. '1' → logprob: -8.350809097290039
    9. 'input' → logprob: -9.850809097290039
    10. '10' → logprob: -10.475809097290039

Token 42: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0664278119802475
    2. ' int' → logprob: -2.941427707672119
    3. '0' → logprob: -4.691427707672119
    4. ' ' → logprob: -6.441427707672119
    5. '1' → logprob: -8.066428184509277
    6. 'len' → logprob: -8.691428184509277
    7. '10' → logprob: -9.566428184509277
    8. 'input' → logprob: -9.566428184509277
    9. ' len' → logprob: -10.191428184509277
    10. ' input' → logprob: -11.441428184509277

Token 43: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.025225874036550522
    2. ' ' → logprob: -4.150225639343262
    3. 'while' (adapté à ' while') → logprob: -4.775225639343262
    4. '    ' → logprob: -8.900225639343262
    5. '<|end|>' → logprob: -9.025225639343262
    6. '        ' → logprob: -9.525225639343262
    7. '            ' → logprob: -9.525225639343262
    8. ' for' → logprob: -10.025225639343262
    9. 'While' → logprob: -10.400225639343262
    10. '<|end|>' → logprob: -10.525225639343262

Token 46: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.42254000902175903
    2. ' count' → logprob: -1.1725399494171143
    3. ' True' → logprob: -3.4225399494171143
    4. 'count' → logprob: -6.672540187835693
    5. 'True' → logprob: -7.672540187835693
    6. 'not' → logprob: -8.297539710998535
    7. ' ' → logprob: -9.047539710998535
    8. '(count' → logprob: -9.047539710998535
    9. ' self' → logprob: -9.172539710998535
    10. ' (' → logprob: -10.422539710998535

Token 47: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.0011858227662742138
    2. 'self' → logprob: -6.751185894012451
    3. ' ' → logprob: -11.251185417175293
    4. ' ' → logprob: -13.876185417175293
    5. '_self' → logprob: -14.126185417175293
    6. '	self' → logprob: -14.626185417175293
    7. '  ' → logprob: -16.25118637084961
    8. 'Self' → logprob: -16.75118637084961
    9. ' _' → logprob: -17.37618637084961
    10. '.' → logprob: -17.75118637084961

Token 48: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00010068230039905757
    2. '.' → logprob: -9.500101089477539
    3. ' .' → logprob: -10.750101089477539
    4. '       ' → logprob: -13.625101089477539
    5. ']._' → logprob: -14.000101089477539
    6. ')._' → logprob: -14.000101089477539
    7. '   ' → logprob: -14.625101089477539
    8. '_' → logprob: -15.375101089477539
    9. '._

' → logprob: -16.25010108947754
    10. '.__' → logprob: -16.25010108947754

Token 49: 'terminated' (ID: 161801)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04300491139292717
    2. 'terminated' → logprob: -3.1680049896240234
    3. '_term' → logprob: -13.043004989624023
    4. ' _' → logprob: -14.293004989624023
    5. 'termin' → logprob: -14.293004989624023
    6. ' terminated' → logprob: -14.668004989624023
    7. '._' → logprob: -15.043004989624023
    8. '.' → logprob: -15.043004989624023
    9. '_read' → logprob: -15.543004989624023
    10. '_TER' → logprob: -15.668004989624023

Token 50: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5439233183860779
    2. ' and' → logprob: -0.9189233183860779
    3. 'and' → logprob: -3.9189233779907227
    4. ' :' → logprob: -7.418923377990723
    5. ':
' → logprob: -9.543923377990723
    6. '():' → logprob: -11.043923377990723
    7. '):' → logprob: -11.168923377990723
    8. ' or' → logprob: -12.293923377990723
    9. '<|end|>' → logprob: -12.418923377990723
    10. ' ' → logprob: -12.793923377990723

Token 51: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.011173847131431103
    2. 'count' → logprob: -4.511173725128174
    3. ' True' → logprob: -9.386174201965332
    4. ' len' → logprob: -11.136174201965332
    5. 'True' → logprob: -11.886174201965332
    6. '	count' → logprob: -12.011174201965332
    7. ' ' → logprob: -12.136174201965332
    8. ' ' → logprob: -12.636174201965332
    9. '(count' → logprob: -12.761174201965332
    10. 'len' → logprob: -14.386174201965332

Token 52: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.002058307873085141
    2. ' ' → logprob: -6.502058506011963
    3. '<' → logprob: -7.502058506011963
    4. ' <
' → logprob: -13.377058029174805
    5. ' <=' → logprob: -14.377058029174805
    6. ' <",' → logprob: -15.002058029174805
    7. '  ' → logprob: -15.127058029174805
    8. '[' → logprob: -15.252058029174805
    9. '   ' → logprob: -15.752058029174805
    10. '<len' → logprob: -16.377058029174805

Token 53: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03379599750041962
    2. '10' → logprob: -3.6587960720062256
    3. '5' → logprob: -5.6587958335876465
    4. ' len' → logprob: -5.7837958335876465
    5. '100' → logprob: -7.9087958335876465
    6. ' int' → logprob: -8.783796310424805
    7. '3' → logprob: -9.033796310424805
    8. '1' → logprob: -9.658796310424805
    9. '20' → logprob: -9.908796310424805
    10. ' self' → logprob: -9.908796310424805

Token 54: '20' (ID: 455)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5144038200378418
    2. '10' → logprob: -1.0144038200378418
    3. '100' → logprob: -3.764403820037842
    4. '5' → logprob: -4.389403820037842
    5. ' len' → logprob: -6.764403820037842
    6. '20' → logprob: -7.014403820037842
    7. '3' → logprob: -7.264403820037842
    8. '1' → logprob: -7.514403820037842
    9. 'int' → logprob: -8.889404296875
    10. ' int' → logprob: -8.889404296875

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019188835285604
    2. ':
' → logprob: -6.501918792724609
    3. ' and' → logprob: -8.50191879272461
    4. ' :' → logprob: -8.62691879272461
    5. '):' → logprob: -11.25191879272461
    6. '           ' → logprob: -12.37691879272461
    7. 'and' → logprob: -12.62691879272461
    8. '():' → logprob: -12.75191879272461
    9. '   ' → logprob: -13.12691879272461
    10. ' :
' → logprob: -13.12691879272461

Token 56: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6671282052993774
    2. ':' → logprob: -0.7921282052993774
    3. '           ' → logprob: -4.292128086090088
    4. ':
' → logprob: -5.167128086090088
    5. '):' → logprob: -5.667128086090088
    6. ' :' → logprob: -5.917128086090088
    7. ',' → logprob: -6.417128086090088
    8. '   ' → logprob: -6.542128086090088
    9. ')' → logprob: -7.042128086090088
    10. '                
' → logprob: -7.417128086090088

Token 57: ' line' (ID: 2543)
  Prédit: ' try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.4777498245239258
    2. ' line' → logprob: -1.8527498245239258
    3. ' ' → logprob: -2.602749824523926
    4. '   ' → logprob: -3.102749824523926
    5. 'try' → logprob: -3.477749824523926
    6. ' user' → logprob: -3.852749824523926
    7. '    ' → logprob: -4.227749824523926
    8. '           ' → logprob: -5.102749824523926
    9. '  ' → logprob: -5.227749824523926
    10. '               ' → logprob: -5.477749824523926

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0008084330474957824
    2. '=' → logprob: -7.125808238983154
    3. ' ' → logprob: -12.875808715820312
    4. ' =
' → logprob: -14.000808715820312
    5. ' ==' → logprob: -15.500808715820312
    6. 's' → logprob: -15.750808715820312
    7. '_' → logprob: -16.250808715820312
    8. '.' → logprob: -16.375808715820312
    9. '=line' → logprob: -17.125808715820312
    10. ' =)' → logprob: -17.125808715820312

Token 59: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0008332127472385764
    2. 'input' → logprob: -7.125833034515381
    3. ' self' → logprob: -10.500833511352539
    4. ' ' → logprob: -14.875833511352539
    5. ' ' → logprob: -15.375833511352539
    6. 'self' → logprob: -15.500833511352539
    7. '	input' → logprob: -16.25083351135254
    8. ' inp' → logprob: -16.37583351135254
    9. ' in' → logprob: -16.50083351135254
    10. '=input' → logprob: -16.50083351135254

Token 60: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007243485888466239
    2. '(' → logprob: -7.5007243156433105
    3. '().' → logprob: -8.875724792480469
    4. '()
' → logprob: -11.500724792480469
    5. '('' → logprob: -12.125724792480469
    6. ' ()' → logprob: -12.625724792480469
    7. '())' → logprob: -12.750724792480469
    8. '("")' → logprob: -13.125724792480469
    9. '()`' → logprob: -13.125724792480469
    10. '("' → logprob: -13.250724792480469

Token 61: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0002614550176076591
    2. 'rstrip' → logprob: -8.250261306762695
    3. ' strip' → logprob: -16.000261306762695
    4. 'isdigit' → logprob: -17.125261306762695
    5. 'split' → logprob: -17.250261306762695
    6. 'str' → logprob: -18.250261306762695
    7. '.strip' → logprob: -18.375261306762695
    8. 'startswith' → logprob: -18.625261306762695
    9. '_strip' → logprob: -18.875261306762695
    10. '-strip' → logprob: -20.500261306762695

Token 62: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.048862699419260025
    2. '(' → logprob: -3.0488626956939697
    3. '('' → logprob: -8.54886245727539
    4. '())' → logprob: -10.54886245727539
    5. '(
' → logprob: -12.04886245727539
    6. '("' → logprob: -12.04886245727539
    7. '()`' → logprob: -12.04886245727539
    8. ')' → logprob: -12.42386245727539
    9. '()
' → logprob: -12.42386245727539
    10. '();' → logprob: -12.54886245727539

Token 63: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20631134510040283
    2. ' if' → logprob: -1.7063113451004028
    3. '<|end|>' → logprob: -5.581311225891113
    4. '               ' → logprob: -8.081311225891113
    5. '<|end|>' → logprob: -8.206311225891113
    6. '           ' → logprob: -8.206311225891113
    7. '```' → logprob: -9.456311225891113
    8. ' ' → logprob: -9.831311225891113
    9. '
' → logprob: -10.081311225891113
    10. 'If' → logprob: -10.206311225891113

Token 65: ' not' (ID: 625)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.4800123870372772
    2. ' not' → logprob: -0.9800124168395996
    3. 'line' → logprob: -5.9800124168396
    4. ' ' → logprob: -6.1050124168396
    5. 'not' → logprob: -6.8550124168396
    6. '(line' → logprob: -10.355011940002441
    7. '	line' → logprob: -10.980011940002441
    8. '=line' → logprob: -11.355011940002441
    9. '  ' → logprob: -11.480011940002441
    10. ' ' → logprob: -11.855011940002441

Token 66: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.01815614476799965
    2. 'line' → logprob: -4.018156051635742
    3. ' ' → logprob: -12.893156051635742
    4. '	line' → logprob: -13.643156051635742
    5. '(line' → logprob: -13.643156051635742
    6. ' lin' → logprob: -14.643156051635742
    7. '#line' → logprob: -15.518156051635742
    8. '[line' → logprob: -16.018156051635742
    9. '```' → logprob: -16.393156051635742
    10. '=line' → logprob: -16.643156051635742

Token 67: '.is' (ID: 3109)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005984846968203783
    2. ' :' → logprob: -5.255984783172607
    3. ' or' → logprob: -7.630984783172607
    4. '<|end|>' → logprob: -8.880985260009766
    5. ':
' → logprob: -9.255985260009766
    6. '):' → logprob: -11.130985260009766
    7. '.' → logprob: -12.255985260009766
    8. '<|end|>' → logprob: -12.380985260009766
    9. ':**' → logprob: -13.505985260009766
    10. ' :
' → logprob: -13.505985260009766

Token 68: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.0015973414992913604
    2. 'decimal' → logprob: -6.6265974044799805
    3. 'numeric' → logprob: -8.25159740447998
    4. 'al' → logprob: -12.50159740447998
    5. 'alpha' → logprob: -12.87659740447998
    6. '_digit' → logprob: -13.50159740447998
    7. 'digits' → logprob: -14.00159740447998
    8. ' digit' → logprob: -14.25159740447998
    9. 'd' → logprob: -14.87659740447998
    10. 'digital' → logprob: -15.12659740447998

Token 69: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0036383189726620913
    2. '()' → logprob: -5.62863826751709
    3. '(' → logprob: -10.62863826751709
    4. '():
' → logprob: -11.37863826751709
    5. ':' → logprob: -14.00363826751709
    6. ' ():' → logprob: -14.62863826751709
    7. '()>' → logprob: -15.12863826751709
    8. '():

' → logprob: -15.62863826751709
    9. '()">' → logprob: -15.87863826751709
    10. '())' → logprob: -16.003639221191406

Token 70: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.029415559023618698
    2. '                   ' → logprob: -3.6544156074523926
    3. '           ' → logprob: -6.904415607452393
    4. '                
' → logprob: -7.404415607452393
    5. ':' → logprob: -8.029415130615234
    6. ' break' → logprob: -8.279415130615234
    7. '                ' → logprob: -8.404415130615234
    8. ':
' → logprob: -8.654415130615234
    9. '   ' → logprob: -9.404415130615234
    10. '                    
' → logprob: -9.654415130615234

Token 71: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.44800135493278503
    2. '                   ' → logprob: -1.5730013847351074
    3. ' break' → logprob: -2.3230013847351074
    4. 'break' → logprob: -3.1980013847351074
    5. 'self' → logprob: -5.323001384735107
    6. '           ' → logprob: -5.698001384735107
    7. ' self' → logprob: -6.823001384735107
    8. '                ' → logprob: -7.073001384735107
    9. '   ' → logprob: -7.073001384735107
    10. '                       ' → logprob: -7.323001384735107

Token 72: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11847852170467377
    2. '                
' → logprob: -3.243478536605835
    3. '<|end|>' → logprob: -3.243478536605835
    4. '
' → logprob: -3.618478536605835
    5. '\n' → logprob: -6.368478298187256
    6. '  
' → logprob: -6.618478298187256
    7. '```' → logprob: -6.743478298187256
    8. '<|end|>' → logprob: -7.493478298187256
    9. '    
' → logprob: -7.993478298187256
    10. 'newline' → logprob: -8.118478775024414

Token 73: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009990167804062366
    2. '                
' → logprob: -4.884990215301514
    3. '<|end|>' → logprob: -6.509990215301514
    4. '
' → logprob: -7.884990215301514
    5. '```' → logprob: -9.509989738464355
    6. '  
' → logprob: -9.509989738464355
    7. '                    
' → logprob: -9.884989738464355
    8. '    
' → logprob: -9.884989738464355
    9. '           ' → logprob: -10.009989738464355
    10. '            
' → logprob: -10.384989738464355

Token 74: ' n' (ID: 297)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -1.1201001405715942
    2. 'num' → logprob: -1.7451001405715942
    3. 'n' (adapté à ' n') → logprob: -1.8701001405715942
    4. '               ' → logprob: -1.9951001405715942
    5. ' num' → logprob: -1.9951001405715942
    6. 'number' → logprob: -3.4951000213623047
    7. ' n' → logprob: -3.6201000213623047
    8. '                
' → logprob: -5.245100021362305
    9. '           ' → logprob: -6.245100021362305
    10. '
' → logprob: -6.370100021362305

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0007148159202188253
    2. '=' → logprob: -7.3757147789001465
    3. ' ' → logprob: -9.625715255737305
    4. ' =
' → logprob: -10.750715255737305
    5. '=int' → logprob: -15.750715255737305
    6. 's' → logprob: -16.125715255737305
    7. '  ' → logprob: -16.125715255737305
    8. '_' → logprob: -16.500715255737305
    9. ' =
' → logprob: -16.500715255737305
    10. ')' → logprob: -16.875715255737305

Token 76: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.029751643538475037
    2. 'int' → logprob: -3.5297515392303467
    3. '[int' → logprob: -14.279751777648926
    4. '=int' → logprob: -15.279751777648926
    5. '(int' → logprob: -16.02975082397461
    6. '<int' → logprob: -16.40475082397461
    7. ':int' → logprob: -17.65475082397461
    8. ']int' → logprob: -17.90475082397461
    9. '	int' → logprob: -18.77975082397461
    10. ' ' → logprob: -18.90475082397461

Token 77: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.023246875032782555
    2. '(' → logprob: -3.7732467651367188
    3. '(
' → logprob: -14.398246765136719
    4. '(n' → logprob: -14.898246765136719
    5. '(lines' → logprob: -15.898246765136719
    6. '(l' → logprob: -16.52324676513672
    7. '(

' → logprob: -16.64824676513672
    8. '(li' → logprob: -16.89824676513672
    9. '#line' → logprob: -17.14824676513672
    10. ' (' → logprob: -17.52324676513672

Token 78: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014650204218924046
    2. ')
' → logprob: -4.264650344848633
    3. '               ' → logprob: -7.764650344848633
    4. ')
' → logprob: -10.014650344848633
    5. ' )' → logprob: -11.639650344848633
    6. ')

' → logprob: -13.389650344848633
    7. ')`' → logprob: -13.639650344848633
    8. '           ' → logprob: -13.889650344848633
    9. '                   ' → logprob: -14.139650344848633
    10. ' )
' → logprob: -14.514650344848633

Token 79: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011665337951853871
    2. '<|end|>' → logprob: -7.251166343688965
    3. '                
' → logprob: -8.626166343688965
    4. '                ' → logprob: -9.376166343688965
    5. ' if' → logprob: -9.501166343688965
    6. '           ' → logprob: -10.251166343688965
    7. '              ' → logprob: -11.126166343688965
    8. '<|end|>' → logprob: -11.251166343688965
    9. '                   ' → logprob: -11.501166343688965
    10. '```' → logprob: -11.501166343688965

Token 80: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7045727968215942
    2. ' if' → logprob: -0.7045727968215942
    3. 'if' (adapté à ' if') → logprob: -4.954572677612305
    4. ' self' → logprob: -5.704572677612305
    5. 'self' → logprob: -7.954572677612305
    6. '```' → logprob: -8.329572677612305
    7. '<|end|>' → logprob: -9.204572677612305
    8. '                ' → logprob: -9.204572677612305
    9. ' ' → logprob: -10.329572677612305
    10. '                   ' → logprob: -10.454572677612305

Token 81: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0013484497321769595
    2. 'n' → logprob: -6.626348495483398
    3. ' ' → logprob: -11.126348495483398
    4. '0' → logprob: -12.626348495483398
    5. ' not' → logprob: -13.251348495483398
    6. '	n' → logprob: -14.626348495483398
    7. ' (' → logprob: -14.876348495483398
    8. '<|end|>' → logprob: -14.876348495483398
    9. ' self' → logprob: -15.126348495483398
    10. ' ' → logprob: -15.251348495483398

Token 82: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3248548209667206
    2. ' ==' → logprob: -1.324854850769043
    3. ' >' → logprob: -5.824854850769043
    4. ' <=' → logprob: -5.824854850769043
    5. '<' → logprob: -6.324854850769043
    6. '==' → logprob: -6.324854850769043
    7. ' ' → logprob: -6.824854850769043
    8. ' >=' → logprob: -7.699854850769043
    9. '<|end|>' → logprob: -7.949854850769043
    10. '>' → logprob: -9.949854850769043

Token 83: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2989954352378845
    2. ' ' → logprob: -1.9239954948425293
    3. '-' → logprob: -2.2989954948425293
    4. ' -' → logprob: -4.423995494842529
    5. '  ' → logprob: -10.423995018005371
    6. '```' → logprob: -11.423995018005371
    7. '   ' → logprob: -11.673995018005371
    8. '    ' → logprob: -12.048995018005371
    9. '99' → logprob: -13.548995018005371
    10. ')' → logprob: -13.673995018005371

Token 84: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.29006296396255493
    2. '-' → logprob: -1.4150629043579102
    3. ' ' → logprob: -4.79006290435791
    4. ' -' → logprob: -7.54006290435791
    5. '```' → logprob: -11.66506290435791
    6. '   ' → logprob: -12.04006290435791
    7. '  ' → logprob: -12.16506290435791
    8. ')' → logprob: -13.54006290435791
    9. '    ' → logprob: -13.54006290435791
    10. '``' → logprob: -13.66506290435791

Token 85: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011792316101491451
    2. ':
' → logprob: -4.511792182922363
    3. '           ' → logprob: -7.636792182922363
    4. '               ' → logprob: -8.511792182922363
    5. '                   ' → logprob: -10.511792182922363
    6. ' or' → logprob: -11.886792182922363
    7. ' :' → logprob: -12.011792182922363
    8. '   ' → logprob: -12.386792182922363
    9. '.' → logprob: -12.761792182922363
    10. '):' → logprob: -13.136792182922363

Token 86: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003407635958865285
    2. '               ' → logprob: -5.8784074783325195
    3. '           ' → logprob: -8.62840747833252
    4. '   ' → logprob: -9.00340747833252
    5. '                       ' → logprob: -9.00340747833252
    6. '                    
' → logprob: -10.00340747833252
    7. '       ' → logprob: -11.25340747833252
    8. ',' → logprob: -11.25340747833252
    9. '<|end|>' → logprob: -11.25340747833252
    10. '                  ' → logprob: -11.37840747833252

Token 87: ' self' (ID: 1051)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.20814764499664307
    2. 'self' (adapté à ' self') → logprob: -2.0831475257873535
    3. ' self' → logprob: -3.3331475257873535
    4. '               ' → logprob: -3.7081475257873535
    5. '                       ' → logprob: -6.7081475257873535
    6. '                    
' → logprob: -7.4581475257873535
    7. '
' → logprob: -8.333148002624512
    8. '	self' → logprob: -8.333148002624512
    9. '           ' → logprob: -8.333148002624512
    10. '                
' → logprob: -8.708148002624512

Token 88: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00021617230959236622
    2. ' .' → logprob: -9.125216484069824
    3. '.' → logprob: -9.250216484069824
    4. '           ' → logprob: -11.875216484069824
    5. '       ' → logprob: -12.875216484069824
    6. '.__' → logprob: -14.500216484069824
    7. ']._' → logprob: -15.625216484069824
    8. '   ' → logprob: -15.875216484069824
    9. 'self' → logprob: -16.000215530395508
    10. '_' → logprob: -16.000215530395508

Token 89: 'terminated' (ID: 161801)
  Prédit: 'terminated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'terminated' → logprob: -6.704273118884885e-07
    2. ' terminated' → logprob: -15.000000953674316
    3. 'terminate' → logprob: -15.375000953674316
    4. 'termin' → logprob: -17.0
    5. '           ' → logprob: -18.375
    6. '   ' → logprob: -19.125
    7. '_' → logprob: -19.75
    8. 'terminal' → logprob: -19.875
    9. 't' → logprob: -19.875
    10. 'termination' → logprob: -20.125

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029786715283989906
    2. '=' → logprob: -3.5297868251800537
    3. '=True' → logprob: -10.529787063598633
    4. ' ' → logprob: -12.029787063598633
    5. '           ' → logprob: -13.654787063598633
    6. 's' → logprob: -14.904787063598633
    7. '       ' → logprob: -15.029787063598633
    8. '        ' → logprob: -15.404787063598633
    9. ' =
' → logprob: -15.529787063598633
    10. '               ' → logprob: -15.529787063598633

Token 91: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.01814994215965271
    2. ' True' → logprob: -4.0181498527526855
    3. 'Tr' → logprob: -17.643150329589844
    4. '=True' → logprob: -18.518150329589844
    5. '(True' → logprob: -18.643150329589844
    6. '   ' → logprob: -19.268150329589844
    7. ' ' → logprob: -19.393150329589844
    8. 'T' → logprob: -19.393150329589844
    9. '.True' → logprob: -20.268150329589844
    10. ' Tru' → logprob: -21.018150329589844

Token 92: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012135441415011883
    2. '                   ' → logprob: -4.6371355056762695
    3. '                
' → logprob: -6.6371355056762695
    4. '                    
' → logprob: -8.01213550567627
    5. '           ' → logprob: -8.13713550567627
    6. '    
' → logprob: -9.38713550567627
    7. 'else' → logprob: -9.76213550567627
    8. ' else' → logprob: -10.13713550567627
    9. '       ' → logprob: -10.51213550567627
    10. '```' → logprob: -10.51213550567627

Token 93: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00949870329350233
    2. '                   ' → logprob: -4.759498596191406
    3. '                
' → logprob: -8.259498596191406
    4. '           ' → logprob: -8.759498596191406
    5. '                    
' → logprob: -8.884498596191406
    6. '```' → logprob: -9.259498596191406
    7. '
' → logprob: -10.009498596191406
    8. 'else' → logprob: -10.384498596191406
    9. '    
' → logprob: -10.384498596191406
    10. ' else' → logprob: -10.509498596191406

Token 94: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4439406991004944
    2. ' break' → logprob: -1.6939406394958496
    3. 'break' (adapté à ' break') → logprob: -2.0689406394958496
    4. '               ' → logprob: -3.0689406394958496
    5. 'return' → logprob: -7.19394063949585
    6. '           ' → logprob: -7.44394063949585
    7. ' return' → logprob: -8.818941116333008
    8. 'continue' → logprob: -9.443941116333008
    9. '	break' → logprob: -9.568941116333008
    10. '                       ' → logprob: -9.818941116333008

Token 95: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003250438952818513
    2. '                
' → logprob: -5.878250598907471
    3. '
' → logprob: -8.503250122070312
    4. '           ' → logprob: -10.253250122070312
    5. '    
' → logprob: -10.628250122070312
    6. '                ' → logprob: -10.628250122070312
    7. '                    
' → logprob: -10.628250122070312
    8. '```' → logprob: -10.878250122070312
    9. '<|end|>' → logprob: -11.003250122070312
    10. '			' → logprob: -11.378250122070312

Token 96: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0023635171819478273
    2. '                
' → logprob: -6.127363681793213
    3. '
' → logprob: -9.502363204956055
    4. '```' → logprob: -10.502363204956055
    5. '                    
' → logprob: -11.252363204956055
    6. '    
' → logprob: -11.502363204956055
    7. '           ' → logprob: -11.627363204956055
    8. '  
' → logprob: -12.002363204956055
    9. '                ' → logprob: -12.127363204956055
    10. '              ' → logprob: -12.377363204956055

Token 97: ' self' (ID: 1051)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006085803732275963
    2. 'self' (adapté à ' self') → logprob: -5.1310858726501465
    3. '           ' → logprob: -9.381085395812988
    4. ' self' → logprob: -10.006085395812988
    5. 'else' → logprob: -12.006085395812988
    6. '                
' → logprob: -12.131085395812988
    7. '```' → logprob: -12.256085395812988
    8. '                   ' → logprob: -13.256085395812988
    9. '   ' → logprob: -13.381085395812988
    10. '              ' → logprob: -13.756085395812988

Token 98: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -4.60414821645827e-06
    2. '.' → logprob: -13.250004768371582
    3. ' .' → logprob: -14.000004768371582
    4. '           ' → logprob: -14.250004768371582
    5. ')._' → logprob: -14.625004768371582
    6. ']._' → logprob: -14.750004768371582
    7. '       ' → logprob: -15.375004768371582
    8. '               ' → logprob: -15.750004768371582
    9. '.__' → logprob: -17.125003814697266
    10. '._
' → logprob: -17.375003814697266

Token 99: 'inputs' (ID: 54250)
  Prédit: 'inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -0.0010921158827841282
    2. '_inputs' → logprob: -6.876091957092285
    3. ' inputs' → logprob: -10.501091957092285
    4. '.inputs' → logprob: -11.501091957092285
    5. '           ' → logprob: -12.001091957092285
    6. '(inputs' → logprob: -12.251091957092285
    7. '               ' → logprob: -12.751091957092285
    8. '_' → logprob: -13.376091957092285
    9. 'puts' → logprob: -13.751091957092285
    10. '       ' → logprob: -13.876091957092285

Token 100: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001446611131541431
    2. '.' → logprob: -9.000144958496094
    3. '.app' → logprob: -11.500144958496094
    4. '.ap' → logprob: -12.250144958496094
    5. ' .' → logprob: -12.500144958496094
    6. '.extend' → logprob: -13.250144958496094
    7. '.add' → logprob: -14.750144958496094
    8. 'append' → logprob: -16.125144958496094
    9. '.setdefault' → logprob: -16.250144958496094
    10. '.py' → logprob: -16.250144958496094

Token 101: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00020354038861114532
    2. '(' → logprob: -8.500203132629395
    3. '(
' → logprob: -17.62520408630371
    4. 'n' → logprob: -17.75020408630371
    5. ' (' → logprob: -17.87520408630371
    6. '((' → logprob: -18.37520408630371
    7. '(s' → logprob: -20.75020408630371
    8. ' n' → logprob: -20.87520408630371
    9. '(num' → logprob: -21.00020408630371
    10. '(i' → logprob: -21.62520408630371

Token 102: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.133198283147067e-05
    2. ')
' → logprob: -10.125051498413086
    3. ' )' → logprob: -12.000051498413086
    4. '               ' → logprob: -12.500051498413086
    5. '           ' → logprob: -15.000051498413086
    6. ')return' → logprob: -15.250051498413086
    7. '<|end|>' → logprob: -15.875051498413086
    8. ')n' → logprob: -16.375051498413086
    9. ')
' → logprob: -16.375051498413086
    10. '))' → logprob: -17.250051498413086

Token 103: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.40998875699006e-05
    2. '
' → logprob: -10.87507438659668
    3. '                
' → logprob: -11.00007438659668
    4. '           ' → logprob: -11.37507438659668
    5. '<|end|>' → logprob: -11.75007438659668
    6. '			' → logprob: -12.75007438659668
    7. '       ' → logprob: -12.75007438659668
    8. '              ' → logprob: -12.87507438659668
    9. '```' → logprob: -13.12507438659668
    10. '                   ' → logprob: -13.37507438659668

Token 104: ' count' (ID: 3605)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04489634558558464
    2. ' count' → logprob: -3.794896364212036
    3. 'count' (adapté à ' count') → logprob: -3.919896364212036
    4. '			' → logprob: -7.044896125793457
    5. '	count' → logprob: -8.419896125793457
    6. '   ' → logprob: -9.294896125793457
    7. ' ' → logprob: -9.419896125793457
    8. '                   ' → logprob: -9.669896125793457
    9. '           ' → logprob: -9.794896125793457
    10. '		       ' → logprob: -10.294896125793457

Token 105: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0015284325927495956
    2. '+=' → logprob: -6.501528263092041
    3. '+' → logprob: -11.0015287399292
    4. ' +' → logprob: -12.1265287399292
    5. ' ' → logprob: -12.5015287399292
    6. '<|end|>' → logprob: -16.126527786254883
    7. ']+=' → logprob: -16.626527786254883
    8. ' ' → logprob: -17.126527786254883
    9. '+="' → logprob: -17.751527786254883
    10. '+='' → logprob: -17.876527786254883

Token 106: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10020667314529419
    2. ' ' → logprob: -2.3502066135406494
    3. ' ' → logprob: -18.35020637512207
    4. '۱' → logprob: -19.60020637512207
    5. '   ' → logprob: -19.85020637512207
    6. '１' → logprob: -19.97520637512207
    7. '    ' → logprob: -20.22520637512207
    8. '```' → logprob: -20.35020637512207
    9. '<|end|>' → logprob: -21.47520637512207
    10. '  ' → logprob: -21.78770637512207

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '```' → logprob: -19.50001335144043
    4. '   ' → logprob: -19.75001335144043
    5. '۱' → logprob: -20.43751335144043
    6. '１' → logprob: -20.62501335144043
    7. '  ' → logprob: -20.93751335144043
    8. '`' → logprob: -21.37501335144043
    9. ' ' → logprob: -21.93751335144043
    10. '١' → logprob: -22.12501335144043

Token 108: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4735717177391052
    2. '<|end|>' → logprob: -1.09857177734375
    3. '       ' → logprob: -3.34857177734375
    4. '<|end|>' → logprob: -5.47357177734375
    5. '\n' → logprob: -6.47357177734375
    6. '```' → logprob: -6.84857177734375
    7. '   ' → logprob: -7.47357177734375
    8. '    
' → logprob: -8.47357177734375
    9. '


' → logprob: -8.72357177734375
    10. '           ' → logprob: -8.72357177734375

Token 109: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.07954517006874084
    2. 'self' → logprob: -2.579545259475708
    3. ' None' → logprob: -7.579545021057129
    4. 'None' → logprob: -9.704545021057129
    5. ' ' → logprob: -10.079545021057129
    6. '<|end|>' → logprob: -11.704545021057129
    7. ' 
' → logprob: -12.079545021057129
    8. ' ' → logprob: -12.329545021057129
    9. ' len' → logprob: -12.454545021057129
    10. '[self' → logprob: -12.579545021057129

Token 112: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.2530403137207031
    2. '       ' → logprob: -1.8780403137207031
    3. '   ' → logprob: -3.253040313720703
    4. '_' → logprob: -4.253040313720703
    5. '.' → logprob: -5.003040313720703
    6. '_inputs' → logprob: -6.253040313720703
    7. '
' → logprob: -6.878040313720703
    8. ' _' → logprob: -6.878040313720703
    9. '        ' → logprob: -7.128040313720703
    10. '    ' → logprob: -7.128040313720703

Token 113: 'inputs' (ID: 54250)
  Prédit: 'inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -3.128163257315464e-07
    2. ' inputs' → logprob: -15.75
    3. '_inputs' → logprob: -16.5
    4. '(inputs' → logprob: -16.875
    5. 'outputs' → logprob: -17.5
    6. '.inputs' → logprob: -18.875
    7. 'input' → logprob: -21.125
    8. 'ints' → logprob: -22.25
    9. 'Inputs' → logprob: -23.125
    10. 'terminated' → logprob: -23.25

Token 114: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15967687964439392
    2. '
' → logprob: -2.4096767902374268
    3. '    
' → logprob: -3.2846767902374268
    4. 'def' → logprob: -4.534677028656006
    5. ' 
' → logprob: -5.784677028656006
    6. '<|end|>' → logprob: -6.159677028656006
    7. '       ' → logprob: -7.034677028656006
    8. '        
' → logprob: -7.159677028656006
    9. ' ' → logprob: -7.284677028656006
    10. '    ' → logprob: -7.784677028656006

Token 117: ' Tra' (ID: 12393)
  Prédit: ' Factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Factor' → logprob: -0.6631598472595215
    2. ' Calculator' → logprob: -1.0381598472595215
    3. ' Solution' → logprob: -3.9131598472595215
    4. ' Zero' → logprob: -3.9131598472595215
    5. ' Counter' → logprob: -4.0381598472595215
    6. ' Processor' → logprob: -4.1631598472595215
    7. ' Comput' → logprob: -4.4131598472595215
    8. ' Logic' → logprob: -4.7881598472595215
    9. ' Calculation' → logprob: -4.7881598472595215
    10. ' Solver' → logprob: -5.0381598472595215

Token 118: 'iling' (ID: 10741)
  Prédit: 'iling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iling' → logprob: -0.0013995219487696886
    2. 'il' → logprob: -7.001399517059326
    3. '   ' → logprob: -8.626399993896484
    4. 'illing' → logprob: -9.376399993896484
    5. 'ling' → logprob: -9.626399993896484
    6. 'iler' → logprob: -9.876399993896484
    7. 'ilor' → logprob: -11.001399993896484
    8. '    ' → logprob: -11.126399993896484
    9. '  ' → logprob: -11.501399993896484
    10. 'i' → logprob: -11.501399993896484

Token 119: 'Zero' (ID: 20870)
  Prédit: 'Zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Zero' → logprob: -0.01818517968058586
    2. 'Zeros' → logprob: -4.018185138702393
    3. 'Z' → logprob: -10.51818561553955
    4. ' zeros' → logprob: -12.76818561553955
    5. ' Zero' → logprob: -13.14318561553955
    6. '_' → logprob: -13.39318561553955
    7. 'Ze' → logprob: -14.64318561553955
    8. '_Z' → logprob: -15.14318561553955
    9. 'ゼ' → logprob: -15.51818561553955
    10. 'zeros' → logprob: -15.64318561553955

Token 120: 'Calculator' (ID: 50159)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.002005483955144882
    2. 'Calculator' → logprob: -6.252005577087402
    3. 's' → logprob: -9.627005577087402
    4. '   ' → logprob: -12.502005577087402
    5. 'es' → logprob: -13.252005577087402
    6. '_counter' → logprob: -13.627005577087402
    7. 'Count' → logprob: -13.752005577087402
    8. 'C' → logprob: -14.377005577087402
    9. ' Counter' → logprob: -14.627005577087402
    10. 'ounter' → logprob: -15.002005577087402

Token 121: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001933277933858335
    2. ':
' → logprob: -6.2519330978393555
    3. '   ' → logprob: -13.501933097839355
    4. ' :' → logprob: -13.751933097839355
    5. ':

' → logprob: -14.626933097839355
    6. ':def' → logprob: -14.626933097839355
    7. '(' → logprob: -14.876933097839355
    8. '(object' → logprob: -15.126933097839355
    9. '):' → logprob: -15.501933097839355
    10. ':
' → logprob: -16.251934051513672

Token 122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0046210684813559055
    2. '   ' → logprob: -5.8796210289001465
    3. '    
' → logprob: -7.7546210289001465
    4. ':' → logprob: -7.8796210289001465
    5. ' def' → logprob: -8.129621505737305
    6. ':
' → logprob: -8.254621505737305
    7. 'def' → logprob: -9.004621505737305
    8. '        
' → logprob: -9.504621505737305
    9. '
' → logprob: -9.879621505737305
    10. '    ' → logprob: -10.004621505737305

Token 123: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.6989522576332092
    2. ' def' → logprob: -1.3239521980285645
    3. '   ' → logprob: -1.6989521980285645
    4. ' @' → logprob: -3.5739521980285645
    5. '@' → logprob: -3.6989521980285645
    6. ' ' → logprob: -7.4489521980285645
    7. '       ' → logprob: -7.6989521980285645
    8. '    ' → logprob: -10.073952674865723
    9. '  ' → logprob: -10.198952674865723
    10. '	def' → logprob: -11.323952674865723

Token 124: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.12779061496257782
    2. ' calculate' → logprob: -2.877790689468384
    3. ' count' → logprob: -3.502790689468384
    4. 'count' → logprob: -4.877790451049805
    5. 'def' → logprob: -5.127790451049805
    6. ' __' → logprob: -5.502790451049805
    7. 'calculate' → logprob: -5.502790451049805
    8. ' ' → logprob: -5.627790451049805
    9. ' factorial' → logprob: -5.627790451049805
    10. ' compute' → logprob: -6.627790451049805

Token 125: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.009348961524665356
    2. 'nit' → logprob: -5.0093488693237305
    3. 'def' → logprob: -6.8843488693237305
    4. ' init' → logprob: -7.6343488693237305
    5. 'nt' → logprob: -8.25934886932373
    6. '   ' → logprob: -8.63434886932373
    7. 'int' → logprob: -9.13434886932373
    8. ' def' → logprob: -9.38434886932373
    9. '  ' → logprob: -9.50934886932373
    10. '_init' → logprob: -9.88434886932373

Token 126: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006872490979731083
    2. ' (' → logprob: -5.256872653961182
    3. '__(' → logprob: -6.881872653961182
    4. '(' → logprob: -7.756872653961182
    5. ')(' → logprob: -9.506872177124023
    6. 'self' → logprob: -10.381872177124023
    7. ')' → logprob: -11.506872177124023
    8. ' ' → logprob: -11.631872177124023
    9. ' self' → logprob: -11.631872177124023
    10. '   ' → logprob: -11.756872177124023

Token 127: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005007578991353512
    2. ' self' → logprob: -5.880007743835449
    3. ')' → logprob: -6.130007743835449
    4. '):
' → logprob: -11.88000774383545
    5. ' )' → logprob: -12.00500774383545
    6. ' ' → logprob: -12.88000774383545
    7. '   ' → logprob: -13.75500774383545
    8. '),' → logprob: -13.75500774383545
    9. '	self' → logprob: -13.75500774383545
    10. '):' → logprob: -13.88000774383545

Token 128: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10927847027778625
    2. ' ):' → logprob: -2.984278440475464
    3. ',' → logprob: -3.734278440475464
    4. 'self' → logprob: -3.984278440475464
    5. '):
' → logprob: -4.859278678894043
    6. '   ' → logprob: -7.234278678894043
    7. ' self' → logprob: -7.609278678894043
    8. ' ,' → logprob: -7.984278678894043
    9. ' )' → logprob: -8.234278678894043
    10. ' ):
' → logprob: -8.484278678894043

Token 129: ' base' (ID: 3611)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5215514898300171
    2. ' n' → logprob: -1.146551489830017
    3. 'self' → logprob: -3.6465516090393066
    4. ')' → logprob: -4.021551609039307
    5. ' self' → logprob: -4.521551609039307
    6. ' )' → logprob: -5.521551609039307
    7. ' inputs' → logprob: -5.521551609039307
    8. 'number' → logprob: -5.646551609039307
    9. ' numbers' → logprob: -5.646551609039307
    10. 'inputs' → logprob: -5.896551609039307

Token 130: '_factor' (ID: 43757)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1967397928237915
    2. ' ):' → logprob: -2.196739673614502
    3. '=' → logprob: -2.821739673614502
    4. ',' → logprob: -5.321739673614502
    5. '):
' → logprob: -6.696739673614502
    6. ':' → logprob: -7.946739673614502
    7. ' ,' → logprob: -8.07174015045166
    8. '   ' → logprob: -8.19674015045166
    9. ' =' → logprob: -8.32174015045166
    10. ')' → logprob: -8.57174015045166

Token 131: '=' (ID: 28)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9533775448799133
    2. '=' → logprob: -1.3283774852752686
    3. '):' → logprob: -1.3283774852752686
    4. ')' → logprob: -2.5783774852752686
    5. '):
' → logprob: -6.578377723693848
    6. ',' → logprob: -6.828377723693848
    7. 'ization' → logprob: -6.953377723693848
    8. ')=' → logprob: -6.953377723693848
    9. '=None' → logprob: -7.328377723693848
    10. '_' → logprob: -7.453377723693848

Token 132: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.008656646125018597
    2. ' ' → logprob: -5.0086565017700195
    3. '2' → logprob: -7.0086565017700195
    4. '10' → logprob: -7.2586565017700195
    5. ')' → logprob: -8.38365650177002
    6. '```' → logprob: -10.75865650177002
    7. '1' → logprob: -11.25865650177002
    8. ' )' → logprob: -11.50865650177002
    9. '   ' → logprob: -11.50865650177002
    10. '0' → logprob: -11.75865650177002

Token 133: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000953502138145268
    2. '):
' → logprob: -7.250953674316406
    3. ')' → logprob: -8.875953674316406
    4. ' ):' → logprob: -9.375953674316406
    5. '):
' → logprob: -11.875953674316406
    6. ',' → logprob: -12.250953674316406
    7. '       ' → logprob: -12.500953674316406
    8. '   ' → logprob: -13.500953674316406
    9. ' ' → logprob: -14.375953674316406
    10. '           ' → logprob: -14.625953674316406

Token 134: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6372610926628113
    2. '       ' → logprob: -1.012261152267456
    3. '        ' → logprob: -3.262261152267456
    4. ':' → logprob: -3.262261152267456
    5. ' ' → logprob: -4.512260913848877
    6. ' :' → logprob: -4.887260913848877
    7. '<|end|>' → logprob: -5.887260913848877
    8. '            ' → logprob: -6.012260913848877
    9. '   ' → logprob: -6.262260913848877
    10. '    ' → logprob: -7.012260913848877

Token 135: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.47636091709136963
    2. 'self' (adapté à ' self') → logprob: -0.9763609170913696
    3. '           ' → logprob: -7.35136079788208
    4. '       ' → logprob: -7.72636079788208
    5. ' base' → logprob: -7.97636079788208
    6. 'base' → logprob: -8.101361274719238
    7. '               ' → logprob: -8.351361274719238
    8. '        ' → logprob: -9.601361274719238
    9. '   ' → logprob: -9.726361274719238
    10. '            ' → logprob: -9.976361274719238

Token 136: '.base' (ID: 15523)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.40078285336494446
    2. '.base' → logprob: -1.650782823562622
    3. '._' → logprob: -2.025782823562622
    4. ' .' → logprob: -5.275783061981201
    5. ' ' → logprob: -6.900783061981201
    6. '_base' → logprob: -9.400782585144043
    7. ' base' → logprob: -9.650782585144043
    8. 'base' → logprob: -10.150782585144043
    9. '_' → logprob: -10.775782585144043
    10. '.bas' → logprob: -11.150782585144043

Token 137: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.00022558939235750586
    2. ' _' → logprob: -9.375226020812988
    3. '_f' → logprob: -9.875226020812988
    4. '_' → logprob: -10.125226020812988
    5. '_fac' → logprob: -11.125226020812988
    6. ')_' → logprob: -11.500226020812988
    7. '_fact' → logprob: -12.250226020812988
    8. '##_' → logprob: -12.500226020812988
    9. '._' → logprob: -13.125226020812988
    10. ')' → logprob: -13.375226020812988

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12697987258434296
    2. '=' → logprob: -2.1269798278808594
    3. ' ' → logprob: -10.00197982788086
    4. '_' → logprob: -13.37697982788086
    5. ' =
' → logprob: -13.37697982788086
    6. ' *=' → logprob: -13.87697982788086
    7. ' ==' → logprob: -14.37697982788086
    8. ')' → logprob: -14.50197982788086
    9. '    ' → logprob: -15.37697982788086
    10. ' +=' → logprob: -15.50197982788086

Token 139: ' base' (ID: 3611)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22548969089984894
    2. '5' → logprob: -1.6004897356033325
    3. ' base' → logprob: -9.725489616394043
    4. 'base' → logprob: -11.100489616394043
    5. ' ' → logprob: -14.412989616394043
    6. ' 
' → logprob: -15.287989616394043
    7. '    ' → logprob: -15.475489616394043
    8. '1' → logprob: -15.975489616394043
    9. '   ' → logprob: -15.975489616394043
    10. '  ' → logprob: -16.16299057006836

Token 140: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.00016909420082811266
    2. '_' → logprob: -9.625168800354004
    3. ' _' → logprob: -10.000168800354004
    4. '   ' → logprob: -11.250168800354004
    5. 'factor' → logprob: -11.625168800354004
    6. ' ' → logprob: -11.750168800354004
    7. '5' → logprob: -12.000168800354004
    8. '       ' → logprob: -12.250168800354004
    9. '_value' → logprob: -13.375168800354004
    10. '_token' → logprob: -13.375168800354004

Token 141: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004990743473172188
    2. '       ' → logprob: -5.504990577697754
    3. '    
' → logprob: -7.879990577697754
    4. '   ' → logprob: -8.254990577697754
    5. '        
' → logprob: -8.629990577697754
    6. 'def' → logprob: -10.254990577697754
    7. '

' → logprob: -10.879990577697754
    8. '
' → logprob: -11.254990577697754
    9. '<|end|>' → logprob: -11.254990577697754
    10. '<|end|>' → logprob: -12.629990577697754

Token 142: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.036414239555597305
    2. '       ' → logprob: -3.66141414642334
    3. '    
' → logprob: -5.16141414642334
    4. '   ' → logprob: -6.03641414642334
    5. '        
' → logprob: -6.78641414642334
    6. 'def' → logprob: -8.03641414642334
    7. '<|end|>' → logprob: -8.53641414642334
    8. ' 
' → logprob: -9.28641414642334
    9. '  
' → logprob: -9.78641414642334
    10. '
' → logprob: -10.28641414642334

Token 143: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0004653465002775192
    2. '   ' → logprob: -7.750465393066406
    3. ' def' → logprob: -10.750465393066406
    4. '       ' → logprob: -11.250465393066406
    5. '
' → logprob: -17.125465393066406
    6. '	def' → logprob: -17.375465393066406
    7. ' ' → logprob: -17.500465393066406
    8. '    
' → logprob: -17.500465393066406
    9. '  ' → logprob: -18.125465393066406
    10. '        
' → logprob: -18.250465393066406

Token 144: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2546960115432739
    2. ' count' → logprob: -1.504696011543274
    3. 'calculate' → logprob: -6.129695892333984
    4. ' calculate' → logprob: -7.629695892333984
    5. ' trailing' → logprob: -11.004695892333984
    6. ' ' → logprob: -11.129695892333984
    7. 'compute' → logprob: -11.129695892333984
    8. '_count' → logprob: -11.629695892333984
    9. ' compute' → logprob: -11.629695892333984
    10. '  ' → logprob: -12.004695892333984

Token 145: '_tr' (ID: 7410)
  Prédit: '_tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tr' → logprob: -0.596972644329071
    2. '_' → logprob: -0.971972644329071
    3. '_factor' → logprob: -2.721972703933716
    4. '_f' → logprob: -5.346972465515137
    5. '_zero' → logprob: -8.721972465515137
    6. ' _' → logprob: -9.096972465515137
    7. '_s' → logprob: -9.846972465515137
    8. '_fact' → logprob: -10.221972465515137
    9. '_self' → logprob: -10.346972465515137
    10. '(self' → logprob: -10.721972465515137

Token 146: 'ailing' (ID: 24408)
  Prédit: 'ailing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ailing' → logprob: -0.0019253022037446499
    2. 'ail' → logprob: -6.751925468444824
    3. 'a' → logprob: -7.626925468444824
    4. '_' → logprob: -9.376925468444824
    5. '_a' → logprob: -10.376925468444824
    6. '   ' → logprob: -10.501925468444824
    7. '```' → logprob: -10.626925468444824
    8. ' a' → logprob: -10.626925468444824
    9. 'aling' → logprob: -11.376925468444824
    10. '
' → logprob: -11.626925468444824

Token 147: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.003192447591573
    2. '_zero' → logprob: -5.75319242477417
    3. 'zeros' → logprob: -11.253192901611328
    4. ' _' → logprob: -14.628192901611328
    5. ' zeros' → logprob: -14.753192901611328
    6. '_factor' → logprob: -15.503192901611328
    7. 'zero' → logprob: -15.878192901611328
    8. 'Zeros' → logprob: -16.003192901611328
    9. '_spaces' → logprob: -16.503192901611328
    10. '_s' → logprob: -16.753192901611328

Token 148: 'zeros' (ID: 24095)
  Prédit: 'zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zeros' → logprob: -0.004085997585207224
    2. 'zero' → logprob: -5.504086017608643
    3. ' zeros' → logprob: -12.754085540771484
    4. '_' → logprob: -13.004085540771484
    5. 'zer' → logprob: -13.879085540771484
    6. 'Zeros' → logprob: -14.379085540771484
    7. '_zero' → logprob: -14.754085540771484
    8. 'z' → logprob: -15.004085540771484
    9. '0' → logprob: -16.129085540771484
    10. 'factor' → logprob: -16.754085540771484

Token 149: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.049188122153282166
    2. '(' → logprob: -3.0491881370544434
    3. ' (' → logprob: -7.424188137054443
    4. 'self' → logprob: -13.924187660217285
    5. '   ' → logprob: -14.174187660217285
    6. '(
' → logprob: -14.299187660217285
    7. '(s' → logprob: -14.549187660217285
    8. '(Self' → logprob: -14.799187660217285
    9. ' self' → logprob: -15.549187660217285
    10. ' ' → logprob: -16.0491886138916

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048753030598163605
    2. ' ,' → logprob: -3.048753023147583
    3. ',n' → logprob: -8.798752784729004
    4. 'self' → logprob: -11.548752784729004
    5. 'n' → logprob: -13.298752784729004
    6. '       ' → logprob: -14.298752784729004
    7. 's' → logprob: -14.423752784729004
    8. '   ' → logprob: -14.548752784729004
    9. ',self' → logprob: -14.798752784729004
    10. ',num' → logprob: -15.048752784729004

Token 151: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3110973536968231
    2. 'n' → logprob: -1.4360973834991455
    3. ' self' → logprob: -3.9360973834991455
    4. 'self' → logprob: -4.686097145080566
    5. ' number' → logprob: -8.311097145080566
    6. '   ' → logprob: -9.186097145080566
    7. ' factorial' → logprob: -9.186097145080566
    8. 'number' → logprob: -9.311097145080566
    9. '       ' → logprob: -9.811097145080566
    10. 'num' → logprob: -10.561097145080566

Token 152: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008934690617024899
    2. '):
' → logprob: -4.758934497833252
    3. ' ):' → logprob: -8.63393497467041
    4. ')' → logprob: -9.25893497467041
    5. '):
' → logprob: -10.75893497467041
    6. '   ' → logprob: -10.88393497467041
    7. ':' → logprob: -12.63393497467041
    8. '       ' → logprob: -13.63393497467041
    9. ' ):
' → logprob: -13.63393497467041
    10. '):

' → logprob: -14.75893497467041

Token 153: ' int' (ID: 677)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.21322786808013916
    2. ')' → logprob: -2.5882277488708496
    3. ' ):' → logprob: -2.8382277488708496
    4. 'int' → logprob: -3.8382277488708496
    5. ' int' → logprob: -3.9632277488708496
    6. '):' → logprob: -4.96322774887085
    7. ' ):
' → logprob: -5.33822774887085
    8. ' ' → logprob: -5.71322774887085
    9. '):
' → logprob: -6.71322774887085
    10. ' n' → logprob: -7.33822774887085

Token 154: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14694595336914062
    2. ')' → logprob: -2.1469459533691406
    3. '):
' → logprob: -4.021945953369141
    4. ' ):' → logprob: -6.521945953369141
    5. ' )' → logprob: -8.39694595336914
    6. '   ' → logprob: -9.14694595336914
    7. '):
' → logprob: -10.02194595336914
    8. ' ):
' → logprob: -10.39694595336914
    9. ')->' → logprob: -11.52194595336914
    10. '       ' → logprob: -11.77194595336914

Token 155: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014945034636184573
    2. ':
' → logprob: -7.001494407653809
    3. '):' → logprob: -7.876494407653809
    4. ' :' → logprob: -9.001494407653809
    5. ' ->' → logprob: -10.126494407653809
    6. '->' → logprob: -11.001494407653809
    7. ')' → logprob: -11.876494407653809
    8. '       ' → logprob: -12.376494407653809
    9. ':return' → logprob: -12.751494407653809
    10. ':
' → logprob: -13.376494407653809

Token 156: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.061967797577381134
    2. 'int' → logprob: -2.8119678497314453
    3. ' ' → logprob: -15.936967849731445
    4. '	int' → logprob: -17.811967849731445
    5. '(int' → logprob: -18.186967849731445
    6. '   ' → logprob: -18.936967849731445
    7. ':int' → logprob: -19.186967849731445
    8. ' 
' → logprob: -19.436967849731445
    9. '[int' → logprob: -19.561967849731445
    10. ' ' → logprob: -19.561967849731445

Token 157: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020397489424794912
    2. ':
' → logprob: -6.752039909362793
    3. '):' → logprob: -7.127039909362793
    4. ' :' → logprob: -10.877039909362793
    5. '       ' → logprob: -11.377039909362793
    6. '):
' → logprob: -11.627039909362793
    7. '           ' → logprob: -11.877039909362793
    8. '():' → logprob: -12.127039909362793
    9. ',' → logprob: -12.377039909362793
    10. ':**' → logprob: -13.002039909362793

Token 158: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31082281470298767
    2. '       ' → logprob: -1.43582284450531
    3. '        ' → logprob: -4.6858229637146
    4. ' ' → logprob: -5.1858229637146
    5. '0' → logprob: -5.6858229637146
    6. '    
' → logprob: -6.1858229637146
    7. '        
' → logprob: -6.3108229637146
    8. '   ' → logprob: -6.4358229637146
    9. ' 
' → logprob: -6.8108229637146
    10. '            ' → logprob: -7.3108229637146

Token 159: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.23266303539276123
    2. ' count' → logprob: -1.7326630353927612
    3. '           ' → logprob: -3.732663154602051
    4. 'result' → logprob: -5.732663154602051
    5. ' result' → logprob: -6.982663154602051
    6. '   ' → logprob: -7.482663154602051
    7. ' zeros' → logprob: -7.482663154602051
    8. 'total' → logprob: -7.607663154602051
    9. 'zeros' → logprob: -7.607663154602051
    10. '       ' → logprob: -8.10766315460205

Token 160: ' Count' (ID: 6789)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.12331073731184006
    2. ' count' → logprob: -2.3733108043670654
    3. 'zeros' → logprob: -4.873310565948486
    4. 'result' → logprob: -5.123310565948486
    5. '           ' → logprob: -5.748310565948486
    6. ' zeros' → logprob: -6.123310565948486
    7. ' result' → logprob: -6.748310565948486
    8. '       ' → logprob: -7.123310565948486
    9. '   ' → logprob: -7.498310565948486
    10. 'zero' → logprob: -7.748310565948486

Token 161: ' the' (ID: 290)
  Prédit: ' zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' zeros' → logprob: -0.23789890110492706
    2. 'zeros' → logprob: -2.487898826599121
    3. ' result' → logprob: -3.362898826599121
    4. 'result' → logprob: -3.362898826599121
    5. ' trailing' → logprob: -3.862898826599121
    6. '           ' → logprob: -3.987898826599121
    7. ' ' → logprob: -5.112898826599121
    8. '_' → logprob: -5.112898826599121
    9. '            ' → logprob: -7.112898826599121
    10. '   ' → logprob: -7.237898826599121

Token 162: ' number' (ID: 2086)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7731306552886963
    2. 'zeros' → logprob: -0.7731306552886963
    3. ' zeros' → logprob: -2.8981306552886963
    4. ' count' → logprob: -4.398130416870117
    5. 'result' → logprob: -5.773130416870117
    6. '   ' → logprob: -6.148130416870117
    7. 'zero' → logprob: -6.273130416870117
    8. 'total' → logprob: -7.148130416870117
    9. 'tr' → logprob: -7.398130416870117
    10. 'res' → logprob: -8.773130416870117

Token 163: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.22446952760219574
    2. 'of' → logprob: -2.4744694232940674
    3. '_' → logprob: -2.9744694232940674
    4. ' ' → logprob: -3.0994694232940674
    5. '_of' → logprob: -5.0994696617126465
    6. '  ' → logprob: -5.5994696617126465
    7. '        ' → logprob: -5.9744696617126465
    8. '    ' → logprob: -6.3494696617126465
    9. '       ' → logprob: -6.3494696617126465
    10. '   ' → logprob: -6.8494696617126465

Token 164: ' times' (ID: 4238)
  Prédit: ' zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zeros' → logprob: -1.122620940208435
    2. ' n' → logprob: -1.622620940208435
    3. 'zeros' → logprob: -1.997620940208435
    4. 'f' → logprob: -2.1226210594177246
    5. ' factors' → logprob: -2.6226210594177246
    6. 'n' → logprob: -3.1226210594177246
    7. ' times' → logprob: -3.7476210594177246
    8. 'times' → logprob: -3.8726210594177246
    9. ' f' → logprob: -3.9976210594177246
    10. ' trailing' → logprob: -4.247621059417725

Token 165: ' base' (ID: 3611)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5451397895812988
    2. ' n' → logprob: -1.4201397895812988
    3. '           ' → logprob: -1.7951397895812988
    4. 'factor' → logprob: -5.545139789581299
    5. '5' → logprob: -5.795139789581299
    6. 'div' → logprob: -6.670139789581299
    7. ' that' → logprob: -6.920139789581299
    8. '       ' → logprob: -8.04513931274414
    9. '   ' → logprob: -8.04513931274414
    10. ' ' → logprob: -8.17013931274414

Token 166: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.003481278195977211
    2. '_' → logprob: -6.128481388092041
    3. 'factor' → logprob: -7.628481388092041
    4. '           ' → logprob: -8.128480911254883
    5. '_f' → logprob: -9.378480911254883
    6. '   ' → logprob: -9.503480911254883
    7. ')' → logprob: -9.628480911254883
    8. ' _' → logprob: -9.753480911254883
    9. '       ' → logprob: -10.128480911254883
    10. '```' → logprob: -10.378480911254883

Token 167: ' divides' (ID: 144028)
  Prédit: ' divides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divides' → logprob: -0.11210055649280548
    2. 'div' → logprob: -2.487100601196289
    3. '_div' → logprob: -5.237100601196289
    4. '   ' → logprob: -5.987100601196289
    5. ' can' → logprob: -5.987100601196289
    6. ' ' → logprob: -6.112100601196289
    7. ' is' → logprob: -6.487100601196289
    8. ' appears' → logprob: -6.487100601196289
    9. ' in' → logprob: -6.737100601196289
    10. 'can' → logprob: -7.362100601196289

Token 168: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.14420750737190247
    2. 'n' → logprob: -2.01920747756958
    3. ' the' → logprob: -7.26920747756958
    4. ' into' → logprob: -7.51920747756958
    5. '           ' → logprob: -8.519207954406738
    6. 'the' → logprob: -10.769207954406738
    7. 'into' → logprob: -11.144207954406738
    8. '            ' → logprob: -11.769207954406738
    9. '   ' → logprob: -11.894207954406738
    10. '               ' → logprob: -12.144207954406738

Token 169: '!
' (ID: 4175)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0535338930785656
    2. ',' → logprob: -4.053534030914307
    3. '       ' → logprob: -4.303534030914307
    4. '
' → logprob: -6.053534030914307
    5. '   ' → logprob: -6.053534030914307
    6. '            
' → logprob: -6.178534030914307
    7. ' ' → logprob: -6.303534030914307
    8. '            ' → logprob: -6.428534030914307
    9. '<|end|>' → logprob: -6.678534030914307
    10. '               ' → logprob: -6.678534030914307

Token 170: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004386202432215214
    2. '            
' → logprob: -6.6293864250183105
    3. 'count' → logprob: -6.6293864250183105
    4. '       ' → logprob: -6.8793864250183105
    5. 'result' → logprob: -8.504385948181152
    6. '
' → logprob: -9.629385948181152
    7. '        
' → logprob: -10.004385948181152
    8. '    
' → logprob: -10.004385948181152
    9. 'n' → logprob: -10.254385948181152
    10. ',' → logprob: -10.254385948181152

Token 171: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.31660106778144836
    2. ' count' → logprob: -1.816601037979126
    3. '           ' → logprob: -2.316601037979126
    4. 'total' → logprob: -5.816601276397705
    5. 'result' → logprob: -6.066601276397705
    6. ' zeros' → logprob: -6.566601276397705
    7. ' total' → logprob: -7.066601276397705
    8. 'zeros' → logprob: -7.066601276397705
    9. ' result' → logprob: -7.441601276397705
    10. '       ' → logprob: -7.816601276397705

Token 172: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02077743224799633
    2. '=' → logprob: -3.895777463912964
    3. ' +=' → logprob: -8.395777702331543
    4. ' ' → logprob: -11.895777702331543
    5. '+=' → logprob: -14.520777702331543
    6. '   ' → logprob: -14.895777702331543
    7. '        ' → logprob: -15.145777702331543
    8. '            ' → logprob: -15.145777702331543
    9. '    ' → logprob: -15.145777702331543
    10. ' *=' → logprob: -15.395777702331543

Token 173: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04306153580546379
    2. '0' → logprob: -3.1680614948272705
    3. ' n' → logprob: -9.793061256408691
    4. 'n' → logprob: -12.043061256408691
    5. '  ' → logprob: -15.543061256408691
    6. '1' → logprob: -16.043062210083008
    7. ' ' → logprob: -16.293062210083008
    8. '```' → logprob: -17.168062210083008
    9. '    ' → logprob: -17.230562210083008
    10. ' 
' → logprob: -17.293062210083008

Token 174: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017124245641753078
    2. ' ' → logprob: -6.376712322235107
    3. 'n' → logprob: -11.626712799072266
    4. ' n' → logprob: -14.126712799072266
    5. '   ' → logprob: -15.251712799072266
    6. '=' → logprob: -16.751712799072266
    7. '  ' → logprob: -17.251712799072266
    8. 'int' → logprob: -17.626712799072266
    9. '۰' → logprob: -17.626712799072266
    10. '```' → logprob: -17.939212799072266

Token 175: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.049968503415584564
    2. '
' → logprob: -3.5499684810638428
    3. '            
' → logprob: -5.174968719482422
    4. ' 
' → logprob: -5.674968719482422
    5. ' while' → logprob: -6.174968719482422
    6. ',' → logprob: -6.174968719482422
    7. '<|end|>' → logprob: -6.424968719482422
    8. '    
' → logprob: -6.674968719482422
    9. ',
' → logprob: -7.299968719482422
    10. '       ' → logprob: -7.424968719482422

Token 176: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001858080504462123
    2. '            
' → logprob: -7.126858234405518
    3. 'n' → logprob: -8.37685775756836
    4. '<|end|>' → logprob: -8.87685775756836
    5. '       ' → logprob: -9.12685775756836
    6. ' n' → logprob: -9.37685775756836
    7. '    
' → logprob: -9.37685775756836
    8. ' while' → logprob: -9.50185775756836
    9. '	       ' → logprob: -9.62685775756836
    10. ' 
' → logprob: -10.25185775756836

Token 177: ' divisor' (ID: 100482)
  Prédit: ' divisor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divisor' → logprob: -0.7948764562606812
    2. '           ' → logprob: -1.2948764562606812
    3. 'div' → logprob: -1.5448764562606812
    4. 'factor' → logprob: -3.5448765754699707
    5. 'temp' → logprob: -4.919876575469971
    6. 'i' → logprob: -4.919876575469971
    7. ' i' → logprob: -5.294876575469971
    8. ' factor' → logprob: -5.544876575469971
    9. '   ' → logprob: -6.419876575469971
    10. 'divider' → logprob: -6.544876575469971

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687393069267273
    2. '=' → logprob: -1.1368739604949951
    3. '=self' → logprob: -13.636874198913574
    4. ' ' → logprob: -14.261874198913574
    5. 's' → logprob: -15.011874198913574
    6. ' =
' → logprob: -15.761874198913574
    7. ' *=' → logprob: -15.761874198913574
    8. '=
' → logprob: -16.261873245239258
    9. '	' → logprob: -16.761873245239258
    10. '    ' → logprob: -16.886873245239258

Token 179: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2522408366203308
    2. ' self' → logprob: -1.5022408962249756
    3. '5' → logprob: -8.252241134643555
    4. '           ' → logprob: -10.127241134643555
    5. '	self' → logprob: -12.752241134643555
    6. ' ' → logprob: -12.877241134643555
    7. '(self' → logprob: -13.002241134643555
    8. '=self' → logprob: -14.252241134643555
    9. '            ' → logprob: -14.627241134643555
    10. '   ' → logprob: -14.627241134643555

Token 180: '.base' (ID: 15523)
  Prédit: '.base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.base' → logprob: -8.53050296427682e-05
    2. '.' → logprob: -9.62508487701416
    3. 'base' → logprob: -11.12508487701416
    4. ' .' → logprob: -12.50008487701416
    5. '	base' → logprob: -15.50008487701416
    6. ' base' → logprob: -15.75008487701416
    7. '._' → logprob: -16.750085830688477
    8. '.factor' → logprob: -16.875085830688477
    9. ';base' → logprob: -17.250085830688477
    10. '   ' → logprob: -17.375085830688477

Token 181: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.0005266997031867504
    2. 'factor' → logprob: -8.250526428222656
    3. 'ctor' → logprob: -8.625526428222656
    4. 'tor' → logprob: -9.875526428222656
    5. 'or' → logprob: -11.000526428222656
    6. 'r' → logprob: -12.750526428222656
    7. 'actor' → logprob: -13.500526428222656
    8. '_' → logprob: -13.625526428222656
    9. 'ct' → logprob: -13.625526428222656
    10. '   ' → logprob: -13.625526428222656

Token 182: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02564147114753723
    2. ' 
' → logprob: -4.025641441345215
    3. '           ' → logprob: -5.275641441345215
    4. '            
' → logprob: -7.025641441345215
    5. 'while' → logprob: -7.775641441345215
    6. ' while' → logprob: -8.650641441345215
    7. '    
' → logprob: -8.900641441345215
    8. '       ' → logprob: -9.150641441345215
    9. '  
' → logprob: -9.525641441345215
    10. '
' → logprob: -9.525641441345215

Token 183: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002478985348716378
    2. ' while' → logprob: -6.627479076385498
    3. 'while' → logprob: -6.877479076385498
    4. '       ' → logprob: -10.25247859954834
    5. '            
' → logprob: -10.75247859954834
    6. '<|end|>' → logprob: -10.75247859954834
    7. '
' → logprob: -11.75247859954834
    8. '<|end|>' → logprob: -11.87747859954834
    9. ',' → logprob: -12.12747859954834
    10. '	       ' → logprob: -12.12747859954834

Token 184: ' while' (ID: 2049)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7443227171897888
    2. ' while' → logprob: -1.1193227767944336
    3. 'while' (adapté à ' while') → logprob: -1.6193227767944336
    4. '       ' → logprob: -8.619322776794434
    5. '            
' → logprob: -9.744322776794434
    6. '	while' → logprob: -9.869322776794434
    7. '
' → logprob: -9.869322776794434
    8. ' 
' → logprob: -11.494322776794434
    9. 'While' → logprob: -11.494322776794434
    10. '   ' → logprob: -11.619322776794434

Token 185: ' divisor' (ID: 100482)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5663059949874878
    2. 'n' → logprob: -1.3163059949874878
    3. ' divisor' → logprob: -2.4413061141967773
    4. 'div' → logprob: -2.5663061141967773
    5. ' div' → logprob: -8.691306114196777
    6. ' divis' → logprob: -9.316306114196777
    7. '(div' → logprob: -10.191306114196777
    8. '	div' → logprob: -10.191306114196777
    9. '	n' → logprob: -11.316306114196777
    10. '_div' → logprob: -11.691306114196777

Token 186: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.38687145709991455
    2. '<=' → logprob: -1.1368714570999146
    3. 'le' → logprob: -15.511871337890625
    4. ']<=' → logprob: -16.011871337890625
    5. ')<=' → logprob: -16.886871337890625
    6. ' ' → logprob: -17.636871337890625
    7. '≤' → logprob: -18.136871337890625
    8. '```' → logprob: -18.261871337890625
    9. ' ≤' → logprob: -18.636871337890625
    10. '=' → logprob: -18.886871337890625

Token 187: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12692862749099731
    2. ' n' → logprob: -2.1269285678863525
    3. '	n' → logprob: -14.501928329467773
    4. '_n' → logprob: -16.001928329467773
    5. '   ' → logprob: -18.376928329467773
    6. ')n' → logprob: -18.626928329467773
    7. '(n' → logprob: -19.001928329467773
    8. '
' → logprob: -19.126928329467773
    9. ' ' → logprob: -19.251928329467773
    10. ' ' → logprob: -19.501928329467773

Token 188: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14273199439048767
    2. ':' → logprob: -2.0177319049835205
    3. '):
' → logprob: -10.392731666564941
    4. '           ' → logprob: -11.642731666564941
    5. '               ' → logprob: -11.892731666564941
    6. ':
' → logprob: -12.767731666564941
    7. ' :
' → logprob: -13.017731666564941
    8. ':

' → logprob: -13.267731666564941
    9. ',' → logprob: -13.642731666564941
    10. ' and' → logprob: -13.767731666564941

Token 189: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01468755304813385
    2. 'count' → logprob: -4.264687538146973
    3. ' count' → logprob: -8.389687538146973
    4. '           ' → logprob: -8.889687538146973
    5. '
' → logprob: -9.639687538146973
    6. ':
' → logprob: -10.764687538146973
    7. '[count' → logprob: -11.139687538146973
    8. ',count' → logprob: -11.764687538146973
    9. '(count' → logprob: -12.139687538146973
    10. '<|end|>' → logprob: -12.264687538146973

Token 190: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.6946116089820862
    2. 'count' (adapté à ' count') → logprob: -0.6946116089820862
    3. '               ' → logprob: -6.694611549377441
    4. '
' → logprob: -9.194611549377441
    5. '           ' → logprob: -9.194611549377441
    6. '	count' → logprob: -11.819611549377441
    7. '[count' → logprob: -12.694611549377441
    8. '                   ' → logprob: -13.069611549377441
    9. '.count' → logprob: -13.194611549377441
    10. '   ' → logprob: -13.569611549377441

Token 191: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0019294669618830085
    2. '+=' → logprob: -6.25192928314209
    3. '	' → logprob: -15.37692928314209
    4. ' ' → logprob: -15.50192928314209
    5. '   ' → logprob: -15.50192928314209
    6. '+=(' → logprob: -16.126930236816406
    7. '    ' → logprob: -16.251930236816406
    8. '  ' → logprob: -17.376930236816406
    9. ' +' → logprob: -17.626930236816406
    10. ' ' → logprob: -17.751930236816406

Token 192: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.061967913061380386
    2. 'n' → logprob: -2.8119678497314453
    3. ' ' → logprob: -16.186967849731445
    4. '   ' → logprob: -16.436967849731445
    5. '	n' → logprob: -16.436967849731445
    6. ' ' → logprob: -16.561967849731445
    7. '
' → logprob: -18.686967849731445
    8. '(n' → logprob: -19.936967849731445
    9. ' (' → logprob: -20.061967849731445
    10. '_n' → logprob: -20.811967849731445

Token 193: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.22551071643829346
    2. '//' → logprob: -1.6005107164382935
    3. 'div' → logprob: -9.600510597229004
    4. '           ' → logprob: -12.350510597229004
    5. '       ' → logprob: -12.725510597229004
    6. ' div' → logprob: -12.725510597229004
    7. '/div' → logprob: -12.850510597229004
    8. '_div' → logprob: -13.100510597229004
    9. '                   ' → logprob: -13.225510597229004
    10. ' ' → logprob: -13.225510597229004

Token 194: ' divisor' (ID: 100482)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.00012368128227535635
    2. ' divisor' → logprob: -9.000123977661133
    3. '	div' → logprob: -16.500123977661133
    4. '(div' → logprob: -16.500123977661133
    5. 'divider' → logprob: -17.500123977661133
    6. '<div' → logprob: -18.000123977661133
    7. '_div' → logprob: -18.125123977661133
    8. ' div' → logprob: -18.125123977661133
    9. '.div' → logprob: -19.750123977661133
    10. '-div' → logprob: -20.000123977661133

Token 195: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4782480001449585
    2. '
' → logprob: -0.9782480001449585
    3. 'div' → logprob: -6.728248119354248
    4. '
' → logprob: -7.103248119354248
    5. '\n' → logprob: -7.353248119354248
    6. '                
' → logprob: -7.728248119354248
    7. '                   ' → logprob: -7.978248119354248
    8. '  
' → logprob: -9.10324764251709
    9. '    
' → logprob: -9.10324764251709
    10. '           ' → logprob: -9.22824764251709

Token 196: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005765048554167151
    2. '           ' → logprob: -8.250576972961426
    3. '
' → logprob: -8.375576972961426
    4. 'div' → logprob: -9.750576972961426
    5. '                   ' → logprob: -11.375576972961426
    6. '              ' → logprob: -12.625576972961426
    7. '                
' → logprob: -12.750576972961426
    8. '   ' → logprob: -13.000576972961426
    9. '       ' → logprob: -13.500576972961426
    10. '             ' → logprob: -14.125576972961426

Token 197: ' divisor' (ID: 100482)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.001506409258581698
    2. ' divisor' → logprob: -6.501506328582764
    3. '                   ' → logprob: -13.501506805419922
    4. '           ' → logprob: -13.751506805419922
    5. '	div' → logprob: -14.126506805419922
    6. ' div' → logprob: -14.626506805419922
    7. '               ' → logprob: -16.001506805419922
    8. '
' → logprob: -16.501506805419922
    9. ' divis' → logprob: -16.751506805419922
    10. '_div' → logprob: -16.751506805419922

Token 198: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.31330612301826477
    2. ' *=' → logprob: -1.3133060932159424
    3. ' ' → logprob: -11.438305854797363
    4. '   ' → logprob: -11.688305854797363
    5. '	' → logprob: -11.813305854797363
    6. '=' → logprob: -11.938305854797363
    7. '*' → logprob: -12.188305854797363
    8. '  ' → logprob: -13.438305854797363
    9. ' ' → logprob: -13.563305854797363
    10. '    ' → logprob: -13.813305854797363

Token 199: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001818489981815219
    2. '5' → logprob: -9.000182151794434
    3. ' self' → logprob: -9.750182151794434
    4. '   ' → logprob: -16.750181198120117
    5. '```' → logprob: -17.250181198120117
    6. ' ' → logprob: -17.375181198120117
    7. '(self' → logprob: -17.875181198120117
    8. '	self' → logprob: -18.000181198120117
    9. '[self' → logprob: -18.625181198120117
    10. '           ' → logprob: -18.750181198120117

Token 200: '.base' (ID: 15523)
  Prédit: '.base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.base' → logprob: -1.9266199160483666e-05
    2. 'base' → logprob: -11.250019073486328
    3. '.' → logprob: -12.750019073486328
    4. '..' → logprob: -14.000019073486328
    5. ' .' → logprob: -14.375019073486328
    6. '.user' → logprob: -15.000019073486328
    7. ').' → logprob: -15.250019073486328
    8. '   ' → logprob: -15.625019073486328
    9. ' base' → logprob: -15.625019073486328
    10. '.factor' → logprob: -15.750019073486328

Token 201: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.05492493882775307
    2. 'factor' → logprob: -2.929924964904785
    3. '5' → logprob: -10.554924964904785
    4. 'base' → logprob: -13.554924964904785
    5. 'actor' → logprob: -13.554924964904785
    6. '_' → logprob: -13.554924964904785
    7. 'Factor' → logprob: -14.179924964904785
    8. ' factor' → logprob: -14.304924964904785
    9. '.factor' → logprob: -14.429924964904785
    10. 's' → logprob: -14.429924964904785

Token 202: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07270339131355286
    2. '
' → logprob: -2.6977033615112305
    3. 'return' → logprob: -6.5727033615112305
    4. '       ' → logprob: -7.0727033615112305
    5. ' return' → logprob: -8.07270336151123
    6. '    
' → logprob: -9.19770336151123
    7. '
' → logprob: -10.32270336151123
    8. '  
' → logprob: -10.94770336151123
    9. '        
' → logprob: -11.19770336151123
    10. '            
' → logprob: -11.32270336151123

Token 203: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011131888255476952
    2. '       ' → logprob: -4.511131763458252
    3. 'return' → logprob: -9.88613224029541
    4. ' return' → logprob: -11.26113224029541
    5. '
' → logprob: -11.63613224029541
    6. '               ' → logprob: -12.76113224029541
    7. '   ' → logprob: -13.01113224029541
    8. '          ' → logprob: -13.13613224029541
    9. '		' → logprob: -13.88613224029541
    10. '        
' → logprob: -14.01113224029541

Token 204: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33262568712234497
    2. 'return' (adapté à ' return') → logprob: -1.3326256275177002
    3. '           ' → logprob: -4.582625865936279
    4. ' return' → logprob: -4.832625865936279
    5. '   ' → logprob: -6.957625865936279
    6. '	return' → logprob: -10.707625389099121
    7. '
' → logprob: -12.582625389099121
    8. '               ' → logprob: -13.082625389099121
    9. '     ' → logprob: -13.457625389099121
    10. '      ' → logprob: -14.207625389099121

Token 205: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0009114635176956654
    2. ' count' → logprob: -7.000911235809326
    3. '[count' → logprob: -20.750911712646484
    4. '	count' → logprob: -21.125911712646484
    5. '(count' → logprob: -21.375911712646484
    6. '$count' → logprob: -22.375911712646484
    7. 'counts' → logprob: -22.500911712646484
    8. ' ' → logprob: -22.500911712646484
    9. '   ' → logprob: -23.000911712646484
    10. 'c' → logprob: -23.250911712646484

Token 206: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01913912035524845
    2. '<|end|>' → logprob: -4.269139289855957
    3. '    
' → logprob: -5.394139289855957
    4. '
' → logprob: -8.269139289855957
    5. '        
' → logprob: -9.644139289855957
    6. 'class' → logprob: -10.269139289855957
    7. '       ' → logprob: -10.519139289855957
    8. '<|end|>' → logprob: -10.769139289855957
    9. '  
' → logprob: -12.519139289855957
    10. '```' → logprob: -12.769139289855957

Token 208: ' class' (ID: 744)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04123498871922493
    2. '   ' → logprob: -3.7912349700927734
    3. 'class' (adapté à ' class') → logprob: -4.416234970092773
    4. ' def' → logprob: -5.166234970092773
    5. ' class' → logprob: -11.041234970092773
    6. '    
' → logprob: -11.291234970092773
    7. '	def' → logprob: -11.791234970092773
    8. ' ' → logprob: -13.041234970092773
    9. '  ' → logprob: -13.291234970092773
    10. '
' → logprob: -13.791234970092773

Token 209: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.2622956335544586
    2. 'Result' → logprob: -2.137295722961426
    3. 'Processor' → logprob: -3.512295722961426
    4. ' Output' → logprob: -3.887295722961426
    5. 'Runner' → logprob: -4.262295722961426
    6. 'Factor' → logprob: -4.512295722961426
    7. 'Solution' → logprob: -4.637295722961426
    8. ' Result' → logprob: -5.262295722961426
    9. 'Zero' → logprob: -5.887295722961426
    10. 'Facade' → logprob: -6.012295722961426

Token 210: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.0004235243541188538
    2. 'Writer' → logprob: -8.125423431396484
    3. 'Formatter' → logprob: -10.500423431396484
    4. 'ter' → logprob: -10.750423431396484
    5. 'andler' → logprob: -10.875423431396484
    6. '_Handler' → logprob: -10.875423431396484
    7. 'Printer' → logprob: -11.375423431396484
    8. 'Generator' → logprob: -11.625423431396484
    9. 'Manager' → logprob: -12.375423431396484
    10. 'Processor' → logprob: -12.500423431396484

Token 211: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007615390233695507
    2. ':
' → logprob: -4.882615566253662
    3. '   ' → logprob: -12.382615089416504
    4. '(' → logprob: -13.757615089416504
    5. ':def' → logprob: -14.007615089416504
    6. ' :' → logprob: -14.382615089416504
    7. ':

' → logprob: -14.382615089416504
    8. '):' → logprob: -14.757615089416504
    9. ':
' → logprob: -14.882615089416504
    10. '():' → logprob: -15.382615089416504

Token 212: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3876447379589081
    2. '       ' → logprob: -1.1376447677612305
    3. 'def' → logprob: -7.5126447677612305
    4. '    
' → logprob: -10.01264476776123
    5. '     ' → logprob: -10.01264476776123
    6. '        
' → logprob: -10.76264476776123
    7. '<|end|>' → logprob: -11.01264476776123
    8. '    ' → logprob: -11.13764476776123
    9. ' def' → logprob: -11.26264476776123
    10. ' ' → logprob: -11.38764476776123

Token 213: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5242356657981873
    2. ' def' → logprob: -1.024235725402832
    3. '   ' → logprob: -3.024235725402832
    4. '       ' → logprob: -8.149235725402832
    5. ' ' → logprob: -10.524235725402832
    6. '  ' → logprob: -12.024235725402832
    7. '	def' → logprob: -13.024235725402832
    8. '    ' → logprob: -13.274235725402832
    9. '     ' → logprob: -14.524235725402832
    10. '      ' → logprob: -16.024234771728516

Token 214: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -1.4855663721391466e-05
    2. 'static' → logprob: -11.250015258789062
    3. 'classmethod' → logprob: -13.500015258789062
    4. 'dat' → logprob: -15.000015258789062
    5. ' static' → logprob: -18.875015258789062
    6. 'sta' → logprob: -20.375015258789062
    7. 'st' → logprob: -20.500015258789062
    8. 'stat' → logprob: -20.500015258789062
    9. 'property' → logprob: -20.625015258789062
    10. 'Static' → logprob: -23.375015258789062

Token 215: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23953966796398163
    2. '   ' → logprob: -2.364539623260498
    3. ' def' → logprob: -2.739539623260498
    4. '       ' → logprob: -2.989539623260498
    5. '
' → logprob: -5.614539623260498
    6. '	def' → logprob: -8.489540100097656
    7. '        
' → logprob: -9.489540100097656
    8. '    
' → logprob: -9.614540100097656
    9. ' ' → logprob: -10.489540100097656
    10. '     ' → logprob: -10.989540100097656

Token 216: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15760016441345215
    2. '   ' → logprob: -2.157600164413452
    3. ' def' → logprob: -3.907600164413452
    4. '       ' → logprob: -4.657600402832031
    5. '
' → logprob: -8.032600402832031
    6. '	def' → logprob: -8.157600402832031
    7. ' ' → logprob: -12.157600402832031
    8. '  ' → logprob: -13.032600402832031
    9. '	   ' → logprob: -13.032600402832031
    10. '    
' → logprob: -13.157600402832031

Token 217: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.176947600673884e-05
    2. ' def' → logprob: -10.750021934509277
    3. '
' → logprob: -16.50002098083496
    4. '   ' → logprob: -16.62502098083496
    5. '	def' → logprob: -19.62502098083496
    6. 'print' → logprob: -19.75002098083496
    7. '       ' → logprob: -19.87502098083496
    8. '    
' → logprob: -20.75002098083496
    9. '```' → logprob: -20.87502098083496
    10. '        
' → logprob: -20.87502098083496

Token 218: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006687552202492952
    2. ' print' → logprob: -5.381687641143799
    3. 'write' → logprob: -6.506687641143799
    4. 'format' → logprob: -8.13168716430664
    5. 'display' → logprob: -8.50668716430664
    6. ' write' → logprob: -10.38168716430664
    7. 'output' → logprob: -11.13168716430664
    8. ' display' → logprob: -11.25668716430664
    9. ' format' → logprob: -11.63168716430664
    10. ' output' → logprob: -13.25668716430664

Token 219: '_tr' (ID: 7410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23002378642559052
    2. '_' → logprob: -2.3550238609313965
    3. '_results' → logprob: -3.4800238609313965
    4. '_tr' → logprob: -3.8550238609313965
    5. '("' → logprob: -4.2300238609313965
    6. '_result' → logprob: -4.3550238609313965
    7. '("_' → logprob: -4.8550238609313965
    8. '_counts' → logprob: -5.3550238609313965
    9. '_count' → logprob: -5.7300238609313965
    10. '(f' → logprob: -5.8550238609313965

Token 220: 'ailing' (ID: 24408)
  Prédit: 'ailing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ailing' → logprob: -0.002852901816368103
    2. 'a' → logprob: -6.252852916717529
    3. 'ail' → logprob: -7.252852916717529
    4. '_' → logprob: -10.127852439880371
    5. 'aling' → logprob: -10.627852439880371
    6. '_a' → logprob: -10.877852439880371
    7. 'e' → logprob: -11.127852439880371
    8. 'ailed' → logprob: -11.127852439880371
    9. ' a' → logprob: -11.627852439880371
    10. '   ' → logprob: -11.627852439880371

Token 221: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0067673493176698685
    2. '_zero' → logprob: -5.006767272949219
    3. '_spaces' → logprob: -10.631767272949219
    4. ' _' → logprob: -10.756767272949219
    5. ' zeros' → logprob: -13.131767272949219
    6. '_s' → logprob: -13.631767272949219
    7. 'zeros' → logprob: -13.881767272949219
    8. '_z' → logprob: -14.506767272949219
    9. '_space' → logprob: -14.756767272949219
    10. 'Zeros' → logprob: -15.381767272949219

Token 222: 'zeros' (ID: 24095)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1006658524274826
    2. 'zeros' → logprob: -2.350665807723999
    3. '_zero' → logprob: -8.225666046142578
    4. 'zero' → logprob: -9.100666046142578
    5. ' zeros' → logprob: -9.600666046142578
    6. '0' → logprob: -11.850666046142578
    7. 'Zeros' → logprob: -12.850666046142578
    8. 'zer' → logprob: -14.225666046142578
    9. '_spaces' → logprob: -14.225666046142578
    10. ' _' → logprob: -15.100666046142578

Token 223: '(results' (ID: 42655)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06371631473302841
    2. '(' → logprob: -2.813716411590576
    3. '(count' → logprob: -7.313716411590576
    4. '(number' → logprob: -7.313716411590576
    5. ' (' → logprob: -9.813715934753418
    6. '(numbers' → logprob: -9.813715934753418
    7. '(value' → logprob: -9.938715934753418
    8. '(num' → logprob: -10.063715934753418
    9. '(result' → logprob: -10.313715934753418
    10. '(nums' → logprob: -10.438715934753418

Token 224: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7010897994041443
    2. '):' → logprob: -0.7010897994041443
    3. '(results' → logprob: -5.076089859008789
    4. ' ):' → logprob: -7.951089859008789
    5. ')' → logprob: -8.326089859008789
    6. '   ' → logprob: -8.576089859008789
    7. 'results' → logprob: -8.576089859008789
    8. ':' → logprob: -8.701089859008789
    9. '):
' → logprob: -8.951089859008789
    10. 'self' → logprob: -9.076089859008789

Token 225: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3751447796821594
    2. '           ' → logprob: -1.2501447200775146
    3. ':' → logprob: -4.000144958496094
    4. '(' → logprob: -6.000144958496094
    5. '():' → logprob: -6.250144958496094
    6. '():
' → logprob: -6.625144958496094
    7. ':
' → logprob: -7.375144958496094
    8. '()' → logprob: -8.125144958496094
    9. '```' → logprob: -8.125144958496094
    10. '   ' → logprob: -8.375144958496094

Token 226: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4039912819862366
    2. ' for' → logprob: -1.1539912223815918
    3. '       ' → logprob: -4.653991222381592
    4. '           ' → logprob: -4.903991222381592
    5. '   ' → logprob: -10.77899169921875
    6. '               ' → logprob: -12.15399169921875
    7. 'print' → logprob: -12.52899169921875
    8. '	for' → logprob: -13.27899169921875
    9. '
' → logprob: -13.77899169921875
    10. '	       ' → logprob: -14.40399169921875

Token 227: ' res' (ID: 694)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4006184935569763
    2. ' result' → logprob: -1.150618553161621
    3. 'res' → logprob: -4.650618553161621
    4. ' res' → logprob: -6.025618553161621
    5. ' count' → logprob: -7.775618553161621
    6. 'count' → logprob: -7.775618553161621
    7. ' zeros' → logprob: -7.775618553161621
    8. '   ' → logprob: -8.400618553161621
    9. 'zeros' → logprob: -8.900618553161621
    10. 'zero' → logprob: -10.650618553161621

Token 228: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.23601748049259186
    2. 'ult' → logprob: -1.6110174655914307
    3. 'u' → logprob: -5.36101770401001
    4. ' ult' → logprob: -6.11101770401001
    5. 'ul' → logprob: -6.48601770401001
    6. '   ' → logprob: -7.11101770401001
    7. 'ults' → logprob: -7.36101770401001
    8. 'in' → logprob: -8.861017227172852
    9. 'ultat' → logprob: -8.986017227172852
    10. ' ' → logprob: -9.236017227172852

Token 229: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.005234002135694027
    2. ' results' → logprob: -5.2552337646484375
    3. '	results' → logprob: -16.255233764648438
    4. '(results' → logprob: -16.755233764648438
    5. '.results' → logprob: -18.255233764648438
    6. 'res' → logprob: -18.630233764648438
    7. '   ' → logprob: -18.880233764648438
    8. 'result' → logprob: -19.505233764648438
    9. ' ' → logprob: -20.505233764648438
    10. 'Results' → logprob: -21.005233764648438

Token 230: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05706183612346649
    2. ':
' → logprob: -2.9320619106292725
    3. '               ' → logprob: -6.182061672210693
    4. '           ' → logprob: -9.807062149047852
    5. ',' → logprob: -10.432062149047852
    6. '.' → logprob: -12.432062149047852
    7. ' :' → logprob: -12.432062149047852
    8. '():
' → logprob: -12.682062149047852
    9. ':

' → logprob: -12.807062149047852
    10. '):
' → logprob: -12.807062149047852

Token 231: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005116700194776058
    2. '           ' → logprob: -6.0051164627075195
    3. 'print' → logprob: -6.2551164627075195
    4. ' print' → logprob: -7.2551164627075195
    5. '	           ' → logprob: -13.25511646270752
    6. '   ' → logprob: -13.38011646270752
    7. '```' → logprob: -13.38011646270752
    8. '                
' → logprob: -13.50511646270752
    9. '       ' → logprob: -14.13011646270752
    10. '            
' → logprob: -14.13011646270752

Token 232: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.4747365415096283
    2. ' print' → logprob: -0.9747365713119507
    3. '               ' → logprob: -7.59973669052124
    4. '           ' → logprob: -8.849736213684082
    5. '   ' → logprob: -11.474736213684082
    6. '                   ' → logprob: -12.974736213684082
    7. '            ' → logprob: -14.099736213684082
    8. '                ' → logprob: -14.724736213684082
    9. '	print' → logprob: -14.849736213684082
    10. '```' → logprob: -15.099736213684082

Token 233: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -7.314625690924004e-05
    2. 'res' → logprob: -9.875073432922363
    3. '(' → logprob: -11.000073432922363
    4. '(f' → logprob: -12.250073432922363
    5. '('' → logprob: -16.875072479248047
    6. '()' → logprob: -17.000072479248047
    7. ' res' → logprob: -17.250072479248047
    8. 'f' → logprob: -18.625072479248047
    9. '("' → logprob: -18.750072479248047
    10. '(str' → logprob: -19.000072479248047

Token 234: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.65707261255011e-06
    2. ')
' → logprob: -12.250008583068848
    3. '           ' → logprob: -13.375008583068848
    4. ' )' → logprob: -13.500008583068848
    5. ')`' → logprob: -15.375008583068848
    6. '`)' → logprob: -15.750008583068848
    7. '())' → logprob: -16.125009536743164
    8. '               ' → logprob: -16.125009536743164
    9. '')' → logprob: -16.625009536743164
    10. '       ' → logprob: -16.875009536743164

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007925973040983081
    2. '<|end|>' → logprob: -7.875792503356934
    3. '    
' → logprob: -8.000792503356934
    4. 'def' → logprob: -9.875792503356934
    5. '
' → logprob: -11.750792503356934
    6. '        
' → logprob: -11.875792503356934
    7. '<|end|>' → logprob: -12.125792503356934
    8. 'class' → logprob: -13.750792503356934
    9. '  
' → logprob: -14.125792503356934
    10. '       ' → logprob: -14.250792503356934

Token 236: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07088881731033325
    2. '   ' → logprob: -2.9458887577056885
    3. ' def' → logprob: -4.195888996124268
    4. 'class' → logprob: -7.195888996124268
    5. '    
' → logprob: -10.57088851928711
    6. '	def' → logprob: -10.69588851928711
    7. ' ' → logprob: -11.82088851928711
    8. '
' → logprob: -11.82088851928711
    9. '  ' → logprob: -13.07088851928711
    10. ' class' → logprob: -13.69588851928711

Token 237: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.007246906869113445
    2. ' def' → logprob: -5.632246971130371
    3. ' calculate' → logprob: -6.632246971130371
    4. '__' → logprob: -6.757246971130371
    5. ' compute' → logprob: -7.132246971130371
    6. ' ' → logprob: -9.257246971130371
    7. ' process' → logprob: -9.382246971130371
    8. ' run' → logprob: -9.507246971130371
    9. ' _' → logprob: -10.132246971130371
    10. ' solve' → logprob: -10.882246971130371

Token 238: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.764977686339989e-05
    2. '_init' → logprob: -10.000057220458984
    3. ' init' → logprob: -11.375057220458984
    4. 'i' → logprob: -14.875057220458984
    5. '_' → logprob: -16.125057220458984
    6. 'ini' → logprob: -16.625057220458984
    7. 'int' → logprob: -17.000057220458984
    8. '   ' → logprob: -17.500057220458984
    9. '(init' → logprob: -17.625057220458984
    10. 'in' → logprob: -17.875057220458984

Token 239: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0013488073600456119
    2. '__' → logprob: -6.626348972320557
    3. '__(
' → logprob: -11.001348495483398
    4. '_(' → logprob: -12.751348495483398
    5. '(self' → logprob: -13.001348495483398
    6. '(' → logprob: -15.251348495483398
    7. '_' → logprob: -15.626348495483398
    8. '___' → logprob: -15.626348495483398
    9. ')(' → logprob: -15.876348495483398
    10. '__((' → logprob: -16.2513484954834

Token 240: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.4736459888808895e-05
    2. ' self' → logprob: -11.375014305114746
    3. ')' → logprob: -14.000014305114746
    4. '   ' → logprob: -14.000014305114746
    5. '
' → logprob: -14.250014305114746
    6. '       ' → logprob: -14.375014305114746
    7. '):
' → logprob: -15.875014305114746
    8. '(self' → logprob: -16.875015258789062
    9. ' ' → logprob: -17.125015258789062
    10. '  ' → logprob: -17.500015258789062

Token 241: '):
' (ID: 1883)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2552063465118408
    2. ',' → logprob: -2.005206346511841
    3. '):' → logprob: -3.130206346511841
    4. '):
' → logprob: -3.130206346511841
    5. ' self' → logprob: -6.380206108093262
    6. '   ' → logprob: -7.130206108093262
    7. '(self' → logprob: -8.505206108093262
    8. ')' → logprob: -8.880206108093262
    9. ',self' → logprob: -9.005206108093262
    10. '       ' → logprob: -9.130206108093262

Token 242: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.015465359203517437
    2. ' self' → logprob: -4.515465259552002
    3. '       ' → logprob: -5.515465259552002
    4. '   ' → logprob: -7.890465259552002
    5. '(self' → logprob: -12.39046573638916
    6. '	self' → logprob: -12.76546573638916
    7. '
' → logprob: -14.76546573638916
    8. ' ' → logprob: -14.89046573638916
    9. '```' → logprob: -14.89046573638916
    10. '           ' → logprob: -15.01546573638916

Token 243: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006763802841305733
    2. ' self' → logprob: -5.256763935089111
    3. '       ' → logprob: -6.506763935089111
    4. '   ' → logprob: -10.256763458251953
    5. '
' → logprob: -15.881763458251953
    6. 'def' → logprob: -16.256763458251953
    7. '           ' → logprob: -17.131763458251953
    8. '	self' → logprob: -17.256763458251953
    9. '        
' → logprob: -17.631763458251953
    10. '(self' → logprob: -17.756763458251953

Token 244: '.input' (ID: 18322)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.06510855257511139
    2. ' .' → logprob: -2.81510853767395
    3. '.' → logprob: -6.065108776092529
    4. '   ' → logprob: -7.815108776092529
    5. ' _' → logprob: -9.440108299255371
    6. '_input' → logprob: -9.940108299255371
    7. ' ' → logprob: -9.940108299255371
    8. 'class' → logprob: -10.315108299255371
    9. '.input' → logprob: -10.565108299255371
    10. '.__' → logprob: -10.565108299255371

Token 245: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -4.727905979962088e-05
    2. 's' → logprob: -10.50004768371582
    3. 'Handler' → logprob: -11.62504768371582
    4. '_' → logprob: -12.25004768371582
    5. '_handle' → logprob: -12.62504768371582
    6. '_reader' → logprob: -14.00004768371582
    7. '_handlers' → logprob: -14.87504768371582
    8. '_Handler' → logprob: -15.37504768371582
    9. '_hand' → logprob: -15.50004768371582
    10. ' _' → logprob: -15.62504768371582

Token 246: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474077969789505
    2. '=' → logprob: -0.9740779399871826
    3. ' =
' → logprob: -14.224078178405762
    4. ' ' → logprob: -15.599078178405762
    5. '=
' → logprob: -17.474077224731445
    6. '_' → logprob: -17.599077224731445
    7. '＝' → logprob: -17.849077224731445
    8. '   ' → logprob: -17.974077224731445
    9. '=

' → logprob: -17.974077224731445
    10. '()' → logprob: -18.224077224731445

Token 247: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001974192215129733
    2. ' self' → logprob: -6.251974105834961
    3. 'Factor' → logprob: -10.001974105834961
    4. '(self' → logprob: -16.12697410583496
    5. ' Factor' → logprob: -16.62697410583496
    6. '=self' → logprob: -17.50197410583496
    7. '[self' → logprob: -17.87697410583496
    8. '   ' → logprob: -18.00197410583496
    9. '	self' → logprob: -18.37697410583496
    10. 'Self' → logprob: -18.62697410583496

Token 248: '.Input' (ID: 22638)
  Prédit: '.Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Input' → logprob: -0.00026407750556245446
    2. '.F' → logprob: -8.250264167785645
    3. '.' → logprob: -13.750264167785645
    4. '.Output' → logprob: -14.250264167785645
    5. ' .' → logprob: -15.750264167785645
    6. 'Factor' → logprob: -15.750264167785645
    7. 'Input' → logprob: -15.875264167785645
    8. '.Factory' → logprob: -16.125263214111328
    9. '.Handler' → logprob: -16.250263214111328
    10. '.INPUT' → logprob: -16.375263214111328

Token 249: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -1.747814349073451e-05
    2. '_Handler' → logprob: -11.250017166137695
    3. '_handler' → logprob: -12.375017166137695
    4. ' Handler' → logprob: -15.750017166137695
    5. '_HANDLER' → logprob: -17.875017166137695
    6. 'handler' → logprob: -18.125017166137695
    7. '.Handler' → logprob: -18.750017166137695
    8. '   ' → logprob: -19.625017166137695
    9. 'andler' → logprob: -19.750017166137695
    10. '_' → logprob: -20.125017166137695

Token 250: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05086452513933182
    2. '
' → logprob: -3.6758644580841064
    3. '()
' → logprob: -4.0508646965026855
    4. 'self' → logprob: -5.5508646965026855
    5. '()' → logprob: -6.9258646965026855
    6. '(self' → logprob: -6.9258646965026855
    7. ' self' → logprob: -7.5508646965026855
    8. '   ' → logprob: -8.800864219665527
    9. '        
' → logprob: -9.550864219665527
    10. '  
' → logprob: -9.675864219665527

Token 251: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0054437583312392235
    2. 'self' → logprob: -5.255443572998047
    3. ' self' → logprob: -8.630443572998047
    4. '   ' → logprob: -10.630443572998047
    5. '
' → logprob: -12.505443572998047
    6. '           ' → logprob: -13.005443572998047
    7. '	self' → logprob: -15.005443572998047
    8. 'def' → logprob: -15.255443572998047
    9. '```' → logprob: -16.005443572998047
    10. '      ' → logprob: -16.005443572998047

Token 252: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -1.1279553291387856e-05
    2. ' self' → logprob: -11.750011444091797
    3. '       ' → logprob: -12.625011444091797
    4. '
' → logprob: -17.000011444091797
    5. '   ' → logprob: -17.250011444091797
    6. '           ' → logprob: -17.625011444091797
    7. '        
' → logprob: -18.000011444091797
    8. '(self' → logprob: -18.250011444091797
    9. '=self' → logprob: -18.625011444091797
    10. 'def' → logprob: -19.125011444091797

Token 253: '.cal' (ID: 40302)
  Prédit: '.trailing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.trailing' → logprob: -0.08528957515954971
    2. '.' → logprob: -2.835289478302002
    3. '.output' → logprob: -4.085289478302002
    4. '.tr' → logprob: -5.585289478302002
    5. '.cal' → logprob: -6.460289478302002
    6. '.t' → logprob: -7.710289478302002
    7. '._' → logprob: -8.33528995513916
    8. ' .' → logprob: -9.46028995513916
    9. '.outputs' → logprob: -11.33528995513916
    10. '.factor' → logprob: -11.33528995513916

Token 254: 'culator' (ID: 23033)
  Prédit: 'culator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'culator' → logprob: -0.0006604921072721481
    2. 'cul' → logprob: -7.875660419464111
    3. 'c' → logprob: -8.25066089630127
    4. 'cular' → logprob: -11.87566089630127
    5. 'culation' → logprob: -12.00066089630127
    6. 'calculator' → logprob: -12.50066089630127
    7. 'ulator' → logprob: -13.75066089630127
    8. 'culate' → logprob: -14.87566089630127
    9. 'cut' → logprob: -15.25066089630127
    10. 'culated' → logprob: -15.62566089630127

Token 255: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868733048439026
    2. ' =' → logprob: -1.1368732452392578
    3. '=self' → logprob: -13.261873245239258
    4. 'self' → logprob: -15.636873245239258
    5. '   ' → logprob: -15.886873245239258
    6. ' ' → logprob: -17.011873245239258
    7. 's' → logprob: -17.011873245239258
    8. '＝' → logprob: -17.636873245239258
    9. '       ' → logprob: -18.011873245239258
    10. '.=' → logprob: -18.136873245239258

Token 256: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20141363143920898
    2. ' self' → logprob: -1.701413631439209
    3. '(self' → logprob: -16.201414108276367
    4. 'Factor' → logprob: -16.576414108276367
    5. '       ' → logprob: -16.951414108276367
    6. '	self' → logprob: -17.576414108276367
    7. '           ' → logprob: -18.076414108276367
    8. ' Factor' → logprob: -18.451414108276367
    9. '        ' → logprob: -19.451414108276367
    10. 'Self' → logprob: -19.451414108276367

Token 257: '.T' (ID: 2600)
  Prédit: '.T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.T' → logprob: -2.15310683415737e-05
    2. ' .' → logprob: -12.125021934509277
    3. '.Tr' → logprob: -12.125021934509277
    4. '.TRAILING' → logprob: -12.250021934509277
    5. 'Trailing' → logprob: -13.125021934509277
    6. '.' → logprob: -13.250021934509277
    7. '.F' → logprob: -13.625021934509277
    8. '.trailing' → logprob: -14.250021934509277
    9. '.Threading' → logprob: -16.25002098083496
    10. '.Т' → logprob: -16.62502098083496

Token 258: 'ra' (ID: 614)
  Prédit: 'ra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -5.2762428822461516e-05
    2. 'r' → logprob: -10.500052452087402
    3. 'Trailing' → logprob: -11.000052452087402
    4. 'ral' → logprob: -12.125052452087402
    5. 'ailing' → logprob: -13.625052452087402
    6. 'rai' → logprob: -14.500052452087402
    7. 'rail' → logprob: -14.875052452087402
    8. '_ra' → logprob: -15.375052452087402
    9. '.trailing' → logprob: -15.625052452087402
    10. 'raction' → logprob: -15.875052452087402

Token 259: 'iling' (ID: 10741)
  Prédit: 'iling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iling' → logprob: -8.220573363360018e-05
    2. 'illing' → logprob: -10.000082015991211
    3. 'il' → logprob: -11.500082015991211
    4. '
' → logprob: -11.875082015991211
    5. 'i' → logprob: -12.500082015991211
    6. '   ' → logprob: -12.625082015991211
    7. 'iler' → logprob: -13.125082015991211
    8. 'ing' → logprob: -13.250082015991211
    9. 'ilor' → logprob: -13.250082015991211
    10. 'ilig' → logprob: -14.000082015991211

Token 260: 'Zero' (ID: 20870)
  Prédit: 'Zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Zero' → logprob: -6.749814019713085e-06
    2. 'Z' → logprob: -12.000006675720215
    3. '_' → logprob: -15.500006675720215
    4. 'Zeros' → logprob: -16.00000762939453
    5. ' Zero' → logprob: -16.75000762939453
    6. '_zero' → logprob: -17.12500762939453
    7. '.Zero' → logprob: -17.75000762939453
    8. '0' → logprob: -18.00000762939453
    9. 'Zone' → logprob: -18.12500762939453
    10. '_ZERO' → logprob: -18.37500762939453

Token 261: 'Calculator' (ID: 50159)
  Prédit: 'Calculator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: -0.12720337510108948
    2. 'Counter' → logprob: -2.1272034645080566
    3. 'izer' → logprob: -9.752202987670898
    4. 'Cal' → logprob: -10.127202987670898
    5. 'culator' → logprob: -10.627202987670898
    6. 'ounter' → logprob: -11.002202987670898
    7. 'ator' → logprob: -11.127202987670898
    8. 'Zero' → logprob: -11.252202987670898
    9. '_' → logprob: -11.502202987670898
    10. 'Count' → logprob: -11.627202987670898

Token 262: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11933224648237228
    2. '   ' → logprob: -2.7443323135375977
    3. '
' → logprob: -4.244332313537598
    4. 'def' → logprob: -4.244332313537598
    5. '<|end|>' → logprob: -4.494332313537598
    6. '()
' → logprob: -5.494332313537598
    7. '()' → logprob: -6.494332313537598
    8. 'self' → logprob: -7.119332313537598
    9. '(self' → logprob: -7.494332313537598
    10. ' ' → logprob: -7.994332313537598

Token 263: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47851118445396423
    2. 'self' → logprob: -0.9785112142562866
    3. ' self' → logprob: -5.853511333465576
    4. '   ' → logprob: -6.728511333465576
    5. 'def' → logprob: -7.978511333465576
    6. '	self' → logprob: -11.853510856628418
    7. '<|end|>' → logprob: -13.228510856628418
    8. '           ' → logprob: -13.603510856628418
    9. '
' → logprob: -13.728510856628418
    10. ' ' → logprob: -13.853510856628418

Token 264: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00043710620957426727
    2. ' self' → logprob: -7.750437259674072
    3. '       ' → logprob: -12.250436782836914
    4. 'def' → logprob: -13.750436782836914
    5. '   ' → logprob: -15.375436782836914
    6. '	self' → logprob: -16.125436782836914
    7. '(self' → logprob: -16.250436782836914
    8. 's' → logprob: -16.750436782836914
    9. '
' → logprob: -16.875436782836914
    10. '=self' → logprob: -17.625436782836914

Token 265: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -0.00016861737822182477
    2. '.' → logprob: -9.375168800354004
    3. '.outputs' → logprob: -10.000168800354004
    4. '.results' → logprob: -10.750168800354004
    5. '.input' → logprob: -11.750168800354004
    6. 'output' → logprob: -12.375168800354004
    7. ' .' → logprob: -12.875168800354004
    8. '._' → logprob: -14.250168800354004
    9. '.result' → logprob: -14.500168800354004
    10. '.out' → logprob: -15.125168800354004

Token 266: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -9.729906196298543e-06
    2. '_handle' → logprob: -12.000009536743164
    3. '_' → logprob: -13.125009536743164
    4. 'Handler' → logprob: -15.000009536743164
    5. '_Handler' → logprob: -15.125009536743164
    6. '_hand' → logprob: -15.250009536743164
    7. '_handlers' → logprob: -16.000009536743164
    8. '_writer' → logprob: -16.125009536743164
    9. ' _' → logprob: -16.625009536743164
    10. '_HANDLER' → logprob: -16.750009536743164

Token 267: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759637951850891
    2. '=' → logprob: -0.8259637951850891
    3. '.' → logprob: -10.825963973999023
    4. '.=' → logprob: -13.575963973999023
    5. ' =
' → logprob: -13.825963973999023
    6. ' ' → logprob: -14.325963973999023
    7. '=self' → logprob: -14.575963973999023
    8. ' .' → logprob: -14.825963973999023
    9. '_' → logprob: -14.950963973999023
    10. '=
' → logprob: -16.450963973999023

Token 268: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07888978719711304
    2. ' self' → logprob: -2.578889846801758
    3. '(self' → logprob: -17.953889846801758
    4. '       ' → logprob: -19.328889846801758
    5. '	self' → logprob: -19.328889846801758
    6. '   ' → logprob: -19.703889846801758
    7. '=self' → logprob: -20.203889846801758
    8. ' ' → logprob: -20.578889846801758
    9. '    ' → logprob: -20.703889846801758
    10. '     ' → logprob: -22.078889846801758

Token 269: '.Output' (ID: 52068)
  Prédit: '.Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Output' → logprob: -9.639096970204264e-05
    2. '.' → logprob: -9.250096321105957
    3. ' .' → logprob: -16.375097274780273
    4. '.O' → logprob: -17.000097274780273
    5. '.Input' → logprob: -17.000097274780273
    6. 'Output' → logprob: -17.125097274780273
    7. '.Out' → logprob: -17.125097274780273
    8. '.Object' → logprob: -19.875097274780273
    9. '.
' → logprob: -20.625097274780273
    10. '_Output' → logprob: -20.625097274780273

Token 270: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -1.3856492842023727e-06
    2. '_Handler' → logprob: -13.625000953674316
    3. '_handler' → logprob: -16.250001907348633
    4. ' Handler' → logprob: -17.375001907348633
    5. 'Hand' → logprob: -18.125001907348633
    6. 'Handle' → logprob: -18.125001907348633
    7. 'Helper' → logprob: -18.500001907348633
    8. 'andler' → logprob: -18.875001907348633
    9. 'Holder' → logprob: -19.500001907348633
    10. 'handler' → logprob: -19.625001907348633

Token 271: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.058955028653144836
    2. 'def' → logprob: -3.808954954147339
    3. '()
' → logprob: -3.933954954147339
    4. '   ' → logprob: -4.558955192565918
    5. '()

' → logprob: -5.683955192565918
    6. '<|end|>' → logprob: -7.183955192565918
    7. ' def' → logprob: -8.433955192565918
    8. '
' → logprob: -8.558955192565918
    9. '(' → logprob: -8.558955192565918
    10. '(
' → logprob: -9.933955192565918

Token 272: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0536942332983017
    2. '
' → logprob: -3.678694248199463
    3. '   ' → logprob: -3.803694248199463
    4. ' def' → logprob: -5.428694248199463
    5. '    
' → logprob: -8.678693771362305
    6. '	def' → logprob: -8.803693771362305
    7. ' 
' → logprob: -12.178693771362305
    8. '        
' → logprob: -12.178693771362305
    9. '  
' → logprob: -12.678693771362305
    10. '

' → logprob: -12.803693771362305

Token 273: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.935296834039036e-06
    2. ' def' → logprob: -12.75000286102295
    3. '   ' → logprob: -20.875003814697266
    4. '	def' → logprob: -22.625003814697266
    5. 'de' → logprob: -25.000003814697266
    6. 'd' → logprob: -25.500003814697266
    7. '    
' → logprob: -25.625003814697266
    8. ' ' → logprob: -26.500003814697266
    9. '_def' → logprob: -27.000003814697266
    10. '
' → logprob: -27.250003814697266

Token 274: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.44513458013534546
    2. ' process' → logprob: -1.1951346397399902
    3. ' run' → logprob: -3.4451346397399902
    4. 'run' → logprob: -4.19513463973999
    5. 'compute' → logprob: -5.82013463973999
    6. 'calculate' → logprob: -5.82013463973999
    7. ' compute' → logprob: -6.19513463973999
    8. ' calculate' → logprob: -6.69513463973999
    9. 'count' → logprob: -9.070134162902832
    10. ' count' → logprob: -9.070134162902832

Token 275: '(self' (ID: 2402)
  Prédit: '_inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inputs' → logprob: -0.0935835912823677
    2. '(self' → logprob: -2.468583583831787
    3. '()' → logprob: -6.093583583831787
    4. '_' → logprob: -6.468583583831787
    5. '_(' → logprob: -8.093584060668945
    6. '(' → logprob: -8.468584060668945
    7. '_results' → logprob: -9.468584060668945
    8. '_input' → logprob: -9.843584060668945
    9. '(inputs' → logprob: -10.468584060668945
    10. 's' → logprob: -10.718584060668945

Token 276: '):
' (ID: 1883)
  Prédit: '_inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inputs' → logprob: -0.3910776674747467
    2. '):' → logprob: -1.7660776376724243
    3. '_' → logprob: -2.016077756881714
    4. '):
' → logprob: -4.141077518463135
    5. ')' → logprob: -6.391077518463135
    6. ')_' → logprob: -7.391077518463135
    7. 'self' → logprob: -8.266077995300293
    8. '   ' → logprob: -8.391077995300293
    9. 'inputs' → logprob: -8.641077995300293
    10. '_input' → logprob: -8.891077995300293

Token 277: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01729724556207657
    2. 'inputs' → logprob: -4.267297267913818
    3. 'self' → logprob: -6.142297267913818
    4. ' inputs' → logprob: -8.01729679107666
    5. '```' → logprob: -8.26729679107666
    6. '(inputs' → logprob: -9.14229679107666
    7. '_inputs' → logprob: -9.76729679107666
    8. '(self' → logprob: -10.01729679107666
    9. 'input' → logprob: -10.14229679107666
    10. '   ' → logprob: -10.26729679107666

Token 278: ' inputs' (ID: 21963)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inputs' (adapté à ' inputs') → logprob: -0.19318567216396332
    2. ' inputs' → logprob: -2.318185567855835
    3. 'numbers' → logprob: -3.318185567855835
    4. 'nums' → logprob: -3.818185567855835
    5. ' numbers' → logprob: -4.443185806274414
    6. '       ' → logprob: -5.318185806274414
    7. 'n' → logprob: -6.693185806274414
    8. ' nums' → logprob: -7.443185806274414
    9. 'results' → logprob: -8.068185806274414
    10. 'input' → logprob: -9.193185806274414

Token 279: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868846297264099
    2. '=' → logprob: -1.1368846893310547
    3. '_' → logprob: -11.261884689331055
    4. '   ' → logprob: -14.886884689331055
    5. '()' → logprob: -15.761884689331055
    6. '_=' → logprob: -16.261884689331055
    7. '    ' → logprob: -16.636884689331055
    8. '＝' → logprob: -17.261884689331055
    9. ')' → logprob: -17.386884689331055
    10. 's' → logprob: -17.636884689331055

Token 280: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0380416102707386
    2. ' self' → logprob: -3.288041591644287
    3. '       ' → logprob: -16.538042068481445
    4. '(self' → logprob: -18.038042068481445
    5. '	self' → logprob: -18.913042068481445
    6. '[self' → logprob: -19.663042068481445
    7. '=self' → logprob: -19.788042068481445
    8. '           ' → logprob: -20.413042068481445
    9. '        ' → logprob: -21.038042068481445
    10. '   ' → logprob: -21.663042068481445

Token 281: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -2.696889623621246e-06
    2. 'input' → logprob: -13.25000286102295
    3. '.' → logprob: -14.00000286102295
    4. ' .' → logprob: -19.250001907348633
    5. '.output' → logprob: -20.875001907348633
    6. ' input' → logprob: -21.125001907348633
    7. '_input' → logprob: -21.250001907348633
    8. '._' → logprob: -21.250001907348633
    9. '	input' → logprob: -21.375001907348633
    10. '   ' → logprob: -21.500001907348633

Token 282: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -1.5048530030981055e-06
    2. '_handle' → logprob: -14.375001907348633
    3. '_handlers' → logprob: -14.750001907348633
    4. '_hand' → logprob: -15.500001907348633
    5. '_manager' → logprob: -16.875001907348633
    6. 'handler' → logprob: -17.250001907348633
    7. '_Handler' → logprob: -17.375001907348633
    8. 's' → logprob: -17.875001907348633
    9. 'andler' → logprob: -18.000001907348633
    10. '_HANDLER' → logprob: -18.000001907348633

Token 283: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -1.7954958821064793e-05
    2. 'read' → logprob: -11.125018119812012
    3. '.' → logprob: -13.000018119812012
    4. ' .' → logprob: -14.000018119812012
    5. '.readline' → logprob: -17.500017166137695
    6. ' read' → logprob: -17.750017166137695
    7. '_read' → logprob: -18.125017166137695
    8. '.readlines' → logprob: -18.375017166137695
    9. '	read' → logprob: -19.750017166137695
    10. '   ' → logprob: -19.875017166137695

Token 284: '_inputs' (ID: 67304)
  Prédit: '_inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inputs' → logprob: -2.696889623621246e-06
    2. '_' → logprob: -13.25000286102295
    3. '_outputs' → logprob: -14.12500286102295
    4. ' _' → logprob: -17.250001907348633
    5. ')_' → logprob: -17.875001907348633
    6. '_in' → logprob: -18.250001907348633
    7. '(_' → logprob: -18.500001907348633
    8. '_requests' → logprob: -18.750001907348633
    9. 'inputs' → logprob: -18.875001907348633
    10. '_answers' → logprob: -19.000001907348633

Token 285: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2014261931180954
    2. '()
' → logprob: -1.7014261484146118
    3. '       ' → logprob: -11.70142650604248
    4. '()
' → logprob: -12.45142650604248
    5. '()

' → logprob: -14.95142650604248
    6. '()`' → logprob: -16.201425552368164
    7. '   ' → logprob: -16.701425552368164
    8. ' ()' → logprob: -16.826425552368164
    9. '()\' → logprob: -17.076425552368164
    10. '[]' → logprob: -18.326425552368164

Token 286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3966183364391327
    2. 'results' → logprob: -1.146618366241455
    3. ' results' → logprob: -4.646618366241455
    4. '	results' → logprob: -9.521617889404297
    5. 'result' → logprob: -10.771617889404297
    6. '_results' → logprob: -12.896617889404297
    7. '
' → logprob: -13.021617889404297
    8. '   ' → logprob: -13.146617889404297
    9. '```' → logprob: -13.146617889404297
    10. '        
' → logprob: -13.396617889404297

Token 287: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -5.860340752406046e-05
    2. ' results' → logprob: -9.7500581741333
    3. '       ' → logprob: -15.5000581741333
    4. 'result' → logprob: -17.625059127807617
    5. 'outputs' → logprob: -18.375059127807617
    6. '	results' → logprob: -18.750059127807617
    7. '   ' → logprob: -19.500059127807617
    8. '        
' → logprob: -20.375059127807617
    9. '           ' → logprob: -22.500059127807617
    10. '```' → logprob: -22.750059127807617

Token 288: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00861468818038702
    2. '=' → logprob: -4.758614540100098
    3. '=[]' → logprob: -16.258615493774414
    4. ' =[' → logprob: -17.758615493774414
    5. '   ' → logprob: -19.383615493774414
    6. ' =
' → logprob: -19.633615493774414
    7. '[' → logprob: -19.758615493774414
    8. ' ' → logprob: -19.883615493774414
    9. '=[]
' → logprob: -20.133615493774414
    10. '=[' → logprob: -20.258615493774414

Token 289: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7198471426963806
    2. '[self' → logprob: -0.7198471426963806
    3. ' [' → logprob: -3.7198472023010254
    4. '[list' → logprob: -7.094847202301025
    5. '[result' → logprob: -8.469846725463867
    6. '[i' → logprob: -8.469846725463867
    7. '[]' → logprob: -8.844846725463867
    8. '[item' → logprob: -9.344846725463867
    9. '[]
' → logprob: -9.969846725463867
    10. '[obj' → logprob: -9.969846725463867

Token 290: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00824433658272028
    2. ' for' → logprob: -4.883244514465332
    3. 'for' → logprob: -7.633244514465332
    4. '   ' → logprob: -9.508244514465332
    5. '	' → logprob: -10.508244514465332
    6. '	for' → logprob: -11.008244514465332
    7. '
' → logprob: -11.258244514465332
    8. '<|end|>' → logprob: -11.383244514465332
    9. '        
' → logprob: -12.383244514465332
    10. '	   ' → logprob: -13.508244514465332

Token 291: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.024396728724241257
    2. '       ' → logprob: -3.7743966579437256
    3. ' for' → logprob: -6.774396896362305
    4. '   ' → logprob: -12.399396896362305
    5. '	for' → logprob: -12.524396896362305
    6. ' ' → logprob: -16.399396896362305
    7. '	' → logprob: -17.024396896362305
    8. '           ' → logprob: -18.149396896362305
    9. '```' → logprob: -18.524396896362305
    10. '	   ' → logprob: -19.149396896362305

Token 292: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1631872057914734
    2. ' n' → logprob: -1.9131872653961182
    3. 'num' → logprob: -5.913187026977539
    4. ' num' → logprob: -8.913187026977539
    5. '   ' → logprob: -9.913187026977539
    6. 'number' → logprob: -10.038187026977539
    7. ' number' → logprob: -11.288187026977539
    8. 'i' → logprob: -12.163187026977539
    9. 'value' → logprob: -13.163187026977539
    10. '       ' → logprob: -13.288187026977539

Token 293: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007606866303831339
    2. 'in' → logprob: -4.8826069831848145
    3. 'n' → logprob: -15.257606506347656
    4. '	in' → logprob: -16.132606506347656
    5. ' ' → logprob: -16.132606506347656
    6. ' ' → logprob: -16.382606506347656
    7. '_in' → logprob: -16.757606506347656
    8. '    ' → logprob: -17.382606506347656
    9. '   ' → logprob: -17.507606506347656
    10. '_' → logprob: -17.632606506347656

Token 294: ' inputs' (ID: 21963)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -0.006715728435665369
    2. ' inputs' → logprob: -5.006715774536133
    3. '(inputs' → logprob: -15.631715774536133
    4. '   ' → logprob: -16.756715774536133
    5. 'input' → logprob: -16.756715774536133
    6. '.inputs' → logprob: -17.131715774536133
    7. '_inputs' → logprob: -18.381715774536133
    8. ' ' → logprob: -18.506715774536133
    9. 'Inputs' → logprob: -18.631715774536133
    10. 'self' → logprob: -19.131715774536133

Token 295: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4292130172252655
    2. ':
' → logprob: -1.054213047027588
    3. '           ' → logprob: -8.05421257019043
    4. ',' → logprob: -9.42921257019043
    5. '):
' → logprob: -9.80421257019043
    6. '       ' → logprob: -11.30421257019043
    7. '   ' → logprob: -11.67921257019043
    8. '=' → logprob: -11.92921257019043
    9. ':
' → logprob: -11.92921257019043
    10. ' :
' → logprob: -12.05421257019043

Token 296: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000597116129938513
    2. 'results' → logprob: -7.75059700012207
    3. ' results' → logprob: -9.37559700012207
    4. '            
' → logprob: -10.62559700012207
    5. '
' → logprob: -10.87559700012207
    6. 'count' → logprob: -11.37559700012207
    7. '```' → logprob: -11.75059700012207
    8. '    
' → logprob: -12.00059700012207
    9. 'result' → logprob: -12.00059700012207
    10. '  
' → logprob: -14.00059700012207

Token 297: ' zeros' (ID: 42274)
  Prédit: ' results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.3429250717163086
    2. 'results' → logprob: -1.4679250717163086
    3. '           ' → logprob: -2.9679250717163086
    4. 'count' → logprob: -5.467925071716309
    5. 'result' → logprob: -6.342925071716309
    6. ' result' → logprob: -6.592925071716309
    7. ' count' → logprob: -6.842925071716309
    8. ' zeros' → logprob: -10.717925071716309
    9. ' counts' → logprob: -11.592925071716309
    10. '               ' → logprob: -11.717925071716309

Token 298: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0380416102707386
    2. '=' → logprob: -3.288041591644287
    3. '_count' → logprob: -17.038042068481445
    4. ')' → logprob: -17.538042068481445
    5. '=count' → logprob: -17.538042068481445
    6. '   ' → logprob: -17.788042068481445
    7. '=self' → logprob: -17.913042068481445
    8. 'count' → logprob: -18.038042068481445
    9. '    ' → logprob: -18.413042068481445
    10. '_' → logprob: -18.413042068481445

Token 299: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3868790566921234
    2. ' self' → logprob: -1.1368790864944458
    3. '           ' → logprob: -11.761878967285156
    4. '(self' → logprob: -16.636878967285156
    5. '	self' → logprob: -16.761878967285156
    6. '       ' → logprob: -17.136878967285156
    7. '               ' → logprob: -17.136878967285156
    8. '[self' → logprob: -17.886878967285156
    9. '   ' → logprob: -18.011878967285156
    10. '=self' → logprob: -18.136878967285156

Token 300: '.cal' (ID: 40302)
  Prédit: '.cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cal' → logprob: -1.1472419600977446e-06
    2. '.calc' → logprob: -14.625000953674316
    3. ' .' → logprob: -14.875000953674316
    4. '	cal' → logprob: -15.750000953674316
    5. '.' → logprob: -16.375001907348633
    6. '.calculate' → logprob: -17.375001907348633
    7. '   ' → logprob: -18.000001907348633
    8. '.Cal' → logprob: -18.875001907348633
    9. '.counter' → logprob: -19.750001907348633
    10. '.calendar' → logprob: -19.875001907348633

Token 301: 'culator' (ID: 23033)
  Prédit: 'culator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'culator' → logprob: -0.0015245062531903386
    2. 'ulator' → logprob: -6.501524448394775
    3. 'cul' → logprob: -11.626524925231934
    4. 'ator' → logprob: -12.501524925231934
    5. 'inator' → logprob: -13.126524925231934
    6. 'culation' → logprob: -13.751524925231934
    7. 'c' → logprob: -13.751524925231934
    8. 'ocator' → logprob: -14.251524925231934
    9. 'culated' → logprob: -14.376524925231934
    10. 'zeros' → logprob: -14.376524925231934

Token 302: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -3.1186566047836095e-05
    2. '.' → logprob: -11.375031471252441
    3. 'count' → logprob: -11.500031471252441
    4. ' .' → logprob: -11.625031471252441
    5. ' count' → logprob: -14.500031471252441
    6. '	count' → logprob: -17.250030517578125
    7. '   ' → logprob: -17.375030517578125
    8. '       ' → logprob: -17.500030517578125
    9. '(count' → logprob: -18.750030517578125
    10. '<count' → logprob: -19.125030517578125

Token 303: '_tr' (ID: 7410)
  Prédit: '_tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tr' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -14.750000953674316
    3. ' _' → logprob: -17.5
    4. '_t' → logprob: -17.75
    5. 'tr' → logprob: -17.75
    6. '```' → logprob: -19.0
    7. '   ' → logprob: -19.25
    8. ' ' → logprob: -19.5
    9. '(_' → logprob: -19.5
    10. '_te' → logprob: -19.625

Token 304: 'ailing' (ID: 24408)
  Prédit: 'ailing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ailing' → logprob: -0.0006214152672328055
    2. 'ail' → logprob: -8.375621795654297
    3. 'aling' → logprob: -8.625621795654297
    4. 'a' → logprob: -9.250621795654297
    5. '_' → logprob: -9.875621795654297
    6. 'iling' → logprob: -11.250621795654297
    7. '```' → logprob: -11.250621795654297
    8. '   ' → logprob: -11.750621795654297
    9. '       ' → logprob: -12.125621795654297
    10. '
' → logprob: -12.625621795654297

Token 305: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.8624639324116288e-06
    2. 'zeros' → logprob: -13.375001907348633
    3. '_zero' → logprob: -15.625001907348633
    4. '_
' → logprob: -17.000001907348633
    5. ' _' → logprob: -17.125001907348633
    6. ' zeros' → logprob: -17.750001907348633
    7. '0' → logprob: -18.250001907348633
    8. '```' → logprob: -18.625001907348633
    9. '_spaces' → logprob: -20.125001907348633
    10. '_n' → logprob: -20.125001907348633

Token 306: 'zeros' (ID: 24095)
  Prédit: 'zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zeros' → logprob: -9.269565634895116e-05
    2. '_' → logprob: -9.500092506408691
    3. '0' → logprob: -11.375092506408691
    4. ' zeros' → logprob: -12.250092506408691
    5. '   ' → logprob: -15.125092506408691
    6. 'zer' → logprob: -15.250092506408691
    7. 'zero' → logprob: -15.375092506408691
    8. '```' → logprob: -15.500092506408691
    9. '.zeros' → logprob: -16.125093460083008
    10. ' ' → logprob: -16.500093460083008

Token 307: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.417976379045285e-05
    2. '(' → logprob: -10.125043869018555
    3. '(
' → logprob: -12.500043869018555
    4. ' (' → logprob: -15.250043869018555
    5. '(

' → logprob: -18.125043869018555
    6. '(
' → logprob: -19.000043869018555
    7. '(noun' → logprob: -19.625043869018555
    8. 'n' → logprob: -19.750043869018555
    9. '(num' → logprob: -20.625043869018555
    10. '   ' → logprob: -20.625043869018555

Token 308: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04862642660737038
    2. ')
' → logprob: -3.04862642288208
    3. '           ' → logprob: -10.673626899719238
    4. ')
' → logprob: -11.423626899719238
    5. ' )' → logprob: -13.298626899719238
    6. ' )
' → logprob: -13.423626899719238
    7. '       ' → logprob: -14.673626899719238
    8. ')

' → logprob: -14.673626899719238
    9. ')`
' → logprob: -14.673626899719238
    10. ')`' → logprob: -15.173626899719238

Token 309: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011774895247071981
    2. 'results' → logprob: -6.8761773109436035
    3. ' results' → logprob: -9.126177787780762
    4. '       ' → logprob: -11.001177787780762
    5. '   ' → logprob: -11.126177787780762
    6. '(results' → logprob: -13.251177787780762
    7. '
' → logprob: -13.626177787780762
    8. '	results' → logprob: -14.126177787780762
    9. '            
' → logprob: -15.126177787780762
    10. '               ' → logprob: -15.626177787780762

Token 310: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.47504723072052
    2. ' results' → logprob: -0.97504723072052
    3. '           ' → logprob: -6.9750471115112305
    4. '	results' → logprob: -10.47504711151123
    5. '       ' → logprob: -12.72504711151123
    6. '(results' → logprob: -13.85004711151123
    7. '.results' → logprob: -13.97504711151123
    8. '   ' → logprob: -13.97504711151123
    9. '
' → logprob: -14.60004711151123
    10. '_results' → logprob: -15.47504711151123

Token 311: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00015943869948387146
    2. '.' → logprob: -8.75015926361084
    3. 'append' → logprob: -14.25015926361084
    4. '.app' → logprob: -15.62515926361084
    5. '.ap' → logprob: -16.875160217285156
    6. '.extend' → logprob: -17.750160217285156
    7. '.Append' → logprob: -17.875160217285156
    8. ' .' → logprob: -19.125160217285156
    9. '.push' → logprob: -19.250160217285156
    10. '_append' → logprob: -19.250160217285156

Token 312: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00043162284418940544
    2. 'zeros' → logprob: -7.750431537628174
    3. ' zeros' → logprob: -14.375432014465332
    4. '=zeros' → logprob: -15.000432014465332
    5. '(z' → logprob: -17.625431060791016
    6. ' (' → logprob: -18.000431060791016
    7. '.zeros' → logprob: -18.375431060791016
    8. '```' → logprob: -18.875431060791016
    9. '(
' → logprob: -19.375431060791016
    10. '   ' → logprob: -19.500431060791016

Token 313: 'zeros' (ID: 24095)
  Prédit: 'zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zeros' → logprob: -0.0011723674833774567
    2. ' zeros' → logprob: -6.7511725425720215
    3. 'zero' → logprob: -13.126172065734863
    4. 'zer' → logprob: -16.12617301940918
    5. '0' → logprob: -17.00117301940918
    6. '   ' → logprob: -18.00117301940918
    7. 'z' → logprob: -18.12617301940918
    8. '       ' → logprob: -18.25117301940918
    9. ')' → logprob: -18.37617301940918
    10. '```' → logprob: -18.50117301940918

Token 314: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12701547145843506
    2. ')
' → logprob: -2.1270155906677246
    3. '       ' → logprob: -10.127015113830566
    4. '
' → logprob: -10.252015113830566
    5. ')return' → logprob: -12.377015113830566
    6. ')
' → logprob: -12.502015113830566
    7. '   ' → logprob: -13.877015113830566
    8. ')

' → logprob: -14.127015113830566
    9. ' )' → logprob: -14.752015113830566
    10. ')`' → logprob: -15.002015113830566

Token 315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04662128910422325
    2. '
' → logprob: -3.421621322631836
    3. 'self' → logprob: -4.421621322631836
    4. ' self' → logprob: -7.296621322631836
    5. '   ' → logprob: -8.671621322631836
    6. '        
' → logprob: -11.546621322631836
    7. '
' → logprob: -12.296621322631836
    8. '```' → logprob: -12.421621322631836
    9. '	self' → logprob: -12.671621322631836
    10. '    
' → logprob: -13.046621322631836

Token 316: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.030302977189421654
    2. '       ' → logprob: -3.5303030014038086
    3. ' self' → logprob: -7.530303001403809
    4. '
' → logprob: -11.780303001403809
    5. '   ' → logprob: -12.155303001403809
    6. '	self' → logprob: -12.905303001403809
    7. ' ' → logprob: -15.780303001403809
    8. '        
' → logprob: -16.530302047729492
    9. '	' → logprob: -16.780302047729492
    10. '```' → logprob: -17.155302047729492

Token 317: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -1.3856492842023727e-06
    2. 'output' → logprob: -14.250000953674316
    3. '.' → logprob: -14.500000953674316
    4. ' .' → logprob: -16.375001907348633
    5. '.input' → logprob: -17.000001907348633
    6. '.outputs' → logprob: -19.000001907348633
    7. '	output' → logprob: -19.125001907348633
    8. '._' → logprob: -19.625001907348633
    9. '$output' → logprob: -20.250001907348633
    10. '.Output' → logprob: -20.500001907348633

Token 318: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -1.9361264946837764e-07
    2. '_handle' → logprob: -16.5
    3. '_hand' → logprob: -17.5
    4. '_handlers' → logprob: -20.25
    5. '_helper' → logprob: -20.5
    6. '_writer' → logprob: -20.75
    7. '_HANDLER' → logprob: -20.875
    8. '_Handler' → logprob: -21.0
    9. 'handler' → logprob: -21.625
    10. '_' → logprob: -21.75

Token 319: '.print' (ID: 2853)
  Prédit: '.print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.print' → logprob: -2.935296834039036e-06
    2. '.' → logprob: -13.00000286102295
    3. 'print' → logprob: -14.87500286102295
    4. '._' → logprob: -16.125003814697266
    5. ' .' → logprob: -16.250003814697266
    6. '.println' → logprob: -17.750003814697266
    7. '_.' → logprob: -18.625003814697266
    8. '_print' → logprob: -18.750003814697266
    9. '.show' → logprob: -19.750003814697266
    10. '​.' → logprob: -20.125003814697266

Token 320: '_tr' (ID: 7410)
  Prédit: '_tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tr' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.500000953674316
    3. 'tr' → logprob: -16.125
    4. '_results' → logprob: -17.0
    5. '(tr' → logprob: -17.375
    6. '(_' → logprob: -17.5
    7. '_(' → logprob: -18.5
    8. '```' → logprob: -18.5
    9. '_t' → logprob: -18.625
    10. 's' → logprob: -19.0

Token 321: 'ailing' (ID: 24408)
  Prédit: 'ailing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ailing' → logprob: -0.0034438574220985174
    2. 'aling' → logprob: -6.003443717956543
    3. 'a' → logprob: -7.378443717956543
    4. 'ail' → logprob: -8.378443717956543
    5. '_' → logprob: -9.628443717956543
    6. 'al' → logprob: -10.378443717956543
    7. '_results' → logprob: -12.253443717956543
    8. '_a' → logprob: -12.503443717956543
    9. 'alling' → logprob: -13.628443717956543
    10. '
' → logprob: -13.878443717956543

Token 322: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.842555426876061e-06
    2. ' _' → logprob: -14.250004768371582
    3. '_spaces' → logprob: -14.500004768371582
    4. '_zero' → logprob: -14.750004768371582
    5. ''_' → logprob: -14.750004768371582
    6. '"_' → logprob: -15.125004768371582
    7. '_results' → logprob: -15.250004768371582
    8. '_tr' → logprob: -15.625004768371582
    9. '_z' → logprob: -15.625004768371582
    10. ')_' → logprob: -15.750004768371582

Token 323: 'zeros' (ID: 24095)
  Prédit: 'zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zeros' → logprob: -0.07890289276838303
    2. '_' → logprob: -2.5789029598236084
    3. ' zeros' → logprob: -11.703903198242188
    4. '0' → logprob: -13.703903198242188
    5. '.zeros' → logprob: -13.703903198242188
    6. '_zero' → logprob: -13.828903198242188
    7. 'Zeros' → logprob: -14.953903198242188
    8. 'zer' → logprob: -15.453903198242188
    9. 'zos' → logprob: -15.453903198242188
    10. 'zero' → logprob: -15.578903198242188

Token 324: '(results' (ID: 42655)
  Prédit: '(results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(results' → logprob: -2.236549335066229e-05
    2. '(' → logprob: -10.750021934509277
    3. ' (' → logprob: -14.125021934509277
    4. '(
' → logprob: -17.625022888183594
    5. '(res' → logprob: -17.625022888183594
    6. '(outputs' → logprob: -18.000022888183594
    7. '(result' → logprob: -18.125022888183594
    8. 'results' → logprob: -18.125022888183594
    9. '(values' → logprob: -18.500022888183594
    10. '(scores' → logprob: -19.000022888183594

Token 325: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001825642102630809
    2. ')
' → logprob: -8.625182151794434
    3. '<|end|>' → logprob: -13.625182151794434
    4. '   ' → logprob: -14.625182151794434
    5. '
' → logprob: -15.250182151794434
    6. ' )' → logprob: -15.375182151794434
    7. '```' → logprob: -15.375182151794434
    8. '())' → logprob: -16.12518310546875
    9. ')

' → logprob: -16.25018310546875
    10. '()' → logprob: -16.25018310546875

Token 326: 'if' (ID: 366)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.11042656004428864
    2. 'factor' → logprob: -3.110426664352417
    3. 'if' → logprob: -3.235426664352417
    4. 'i' → logprob: -5.235426425933838
    5. 'fact' → logprob: -5.735426425933838
    6. '#' → logprob: -5.860426425933838
    7. 'fc' → logprob: -6.110426425933838
    8. '
' → logprob: -6.235426425933838
    9. 'c' → logprob: -6.360426425933838
    10. 'counter' → logprob: -6.735426425933838

Token 327: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.02325025200843811
    2. '__' → logprob: -3.7732503414154053
    3. '_' → logprob: -12.398250579833984
    4. '_name' → logprob: -15.148250579833984
    5. ' ' → logprob: -15.523250579833984
    6. ' ' → logprob: -16.398250579833984
    7. 'name' → logprob: -16.523250579833984
    8. '___' → logprob: -17.148250579833984
    9. ' _' → logprob: -17.523250579833984
    10. '/__' → logprob: -17.773250579833984

Token 328: 'name' (ID: 897)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2555360198020935
    2. '__' → logprob: -1.5055360794067383
    3. '.__' → logprob: -5.755536079406738
    4. '__.' → logprob: -8.880536079406738
    5. '__.__' → logprob: -9.380536079406738
    6. 'name' → logprob: -9.630536079406738
    7. ' ==' → logprob: -9.630536079406738
    8. ' .' → logprob: -10.380536079406738
    9. '.py' → logprob: -11.755536079406738
    10. '.' → logprob: -11.880536079406738

Token 329: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.939851037808694e-05
    2. '__.__' → logprob: -10.500029563903809
    3. '==' → logprob: -14.500029563903809
    4. '___' → logprob: -14.625029563903809
    5. '__.' → logprob: -14.750029563903809
    6. '____' → logprob: -15.875029563903809
    7. '__('' → logprob: -16.000028610229492
    8. '__
' → logprob: -16.625028610229492
    9. '__["' → logprob: -16.750028610229492
    10. '_' → logprob: -17.375028610229492

Token 330: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.09006236493587494
    2. ' ==' → logprob: -2.715062379837036
    3. '==' → logprob: -4.465062141418457
    4. '=="' → logprob: -5.340062141418457
    5. '_' → logprob: -5.840062141418457
    6. '__.__' → logprob: -7.965062141418457
    7. '.__' → logprob: -9.215062141418457
    8. '"' → logprob: -9.340062141418457
    9. ' =="' → logprob: -10.215062141418457
    10. '=='' → logprob: -10.340062141418457

Token 331: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.029769234359264374
    2. ''' → logprob: -3.5297691822052
    3. ' "__' → logprob: -11.154768943786621
    4. '__' → logprob: -12.654768943786621
    5. ' "' → logprob: -14.404768943786621
    6. ' '__' → logprob: -15.154768943786621
    7. '"_' → logprob: -15.529768943786621
    8. '"name' → logprob: -16.154769897460938
    9. '"class' → logprob: -16.279769897460938
    10. '"user' → logprob: -16.904769897460938

Token 332: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -5.512236498361744e-07
    2. 'name' → logprob: -15.375000953674316
    3. ' main' → logprob: -15.625000953674316
    4. '__' → logprob: -17.625
    5. '_main' → logprob: -17.625
    6. 'm' → logprob: -18.625
    7. 'ma' → logprob: -20.125
    8. '-main' → logprob: -21.0
    9. '	main' → logprob: -21.375
    10. 'python' → logprob: -21.5

Token 333: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.0019776455592364073
    2. '__' → logprob: -6.251977443695068
    3. '__:' → logprob: -10.626977920532227
    4. '__':
' → logprob: -10.626977920532227
    5. '":' → logprob: -15.001977920532227
    6. '":
' → logprob: -15.751977920532227
    7. ':' → logprob: -16.251977920532227
    8. '__["' → logprob: -17.001977920532227
    9. '":
' → logprob: -18.626977920532227
    10. '_' → logprob: -18.876977920532227

Token 334: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015319328755140305
    2. '    
' → logprob: -4.765319347381592
    3. '
' → logprob: -5.515319347381592
    4. ' 
' → logprob: -7.140319347381592
    5. ' Factor' → logprob: -7.265319347381592
    6. '<|end|>' → logprob: -7.890319347381592
    7. 'Factor' → logprob: -8.765318870544434
    8. 'factor' → logprob: -8.890318870544434
    9. '```' → logprob: -8.890318870544434
    10. ' factor' → logprob: -9.640318870544434

Token 335: ' app' (ID: 1053)
  Prédit: ' counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' counter' → logprob: -0.11870244890451431
    2. 'counter' → logprob: -2.6187024116516113
    3. '   ' → logprob: -4.743702411651611
    4. ' fc' → logprob: -4.868702411651611
    5. ' fac' → logprob: -5.243702411651611
    6. 'fc' → logprob: -5.493702411651611
    7. ' f' → logprob: -5.868702411651611
    8. 'factor' → logprob: -5.993702411651611
    9. 'fac' → logprob: -6.118702411651611
    10. ' factor' → logprob: -6.243702411651611

Token 336: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015324958600103855
    2. '=' → logprob: -4.39032506942749
    3. '.' → logprob: -5.89032506942749
    4. ' .' → logprob: -11.640324592590332
    5. '.process' → logprob: -11.765324592590332
    6. '.=' → logprob: -11.765324592590332
    7. ' ' → logprob: -12.015324592590332
    8. '   ' → logprob: -12.640324592590332
    9. '_' → logprob: -12.640324592590332
    10. '.app' → logprob: -12.765324592590332

Token 337: ' Factor' (ID: 63743)
  Prédit: ' Factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Factor' → logprob: -0.1602250337600708
    2. 'Factor' → logprob: -1.9102250337600708
    3. ' ' → logprob: -14.910224914550781
    4. '_factor' → logprob: -15.410224914550781
    5. ' ' → logprob: -15.660224914550781
    6. ' Faktor' → logprob: -16.78522491455078
    7. ' factor' → logprob: -16.91022491455078
    8. ' Fact' → logprob: -18.28522491455078
    9. '_FACTOR' → logprob: -18.28522491455078
    10. ' factorial' → logprob: -18.53522491455078

Token 338: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -6.704273118884885e-07
    2. 'al' → logprob: -14.875000953674316
    3. 'ional' → logprob: -15.250000953674316
    4. 'io' → logprob: -17.75
    5. 'ior' → logprob: -18.75
    6. 'orial' → logprob: -18.75
    7. 'ion' → logprob: -18.75
    8. 'Factor' → logprob: -19.0
    9. 'ical' → logprob: -19.375
    10. 'inal' → logprob: -19.5

Token 339: 'Trailing' (ID: 144756)
  Prédit: 'Trailing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Trailing' → logprob: -1.9361264946837764e-07
    2. 'Trending' → logprob: -16.875
    3. ' trailing' → logprob: -17.125
    4. 'Tra' → logprob: -17.375
    5. 'T' → logprob: -18.625
    6. 'Trail' → logprob: -18.875
    7. '.trailing' → logprob: -19.125
    8. 'Trajectory' → logprob: -19.375
    9. 'Zero' → logprob: -19.875
    10. 'Factor' → logprob: -20.125

Token 340: 'Zero' (ID: 20870)
  Prédit: 'Zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Zero' → logprob: -4.961759259458631e-06
    2. ' Zero' → logprob: -12.625004768371582
    3. '_zero' → logprob: -14.375004768371582
    4. 'Zeros' → logprob: -14.875004768371582
    5. 'zero' → logprob: -15.625004768371582
    6. 'Z' → logprob: -16.1250057220459
    7. '.Zero' → logprob: -16.1250057220459
    8. '_ZERO' → logprob: -16.5000057220459
    9. '_' → logprob: -16.6250057220459
    10. '0' → logprob: -16.7500057220459

Token 341: 'Counter' (ID: 16263)
  Prédit: 'Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -1.981667537620524e-06
    2. 'Count' → logprob: -13.500001907348633
    3. 'ounter' → logprob: -15.750001907348633
    4. 'Coun' → logprob: -16.250001907348633
    5. ' Counter' → logprob: -16.375001907348633
    6. '_counter' → logprob: -16.625001907348633
    7. '   ' → logprob: -16.750001907348633
    8. 'counter' → logprob: -17.000001907348633
    9. 'C' → logprob: -17.625001907348633
    10. 'Counters' → logprob: -18.000001907348633

Token 342: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03841656818985939
    2. '()
' → logprob: -3.288416624069214
    3. '.process' → logprob: -8.038416862487793
    4. '().' → logprob: -11.038416862487793
    5. '()
' → logprob: -11.288416862487793
    6. '(' → logprob: -12.163416862487793
    7. '()

' → logprob: -12.288416862487793
    8. '.' → logprob: -12.663416862487793
    9. '();' → logprob: -13.413416862487793
    10. '(
' → logprob: -13.538416862487793

Token 343: '   ' (ID: 271)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0076276883482933044
    2. '   ' → logprob: -5.007627487182617
    3. ' app' → logprob: -7.007627487182617
    4. '	app' → logprob: -12.007627487182617
    5. '
' → logprob: -14.382627487182617
    6. '(app' → logprob: -15.632627487182617
    7. '.app' → logprob: -16.882627487182617
    8. '    
' → logprob: -16.882627487182617
    9. '  ' → logprob: -17.132627487182617
    10. '_app' → logprob: -17.257627487182617

Token 344: ' app' (ID: 1053)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' (adapté à ' app') → logprob: -3.128163257315464e-07
    2. ' app' → logprob: -15.25
    3. '   ' → logprob: -20.875
    4. '	app' → logprob: -23.375
    5. '(app' → logprob: -24.875
    6. '.app' → logprob: -25.125
    7. 'application' → logprob: -26.0
    8. 'ap' → logprob: -26.25
    9. '_app' → logprob: -27.0
    10. ''app' → logprob: -27.125

Token 345: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -2.1008713702030946e-06
    2. '.' → logprob: -13.250001907348633
    3. 'process' → logprob: -15.250001907348633
    4. ' .' → logprob: -19.500001907348633
    5. '.run' → logprob: -20.125001907348633
    6. ' process' → logprob: -20.125001907348633
    7. '.Process' → logprob: -21.375001907348633
    8. '.pro' → logprob: -21.500001907348633
    9. '.proc' → logprob: -21.750001907348633
    10. '.
' → logprob: -22.125001907348633

Token 346: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001562715508043766
    2. '<|end|>' → logprob: -7.376562595367432
    3. '()
' → logprob: -7.876562595367432
    4. '(' → logprob: -8.12656307220459
    5. '
' → logprob: -8.62656307220459
    6. '\n' → logprob: -11.00156307220459
    7. '#' → logprob: -11.25156307220459
    8. '()\' → logprob: -11.37656307220459
    9. '```' → logprob: -11.37656307220459
    10. '(
' → logprob: -11.87656307220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 344
Tokens correctement prédits (1ère position, stricte): 168
Tokens correctement prédits (1ère position, avec adaptation): 188
Tokens correctement prédits (top 10): 303
Précision stricte (1ère position): 48.84%
Précision adaptée (1ère position): 54.65%
Précision (top 10): 88.08%
================================================================================
